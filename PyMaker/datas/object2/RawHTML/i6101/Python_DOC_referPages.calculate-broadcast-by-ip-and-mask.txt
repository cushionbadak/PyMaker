<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7278779/bit-wise-operation-unary-invert">bit-wise operation unary ~ (invert)</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>i'm trying to calculate broadcast address by logic OR and NOT with specified ip and mask, but the func return me smth strange. Why?</p>
<pre><code> IP = '192.168.32.16'
 MASK = '255.255.0.0' 

 def get_ID(ip, mask):
    ip = ip.split('.')
    mask = mask.split('.')
    ip = [int(bin(int(octet)), 2) for octet in ip]
    mask = [int(bin(int(octet)), 2) for octet in mask]
    subnet = [str(int(bin(ioctet &amp; moctet), 2)) for ioctet, moctet in zip(ip, mask)]
    host = [str(int(bin(ioctet &amp; ~moctet), 2)) for ioctet, moctet in zip(ip, mask)]
    broadcast = [str(int(bin(ioctet | ~moctet), 2)) for ioctet, moctet in zip(ip, mask)] # a mistake, i guess
    print('Subnet: {0}'.format('.'.join(subnet)))
    print('Host: {0}'.format('.'.join(host)))
    print('Broadcast address: {0}'.format('.'.join(broadcast)))
</code></pre>
<p><a href="https://i.stack.imgur.com/SPWDo.png" rel="nofollow noreferrer"><img alt="screenshot" src="https://i.stack.imgur.com/SPWDo.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>-64 and 192 are actually the same value as 8-bit bytes.  You just need to mask the bytes with <code>0xff</code> to get numbers in the more standard 0…255 range instead of the -128…127 range you have now.  Something like this:</p>
<pre><code>broadcast = [(ioctet | ~moctet) &amp; 0xff for ioctet, moctet in zip(ip, mask)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of optimizing the Python code, use the <code>ipaddress</code> module to do the work.
<a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer">https://docs.python.org/3/library/ipaddress.html</a></p>
<pre><code>import ipaddress

IP = '192.168.32.16'
MASK = '255.255.0.0'

host = ipaddress.IPv4Address(IP)
net = ipaddress.IPv4Network(IP + '/' + MASK, False)
print('IP:', IP)
print('Mask:', MASK)
print('Subnet:', ipaddress.IPv4Address(int(host) &amp; int(net.netmask)))
print('Host:', ipaddress.IPv4Address(int(host) &amp; int(net.hostmask)))
print('Broadcast:', net.broadcast_address)
</code></pre>
<p>OUTPUT:</p>
<pre><code>IP: 192.168.32.16
Mask: 255.255.0.0
Subnet: 192.168.0.0
Host: 0.0.32.16
Broadcast: 192.168.255.255
</code></pre>
</div>
<span class="comment-copy">Why do you do <code>int(bin(int(octet)), 2)</code>? That's the same as <code>int(octet)</code>.</span>
<span class="comment-copy">Don't reinvent the wheel. Use the lib! <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.broadcast_address" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
