<div class="post-text" itemprop="text">
<p>I am building a week planner system with 7 buttons, a RFID reader and a Raspberry Pi. </p>
<p>I get the activity from the RFID tags and the day from the push buttons. I am playing a sound when a day is entered or an activity is given. </p>
<p>I want to save a what activities a planned for what days. 
For example: Monday - Swimming, Coding, Doctor. </p>
<p>So that I can read out what activities are planned for the specific days. </p>
<p>Right now, I have code for picking day and activity but I am unsure on how to store the information for later use. </p>
<pre><code>import mercury
import time
import RPi.GPIO as GPIO
import pygame

#Setting up the RFID reader
reader = mercury.Reader("tmr:///dev/ttyUSB0")
reader.set_region("EU3")
reader.set_read_plan([1], "GEN2")
#Setting up the GPIO pins for the 7 push buttons
GPIO.setmode(GPIO.BOARD)
GPIO.setup(22, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 22 = GPIO25
GPIO.setup(24, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 24 = GPIO8
GPIO.setup(26, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 26 = GPIO7
GPIO.setup(32, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 32 = GPIO12
GPIO.setup(36, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 36 = GPIO16
GPIO.setup(38, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 38 = GPIO20
GPIO.setup(40, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Pin 40 = GPIO21

#Enabling pygame to play sounds
pygame.init()

#Declaration of the RFID tags used in this example. 
tag1 = 'E2004005730702602190360B'
tag2 = 'E20040057307026421903619'
tag3 = 'E20040057307026221803410'
tag4 = 'E2004005730702662180341E'
tag5 = 'E20040057307027021803420'
#Setting what sound files to use and the paths
mandaglyd = pygame.mixer.Sound('/home/pi/Desktop/Mandag.wav')
tirsdaglyd = pygame.mixer.Sound('/home/pi/Desktop/Tirsdag.wav')
onsdaglyd = pygame.mixer.Sound('/home/pi/Desktop.onsdag.wav')
torsdaglyd = pygame.mixer.Sound('/home/pi/Desktop/torsdag.wav')
fredaglyd = pygame.mixer.Sound('/home/pi/Desktop/fredag.wav')
lordaglyd = pygame.mixer.Sound('/home/pi/Desktop/lordag.wav')
sondaglyd = pygame.mixer.Sound('/home/pi/Desktop/sondag.wav')


def setDay():
    while True:
        in22 = GPIO.input(22)
        in24 = GPIO.input(24)
        in26 = GPIO.input(26)
        in32 = GPIO.input(32)
        in36 = GPIO.input(36)
        in38 = GPIO.input(38)
        in40 = GPIO.input(40)
        if in22 == False:
                print('Monday')
                mandaglyd.play()
                time.sleep(2)
                break
        if in24 == False:
                print('Tuesday')
                tirsdaglyd.play()
                time.sleep(2)
                break
        if in26 == False:
                print('Onsdag')
                onsdaglyd.play()
                time.sleep(2)
                break
        if in32 == False:
                print('Torsdag')
                torsdaglyd.play()
                time.sleep(2)
                break
        if in36 == False:
                print('Fredag')
                fredaglyd.play()
                time.sleep(2)
                break
        if in38 == False:
                print('Lordag')
                lordaglyd.play()
                time.sleep(2)
                break
        if in40 == False:
                print('Sondag')
                sondaglyd.play()
                time.sleep(2)
                break               
def setActivity():
    while True:
        a = repr(reader.read())
        print (a)
        if tag1 in a:
                print('tag1')
                time.sleep(0.2)
                break
        if tag2 in a:
                print('tag2')
                time.sleep(0.2)
                break
        if tag3 in a:
                print('tag3')
                time.sleep(0.2)
                break
        if tag4 in a:
                print('tag4')
                time.sleep(0.2)
                break
        if tag5 in a:
                print('tag5')
                time.sleep(0.2)
                break
        time.sleep(0.2)

if __name__ == "__main__":
    setActivity()
    setDay() 
</code></pre>
<p>Should I create a list for each day and then append activities into the list. Then I can search the list for activities and play sound based on what activities where found in the search? Is the a better way of doing so? </p>
</div>
<div class="post-text" itemprop="text">
<p>Lists are great for things you intend to handle in a similar fashion. For example:</p>
<pre><code>def setDay():
    while True:
        for pin, day,      sound        in [
           (22, 'Monday',  mandaglyd ),
           (24, 'Tuesday', tirsdaglyd),
           (26, 'Onsdag',  onsdaglyd ),
           (32, 'Torsdag', torsdaglyd),
           (36, 'Fredag',  fredaglyd ),
           (38, 'Lordag',  lordaglyd ),
           (40, 'Sondag',  sondaglyd ),
        ]:
            if GPIO.input(pin) == False:
                print(day)
                sound.play()
                time.sleep(2)
                return
</code></pre>
<p>For longer term storage (beyond a single run of your program), you might consider <a href="https://docs.python.org/3/tutorial/inputoutput.html#saving-structured-data-with-json" rel="nofollow noreferrer">json</a> for simpler but arbitrary data structures, <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> for simple tables,  <a href="https://docs.python.org/3/library/shelve.html" rel="nofollow noreferrer">shelve</a> for a key/value store or <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">sqlite3</a> for full SQL relational databases. </p>
</div>
<div class="post-text" itemprop="text">
<p>I suggest that you learn about Object Oriented programming. You should consider creating a class which represents the data you store in your program. For example, you can make an <code>Activity</code> class which stores the name of the activity and the day.</p>
<p>Remember that variables are only stored in memory. This data disappears when the program ends or the machine is turned off. If you want to store data permanently between program executions, you must save it to a file in some form.</p>
</div>
