<div class="post-text" itemprop="text">
<p>PLEASE no imports. Trying to grasp the fundamentals on python.
say I want a simplified input of a molecule to give me the actual molecule</p>
<p>For example:</p>
<p>molec('C3H8O3') would give me 'CCCHHHHHHHHOOO'</p>
<pre><code>def desimplify(molecule):
    findnum = 0
    findchar = 0
    for i in range(0, len(molecule)):
        findnum += 1
        if molecule[i].isdigit(): #not sure if this is the right method
            findchar = findnum - 1 
            res = molecule[:findnum] + res * int(res[findnum]) + molecule[findchar:]
    return res
</code></pre>
<p>I'm sure I'm completely wrong, please point me in the right direction.</p>
<p>EDIT: fixed the typos</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to provide you with a working example, this is how I would have implemented that function. I found the building of <code>res</code> a little hard to read how you did it, so I split it up. The comments should explain what's happening, in case anything is unclear I'll be happy to elaborate.</p>
<p>Beware this might not be the most Pythonic way of doing things.</p>
<pre><code>def desimplify(molecule):

    # function-scope var to hold final result, won't be overwritten in loop
    result = ''

    # consume input token by token
    for token in molecule:

        if token.isalpha():
            # token under cursor is letter, append to result
            result += token

        elif token.isdigit():
            # token under cursor is digit, use as multiplier

            # we have already appended one token, so use one less!
            mult = int(token) - 1

            # apply the multiplier to the preceeding token in the input
            result += (mult * previous)

        # store current token for next iteration, when we might need to multiply it
        previous = token

    return result
</code></pre>
<p>Running this results in:</p>
<pre><code>desimplify('C3H8O3')
'CCCHHHHHHHHOOO'
</code></pre>
<p><strong>Edit</strong>: made it a little more Pythonic by iterating directly over the input string, without a loop var.</p>
</div>
<span class="comment-copy">FYI: <code>import</code>s are part of the fundamentals of Python.  It's how you use Python's <a href="https://docs.python.org/3/library/index.html" rel="nofollow noreferrer">standard library</a>.  I see two problems here: there's a typo on the <code>findchar = fundnum - 1</code> line (fundnum) and your return statement isn't inside of the function definition.</span>
<span class="comment-copy">general molecular formula need more parsing : 'C10H22' or 'AuCl3' are legal formulas</span>
<span class="comment-copy">This is completely true! To accomodate multi-digit indices, my solution could be modified, but when it comes to multi-letter elements, you'd need more elaborate tokenization for the problem-domain. That, or the code becomes quite messy with <code>islower</code> and the likes. Also, it'd make sense to check for valid elements, so you'd need to store a table of elements, too.</span>
