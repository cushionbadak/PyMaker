<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2612802/how-to-clone-or-copy-a-list">How to clone or copy a list?</a>
<span class="question-originals-answer-count">
                    20 answers
                </span>
</li>
</ul>
</div>
<p>my problem is that when I create a list,'a' and copy its content in another list c by using</p>
<pre><code>c=a[:]
</code></pre>
<p>now when I call a function to numerically sort 'a', I get it sorted but the values of 'c' also gets converted even though I made no change in 'c'
please refer to the picture for input and outputs!
Thanks in advance</p>
<p><a href="https://i.stack.imgur.com/oFJwM.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/oFJwM.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is because <code>c = a[:]</code> copies the top level list, but the items inside it are references to the same sublists. If you want to avoid this behavior, you can do a deep copy:</p>
<pre><code>from copy import deepcopy
c = deepcopy(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Odd, it should not be changed:</p>
<pre><code>&gt;&gt;&gt; a=[1,4,5,7,22,41,4,-5,66,22,12]
&gt;&gt;&gt; c=a[:]
&gt;&gt;&gt; a.sort()
&gt;&gt;&gt; a
[-5, 1, 4, 4, 5, 7, 12, 22, 22, 41, 66]
&gt;&gt;&gt; c
[1, 4, 5, 7, 22, 41, 4, -5, 66, 22, 12]
</code></pre>
<p>You can try to do this with <code>c = list(a)</code> as well. In both cases you copy the array by value and not by reference.</p>
<p>You should know though, that these two methods have limitations with collections of mutable objects as inner objects keep their references intact. So if you want a full copy you can use <a href="https://docs.python.org/3/library/copy.html" rel="nofollow noreferrer">copy.deepcopy</a> and use it like this:</p>
<pre><code>&gt;&gt;&gt; from copy import deepcopy
&gt;&gt;&gt; a = [[1,2],[3],[4]]
&gt;&gt;&gt; c = deepcopy(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is this line: <code>d[i][j] = int(d[i][j])</code>. This modifies <code>a</code>, because d has not been copied. This also modifies <code>c</code> because only the list has been copied, not the elements of the list, so modifying them modifies both lists. To fix this, you could, as the other answer states, <code>deepcopy</code> it, or just use <code>c = [element[:] for element in a]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a more comprehensive answer at 
<a href="https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list">How to clone or copy a list?</a></p>
<p>The simple answer is: if you have objects in your list - you need to deep copy the list, i.e. copy the objects as well...</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is actually with this line:</p>
<pre><code>d[i][j] = int(d[i][j])
</code></pre>
<p>This is modifying your input (<code>a</code>).</p>
<p>To fix this, you could try modifying your function to copy the input and modify it directly:</p>
<pre><code>b = d[:]
...
b[i][j] = int(b[i][j])
</code></pre>
<p>Then you donâ€™t need to reassign b.</p>
</div>
<span class="comment-copy">please copy your code and paste it to your question!</span>
