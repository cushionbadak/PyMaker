<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21055859/what-are-the-risks-of-running-sudo-pip">What are the risks of running 'sudo pip'?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/15028648/is-it-acceptable-and-safe-to-run-pip-install-under-sudo">Is it acceptable and safe to run pip install under sudo?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/7465445/how-to-install-python-modules-without-root-access">How to install python modules without root access?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/33922240/why-i-cant-do-some-things-without-sudo-using-python-and-pip">Why i can't do some things without sudo using Python and pip?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Going around I read a lot about how <code>sudo pip</code> is a very bad habit/solution. Some reasons people gave were:</p>
<ul>
<li>It could run malicious code.</li>
<li>It will break permission structs.</li>
<li>Sudo is used to install a package "system wide".</li>
<li>It is Satan!1!!one</li>
</ul>
<p>An alternative I found is running <code>pip</code> with <code>--user</code> (e.g. <code>pip install --user package</code>). I saw that python in Debian works a little different (I have Stretch), mostly because of path used (<code>--user</code> is standard in Debian if omitted, btw). In conclusion, I found a lot of inconsistent things.</p>
<p>Taking for granted that using <code>sudo</code> and <code>pip</code> together are wrong, can someone explain me why, and most of all, <strong>when</strong> is it wrong? Major issues I encountered were all about permissions, so my guess is that <code>sudo</code> "just" ruin ownership.</p>
<p>Are there any other solutions besides using <code>--user</code> or virtualenv?</p>
</div>
<div class="post-text" itemprop="text">
<p>Unless you <em>want</em> or <em>have</em> to install a binary, service or dependency globally, you would not want to use <code>sudo pip</code>.  As you surmise correctly, it installs your dependency globally, and this may cause inconsistencies while developing.</p>
<p>The more conventional thing to do nowadays is to use a <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">virtualenv</a> with which to install your dependencies.  This way, anything you do with installation is local to that specific virtualenv instance of Python.</p>
</div>
<span class="comment-copy">@Rawing if I had to guess, because this question has been asked and answered many times before, and a quick Google search reveals that.</span>
<span class="comment-copy">Thanks for the edits! Anyway I already read the posts flagged as duplicated and they were the exact reason that pushed me to ask the question: in one post the answer is "because of ownership", in another is "because you run code from internet", another says "because of scope visibility"...</span>
<span class="comment-copy">@vaultah Thanks, it seems my google-fu has failed me... I wasn't able to find any particularly useful information about this topic with a quick search.</span>
<span class="comment-copy">Tried to edit to correct spelling, but I would have to edit more than 6 characters.  Your link for <code>virtualenv</code> is mispelled.  Also, it is worth adding that to use a virtual environment, simply <code>source /path/to/my/venv/bin/activate</code> and then you can use pip to install most packages just as you normally would.</span>
<span class="comment-copy">The location is correct, the letters aren't... you wrote <code>virutalenv</code> when it should be <code>virtualenv</code></span>
