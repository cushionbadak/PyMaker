<div class="post-text" itemprop="text">
<p>When I define the <code>__init__</code> of <code>ProductionWorker</code>, I also need to set the attributes of <code>EmployeeClass</code>. I entered <code>"Bob"</code> and <code>"001121"</code> as a test and it works but I need to be able to change it in my main from the input of the user.</p>
<pre><code>class ProductionWorker(EmployeeClass):
    SHIFT = {1: "day shift", 2: "night shift"}

    def __init__(self, shift=None, hourly_pay=None):
        EmployeeClass.__init__(self,  "Bob", "001121")
        self.__shift = shift
        self.set_shift = shift
        self.__hourly_pay = hourly_pay
        self.set_hourly_pay = hourly_pay
    # setters

    def set_shift(self, shift):
        if shift in ProductionWorker.SHIFT:
            self.__shift = shift
        else:
            self.__shift = None

    def set_hourly_pay(self, hourly_pay):
        self.__hourly_pay = hourly_pay
    # getters

    def get_shift(self):
        return self.__shift

    def get_hourly_pay(self):
        return self.__hourly_pay

    def __str__(self):
        summary = EmployeeClass.__str__(self)
        return summary + "They work on the " + ProductionWorker.SHIFT[self.__shift] + " and make " + "$" \
               + str(format(self.__hourly_pay, "0.2f")) + " an hour."
</code></pre>
<p>My main:</p>
<pre><code>from Employee import EmployeeClass
from Employee import ProductionWorker

e_name = input("Enter the name of the employee: ")
e_number = input("Enter the ID number of the employee: ")
e_shift = int(input("Enter 1 if they work day shift or 2 if they work night shift: "))
e_hourly_pay = float(input("Enter how much they make hourly (numerical): "))

x = EmployeeClass(e_name, e_number)
z = ProductionWorker(e_shift, e_hourly_pay)
print(z)
</code></pre>
<p>This is the result I get:</p>
<pre><code>Enter the name of the employee: Joe
Enter the ID number of the employee: 5555
Enter 1 if they work day shift or 2 if they work night shift: 2
Enter how much they make hourly (numerical): 30

The employee's name is Bob. Bob's ID number is: 001121. They work on the night shift and make $30.00 an hour.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to use arguments as any with any other parameters:</p>
<pre><code>class ProductionWorker(EmployeeClass):
    SHIFT = {1: "day shift", 2: "night shift"}

    def __init__(self, name, number, shift=None, hourly_pay=None):
        EmployeeClass.__init__(self,  name, number)
        self._shift = shift
        self.hourly_pay = hourly_pay

    @property
    def shift(self):
        return self._shift

    @shift.setter
    def shift(self, shift):
        if shift in ProductionWorker.SHIFT:
            self._shift = shift
        else:
            self._shift = None

    def __str__(self):
        summary = EmployeeClass.__str__(self)
        return summary + "They work on the {} and make ${:.2f} an hour.".format(
            ProductionWorker.SHIFT[self.shift], self.hourly_pay)

name = input("Enter the name of the employee: ")
number = input("Enter the ID number of the employee: ")
shift = int(input("Enter 1 if they work day shift or 2 if they work night shift: "))
hourly_pay = float(input("Enter how much they make hourly (numerical): "))

z = ProductionWorker(name, number, shift, hourly_pay)
print(z)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would include the parameters of the EmployeeClass in the init method parameters of the ProductionWorker to pass along to the superclass. </p>
<p>For python 3 you can do super().__init___() rather than EmployeeClass.__init__(). </p>
<p>Additionally you should consider using <a href="https://www.blog.pythonlibrary.org/2016/06/10/python-201-what-are-descriptors/" rel="nofollow noreferrer">descriptors</a> rather than implementing getters and setters as that is the pythonic way to do that.</p>
<pre><code>class ProductionWorker(EmployeeClass):
    def __init__(self, name, number, shift=None, hourly_pay=None):
        super().__init__(name, number)
        self.__shift = shift
        self.__hourly_pay = hourly_pay
</code></pre>
</div>
<span class="comment-copy">Don't use getters and setters. Use properties if needed. Don't use double_underscores. Setting <code>set_xxx</code>-attributes in <code>__init__</code> is not what you intent.</span>
<span class="comment-copy">Thanks for the tip. I was taught to use getters, setters, and double underscores.</span>
<span class="comment-copy">Here is the according link to the docs: <a href="https://docs.python.org/3/reference/datamodel.html#object.__init__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__init__</a></span>
<span class="comment-copy">When I do this, my name and number are being recognized as 'unresolved references'</span>
