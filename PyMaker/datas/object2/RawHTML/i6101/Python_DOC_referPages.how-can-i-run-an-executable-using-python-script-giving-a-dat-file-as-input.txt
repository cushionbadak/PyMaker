<div class="post-text" itemprop="text">
<p>Hi I'm just starting to use python scripts to run executable files. What I basically want to do is use python to edit a <strong>input.dat</strong> file and run an executable <strong>myfile</strong> which takes <strong>input.dat</strong> as the input parameters and saves the results from the output <strong>result.dat</strong> file somewhere and runs this entire in a loop for varying <strong>input.dat</strong></p>
<p>I've figured out the editing part, but the running and taking input part is what I can't seem to figure out.</p>
<p>On the terminal it would look like</p>
<pre><code>sudo ./myfile &lt; input.dat
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run()</code></a> to execute the command with input from a file and redirect its output to another file:</p>
<pre><code>import subprocess

for filename in 'input.dat', 'otherinput.dat', 'moreinput.dat':
    with open(filename) as infile, open('result_{}'.format(filename), 'w') as outfile:
        result = subprocess.run(['sudo', 'myfile'], stdin=infile, stdout=outfile)
</code></pre>
</div>
<span class="comment-copy">You can launch an executable by using Python to run something in the command line (or whatever it's called in Linux), and I guess just use <code>time.sleep</code> to make sure the executable has finished processing before reading result.dat</span>
<span class="comment-copy">okay so I tried using subprocess.Popen('pathtomyfile', stdin='pathtoinput.dat', stdout=None) and it seems to work (for now). Trouble is the executable is running in Fortran so I have to explicitly open certain output files as 'writable' in Python (i think)</span>
<span class="comment-copy">I'm not on Linux and have rarely used the subprocess module, so afraid I won't be much help lol. Just keep googling things until you get something working :)</span>
<span class="comment-copy">that's what I'm trying lol. Thanks!</span>
<span class="comment-copy">@insonaria: you need to <i>open</i> the files for the <code>stdin</code> and <code>stdout</code> - you can't just pass the file name of them. Also check the <code>subprocess.run()</code> convenience function; you can see my answer for an example of it's usage.</span>
<span class="comment-copy">I'm not sure if i was clear in the previous comment, i was actually passing the path and not just the file name! (it does seem to work so far) Thanks a lot!</span>
<span class="comment-copy">@insonaria: well it's easy enough to modify the file names to include the path, or to use <code>os.path.join()</code> to construct the full path name before calling <code>open()</code> on it.</span>
