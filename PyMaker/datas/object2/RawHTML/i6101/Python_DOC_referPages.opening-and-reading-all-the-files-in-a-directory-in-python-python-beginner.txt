<div class="post-text" itemprop="text">
<p>I'd like to read the contents of every file in a folder/directory and then print them at the end (I eventually want to pick out bits and pieces from the individual files and put them in a separate document)
So far I have this code</p>
<pre><code>import os
path = 'results/'
fileList = os.listdir(path)
for i in fileList:
    file = open(os.path.join('results/'+ i), 'r')
allLines = file.readlines()
print(allLines)
</code></pre>
<p>at the end I dont get any errors but it only prints the contents of the last file in my folder in a series of strings and I want to make sure its reading every file so I can then access the data I want from each file. I've looked online and I cant find where I'm going wrong. Is there any way of making sure the loop is iterating over all my files and reading all of them?</p>
<p>also i get the same result when I use </p>
<pre><code> file = open(os.path.join('results/',i), 'r')
</code></pre>
<p>in the 5th line </p>
<p>Please help I'm so lost
Thanks!!</p>
</div>
<div class="post-text" itemprop="text">
<p>you forgot indentation at this line <code>allLines = file.readlines()</code> 
and maybe you can try that :</p>
<pre><code>import os

allLines = []
path = 'results/'
fileList = os.listdir(path)
for file in fileList:
   file = open(os.path.join('results/'+ i), 'r')
   allLines.append(file.read())
print(allLines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This also creates a file containing all the files you wanted to print.</p>
<pre><code>rootdir= your folder, like 'C:\\Users\\you\\folder\\'
import os
f = open('final_file.txt', 'a')
for root, dirs, files in os.walk(rootdir):  
    for filename in files:
        data = open(full_name).read()
            f.write(data + "\n")                 
f.close()
</code></pre>
<p>This is a similar case, with more features: <a href="https://stackoverflow.com/questions/47178453/copying-selected-lines-from-files-in-different-directories-to-another-file/47204259#47204259">Copying selected lines from files in different directories to another file</a></p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Separate the different functions of the thing you want to do.</li>
<li>Use generators wherever possible. Especially if there are a lot of files or large files</li>
</ul>
<h1>Imports</h1>
<pre><code>from pathlib import Path
import sys
</code></pre>
<h1>Deciding which files to process:</h1>
<pre><code>source_dir = Path('results/')

files = source_dir.iterdir()
</code></pre>
<h2>[variation] Filter files</h2>
<p>if you only need files with extension <code>.ext</code></p>
<pre><code>files = source_dir.glob('*.ext')
</code></pre>
<h1>Process files</h1>
<pre><code>def process_files(files):
    for file in files:
        with file.open('r') as file_handle :
            for line in file_handle:
                # do your thing
                yield line
</code></pre>
<h1>Save the lines you want to keep</h1>
<pre><code>def save_lines(lines, output_file=sys.std_out):
    for line in lines:
        output_file.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You forgot to indent this line <code>allLines.append(file.read())</code>.
Because it was outside the loop, it only appended the <code>file</code> variable to the list <em>after</em> the <code>for</code> loop was finished. So it only appended the last value of the <code>file</code> variable that remained after the loop. Also, you should not use <code>readlines()</code> in this way. Just use <code>read()</code> instead;</p>
<pre><code>import os

allLines = []
path = 'results/'
fileList = os.listdir(path)
for file in fileList:
   file = open(os.path.join('results/'+ i), 'r')
   allLines.append(file.read())
print(allLines)
</code></pre>
</div>
<span class="comment-copy">when opening files, especially when opening multiple files, you should use a <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer"><code>with</code></a> statement</span>
<span class="comment-copy">when I do that I get an error message UnicodeDecodeError: 'utf-8' codec can't decode byte 0x87 in position 27: invalid start byte</span>
<span class="comment-copy">What is the type of file that you want to open ? and maybe you can try to decode it with 'latin-1' sometimes it works. keep me in touch</span>
<span class="comment-copy">its lots of csv files, thanks!</span>
<span class="comment-copy">hey thanks for your reply! when I indent it like that I get an error message for line 9 and line 321 (which i dont understand) and it says: nicodeDecodeError: 'utf-8' codec can't decode byte 0x87 in position 27: invalid start byte</span>
