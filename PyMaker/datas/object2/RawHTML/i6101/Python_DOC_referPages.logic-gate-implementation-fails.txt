<div class="post-text" itemprop="text">
<p>I have made a logic gate that takes in two inputs which will then feed through into a AND gate in this case. For example the user will enter 0 and 0 then the AND gate will process as 0. </p>
<p>The problem here is when we use the IF statement to determine our two inputs, they are not recognised otherwise everything else in the program to process the two inputs along with a temporary storage for the output. </p>
<pre><code>A = input("Enter a value of 1 or 0: ")
B = input("Enter a value of 1 or 0: ")
print(A)
print(B)
</code></pre>
<p>So the part above I am able to enter the inputs and create a storage for it.
The program tells me that A and B are unrecognised so does anyone know what I am doing wrong here?</p>
<p>this is where the problem takes place: everything from here to the else statement is ignored.</p>
<pre><code>def first_AND ():
if A == 0 and B == 0: 
    AND_1()
    print(AND)
    print("Now solve the XOR gate")
    gate_path_A()
elif A == 1 and B == 0:
    AND_2()
    print(AND)
    print("Now solve the XOR gate")
    gate_path_A()
elif A == 0 and B == 1:
    AND_3()
    print(AND)
    print("Now solve the XOR gate")
    gate_path_A()
elif A == 1 and B == 1:
    AND_4()
    print(AND)
    print("Now solve the XOR gate")
    gate_path_A()
else: 
    print("Error")
</code></pre>
<p>it skips all my elif statements and just prints an error. </p>
<pre><code>def AND_1():
print(A &amp; " AND " &amp; B &amp; " = 0")
AND = 0

def AND_2():
print(A &amp; " AND " &amp; B &amp; " = 0")
AND = 0

def AND_3():
print(A &amp; " AND " &amp; B &amp; " = 0")
AND = 0

def AND_4():
print(A &amp; " AND " &amp; B &amp; " = 1")
AND = 1 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I cleaned up your code for you: you should read up on python syntax, f.e. <a href="https://docs.python.org/2/reference/index.html" rel="nofollow noreferrer">https://docs.python.org/2/reference/index.html</a> (for 2.7.x) and do some tutorials</p>
<pre><code># define global 
AND = None

#define the used functions
def gate_path_A():
    print("Reached gate_path_A()")
    return


def first_AND (A,B):
    if A == 0 and B == 0: 
        AND_1(A,B)
        print(AND)
        print("Now solve the XOR gate")
        gate_path_A()
    elif A == 1 and B == 0:
        AND_2(A,B)
        print(AND)
        print("Now solve the XOR gate")
        gate_path_A()
    elif A == 0 and B == 1:
        AND_3(A,B)
        print(AND)
        print("Now solve the XOR gate")
        gate_path_A()
    elif A == 1 and B == 1:
        AND_4(A,B)
        print(AND)
        print("Now solve the XOR gate")
        gate_path_A()
    else: 
        print("Error")
    return  


def AND_1(A,B):
    print(A , " AND " , B , " = 0")
    AND = 0
    return

def AND_2(A,B):
    print(A , " AND " , B ," = 0")
    AND = 0
    return

def AND_3(A,B):
    print(A , " AND " , B , " = 0")
    AND = 0
    return

def AND_4(A,B):
    print(A , " AND " , B , " = 1")
    AND = 1
    return
</code></pre>
<p><strong>MAIN Program</strong></p>
<pre><code># get one integer from user
a = None
while a is None:
    try:
        a = int(input("Enter a number: "))
    except ValueError:
        print("Not an integer value...")
print(str(a));

# get second integer from user 
# you should really put this in a def and return the integer: DRY principle
b = None
while b is None:
    try:
        b = int(input("Enter a number: "))
    except ValueError:
        print("Not an integer value...")
print(str(b));

# call to the first and thing and supply the params your got from user
first_AND(a,b);
</code></pre>
</div>
<span class="comment-copy"><code>prints an error</code> - do you mind giving the error?</span>
<span class="comment-copy">indentation is important in python - maybe your code for the def has to move over a bit?</span>
<span class="comment-copy">If there is anything you are unclear of just make sure you leave a message and il wil get back to you.</span>
<span class="comment-copy">yeah sure no problem Patrick</span>
<span class="comment-copy">File "C:/Users/waliu/Desktop/test.py", line 33, in &lt;module&gt;     first_AND()                                                                                                         File "C:/Users/waliu/Desktop/test.py", line 21, in first_AND     AND_1()   File "C:/Users/waliu/Desktop/test.py", line 27, in AND_1     print(A &amp; " AND " &amp; B &amp; " = 0") TypeError: unsupported operand type(s) for &amp;: 'str' and 'str'</span>
<span class="comment-copy">that was what I was thinking to be honest to pass my inputs of A and B as functions. So basically once I write my function I have to to a return statement onto it?</span>
<span class="comment-copy">Here we go this is the problem that I was exactly looking for: NameError: name 'A' is not defined - this is what is the problem and same applies with B. This is what I wrote in my function you suggested Pat.</span>
<span class="comment-copy">def inputs(A, B):     A = input("Enter a value of 1 or 0: ")     B = input("Enter a value of 1 or 0: ")     return A     return B</span>
<span class="comment-copy">look up how to cretae functions, f.e. <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow noreferrer">here</a> - you can return smthif you like - or return None.</span>
<span class="comment-copy">Woah thanks patrick Ill test your code here and see if it perfectly works into doing what I intend on it doing an ill have to apply this to the rest of my code based on the XOR gate, carry ouputds of previous gates into our next gates and store results of other gates</span>
