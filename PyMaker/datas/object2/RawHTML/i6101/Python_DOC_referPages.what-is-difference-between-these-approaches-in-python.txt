<div class="post-text" itemprop="text">
<p>First approach </p>
<pre><code>n, m = [int(n), int(m)] 
</code></pre>
<p>Second approach</p>
<pre><code>n, m = int(n), int(m)
</code></pre>
<p>Both lines gives the same output. Then, is it necessary to close parameters under square bracket?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>int(n), int(m)</code> creates a 2-item tuple. <code>[int(n), int(m)]</code> creates a 2-item list.  Once you break the pair apart into 2 items, as part of the assignments, there is no difference left.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first approach creates a list and the second one - a tuple. When this 2 variables are apart there is no difference</p>
</div>
<span class="comment-copy">Which part makes you think it is necessary if the output is the same?</span>
<span class="comment-copy">in the first you're unpacking a list, in the second you're unpacking a tuple</span>
<span class="comment-copy">why the down votes? it's a genuine question.</span>
<span class="comment-copy">@mga basic questions tend to not get a lot of love, especially if they don't show an attempt to find the answer. This question relates to not understanding <a href="http://openbookproject.net/thinkcs/python/english3e/tuples.html#tuple-assignment" rel="nofollow noreferrer">tuple assignment</a> and that <code>int(n), int(m)</code> is in implicit, rather than explicit tuple.</span>
<span class="comment-copy">@TemporalWolf: Except for empty tuples, tuples are formed by comma operators, not parentheses. <code>a,b</code> is an explicit tuple display.  <code>(a,b)</code> is a tuple set off from other code by parentheses.   <a href="https://docs.python.org/3/reference/expressions.html#parenthesized-forms" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
