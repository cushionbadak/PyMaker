<div class="post-text" itemprop="text">
<p>I have a dictionary which generates a "map" 
e.g. tuple (x, y) : mapTile</p>
<pre><code>mapGenCode = {(1, 1): 0, (2, 1): 1, (3, 1): 0, (1, 2): 0, (2, 2): 2, (3, 2): 1}
</code></pre>
<p>What I'm trying to achieve is when an keyboard arrow is pushed all the x/y values within the same dictionary are incremented by +1/-1</p>
<pre><code>if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_LEFT:
            x_loc = x_loc-1
            x_map -1

mapRefresh(x_map, y_map)

def mapRefresh(x, y):

    if x == -1:
        for (key1, key2), value in mapGenCode.iteritems():
            newkeyX = key1 -1
            mapGenCode[newKey1, key2] = value
</code></pre>
<p>I have previously run into this error</p>
<pre><code>runtimeerror: dictionary changed size during iteration
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of "for key, value in dic", you can consider following code</p>
<pre><code>while key in dic:
    func()
    key += 1
</code></pre>
</div>
<span class="comment-copy">try recreating the <code>dict</code> instead of updating it.</span>
<span class="comment-copy">tupples are <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-tuple" rel="nofollow noreferrer">immutable</a>, so a dict of tuples might not be the best way to keep this info.</span>
<span class="comment-copy">How do you suggest I recreate it and given the fact I'll be changing it every time i push an arrow key will it work?</span>
<span class="comment-copy">won't Class be easier, which keeps a coordinate, the values and the movement methods?</span>
<span class="comment-copy">I think you would get better answers, if you described your goals (what you actually want to achieve in your game) more precisely.</span>
