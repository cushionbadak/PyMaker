<div class="post-text" itemprop="text">
<p>I have this code</p>
<pre><code>def query(q, L):
    result = []
    mDict = {}
    key = 0
    for x, i in enumerate(L):
        for y in i:
            if q == y:
                key += 1

        if q in i:
            result.append(x)
            mDict[key]=x

        key = 0

    print (mDict)
    print (result)
q = "h"
l = ["phone", "power", "high", "phones"]
query(q, l)
</code></pre>
<p>I am expecting my printed output to be </p>
<p><code>{1: 0, 2: 2, 1: 3}</code></p>
<p><code>[0, 2, 3]</code></p>
<p>but instead I am getting</p>
<p><code>{1: 3, 2: 2}</code></p>
<p><code>[0, 2, 3]</code></p>
<p>can anyone help me out?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need complex functions to count characters in Python, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="nofollow noreferrer"><code>str.count()</code></a>. </p>
<p>And to collate the counts, you can use <a href="https://docs.python.org/2/library/collections.html#counter-objects" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; q = "h"
&gt;&gt;&gt; l = ["phone", "power", "high", "phones"]
&gt;&gt;&gt; Counter(word.count(q) for word in l)
Counter({1: 2, 0: 1, 2: 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This code worked </p>
<pre><code>q = "h"
L = ["phone", "power", "high", "phones"]

mDict = {}
values = 0
for x, i in enumerate(L):
    for y in i:
        if q == y:
            values += 1

    if q in i:
        mDict[x]=values

    values = 0

sorted_dict = sorted(mDict, key=mDict.get, reverse=True)

print (sorted_dict)
</code></pre>
<p>output </p>
<pre><code>[2, 0, 3]
</code></pre>
</div>
<span class="comment-copy">keys in a dict are unique and cannot have two 1's in the same dict.</span>
<span class="comment-copy">Please describe what function is supposed to do, beyond just the expected output for a single case.</span>
<span class="comment-copy">thanks a lot. my values in the dictionary are unique, so I made my values key and key values like this mDict[x]=key and i got this {0: 1, 2: 2, 3: 1} [0, 2, 3] as my result.</span>
<span class="comment-copy">Please describe what function is supposed to do, beyond just the expected output for a single case</span>
<span class="comment-copy">The function is suppose to take in a string q, and a list of strings L, and return a list of the indices of the String L that contains q as a substring. To get extra point I need to order the indices of the strings in L that contains q. For example query("h", ["phone", "power", "high", "phones"]) should return [2, 0, 3] for extra points. I was hoping if I could add the the indices and it's count in a dictionary, I could sort the dictionary</span>
<span class="comment-copy">I noticed counter does not take in the indices of the string l, but rather increments when q is in l. It's suppose to return the indices in l and the count of q in l</span>
