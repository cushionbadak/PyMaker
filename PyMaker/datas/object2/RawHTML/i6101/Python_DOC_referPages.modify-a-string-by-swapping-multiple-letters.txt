<div class="post-text" itemprop="text">
<p>Say I have a very long string like <code>'ABCEEEEEEDEDAAA......'</code> but it is only made up of five letters. Say I want all <code>'A'</code> to be <code>'D'</code> and vice versa, and same to <code>'B'</code> and <code>'C'</code>(an example would be nucleotides in DNA....). The example, after modification, would be <code>'DCBEEEEEEAEADDD......</code>. I realized that code like <code>string.replace('A','D').replace('D','A')</code> just wouldn't work. And I would like to know what is the fastest approach since the other approach that comes up to me is just finding every index, which looks a little bit complicated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since the requirement is for <strong><em>multiple replacements</em></strong>, its better to use <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate()</code></a> by creating a mapping table first using <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow noreferrer"><code>str.maketranslate()</code></a>.</p>
<p>Example using a shortened version of your sample where <code>'A'-&gt;'D'</code> , <code>'D'-&gt;'A'</code> , <code>'B'-&gt;'C'</code> , <code>'C'-&gt;'B'</code></p>
<pre><code>&gt;&gt;&gt; s = 'ABCEEEEEEDEDAAA'
&gt;&gt;&gt; orig = 'ABCD'
&gt;&gt;&gt; rep = 'DCBA'
&gt;&gt;&gt; trans_table = str.maketrans(orig,rep)

&gt;&gt;&gt; s.translate(trans_table)
=&gt; 'DCBEEEEEEAEADDD'
</code></pre>
<hr/>
<p>Another method would be to make use of <code>str.replace</code> function, but which would require more amount of code lines for the same functionality. It can be done by using a <em>temporary placeholder for replacements</em>.</p>
<p>Example : suppose for just <code>'A'-&gt;'B'</code> and <code>'B'-&gt;'A'</code> </p>
<pre><code>&gt;&gt;&gt; s = 'ABBA'
&gt;&gt;&gt; s = s.replace('A','$')
#'$BB$'
&gt;&gt;&gt; s = s.replace('B','A')
#'$AA$'
&gt;&gt;&gt; s = s.replace('$','B')
&gt;&gt;&gt; s
=&gt; 'BAAB' 
</code></pre>
<p>Here <code>$</code> is used as placeholder. As you can see, this becomes tiresome with large replacement requirements.</p>
<p><strong><em>NOTE :</em></strong> in the above method, the placeholders should be unique too and should not be already present in the string.</p></div>
<span class="comment-copy">string is immutable in python.</span>
<span class="comment-copy">Use a temp character. For example: <code>s.replace('A', '!')</code>, then <code>s.replace('B', 'A')</code>, and <code>s.replace('!', 'B')</code>.. I'm not sure what values you want to swap, but this should do the trick.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/4605439/what-is-the-simplest-way-to-swap-char-in-a-string-with-python">What is the simplest way to swap char in a string with Python?</a></span>
<span class="comment-copy">@MarounMaroun : that would be  fine if only two chars need to be swapped. But since here many chars need to be replaced, that method won't be the optimum.</span>
<span class="comment-copy">He can do the swap of each letter one by one, there shouldn't be any conflict..</span>
