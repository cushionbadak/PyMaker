<div class="post-text" itemprop="text">
<p>Suppose I have a numpy array of the form:</p>
<pre><code>arr=numpy.array([[1,1,0],[1,1,0],[0,0,1],[0,0,0]])
</code></pre>
<p>I want to find the indices of the first index (for every column) where the value is non-zero.</p>
<p>So in this instance, I would like the following to be returned:</p>
<pre><code>[0,0,2]
</code></pre>
<p>How do I go about this?</p>
</div>
<div class="post-text" itemprop="text">
<h3>Indices of first occurrences</h3>
<p>Use <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.argmax.html" rel="noreferrer"><code>np.argmax</code></a> along that axis (zeroth axis for columns here) on the mask of non-zeros to get the indices of first <code>matches</code> (True values) -</p>
<pre><code>(arr!=0).argmax(axis=0)
</code></pre>
<p>Extending to cover generic axis specifier and for cases where no non-zeros are found along that axis for an element, we would have an implementation like so -</p>
<pre><code>def first_nonzero(arr, axis, invalid_val=-1):
    mask = arr!=0
    return np.where(mask.any(axis=axis), mask.argmax(axis=axis), invalid_val)
</code></pre>
<p>Note that since <code>argmax()</code> on all <code>False</code> values returns <code>0</code>, so if the <code>invalid_val</code> needed is <code>0</code>, we would have the final output directly with <code>mask.argmax(axis=axis)</code>.</p>
<p>Sample runs -</p>
<pre><code>In [296]: arr    # Different from given sample for variety
Out[296]: 
array([[1, 0, 0],
       [1, 1, 0],
       [0, 1, 0],
       [0, 0, 0]])

In [297]: first_nonzero(arr, axis=0, invalid_val=-1)
Out[297]: array([ 0,  1, -1])

In [298]: first_nonzero(arr, axis=1, invalid_val=-1)
Out[298]: array([ 0,  0,  1, -1])
</code></pre>
<p><strong>Extending to cover all comparison operations</strong></p>
<p>To find the first <code>zeros</code>, simply use <code>arr==0</code> as <code>mask</code> for use in the function. For first ones equal to a certain value <code>val</code>, use <code>arr == val</code> and so on for all cases of <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="noreferrer"><code>comparisons</code></a> possible here.</p>
<hr/>
<h3>Indices of last occurrences</h3>
<p>To find the last ones matching a certain comparison criteria, we need to flip along that axis and use the same idea of using <code>argmax</code> and then compensate for the flipping by offsetting from the axis length, as shown below -</p>
<pre><code>def last_nonzero(arr, axis, invalid_val=-1):
    mask = arr!=0
    val = arr.shape[axis] - np.flip(mask, axis=axis).argmax(axis=axis) - 1
    return np.where(mask.any(axis=axis), val, invalid_val)
</code></pre>
<p>Sample runs -</p>
<pre><code>In [320]: arr
Out[320]: 
array([[1, 0, 0],
       [1, 1, 0],
       [0, 1, 0],
       [0, 0, 0]])

In [321]: last_nonzero(arr, axis=0, invalid_val=-1)
Out[321]: array([ 1,  2, -1])

In [322]: last_nonzero(arr, axis=1, invalid_val=-1)
Out[322]: array([ 0,  1,  1, -1])
</code></pre>
<p>Again, all cases of <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="noreferrer"><code>comparisons</code></a> possible here are covered by using the corresponding comparator to get <code>mask</code> and then using within the listed function. </p>
</div>
