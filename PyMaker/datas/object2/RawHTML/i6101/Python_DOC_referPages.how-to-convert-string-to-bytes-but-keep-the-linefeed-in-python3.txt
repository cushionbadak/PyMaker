<div class="post-text" itemprop="text">
<p>Originally I have python 2.7 code, which can read a file and deliver it to perl code:</p>
<pre><code>proc = subprocess.Popen(["perl", _conlleval], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
stdout, _ = proc.communicate(open(filename).read()) 
</code></pre>
<p>Now I would like to convert it to Python3 code, but in Python3 <code>proc.communicate</code> reads bytes-like object rather than 'str'. So I use <code>stdout, _ = proc.communicate(open(filename).read().encode())</code>, but it turns out that all the line feeds in will file be converted to <code>\n</code>, for example, in the file I have </p>
<pre><code>Apple
Tree

Is 
Good
</code></pre>
<p>But unfortunately the encode will make it:</p>
<pre><code>Apple\nTree\n\nIs\nGood\n
</code></pre>
<p>How could I correct this error? I want to send the byte format stuff to pearl without those <code>\n</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>repr</code>: It returns a string containing a printable representation of an object. </p>
<pre><code>stri='''Apple
Tree

Is
Good
'''
print(stri)
print(repr(stri))
</code></pre>
<p>output:</p>
<pre><code>Apple
Tree

Is
Good

'Apple\nTree\n\nIs \nGood\n'
</code></pre>
</div>
<span class="comment-copy">What do you want it to <i>send</i>?  What do you want the newlines to be converted to?</span>
<span class="comment-copy">Have you tried messing around with the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>newline</code> parameter for <code>open</code></a>? Have you tried to open the file in binary mode and send it that way? Those newline characters are in the file, you might have to strip/filter them out.  Better yet, convert your perl script to Python and be done with it.</span>
<span class="comment-copy">repr does not change the type of it. It is still string</span>
<span class="comment-copy">What operation you want to be done on the string? Remove new lines?</span>
