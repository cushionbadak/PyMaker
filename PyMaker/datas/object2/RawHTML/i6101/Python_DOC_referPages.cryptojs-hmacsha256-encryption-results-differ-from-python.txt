<div class="post-text" itemprop="text">
<p>CryptoJS encrypted string can pass different parameters in python can only pass a string? How to implement the second CryptoJS implementation in python
 ,how to get clientKey2,This will only give the first result.Thanks!</p>
<pre><code>&gt; saltedPassword=CryptoJS.PBKDF2("key", "salt", {keySize: 8,iterations:500,hasher: CryptoJS.algo.SHA256});    
&gt; clientKey1=CryptoJS.HmacSHA256(saltedPassword.toString(), "Client Key")
&gt; clientKey2=CryptoJS.HmacSHA256(saltedPassword, "Client Key")
&gt; clientKey1.toString()
&gt; "857ef8988876a3bb6bcadb85ca257787074e73e830d7dc14c1f838ba46aef1f5"
&gt; clientKey2.toString()
&gt; "9a8574da9b276ee1162dcb92071df587f4513bc03060bda1e9b3897d46233416"
&gt; saltedPassword.toString()
&gt; "6e441ccd26e6b35198b4b17457dc0266d36b751d0062b5850b0e302ceb1d6dcc"
</code></pre>
<p>i use this way can get clientKey1,</p>
<pre><code>import hashlib
import hmac

def HmacSHA256(k,v):
    message = bytes(k).encode('utf-8')
    secret = bytes(v).encode('utf-8')
    signature = hmac.new(secret, message, digestmod=hashlib.sha256).hexdigest()
    return signature

signature = HmacSHA256("6e441ccd26e6b35198b4b17457dc0266d36b751d0062b5850b0e302ceb1d6dcc","Client Key")

print signature
</code></pre>
<p>How to get the second result in Python,Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the desired <code>clientKey2</code> you need to encode the hex digits of your <code>saltedPassword</code> string to bytes. One way to do that which works on both Python 2 &amp; Python 3 is to use <a href="https://docs.python.org/3/library/binascii.html#binascii.unhexlify" rel="nofollow noreferrer"><code>binascii.unhexlify</code></a>.</p>
<p>Your <code>HmacSHA256</code> function is a bit odd. It won't work on Python 3, since <code>bytes</code> objects don't have an <code>.encode</code> method. In Python 2, <code>bytes</code> is just a synonym for <code>str</code>.</p>
<p>Anyway, here's some code that works on both Python 2 &amp; Python 3.</p>
<pre><code>from __future__ import print_function
import hashlib
import hmac
import binascii

key = "Client Key".encode()
salted = "6e441ccd26e6b35198b4b17457dc0266d36b751d0062b5850b0e302ceb1d6dcc"
raw = binascii.unhexlify(salted)

signature = hmac.new(key, salted.encode(), digestmod=hashlib.sha256).hexdigest()
print(signature)

signature = hmac.new(key, raw, digestmod=hashlib.sha256).hexdigest()
print(signature)
</code></pre>
<p><strong>output</strong></p>
<pre><code>857ef8988876a3bb6bcadb85ca257787074e73e830d7dc14c1f838ba46aef1f5
9a8574da9b276ee1162dcb92071df587f4513bc03060bda1e9b3897d46233416
</code></pre>
<p>The output is identical on Python 2 &amp; Python 3.</p>
<p>BTW, it would be simpler to do this task in Python 3, which makes a clean distinction between text and byte strings. Also, the Python 3 <code>hashlib</code> module has a <a href="https://docs.python.org/3/library/hashlib.html#hashlib.pbkdf2_hmac" rel="nofollow noreferrer"><code>pbkdf2</code> function</a>.</p>
</div>
<span class="comment-copy">Welcome to SO. You question is heavily based on code. Please make sure to explain your problem <b>before</b> posting any code. Introduce the code itself and explain what it does. You could then finalise your question by adding a specific question at the end. In any case, make sure to read <a href="https://stackoverflow.com/help/how-to-ask">this page</a> about how to ask a good question</span>
