<div class="post-text" itemprop="text">
<p>How lazy is evaluation in Python? If I have code that looks like</p>
<p><code>logging.debug('My very long list: %s' % list(x for x in long_generator))</code></p>
<p>and the logging effective level is such that debug messages are ignored, do I incur a performance penalty for having this line?</p>
</div>
<div class="post-text" itemprop="text">
<p>This will not be lazily evaluated, but Python logging has a solution to this problem: <a href="https://docs.python.org/3/howto/logging.html#optimization" rel="nofollow noreferrer"><code>isEnabledFor()</code></a>.</p>
<pre><code>if logger.isEnabledFor(logging.DEBUG):
    logger.debug('My very long list: %s' % list(x for x in long_generator))
</code></pre>
<p>Your list will be built and formatted <strong>only</strong> if logger's level is higher than <code>DEBUG</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You will have a performance penalty because <code>list(x for x in long_generator)</code> will be created before calling <code>logging.debug()</code> even if debug messages are ignored.  </p>
<p>There is no lazy evaluation in Python. Every line is evaluated/executed before the next line. It means that expressions are evaluated when they are bound to variables.</p>
</div>
<span class="comment-copy">There is no lazy evaluation in Python.</span>
