<div class="post-text" itemprop="text">
<p>I'm trying to build a simple tkinter GUI window around my flask application for noobs in my office. I want the script to perform these tasks in the following order:</p>
<ul>
<li>Start the flask web server</li>
<li>Open a tkinter GUI window with one button. When pressed, that button opens the app's index page (e.g. <a href="http://127.0.0.1:5000" rel="nofollow noreferrer">http://127.0.0.1:5000</a>)</li>
<li>Terminate the flask web server when the tkinter gui window is closed</li>
</ul>
<p>This is what I have so far but the app runs independently of the tkinter window and I must terminate the flask app using crtl+c before I even see the gui window:</p>
<pre><code>from flask_app import app
from tkinter import tk
import webbrowser

class GUI:
    def __init__(self):
        app.run()
        self.btn = tk.Button(root, text='Open in Browser', command:self.open_browser_tab).pack()

    def open_browser_tab(self):
        webbrowser.open(url='http:127.0.0.1:5000', new=2)

if __name__ == '__main__':
    root = tk.Tk()
    GUI(root)
    root.mainloop()
</code></pre>
<p>So how can I run a process while the app's running?</p>
</div>
<div class="post-text" itemprop="text">
<h2>Options</h2>
<p>The flask application is blocking your GUI.  You have two options:</p>
<ol>
<li>threading/multithreading</li>
<li>separate applications</li>
</ol>
<h2>Multiple Threads</h2>
<p>It is possible to write <code>tkinter</code> applications with multiple threads, but you must take care to do it.</p>
<ul>
<li><code>tkinter</code> must be run within the primary thread</li>
<li><code>tkinter</code> cannot be accessed or implemented from any thread other than the primary</li>
</ul>
<h2>Separate Processes</h2>
<p>I would recommend using the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module.  If you separate our your functionality into two applications and use the subprocess module to start/stop the flask application, I think you will have what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest taking a look at the <a href="https://github.com/twisted/klein" rel="nofollow noreferrer">Klein web micro-framework</a> which runs on Twisted Python. It's similar to Flask and may suit your needs and will allow you to run it all in a single process.</p>
<p>You can integrate it with the event loop of various UI toolkits, including <a href="http://twistedmatrix.com/documents/13.2.0/core/howto/choosing-reactor.html#auto16" rel="nofollow noreferrer">tkinter</a>.</p>
</div>
<span class="comment-copy"><a href="http://127.0.0.1:5000" rel="nofollow noreferrer">127.0.0.1:5000</a> is no good if you want it for other computers, that will be only available on your computer.</span>
<span class="comment-copy">Correct, I only want it available on the computer running it.</span>
<span class="comment-copy">use threading, invoke GUI with Threads</span>
<span class="comment-copy">Go for <code>subprocess</code> or <code>os</code>.  Threading is not safe, plus it's confusing to read.</span>
<span class="comment-copy">It's not unsafe to use multiple threads, as long as all tkinter code runs in the same thread.</span>
<span class="comment-copy">Ok, good deal.  Also worth noting that tkinter has to run in the primary thread.  I see that I didn't mention that.  Will modify answer.</span>
