<div class="post-text" itemprop="text">
<p>so I have the following block of JSON:</p>
<pre><code>b'{"data":[{"categories":[{"id":"IAB3","label":"Business","parent":"IAB3","score":"0.223819028028717559","confident":true}],"url":"megatel.de"}]}'
</code></pre>
<p>I need only a String with the content of the first label field.</p>
</div>
<div class="post-text" itemprop="text">
<p>Following snippet returns the output as <code>Business</code></p>
<pre><code>import json
data = json.loads('{"data":[{"categories":[{"id":"IAB3","label":"Business","parent":"IAB3","score":"0.223819028028717559","confident":true}],"url":"megatel.de"}]}')
print(data['data'][0]['categories'][0]['label'])
</code></pre>
<p>If you have more of such data, you could iterate over the <code>data</code> variable and get the desired results by substituting the <code>0</code> indices with the iterateor at both the places.</p>
<p>For example, if the json is somewhat as follows</p>
<pre><code>{"data":
        [
            {"categories":
                [
                    {"id":"IAB3",
                    "label":"Business",
                    "parent":"IAB3",
                    "score":"0.223819028028717559",
                    "confident":true}
                ],
            "url":"megatel.de"
            },
            {"categories":
                [
                    {"id":"IAB3",
                    "label":"Business",
                    "parent":"IAB3",
                    "score":"0.223819028028717559",
                    "confident":true}
                ],
                "url":"megatel.de"
            }
        ]
}
</code></pre>
<p>You could use the following  script to get similar output.</p>
<pre><code>for entry in data['data']:
    for categories in entry['categories']:
        print categories['label']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = b'{"data":[{"categories":[{"id":"IAB3","label":"Business","parent":"IAB3","score":"0.223819028028717559","confident":true}],"url":"megatel.de"}]}' 
(x.split('"label":')[1]).split(",")[0][1:-1]
&gt;&gt;'Business'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can also try a regex approach:</p>
<pre><code>import re


txt = b'{"data":[{"categories":[{"id":"IAB3","label":"Business","parent":"IAB3","score":"0.223819028028717559","confident":true}],"url":"megatel.de"}]}'

pattern = r'"label":"(.*?)"'
labels = re.search(pattern, str(txt, 'utf-8')).groups()

print(labels[0])  # Business
</code></pre>
</div>
<span class="comment-copy">What would be the expected output for your example?</span>
<span class="comment-copy">Parse JSON into a data structure with the stock <code>json</code> module, then retrieve the necessary member. Any tutorial should cover that.</span>
<span class="comment-copy">Generally, you would use <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads</code></a> to convert the string/bytearray into a native Python data structure. From there, I'm sure you'll be able to figure it out.</span>
<span class="comment-copy">Won't work when label is the last key (you'll have <code>}</code> instead of <code>,</code>).</span>
<span class="comment-copy">Yes, I wrote an answer for this specific format</span>
