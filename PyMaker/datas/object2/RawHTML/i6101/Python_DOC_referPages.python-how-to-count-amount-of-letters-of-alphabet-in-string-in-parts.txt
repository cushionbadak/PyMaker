<div class="post-text" itemprop="text">
<p>How to count the amount of letters in this string between the different parts? 
And the other way around: how to get the alphabetical string representation when the numbers are given?</p>
<p>Input: 'A-G H-O P Q-Z'</p>
<p>Output: (7, 8, 1, 10)</p>
<pre><code>  q = list()

    for i in seq:
        if i is char:
            n = ord(i+1) - ord(i)
            q.append(n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this:</p>
<pre><code>input_string = 'A-G H-O P Q-Z'
input_string = input_string.split()

q = []
for dletter in input_string:
    if '-' in dletter:
        q.append(1 + ord(dletter[2]) - ord(dletter[0]))
    else:
        q.append(1)
</code></pre>
<p>Alternatively without the <code>if</code> statement:</p>
<pre><code>input_string = 'A-G H-O P Q-Z'
input_string = input_string.split()

q = []
for dletter in input_string:
    q.append(1 + ord(dletter[-1]) - ord(dletter[0]))
</code></pre>
<p>But this is a very <a href="https://stackoverflow.com/questions/47269862/python-how-to-count-amount-of-letters-of-alphabet-in-string-in-parts/47269988#comment81490834_47269862">good answer</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = "A-G  N B-Z"
a = a.split()
b = []
for i in a:
    b.extend([i.split("-")])
print(b)
for lists in b:
    if len(lists) &gt; 1:
        print(lists, ":", ord(lists[1]) - ord(lists[0]) + 1)
    else:
        print(lists, ":", 1)
</code></pre>
<blockquote>
<p>Output</p>
</blockquote>
<pre><code>[['A', 'G'], ['N'], ['B', 'Z']]
['A', 'G'] : 7
['N'] : 1
['B', 'Z'] : 25
</code></pre>
<h1>Using list comprehension</h1>
<pre><code>a = "A-G  N B-Z"

b = [i.split("-") for i in a.split()]

print(b)
for lists in b:
    if len(lists) &gt; 1:
        print(lists, ":", ord(lists[1]) - ord(lists[0]) + 1)
    else:
        print(lists, ":", 1)
</code></pre>
<blockquote>
<p>Output</p>
</blockquote>
<pre><code>[['A', 'G'], ['N'], ['B', 'Z']]
['A', 'G'] : 7
['N'] : 1
['B', 'Z'] : 25
</code></pre>
</div>
<span class="comment-copy">What is a "part"?</span>
<span class="comment-copy">for example A-G and another is H-O and P and the last one is Q-Z</span>
<span class="comment-copy">How are you receiving this input? What is this code you have posted?</span>
<span class="comment-copy">So you're trying to count the chars in each word in <code>ABCDEFG HIJKLMNO P QRSTUVWXYZ</code>?</span>
<span class="comment-copy"><code>[ord(x[-1]) - ord(x[0]) + 1 for x in 'A-G H-O P Q-Z'.split()]</code></span>
<span class="comment-copy">I think your <code>ord(n[2]) - ord(n[0])</code> is going to be off by one</span>
<span class="comment-copy">@PatrickHaugh you are correct</span>
<span class="comment-copy">You can get rid of the if-statements and just do <code>q.append(1 + ord(dletter[-1]) - ord(dletter[0]))</code></span>
<span class="comment-copy">You also do not need to specify the split character as ' '. This way also other whitespace characters will be respected.</span>
<span class="comment-copy">yes. <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.split</a> describes it in more detail</span>
