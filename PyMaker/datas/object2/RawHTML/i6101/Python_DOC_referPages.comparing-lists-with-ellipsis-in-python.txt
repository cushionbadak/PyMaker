<div class="post-text" itemprop="text">
<p>Is there any way to compare lists that reference themselves in Python? You can see what I've tried below:</p>
<pre><code>In[65]:  b
Out[65]: [[...]]

In[66]:  a
Out[66]: [[[[...]]]]

In[67]:  a==b

Traceback (most recent call last):

  File "&lt;ipython-input-67-67c639108cf0&gt;", line 1, in &lt;module&gt;
    a==b

RecursionError: maximum recursion depth exceeded in comparison
</code></pre>
<p>I can understand that it cannot keep going into the list forever, but is there still a way to compare lists that have Ellipsis?</p>
<p>[EDIT]:</p>
<p>How <code>a</code> was created:</p>
<pre><code>a=[]
a.append(a)
a=[[[a]]]
</code></pre>
<p>How <code>b</code> was created:</p>
<pre><code>b=[]
b.append(b)
b=[b]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> and a generator based on list comprehension we can achieve a <code>compare</code> function that works on every case I could figure out:</p>
<pre><code>def compare(list1: list, list2: list, root1=None, root2=None):
    """Compare recursively nested lists."""
    root1, root2 = (root1, root2) if root1 and root2 else (list1, list2)
    return len(list1) == len(list2) and all(
        ((a, b) == (root1, root2) or a == b)
        and compare(list1[i + 1:], list2[i + 1:], root1, root2)
        for i, (a, b) in enumerate(zip(list1, list2)))
</code></pre>
<h2>Examples</h2>
<p>For comprehensibility sake I'll write the lists as they are represented when printed instead that building them constantly with <code>appends</code>.</p>
<pre><code>a, b = ([[...]], [[...]])
compare(a, b)
&gt;&gt;&gt; True

a, b = ([[...], 2], [[...]])
compare(a, b)
&gt;&gt;&gt; False

a, b = ([2, [...], 2], [[...]])
compare(a, b)
&gt;&gt;&gt; False

a, b = ([2, [...], 2], [2, [...], 2])
compare(a, b)
&gt;&gt;&gt; True

a, b = ([2, [...], [2]], [2, [...], [3]])
compare(a, b)
&gt;&gt;&gt; False
</code></pre>
<p><em>If you'd like for me to test and add more cases I'll happily do it.</em></p>
</div>
<span class="comment-copy">Is that nested lists? Or literally a list of ellipsis nested inside a bunch of lists?</span>
<span class="comment-copy">Please show how these lists were created.</span>
<span class="comment-copy">They don't <i>contain</i> ellipsis, they are an infite list that contains itself. No, you can't</span>
<span class="comment-copy">The <code>...</code> notation here represents a self-nested object, not the <code>Ellipsis</code> object that <code>...</code> evaluates to in Python code. The <code>Ellipsis</code> object would show up as <code>Ellipsis</code>.</span>
<span class="comment-copy">Come up with a precise definition of when you want two recursively nested lists to be considered equal, and you'll be most of the way towards figuring out how to perform the comparison you want.</span>
