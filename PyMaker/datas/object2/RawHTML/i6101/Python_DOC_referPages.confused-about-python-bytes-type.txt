<div class="post-text" itemprop="text">
<p>I'm reading a binary file (Python 3) and am trying to convert chunks with the help of the <strong>struct</strong> module.</p>
<pre><code>f = open(fn, "rb")
try:
    a=f.read(2)
...
</code></pre>
<p>When I use : </p>
<pre><code>unpack("h",b'\x6b\x0a')
</code></pre>
<p>it gives me the expected </p>
<pre><code>(2667,)
</code></pre>
<p>But I can't use that syntax on </p>
<pre><code>b'6b0a' 
</code></pre>
<p>even though:</p>
<pre><code>print(type(b'6b0a'))
print(type(b'\x6b\x0a'))
</code></pre>
<p>gives the same type:</p>
<pre><code>&lt;class 'bytes'&gt;
&lt;class 'bytes'&gt;
</code></pre>
<p>What am I mixing up? I think this used to work for me in Python 2.x.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>b'\x6b\x0a'</code> is two bytes: 0x6b 0x0a. <code>b'6b0a'</code> is four bytes: 0x36 0x62 0x30 0x61.</p>
<pre><code>&gt;&gt;&gt; binascii.unhexlify(b'6b0a')
b'k\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Inside <a href="https://docs.python.org/3/library/stdtypes.html#bytes-objects" rel="nofollow noreferrer">bytes literals</a> you may use <em>2 methods</em> for specifying individual bytes:</p>
<ol>
<li>a direct ASCII character, e. g. <code>b'xyz'</code>, or</li>
<li>an <a href="https://docs.python.org/2/reference/lexical_analysis.html#string-literals" rel="nofollow noreferrer">escape sequence</a> (starting with <code>\</code>), e.g. <code>b'\n\123\x56\\'</code></li>
</ol>
<p>Of course, you may combine both methods in one bytes literal, e. g. <code>b'xy\n\x56abc'</code></p>
<p>So your <code>b'\x6b\x0a'</code> and <code>b'6b0a'</code> a both the <em>valid</em> bytes literals - but unfortunately <em>different:</em></p>
<ul>
<li>the 1<sup>st</sup>Â  one consists of <code>2</code> bytes (represented as escape sequences <code>\x6b</code> and <code>\x0a</code>) </li>
<li>the 2<sup>nd</sup> one consists of <code>4</code> bytes (represented as ASCII characters <code>6</code>, <code>b</code>, <code>0</code>, and <code>a</code>).</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>\x6b
</code></pre>
<p>inside a <code>b''</code> is the standard <a href="https://docs.python.org/2.0/ref/strings.html" rel="nofollow noreferrer">string literal's escape sequence</a> (allowed in bytes literals, too) for the hexadecimal representation of a <em>single byte</em>, while</p>
<pre><code>6b
</code></pre>
<p>inside that bytes literal are <em>two ASCII characters</em> representing <em>two bytes</em>.</p>
<p>From <a href="https://docs.python.org/3/library/stdtypes.html#bytes-objects" rel="nofollow noreferrer">Python documentation</a>:</p>
<blockquote>
<p>Only ASCII characters are permitted in bytes literals (regardless of the declared source code encoding). Any binary
  values over 127 must be entered into bytes literals using the appropriate escape sequence.</p>
<p>While bytes literals and representations are based on ASCII text, bytes objects actually behave like immutable sequences
  of integers, with each value in the sequence restricted such that 0 &lt;= x &lt; 256.</p>
</blockquote>
</div>
<span class="comment-copy">Ty. How do I convert b'6b0a' into b'\x6b\x0a?</span>
<span class="comment-copy">@roadrunner66: Exactly as my code shows.</span>
<span class="comment-copy">Ty.   Didn't see that because of the representation as ascii, which was my problem to begin with.   So  import binascii print(unpack("h", binascii.unhexlify(b'6b0a')))  --&gt; ((2667,)  works.</span>
