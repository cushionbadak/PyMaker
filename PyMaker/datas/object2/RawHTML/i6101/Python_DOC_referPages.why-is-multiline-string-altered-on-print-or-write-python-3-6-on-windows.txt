<div class="post-text" itemprop="text">
<p>I am using Python 3.6.3 on Windows.
When I try to print a single multiline string to file like this:</p>
<pre><code>with open('test1.txt', mode='w') as f:
    f.write('test\r\ntest\r\n')
</code></pre>
<p>Then <code>test1.txt</code> will end up containing <code>test\r\r\ntest\r\r\n</code> instead of <code>test\r\ntest\r\n</code>.</p>
<p>A workaround to get the desired output would look like so:</p>
<pre><code>with open('test2.txt', mode='w') as f:
    for line in 'test\r\ntest\r\n'.splitlines():
        print(line, file=f)
</code></pre>
<p>Why is this happening?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, turns out properly stating a question often leads to the answer presenting itself:</p>
<p>The reason for this behaviour is to be found with Python's <a href="https://docs.python.org/3/glossary.html#term-universal-newlines" rel="nofollow noreferrer">universal newline</a> (quoting from <a href="https://www.python.org/dev/peps/pep-3116/" rel="nofollow noreferrer">PEP 3116</a> on <code>TextIOWrapper</code>):</p>
<blockquote>
<p>On output, if <code>newline</code> is <code>None</code>, any <code>'\n'</code> characters written are translated to the system default line separator, <code>os.linesep</code>. <strong>If newline is <code>''</code>, no translation takes place</strong>. If newline is any of the other legal values, any <code>'\n'</code> characters written are translated to the given string. (Note that the rules guiding translation are different for output than for input.)</p>
</blockquote>
<p>This means, when opening the file for writing, the <code>newline</code> parameter can be set to <code>''</code> to achieve the desired output:</p>
<pre><code>with open('test3.txt', mode='w', newline='') as f:
    f.write('test\r\ntest\r\n')
</code></pre>
</div>
<span class="comment-copy">You're not supposed to put the <code>\r</code>s in yourself. Text mode translates that for you.</span>
<span class="comment-copy">Yeah, I know I shouldn't do that. In my case, I get the string in one go from <code>tablib.tsv</code>, however.</span>
<span class="comment-copy">Why <code>mode='w'</code> instead of <code>mode='wb'</code>, if you want your data to be written literally?</span>
<span class="comment-copy">I suppose that would do the job, too... Are there any corner-cases <code>mode='wb'</code> does not handle strings well?</span>
