<div class="post-text" itemprop="text">
<p>Is it possible to write a bash script which runs a python application until the ouput of the application shows a specified term and then closes the application?</p>
<p>Edit:
The output looks like this: </p>
<pre><code>2017-11-11 14:21:27 LOG: 192.168.0.1 - Administrator:Test54
2017-11-11 14:21:28 LOG: 192.168.0.1 - Administrator:Test55
2017-11-11 14:21:29 LOG: 192.168.0.1 - Administrator:Test56
2017-11-11 14:21:30 LOG: 192.168.0.1 - Administrator:Test57
2017-11-11 14:21:31 LOG: 192.168.0.1 - Administrator:Test58
2017-11-11 14:21:32 LOG: 192.168.0.1 - Administrator:Test59
2017-11-11 14:21:33 LOG: 192.168.0.1 - Administrator:Test60
2017-11-11 14:21:34 LOG: 192.168.0.1 - Administrator:Test61
2017-11-11 14:21:35 LOG: 192.168.0.1 - Administrator:Test62
2017-11-11 14:21:35 SUCCESS : 192.168.0.1 - Administrator:Test62
</code></pre>
<p>It should close after SUCCESS shows up.</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's say you have the following Python program:</p>
<pre><code>#!/usr/bin/python
for i in range(0,5001):
    print(i)
</code></pre>
<p>You can terminate it when it outputs <code>2500</code> like this:</p>
<pre><code>stdbuf -oL python a.py | sed '/2500/q'
</code></pre>
<hr/>
<p>Note, this a bit dirty, you might receive a</p>
<pre><code>Traceback (most recent call last):
  File "a.py", line 2, in &lt;module&gt;
    print(i)
BrokenPipeError: [Errno 32] Broken pipe
</code></pre>
<p>But if you want to kill the program anyway ...</p>
<hr/>
<p>Important note: </p>
<p>This won't work if the script is writing to stderr (like <a href="https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler" rel="nofollow noreferrer">logging.StreamHandler</a> does by default), or if it's handling BrokenPipeError. The former can be easily fixed with |&amp; redirection, but in the latter case, kill -INT would work better. </p>
</div>
<span class="comment-copy">Does not kill the programm, I edited my question.</span>
<span class="comment-copy"><code>program | sed '/SUCCESS/q'</code> should work.</span>
<span class="comment-copy">Note this won't work if the script is writing to <code>stderr</code> (like <a href="https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler" rel="nofollow noreferrer"><code>logging.StreamHandler</code></a> does by default), or if it's handling <code>BrokenPipeError</code>. The former can be easily fixed with <code>|&amp;</code> redirection, but in the latter case, <code>kill -INT</code> would work better.</span>
<span class="comment-copy">@randomir Sure. I should have mentioned that. Let me add your comment to my answer.</span>
