<div class="post-text" itemprop="text">
<p>I am using the python multiprocessing/pool module to compare program running times of a function that checks if a number is a prime. I can get the prime function to work by itself, but can't seem to merge the two so they work together. The pool function below:</p>
<pre><code>import math import time
import multiprocessing from multiprocessing import Pool

def pool_process(f,data,pool_size):

    tp1 = time.time()
    pool = Pool(processes = pool_size)
    result = pool.map(f, data)
    pool.close()
    pool.join()
    #enter code here
    print("Results", result)
    print("Overall Time:", (time.time()-tp1))
</code></pre>
<p>The function I am using to check if a number is a prime is the following:</p>
<pre><code>def check_prime(num):

    t1 = time.time()
    res = False

    if num &gt; 0:

        for i in range(2,num):
            if (num % i) == 0:
                print(num,"is not a prime number")
                print(i,"times",num//i,"is",num)
                print("Time:", (time.time()-t1))
                break
        else:
            print(num,"is a prime number")
            print("Time:", time.time()-t1) 
            res = True

    return res
</code></pre>
<p>Then I am calling the pool_process function</p>
<pre><code>data = 15488801
pool_process(check_prime, data, 1)
</code></pre>
<p>And I am getting the following error:</p>
<pre><code>'int' object is not iterable
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>data</code> in the third code snippet needs to be a list.</p>
<p>The variable <code>data</code> is fed into <code>pool_process</code> as second argument.</p>
<pre><code>data = [15488801]
pool_process(check_prime, data, 1)
</code></pre>
<p>In there it is given to <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map" rel="nofollow noreferrer"><code>Pool.map</code></a> as argument to iterate over.</p>
<pre><code>def pool_process(f,data,pool_size):
    # ...
    result = pool.map(f, data)
</code></pre>
<p>After I put that integer into a list (and correcting the <code>import</code> statements) the code runs fine on my machine.</p>
</div>
<span class="comment-copy">What is <code>def pool_process(f,data,pool_size)</code> and why is it in your code? What is <code>f</code> and where is <i>that</i>?</span>
<span class="comment-copy">I am not entirely sure, as this is code I have been given and I have to make it work with the prime function. I have seen a similar example where result=p.map(sqrt,[1,2,3]) if that helps</span>
<span class="comment-copy">So where's <code>f</code>?</span>
<span class="comment-copy">What is the prime function? How are you <i>calling the code above?</i> We don't know what you don't show us, if you can't get something to work, please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> and also, a description of how it doesn't work.</span>
<span class="comment-copy">I have the following comment in my notes: #  f is a function that takes a single argument My best guess is that f(x) is the prime function( checks if the number is a prime) and that by calling f in the pool_process function I am invoking f(x).</span>
<span class="comment-copy">I did try it with the data variable in the form of a list <code>data = [15488801]</code> but it just gets stuck in an infinite loop.</span>
<span class="comment-copy">Have you tried with a lower value for testing, e.g. <code>data = [11]</code>?</span>
<span class="comment-copy">Yes, just tried it. Infinite loop. Also tried it with <code>data = [1, 2, 3, 4]</code> just to be thorough. What did you mean by "correcting the <code>import</code> statements"?</span>
<span class="comment-copy">@Mariyana yes, as I explained, it will always throw that error because <code>map</code> expects an <i>iterable</i>, like a list. That infinite loop is probably because you haven't used an <code>if __name__ ==  '__main__':</code> guard, which is <i>required</i> on Windows.</span>
<span class="comment-copy">@juanpa.arrivillaga placing <code>if __name__=="__main__":</code> immediately after defining the pool_processes function worked! Thank you for your help! @creativecoding thank you for your help!</span>
