<div class="post-text" itemprop="text">
<p><strong>Sample DF:</strong></p>
<pre><code>ID   Name        Price     Sum       
1    Apple         10      180        
2    Apple         10      100        
3    Apple         10      80         
4    Orange        12      180        
5    Orange        12      190         
6    Banana        15      50       
7    Banana        15      30   
</code></pre>
<p><strong>Expected DF:</strong></p>
<pre><code>ID   Name        Price     Sum     Result  
1    Apple         10      180      Full Match       
2    Orange        12      180      Match - High Confidence  
3    Orange        12      190      Match - High Confidence   
4    Banana        15      50       Match - Low Confidence
5    Banana        15      30       Match - Low Confidence
</code></pre>
<p><strong>Problem Statement:</strong></p>
<p>I need a <code>Result</code> columns which works on following conditions:</p>
<ol>
<li><p>With a group <code>Name</code> and <code>Price</code> i.e. Name is <strong>Apple</strong> and Price is <strong>10</strong>, if the highest value is not <strong>+- 30 range</strong> with others then keep highest value row with result column as <code>Full Match</code> and delete others <strong>(Sample Df - ID 1,2,3 and expected DF is only ID 1)</strong></p></li>
<li><p>Within a group <code>Name</code> and <code>Price</code> if it is in <strong>+- 30 range</strong> and also greater than 100 then result columns will be <code>Match - High Confidence</code> and no rows being deleted <strong>(Sample Df - ID 4,5 and expected DF is ID 2,3)</strong></p></li>
<li><p>Within a group <code>Name</code> and <code>Price</code> if it is in <strong>+- 30 range</strong> and less than 60 then result columns will be <code>Match - Low Confidence</code> and no rows being deleted <strong>(Sample Df - ID 6,7 and expected DF is ID 4,5)</strong></p></li>
</ol>
<p>I am not able to find anything on how to solve this when there is a combination of groups involved plus the range. Any help ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is what I came up with, you can give it a try:</p>
<pre><code>#get absolute difference from max value
df['diff_abs']=abs(df.Sum-df.groupby(['Name','Price'])['Sum'].transform('max')) 
#check if diff less than 30 remove them
m=df.loc[df.duplicated(['Name','Price'],keep=False)&amp;df.diff_abs.lt(30)].reset_index()
print(m)

   index  ID    Name  Price  Sum  diff_abs
0      0   1   Apple     10  180         0
1      3   4  Orange     12  180        10
2      4   5  Orange     12  190         0
3      5   6  Banana     15   50         0
4      6   7  Banana     15   30        20

c1=~m.duplicated(['Name','Price'],keep=False) #check if entry is just 1 and no dups
c2=m.duplicated(['Name','Price'],keep=False)&amp;m.Sum.lt(60) #if dups check for less than 60
m['result']=np.select([c1,c2],\
   ['Full Match','Match - Low Confidence'],'Match - High Confidence')
print(m)

   index  ID    Name  Price  Sum  diff_abs                   result
0      0   1   Apple     10  180         0               Full Match
1      3   4  Orange     12  180        10  Match - High Confidence
2      4   5  Orange     12  190         0  Match - High Confidence
3      5   6  Banana     15   50         0   Match - Low Confidence
4      6   7  Banana     15   30        20   Match - Low Confidence
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you need:</p>
<pre><code>#get Series for maximal value of group
maxpergroup = df.groupby(['Name','Price'])['Sum'].transform('max')
#subtract values, get absolute values and compare by greater 30
m1 = df['Sum'].sub(maxpergroup).abs().gt(30)
#get all groups where at least one True
m11 = m1.groupby([df['Name'],df['Price']]).transform('any')
#print (m11)

#compare by another values and test if all values matching per groups
m2 = df['Sum'].gt(100)
m22 = (m2 &amp; ~m1).groupby([df['Name'],df['Price']]).transform('all')
#print (m22)

m3 = df['Sum'].lt(60)
m33 = (m3 &amp; ~m1).groupby([df['Name'],df['Price']]).transform('all')
#print (m33)

#create new column
masks = [m11,m22, m33]
vals = ['Full Match','Match - Low Confidence','Match - High Confidence']
df['result'] = np.select(masks, vals)

#remove unnecessary rows
df = df[~m11 | df['Sum'].eq(maxpergroup)]
print (df)
   ID    Name  Price  Sum                   result
0  1   Apple   10     180  Full Match             
3  4   Orange  12     180  Match - Low Confidence 
4  5   Orange  12     190  Match - Low Confidence 
5  6   Banana  15     50   Match - High Confidence
6  7   Banana  15     30   Match - High Confidence
</code></pre>
</div>
<span class="comment-copy">@jezrael: Any help here!!!</span>
<span class="comment-copy">Sorry, I was not here, dinner time ;)</span>
<span class="comment-copy">Getting this error <code>TypeError: unsupported operand type(s) for -: 'method' and 'int'</code> in  <code>df['diff_abs']=abs(df.Sum-df.groupby(['Name','Price'])['Sum'].transform('max')) </code> line</span>
<span class="comment-copy">It is the <code>minus</code> operation that is throwing this error</span>
<span class="comment-copy">@RahulAgarwal i think data related issue, works for the example, is there spaces in the columns, if yes, <code>-</code> doesnt work. you can check for these, else @jez-offer is the best. :) !!</span>
<span class="comment-copy">Actually I replaced <code>df.sum</code> with <code>df["sum"]</code> and it worked :)</span>
<span class="comment-copy">@RahulAgarwal yes that is because <code>sum</code> is a method, you should avoid having methods as variables. :) I thought the column name is <code>Sum</code> , glad it worked</span>
<span class="comment-copy">I am getting this error <code>ValueError: invalid entry 0 in condlist: should be boolean ndarray</code> in this line <code>df['result'] = np.select(masks, vals)</code></span>
<span class="comment-copy">@RahulAgarwal - It seems data related error, are data confidental?</span>
<span class="comment-copy">Not that much..I can mask!!</span>
<span class="comment-copy">@RahulAgarwal - So you can share link of data by dropbox, gdocs or similar or send data to my email from my profile.</span>
<span class="comment-copy">@anky_91 - not always, many my solutions was removed, because I was wrong...</span>
