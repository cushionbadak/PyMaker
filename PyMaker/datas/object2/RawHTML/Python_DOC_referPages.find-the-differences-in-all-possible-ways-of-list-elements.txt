<div class="post-text" itemprop="text">
<p>I have list of ascending numbers in a column:</p>
<pre><code> 45
 59 
 68 
 79 
 89
 99
</code></pre>
<p>I want the differences between each number in following pattern.</p>
<pre><code>Difference between first consecutive:
    59 - 45
    68 - 59
    79 - 68
    89 - 79
    99 - 89

Difference between second consecutive:
    68 - 45
    79 - 59
    89 - 68
    99 - 79

Difference between third consecutive:
    79 - 45

And so on...
</code></pre>
<p>I tried </p>
<pre><code> with open("file.xls", 'r', newline='') as report: 
     reader = csv.reader(report, delimiter='\t' )                                             
     for row in reader:                                                                       
         list5 = []                                                                           
         if row[0] == "chr5":                                                                 
             list5.append(row[1])                                                             
</code></pre>
<p>After appending all the values in the list I tried to find the difference but only for first consecutive elements</p>
<pre><code>v = [list5[i+1]-list5[i] for i in range(len(list5)-1)]  
</code></pre>
<p>I am expecting all the output values in a single list.                                                           </p>
</div>
<div class="post-text" itemprop="text">
<p>This sounds like a perfect opportunity for <code>zip</code>.</p>
<p>For example, the following code loops through two separate versions of your <code>list5</code> list: one for the first (N-1) elements, and one for the 2nd through Nth element:</p>
<pre><code>result = []
for element_i, element_j in zip(list5[1:], list5[:-1]):
   result.append(element_i - element_j)
</code></pre>
<p>You can get the same in a list comprehension:</p>
<pre><code>result = [(element_i - element_j) for element_i, element_j in zip(list5[1:], list5[:-1])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use two <code>for</code> one for calculate difference and one for increase the value of distance between them like this:  </p>
<pre><code>[[list5[i+j]-list5[i] for i in range(len(list5)-j)] for j in range(1, len(list5))]
# [[14, 9, 11, 10, 10], [23, 20, 21, 20], [34, 30, 31], [44, 40], [54]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Alternative approach with a while and for loop that might be more easily understandable even if it is not as optimal:</p>
<pre><code>l = [45, 59, 68, 79, 89, 99]
differences = []
max_diff = len(l) - 1
diff = 1
while diff &lt;= max_diff:
  print(f"Consecutive elements with {diff} difference")
  for i in range(diff, len(l)):
    print(f"{l[i]} - {l[i-diff]} = {l[i]-l[i-diff]}")
    differences.append(l[i]-l[i-diff])
  diff += 1
print(f"differences: {differences}")
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Consecutive elements with 1 difference
59 - 45 = 14
68 - 59 = 9
79 - 68 = 11
89 - 79 = 10
99 - 89 = 10
Consecutive elements with 2 difference
68 - 45 = 23
79 - 59 = 20
89 - 68 = 21
99 - 79 = 20
Consecutive elements with 3 difference
79 - 45 = 34
89 - 59 = 30
99 - 68 = 31
Consecutive elements with 4 difference
89 - 45 = 44
99 - 59 = 40
Consecutive elements with 5 difference
99 - 45 = 54
differences: [14, 9, 11, 10, 10, 23, 20, 21, 20, 34, 30, 31, 44, 40, 54]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need all results in one list you can use the function <code>combinations()</code>:</p>
<pre><code>from itertools import combinations, starmap
from operator import sub

l = [45, 59, 68, 79, 89, 99]

l_ = sorted(l, reverse=True)
list(starmap(sub, combinations(l_, 2)))
# [10, 20, 31, 40, 54, 10, 21, 30, 44, 11, 20, 34, 9, 23, 14])
</code></pre>
<p>or</p>
<pre><code>list(map(abs, starmap(sub, combinations(l, 2))))
# [14, 23, 34, 44, 54, 9, 20, 30, 40, 11, 21, 31, 10, 20, 10]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This can be solved using two loop, outer loop will pick one element of list, inner loop will calculate the difference for outer value with all other items of list:</p>
<pre><code>given_list=[45,59,68,79,89,99]
for i,v in enumerate(given_list):
    for j in range(i+1,len(given_list),1):
        print('{}-{} is:{}'.format(given_list[j],v,given_list[j]-v))
</code></pre>
</div>
<span class="comment-copy">Do you need all values in one list or grouped in sublists?</span>
<span class="comment-copy">@Mykola In one list only</span>
<span class="comment-copy">@shash678 which sublist is not in the output ?</span>
<span class="comment-copy">@shash678 oops ! my list5 was <code>[45,59,68,79,89] </code> not <code>[45,59,68,79,89,99]</code> I fix the output now.</span>
