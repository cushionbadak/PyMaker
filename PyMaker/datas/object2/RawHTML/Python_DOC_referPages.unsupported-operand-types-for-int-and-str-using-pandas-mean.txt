<div class="post-text" itemprop="text">
<p>When I try to get the mean of one of my data frame's columns it shows the error:</p>
<pre><code>TypeError: unsupported operand type(s) for +: 'int' and 'str'
</code></pre>
<p>Here is the code I have:</p>
<pre><code>import pandas as pd

import numpy as np

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/autos/imports-85.data"

df = pd.read_csv(url, header = None, )

headers = ["symboling","normalized-losses","make","fuel-type","aspiration","num-of-doors","body-style","drive-wheels","engine-location","wheel-base","lenght","width","height","curb-weight","engine-type","num-of-cylinders","engine-size","fuel-system","bore","stroke","compression-ratio","horsepower","peak-rpm","city-mpg","highway-mpg","price"]

df.columns = headers

df.replace('?',np.nan, inplace=True)

mean_val = df['normalized-losses'].mean()

print(mean_val)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert the column data type to numeric with pd.to_numeric(). If you use the option errors='coerce' then it will automatically replace non-numeric characters with NaN.</p>
<pre><code>mean_val = pd.to_numeric(df['normalized-losses'], errors='coerce').mean()

print(mean_val)

&gt; 122.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Adding onto Nathaniel's answer, you have a mix of <code>float</code> and <code>str</code>. You can see this if you</p>
<pre><code>print(df['normalized-losses'].apply(type))
</code></pre>
<p>Which will return</p>
<pre><code>0      &lt;class 'float'&gt;
1      &lt;class 'float'&gt;
2      &lt;class 'float'&gt;
3        &lt;class 'str'&gt;
4        &lt;class 'str'&gt;
</code></pre>
<p>As your error message says, you need to make all of your data of the <code>float</code> type. You can either use <code>pd.to_numeric</code> as Nathaniel suggested or you can alternatively use</p>
<pre><code>df['normalized-losses'] = df['normalized-losses'].astype('float')
mean_val = df['normalized-losses'].mean()
print(mean_val)
</code></pre>
<p><strong>Output</strong></p>
<blockquote>
<p>122.0</p>
</blockquote>
<p>If you are only interested in the normalized-losses column and know that all of your strings can be converted properly (in this case, I believe they can since they are all strings of numbers such as ‘130’), you could just do this. If you are going to use the rest of the data and want to have all numeric strings converted, then use Nathaniel's implementation.</p>
</div>
<span class="comment-copy">What's the data type for <code>df['normalized-losses']</code>? My guess is it got set to <code>chr</code> by default since it had strings (the <code>"?"</code>'s) in it and now you have a normal <code>int + str</code> error</span>
<span class="comment-copy">Thanks ! It worked perfectly.</span>
<span class="comment-copy">No problem! Glad to help.</span>
<span class="comment-copy">Thanks for the shout-out! That is also a useful approach. <a href="https://stackoverflow.com/questions/40095712/when-to-applypd-to-numeric-and-when-to-astypenp-float64-in-python">Here is a question</a> that looks at the differences between pd.to_numeric and df.astype.</span>
<span class="comment-copy">@Nathaniel that’s a good reference. Thanks!</span>
