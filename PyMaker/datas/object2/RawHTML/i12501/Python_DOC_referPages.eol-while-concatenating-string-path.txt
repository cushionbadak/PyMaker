<div class="post-text" itemprop="text">
<p>I need to concatenate specific folder path with a string, for example:</p>
<p>mystring = "blablabla"<br/>
path = "C:\folder\whatever\"</p>
<p>printing (path + mystring) should return:
<strong>C:\folder\whatever\blablabla</strong></p>
<p>However I always get the EOL error, and it's a must the path to have the slash like this: \ and not like this: /</p>
<p>Please show me the way, I tried with r' it's not working, I tried adding double "", nothing works and I can't figure it out.</p>
</div>
<div class="post-text" itemprop="text">
<p>Either use escape character <code>\\</code> for <code>\</code>:</p>
<pre><code>mystring = "blablabla"
path = "C:\\folder\\whatever\\"

conc = path + mystring
print(conc)
# C:\folder\whatever\blablabla
</code></pre>
<p>Or, make use of raw strings, however moving the last backslash from end of <code>path</code> to the start of <code>myString</code>:</p>
<pre><code>mystring = r"\blablabla"
path = r"C:\folder\whatever"

conc = path + mystring
print(conc)
# C:\folder\whatever\blablabla
</code></pre>
<p>The reason why your own raw string approach didn't work is that a raw strings may not end with a single backslash:</p>
<blockquote>
<p>Specifically, a raw literal cannot end in a single backslash (since
  the backslash would escape the following quote character).</p>
</blockquote>
<p>From </p>
<ul>
<li><a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Always use <code>os.path.join()</code> to join paths and the <code>r</code> prefix to allow single back slashes as Windows path separators:</p>
<p><code>r"C:\folder\whatever"</code></p>
<p>Now, now trailing back slash is needed:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; mystring = "blablabla"
&gt;&gt;&gt; path = r"C:\folder\whatever"
&gt;&gt;&gt; os.path.join(path, mystring)
'C:\\folder\\whatever\\blablabla'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two things.</p>
<p>First, with regards to the EOL error, my best guess - without access to the actual python session - is that python was complaining because you have an unterminated string caused by the final <code>"</code> character being escaped, which will happend even if the string is prefixed with <code>r</code>. My opinion is that you should drop the prefix and just correctly espace all backslashes like so: <code>\\</code>.</p>
<p>In your example, <code>path</code>then becomes <code>path = "C:\\folder\\whatever\\"</code></p>
<p>Secondly, instead of manually concatenating paths, you should use <a href="https://docs.python.org/2/library/os.path.html#os.path.join" rel="nofollow">os.path.join</a>:</p>
<pre><code>import os
mystring = "blablabla"
path = "C:\\folder\\whatever"
print os.path.join(path, mystring)

## prints C:\\folder\\whatever\\blablabla
</code></pre>
<p><strong>Note</strong> that <code>os.path</code> will use the path convetions for the operating system where the application is running, so the above code will produce erroneous/unexpected results if you run it on, say, Linux. Check the notes on the top of the page that I have linked for details.</p>
</div>
<span class="comment-copy">Don't end paths with a backslash. If you use <code>os.path.join</code>, you'll never need to anyway.</span>
<span class="comment-copy">Thank man it really helped me !</span>
<span class="comment-copy">Thank you very much for explaining !</span>
