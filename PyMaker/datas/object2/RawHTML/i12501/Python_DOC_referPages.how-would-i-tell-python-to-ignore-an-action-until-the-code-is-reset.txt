<div class="post-text" itemprop="text">
<p>I asked a question earlier and got a quick and perfect answer, so I thought I would ask for advice on the next part of my project.</p>
<p>Basically I am trying to create a "game show buzzer" type system that simply changes the background color of my window depending on who "buzzes" in first (by pressing either the right or left arrow).
So if left is pressed the background turns green, if right is pressed, the background turns blue. However, being VERY new to python and programming in general, I'm struggling to figure out how to tell the program to ignore the second "buzzer". In other words if the left arrow is pressed first, I want it to ignore the right arrow until I "reset it". I currently have that as me pressing the down arrow to turn the background black again.</p>
<p>Sorry for the super long question, but does anyone have any ideas to how I could do this? Or direct me to some sort of tutorial or information that I could read up on to figure it out?</p>
<p>Here is my current code:</p>
<pre><code>    from Tkinter import *

class FullScreenApp:
    def __init__(self, master):
        self.master=master
        pad=3
        self._geom='200x200+0+0'
        master.geometry("{0}x{1}+0+0".format(
            master.winfo_screenwidth()-pad, master.winfo_screenheight()-pad))
        master.bind('&lt;Escape&gt;',self.toggle_geom)
        master.bind('&lt;Left&gt;', self.LeftArrowKey)
        master.bind('&lt;Right&gt;', self.RightArrowKey)
        master.bind('&lt;Down&gt;', self.DownArrowKey)
    def toggle_geom(self,event):
        geom=self.master.winfo_geometry()
        print(geom,self._geom)
        self.master.geometry(self._geom)
        self._geom=geom
    def LeftArrowKey(self,event): 
        self.master.configure(background="green")
    def RightArrowKey(self, event):
        self.master.configure(background="blue")
    def DownArrowKey(self, event):
        self.master.configure(background="black")

root=Tk()
root.configure(background="black")
root.title("Who buzzed in first?")
app=FullScreenApp(root)
root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This a problem the <a href="https://en.wikipedia.org/wiki/State_pattern" rel="nofollow">State Pattern</a> aims to solve. The idea is to keep track of a "state" that your methods can check to decide what to do. </p>
<p>A convenient way to represent state in Python is through <a href="https://docs.python.org/3/library/enum.html" rel="nofollow">enum</a>.</p>
<pre><code>from enum import Enum
State = Enum("State", "one two")
</code></pre>
<p>Now you can store a member variable in your class to keep track of state.</p>
<pre><code>class MyGame:
    def __init__(self):
        self.state = State.one
</code></pre>
<p>And design your methods around the state</p>
<pre><code>def action(self):
    if self.state is State.one:
        # Do stuff, state transition
    elif self.state is State.two:
        # Do stuff, state transition
</code></pre>
<p>In your example, you could have a state for before and after the buzzer is pressed. That way you can design your buzzer methods to take action only when the game is in the "before buzzer" state. </p>
</div>
<span class="comment-copy">The left and right arrow key callbacks should check the background color before changing it.  Or set new attribute to self.first to None and conditionally change it to 'right' or 'left'. Methods <code>black</code> and ``DownArrowKey` are identical and therefore redundant.</span>
<span class="comment-copy">Thanks for the comment! I had made the "black" method to try another idea and forgot to remove it! Thanks for pointing it out :)  I am very new to python. How would I tell the keys to check the background color? Thanks so much for your help!</span>
<span class="comment-copy">I'm getting an error now saying there isn't a module titled "enum". I have python 3.5 and from everything I've read, the enum module is included? Am I missing something? Thanks!</span>
