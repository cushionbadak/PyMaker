<div class="post-text" itemprop="text">
<p>My application has been failing on OSX when using multiprocessing and tkinter. The minimum example is as easy as follows:</p>
<pre><code>import multiprocessing
from tkinter import Spinbox #Delete this line and it works

class Gui(multiprocessing.Process):

    def run(self):
        self.start_window()
        self.root.mainloop()

    def start_window(self):
        from tkinter import Tk
        self.root = Tk()
        self.root.title('Test')

g = Gui()
g.start()
</code></pre>
<p>When trying to execute this snippet mac fails with the following report:</p>
<blockquote>
<p>Process:               Python [1453]
  Path:                  &gt; /Library/Frameworks/Python.framework/Versions/3.4/Resources/Python.app/Contents/MacOS/Python
  Identifier:            Python
  Version:               3.4.4 (3.4.4)
  Code Type:             X86-64 (Native)
  Parent Process:        Python [1452]
  Responsible:           Terminal [395]
  User ID:               501</p>
<p>Date/Time:             2016-01-18 18:33:23.281 +0100
  OS Version:            Mac OS X 10.11.2 (15C50)
  Report Version:        11
  Anonymous UUID:        49081BD5-7C1E-52F6-E5D9-F9F41BA8DFE5</p>
<p>Time Awake Since Boot: 6200 seconds</p>
<p>System Integrity Protection: enabled</p>
<p>Crashed Thread:        0  Dispatch queue: com.apple.main-thread</p>
<p>Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
  Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000110</p>
<p>VM Regions Near 0x110:
  --&gt; 
      __TEXT                 0000000100000000-0000000100001000 [    4K] r-x/rwx SM=COW  /Library/Frameworks/Python.framework/Versions/3.4/Resources/Python.app/Contents/MacOS/Python</p>
<p>Application Specific Information:
  <strong>* multi-threaded process forked *</strong>
  crashed on child side of fork pre-exec</p>
<p>Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
  0   libdispatch.dylib                 0x00007fff99f0fd69 _dispatch_async_f_slow + 391</p>
<p>1   libxpc.dylib                      0x00007fff8fb8daa0 xpc_connection_resume + 192</p>
<p>2   com.apple.CoreFoundation          0x00007fff9bbb69d1 _CFPrefsWithDaemonConnection + 353</p>
</blockquote>
<p>Deleting the Spinbox import (not used in the code) makes everything run. The same problem appears on python 3.4.4 and 2.7 (changing tkinter to Tkinter)</p>
<p>Removing the multiprocessing module and making everything run on the same process also makes the problem disappear.</p>
<p>My guess is that I'm violating some Tk/Tcl constrain, but I haven't found anything reading the docs about this, also the fact that this only happens with Spinbox and not with Entry or other widgets is suspicious. </p>
</div>
<div class="post-text" itemprop="text">
<p>I managed to make it work, for some reason tkinter wants to be imported in the same Thread/Process that its executing from.</p>
<p>When extending multiprocess.Proccess the new process code is inside the run() method, the init is executed on the parent process. Therefore changing all the imports to be locally done on the run method fixes the problem.</p>
<p>The example code looks as follows:</p>
<pre><code>import multiprocessing

class Gui(multiprocessing.Process):

    def run(self):
        from tkinter import Spinbox # or Tk, or * ....
        self.start_window()
        self.root.mainloop()

    def start_window(self):
        from tkinter import Tk
        self.root = Tk()
        self.root.title('Test')

g = Gui()
g.start()
</code></pre>
<p>Now my application works on Windows, Linux and Mac.</p>
</div>
<div class="post-text" itemprop="text">
<p>When I run your code from IDLE editor, on Windows, there is no error, but no tk box either, just the '&gt;&gt;&gt;' prompt in Shell.  When I put the end of the code under an if <strong>name</strong> clause, as specific in the <a href="https://docs.python.org/3/library/multiprocessing.html#the-process-class" rel="nofollow">multiprocessing doc</a></p>
<pre><code>if __name__ == '__main__':
   g = Gui()
   g.start()
</code></pre>
<p>a tk box appears. The same is true with only <code>g.start()</code> so protected. Try one or both versions on your Mac. I don't know if this is the only problem on OSX, but it will at least let you start with something that runs on other systems.</p>
</div>
<span class="comment-copy">Before we can help, we have to know why multiprocessing is used instead of after. In the program, what do you expect  g.start() to do?  You have not given it any target to execute, and it only executes after mainloop is finished.  And how could you execute more than one Process using this technique, so multiprocessing would not be necessary.  A spinbox is just an Entry with a limited number of values that can be chosen, and so would so not require a separate process.  It appears that the problem occurs because of poor technique and if that is true, then you have to acquire better techniques.</span>
<span class="comment-copy">Doug Hellmann's multiprocessing basics <a href="https://pymotw.com/2/about.html" rel="nofollow noreferrer">pymotw.com/2/about.html</a> may be of some help.</span>
<span class="comment-copy">The example is the minimum python program that shows the problem, in reality I have 9 processes doing different things communicating through ZMQ. I did this in order to overcome the GIL limitation.  As Gui is a subclass of Process when I call start() Process arranges everything to execute the run() method of Gui in a new Process. There are many examples using target but you can also find subclassing works (and is more OO in my opinion)</span>
<span class="comment-copy">My doubts come because just importing (and not actually using) Spinbox triggers the error suggesting that the module has direct instructions outside <b>init</b> wich looks not very pythonic. But this also occurs under very constrained situation: Mac OSX using default launch method, using forserver or spawn launch methods seem to work, using linux or windows seems to work.</span>
<span class="comment-copy">When executing the script from the commandline the if <b>name</b> line makes no difference, I can run the code on windows and linux correctly but mac still gives the error.  I don't have IDLE to test but the problem is still there.</span>
