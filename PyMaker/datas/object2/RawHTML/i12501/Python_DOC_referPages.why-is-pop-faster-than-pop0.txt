<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/195625/what-is-the-time-complexity-of-popping-elements-from-list-in-python">What is the time complexity of popping elements from list in Python?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>Shouldn't they both be <code>O(1)</code>, as popping an element from any location in a Python list involves destroying that list and creating one at a new memory location? </p>
</div>
<div class="post-text" itemprop="text">
<p>Python's <code>list</code> implementation uses a dynamically resized C <code>array</code> under the hood, removing elements <em>usually</em> requires you to move elements following after up to prevent gaps.</p>
<p><code>list.pop()</code> with no arguments removes the <em>last</em> element. Accessing that element can be done in constant time. There are no elements following so nothing needs to be shifted.</p>
<p><code>list.pop(0)</code> removes the <em>first</em> element. <em>All</em> remaining elements have to be shifted up one step, so that takes O(n) linear time.</p>
</div>
<div class="post-text" itemprop="text">
<p>To add to Martijn's answer, if you want a datastructure that has constant time pops at both ends, look at <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow"><code>collections.deque</code></a>.</p>
</div>
<span class="comment-copy"><code>pop</code> of what??</span>
<span class="comment-copy">@thefourtheye <i>in a python list</i></span>
<span class="comment-copy">Lists are mutable.</span>
