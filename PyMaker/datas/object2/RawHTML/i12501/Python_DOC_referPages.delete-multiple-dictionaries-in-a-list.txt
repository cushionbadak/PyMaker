<div class="post-text" itemprop="text">
<p>I have been trying to delete multiple dictionaries in a list but I can only delete one at a time. </p>
<p>Below is the main code I am working on. Records is the list of dictionaries. I want to delete dictionaries that have 0 in them.</p>
<pre><code>Records = [{'Name':'Kelvin','Price': 0},{'Name': 'Michael','Price':10}]
</code></pre>
<p>I want to delete dictionaries with Prices of 0</p>
<pre><code>def deleteUnsold(self):
    for d in records:
        for key, value in d.items():
            if d['Price'] == 0:
                records.remove(d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> with an <code>if</code> condition</p>
<pre><code>&gt;&gt;&gt; Records = [{'Name':'Kelvin','Price': 0},{'Name': 'Michael','Price':10}]
&gt;&gt;&gt; [i for i in Records if i['Price'] != 0]
[{'Price': 10, 'Name': 'Michael'}]
</code></pre>
<p>Check out <a href="https://stackoverflow.com/questions/4260280/python-if-else-in-list-comprehension">if/else in Python's list comprehension?</a> to learn more about using a conditional within a list 
    comprehension. </p>
<hr/>
<p>Note that [as mentioned <a href="https://stackoverflow.com/questions/34763208/delete-multiple-dictionaries-in-a-list/34763252?noredirect=1#comment57271724_34763252">below</a>] you can also leave out checking for the value <code>0</code>. However this also works if <code>Price</code> is <code>None</code>, hence you may use the first alternative if you are not sure of the data type of the value of <code>Price</code></p>
<pre><code>&gt;&gt;&gt; [i for i in Records if i['Price']]
[{'Price': 10, 'Name': 'Michael'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow">filter</a>:</p>
<pre><code>print filter(lambda x:x['Price']!=0,Records)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Okay, generally speaking you shouldn't remove items from a list you're iterating for, because that will probable make you miss some items of the list.</p>
<p>Now, about some other answer spoken here, yes, they work, but strictly speaking they're not removing/deleting items from the list: they're creating a new list and replacing the old variable with a new list.</p>
<p>What could be done:</p>
<pre><code>for d in list(records):
    if d['Price'] == 0:
        records.remove(d)

for d in reversed(records):
    if d['Price'] == 0:
        records.remove(d)

for idx in range(len(records)-1,-1,-1):
    if records[idx]['Price'] == 0:
        records.pop(idx)
</code></pre>
<p>I like this one, though:</p>
<pre><code>for d in records[::-1]:
    if d['Price'] == 0:
        records.remove(d)
</code></pre>
</div>
<span class="comment-copy">What does the for-loop <code>for key, value in d.items()</code> do?</span>
<span class="comment-copy">its meant to loop through the keys and values in the dictionaries @MrHug</span>
<span class="comment-copy">I can see that, but you use neither <code>key</code> nor <code>value</code> in the innards of the <code>for-loop</code>, making the loop quite useless ;)</span>
<span class="comment-copy">Very true @MrHug</span>
<span class="comment-copy">You can probably omit the <code>is not 0</code> part (and I would've used <code>!= 0</code> instead, as I trust equality more than I trust integer interning).</span>
<span class="comment-copy">@TigerhawkT3 In a moment</span>
<span class="comment-copy">I am not really conversant with list comprehension. How do I then add the delete statement?</span>
<span class="comment-copy">@MrKay - Read through the provided link on list comprehension.</span>
<span class="comment-copy">Exactly @MrKay You do not need a delete statement when you are using a list comprehension. When you use a list comp you create a new list by selecting a few items from the original iterator. So you are not deleting anything from the original list. As mentioned in the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">docs that I have linked in the answer</a>, it is a shortened form of writing a loop.</span>
<span class="comment-copy">Why this downvote? Doesn't it work?</span>
<span class="comment-copy">It is considered 'less'  pythonic, and list comprehension should be preferred. Also be careful that filter in python 3 returns an iterator and not a list.</span>
<span class="comment-copy">Please refer to these two deleted answers <a href="http://i.stack.imgur.com/anHx0.png" rel="nofollow noreferrer">i.stack.imgur.com/anHx0.png</a> for a complete discussion of your solution. Thanks</span>
