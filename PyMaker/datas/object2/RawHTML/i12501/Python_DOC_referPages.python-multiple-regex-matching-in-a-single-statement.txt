<div class="post-text" itemprop="text">
<p>I have a large Python string as shown below.</p>
<pre><code>large_string = "The MIT License (MIT)\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a ...."
</code></pre>
<p>I want to replace "[year]" in the string with current year and "[fullname]" with a user provided name. I am using the re library in python to do this task.</p>
<pre><code>import re
import datetime

def pattern_replace(large_string, name):
    year = datetime.now().year
    large_string = re.sub('\[year\]', str(year), large_string)
    large_string = re.sub('\[fullname\]', name, large_string)
    return large_string
</code></pre>
<p>But I think it's not the appropriate way. I have never really used regex matching before but I think there should be a more Pythonic way to combine the two re.sub statements.</p>
</div>
<div class="post-text" itemprop="text">
<p>The task is much simpler if you simply do it with two regular expressions, rather than one.</p>
<p>If you combine them into one, you make it more fragile (i.e. dependent on the ordering of the two things), and the regular expression needs to be more complex.</p>
<p>You could do something like:</p>
<pre><code>large_string = re.sub('\[year\](.*?)\[fullname\]', str(year) + '\g&lt;1&gt;' + name, large_string)
</code></pre>
<p>Ask yourself which you find easier to read, though. I would recommend going with that option.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you ensure that the string is rewritten to use <code>{year}</code> and <code>{fullname}</code>, you can then use the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>.format()</code></a> method to fill them in:</p>
<pre><code>from datetime import datetime

def pattern_replace(large_string, name):
    return large_string.format(
        year=datetime.now().year,
        name=name,
    )
</code></pre>
</div>
<span class="comment-copy">Thanks for the suggestion. It makes sense to use the first approach as code readability is really important.</span>
