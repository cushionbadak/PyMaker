<div class="post-text" itemprop="text">
<p>I run the following python code.</p>
<pre><code>class A():
    def __init__(self,l=[]):
        self.k = l
    a = A()
    b = A()
    a.k.append(5)
    print id(a.k) == id(b.k)
    print b.k
</code></pre>
<p>The result is:</p>
<pre><code>True
[5]
</code></pre>
<p>I don't know <em>why</em> a.k and b.k have the same memory address.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because that empty list you're assigning to <code>l</code> is created <em>once</em> when the function is <em><a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" rel="nofollow">defined</a>,</em> not each time the function is called.</p>
<p>Hence <code>l</code> for both classes will point to the same list and therefore changing one will change the other (or, more correctly, changing one will change the <em>only one</em>).</p>
<p>If you want to ensure each object of the class gets its <em>own</em> list, simply use the slicing method:</p>
<pre><code>self.k = l[:]
</code></pre>
</div>
<span class="comment-copy">Removed totally superfluous <code>k = 1</code> and reformatted it to look nicer but mostly so it would compile :-) And, please, for the love of whatever god(s) you believe in, consider moving to Python3 - it's <i>so</i> much better.</span>
