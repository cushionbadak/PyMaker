<div class="post-text" itemprop="text">
<p>Recently when adding the debugger to my python 2.7.10 code, I get this message:</p>
<pre><code>Traceback (most recent call last):
  File "/Users/isaachess/Programming/vivint/Platform/MessageProcessing/vivint_cloud/queues/connectors/amqplib_connector.py", line 191, in acking_callback
    callback(message.body)
  File "/Users/isaachess/Programming/vivint/Platform/MessageProcessing/vivint_cloud/queues/consumable_message_queue.py", line 32, in deserialized_callback
    self._callback_method(msg)
  File "/Users/isaachess/Programming/vivint/Platform/BusinessLogic/businesslogic/util/statsd_util.py", line 95, in _time_func
    retVal = f(*args, **kwargs)
  File "/Users/isaachess/Programming/vivint/Platform/MessageProcessing/vivint_cloud/net/router.py", line 226, in handle
    try:
  File "/Users/isaachess/Programming/vivint/Platform/MessageProcessing/vivint_cloud/net/router.py", line 226, in handle
    try:
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.py", line 49, in trace_dispatch
    return self.dispatch_line(frame)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/bdb.py", line 68, in dispatch_line
    if self.quitting: raise BdbQuit
BdbQuit
</code></pre>
<p>This is after inserting the lines:</p>
<p><code>import pdb; pdb.set_trace()</code></p>
<p>in the code.</p>
<p>I cannot figure out why this is happening. I've read up on Bdb and Bdbquit, but cannot figure out why this is happening in my code. Can anyone provide me with some hints of why this happens in general? I <em>really</em> want to get the debugger working again.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you continue from the <code>(pdb)</code> prompt and allow your code to finish normally, I wouldn't expect output like the traceback you indicated, but if you quit <code>pdb</code>, with the <code>quit</code> command or ^D (EOF), a traceback like that occurs because there is nothing to catch the <code>BdbQuit</code> exception raised when the debugger quits. In <code>bdb.py</code> <code>self.quitting</code> gets set to <code>True</code> by the <code>set_quit</code> method (and by <code>finally</code> clauses in the various run methods). Dispatch methods called by <code>trace_dispatch</code> <code>raise BdbQuit</code> when <code>self.quitting</code> is <code>True</code>, and the typical <code>except:</code> clause for <code>BdbQuit</code> is a simple <code>pass</code> statement; <code>pdb</code> inherits all of that from <code>gdb</code>.</p>
<p>In short, exception handling is used to disable the system trace function used by the debugger, when the debugger interaction finishes early.</p>
<p>One way to avoid that traceback altogether is to use <code>pdb</code> differently. Rather than calling <code>pdb.set_trace()</code> from your code (and not handling <code>BdbQuit</code> at all), you can invoke your code within <code>pdb</code> (rather than vice versa), at which point the <code>BdbQuit</code> exception will be handled as intended by pdb. That will also allow you to choose breakpoint locations without modifying your code (using <code>pdb</code>'s <code>break</code> command). Or you can mix the two approaches; run your code under <code>pdb</code>, <code>pdb.set_trace()</code> calls and all, and those calls will be breakpoints that you can remove only by modifying your code.</p>
<p>You can invoke your code within <code>pdb</code> by using the <code>pdb</code> command with your script invocation as its command line arguments, or with <code>python -m pdb</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I ran into this when I left <code>import pdb</code> and a <code>pdb.set_trace()</code> in my production code. When the <code>pdb.set_trace()</code> line was executed, python was waiting for my input to tell it to <code>c</code>ontinue or step into, etc... Because the python code was being called by a web server I wasn't there to press <code>c</code> to continue. After so long (not sure how long) it finally raised the <code>BdbQuit</code> exception.</p>
<p>I didn't have anything setup to catch that exception so it raised a 500 in my web server.</p>
<p>It took me a while to understand that my debug code running in an a daemon/background was causing the issue. I felt silly.</p>
</div>
<div class="post-text" itemprop="text">
<p>Apart from Eirik Fuller answer I would like to add that you can't be using <code>pdb</code> in something thats running in a different process. For debugging you can check this answer: <a href="https://stackoverflow.com/a/23654936/7806805">https://stackoverflow.com/a/23654936/7806805</a> but it seems very hackish or you can make your program run in a single thread. Consult the documentation: <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow noreferrer">https://docs.python.org/3/library/concurrent.futures.html</a>. For multiprocessing issues you might even want to go through <a href="https://www.reddit.com/r/learnpython/comments/46x9sm/why_is_pdbset_trace_crashing_whenever_it_is_in_an/" rel="nofollow noreferrer">https://www.reddit.com/r/learnpython/comments/46x9sm/why_is_pdbset_trace_crashing_whenever_it_is_in_an/</a></p>
<p>Anyways your question lacks much needed context. Please add on to your question. </p>
</div>
<div class="post-text" itemprop="text">
<p>One possible reason is that you are running the <code>Python script in the background</code>. When a process runs in the background, you can't send input to the process via terminal and hence pdb console can't work. Eventually, it raises bdbquit. </p>
</div>
<span class="comment-copy">How do you run your process? My guess is that your process is not attached to a terminal or something like that. Is this a subprocess or something like that?</span>
<span class="comment-copy">@shx2, subprocess? Could somehow the use of <a href="https://pypi.python.org/pypi/luigi" rel="nofollow noreferrer">Luigi</a> cause this?</span>
<span class="comment-copy">I encountered <a href="https://stackoverflow.com/questions/51453619/pdb-crashed-cannot-set-breakpoint">the same issue</a>. Really hope it could be resolved</span>
<span class="comment-copy">it would be great if you could specify possible causes of BdbQuit as pdb doesn't raise it in some scripts.</span>
<span class="comment-copy">this is not the complete answer, there are many other limitations of <code>pdb</code> like it cannot work in a multiprocess pool and so on. You fail to mention those.</span>
<span class="comment-copy">Updated my answer to whoever down voted. If you down voted, please do re read answer and leave an explanation as to why this is not answering the question.</span>
