<div class="post-text" itemprop="text">
<pre><code>s1 = 'GSHMGLYELSASNFELHVAQGDHFIKFFAPWCGHCKALAPTWEQLALGLEHSETVKIGKVDbTQHYELbSGNQVRGYPTLLWFRDGKKVDQYKGKRDLESLREYVESQLQR' 
</code></pre>
<p>This is a string I would like to replace the lowercase letters to a certain uppercase letter, say, 'C'. the command I am using is : </p>
<pre><code>string.replace(s1, s1.lower(), 'C'), 
</code></pre>
<p>problem:the resulting string is still the same as the old one, b is 'b' and not 'C'</p>
</div>
<div class="post-text" itemprop="text">
<p>Your condition is too complex for simple "replace" method. Use regexp instead:</p>
<pre><code>import re    
s1 = "GaHMxLYELmASNFElHVAQG"
s2 = re.sub(r"[a-z]", "C", s1)
print s2
</code></pre>
<p>It will print "GCHMCLYELCASNFECHVAQG"</p>
<p>[a-z] means "any letter from a to z" - add extra lower letters for it for your language, if needed. For example, for russian this pattern will be: [a-zа-я]</p>
</div>
<div class="post-text" itemprop="text">
<p>Currently, you're trying to replace a lowercase copy of the entire string with <code>'C'</code>. You're also seemingly not assigning the result of <code>string.replace</code> with anything, which won't work. <code>replace</code> doesn't modify in place, it returns a new copy of the string with the replacements applied.</p>
<p>You'll need to iterate over the string and replace any lowercase letters.</p>
<pre><code>s1 = 'GSHMGLYELSASNFELHVAQGDHFIKFFAPWCGHCKALAPTWEQLALGLEHSETVKIGKVDbTQHYELbSGNQVRGYPTLLWFRDGKKVDQYKGKRDLESLREYVESQLQR'
replaced_string = ''.join(x if x.isupper() else 'C' for x in s1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>string.replace(s1, s1.lower(), 'C')
</code></pre>
<p>Will replace with 'C' only the <em>whole</em> string </p>
<pre><code>gshmglyelsasnfelhvaqgdhfikffapwcghckalaptweqlalglehsetvkigkvdbtqhyelbsgnqvrgyptllwfrdgkkvdqykgkrdleslreyvesqlqr
</code></pre>
<p>If you want to substitute all the characters with a given property in a string what I suggest is to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regular expressions</a>, in your case it will be:</p>
<pre><code>s2 = re.sub("[a-z]", "C", s1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>s1.lower()</code> is equal to</p>
<pre><code>&gt;&gt;&gt; s1.lower()
'gshmglyelsasnfelhvaqgdhfikffapwcghckalaptweqlalglehsetvkigkvdbtqhyelbsgnqvrgyptllwfrdgkkvdqykgkrdleslreyvesqlqr'
</code></pre>
<p>So <code>string.replace(s1, s1.lower(), 'C')</code> searches string c1 for any occurances of that whole string of lower case characters, and if it finds any then it replaces each one with <code>'C'</code>.</p>
<p>Note that <code>string.replace</code> is also a method on strings themselves ever since Python 2.0 or so, <code>s1.replace(s1.lower(), 'C')</code> would do the exact same thing.</p>
<p>You can use a translation table:</p>
<pre><code>&gt;&gt;&gt; from string import maketrans, lowercase
&gt;&gt;&gt; trans_table = maketrans(lowercase, 'C' * len(lowercase))
&gt;&gt;&gt; s1.translate(trans_table)
</code></pre>
<p>Maketrans takes two strings of characters with equal lengths, and translate() then translates each occurence of a character in the first to its equivalent in the second.</p>
<p><code>lowercase</code> is <code>'abcdefghijklmnopqrstuvwxyz'</code>, and 'C' * len(lowercase) is simply a string of 26 Cs.</p>
</div>
