<div class="post-text" itemprop="text">
<p>I'm trying to make a program telling you how to order a specific number of nuggets, using if and else statements to assign variables. My problem is if one of the first if statements is true, then the program throws an error, because I called a variable that doesn't exist. How can I make My program skip over the rest of the if/else statements if the first one is found to be true?</p>
<pre><code>nuggets = input("How many nuggets do you need? ")

nuggets = int(nuggets)

nuggets20 = nuggets % 20


if nuggets20 == 0:
    n20 = True

else: 
     nuggets10 = nuggets20 % 10

if nuggets10 == 0:
    print(nuggets10)

else: 
    nuggets6 = nuggets10 % 6

if nuggets6 == 0:
    print(nuggets6)

else:
    nuggets4 = nuggets6 % 4



if n20 == True:
    print("nuggets")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is terrible practice, but you could use the arrow of doom approach.</p>
<pre><code>if nuggets20 == 0:
    n20 = True

else: 
     nuggets10 = nuggets20 % 10

    if nuggets10 == 0:
        print(nuggets10)

    else: 
        nuggets6 = nuggets10 % 6

        if nuggets6 == 0:
            print(nuggets6)

        else:
            nuggets4 = nuggets6 % 4



if n20 == True:
    print("nuggets")
</code></pre>
<p>That said, this is all a bit silly isn't it? You're basically implementing a change-maker, so use one of the thousands of approaches that already exist, none of which use random variables that may or may not exist. My favorite is a dictionary.</p>
<pre><code>result = {"20-piece": 0, "10-piece": 0,
          "6-piece": 0, "4-piece": 0}

total_nuggets = nuggets = 128

for mod_num, key in [(20, "20-piece"), (10, "10-piece"),
                     (6, "6-piece"), (4, "4-piece")]:
    result[key], nuggets = divmod(nuggets, mod_num)

if nuggets != 0:
    # you have single nuggets!
</code></pre>
<p>This example leaves:</p>
<pre><code>results == {'10-piece': 0, '4-piece': 0, '6-piece': 1, '20-piece': 6}
</code></pre>
</div>
<span class="comment-copy">Are you familiar with <code>elif</code>? And perhaps with varying indentation levels?</span>
<span class="comment-copy">If you're just trying to find out whether the user's number matches one of several numbers, this is the wrong way to do it. If that's not what you want to do, I have no idea what it is.</span>
<span class="comment-copy"><code>divmod</code> isn't a commonly used builtin, but <a href="https://docs.python.org/3/library/functions.html#divmod" rel="nofollow noreferrer">you can find the docs here</a>. It basically returns the tuple <code>(a//b, a%b)</code></span>
