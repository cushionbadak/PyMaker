<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18283725/how-to-create-a-python-dictionary-with-double-quotes-as-default-quote-format">How to create a Python dictionary with double quotes as default quote format?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I have output of a dictionary inside a list</p>
<pre><code>[{'actors': 'Amy Poehler, Tina Fey, John Cena, Maya Rudolph',
'categories': {'id': 225, 'name': 'Comedy', 'parent_id': 2}, ...
</code></pre>
<p>I want the quotes to be <code>"</code> instead of <code>'</code></p>
<p>The app I'm working on is supposed to return JSON and I believe for json <code>'</code> is a character so it breaks it. Working <a href="http://stage.kenyabuzz.com/rest/events/" rel="nofollow">okay</a>! and <a href="http://stage.kenyabuzz.com/rest/movies/" rel="nofollow">not okay</a>! </p>
<p><strong>UPDATE</strong></p>
<p>I've tried using <code>json.dumps</code> but it's being <a href="http://stage.kenyabuzz.com/rest/movies/" rel="nofollow">escaped</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json lib</a> </p>
<pre><code>import json

array = [{'actors': 'Amy Poehler, Tina Fey, John Cena, Maya Rudolph', ...
print(json.dumps(array))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As yedpodtrzitko mentioned, Django should be serializing the information for you - you don't have to turn it into a string first.</p>
<p><a href="http://www.django-rest-framework.org/tutorial/1-serialization/" rel="nofollow">From the docs</a></p>
<pre><code>content = JSONRenderer().render(serializer.data)
content
# '{"pk": 2, "title": "", "code": "print \\"hello, world\\"\\n", "linenos": false, "language": "python", "style": "friendly"}'
</code></pre>
<p>So it looks like whatever you get back from your serializer should just be a plain ol' dictionary with all of it's contents. I'm assuming that if you did</p>
<pre><code>content = JSONRenderer().render({'quests': [{'Sir Galahad': 'I seek the grail',
                                             'King Arthur': 'I seek the grail'}])
</code></pre>
<p>that it would dump out the appropriate JSON string</p>
</div>
<span class="comment-copy">Are you aware that that makes just about 0 difference?</span>
<span class="comment-copy">Use <code>json.dump()</code></span>
<span class="comment-copy">I dont understand what are you trying to achieve. If you are using DRF, it serializes the output for you, so you dont have to do anything. How does your serializer look like?</span>
<span class="comment-copy">@TimCastelijns apparently the OP wants to get <i>Django</i> to output the proper values. I've fixed the title for them.</span>
<span class="comment-copy">Could you provide a <a href="http://stackoverflow.com/help/mcve">Minimal, Completed, Verifiable Example</a> - it doesn't need to be your full Django app, but some small example beyond whatever the default Django start is.</span>
<span class="comment-copy">tried this and it's being escaped by django rest framework  <code>"results": [         "{\"trailer_youtube_id\": \"vRnhEjP3R-c\", \"plot\": \"Two sisters decide to throw one last house party before their parents sell their family home.\", \"runtime\": \"118 min\", \"description\": \"Two sisters decide to throw one last house party before their parents sell their family home.\", \"videos\": [{\"youtube_id\": \"vRnhEjP3R-c\" ...</code></span>
<span class="comment-copy">Have you tried to output the results to a file ? It shouldn't output the escaped quotes.</span>
<span class="comment-copy"><a href="http://stage.kenyabuzz.com/rest/movies/?device=browser" rel="nofollow noreferrer">stage.kenyabuzz.com/rest/movies/?device=browser</a> it's being delivered by rest framework json convert works but rest framework seems to escape the characters.</span>
<span class="comment-copy">This seems normal, because if it didn't escape the characters, the <code>"{\"trailer_youtube_id\":</code> would be <code>"{"trailer_youtube_id":</code> and <code>trailer_youtube_id</code> would be out of the result and that would result in an error.</span>
<span class="comment-copy">By loading the file into the python json lib, it produces no error, it should the same on your json parser.</span>
