<div class="post-text" itemprop="text">
<p>I have 2 process running and I want them to complete before further down command executes (at the end of script it prints out that the program has ended). How can I make sure the process completes before printing out that it has ended?</p>
<pre><code>from multiprocessing import Process
import datetime

class foo:
    def fun1():
        do sthn

    def fun2():
        do sthn

ob = foo()

if __name__ == '__main__':

    p1 = Process(target = ob.fun1)
    p1.start()
    p2 = Process(target = ob.fun2)
    p2.start()

endTime=datetime.datetime.now()
print 'Program Ending time is: ', endTime
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You would use the <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Process.join" rel="nofollow"><code>.join()</code></a> method, which blocks until the process is complete.</p>
<pre><code>p1.join()
p2.join()
</code></pre>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module waits for processes to complete.</span>
<span class="comment-copy">Are you using the <code>multiprocessing</code> module? It's not clear from your code. If you are, you can call the <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Process.join" rel="nofollow noreferrer"><code>join</code></a> method for each <code>Process</code> to wait until they complete.</span>
<span class="comment-copy">updated the code, yes I am using multiprocessing module</span>
