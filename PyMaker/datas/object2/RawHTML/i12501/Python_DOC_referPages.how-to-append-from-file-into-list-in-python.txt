<div class="post-text" itemprop="text">
<p>I have a sample file called 'scores.txt' which holds the following values:</p>
<pre><code>10,0,6,3,7,4
</code></pre>
<p>I want to be able to somehow take each value from the line, and append it to a list so that it becomes <code>sampleList = [10,0,6,3,7,4]</code>.</p>
<p>I have tried doing this using the following code below,</p>
<pre><code>score_list = []

opener = open('scores.txt','r')

for i in opener:
    score_list.append(i)

print (score_list)
</code></pre>
<p>which partially works, but for some reason, it doesn't do it properly. It just sticks all the values into one index instead of separate indexes. How can I make it so all the values get put into their own separate index?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have CSV data (comma separated). Easiest is to use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> module</a>:</p>
<pre><code>import csv

all_values = []

with open('scores.txt', newline='') as infile:
    reader = csv.reader(infile)
    for row in reader:
        all_values.extend(row)
</code></pre>
<p>Otherwise, split the values. Each line you read is a string with the <code>','</code> character between the digits:</p>
<pre><code>all_values = []

with open('scores.txt', newline='') as infile:
    for line in infile:
        all_values.extend(line.strip().split(','))
</code></pre>
<p>Either way, <code>all_values</code> ends up with a list of <em>strings</em>. If all your values are only consisting of digits, you could convert these to integers:</p>
<pre><code>all_values.extend(map(int, row))
</code></pre>
<p>or</p>
<pre><code>all_values.extend(map(int, line.strip().split(',')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is an efficient way how to do that without using any external package:</p>
<pre><code>with open('tmp.txt','r') as f:
    score_list = f.readline().rstrip().split(",")

# Convert to list of int
score_list = [int(v) for v in score_list]

print score_list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>split</code> on comma on each line and add the returned list to your <code>score_list</code>, like below:</p>
<pre><code>opener = open('scores.txt','r')
score_list = []

for line in opener:
    score_list.extend(map(int,line.rstrip().split(',')))

print( score_list )
</code></pre>
</div>
<span class="comment-copy">You have a <code>list</code>, not an array. The latter is <a href="https://docs.python.org/2/library/array.html" rel="nofollow noreferrer">something different in Python</a>.</span>
<span class="comment-copy">My mistake then.</span>
<span class="comment-copy">Using the first solution that you provided gives me a <code>Line 13 in reader = csv(infile): TypeError: 'module' object is not callable</code> error. Do you know why that may be?</span>
<span class="comment-copy">@TeeKayM: because I'm a numpty and forgot the <code>.reader</code> part.</span>
<span class="comment-copy">Ahh ok, I see it now. Now it works.Thanks!</span>
<span class="comment-copy">Definitely helpful. Can I just ask: What does the '.rstrip()' and '.split() ' functions do? Thanks</span>
<span class="comment-copy">Sure, <code>rstrip</code> function removes line endings and <code>split(",")</code> separates a string on ","</span>
<span class="comment-copy">You should really use <code>score_list.extend()</code> or use <code>score_list += </code> to avoid creating new lists all the time.</span>
<span class="comment-copy">@MartijnPieters Thanks. Updated my answer to use <code>extend</code></span>
