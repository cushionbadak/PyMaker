<div class="post-text" itemprop="text">
<p>I am trying to get the list of three-element tuples from the list <code>[-4, -2, 1, 2, 5, 0]</code> using comprehensions, and checking whether they fulfil the condition <code>sum([] == 0)</code>. The following code works. However, there is no question that there ought to be an easier, much more elegant way of expressing these comprehensions: </p>
<pre><code>[
    (i, j, k) for i in [-4, -2, 1, 2, 5, 0]
              for j in [-4, -2, 1, 2, 5, 0]
              for k in [-4, -2, 1, 2, 5, 0] if sum([i, j, k]) == 0
]
</code></pre>
<p>Output:</p>
<pre><code>[(-4, 2, 2), (-2, 1, 1), (-2, 2, 0), (-2, 0, 2), (1, -2, 1), 
 (1, 1, -2), (2, -4, 2), (2, -2, 0), (2, 2, -4), (2, 0, -2), 
 (0, -2, 2), (0, 2, -2), (0, 0, 0)]
</code></pre>
<p>The question is searching for an expression like <code>(i, j, k) for i, j, k in [-4, -2, 1, 2, 5, 0]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product</code></a> to hide the nested loops in your list comprehension. Use the <code>repeat</code> parameter to set the number of loops over the list (i.e. the number of elements in the tuple):</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; lst = [-4, -2, 1, 2, 5, 0]
&gt;&gt;&gt; [x for x in itertools.product(lst, repeat=3) if sum(x) == 0]
[(-4, 2, 2),
 (-2, 1, 1),
 (-2, 2, 0),
 (-2, 0, 2),
 (1, -2, 1),
 (1, 1, -2),
 (2, -4, 2),
 (2, -2, 0),
 (2, 2, -4),
 (2, 0, -2),
 (0, -2, 2),
 (0, 2, -2),
 (0, 0, 0)]
</code></pre>
</div>
<span class="comment-copy">Is repeted values allowed?</span>
