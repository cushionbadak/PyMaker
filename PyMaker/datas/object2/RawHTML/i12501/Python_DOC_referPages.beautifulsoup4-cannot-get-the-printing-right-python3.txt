<div class="post-text" itemprop="text">
<p>I'm currently in the learning process of Python3, I am scraping a site for some data, which works fine, but when it comes to printing out the p tags I just can't get it to work as I expect.</p>
<pre><code>import urllib
import lxml
from urllib import request
from bs4 import BeautifulSoup



data = urllib.request.urlopen('www.site.com').read()
soup = BeautifulSoup(data, 'lxml')
stat = soup.find('div', {'style' : 'padding-left: 10px';})
dialog = stat.findChildren('p')

for child in dialog:
    childtext = child.get_text()
    #have tried child.string aswell (exactly the same result)
    childlist.append(childtext.encode('utf-8', 'ignore')
    #Have tried with str(childtext.encode('utf-8', 'ignore'))

print (childlist)
</code></pre>
<p>That all works, but the printing is "bytes"</p>
<pre><code>b'This is a ptag.string'
b'\xc2\xa0 (probably &amp;nbsp'
b'this is anotherone'
</code></pre>
<p>Real sample text that is ascii encoded:</p>
<pre><code>b"Announcementb'Firefox users may encounter browser warnings encountering SSL SHA-1 certificates"
</code></pre>
<p>Note that Announcement is p and the rest is 'strong' under a p tag.</p>
<p>Same sample with utf-8 encode</p>
<pre><code>b"Announcement\xc2\xa0\xe2\x80\x93\xc2\xa0b'Firefox users may encounter browser warnings encountering SSL SHA-1 "
</code></pre>
<p>I WISH to get:</p>
<pre><code>"Announcement"
(newline / new item in list)
"Firefox users may encounter browser warnings encountering SSL SHA-1 certificates"
</code></pre>
<p>As you see, the incorrect chars are stripped in "ascii", but as some are <code>&amp;nbsp;</code> that destroys some linebreaks and I have yet to figure out how to print that correctly, also, the b's are still there then!</p>
<p>I really can't figure out how to remove b's and encode or decode properly. I have tried every "solution" that I can google up.</p>
<p>HTML Content = utf-8</p>
<p>I would most rather not change the full data before processing because it will mess up my other work and I don't think it is needed.</p>
<p>Prettify does not work.</p>
<p>Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you're getting output of the form <code>b'stuff'</code> because you are calling <code>.encode()</code>, which returns a <a href="https://docs.python.org/3/library/stdtypes.html#typebytes" rel="nofollow noreferrer">bytes</a> object. If you want to print strings for reading, keep them as strings!</p>
<p>As a guess, I assume you're looking to print strings from HTML nicely, pretty much as they would be seen in a browser. For that, you need to decode the HTML string encoding, as described in <a href="https://stackoverflow.com/questions/2087370/decode-html-entities-in-python-string">this SO answer</a>, which for Python 3.5 means:</p>
<pre><code>import html
html.unescape(childtext)
</code></pre>
<p>Among other things, this will convert any <code>&amp;nbsp;</code> sequences in the HTML string into <code>'\xa0'</code> characters, which are printed as spaces. However, if you want to break lines on these characters despite <code>&amp;nbsp;</code> literally meaning "non-breaking space", you'll have to replace those with actual spaces before printing, e.g. using <code>x.replace('\xa0', ' ')</code>.</p>
</div>
