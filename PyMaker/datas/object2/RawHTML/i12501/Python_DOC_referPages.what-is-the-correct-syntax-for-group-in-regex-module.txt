<div class="post-text" itemprop="text">
<pre><code>import re

phoneNumberRegex = re.compile(r'\d{3}-\d{3}-\d{4}')
mo = phoneNumberRegex.search('My number is 415-55-4242.')
print('Phone number found: ' + mo.group(0))
</code></pre>
<p>This is the method I have used tried to find some mistakes with the code all resulted in this error</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#6&gt;", line 1, in &lt;module&gt;
    print('Phone number found: ' + mo.group(0))
AttributeError: 'NoneType' object has no attribute 'group'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Usage of <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow"><code>MatchObject.group</code></a> is okay.</p>
<p>But, <code>415-55-4242</code> does not match <code>\d{3}-\d{3}-\d{4}</code> because the middle part of the string contains only 2 digits. </p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.search(r'\d{3}-\d{3}-\d{4}', 'My number is 415-55-4242.') # does not match =&gt; None
&gt;&gt;&gt; re.search(r'\d{3}-\d{2}-\d{4}', 'My number is 415-55-4242.') # matches =&gt; MatchObject
&lt;_sre.SRE_Match object; span=(13, 24), match='415-55-4242'&gt;
</code></pre>
<p>To prevent the error, you need to guard the last statement:</p>
<pre><code>phoneNumberRegex = re.compile(r'\d{3}-\d{3}-\d{4}')
mo = phoneNumberRegex.search('My number is 415-55-4242.')
if mo:
    print('Phone number found: ' + mo.group(0))
</code></pre>
<p><strong>UPDATE</strong></p>
<p>If you don't want to match <code>12345-123-12345</code>, you need to use word boundary (<code>\b</code>):</p>
<pre><code>r'\b\d{3}-\d{3}-\d{4}\b'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It works -- group is the right method. However, you need a capturing group in you regex, and the regex is also a bit wrong. Use this code instead:</p>
<pre><code>import re

phoneNumberRegex = re.compile(r'(\d{3}-\d{2}-\d{4})')
mo = phoneNumberRegex.search('My number is 415-55-4242.')
print(mo.group(0))
</code></pre>
</div>
<span class="comment-copy">The result of you search was <code>None</code>, in other words: nothing was found. You have to handle that case, maybe with an <code>if</code> clause.</span>
<span class="comment-copy">It won't find anything -- you need a capturing group: <code>(\d{3}-\d{3}-\d{4})</code></span>
<span class="comment-copy">did you mean <code>\d{2,3}</code> ?</span>
<span class="comment-copy">(r'\d\d\d-\d\d\d\-\d\d\d\d') this was what I meant - format for lookup business numbers in a text.</span>
<span class="comment-copy">@AvinashRaj, I updated the answer to include it. Thanks.</span>
<span class="comment-copy">Thanks it worked</span>
<span class="comment-copy">This also works perfectly.  But what exactly is the capturing group.</span>
<span class="comment-copy">@ragemon actually, that isn't needed, my bad. You can just remove the parentheses in the regex</span>
