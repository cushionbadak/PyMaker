<div class="post-text" itemprop="text">
<p>I am going to read the lines of a given text file and select several chunks of data whose format are (int, int\n) . Every time the number of lines are different so I need a dynamic sized data structure in Python. I also would like to store those chunks in 2D data structures. If you are familiar with MATLAB programming, I'd like to have something like a structure A{n} n = number of chunks of data and each chunk includes several lines of the data mentioned above.
Which type of data structure would you recommend? and how to implement with it?
i.e. A{0} = ([1,2],[2,3],[3,4]) A{1} = ([1,1],[2,2],[5,5],[7,4]) and so on.
Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>A python list can contain lists as well any different data type.</p>
<pre><code>l = []
l.append(2)      # l is now (2)
l.extend([3,2])  # l is now (2,3,2)
l.append([4,5])  # l is now (2,3,2,[4,5])
</code></pre>
<p>list.Append appends whatever it is given as argument to the list
while list.extend makes the given the argument the tail of the list.</p>
<p>I guess you required list would appear somehwhat like this:</p>
<pre><code>l = ([[1,2],[2,3],[3,4]],[[1,1],[2,2],[5,5],[7,4]])
</code></pre>
<p>PS: Here's a link to get you jump start learning python</p>
<p><a href="https://learnxinyminutes.com/docs/python/" rel="nofollow">https://learnxinyminutes.com/docs/python/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just keep in mind that if your are reading data from text file , the format is string , you need to use int() to convert your string to int.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue was resolved with 2 steps appending the list.</p>
<pre><code>import numpy as np
file = ('data.txt')
f = open(file)
i = 0
str2 = '.PEN_DOWN\n'
str3 = '.PEN_UP\n'
A = []
B = []
for line in f.readlines():
    switch_end = False 
    if (line == str2) or (~switch_end):
        if line[0].isdigit():
            A.append(line[:-1])
        elif line == str3:
            switch_end = True
            B.append(A)
            A = []
B.append(A)
f.close()
print(np.shape(A))
print(np.shape(B))
</code></pre>
</div>
<span class="comment-copy">Do you mean standard list <code>A = [ ]</code> and <code>A.append( ([1,2],[2,3],[3,4]) )</code> , <code>A.append( ([1,1],[2,2],[5,5],[7,4]) )</code> ?</span>
<span class="comment-copy">Dear Bruno, I don't think asking question even basic questions is a bad thing. You are not obliged to answer the question that you don't like.</span>
<span class="comment-copy">Thanks furas, I am trying that.</span>
<span class="comment-copy">@Saman:  "This question does not show any research effort" (quoted from the downvote arrow's mouse-over text), thus the downvote(s).  Lists are covered very early in <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">The Python Tutorial</a>.</span>
<span class="comment-copy">You might want to point the OP to the official docs.  <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">Python Tutorial</a>, which <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">introduces lists</a> in Chapter 3 "<a href="https://docs.python.org/3/tutorial/introduction.html" rel="nofollow noreferrer">An Informal Introduction to Python</a>".  The more formal docs are in the Python Standard Library reference, under "<a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">Built-in Types</a>: <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow noreferrer">Sequence Types â€” list, tuple, range</a>".</span>
<span class="comment-copy">I agree, but just to kickstart the understanding, I'd recommend getting a glimpse of the language.</span>
<span class="comment-copy">That is correct, in my original code I have considered that. Thanks my friend !</span>
