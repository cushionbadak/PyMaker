<div class="post-text" itemprop="text">
<p>I'm trying to implement a simple TicTacToe game, but i'm unable to make a shallow copy of a certain list.
Here's a minimal extract from my script, that presents my problem:</p>
<pre><code>SIZE = 3 # size of game board
PLAYERS = (PLAYER, COMPUTER) = "X", "O"

class TicTacToe(list):
    """ Class handling game board """
    def __init__(self, size=SIZE, players=PLAYERS):
        """ Board size defaults to 3 """
        super().__init__([[" " for idx in range(size)] for jdx in range(size)])
        self._size = size

    def winner_move(self, letter, range_):
        """ Determine winner move - range_ members are tuples """
        for tile in range_:
            sim = self[:] # shallow copy of game board for simulation
            sim[tile[0]][tile[1]] = letter
            print("Current board:")
            print(self)
            # code makes some decisions here and continues

    def get_empty(self):
        """ Return empty places on board as a set of (row, col) """
        return {(row, col) for row in range(self._size)\
                for col in range(self._size) if self[row][col] == " "}

board = TicTacToe()
board.winner_move(PLAYER, board.get_empty())
</code></pre>
<p>Although i assign new value only to sim, the change is reflected in the "main" board. I also tried</p>
<pre><code>sim = list(self)
</code></pre>
<p>and</p>
<pre><code>sim = [item for item in self]
</code></pre>
<p>but both give the same result.</p>
<p>Any suggestion what i'm doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/questions/34955253/cant-make-a-shallow-copy-of-a-list-in-python3#comment57643807_34955253">Arpegius' comment</a> is right. You have a nested list. With <code>sim = self[:]</code>, <code>sim = list(self)</code> or <code>sim = [item for item in self]</code> you get a new outer list, but it will be a list of the same references to the inner lists.</p>
<pre><code>sim = [lst[:] for lst in self]
</code></pre>
<p>or </p>
<pre><code>sim = [list(lst) for lst in self]
</code></pre>
<p>would have worked, but</p>
<pre><code>from copy import deepcopy
# ...
sim = deepcopy(self)
</code></pre>
<p>is more elegant and its purpose is easier to comprehend. See <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow noreferrer">its documentation</a>.</p>
</div>
<span class="comment-copy">The TicTacToe is a 2D structure do you really need shallow not deep copy?</span>
<span class="comment-copy">@Arpegius is wright you need deepcopy</span>
<span class="comment-copy">Thank you guys, i learned a lot from you :-)</span>
