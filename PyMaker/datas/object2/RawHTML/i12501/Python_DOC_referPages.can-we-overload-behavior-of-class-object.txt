<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/100003/what-are-metaclasses-in-python">What are metaclasses in Python?</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I know we can overload behavior of instances of a class, e.g. - </p>
<pre><code>class Sample(object):  pass
s = Sample()
print s
&lt;__main__.Sample object at 0x026277D0&gt;
print Sample
&lt;class '__main__.Sample'&gt;
</code></pre>
<p>We can change the  result of <code>print s</code>:</p>
<pre><code>class Sample(object):
  def __str__(self):
    return "Instance of Sample"
s = Sample()
print s
Instance of Sample
</code></pre>
<p>Can we change the result of <code>print Sample</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/reference/datamodel.html#customizing-class-creation" rel="noreferrer">metaclass</a>:</p>
<pre><code>class SampleMeta(type):
    def __str__(cls):
        return ' I am a Sample class.'
</code></pre>
<p>Python 3:</p>
<pre><code>class Sample(metaclass=SampleMeta):
    pass
</code></pre>
<p>Python 2:</p>
<pre><code>class Sample(object):
    __metaclass__ = SampleMeta
</code></pre>
<p>Output:</p>
<pre><code>I am a Sample class.
</code></pre>
<p>A metaclass is the class of class. Its relationship to a class is analogous to that of a class to an instance. The same <code>class</code>statement is used. Inheriting form <code>type</code> instead from <code>object</code> makes it a metaclass. By convention <code>self</code> is replaced by <code>cls</code>.</p>
</div>
