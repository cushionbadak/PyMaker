<div class="post-text" itemprop="text">
<p><code>X</code>, <code>Y</code> and <code>Z</code> are the three coordinates of a cuboid.</p>
<p>Now X=1,Y=1, Z=1 and N=2.</p>
<p>I have to generate a list of all possible coordinates on a 3D grid where the sum of Xi + Yi + Zi is not equal to N. If X=2, the possible values of Xi can be 0, 1 and 2. The same applies to Y and Z.</p>
<p>I have written this below code so far, and it is giving the output as : </p>
<pre><code>[[0, 0, 0]]
</code></pre>
<p>however the expected output is</p>
<pre><code>[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
</code></pre>
<p>Below is my code, what is going wrong in my code?</p>
<pre><code>[[x,y,z] for x in range(X) for y in range(Y) for z in range(Z) if x+y+z != N]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>range</code> is actually a half-closed function. So, the ending value will not be included in the resulting range.</p>
<blockquote>
<p>If X=2, the possible values of Xi can be 0, 1 and 2</p>
</blockquote>
<p>In your code, <code>range(X)</code> will give only <code>0</code> and <code>1</code>, if <code>X</code> is 2. You should have used <code>range(X + 1)</code>.</p>
<pre><code>&gt;&gt;&gt; X, Y, Z, N = 1, 1, 1, 2
&gt;&gt;&gt; [[x,y,z] for x in range(X + 1) for y in range(Y + 1) for z in range(Z + 1) if x+y+z != N]
[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
</code></pre>
<p>You can write the same, with <code>itertools.product</code>, like this</p>
<pre><code>&gt;&gt;&gt; X, Y, Z, N = 1, 1, 1, 2
&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; [list(i) for i in product(range(X + 1), range(Y + 1), range(Z + 1)) if sum(i) != N]
[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another approch with <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product</code></a> and <code>list comprehension</code>:</p>
<pre><code>In [91]: [list(l) for l in it.product([0,1], repeat=3) if sum(l) != 2]
Out[91]: [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    ans=[[i,j,k] for i in range(x+1) for j in range(y+1) for k in range(z+1) if i+j+k !=n]
    print(ans)
</code></pre>
<p>as range function doesn't include the ending value and stopped at (n-1)th position so if we use range(X) here it will result just 0 hence +1 should be used to print the list in lexicographic increasing order.</p>
</div>
<span class="comment-copy">Try to <code>print range(1)</code> and you may see the problem</span>
<span class="comment-copy">Please add explanation around your answer.</span>
<span class="comment-copy">as range function doesn't include the ending value and stopped at (n-1)th position  so if we use range(X) here it will result just 0 hence +1 should be used to print the list in lexicographic increasing order.  @LordWilmore</span>
