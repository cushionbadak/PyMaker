<div class="post-text" itemprop="text">
<p>How are string variables saved in the RAM?</p>
<p>for example: <code>foo = 'abcÇ¶'</code> and <code>s = u'abc\u2119'</code>. </p>
<p>The strings contains UNICODE characters, so should it be and how is it encoded before stored in memory?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming you're asking about CPython, the standard Python implementation.</p>
<p>The Unicode string representation was changed beginning with <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-393-flexible-string-representation" rel="nofollow">Python 3.3</a> as described in <a href="https://www.python.org/dev/peps/pep-0393/" rel="nofollow">PEP 0393</a>. Since then, strings use the same number of bytes for all characters, either 1, 2 or 4, choosing the smallest possible for each string depending on its contents. The specific encodings used are:</p>
<ul>
<li>1 byte per char: Latin-1</li>
<li>2 bytes per char: UCS-2</li>
<li>4 bytes per char: UCS-4</li>
</ul>
<p>Before version 3.3, the Unicode string representation depended on the system, and was usually either UTF-16, UCS-4 or UCS-2, to the best of my understanding. See the above-mentioned <a href="https://www.python.org/dev/peps/pep-0393/" rel="nofollow">PEP 0393</a> and its references for more details. </p>
</div>
<span class="comment-copy">That would depend on the specific Python implementation.</span>
<span class="comment-copy">Since <a href="https://www.python.org/dev/peps/pep-0393/" rel="nofollow noreferrer">PEP 393</a>, the internal representation of unicode text is variable. It used to be UCS-4 by default (there was an flag to use UCS-2 instead if I'm not mistaken). Now it uses an array of elements the same size of the widest Unicode character in the string.</span>
<span class="comment-copy">If the answer does indeed answer your question, please accept it!</span>
