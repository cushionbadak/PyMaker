<div class="post-text" itemprop="text">
<p>Sometimes I see </p>
<pre><code>class Foo(models.Model, NonModelCls):
    pass
</code></pre>
<p>Other times, I see</p>
<pre><code>class Bar(NonModelCls, models.Model):
    pass
</code></pre>
<p>What's the difference between the two and when should I use each over another?</p>
</div>
<div class="post-text" itemprop="text">
<p>It depends on what you have in <code>NonModelCls</code>. Search order for attributes and methods are from left to right (<a href="https://docs.python.org/3/tutorial/classes.html?highlight=inheritence#multiple-inheritance" rel="nofollow">https://docs.python.org/3/tutorial/classes.html?highlight=inheritence#multiple-inheritance</a>).</p>
<p>Let's say you have these classes:</p>
<pre><code>class A:
    def __init__():
        print('A')
        super(A, self).__init__()


class B:
    def __init__():
        print('B')
        super(B, self).__init__()


class C(A,B):
    pass

class D(B,A):
    pass
</code></pre>
<p>Then calling C and D will result in:</p>
<pre><code>&gt;&gt;&gt;C()
A
B
&lt;__main__.C object at 0x7f51d3efe0f0&gt;
&gt;&gt;&gt;D()
B
A
&lt;__main__.D object at 0x7f51d3efe0b8&gt;
</code></pre>
<p>So in your case, if <code>NonModelCls</code> has a method with same name as one of <code>models.Model</code> methods, like <code>save</code>, then it will override <code>Model.save</code> in <code>Bar</code> class, while it gets ignored in <code>Foo</code> class.</p>
</div>
