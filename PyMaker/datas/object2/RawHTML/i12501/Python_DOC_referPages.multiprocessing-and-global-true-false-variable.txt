<div class="post-text" itemprop="text">
<p>I'm struggling to get my head around multiprocessing and passing a global True/False variable into my function.</p>
<p>After get_data() finishes I want the analysis() function to start and process the data, while fetch() continues running. How can I make this work? TIA</p>
<pre><code>import multiprocessing

ready = False


def fetch():
    global ready
    get_data()
    ready = True
    return


def analysis():
    analyse_data()

if __name__ == '__main__':
    p1 = multiprocessing.Process(target=fetch)
    p2 = multiprocessing.Process(target=analysis)
    p1.start()
    if ready:
        p2.start()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should run the two processes and use a shared queue to exchange information between them, such as signaling the completion of an action in one of the processes. </p>
<p>Also, you need to have a join() statement to properly wait for completion of the processes you spawn.</p>
<pre><code>from multiprocessing import Process, Queue
import time

def get_data(q):
  #Do something to get data
  time.sleep(2)
  #Put an event in the queue to signal that get_data has finished
  q.put('message from get_data to analyse_data')

def analyse_data(q):
  #waiting for get_data to finish...
  msg = q.get()
  print msg #Will print 'message from get_data to analyse_data'
  #get_data has finished

if __name__ == '__main__':
  #Create queue for exchanging messages between processes
  q = Queue()
  #Create processes, and send the shared queue to them
  processes = [Process(target=get_data,args(q,)),Process(target=analyse_data,args=(q,))]
  #Start processes
  for p in processes:
    p.start()
  #Wait until all processes complete
  for p in processes:
    p.join()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You example won't work for a few reasons :</p>
<ul>
<li>Process cannot share a piece of memory with each other (you can't change the global in one process and see the change in the other)</li>
<li>Even if you could change the global value, you are checking it too fast and most likely it won't change in time</li>
</ul>
<p>Read <a href="https://docs.python.org/3/library/ipc.html" rel="nofollow">https://docs.python.org/3/library/ipc.html</a> for more possibilities for inter-process-communications </p>
</div>
