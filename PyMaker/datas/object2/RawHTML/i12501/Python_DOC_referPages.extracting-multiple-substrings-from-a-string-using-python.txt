<div class="post-text" itemprop="text">
<p>I have an xml string (which I am fetching from a CSV) here from which I need to identify the values and names from it. The logic I thought is to extract all strings which are in between of <code>&gt;</code> and <code>&lt;/</code> for values and then remove the extracted substring which contains <code>&lt;</code> or <code>&gt;</code></p>
<p>I am yet to think on how I can extract parameter name as well. I am using python.</p>
<p>Below is the xml string that I read from csv file.</p>
<pre><code>&lt;ServiceInstanceUpdateAck xmlns='http://www.loremipsum.com/'&gt;
&lt;Context&gt;
    &lt;Attribute name='Atri1'&gt;A1&lt;/Attribute&gt;
    &lt;Attribute name='Atri2'&gt;A2&lt;/Attribute&gt;
    &lt;Attribute name='Atri3'&gt;A3&lt;/Attribute&gt;
&lt;/Context&gt;
&lt;Operation&gt;DEPROVISION&lt;/Operation&gt;
&lt;Status&gt;SUCCESS&lt;/Status&gt;
&lt;Error message='No Error' majorErrorCode='E_NONE' minorErrorCode='E_NONE'/&gt; 
&lt;Service&gt;
  &lt;Id&gt;11233334&lt;/Id&gt;
&lt;/Service&gt; 
&lt;/ServiceInstanceUpdateAck&gt;
</code></pre>
<p>Any help is appreciated.</p>
<p>Note: This is not a whole xml. It is a post body data that I am fetching from a CSV file. It is a string basically when I fetch it. So I cannot use XML parser here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your data is simply XML you could just use an XML parser, documentation can be found <a href="https://docs.python.org/2/library/xml.etree.elementtree.html" rel="nofollow">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use an XML parser; <a href="https://docs.python.org/3/library/xml.dom.minidom.html" rel="nofollow"><code>xml.dom.minidom</code></a> should suffice:</p>
<pre><code>&gt;&gt;&gt; import xml.dom.minidom
&gt;&gt;&gt; doc = xml.dom.minidom.parseString(xmlString)
&gt;&gt;&gt; for item in doc.getElementsByTagName("Attribute"):
...     print(item.getAttribute("name"))
...     print(item.childNodes[0].wholeText)
Atri1
A1
Atri2
A2
Atri3
A3
</code></pre>
</div>
<span class="comment-copy">This is not a whole xml. This is a post body data of a request that I am fetching from a CSV file. So it is basically a string. and I cannot use XML parser here.</span>
<span class="comment-copy">Why not use the XML parser of the post body data of your request?</span>
<span class="comment-copy">Just added a note in my question which makes it more clear. Not able to use xml parser here.</span>
<span class="comment-copy">You can totally parse XML from a string, at least according to the documentation. That you do not know what the names are is fine, since you can access children recursively and access them using .tag and .attrib</span>
<span class="comment-copy">Can you refer me to some example? I tried doing that with .tag and .attrib but wasn't successful.</span>
<span class="comment-copy"><a href="http://goo.gl/5cOqbF" rel="nofollow noreferrer">here is an example, just hit run in the top left corner</a></span>
<span class="comment-copy">I also want to add that parsing xml with regex is not really possible. (As has been stated many times on SO), here is a rather funny but good read: <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">click</a></span>
<span class="comment-copy">Hi Tim, I thought of using it but the problem is this is just one set of string. I have multiple set of strings which have different values. Using parser with hard-coded tag values will only work for one string and not for others.</span>
<span class="comment-copy">@user2606665: You only need to know the names if you're looking for specific nodes. You can just as easily parse the whole tree recursively, something you can't do with regexes.</span>
<span class="comment-copy">Actually nodes have different names in different strings. They aren't the same for all strings.</span>
<span class="comment-copy">Yes, which makes the case for an XML parser even more. You don't need to know either the names of the nodes or the structure beforehand.</span>
<span class="comment-copy">Alright. I now understand what you're trying to say. I'll try to use xml parser and let you know.</span>
