<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow">The formal syntax</a> for parameters in function definitions is as follows:</p>
<pre><code>parameter_list ::=  (defparameter ",")*                                        #[1]
                    | "*" [parameter] ("," defparameter)* ["," "**" parameter] #[2]
                    | "**" parameter                                           #[3]
                    | defparameter [","] )                                     #[4]
</code></pre>
<p><em>(<code>#[num]</code> added by me for clarity)</em></p>
<p><a href="https://docs.python.org/3/reference/introduction.html#notation" rel="nofollow"><em>Where <code>|</code>, according to the notation, indicates alternatives.</em></a></p>
<p>I can't see how exactly it matches the following function definition:</p>
<pre><code>def foo(a, *, b=10): pass
</code></pre>
<p>The obvious rule where one would suppose a definition of the form <code>def foo(a, *, b=10)</code> would fall under is <code>#[2]</code> which allows for the <code>*</code> notation to seperate keyword-only parameters.  </p>
<p>But the rule for <code>foo</code>, from what I would of thought, would have to be a combination of <code>#[1]</code> and <code>#[2]</code>:</p>
<pre><code>parameter_list ::= (defparameter ",")* "*" [parameter] ("," defparameter)* ["," "**" parameter] 
</code></pre>
<p>Since rule <code>#[1]</code> and <code>#[2]</code> <em>don't seem to match this case solely on their own</em>. </p>
<p>What am I missing here?</p>
</div>
<div class="post-text" itemprop="text">
<p>The formal syntax appears to be missing an opening parenthesis. The last closing one doesn’t match anything, and if you look at <a href="https://docs.python.org/2/reference/compound_stmts.html#function-definitions" rel="nofollow">the Python 2 version</a>, it makes perfect sense:</p>
<pre class="lang-none prettyprint-override"><code>parameter_list ::=  (defparameter ",")*
                    (  "*" identifier ["," "**" identifier]
                    | "**" identifier
                    | defparameter [","] )
</code></pre>
<p>So just read it as:</p>
<pre class="lang-none prettyprint-override"><code>parameter_list ::=  (defparameter ",")*
                    ( "*" [parameter] ("," defparameter)* ["," "**" parameter]
                    | "**" parameter
                    | defparameter [","] )
</code></pre>
<p>Someone probably replaced the <code>(</code> with a <code>|</code> while realigning things.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hmmm, as Pointed out by Ryan, it definitely looks like a documentation bug.</p>
<p>This is how the actual language grammar is defined, for the <a href="https://hg.python.org/cpython/file/v3.5.0/Grammar/Grammar#l27" rel="nofollow">function declaration syntax</a> in Python v3.5.0</p>
<pre class="lang-none prettyprint-override"><code>funcdef: 'def' NAME parameters ['-&gt;' test] ':' suite

parameters: '(' [typedargslist] ')'

typedargslist: (tfpdef ['=' test] (',' tfpdef ['=' test])*
    [',' ['*' [tfpdef] (',' tfpdef ['=' test])* [',' ['**' tfpdef [',']]] | '**' tfpdef [',']]]
  | '*' [tfpdef] (',' tfpdef ['=' test])* [',' ['**' tfpdef [',']]]
  | '**' tfpdef [','])
</code></pre>
<p>Here, <a href="https://hg.python.org/cpython/file/tip/Grammar/Grammar#l35" rel="nofollow"><code>tfpdef</code> is the identifier</a></p>
<pre><code>tfpdef: NAME [':' test]
</code></pre>
<p>and <code>test</code> is the same as the <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-expression" rel="nofollow"><code>expression</code></a></p>
<pre><code>test: or_test ['if' or_test 'else' test] | lambdef
</code></pre>
</div>
<span class="comment-copy">Did you read further down there?  <i>If a parameter has a default value, all following parameters up until the “*” must also have a default value —</i> <b><i>this is a syntactic restriction that is not expressed by the grammar.</i></b></span>
<span class="comment-copy">Doesn't that simply specify that a call of the form <code>def foo(*, a, b=10)</code> is illegal?</span>
<span class="comment-copy">Looks like it’s wrong, unless I’m also missing something. The last closing parenthesis doesn’t have a corresponding opening one.</span>
<span class="comment-copy">@Jim Interesting. I am not sure but I guess it must be #2 somehow. (Will wait for an answer)</span>
<span class="comment-copy">Oh damn, what is the world heading to? Typos in the documentation!</span>
<span class="comment-copy">I’ll try submitting an issue in the morning… but the issue tracker is impossible to search…</span>
<span class="comment-copy">Yup, that would indeed make perfect sense. If they do eventually reply, try and remember to add it to your answer if you can.</span>
