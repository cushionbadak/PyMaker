<div class="post-text" itemprop="text">
<p>Could someone please give me an idea how to get round this little code problem I'm having.</p>
<p>My bit of code:</p>
<pre><code>dictionary = {}      
word_pos_list = []

for unit, object in enumerate(words_list, start = 1):

  if object in dictionary:  
      word_pos_list.append(dictionary[object])    

  else:                                   
      dictionary[object] = unit     
      word_pos_list.append(unit) 
</code></pre>
<p>Here is the problem I am having.</p>
<p>Take this as an example list of words for the variable 'words_list': <code>['this', 'sentence', 'is', 'a', 'very', 'very', 'good', 'sentence']</code></p>
<p>The result I would end up with would be: <code>[1, 2, 3, 4, 5, 5, 7, 2]</code></p>
<p>When a word is found again in the sentence it's value from the dictionary is being displayed correctly as shown with the word 'very' (No. 5) but I'm losing the next 'unit' value, in this example it was No. 6, as you can see the next unique word in the sentence ends up being 7.</p>
<p>What can I do to stop this happening? Thanks in advance for your time and help.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you are not really looking for the <em>position</em> of the word in the sentence, that <code>enumerate</code> gives you, but how many <em>different</em> words you have seen so far. For this, you can just check the number of entries that are currently in the dictionary.</p>
<pre><code>dictionary = {}
word_pos_list = []
for word in sentence:   
    if word not in dictionary:
        dictionary[word] = len(dictionary) + 1
    word_pos_list.append(dictionary[word])
</code></pre>
<p>For your sentence, <code>word_pos_list</code> will then be <code>[1, 2, 3, 4, 5, 5, 6, 2]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in one of the comments, there doesn't seem to be a really good reason to be using <code>enumerate</code> here. It's a little cleaner to manually count the items.</p>
<pre><code>words_list = ['this', 'sentence', 'is', 'a', 'very', 'very', 'good', 'sentence']

dictionary = {}      
word_pos_list = []

counter = 0
for word in words_list:
    if word not in dictionary:
        counter += 1
        dictionary[word] = counter

    word_pos_list.append(dictionary[word])

print word_pos_list # [1, 2, 3, 4, 5, 5, 6, 2]
</code></pre>
</div>
<span class="comment-copy">Use <code>set(list)</code></span>
<span class="comment-copy">Why are you using <code>enumerate()</code> for this? How do you think it should work?</span>
<span class="comment-copy">Hi, I'm using enumerate() because I thought that was the way to go, there is a lot of Python learning going on here :-)</span>
<span class="comment-copy">I think you should read about <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">what it does</a> rather than guessing. I don't know how you were expecting it to know about what you were doing inside the loop, or why it should base its behavior on that.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/34313761/indexing-a-list-with-an-unique-index">Indexing a list with an unique index</a></span>
<span class="comment-copy">Thank you that's perfect</span>
