<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4748344/whats-the-reverse-of-shlex-split">What's the reverse of shlex.split?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<pre><code>import psutil

for p in psutil.process_iter():
    if p.name() == 'foo':
        print p.cmdline()
        print ' '.join(p.cmdline())

PROCESS:
   foo -p "Hello World"
RESULT:
   ['foo', '-p', 'Hello World']
   foo -p Hello World
</code></pre>
<p>I wish to get the original command line for a process as in <code>foo -p "Hello World"</code>, I've tried to use <code>cmdline()</code> but it provides parameters tokenized, which I'm not interested into, and joining them doesn't produce the expected result all the time, as can be seen from result's second print.</p>
<p>Is there a way to achieve this preferably in a portable way (maybe using other library or doing it differently)?</p>
<h2>EDIT</h2>
<p>This is for sake of comparison with an already stored command. Another solution to my problem could be that just <code>' '.join</code> would be ok if I could get the static command string (<code>foo -p "Hello World"</code>) without the quotes that are around args to do the comparison. Meaning, if there were a function that did the shell param tokenization that psutil is doing, it would solve my command comparison problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow">shlex.quote</a> will reassemble the array into a shell command line, writing spaces and other special characters. </p>
</div>
<div class="post-text" itemprop="text">
<p>With some work you could use Lib/pipes in 2.7. <a href="https://docs.python.org/2/library/pipes.html" rel="nofollow">https://docs.python.org/2/library/pipes.html</a></p>
</div>
<span class="comment-copy">@poolie mostly yes, but also, a solution that simply joins parameters that contains whitespace in them won't be optimal I guess, in more complex commands.</span>
<span class="comment-copy">@Rogalski thanks, I guess that should do it.</span>
<span class="comment-copy">No such method in python 2.7, I've tagged the question as such, just updated it.</span>
<span class="comment-copy">Thanks, I've accepted my question as a duplicate.</span>
