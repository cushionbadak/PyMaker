<div class="post-text" itemprop="text">
<p>I have the following loop:</p>
<pre><code>    for tile_id, tile in corner_tiles.items():
        for neighbour in tile["neighbours"]:
            if not (neighbour in enemy_tiles) and tile["player"] == None:
                return tile_id
</code></pre>
<p>where:
<code>tile</code> is a dictionary in the form of </p>
<pre><code>{'counters': &lt;number of counters on tile or None&gt;, 
 'player': &lt;player id of the player who holds the tile or None&gt;,
 'neighbours': &lt;list of ids of neighbouring tile&gt;
}
</code></pre>
<p>and <code>corner_tiles</code> and <code>enemy_tiles</code> are dictionaries in the form of <code>{&lt;tile_id&gt; : &lt;tile&gt;, ... }</code>.</p>
<p> </p>
<p>The loop always returns <code>tile_id</code> regardless of whether <code>neighbour</code> is in <code>enemy_tiles</code> or not, but doesn't if <code>tile["player"]</code> is not <code>None</code>. I have been trying to figure this out for quite a while but cannot seem to spot where I have gone wrong.</p>
<p>EDIT:</p>
<p>I have also tried:</p>
<pre><code>for tile_id, tile in corner_tiles.items():
    if tile["player"] is None:
        for neighbour in tile["neighbours"]:
            if neighbour not in enemy_tiles:
                return tile_id
</code></pre>
<p>which acts the same way.</p>
</div>
<div class="post-text" itemprop="text">
<p>After much stress, I found the simple reason behind my error and I am kicking myself for missing it...</p>
<p>What my loop was supposed to be doing is making sure that <strong>ALL</strong> <code>neighbours</code> are not in <code>enemy_tiles</code>. Of course, it was evaluating as true nearly every time because there was a much higher probability that the first <code>neighbour</code> checked was not in <code>enemy_tiles</code> and so the statement is true and <code>tile_id</code> is returned after only checking one <code>neighbour</code>.</p>
</div>
<span class="comment-copy">When in doubt, add parentheses.</span>
<span class="comment-copy">Try <code>if neighbour not in enemy_tiles and tile["player"] is None:</code> - Idiomatic Python FTW.</span>
<span class="comment-copy">@thefourtheye I know <code>is None</code> is more pythonic than <code>== None</code>, but is there any reason why <code>==</code> wouldn't work?</span>
<span class="comment-copy">Try <code>tile["player"] is None</code>. Do not use <code>==</code> to evaluate agains <code>None</code>.</span>
<span class="comment-copy">precedence may be involved <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">docs.python.org/3/reference/…</a></span>
