<div class="post-text" itemprop="text">
<p>I am writing a python quiz/calculator for school, and I am having a problem with creating random questions for the quiz.</p>
<p>At the moment, I have the code as follows:</p>
<pre><code>while True:
    if i + n == 10:
        answer = input("If I have",i,"blue marbles and",n,"yellow marbles in a bag, what percentage of blue marbles are there? ")   
    else:
        i = random.randint(1, 10)
        n = random.randint(1, 10)
</code></pre>
<p>However python comes up with an error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 3, in &lt;module&gt;
TypeError: input expected at most 1 arguments, got 5
</code></pre>
<p>I have tried multiple ways around it, for example:</p>
<pre><code>while True:
    question = "If I have",i,"blue marbles and",n,"yellow marbles in a bag, what percentage of blue marbles are there? "
    answer = input(question)
</code></pre>
<p>However when printed on the Shell, it prints 'If i have,4 [for example],'blue marbles and',6,'yellow marbles in a bag, what percentage of blue marbles are there?'.</p>
<p>As you can see, it prints quote marks and commas, but includes the variables <code>i</code> and <code>n</code> correctly. I have looked at the <code>.strip()</code> function but all tutorials are too confusing but I think that is what I need!</p>
<p>Can anyone make this line of code work, where it just prints the question as an input statement, whilst including the variables?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>input()</code> takes just <em>one</em> argument, but you are passing in 5:</p>
<pre><code>input(
    "If I have",
    i,
    "blue marbles and",
    n,
    "yellow marbles in a bag, what percentage of blue marbles are there? ") 
</code></pre>
<p>Join those together into a string first:</p>
<pre><code>input("If I have {} blue marbles and {} yellow marbles in a bag, "
      "what percentage of blue marbles are there? ".format(i, n)) 
</code></pre>
<p>This uses the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format()</code> method</a> to insert the values for <code>i</code> and <code>n</code> into a larger string.</p>
<p>You may have gotten confused with <code>print()</code> here, which explicitly takes an arbitrary number of arguments and converts each of those to a string before writing them out to stdout, separating each with a space. <code>input()</code> does not offer this feature.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your problem is that you're treating the <code>input</code> function call as if it was a <code>print</code> call.  However, the interface is different for <code>input</code> and <code>print</code>.  </p>
<ul>
<li><code>input</code> expects exactly one argument</li>
<li><code>print</code> will accept multiple arguments</li>
</ul>
<p>So, try creating the prompt like this instead:</p>
<pre><code>prompt = "If I have {} blue marbles and {} yellow marbles etc".format(i, n)
input(prompt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The answer has already been given; but I will provide some insight since you seem like a beginner.  Input() and Print() are built-in functions.  They are no different than functions you would create yourself.  Functions are basically a block of code that is run when called.  Functions have arguments, which are values you pass to the function.  So my add function would go as follows:</p>
<pre><code>def add(x, y)
    answer = x + y
    print(answer)
</code></pre>
<p>I would invoke it by typing:</p>
<pre><code>add(10, 20)
</code></pre>
<p>and the program/interactive shell would return 30.</p>
<p>This is why Input() and Print() behave differently, because Print() is meant to take many arguments and concatenate them into one large string, and Input only accepts one.  If you ever get stuck, or aren't quite sure how to use a function, module, etc. Python has a built in help() function (that takes one argument, lol).</p>
<p>So typing help(input) would tell you that input would only take a single argument.  This will be very useful if you forget the exact syntax or specifics of something.</p>
<p>Hope this clears up any questions you had, especially if you weren't sure why the given answers were working and yours wasn't.</p>
</div>
<span class="comment-copy">I'm not sure why you were downvoted twice, the question is fine</span>
<span class="comment-copy">@wim this error can be easily correct with google <code>input</code> function</span>
<span class="comment-copy">Glad you found more than one answer helpful! Sadly for us, you can only pick <i>one</i> to give the 'accepted' mark. The choice is entirely yours (up to and including not picking any).</span>
