<div class="post-text" itemprop="text">
<p>the instructions are: write a simple python program that is controlled by a while loop. The sentry variable must evaluate to something other than true or false. There must be an indication of whether the loop is continued or if it is exited. </p>
<p>I am having trouble understanding the part that says "sentry variable must evaluate to something other than true or false". I thought that all while loops evaluate to true or false.</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you looking for something like this? The code below evaluates if the variable "i" is equalled to 100 and if it isn't, re-iterate over the loop adding one to the counter. It indicates if it is currently in the loop or if the loop is broken.   </p>
<pre><code>i = 0
while i != 100:
    i += 1
    print("Continued.")
print("Exited.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try something like this:</p>
<pre><code>myList = range(10)

while myList:
    print myList.pop() 

print myList
</code></pre>
<p>It the sentry variable, myList, is list and will allow the loop to continue executing until it is empty.   Note that pop will remove the last element from the list at each iteration of the loop.</p>
</div>
<span class="comment-copy">No, just truthy or falsey, see e.g. <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#truth-value-testing</a></span>
<span class="comment-copy">I know nothing of Python.  However, this is, like, the first thing that comes up when you Google "Python Sentry Variable".  <a href="https://www.reddit.com/r/learnpython/comments/1gdb7a/newbie_question_trying_to_understand_sentry/" rel="nofollow noreferrer">reddit.com/r/learnpython/comments/1gdb7a/â€¦</a></span>
<span class="comment-copy">Note: This code may not satisfy the parameters, since the loop condition evaluates to <code>True</code> or <code>False</code> and nothing else. It's also terrible Python code for real usage. It's basically the slowest, least Pythonic way to implement a C-style <code>for</code> loop (Pythonically, you'd do <code>for i in range(100):</code>, but even more Pythonically, you'd usually be directly iterating an iterable, not looping over indices).</span>
<span class="comment-copy">To make it work on truthiness, rather than <code>True</code>/<code>False</code>, you might make it count down; <code>i = 100</code>, <code>while i:</code>, <code>i -= 1</code>.</span>
<span class="comment-copy">I think the sentry (a.k.a. sentinel) variable here would be <code>i</code>. @ShadowRanger, I think only that variable (not the loop condition that might depend on that variable) must not be boolean.</span>
