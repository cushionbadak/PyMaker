<div class="post-text" itemprop="text">
<p>I'm using Pycharm as the software tool to code in python.</p>
<p>These words are in a text format but they are supposed to return different outputs</p>
<pre><code>word = "&lt;p&gt;Santa is fat&lt;/p&gt;"
secondword = "Potato &amp; Tomato"
thirdword = "Koala eats http://koala.org/ a lot&lt;/p&gt;"
</code></pre>
<p>I want to replace each of the following "&lt;" , "&gt;" , "&amp;"  <strong>to</strong>  "<code>&amp;lt;</code>" , "<code>&amp;gt;</code>" , "<code>&amp;amp;</code>"</p>
<p>So the output should look like</p>
<pre><code>outputword = "&amp;lt;p&amp;gt;Santa is fat&amp;lt;/p&amp;gt;"
outputsecondword = "Fish &amp;amp; Chips"
outputthirdword = ""&amp;lt;p&amp;gt;Koala eats &lt;a href='http://koala.org/'&gt;http://koala.org/&lt;/a&gt; a lot&amp;lt;/p&amp;gt;"
</code></pre>
<p>Notice that the third word is a URL.
I dont want to use the html library.
I'm a noob at Python so please provide me with simple solutions. I considered using lists but whenever I replace a character in the list, it doesn't change</p>
</div>
<div class="post-text" itemprop="text">
<p>Without using the <code>html</code> library, you can do the replacements like this:</p>
<pre><code>replacewith = {'&lt;':'lt;', '&gt;':'gt;'}
for w in replacewith:
        word = word.replace(w,replacewith[w])

In [407]: word
Out[407]: 'lt;pgt;Santa is fatlt;/pgt;'
</code></pre>
<p>Or, in one line:</p>
<pre><code> word.replace('&lt;','lt;').replace('&gt;','gt;')
</code></pre>
<h3>Update:</h3>
<p>You can move the code into a function and call it like this: </p>
<pre><code>def replace_char(word, replacewith=replacewith):
    for w in replacewith:
            word = word.replace(w,replacewith[w])
    return word
</code></pre>
<p>Calling it with <code>word</code> like below will give you:</p>
<pre><code>replace_char("&lt;p&gt;Santa is fat&lt;/p&gt;")
Out[457]: 'lt;pgt;Santa is fatlt;/pgt;'
</code></pre>
<p>To get the second one to work, update the dictionary:</p>
<pre><code>In [454]: replacewith.update({'Potato':'Fish', 'Tomato':'Chips', '&amp;': '&amp;amp;',})
In [455]: replace_char("Potato &amp; Tomato", replacewith)
Out[455]: 'Fish &amp;amp; Chips'
</code></pre>
<p>You can do the same for any new characters that may appear in other new strings in pretty much the same way. Your input <code>thirdword</code> is missing a <code>&lt;p&gt;</code> right at the beginning. </p>
<pre><code>In [461]: replacewith.update({'http://koala.org/':'&lt;a href="http://koala.org/"&gt;http://koala.org/&lt;/a&gt;'})
In [463]: replace_char("Koala eats http://koala.org/ a lot&lt;/p&gt;", replacewith)
Out[463]: 'Koala eats lt;a href="http://koala.org/"gt;http://koala.org/lt;/agt; a lotlt;/pgt;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python comes <a href="https://docs.python.org/3/library/html.html#html.escape">with batteries included</a>:</p>
<pre><code>import html

word = "&lt;p&gt;Santa is fat&lt;/p&gt;"
print(html.escape(word))
</code></pre>
<p>Output:</p>
<pre><code>&amp;lt;p&amp;gt;Santa is fat&amp;lt;/p&amp;gt;
</code></pre>
</div>
<span class="comment-copy">Note that the HTML entities are <code>'&amp;gt;'</code> and <code>'&amp;lt;'</code>...</span>
<span class="comment-copy">When you say "I considered using lists but whenever I replace a character in the list, it doesn't change", that doesn't explain what you tried well enough for anyone to explain what you did wrong. Maybe you were one typo away from getting it right; maybe you were totally on the wrong track—if you show us the code, we can tell you.</span>
<span class="comment-copy">Why the <code>if w in word:</code> test? If that's supposed to be an optimization, all you're actually doing is forcing it to linearly search <code>word</code> twice instead of once…</span>
<span class="comment-copy">Also, why <code>replacewith.get(w)</code> instead of just <code>replacewith[w]</code>?</span>
<span class="comment-copy">Give me a moment, let me try this.</span>
<span class="comment-copy">@abarnert  Thanks for the comment. Fixed both. Unintentional "typos", both.</span>
<span class="comment-copy">It is a <code>dictionary</code> @Manu.</span>
<span class="comment-copy">Upvote for not answering what he asks, but what he wants/needs.</span>
<span class="comment-copy">@RvdK Thank you for that :)</span>
<span class="comment-copy">How would you do it without using the "import html"</span>
<span class="comment-copy">You wouldn't. Use the libraries Python provides. And just in case your next question is how to parse HTML with regular expressions: you don't either.</span>
<span class="comment-copy">Basic <code>replace</code> method: <code>s = 'abcdef'</code> <code>s = s.replace('e', 'g')</code> <code>s</code> <code>&gt;&gt; 'abcdgf'</code></span>
