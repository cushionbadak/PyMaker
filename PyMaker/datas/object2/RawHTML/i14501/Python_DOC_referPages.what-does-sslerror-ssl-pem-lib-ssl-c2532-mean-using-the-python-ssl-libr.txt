<div class="post-text" itemprop="text">
<p>I am trying to use connect to another party using Python 3 asyncio module and get this error:</p>
<pre><code>     36     sslcontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
---&gt; 37     sslcontext.load_cert_chain(cert, keyfile=ca_cert)
     38

SSLError: [SSL] PEM lib (_ssl.c:2532)
</code></pre>
<p>The question is just what the error mean. My certificate is correct, <em>the keyfile (CA certificate) might not</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that version 3.4 is being used:</p>
<p>See: <a href="https://github.com/python/cpython/blob/3.4/Modules/_ssl.c#L2529-L2535" rel="noreferrer">https://github.com/python/cpython/blob/3.4/Modules/_ssl.c#L2529-L2535</a></p>
<pre><code> PySSL_BEGIN_ALLOW_THREADS_S(pw_info.thread_state);
 r = SSL_CTX_check_private_key(self-&gt;ctx);
 PySSL_END_ALLOW_THREADS_S(pw_info.thread_state);
 if (r != 1) { 
    _setSSLError(NULL, 0, __FILE__, __LINE__);
    goto error;
 }
</code></pre>
<p>What it is saying is that <code>SSL_CTX_check_private_key</code> failed; thus, the private key is not correct.</p>
</div>
<div class="post-text" itemprop="text">
<p>In your code, you are calling:</p>
<pre><code>sslcontext.load_cert_chain(cert, keyfile=ca_cert)
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/ssl.html#ssl.SSLContext">documentation</a>:</p>
<blockquote>
<p>Load a private key and the corresponding certificate. The certfile
  string must be the path to a single file in PEM format containing the
  certificate as well as any number of CA certificates needed to
  establish the certificateâ€™s authenticity. The keyfile string, if
  present, must point to a file containing the private key in. Otherwise
  the private key will be taken from certfile as well. See the
  discussion of Certificates for more information on how the certificate
  is stored in the certfile.</p>
</blockquote>
<p>Based on the name of the arguments in your example, it looks like you are passing a CA certificate to the <code>keyfile</code> argument.  That is incorrect, you need to pass in the private key that was used to generate your local certificate (otherwise the client cannot use your certificate).  A private key file will look something like:</p>
<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,9BA4973008F0A0B36FBE1426C198DD1B

...data...
-----END RSA PRIVATE KEY-----
</code></pre>
<p>You only need the CA certificate if you are trying to verify the validity of SSL certificates that have been signed by this certificate.  In that case, you would probably use <code>SSLContext.load_verify_locations()</code> to load the CA certificate (although I have not worked with the SSL module recently, so don't take my word on that point).</p>
</div>
<span class="comment-copy">You do mention that the key -file might not be correct. Cert loading will fail if the cert (public key) does not go with the right private key file.</span>
<span class="comment-copy">You have <code>keyfile=ca_cert</code>, which seems likely to be incorrect (or you have chosen horrible variable names).  Does your <code>ca_cert</code> really contain a private key?</span>
<span class="comment-copy">@larsks How choosing horrible variable names can cause errors in the code? Any suggestions (or convention) on how to name them? The ca_cert file begins with <code>-----BEGIN CERTIFICATE-----</code>, what seems to be a valid encrypted key, and ends with <code>-----END CERTIFICATE-----</code>. Should header and footer say something different?</span>
<span class="comment-copy">People that down vote a question should at least leave a comment at to why, and maybe even how to improve the question.</span>
<span class="comment-copy">I've rolled back the last revision here since answers shouldn't be edited into the question.</span>
<span class="comment-copy">Agreed. You went to the source and found the right answer.</span>
<span class="comment-copy">I read it before but had no clue of what that meant. I think it is using <i>openssl</i> (on Unix systems) and reporting the error it got at system level. That explains why the error would generate from that line in the source, right?</span>
