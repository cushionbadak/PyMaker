<div class="post-text" itemprop="text">
<p>I am new to Python coding and BeautifulSoup4. I have a list in HTML that I need to sort, which follows the pattern:</p>
<pre><code>&lt;div id="mgioLangSelector"&gt;
&lt;ul id="mgioLangList"&gt;
&lt;li&gt;&lt;a href="" class="mgio-autonym"&gt;&lt;span class="mgioAutonymNative" lang="am"&gt;አማርኛ&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Amharic&lt;/span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="" class="mgio-autonym"&gt;&lt;span class="mgioAutonymNative" lang="hr"&gt;hrvatski&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;        &lt;span class="mgioAutonymEnglish"&gt;Croatian&lt;/span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="" class="mgio-autonym"&gt;&lt;span class="mgioAutonymNative" lang="cs"&gt;čeština&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Czech&lt;/span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="" class="mgio-autonym"&gt;&lt;span class="mgioAutonymNative" lang="vi"&gt;tiếng Việt&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Vietnamese&lt;/span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="" class="mgio-autonym"&gt;&lt;span class="mgioAutonymNative" lang="sq"&gt;shqip&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Albanian&lt;/span&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</code></pre>
<p>I need to sort the list <em>in situ</em> and save the resultant HTML. The list needs to be sorted by the contents of the third span, with class = mgioAutonymEnglish</p>
<p>I suspect that I need to use <code>sorted()</code> with an appropriate key function, but am coming up blank.</p>
<p>I have tried the following code: </p>
<pre><code>from bs4 import BeautifulSoup
from lxml import etree
soup = BeautifulSoup(open("interimResults.html"), 'lxml', from_encoding="utf-8")
matches = soup.find_all("span", attrs={"class": "mgioAutonymEnglish"})
sorted(matches, key=lambda elem: elem.text)
</code></pre>
<p>This will sort the contents of the span, but not the lists in the original list. I assume that I need to change the lambda function, but I'm currently at a loss. </p>
<p>What would I need to do or change to successfully sort the list and then save those changes within the HTML document?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is actually a little more involved than you might think, so it'll help to go through it step by step.</p>
<p>Let's start with your <code>soup</code>:</p>
<pre><code>&gt;&gt;&gt; soup
&lt;html&gt;&lt;body&gt;
...
&lt;div id="mgioLangSelector"&gt;
&lt;ul id="mgioLangList"&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="am"&gt;አማርኛ&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Amharic&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="hr"&gt;hrvatski&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt; &lt;span class="mgioAutonymEnglish"&gt;Croatian&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="cs"&gt;čeština&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Czech&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="vi"&gt;tiếng Việt&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Vietnamese&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="sq"&gt;shqip&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Albanian&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
...
&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>The first thing to do is get hold of the <code>ul</code>:</p>
<pre><code>ul = soup.find(attrs={"id": "mgioLangList"})
</code></pre>
<p>Now we can <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/#extract" rel="nofollow noreferrer"><code>extract()</code></a> all the <code>li</code> elements from it and store them in a list:</p>
<pre><code>items = [li.extract() for li in ul.find_all("li")]
</code></pre>
<p>To sort the list, we need a key. You were on the right lines, but actually it needs to look like this:</p>
<pre><code>items.sort(key=lambda e: e.find(attrs={"class": "mgioAutonymEnglish"}).string)
</code></pre>
<p>Now that we have a sorted list of <code>li</code> elements, we can insert them back into the document. What might not be immediately obvious is that the <code>ul</code> didn't just contain <code>li</code> elements – they were separated by linebreaks, which are still there:</p>
<pre><code>&gt;&gt;&gt; ul
&lt;ul id="mgioLangList"&gt;





&lt;/ul&gt;
</code></pre>
<p>... and in fact, they're still six separate <code>'\n'</code> strings:</p>
<pre><code>&gt;&gt;&gt; ul.contents
['\n', '\n', '\n', '\n', '\n', '\n']
</code></pre>
<p>In order to insert our sorted list of <code>li</code> elements back inbetween those linebreaks, we can use the builtin <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> function and the <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/#insert-before-and-insert-after" rel="nofollow noreferrer"><code>insert_after()</code></a> method:</p>
<pre><code>for linebreak, li in reversed(list(zip(ul.contents, items))):
    linebreak.insert_after(li)
</code></pre>
<p>Note that, because we're modifying <code>ul.contents</code> by inserting elements as we iterate over it, it's necessary to do so <a href="https://stackoverflow.com/a/6024599">in reverse</a> so that the <code>for</code> loop doesn't end up tripping over itself.</p>
<p>And so ...</p>
<pre><code>&gt;&gt;&gt; soup
&lt;html&gt;&lt;body&gt;
...
&lt;div id="mgioLangSelector"&gt;
&lt;ul id="mgioLangList"&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="sq"&gt;shqip&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Albanian&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="am"&gt;አማርኛ&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Amharic&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="hr"&gt;hrvatski&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt; &lt;span class="mgioAutonymEnglish"&gt;Croatian&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="cs"&gt;čeština&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Czech&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="mgio-autonym" href=""&gt;&lt;span class="mgioAutonymNative" lang="vi"&gt;tiếng Việt&lt;/span&gt;&lt;span class="mgioAutonymSeperator"&gt; / &lt;/span&gt;&lt;span class="mgioAutonymEnglish"&gt;Vietnamese&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
...
&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>Here's the whole thing:</p>
<pre><code>ul = soup.find(attrs={"id": "mgioLangList"})
items = [li.extract() for li in ul.find_all("li")]
items.sort(key=lambda e: e.find(attrs={"class": "mgioAutonymEnglish"}).string)
for linebreak, li in reversed(list(zip(ul.contents, items))):
    linebreak.insert_after(li)
</code></pre>
</div>
