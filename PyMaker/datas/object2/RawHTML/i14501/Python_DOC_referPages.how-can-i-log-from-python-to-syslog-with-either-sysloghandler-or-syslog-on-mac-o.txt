<div class="post-text" itemprop="text">
<p>I've followed several answers here on SO to no avail.</p>
<p>I'm developing on a Macbook (Yosemite), but our test/production boxes are Debian 7 (using rsyslog). I'm trying to log out to syslog in a way that will work both locally and not.</p>
<p>I tried the option of using <code>SysLogHandler</code>. This works on Mac:</p>
<pre><code>import logging
import logging.handlers
import syslog

h = logging.handlers.SysLogHandler(address='/var/run/syslog', facility=syslog.LOG_LOCAL1)
h.ident = 'works_on_macs'
logger = logging.getLogger('i_am_a_lumberjack')
logger.addHandler(h)

logger.debug("And I don't care")
logger.info('There is a sale on today')
logger.warn('Do not touch the hot stove!')
logger.error('Sorry, times up')
logger.critical('That sure is an ugly tie')
</code></pre>
<p>These messages will show up in my mac syslog. However, when I change <code>address='/dev/log'</code> on Debian 7... no dice.</p>
<p>Yet:</p>
<pre><code>import syslog

syslog.openlog(ident='im_a_lumberjack', facility=syslog.LOG_LOCAL1)
syslog.syslog(syslog.WARNING, 'Watch out!')
</code></pre>
<p>Works on Debian 7, but not on Mac.</p>
<p>I would really love to be able to get one logging solution that works for both platforms. Obviously the address is going to be different, but I'm already setting that in config.</p>
<p>So how do I get syslog working both for Mac <em>and</em> Debian?</p>
<p><strong>Edit:</strong></p>
<p>As further information - I've discovered that my SysLogHandler seems to maybe not be using the facility(?) right. Messages <em>are</em> being picked up by syslog, but they're going to a catch-all, which makes me believe they're not getting tagged with <code>LOG_LOCAL1</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Turns out the <code>facility</code> that <code>SysLogHandler</code> expects is <em>not</em> <code>syslog.LOG_LOCAL1</code> or any of the values in that namespace.</p>
<p>It expects <a href="https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.encodePriority"><code>'local1'</code></a> or other string as explained in the documentation.</p>
<p>Simply changing</p>
<pre><code>h = logging.handlers.SysLogHandler(address='/var/run/syslog', facility=syslog.LOG_LOCAL1)
</code></pre>
<p>to </p>
<pre><code>h = logging.handlers.SysLogHandler(address='/var/run/syslog', facility='local1')
</code></pre>
<p>Made everything right on both systems.</p>
</div>
<span class="comment-copy">If this was the case, it seems to have been fixed in python's code: <code>def encodePriority(self, facility, priority):         if isinstance(facility, basestring):             facility = self.facility_names[facility] </code></span>
