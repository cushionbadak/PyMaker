<div class="post-text" itemprop="text">
<p>I have the following code and get the following error message when trying to run it:</p>
<pre><code>NameError: name 'true' is not defined
</code></pre>
<p>I am trying to make the Raspberry Pi run a HTML script when it receives input on port 17:</p>
<pre><code>import RPi.GPIO as GPIO
import time
import os

inputSignal = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(inputSignal,GPIO.IN)
while true:
    if (GPIO.input(inputSignal)):
        os.system("html /home/pi/index.html")
    else:
        print("No Input")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pythonâ€™s boolean constants are capitalized: <a href="https://docs.python.org/3/library/constants.html#True" rel="noreferrer"><code>True</code></a> and <a href="https://docs.python.org/3/library/constants.html#False" rel="noreferrer"><code>False</code></a> with upper case <code>T</code> and <code>F</code> respectively.</p>
<p>The lower-case variants are just valid free names for variables, so you could use them for whatever you want, e.g. <code>true = False</code> (not recommended ;P).</p>
</div>
<div class="post-text" itemprop="text">
<p>You haven't defined a variable <code>true</code>. Maybe you meant the built-in boolean value <code>True</code>?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>while True:</p>
</blockquote>
<p># but seems like inifite loop </p>
</div>
<span class="comment-copy">should be <code>while True</code></span>
<span class="comment-copy">Sadly, in 3.x you can no longer do <code>__builtin__.True = False</code>, so without getting into <code>ctypes.pythonapi</code>, <code>true = False</code> is the best option left for confusing philosophy students.</span>
<span class="comment-copy">It is. This is a very common pattern for accepting a streaming input... <code>while (true) { input = get_input(stream); process(input); }</code> and so on. Something like an analogue signal will need to be processed as often as possible indefinitely. For instance, a self-driving car would run on an infinite loop over its cameras, radar, and other sensors and process the data thousands of times per second to be able to respond appropriately to what happens.</span>
