<div class="post-text" itemprop="text">
<p>I am using Python 3.4, and I am testing out dictionary comprehension.</p>
<p>Let's say I have the following code:</p>
<pre><code>listofdict = [{"id":1, "title": "asc", "section": "123"},{"id":2, "title": "ewr", "section": "456"}]
titles1 = []
titles2 = []
titles1.append({r["section"]: r["title"] for r in listofdict})
print("titles1 = " + str(titles1))

for r in listofdict:
  section = r["section"]
  title = r["title"]
  titles2.append({section: title})

print("titles2 = " + str(titles2))
</code></pre>
<p>I thought both methods should give me the same result, but I get the following instead:</p>
<pre><code>titles1 = [{'456': 'ewr', '123': 'asc'}]
titles2 = [{'123': 'asc'}, {'456': 'ewr'}]
</code></pre>
<p>titles2 is what I actually want, but I want to use dictionary comprehension to do it.</p>
<p>What is the right way to write the dictionary comprehension?</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot use a dict comprehension for that, because a dict comprehension produces <strong>one</strong> dictionary with the keys and values taken from the loop(s).</p>
<p>You'd use a list comprehension instead:</p>
<pre><code>[{r["section"]: r["title"]} for r in listofdict]
</code></pre>
<p>This produces the one dictionary each iteration, producing a new list:</p>
<pre><code>&gt;&gt;&gt; listofdict = [{"id":1, "title": "asc", "section": "123"},{"id":2, "title": "ewr", "section": "456"}]
&gt;&gt;&gt; [{r["section"]: r["title"]} for r in listofdict]
[{'123': 'asc'}, {'456': 'ewr'}]
</code></pre>
</div>
<span class="comment-copy">If you understand exactly how a comprehension (of any kind) maps to an explicit loop around <code>list.append</code>/<code>set.add</code>/<code>dict[…]=…</code>/<code>yield</code>, it's a lot easier to debug code like this: just convert it to the explicit loop and see if it's what you wanted. The tutorial section on <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehensions</a> actually explains it very nicely.</span>
<span class="comment-copy">Thanks! Worked like a charm! Should have realized I wanted to build a list of dictionaries, so should have used list comprehension.</span>
