<div class="post-text" itemprop="text">
<p>How can I use a query element tree <code>findall('Email')</code> given the following xml?</p>
<pre><code>&lt;DocuSignEnvelopeInformation xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.docusign.net/API/3.0"&gt;
    &lt;EnvelopeStatus&gt;
        &lt;RecipientStatus&gt;
                &lt;Type&gt;Signer&lt;/Type&gt;
                &lt;Email&gt;joe@gmail.com&lt;/Email&gt;
                &lt;UserName&gt;Joe Shmoe&lt;/UserName&gt;
                &lt;RoutingOrder&gt;1&lt;/RoutingOrder&gt;
                &lt;Sent&gt;2015-05-04T09:58:01.947&lt;/Sent&gt;
                &lt;Delivered&gt;2015-05-04T09:58:14.403&lt;/Delivered&gt;
                &lt;Signed&gt;2015-05-04T09:58:29.473&lt;/Signed&gt;
        &lt;/RecipientStatus&gt;
    &lt;/EnvelopeStatus&gt;
&lt;/DocuSignEnvelopeInformation&gt;
</code></pre>
<p>I have a feeling it has to do with the namespace but I'm not sure. I looked at the <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow">docs</a> and had no luck. </p>
<pre><code>tree = &lt;xml.etree.ElementTree.ElementTree object at 0x7f27a47c4fd0&gt;
root = tree.getroot()
root
&lt;Element '{http://www.docusign.net/API/3.0}DocuSignEnvelopeInformation' at 0x7f27a47b8a48&gt;

root.findall('Email')
[]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should read the docs more closely, in particular the section on <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#parsing-xml-with-namespaces" rel="nofollow">Parsing XML with Namespaces</a>, which includes an example that is almost exactly what you want.</p>
<p>But even without the docs, the answer is actually contained in your example output.  When you printed the root element of your document...</p>
<pre><code>&gt;&gt;&gt; tree = etree.parse(open('data.xml'))
&gt;&gt;&gt; root = tree.getroot()
&gt;&gt;&gt; root
&lt;Element {http://www.docusign.net/API/3.0}DocuSignEnvelopeInformation at 0x7f972cd079e0&gt;
</code></pre>
<p>...you can see that it printed the root element name (<code>DocuSignEnvelopeInformation</code>) with a namespace prefix (<code>{http://www.docusign.net/API/3.0}</code>).  You can use this same prefix as part of your argument to <code>findall</code>:</p>
<pre><code>&gt;&gt;&gt; root.findall('{http://www.docusign.net/API/3.0}Email')
</code></pre>
<p>But this by itself won't work, since this would only find <code>Email</code> elements that are immediate children of the root element.  You need to provide an <a href="http://lxml.de/tutorial.html#elementpath" rel="nofollow">ElementPath</a> expression to cause <code>findall</code> to perform a search of the entire document.  This works:</p>
<pre><code>&gt;&gt;&gt; root.findall('.//{http://www.docusign.net/API/3.0}Email')
[&lt;Element {http://www.docusign.net/API/3.0}Email at 0x7f972949a6c8&gt;]
</code></pre>
<p>You can also perform a similar search using XPath and namespace prefixes, like this:</p>
<pre><code>&gt;&gt;&gt; root.xpath('//docusign:Email',
... namespaces={'docusign': 'http://www.docusign.net/API/3.0'})
[&lt;Element {http://www.docusign.net/API/3.0}Email at 0x7f972949a6c8&gt;]
</code></pre>
<p>This lets you use XML-like <code>namespace:</code> prefixes instead of the LXML namespace syntax.</p>
</div>
<span class="comment-copy">Thank you, very helpful. I'd like to use your last example of <code>root.xpath</code> but it doesn't look like elementtree elements support .xpath <code>AttributeError: 'xml.etree.ElementTree.Element' object has no attribute 'xpath'</code></span>
<span class="comment-copy">This answer assumes you're using lxml.etree.</span>
