<div class="post-text" itemprop="text">
<pre><code>def encrypt(string, new_string):
    i = 0
    if i &lt; len(string):
        if ord(string[i]) &gt; 65 and ord(string[i]) &lt; 97:
            new_string = string[i] + encrypt(string[1:], new_string)

        if ord(string[i]) &gt;= 97 or ord(string[i]) == 32:
            if not(ord(string[i])) == 32:
                x = ord(string[i])
                x = x + 1
                y = chr(x)
                new_string = new_string + y

                new_string = encrypt(string[1:], new_string)

            else:
                new_string = new_string + ' '
                new_string = encrypt(string[1:], new_string)
    return new_string

string = input("Enter a message: \n")
new_string = ''


print("Encrypted message:")
print(encrypt(string, new_string))
</code></pre>
<hr/>
<p>If there is more than one uppercase letter, it will output the uppercase letters at the front of the encrypted message.</p>
<p>For example: 'Hello World' becomes 'HWfmmp psme'. However, the output should have been 'Hfmmp Xpsme'</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow"><code>translate</code></a> can help you to do this kind of conversion.</p>
<pre><code>from string import ascii_lowercase

def encrypt(data):
    transmap = str.maketrans(ascii_lowercase, ascii_lowercase[1:] + ascii_lowercase[0])
    return data.translate(transmap)

value = 'Hello World'
print(encrypt(value))
</code></pre>
<p>The result is <code>Hfmmp Wpsme</code>.</p>
<hr/>
<p>It's easy to change the <code>encrypt</code> function to work with a flexible offset.</p>
<pre><code>from string import ascii_lowercase

def encrypt(data, offset=1):
    transmap = str.maketrans(ascii_lowercase, ascii_lowercase[offset:] + ascii_lowercase[0:offset])
    return data.translate(transmap)

value = 'Hello World'
print(encrypt(value, offset=2))
print(encrypt(value, offset=-1))
</code></pre>
<p>This will print <code>Hgnnq Wqtnf</code> and <code>Hdkkn Wnqkc</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub('[a-z]',lambda x:chr(ord(x.group(0))+1),'Hello World')
'Hfmmp Wpsme'
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">The expected output <code>'Hfmmp Xpsme'</code> should be <code>'Hfmmp Wpsme'</code> ?</span>
