<div class="post-text" itemprop="text">
<p>I have a python list as such:</p>
<pre><code>[['a','b','c'],['d','e','f'],['g','h','i']]
</code></pre>
<p>I am trying to get it into a csv format so I can load it into excel:</p>
<pre><code>a,b,c
d,e,f
g,h,i
</code></pre>
<p>Using this, I am trying to write the arary to a csv file:</p>
<pre><code>with open('tables.csv','w') as f:
    f.write(each_table)
</code></pre>
<p>However, it prints out this:</p>
<pre><code>[
[
'
a
'
,
...
...
</code></pre>
<p>So then I tried putting it into an array (again) and then printing it.</p>
<pre><code>each_table_array=[each_table]
with open('tables.csv','w') as f:
        f.write(each_table_array)
</code></pre>
<p>Now when I open up the csv file, its a bunch of unknown characters, and when I load it into excel, I get a character for every cell.</p>
<p>Not too sure if it's me using the csv library wrong, or the array portion.</p>
<p>I just figured out that the table I am pulling data from has another table within one of its cells, this expands out and messes up the whole formatting</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow">csv</a> library for your job:</p>
<pre><code>import csv
each_table = [['a','b','c'],['d','e','f'],['g','h','i']]
with open('tables.csv', 'w') as csvfile:
    writer = csv.writer(csvfile)
    for row in each_table:
        writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a more flexible and pythonic way use <a href="https://docs.python.org/3/library/csv.html#id2" rel="nofollow"><code>csv</code></a> module for dealing with <code>csv</code> files Note that as you are in python 2 you need the method <code>newline=''</code> * in your <code>open</code> function . then you can use <code>csv.writer</code> to open you csv file for write:</p>
<pre><code>import csv
with open('file_name.csv', 'w',newline='') as csvfile:
    spamwriter = csv.writer(csvfile, delimiter=',')
    spamwriter.writerows(main_list)
</code></pre>
<hr/>
<p><sub>
From python wiki: If newline='' is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use \r\n linendings on write an extra \r will be added. It should always be safe to specify newline='', since the csv module does its own (<a href="https://docs.python.org/3/glossary.html#term-universal-newlines" rel="nofollow">universal</a>) newline handling.
</sub></p>
</div>
<span class="comment-copy">What you mean by table? where you have that nested list?</span>
<span class="comment-copy">Or rather its a python list, ill edit it</span>
<span class="comment-copy">What about iterating through the list and writing every char + a comma?</span>
<span class="comment-copy">well, this is just an example.. not all the entires are one character long</span>
<span class="comment-copy">this still prints out every character on every line</span>
<span class="comment-copy">I think the writerow prints it all out on every line for some reason</span>
<span class="comment-copy">@user2883071, which python version are you using? I slightly updated the snippet above for a more complete example, and my <code>tables.csv</code> file has 3 lines, each line with 3 characters as expected. I tried it on both python 2.7 and 3.4.</span>
<span class="comment-copy">You can do <code>writerows</code> and save a line.</span>
<span class="comment-copy">zzz I just figured out that the table I am pulling data from has another table within one of its cells, this expands out and messes up the whole formatting. Also the table I am pulling from has hyperlinks, and these show up as duplicate cells</span>
<span class="comment-copy">When I use this method, the <code>wb</code> throws an error: <code>TypeError: 'str' doe snot support the buffer interface</code></span>
<span class="comment-copy">@user2883071 Sorry i missed that you are in python3 , you need <code>w</code></span>
<span class="comment-copy">@DSM I just do that :)</span>
<span class="comment-copy">You can do <code>writerows</code> and save a line.</span>
<span class="comment-copy">@MaximEgorushkin Good point ;)</span>
