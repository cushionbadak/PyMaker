<div class="post-text" itemprop="text">
<p>I can't find a tutorial that explains/covers return versus print in python 3.3 for my class. </p>
<p>The instructor provides the following code which further confuses me.</p>
<p>1: defines a function which is taking in two pass by reference variables</p>
<p>2: a variable which is equal to the addition of two variables</p>
<p>3: return is used here though the variable myFunctionsReturnValue doesn't show anywhere outside this function</p>
<p>4:variable assignment</p>
<p>5: another variable assignment</p>
<p>6: comments explaining supposedly how this works</p>
<p>7: a variable is equal to calling the function passing in two variables (?!)</p>
<p>8: Outputting text and the string value of the variable SumOfXandY</p>
<p>As a class we're told to run this code on <a href="http://pythonfiddle.com" rel="nofollow">pythonfiddle.com</a> which uses a pre 3.x version of python. Sigh. I can't get a response from my instructor because it's self explanatory supposedly. I'm lost.</p>
<pre><code>def SumTwoNumbers(NumberOne, NumberTwo):
     myFunctionsReturnValue = float(NumberOne) + float(NumberTwo)
     return myFunctionsReturnValue;
x = 11
y = 5
#Call the function, pass in my two parameters and the return value will be assigned to my "SumOfXandY" variable here.....
SumOfXandY = SumTwoNumbers(x,y);
print("The Sum of x and Y is: " + str(SumOfXandY))
</code></pre>
<p>When I try to mimic this in my code I get no values sent via return.</p>
<p><a href="http://repl.it/mVI" rel="nofollow">http://repl.it/mVI</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> inside a function simply gives you some value, that you can use later. The code in your link only uses wrong variable in the printing:</p>
<pre><code>print(str(feet) + " feet is a total of " + str(inches) + " inches")
</code></pre>
<p>should be</p>
<pre><code>print(str(feet) + " feet is a total of " + str(totalInches) + " inches")
</code></pre>
<p><code>return</code> in this case assigns the resulting value of the function (the one returned) to a variable, and you then work with the variable the same way as you would work with any value.</p>
<p>There is also a concept of function scope: you shouldn't try to modify variables outside of the function unless you know what you're doing (so called global variables), but rather take something via arguments, process it and return the result.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd recommend having a read of the <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow">Python tutorial</a> if you haven't done so already. It'll provide some more details on how functions work.</p>
<p>The <code>return</code> value of a function is what the function outputs when it's called. You won't see anything printed to the screen from a return value unless you explicitly instruct your program to do so with a <code>print</code> statement. So in this code:</p>
<pre><code>SumOfXandY = SumTwoNumbers(x,y);
</code></pre>
<p>the function <code>SumTwoNumbers</code> is being called and <code>x</code> and <code>y</code> are passed into it. The result of the function - its <code>return</code> value - is assigned to the variable <code>SumOfXandY</code>. The <code>print</code> statement on the following line then displays a message on the screen.</p>
<p>To sum up:</p>
<p><strong>return</strong> outputs a value from a function, but doesn't necessarily print it.</p>
<p><strong>print</strong> displays a value on the screen.</p>
</div>
<div class="post-text" itemprop="text">
<p>A variable cannot be used outside of its function. Instead of calling <code>inches</code> you should have called <code>totalInches</code> :</p>
<p><code>print(str(feet) + " feet is a total of " + str(totalInches) + " inches")</code></p>
<p>All functions (except for <code>void</code> ones) return a value to the rest of the code. The <code>print</code> function worked because it was inside your <code>feettoInches</code> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Some additional comments to complement the other answers:</p>
<ul>
<li>In Python you <em>don't</em> need to define/declare variables. All your variable
declarations like <code>feet=int(0)</code> achieve nothing and will only confuse you
as you try to work this out.</li>
<li>Any variable that you create or assign to within a function has "local scope", and can only be seen within that function. So when you assign values to <code>inches</code> within your function, the variable name <code>inches</code> can't be seen/accessed outside of your function. Your function returns a <em>value</em>, which you can then assign to a globally scoped variable outside your function, but you still won't be able to use the variable <code>inches</code> outside of your function.</li>
</ul>
</div>
<span class="comment-copy">What is your question?</span>
<span class="comment-copy">How do returns work. I just can't grasp it.</span>
<span class="comment-copy">The function <code>return</code>ed the calculated sum to the place that called it, which was then saved to <code>SumOfXandY</code>. By the way, you don't need semicolons at the end of statements in Python.</span>
<span class="comment-copy">@lostinlearning-sation there are <i>SO</i> many tutorials and textbooks on the fundamentals of python that would explain to you how to define functions and use <code>return</code>.  you don't need them to be specific to python 3.3.</span>
<span class="comment-copy">Tell your teacher to stopUsingCamelCaseForVariables.</span>
