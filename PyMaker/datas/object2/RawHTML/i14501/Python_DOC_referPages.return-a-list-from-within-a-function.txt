<div class="post-text" itemprop="text">
<p>I'm trying to call a list I created within a function in another function, but I get the error that the list is not defined. When I tried to do Menu = The_menu(), it runs the while loop within the function. The problem occurs when I call Restaurant_str</p>
<pre><code>from collections import namedtuple
Restaurant = namedtuple('Restaurant', 'name cuisine phone menu')
Dish = namedtuple("Dish", "name price calories")


# Constructor:   r1 = Restaurant('Taillevent', 'French', '01-11-22-33-44',  'Escargots', 23.50)

def Restaurant_str(self: Restaurant) -&gt; str:
    return (
        "Name:     " + self.name + "\n" +
        "Cuisine:  " + self.cuisine + "\n" +
        "Phone:    " + self.phone + "\n" +
        "Menu:  " + Dishlist_display(Menu))

def Restaurant_get_info() -&gt; Restaurant:
    """ Prompt user for fields of Restaurant; create and return.
    """
    return Restaurant(
        input("Please enter the restaurant's name:  "),
        input("Please enter the kind of food served:  "),
        input("Please enter the phone number:  "), The_menu())

def The_menu():
    """ Creates the menu that replaces dish in Restaurant.
    """
    Menu = []
    while True:
        x = input("Please enter the name of a Dish:  ")
        if x == "No more":
            break
        y = float(input("Please enter the price of that Dish:  "))
        z = float(input("Please enter the calorie count of that Dish:  "))
        Menu.append(Dish(x, y, z))
    return Menu


def Dish_str(x:Dish) -&gt; str:
    """ Takes a Dish and returns a string with name, price, and calories   listed.
    """
    return (x.name + " ($" + str(x.price) + "): " + str(x.calories) + " cal")

def Dishlist_display(x:list) -&gt; str:
    """Takes a list of Dishes and returns one large string consisting of the     string representation of each dish followed by a newline character
    """
    dish = ""
    for i in x:
         dish = dish + Dish_str(i) + ("\n")
    return dish
</code></pre>
<p>Here's the traceback,</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\jayjay\Documents\ICS 31\Lab 5\restaurantsd.py", line 193,      in &lt;module&gt;
restaurants()
  File "C:\Users\jayjay\Documents\ICS 31\Lab 5\restaurantsd.py", line 15, in  restaurants
    our_rests = handle_commands(our_rests)
  File "C:\Users\jayjay\Documents\ICS 31\Lab 5\restaurantsd.py", line 43, in   handle_commands
    print(Collection_str(C))
  File "C:\Users\jayjay\Documents\ICS 31\Lab 5\restaurantsd.py", line 128,   in Collection_str
    s = s + Restaurant_str(r)
  File "C:\Users\jayjay\Documents\ICS 31\Lab 5\restaurantsd.py", line 76, in   Restaurant_str
    "Menu:  " + Dishlist_display(Menu))
NameError: name 'Menu' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're calling <code>Dishlist_display(Menu)</code> from inside <code>Restaurant_str</code>, but you don't have a variable named <code>Menu</code> in that function.</p>
<p>The fact that you happen to have a local variable of that name in another function doesn't do you any good. Once that other function returned, that variable disappeared.</p>
<p>What you need to do is either take the value returned from <code>The_menu</code> and pass it along the chain from one function to the next, or stash it somewhere that everyone who needs it can find it.</p>
<p>If you wrote this in normal OO style, the right thing to do would be to stash it in an attribute of the <code>Restaurant</code> instance that these functions would all be members of. If you really want to write in (non-OCa)ML fake-OO style ported clumsily to Python as you seem to be doing, the right thing to do is stash it in a nonlocal variable in the closure that represents the object. If you want a pure functional style, then the right thing to do is to pass it alongÂ from function to function. But you have to do <em>something</em> to get the value returned by <code>The_menu</code> into something that <code>Restaurant_str</code> can access.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you're trying to reference an unknown variable  "Menu"  instead of calling the function that builds the menu.</p>
<pre><code>"Menu:  " + Dishlist_display(Menu))
</code></pre>
<p>should read</p>
<pre><code>"Menu:  " + Dishlist_display(The_menu()))
</code></pre>
<p>Alternatively, you can create the variable you're trying to reference by using Menu = The_menu()</p>
</div>
<span class="comment-copy">You should tag the programming language. This looks like Python?</span>
<span class="comment-copy">oh okay thanks @user1032613</span>
<span class="comment-copy">Could you please copy and paste the actual traceback?</span>
<span class="comment-copy">Where are you doing <code>Dishlist_display(Menu)</code>? If it's outside this function, it can't access this function's local variable <code>Menu</code>. But since you did a <code>return Menu</code>, then presumably you stored it somewhere, and can access it from that somewhere.</span>
<span class="comment-copy">Please read <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Python 3 tutorial chapter 9. <i>Classes</i></a></span>
<span class="comment-copy">okay thanks, I see that I made this more complicated that it should've been. I'll do it like you said</span>
<span class="comment-copy">Let me reiterate a point here - this would be much better if it were object oriented.</span>
<span class="comment-copy">@Joel: Actually, I suspect you could design this app without OO. It's more that if you <i>do</i> design it in OO terms, then you should use Python's OO features instead of trying to do it from scratch. Once you start throwing in <code>self</code> args outside of methods, it's time to back up and ask why they're not methods.</span>
<span class="comment-copy">okay thanks, I'll just do that then</span>
