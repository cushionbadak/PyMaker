<div class="post-text" itemprop="text">
<p>I have a problem with Python's <code>&amp;</code> bitwise operation:</p>
<pre><code>&gt;&gt;&gt; x = 0xc1
&gt;&gt;&gt; y = 0x7f
&gt;&gt;&gt; x &amp; y
&gt;&gt;&gt; 65
&gt;&gt;&gt; bytes([65])
&gt;&gt;&gt; b'A'
</code></pre>
<p>The problem is the conversion from decimal to hex. <code>65</code> is <code>0x41</code>, however Python says that it is <code>'A'</code>. Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>The value that you already have is exactly the value you want. From a comment:</p>
<blockquote>
<p>I was using bytes function because I want to concat the result of base64.b64decode(coded_string) with one more byte at the end.</p>
</blockquote>
<p><code>bytes([65])</code> creates a <code>bytes</code> object with a single byte with the numeric value <code>65</code>. What that number means depends on how you interpret the bytes. </p>
<p>The fact that its <code>repr</code> happens to be <code>b'A'</code> isn't relevant. What the value actually is, is the one byte you want. But the <code>repr</code> of a <code>bytes</code> object, as <a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow">the docs</a> explain, uses the <code>bytes</code> literal format for convenience. Any byte that matches a printable ASCII character gets represented as that character, a few common values get represented with backslash escapes like <code>\n</code>, and anything else as a hex escape, all within <code>b'…'</code></p>
<p>So, <code>repr(bytes([65]))</code> is <code>b'A'</code>, because byte <code>65</code> is the printable ASCII character <code>A</code>.</p>
<hr/>
<p>If you want to get a string with the hexadecimal representation of the number <code>65</code>, you can use the <a href="https://docs.python.org/3/library/functions.html#hex" rel="nofollow"><code>hex</code></a> function—or, if you want more control over the formatting, the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format</code></a> function:</p>
<pre><code>&gt;&gt;&gt; hex(65)
'0x41'
&gt;&gt;&gt; format(65, '02x')
'41'
</code></pre>
<p>But that's not what you want here. You want the value <code>b'A'</code>, and you already have that.</p>
</div>
<div class="post-text" itemprop="text">
<p>65 is not A in hex, it's A in <a href="http://www.asciitable.com/" rel="nofollow">ASCII code</a>; <code>print(bytes([65]))</code> and <code>print(chr(65))</code> outputs <code>b'A'</code> and <code>A</code>, respectively (ASCII representations). <a href="http://en.wikipedia.org/wiki/Hexadecimal" rel="nofollow">Hexadecimal</a> is merely a numeral system with 16 as its base. 0x41 is therefore <code>4 * 16^1 + 1 * 16^0 = 65</code>.</p>
</div>
<span class="comment-copy">Why are you using <code>bytes</code> if you want <code>hex</code>? <code>hex(65) == '0x41'</code>... Also, note that your problem is <b>not at all</b> with the <code>&amp;</code> operator, which is giving the expected result (<code>65</code>).</span>
<span class="comment-copy">bytes() will convert to ascii. use hex() as above.</span>
<span class="comment-copy">Do you just want to print the hexadecimal value?</span>
<span class="comment-copy">Searching on google I saw they use bytes... Thank u very much, u saved my life :)</span>
<span class="comment-copy"><code>bytes()</code> isn't converting to ASCII, it's just storing the 65 as the number 65. It's <code>bytes.__repr__</code> that does the conversion to ASCII later, representing each byte that corresponds to a printable ASCII character as that printable ASCII character.</span>
<span class="comment-copy">This is pretty obviously a Python 3 question—otherwise <code>bytes([65])</code> would be <code>'[65]'</code>, not <code>b'A'</code>—so this Python 2-specific answer is misleading.</span>
<span class="comment-copy">@abarnert: Updated the answer to comply with python &gt;= 3.</span>
