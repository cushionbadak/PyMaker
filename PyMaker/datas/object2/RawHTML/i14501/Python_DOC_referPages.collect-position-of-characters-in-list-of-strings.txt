<div class="post-text" itemprop="text">
<p>If I have a list of strings and I want to gather the position of each character in the string, what would be the best way? For example, if I had a list:</p>
<pre><code>text = []
stopword = ""
while True:
    line = raw_input()
    if line.strip() == stopword:
        break
    text.append(line)

text = ['fda', 'adf', 'esf', 'esfe']
</code></pre>
<p>and I wanted to create something like:</p>
<pre><code> newlst = ['faee', 'ddss', 'afff', 'e']
</code></pre>
<p>Is there a simple way? I'm creating multitudes of <code>for</code> loops and it seems convoluted.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow noreferrer"><code>izip_longest</code> from <code>itertools</code></a>*:</p>
<pre><code>&gt;&gt;&gt; from itertools import izip_longest
&gt;&gt;&gt; text = ['fda', 'adf', 'esf', 'esfe']
&gt;&gt;&gt; map(''.join, izip_longest(*text, fillvalue=''))
['faee', 'ddss', 'afff', 'e']
</code></pre>
<p>This creates an iterator of tuples of the characters at each position:</p>
<pre><code>&gt;&gt;&gt; list(izip_longest(*text, fillvalue=''))
[('f', 'a', 'e', 'e'), ('d', 'd', 's', 's'), ('a', 'f', 'f', 'f'), ('', '', '', 'e')]
</code></pre>
<p>Then uses <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> and <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a> to convert the tuples back into strings. If the <code>*</code> syntax is unfamiliar, see <a href="https://stackoverflow.com/q/36901/3001761">What does ** (double star) and * (star) do for parameters?</a></p>
<hr/>
<p>* <em>If using Python 3.x, note that this function has been renamed to <code>zip_longest</code>, as <code>zip</code> now takes the iterator behaviour and <code>izip</code> no longer exists - see e.g. <a href="https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists" rel="nofollow noreferrer">What's New in Python 3.0</a>.</em></p>
</div>
