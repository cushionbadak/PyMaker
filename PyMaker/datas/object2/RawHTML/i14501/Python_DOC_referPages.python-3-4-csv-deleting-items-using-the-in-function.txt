<div class="post-text" itemprop="text">
<p>This is my current code, the current issue I have is that search returns nothing. How do I achieve a string value for this variable.</p>
<pre><code>count = 0
with open("userDatabase.csv","r") as myFile:
    with open("newFile.csv","w") as newFile:
        row_count = sum(1 for row in myFile)
        print("aba")
        for x in range(row_count):
            print("aaa")
            for row in myFile:
                search = row[count].readline
                print(search)
                if self.delName.get("1.0","end-1c") in search:
                    count = count + 1
                else:
                    newFile.write(row[count])
                    count = count + 1
</code></pre>
<p>The output is:</p>
<pre><code>aba
aaa
aaa
</code></pre>
<p>So it runs through it twice, which is good as my userDatabase consists of two rows of data.</p>
<p>The file in question has this data:</p>
<pre class="lang-none prettyprint-override"><code>"lukefinney","0000000","0000000","a"
"nictaylor","0000000","0000000","a"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot just iterate over an open file more than once without rewinding the file object back to the start.</p>
<p>You'll need to add a <code>file.seek(0)</code> call to put the file reader back to the beginning each time you want to start reading from the first row again:</p>
<pre><code>myFile.seek(0)
for row in myFile:
</code></pre>
<p>The rest of your code makes little sense; when iterating over a file you get individual lines from the file, so each <code>row</code> is a string object. Indexing into strings gives you new strings with just one character in it; <code>'foo'[1]</code> is the character <code>'o'</code>, for example.</p>
<p>If you wanted to copy across rows that don't match a string, you don't need to know the row count up front at all. You are not handling a list of rows here, you can look at each row individually instead:</p>
<pre><code>filter_string = self.delName.get("1.0","end-1c")

with open("userDatabase.csv","r") as myFile:
    with open("newFile.csv","w") as newFile:
        for row in myFile:
            if filter_string not in row:
                newFile.write(row)
</code></pre>
<p>This does a sub-string match. If you need to match whole columns, use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> module</a> to give you individual columns to match against. The module handles the quotes around column values:</p>
<pre><code>import csv

filter_string = self.delName.get("1.0","end-1c")

with open("userDatabase.csv", "r", newline='') as myFile:
    with open("newFile.csv", "w", newline='') as newFile:
        writer = csv.writer(newFile)
        for row in csv.reader(myFile):
            # row is now a list of strings, like ['lukefinney', '0000000', '0000000', 'a']

            if filter_string != row[0]:  # test against the first column
                # copied across if the first column does not match exactly.
                writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One problem is that <code>row_count = sum(1 for row in myFile)</code> consumes all rows from <code>myFile</code>. Subsequent reads on <code>myFile</code> will return an empty string which signifies end of file. This means that for loop later in your code where you execute <code>for row in myFile:</code> is not entered because all rows have already been consumed.</p>
<p>A way around this is to add a call to <code>myFile.seek(0)</code> just before <code>for row in myFile:</code>. This will reset the file pointer and the for loop should then work.</p>
<p>It's not very clear from your code what it is that you are trying to do, but it kind of looks like you want to filter out rows that contain a certain string. Try this:</p>
<pre><code>with open("userDatabase.csv","r") as myFile:
    with open("newFile.csv","w") as newFile:
        for row in myFile:
            if self.delName.get("1.0","end-1c") not in row:
                newFile.write(row)
</code></pre>
</div>
<span class="comment-copy">Thank you for your response, I have implemented your change. However, now I get the error of:    File "E:\A2\Computing\Comp 4\Code\GUItemplate.py", line 198, in delUser     search = row[count].readline AttributeError: 'str' object has no attribute 'readline'  What addition should I make here now?</span>
<span class="comment-copy">@LukeFinney: what did you want to do with that line? <code>row</code> is a <i>string</i>, one line in your file, so <code>row[count]</code> is a one-character string. <code>readline</code> is not an attribute available on a string.</span>
<span class="comment-copy">I want to get the string of each row and then check to see if the string contains the name which is found using the .get() function. As this function is trying to delete in csv I then save if the string is not the name I want to delete.</span>
<span class="comment-copy">@LukeFinney: you don't need to get the row count for that; just loop over the file and copy across any lines that don't match.</span>
<span class="comment-copy">I'm really sorry but I don't quite follow. I know it's a huge ask, but you please type what I'm meant to have there. I know it's not really in the taste of StackOverflow, but I'm new to Python and really stuck on this.</span>
