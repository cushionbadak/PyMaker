<div class="post-text" itemprop="text">
<p>Other than by subclassing (from <code>list</code> for example) how do I make a python object implicitly convertable to <code>ndarray</code>?</p>
<p>Example:</p>
<pre><code>import numpy
arg=[0,1,2]
numpy.dot(arg,arg) # OK, arg is converted to ndarray

#Looks somewhat array like, albeit without support for slices
class A(object):
    def __init__(self, x=0,y=1,z=2):
        (self.x,self.y,self.z)=(x,y,z)
    def __getitem__(self, idx):
        if idx==0:
            return self.x
        elif idx==1:
            return self.y
        elif idx==2:
            return self.z
        else:
            raise IndexError()
    def __setitem__(self, idx, val):
        if idx==0:
            self.x=val
        elif idx==1:
            self.y=val
        elif idx==2:
            self.z=val
        else:
            raise IndexError()
    def __iter__(self):
        for v in (self.x,self.y,self.z):
            yield v
     # Is there a set of functions I can add here to allow
     # numpy to convert instances of A into ndarrays?
arg=A()
numpy.dot(arg,arg) # does not work
</code></pre>
<p>Error:</p>
<pre><code>&gt;&gt;&gt; scipy.dot(a,a) # I use scipy by default
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
/home/dave/tmp/&lt;ipython-input-9-f73d996ba2b6&gt; in &lt;module&gt;()
----&gt; 1 scipy.dot(a,a)

TypeError: unsupported operand type(s) for *: 'A' and 'A'
</code></pre>
<p>It's calling <code>array(arg)</code> but that yields an array like <code>[arg,]</code>, it's <code>shape==()</code> so <code>dot</code> tries to multiply the <code>A</code> instances together.</p>
<p>It's ok (in fact, expected) that the conversion to <code>ndarray</code> will require copying the data.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>__len__</code> seems to be the key feature: just adding a </p>
<pre><code>def __len__(self):
    return 3
</code></pre>
<p>made the class work in <code>numpy.dot</code>.</p>
</div>
<span class="comment-copy">Please show the error you get when you call <code>numpy.dot()</code>.</span>
<span class="comment-copy">In what way does that conversion not work?  Does it give a traceback?  Perhaps you need some of the other magic methods like <b>len</b>?</span>
<span class="comment-copy">At a minimum, I'd implement everything listed under <a href="https://docs.python.org/3/library/collections.abc.html" rel="nofollow noreferrer"><code>collections.abc.Sequence</code></a>.</span>
<span class="comment-copy">@Kevin -- thanks</span>
<span class="comment-copy">Step back from <code>np.dot</code>, and focus on getting <code>np.array(arg)</code> working.</span>
