<div class="post-text" itemprop="text">
<p>The following line, unless I'm mistaken, will grab the absolute path to your directory so you can access files </p>
<p><code>PATH = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0])))</code></p>
<p>This is what I've been using typically access files in my current directory when I need to use images etc in the programs i've been writing.</p>
<p>Now, say I do the following since I'm using windows to access a specific image in the directory</p>
<p><code>image = PATH + "\\" + "some_image.gif"</code></p>
<p>This is where my question lies, this works on windows, but if I remember correctly <code>"\\"</code> is for windows and this will not work on other OS? I cannot directly test this myself as I don't have other operating systems or I wouldn't have bothered posting. As far as I can tell from where I've looked this isn't mentioned in the documentation.
If this is indeed the case is there a way around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, <code>'\\'</code> is just for Windows. You can use <code>os.sep</code>, which will be <code>'\\'</code> on Windows, <code>':'</code> on classic Mac, <code>'/'</code> on almost everything else, or whatever is appropriate for the current platform.</p>
<p>You can <em>usually</em> get away with using <code>'/'</code>. Nobody's likely to be running your program on anything but Windows or Unix. And Windows will accept <code>'/'</code> pathnames in <em>most</em> cases. But there are many Windows command-line tools that will confuse your path for a flag if it starts with <code>/</code>, and some even if you have a <code>/</code> in the middle, and if you're using <code>\\.\</code> paths, a <code>/</code> is treated like a regular character rather than a separator, and so on. So you're better off not doing that.</p>
<p>The simple thing to do is just use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a>:</p>
<pre><code>image = os.path.join(PATH, "some_image.gif")
</code></pre>
<hr/>
<p>As a side note, in your first line, you're already using <code>join</code>—but you don't need it there:</p>
<pre><code>PATH = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0])))
</code></pre>
<p>It's perfectly legal to call <code>join</code> with only one argument like this, but also perfectly useless; you just join the one thing with nothing; you will get back exactly what you passed in. Just do this:</p>
<pre><code>PATH = os.path.abspath(os.path.dirname(sys.argv[0]))
</code></pre>
<hr/>
<p>One last thing: If you're on Python 3.4+, you may want to consider using <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow"><code>pathlib</code></a> instead of <code>os.path</code>:</p>
<pre><code>PATH = Path(sys.argv[0]).parent.resolve()
image = PATH / "some_image.gif"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a> instead of <code>"\\"</code>:</p>
<pre><code>os.path.join(PATH, "some_image.gif")
</code></pre>
<p>The function will join intelligently the different parts of the path.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>PATH = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0])))
image = os.path.join(PATH, "some_image.gif")
</code></pre>
<p><a href="https://docs.python.org/2/library/os.path.html#os.path.join" rel="nofollow">os.path.join</a> will intelligently join the arguments using <a href="https://docs.python.org/2/library/os.html#os.sep" rel="nofollow">os.sep</a> which uses the OS file separator for you.</p>
</div>
<span class="comment-copy">Just use <code>/'s</code>, that will work on every OS</span>
<span class="comment-copy">What's the <code>os.path.join</code> there for? If you just pass one thing to <code>join</code>, you just get back that one thing; there's nothing to join it to.</span>
<span class="comment-copy">Meanwhile, why are you <i>not</i> using <code>os.path.join</code> in the <code>image = </code> line? That's exactly where you <i>do</i> need it.</span>
<span class="comment-copy">Good point just reusing code from another program where i was walking over the directories counting files etc. Also, why would i need the .join in the image line? I set up the <code>PATH</code> variable then used it in the image line to just easily call the arbitrary path for multiple images, files, etc. Only other way I see to do that is to walk over the directory and then access the images from elements of an array just thought that was easier Also, thank you didn't realize <code>/'s</code> would work on any OS, thought it was different for some reason</span>
<span class="comment-copy">The reason you need the <code>join</code> is because it abstracts out the whole "should I use \\ or / or can I figure out the right thing for the current platform or …" and just does it right.</span>
<span class="comment-copy">Thank you for the excellent answer that cleared up a lot of things I was confused about.</span>
