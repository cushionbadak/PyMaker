<div class="post-text" itemprop="text">
<p>How do I implement a simple code that will only save the student's latest 3 scores? If the test is repeated later, the old score should be replaced.</p>
<p>Thank you.</p>
<p>This is the code that asks the user the questions and saves the results in the txt. files.</p>
<pre><code>import random
import math
import operator as op

correct_answers = 0

def test():
    num1 = random.randint(1, 10)
    num2 = random.randint(1, 10)

ops = {
    '+': op.add,
    '-': op.sub,
    '*': op.mul,
}

keys = list(ops.keys()) 
rand_key = random.choice(keys)  
operation = ops[rand_key]  

correct_result = operation(num1, num2)

print ("What is {} {} {}?".format(num1, rand_key, num2))
user_answer= int(input("Your answer: "))

if user_answer != correct_result:
    print ("Incorrect. The right answer is {}".format(correct_result))
    return False
else:
    print("Correct!")
    return True

username = input("What is your name? ")
print("Hi {}! Welcome to the Arithmetic quiz...".format(username))
class_name = input("Are you in class 1, 2 or 3? ")
correct_answers = 0
num_questions = 10

for i in range(num_questions):
    if test():
        correct_answers +=1


print("{}: You got {}/{} questions correct.".format(
    username, 
    correct_answers, 
    num_questions,

))

class_name = class_name + ".txt"    #creates a txt file called the class    that the user entered earlier on in the quiz.

file = open(class_name , 'a')   #These few lines open and then write the    username and the marks of the student into the txt file.
name = (username)
file.write(str(username + " : " ))  
file.write(str(correct_answers))
file.write('\n')    #This puts each different entry on a different line.
file.close()    #This closes the file once the infrmation has been written.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A much better solution would be to store the data in a different format that made everything easy. For example, if you used a <a href="https://docs.python.org/3/library/shelve.html" rel="nofollow"><code>shelve</code></a> database that mapped each username to a <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow"><code>deque</code></a> of answers, the whole thing would be this simple:</p>
<pre><code>with shelve.open(class_name) as db:
    answers = db.get(username, collections.deque(maxlen=3))
    answers.append(correct_answers)
    db[username] = answers
</code></pre>
<hr/>
<p>But if you can't change the data format, and you need to just append new lines to the end of a human-readable text file, then the only want to find out if there are already 3 answers is to read through every line in the file to see how many are already there. For example:</p>
<pre><code>past_answers = []
with open(class_name) as f:
    for i, line in enumerate(f):
        # rsplit(…,1) instead of split so users who call
        # themselves 'I Rock : 99999' can't cheat the system
        name, answers = line.rsplit(' : ', 1)
        if name == username:
            past_answers.append(i)
</code></pre>
<hr/>
<p>And if there were 3 past answers, you have to rewrite the file, skipping line #i. This is the really fun part; text files aren't random-access-editable, so the best you can do is either read it all into memory and write it back out, or copy it all to a temporary file and move it over the original. Like this:</p>
<pre><code>excess_answers = set(past_answers[:-2])
if excess_answers:
    with open(class_name) as fin, tempfile.NamedTemporaryFile() as fout:
        for i, line in enumerate(fin):
            if i not in excess_answers:
                fout.write(line)
        os.replace(fout.name, fin)
</code></pre>
<p>That part is untested. And it requires Python 3.3+; if you have an earlier version and are on Mac or Linux you can just use <code>os.rename</code> instead of <code>replace</code>, but if you're on Windows… you need to do some research, because it's ugly and no fun.</p>
<hr/>
<p>And now, you can finally just append the new answer, as you're already doing.</p>
</div>
<span class="comment-copy">What is your code doing now? What is wrong with it?</span>
<span class="comment-copy">You can use an update(list) method which you call everytime you get a new score. In the method, you get in parameter the score list and the new score, delete the oldest score and add the new one</span>
<span class="comment-copy">The scores aren't saved in memory, they're saved in a text file on disk.</span>
<span class="comment-copy">@abarnert: I missed that</span>
<span class="comment-copy">@cdarke: Actually, with a <code>deque</code>, you don't need the <code>popleft</code> if you just set a <code>maxlen</code>. And together with <code>shelve</code>, that makes a perfect simple database for the OP's use…</span>
<span class="comment-copy">Plus one for suggesting <code>shelve</code></span>
<span class="comment-copy">@cdarke: Moved the <code>shelve</code> part to the top, and stole your <code>deque</code> idea.</span>
<span class="comment-copy">You're welcome :-)  I hadn't thought of using maxlen.  This is why I like stackoverflow.</span>
