<div class="post-text" itemprop="text">
<p>I'm still getting to grips with dictionaries in Python.  Is it possible to reference the Key in a dict of dicts by using either a regex or a startswith function?</p>
<p>I have a dict of dicts in the following format and I am trying to do a general search for 'AreaOfInterest1','AreaOfInterest2','AreaOfInterest3' etc.  I make it general as I then refer the associated list value[0] to perform actions.</p>
<p>My dict of dicts would look something like...</p>
<pre><code>FeatureDict = {
    "MATCHcode96":{
    'ID':'MATCHcode96',
    'AreaOfInterest1':['String 1','%',0],
    'AreaOfInterest2':['String 2','Avg',[]],
    'AreaOfInterest3':['String 3','Avg',[]],
    },
    "MATCHcode9F":{
    'ID':'MATCHcode9F',
    'AreaOfInterest1':['String 1','%',0],
    'AreaOfInterest2':['String 2','Avg',[]],
    },
}
</code></pre>
<p>The kind of functionality I am looking for is either to use startswith (like below) or otherwise try regex..</p>
<pre><code>for dict in FeatureDict:
    if FeatureDict[dict]['ID'] in mypkt.Text:               
        if FeatureDict[dict][startswith.('AreaOfInterest')][0] in mypkt.Text:
            print 'found'   
</code></pre>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, <code>dict</code> does not support lookups based on functions of the key or partial matches of the key. <code>dict</code> does support iteration, so you can do your own lookup, at a O(n) cost. (<code>dict</code> lookup is ordinarily O(1)).</p>
<pre><code>for outer_key, outer_val in FeatureDict.items():
    if outer_val['ID'] in mypkt.Text:
        for inner_key, inner_val in outer_val:
            if inner_key.startswith('AreaOfInterest') and inner_val in mypkt.Text:
                print found
                break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just keep looping:</p>
<pre><code>ids = ['MATCHcode9F']
area_ids = ['String 1']
for key in data:
    if data[key]['ID'] in ids:
        for inner_key in data[key]:
            if inner_key.startswith('AreaOfInterest') and data[key][inner_key][0] in area_ids:
                print('found')
</code></pre>
<p>So your code would look like</p>
<pre><code>for key in FeatureDict:
    if FeatureDict[key]['ID'] in mypkt.Text:
        for inner_key in FeatureDict[key]:
            if inner_key.startswith('AreaOfInterest') and FeatureDict[key][inner_key][0] in mypkt.Text:
                print 'found'
</code></pre>
</div>
<span class="comment-copy">I would recommend using the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> function here. <code>if any(FeatureDict[dict][k].startswith('AreaOfInterest') and FeatureDict[dict][k][0] in mypkt.Text for k in FeatureDict[dict]): print 'found'</code>. Disclaimer: untested. And the downside of using any is that you can't save the value you found, but it's good for simple "found" conditionals.</span>
<span class="comment-copy">Oh and, <code>dict</code> is not a good variable name because it shadows the built-in type of the same name.</span>
