<div class="post-text" itemprop="text">
<p>I'm doing a search for hierarchical dictionary, and I have to put the content into a variable named "content":</p>
<pre><code>def look_through(d, s):
    r = []
    content = readFile(d["path"])

    if s in content:
        if "phrase" not in d:
            d["phrase"] = [s]
        else:
            d["phrase"].append(s)
        r.append({"content": content, "phrase": d["phrase"], "name": d["name"]})
    for b in d["decendent"] or []:
            r += look_through(b, s)
    return r
</code></pre>
<p>But the "content" should be an exceprt from the text, not the full content, i.e. several words from behind and several words in front of the searching phrase.</p>
<p>E.g.:</p>
<p>phrase: "<strong>looking for</strong>"</p>
<p>content: ... she was <strong>looking for</strong> him...</p>
<p>How to crop the content in a function in order to achieve this result?
Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that all you know is that <code>s in content</code>â€”in other words, you know the string is in there <em>somewhere</em>, but you need to know <em>where</em> to get the context.</p>
<p>Just use <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow"><code>content.find(s)</code></a> instead, and you'll have that:</p>
<pre><code>pos = content.find(s)
if pos != -1:
    if "phrase" not in d:
        # etc.
</code></pre>
<p>Now, to find "several words behind", just search backward for several word separators from <code>pos</code>, and to find "a couple words ahead", search forward for several word separators from <code>pos + len(s)</code>.</p>
<p>Of course you have to define what "several" means, and what constitutes a word separator, but you should be able to work out the rest from here. (Make sure you see <code>rfind</code> along with <code>find</code> in the docs, and look at all of the parameters to both methods, and don't forget to handle the edge case where <code>s</code> is found right near the start or end of <code>content</code>.)</p>
<p>One last side note: Are you sure that <code>s in content</code> (and, equivalently, <code>content.find(s)</code>) is really what you want? For example, if I search for "sing out", should that be found in "The star is losing outer layers"?</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/library/re.html#module-re" rel="nofollow noreferrer">docs.python.org/2/library/re.html#module-re</a></span>
<span class="comment-copy">The problem is that in my case the needed word can be found several times in one content also. So I have to look for several matchings of the word.</span>
<span class="comment-copy">@paus: That's fine. Look at the other arguments to <code>find</code> and it should be obvious how to look for additional matches.</span>
<span class="comment-copy">And I'm not sure, that "pos = content.find(s)" is a proper solution for my case because words can change their form so I need to use something like pymorphy2 in combination with find() function.</span>
<span class="comment-copy">@paus: OK, if you need something that wasn't in your original question, but you know what you need, that shouldn't be a problem. (If you get stuck trying to implement it, you've got a new question.)</span>
