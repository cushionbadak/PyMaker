<div class="post-text" itemprop="text">
<pre><code>while True:
    chunks = []

    for x in range(len(new_match_list)):
        if new_match_list[x] == ID_Input:
            chunks=[new_ID_info_list[x:x+7] for x in range(0, len(new_ID_info_list), 7)]

    if len(chunks) == 0:
        ID_Input = input("Please choose a number from the list provided, and enter it correctly this time!")

    if len(chunks) &gt; 0:
        print (chunks[x])
        break
</code></pre>
<p>I'm having a problem with my program, where it shows no error but suddenly stops running, pauses for a minute, then stops.</p>
<p>For example, the program stops after producing:</p>
<pre><code>Here is the list of complaint IDs you can choose from and ask about : ['1344139', '1344055', '1343332', '1343188', '1343131', '1341190', '1340441', ]
Choose a number from that list, and enter it in. Type in 'Quit' if you want to quit the program: 1344139

.....
</code></pre>
<p>There is no error message produced whatsoever.</p>
<p>The goal of the code is to print out a list of data, containing 7 pieces of information (such as Zip Code, State) about the specific ID Number.</p>
<p>If the ID Number entered is not in my list of ID numbers (AKA new_match_list), then the "chunks" will remain blank (hence, len(chunks) will be 0), and the user will be forced to re-enter the ID number until it matches the one on my (new_match_list).</p>
<p>If the ID number does match, it should fill out (chunks) and print out the specific part ([x]) of (chunks) related to the ID.</p>
<p>What can I do to fix this error?</p>
<p><strong>Edit:</strong> I've tried different ways to fix this error, such as substituting:</p>
<pre><code>len(chunks) == 0:
</code></pre>
<p>with</p>
<pre><code>if ID_Input not in new_match_list:
</code></pre>
<p>but nothing has worked. As always the program just stops without giving me an error</p>
</div>
<div class="post-text" itemprop="text">
<p>Your question is a little unclear, but I suspect that when control reaches <code>print (chunks[x])</code> you want <code>x</code> to have the value it had when <code>new_match_list[x] == ID_Input</code> was <code>True</code>. If so, you need to put a <code>break</code> statement as the last line of that <code>if</code> block, i.e., after the <code>chunks=[new_ID_info_list...</code> line. And, as Paul Cornelius mentioned, you need to change the variable in that list comprehension so that <code>x</code> doesn't get clobbered.</p>
<p>However, there's a better way to find the first matching entry in a list: use its <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow">.index()</a> method. You will need to put this inside a <code>try: ... except</code> block; alternatively, use the <code>in</code> operator to test that the ID is in the list before attempting to fetch its index.</p>
</div>
<span class="comment-copy">the output you posted would not be produced by the code you posted.  please correct this mismatch.</span>
<span class="comment-copy">Perhaps you shouldn't name so many variables <code>x</code>.  You have one in a for loop, one in a list comprehension (which is inside the for loop), and one in the print statement (which is outside the loop).  I don't even want to think about what this code will actually do.  Clean up the mess and see what happens.  And maybe you can tell us how a program that "suddenly stops running" can pause for a minute and then stop.  How can you tell?</span>
