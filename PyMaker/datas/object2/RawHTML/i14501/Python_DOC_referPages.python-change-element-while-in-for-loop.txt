<div class="post-text" itemprop="text">
<p>Let's say we have three lists:</p>
<pre><code>listA = [5,6,2]
listB = [7,1]
listC = [5,3,6]
</code></pre>
<p>I would like to sort those lists in one <code>for</code> loop, so do something like:</p>
<pre><code>for thisList in [listA, listB, listC]:  # edited, was 'list' here
    thisList = thisList.sort()
</code></pre>
<p>where <code>thisList</code> would be <code>listA</code>, then <code>listB</code>, then <code>listC</code>, so at the end my lists would be like this:</p>
<pre><code>listA = [2,5,6]
listB = [1,7]
listC = [3,5,6]
</code></pre>
<p>Is there a way to do this?</p>
<p>Note - this is just an example, the problem I'm dealing with is kinda harder, but I wanted to make a simple example of what I need.</p>
<p>--edit--</p>
<p>What if I would like to make some custom sorting here?
I know that, for example, I can make custom sorting this way:
    myList = sorted(myList, key= lambda val: val/2)</p>
<p>but I'm using <code>sorted</code>, not <code>sort</code> here.</p>
<p>Can I use custom sorting in <code>sort</code>?</p>
<p>Asking cause given answers (thx btw ;) ) are using <code>sort</code>...</p>
</div>
<div class="post-text" itemprop="text">
<p>You're close. What you want is:</p>
<pre><code>for thisList in [listA, listB, listC]:
    thisList.sort()
</code></pre>
<p>The first problem in your code is that you were using <code>list</code> as the loop variable, but <code>thisList</code> inside the loop. Those aren't the same. So, whatever you had previously assigned to <code>thisList</code> earlier in the module or interactive session, you were just sorting that over and over again, without affecting <code>listA</code>, <code>listB</code>, and <code>listC</code>.</p>
<p>The second problem is that the <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow"><code>list.sort</code></a> method sorts the list in-place and returns <code>None</code>, so you don't want to do anything with that return value. It's <em>harmless</em> to overwrite the <code>thisList</code> variable with <code>None</code>, but it's certainly confusing to the reader, so don't do it.</p>
<hr/>
<p>Since you've edited the question into something different:</p>
<blockquote>
<p>What if I would like to make some custom sorting here? I know that, for example, I can make custom sorting this way: myList = sorted(myList, key= lambda val: val/2) … Can I use custom sorting in sort?</p>
</blockquote>
<p>Look at the docs for <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow"><code>sorted</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow"><code>list.sort</code></a>. Both of them take a <code>key</code> argument, and both document it the same way. If you can't guess from that whether they actually work the same way, it would take a couple seconds to test it for yourself:</p>
<pre><code>&gt;&gt;&gt; lst = [2, 11]
&gt;&gt;&gt; sorted(lst, key=str)
[11, 2]
&gt;&gt;&gt; lst.sort(key=str)
&gt;&gt;&gt; lst
[11, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't name your variables with a number, or a letter. Put all lists in another list. Then you can operate on theses objects in for-loops:</p>
<pre><code>lists = [listA, listB, listC]

for lst in lists:
    lst.sort()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for l in [list1, list2, list3]:
    l.sort()
</code></pre>
<p>On a side note, do not use the reserved word <code>list</code> when looping through them</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>listA = [5,6,2]

listB = [7,1]

listC = [5,3,6]

lists = [listA, listB, listC]

for indx, list in enumerate(lists):
    lists[indx] = sorted(list)



In [52]: lists
Out[52]: [[2, 5, 6], [1, 7], [3, 5, 6]]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow noreferrer"><code>list.sort</code></a> sorts a list in-place and returns <code>None</code>, so <code>thisList = thisList.sort()</code> will first sort the old list in-place, then forget it and reassign <code>thisList</code> to <code>None</code>, which doesn't seem very useful. What exactly did you <i>want</i> it to do?</span>
<span class="comment-copy"><code>for sublist in list_of_lists: sublist.sort()</code></span>
<span class="comment-copy">Isn't your example working like you want?</span>
<span class="comment-copy">I added an answer with sorted, you have to asign the value, its the only difference</span>
<span class="comment-copy">You've edited your question into a completely different question; don't do that. Plus, it's one that you can answer for yourself with a second's glance at the online help for <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow noreferrer"><code>list.sort</code></a> and <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a>: they both take <code>key</code> arguments that do the same thing.</span>
<span class="comment-copy">Or it could be done with <code>sorted</code> in one list comprehension.</span>
<span class="comment-copy">@Kasra: Not if you want to actually affect what's in the <code>listA</code>, <code>listB</code>, and <code>listC</code> variables, which is what it seems like he wants to do.</span>
<span class="comment-copy">I edited my question a little, pls check it I You can :)</span>
<span class="comment-copy">No; this just repeatedly reassigns the <code>list</code> variable without affecting the actual <code>listA</code>, <code>listB</code>, and <code>listC</code> lists.</span>
<span class="comment-copy">Yeah its strange, for some reason it worked for me the first time, I rushed the answer</span>
<span class="comment-copy">I updated it with a valid one</span>
<span class="comment-copy">thanks, works :)</span>
