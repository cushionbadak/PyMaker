<div class="post-text" itemprop="text">
<p>I'm having a problem with Travis on every commit. My tests work on local but on Travis I get this error:</p>
<pre><code>Traceback (most recent call last):
  File "/opt/python/3.2.5/lib/python3.2/unittest/case.py", line 370, in _executeTestPart
    function()
  File "/opt/python/3.2.5/lib/python3.2/unittest/loader.py", line 32, in testFailure
    raise exception
ImportError: Failed to import test module: test.test_parser
Traceback (most recent call last):
  File "/opt/python/3.2.5/lib/python3.2/unittest/loader.py", line 261, in _find_tests
    module = self._get_module_from_name(name)
  File "/opt/python/3.2.5/lib/python3.2/unittest/loader.py", line 239, in _get_module_from_name
    __import__(name)
  File "/home/travis/build/davidmogar/genderator/test/test_parser.py", line 5, in &lt;module&gt;
    import genderator
  File "/home/travis/build/davidmogar/genderator/genderator/__init__.py", line 3, in &lt;module&gt;
    from genderator.parser import Parser
  File "/home/travis/build/davidmogar/genderator/genderator/parser.py", line 5, in &lt;module&gt;
    from .utils import Normalizer
  File "/home/travis/build/davidmogar/genderator/genderator/utils.py", line 63
    u'\N{COMBINING TILDE}'
                        ^
SyntaxError: invalid syntax
</code></pre>
<p>Here is the code where that line is:</p>
<pre><code>def remove_accent_marks(text):
        good_accents = {
            u'\N{COMBINING TILDE}',
            u'\N{COMBINING CEDILLA}'
        }

        return ''.join(c for c in unicodedata.normalize('NFKD', text)
                       if unicodedata.category(c) != 'Mn' or c in good_accents)
</code></pre>
<p>I have no idea about what is the problem because as I've said, all test are working in local. Here is my .travis.yml file:</p>
<pre><code>language: python
python:
  - "3.2"
  - "3.3"
  - "3.4"
script: python -m unittest discover
</code></pre>
<p>Any idea?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>u'...'</code> syntax in Python 3 is only supported in <a href="https://docs.python.org/3/whatsnew/3.3.html#summary-release-highlights" rel="nofollow">Python 3.3 and up</a>.</p>
<p>The <code>u</code> prefix is only there to support polyglot Python code (supporting both 2 and 3), and can be safely removed if you don't need to support Python 2.</p>
<p>If you need to support both Python 2 <em>and</em> 3.2, you'll have to use a different approach. You could use a <code>from __future__</code> import to make all string literals in Python 2 produce <code>unicode</code> string objects; this applies per module:</p>
<pre><code>from __future__ import unicode_literals

def remove_accent_marks(text):
    good_accents = {
        '\N{COMBINING TILDE}',
        '\N{COMBINING CEDILLA}'
    }
</code></pre>
<p>The strings will be treated as Unicode in both Python 2 and 3.</p>
<p>Or you could create your own polyglot function:</p>
<pre><code>import sys

if sys.version_info[0] &lt; 3:
    u = lambda s: unicode(s.replace(r'\\', r'\\\\'), "unicode_escape")
else:
    u = lambda s: s
</code></pre>
<p>and use that on all your Unicode strings:</p>
<pre><code>def remove_accent_marks(text):
    good_accents = {
        u('\N{COMBINING TILDE}'),
        u('\N{COMBINING CEDILLA}')
    }
</code></pre>
<p>or you can use the <a href="http://pythonhosted.org//six/" rel="nofollow"><code>six</code> library</a> to produce that bridge for you:</p>
<pre><code>import six

def remove_accent_marks(text):
    good_accents = {
        six.u('\N{COMBINING TILDE}'),
        six.u('\N{COMBINING CEDILLA}')
    }
</code></pre>
<p>You may want to read the <a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow">Python Porting HOWTO</a>.</p>
</div>
<span class="comment-copy">I would like to support Python 2. Is there any alternative?</span>
<span class="comment-copy">@DavidMorenoGarc√≠a: updated with your alternatives.</span>
<span class="comment-copy">Thank you. Perfect answer.</span>
