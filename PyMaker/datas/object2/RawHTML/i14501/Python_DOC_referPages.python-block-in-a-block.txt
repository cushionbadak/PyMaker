<div class="post-text" itemprop="text">
<p>I'm trying to to read in the <code>ls -a</code> command in python,so the output would look like this one:
<code>[[.][..][DIR1][DIR2][FILE1]]</code>
the code so far is:</p>
<pre><code>t=[]
import sh
lsa=sh.ls("-a")
for sor in lsa:
    t.append(sor)
print(t)
</code></pre>
<p>the output now is like this:</p>
<p><code>['.  ..  FILE1  FILE2\n']</code></p>
<p>(Sh is the module i use to execute bash commands)</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://mywiki.wooledge.org/ParsingLs" rel="nofollow">Don't parse the output of <code>ls</code></a>.  The standard library function <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow"><code>os.listdir</code></a> produces the list you want (except that it does not include entries for <code>.</code> and <code>..</code> â€” but that <em>is</em> almost always the behavior you want) (also, you have to sort it yourself if you need it sorted).</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; sorted(os.listdir("."))
['.ICE-unix', '.Test-unix', '.X0-lock', '.X11-unix', '.XIM-unix', ...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/questions/30153412/python-block-in-a-block/30153563#30153487">zwol</a> is right - you should use <code>os.listdir</code>.</p>
<p>To get the format you want you should use</p>
<pre><code>print "[" + "".join("[{}]".format(file) for file in os.listdir('.')) + "]"
</code></pre>
<p>or</p>
<pre><code>print "[[" + "][".join(os.listdir('.')) + "]]"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply place the results in a list before you append them:</p>
<pre><code>for sor in lsa:
    t.append(list(sor))
</code></pre>
<p>If your results are actually a single result which is a string, try:</p>
<pre><code>lsa = lsa.split()
for sor in las:
    t.append(list(sor))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/subprocess.html#subprocess.check_output" rel="nofollow">subprocess module</a> </p>
<pre><code>from subprocess import check_output

a=check_output(["ls", "-a"])
print a.split()
</code></pre>
</div>
