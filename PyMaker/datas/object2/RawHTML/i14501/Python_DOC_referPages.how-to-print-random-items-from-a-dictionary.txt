<div class="post-text" itemprop="text">
<p>everyone. I'm trying to complete a basic assignment. The program should allow a user to type in a phrase. If the phrase contains the word "happy" or "sad", that word should then be randomly replaced by a synonym (stored in a dictionary). The new phrase should then be printed out. What am I doing wrong? Every time I try to run it, the program crashes. This is the error I get: </p>
<pre><code>  0_part1.py", line 13, in &lt;module&gt;
    phrase["happy"] = random.choice(thesaurus["happy"])
TypeError: 'str' object does not support item assignment
</code></pre>
<p>Here is what I have so far:</p>
<pre><code>import random

thesaurus = {
    "happy": ["glad", "blissful", "ecstatic", "at ease"],
    "sad": ["bleak", "blue", "depressed"]
    }

phrase = input("Enter a phrase: ")
phrase2 = phrase.split(' ')


if "happy" in phrase:
    phrase["happy"] = random.choice(thesaurus["happy"])
if "sad" in phrase:
    phrase["sad"] = random.choice(thesaurus["sad"])

print(phrase)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason for your error is that <code>phrase</code> is a string, and strings are immutable. On top of that, strings are <em>sequences</em>, not <em>mappings</em>; you can index them or slice them (e.g., <code>happy_index = phrase.find("happy"); phrase[happy_index:happy_index+len("happy")]</code>), but you can't use them like dictionaries.</p>
<p>If you want to create a new string, replacing the substring <code>happy</code> with another word, use the <code>replace</code> method.</p>
<p>And there's no reason to check first; if <code>happy</code> isn't found, <code>replace</code> wil do nothing.</p>
<p>So:</p>
<pre><code>phrase = phrase.replace("happy", random.choice(thesaurus["happy"]))
</code></pre>
<hr/>
<p>While we're at it, instead of explicitly looking up each key, you may want to <em>loop</em> over the dictionary and apply <em>all</em> the synonyms:</p>
<pre><code>for key, replacements in thesaurus.items():
    phrase = phrase.replace(key, random.choice(replacements))
</code></pre>
<hr/>
<p>Finally, notice that this code will replace all instances of <code>happy</code> with the same replacement. Which I think your intended code was also trying to do. If you want to replace each of them with a separately randomly-chosen synonym, that's a bit more complicated. You could loop over <code>phrase.find("happy", offset)</code> until it returns <code>-1</code>, but a neat trick might make it simpler: <code>split</code> the string around each instance of <code>happy</code>, substitute in a different synonym for each split part, then <code>join</code> them all back together. Like this:</p>
<pre><code>parts = phrase.split("happy")
parts[:-1] = [part + random.choice(thesaurus["happy"]) for part in parts[:-1]]
phrase = ''.join(parts)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generate a random number from <code>(0..[size of list - 1])</code>. Then, access that index of the list. To get the length of a list, just do <code>len(list_name)</code>. </p>
</div>
<span class="comment-copy"><i>"the program crashes"</i> - can you be more specific? Please include the full traceback message. Have you tried searching for that message on e.g. Google?</span>
<span class="comment-copy">Yes, it says "TypeError: 'str' object does not support item assignment". The error is in the line "phrase["happy"] = random.choice(thesaurus["happy"])</span>
<span class="comment-copy"><code>phrase</code> is a <code>str</code>ing, so e.g. <code>phrase["happy"] = ...</code> is <b>never going to work</b>, because 1. strings are immutable; and 2. they are sequences, not mappings.</span>
<span class="comment-copy">Just edited it to include the full thing. What do I do instead? I am very new to python.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#strings</a></span>
<span class="comment-copy">Thank you! Worked like a charm.</span>
<span class="comment-copy">In order to replace, here is an example.</span>
<span class="comment-copy">string = 'Happy'</span>
<span class="comment-copy">string = string.replace(string, [get index value of list here])</span>
<span class="comment-copy">Add your comments to the answer in order to improve it.</span>
