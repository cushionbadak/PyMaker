<div class="post-text" itemprop="text">
<p>I would like to get the current time in Python and assign them into variables like <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>. How can this be done in Python 2.7?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime.now" rel="noreferrer"><code>datetime</code></a> module is your friend:</p>
<pre><code>import datetime
now = datetime.datetime.now()
print now.year, now.month, now.day, now.hour, now.minute, now.second
# 2015 5 6 8 53 40
</code></pre>
<p>You don't need separate variables, the attributes on the returned <code>datetime</code> object have all you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>datetime</code> answer above is much cleaner, but you can do it with the original python <code>time</code> module:</p>
<pre><code>import time
strings = time.strftime("%Y,%m,%d,%H,%M,%S")
t = strings.split(',')
numbers = [ int(x) for x in t ]
print numbers
</code></pre>
<p>Output:</p>
<pre><code>[2016, 3, 11, 8, 29, 47]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a one-liner that comes in just under the 80 char line max.</p>
<pre><code>import time
year, month, day, hour, minute = time.strftime("%Y,%m,%d,%H,%M").split(',')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By unpacking <code>timetuple</code> of datetime object, you should get what you want:</p>
<pre><code>from datetime import datetime

n = datetime.now()
t = n.timetuple()
y, m, d, h, min, sec, wd, yd, i = t
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>For python 3</strong> </p>
<pre><code>import datetime
now = datetime.datetime.now()
print(now.year, now.month, now.day, now.hour, now.minute, now.second)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time
year = time.strftime("%Y") # or "%y"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's see how to get and print day,month,year in python from current time:</p>
<pre><code>import datetime

now = datetime.datetime.now()
year = '{:02d}'.format(now.year)
month = '{:02d}'.format(now.month)
day = '{:02d}'.format(now.day)
hour = '{:02d}'.format(now.hour)
minute = '{:02d}'.format(now.minute)
day_month_year = '{}-{}-{}'.format(year, month, day)

print('day_month_year: ' + day_month_year)
</code></pre>
<p>result:</p>
<pre><code>day_month_year: 2019-03-26
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Three libraries for accessing and manipulating dates and times, namely datetime, arrow and pendulum, all make these items available in namedtuples whose elements are accessible either by name or index. Moreover, the items are accessible in precisely the same way. (I suppose if I were more intelligent I wouldn't be surprised.)</p>
<pre><code>&gt;&gt;&gt; YEARS, MONTHS, DAYS, HOURS, MINUTES = range(5)
&gt;&gt;&gt; import datetime
&gt;&gt;&gt; import arrow
&gt;&gt;&gt; import pendulum
&gt;&gt;&gt; [datetime.datetime.now().timetuple()[i] for i in [YEARS, MONTHS, DAYS, HOURS, MINUTES]]
[2017, 6, 16, 19, 15]
&gt;&gt;&gt; [arrow.now().timetuple()[i] for i in [YEARS, MONTHS, DAYS, HOURS, MINUTES]]
[2017, 6, 16, 19, 15]
&gt;&gt;&gt; [pendulum.now().timetuple()[i] for i in [YEARS, MONTHS, DAYS, HOURS, MINUTES]]
[2017, 6, 16, 19, 16]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use gmtime</p>
<pre><code>from time import gmtime

detailed_time = gmtime() 
#returns a struct_time object for current time

year = detailed_time.tm_year
month = detailed_time.tm_mon
day = detailed_time.tm_mday
hour = detailed_time.tm_hour
minute = detailed_time.tm_min
</code></pre>
<p>Note: A time stamp can be passed to gmtime, default is current time as 
returned by time()</p>
<pre><code>eg.
gmtime(1521174681)
</code></pre>
<p>See <a href="https://docs.python.org/3/library/time.html#time.struct_time" rel="nofollow noreferrer">struct_time</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is an older question, but I came up with a solution I thought others might like.</p>
<pre><code>def get_current_datetime_as_dict():
n = datetime.now()
t = n.timetuple()
field_names = ["year",
               "month",
               "day",
               "hour",
               "min",
               "sec",
               "weekday",
               "md",
               "yd"]
return dict(zip(field_names, t))
</code></pre>
<p>timetuple() can be zipped with another array, which creates labeled tuples. Cast that to a dictionary and the resultant product can be consumed with <code>get_current_datetime_as_dict()['year']</code>.</p>
<p>This has a little more overhead than some of the other solutions on here, but I've found it's so nice to be able to access named values for clartiy's sake in the code.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use datetime module to get current Date and Time in Python 2.7</p>
<pre><code>import datetime
print datetime.datetime.now()
</code></pre>
<p>Output : </p>
<pre><code>2015-05-06 14:44:14.369392
</code></pre>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/a/2158454/3994485">stackoverflow.com/a/2158454/3994485</a></span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/415511/how-to-get-current-time-in-python">How to get current time in Python</a></span>
<span class="comment-copy">Very simple thanks a lot ...</span>
<span class="comment-copy">I like that this specifies the output formats.</span>
<span class="comment-copy">This doesn't answer the question.</span>
