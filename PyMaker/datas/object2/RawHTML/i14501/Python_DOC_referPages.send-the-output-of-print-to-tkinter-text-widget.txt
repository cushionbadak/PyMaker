<div class="post-text" itemprop="text">
<p>I wrote a python 3.4.2 programme to get a user input from python IDLE, perform some processing on the input and display a few statements in the python IDLE using print().</p>
<p>Now I am in the process of converting this to use a GUI using tkinter. This is the simple tkinter code I wrote for the GUI.</p>
<pre><code>from tkinter import *
root=Tk()
root.title("Post-fix solver")
root.geometry("500x500")
mainframe=Frame(root)
mainframe.grid(column=0, row=0)

inputval=StringVar()
inputentry=Entry(mainframe,textvariable=inputval).grid(column=1,row=1)

executebutton=Button(mainframe,text="Run",command=check_expression).grid(column=1,row=5)              

outputtext=Text(mainframe).grid(column=1,row=5)

root.mainloop()
</code></pre>
<p>So far I was able to get the user input through the Entry widget named inputentry in the GUI and send it to a variable in the original code using inputval.get(). Then it performs the processing on the input and shows the outputs of print() statement in the python IDLE.</p>
<p>My question is how can I modify the programme to send all those print() statements to the Text widget named outputtext and display them in the GUI?</p>
<p>I would be glad if you could show me how to do this without using classes as I am a beginner in python </p>
</div>
<div class="post-text" itemprop="text">
<p>3 easy steps:</p>
<p>1) Get the content of your variable and put it to a variable that I'm gonna name <code>varContent</code>;<br/>
 2) Clear your text widget, that is, if the name of your text widget is <code>text</code>, then run <code>text.delete(0, END)</code>;<br/>
 3) Insert the string you've got in your variable <code>varContent</code> into your <code>text</code> text widget, that is, do <code>text.insert(END, varContent)</code>.</p>
<p>I would do my code like this:</p>
<pre><code>from tkinter import *


def check_expression():
    #Your code that checks the expression
    varContent = inputentry.get() # get what's written in the inputentry entry widget
    outputtext.delete('0', 'end-1c') # clear the outputtext text widget
    outputtext.insert(varContent)

root = Tk()
root.title("Post-fix solver")
root.geometry("500x500")

mainframe = Frame(root)
mainframe.grid(column=0, row=0)

inputentry = Entry(mainframe)
inputentry.grid(column=1, row=1)

executebutton = Button(mainframe, text="Run", command=check_expression)
executebutton.grid(column=1, row=5)              

outputtext = Text(mainframe)
outputtext.grid(column=1, row=5)

root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python 3.4+ to run the program too, you can use the <a href="https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout" rel="nofollow"><code>contextlib.redirect_stdout</code></a> to capture the print output for a duration of a few statements into a file, or even a string:</p>
<pre><code>import io
from contextlib import redirect_stdout

...

    file = io.StringIO()
    with redirect_stdout(file):
        # here be all the commands whose print output
        # we want to capture.

    output = file.getvalue()
    # output is a `str` whose contents is everything that was
    # printed within the above with block.
</code></pre>
<hr/>
<p>Otherwise a better though a bit more arduous way is to make a <code>StringIO</code> file and print to it, so you'd have</p>
<pre><code>buffer = io.StringIO()

print("something", file=buffer)
print("something more", file=buffer)

output = buffer.getvalue()
text.insert(END, output)
</code></pre>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/3333334/stdout-to-tkinter-gui">stdout to tkinter GUI</a></span>
