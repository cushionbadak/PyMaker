<div class="post-text" itemprop="text">
<p>I would like to save variable (including its values) into a text file, so that the next time my program is opened, any changes will be automatically saved into the text file
.For example:</p>
<pre><code>    balance = total_savings - total_expenses 
</code></pre>
<p>How would I go about saving the variable itself into a text file instead of only its value?
This section is for the register page</p>
<pre><code>    from tkinter import *
    register = Tk()
    Label(register, text ="Username").grid(row = 0)
    Label(register, text ="Password").grid(row = 1)

    e1 = Entry (register)
    e2 = Entry (register, show= "*")

    e1.grid(row = 0, column = 1)
    e2.grid(row = 1, column = 1)

    username = e1.get()
    password = e2.get()


    button1 = Button(register, text = "Register", command = register.quit)
    button1.grid(columnspan = 2)
    button1.bind("&lt;Button-1&gt;")

    import json as serializer
    with open('godhelpme.txt', 'w') as f:
        serializer.dump(username, f)
    with open('some_file.txt', 'w') as f:
        serializer.dump(password, f)


    register.mainloop()
</code></pre>
<p>Altered code:</p>
<pre><code>    from tkinter import *
    register = Tk()
    Label(register, text ="Username").grid(row = 0)
    Label(register, text ="Password").grid(row = 1)

    username = StringVar()
    password = StringVar()

    e1 = Entry (register, textvariable=username)
    e2 = Entry (register, textvariable=password, show= "*")

    e1.grid(row = 0, column = 1)
    e2.grid(row = 1, column = 1)


    button1 = Button(register, text = "Register", command = register.quit)
    button1.grid(columnspan = 2)
    button1.bind("&lt;Button-1&gt;")

    import json as serializer
    with open('godhelpme.txt', 'w') as f:
        serializer.dump(username.get(), f)
    with open('some_file.txt', 'w') as f:
        serializer.dump(password.get(), f)
</code></pre>
<p>Log in code:</p>
<pre><code>    from tkinter import *
    login = Tk()
    Label(login, text ="Username").grid(row = 0)
    Label(login, text ="Password").grid(row = 1)

    username = StringVar()
    password = StringVar()

    i1 = Entry(login, textvariable=username)
    i2 = Entry(login, textvariable=password, show = "*")

    i1.grid(row = 0, column = 1)
    i2.grid(row = 1, column = 1)

    def clickLogin():
            import json as serializer
            f = open('godhelpme.txt', 'r')
            file = open('some_file.txt', 'r')
            if username == serializer.load(f):
                    print ("hi")
            else:
                    print ("invalid username")
                    if password == serializer.load(file):
                            print ("HELLOOOO")
                    else:
                            print ("invalid password")



    button2 = Button(login, text = "Log In", command = clickLogin)
    button2.grid(columnspan = 2)


    login.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to know the variable's name at compilation time. So all you need to do is:</p>
<pre><code>with open('some_file.txt', 'w') as f:
    f.write("balance %d" % balance)
</code></pre>
<p>This can be more convenient to manage using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow"><code>dict</code></a> object for mapping names to values.</p>
<p>You may also want to read about the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow"><code>pickle</code></a> or <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> modules which provide easy serialization of objects such as <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow"><code>dict</code></a>.</p>
<p>The way to use a serializer such as <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow"><code>pickle</code></a> is:</p>
<pre><code>import pickle as serializer

balance = total_savings - total_expenses 
with open('some_file.txt', 'w') as f:
    serializer.dump( balance, f)
</code></pre>
<p>You can change <code>pickle</code> to <code>json</code> in the provided code to use the other standard serializer and store objects in <code>json</code> format.</p>
<h2><strong>Edit:</strong></h2>
<p>In your example you're trying to store text from <code>tkinter</code>'s <code>Entry</code> widget. Read about it <a href="http://effbot.org/tkinterbook/entry.htm" rel="nofollow">here</a>.</p>
<p>What you probably miss is using a StringVariable to capture the entered text:</p>
<p>Create <code>StringVar</code> for variables:</p>
<pre><code>username = StringVar()
password = StringVar()
</code></pre>
<p>Register StringVar variables to Entry widgets:</p>
<pre><code>e1 = Entry (register, textvariable=username)
e2 = Entry (register, textvariable=password, show= "*")
</code></pre>
<p>Save content using <code>StringVar</code> in two seperate files:</p>
<pre><code>import json as serializer
with open('godhelpme.txt', 'w') as f:
    serializer.dump(username.get(), f)
with open('some_file.txt', 'w') as f:
    serializer.dump(password.get(), f)
</code></pre>
<p>If you want them in the same file create a mapping (<code>dict</code>) and store it:</p>
<pre><code>import json as serializer
with open('godhelpme.txt', 'w') as f:
    serializer.dump(
        {
            "username": username.get(),
            "password": password.get()
        }, f
    )
</code></pre>
<h2><strong>Edit 2:</strong></h2>
<p>You were using the serialization <strong>before</strong> entering text. Register a <code>save</code> function (that can later exit) to the register button. This way it will be called <strong>after</strong> the user clicked it (that means the content is already there). Here is how:</p>
<pre><code>from tkinter import *

def save():
    import json as serializer
    with open('godhelpme.txt', 'w') as f:
        serializer.dump(username.get(), f)
    with open('some_file.txt', 'w') as f:
        serializer.dump(password.get(), f)
    register.quit()

register = Tk()
Label(register, text ="Username").grid(row = 0)
Label(register, text ="Password").grid(row = 1)

username = StringVar()
password = StringVar()

e1 = Entry (register, textvariable=username)
e2 = Entry (register, textvariable=password, show= "*")

e1.grid(row = 0, column = 1)
e2.grid(row = 1, column = 1)

# changed "command"
button1 = Button(register, text = "Register", command = save)
button1.grid(columnspan = 2)
button1.bind("&lt;Button-1&gt;")
register.mainloop()
</code></pre>
<p>What happened before was the save-to-file process happened immediately before the user inserts any data. By registering a function to the button click you can ensure that only when the button is pressed, the function executes.</p>
<p>I <strong>strongly</strong> suggest you play with your old code in a debug environment or use some prints to figure out how the code works.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is often not a good practise to store a variable in a <code>.txt</code> file, Python has a very nice library as <a href="https://www.google.co.in/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;ved=0CCQQFjAB&amp;url=https%3A%2F%2Fdocs.python.org%2F2%2Flibrary%2Fpickle.html&amp;ei=N-5NVcfxOJPguQTAooDADQ&amp;usg=AFQjCNE13YnDcbSQzF3bDrL6gKHPVeKsRA&amp;sig2=Bz1BFSbhNawQ7yU9Mv_Eig&amp;bvm=bv.92885102,d.c2E&amp;cad=rja" rel="nofollow">Pickle</a>. However still you can analyse both methods and choose one.</p>
<p>Method 1:</p>
<p>Using a <code>.txt</code> file:</p>
<pre><code>with open("variable_file.txt", "w") as variable_file:
    variable_file.write("a = 10")
</code></pre>
<p>And while retrieving the value you can use:</p>
<pre><code>with open("variable_file.txt", "r") as variable_file:
    for line in variable_file.readlines():
        eval(line.strip())
</code></pre>
<p>Method 2:</p>
<p>Using the Pickle module:</p>
<pre><code>import pickle

a = 10

pickle.dump( a, open( "save.p", "wb" ) )

#Load the variable back from the pickle file.

a = pickle.load( open( "save.p", "rb" ) )
</code></pre>
</div>
<span class="comment-copy">Thank you so so much :) i'm a total newbie at this as you can tell</span>
<span class="comment-copy">We were all new to programming once. You can accept the answer if it's valid.</span>
<span class="comment-copy">@honeybadger how did you end up serializing your data (string? dictionary? list?)? I'd suggest you print the data or use a debugger. if there is a problem open another question after reading this: <a href="http://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a></span>
<span class="comment-copy">I used the code that you posted me to do it, but the only problem would be the quotation marks..</span>
<span class="comment-copy">I'll try. Thanks for the help, I really appreciate it</span>
<span class="comment-copy">would this work the same if I were to save my user's username and password as variables?</span>
