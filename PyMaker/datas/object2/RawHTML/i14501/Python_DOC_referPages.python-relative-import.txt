<div class="post-text" itemprop="text">
<p>Suppose I have a module package containing the following files. An empty file <code>C:\codes\package\__init__.py</code> and some non-trivial files:</p>
<p>One located in <code>C:\codes\package\first.py</code></p>
<pre><code>def f():
    print 'a'
</code></pre>
<p>Another located in <code>C:\codes\package\second.py</code></p>
<pre><code>def f():
    print 'b'
</code></pre>
<p>There is also a third file: <code>C:\codes\package\general.py</code> with the following code</p>
<pre><code>def myPrint(module_name):
    module = __import__(module_name)
    module.f()

if __name__ == '__main__':
    myPrint('first')
    myPrint('second')
</code></pre>
<p>When I run the latter file, everything goes fine. However, if I try to execute the file <code>C:\codes\test.py</code> containing</p>
<pre><code>if __name__ == '__main__':
    from package import general
    general.myPrint('first')
    general.myPrint('second')
</code></pre>
<p>I get the import error <code>ImportError: No module named first</code>. How to resolve this issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, I suspect you forgot to metion you have a (possibly empty) file <code>package\__init__.py</code> which makes <code>package</code> a package. Otherwise, <code>from package import general</code> wouldn't work.</p>
<p>The second case differs from the first in so far as you are in a package. From inside a package, you wouldn't do <code>import first</code>, but <code>import .first</code>. The equivalent to the latter is described <a href="https://docs.python.org/2/library/functions.html#__import__" rel="nofollow">here</a> where you either add <code>level=1</code> as a parameter or (but I am not sure about that) you put <code>.first</code> into the string and set <code>level</code> to <code>-1</code> (if it isn't the default nevertheless, that's not clear from the documentation).</p>
<p>Additionally, you have to provide at least <code>globals()</code>, so the right line is</p>
<pre><code>module = __import__(module_name, globals(), level=1)
</code></pre>
<p>I have found this solution <a href="http://bugs.python.org/issue13912#msg152354" rel="nofollow">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In your case, you should import your <code>module_name</code> from <code>package</code>. Use <code>fromlist</code> argument:</p>
<pre><code>getattr(__import__("package", fromlist=[module_name]), module_name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming, you're using Python 3, that's just because this version dropped the support for <a href="https://wiki.python.org/moin/PortingPythonToPy3k#relative-imports" rel="nofollow">implicit relative imports</a>. With Python 2 it would be working just fine.</p>
<p>So either you'd need to use relative imports in <code>C:\codes\package\general.py</code>, which would result in erroneous call to it, or add your package to the path. A little dirty, but working hack would be:</p>
<pre><code>def myPrint(module_name):
    pkg = os.path.dirname(__file__)
    sys.path.insert(0, pkg)
    try:
        module = __import__(module_name)
    except:
        raise
    finally:
        sys.path.remove(pkg)
    module.f()
</code></pre>
<p>Maybe you can achieve a cleaner implementation with the <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow"><code>importlib</code></a> module.</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/17344561/python-perform-relative-import-when-using-import" title="python perform relative import when using import">stackoverflow.com/questions/17344561/â€¦</a></span>
<span class="comment-copy">I don't think OP forgot to add <code>__init__.py </code> because <code>from package import general </code> works for him</span>
<span class="comment-copy">As I said: he just forgot to mention the file.</span>
<span class="comment-copy">@Daniil: as glglgl rightfully noticed, indeed I've added it but forgot to mention.</span>
<span class="comment-copy">@Ulysses Try it - but probably <code>__import__(modulename, level=1)</code> will work better.</span>
<span class="comment-copy">That worked, thanks a lot</span>
<span class="comment-copy">And if someone renames the package? Better would be to do a relative import.</span>
<span class="comment-copy">@glglgl I am not sure that it's possible to use relative pathes in <code>__import__</code></span>
