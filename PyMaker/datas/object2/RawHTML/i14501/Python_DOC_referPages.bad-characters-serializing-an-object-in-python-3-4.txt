<div class="post-text" itemprop="text">
<p>I'm a beginner in python. I don't know why I obtain bad characters writing a dictionary in a .txt file with <code>pickle.dump</code>.</p>
<p>I do in this way:</p>
<pre><code>a={test:test1,"hello":"world", 541:123}
f=open("test.txt","wb")
import pickle
pickle.dump(str(a),f)
</code></pre>
<p>In the file I find:</p>
<pre><code>€X-   {'hello': 'world', 'test': 'test1', 541: 123}q .
</code></pre>
<p>Why there's <code>€X-</code> and <code>q</code> in the output?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to pickle the dict don't call str on it just dump the dict, if you actually want human readable output use <a href="https://docs.python.org/3.4/library/json.html#basic-usage" rel="nofollow">json.dump</a>:</p>
<pre><code>import json 

f = open("test.txt","w") # &lt;- no b for json
import pickle
json.dump(f,a)
</code></pre>
<p>pickle is not meant to be in human readable format, when you pickle.load it will be as it was before you dumped. json.dump however dumps the dict in human readable format.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, they are part of serialization algorithm and you shouldn't care much about it. Having a readable json-like representation is not expected in your case.</p>
<p>Quoting official <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow">pickle</a> documentation on that:</p>
<blockquote>
<p>There are fundamental differences between the pickle protocols and
  JSON (JavaScript Object Notation):</p>
<ul>
<li>JSON is a text serialization format (it outputs unicode text, although most of the time it is then encoded to utf-8), while pickle
  is a <strong>binary serialization format</strong>;</li>
<li>JSON is human-readable, while <strong>pickle is not</strong>;</li>
<li>JSON is interoperable and widely used outside of the Python ecosystem, while pickle is Python-specific;</li>
<li>JSON, by default, can only represent a subset of the Python built-in types, and no custom classes; pickle can represent an
  extremely large number of Python types (many of them automatically, by
  clever usage of Python’s introspection facilities; complex cases can
  be tackled by implementing specific object APIs).</li>
</ul>
</blockquote>
<p>Moreover, you have probably a bug in your code - you are pickling string representation of dict instead of dict itself.</p>
<p>Correct code would look as following:</p>
<pre><code>import pickle
a = {"test": "test1", "hello": "world", 541: 123}
with open("test.txt", "wb") as f:
    pickle.dump(a, f)

with open("test.txt", "rb") as f:
    loaded = pickle.load(f)
    print(loaded)
    assert loaded == a
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pickle is a binary format for storing python objects. You are seeing odd characters because you've opened a binary file in a text editor, which is trying hard to display the file as text for you. </p>
<p>If you were trying to write out the dictionary as a JSON format, try using the <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json</a> module instead of pickle: </p>
<pre><code>&gt;&gt;&gt; a = {"test": "test1", "hello": "world", 541: 123}
&gt;&gt;&gt; f = open("test.txt", "w")
&gt;&gt;&gt; import json
&gt;&gt;&gt; json.dump(a, f) # without the str()
</code></pre>
<p>And the contents of <code>test.txt</code> will be: </p>
<pre><code>{"hello": "world", "541": 123, "test": "test1"}
</code></pre>
<p>Keep in mind that this only works for simple objects, so you won't be able to write out something like a python class instance without extra work.</p>
<p>If you really want to know what goes on inside a pickle, take a look at <a href="https://www.python.org/dev/peps/pep-0307" rel="nofollow">PEP 307</a> and <a href="https://www.python.org/dev/peps/pep-3154" rel="nofollow">PEP 3154</a>. </p>
</div>
<span class="comment-copy">If you open a binary file as a text file, it probably won't look normal.</span>
<span class="comment-copy">what do you mean by bad output and why are you calling str on the dict?</span>
