<div class="post-text" itemprop="text">
<p>What is the best to use between integers and arrays when you have a lot of data to process ?
I wrote a small script :</p>
<pre><code>import time

integer1 = 1
integer2 = 2
array = [1, 2]
loop = 10000000 #ten million

i = 0
a = time.time()
while i &lt; loop:
    integer1 + integer2
    i += 1
print("With integers :", time.time()-a, "seconds.")

i = 0
b = time.time()
while i &lt; loop:
    array[0] + array[1]
    i += 1
print("With array :", time.time()-b, "seconds.")
</code></pre>
<p>And I got :</p>
<blockquote>
<p>With integers : 2.107954978942871 seconds.</p>
<p>With array : 2.6036949157714844 seconds.</p>
</blockquote>
<p>So it seems that using a lot of integers is more fast but in the example, only 2 integers were created. How to manage this problem when we have 10 million integers ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python is not very efficient because it is a dynamic type language. In static type languages such as C, the compiler knows exactly that a variable is of type integer. But in case of python, the variables store in python objects. This is very convenient but not very efficient in term of memory and speed. I strongly recommend you to read the article <a href="https://jakevdp.github.io/blog/2014/05/09/why-python-is-slow/" rel="nofollow">Why Python is Slow: Looking Under the Hood</a>.</p>
<p>If you are dealing with large numbers of data your best bet is <a href="http://www.numpy.org/" rel="nofollow">NumPy</a> or <a href="http://www.scipy.org/" rel="nofollow">SciPy</a> that are built using C and are available as a Python package.</p>
</div>
<span class="comment-copy">Leaving the Q to others but the standard library <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">timeit module</a> is great for these sort of tests.</span>
<span class="comment-copy">Thank you for your answer bman ;) I understand now.</span>
