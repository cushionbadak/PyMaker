<div class="post-text" itemprop="text">
<p>I'm writing this script that downloads an HTML document from <a href="http://example.com/" rel="nofollow">http://example.com/</a> and attempts to parse it as an XML by using:</p>
<pre><code>with urllib.request.urlopen("http://example.com/") as f:
    tree = xml.etree.ElementTree.parse(f)
</code></pre>
<p>However, I keep getting a <code>ParseError: mismatched tag</code> error, supposedly at line 1, column 2781, so I donwloaded the file manually (Ctrl+S on my browser) and checked it, but such position indicates a place in the middle of a string, and not even near the EOF, but there were a few lines before the actual 2781nth character so that might've messed up my calculation of the exact position. However, I tried to download and actually write the response to a file to parse it later by:</p>
<pre><code>response = urllib.request.urlopen("http://example.com/")
f = open("test.html", "wb")
f.write(response.read())
f.close()
html = open("test.html", "r")
tree = xml.etree.ElementTree.parse(html)
</code></pre>
<p>And I'm still getting the same <code>mismatched tag</code> error at the same column, but this time I opened the downloaded html and the only stuff near column 2781 is this:</p>
<blockquote>
<p><code>;&lt;/script&gt;&lt;/head&gt;&lt;body class</code></p>
</blockquote>
<p>And the exact 2781nth column marks the first "h" in <code>&lt;/head&gt;</code>, so what could be wrong here? am I missing something?</p>
<p><strong>Edit:</strong></p>
<p>I've been looking more into it and tried to parse the XML using another parser, this time minidom, but I'm still getting the exact same error at the exact same line, what could be the problem here? this also happens even though I've downloaded the file by several different ways (urllib, curl, wget, even Ctrl+Save on the browser) and the result is the same.</p>
<p><strong>Edit 2:</strong></p>
<p>This is what I've tried so far:</p>
<p>This is an example xml I just got from the API doc, and saved it to text.html:</p>
<pre><code>&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Example page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;Moved to &lt;a href="http://example.org/"&gt;example.org&lt;/a&gt;
        or &lt;a href="http://example.com/"&gt;example.com&lt;/a&gt;.&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>And I tried:</p>
<pre><code>with urllib.request.urlopen("text.html") as f:
    tree = xml.etree.ElementTree.parse(f)
</code></pre>
<p>And it works, then:</p>
<pre><code>with urllib.request.urlopen("text.html") as f:
    tree = xml.etree.ElementTree.fromstring(f.read())
</code></pre>
<p>And it also works, but:</p>
<pre><code>with urllib.request.urlopen("http://example.com/") as f:
    xml.etree.ElementTree.parse(f)
</code></pre>
<p>Doesn't, also tried:</p>
<pre><code>with urllib.request.urlopen("http://example.com/") as f:
    xml.etree.ElementTree.fromstring(f.read())
</code></pre>
<p>And it doesn't work too, what could be the problem? as far as I can tell the document doesn't have mismatching tags, but perhaps it's too large? it's only 95.2 KB.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>bs4</code> to parse this page. Like this:</p>
<pre><code>import bs4
import urllib


url = 'http://boards.4chan.org/wsg/thread/629672/i-just-lost-my-marauder-on-eve-i-need-a-ylyl'
proxies = {'http': 'http://www-proxy.ericsson.se:8080'}
f = urllib.urlopen(url, proxies=proxies)
info = f.read()
soup = bs4.BeautifulSoup(info)
print soup.a
</code></pre>
<p>OUTPUT:</p>
<pre><code>&lt;a href="/a/" title="Anime &amp;amp; Manga"&gt;a&lt;/a&gt;
</code></pre>
<p>You can download bs4 from this <a href="https://pypi.python.org/pypi/beautifulsoup4" rel="nofollow">link</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on the <a href="https://docs.python.org/3/howto/urllib2.html" rel="nofollow">urllib</a> and <a href="https://docs.python.org/3.4/library/xml.etree.elementtree.html" rel="nofollow">ElementTree</a> documentation, this code snippet seemed to work without error for your sample URL.</p>
<pre><code>import urllib.request
import xml.etree.ElementTree as ET

with urllib.request.urlopen('http://boards.4chan.org/wsg/thread/629672/i-just-lost-my-marauder-on-eve-i-need-a-ylyl') as response:
    html = response.read()
    tree = ET.parse(html)
</code></pre>
<p>If you don't want to read the response into a variable before parsing it with ElementTree, this also works:</p>
<pre><code>with urllib.request.urlopen('http://boards.4chan.org/wsg/thread/629672/i-just-lost-my-marauder-on-eve-i-need-a-ylyl') as response:
        tree = ET.parse(response.read())
</code></pre>
</div>
<span class="comment-copy">If you could give us the actual URL of the page, we could check to see if we also hit the same problem. Also, use the requests module instead of urllib. Seriously. You'll be glad you did. :)</span>
<span class="comment-copy">Well, I'm still getting started with all the python stuff so I didn't know about that one, and well, since the script i'm porting is an examiner for 4chan threads, here's a link to a (kind of) sfw thread: <a href="http://boards.4chan.org/wsg/thread/629672/i-just-lost-my-marauder-on-eve-i-need-a-ylyl" rel="nofollow noreferrer">boards.4chan.org/wsg/thread/629672/â€¦</a></span>
<span class="comment-copy">@arielnmz: Use an HTML parser like lxml or BeautifulSoup. XML parsers are not lenient enough to handle HTML properly.</span>
<span class="comment-copy">Is there any builtin solution for this? as far as I know lxml is a third party module...</span>
<span class="comment-copy">What's the issue with using a third party module?</span>
<span class="comment-copy">Ok, so I just fired a terminal and copy-pasted this on a new python3 interactive shell and it worked pretty fine, but then I just changed one line: Instead of "reading" the response into a var I just directly parsed from the "response", and the problem showed up again at the exact same line, why would this happen? Also, fiddling more with the code I found that Response does not implement the Buffered interface (or something like that), could that be the issue?</span>
<span class="comment-copy">Ok, the problem is not that I don't want to use a var, but I'd rather skip using the <code>read()</code> method, but whatever, I just double checked it and you actually need the <code>fromstring()</code> method instad of <code>parse()</code> if you're using <code>read()</code> on the response, but have you tried directly passing the response to <code>parse()</code>?</span>
