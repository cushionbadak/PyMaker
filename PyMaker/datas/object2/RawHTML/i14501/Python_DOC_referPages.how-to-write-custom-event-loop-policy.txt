<div class="post-text" itemprop="text">
<p>I'm researching the asyncio library and I cannot understand completely the reason behind event loop policies.</p>
<p>So far it's clear that this interface is a factory that returns event loop for current <em>context</em>. The definition of the context is not clear though. Apparently, the interface of <a href="https://docs.python.org/3/library/asyncio-eventloops.html#asyncio.AbstractEventLoopPolicy" rel="nofollow">asyncio.AbstractEventLoopPolicy</a> assumes that concrete implementation will be able to extract context on its own because neither method accepts arguments. This model works well for the event-loop-per-thread default policy, but usage under more sophisticated circumstances are under the question.</p>
<p>Looks like <em>context</em> isn't an arbitrary entity, but should follow certain rules (e.g. being visible globally). I wonder if such rules are listed anywhere. Are there examples of custom policies around?</p>
</div>
<div class="post-text" itemprop="text">
<p>Custom policy is required when you implement non-default event loop.</p>
<p>The main problem is: I want to create new event loop by <code>asyncio.new_event_loop()</code>. It's required for threads: only main thread has implicit event loop, all other threads should instantiate loop explicitly.</p>
<p>But I don't know specific event loop type, thus I need a factory for loop creation -- pluggable event loop policy.</p>
</div>
<span class="comment-copy"><a href="https://bitbucket.org/haypo/aiogevent/src/b419fa064416cbd9241c351be83c39269732e692/aiogevent.py?at=default#cl-290" rel="nofollow noreferrer"><code>aiogevent</code></a> and <a href="https://github.com/m-labs/gbulb/blob/master/gbulb/glib_events.py#L643" rel="nofollow noreferrer"><code>gblub</code></a> both have custom EventLoopPolicys. It seems to be most commonly used in libraries that integrate <code>asyncio</code> with other event loops.</span>
<span class="comment-copy">What does make "factory" a policy? This word implies some set of rules :)</span>
<span class="comment-copy">IIRC Guido van Rossum called it personally. <i>Policy</i> is common pattern: see <a href="http://en.wikipedia.org/wiki/Policy-based_design" rel="nofollow noreferrer">en.wikipedia.org/wiki/Policy-based_design</a></span>
