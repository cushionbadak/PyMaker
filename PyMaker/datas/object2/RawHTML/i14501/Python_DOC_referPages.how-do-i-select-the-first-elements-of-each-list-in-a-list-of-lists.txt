<div class="post-text" itemprop="text">
<p>I am trying to isolate the first words in a series of sentences using Python/ NLTK.</p>
<p>created an unimportant series of sentences (the_text) and while I am able to divide that into tokenized sentences, I cannot successfully separate just the first words of each sentence into a list (first_words). </p>
<p>[['Here', 'is', 'some', 'text', '.'], ['There', 'is', 'a', 'a', 'person', 'on', 'the', 'lawn', '.'], ['I', 'am', 'confused', '.'], ['There', 'is', 'more', '.'], ['Here', 'is', 'some', 'more', '.'], ['I', 'do', "n't", 'know', 'anything', '.'], ['I', 'should', 'add', 'more', '.'], ['Look', ',', 'here', 'is', 'more', 'text', '.'], ['How', 'great', 'is', 'that', '?']]</p>
<pre><code>the_text="Here is some text. There is a a person on the lawn. I am confused. "
the_text= (the_text + "There is more. Here is some more. I don't know anything. ")
the_text= (the_text + "I should add more. Look, here is more text. How great is that?")

sents_tok=nltk.sent_tokenize(the_text)
sents_words=[nltk.word_tokenize(sent) for sent in sents_tok]
number_sents=len(sents_words)
print (number_sents)
print(sents_words)
for i in sents_words:
    first_words=[]
    first_words.append(sents_words (i,0))
print(first_words)
</code></pre>
<p>Thanks for the help!</p>
</div>
<div class="post-text" itemprop="text">
<p>There are three problems with your code, and you have to fix all three to make it work:</p>
<pre><code>for i in sents_words:
    first_words=[]
    first_words.append(sents_words (i,0))
</code></pre>
<p>First, you're erasing <code>first_words</code> each time through the loop: move the <code>first_words=[]</code> outside the loop.</p>
<p>Second, you're mixing up function calling syntax (parentheses) with indexing syntax (brackets): you want <code>sents_words[i][0]</code>.</p>
<p>Third, <code>for i in sents_words:</code> iterates over the <em>elements</em> of <code>sents_words</code>, not the indices. So you just want <code>i[0]</code>. (Or, alternatively, <code>for i in range(len(sents_words))</code>, but there's no reason to do that.)</p>
<p>So, putting it together:</p>
<pre><code>first_words=[]
for i in sents_words:
    first_words.append(i[0])
</code></pre>
<hr/>
<p>If you know anything about <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">comprehensions</a>, you may recognize that this pattern (start with an empty list, iterate over something, appending some expression to the list) is exactly what a list comprehension does:</p>
<pre><code>first_words = [i[0] for i in sents_words]
</code></pre>
<p>If you don't, then either now is a good time to learn about comprehensions, or don't worry about this part. :)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; sents_words = [['Here', 'is', 'some', 'text', '.'],['There', 'is', 'a', 'a', 'person', 'on', 'the', 'lawn', '.'], ['I', 'am', 'confused', '.'], ['There', 'is', 'more', '.'], ['Here', 'is', 'some', 'more', '.'], ['I', 'do', "n't", 'know', 'anything', '.'], 'I', 'should', 'add', 'more', '.'], ['Look', ',', 'here', 'is', 'more', 'text', '.'], ['How', 'great', 'is', 'that', '?']]
</code></pre>
<p>You can use a loop to <code>append</code> to a <code>list</code> you've initialized previously:</p>
<pre><code>&gt;&gt;&gt; first_words = []
&gt;&gt;&gt; for i in sents_words:
...     first_words.append(i[0])
...
&gt;&gt;&gt; print(*first_words)
Here There I There Here I I Look How
</code></pre>
<p>or a comprehension (replace those square brackets with parentheses to create a generator instead):</p>
<pre><code>&gt;&gt;&gt; first_words = [i[0] for i in sents_words]
&gt;&gt;&gt; print(*first_words)
Here There I There Here I I Look How
</code></pre>
<p>or if you don't need to save it for later use, you can directly print the items:</p>
<pre><code>&gt;&gt;&gt; print(*(i[0] for i in sents_words))
Here There I There Here I I Look How
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's an example of how to access items in lists and list of lists:</p>
<pre><code>&gt;&gt;&gt; fruits = ['apple','orange', 'banana']
&gt;&gt;&gt; fruits[0]
'apple'
&gt;&gt;&gt; fruits[1]
'orange'
&gt;&gt;&gt; cars = ['audi', 'ford', 'toyota']
&gt;&gt;&gt; cars[0]
'audi'
&gt;&gt;&gt; cars[1]
'ford'
&gt;&gt;&gt; things = [fruits, cars]
&gt;&gt;&gt; things[0]
['apple', 'orange', 'banana']
&gt;&gt;&gt; things[1]
['audi', 'ford', 'toyota']
&gt;&gt;&gt; things[0][0]
'apple'
&gt;&gt;&gt; things[0][1]
'orange'
</code></pre>
<p>For you problem: </p>
<pre><code>&gt;&gt;&gt; from nltk import sent_tokenize, word_tokenize
&gt;&gt;&gt; 
&gt;&gt;&gt; the_text="Here is some text. There is a a person on the lawn. I am confused. There is more. Here is some more. I don't know anything. I should add more. Look, here is more text. How great is that?"
&gt;&gt;&gt; 
&gt;&gt;&gt; tokenized_text = [word_tokenize(s) for s in sent_tokenize(the_text)]
&gt;&gt;&gt; 
&gt;&gt;&gt; first_words = []
&gt;&gt;&gt; # Iterates through the sentneces.
... for sent in tokenized_text:
...     print sent
... 
['Here', 'is', 'some', 'text', '.']
['There', 'is', 'a', 'a', 'person', 'on', 'the', 'lawn', '.']
['I', 'am', 'confused', '.']
['There', 'is', 'more', '.']
['Here', 'is', 'some', 'more', '.']
['I', 'do', "n't", 'know', 'anything', '.']
['I', 'should', 'add', 'more', '.']
['Look', ',', 'here', 'is', 'more', 'text', '.']
['How', 'great', 'is', 'that', '?']
&gt;&gt;&gt; # First words in each sentence.
... for sent in tokenized_text:
...     word0 = sent[0]
...     first_words.append(word0)
...     print word0
...     
... 
Here
There
I
There
Here
I
I
Look
How

&gt;&gt;&gt; print first_words ['Here', 'There', 'I', 'There', 'Here', 'I', 'I', 'Look', 'How']
</code></pre>
<p>In one-liner with list comprehensions:</p>
<pre><code># From the_text, you extract the first word directly
first_words = [word_tokenize(s)[0] for s in sent_tokenize(the_text)]

# From tokenized_text
tokenized_text= [word_tokenize(s) for s in sent_tokenize(the_text)]
first_words = [w[0] for s in tokenized_text]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another alternative, although it's pretty much similar to abarnert's suggestion:</p>
<pre><code>first_words = []
for i in range(number_sents):
    first_words.append(sents_words[i][0])
</code></pre>
</div>
<span class="comment-copy">Have you tried <code>i[0]</code> instead of <code>sents_words (i,0)</code>? Also, put <code>first_words = []</code> before the loop, or you clear it with every iteration.</span>
<span class="comment-copy">are you looking for this list -<code>['Here', 'There', 'I', 'There', 'Here', 'I', 'I', 'Look', 'How']</code>? The just use <code>firstwords = [i[0] for i in your_list]</code></span>
<span class="comment-copy">This is a basic python task, there are no nltk-specific aspects. Do as @letsc says in the comment above, and pay attention to round vs. square brackets in general.</span>
