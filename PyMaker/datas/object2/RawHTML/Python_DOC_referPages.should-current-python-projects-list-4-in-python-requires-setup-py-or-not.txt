<div class="post-text" itemprop="text">
<p>I've made a <a href="https://github.com/alastair/python-musicbrainzngs/pull/246" rel="nofollow noreferrer">couple</a> <a href="https://github.com/whipper-team/whipper/pull/378" rel="nofollow noreferrer">of</a> <a href="https://github.com/MTG/acousticbrainz-client/pull/50" rel="nofollow noreferrer">PRs</a> in some projects I'm involved with adding a <code>python_requires</code> to their <code>setup.py</code> (as per <a href="https://packaging.python.org/guides/dropping-older-python-versions/" rel="nofollow noreferrer">packaging.python.org/guides/dropping-older-python-versions/</a>).</p>
<p>One question that's come up is whether it's a good idea to include <code>&lt;4</code> in this statement or not.</p>
<p>On one hand, there's no guarantee that the code will work on Python 4 whenever it comes out (years in the future, probably), but maybe it's also overspecification and would better be left out and added in once Py4 is actually a thing that is even being considered?</p>
<p>I've tried searching for this (including on SO :)), but I'm not getting any good results. Are there are mailing list threads or something that I didn't find that discusses best practices for this? <a href="https://github.com/pypa/sampleproject" rel="nofollow noreferrer">sampleproject</a> includes <code>&lt;4</code> but didn't seem to actually discuss this in <a href="https://github.com/pypa/sampleproject/pull/87" rel="nofollow noreferrer">the related PR</a>, the <a href="https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires" rel="nofollow noreferrer">packaging.python.org documentation for <code>setup_requires</code></a> has examples both with and without the <code>&lt;4</code> but doesn't really describe (as far as I can tell) when to include it or not.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>maybe it's also overspecification and would better be left out and added in once Py4 is actually a thing that is even being considered?</p>
</blockquote>
<p>Exactly!</p>
<p>The core developers hasn't even started to discuss Python 4, not to say about planning or implementing. They also promised not to break things the way they did with 2-to-3 transition.</p>
<p>With such a distant future and backward compatibility promise it's simply too early to protect yourself from unknown and unplanned breakage. Wait at least until the core developers start to discuss Python 4.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Should current Python projects list <code>&lt;4</code> in <code>python_requires</code> (setup.py) or not?</p>
</blockquote>
<p>No, they should not, because Python 4 is expected* to be backwards compatible with Python 3.9. Leave it out. Upper bounds in requirement specifiers are only really useful for projects that follow <a href="https://semver.org/" rel="nofollow noreferrer">semver</a> or similar.</p>
<p><a href="https://www.curiousefficiency.org/posts/2014/08/python-4000.html" rel="nofollow noreferrer">Here is a core developer discussing Python 4</a> and backwards compat:</p>
<blockquote>
<p>My current expectation is that Python 4.0 will merely be "the release that comes after Python 3.9". That's it. No profound changes to the language, no major backwards compatibility breaks - going from Python 3.9 to 4.0 should be as uneventful as going from Python 3.3 to 3.4</p>
</blockquote>
<p>By the time Python 4.0 is on the horizon, we can hope that Python 2 will be dead and Python 3 will just be called "python".</p>
</div>
<span class="comment-copy">I suggest moving the question to the <a href="https://softwareengineering.stackexchange.com/">Software Engineering</a> stack exchange. As it stands, this is too opinion based and broad for SO. My too cents is this is not a Python question, but a general question on what you should put on your docs - and generally you do not make mention of future, unreleased languages, that may never see light of day (Python IX?). I would not worry about Python 4 in my docs until it is released, and only than fix what is needed.</span>
<span class="comment-copy">This would be an appropriate question for <a href="https://github.com/pypa/packaging-problems/issues" rel="nofollow noreferrer">github.com/pypa/packaging-problems/issues</a>, I'd suggest you ask it there, you'll likely get a better response.</span>
<span class="comment-copy">Thanks @DustinIngram! I'll check it out! :)</span>
