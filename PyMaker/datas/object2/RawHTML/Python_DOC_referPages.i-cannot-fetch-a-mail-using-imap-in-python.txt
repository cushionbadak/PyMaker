<div class="post-text" itemprop="text">
<p>The <code>fetch</code> method gives this error:</p>
<blockquote>
<p>imaplib.IMAP4.error: FETCH command error: BAD [b'Could not parse command']  </p>
</blockquote>
<p>I am not attaching all of my code. I want to get the unseen msg using imap to get the body and save it as text and then download the attachment.</p>
<pre><code>import imaplib, email, os
user= "test9101997"
password="Monday@123"
imap_url="imap.gmail.com"
attach_dir='E:\PROJECT\attachment'
filePath='D:\ATTACH'     
con=imaplib.IMAP4_SSL(imap_url)
con.login(user,password)
con.select('INBOX')
#UIDs=con.search(None,'UNSEEN')
#print(UIDs)
(result, messages) = con.search(None, 'UnSeen')
if result == "OK":
   for message in messages:
        try: 
          ret, data =con.fetch(message,'(RFC822)')
        except:
             print ("No new emails to read.")
                    #self.close_connection()
                    #exit()
                    #result, data=con.fetch(i,'(RFC822)')
             raw=email.message_from_bytes(data[0][1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you may be confused about the return value of <code>con.search()</code>.  If you take a look at the value of <code>messages</code> after that call (assuming that <code>result</code> is <code>OK</code>), it's collection of strings, not a list of message ids.  That is, after a call like:</p>
<pre><code>result, messages = con.search(None, 'UnSeen')
</code></pre>
<p>The value of <code>messages</code> may look something like:</p>
<pre><code>['1 2 15 20']
</code></pre>
<p>So when you try to iterate over it like this:</p>
<pre><code>for message in messages:
</code></pre>
<p>The value of message in the first loop iteration will be <code>1 2 15 20</code>, and that's why you're getting the command error: the request you're making doesn't make any sense.  You'll want to do something like this instead:</p>
<pre><code>(result, blocks) = con.search(None, 'UnSeen')

if result == "OK":
    for messages in blocks:
        for message in messages.split():
            ret, data = con.fetch(message, '(RFC822)')
            raw = email.message_from_bytes(data[0][1])
</code></pre>
<p>There's really no good reason for the <code>imaplib</code> module to return data in this fashion.</p>
</div>
<span class="comment-copy">What is the value of <code>message</code>?</span>
<span class="comment-copy">would this work on python3.7</span>
<span class="comment-copy">it gives me a error that data is not defined</span>
<span class="comment-copy">Without seeing the code you're running it's hard to figure out what's going on. I actually ran the above code locally and it works fine; the only line referencing the <code>data</code> variable happens right after <code>data</code> is defined.</span>
<span class="comment-copy">thanks for the guidance is there any way i can access the windows sticky note and write to it using python</span>
<span class="comment-copy">I have no idea. That seems like something you should post in a different question.</span>
