<div class="post-text" itemprop="text">
<p>Trying to invoke a method variable of superclass in the subclass.Is this possible, If possible, is it a good practice or design?</p>
<p>I have written an example code to execute the flow. Below is the code</p>
<pre><code>class bar_for_foo_mixin():
    def __init__(self):
        self.z =0

    def bar(self, q):
        x=2
        y=8
        bar_for_foo_mixin.z= x+y+q
        print(bar_for_foo_mixin.z)

    def extented_bar(self):
        self.bar(10)


class myfoo(bar_for_foo_mixin):
    def __init__(self):
        super(myfoo, self).__init__()
        print("hello",self.z)


class oldFoo():
    def __init__(self):
        self.var = bar_for_foo_mixin()

        self.var.bar(10)
</code></pre>
<p>Now how can I make the Z value and make it useful in the subclass? But If Call method <code>extended_bar()</code> in the subclass the above code works fine, But is there any way to store the method variable of superclass and use it in the subclass?</p>
<p><strong>A third class call bar method.</strong>
Expected output to print. The Z vaue should store the computations done in the superclass method <code>bar</code>.</p>
<pre><code>hello 20
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make the <code>__init__</code> method of the subclass call the base class' <code>__init__</code> method via the <code>super()</code> function:</p>
<pre><code>class myfoo(bar_for_foo_mixin):
    def __init__(self):
        super().__init__()
        print("hello",self.z)
</code></pre>
<p>Moreover, since <code>z</code> is initialized as an instance variable, your <code>bar</code> function should update it as a variable bound to <code>self</code> instead of the class:</p>
<pre><code>def bar(self, q):
    x=2
    y=8
    self.z= x+y+q
    print(self.z)
</code></pre>
</div>
<span class="comment-copy">It prints hello 0. But I want the calculation part stored . It should print hello 20 .</span>
<span class="comment-copy">But nothing is calling the <code>bar</code> and <code>extented_bar</code> methods at all. Did you mean to call them from the <code>__init__</code> method of the base class?</span>
<span class="comment-copy">I have edited my code. Please check</span>
<span class="comment-copy">If I am wrong. Please let me know.</span>
<span class="comment-copy">I've updated my answer accordingly.</span>
