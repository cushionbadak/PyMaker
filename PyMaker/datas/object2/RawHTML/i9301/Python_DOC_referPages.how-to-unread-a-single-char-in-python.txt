<div class="post-text" itemprop="text">
<p>I need to read a single char from stdin and then unread it so that the next time an input method is called, that char should be included in the result. In C++, cin.putback does this. What is the equivalent in Python?</p>
<p>Please note that I don't need to intermingle different input methods/functions.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, <a href="https://docs.python.org/3/library/sys.html#sys.stdin" rel="nofollow noreferrer"><code>sys.stdin</code></a> has a property called <code>buffer</code> that is an instance of <a href="https://docs.python.org/3/library/io.html#io.BufferedReader" rel="nofollow noreferrer"><code>io.BufferedReader</code></a> and so has a <a href="https://docs.python.org/3/library/io.html#io.BufferedReader.peek" rel="nofollow noreferrer"><code>peek</code></a> method.  This should allow you to do <code>sys.stdin.buffer.peek(1)[:1]</code>, which would let you look at the next character in standard input without reading (consuming) it.</p>
</div>
<div class="post-text" itemprop="text">
<p>There isn't a simple analogue in Python.</p>
<p>Your best bet is probably to read the characters into an list in your program, and then later consume them from that list.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found a Python module called CIn which does exactly what I want. It is available on GitHub: <a href="https://github.com/abhishekkr200802/CIn" rel="nofollow noreferrer">https://github.com/abhishekkr200802/CIn</a></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/6271947/how-can-i-simulate-input-to-stdin-for-pyunit">How can I simulate input to stdin for pyunit?</a></span>
<span class="comment-copy">Thanks. Anything similar for Python 2?</span>
<span class="comment-copy">That will get dirty very soon unless I write some module doing it for me.</span>
