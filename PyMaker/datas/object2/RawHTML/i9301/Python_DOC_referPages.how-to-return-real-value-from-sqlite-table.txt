<div class="post-text" itemprop="text">
<p>I'm trying to create a program which scrapes stock prices from a website and then calculate the trend differences between the prices over a series of time. I'm doing this by storing the data in tables marked as buy and sell price.
If I run them separately they work fine. But the second I put them in the same program they don't work.</p>
<p>I need to be able to be able to calculate a trend from every three values in the list as that is the number of records per stock but they are all put into a single list</p>
<p>Here's my code</p>
<pre><code>def plot(price,trend_price):    
    for a in stock:
        count1 = 0
        count2 = 1
        index = 0
        value = ["0"]
        cursor.execute("""SELECT """+price+""" FROM """+a+"""""")
        trend = []
        rows = cursor.fetchall()
        for row in rows:
            print(row[0])
            trend.append(float(row[0]))
            index = index + 1
            if index == len(web):
                percentage = []
                for i in range(len(web)-1):
                    change = trend[count2]-trend[count1]
                    print(trend[count2],trend[count1])
                    percent = (change/trend[count1])*100
                    print(percent)
                    percentage.append(percent)
                    count1 = count1 + 1
                    count2 = count2 + 1
                for i in percentage:
                    print(i)
                    if i &lt;= 0:
                        if i == 0:
                            value.append(0)
                        elif i &lt;= -15:
                            value.append(-4)
                        elif i &lt;= -10:
                            value.append(-3)
                        elif i &lt;= -5:
                            value.append(-2)
                        elif i &lt; 0:
                            value.append(-1)
                    else:
                        if i &gt;= 15:
                            value.append(4)
                        elif i &gt;= 10:
                            value.append(3)
                        elif i &gt;= 5:
                            value.append(2)
                        elif i &gt;= 0:
                            value.append(1)

                for i in value:
                    t = str(i)
                    cursor.execute("""
                        REPLACE INTO """+ a +"""
                        ("""+trend_price+""")
                        VALUES
                        ("""+ t +""")
                        """)
</code></pre>
<p>The error I get is as follows</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/Luke_2/Desktop/Computing/Coursework/live/Jan15.py", line 172, in &lt;module&gt;
    run()
  File "C:/Users/Luke_2/Desktop/Computing/Coursework/live/Jan15.py", line 167, in run
    plot("BuyPrice","TrendBuy")
  File "C:/Users/Luke_2/Desktop/Computing/Coursework/live/Jan15.py", line 88, in plot
    trend.append(float(row[0]))
TypeError: float() argument must be a string or a number, not 'NoneType'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have <code>NULL</code> values in you table, which are translated to <code>None</code> values in Python. You can't convert <code>None</code> to a float. Perhaps you want to select only rows that are not NULL?</p>
<pre><code>cursor.execute(
    "SELECT ? FROM {} WHERE columnname is not NULL".format(a), 
    (price,))
</code></pre>
<p>I don't know what the column name is of that first column, you'll have to adjust the query.</p>
<p>I've converted your query to use a SQL parameter for the price (tablenames can't be inserted using parameters, do make sure you only ever use hard-coded table names and not accept untrusted data).</p>
<p>The alternative is to skip those rows in Python:</p>
<pre><code>if rows[0] is None:
    continue
</code></pre>
<p>Also note that the <code>sqlite3</code> module can convert values <em>for you</em>, see the <a href="https://docs.python.org/3/library/sqlite3.html#sqlite-and-python-types" rel="nofollow noreferrer"><em>SQLite and Python Types</em> section</a>; if the column is declared as <code>REAL</code> in the database, you <em>already</em> are given <code>float</code> objects anyway.</p>
</div>
<span class="comment-copy">It appears you have <code>NULL</code>s in your table, which means that <code>row[0]</code> is then set to <code>None</code>. Perhaps you need to update your query to only return non-NULL values?</span>
<span class="comment-copy">@MartijnPieters ahh ok that makes sense, im adding the trends later on and despite me using replace it adds them onto new lines creating null fileds, i thought it would ignore these</span>
<span class="comment-copy">thanks @Martijn</span>
