<div class="post-text" itemprop="text">
<p>I have the current code:</p>
<pre><code> class Stock:

    def __init__(self,name,price):

         self.name = name
         self.price = price

 name='MSFT'
 price=100
 obj1= Stock(name,price)
</code></pre>
<p>However This only works for creating a single instance of the class, what if I have a list with hundreds of names, how do I create the object variable names and initialize them? </p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you got a names list and a prices list, you can use <code>zip</code> and list comprehension:</p>
<pre><code>names = ['A', 'B', 'C']
prices = [100, 200, 300]
objects = [Stock(name, price) for name, price in zip(names, prices)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assume you're referring to this, you may want to use <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">exec()</a></p>
<pre><code>&gt;&gt;&gt; class Stock:
...     def __init__(self, name, price):
...             self.name = name
...             self.price = price
... 
&gt;&gt;&gt; name = 'MSFT'
&gt;&gt;&gt; price = 100
&gt;&gt;&gt; for i in range(10): exec("obj{} = Stock(name, price)".format(i))
... 
&gt;&gt;&gt; obj1
&lt;__main__.Stock object at 0x7ffaf5965e10&gt;
&gt;&gt;&gt; obj1.name
'MSFT'
&gt;&gt;&gt; obj9.price
100
&gt;&gt;&gt; obj0.price
100
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">What do you mean? You can create as many instances you want... (within memory limitations)</span>
<span class="comment-copy">you can not dynamicaly create a name for object but you can always have a list and append new instances to it</span>
<span class="comment-copy">@Sarathsp you can dynamically create names for objects, but its messy and inefficient.</span>
<span class="comment-copy">@Gaelephor i mean not necessary here .You ca always do it using exec</span>
<span class="comment-copy">dear lord no!!!</span>
<span class="comment-copy">@juanpa.arrivillaga Mind if I ask why?</span>
<span class="comment-copy">If you are going to do this, which is really a bad practice - these objects should be going into a container, really, like a <code>list</code> - but if you <i>must</i> then use <code>globals()</code>.</span>
<span class="comment-copy">I see, I will edit so OP knows.</span>
<span class="comment-copy">My point is, while you answer is "correct", it is leading the OP astray. Oftentimes, OP asks for X, but what they really need is Y...</span>
