<div class="post-text" itemprop="text">
<p>I have some links stored in a file which looks like this:</p>
<pre><code>http://r14---sn-p5qlsnss.googlevideo.com/videoplayback?itag=22&amp;id=o-AOtM1kWozUiJKP2ENWH989ZIfJaZNPVvXTrBkXx40lG5&amp;key=yt6&amp;ip=159.253.144.86&amp;lmt=1480060612064057&amp;dur=1047.870&amp;mv=m&amp;source=youtube&amp;ms=au&amp;ei=DtN8WLfwFsKb1gKXho6YDw&amp;expire=1484597102&amp;mn=sn-p5qlsnss&amp;mm=31&amp;ipbits=0&amp;nh=IgpwcjAzLmlhZDA3KgkxMjcuMC4wLjE&amp;initcwndbps=4717500&amp;mt=1484575249&amp;pl=24&amp;signature=1ECAB2B56C30CBF760721A1A26A7E80963DB36B8.6336B2C9C41DB53C8FA1D2A037793275F57C4825&amp;ratebypass=yes&amp;mime=video%2Fmp4&amp;upn=tUcEt34Qe6c&amp;sparams=dur%2Cei%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Csource%2Cupn%2Cexpire&amp;title=600ft+UFO+Crash+Site+Discovered+On+Mars%21+11%2F23%2F16
</code></pre>
<p>At the end of the link we have the video's title. I want to read this link from a file and get the video's title in a proper format (with those '+' and '%' signs properly resolved). How do I do that?</p>
<p>I cannot use <code>raw cgi</code> as <a href="https://stackoverflow.com/a/464977/5460216">suggested here</a> since the link is read from a file and not submitted by a form. Any idea?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's super convenient <strong><a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer">urllib.parse.parse_qs</a></strong> for python 3, but if you're using python 2, you might have to dig out the title string first.</p>
<pre><code>import urllib

url = 'http://r14---sn-p5qlsnss.googlevideo.com/videoplayback?itag=22&amp;id=o-AOtM1kWozUiJKP2ENWH989ZIfJaZNPVvXTrBkXx40lG5&amp;key=yt6&amp;ip=159.253.144.86&amp;lmt=1480060612064057&amp;dur=1047.870&amp;mv=m&amp;source=youtube&amp;ms=au&amp;ei=DtN8WLfwFsKb1gKXho6YDw&amp;expire=1484597102&amp;mn=sn-p5qlsnss&amp;mm=31&amp;ipbits=0&amp;nh=IgpwcjAzLmlhZDA3KgkxMjcuMC4wLjE&amp;initcwndbps=4717500&amp;mt=1484575249&amp;pl=24&amp;signature=1ECAB2B56C30CBF760721A1A26A7E80963DB36B8.6336B2C9C41DB53C8FA1D2A037793275F57C4825&amp;ratebypass=yes&amp;mime=video%2Fmp4&amp;upn=tUcEt34Qe6c&amp;sparams=dur%2Cei%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Csource%2Cupn%2Cexpire&amp;title=600ft+UFO+Crash+Site+Discovered+On+Mars%21+11%2F23%2F16'

title = url[url.rfind('&amp;title=') + 7:]
print urllib.unquote_plus(title)
</code></pre>
<p><strong>Note:</strong> thanks to <a href="https://stackoverflow.com/users/770830/bereal">bereal</a> for pointing out <a href="https://docs.python.org/2.7/library/urlparse.html#urlparse.parse_qs" rel="nofollow noreferrer">parse_qs</a> is also available in python 2, so just:</p>
<pre><code>import urlparse
print urlparse.parse_qs(url)['title'][0]

'600ft UFO Crash Site Discovered On Mars! 11/23/16'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer"><code>urllib.parse.parse_qs</code></a> and give it the string:</p>
<pre><code>In [17]: urllib.parse.parse_qs(s)
Out[17]: 
{'dur': ['1047.870'],
 'ei': ['DtN8WLfwFsKb1gKXho6YDw'],
 'expire': ['1484597102'],
 'http://r14---sn-p5qlsnss.googlevideo.com/videoplayback?itag': ['22'],
[.. and so on ..]
 'source': ['youtube'],
 'sparams': ['dur,ei,id,initcwndbps,ip,ipbits,itag,lmt,mime,mm,mn,ms,mv,nh,pl,ratebypass,source,upn,expire'],
 'title': ['600ft UFO Crash Site Discovered On Mars! 11/23/16'],
 'upn': ['tUcEt34Qe6c']}

In [18]: urllib.parse.parse_qs(s)["title"][0]
Out[18]: '600ft UFO Crash Site Discovered On Mars! 11/23/16'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://github.com/codeinthehole/purl" rel="nofollow noreferrer">Purl</a> can fit your needs:</p>
<pre><code>import purl

u = purl.URL('http://r14---sn-p5qlsnss.googlevideo.com/videoplayback?itag=22&amp;id=o-AOtM1kWozUiJKP2ENWH989ZIfJaZNPVvXTrBkXx40lG5&amp;key=yt6&amp;ip=159.253.144.86&amp;lmt=1480060612064057&amp;dur=1047.870&amp;mv=m&amp;source=youtube&amp;ms=au&amp;ei=DtN8WLfwFsKb1gKXho6YDw&amp;expire=1484597102&amp;mn=sn-p5qlsnss&amp;mm=31&amp;ipbits=0&amp;nh=IgpwcjAzLmlhZDA3KgkxMjcuMC4wLjE&amp;initcwndbps=4717500&amp;mt=1484575249&amp;pl=24&amp;signature=1ECAB2B56C30CBF760721A1A26A7E80963DB36B8.6336B2C9C41DB53C8FA1D2A037793275F57C4825&amp;ratebypass=yes&amp;mime=video%2Fmp4&amp;upn=tUcEt34Qe6c&amp;sparams=dur%2Cei%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Csource%2Cupn%2Cexpire&amp;title=600ft+UFO+Crash+Site+Discovered+On+Mars%21+11%2F23%2F16')
print(u.query_param('title'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <code>urlparse.parse_qs</code>:</p>
<pre><code>try:
    from urlparse import urlparse           # for python2
except:
    from urllib import parse as urlparse    # for python3

rv = urlparse.parse_qs(link)
title = rv['title'][0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import urllib
a = "http://r14---sn-p5qlsnss.googlevideo.com/videoplayback?itag=22&amp;id=o-AOtM1kWozUiJKP2ENWH989ZIfJaZNPVvXTrBkXx40lG5&amp;key=yt6&amp;ip=159.253.144.86&amp;lmt=1480060612064057&amp;dur=1047.870&amp;mv=m&amp;source=youtube&amp;ms=au&amp;ei=DtN8WLfwFsKb1gKXho6YDw&amp;expire=1484597102&amp;mn=sn-p5qlsnss&amp;mm=31&amp;ipbits=0&amp;nh=IgpwcjAzLmlhZDA3KgkxMjcuMC4wLjE&amp;initcwndbps=4717500&amp;mt=1484575249&amp;pl=24&amp;signature=1ECAB2B56C30CBF760721A1A26A7E80963DB36B8.6336B2C9C41DB53C8FA1D2A037793275F57C4825&amp;ratebypass=yes&amp;mime=video%2Fmp4&amp;upn=tUcEt34Qe6c&amp;sparams=dur%2Cei%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Csource%2Cupn%2Cexpire&amp;title=600ft+UFO+Crash+Site+Discovered+On+Mars%21+11%2F23%2F16"
b = a.split('=')[-1]
print urllib.unquote_plus(b)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2.7/library/urlparse.html#urlparse.parse_qs" rel="nofollow noreferrer"><code>parse_qs</code></a> is there since 2.6, just the module has changed.</span>
<span class="comment-copy">I didn't know that, thanks a lot!!</span>
