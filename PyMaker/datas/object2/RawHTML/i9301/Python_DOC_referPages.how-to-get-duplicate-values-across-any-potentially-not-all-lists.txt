<div class="post-text" itemprop="text">
<p>I have a dataset along the lines of:</p>
<pre><code>data.append(['a', 'b', 'c'], ['a', 'x', 'y', z'], ['a', 'x', 'e', 'f'], ['a'])
</code></pre>
<p>I've searched SO and found ways to return duplicates across all lists using <code>intersection_update()</code> (so, in this example, <code>'a'</code>), but I actually want to return duplicates from <em>any</em> lists, i.e.,:</p>
<p><code>retVal = ['a', 'x']</code></p>
<p>Since <code>'a'</code> and <code>'x'</code> are duplicated at least once among all lists. Is there a built-in for Python 2.7 that can do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> to determine the number of each item and <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a> to pass the items from the sublists to the <code>Counter</code>.</p>
<pre><code>from itertools import chain
from collections import Counter

data=[['a', 'b', 'c'], ['a', 'x', 'y', 'z'], ['a', 'x', 'e', 'f'], ['a']]
c = Counter(chain.from_iterable(data))
retVal = [k for k, count in c.items() if count &gt;= 2]
print(retVal)
#['x', 'a']
</code></pre>
</div>
<span class="comment-copy">I would pass the lists to a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> and look for all keys with value &gt;= 2</span>
<span class="comment-copy">your append statement is off;..</span>
<span class="comment-copy"><i>to return duplicates from any lists</i> - can you elaborate?</span>
<span class="comment-copy">given <code>['a','b','a'],['x','y']</code> would you return <code>'a'</code>?</span>
<span class="comment-copy">Put another way, I want to return all elements which aren't unique when compared with the elements of every other list.</span>
<span class="comment-copy">This does precisely what I was looking for.</span>
