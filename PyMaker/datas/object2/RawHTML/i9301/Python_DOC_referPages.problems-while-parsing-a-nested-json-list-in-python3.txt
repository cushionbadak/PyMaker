<div class="post-text" itemprop="text">
<p>I have a very large list <code>alist</code> which has a dict and a nested list like this:</p>
<pre><code>a_list = [{'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}},
 {'A': [{'dictionary': 'True',
    'item': 'pineapples',
    'id': '13',
    'score': '9.7899',
    'rollup': {'True': 'OK', 'Fiz': 'Yes'},
    'variant_list': [{'endp': '8', 'form': 'pineapple', 'register': '0'}]}], 'status': {'codecheck': '0', 'cred': '90809890', 'msg': 'OK'}},
......

{'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}},
    ]
</code></pre>
<p><strong>How can I extract the extract the <code>item</code> parameter if and only if exist into a list like this:</strong></p>
<pre><code>['NaN', 'pineapples', 'NaN']
</code></pre>
<p>I do not understand how to parse it since it has a very nested structure, the main issue which I am struggling with is to accessing to each element of the list and then to the other list and leaving a <code>NaN</code> string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the following approach(<em>list comprehension</em>):</p>
<pre><code>a_list = [{'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}},
          {'A': [{'dictionary': 'True',
                  'item': 'pineapples',
                  'id': '13',
                  'score': '9.7899',
                  'rollup': {'True': 'OK', 'Fiz': 'Yes'},
                  'variant_list': [{'endp': '8', 'form': 'pineapple', 'register': '0'}]}],
           'status': {'codecheck': '0', 'cred': '90809890', 'msg': 'OK'}},
          {'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}},
          ]

result = ['NaN' if not len(o['A']) else o['A'][0]['item'] for o in a_list]
print(result)
</code></pre>
<p>The output:</p>
<pre><code>['NaN', 'pineapples', 'NaN']
</code></pre>
<hr/>
<blockquote>
<p>List comprehensions provide a concise way to create lists. Common
  applications are to make new lists where each element is the result of
  some operations applied to each member of another sequence or
  iterable, or to create a subsequence of those elements that satisfy a
  certain condition.</p>
</blockquote>
<p><em>a certain condition</em>, in your case, is <code>'NaN' if not len(o['A']) else o['A'][0]['item']</code></p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a></p>
</div>
<span class="comment-copy">what doesn mean <i>and leaving a NaN string</i> ?</span>
<span class="comment-copy">what do you mean by if it exists in a string?</span>
<span class="comment-copy">@RomanPerekhrest thanks for the help!, as you can see in the first and the third element of  <code>a_list</code> they have just an empty list <code>{'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}}</code> I would like to impute a <code>NaN</code> there, since it has a void list.</span>
<span class="comment-copy">@tooty44, yes for instance just replace this <code>{'A': [], 's': {'code': '0', 'credits': '0', 'msg': 'OK'}},</code> for <code>NaN</code></span>
<span class="comment-copy">Could you provide some explanation?.. I didnot understood pretty well the list comprehension.</span>
<span class="comment-copy">@johndoe, quoted some good extract from documentation</span>
