<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/30148740/how-do-i-do-exponentiation-in-python">How do I do exponentiation in python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I am running this little loop on a Jupyter notebook</p>
<pre><code>import time

def time_loop(reps):

    start = time.clock()
    count = 0
    for i in range(reps):
        count += 1
    return time.clock() - start

time_loop(10000^100)
</code></pre>
<p>No matter what I enter as an argument, I seem to always get an output around 0.003</p>
<pre><code>0.0031050000000050204
</code></pre>
<p>What is going on?</p>
<p>One guess is that python understands that the result of the loop will simply be count = reps, and quits the loop?</p>
<p>But if I run this instead</p>
<pre><code>import time
import numpy as np

def time_loop(reps):

    start = time.clock()
    count = 0
    for i in range(reps):
        count += np.sin(reps)
    return time.clock() - start

time_loop(10000^100)
</code></pre>
<p>It does take longer as I increase the argument, even though the result of the loop is still quite simply count = reps*sin(reps).</p>
</div>
<div class="post-text" itemprop="text">
<p><code>^</code> is xor and not exponentation:</p>
<pre><code>&gt;&gt;&gt; 10000^100
10100
</code></pre>
<p>That's a big number but not like with exponentation: <code>**</code>, that returns:</p>
<pre><code>&gt;&gt;&gt; 10000**100
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
</code></pre>
<p>That also takes a "while" to iterate over.</p>
<p>A good reference for the operators and their precedence is avaiable in the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">python documentation</a>:</p>
<blockquote>
<p>^     - Bitwise XOR</p>
<p>**    - Exponentiation</p>
</blockquote>
</div>
<span class="comment-copy">What do you think <code>10000^100</code> computes?  It's not exponentiation - it's exclusive <code>or</code>.</span>
