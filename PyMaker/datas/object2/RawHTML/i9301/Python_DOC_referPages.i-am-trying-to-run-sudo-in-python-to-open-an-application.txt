<div class="post-text" itemprop="text">
<p>For example, if I wanted to call synaptic on my python script, this is what I tried but I'm getting error with Popen. Is there anyway to make this work with sudo instead of gksu? I would like to use this method to run scripts within a larger program.</p>
<pre><code>process = subprocess.Popen("sudo synaptic", 'w', stdout=subprocess.PIPE, bufsize=1).write(password)
TypeError: __init__() got multiple values for keyword argument 'bufsize'
</code></pre>
<p>Below is what I am working with</p>
<pre><code>from PyQt4 import QtGui, QtCore
import os
import sys
import subprocess
# from mainwindow import Ui_MainWindow

class PasswordDialog(QtGui.QDialog):
    def __init__(self, parent=None):
        super(PasswordDialog, self).__init__(parent)
        PasswordDialog.resize(self, 375, 130)
        PasswordDialog.setWindowTitle(self, "Enter Password")
        self.buttonOk = QtGui.QPushButton(self)
        self.buttonOk.setText("OK")
        self.buttonCancel = QtGui.QPushButton(self)
        self.buttonCancel.setText("Cancel")
        self.textEdit = QtGui.QLineEdit(self)
        self.textEdit.setFocus()

        self.label = QtGui.QLabel(self)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setText("Enter your password to perform administrative Tasks")
        self.label.setWordWrap(True)
        self.label_2 = QtGui.QLabel(self)
        self.label_2.setText("Password")
        self.verticalLayout = QtGui.QVBoxLayout(self)
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout = QtGui.QHBoxLayout(self)
        self.horizontalLayout.addWidget(self.label_2)
        self.horizontalLayout.addWidget(self.textEdit)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout2 = QtGui.QHBoxLayout(self)
        self.horizontalLayout2.setAlignment(QtCore.Qt.AlignRight)
        self.horizontalLayout2.addWidget(self.buttonCancel)
        self.horizontalLayout2.addWidget(self.buttonOk)
        self.verticalLayout.addLayout(self.horizontalLayout2)
        self.buttonOk.clicked.connect(self.handleLogin)
        self.buttonCancel.clicked.connect(self.close)

    def handleLogin(self):
        password = self.textEdit.text()
        process = subprocess.Popen("sudo synaptic", 'w').write(password)
        #out = process.stdout.read(1)
        try:
            subprocess.check_call(process)
        except subprocess.CalledProcessError as error:
            print "error code", error.returncode, error.output



if __name__ == '__main__':
    app = QtGui.QApplication(sys.argv)
    login = PasswordDialog()

    if login.exec_() == QtGui.QDialog.Accepted:
        window = Window()
        window.show()
        sys.exit(app.exec_())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you ought to use <code>communicate</code> to send the password to the <code>sudo</code> command.</p>
<p>Try this:</p>
<pre><code>import subprocess

with subprocess.Popen(["sudo", "synaptic"], stdout=subprocess.PIPE, bufsize=1) as process:
    process.communicate(password)
    process.wait()
</code></pre>
<p>The value of <code>process</code> should be a bytes stringâ€¦</p>
</div>
<div class="post-text" itemprop="text">
<p>you are passing the wrong arguments to <code>Popen</code>.  The docs are here:
<a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html#popen-constructor</a></p>
<p>or even easier... just use the <code>call</code> function provided by the <code>subprocess</code> module:</p>
<pre><code>subprocess.call(['sudo', 'synaptic'])
</code></pre>
</div>
<span class="comment-copy">your args to <code>subprocess.Popen</code> should be a list, try <code>['sudo', 'synaptic']</code></span>
<span class="comment-copy">check documentation for <code>Popen</code> - maybe other argument is assigned to <code>bufsize</code></span>
<span class="comment-copy">see <a href="https://docs.python.org/3.5/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">Popen</a>: second argument <code>w</code> is assigned to <code>bufsize</code> so you have two <code>bufsize</code></span>
<span class="comment-copy">The 'w' argument is passed to the <code>buffsize</code> parameter.</span>
<span class="comment-copy">or, if you prefer, <code>subprocess.Popen(['gksudo', 'synaptic'])</code>.</span>
<span class="comment-copy">Thanks, might you know how to catch an output if the wrong password has been entered?</span>
<span class="comment-copy">@TatakaiWasumi ask a new question</span>
<span class="comment-copy">I added <code>shell=True</code> it fixed some issues but them I'm getting error <code>with subprocess.Popen(["sudo", "synaptic"], stdout=subprocess.PIPE, bufsize=1, shell=True) as process: AttributeError: __exit__</code></span>
<span class="comment-copy">@TatakaiWasumi why don't you just read the documentation for <code>Popen</code>?</span>
<span class="comment-copy">You're right, I've been treating Popen like it's the same as os.popen. I'll try the docs</span>
<span class="comment-copy">But then I wouldn't be able to send password to sudo from self.textEdit.text()?</span>
<span class="comment-copy">@TatakaiWasumi that's not the question you asked. you asked about how to call <code>sudo synaptic</code>.  I provided the answer.  That's sorta how it works here.  If you have a followup question about interacting with a spawned subprocess, then ask a new question.</span>
<span class="comment-copy">@CoreyGoldberg. To be fair to the OP, the code in the question includes an attempt to write a password to the process (although of course the syntax is all wrong, because they didn't read the popen docs).</span>
