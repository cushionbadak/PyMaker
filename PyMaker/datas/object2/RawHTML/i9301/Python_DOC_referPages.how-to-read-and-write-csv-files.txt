<div class="post-text" itemprop="text">
<p>I'm trying to learn how to read and write python, but it's really confusing me and I can't seem to find anywhere that tells me what I want to know.</p>
<p>I'm currently working on a Collatz conjecture problem:</p>
<pre><code>list=[]

def collatz(a):
    if a%2==0:
        return a/2
    else:
        return (3*a)+1

    number = input("Please enter range: ")+1
    print "\n\n"
    for x in range(1,number):
        n=x
        count=(-1)
        while n&gt;=1:
            print "%s " % (n),
            if n&lt;x:
                count += list[n-1]
                n=0
            if n==1:
                n=0
            n=collatz(n)
            count+=1
        print "\n\n%s: %s\n\n" % (x, count)
        f.write("%s %s\n" % (x, count))
        list.insert(x,count)
        x+=1
</code></pre>
<p>I just want to output the data so that I can graph it in excel, but also so that I can save the data there (instead of the list) to refer to later (so, say I run it to 100,000, the next time I enter it, I want it to start from 100,001 and access the data from the file in the same way as I do with the list above).</p>
<p>I'm trying to learn how to do it myself, but for some reason I just keep getting confused.</p>
<p>With regards to formatting, I would like to save the starting number on the first column and then save the number in the second column.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">csv</a> library (or <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">this link</a> for python 3) to work with csv data. It has methods for reading and writing csv files, and these will work much better than anything you write for yourself. </p>
<p>In this case, I would suggest using <a href="https://docs.python.org/2/library/sqlite3.html" rel="nofollow noreferrer">sqlite</a> instead (<a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">python3 link</a>). This is a tool which allows you to access a flat file as if it were a database, which will probably save you a lot of trouble. </p>
</div>
<span class="comment-copy">Use pandas or numpy.</span>
<span class="comment-copy">You can consider csv as a comma separated text file. It means that just using methods like open() and readlines() are fine.</span>
<span class="comment-copy">Please create <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Many folks read and write csv files with the built-in <code>csv</code> module. See the examples in the <a href="https://docs.python.org/2/library/csv.html#module-csv" rel="nofollow noreferrer">documentation</a>. You should also read (and follow) the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8 - Style Guide for Python Code</a>, which includes <b>not</b> naming your own variables the same as built-in functions and types (like <code>list</code>).</span>
