<div class="post-text" itemprop="text">
<p>I have gone through many of the regex questions on here and used the advice in them, but can't seem to get my code to run still. I have a list of strings, and I am attempting to find the entries in this list that contain one of the following patterns:</p>
<ul>
<li>a BLANK of a BLANK</li>
<li>an BLANK of an BLANK</li>
<li>a BLANK of an BLANK</li>
<li>an BLANK of a BLANK</li>
<li>that BLANK of a BLANK</li>
<li>that BLANK of an BLANK</li>
<li>the BLANK of a BLANK</li>
<li>the BLANK of an BLANK</li>
</ul>
<p>For example, I should be able to find sentences that contain phrases like "an idiot of a doctor" or "the hard-worker of a student."</p>
<p>Once found, I want to make a list of the sentences that satisfy this criteria. So far, this is my code:</p>
<pre><code>for sentence in sentences:
    matched = re.search(r"a [.*]of a " \
                        r"an [.*]of an " \
                        r"a [.*]of an" \
                        r"an [.*]of a " \
                        r"that [.*]of a " \
                        r"that [.*]of an " \
                        r"the [.*]of a " \
                        r"the [.*]of an ", sentence)
    if matched:
        bnp.append(matched)

#Below two lines for testing purposes only
print(matched)
print(bnp)
</code></pre>
<p>This code turns up no results, despite the fact that there are phrases that should satisfy the criteria in the list.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>[.*]</code> is a character class, so you are asking <code>regex</code> to actually match the dot or star character, quoting from <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re's</a> docs:</p>
<blockquote>
<p><code>[]</code></p>
<p>Used to indicate a set of characters. In a set:</p>
<p>Characters can be listed individually, e.g. [amk] will match 'a', 'm', or 'k'.</p>
<p>...</p>
</blockquote>
<p>So, here is one way to do it:</p>
<p><code>(th(at|e)|a[n]?)\b.*\b(a[n]?)\b.*</code></p>
<p>This expression will try to match either the, that , a or an, then any character up to there is either a or an.</p>
<p>Here in this <a href="https://regex101.com/r/NofAxc/2" rel="nofollow noreferrer">link</a>, there is a demonstration of it's process.</p>
<p>And here is the actual demonstration:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt;
&gt;&gt;&gt; regex = r"(th(at|e)|a[n]?)\b.*\b(a[n]?)\b.*"
&gt;&gt;&gt; test_str = ("an idiot of a doctor\n"
    "the hard-worker of a student.\n"
    "an BLANK of an BLANK\n"
    "a BLANK of an BLANK\n"
    "an BLANK of a BLANK\n"
    "that BLANK of a BLANK\n"
    "the BLANK of a BLANK\n"
    "the BLANK of an BLANK\n")
&gt;&gt;&gt;
&gt;&gt;&gt; matches =  re.finditer(regex, test_str, re.MULTILINE | re.IGNORECASE) 
&gt;&gt;&gt; 
&gt;&gt;&gt; for m in matches:
        print(m.group())


an idiot of a doctor
the hard-worker of a student.
an BLANK of an BLANK
a BLANK of an BLANK
an BLANK of a BLANK
that BLANK of a BLANK
the BLANK of a BLANK
the BLANK of an BLANK
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As it stands, this code will concatenate your pattern parameters into one long string with no operators between them.  So in effect you are searching for the regex "a [.*]of a an [.*]of an a [.*]of an ..."</p>
<p>You are missing the 'or' operator: |.  A simpler regex to accomplish this task would be something like:</p>
<pre><code>(a|an|that|the) \b.*\b of (a|an) \b.*\b
</code></pre>
</div>
<span class="comment-copy">Why do you write this kind of things: <code>[.*]</code>, take the time to read regex tutorial before, don't try random things.</span>
<span class="comment-copy">I thought that [.*] would let me search for a substring of any length with any characters- did I misunderstand this?</span>
<span class="comment-copy">brackets are used to match single characters, use <code>(.*)</code> instead</span>
<span class="comment-copy">This worked great, thanks so much!</span>
