<div class="post-text" itemprop="text">
<p>I have a text file which contains the pixel values of document images. The data mentioned between Begin &amp; End tags consist of a unique id, the ground truth value and the feature vector for each line of the document image. However, I want to shuffle <strong>the sections of data as units</strong>. Can anybody point out a method as to how I can randomize or shuffle this data?</p>
<pre><code>===Begin==

TAG:0014/7_21

TRUTH:0020 0915 0941 091b 0020 0927 0940 092e 0940 0020 092a 095c 0940 0020 092a 0930 , 0020 092f 0939 093e 0901 0020 0909 0938 0947 0020 0905 0928 0947 

FEATURE:14 32 256 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 

===End==

===Begin==

TAG:0014/7_16

TRUTH:0020 0925 093e 0020 0914 0930 0020 091a 093e 0939 0924 093e 0020 0925 093e 0020 0915 093f 0020 0906 091c 0020 0915 0947 0020 091c 092e 093e 0928 

FEATURE:19 32 43  1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

===END===
...
...
</code></pre>
<p>and so on.</p>
<p>I need to shuffle the entire content between the BEGIN and END tags. </p>
</div>
<div class="post-text" itemprop="text">
<p>I'll assume that the section delimiters are supposed to be uniform, and the variations in the delimiters in the data given in the question are typos.</p>
<p>Shuffling the sections is easy, once we split the data into sections. I've created some fake data with 5 sections to illustrate the process.</p>
<pre><code>src = '''\
===Begin===

TAG:0014/7_29

TRUTH:019e 0078 02fc 0790 0552 0d01 0f8a 0f67 06d7 0cd5

FEATURE:229 81 20 0 1 1 1 1 1 1 0 0 1 0 0 0

===End===

===Begin===

TAG:0014/7_06

TRUTH:0a09 01d4 019a 0f41 0509 01d1 0290 05f2 0231 022c

FEATURE:214 97 4 0 0 0 1 1 1 0 1 0 1 1 0 1

===End===

===Begin===

TAG:0014/7_05

TRUTH:0ea1 0a1e 0252 004c 0eaa 0333 0258 06d2 087c 043d

FEATURE:25 15 153 1 1 0 1 1 0 1 0 0 1 0 0 0

===End===


===Begin===

TAG:0014/7_01

TRUTH:08b7 0904 06bd 0af8 0683 0872 0fa2 0809 01a0 02f4

FEATURE:178 101 78 0 1 0 1 0 1 1 0 0 0 0 0 1

===End===
===Begin===

TAG:0014/7_19

TRUTH:04bd 0dc0 0414 0156 09dd 0bab 0146 0b73 06b8 07fc

FEATURE:202 74 248 0 0 0 0 1 0 0 1 1 0 1 0 0

===End===
'''

from random import seed, shuffle

# seed randomizer so we can get reproducible results
seed(42)

# Split data into sections
data = []
section = []
src_lines = iter(src.splitlines(True))
for line in src_lines:
    section.append(line)
    if line.startswith('===End==='):
        data.append(section)
        section = []
        # Skip any extra blank lines between sections
        for line in src_lines:
            if line and not line.isspace():
                section.append(line)
                break

shuffle(data)
for sec in data:
    print(''.join(sec)) 
</code></pre>
<p><strong>output</strong></p>
<pre><code>===Begin===

TAG:0014/7_01

TRUTH:08b7 0904 06bd 0af8 0683 0872 0fa2 0809 01a0 02f4

FEATURE:178 101 78 0 1 0 1 0 1 1 0 0 0 0 0 1

===End===

===Begin===

TAG:0014/7_06

TRUTH:0a09 01d4 019a 0f41 0509 01d1 0290 05f2 0231 022c

FEATURE:214 97 4 0 0 0 1 1 1 0 1 0 1 1 0 1

===End===

===Begin===

TAG:0014/7_05

TRUTH:0ea1 0a1e 0252 004c 0eaa 0333 0258 06d2 087c 043d

FEATURE:25 15 153 1 1 0 1 1 0 1 0 0 1 0 0 0

===End===

===Begin===

TAG:0014/7_19

TRUTH:04bd 0dc0 0414 0156 09dd 0bab 0146 0b73 06b8 07fc

FEATURE:202 74 248 0 0 0 0 1 0 0 1 1 0 1 0 0

===End===

===Begin===

TAG:0014/7_29

TRUTH:019e 0078 02fc 0790 0552 0d01 0f8a 0f67 06d7 0cd5

FEATURE:229 81 20 0 1 1 1 1 1 1 0 0 1 0 0 0

===End===
</code></pre>
<p>The line</p>
<pre><code>src_lines = iter(src.splitlines(True))
</code></pre>
<p>allows us to iterate over the lines in the <code>src</code> string as if we were iterating over the lines in a file. To use this code on an actual file instead, replace that line with</p>
<pre><code>with open(filename) as src_lines:
</code></pre>
<p>and indent the <code>for line in src_lines:</code> block so that it's inside the <code>with</code> block.</p>
</div>
<span class="comment-copy">Please be more specific. What kind of shuffling do you want? All the characters between the Begin/End tags, which would mess up the <code>TAG</code>, <code>TRUTH</code>, and <code>FEATURE</code> headings, or the values in all three lines, or the values in just <code>TRUTH</code> and <code>FEATURE</code>, or something else? And have you checked the <a href="https://docs.python.org/3/library/random.html#functions-for-sequences" rel="nofollow noreferrer">shuffle()</a> function in the <code>random</code> module?</span>
<span class="comment-copy">Let's call the text delimited by your ===BEGIN=== and ===END=== markers a section. Do you want to shuffle the contents of each section, or do you want to keep their contents intact and shuffle the sections as units?</span>
<span class="comment-copy">yes exactly @PM2Ring ,I want to keep their contents intact and shuffle the sections as units</span>
<span class="comment-copy">You can use <code>random.shuffle()</code> from the standard library to shuffle. It's quite straighforward. If you need specific help, you should include your python code, not just the input data. <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">I just noticed that your markers aren't uniform. Some of them end in <code>==</code> but the final one ends in <code>===</code>, and the last one is all upper-case but the others aren't. Splitting the data into sections would be slightly simpler (&amp; more efficient) if the markers were uniform, eg <code>===Begin===</code> and <code>===End===</code>.</span>
