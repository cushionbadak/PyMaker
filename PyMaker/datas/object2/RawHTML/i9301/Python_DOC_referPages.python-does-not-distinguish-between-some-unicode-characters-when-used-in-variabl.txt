<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/34097193/identifier-normalization-why-is-the-micro-sign-converted-into-the-greek-letter">Identifier normalization: Why is the micro sign converted into the Greek letter mu?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<h3>The problem</h3>
<p>I for one delight myself by using Unicode literals in my variable names when writing Python 3 code. Today I had a weird bug, which turns out to be due to Python not distinguishing between the variables <code>ρ</code> and <code>ϱ</code>, as this short code show:</p>
<pre><code>ρ = 'hello'
ϱ = 'goodbye'
print(ρ)  # Prints 'goodbye'
</code></pre>
<p>Is this a bug or a feature? In case of the latter, how/where can I find the set of all such characters which belong together in this manner?</p>
<h3>Further exploration</h3>
<p>This lack of distinction is not present when <code>ρ</code> and <code>ϱ</code> are used inside strings:</p>
<pre><code>a = 'ρ'
b = 'ϱ'
print(a == b)  # Prints False
</code></pre>
<p>which makes me confident that this is not some encoding problem with my editor/terminal.</p>
<p>We can also confirm that Python is fully aware of precisely which characters we are dealing with, using the <code>unicodedata</code> module:</p>
<pre><code>import unicodedata
print(unicodedata.name('ρ'))  # Prints 'GREEK SMALL LETTER RHO'
print(unicodedata.name('ϱ'))  # Prints 'GREEK RHO SYMBOL'
</code></pre>
<p>I have found the same behavior between the pair <code>φ</code> (GREEK SMALL LETTER PHI) and <code>ϕ</code> (GREEK PHI SYMBOL).</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/lexical_analysis.html#identifiers" rel="nofollow noreferrer">2.3. Identifiers and keywords ¶</a></p>
<blockquote>
<p>All identifiers are converted into the normal form NFKC while parsing; comparison of identifiers is based on NFKC.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; unicodedata.normalize('NFKC', 'ρϱ')
'ρρ'
</code></pre>
</div>
