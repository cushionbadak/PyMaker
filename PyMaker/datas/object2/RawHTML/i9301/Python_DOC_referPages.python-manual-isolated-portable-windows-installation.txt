<div class="post-text" itemprop="text">
<p>I thought it is an easy question but I spent a lot of google time to find the answer with no luck. Hope you can help me.</p>
<p>My company has a large SW system on <strong>windows</strong> which is <strong>portable</strong>, meaning copy some folders, add some folder to windows path and you are ready to go.</p>
<p>No registry, no dll in system directory, no shortcuts, Nothing!</p>
<p>I want to start using <strong>python 3.x</strong> in our system in the <strong>same paradigm</strong>. I also want the ability to add to this distribution a  pip/conda <strong>3rd packages</strong> from time to time.</p>
<ul>
<li>I <strong>don't want</strong> to install python msi on all the systems. </li>
<li>I <strong>don't want</strong> to pack it to standalone executable like py2exe and pyinstaller or use special python distribution like PyWin32.</li>
</ul>
<p>Somehow, I couldn't find a formal official solution for that.</p>
<p>The closest thing was <a href="https://docs.python.org/3/using/windows.html" rel="nofollow noreferrer">here</a> but <strong>no pip is supported</strong>, python is <strong>minimal</strong>, and the system isolation is <strong>"almost"</strong>.</p>
<blockquote>
<p>3.8. Embedded Distribution New in version 3.5.</p>
<p>The embedded distribution is a ZIP file containing a minimal Python
  environment. It is intended for acting as part of another application,
  rather than being directly accessed by end-users.</p>
<p>When extracted, the embedded distribution is (<strong>almost</strong>) fully isolated
  from the user’s system, including environment variables, system
  registry settings, and installed packages. The standard library is
  included as pre-compiled and optimized .pyc files in a ZIP, and
  python3.dll, python36.dll, python.exe and pythonw.exe are all
  provided. Tcl/tk (including all dependants, such as Idle), pip and the
  Python documentation are not included.</p>
<p>Note The embedded distribution does not include the Microsoft C
  Runtime and it is the responsibility of the application installer to
  provide this. The runtime may have already been installed on a user’s
  system previously or automatically via Windows Update, and can be
  detected by finding ucrtbase.dll in the system directory. Third-party
  packages should be installed by the application installer alongside
  the embedded distribution. Using pip to manage dependencies as for a
  regular Python installation i<strong>s not supported</strong> with this distribution,
  though with some care it may be possible to include and use pip for
  automatic updates. In general, third-party packages should be treated
  as part of the application (“vendoring”) so that the developer can
  ensure compatibility with newer versions before providing updates to
  users.</p>
</blockquote>
<p>Any ideas?
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about... installing Python in one machine and replicate that installation on others computers?</p>
<p>Usually, I install Python in a Windows Virtualbox machine (Microsoft usually give it for free to try it or for testing old Internet Explorer versions). </p>
<p>Then I copy the Python directory to my Windows machine (the real host) and usually works. This makes possible to using various python versions.</p>
<p>Did you try to complete the Python Embedded Distribution? Usually they not come with Tkinter, but once I could copy files and put in this distribution in a way that works. Try it too.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://pip.pypa.io/en/stable/installing/#installing-with-get-pip-py" rel="nofollow noreferrer">install pip with get-pip.py</a></p>
</div>
<span class="comment-copy">Welcome to SO. Please read this <a href="http://stackoverflow.com/help/how-to-answer">how-to-answer</a> and follow the guideline   there to provide quality answer.</span>
<span class="comment-copy">@thewaywewere from your <a href="http://stackoverflow.com/help/how-to-answer">how-to-answer</a> what exactly I didn't do? (asking for learning...)</span>
<span class="comment-copy">This does not answer the OP's question</span>
