<div class="post-text" itemprop="text">
<p>I've looked at other questions and found out how to find what line a word is on in a text file but when using it in my code it doesnt do what i want it to do.</p>
<pre><code> while x == "i" :
  print ("Please Enter Your Usename And Pasword!")
  luser = input("USERNAME - ")
  Lpass = input("PASSWORD - ")
  with open("USERNAME.txt") as ucc:
   for num, line in enumerate(ucc, 1):
    if luser in line:
     print (int(num))

  uc = open( "USERNAME.txt", "r")
  pc = open( "PASSWORD.txt", "r")

  u = uc.readline(int(num))
  pw = pc.readline(int(num))
  print (u)
  print (pw)
</code></pre>
<p>So i run this and type in the username i used in my signup program and its meant to check what line its on so it knows which password is paired with it. But for some reason the readline bit doesnt know what line to read to set the variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/linecache.html#module-linecache" rel="nofollow noreferrer">linecache</a> standard library's module to go to a specific line directly <strong>PS no need to open the file</strong></p>
<pre><code>line = linecache.getline(file, num)
</code></pre>
<p>for your case  </p>
<pre><code>import linecache

ucc = open("USERNAME.txt", "r")

while x == "i":
    print ("Please Enter Your Usename And Pasword!")
    luser = input("USERNAME - ")
    Lpass = input("PASSWORD - ")
    for num, line in enumerate(ucc, 1):
        if luser in line:
            pw = linecache.getline("PASSWORD.txt", num)
            print(line)
            print(pw)
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As the commenters pointed out <code>readline()</code> does not take in a line number as an argument. One way to read a specific line is to iterate through the file until you reach the desired line.</p>
<pre><code>with open("USERNAME.txt", "r") as fp:
    for i, line in enumerate(fp, start=1):
        if i == num:
            u = line
            break

with open("PASSWORD.txt", "r") as fp:
    for i, line in enumerate(fp, start=1):
        if i == num:
            pw = line
            break
</code></pre>
<p>Line-by-line explanation:</p>
<pre><code>with open("USERNAME.txt", "r") as fp:
</code></pre>
<p>Opens the <code>USERNAME.txt</code> file in read mode (denoted by the <code>r</code>) and assigns its <a href="https://docs.python.org/3/glossary.html#term-file-object" rel="nofollow noreferrer">file object</a> to a variable named <code>fp</code>.</p>
<pre><code>    for i, line in enumerate(fp, start=1):
</code></pre>
<p>Normally if we wanted to simply loop through a file line by line we could do</p>
<pre><code>    for line in fp:
</code></pre>
<p>However, we need to know the line number associated with each line so that we can find a specific line. <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> let's us associate each line with a line number that gets assigned to the variable <code>i</code>. The <code>start=1</code> argument in <code>enumerate()</code> specifies that <code>i</code> will start at <code>1</code> instead of the default, <code>0</code>. </p>
<p>In short, this statement says that we are going to loop through the lines in <code>fp</code> and count them as we go.</p>
<pre><code>        if i == num:
</code></pre>
<p>Our for loop will go through each line in the file, but we only care about the line with our username/password. Here we check to see if the current line number <code>i</code> is the line number we're looking for.</p>
<pre><code>            u = line
</code></pre>
<p>If it is the line number we're looking for we set the <code>u</code> variable to the contents of the line.</p>
<pre><code>            break
</code></pre>
<p>Keyword to exit a loop. After we have found the line we are looking for we don't need to go through the rest of the file, so we <code>break</code> to save time.</p>
</div>
<span class="comment-copy"><code>readline()</code> parameter is the <i>size</i> of the line, not the line number.  <a href="https://docs.python.org/2/library/stdtypes.html?highlight=readline#file.readline" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a></span>
<span class="comment-copy"><code>readline()</code> reads the next line of the target file. The parameter is NOT the line index to read, but the size or length of the current line.</span>
<span class="comment-copy">there is no need to cast num it's by default an int and instead of openning your file "USERNAME.txt" twice do it once at the top</span>
<span class="comment-copy">Approximately how large is the file?  If it is not too big then you could read it into a list using <code>readlines</code> then get the line number from the index (+1).</span>
<span class="comment-copy">As an aside <a href="https://www.python.org/dev/peps/pep-0008/#indentation" rel="nofollow noreferrer">PEP8 -- Style Guide for Python Code</a> recommends to "use 4 spaces per indentation level."  The only reason this matters is that breaking convention might make your code hard for other Python programmers to read.  Of course PEP8 also says "However, know when to be inconsistent -- sometimes style guide recommendations just aren't applicable. When in doubt, use your best judgment."</span>
<span class="comment-copy">the line cache gets the right data but when i put it throught this if statement it doesnt work? (look at question for if statement)</span>
<span class="comment-copy">i think what its doing is taking extra spaces  to the word in the text file is this becuase when writing to the file \n is on it to add a newline</span>
<span class="comment-copy">solved the problem it was because of \n when appending username and password to file</span>
<span class="comment-copy">great ! maybe you want to use` luser == line.strip('\n')` instead of using the <b>in</b> keyword because if you have two usernames <b>user</b> and <b>username</b> <code>"user" in "username"</code> will always be True</span>
<span class="comment-copy">thanks for your help :)</span>
<span class="comment-copy">could you explain how this works i am new to programming</span>
<span class="comment-copy">updated my answer, let me know if anything is unclear</span>
<span class="comment-copy">ok thankyou very much this helped alot</span>
