<div class="post-text" itemprop="text">
<p>I have been struggling with this for almost a week, maybe someone can help me here? To be short, I wrote a program in C++ and want to link it with Python (to build a web application with Flask or Django). </p>
<p>My C functions which would return an int, char or void work fine, the problem is when they should return a string. I more or less understand what is the cause of the problem (my C function returns a pointer, which my Python function can't handle as a useful data).</p>
<p>So here is an example code that I wrote. In my main.cpp file I have the following the functions:</p>
<pre><code>extern "C" {
  int addint(int a) {
    return a + 1;
  }

  const char* hello() {
    return "hello";
  }
}
</code></pre>
<p>and in my pywrapper.py file I have the following:</p>
<pre><code>def addint(number):
    result = lib.addint(c_int(number))
    return result

def saystr():
    result = lib.hello()
    return result

if __name__ == "__main__":
    print('addint: ', addint(5))
    print('saystr: ', saystr())
</code></pre>
<p>My output is:</p>
<pre><code>addint:  6
saystr:  -354261249
</code></pre>
<p>So the first function works fine. But what can I do for the second function to return 'hello'??</p>
</div>
<div class="post-text" itemprop="text">
<p>As the <a href="https://docs.python.org/3/library/ctypes.html#return-types" rel="nofollow noreferrer">ctypes documentation shows</a>, you need to explicitly tell it how to handle the return type:</p>
<pre><code>def saystr():
    lib.hello.restype = c_char_p # pointer to a string
    result = lib.hello()
    return result
</code></pre>
<p>otherwise the default return type is <code>int</code> (and the returned pointer is converted to an integer address).</p>
</div>
<span class="comment-copy">amazing, that worked, gracias :)</span>
