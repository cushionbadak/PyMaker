<div class="post-text" itemprop="text">
<p>I have two forms in my views, when I hit on save it's not working properly, when I want to display on my templates what I saved not showing as expected. </p>
<p>Here's what I have:</p>
<p><strong>views.py</strong></p>
<pre><code>def index(request):
    queryset = Personinfo.objects.all()
    queryset2 = Person.objects.all()
    qs = chain(queryset,queryset2)
    form = personform(request.POST or None)
    form2 = personinfoform(request.POST or None)
    context = {
    "queryset": queryset,
    "queryset2": queryset2,
    "qs": qs,
    "form2":form2,
    "form":form,
    }
    form2_valid = form2.is_valid()
    form_valid = form.is_valid()
    if form2_valid and form_valid:
        a = form2.save()
        b= form.save(commit=False)
        b.ForeignkeytoA = a
        b.save()
    return render(request, "index.html", context)
</code></pre>
<p><strong>index.html</strong></p>
<pre><code>&lt;form method="POST" action=""&gt;{% csrf_token %}
{{form2.as_p}}
{{form.as_p}}
&lt;input type="submit" value="Save!" /&gt;
&lt;/form&gt;

            &lt;table &gt;
             &lt;tr&gt;
            &lt;th&gt;Name&lt;/th&gt;
            &lt;th&gt;Address&lt;/th&gt;
            &lt;th&gt;Number&lt;/th&gt;
            &lt;th&gt;Hobbies&lt;/th&gt;

            &lt;/tr&gt;
            {% for item in qs  %}
            &lt;tr&gt; 
                &lt;td&gt;{{ item.name }}&lt;/td&gt; #form2
                &lt;td&gt;{{ item.address }}&lt;/td&gt; #form1
                &lt;td&gt;{{ item.phone_number }}&lt;/td&gt; #form1
                &lt;td&gt;{{ item.address }}&lt;/td&gt; #form1
            &lt;/tr&gt;
            {% endfor %}
            &lt;/table&gt;
</code></pre>
<p><strong>models.py</strong></p>
<pre><code>class Personinfo(models.Model):
    name = models.CharField(max_length=128)

    def __str__(self):
        return self.name





class Person(models.Model):
    person = models.ForeignKey(Personinfo)
    address = models.TextField()
    phone_number = models.CharField(max_length=128)
    hobbies =models.CharField(max_length=128)

    def __str__(self):
        return self.person
</code></pre>
<p>my output:</p>
<p><a href="https://i.stack.imgur.com/BEZwq.png" rel="nofollow noreferrer"><img alt="Click here" src="https://i.stack.imgur.com/BEZwq.png"/></a></p>
<p>As you can see my table isn't showing my items as expected. 
Is there a possible way to show every item in the same row?</p>
</div>
<div class="post-text" itemprop="text">
<p>Two errors are present. If I understand right, you're expecting the data from a <code>Person</code> instance and the data from its accompanying <code>PersonInfo</code> instance to print on the same line. However, you're trying to achieve this by using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>chain</code></a>, which is not joining the querysets based on their relationship, but rather concatenating them blindly.</p>
<p>So if <code>Person.objects.all()</code> returns a queryset which contains the following data</p>
<pre><code>id  person   address   phone_number    hobbies   
1      1         a         a             a
2      2         5         5             5
</code></pre>
<p>and <code>PersonInfo.objects.all()</code> returns a queryset which contains</p>
<pre><code>id   Name 
1    aaa      
2    aa       
</code></pre>
<p><code>chain</code> combines them as</p>
<pre><code>id  person  name   address   phone_number    hobbies
1           aaa
2           aa
1      1             a           a             a
2      2             5           5             5
</code></pre>
<p>Instead, you should utilize the relationship between the models. If you pass only the <code>Person</code> queryset as context to your template, you could write</p>
<pre><code>{% for p in persons %}
    &lt;tr&gt;
        &lt;td&gt;{{ p.person.name }}&lt;/td&gt;
        &lt;td&gt;{{ p.address }}&lt;/td&gt;
        &lt;td&gt;{{ p.phone_number }}&lt;/td&gt;
        &lt;td&gt;{{ p.hobbies }}&lt;/td&gt;
    &lt;/tr&gt;
{% endfor %}
</code></pre>
<p>--</p>
<p>Additionally you are setting the <code>Personinfo</code> related instance incorrectly when you save your forms. By using <code>b.ForeignkeytoA</code> you are creating a new variable as a member of the object <code>b</code> called <code>ForeignkeytoA</code>, which has nothing to do with the <code>Personinfo</code> relationship. To set the related <code>Personinfo</code>, you should reference the name of the foreign key field, <code>person</code>. To correct this, that segment should be</p>
<pre><code># ...
b = form.save(commit = False)
b.person = a
b.save()
# ...
</code></pre>
</div>
<span class="comment-copy"><code>&lt;td&gt;{{p.person.name}} &lt;/td&gt;</code> not working for me, I tried passing only <code>Person</code> as you suggested, everything works ok except by <code>name</code></span>
<span class="comment-copy">Try <code>&lt;td&gt;{{ p.person.id }}&lt;/td&gt;</code> and see if it prints an id.</span>
<span class="comment-copy">Also, is <code>b.ForeignkeytoA = a</code> the way it's written in your code? This will set a new variable called <code>ForeignkeytoA</code> under the python object <code>b</code>, not set the <code>person</code> foreign key to the object <code>a</code>. It should be <code>b.person = a</code>.</span>
<span class="comment-copy">nope, not even printin id</span>
<span class="comment-copy">What about the <code>ForeignkeytoA</code>?</span>
