<div class="post-text" itemprop="text">
<p>I have a directed, weighted network stored in a <strong>txt</strong> file as a list of 3 elements:</p>
<pre><code>node1 node2 weight
node1 node3 weight
...
</code></pre>
<p>So for example the triplet:</p>
<pre><code>1 10 50
</code></pre>
<p>means that I got an edge between node 1 and node 10 with weight 50.</p>
<p>Can someone please explain in detail how can I import this  into graph tool to perform a community detection analysis using the SBM.</p>
<p>Thanks a lot.</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume that for a weighted graph you wish to use PropertyMaps (<a href="https://graph-tool.skewed.de/static/doc/quickstart.html#sec-property-maps" rel="nofollow noreferrer">https://graph-tool.skewed.de/static/doc/quickstart.html#sec-property-maps</a>)?</p>
<p>To import the file, you'll want to use file objects (<a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html</a>). </p>
<p>All together, the code you need is as follows:</p>
<pre><code>#imports the graph-tools library
from graph_tool.all import *

#opens your file in mode "read"
f = open("your_file.txt","r")
#splits each line into a list of integers
lines = [[int(n) for n in x.split()] for x in f.readlines()]
#closes the file
f.close()

#makes the graph
g = Graph()
#adds enough vertices (the "1 + " is for position 0)
g.add_vertex(1 + max([l[0] for l in lines] + [l[1] for l in lines]))

#makes a "property map" to weight the edges
property_map = g.new_edge_property("int")
#for each line
for line in lines:
    #make a new edge
    g.add_edge(g.vertex(line[0]),g.vertex(line[1]))
    #weight it
    property_map[g.edge(g.vertex(line[0]),g.vertex(line[1]))] = line[2]
</code></pre>
</div>
