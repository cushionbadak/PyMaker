<div class="post-text" itemprop="text">
<p>What's the best practice to provide the description of a test script in python?</p>
<p>Obviously I can put the comments below the test case, but wanted to know if there's any standard practice (any methods I should write) to provide the description of the test case (detailed information on what the test case is supposed to do)?</p>
<p>Is this how you would put the test description?:</p>
<pre><code>Class TestFoo:
    def testfoo1():
    """
    test description:
    step1:
    step2: 
    """
</code></pre>
<p>Any suggestions/references would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>In the <code>unittest</code> framework, you have the
<a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.shortDescription" rel="nofollow noreferrer"><code>shortDecription</code></a> method:  </p>
<blockquote>
<p><strong><code>shortDescription()</code></strong></p>
<p>Returns a description of the test, or <code>None</code> if no description has been provided. The default implementation of this method returns the first line of the test methodâ€™s docstring, if available.</p>
</blockquote>
<p>So, in fact, using the method docstring is a fine place.  You may have to inherit from <code>TestCase</code> in your class declaration for the runner to work like that, though.  </p>
<p>For <strong>best practice</strong>: name the test case (class) and the test methods in a <strong>concise but useful</strong> fashion which is sufficient for developers to have a high level idea of where something is going wrong,  should that particular test fail.  A prerequisite to this is each test method should only be testing one thing, rather than asserting on a whole bunch of different things.  </p>
<p>With sensible test names, usually a docstring with "detailed information on what the test case is supposed to do" would not be necessary.  If you have existing large tests which check many things, you may want to split them up into a bunch of smaller tests which each assert on one and only one individual thing.  </p>
</div>
<div class="post-text" itemprop="text">
<p>The test method docstring is the standard place to put that information If you are using python's <code>unittest</code> module.  <code>unittest</code> will use that docstring to format output, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way would be for the name of the class to be descriptive enough for a description not to be needed.</p>
<p>Barring that, the docstring is the best approach.</p>
</div>
<span class="comment-copy">I've never noticed <code>shortDescription</code> before.  The docs there are a little light -- Specifically, it seems like it would need some way to know which test to write the description for...</span>
<span class="comment-copy">That's likely just mutable state on the instance (a <code>TestCase</code> is a class after all)</span>
<span class="comment-copy">Oh, never mind, the <a href="https://hg.python.org/cpython/file/2.7/Lib/unittest/case.py#l253" rel="nofollow noreferrer">implementation</a> of the base method relies on some state-based implementation details to figure out what to return.  I'm not really sure how a user should override that method in a useful way...</span>
<span class="comment-copy">I'm not suggesting to override the method.  I'm substantiating that <b>you can use the docstring, because of this method</b> defined on <code>TestCase</code>.</span>
<span class="comment-copy">Yeah -- I wasn't trying to attack your answer or anything.  I'm more thinking out loud about how that seems to be a silly method to expose in the unit-test API.  I think that your answer is fine as-is (better than mine in that it points out that only the <i>first</i> line is actually used for formatting output).</span>
