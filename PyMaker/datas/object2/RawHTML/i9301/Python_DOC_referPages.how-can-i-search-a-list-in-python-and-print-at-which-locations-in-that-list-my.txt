<div class="post-text" itemprop="text">
<p>I am generating a list of 12 random numbers:</p>
<pre><code>nums = []    
for num in range(12):
    nums.append(random.randint(1,20))
</code></pre>
<p>I would then like to search 'nums' for a specific number, say '12' and use an if statement to print if it showed up and where in the list. Something like this:</p>
<pre><code>if len(newNums) == 0:
    print('No, 12 is not a part of this integer list')
elif len(newNums) &lt; 2:
    print('Yes, 12 is in the list at index', newNums[0])
else:
    print('Yes, 12 is in the list at indices', newNums)
</code></pre>
<p>In this case, 'newNums' is the list where I have the locations listed of where '12' is inside of the 'nums' list.</p>
<p>I tried a few different things with a for loop that didn't get me anywhere and then I found something on here that looked like this:</p>
<pre><code>newNums = (i for i,x in enumerate(nums) if x == 12)    
</code></pre>
<p>However, when I try to print that it does not do what I am looking for. I must have misunderstood its purpose. My understanding of the <code>enumerate</code> function is that it provides the index of where the value is located, followed by the value; ex: <code>[0,1]</code>, <code>[1,8]</code>, <code>[2,6]</code> etc. I am reading that code to mean: give me the i value in a pair of <code>[i,x]</code> inside the list (<code>nums</code>) if the <code>x == 12</code>.</p>
<p>I am new to python within the past couple of weeks, so any advice is welcome. I may just be misunderstanding how the code works.</p>
<p>Thank you for your time. </p>
</div>
<div class="post-text" itemprop="text">
<p>The only problem here is that <code>newNums</code>:</p>
<pre><code>newNums = (i for i,x in enumerate(nums) if x == 12) # a generator
</code></pre>
<p>is a <strong>generator</strong>, and as far as I know, you cannot call <code>len(..)</code> on a genrator and the printing does not show it elements, but only that it is an enumerator.</p>
<p>You can use <strong>list comprehension</strong> to construct a list. All you have to do is replace the round brackets (<code>(..)</code>) with square ones (<code>[..]</code>):</p>
<pre><code>newNums = [i for i,x in enumerate(nums) if x == 12] # a list
#         ^                                       ^
</code></pre>
<p>Finally a small note:</p>
<blockquote>
<p>My understanding of the <code>enumerate</code> function is that it provides the index of where the value is located, followed by the value; ex: <code>[0,1]</code>, <code>[1,8]</code>, <code>[2,6]</code> etc.</p>
</blockquote>
<p>You are correct, except that your syntax seems to suggest that it emits <em>lists</em>, it emits <em>tuples</em>, so <code>(0,1)</code>, <code>(1,8)</code>,... but this is in this context a minor detail.</p>
</div>
<div class="post-text" itemprop="text">
<p>the small problem with your code is that </p>
<pre><code>newNums = (i for i,x in enumerate(nums) if x == 12)  
</code></pre>
<p>is a <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">generator</a> (e.g. <code>len</code> will not work on it). what you want is a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list (comprehension)</a>:</p>
<pre><code>newNums = [i for i,x in enumerate(nums) if x == 12]
</code></pre>
<p>with this the rest of your code works as you expect it.</p>
</div>
