<div class="post-text" itemprop="text">
<p>I have two arrays <code>A</code> and <code>B</code> which contain a series of numbers.</p>
<p>My goal is to create a dataframe having the following structure:
for each element of B I want to correspond all the values of A. </p>
<p>For example:
if <code>A = [0,2,5]</code> and <code>B=[4,9,8]</code> I want to obtain the following pairs: <code>0-4,0-9,0-8</code>, <code>2-4,2-9,2-8</code> and <code>5-4,5-9,5-8</code>.</p>
<p>I was able to achieve my goal in the following way:</p>
<pre><code>import pandas as pd
import numpy as np

a, b = 1, 10
c, d = -10, -1
step = 0.5

A = np.arange(a,b,1)+step
B = np.arange(c,d,1)

df = pd.DataFrame() 
for j in B:
    for i in A:
        name = 'H'+str(int(np.abs(i)))+str(int(np.abs(j)))
        dic = {'XXX':[i],'YYY':[j],'ZZZ':name}
        df = pd.concat([df,pd.DataFrame(dic)],ignore_index=True)
</code></pre>
<p>Column <code>ZZZ</code> but be calculated as shown above.</p>
<p>The code I wrote works fine but it is pretty slow when I increase the values of <code>a,b,c,d</code>.</p>
<p>Is there a more elegant way to achieve my goal? I would like to avoid nested for loops and it should be a more efficient way than mine obviously.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create all combination by <a href="https://docs.python.org/3.6/library/itertools.html#itertools.product" rel="nofollow noreferrer">itertools.product</a>.</p>
<p>For column <code>XXX</code> convert <code>float</code> to <code>int</code> and then to <code>str</code> for remove decimal, fom column <code>YYY</code> get absolute value and cast to <code>str</code>:</p>
<pre><code>from  itertools import product
df = pd.DataFrame(list(product(B, A)), columns=['YYY','XXX'])
#swap columns
df = df[['XXX','YYY']]
df['ZZZ'] = 'H' + df.XXX.astype(int).astype(str) + df.YYY.abs().astype(str)

print (df.head(20))
    XXX  YYY   ZZZ
0   1.5  -10  H110
1   2.5  -10  H210
2   3.5  -10  H310
3   4.5  -10  H410
4   5.5  -10  H510
5   6.5  -10  H610
6   7.5  -10  H710
7   8.5  -10  H810
8   9.5  -10  H910
9   1.5   -9   H19
10  2.5   -9   H29
11  3.5   -9   H39
12  4.5   -9   H49
13  5.5   -9   H59
14  6.5   -9   H69
15  7.5   -9   H79
16  8.5   -9   H89
17  9.5   -9   H99
18  1.5   -8   H18
19  2.5   -8   H28
</code></pre>
</div>
<span class="comment-copy">you can combine lists using  <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> as in zip(A,B) or you could concat columns in pandas directly df.XXX.astype(str) + df.YYY.astype(str) to create the new column.</span>
<span class="comment-copy">mmm I never heard about it... I  will take a look right now</span>
<span class="comment-copy">ok great thanks :) could you please fix the also the index sot that it goes from 0 to the end?</span>
<span class="comment-copy">Yes, please see edit.</span>
<span class="comment-copy">I found better solution, please check edit answer.</span>
