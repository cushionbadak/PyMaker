<div class="post-text" itemprop="text">
<p>I am running some code in which I am expecting user to insert fraction which will be computed and stored as a float value in a variable.</p>
<p>I am using the following command. It works fine when I give input such as <code>4.5</code>:</p>
<pre><code>a = float(input('&gt;&gt; '))
</code></pre>
<p>But something like <code>3/4</code> gives me an error. I know what the problem is, I would like to know if there is an alternative way to input a fraction which gets solved and stored as a float in a variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>As noted by Josh Lee, wrap it in a <code>Fraction</code> (<code>from fractions import Fraction</code>) and then cast it to <code>float</code>:</p>
<pre><code>r = float(Fraction(input("&gt;&gt;&gt; ")))
</code></pre>
<p>this accept floats and strings that have a form of:</p>
<pre><code>[sign] numerator ['/' denominator] 
</code></pre>
<p><a href="https://docs.python.org/3/library/fractions.html#fractions.Fraction" rel="nofollow noreferrer">as noted in its docs</a>.</p>
<p>You should of course wrap it in a <code>try-except</code> to guard against unexpected input that doesn't abide to that form.</p>
</div>
<span class="comment-copy"><code>'3/4'</code> isn't the representation of a floating point number. If you are allowing the user to enter fractions, you will need to parse them yourself.</span>
<span class="comment-copy">read the input as a string then apply the solution described in the answer to this question: <a href="http://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string" title="evaluating a mathematical expression in a string">stackoverflow.com/questions/2371436/â€¦</a></span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/fractions.html" rel="nofollow noreferrer">docs.python.org/3/library/fractions.html</a></span>
<span class="comment-copy">It may be worth <i>not</i> converting the resulting Fraction to float if the application can deal with that, as a Fraction doesn't lose precision and stays maximally precise as long as the operations done on it leave it as a Fraction.</span>
