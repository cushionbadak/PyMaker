<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15147751/how-to-check-if-all-items-in-a-list-are-there-in-another-list">How to check if all items in a list are there in another list?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<pre><code>l = ["a", "b", "c", "d", "e"]
if "a" in l and "b" in l and "c" in l and "d" in l:
   pass
</code></pre>
<p>What's a shorter way of writing this if statement?</p>
<p>Tried:</p>
<pre><code>if ("a" and "b" and "c" and "d") in l:
    pass
</code></pre>
<p>But this seems to be incorrect. What's the correct way?
Python 3</p>
</div>
<div class="post-text" itemprop="text">
<p>An idea might be to use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all(..)</code></a> and a generator:</p>
<pre><code>if all(x in l for x in ['a','b','c','d']):
    pass
</code></pre>
<p>All takes as input any kind of iterable and checks that for all elements the iterable emits, <code>bool(..)</code> is <code>True</code>.</p>
<p>Now within <code>all</code> we use a generator. A generator works like:</p>
<pre><code>&lt;expr&gt; for &lt;var&gt; in &lt;other-iterable&gt;
</code></pre>
<p>(with no braces)</p>
<p>It thus takes every element in the <code>&lt;other-iterable&gt;</code> and calls the <code>&lt;expr&gt;</code> on it. In this case the <code>&lt;expr&gt;</code> is <code>x in l</code>, and <code>x</code> is the <code>&lt;var&gt;</code>:</p>
<pre><code>#         &lt;var&gt;
#           |
 x in l for x in ['a','b','c','d']
#\----/          \---------------/
#&lt;expr&gt;           &lt;other-iterable&gt;
</code></pre>
<p>Further explanation of <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generators</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use sets:</p>
<pre><code>l = { 'a', 'b', 'c', 'd', 'e' }

if { 'a', 'b', 'c', 'd' } &lt;= l:
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = "abcde"
if all(c in l for c in "abcd"):
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A different approach is using sets:</p>
<pre><code>l = ['a', 'b', 'c', 'd', 'e']
if set(['a', 'b', 'c', 'd']).issubset(set(l)):
  pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may also use <code>set</code> objects for such case:</p>
<pre><code>l = ["a", "b", "c", "d", "e"]
if  set(l) &gt;= set(("a", "b", "c", "d")):
    print('pass')
</code></pre>
<blockquote>
<p><strong>set &gt;= other</strong></p>
<p>Test whether every element in other is in the set.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html?highlight=set#set.issuperset" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=set#set.issuperset</a></p>
</div>
<span class="comment-copy">Heard about <code>all</code> and <code>any</code>?</span>
<span class="comment-copy">Note that the second snippet evaluates to <code>if "a" in l:</code>.</span>
<span class="comment-copy">Very clean explanation</span>
<span class="comment-copy">@MoinuddinQuadri: thank you for your kind comment :).</span>
<span class="comment-copy">I think the OP is giving an example here with one-char strings, evidently in real life one probably checks against multi-char strings, but good answer nevertheless.</span>
