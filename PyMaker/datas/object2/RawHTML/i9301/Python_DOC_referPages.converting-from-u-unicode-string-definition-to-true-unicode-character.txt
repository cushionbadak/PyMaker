<div class="post-text" itemprop="text">
<p>I have a long list of unicode definitions and description mappings that use the <code>'U+1F49A'</code> coding convention.</p>
<p>In python (3), how can I read these in as true unicode characters? (i.e. <code>'\u00001F49A'</code> or 'üíö'</p>
<p>I've tried array slicing and composition eg <code>'\U000{}'.format('1F49A')</code> but end up with <code>SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-4: truncated \UXXXXXXXX escape</code> as the initial string instantiation craps out on a partial unicode declaration.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/functions.html#int" rel="noreferrer"><code>int()</code></a> to parse the number, and <a href="https://docs.python.org/3/library/functions.html#chr" rel="noreferrer"><code>chr()</code></a> to convert the number to a single-character string. </p>
<p>For example:</p>
<pre><code>In [8]: chr(0x1f49a)
Out[8]: 'üíö'

In [9]: s='U+1F49A'

In [10]: chr(int(s[2:], 16))
Out[10]: 'üíö'
</code></pre>
<p>If you want to convert all of the <code>U+xxxx</code> instances in a larger string, you can use the same <code>chr()</code>/<code>int()</code> pattern in the 2nd arg of <a href="https://docs.python.org/3.6/library/re.html#re.sub" rel="noreferrer"><code>re.sub()</code></a>:</p>
<pre><code>In [14]: s = 'U+1F49A -vs- U+2764'

In [15]: re.sub(r'U\+([0-9a-fA-F]+)', lambda m: chr(int(m.group(1),16)), s)
Out[15]: 'üíö -vs- ‚ù§'
</code></pre>
</div>
<span class="comment-copy">The answer below is what you want, but if you're curious about how to use the <code>\U</code> representation, look for <code>unicode_escape</code>. <a href="https://stackoverflow.com/search?q=python+unicode_escape">stackoverflow.com/search?q=python+unicode_escape</a></span>
<span class="comment-copy">Do these commands need to be in a Jupyter notebook? <code>chr()</code> and <code>unichr()</code> fail at the command-line: <code>chr(0x1f49a)</code> gives <code>ValueError: chr() arg not in range(256)</code> and <code>unichr(0x1f49a)</code> gives <code>ValueError: unichr() arg not in range(0x10000) (narrow Python build)</code>.</span>
<span class="comment-copy">@mmorin - No, Jupyter is not required, but Python3 is.  Those commands work well in Python3 on Ubuntu, at least.</span>
<span class="comment-copy">Yes, I confirm that these work in Python3.</span>
