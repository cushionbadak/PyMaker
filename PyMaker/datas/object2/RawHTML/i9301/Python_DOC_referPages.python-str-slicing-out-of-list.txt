<div class="post-text" itemprop="text">
<p>I would write a little function to check if a string in a list, and when yes, the string should remove out of the List.</p>
<p>this is my code</p>
<pre><code>def str_clearer(L):
    for i in L:
        if i == str:
            L.remove(i)
        else:
            pass
    print(L)
    return L

L = [1, 2, 3, "hallo", "4", 3.3]

str_clearer(L)

assert str_clearer(L) == [1, 2, 3, 3.3]
</code></pre>
<p>but it make nothing with the List.<br/>
if i make it so that it make a new List with all int or float, he make same nothing.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python built-in function, <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">isinstance()</a>, can be used here.</p>
<p>The following approach is similar to yours.</p>
<pre><code>In[0]: def remove_str(your_list):
           new_list = []    
           for element in your_list:
           if not(isinstance(element, str)):
               new_list.append(element)
           return new_list

In[1]: remove_str([1, 2, 3, "hallo", "4", 3.3])
Out[1]: [1, 2, 3, 3.3]
</code></pre>
<p>This can be much shorter, though.</p>
<pre><code>In[2]: mylist = [1, 2, 3, "hallo", "4", 3.3]
In[3]: result = [x for x in mylist if not(isinstance(x, str))]
In[4]: print(result)
Out[4]: [1, 2, 3, 3.3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Type checking can be done with <code>isinstance</code>. This could actually be done pretty elegantly in a list comprehension:</p>
<pre><code>result = [x for x in L if not isinstance(x, str)]
</code></pre>
</div>
