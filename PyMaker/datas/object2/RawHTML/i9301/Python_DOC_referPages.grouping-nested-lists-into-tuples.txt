<div class="post-text" itemprop="text">
<p>I am trying to group nested lists in python (I already sorted the data).  The final output should be comma separated tuples, one per line</p>
<p>Current nested list:  </p>
<pre><code>[['A123', '2012-01-01', 'estrogen'],
 ['A123', '2012-01-01', 'ibuprofen '],
 ['A123', '2014-01-01', 'oxaliplatin'],
 ['A123', '2014-01-01', 'penicilin']]
</code></pre>
<p>Desired outcome (comma separated tuple)</p>
<pre><code>[(('A123', '2012-01-01', 'estrogen'),
  ('A123', '2012-01-01', 'ibuprofen ')),
 (('A123', '2014-01-01', 'oxaliplatin'),
  ('A123', '2014-01-01', 'penicilin'))]
</code></pre>
<p>I understand the sorting but don't quite know how to group the lists together into one.  The final step I assume is the convert into tuples.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you already sorted your data, you can convert the lists to tuples and create a tuple (couple) of tuples 2 by 2:</p>
<pre><code>l = [['A123', '2012-01-01', 'estrogen'],['A123', '2012-01-01', 'ibuprofen'],['A123', '2014-01-01', 'oxaliplatin'],
 ['A123', '2014-01-01', 'penicilin']]

result = [(tuple(l[i]),tuple(l[i+1])) for i in range(0,len(l),2)]
print(result)
</code></pre>
<p>variant using <code>zip</code> and sliced sub-lists:</p>
<pre><code>result = [(tuple(u),tuple(v)) for u,v in zip(l[::2],l[1::2])]
</code></pre>
<p>you don't control the way the data is printed unless you use <code>pprint</code> module.</p>
<pre><code>import pprint
pprint.pprint(result,width = 50)
</code></pre>
<p>Since I chose a width of 50, I get one element per line (it depends on the data, but it seems that it provides exactly the output mentioned in your question, horizontal alignment included)</p>
<pre><code>[(('A123', '2012-01-01', 'estrogen'),
  ('A123', '2012-01-01', 'ibuprofen')),
 (('A123', '2014-01-01', 'oxaliplatin'),
  ('A123', '2014-01-01', 'penicilin'))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This looks like a case for <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>&gt;&gt;&gt; data = [['A123', '2012-01-01', 'estrogen'],
...  ['A123', '2012-01-01', 'ibuprofen '],
...  ['A123', '2014-01-01', 'oxaliplatin'],
...  ['A123', '2014-01-01', 'penicilin']]
&gt;&gt;&gt; [tuple(grp) for key, grp in itertools.groupby(data, key=lambda x: x[:2])]
[(['A123', '2012-01-01', 'estrogen'], ['A123', '2012-01-01', 'ibuprofen ']),
 (['A123', '2014-01-01', 'oxaliplatin'], ['A123', '2014-01-01', 'penicilin'])]
</code></pre>
<p>This groups all items that have the same first two elements (<code>key=lambda x: x[:2]</code>) together in one tuple. Note that the data has to be sorted by the key for this to work, but according to you this is already the case.</p>
</div>
<span class="comment-copy">There is no such thing as a comma-separated tuple. Whether it is one per line or not, depends on how you print it. Please clarify if you want to construct a list of tuples, a tuple of tuples, or something else. in particular, it is not clear why the first two and the last two tuples are grouped. Are they grouped by date?</span>
<span class="comment-copy">quote from OP question: "I already sorted the data". So you don't need to know that information.</span>
<span class="comment-copy">Thank you this worked perfectly!</span>
<span class="comment-copy">okay but do you want to group 2 by 2 or by code/date? Because if it's the latter, the other answer is the one.</span>
<span class="comment-copy">The nested lists are already sorted by code and date:  list.sort(sampledata, key=itemgetter(0,1,2))  The output needed is for each pair to be returned as a comma- separated tuple, one per line.  If that makes sense.  Your code works and is adjustable if let's say it needed to be triplets or single.</span>
<span class="comment-copy">I'm relieved. You didn't mentionned that you had a fixed number of items in each group. If it's not the case, my answer isn't valid (at least the first part, and you need <code>itertools.groupby</code>. I've got the finger on the button to delete it...</span>
