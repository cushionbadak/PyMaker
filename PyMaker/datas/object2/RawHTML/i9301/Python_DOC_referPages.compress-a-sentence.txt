<div class="post-text" itemprop="text">
<p>i'm working on a compress and decompress code of the user's sentence.
I have made this code:</p>
<pre><code>import gzip
sentence = input(b"Please enter a sentence ")
varNameIn = (b"sentence")
varNameOut = gzip.compress(varNameIn)
print(varNameOut)
varNameDecon = gzip.decompress(varNameOut)
print(varNameDecon)
</code></pre>
<p>But something seems wrong. It works with the out put of: </p>
<p>b'Please enter a sentence 'gn h 
b'\x1f\x8b\x08\x00Z\xedxX\x02\xff+N\xcd+I\xcdKN\x05\x00\xd5Nf\x9d\x08\x00\x00\x00'
b'sentence'</p>
<p>Why does it show b'sentence' instead of the user's sentence and when it's asking for a sentence why does it have b'  ' instead of Please enter...
I got told the b'   ' will make the sentence compress in the future step of the code.
Any help?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><code>b"sentence"</code> does not turn <code>sentence</code> into a <code>bytes</code> value. You need to <a href="https://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer"><strong>encode</strong> a string to bytes</a> instead. Pick a codec that suits your use case; here encoding to UTF-8 probably is best as it can encode all of Unicode, with a reasonable small size for western text:</p>
<pre><code>sentence = input("Please enter a sentence ")
varNameIn = sentence.encode('utf8')
varNameOut = gzip.compress(varNameIn)
</code></pre>
<p>Note that <code>input()</code> always returns a <code>str</code> type, giving it a <code>bytes</code> prompt won't change that.</p>
<p>Note that when you decompress the data again, you'll still have a <code>bytes</code> object. If you want to turn that back into a <code>str</code> object, <a href="https://docs.python.org/3/library/stdtypes.html#bytes.decode" rel="nofollow noreferrer"><em>decode</em> from <code>bytes</code> to <code>str</code></a> using the same encoding:</p>
<pre><code>varNameDecon = gzip.decompress(varNameOut)
print(varNameDecon.decode('utf-8'))
</code></pre>
</div>
<span class="comment-copy">Er, because you defined <code>varNameIn</code> as <code>b"sentence"</code>.</span>
<span class="comment-copy">@DanielRoseman: my  guess: that's an attempt to turn the <code>sentence</code> value into a <code>bytes</code> object.</span>
<span class="comment-copy">Thanks you it works!</span>
