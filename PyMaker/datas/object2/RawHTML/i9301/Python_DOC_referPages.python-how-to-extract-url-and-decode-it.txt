<div class="post-text" itemprop="text">
<p>I am getting response from a API as follows-</p>
<pre><code>def update_csv(products):
print type(products)
print products
[{u'image_url': u'https://external.xx.fbcdn.net/safe_image.php?d=AQBHdbRqB7F6aMKM&amp;url=http%3A%2F%2Fgigya.jp%2Fdpa%2F1.png&amp;cfs=1&amp;_nc_hash=AQDx7P52g0NYBB-3', u'id': u'1411912028843607', u'retailer_id': u'product-1'}, {u'image_url': u'https://external.xx.fbcdn.net/safe_image.php?d=AQDyc-Yyic5QLOqH&amp;url=http%3A%2F%2Fgigya.jp%2Fdpa%2F0.png&amp;cfs=1&amp;_nc_hash=AQDhmhPJxFZEpMFX', u'id': u'993388404100117', u'retailer_id': u'product-0'}, {u'image_url': u'https://external.xx.fbcdn.net/safe_image.php?d=AQB69V2cgASUIci1&amp;url=http%3A%2F%2Fgigya.jp%2Fdpa%2F100.png&amp;cfs=1&amp;_nc_hash=AQAk3eZ4vqWYbOW4', u'id': u'1347112758661660', u'retailer_id': u'product-100'}, {u'image_url': u'https://external.xx.fbcdn.net/safe_image.php?d=AQBM75VZTNuxqaoq&amp;url=http%3A%2F%2Fgigya.jp%2Fdpa%2F10.png&amp;cfs=1&amp;_nc_hash=AQAUdkc6II5eu47D', u'id': u'1358784964179738', u'retailer_id': u'product-10'}]
</code></pre>
<p>I want to extract all the urls from this which contains <code>.png</code> and decode that url</p>
<p>As you can this in the above url it contains <code>http%3A%2F%2Fgigya.jp%2Fdpa%2F1.png</code>
I want to extract all these url and decode and save as a list. </p>
<p><strong>What I tried</strong></p>
<pre><code>image_urls = ""
for product in products:
        image_urls += urllib.unquote(product['image_url'].split("=")[2])+"\n"
</code></pre>
<p>The problem with this is it doesn't remove "&amp;cfs" form the url</p>
<pre><code>http://gigya.jp/dpa/1.png&amp;cfs
http://gigya.jp/dpa/0.png&amp;cfs
http://gigya.jp/dpa/100.png&amp;cfs
http://gigya.jp/dpa/10.png&amp;cfs
</code></pre>
<p>Sorry I new to python. Is there any efficient way to do this?
Please help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>urlparse</code>, which makes this a lot simpler:</p>
<pre><code>&gt;&gt;&gt; import urlparse
&gt;&gt;&gt; for i in products:
...    print(urlparse.parse_qs(urlparse.urlparse(i['image_url']).query)['url'][0])
...
http://gigya.jp/dpa/1.png
http://gigya.jp/dpa/0.png
http://gigya.jp/dpa/100.png
http://gigya.jp/dpa/10.png
</code></pre>
<p>For Python 3, use <code>urllib.parse</code>:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse, parse_qs
&gt;&gt;&gt; for i in products:
...    print(parse_qs(urlparse(i['image_url']).query)['url'][0])
...
http://gigya.jp/dpa/1.png
http://gigya.jp/dpa/0.png
http://gigya.jp/dpa/100.png
http://gigya.jp/dpa/10.png
</code></pre>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on their own. A good way to demonstrate this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the <a href="http://stackoverflow.com/tour">FAQ</a> and <a href="http://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">@TigerhawkT3 I added what I tired. Please don't downvote. Please check again.</span>
<span class="comment-copy">You can split again on <code>&amp;</code>.</span>
<span class="comment-copy">What is this key 'url'?</span>
<span class="comment-copy">It is part of what <code>parse_qs</code> returns. See the <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer">docs</a> for more.</span>
<span class="comment-copy">If I decode 'image url' I found it like below <a href="https://external.xx.fbcdn.net/safe_image.php?d=AQB69V2cgASUIci1&amp;url=http%3A%2F%2Fgigya.jp%2Fdpa%2F100.png&amp;cfs=1&amp;_nc_hash=AQAk3eZ4vqWYbOW4" rel="nofollow noreferrer">external.xx.fbcdn.net/â€¦</a></span>
<span class="comment-copy">Can I use regex like &amp;url.*(.png)</span>
<span class="comment-copy">Why do you want to use a regular expression when there is a perfectly valid standard library method that works?</span>
