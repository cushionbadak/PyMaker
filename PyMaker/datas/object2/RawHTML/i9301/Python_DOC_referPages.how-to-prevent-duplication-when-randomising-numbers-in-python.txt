<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/33091880/how-to-create-a-random-array-from-a-list-each-value-in-the-array-is-not-duplica">how to create a random array from a list, each value in the array is not duplicate in python</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<pre class="lang-py prettyprint-override"><code>from random import randint
def random_number():
    return randint (1,10)

rn1 = random_number()

rn2 = random_number()
while rn2 == rn1:

    rn2 = random_number()

rn3 = random_number()
while rn3 == rn1 or rn3 == rn2:

    rn3 = random_number() 

rn4 = random_number()
while rn4 == rn1 or rn4 == rn2 or rn4 == rn3: 

    rn4 = random_number()

rn5 = random_number()
while rn5 == rn1 or rn5 == rn2 or rn5 == rn3 or rn5 == rn4: 

    rn5 = random_number()
</code></pre>
<p>I've struggled with this small piece of code for a while now. I'm trying to get the program to randomly generate 5 numbers. The problem was that the program could generate the same number twice. I'm trying to make sure that there is no duplicate numbers within the 5 generated with an algorithm. However, the code still prints duplicates. Any ideas what I'm doing wrong??</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from random import randint

def random_numbers():
    return randint(1,10)

def main():
    my_list = []
    for i in range(10):
        value = random_numbers()
        if value in my_list:
            continue
        else:
            my_list.append(value)
    print(my_list)

main()  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the easiest way to do this is to use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample</code></a>:</p>
<pre><code>import random

numbers = random.sample(range(1, 11), 5)
</code></pre>
<p>This does <em>sampling without replacement</em>, which seems to be what you want.</p>
<p>Note that <code>random.sample(pop, k)</code> selects a sample of size <code>k</code> from a population <code>pop</code> (list or otherwise), and the bounds of <code>range(a, b)</code> are <code>a &lt;= x &lt; b</code>, while the bounds of <code>randint</code> are <code>a &lt;= x &lt;= b</code> - so you need to add 1 to the end of your <code>range</code> call.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could just use built-in numpy functionality:</p>
<pre><code>import numpy as np
np.random.choice(10,5)
</code></pre>
<p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html" rel="nofollow noreferrer">Documentation here</a>. Note that <code>choice</code> has a <code>replacement</code> keyword as well to switch between sampling with and without replacement, like so:</p>
<pre><code>np.random.choice(10, 5, replace=False)
</code></pre>
<p>Note that all of these rely on <code>np.arange</code> to build the array to sample from, so that you'd sample from <code>[0,1,...,9]</code> - if you want to sample from 1-10 you can do:</p>
<pre><code>np.random.choice(range(1,11), 5, replace=False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can add each random number to a list and then check in that list to see if it has already been made:</p>
<pre><code>numbers = []
while len(numbers) &lt; 5:
    n = random_number()
    if n not in numbers:
        numbers += [n]
</code></pre>
<p>Note that while this method is simple to understand it is not very efficient when you are wanting a large subset of the original set of numbers, for example trying to get 1000000 numbers from the set of numbers 1 to 1000000 would take a long time due to trying numbers already added to the list.</p>
</div>
<span class="comment-copy">@squeamishossifrage, they want 5 numbers below 10, not 1 to 5 in a random order.</span>
<span class="comment-copy">Worth noting you can cleanly do this with <code>random.sample</code>, something like <code>random.sample(range(1, 10), 5)</code>.</span>
<span class="comment-copy">You could shuffle the numbers 1 to 10 and then deal 5 off the top.</span>
<span class="comment-copy">Shuffle an array of unique items and then pop out your samples one by one.</span>
<span class="comment-copy">any reason for down voting?</span>
