<div class="post-text" itemprop="text">
<p>It's been a while since I've used regex, and I feel like this should be simple to figure out. </p>
<p>I have a web page full of links that looks like the string_to_match in the below code. I want to grab just the numbers in the links, like number "58" in the string_to_match. For the life of me I can't figure it out. </p>
<pre><code>import re
string_to_match = '&lt;a href="/ncf/teams/roster?teamId=58"&gt;Roster&lt;/a&gt;'
re.findall('&lt;a href="/ncf/teams/roster?teamId=(/d+)"&gt;Roster&lt;/a&gt;',string_to_match)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using regular expressions, you can use a combination of HTML parsing (using <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer"><code>BeautifulSoup</code></a> parser) to locate the desired link and extract the <code>href</code> attribute value and URL parsing, which in this case, we'll use regular expressions for:</p>
<pre><code>import re
from bs4 import BeautifulSoup

data = """
&lt;body&gt;
    &lt;a href="/ncf/teams/roster?teamId=58"&gt;Roster&lt;/a&gt;
&lt;/body&gt;
"""

soup = BeautifulSoup(data, "html.parser")
link = soup.find("a", text="Roster")["href"]

print(re.search(r"teamId=(\d+)", link).group(1))
</code></pre>
<p>Prints <code>58</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend using <code>BeautifulSoup</code> or <code>lxml</code>, it's worth the learning curve.</p>
<p>...But if you still want to use regexp</p>
<pre><code>re.findall('href="[^"]*teamId=(\d+)',string_to_match)
</code></pre>
</div>
<span class="comment-copy">Why, why, why do people keep trying to <a href="http://stackoverflow.com/a/1732454/364696">parse HTML with regular expressions?!?</a> Use <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">an HTML parser</a>. It can find the tags you care about with the expected attributes, pull it out for you, and actually <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">parse the URL</a> to get the <code>GET</code> parameters, which will be correct and largely self-documenting code. Even if the regex might be faster, unmaintainable and possibly wrong code is not an improvement.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">RegEx match open tags except XHTML self-contained tags</a></span>
