<div class="post-text" itemprop="text">
<p>Here is my data set:</p>
<pre><code>isects = [[3],[2,3],[1,3],[0,1,2],[]]
</code></pre>
<p>Here are some visualizations of the patterns in my data set:</p>
<p><a href="https://i.stack.imgur.com/jVPPy.png" rel="nofollow noreferrer"><img alt="polygons intersecting" src="https://i.stack.imgur.com/jVPPy.png"/></a></p>
<p><a href="https://i.stack.imgur.com/O4rw5.png" rel="nofollow noreferrer"><img alt="clique graph" src="https://i.stack.imgur.com/O4rw5.png"/></a></p>
<p>Each element is a list of the indexes that element intersects.  So, the element @0 only intersects element 3.  While the element @3 intersects element 0, 1, and 2.</p>
<p>I want to create a list of the intersections between these elements.  I want greater numbers of intersections at the end of the list.  For my sample set, the solution would look like this:</p>
<pre><code>[[0,3], [1,2], [1,3], [2,3], [1,2,3]]
</code></pre>
<p><em>That is, 0 &amp; 3 intersect, as do 1 &amp; 2, 1 &amp; 3, and 2 &amp; 3.  Finally, 1 &amp; 2 &amp; 3 all intersect each other.</em></p>
<p><strong><em>As pointed out in the comments below, it is possible that 1 &amp; 2 &amp; 3 do not all intersect if they were actually polygons, but for my purposes I am assuming all listed elements can and will intersect each other.</em></strong> </p>
<p>What is the fastest way to get this data only using the <code>isects</code> list?</p>
</div>
<div class="post-text" itemprop="text">
<p>As far I understand, isects list does not provide full information about intersection cases - it is not possible to know about triple intersection from it. So geometric approach is needed to get what intersections do occur.</p>
<p><strong>Edit</strong> If you are not interested in real geometric intersections, then you have to solve graph problem: you have adjacency list, and want to get... what? It seems that all possible <a href="https://en.wikipedia.org/wiki/Clique_problem" rel="nofollow noreferrer">K-size cliques with K=2 and more</a>.</p>
<p>Wiki example:</p>
<p><a href="https://i.stack.imgur.com/08Qh0.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/08Qh0.png"/></a></p>
<blockquote>
<p>The graph shown has one maximum clique, the triangle {1,2,5}, and four
  more maximal cliques, the pairs {2,3}, {3,4}, {4,5}, and {4,6}.</p>
</blockquote>
<p><a href="https://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm" rel="nofollow noreferrer">Bron-Kerbosch algorithm</a> is relatively effective for searching for all cliques (while complexity is O(3^(n/3)). It is usually used to find maximal clique but can find all size ones.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would create a table intersections with the isect data.</p>
<pre><code>  0 1 2 3 4
0 -     x
1   - x x
2   x - x
3 x x x -
4         -
</code></pre>
<p>Each 'x' represents an intersection.  Intersections are sets, so [0,1] and [1,0] are the same.  Thus we get the unique list of intersections: [0,3], [1,2], [1,3], [2,3].</p>
<p>And if you want to consider when other polygons overlap the same one a common intersection, then look at '-'s which are surrounded by 'x's.  In this case, you'd have just one (at 2x2), thus you'd have [1,2,3] as an overlapping intersection.  <em>However, I agree with everyone else here, the data in isect does not guarantee there is an overlap.</em></p>
</div>
<span class="comment-copy">Do you already have an algorithm in mind?  If so, please add it to the question.</span>
<span class="comment-copy">I'm not sure you have enough data in <code>isects</code> to determine if 1, 2, and 3 intersect</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> with <code>isects</code> and add the indices to the sub-lists.</span>
<span class="comment-copy">@PatrickHaugh you are right -- in my diagram poly2 could be shifted to the right and prevent the intersection of all 3 polygons.  However, I am assuming they do intersect for my purposes.</span>
<span class="comment-copy">first: calculate bounding Boxes, check overlapping of BBs, than:  0.BB.MIN_X&lt;1.vertex[N]&lt;0.BB.MAX_X and 0.BB.MIN_Y&lt;1.vertex[N]&lt;0.BB.MAX_Y........so you are checking, "is vertex 1 of polygone 1 in the BB of polygone 3"...... you can do that with isects, but you need more data</span>
<span class="comment-copy">thank you, but i am trying to solve the problem only using the data in the <code>isects</code> array</span>
<span class="comment-copy">Just edited my answer</span>
<span class="comment-copy">I've updated the post.  You are right, and I am sorry, the polygons were included to help visualize the dataset and ended up causing confusion.  I want to find all combinations of intersections in my dataset.  Unfamiliar with the 'clique problem` as formally presented there, but yes, that does seem correct.</span>
<span class="comment-copy">now to find a fast implementation ...</span>
<span class="comment-copy">Bron-Kerbosch algorithm (not fast, but better than exhaustive brute-force)</span>
