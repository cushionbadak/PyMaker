<div class="post-text" itemprop="text">
<p>in the code below, i assign <code>b</code> to function <code>f</code> in an <code>Enum</code>. when i iterate through that enum, however, <code>b</code> does not appear, although i can still access it via <code>E.b</code>. does anyone know what's going on here? is this just a bug? i'm using python 3.5.1.</p>
<pre><code>In [42]: from enum import Enum
In [43]: def f(): pass
In [44]: class E(Enum):
    ...:     a = 4
    ...:     b = f
    ...:     c = 5
    ...:
In [45]: list(E)
Out[45]: [&lt;E.a: 4&gt;, &lt;E.c: 5&gt;]
In [46]: E.b
Out[46]: &lt;function __main__.f&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Descriptors don't become members of the enumeration. If you give your enum behavior, those methods live in the same namespace as the values themselves, so this is the only way for enum to tell them apart.</p>
<ul>
<li><a href="https://docs.python.org/3/library/enum.html#allowed-members-and-attributes-of-enumerations">Allowed members and attributes of enumerationsÂ¶</a></li>
<li><a href="https://hg.python.org/cpython/file/tip/Lib/enum.py#l93"><code>_EnumDict.__setitem__</code></a></li>
</ul>
</div>
<span class="comment-copy">Do you have a use-case for using functions/methods as Enum members?</span>
<span class="comment-copy">basically, i was using names to map to callbacks. i could have just used a dictionary, but figured an Enum would do the trick. i have since learned otherwise.</span>
