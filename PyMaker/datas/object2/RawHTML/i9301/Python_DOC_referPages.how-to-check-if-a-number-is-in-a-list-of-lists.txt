<div class="post-text" itemprop="text">
<p>so I've been having trouble checking if the number 0 is in a group of lists within another list. These rows make up the maze for a pacman type game I'm making so the point of this is to check if pacman has eaten all of the coins.</p>
<p>Here's my code:</p>
<pre><code>row1 =[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]
row2 =[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
row3 =[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1]
row4 =[1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1]
row5 =[1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1]
row6 =[1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1]
row7 =[1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1]
row8 =[1,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,0,1]
row9 =[1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,1]
row10=[3,3,3,1,0,1,1,1,0,1,0,1,1,1,0,1,3,3,3]
row11=[3,3,3,1,0,1,0,0,0,0,0,0,0,1,0,1,3,3,3]
row12=[3,3,3,1,0,1,0,1,4,4,4,1,0,1,0,1,3,3,3]
row13=[1,1,1,1,0,1,0,1,3,3,3,1,0,1,0,1,1,1,1]
row14=[3,3,3,3,0,0,0,1,3,3,3,1,0,0,0,3,3,3,3]
row15=[1,1,1,1,0,1,0,1,5,5,5,1,0,1,0,1,1,1,1]
row16=[3,3,3,1,0,1,0,3,3,3,3,3,0,1,0,1,3,3,3]
row17=[3,3,3,1,0,1,0,1,1,1,1,1,0,1,0,1,3,3,3]
row18=[3,3,3,1,0,1,0,1,1,1,1,1,0,1,0,1,3,3,3]
row19=[1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1]
row20=[1,0,0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,1]
row21=[1,0,1,1,0,0,0,0,0,3,0,0,0,0,0,1,1,0,1]
row22=[1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1]
row23=[1,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,1]
row24=[1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1]
row25=[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
row26=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]

maze = [row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,
        row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,
        row23,row24,row25,row26]
</code></pre>
<p>So I have tried <code>if 0 not in maze:</code> But the if statement will execute whether 0 is in (maze) or not. </p>
<p>Any help would be appreciated, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You'll have to loop through each list in <code>maze</code> and check whether there is a 0 or not:</p>
<pre><code>if not any(0 in i for i in maze):
    ...
</code></pre>
<p>The great thing about the <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> function is that it stops looping through <code>maze</code> once it finds a 0.</p>
</div>
<div class="post-text" itemprop="text">
<p>With your first attempt, your only testing for <code>0</code> in the top-level list. Of course, the top-level list only has lists, thus, your test fails.</p>
<p>You must iterate through each <em>sublist</em> in <code>maze</code>. You could use a manually for loop, which is a valid option:</p>
<pre><code>def has_zero(maze):
    for sublist in maze:
        for el in sublist:
            if el == 0:
                return True
    return False
</code></pre>
<p>but Python provides a better way with the <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> function(which is basically a better implementation of the above function):</p>
<blockquote>
<p>Return True if any element of the iterable is true. If the iterable is empty, return False[...].</p>
</blockquote>
<p>But you must also use the <code>not</code> operator(know as <code>!</code> in other languages) to <em>negate</em> the possibly return true value of <code>any()</code>. Thus, the full solution would be:</p>
<pre><code>not any(el == 0 for sublist in maze for el in sublist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>any</code> was already mentioned but you could also flatten your lists (for example using <a href="https://docs.python.org/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a>) and check if the item is contained:</p>
<pre><code>from itertools import chain

if 0 in chain.from_iterable(lst):
    # do something
</code></pre>
<p>Like <code>any</code> this stops as soon as one is found. Just to mention it because it's something that is often overlooked: generators and iterators (like <code>chain</code>) generally support the <code>in</code> operator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Loop through the sublist. Also use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> </p>
<pre><code>if any(0 in sublist for sublist in maze)
</code></pre>
<p>It will check if there is any 0 in the list</p>
</div>
<div class="post-text" itemprop="text">
<h1>as long as i understand your problem you can use the following code:</h1>
<pre><code>a = [1,1,1]
b = [1,0,1]
c = [0,1,2]
d = [a,b,c]

for i in d:    
  if i.__contains__(0):
    print("yes") 
</code></pre>
</div>
<span class="comment-copy"><code>not any(el == 0 for sublist in maze for el in sublist)</code></span>
<span class="comment-copy">@DYZ Seems pretty clear to me. The number is <code>0</code>.</span>
<span class="comment-copy">@leaf The title says 'number', not 0. Not clear to me.</span>
<span class="comment-copy">@DYZ But if you read the first sentence it literally says "0"</span>
<span class="comment-copy">@DYZ But he said in the first part of the question - <i>so I've been having trouble checking if <b>the number 0</b>"</i>.</span>
<span class="comment-copy">You should almost never use <code>__contains__</code> or anything else enclosed in double underscores in your code.</span>
<span class="comment-copy">@DYZ Alright, I'll delete my previous comment.</span>
<span class="comment-copy">thanks for the advice i'm all new here will check it.</span>
<span class="comment-copy">You can explain a bit more about what the code does.</span>
<span class="comment-copy">@DYZ Do you have any source to backup your claim? I was always under the impression one shouldn't use functions/attributes/methods starting with a <b>single underscore</b>.</span>
