<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/40204951/python-3-type-hints-for-performance-optimizations">Python 3 type hints for performance optimizations</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Can Python function annotations and type hints (PEP 3107 and PEP 484) cause some run-time effects?</p>
<p>Could it made the code faster? Or shrink the usage of memory? Or otherwise it would make code more slow?</p>
</div>
<div class="post-text" itemprop="text">
<p>Type hints and annotations do provide attributes (see <a href="https://docs.python.org/3/library/typing.html" rel="noreferrer"><code>typing.get_type_hints</code></a>) that can be passed by 3rd party tools but native CPython will not type check these at runtime, so this should not effect the code performance significantly in the same way that comments don't. I ran some tests with <code>timeit</code> and removing type hints had a negligible effect (not distinguishable from the background <em>noise</em>) on the run time, so any concerns about performance would certainly be a severe case of premature optimization.</p>
<p>From <a href="https://www.python.org/dev/peps/pep-0484/#non-goals" rel="noreferrer">PEP 484</a>:</p>
<blockquote>
<p>While the proposed typing module will contain some building blocks for
  runtime type checking -- in particular the get_type_hints() function
  -- third party packages would have to be developed to implement specific runtime type checking functionality, for example using
  decorators or metaclasses. Using type hints for performance
  optimizations is left as an exercise for the reader.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://www.python.org/dev/peps/pep-0484/#non-goals" rel="nofollow noreferrer">non-goals in the PEP 484 documentation</a>, type checking and performance optimization is dependent on third-party tools or left to the programmer.</p>
<p>So in short: no, they will not cause any run-time effects, unless you explicitly make use of them.</p>
</div>
<span class="comment-copy">I think that type hints and annotations are merely syntactic sugar to be passed by 3rd party tools, implying they should not effect the code performance significantly in the same way that comments don't</span>
<span class="comment-copy">Quote from the linked duplicate: "(C)Python currently (and for the foreseeable future) just discards any hints you offer and continues executing dynamically as it always does."</span>
<span class="comment-copy">I think my question is a same</span>
