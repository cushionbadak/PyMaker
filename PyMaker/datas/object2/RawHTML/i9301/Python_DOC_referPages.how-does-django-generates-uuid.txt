<div class="post-text" itemprop="text">
<p>I have a model in Django that uses uuid this way:</p>
<pre><code>uuid = models.CharField(max_length=100, default=uuid.uuid1)
</code></pre>
<p>The thing is, when I generated 2 objects, one after the other, I got this:</p>
<pre><code>933e35c4-df1c-11e6-8a53-ace01055799e
</code></pre>
<p>And then:</p>
<pre><code>933e35c5-df1c-11e6-8a53-ace01055799e
</code></pre>
<p>From what I know every uuid is generated at random, but the probability of collision is very low, how are they exactly generated when I get these 2 uuid that are almost the same? (it differs only in the last number of the first block) and how probable is this?. Is there a more secure way of doing this? </p>
<p>The thing is that I have a set of clients that each get a unique uuid by e-mail, if they could just change one character and get to another client's uuid that would be a problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're using <code>uuid.uuid1</code>, which as the docs state:</p>
<blockquote>
<p>Generate a UUID from a host ID, sequence number, and the current time.</p>
</blockquote>
<p>You should be using <code>uuid.uuid4</code>, which generates a <em>random</em> uuid.</p>
</div>
<div class="post-text" itemprop="text">
<p>It uses <code>uuid.uuid1</code> to do it (that's your default value). See the <a href="https://docs.python.org/3/library/uuid.html#uuid.uuid1" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Generate a UUID from a host ID, sequence number, and the current time.
  If node is not given, getnode() is used to obtain the hardware
  address. If clock_seq is given, it is used as the sequence number;
  otherwise a random 14-bit sequence number is chosen.</p>
</blockquote>
<p>There are other algorithms, maybe <code>uuid4</code> is what you are looking for.</p>
</div>
<span class="comment-copy">It even says how it's generated in the first line of code you've quoted: Using the <code>uuid.uuid1</code> function whose code is present in your Python standard library..</span>
