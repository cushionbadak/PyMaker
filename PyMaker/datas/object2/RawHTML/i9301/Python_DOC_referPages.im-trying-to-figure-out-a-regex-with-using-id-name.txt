<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; p = re.compile(r'(((x)|y)(?(2)y|x))+')
&gt;&gt;&gt; p.search('yxxyyx')
&lt;_sre.SRE_Match object; span=(2, 4), match='xy'&gt;
</code></pre>
<p>My questions:
why it matches only 'xy'? and does \2 always refer to "x" within the group (.......)+??</p>
<p>edited: Thank you for all your answers! I found a helpful website to <a href="https://www.debuggex.com/" rel="nofollow noreferrer">make regex visualize.</a></p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Questions:</strong></p>
<ol>
<li>Why does it matches only 'xy'? </li>
<li>Does \2 always refer to "x" within the group (.......)+??</li>
</ol>
<p><strong>Answer Question 2 first:</strong></p>
<p>In this regex, you are using:</p>
<pre><code>(?(id/name)yes-pattern|no-pattern)
</code></pre>
<blockquote>
<p>Will try to match with yes-pattern if the group with given id or name exists, and with no-pattern if it doesnâ€™t. no-pattern is optional and can be omitted. For example, (&lt;)?(\w+@\w+(?:.\w+)+)(?(1)&gt;) is a poor email matching pattern, which will match with '' as well as 'user@host.com', but not with '
</p></blockquote>
<p>In the regex given <code>((x)|y)</code>, there is only one group before the question <code>(?(2)y|x))+</code> that asks whether the second group has matched.  Since there is only one group the conditional will always be false, and thus will always try to match <code>x</code></p>
<p><strong>Answer Question 1:</strong></p>
<p>Yes, since there is only one group, the conditional will always match <code>x</code>, and the entire regex only match <code>xyx</code></p>
<p>(<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">DOCS</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>I find <a href="http://regexr.com/" rel="nofollow noreferrer">this website</a> a good resource for learning about and testing different regex patterns.</p>
</div>
<span class="comment-copy">Perhaps this will be of some assistance: <a href="https://regex101.com/r/Op1dyv/1" rel="nofollow noreferrer">regex101.com/r/Op1dyv/1</a></span>
<span class="comment-copy">Your regex doesn't have <code>\2</code>.</span>
<span class="comment-copy">@wwii <code>(?(2)y|x)</code> is checking the second capturing group, I assume that's what he's referring to.</span>
