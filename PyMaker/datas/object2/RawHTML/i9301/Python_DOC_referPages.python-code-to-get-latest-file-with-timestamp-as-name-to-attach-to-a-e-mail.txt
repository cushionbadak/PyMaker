<div class="post-text" itemprop="text">
<ol>
<li><p>I have a BASH script that takes a photo with a webcam.</p>
<pre><code>#!/bin/bash

# datum (in swedish) = date

datum=$(date +'%Y-%m-%d-%H:%M')

fswebcam -r --no-banner /home/pi/webcam/$datum.jpg
</code></pre></li>
<li><p>I have a python code to take run the BASH script when recieve a signal from a motion detector and also call a module wich send the e-mail </p>
<pre><code>import RPi.GPIO as GPIO
import time
import gray_camera
import python_security_mail

GPIO.setmode(GPIO.BCM)
GPIO.setup(23, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

while True:
    if(GPIO.input (23)== 1):
        print('discovered!!!')
        gray_camera.camera()
    time.sleep(1)
    python_security_mail.mail()
    time.sleep(1.5)
GPIO.cleanup()
</code></pre></li>
</ol>
<p>And the mail code:</p>
<pre><code>    import os
    import smtplib
    import userpass
    from email.mime.text import MIMEText
    from email.mime.image import MIMEImage
    from email.mime.multipart import MIMEMultipart

    def SendMail(ImgFileName):
        img_data = open('/home/pi/solstol.png', 'rb').read() 
        msg = MIMEMultipart()
        msg['Subject'] = 'subject'
        msg['From'] = userpass.fromaddr
        msg['To'] = userpass.toaddr
    fromaddr = userpass.fromaddr
    toaddr = userpass.toaddr

    text = MIMEText("test")
    msg.attach(text)
    image = MIMEImage(img_data, name=os.path.basename('/home/pi/solstol.png'))  
    msg.attach(image)

    s = smtplib.SMTP('smtp.gmail.com', 587)
    s.ehlo()
    s.starttls()
    s.ehlo()
    s.login(fromaddr, userpass.password)
    s.sendmail(fromaddr, toaddr, msg.as_string())
    s.quit()
</code></pre>
<p>I have just learned how to attach a file to a e-mail.
The code works so far. But I would like to get the latest photo taken and attach to the email.</p>
<p>I am still just a beginner in Python. The code in here I have mostly copied from various tutorials and changed a little bit to work for me. I have no deep understanding in all of this. In some few parts I may perhaps have intemediate knowledge.
I have no idea how to write the code to get python to find the file (photo with jpg format) I want and attach it to the mail.</p>
<p>So I am very glad if there is someone who can guide me how to fill in the missing part. </p>
<hr/>
<p>I put in wrong code for the mail function. I got a little bit better result with this one:</p>
<pre><code>#!/usr/bin/python

import userpass
import smtplib
from email.MIMEMultipart import MIMEMultipart
from email.MIMEBase import MIMEBase
from email.MIMEText import MIMEText
from email import Encoders
import os

def send_a_picture():
    gmail_user = userpass.fromaddr
    gmail_pwd = userpass.password

    def mail(to, subject, text, attach):
       msg = MIMEMultipart()

       msg['From'] = gmail_user
       msg['To'] = userpass.toaddr
       msg['Subject'] = subject

       msg.attach(MIMEText(text))

       part = MIMEBase('application', 'octet-stream')
       part.set_payload(open(attach, 'rb').read())
       Encoders.encode_base64(part)
       part.add_header('Content-Disposition',
               'attachment; filename="%s"' % os.path.basename(attach))
       msg.attach(part)

       mailServer = smtplib.SMTP("smtp.gmail.com", 587)
       mailServer.ehlo()
       mailServer.starttls()
       mailServer.ehlo()
       mailServer.login(gmail_user, gmail_pwd)
       mailServer.sendmail(gmail_user, to, msg.as_string())
       mailServer.close()

    mail(userpass.toaddr,
       "One step further",
       "Hello. Thanks for the link. I am a bit closer now.",
       "solstol.png")


send_a_picture()  
</code></pre>
<p>Edit.</p>
<p>Hello. I have now added seconds to the filename. If there is no picture in the folder when running glob.glob("/home/pi/<em>.jgp") I got: 
Traceback (most recent call last):
  File "", line 1, in 
    last_photo_taken = glob.glob("/home/pi/</em>.jpg")[-1]
IndexError: list index out of range.  </p>
<p>When I take a picture I got a return ('/home/pi/2017-01-16-23:39:46.jpg'). 
If I then takes another picture the return still is '/home/pi/2017-01-16-23:39:46.jpg'. 
If I restart the shell I got the next picture as return. Thank you for your help  today. I will write more tomorow.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's an example of some code to list all files and folders in a specific folder:</p>
<pre><code>import os
files = os.listdir("myfolder")
</code></pre>
<p>And here's one way to take that list and filter for names that match a specific regular expression (I've used filenames of the format YYYYMMDD-HHMM.jpg, but you can change that):</p>
<pre><code>import re
jpgre = re.compile(r"\d{8}-\d{4}\.jpg")
jpgs = [s for s in files if jpgre.match(s)]
</code></pre>
<p>Now we need to sort by date/time because the list is in arbitrary order. Note that all my filenames are of the form YYYYMMDD-HHMM.jpg, so we can easily sort it by date/time, as follows:</p>
<pre><code>jpgs.sort()
</code></pre>
<p>And finally, the newest JPG filename is the last in the list:</p>
<pre><code>file = jpgs[-1]
</code></pre>
<p>Hope this gets you started. Note that I've assumed that you may have other JPGs in the same folder so a listing of *.jpg might yield undesirable files,  and that's why I gave a general solution using regular expression matching. If you don't have other JPGs then you could use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a>("folder/*.jpg").</p>
</div>
<div class="post-text" itemprop="text">
<p>the format you chose <code>'%Y-%m-%d-%H:%M'</code> has the nice property to have the same sort order alphabetically or date-wise.</p>
<p>So since your files are located in <code>/home/pi/webcam</code> and have the jpg extension, you could compute the last photo like this:</p>
<pre><code>import glob
last_photo_taken = glob.glob("/home/pi/webcam/*.jpg")[-1]
</code></pre>
<p>Attach the <code>last_photo_taken</code> file to your e-mail.</p>
<p>Note: photos taken at the same minute will overlap: last photo overwrites the previous one. You should consider adding seconds to the file name.</p>
<p>Note: even if your files weren't conveniently named with the date, you could sort the images by modification date and take the last one:</p>
<pre><code>last_photo_taken = sorted(glob.glob("/home/pi/webcam/*.jpg"),key=os.path.getmtime)[-1]
</code></pre>
</div>
<span class="comment-copy">I was sorry to reject your edit to my answer, even if it was very kind, and I appreciate it, but as a SO rule, you cannot edit answers to add "thanks". Just accept whichever answer you find the best. Don't worry, it's not a problem. Everyone has to learn.</span>
<span class="comment-copy">Thank you all for fast reply. I will test this as soon as I can. Have not som much spare time (two small children at home). But I will tell how I have progress with this.</span>
<span class="comment-copy">Hello. The first part in your answer was no problem. I got all files in the folder listed (os.listdir('myfolder')). The next one I could not get working for me. I have to study how to use it. I have no idea what "(r"\d{8}-\d{4}\." does. So I dont know whats cause error in my case. But I will not give up.</span>
<span class="comment-copy">For your format, you can use r"\d{4}-\d{2}-\d{2}-\d{2}:\d{2}\.jpg". Note that \d{4} means four digits, \d{2} means two digits etc. You're matching filenames of the form 4 digits, hyphen, 2 digits, hyphen, 2 digits, hyphen, 2 digits, colon, 2 digits, and finally .jpg.</span>
<span class="comment-copy">I will test this tonight. I added seconds to the filename.</span>
<span class="comment-copy">:-) It works :-) It was the format that I had to change. Thank you very much for excellent explanation.</span>
<span class="comment-copy">Thank you for fast reply.</span>
<span class="comment-copy">Hi. The "last_photo_taken" variable do find a file. But no the last one. If I take more pictures it still return the same result I got when I run the code the first time. Is there some kind of update/refresh I have to do to get the last photo taken? The secon code did not work for me at all. I have to study more how to use it.</span>
<span class="comment-copy">I have edited my post; Can you be more specific on "it doesn't take the last one?". And about the second solution (which is better IMHO) what's the problem? I have tested that and it works fine here.</span>
<span class="comment-copy">Hello. I have now added seconds to the filename. I use 2.7 IDLE shell to try the code. when running glob.glob("/home/pi/*.jgp") I got: Traceback (most recent call last):   File "&lt;pyshell#1&gt;", line 1, in &lt;module&gt;     last_photo_taken = glob.glob("/home/pi/*.jpg")[-1] IndexError: list index out of range.</span>
<span class="comment-copy">You are missing the webcam dir part. Therevare no jpg files where you are scanning...</span>
