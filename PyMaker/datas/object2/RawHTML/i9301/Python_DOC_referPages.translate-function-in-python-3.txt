<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23175809/str-translate-gives-typeerror-translate-takes-one-argument-2-given-worked-i">str.translate gives TypeError - Translate takes one argument (2 given), worked in Python 2</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am using Python 3 and I want to translate my file names to have no numbers. The translate function doesn't seem to work in Python 3. How can I translate the file names to have no numbers?   </p>
<p>This is the block of code that doesn't work:</p>
<pre><code>file_name = "123hello.jpg"
file_name.translate(None, "0123456789")
</code></pre>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="noreferrer"><code>str.translate</code></a> is still there, the interface has just changed a little:</p>
<pre><code>&gt;&gt;&gt; table = str.maketrans(dict.fromkeys('0123456789'))
&gt;&gt;&gt; '123hello.jpg'.translate(table)
'hello.jpg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm using ver3.6.1 and translate did not work. What did work is the <em>strip() method</em> as follows:</p>
<pre><code>file_name = 123hello.jpg

file_name.strip('123')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>.translate</code> takes a translation table:</p>
<blockquote>
<p>Return a copy of the string S in which each character has been
  mapped
      through the given translation table. The table must implement
      lookup/indexing via <strong>getitem</strong>, for instance a dictionary or list,
      mapping Unicode ordinals to Unicode ordinals, strings, or None. If
      this operation raises LookupError, the character is left untouched.
      Characters mapped to None are deleted.</p>
</blockquote>
<p>So you can do something like:</p>
<pre><code>&gt;&gt;&gt; file_name = "123hello.jpg"
&gt;&gt;&gt; file_name.translate({ord(c):'' for c in "1234567890"})
'hello.jpg'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Only remove numbers from left</h1>
<p><code>new_name = str.lstrip('1234567890')</code></p>
<h1>Only remove numbers from right</h1>
<p><code>new_name = str.rstrip('123456780')</code></p>
<h1>Remove number from left and right</h1>
<p><code>new_name = str.strip('1234567890')</code></p>
<h1>Remove all numbers</h1>
<p><code>new_name = str.translate(str.maketrans('', '', '1234567890'))</code></p>
</div>
<span class="comment-copy">are you sure you can define <code>file_name = 123hello.jpg</code> ? O_o</span>
<span class="comment-copy">A little bit confusing but it works. THANKS YOU</span>
<span class="comment-copy">This doesn't cover remove '1', '2', or '3' from the string, but removing the substring '123'.  Not exactly what was asked, although it does "fix" the example code.</span>
<span class="comment-copy">@boatcoder The <code>strip</code> function interprets '123' as the set of chars to remove, so it will remove '1', '2' or '3' from the string</span>
<span class="comment-copy">@nonagon <code>&gt;&gt;&gt; "1 apple, 2 oranges, 3 pigs".strip("123")</code> produces <code>' apple, 2 oranges, 3 pigs'</code> This does NOT work for a general case.  He wants to remove numbers from the filename all over, not only at the begining.  This solves the one example case but not the problem.</span>
<span class="comment-copy">@boatcoder Aha sorry I misunderstood your comment - I agree!</span>
