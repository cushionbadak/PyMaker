<div class="post-text" itemprop="text">
<p>My goal is to achieve this:</p>
<p>Input:</p>
<pre class="lang-none prettyprint-override"><code>Hi, Are you happy? I am "extremely happy" today
</code></pre>
<p>Output:</p>
<pre><code>['Hi,', 'Are', 'you', 'happy?', 'I', 'am', 'extremely happy', 'today']
</code></pre>
<p>Is there a straight-forward approach to achieve this? I tried using another pattern I found:</p>
<pre><code>pattern = r'"([A-Za-z0-9_\./\\-]*)"'
</code></pre>
<p>I assume this should find the text inside the quote, but did not manage to find a way to nail it.</p>
<p><strong>EDIT</strong></p>
<p>I also tried splitting using the next regex, but this obviously only gives me spaces separation which cuts my text inside quotes to segments:</p>
<pre><code>            tokens = [token for token in re.split(r"(\W)", text) if token.strip()]
</code></pre>
<p>Is there a way to combine the pattern I supplied with this for loop such that it return an array that each word in a different cell unless it is quoted and then whats inside the quotes gets its own cell?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer"><code>shlex.split</code></a> instead of regex</p>
<pre><code>import shlex

print(shlex.split('input: Hi, Are you happy? I am "extremely happy" today'))
</code></pre>
<p>result:</p>
<pre><code>['input:', 'Hi,', 'Are', 'you', 'happy?', 'I', 'am', 'extremely happy', 'today']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another fun way to do it: First split on quotes, then split every non-quoted part (every other):</p>
<pre><code>str = 'I am "super happy" today'

ss = str.split('"')

res = sum(([w] if i%2 else w.split() for i,w in enumerate(ss)), [])
</code></pre>
<p>To remove punctuation, you need to replace split() on last line with a proper regexp, but I think you had that covered already.</p>
<p>This will not remove punctuation inside quotes of course, and you cannot nest quotes. So you cannot be "super "super" happy" :)</p>
</div>
<span class="comment-copy">What if there is <code>'I am"extremely happy" today"'</code>?</span>
<span class="comment-copy">I have prior knowledge it will not happen</span>
<span class="comment-copy">Slight simplification to the code. I noticed that a string starting with a quoted part creates an empty first item in ss, so quoted parts are always odd items in ss, regardless of where quotes appear.</span>
