<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/991350/counting-repeated-characters-in-a-string-in-python">Counting repeated characters in a string in Python</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I have an array of number which I changed to string</p>
<pre><code>a="1423"
astr=str(a)
aspl=list(astr)
</code></pre>
<p>I should have ['1', '4', '2', '3'].
I wanted to count how many 1~9 there are in the array so that 
1 = 1 time(s), 2 = 1 time(s) ... 5 = 0 time(s), 6 = 0 time(s)...</p>
<p>My solution to this was</p>
<pre><code>r=0
for r &gt; 11:
    b = aspl.count(r)
</code></pre>
<p>but since it is a string, this method does not work.
I tried using </p>
<pre><code>    b = aspl.count('r')
</code></pre>
<p>then as you might have guessed, it's only looking for r.
So how would you go about this?</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>the python <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer"><code>collections</code></a> module offers a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> for just that:</p>
<pre><code>from collections import Counter

a = '032143487214093120'

count = Counter(a)
print(count)
# Counter({'2': 3, '4': 3, '1': 3, '0': 3, '3': 3, '9': 1, '7': 1, '8': 1})
</code></pre>
<p>and then print with</p>
<pre><code>for digit in (str(i) for i in range(10)):
    print('{}: {}x'.format(digit, count[digit]))

# 0: 3x
# 1: 3x
# ...
# 5: 0x
# ...
</code></pre>
<p>if you insist that also the digits that do not occur in your string appear in the counter, you can initialize the counter will all digits set to zero:</p>
<pre><code>count = Counter({str(i): 0 for i in range(10)})
print(count)  # Counter({'2': 0, '4': 0, '9': 0, '0': 0, '8': 0, '3': 0,
              #          '1': 0, '7': 0, '5': 0, '6': 0})
count.update(a)
print(count)  # Counter({'2': 3, '4': 3, '0': 3, '3': 3, '1': 3, '9': 1, 
              #          '8': 1, '7': 1, '5': 0, '6': 0})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in range(10):
    print s.count(str(i))
</code></pre>
<p>I guess...</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's another possible solution which generates the results as a series of tuples:</p>
<pre><code>s = '1423'
numbers = list(range(1, 10))
print(list((i, s.count(str(i))) for i in numbers))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[(1, 1), (2, 1), (3, 1), (4, 1), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0)]
</code></pre>
</div>
<span class="comment-copy">OP wants to print the numbers not available in the string as 0 which won't be present in case of your solution</span>
<span class="comment-copy">@MoinuddinQuadri the default count in a <code>Counter</code> is zero.  <code>print(Counter()['a'])</code> prints <code>0</code></span>
<span class="comment-copy">Yes that is True, but the <i>number</i> key won't be available in the dict until and unless you make a explicit call to it.</span>
<span class="comment-copy">@MoinuddinQuadri you are correct. i also accounted for that case now.</span>
