<div class="post-text" itemprop="text">
<p>I have a list of dictionaries. Each has a key, and a 3 value list.  Each value is an ADC reading, I have a function to take and spit out the converted value. </p>
<p>I would like to take each value and convert it with this function, however.</p>
<pre><code>for value in my_list[0].itervalues():
  print value
</code></pre>
<p>This prints the values as a list, but I want to take each value individually and pass it off to the function to be converted</p>
<pre><code> for value in my_list:
      print value
</code></pre>
<p>This prints out each dictionary </p>
<p>I am not sure how to nest these loops all together to take the individual values and append the current list of dictionaries with the converted values or generate a separate list of dictionaries altogether.  Appending would be more efficient I suppose.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map</code></a> function to apply your function on all value items :</p>
<pre><code>for value in my_list[0].itervalues():
  print map(your_func,value)
</code></pre>
<p>And if you want to create a new dictionary you can do it within a dict comprehension :</p>
<pre><code>new_dict={k:map(your_func,val) for k, val in your_dict.iteritems()}
</code></pre>
<p>Also you may note that this depends on your function signature and your values for example if your function accept more than 1 argument you can not use <code>map</code> here.</p>
<p>Example :</p>
<pre><code>&gt;&gt;&gt; def my_func(a,b):
...   return a+b
... 
&gt;&gt;&gt; l=[(1,2),(3,4),(5,6)]
&gt;&gt;&gt; map(my_func,l)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: my_func() takes exactly 2 arguments (1 given)
</code></pre>
<p>In that case you can use a list comprehension :</p>
<pre><code>&gt;&gt;&gt; [my_func(i,j) for i,j in l]
[3, 7, 11]
</code></pre>
</div>
<span class="comment-copy">That works, but to append each dictionary with the new values?</span>
<span class="comment-copy">@cc6g11 In that case you can use a dict comprehension! check the edit!</span>
<span class="comment-copy">what if I need to pass 2 arguments.  Like before the values in the dictionary, but also along with the keys of each dictionary.@Kasra</span>
