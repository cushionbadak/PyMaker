<div class="post-text" itemprop="text">
<p>I have the following JSON</p>
<pre><code>{
    "clips": { 
        "0": {
            "name": "Please", 
            "id": 1, 
        },
        "1": {
            "name": "Print", 
            "id": 2 
        },
        "10": {
            "name": "me", 
            "id": 3 
        },
        "2": {
            "name": "in order", 
            "id": 4 
        }
    }
}
</code></pre>
<p>This is made like so:</p>
<p><code>print(json.dumps(data, sort_keys=True, indent=4))</code> which is great because it prints the keys in alphanumeric order.  However, I need these printed in actual numeric order, so above the key <code>"2"</code> to come before the key <code>"10"</code>.</p>
<p>I know that python usually doesn't sort keys in a dictionary, but I need to do this as the json will actually be read by humans and ordering it would be great.  Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dict comprehension trick:</p>
<pre><code>import json

d = dict({'2':'two', '11':'eleven'})
json.dumps({int(x):d[x] for x in d.keys()}, sort_keys=True)
</code></pre>
<p>Output:</p>
<pre><code>'{"2": "two", "11": "eleven"}'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this. </p>
<pre><code>from collections import OrderedDict

ordKeys = sorted([int(x) for x in originalDict.keys()])

newDict = OrderedDict()
for key in ordKeys:
    newDict[str(x)] = originalDict[str(x)]

#Print out to JSON
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>how about this one:</p>
<pre><code>import json
import collections
a = '''
    {"clips": 
        { 
        "0":{"name": "Please", "id": 1,},
        "1": {"name": "Print", "id": 2,},
        "10": {"name": "me", "id": 3,},
        "2": {"name": "in order", "id": 4,}
    }}
'''

#replace comas before } otherwise json.loads will fail
a = a.replace(',}','}')

#parse json
a = json.loads(a)

#converting keys to int
a['clips'] = {int(k):v for k,v in a['clips'].items()}

#sorting
a['clips'] = collections.OrderedDict(sorted(a['clips'].items()))

print a
</code></pre>
</div>
<span class="comment-copy">Are you basically trying to sort a dictionary after it has been converted from the JSON?</span>
<span class="comment-copy">Can't JSON handle integer keys?</span>
<span class="comment-copy">@jonrsharpe, <code>json</code> always <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer">converts keys to strings</a>.</span>
<span class="comment-copy">@TigerhawkT3 but isn't that <i>after</i> the <code>sort_keys</code>?</span>
<span class="comment-copy">I'm not sure which occurs first, but it looks like it's the string conversion.</span>
<span class="comment-copy">I didn't know that dictionary comprehension also exists. Thanks for teaching me something new as well :)</span>
<span class="comment-copy">Also, why does dumping an integer key result in a string in the JSON?</span>
<span class="comment-copy">@ytpillai integer keys aren't allowed so I believe the Python module automatically converts them.</span>
<span class="comment-copy">Ah thanks @Startec</span>
<span class="comment-copy">Why the -1 vote?</span>
<span class="comment-copy">Beats me... this is the obvious best answer.</span>
<span class="comment-copy">Thanks @Dan Lenski</span>
<span class="comment-copy">Why are you using such an odd approach to generating the JSON text? Why not simply use triple-quoted multi-line strings delimited with <code>'''</code> or <code>"""</code>?</span>
