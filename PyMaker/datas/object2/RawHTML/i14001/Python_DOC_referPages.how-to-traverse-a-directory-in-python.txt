<div class="post-text" itemprop="text">
<p>I have this code:</p>
<pre><code>def traverse_dir(fd):      

    for dir_path,subpaths,files in os.walk(fd): 
        print dir_path,subpaths
        for file in files:
            print "file:%s"  %file

def traverse_func(arg,dirname,files):   

    print dirname
    for file in files:
            print "file:%s"  %file

os.path.walk(r".",traverse_func,())
</code></pre>
<p>Should I use <code>os.walk()</code> or <code>os.path.walk()</code>, and why? </p>
<p>Or is there any other better method?</p>
</div>
<div class="post-text" itemprop="text">
<p>It depends on the Python version you use. In Python 2 there is <code>os.path.walk()</code> (<a href="https://docs.python.org/2/library/os.path.html#os.path.walk" rel="nofollow">docs</a>) but it has been deprecated and replaced with <code>os.walk()</code> (<a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow">docs</a>) in Python 3.</p>
<p>Python(x,y) you claim to be using in comments, <a href="https://code.google.com/p/pythonxy/wiki/Downloads" rel="nofollow">seems to be based on Python 2</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/os.path.html#os.path.walk" rel="nofollow"><code>os.path.walk()</code></a> function is deprecated and is no longer available in Python 3. For that reason you should prefer <a href="https://docs.python.org/2/library/os.html#os.walk" rel="nofollow"><code>os.walk()</code></a>.</p>
<p><code>os.walk()</code> can also follow symbolic links to directories by setting the <code>followlinks</code> parameter to <code>True</code>. To do the same for <code>os.path.walk()</code> you must specifically check whether each directory is a sym link, and resolve it yourself. There are a couple of other possibly useful options for <code>os.walk()</code>, so overall, choose it over <code>os.path.walk()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>os.walk(dir) returns a tuple with you must unpack.</p>
<pre><code>for a, b, c in os.walk(dir):
  print("{} contains the directories {} and the files {}".format(a, b, c))
</code></pre>
<p>It's quite simple really.</p>
<p>For Python 3.6+ you can simplify this a bit:</p>
<pre><code>for a, b, c in os.walk(dir):
  print(f"{a} contains the directories {b} and the files {c}")
</code></pre>
</div>
<span class="comment-copy"><code>os.path.walk</code> does not exist in Python 3.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.walk</a></span>
<span class="comment-copy">oh I use python(x,y), it does not support  python3 ?</span>
<span class="comment-copy">What is <code>python(x,y)</code>?</span>
<span class="comment-copy">code.google.com/p/pythonxy</span>
