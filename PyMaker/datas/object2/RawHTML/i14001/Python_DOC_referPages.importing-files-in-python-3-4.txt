<div class="post-text" itemprop="text">
<p>I'm having trouble importing my own Python file. My file structure looks as such:</p>
<pre><code>caboose2\
    __init__.py
    caboose.py
    bot\
        __init__.py
        settings.py
        config.ini
</code></pre>
<p>In the <code>settings.py</code> file there is a method, <code>get_config()</code> that uses <code>configparser</code> to parse the <code>config.ini</code> file to gather values for settings that are stored in a dict.</p>
<p>The contents of <code>caboose.py</code> are simple:</p>
<pre><code>import bot
settings = bot.settings.get_config()
</code></pre>
<p><code>bot\\__init__.py</code> contains:</p>
<pre><code>import settings
</code></pre>
<p>And <code>settings.py</code> just contains the method <code>get_config()</code>. The method works fine; it was originally in the <code>caboose.py</code> file, but for cleanliness, I wanted to move it to its own file.</p>
<p>However, when I run the caboose.py file, I get this error:</p>
<pre><code>Traceback (most recent call last):
File "caboose.py", line 2, in &lt;module&gt;
  import bot
File "D:\Brogramming\python\caboose2\bot\__init__.py", line 1, in &lt;module&gt;
  import settings
ImportError: No module named 'settings'
</code></pre>
<p>I'm sure there's some fundamental part of importing modules/files in Python that I'm not understanding, and I've decided to ask for help. Thank you for your time and any possible answers!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are facing the issue because your first item <code>sys.path</code> still remains at <code>caboose2\</code> directory when the bot's <code>__init__.py</code> is run.</p>
<p><code>__init__.py</code> is used for doing initialization logic for the module, you do not need to import <code>settings.py</code> into your <code>__init__.py</code> file.</p>
<p>Leave the <code>__init__.py</code> file empty and do the following in your <code>caboose.py</code> - </p>
<pre><code>import bot.settings
settings = bot.settings.get_config()
</code></pre>
<p>If you really need to import <code>settings.py</code> in your <code>__init__.py</code> file, try -</p>
<pre><code>from bot import settings
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>EDITED</strong> 
First read this - <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow">https://docs.python.org/3/tutorial/modules.html#packages</a></p>
<blockquote>
<p>The <code>__init__.py</code> files are required to make Python treat the
  directories as containing packages; this is done to prevent
  directories with a common name, such as string, from unintentionally
  hiding valid modules that occur later on the module search path. In
  the simplest case, <code>__init__.py</code> can just be an empty file, but it can
  also execute initialization code for the package or set the <code>__all__</code>
  variable, described later.</p>
</blockquote>
<p>There are 2 options - </p>
<p><strong>Eeither</strong> use the module export </p>
<p>If you wish to use the <code>__init__.py</code> then do this - </p>
<ul>
<li>First add and <code>__all__</code> to export the method from package - </li>
</ul>
<blockquote>
<p>File: <code>__init__.py</code>:</p>
</blockquote>
<pre><code>from settings import get_config
__all__ = ['get_config']
</code></pre>
<blockquote>
<p>File: <code>caboose.py</code>:</p>
</blockquote>
<pre><code>from bot import get_config
settings = get_config()
</code></pre>
<p><strong>OR</strong> Ignore the <code>__init__.py</code> completely and remove everything from inside it. Then the code in <code>caboose.py</code> will work automatically.</p>
<blockquote>
<p>File: <code>caboose.py</code>:</p>
</blockquote>
<pre><code>import bot.settings
settings = bot.settings.get_config()
</code></pre>
</div>
<span class="comment-copy">Thank you, changing the import statement in <code>caboose.py</code> to <code>import bot.settings</code> worked. Thank you for your time and helping me understand :)</span>
<span class="comment-copy">Always glad to help :)</span>
<span class="comment-copy">What do you mean, since I removed <code>settings</code> from directory <code>bot</code>? The <code>settings.py</code> file is in that directory. Also, I tried removing that line, and I now get a different error: <code>AttributeError: 'module' object has no attribute 'settings'</code></span>
