<div class="post-text" itemprop="text">
<p>I have this code in a <em>boolean context</em>:  </p>
<pre><code>True and False or 2  
</code></pre>
<p>Output: 2</p>
<p>The type check for this expression resulted in <code>int</code>.</p>
<p>Next, I modified the code to:</p>
<pre><code>True and False or True 
</code></pre>
<p>Output : <code>True</code>
And the type check for this expression resulted in <code>bool</code></p>
<ul>
<li>Why is the output in the 1st code <code>2</code>?  </li>
<li>Shouldn't the expression evaluate to a boolean value ?<br/>
If not so, Why?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>In Python, when using 'and' and 'or', the expression evaluates using the objects involved, instead of using Booleans as in many other languages.</p>
<p>So: </p>
<pre><code>1 and 2 will evaluate to 2
1 or 2 will evaluate to 1 (short-circuit)
1 and "hello" will evaluate to "hello"
</code></pre>
<p>... and so on</p>
<p>If you want the Boolean, just surround the whole expression with bool(..)</p>
<p>Further reading:
<a href="http://www.diveintopython.net/power_of_introspection/and_or.html" rel="nofollow">http://www.diveintopython.net/power_of_introspection/and_or.html</a>
<a href="https://docs.python.org/2/reference/expressions.html#boolean-operations" rel="nofollow">https://docs.python.org/2/reference/expressions.html#boolean-operations</a></p>
</div>
<div class="post-text" itemprop="text">
<p>All you need to know here is the definition of <a href="https://docs.python.org/3/reference/expressions.html#or" rel="nofollow"><code>OR</code> operand</a>.Based on python documentation :</p>
<blockquote>
<p>The expression x or y first evaluates x; if x is true, its value is returned; otherwise, y is evaluated and the resulting value is returned. </p>
</blockquote>
<p>So since the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">precedence</a> of <code>or</code> is lower than <code>and</code> your expression evaluated as following :</p>
<pre><code>(True and False) or 2
</code></pre>
<p>Which is equal to following :</p>
<pre><code>False or 2
</code></pre>
<p>Thus based on preceding documentation the result would be the value of right object which is 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you said <code>True and False</code> it is evaluate to <code>False</code>.
Then you have <code>False or 2</code> which will evaluate to <code>2</code>
Now <code>True and False or True</code> will evaluate to <code>True</code> but the last <code>True</code> in your expression. This is due to <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">operator precedence</a></p>
<pre><code>&gt;&gt;&gt; True and False
False
&gt;&gt;&gt; False or 2
2
&gt;&gt;&gt; 
</code></pre>
<p>The output is <code>2</code> not <code>True</code> because <code>True and False or 2</code> is like</p>
<pre><code>var = (True and False)
if var:
    print(var)
else:
    print(2)
</code></pre>
<p>which yields</p>
<pre><code>2
</code></pre>
<p>because <code>True and False</code> will always evaluate to <code>False</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are clear with the operator precedence between <code>and</code> and <code>or.</code>According to Python documentation, the <strong>object</strong> is returned.</p>
<pre><code>&gt;&gt;&gt; 1 and 2
</code></pre>
<p>will return <code>2</code> according to the shorcut evaluation.
and so on.</p>
</div>
<span class="comment-copy">can you share some links for further readings. ?</span>
<span class="comment-copy">Added links for further reading.</span>
<span class="comment-copy">thanks. much appreciated</span>
<span class="comment-copy">do you mean <a href="https://en.wikipedia.org/wiki/Short-circuit_evaluation" rel="nofollow noreferrer">short circuit evaluation</a></span>
<span class="comment-copy">@KshitijSaraogi Yeah that's it.</span>
<span class="comment-copy">I get that part. My question was about the output and not the method of evaluation. Why is the output <code>2</code> and not <code>True</code>?</span>
<span class="comment-copy">@KshitijSaraogi It's the logic but as  mentioned in documentation python instead of True return the value.</span>
<span class="comment-copy">I get the method of evaluation. My question is why is the output <code>2</code> and not <code>True</code>?</span>
<span class="comment-copy">Is this really so ? To be honest, I find it quite weird</span>
<span class="comment-copy">@KshitijSaraogi Yes that is it.</span>
<span class="comment-copy">Can you share any link for further reads along this school of thought</span>
<span class="comment-copy">This may help <a href="https://www.python.org/dev/peps/pep-0308/" rel="nofollow noreferrer">python.org/dev/peps/pep-0308</a></span>
