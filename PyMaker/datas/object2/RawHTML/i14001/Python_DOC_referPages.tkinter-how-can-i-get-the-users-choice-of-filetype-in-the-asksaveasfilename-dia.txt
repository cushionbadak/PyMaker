<div class="post-text" itemprop="text">
<p>currently, I'm programming a GUI, which should allow the user to save a file and select the filetype (lets say: jpg, bmp). I'm using tkinter with Python 3.4.</p>
<p>Unfortunately, I am unable figure out, which filetype the user has selected: I'm using the asksaveasfilename-dialog and all I can get is the path:</p>
<pre><code>from tkinter import filedialog
path = filedialog.asksaveasfilename(filetypes = [('Bitmap', '.bmp'),('jpg', '.jpg')])
</code></pre>
<p>I can try to extract the extension from the path, but that can leed to unexpected behaviour:</p>
<ol>
<li>if the user doesn't provide the extension in the filename but selects the filetype, "path" doesn't contain any extension</li>
<li>if the user first decides to use the filename "example.bmp" but afterwards selects jpg as filetype, the extension is not updatet (as it normally is in window). So "path" will still be: C:\ ... \example.bmp </li>
</ol>
<p>Is there a way to get the filetype, that the user selected?
Is there any other way around?</p>
</div>
<div class="post-text" itemprop="text">
<p>As I struggle with the same problem of automatically updating the extension, I stumbled over your question. Apparently you can try that with addins:
See:</p>
<p><a href="https://geonet.esri.com/blogs/thespatialextent" rel="nofollow noreferrer">https://geonet.esri.com/blogs/thespatialextent</a></p>
<blockquote>
<p>pythonaddins.SaveDialog = saveFileDialog</p>
<p>This one is almost identical to OpenDialog except that instead of filtering files, we have the ability to automatically append a particular extension to the user's input. It's also possible to pass in a tupled list of filetype descriptions and extension which would then populate the Save As Filetype Dropdown, but again the only thing that is doing is filtering the files displayed. It's actually the FileExtension parameter that is appending the extension to the return value.</p>
</blockquote>
<p>Sry for the necro!</p>
</div>
<span class="comment-copy">I think your only recourse is to use something like <a href="https://docs.python.org/3/library/os.path.html?highlight=splitext#os.path.splitext" rel="nofollow noreferrer"><code>os.path.splitext()</code></a> on the value returned.</span>
<span class="comment-copy">That is, what I'm doing at the moment. But as mentioned in example 2, the extension could be .bmp although the user selected png as filetype.   ---- so when i use os.path.splittext(), the file would be saved as bmp, although the user explicitly selected png as filetype.</span>
<span class="comment-copy">The file type the user selects only affects what the user sees in the file list shown in dialog box. What is returned is what the user wants â€” so using <code>splitext()</code> will be correct.</span>
<span class="comment-copy">To check file type regerdless of extensions, you need to check file magic number (i.e. <a href="https://en.wikipedia.org/wiki/List_of_file_signatures" rel="nofollow noreferrer">file signature</a>). There are 3th party modules in python for this. If you are concerned only with few files, than checking the numbers is relatively easy.</span>
<span class="comment-copy">@martineau: the user wants windows-like behaviour, which tkinter unfortunately doesn't provide. Yes, In windows, the filetype does affekt, what the user sees in the save-as dialogbox but furthermore, it affects the filetype directly. E.g. in Ms Paint: I can save an image in the bmp-format under the filename example.jpg. The result is a file with an "incorrect" extension, but that is exactly how it should be under windows.</span>
