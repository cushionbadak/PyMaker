<div class="post-text" itemprop="text">
<p>I'm writing a python (2.7.6) script that pulls JSON data from a webserver and publishes it elsewhere. I only want to publish those JSON values that are numeric, e.g. no sub-objects or strings. It's very likely that the numeric values will exceed the size of <code>int</code> (in the C sense of size). My current code looks like this:</p>
<pre><code>for metric, currentValue in json.items()
    if type(currentValue) is int:
        oldValue = previous.get(metric)
        if oldValue is None:
            oldValue = 0

        delta = currentValue - oldValue
        publish(metric, delta)
        previous[metric] = currentValue
</code></pre>
<p>My concern is the type check. If Python decides that <code>int</code> is no longer appropriate and uses <code>long</code> instead it means some metrics will not get published. And what to do if <code>long</code> gets exceeded?</p>
<p>What I really want is a way to check that <code>currentValue</code> is numeric.
There is <code>isdigit</code> but that doesn't work for negatives or floats.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use <code>isinstance</code> instead of <code>type</code></p>
<p>Example -</p>
<pre><code>isinstance(currentValue, (int, long))
</code></pre>
<p>If you want to consider float as well, then -</p>
<pre><code>isinstance(currentValue, (int, long, float))
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer"><code>isinstance(currentValue, (int, long))</code></a>? <code>long</code> can't get exceeded (unless your RAM does - see e.g. <a href="http://stackoverflow.com/q/9860588/3001761">stackoverflow.com/q/9860588/3001761</a>), it's arbitrary precision.</span>
<span class="comment-copy">Note that <code>isdigit</code> only works for <i>strings</i>; if that's what you've got, you will need to convert them to numbers explicitly.</span>
<span class="comment-copy">Great, thanks. I had no idea this function existed</span>
<span class="comment-copy">See the <a href="https://docs.python.org/2/library/numbers.html" rel="nofollow noreferrer"><code>numbers</code></a> module for more inclusive types (<code>numbers.Integral</code>, for example, includes <code>int</code>, <code>long</code>, and <code>bool</code>).</span>
