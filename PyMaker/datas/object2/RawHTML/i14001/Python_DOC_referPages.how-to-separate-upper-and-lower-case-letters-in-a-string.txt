<div class="post-text" itemprop="text">
<p>I have written code that separates the characters at 'even' and 'odd' indices, and I would like to modify it so that it separates characters by upper/lower case.  I can't figure out how to do this for a string such as <code>"AbBZxYp"</code>.  I have tried using <code>.lower</code> and <code>.upper</code> but I think I'm using them incorrectly.</p>
<pre><code>def upperLower(string):
    odds=""
    evens=""
    for index in range(len(string)):
        if index % 2 == 0:
            evens = evens + string[index]
        if not (index % 2 == 0):
            odds = odds + string[index]
    print "Odds: ", odds
    print "Evens: ", evens
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you looking to get two strings, one with all the uppercase letters and another with all the lowercase letters?  Below is a function that will return two strings, the upper then the lowercase:</p>
<pre><code>def split_upper_lower(input):
    upper = ''.join([x for x in input if x.isupper()])
    lower = ''.join([x for x in input if x.islower()])

    return upper, lower
</code></pre>
<p>You can then call it with the following:</p>
<pre><code>upper, lower = split_upper_lower('AbBZxYp')
</code></pre>
<p>which gives you two variables, <code>upper</code> and <code>lower</code>.  Use them as necessary.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; filter(str.isupper, "AbBZxYp")
'ABZY'
&gt;&gt;&gt; filter(str.islower, "AbBZxYp")
'bxp'
</code></pre>
<p>Btw, for odd/even index you could just do this:</p>
<pre><code>&gt;&gt;&gt; "AbBZxYp"[::2]
'ABxp'
&gt;&gt;&gt; "AbBZxYp"[1::2]
'bZY'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is an itertools recipe called <code>partition</code> that can do this.  Here is the implementation:</p>
<p>From <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">itertools recipes</a>:</p>
<pre><code>def partition(pred, iterable):
    'Use a predicate to partition entries into false entries and true entries'
    # partition(is_odd, range(10)) --&gt; 0 2 4 6 8   and  1 3 5 7 9
    t1, t2 = tee(iterable)
    return filterfalse(pred, t1), filter(pred, t2)
</code></pre>
<p><strong>Upper and Lowercase Letters</strong></p>
<p>You can manually implement the latter recipe, or install a library that implements it for you, e.g. <a href="https://github.com/erikrose/more-itertools" rel="nofollow noreferrer"><code>pip install more_itertools</code></a>:</p>
<pre><code>import more_itertools as mit


iterable = "AbBZxYp"
pred = lambda x: x.islower()

children = mit.partition(pred, iterable)
[list(c) for c in children]
# [['A', 'B', 'Z', 'Y'], ['b', 'x', 'p']]
</code></pre>
<p>Here <code>partition</code> uses a predicate function to determine if each item in an iterable is lowercase.  If not, it is filtered into the false group.  Otherwise, it is filtered into the group of true items.  We iterate to expose these groups.</p>
<hr/>
<p><strong>Even and Odd Indices</strong></p>
<p>You can modify this to work for odd and even indices as well:</p>
<pre><code>import itertools as it

import more_itertools as mit


iterable = "AbBZxYp"
pred = lambda x: x[0] % 2 != 0

children = mit.partition(pred, tuple(zip(it.count(), iterable)))
[[i[1] for i in list(c)] for c in children]
# [['A', 'B', 'x', 'p'], ['b', 'Z', 'Y']]
</code></pre>
<p>Here we <code>zip</code> an <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count()</code></a> object to enumerate the iterable.  Then we iterate the children so that the sub items yield the letters only. </p>
<p>See also <a href="https://more-itertools.readthedocs.io/en/latest/api.html#more_itertools.partition" rel="nofollow noreferrer"><code>more_itertools</code> docs</a> for more tools.</p>
</div>
<span class="comment-copy">You want <code>isupper()</code> and <code>islower()</code>. <code>upper()</code> and <code>lower()</code> create a new string in upper/lower case.</span>
<span class="comment-copy">Yes that's what I want thank you. Just 1 more question, how do I put that into a program? Sorry im new to programming</span>
<span class="comment-copy">@Rocko1234 answer updated.</span>
