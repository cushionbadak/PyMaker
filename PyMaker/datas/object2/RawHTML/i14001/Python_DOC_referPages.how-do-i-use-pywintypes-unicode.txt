<div class="post-text" itemprop="text">
<p>How do I use <code>pywintypes.Unicode</code> in Python 3.3.5?</p>
<pre><code>import pywintypes
pywintypes.Unicode("s")
</code></pre>
<p>This produces an error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#10&gt;", line 1, in &lt;module&gt;
    pywintypes.Unicode("s")
TypeError: must be impossible&lt;bad format char&gt;, not str
</code></pre>
<p>I've <a href="https://groups.google.com/forum/#!topic/comp.lang.python/VKjxSAjxaDY" rel="nofollow">seen</a> other <a href="http://nullege.com/codes/search/pywintypes.Unicode" rel="nofollow">code</a> uses that <a href="https://github.com/kennethreitz-archive/pyinstaller/blob/master/versionInfo.py#L134" rel="nofollow">look</a> the same to me, so what is wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>TL;DR:</strong> It's a bug affecting Python 3, and you don't need <code>pywintypes.Unicode(text)</code> in Python 3. Just use <code>text</code> directly if you need a string and <code>bytes(text, encoding)</code> if you need them as bytes.</p>
<p>The error</p>
<pre><code>TypeError: must be impossible&lt;bad format char&gt;, not str
</code></pre>
<p>hints at the <em>bad format char</em> in the C++ source, <code>t#</code>, which is <em>impossible</em> (unknown).</p>
<p>Thanks to <a href="https://stackoverflow.com/users/205580/eryksun">eryksun</a>'s comments and by looking at the documentation pages of <code>PyArg_ParseTuple()</code> for <a href="https://docs.python.org/2/c-api/arg.html" rel="nofollow">Python 2</a> and <a href="https://docs.python.org/3/c-api/arg.html" rel="nofollow">Python 3</a>, it becomes clear that the bug is in <a href="http://pywin32.hg.sourceforge.net/hgweb/pywin32/pywin32/file/713ac73c22e5/win32/src/PyWinTypesmodule.cpp#l356" rel="nofollow">win32/src/PyWinTypesmodule.cpp</a>.</p>
<pre><code>PYWINTYPES_EXPORT PyObject *PyWin_NewUnicode(PyObject *self, PyObject *args)
{
    char *string;
    int slen;
    if (!PyArg_ParseTuple(args, "t#", &amp;string, &amp;slen)) // &lt;-- BUG: Python 2 format char
        return NULL;
    return PyUnicode_DecodeMBCS(string, slen, NULL);
}
</code></pre>
<p><code>t#</code> only exists for Python 2, for Python 3 it should be something like <code>s*</code>, and according to eryksun, MBCS-decoding is unnecessary as Python already handles Unicode strings automatically.</p>
</div>
<span class="comment-copy">I couldn't find much documentation about pywintypes. It seems quite old?</span>
<span class="comment-copy">I couldn't find either, and pywintypes seems to be implemented in C, making it a bit more opaque. However, there is code out there using it.</span>
<span class="comment-copy">If you use <code>help(pywintypes.Unicode)</code> in an interactive session (or just <code>pywintypes.Unicode?</code> in IPython), do you get any documentation that way?</span>
<span class="comment-copy">Not really, it just prints: <code>Help on built-in function Unicode in module pywintypes:  Unicode(...)</code></span>
<span class="comment-copy">PyWin32's <a href="http://pywin32.hg.sourceforge.net/hgweb/pywin32/pywin32/file/713ac73c22e5/setup.py#l1526" rel="nofollow noreferrer">setup.py</a> shows that the module definition is in <a href="http://pywin32.hg.sourceforge.net/hgweb/pywin32/pywin32/file/713ac73c22e5/win32/src/PyWinTypesmodule.cpp#l351" rel="nofollow noreferrer">win32/src/PyWinTypesmodule.cpp</a>, which defines <code>Unicode</code> to call <code>PyWin_NewUnicode</code>. This parses the argument as <code>t#</code> (read-only character buffer) and decodes it via <code>PyUnicode_DecodeMBCS</code>. The <code>'mbcs'</code> codec is the Windows ANSI codepage, such as <a href="https://en.wikipedia.org/wiki/Windows-1252" rel="nofollow noreferrer">Windows-1252</a>.</span>
<span class="comment-copy">Did you report the bug?</span>
<span class="comment-copy">Yup, reported it on sourceforge.</span>
