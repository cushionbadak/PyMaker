<div class="post-text" itemprop="text">
<p>I've already browsed through the mock documentations, and i've seen some examples where mock has been used. But, being a newbie, i find it hard to use mock in my tests. </p>
<p><strong><code>test_scoring.py</code></strong> - I am creating a test to make sure that a function DOES NOT get called whenever i create an item. </p>
<p>The function <strong><code>compute_score()</code></strong> that i'd like to mock is part of a class <strong><code>HistoryItem</code></strong>. </p>
<p>What i got so far is this : </p>
<pre><code>#test_scoring.py

@mock.patch('monitor.report.history_item.HistoryItem.compute_score')
def test_save_device_report(self):
    ....
    result = factory.create_history_item(jsn)
    # If the mocked method gets called after the above function is used, then there should be an error. 
</code></pre>
<p>So, how do I mock the method? I'm quite confused on how to use it, because there are different ways in the resources i found. </p>
<p>I'd really appreciate your help.  </p>
</div>
<div class="post-text" itemprop="text">
<p>When using the patch method as a decorator, you need to specify a second parameter to your test function:</p>
<pre><code>@mock.patch('monitor.report.history_item.HistoryItem.compute_score')
def test_save_device_report(self, my_mock_compute_score):
    ....
    # Assuming the compute_score method will return an integer
    my_mock_compute_score.return_value = 10

    result = factory.create_history_item(jsn)
    # Then simulate the call.
    score = result.compute_score() # This call could not be necessary if the previous
                                   # call (create_history_item) make this call for you.

    # Assert method was called once
    my_mock_compute_score.assert_called_once()
    # Also you can assert that score is equal to 10
    self.assertEqual(score, 10)
</code></pre>
<p>Note that the mocks should be used only when you've tested the patched method or object in another test.</p>
<p>Where to patch? -&gt; <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow">https://docs.python.org/3/library/unittest.mock.html#where-to-patch</a></p>
<p><strong>Edit</strong></p>
<p>This patch is gonna to avoid a real call to <code>compute_score()</code>. However, after reread your post I can see you want to assert your function doesn't get called.</p>
<p>Hopefully, the <code>called</code> attribute is present in every mock you make, so for that you can use:</p>
<pre><code>@mock.patch('monitor.report.history_item.HistoryItem.compute_score')
def test_save_device_report(self, my_mock_compute_score):
    ...
    result = factory.create_history_item(jsn)
    self.assertFalse(my_mock_compute_score.called)
    ...
</code></pre>
</div>
