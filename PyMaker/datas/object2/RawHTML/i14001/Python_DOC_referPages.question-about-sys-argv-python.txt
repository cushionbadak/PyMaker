<div class="post-text" itemprop="text">
<p>sorry to ask a basic question, but it is hard to find on google.
anyway, I have a program that does math from numbers found in various .txt files. one thing I would like to add is a -show argument to show the math step by step (finding bugs in math, finding numbers from certian steps, etc.).
I have it set up in the code like so:</p>
<pre><code>import sys
sys.argv[0]
filename = sys.argv[1]
prop = sys.argv[2]
show = sys.argv[3]
    if show == "-show":
        show = 1
</code></pre>
<p>(show = 1 does something later on). my problem is when i don't put anything for sys.argv[3] like if i put:</p>
<pre><code>python program.py examplefile.txt exampleline 
</code></pre>
<p>then the program doesn't run, I know it is becauce it is expecting an argument and thats why its messing up, but is there a way to tell it that sys.argv[3] is not always used and can be blank?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should be getting an IndexError on that line when you run it without the third argument. If you're not getting an IndexError, something else is wrong and you should fix it. If you are, all is well - and you simply need to check for the length of <code>sys.argv</code>, taking into account in your code what should happen when that value is 3 or 4:</p>
<pre><code>if len(sys.argv) == 3:
  # Stuff without sys.argv[3]
if len(sys.argv) == 4:
  # Stuff with sys.argv[3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can check the length of <code>sys.argv</code>, but why bother? Use try/catch:</p>
<pre><code>try: flag = sys.argv[1]
except: flag = False
</code></pre>
<p>That way variable <code>flag</code> always has a value, and you can write code the knows that it always has a value. The code has fewer lines than a if/else testing. It's a win all around.</p>
</div>
<div class="post-text" itemprop="text">
<p>On a side note, it might be good to checkout <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow"><code>argparse</code></a> module in python, from the documentation -</p>
<blockquote>
<p>The argparse module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and argparse will figure out how to parse those out of sys.argv. The argparse module also automatically generates help and usage messages and issues errors when users give the program invalid arguments.</p>
</blockquote>
<p>It also has support for optional arguments. Maybe you can take a look at <a href="https://docs.python.org/2/howto/argparse.html" rel="nofollow">this</a> to get started on that.</p>
</div>
<span class="comment-copy"><code>argparse</code> might be the library for you!</span>
<span class="comment-copy">it may bring you trouble if you apply unstructured thinking. using existing argument parser could save your day, like <code>argparse</code>, <code>getopt</code>, <code>getopts</code>.</span>
<span class="comment-copy">Also, if you're targeting Linux, please don't use a single dash for long options like <code>show</code>. Either you make is a one-letter flag (<code>-s</code>, for example), or a long option with two dashes (<code>--show</code>), but if you get in the habit of doing things like <code>-show</code>, people will hate your programs because they'd violate the <a href="https://en.wikipedia.org/wiki/Principle_of_least_astonishment" rel="nofollow noreferrer">Principle of Least Surprise</a> by failing to support a widely-supported part of the POSIX standard.</span>
<span class="comment-copy">cool I will try that. Thanks.</span>
<span class="comment-copy">sorry, but could you explain what you mean by stuff, i think I understand but im not positive</span>
<span class="comment-copy">It's a random placeholder comment to show you where to put actual code.</span>
<span class="comment-copy">ok thats what i thought, im having a long day so... you know. my brain is just stalling on everything lol</span>
<span class="comment-copy">ok cool I can try that as well.</span>
<span class="comment-copy">that's not working do i need to place it in a certain area in the script? i have     try: flag = sys.argv[1] right after import sys.  also should it stay [1] or do i change it to [3]</span>
<span class="comment-copy">You should change that to <code>[3]</code> if 3rd argument is the one that is optional.</span>
