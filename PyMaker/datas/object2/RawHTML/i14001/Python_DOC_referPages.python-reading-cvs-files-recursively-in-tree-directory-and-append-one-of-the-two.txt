<div class="post-text" itemprop="text">
<p>I have a root directory which contains hundreds sub-folders. Now I want to read the csv files in each sub-folder, their names are the same, say study.csv</p>
<p>After reading the csv files, I want to create a data frame to store part of the data from those csv files. The new data frame will contain 3 columns. One is the column we newly created to mark the csv file ID, and the other two columns are two of the csv file columns.</p>
<p><strong><em>For example:</em></strong> 
The structure of original csv file is:</p>
<pre><code>row1....
row2....
row3....
row4: column1 column2 column3 column14 column5
row5:    1       2      3         4      5
row6:    2       4      2         1      10
row7:    3       8      9        11      23
...
</code></pre>
<p>The expected data frame I want:</p>
<pre><code>New column       column3       column4
1                  3              4
1                  2              1
1                  2              1
1                  9              11
</code></pre>
<p>So we will read the csv files starting from row 4, for the New column in this data frame, the value will be the same if the rows are from the same csv files. We can regard this new column as the csv file ID. </p>
<p>I found that <code>os.walk</code> could help me to traverse the tree directory, but how I can just read two of the specific columns in csv while creating a new column with the ID accordingly? </p>
</div>
<div class="post-text" itemprop="text">
<p>To iterate over each CSV file in a root directory (including sub folders), iterate over <a href="https://docs.python.org/2/library/os.html#os.walk" rel="nofollow"><code>os.walk()</code></a> and check each file for the <code>.csv</code> file extention, then pass the filepath and filename into <code>process_file()</code></p>
<pre><code>for root, dirs, files in os.walk(root_dir):
    for fi in files:
        if fi.split(".")[-1] == 'csv':
            process_file(root + fi)
</code></pre>
<p>Load each line of the CSV file into a list., then can then separate the values in each line with <a href="https://docs.python.org/2/library/string.html#string.split" rel="nofollow"><code>string.split()</code></a>.</p>
<p>Each value is can now be referenced by its row number and its column number like <code>csv_file[row_num][col_num]</code></p>
<p>To process a single file, you can iterate using any values for <code>row_num</code> and <code>col_num</code> you want:</p>
<pre><code>def process_file(filename):
    title_line = 3 # indexing starts at 0, so one less than 4
    cols_to_keep = [0, 2, 3]

    # load entire CSV file into list (not good for massive files)
    f_lines = open(filename).readlines() 
    out_file = open("out.csv", "w")

    f_lines = [line.strip().split(",") for line in f_lines] # split each line in f_lines
    if os.stat("file").st_size == 0: # if file is empty, add title line
        out_file.write(",".join(f_lines[title_line]))
    for line in f_lines[title_line:]: # for each line after title line
        new_line = []
        for col_index in cols_to_keep:
           new_line.append(line[col_index])
        out_file.write(",".join(new_line))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The csv module is designed for just this kind of situation. You might want to strip the first three lines and use the fourth line to get the headers, though it looks like you're okay with positional indices.</p>
<p>You should then be able to write a generator to pass into a data frame.</p>
</div>
<span class="comment-copy">Take a look at <a href="http://www.numpy.org/" rel="nofollow noreferrer">numpy</a> and <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a>.</span>
<span class="comment-copy">Thanks a lot. It seems this solution is for a single CSV file. How about reading a batch of csv files in multiple folders under a root directory?</span>
<span class="comment-copy">@YeXu Just updated answer</span>
<span class="comment-copy">It's advisable to use the CSV module which knows how to handle escaping and different separation characters.</span>
