<div class="post-text" itemprop="text">
<pre><code>a = "alpha"
b = None
c = "charlie"
first_list = [a,b,c]

a_define = "a"
b_define = "b"
c_define = "c"
second_list = [a_define, b_define, c_define]

third_list = []

len_of_firstlist = len(first_list)

for item in range(len_of_firstlist+1):
    if first_list[item] is not None:
        first_list[item] = first_list[item] + second_list[item]
        third_list.append(first_list[item])

print third_list
</code></pre>
<p>This might seem a bit generic unfortunately, but I'm just so lost...
The code seems to work, but it keeps giving me an indexing error.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are unclear about some of these points :</p>
<ul>
<li><code>range(start=0,stop,step=1)</code> function starts from a default value 0 and stop when the value is <em>equal</em> to stop i.e. the <code>stop</code> value is <em>not</em> included. 
For further information, see the <a href="https://docs.python.org/3/library/stdtypes.html#typesseq" rel="nofollow">docs</a>.</li>
<li>Lists in Python are indexed from 0 (like arrays in C).  </li>
</ul>
<p>So if you want to traverse a string with length <code>n</code>, you need to define your range as <code>range(n)</code>.</p>
<p>If you want a more compact code, a few changes might be:</p>
<pre><code>a = "alpha"
b = None
c = "charlie"
first_list = [a,b,c]

a_define = "a"
b_define = "b"
c_define = "c"
second_list = [a_define, b_define, c_define]

third_list = []

for item in xrange(len(first_list)):
    if first_list[item] is not None:
        first_list[item] += second_list[item]
        third_list.append(first_list[item])

print third_list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are indexing from <code>0</code> through to <code>len(first_list)</code>, but the last index in <code>first_list</code> is <code>len(first_list) - 1</code>, because indexing starts at 0.</p>
<p>Remove the <code>+1</code> from your range:</p>
<pre><code>for item in range(len_of_firstlist):
</code></pre>
<p>Rather than use <code>range()</code> you can use <code>enumerate()</code> to generate indices <em>and</em> access the value; use <code>zip()</code> to pair up the two lists:</p>
<pre><code>for index, (first, second) in enumerate(zip(first_list, second_list)):
    if first is not None:
        first_list[index] = first + second
        third_list.append(first_list[index])
</code></pre>
</div>
<span class="comment-copy">Of course it is, you are indexing to <code>range(len_of_firstlist + 1)</code>. Remove the <code>+1</code>.</span>
<span class="comment-copy">Thank you both. Your answers are much appreciated!</span>
<span class="comment-copy">@HanaTheOtaku Mark this answer "useful" if you have accepted it.</span>
