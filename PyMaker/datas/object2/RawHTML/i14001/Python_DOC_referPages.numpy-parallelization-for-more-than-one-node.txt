<div class="post-text" itemprop="text">
<p>It is possible to use more cores for certain numpy operations like <code>np.dot</code>. Is it also possible to use more than one node?</p>
</div>
<div class="post-text" itemprop="text">
<p>Numpy is not designed for easy splitting into multiple nodes. You have to perform the split manually, i.e. split into subarrays processed by different nodes (if possible at all for your operation).</p>
<p>You may be using multiple cores, depending on the underlying library <a href="https://stackoverflow.com/questions/5991014/numpy-on-multicore-hardware">[1]</a>.</p>
<p>Alternatively, you can look at <a href="http://blaze.pydata.org/en/latest/" rel="nofollow noreferrer">Blaze</a> and <a href="http://dask.pydata.org/en/latest/" rel="nofollow noreferrer">Dask</a> modules for Numpy type of operations with multicore support.</p>
</div>
<div class="post-text" itemprop="text">
<p>For splitting work on several process you have to implement <code>Process</code> (not Thread)!</p>
<p>Example (extract from official doc):</p>
<pre><code>from multiprocessing import Process

def f(name):
    print('hello', name)

if __name__ == '__main__':
    p = Process(target=f, args=('bob',))
    p.start()
    p.join()
</code></pre>
<p>See for detail the <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">official documentation</a></p>
<p>Additionally, <a href="https://stackoverflow.com/a/5078155/4716013">this topic</a> may be of interest regarding the numpy optimized syntax related to your situation.</p>
<p><strong>EDIT</strong>
As stated on this <a href="http://doughellmann.com/2007/10/01/multiprocessing.html#the-processing-package" rel="nofollow noreferrer">link</a>, you can use this to split over cores or nodes!</p>
</div>
<span class="comment-copy"><a href="http://wiki.scipy.org/ParallelProgramming" rel="nofollow noreferrer">wiki.scipy.org/ParallelProgramming</a></span>
<span class="comment-copy">The answer on this page is "If you need sophisticated parallelism - you have a computing cluster, say, and your jobs need to communicate with each other frequently - you will need to start thinking about real parallel programming. " Apparently there is not answer on this page?</span>
<span class="comment-copy">Your build may already be using multiple cores. See <a href="http://stackoverflow.com/q/5991014/553404">stackoverflow.com/q/5991014/553404</a> and <a href="http://stackoverflow.com/q/5260068/553404">stackoverflow.com/q/5260068/553404</a></span>
<span class="comment-copy">This blogpost describes using dask to parallelize matmul operations. <a href="http://matthewrocklin.com/blog/work/2015/01/14/Towards-OOC-MatMul/" rel="nofollow noreferrer">matthewrocklin.com/blog/work/2015/01/14/Towards-OOC-MatMul</a>  But really you should look into distributed BLAS implementations.  The ScaLAPACK or Elemental libraries might be of use.</span>
