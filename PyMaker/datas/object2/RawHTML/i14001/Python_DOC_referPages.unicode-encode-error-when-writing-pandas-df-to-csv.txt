<div class="post-text" itemprop="text">
<p>I cleaned 400 excel files and read them into python using pandas and appended all the raw data into one big df.</p>
<p>Then when I try to export it to a csv:</p>
<pre><code>df.to_csv("path",header=True,index=False)
</code></pre>
<p>I get this error:</p>
<pre><code>UnicodeEncodeError: 'ascii' codec can't encode character u'\xc7' in position 20: ordinal not in range(128)
</code></pre>
<p>Can someone suggest a way to fix this and what it means?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You have <code>unicode</code> values in your DataFrame. Files store bytes, which means all <code>unicode</code> have to be encoded into bytes before they can be stored in a file. You have to specify an encoding, such as <code>utf-8</code>. For example, </p>
<pre><code>df.to_csv('path', header=True, index=False, encoding='utf-8')
</code></pre>
<p>If you don't specify an encoding, then the encoding used by <code>df.to_csv</code> defaults to <code>ascii</code> in Python2, or <code>utf-8</code> in Python3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Adding an answer to help myself google it later:</p>
<p>One trick that helped me is to encode a problematic series first, then decode it back to utf-8. Like:</p>
<pre><code>df['crumbs'] = df['crumbs'].map(lambda x: x.encode('unicode-escape').decode('utf-8'))
</code></pre>
<p>This would get the dataframe to print correctly too.</p>
</div>
<span class="comment-copy">Please tell if you're using python 2 or 3, those two handle Unicode very differently. Then read <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">the Unicode howto</a>, it gives a good background for this error. These problems are not difficult to solve, but you have to know the basics first.</span>
<span class="comment-copy">I am using python 2</span>
<span class="comment-copy"><a href="https://docs.python.org/2.7/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/2.7/howto/unicode.html</a></span>
<span class="comment-copy">does it still matter in Python3 to explicitly add the argument 'encoding='utf-8'' as it is already the default option?</span>
<span class="comment-copy">@JasonGoal: It's not necessary if your code is only meant to be run with Python3, but explicitness here would allow (at least this line of) your code to run under both Python2 and Python3.</span>
<span class="comment-copy">I like the idea of putting the helpful tips into an answer for later googling.  Stack Overflow is at least a twice daily visit during my workday.</span>
