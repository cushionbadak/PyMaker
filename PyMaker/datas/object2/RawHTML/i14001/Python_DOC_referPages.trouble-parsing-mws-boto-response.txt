<div class="post-text" itemprop="text">
<p>I am using Boto in Python to connect to Amazon MWS. I have successfully connected using their scripts but am having trouble parsing the response as I don't fully understand the documentation, and there are little to no examples on the internet. I am new to Python.</p>
<p>Here is how I get my response from MWS:</p>
<pre><code>mws = MWSConnection(accessKeyId,secretKey,Merchant=merchantId)
response = mws.list_matching_products(MarketplaceId=marketplaceId,Query="Beanie Babies")
</code></pre>
<p>The first product gives a response of this:</p>
<pre><code>products = response.ListMatchingProductsResult.Products.Product
print(products[0])
&gt;&gt;&gt;Product{}(Identifiers: ^Identifiers^{}(MarketplaceASIN: ^MarketplaceASIN^{}(MarketplaceId: 'ATVPDKIKX0DER', ASIN: 'B000JK67MQ'), SKUIdentifier: None), Offers: None, CompetitivePricing: [], AttributeSets: ^AttributeSets^{}(ItemAttributes: [ItemAttributes{'xml:lang': 'en-US'}(Brand: 'Beanie Babies', Studio: 'Beanie Babies - Teddy Bears', ItemDimensions: 4.00inchesx10.00inchesx6.00inchesx0.31pounds, Languages: None, Binding: 'Toy', Genre: 'cute pets', Color: 'purple', MaterialType: [], Feature: ['Ty Beanie Baby', 'Princess Bear', 'Purple with purple bow with white flower', 'Does have the tag'], ManufacturerMaximumAge: 36{'Units': 'months'}, OperatingSystem: [], Artist: [], Director: [], ProductTypeName: 'TOYS_AND_GAMES', Creator: [], Edition: '1997', Model: '4300', SmallImage: Image{}(Height: 75{'Units': 'pixels'}, Width: 75{'Units': 'pixels'}, URL: 'http://ecx.images-amazon.com/images/I/4193jH4e35L._SL75_.jpg'), GemType: [], PackageDimensions: 0.90inchesx7.40inchesx4.50inchesx0.40pounds, PackageQuantity: '1', ListPrice: None, Actor: [], Platform: [], Manufacturer: 'Beanie Babies - Teddy Bears', PartNumber: '4300', ProductGroup: 'Toy', MediaType: [], IsMemorabilia: 'false', Label: 'Beanie Babies - Teddy Bears', ManufacturerMinimumAge: 36{'Units': 'months'}, IsAutographed: 'false', IsAdultProduct: 'false', Author: [], Format: [], Title: 'Ty Beanie Babies - Princess Bear', Publisher: 'Beanie Babies - Teddy Bears')]), LowestOfferListings: None, Relationships: ^Relationships^{}(VariationParent: []), SalesRankings: ^SalesRankings^{}(SalesRank: [SalesRank{}(Rank: '60161', ProductCategoryId: 'toy_display_on_website'), SalesRank{}(Rank: '1197', ProductCategoryId: '251943011'), SalesRank{}(Rank: '1609', ProductCategoryId: '11350120011')]))
</code></pre>
<p>My Issue is trying to get the details from the ItemAttributes:</p>
<pre><code>Attributes = products[0].AttributeSets.ItemAttributes
print(Attributes[0])
&gt;&gt;&gt;ItemAttributes{'xml:lang': 'en-US'}(Brand: 'Beanie Babies', Studio: 'Beanie Babies - Teddy Bears', ItemDimensions: 4.00inchesx10.00inchesx6.00inchesx0.31pounds, Languages: None, Binding: 'Toy', Genre: 'cute pets', Color: 'purple', MaterialType: [], Feature: ['Ty Beanie Baby', 'Princess Bear', 'Purple with purple bow with white flower', 'Does have the tag'], ManufacturerMaximumAge: 36{'Units': 'months'}, OperatingSystem: [], Artist: [], Director: [], ProductTypeName: 'TOYS_AND_GAMES', Creator: [], Edition: '1997', Model: '4300', SmallImage: Image{}(Height: 75{'Units': 'pixels'}, Width: 75{'Units': 'pixels'}, URL: 'http://ecx.images-amazon.com/images/I/4193jH4e35L._SL75_.jpg'), GemType: [], PackageDimensions: 0.90inchesx7.40inchesx4.50inchesx0.40pounds, PackageQuantity: '1', ListPrice: None, Actor: [], Platform: [], Manufacturer: 'Beanie Babies - Teddy Bears', PartNumber: '4300', ProductGroup: 'Toy', MediaType: [], IsMemorabilia: 'false', Label: 'Beanie Babies - Teddy Bears', ManufacturerMinimumAge: 36{'Units': 'months'}, IsAutographed: 'false', IsAdultProduct: 'false', Author: [], Format: [], Title: 'Ty Beanie Babies - Princess Bear', Publisher: 'Beanie Babies - Teddy Bears')
</code></pre>
<p>At this point I believe it is a dictionary object.</p>
<pre><code>print(Attributes[0].values()) 
&gt;&gt;&gt;dict_values(['en-US'])
</code></pre>
<p>As I am new to this language I can't figure out how to get all the information that is located in the () such as Brand, Studio, etc.</p>
<p>Boto has some built in functions such as Response and ResponseFactory, but I am lost again as I keep hitting a wall trying to get info such as Brand, etc..</p>
<p>Thank you again for any help you can give in this.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want "<em>to get the details</em>" for <em>output</em>, you can try <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow noreferrer">Python's Data pretty printer</a>:</p>
<blockquote>
<p>The <code>pprint</code> module provides a capability to “pretty-print” arbitrary
  Python data structures...</p>
</blockquote>
<p>Its output is very much configurable, and you can go down the structure to an arbitrary depth, with <code>depth=...</code>.</p>
<p>If you want "<em>to get the details</em>" for <em>using it elsewhere</em>, 
I would suggest a few things:</p>
<ol>
<li>Try not indexing with <code>[0]</code>, you may be losing information stored somewhere else in <code>Attributes</code>.</li>
<li>Check available methods with <a href="https://stackoverflow.com/questions/1911281/how-do-i-get-list-of-methods-in-a-python-class">How do I get list of methods in a Python class?</a>, or <a href="https://stackoverflow.com/questions/34439/finding-what-methods-an-object-has">Finding what methods an object has</a>.</li>
<li>Check type with <a href="https://stackoverflow.com/questions/152580/whats-the-canonical-way-to-check-for-type-in-python">What's the canonical way to check for type in python?</a>.</li>
</ol>
<p>With the information obtained on <code>Attributes</code> you should be able to extract any info stored in it.</p>
</div>
<span class="comment-copy">What version of Python do you have? You can use <code>type()</code> or <code>isinstance()</code> to see the type of a variable.</span>
<span class="comment-copy">@sancho.s - Thanks - Using Python 3.4.  When I code : print(type(Attributes[0])) it gives me a response of &lt;class 'boto.mws.response.ItemAttributes'&gt;. The documentation for Boto is located here, <a href="http://boto.readthedocs.org/en/latest/ref/mws.html" rel="nofollow noreferrer">link</a>, but I can't figure out how the documentation is referring me to pull the details that I need.</span>
<span class="comment-copy">I would suggest a few things: 1) try not indexing with [0], 2) Check available methods with <a href="http://stackoverflow.com/questions/1911281/how-do-i-get-list-of-methods-in-a-python-class" title="how do i get list of methods in a python class">stackoverflow.com/questions/1911281/…</a>, or <a href="http://stackoverflow.com/questions/34439/finding-what-methods-an-object-has" title="finding what methods an object has">stackoverflow.com/questions/34439/…</a>, 3) Check type with <a href="http://stackoverflow.com/questions/152580/whats-the-canonical-way-to-check-for-type-in-python" title="whats the canonical way to check for type in python">stackoverflow.com/questions/152580/…</a>,</span>
<span class="comment-copy">@sancho.s. Thanks this really helped. I was able to use the dir(Attributes[0]), that printed out all the attributes (Brand, Author, etc.) and then was able to use hasattr(Attributes[0], "Author") / getattr(Attributes[0], "Author") to get the information I needed. Thank you so much. You also mentioned that I shouldn't be referencing the list item by Attributes[0]. In my script I run a check to see if it exists before calling it, as it would be the only instance to be found. How would you go about finding this?</span>
<span class="comment-copy">It is ok to index, if you want the contents of Attributes[0]. But you may be losing information stored somewhere else in Attributes... I only meant to warn you about this. I wrote the comment as an answer, as it may help others as well. Please give feedback on the answer itself.</span>
<span class="comment-copy">Thanks for the reply. But I need to access the data, not just view it, to print it out on a report and have to do this for hundreds of items.  I tried your response and am still having the same issue. pp = pprint.PrettyPrinter(indent=5) pp.pprint(Attributes) only gives me a print out of "[    {    'xml:lang': 'en-US'}]" - still can't get deeper and get access to all the details as specified above.</span>
<span class="comment-copy">@Michael - Try using <code>depth=...</code>. This will at least show you if you can access data, even if not retrieving it for use.</span>
