<div class="post-text" itemprop="text">
<p>Is there a way to generate passwords from an input string so that the results are always the same? Like an md5 hash but with special characters?</p>
</div>
<div class="post-text" itemprop="text">
<p>Why would you have special characters?</p>
<p>Special characters are added to a password to increase its entropy, but a hash will never increase the entropy since it depends only on the input.</p>
<p>For example. If you know that the input to your <code>special_characters_password_generator()</code> function is always a number in the range 0..255, then you will only have 8 bits of entropy in the output no matter what. Or in other words, you will always generate one of 256 passwords no matter what. One reason to do this is to have a human-readable but more compact representation.</p>
<p>Maybe you want to represent the hash (which is just a sequence of bits, after all) using more characters than 0-9A-F, you could for example use the <code>base64</code> module to encode the output of your hash function:</p>
<pre><code>import hashlib, base64
print base64.b85encode(hashlib.sha256(b"hello world").digest())
# output: b'xlJdzlTAJdr7lv}+I_3~#DwqTdQ*VzkcjuJ;_uDr'
</code></pre>
<p>An even better method of hashing (or "derivate keys", to be correct) passwords is <a href="https://docs.python.org/3/library/hashlib.html#hashlib.pbkdf2_hmac" rel="nofollow"><code>pbkdf2_hmac</code></a> found in newer versions of <code>hashlib</code> (also available as a backport in pip).</p>
</div>
<span class="comment-copy">what is the application of doing this?</span>
<span class="comment-copy">I'd like to use it to generate passwords for websites with a master password. I'd like to give it my master password and a website name and it should generate a unique and secure password for each website .</span>
<span class="comment-copy">Thank you that may be what I was looking for!</span>
<span class="comment-copy">I think <a href="https://ssl.masterpasswordapp.com/" rel="nofollow noreferrer">this</a> might be what you are actually looking for. :)</span>
<span class="comment-copy">That really is what I am looking for. Any hints for implementing this on my own? O.o</span>
<span class="comment-copy">Great :-) It's actually explained pretty well <a href="https://ssl.masterpasswordapp.com/algorithm.html" rel="nofollow noreferrer">here</a>. I think it's open source as well so you could read their code as well!</span>
