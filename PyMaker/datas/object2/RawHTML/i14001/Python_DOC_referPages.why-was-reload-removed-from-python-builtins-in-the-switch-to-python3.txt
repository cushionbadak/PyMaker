<div class="post-text" itemprop="text">
<p>I recently made the switch from python 2 to python 3. <a href="https://docs.python.org/3.0/whatsnew/3.0.html" rel="nofollow noreferrer">Python 3 documentation</a> reads: "<strong>Removed reload(). Use imp.reload()</strong>" It doesn't really say why though.</p>
<p><a href="https://stackoverflow.com/questions/961162/reloading-module-giving-error-reload-is-not-defined">This</a> question describes how it's done now in python 3. Does anyone have any idea why it's been removed from the built-ins and now requires <strong>imp</strong> or <strong>importlib</strong> to reload? When testing a program as you build it using the interactive prompt, having reload right there by default is super convenient. Obviously I can get that back by doing something like </p>
<pre><code>from imp import reload
</code></pre>
<p>It's just another line of code every time I open an interactive prompt to test code. What's the reasoning behind this change?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>reload()</code> was removed from the built-ins as one of the <em>Python Regrets</em> Guido expressed in a <a href="http://www.authorstream.com/Presentation/TechGuy-1495-paython-regrets-language-c-plus-programming-pythonregrets-education-ppt-powerpoint/" rel="nofollow">Keynote address at OSCON 2002</a> (slide 6). See <a href="https://www.python.org/dev/peps/pep-3100/" rel="nofollow">PEP 3100 - <em>Miscellaneous Python 3.0 Plans</em></a> which names several changes that trace their origin to that talk.</p>
<p>From the slide I'd say he expected <code>exec()</code> to be used; that'd certainly cover the most common usecase of iteratively developing some code in an editor and re-testing it in an interactive interpreter.</p>
<p>However, when discussing <a href="https://www.python.org/dev/peps/pep-3121/" rel="nofollow">PEP 3121 - <em>Extension Module Initialization and Finalization</em></a> Guido quickly found out that he missed the function:</p>
<blockquote>
<blockquote>
<p>Yes; I'm not certain whether module reloading continues to be supported
    in Py3k or not. If not, it should be removed from the PEP, if yes, it
    should be specified.</p>
</blockquote>
<p>I'm already missing the reload() builtin, so I think it should be kept
  around in some form. I expect some form of reload functionality will
  remain available, perhaps somewhere in the imp module.</p>
</blockquote>
<p>So, in short, <code>reload()</code> was removed first, then when it was missed, <code>imp.reload()</code> was added. It didn't really need to be a built-in anyway, I certainly use it only rarely.</p>
<p>In Python 3.4 <a href="http://bugs.python.org/issue18193" rel="nofollow">the function was moved</a> to <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="nofollow"><code>importlib.reload()</code></a>.</p>
</div>
<span class="comment-copy">It is must less universal or important the remaining built-ins. Being handy in one specific context of execution does not change this.</span>
<span class="comment-copy">I think it was because too many people saw it sitting there in builtins and used it without understanding its limitations.  Putting it in a module made it less likely that people would use it without knowing what they were doing.  I can't find a reliable source for this info though.</span>
<span class="comment-copy">Note that <code>reload</code> was <a href="http://bugs.python.org/issue18193" rel="nofollow noreferrer">recently moved</a> to <code>importlib</code>, so if you are writing new code targetting current versions, you should use <code>importlib.reload</code> directly to avoid later problems when the function eventually becomes officially deprecated and later removed.</span>
