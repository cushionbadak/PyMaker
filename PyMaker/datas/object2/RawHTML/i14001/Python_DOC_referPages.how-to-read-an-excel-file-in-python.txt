<div class="post-text" itemprop="text">
<p>I am newbie to Python.
Basically, I want to write a program to read column <code>D</code> &amp; <code>E</code> from an excel file, and calculate the total <code>Incoming</code> and <code>Outgoing</code> duration.</p>
<p>Which Python module is used to read excel files and how to process data inside it?</p>
<p><strong>Excel file:</strong></p>
<pre><code>D            E
Incoming    18
Outgoing    99
Incoming    20
Outgoing    59
Incoming    30
Incoming    40
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>there are a couple of options depending on the version of excel you are using.<br/>
openpyxl - used for reading Excel 2010 files (ie: .xlsx)<br/>
xlrd - used for reading older Excel files (ie: .xls)</p>
<p>I have only used xlrd, which you could do something like the below<br/>
** Note ** code not tested</p>
<pre><code>import xlrd


current_row = 0
sheet_num = 1
input_total = 0
output_total = 0

# path to the file you want to extract data from
src = r'c:\temp\excel sheet.xls'

book = xlrd.open_workbook(src)

# select the sheet that the data resids in
work_sheet = book.sheet_by_index(sheet_num)

# get the total number of rows
num_rows = work_sheet.nrows - 1

while current_row &lt; num_rows:
    row_header = work_sheet.cell_value(current_row, 4)

    if row_header == 'output':
        output_total += work_sheet.cell_value(current_row, 5)
    elif row_header == 'input':
        input_total += work_sheet.cell_value(current_row, 5)

print output_total
print input_total
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems like simply using Excel's <a href="https://support.office.com/en-ca/article/SUMIF-function-169b8c99-c05c-4483-a712-1697a653039b" rel="nofollow"><code>=SUMIF()</code></a> function would be sufficient.  However, you're asking for a Python solution, so here's a Python solution!</p>
<p>Pandas is a library that provides a DataFrame data structure very similar to an Excel spreadsheet.  It provides a <code>read_excel()</code> function, whose documentation you can find <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html" rel="nofollow">here</a>.  Once you have a DataFrame, you could do something like this:</p>
<pre><code>import pandas as pd
table = pd.read_excel('path-to-spreadsheet.xlsx')
incoming_sum = table.E[table.D == 'Incoming'].sum()
outgoing_sum = table.E[table.D == 'Outgoing'].sum()
</code></pre>
<p>You can get Pandas for Python on Windows, but it's a bit difficult.  The easiest way is a Scientific Python distribution for Windows, like <a href="https://store.continuum.io/cshop/anaconda/" rel="nofollow">Anaconda</a>.  On Linux, installing <code>pandas</code> is simple as <code>sudo pip install pandas</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Using <a href="https://pypi.python.org/pypi/xlrd" rel="nofollow noreferrer">xlrd 0.9.3</a> in Python 3.4.1:</strong></p>
<p>It puts all values from row <code>D</code> and <code>E</code> in two separate <code>list</code>.</p>
<p>It then combines each parallel elements of these lists (simply elements with same index) to a tuple using <code>zip()</code>. </p>
<p>Then, these generated tuples are combined to a <code>list</code>. Using <code>sum()</code> and list comprehension, <code>incoming_sum</code> and <code>outgoing_sum</code> are calculated.</p>
<pre><code>import xlrd

with xlrd.open_workbook('z.xlsx') as book:

    # 0 corresponds for 1st worksheet, usually named 'Book1'
    sheet = book.sheet_by_index(0)

    # gets col D values
    D = [ D for D in sheet.col_values(3) ]

    # gets col E values
    E = [ E for E in sheet.col_values(4) ]

    # combines D and E elements to tuples, combines tuples to list
    # ex. [ ('Incoming', 18), ('Outgoing', 99), ... ]
    data = list( zip(D, E) )

    # gets sum
    incoming_sum = sum( tup[1] for tup in data if tup[0] == 'Incoming' )
    outgoing_sum = sum( tup[1] for tup in data if tup[0] == 'Outgoing' )

    print('Total incoming:', incoming_sum)
    print('Total outgoing:', outgoing_sum)
</code></pre>
<p><strong><em>Output:</em></strong></p>
<pre><code>Total incoming: 108.0
Total outgoing: 158.0
</code></pre>
<p><strong>To install <a href="https://pypi.python.org/pypi/xlrd" rel="nofollow noreferrer">xlrd</a>: (Windows)</strong></p>
<ol>
<li><strong>Download</strong> here: <a href="https://pypi.python.org/pypi/xlrd" rel="nofollow noreferrer">https://pypi.python.org/pypi/xlrd</a></li>
<li><p><strong>Extract</strong> to any directory, then <strong>change</strong> <code>cmd</code>'s <strong>current directory</strong> ( <code>chdir</code> ) to the directory where you extracted, <strong>then type in cmd</strong> <code>python setup.py install</code></p>
<ul>
<li><p>Take note that you will extract <code>xlrd-0.9.3.tar.gz</code> <strong>two times</strong>, first to remove <code>.gz</code>, second to remove <code>.tar</code>.</p></li>
<li><p>The extracted directory (where you will change your cmd's current directory) will look like this:<img alt="enter image description here" src="https://i.stack.imgur.com/Mzf97.jpg"/></p></li>
</ul></li>
</ol>
</div>
<span class="comment-copy">You can check <a href="https://pypi.python.org/pypi/xlrd" rel="nofollow noreferrer">xlrd</a> or <a href="https://bitbucket.org/openpyxl/openpyxl" rel="nofollow noreferrer">openpyxl</a> for reading <code>.xls</code> or <code>.xlsx</code> files in Python. Or, you can convert your excel workbook to <code>.csv</code> file and read it using Python's <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> or combine <code>open()</code> and <code>str.split()</code>.</span>
<span class="comment-copy">I tried numpy but i was able to read data bot unable to process data inside it. but now it working with xlrd ..Thanks</span>
<span class="comment-copy">Moura Thanks for the extended help it really helped me to achieve my task :)</span>
<span class="comment-copy">No problem mate</span>
<span class="comment-copy">Thanks for the your response.. but I tried with xlrd and its working now.</span>
<span class="comment-copy">Thanks for the response it was really helpful..since I am new your sample program helped me lot. one more thing could you suggest me some best sources to learn network programming in python..</span>
