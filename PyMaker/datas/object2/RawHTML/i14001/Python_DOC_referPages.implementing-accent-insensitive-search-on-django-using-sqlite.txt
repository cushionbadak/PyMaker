<div class="post-text" itemprop="text">
<p>This question is related to my earlier question <a href="https://stackoverflow.com/questions/31327019/accent-insensitive-search-django-sqlite">Accent insensitive search django sqlite</a></p>
<p>As mentioned in the response there is no direct way to do so. I have come up with a solution, but I am not sure if it is a good one:</p>
<p><strong>Use Case</strong>: Assume that the database has a table <code>NewsArticles</code> with one of the column being <code>ArticleText</code>. As the name implies <code>ArticleText</code> contains the text of the news articles which includes several words with accented characters. Let's say one such word present in the <code>ArticleText</code> for an article with Primary Key <code>aid123</code> is <code>Puerto Aisén</code>. Now, a user can search for either <code>Puerto Aisén</code> or <code>Puerto Aisen</code> and should be able to get the article with PK <code>aid123</code> back with the found accented word in bold (<code>&lt;b&gt;Puerto Aisén&lt;/b&gt;</code>).</p>
<p><strong>Solution</strong>: I add one more column in the table <code>normalizedArticleText</code> and make it contain the <code>unicode.normalize</code> (accent removed) version of the text. Now whenever a search query comes, I first determine if the query contains accented character or not by using <code>s.decode('ascii')</code> and then search accordingly in the corresponding column.</p>
<p><strong>Problem</strong>: I am duplicating the whole data. Also, there is no way for me to bold the accented keyword if the search query was the non-accented version of the keyword. </p>
<p>Any brilliant suggestions? I am using django with sqlite</p>
</div>
<div class="post-text" itemprop="text">
<p>Try using the unicodedata package. Here's an example for Python 3:</p>
<pre><code>import unicodedata

unicodedata.normalize('NFD', 'répertoire').encode('ascii', 'ignore')
</code></pre>
<p>Or, for Python 2.7:</p>
<pre><code>import unicodedata

unicodedata.normalize('NFD', u'répertoire').encode('ascii', 'ignore')
</code></pre>
<p>Either of these will output:</p>
<pre><code>'repertoire'
</code></pre>
<p>Simply replace <code>répertoire</code> with your string. <code>NFD</code> is a <code>form</code> of normalization. You can read more on the different forms of normalization here:</p>
<p><a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel="nofollow">https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize</a>
<a href="https://docs.python.org/2/library/unicodedata.html#unicodedata.normalize" rel="nofollow">https://docs.python.org/2/library/unicodedata.html#unicodedata.normalize</a></p>
<p>Good luck!</p>
</div>
