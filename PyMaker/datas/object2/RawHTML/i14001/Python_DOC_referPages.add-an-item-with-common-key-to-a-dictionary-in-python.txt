<div class="post-text" itemprop="text">
<p>I have this:</p>
<pre><code>items = {{'project':'Project 1','description':'Task description','time':1222222},
{'project':'Project 2','description':'Task description 2','time':1224322},
{'project':'Project 1','description':'Task description 3','time':13222152}}
</code></pre>
<p>And I need something like this:</p>
<pre><code>resultitems = {
    'project':'Project 1','pritems':{
        {'description':'Task description','time':1222222},
        {'description':'Task description 3','time':13222152}},
    'project':'Project 2',pritems':{
        {'description':'Task description 2','time':1224322}},
    } 
</code></pre>
<p>of simply the name of each project as a key</p>
<p>I've tried this approach:</p>
<pre><code>resultitems = {}
resultitems['Project 2'] = {}
resultitems['Project 2'].update(..)
</code></pre>
<p>update does not work, since it replaces the previous value</p>
<p>in php, it was easy, </p>
<pre><code>$resultitems['Project 2'][] = array(...)
</code></pre>
<p>but don't find the way to do this in Python</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>result_items = {
    'house project': [{'task': 'cleaning', 'hours': 20}, {'task': 'painting', 'hours: 30', etc.],
    'garden project': [{'task': 'mowing the lawn', 'hours': 1, etc.
    etc.
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your variable 'items' is not correct. If it is a list of dictionaries, it should be:</p>
<p>items = [{...}, {...}, {...}]</p>
<p>Please write the source of the data, from where do you get the data. This will determine the way you will fill in the desired dictionary. If you already have the data as in 'items' (i.e. a list of dictionaries), then here is how to converted it:</p>
<pre><code>items = [{'project':'Project 1','description':'Task description','time':1222222},
{'project':'Project 2','description':'Task description 2','time':1224322},
{'project':'Project 1','description':'Task description 3','time':13222152}]

dct = {}
for e in items :
    if e['project'] not in dct :
        dct[e['project']] = []
    dct[e['project']].append(dict([(k, v) for k,v in e.items() if k != 'project']))
print dct
</code></pre>
<p>and output is:</p>
<pre><code>{'Project 2': [{'description': 'Task description 2', 'time': 1224322}], 'Project 1': [{'description': 'Task description', 'time': 1222222}, {'description': 'Task description 3', 'time': 13222152}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Finally, I used this:</p>
<pre><code>newdata = {}

for data in result['data']:
    try:
        newdata[data['project']].append({"description":data['description'],"start":data['start'],"time":data['dur']})
    except:
        newdata[data['project']] = []
        newdata[data['project']].append({"description":data['description'],"start":data['start'],"time":data['dur']})

print newdata
</code></pre>
<p>And the result has been like this, and this is what I needed:</p>
<pre><code>{
u'Project 1': [
    {'start': u'2015-07-09T18:09:41-03:00', 'description': u'Task 1 name', 'time': 1432000}, 
    {'start': u'2015-07-09T17:42:36-03:00', 'description': u'Task 2 name', 'time': 618000}
    ], 
u'Project 2': [
    {'start': u'2015-07-09T20:14:16-03:00', 'description': u'Other Task Name', 'time': 4424000}
    ], 
u'Project 3': [
    {'start': u'2015-07-09T22:29:51-03:00', 'description': u'another task name for pr3', 'time': 3697000}, 
    {'start': u'2015-07-09T19:38:02-03:00', 'description': u'something more to do', 'time': 59000}, 
    {'start': u'2015-07-09T19:11:49-03:00', 'description': u'Base tests', 'time': 0}, 
    {'start': u'2015-07-09T19:11:29-03:00', 'description': u'Domain', 'time': 0}
], 
u'Project something': [
    {'start': u'2015-07-09T19:39:30-03:00', 'description': u'Study more', 'time': 2069000}, 
    {'start': u'2015-07-09T15:46:39-03:00', 'description': u'Study more (2)', 'time': 3800000}, 
    {'start': u'2015-07-09T11:46:00-03:00', 'description': u'check forms', 'time': 660000}
]
}
</code></pre>
<p>by the way, I was no asking about the structure itself.. instead what I needed was someway to program a "something like this" structure.</p>
</div>
<span class="comment-copy">Your <code>resultitems</code> seems to be wrong,y you cannot have same key twice. I believe what you would want is a dictionary of dictionaries of dictionaries.</span>
<span class="comment-copy">So each project consists of a list of tasks, to be executed one after another?</span>
<span class="comment-copy">Is a connector to read tasks, and order them by project. I don't want the key twice.. what I want is the project as key, and the items inside each project.</span>
<span class="comment-copy">As written, your example, <code>items</code>, is trying to <i>make</i> a set of dictionaries which you cannot do because dictionaries are not hashable.  Are you reading <code>items</code> from a file?  Is is a string?</span>
<span class="comment-copy">He doesn't need a rewrite of the structure. He need a comprehension to clean things up.</span>
<span class="comment-copy">You may find <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> useful.</span>
