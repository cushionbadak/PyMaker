<div class="post-text" itemprop="text">
<p>I want to find the set of all unique characters contained within a pandas DataFrame. One solution that works is given below:</p>
<pre><code>from operator import add
set(reduce(add, map(unicode, df.values.flatten())))
</code></pre>
<p>However, the solution above takes a long time with large DataFrames. What are more efficient ways of doing this?</p>
<p>I am trying to find all unique characters in a pandas DataFrame so I can choose an appropriate delimiter when writing the DataFrame to disk as a csv.</p>
</div>
<div class="post-text" itemprop="text">
<p>Learned this from Jeff <a href="https://stackoverflow.com/questions/20084382/unique-values-in-a-pandas-dataframe">here</a></p>
<p>This should be doable using Pandas built-ins: </p>
<pre><code>a = pd.DataFrame( data=np.random.randint(0,100000,(1000000,20)))

# now pull out unique values (less than a second for 2E7 data points)
b = pd.unique( a.values.ravel() )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I realise this is an old question, but I was looking for the same thing and thought I'd share for anyone else looking.</p>
<p>This can be done very quickly with <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a>.</p>
<p>Use <code>unstack()</code> to get a list of all values in your dataframe. The result  even has a count of each character.</p>
<pre><code>from collections import Counter
df = pd.DataFrame({'A': pd.util.testing.rands_array(100, 100000),
                 'B': pd.util.testing.rands_array(100, 100000)})
Counter(''.join(df.unstack().values))
</code></pre>
<p>Timings:</p>
<pre><code>%timeit Counter(''.join(df.unstack().values))
1.1 s ± 38.9 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
</code></pre>
</div>
<span class="comment-copy">Why not just let Pandas handle writing the DataFrame to a CSV file (<code>to_csv()</code>)? No need to choose the delimiter yourself - Pandas handles everything properly.</span>
<span class="comment-copy">Yeah, to expand on previous comment, exactly what problem are you trying to solve?  Even if there is a comma inside a string, it shouldn't cause a problem since it will be output inside of quotes.</span>
<span class="comment-copy">I don't think that is what is asked for as poster seems to be looking for individual characters, not ovarall values.  E.g. 1.0 has a 1, 0, and period.</span>
