<div class="post-text" itemprop="text">
<p>I am passing a python module to C as a <code>PyObject</code>. I want to check to see if this value is NONE in my C code, using this form:</p>
<pre><code>int func(PyObject tmp)
{
   if(tmp)
    { 
     // etc
</code></pre>
<p>I am getting the following error. How can I convert from a PyObject to boolean value, simillar to the way Python's if function behaves. It is worth noting that when <code>tmp</code> is a <code>boost::python::object</code> variable this command works as expected.</p>
<pre><code>ex_program.cpp:72:7: error: value of type 'PyObject' (aka '_object') is not contextually convertible to 'bool'
  if (tmp)
      ^~~
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/c-api/object.html#c.PyObject_IsTrue" rel="nofollow"><code>PyObject_IsTrue</code> seems to do what you want</a>:</p>
<pre><code>int PyObject_IsTrue(PyObject *o)

    Returns 1 if the object o is considered to be true, and 0 otherwise. This is equivalent to the Python expression not not o. On failure, return -1.
</code></pre>
</div>
<span class="comment-copy">NULL or None? They are very different.</span>
<span class="comment-copy">None. Thank you for the clarification, I have edited my poset to reflect this.</span>
<span class="comment-copy">Does tmp have to be of type <code>PyObject*</code>? I am having problems implementing this with tmp as a <code>PyObject</code>...</span>
<span class="comment-copy">I overcame the error using <code>if (PyObject_IsTrue(&amp;tmp))</code></span>
