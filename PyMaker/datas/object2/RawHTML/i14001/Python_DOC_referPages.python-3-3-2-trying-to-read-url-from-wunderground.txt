<div class="post-text" itemprop="text">
<p>I have been struggling for a while trying to convert some code from an older version of Python.  I'm simply trying to run an api lookup from wunderground and I can't get past my errors in python.  Here is the error: 
f = urllib.request.urlopen(fileName)
AttributeError: 'module' object has no attribute 'request'</p>
<p>The code is pretty straight forward, I know i"m missing something simple, thanks for any help. </p>
<pre><code>import urllib
import json

key = "xxxxxxxxxxxxxxxxx"
zip = input('For which ZIP code would you like to see the weather? ')
fileName = "http://api.wunderground.com/api/" + key +    "/geolookup/conditions/q/PA/" + zip + ".json"
f = urllib.request.urlopen(fileName)
json_string = f.read()
parsed_json = json.loads(json_string)
location = parsed_json['location']['city']
temp_f = parsed_json['current_observation']['temp_f']
print ("Current temperature in %s is: %s % (location, temp_f)")
close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sometimes importing a package (e.g. <code>numpy</code>) automatically imports submodules (e.g. <code>numpy.linalg</code>) into its namespace. But that is not the case for <code>urllib</code>. So you need to use</p>
<pre><code>import urllib.request
</code></pre>
<p>instead of </p>
<pre><code>import urllib
</code></pre>
<p>in order to access the <code>urllib.request</code> module. Alternatively, you could use</p>
<pre><code>import urllib.request as request
</code></pre>
<p>in order to access the module as <code>request</code>. </p>
<p>Looking at the <a href="https://docs.python.org/3/library/urllib.request.html#examples" rel="nofollow">examples in the docs</a> is a good way to avoid problems like this in the future.</p>
<hr/>
<p>Since <code>f.read()</code> returns a <code>bytes</code> object, and <code>json.loads</code> expects a <code>str</code>, you'll also need to decode the bytes. The particular encoding depends on what the server decides to send you; in this case the bytes are <code>utf-8</code> encoded. So use</p>
<pre><code>json_string = f.read().decode('utf-8')
parsed_json = json.loads(json_string)
</code></pre>
<p>to decode the bytes.</p>
<hr/>
<p>There is a small typo on the last line. Use </p>
<pre><code>print ("Current temperature in %s is: %s" % (location, temp_f))
</code></pre>
<p>to interpolate the string <code>"Current temperature in %s is: %s"</code> with the values <code>(location, temp_f)</code>. Note the placement of the quotation mark.</p>
<hr/>
<p>Tip: Since <code>zip</code> is a builtin-function, it is a good practice not to name a
variable <code>zip</code> since this changes the usual meaning of <code>zip</code> making it harder
for others and perhaps future-you to understand your code. The fix is easy: change <code>zip</code> to something else like <code>zip_code</code>.</p>
<hr/>
<pre><code>import urllib.request as request
import json

key = ...
zip_code = input('For which ZIP code would you like to see the weather? ')
fileName = "http://api.wunderground.com/api/" + key +    "/geolookup/conditions/q/PA/" + zip_code + ".json"
f = request.urlopen(fileName)
json_string = f.read().decode('utf-8')
parsed_json = json.loads(json_string)
location = parsed_json['location']['city']
temp_f = parsed_json['current_observation']['temp_f']
print ("Current temperature in %s is: %s" % (location, temp_f))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend using the <a href="http://docs.python-requests.org/en/latest/" rel="nofollow">requests library Python HTTP for Humans.</a>, the code below will work on either python2 or 3:</p>
<pre><code>import requests
key = "xxxxxxxxxxx"
# don't shadow builtin zip function
zip_code = input('For which ZIP code would you like to see the weather? ')
fileName = "http://api.wunderground.com/api/{}/geolookup/conditions/q/PA/{}.json".format(key, zip_code)
parsed_json = requests.get(fileName).json()
location = parsed_json['location']['city']
temp_f = parsed_json['current_observation']['temp_f']
# pass actual variables and use str.format
print ("Current temperature in {} is: {}%f".format(location, temp_f))
</code></pre>
<p>Getting the json is simply <code>requests.get(fileName).json()</code>, using <code>str.format</code> is the preferred method and I find less prone to errors, it is also far more feature-rich in comparison to the older <code>printf</code> style formatting. </p>
<p>You can see it works under both 2 and 3 with a sample run:</p>
<pre><code>:~$ python3 weat.py
For which ZIP code would you like to see the weather? 12212
Current temperature in Albany is: 68.9%f
:~$ python2 weat.py
For which ZIP code would you like to see the weather? 12212
Current temperature in Albany is: 68.9%f
</code></pre>
</div>
<span class="comment-copy">Thanks, this also helped me find my mistakes when I am using IDLE.</span>
<span class="comment-copy">Thanks so much, just changing to the requests.get().json() worked great.</span>
<span class="comment-copy">No prob, requests does a lot of the hard work for you.</span>
