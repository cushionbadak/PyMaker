<div class="post-text" itemprop="text">
<p>Hello I am looking for some help to do like an index match in excel i am very new to python but my data sets are far to large for excel now</p>
<p>I will dumb my question right down as much as possible cause the data contains alot of irrelevant information to this problem</p>
<p>CSV A (has 3 Basic columns)</p>
<pre><code>Name, Date, Value
</code></pre>
<p>CSV B (has 2 columns)</p>
<pre><code>Value, Score
</code></pre>
<p>CSV C (I want to create this using python; 2 columns)</p>
<pre><code>Name, Score
</code></pre>
<p>All I want to do is enter a date and have it look up all rows in CSV A which match that "date" and then look up the "score" associated to the "value" from that row in CSV A in CSV B and returning it in CSV C along with the name of the person. Rinse and repeat through every row</p>
<p>Any help is much appreciated I don't seem to be getting very far </p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a working script using <a href="https://docs.python.org/3/library/csv.html" rel="nofollow">Python's csv module</a>:</p>
<p>It prompts the user to input a date (format is <code>m-d-yy</code>), then reads <code>csvA</code> row by row to check if the date in each row matches the inputted date. </p>
<p>If yes, it checks if the value that corresponds the date from the current row of A matches any of the rows in <code>csvB</code>. </p>
<p>If there are matches, it will write the name from <code>csvA</code> and the score from <code>csvB</code> to <code>csvC</code>.</p>
<pre><code>import csv
date = input('Enter date: ').strip()

A = csv.reader( open('csvA.csv', newline=''), delimiter=',')
matches = 0

# reads each row of csvA
for row_of_A in A:

    # removes whitespace before and after of each string in each row of csvA
    row_of_A = [string.strip() for string in row_of_A]

    # if date of row in csvA has equal value to the inputted date
    if row_of_A[1] == date:
        B = csv.reader( open('csvB.csv', newline=''), delimiter=',')

        # reads each row of csvB
        for row_of_B in B:

            # removes whitespace before and after of each string in each row of csvB
            row_of_B = [string.strip() for string in row_of_B]

            # if value of row in csvA is equal to the value of row in csvB
            if row_of_A[2] == row_of_B[0]:

                # if csvC.csv does not exist
                try:
                    open('csvC.csv', 'r')
                except:
                    C = open('csvC.csv', 'a')
                    print('Name,', 'Score', file=C)

                C = open('csvC.csv', 'a')

                # writes name from csvA and value from csvB to csvC
                print(row_of_A[0] + ', ' + row_of_B[1], file=C)

m = 'matches' if matches &gt; 1 else 'match'
print('Found', matches, m)
</code></pre>
<p><strong><em>Sample csv files:</em></strong></p>
<p>csvA.csv</p>
<pre><code>Name, Date, Value
John, 2-6-15, 10
Ray, 3-5-14, 25
Khay, 4-4-12, 30
Jake, 2-6-15, 100
</code></pre>
<p>csvB.csv</p>
<pre><code>Value, Score
10, 500
25, 200
30, 300
100, 250
</code></pre>
<p><strong><em>Sample Run:</em></strong></p>
<pre><code>&gt;&gt;&gt; Enter date: 2-6-15
Found 2 matches
</code></pre>
<p>csvC.csv <em>(generated by script)</em></p>
<pre><code>Name, Score
John, 500
Jake, 250
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you are using unix you can do this by below shell script
also I am assuming that you are appending the search output in file_C and there are no duplicated in both source files</p>
<hr/>
<p><p>while true
<p>do
<p>echo "enter date ..."
<p>read date
<p>value_one=<code>grep $date file_A | cut -d',' -f1</code>
<p>tmp1=<code>grep $date' file_A | cut -d',' -f3</code>
<p>value_two=<code>grep $tmp1 file_B | cut -d',' -f2</code></p>
<p><p>echo "${value_one},${value_two}" &gt;&gt; file_c
<p>echo "want to search more dates ... press y|Y, press any other key to exit"
<p>read ch
<p>if [ "$ch" = "y" ] || [ "$ch" = "y" ]
<p>then
<p> continue
<p>else
<p> exit
<p>fi</p>
<p>done</p>
</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>
<span class="comment-copy">For the interest of learning I would appreciate if anyone could link me to resources which are similar to answering problems like the above.</span>
<span class="comment-copy">You can take a look here at <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org</a>: 14.1. csv â€” CSV File Reading and Writing</span>
<span class="comment-copy">Thankyou so much this is exactly what i was looking for now hopefully I can build off this :D</span>
<span class="comment-copy">@HaydenBotica No problem. :D The same thing can be achieved without using Python's csv module. You can split each line of the opened file using  <a href="http://www.tutorialspoint.com/python/string_split.htm" rel="nofollow noreferrer">split()</a>. An example is this: <code>row_of_A = row_of_A.split(',')</code></span>
<span class="comment-copy">@HaydenBotica A flat approach is to put all the lines <code>csvA</code> in a list, same with <code>csvB</code>. Then do the matching.</span>
<span class="comment-copy">Hey this has been really helpful unfortunately i've hit a stumbling block maybe you could help me here, I dont think I understand the elif statement correctly.  I have added essentially the same block three times using an if statement for the first one but an elif for the second one and it isn't working get this error  Tab error: inconsistent use of tabs and spaces in indentation</span>
<span class="comment-copy">@HaydenBotica You can ask a new question about that problem and I'll try to address it.</span>
