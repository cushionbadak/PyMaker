<div class="post-text" itemprop="text">
<p>I am using Linux CentOs server. In my server two version of python were installed - 2.6 and 2.7. Both path are entered in to path variable.</p>
<p>I am trying to install pip using following command:</p>
<pre><code>&gt; sudo yum install python-pip 
</code></pre>
<p>But it installed to python2.6 (<code>/usr/bin/python</code>). So If I am trying to install package to python using pip it goes to python2.6. For example</p></div>
<div class="post-text" itemprop="text">
<p>If you want to have control over what Python version you're using, I'd suggest considering <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/" rel="nofollow">virtual environments</a>.</p>
<p>You can then create a stand-alone virtual environment for each project and use the Python version you need.</p>
<p>This will create a virtual environment for your project with Python 2.7, install <code>&lt;package&gt;</code> and deactivate the virtual environment.</p>
<pre><code>cd my_project_folder
virtualenv -p /usr/bin/python2.7 venv
source venv/bin/activate
pip install &lt;package&gt;
deactivate
</code></pre>
<p>As for your second question, I recommend using <code>pip freeze</code> and <code>pip install -r</code>...</p>
<p>First, install all the packages you need:</p>
<pre><code>source venv/bin/activate
pip install &lt;package1&gt;, &lt;package2&gt;,...
</code></pre>
<p>Then save the list of packages with their current versions:</p>
<pre><code>pip freeze &gt; requirements.txt
</code></pre>
<p>This will create a <code>requirements.txt</code> file that you can distribute with the project. When somebody wants to install all the dependencies, they will need to do:</p>
<pre><code>pip install -r requirements.txt
</code></pre>
<hr/>
<p>For Python 3, virtual environments are supported by default - <a href="https://docs.python.org/3/library/venv.html" rel="nofollow">venv</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Say you have two python versions installed 2.7 and 3.5, </p>
<p><strong>Set the Environment variables</strong></p>
<ul>
<li>set <strong>python2</strong> as the env variable for python2.7</li>
<li>set <strong>python</strong> as evn variable for python3.5 </li>
</ul>
<p><strong>Install packages for python2:</strong>
python2 -m pip install &lt; package-name &gt;</p>
<p><strong>Install packages for python3:</strong>
python -m pip install &lt; package-name &gt;
or
pip install &lt; package-name&gt;</p>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>which pip</code>, choose your pip</p>
<p>then simply do <code>sudo /path_to_your_version_of_pip/pip install</code> your module</p>
</div>
<span class="comment-copy">For the first question: I'd download and install pip manually, running the version of python you want when you execute the installer. For the second question: <code>pip freeze &gt; requirements.txt;  pip install -r requirements.txt</code></span>
