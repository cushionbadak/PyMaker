<div class="post-text" itemprop="text">
<p>I'm working from an OpenOffice produced .csv with mixed roman and Chinese characters.  This is an example of one row:</p>
<pre><code>b'\xe5\xbc\x80\xe5\xbf\x83'b'K\xc4\x81i x\xc4\xabn'b'Open heart 'b'Happy '
</code></pre>
<p>This section contains two Chinese characters stored in binary which I would like displayed as Chinese characters on the command line from a very basic Python 3 program (see bottom), how do I do this?</p>
<pre><code>b'\xe5\xbc\x80\xe5\xbf\x83'b'K\xc4\x81i x\xc4\xabn'
</code></pre>
<p>When I open the .csv in OpenOffice I need to select "Chinese Simplified UEC-CN" as the Character set if that helps.  I have searched extensively but I do not understand Unicode and the pages do not make sense.</p>
<pre><code>import csv
f = open('Chinese.csv', encoding="utf-8") 
file = csv.reader(f)

for line in file:
    for word in line:
        print(word.encode('utf-8'), end='')
    print("\n")
</code></pre>
<p>Thank you in advance for any suggestions.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to a suggestion by @eryksun I solved my issue by re-encoding the source file to UTF-8 from ASCII.  The question is different but the solution is here : </p>
<p><a href="http://www.stackoverflow.com/a/542899/792015">http://www.stackoverflow.com/a/542899/792015</a> </p>
<p>Alternatively if you are using Eclipse you can paste a non roman character (such as a Chinese character like <strong>大</strong>) into your source code and save the file.  If the source is not already UTF-8 Eclipse will offer to change it for you.</p>
<p>Thank you for all your suggestions and my apologies for answering my own question.  </p>
<p><em>Footnote : If anyone knows why changing the source file type effects the compiled program I would love to know.  According to <a href="https://docs.python.org/3/tutorial/interpreter.html" rel="nofollow">https://docs.python.org/3/tutorial/interpreter.html</a> the interpreter treats source files as UTF-8 by default.</em></p>
</div>
<span class="comment-copy">yes, I tried .decode but didn't have any luck.  It gave an error about not having a decode method on the 'word' then another saying 'codec can't decode byte 0xce in position 1'.  So your output shows Chinese characters?</span>
<span class="comment-copy">"AttributeError: 'str' object has no attribute 'decode'".  FYI I have added the Chinese character sets to the terminal (I'm using a Mac).</span>
<span class="comment-copy">well, yes, if you already have <code>str</code> instances then they're already decoded into unicode, no need to decode them further obviously.  Silly question: what does <code>print(word)</code> do?</span>
<span class="comment-copy">print(word) gives "UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-1: character maps to &lt;undefined&gt;"</span>
<span class="comment-copy">That is an issue with your terminal not telling python that it can print <code>utf-8</code> characters.  see <a href="http://stackoverflow.com/questions/492483/setting-the-correct-encoding-when-piping-stdout-in-python" title="setting the correct encoding when piping stdout in python">stackoverflow.com/questions/492483/…</a></span>
