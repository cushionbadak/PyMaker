<div class="post-text" itemprop="text">
<p>I'm playing with a function in Python 3 that queries small blocks of XML from the <a href="https://confluence.cornell.edu/display/CLOISAPI/eBird+API+1.1" rel="nofollow">eBird API</a>, parsing them with minidom. The function locates and compares dates from two requested blocks of XML, returning the most recent. The code below does its job, but I wanted to ask if there was a simpler way of doing this (the for loops seem unnecessary since each bit of XML will only ever have one date, and comparing pieces of the returned string bit by bit seems clunky). Is there a faster way to produce the same result?</p>
<pre><code>from xml.dom import minidom
import requests

def report(owl):
    #GETS THE MOST RECENT OBSERVATION FROM BOTH USA AND CANADA
    usa_xml = requests.get('http://ebird.org/ws1.1/data/obs/region_spp/recent?rtype=country&amp;r=US&amp;sci=surnia%20ulula&amp;back=30&amp;maxResults=1&amp;includeProvisional=true')
    canada_xml = requests.get('http://ebird.org/ws1.1/data/obs/region_spp/recent?rtype=country&amp;r=CA&amp;sci=surnia%20ulula&amp;back=30&amp;maxResults=1&amp;includeProvisional=true')
    usa_parsed = minidom.parseString(usa_xml.text)
    canada_parsed = minidom.parseString(canada_xml.text)

    #COMPARES THE RESULTS AND RETURNS THE MOST RECENT
    usa_raw_date = usa_parsed.getElementsByTagName('obs-dt')
    canada_raw_date = canada_parsed.getElementsByTagName('obs-dt')
    for date in usa_raw_date:
        usa_date = str(date.childNodes[0].nodeValue)   
    for date in canada_raw_date:
        canada_date = str(date.childNodes[0].nodeValue)
    if int(usa_date[0:4]) &gt; int(canada_date[0:4]):
        most_recent = usa_date
    elif int(usa_date[5:7]) &gt; int(canada_date[5:7]):
        most_recent = usa_date
    elif int(usa_date[8:10]) &gt; int(canada_date[8:10]):
        most_recent = usa_date
    elif int(usa_date[11:13]) &gt; int(canada_date[11:13]):
        most_recent = usa_date
    elif int(usa_date[14:16]) &gt; int(canada_date[14:16]):
        most_recent = usa_date
    else:
        most_recent = canada_date
    return most_recent
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow"><code>datetime.datetime.strftime()</code></a> to parse the dates into <code>datetime.datetime()</code> objects, then us <code>max()</code> to return the greater value (most recent):</p>
<pre><code>usa_date = datetime.datetime.strptime(
    usa_raw_date[-1].childNodes[0].nodeValue, '%Y-%m-%d %H:%M')
canada_date = datetime.datetime.strptime(
    canada_raw_date[-1].childNodes[0].nodeValue, '%Y-%m-%d %H:%M')
return max(usa_date, canada_date)
</code></pre>
<p>Running this now against the URLs you provided, that results in:</p>
<pre><code>&gt;&gt;&gt; usa_date = datetime.datetime.strptime(
...     usa_raw_date[-1].childNodes[0].nodeValue, '%Y-%m-%d %H:%M')
&gt;&gt;&gt; canada_date = datetime.datetime.strptime(
...     canada_raw_date[-1].childNodes[0].nodeValue, '%Y-%m-%d %H:%M')
&gt;&gt;&gt; usa_date, canada_date
(datetime.datetime(2014, 5, 5, 11, 0), datetime.datetime(2014, 5, 11, 18, 0))
&gt;&gt;&gt; max(usa_date, canada_date)
datetime.datetime(2014, 5, 11, 18, 0)
</code></pre>
<p>This returns a <code>datetime.datetime()</code> object; if returning a string is important to you, you can always still return:</p>
<pre><code>return max(usa_date, canada_date).strftime('%Y-%m-%d %H:%M')
</code></pre>
<p>e.g. format the <code>datetime</code> object to a string again.</p>
</div>
<span class="comment-copy">You should <i>not</i> use <code>response.text</code> to pass XML to a XML parser; use <code>request.content</code>; a XML parser generally expects to parse <i>bytes</i>, not decoded Unicode values.</span>
<span class="comment-copy">OK. In this context, that would just warrant changing <code>usa_xml.text</code> to <code>usa_xml.content</code>, correct?</span>
<span class="comment-copy">Exactly; use the <code>.content</code> attribute, not the decoded <code>.text</code> attribute.</span>
<span class="comment-copy">Thanks. What is the purpose of the [-1] on the parsed XML? (ie <code>usa_raw_date[-1].childNodes</code>) Is this in case there were multiple values instead of the single date in the XML?</span>
<span class="comment-copy"><code>list[-1]</code> is the pythonic way of accessing the last element in a list regardless of size.</span>
<span class="comment-copy">@J.ThomasShorty: You used a loop to go over each element in <code>usa_raw_date</code>, <i>rebinding</i> <code>usa_date</code> in each iteration. If there are multiple elements, only the last element is actually used. I skipped to the chase.</span>
