<div class="post-text" itemprop="text">
<p>i need a help in parsing json files using python.this is my sample json file</p>
<p>i have tried the following code,but itz throwing a key error if any attribute value is null,
how do i skip those attributes and continue parsing for remaining data.</p>
<pre><code>import csv

with open("global.json") as file:
data = json.load(file)

with open("single.csv", "w") as file:
csv_file = csv.writer(file)
csv_file.writerow 

for item in data:
    csv_file.writerow([item['policyNumber'],
                       item['policyType'],
                       item['policyStatus'],
                       item['termEffectiveDate'],
                       item['sourceSystem'],
                       item['agency'],
                       item['policyAddress'][0]['address1'],
                       item['policyAddress'][0]['zipCode'],
                       item['policyAddress'][0]['city'],
                       item['policyAddress'][0]['state'],
                       item['consumers'][0]['matchFlag'],
                       item['consumers'][0]['firstName'],
                       item['consumers'][0]['lastName'],
                       item['consumers'][0]['eid'],
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow"><code>dict.get()</code> method</a> to get a default value if a key is not defined:</p>
<pre><code>item.get('policyNumber', ''),
</code></pre>
<p>and perhaps:</p>
<pre><code>item.get('policyAddress', [{}])[0].get('zipCode', ''),
# ...
item.get('consumers', [{}])[0].get('matchFlag', ''),
</code></pre>
<p>to default to an empty dictionary for the nested list items. The latter can still fail if there <em>is</em> a <code>policyAddress</code> or <code>consumers</code> key but the value is an empty list.</p>
<p>You can preprocess each item a little:</p>
<pre><code>for item in data:
    if not item.get('policyAddress'):
        item['policyAddress'] = [{'address1': '', 'zipCode': '', 'city': '', 'state': ''})
    if not item.get('consumers'):
        item['consumers'] = [{'matchFlag': '', 'firstName': '', 'lastName': '', 'eid': ''})
</code></pre>
<p>then use:</p>
<pre><code>item['policyAddress'][0].get('address1', '')
</code></pre>
<p>etc.</p>
</div>
<span class="comment-copy">thanks Martijn will try out this ...so for eg:item['policyAddress'][0]['zipCode'], should be replaced by item.get('policyAddress','','zipCode','')</span>
<span class="comment-copy">@user3514648: no; you'd use <code>item.get('policyAddress', [{}])[0].get('zipCode', '')</code>; this returns <code>[{}]</code> (a list with one empty dictionary) as the default for <code>policyAddress</code>, then returns an empty string if the result has no <code>zipCode</code> key.</span>
<span class="comment-copy">The answer provided by Martijn Pieters is a great answer. If I understand what's you're trying to do, you want to convert a JSON into a csv, and this question has been answered <a href="http://stackoverflow.com/questions/1871524/convert-from-json-to-csv-using-python">here</a>.</span>
