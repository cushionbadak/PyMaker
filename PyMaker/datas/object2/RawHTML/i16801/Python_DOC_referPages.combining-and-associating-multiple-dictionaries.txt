<div class="post-text" itemprop="text">
<p>I want to generate a dictionary in which six different combination of three different groups of pictures are organized. Thats why I computed a dictionary:</p>
<pre><code>import glob, os, random, sys, time
import numpy.random as rnd

im_a = glob.glob('./a*')   # upload pictures of the a-type, gives out a List of .jpg-files
im_n = glob.glob('./n*')   # n-type
im_e = glob.glob('./e*')   # e-type

# combining Lists of Pictures
A_n = im_a + im_n
N_a = im_n + im_a
A_e = im_a + im_e
E_a = im_e + im_a
E_n = im_e + im_n
N_e = im_n + im_e

# making a Dictionary of Pictures and Conditions
PicList = [A_n, N_a, A_e, E_a, E_n, N_e]   # just the six Combinations
CondList = [im_a,im_n,im_a,im_e,im_e,im_n] # images that are in the GO-Condition
ImageList = []
ImageList.append({'PicList':PicList, 'CondList':CondList})
</code></pre>
<p>There are two questions at this point:</p>
<ol>
<li>First, is there a better way to combine the two Lists of pictures and second</li>
<li>If I organize a dictionary in this way, <code>CondList</code> doesn't match with <code>PicList</code>. It would be nice to associate <code>PicList</code> directly to <code>CondList</code>. Where <code>PicList</code> <code>A_n</code> is associated with <code>CondList</code> <code>im_a</code> and <code>N_a-im_n, A_e-im_a</code>...</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>To answer the first point, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow"><code>itertools.permutations</code></a>:</p>
<pre><code>import itertools as it

elements = [im_a, im_n, im_e]
perms = it.permutations(elements, 2)    # 2 -&gt; take pairs
pic_list = [sum(perm, []) for perm in perms]
</code></pre>
<p>The order returned is lexicographic, i.e.</p>
<pre><code>im_a + im_n, im_a + im_e, im_n + im_a, im_n + im_e, im_e + im_a, im_e + im_n
</code></pre>
<p>The respective <code>cond_list</code> can be built by simply doing:</p>
<pre><code>cond_list = [im_a] * 2 + [im_n] * 2 + [im_e] * 2
</code></pre>
<p>Or, more generally:</p>
<pre><code>d = len(elements) - 1
cond_list = list(chain.from_iterable([el]*d for el in elements))
# or
cond_list = sum(([el]*d for el in elements), [])
</code></pre>
</div>
<span class="comment-copy">Hi @Jakob, at the moment, this isn't that well-formulated for StackOverflow. You've got a lot of sub-questions, and no-one is likely to be able to answer all of them. If you get multiple part-answers, you won't then be able to assign one as "the" correct answer. I'd suggest breaking it up into multiple questions. e.g. the first bits on combining lists and populating dictionaries are really quite general Python questions, and will likely get a wider audience if not hidden in a question that is labelled as focussed on the specific TrialHandler class in PsychoPy.</span>
<span class="comment-copy">Yes thank you. I tried to follow your advise and splitted the question in two! Here is the second question: <a href="http://stackoverflow.com/questions/23605013/trialhandler-and-time-measuring-in-psychopy" title="trialhandler and time measuring in psychopy">stackoverflow.com/questions/23605013/â€¦</a></span>
<span class="comment-copy">I am not quite sure I understand what you want to do. For one thing, the combination lists are just concatenations of two lists. Is that really what you want? Secondly, can you please elaborate what you mean by "associate PicList directly to CondList"? Lets say you got 2 files for each type (a1.jpg, a2.jpg, n1.jpg, ...), explain what you want to do with those images.</span>
<span class="comment-copy">1. yes I need the concentration of two lists, and A_n = im_a + im_n gives me what I want, but if I have more lists I wanted to ask for an easier way to combine the two lists. 2. if I have a 'concentrated' List A_n (a1.jpg, a2.jpg, n1.jpg, n2.jpg) I want to associate this List to the List im_a (a1.jpg, a2.jpg) just to give python the information of which images are dominant in the A_n list. My idea was a dictionnary that looked something like this ({A_n:im_a}) respectively ({(a1.jpg, a2.jpg, n1.jpg, n2.jpg):(a1.jpg, a2.jpg)}), which is - of course - not working.</span>
