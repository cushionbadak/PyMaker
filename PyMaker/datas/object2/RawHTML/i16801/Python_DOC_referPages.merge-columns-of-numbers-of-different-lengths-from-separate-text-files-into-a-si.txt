<div class="post-text" itemprop="text">
<p>Hi I am fairly new to Python programming and cannot seem to overcome this issue.</p>
<p>I have a directory with 100 subfolders with a single text file in each (with no file extension) all named exactly the same. Each file contains a single column of numbers of different lengths.</p>
<p>I want to merge all the numbers of each file into a single csv file with the numbers from each file in separate columns.</p>
<p>So I should end up with a matrix of 100 columns of differing lengths of numbers where each column corresponds to a single file.</p>
<p>Example of files:</p>
<p>file1</p>
<pre><code>1
15
23
22
10
</code></pre>
<p>file 2</p>
<pre><code>3
55
22
</code></pre>
<p>I have this script:</p>
<pre><code># import modules
import glob
import csv
import sys
import itertools

inf = glob.glob("*/*-ambig")

for f in inf:
    with open(f) as fin:
        with open(sys.argv[1], 'w') as fout:

            writer = csv.writer(fout, delimiter=',',  quotechar='', quoting=csv.QUOTE_NONE)
            headers = ('coverage', )
            writer.writerow(headers)

            for line in fin:
                columns = line.split("\n") # split each column on new line
                writer.writerow(itertools.izip_longest(*columns, fillvalue=['']))
</code></pre>
<p>However I am getting this error:</p>
<pre><code>Traceback (most recent call last):
  File "coverage_per_strain.py", line 21, in &lt;module&gt;
    writer.writerow(itertools.izip_longest(*columns, fillvalue=['']))
_csv.Error: sequence expected
</code></pre>
<p>Does anyone have any idea what is wrong with my code? And can you see any other errors?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>csv.writerow</code> expects a sequence as an argument. <code>itertools.izip_longest</code> is returning an iterator.  Hence the error message.</p>
<p>You should be able to fix the problem with:</p>
<pre><code>writer.writerow(list(itertools.izip_longest(*columns, fillvalue=[''])))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution that I wrote up before I realized you were using Python 2.7. This will only work as written in Python 3.3+, as it uses the very nifty <code>contextlib.ExitStack</code> context manager, which was only added in that version (I also use Python 3's <code>map</code>):</p>
<pre><code>import glob
import csv
import sys
import contextlib

from itertools import zip_longest

in_filenames = glob.glob("*/*-ambig")

with contextlib.ExitStack() as stack:
    in_files = [stack.enter_context(open(filename)) for filename in in_filenames]
    out_file = stack.enter_context(open(sys.argv[1], "w", newlines=""))

    writer = csv.writer(out_file, delimiter=',', quoting=csv.QUOTE_NONE)

    writer.writerow(('coverage',)) # do you want the header repeated for each column?

    writer.writerows(zip_longest(*(map(str.strip, f) for f in in_files), fillvalue=""))
</code></pre>
<p>Here's my attempt to port this back to Python 2. I've not tested this version. I use a <code>try</code>/<code>finally</code> pair to handle the closing of the files (and <code>imap</code> to handle the stripping without reading all of each file into memory up front):</p>
<pre><code>import glob
import csv
import sys

from itertools import izip_longest, imap

in_filenames = glob.glob("*/*-ambig")

with open(sys.argv[1], "wb") as out_file:
    in_files = []
    try:
        for filename in in_filenames:
            in_files.append(open(filename))

        writer = csv.writer(out_file, delimiter=',', quoting=csv.QUOTE_NONE)

        writer.writerow(('coverage',))

        writer.writerows(izip_longest(*[imap(str.strip, f) for f in in_files],
                                      fillvalue=""))

    finally:
        for f in in_files:
            try:
                f.close()
            except:   # ignore exceptions here, or the later files might not get closed!
                pass
</code></pre>
</div>
<span class="comment-copy">after opening your file <code>fin</code> you should use <code>csv.reader()</code>to read it.just take a look at csv module tutorial.</span>
<span class="comment-copy">What version of Python are you using? In Python 3, <a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow noreferrer"><code>contextlib.ExitStack</code></a> makes iterating over multiple files at once much easier than anything you can do safely in Python 2.</span>
<span class="comment-copy">I'm using Python 2.7.3</span>
