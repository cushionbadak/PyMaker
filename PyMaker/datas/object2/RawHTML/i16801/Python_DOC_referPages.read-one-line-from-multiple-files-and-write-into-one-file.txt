<div class="post-text" itemprop="text">
<p>I have about 45,000 files. My purpose is to extract one certain line from each file and accumulate them on single file.</p>
<p>I tried to use glob.glob, but the problem is that with this module, the order of file seems mixed.</p>
<pre><code>filin= diri+ '*.out'
list_of_files = glob.glob(filin)
print list_of_files 
with open("A.txt", "w") as fout:
    for fileName in list_of_files:
        data_list = open( fileName, 'r' ).readlines()
        fout.write(data_list[12])
</code></pre>
<p>Above is the code I used. Mainly, I borrowed from someone elses code in this forum.</p>
<p>I would like to read all ".out' files in order. Each of these files contains data at one minute interval. For example, one file contains data at 2014/1/1/ 00:00 and consequent file has data at 2014/1/1/ 00:01. So reading these file in order is very important. However, when I used glob.glob and print list_of_files above, file order seems pretty mixed. Could I solve this problem?</p>
<p>Also, as shown above, I would like to read 12th lines from the top from each file, but result repeatedly shows "out of index".</p>
<p>The question seems not very organized. Any idea or help would be really appreciated.</p>
<p>P.S the name of files are such as:Data_201308032343.out, Data_201308032344.out, Data_201308032345.out ......</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list_of_files = sorted(glob.glob(filin))
</code></pre>
<p>data_list[12] reads the 13'th line of the file because it is a zero-indexed list. That might be the cause of the "Index out of range" exception.</p>
</div>
<div class="post-text" itemprop="text">
<p>As documented at the <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow"><code>os.listdir</code> documentation</a>, the directory entries are returned in an arbitrary order. If you want to apply a specific order, you'll need to ensure that yourself:</p>
<pre class="lang-python prettyprint-override"><code>list_of_filenames = glob.glob(input_fileglob)
sorted_list_of_filenames = sorted(list_of_filenames)

with open("A.txt", 'w') as outfile:
    for filename in sorted_list_of_filenames:
        data_list = open(filename).readlines()
        outfile.write(data_list[12])
</code></pre>
</div>
<span class="comment-copy">Thank you Scandinavian</span>
<span class="comment-copy">Yes, my purpose is to read the 13th line of the file with data_list[12]. Thank you for reply Scandinavian.</span>
<span class="comment-copy">I have one question, with bignose and scandinavian's help, I could sort the file names in order. However, I still face "index out of range" error with command of ".write(data_list[12])". Do you have any idea for this? Thank you.</span>
<span class="comment-copy">Please ask a new question if you have one. In the meantime, please choose an answer for this question.</span>
