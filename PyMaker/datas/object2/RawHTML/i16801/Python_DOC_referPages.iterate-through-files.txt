<div class="post-text" itemprop="text">
<p>I'm trying to adapt someone's code for my (Windows 7) purposes. His is unfortunately UNIX specific. He does</p>
<pre><code>dir_ = pathlib.PosixPath(str(somePathVariable))
os.chdir(str(dir_))
for pth in dir_:        
    # some operations here
</code></pre>
<p>Running this, I got (not surprisingly)</p>
<pre><code>NotImplementedError: cannot instantiate 'PosixPath' on your system
</code></pre>
<p>I looked into the documentation for <code>pathlib</code> and thought yeah, I should just be able to change <code>PosixPath</code> to <code>Path</code> and I would be fine. Well, then <code>dir_</code> generates a <code>WindowsPath</code> object. So far, so good. However, I get </p>
<pre><code>TypeError: 'WindowsPath' object is not iterable
</code></pre>
<p><code>pathlib</code> is at version 1.0, what am I missing? The purpose is to iterate through files in the specific directory. Googling this second error gave <em>0</em> hits. </p>
<p>Remark: Could not use <code>pathlib</code> as a tag, hence I put it into the title.</p>
<p><strong>Update</strong></p>
<p>I have Python 2.7.3 and  pathlib 1.0 </p>
</div>
<div class="post-text" itemprop="text">
<p>I guess you should use <a href="https://pathlib.readthedocs.org/en/pep428/#pathlib.Path.iterdir"><code>Path.iterdir()</code></a>. </p>
<pre><code>for pth in dir_.iterdir():

    #Do your stuff here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/glob.html" rel="nofollow"><code>glob</code></a> module instead, which works same on both platforms:</p>
<pre><code>import glob
for item in glob.glob('/your/path/*')  # use any mask suitable for you
   print item # prints full file path
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try </p>
<pre><code>for pth in dir_.iterdir():
</code></pre>
<p>Related documentation here: <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir" rel="nofollow">https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dir_ = pathlib.Path(str(somePathVariable))
os.chdir(str(dir_))
for pth in dir_:        
    # some operations here
</code></pre>
<p>Now your code will work on both platforms. You are specifing de type of path... if you want it to be cross-platform you have to use "Path" not "PosixPath"</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Important to know:</strong>
Every time you encounter an <code>object is not iterable</code> error, you must remember that the system also performs an iteration on a string,
For example: </p>
<pre><code>import yagmail

def send_email(to: list, subject: str, content: list, attachments=None):
    yagmail.SMTP(from_user_name, password)\
    .send(to=to, subject=subject, contents=content, attachments=attachments)
</code></pre>
<p>This function is also the contents of the email and the attachment must be in the list! (even if there is only one file).</p>
<p><strong>In conclusion:</strong> Always try to insert the string into the list that can save a lot of problems.</p>
</div>
<span class="comment-copy">You can use the <code>.glob()</code> method on Path objects; no need to switch back to the legacy functions.</span>
<span class="comment-copy">In the past, I found the <code>glob.glob()</code> on Windows returns a list of filenames in lexical order, while on Linux order is not guaranteed. So when I ported code from Win to Linux, I had to sort the results from <code>glob.glob()</code> to have consistent behavior. I don't know if <code>Path.glob</code> is similar, but it is worth checking.</span>
