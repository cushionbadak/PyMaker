<div class="post-text" itemprop="text">
<p>How to get the desired result in python one liner ??</p>
<pre><code>object_list=[{'applicationName': "ATM Monitoring",
                         'roamingDrop': "",
                         'noOfCustomer': None,
                         'ipAddress': "192.168.1.1",
                          'url': "www.google.co.in",},
             {'applicationName': None,
                         'roamingDrop': "",
                         'noOfCustomer': None,
                         'ipAddress': "192.168.1.1",
                          'url': "www.google.co.in",}]
</code></pre>
<p>Result required is to replace all None to "" </p>
<pre><code>object_list=[{'applicationName': "ATM Monitoring",
                         'roamingDrop': "",
                         'noOfCustomer': "",
                         'ipAddress': "192.168.1.1",
                          'url': "www.google.co.in",},
             {'applicationName': "",
                         'roamingDrop': "",
                         'noOfCustomer': "",
                         'ipAddress': "192.168.1.1",
                          'url': "www.google.co.in",}]
</code></pre>
<p>Simple Function to make this happens is :</p>
<pre><code>def simple():
    for object in object_list:
        for key, value in object.iteritems():
            if value:
                dict( object, **{key: value})
            else:
                dict(object, **{key: ''})
</code></pre>
<p>And Python one unsuccessful one liner:</p>
<pre><code>[dict(object, **{key: value}) if value else dict(object, **{key: ''}) 
    for object in object_list  for key, value in object.iteritems()]
</code></pre>
<p>Can the one liner be achieved with list comprehensions?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>lst=[{'applicationName': "ATM Monitoring",
                     'roamingDrop': "",
                     'noOfCustomer': None,
                     'ipAddress': "192.168.1.1",
                      'url': "www.google.co.in",},
         {'applicationName': None,
                     'roamingDrop': "",
                     'noOfCustomer': None,
                     'ipAddress': "192.168.1.1",
                      'url': "www.google.co.in",}]

print [{key: val if val else "" for key, val in dct.items()} for dct in lst]
</code></pre>
<p>explained:</p>
<pre><code>dct = lst[0]
{'applicationName': "ATM Monitoring",
                     'roamingDrop': "",
                     'noOfCustomer': None,
                     'ipAddress': "192.168.1.1",
                      'url': "www.google.co.in",}
</code></pre>
<p>Using dictionary comprehension (available since Python 2.7), first just reconstructing the dictionary into the same value:</p>
<pre><code>{key: val  for dct.items()}
</code></pre>
<p>and extending it by assigning "" in case, we have as original value None (or any other value evaluating to False)</p>
<pre><code>{key: val if val else ""  for dct.items()}
</code></pre>
<p>Finally (as shown above) it is applied in enveloping list comprehension to all items in the list.</p>
<pre><code>{key: val  for dct.items()}
</code></pre>
<p>Strictly speaking, this replaces anything, what looks as boolean False by "".</p>
<p>If we want only <code>None</code> values replaced by <code>""</code>, and e.g. <code>False</code> and <code>0</code> keep as it is, we shall e more strict:</p>
<pre><code>print [{key: val if val is not None else "" for key, val in dct.items()} for dct in lst]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This seems easy enough:</p>
<pre><code>&gt;&gt;&gt; for d in object_list:
...     for k, v in d.items():
...         if v is None:
...             d[k] = ''
... 
</code></pre>
<p>and to show what the output looks like:</p>
<pre><code>&gt;&gt;&gt; import pprint
&gt;&gt;&gt; pprint.pprint(object_list)
[{'applicationName': 'ATM Monitoring',
  'ipAddress': '192.168.1.1',
  'noOfCustomer': '',
  'roamingDrop': '',
  'url': 'www.google.co.in'},
 {'applicationName': '',
  'ipAddress': '192.168.1.1',
  'noOfCustomer': '',
  'roamingDrop': '',
  'url': 'www.google.co.in'}]
</code></pre>
</div>
<span class="comment-copy">What's the obsession with a one-liner?  Your working solution <i>works</i>.  Use it.  Easy to read and functional trumps one-liner.</span>
<span class="comment-copy">@g.d.d.c -- Especially when the one liner wouldend up being really obtuse.  However, I'm pretty sure that OP's code doesn't <i>work</i> (the function doesn't return anything, references all sorts of globals, etc.)</span>
<span class="comment-copy">okay, you tell me the best way to achieve this result.</span>
<span class="comment-copy">You want to convert <code>None</code>s to <code>''</code>. This loses information and gains you nothing. It's unclear why you want to do this and even less clear why you want to do it in one line.</span>
<span class="comment-copy">@msv How can you know, that converting None to "" gains you nothing. Working with "" and None may be in many situation significant difference and OP has right to ask for such a change.</span>
<span class="comment-copy">Beautiful, this is what i was looking for. Thanks !!</span>
<span class="comment-copy">This almost what i know .</span>
<span class="comment-copy">actually you can safely use <code>d.items()</code> in python3, as they are <code>views</code>: <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#dictionary-view-objects</a></span>
<span class="comment-copy">@m.wasowski -- You appear to be correct.  At first, I thought you <i>wouldn't</i> be able to because they are views, but apparently I was incorrect ...</span>
