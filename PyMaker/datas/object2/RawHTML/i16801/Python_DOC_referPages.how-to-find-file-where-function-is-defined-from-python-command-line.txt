<div class="post-text" itemprop="text">
<p>Let's say I want to explore <code>import</code> statements in Python. How, from the Python command line, can I find the file in which <code>import</code> is defined? Note I am working in Python 2.7.6 (iPython) in Windows 7.</p>
<p>For most objects, just entering the object name is enough. For instance:</p>
<pre><code>import os
os
</code></pre>
<p>Yields the following:</p>
<pre><code>&lt;module 'os' from 'C:\Anaconda\lib\os.pyc'&gt;
</code></pre>
<p>But you cannot do the same with basic commands like <code>import</code>.</p>
<p>I have tried searching my Python folder but unsurprisingly don't get something as simple as <code>C:\Anaconda\lib\import.py</code>. Is there a simple way to find out where such statements are defined (I realize much of the time it will be in c-code, but that is what I am after)?</p>
<p><strong>Update (5/27/14)</strong></p>
<p>It seems people think it cannot be done in any simple way with a built-in command. However, if your life depended on it, you could write up some inelegant grep-type function in Python, no?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>import</code> isn't a <code>module</code> the way that <code>os</code> is. Instead, it's a <code>statement</code>.</p>
<p><a href="https://docs.python.org/2/reference/simple_stmts.html#import" rel="nofollow">https://docs.python.org/2/reference/simple_stmts.html#import</a></p>
</div>
<div class="post-text" itemprop="text">
<p>When you call <code>os</code> after importing, it prints the <strong>path</strong> to the file because it is a <strong>module</strong>. Instead, <code>import</code> is a statement:</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; math
&lt;module 'math' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/math.so'&gt;
&gt;&gt;&gt; import
  File "&lt;stdin&gt;", line 1
    import
         ^
SyntaxError: invalid syntax
&gt;&gt;&gt; 
</code></pre>
<p>Just in case you feel like you needed to know, here are the other <strong>statements</strong> that do similar things when called blank:</p>
<pre><code>&gt;&gt;&gt; with
  File "&lt;stdin&gt;", line 1
    with
       ^
SyntaxError: invalid syntax
&gt;&gt;&gt; yield
  File "&lt;stdin&gt;", line 1
SyntaxError: 'yield' outside function
&gt;&gt;&gt; return
  File "&lt;stdin&gt;", line 1
SyntaxError: 'return' outside function
&gt;&gt;&gt; continue
  File "&lt;stdin&gt;", line 1
SyntaxError: 'continue' not properly in loop
&gt;&gt;&gt; import
  File "&lt;stdin&gt;", line 1
    import
         ^
SyntaxError: invalid syntax
&gt;&gt;&gt; raise
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType
&gt;&gt;&gt; assert
  File "&lt;stdin&gt;", line 1
    assert
         ^
SyntaxError: invalid syntax
&gt;&gt;&gt; del
  File "&lt;stdin&gt;", line 1
    del
      ^
SyntaxError: invalid syntax
&gt;&gt;&gt; break
  File "&lt;stdin&gt;", line 1
SyntaxError: 'break' outside loop
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">You can't. The trick you're using works for <b>modules</b>, but import isn't a module, it's a statement.</span>
<span class="comment-copy">@dano You can't, period, or you can't the way I tried?</span>
<span class="comment-copy">I believe <code>import</code> is implemented in C, so you'd need to find where that is in the actual Python source. However, starting with Python 3.1, there is the <code>importlib</code> module, which provides a pure Python implementation of <code>import</code>: <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow noreferrer">docs.python.org/3/library/importlib.html</a></span>
<span class="comment-copy">Here is the C implementation: <a href="http://hg.python.org/cpython/file/db302b88fdb6/Python/import.c" rel="nofollow noreferrer">hg.python.org/cpython/file/db302b88fdb6/Python/import.c</a></span>
<span class="comment-copy">So there is no way to find out what C file it is defined in, from the Python command line? Not sure why this was downvoted...This is something most IDEs for C/C++ let you do pretty easily.</span>
<span class="comment-copy">So my way doesn't work, but is there a way to find the file where import is defined? Is it in Python's C code, and if so is there a way to find where, from the python command line?</span>
<span class="comment-copy">What's the context for why you want to know? (That may lead to a different suggestion.)</span>
<span class="comment-copy">I wan to track down the source code that implements a function, so I can study the guts of the language. The example is actually immaterial. It could be "print" or any other command.</span>
<span class="comment-copy">Ah. Modifying the link @dano posted above, you might want to check out <a href="http://hg.python.org/cpython/file/db302b88fdb6/Python/" rel="nofollow noreferrer">hg.python.org/cpython/file/db302b88fdb6/Python</a> for a variety of internal implementations.</span>
<span class="comment-copy">That is helpful. One specific I want to know is the details about how  <b>init</b>.py files are used in the import process.</span>
<span class="comment-copy">Yes, this is what Ken said: the original question was how do you find the source code for such statements, from within Python? It seems nothing simple, as I wrote you'd basically need to build a grep functionality within Python.</span>
