<div class="post-text" itemprop="text">
<p>i have file on s3 that contains</p>
<pre><code>[{
        'address': 'Bramalea, L6T 0E2'
        'type': 'home'
      }, {
        'address': 'A, 46 Peel Drive, ASDF23'
        'type': 'office'
      }
}]
</code></pre>
<p>i just wanted to read <strong>addresses</strong> that has <strong>type</strong> <strong>office</strong> , can any body suggest me how i can iterate this data ? because its just a string
so far i am able to read this data </p>
<pre><code>conn = S3Connection(AWS_KEY, AWS_SECRET)
bucket = conn.get_bucket(BUCKET_NAME)
for key in bucket.list(DIR_Name):
    data =  key.get_contents_as_string()
    print data
</code></pre>
<p>i also tried reading data using json module </p>
<pre><code>data =  key.get_contents_as_string()
print json.loads(data)
</code></pre>
<p>its raising </p>
<pre><code>    print json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 326, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 382, in raw_decode
    obj, end = self.scan_once(s, idx)
ValueError: Expecting property name: line 2 column 5 (char 8)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was incorrect in my comment to your post. Do not use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> module to parse this file because this is not valid json. Valid json only uses double quotes around its strings - not single quotes. Instead, this looks like basic python literal structures (read: basic python data types). There is a method to safely do this with potentially untrusted sources. <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a> should be able to help you here.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is not necessary to use an other module. As this is a list of dictionaries, it is easy to keep only elements with <code>'type'</code> that are <code>'office'</code>:</p>
<pre><code>my_list = [{
    'address': 'aa, 46 Peel Centre Drive, A342',
    'type': 'home',
  }, {
    'address': 'a, 46 Peel Centre Drive, AS32',
    'type': 'office',
  }, {
    'address': 'b, 46 Peel Centre Drive, SD22',
    'type': 'home',
  }, {
    'address': 'c, 46 Peel Centre Drive, SD22',
    'type': 'home',
  }, {
    'address': 'd, 46 Peel Centre Drive, SSD222',
    'type': 'office',
  }]
addresses = [elem['address'] for elem in my_list if elem['type'] == 'office']
print addresses
</code></pre>
</div>
<span class="comment-copy">No need to be sorry for asking a question. However, you should really show what you've tried so far so that we know you've given your own question some thought. That being said, I would suggest reading about the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> module.</span>
<span class="comment-copy">Is this JSON data? It looks like it. You can use the <code>json</code> library to read in this file and then filter by whatever you want.</span>
<span class="comment-copy">@ubomb question updated</span>
<span class="comment-copy">This is an indirect approach, but you could have the script edit the file to add a <code>a =</code> in front of the first line.  This would make the file valid Python which you could them <code>import</code> into your script</span>
<span class="comment-copy">you have an extra <code>{</code> at the end of the list.</span>
