<div class="post-text" itemprop="text">
<p>I wrote some code based on what I read <a href="https://stackoverflow.com/questions/14594120/python-read-only-property">here</a>, <a href="https://stackoverflow.com/questions/9920677/how-should-i-expose-read-only-fields-from-python-classes">here</a>, and <a href="http://code.activestate.com/recipes/197965-simple-read-only-attributes-with-meta-class-progra/" rel="nofollow noreferrer">here</a>.</p>
<pre><code>#! /usr/bin/env python3

class ROSlotsType(type):
    def __new__(cls, name, bases, namespace, **kwds):
        roprops = namespace.pop("__roslots__")
        namespace["__slots__"] = tuple(("_" + propname) for propname in roprops)
        for propname in roprops:
            namespace[propname] = property(lambda self: getattr(self, "_" + propname)) # can't use self.__dict__ since it doesn't exist
        return type.__new__(cls, name, bases, namespace)

class Location(metaclass = ROSlotsType):
    __roslots__ = ["lat", "lon", "alt"]
    def __init__(self, lat, lon, alt = 0):
        self._lat = lat ; self._lon = lon ; self._alt = alt
    def __repr__(self):
        return "Location({}, {}, {})".format(self._lat, self._lon, self._alt)

place = Location(25.282, 82.956, 77.0)
print("Created object {}".format(place))

print("Accessing its attributes:", place.lat, place.lon, place.alt)

print("Trying to access its __dict__...")
try: place.__dict__
except:
    print("Caught exception; object has only __slots__: {}".format(place.__slots__))

print("Trying to set new property...")
try: place.name = "Varanasi"
except:
    print("Caught exception; cannot add new property")

print("Trying to modify read-only property...")
try: place.alt += 1
except:
    print("Caught exception; cannot modify read-only property")
</code></pre>
<p>Executing the above gives:</p>
<pre><code>Created object Location(25.282, 82.956, 77.0)
Accessing its attributes: 77.0 77.0 77.0
Trying to access its __dict__...
Caught exception; object has only __slots__: ('_lat', '_lon', '_alt')
Trying to set new property...
Caught exception; cannot add new property
Trying to modify read-only property...
Caught exception; cannot modify read-only property
</code></pre>
<p>The slots and read-only behaviour work fine, but apparently there is some problem with the property getters, since while <code>__repr__</code> which uses <code>_lat</code> and <code>_lon</code> directly is giving the correct values, the attribute accesses using <code>place.lat</code> and <code>place.lon</code> are instead giving the value of <code>place.alt</code>.</p>
<p>Please advise me on what is wrong with my code and how to fix it.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>lambda</code> here creates an anonymous function:</p>
<pre><code>namespace[propname] = property(lambda self: getattr(self, "_" + propname))
</code></pre>
<p>That function references <code>propname</code>, which is a local variable of the function in which it was defined.  Unfortunately, it's not copying the <code>propname</code> value at that momentâ€”it's keeping a <em>reference</em> to that <code>propname</code> variable, and once you get around to actually using that function, the <code>for</code> loop has completed and <code>propname</code> is left with the last value in <code>roprops</code>; namely, <code>alt</code>.</p>
<p>To fix this, you can use a somewhat-hacky-but-widely-recognized way of capturing it by value rather than by reference: create a parameter that shadows the other variable, but with a default value with the value you want:</p>
<pre><code>namespace[propname] = property(lambda self, propname=propname: getattr(self, "_" + propname))
</code></pre>
<p>As <a href="https://stackoverflow.com/questions/23707763/trying-to-create-read-only-slots-using-metaclasses/23707776?noredirect=1#comment36433265_23707776">Karl Knechtel mentions in the comments</a>, you can also use <a href="https://docs.python.org/3/library/operator.html#operator.attrgetter" rel="nofollow"><code>operator.attrgetter</code></a>, which eliminates the hacky bits altogether:</p>
<pre><code>namespace[propname] = property(operator.attrgetter('_' + propname))
</code></pre>
<p>Lastly, as your question was originally posted on Code Review, I'd note that you should probably run your code through <a href="https://pypi.python.org/pypi/pep8" rel="nofollow"><code>pep8</code></a>.</p>
</div>
<span class="comment-copy">In this particular case, might I suggest <code>namespace[propname] = property(operator.attrgetter('_' + propname))</code>? It's also worth mentioning <code>functools.partial</code> here, although unfortunately it's not the first argument we want to bind this time.</span>
