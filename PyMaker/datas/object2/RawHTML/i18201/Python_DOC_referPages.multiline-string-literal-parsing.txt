<div class="post-text" itemprop="text">
<p>I have tried the following in Python's Interactive console:</p>
<pre><code>&gt;&gt;&gt; """"string"""
'"string'
&gt;&gt;&gt; """"string""""
SyntaxError: EOL while scanning string literal
</code></pre>
<p>I expect the latter case <code>""""string""""</code> to return <code>'"string"'</code> because I have three quotes at the start and three quotes at the end. How does Python interpret it?</p>
</div>
<div class="post-text" itemprop="text">
<p>It sees the triple-quoted string <code>""""string"""</code>, followed by a non-triple-quoted string that doesn't complete by EOL, <code>"</code>.</p>
<p>The <a href="http://docs.python.org/3/library/tokenize.html" rel="nofollow">tokenize</a> module can show you what it's doing:</p>
<pre><code>s = '""""string""""'
g = tokenize.generate_tokens(io.StringIO(s).readline)
t = list(g)
print(t)
</code></pre>
<p>This prints a STRING token with <code>'""""string"""'</code>, then an ERRORTOKEN token with <code>'"'</code>.</p>
<p>In general, the best way of answering any question like this when you can't figure out how to interpret <a href="http://docs.python.org/3.3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">the grammar</a> (I assume you looked at the grammar first?) is to use tokenize, ast, and friends.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python is interpreting it as:</p>
<pre><code> """"string""" "                                                                                                                   "
#^^^These three " to start the string literal. The next one counts in the string.
#The three last ones after the last one are counted as the end.
</code></pre>
<p>Notice the straying <code>"</code>.</p>
<p>You can just do:</p>
<pre><code>'''"string"'''
</code></pre>
</div>
<span class="comment-copy">Because Python parses from left to right; it does not look for the end of a string from right to left.</span>
