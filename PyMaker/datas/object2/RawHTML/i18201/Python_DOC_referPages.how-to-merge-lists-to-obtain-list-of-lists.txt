<div class="post-text" itemprop="text">
<p>I want to merge three lists in a specific way.<br/>
Consider the lists:</p>
<pre><code>a = [ a1 , a2 , a3 , a4 ]
b = [ b1 , b2 , b3 , b4 ]
c = [ c1 , c2 , c3 , c4 ]
</code></pre>
<p>And finally, I want to obtain a list of lists:</p>
<pre><code>res = [[a1,b1,c1],[a2,b2,c2]....[a4,b4,c4]]
</code></pre>
<p>I'm a newbie in Python. Can someone help me out?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try <a href="http://docs.python.org/2/library/functions.html#zip"><code>zip()</code></a>:</p>
<p>Python 2.x:</p>
<pre><code>&gt;&gt;&gt; a = [ 'a1' , 'a2' , 'a3' , 'a4' ]
&gt;&gt;&gt; b = [ 'b1' , 'b2' , 'b3' , 'b4' ]
&gt;&gt;&gt; c = [ 'c1' , 'c2' , 'c3' , 'c4' ]
&gt;&gt;&gt;
&gt;&gt;&gt; map(list, zip(a,b,c))
[['a1', 'b1', 'c1'], ['a2', 'b2', 'c2'], ['a3', 'b3', 'c3'], ['a4', 'b4', 'c4']]
</code></pre>
<p>Python 3.x:</p>
<pre><code>&gt;&gt;&gt; a = [ 'a1' , 'a2' , 'a3' , 'a4' ]
&gt;&gt;&gt; b = [ 'b1' , 'b2' , 'b3' , 'b4' ]
&gt;&gt;&gt; c = [ 'c1' , 'c2' , 'c3' , 'c4' ]
&gt;&gt;&gt; 
&gt;&gt;&gt; [list(t) for t in zip(a,b,c)]
[['a1', 'b1', 'c1'], ['a2', 'b2', 'c2'], ['a3', 'b3', 'c3'], ['a4', 'b4', 'c4']]
</code></pre>
<p>The 3.x version also works as expected in 2.x, but I always like to use <code>map</code> where I easily can. The reason the 2.x version doesn't work as expected in 3.x is because <code>zip()</code> and <code>map()</code> were both changed to return iterators.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<p><code>x = zip(listA, listB, listC)</code> </p>
<p>Python is beautiful like that.  Now this will give you tuples, not lists within your list.  Converting from tuple to list requires a <code>y = list(x)</code> call.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[1,2,3]
b=[4,5,6]
c=[7,8,8]

print zip(*[a,b,c])

[(1, 4, 7), (2, 5, 8), (3, 6, 8)]
</code></pre>
</div>
<span class="comment-copy">Perhaps the built-in function <a href="http://docs.python.org/3/library/functions.html?highlight=zip#zip" rel="nofollow noreferrer">zip</a> will be useful to you.</span>
<span class="comment-copy">What Python version is this?</span>
<span class="comment-copy">What are those <code>a1</code>, <code>a2</code>, etc.? Do you really have 12 variables with those names lying around? Or did you want the strings <code>'a1', 'a2', â€¦</code>?</span>
<span class="comment-copy">What is with the <code>*[a, b, c]</code>... Just type it out normally? :P</span>
<span class="comment-copy">zip(*[a, b, c]) is the same as zip(a, b, c).</span>
<span class="comment-copy">@Guetti I am aware of that - let me rephrase - why would you suggest creating a list and unpacking it over <code>zip(a, b, c)</code>?</span>
<span class="comment-copy">If you really want to use asterisks, wouldn't <code>(lambda *x: zip(*x))(*[a,b,c])</code> be more fun?</span>
<span class="comment-copy">@abarnert At that stage of anti-golf - we should start trying to throw some recursion in there... that's even more fun</span>
