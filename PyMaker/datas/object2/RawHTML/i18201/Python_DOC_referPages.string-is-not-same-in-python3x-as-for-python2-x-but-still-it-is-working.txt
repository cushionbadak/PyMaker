<div class="post-text" itemprop="text">
<p>I am confused with the strings in Python,</p>
<p>Consider this code,</p>
<pre><code>fo = open("test.txt", "wb")
fo.write(bytes('Sufiyan','UTF-8'))
</code></pre>
<p>If I were to run this code, It would give this error,</p>
<blockquote>
<pre><code>Traceback (most recent call last):

  File "C:\Users\Sufiyan\Desktop\AES\a.py", line 2, in &lt;module&gt;

    fo.write('Sufiyan')

TypeError: 'str' does not support the buffer interface
</code></pre>
</blockquote>
<p>Therefore, I have to convert it into <code>bytes</code> and provide the encoding type.</p>
<pre><code>fo = open("test.txt", "wb")
fo.write(bytes('Sufiyan','UTF-8'))
</code></pre>
<p>This works, because If you use Python3x then string is not the same type as for Python 2.x, you must cast it to bytes (encode it).</p>
<p>Now, When I am using this code to write to a file,</p>
<pre><code>def BB_cf(file, *args, **kwargs): #Create files

    try:

        fo = open(file)
        fo.close()

    except IOError:

        print (file, 'not Found')
        print ("Creating file.....")
        fo = open(file, "w")
        print (file,"Created Successfully!")

        if file == 'input_Data.txt':
            print(file,"is Empty..\nWriting Data..")
            text = kwargs.get('text', None)
            fo.write(text)
            print("'"+text+"'", "is written in",file)
            fo.close()

        fo.close()
</code></pre>
<p>.</p>
<pre><code>BB_cf('input_Data.txt', text='Sufiyan Ghori')
</code></pre>
<p>As you can see in the 4th last line, <code>fo.write(text)</code>, I haven't encoded it, but the code is still working. </p>
<p>Why the code is working without encoding it ?</p>
<p>Now if I cast it to <code>bytes</code>, It will give the following error,</p>
<p>Traceback (most recent call last):</p>
<blockquote>
<p>File "C:\Users\Sufiyan\Desktop\AES\BlackBox.py", line 47, in</p>
<p></p>
<pre><code>BB_cf('input_Data.txt', text='Sufiyan Ghori')   File 
</code></pre>
<p>"C:\Users\Sufiyan\Desktop\AES\BlackBox.py", line 41, in BB_cf</p>
<pre><code>fo.write(bytes(text,'UTF-8')) TypeError: must be str, not bytes
</code></pre>
</blockquote>
<p>Both the above codes are running using Python3x, 
The first one wants me to encode the <code>string</code> into <code>Bytes</code> while the 2nd one is running without encoding.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first time around, you open your file by doing <code>fo = open("test.txt", "wb")</code>. The second time, you do <code>fo = open(file, "w")</code>. The string <code>"wb"</code> indicates to Python that you want to write to the file using only bytes, instead of strings, whereas the string <code>"w"</code> in your second example states the reverse.</p>
<p>Specifically, the documentation for the <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow">open</a> function states:</p>
<blockquote>
<p>As mentioned in the Overview, <strong>Python distinguishes between binary and text I/O</strong>. Files opened in binary mode (including 'b' in the mode argument) <strong>return contents as bytes objects</strong> without any decoding. In text mode (the default, or when 't' is included in the mode argument), <strong>the contents of the file are returned as str</strong>, the bytes having been first decoded using a platform-dependent encoding or using the specified encoding if given.</p>
</blockquote>
<p>(emphasis added by me)</p>
</div>
<span class="comment-copy">I see that, But If I first convert the string into bytearray and write it into the file with "wb" , shouldn't it work then too without encoding it into bytes?</span>
<span class="comment-copy">@Xufyan: Yes, it should. Does this not actually work or something? The only difference between <code>bytes</code> and <code>bytearray</code> is that the latter is mutable (you can write into it). They both have the same byte-level contents.</span>
