<div class="post-text" itemprop="text">
<p>I have a list of cities, each city has a name, a true or false value and then another list with cities it is connected to. How do I write a function in Python to say True if all the cities are True and False is not all of them are True?</p>
<p>Here is how my cities were made:</p>
<pre><code>def set_up_cities(names=['City 0', 'City 1', 'City 2', 'City 3', 'City 4', 'City 5', 'City 6', 'City 7', 'City 8', 'City 9', 'City 10', 'City 11', 'City 12', 'City 13', 'City 14', 'City 15']):
    """
    Set up a collection of cities (world) for our simulator.
    Each city is a 3 element list, and our world will be a list of cities.

    :param names: A list with the names of the cities in the world.

    :return: a list of cities
    """

    # Make an adjacency matrix describing how all the cities are connected.
    con = make_connections(len(names))

    # Add each city to the list
    city_list = []
    for n in enumerate(names):
        city_list += [ make_city(n[1],con[n[0]]) ]

    return city_list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe you simply want <a href="http://docs.python.org/3/library/functions.html#all"><code>all()</code></a>:</p>
<pre><code>all(city.bool_value for city in city_list)
</code></pre>
<hr/>
<blockquote>
<p><code><b>all</b></code>(</p></blockquote></div>
<div class="post-text" itemprop="text">
<p>Use the built-in <code>all</code></p>
<pre><code>all(city.isTrue for city in city_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i don't know exactly which variable holds the 3-item list, but basically:</p>
<pre><code>alltrue = all(x[1] for x in all_my_cities)
</code></pre>
<p>the list comprehension just grabs all the booleans, and <code>all</code> returns true for an iterable if all items are true.</p>
<p>edit: changed to generator form.</p>
</div>
<span class="comment-copy">Try <a href="http://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">the <code>all()</code> function</a>.</span>
<span class="comment-copy">I wouldn't use a list as a default argument, and certainly not such a long one.</span>
<span class="comment-copy">Psst â€“ drop the square brackets to make an iterator.</span>
