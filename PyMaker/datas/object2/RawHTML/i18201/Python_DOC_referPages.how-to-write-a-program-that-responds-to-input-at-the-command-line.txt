<div class="post-text" itemprop="text">
<p>I would like to write a program that responds to inputs from the command line. Typically, I will start the program from the command line:</p>
<pre><code>c:\&gt;python my_responder.py
</code></pre>
<p>It will then give me a prompt:</p>
<pre><code>responder&gt; Hello. Please type your question.
responder&gt; _
</code></pre>
<p>I will then type something, and hit enter:</p>
<pre><code>responder&gt; How many days are there in one week?
</code></pre>
<p>The responder will then reply with the result of a function (the input of which is the typed string). e.g.</p>
<pre><code>def respond_to_input(input):
    return 'You said: "{}". Please type something else.'.format(input)

responder&gt; You said: "How many days are there in one week?". Please type something else.
</code></pre>
<p>I cannot seem to connect this kind of command line input / output to a function in python. </p>
<p><em>Additional Info:</em> I have no understanding of stdin/stdout, and they feel relevant. I also have no understanding of how to get Python to interact with command line in general (other than running one python program that can print to the window).</p>
</div>
<div class="post-text" itemprop="text">
<p>Apart from raw_input() there is also the sys.argv list, (<a href="http://docs.python.org/2/tutorial/interpreter.html#argument-passing" rel="nofollow">http://docs.python.org/2/tutorial/interpreter.html#argument-passing</a>) which is pretty useful:</p>
<pre><code>from __future__ import print_function    # Only needed in python2.
from sys import argv as cli_args

def print_cli_args():
    print(*cli_args[1:])


print_cli_args()
</code></pre>
<p>You would save it in a file, lets say echo.py and run it like this in the shell:</p>
<pre><code>$ python2 echo.py Hello, World!
</code></pre>
<p>And it would print to stdout:</p>
<pre><code>Hello, World!
</code></pre>
</div>
<span class="comment-copy"><a href="http://www.tutorialspoint.com/python/python_command_line_arguments.htm" rel="nofollow noreferrer">tutorialspoint.com/python/python_command_line_arguments.htm</a></span>
<span class="comment-copy">You should use <code>raw_input("please enter input:")</code> where you want to get your input.</span>
<span class="comment-copy">"I cannot seem to connect this kind of command line input / output to a function in python." - Flagged as off topic because you didn't do research. Just googling <code>python input</code> would have led you to multiple resources which would all solve your problem, starting with <a href="http://stackoverflow.com/questions/70797/python-and-user-input">this SO question</a></span>
<span class="comment-copy">"you didn't do your research" is accusatory and incorrect. There is no reason why I should know what to google, and then what to search for. You should be more considerate to people that come here looking for help. We are not all as experienced as you, and I'm sure you are not top of this field either. Have some respect for others.</span>
<span class="comment-copy">@cammil: It might indeed be hard to find with Google if you don't know what to search for. On the other hand it's easy to learn Python basics - for these are absolute basics - with the <a href="http://docs.python.org/3/tutorial/" rel="nofollow noreferrer">official tutorial</a>.</span>
