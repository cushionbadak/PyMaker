<div class="post-text" itemprop="text">
<p>Many times in my Python code, I will find myself doing something like:</p>
<pre><code>foo = something()
bar = something()
baz = something()

if not foo and not bar and not baz:
    raise SomeException
else:
    do_something(foo, bar, baz)
</code></pre>
<p>I want to know if there is a more Pythonic solution to check if the variable has a non-falsey value.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code></a>, swapping your if and else clauses:</p>
<pre><code>if any((foo, bar, baz)):
    do_something(foo, bar, baz)
else:
    raise SomeException
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Technically you're not checking for existence, you're checking for a non-falsey value (you'd get a <code>NameError</code> if the variable didn't exist).</p>
<p>That said, you could try this:</p>
<pre><code>if any((foo, bar, baz)):
    do_something(foo, bar, baz)
else:
    raise SomeException
</code></pre>
<p>or this:</p>
<pre><code>if not all((foo, bar, baz)):
    raise SomeException
else:
    do_something(foo, bar, baz)
</code></pre>
<p>depending on what you actually want, semantically.</p>
</div>
<span class="comment-copy">If you're checking if they exist at all, then you should catch <code>AttributeError</code>: <code>try: do_something(foo, bar, baz); except AttributeError: # handle</code>. That may not be what you're doing though.</span>
<span class="comment-copy">@WaleedKhan -- or <code>NameError</code></span>
<span class="comment-copy">When speaking of variables, "are defined" generally means "is bound" (i.e. can be <i>accessed</i> without raising a NameError) - this is different from "has non false value" where the variables "are defined".</span>
<span class="comment-copy">Sorry, I meant to check whether a variable is a non-falsey value.</span>
<span class="comment-copy"><code>any()</code> and <code>all()</code> take 1 argument.</span>
<span class="comment-copy">@arshajii good catch</span>
