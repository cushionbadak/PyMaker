<div class="post-text" itemprop="text">
<p>I'm trying to read a number from file and convert it to int in order to compare it to a value, but I'm getting this error:</p>
<blockquote>
<p>ValueError: invalid literal for <code>int()</code> with base 10: <code>\xef\xbb\xbf10</code></p>
</blockquote>
<p>I do something like this:</p>
<pre><code>def check_id(str_id)
    csvfile = file('strings.csv')
    for csvline in csvfile:
        parts = csvline.split('|')
        if int(parts[0]) == str_id:
            print "id found"
</code></pre>
<p>The file inside is like a table (it's a CSV file) and inside, it looks like this:</p>
<pre class="lang-none prettyprint-override"><code>10|item 10|description|information|price
</code></pre>
<p>This is one line of the file; there are more lines with several IDs, so I want to see if an ID exists in file.</p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you encounter at some point is the <a href="https://en.wikipedia.org/wiki/Byte_Order_Mark" rel="nofollow">BOM (Byte Order Mark)</a>, $EF $BB $BF.</p>
<p>You are trying to be smarter than Python. Python has a <a href="http://docs.python.org/3/library/csv.html" rel="nofollow">csv module</a> that will do the CSV parsing properly; use it instead of tinkering your own half-baked parser.</p>
</div>
<span class="comment-copy">This still doesn't solve the problem, it seems like encoding problem. opening the csv file with csv module and reading first column still gave me same error.</span>
<span class="comment-copy">The remove the BOM yourself before feeding the data into the csv parser</span>
<span class="comment-copy">found the problem, you were right. thanks alot for the help</span>
<span class="comment-copy">I have removed the the BOM over Notepad 'Code' menu then it worked.</span>
