<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3306518/cannot-pass-an-argument-to-python-with-usr-bin-env-python">Cannot pass an argument to python with “#!/usr/bin/env python”</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I have this non-portable shebang:</p>
<pre><code>#!/usr/bin/env python -u
</code></pre>
<p>It is non portable because <code>python -u</code> is fed as one single arg to <code>env</code> on my system.</p>
<p>Challenge: make this shebang portable <strong>changing the shebang only</strong> - that is to say a <strong>one-liner</strong>.</p>
<p>In other words, no solutions</p>
<ul>
<li>from the question <a href="https://stackoverflow.com/questions/107705/python-output-buffering">Disable output buffering</a></li>
<li>from the question <a href="https://stackoverflow.com/questions/3306518/cannot-pass-an-argument-to-python-with-usr-bin-env-python">Cannot pass an argument to python with "#!/usr/bin/env python"</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I'd use the following:</p>
<pre><code>#!/bin/sh
"""true"
exec python -u "$0" "$@"
"""
# python code goes here
</code></pre>
<p>The line <code>"""true"</code> will be parsed by <code>sh</code> as <code>true</code>, because it consists of an empty <code>""</code> string followed by <code>"true"</code>. Since <code>true</code> is a no-op command, it will be effectively ignored, and the following line will execute the Python interpreter.</p>
<p>On the other hand, Python will parse the <code>"""true"</code> line very differently, as the opening of a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">triple-quoted string</a> which starts with <code>true"</code> and is closed two lines below. Since the string is not used for anything, the Python interpreter will effectively ignore the shell snippet that starts up Python. It is the difference in interpretation of <code>"""xxx"</code> that allows Python and <code>sh</code> code coexist in the same script.</p>
<p>For a simple test, append something like:</p>
<pre><code>import sys
print "hello!", sys.argv
</code></pre>
<p>Given a reasonable <code>sh</code> implementation (and taking into account the time to start Python), this should not be measurably slower than using <code>env</code>.</p>
</div>
<span class="comment-copy">I asked for a solution involving the shebang line only, not a multi-line solution.</span>
<span class="comment-copy">dats pretty cute</span>
<span class="comment-copy">+1 That's dirty, but somehow satisfying</span>
<span class="comment-copy">One drawback is that the hack will be treated as part of (if not the entirety) of the script's docstring.</span>
<span class="comment-copy">@chepner Is this a problem in practice? Docstrings of importable modules are quite useful, but I can't think of a use for docstrings in executable scripts.</span>
<span class="comment-copy"><code>pydoc</code> displays the contents of the module docstring as the description of the script.</span>
