<div class="post-text" itemprop="text">
<p>Are there any other allowed characters in Python function names except alphabetical characters, numbers, and underscores? If yes, what are they? </p>
</div>
<div class="post-text" itemprop="text">
<p>Not in Python 2.x. From <a href="http://docs.python.org/2/reference/lexical_analysis.html#grammar-token-identifier" rel="noreferrer">the docs</a>:</p>
<pre><code>identifier ::=  (letter|"_") (letter | digit | "_")*
letter     ::=  lowercase | uppercase
lowercase  ::=  "a"..."z"
uppercase  ::=  "A"..."Z"
digit      ::=  "0"..."9"
</code></pre>
<p><a href="http://docs.python.org/3/reference/lexical_analysis.html#grammar-token-identifier" rel="noreferrer">In Python 3 it's expanded</a>:</p>
<pre><code>identifier   ::=  xid_start xid_continue*
id_start     ::=  &lt;all characters in general categories Lu, Ll, Lt, Lm, Lo, Nl, 
                   the underscore, and characters with the Other_ID_Start property&gt;
id_continue  ::=  &lt;all characters in id_start, plus characters in the categories 
                   Mn, Mc, Nd, Pc and others with the Other_ID_Continue property&gt;
xid_start    ::=  &lt;all characters in id_start whose NFKC normalization 
                   is in "id_start xid_continue*"&gt;
xid_continue ::=  &lt;all characters in id_continue whose NFKC normalization 
                   is in "id_continue*"&gt;

The Unicode category codes mentioned above stand for:

Lu - uppercase letters
Ll - lowercase letters
Lt - titlecase letters
Lm - modifier letters
Lo - other letters
Nl - letter numbers
Mn - nonspacing marks
Mc - spacing combining marks
Nd - decimal numbers
Pc - connector punctuations
Other_ID_Start - explicit list of characters in PropList.txt 
                 to support backwards compatibility
Other_ID_Continue - likewise
</code></pre>
</div>
<span class="comment-copy">google it: <a href="http://www.pasteur.fr/formation/infobio/python/ch02s03.html" rel="nofollow noreferrer">pasteur.fr/formation/infobio/python/ch02s03.html</a></span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/10120295/valid-characters-in-a-python-class-name">Valid characters in a python class name</a></span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/159720/what-is-the-naming-convention-in-python-for-variable-and-function-names">What is the naming convention in Python for variable and function names?</a></span>
<span class="comment-copy">@danny Conventional != allowed.</span>
<span class="comment-copy">@delnan you are right.</span>
<span class="comment-copy">Point to any version of the Python 3.x docs, and the answer is yes :) eg: <a href="http://docs.python.org/3.2/reference/lexical_analysis.html#identifiers" rel="nofollow noreferrer">docs.python.org/3.2/reference/lexical_analysis.html#identifiers</a></span>
<span class="comment-copy">@JonClements D'oh! Edited.</span>
