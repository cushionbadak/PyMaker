<div class="post-text" itemprop="text">
<p>I have some code to open and search through a folder full of pdfs. I'm using pdfminer to do the pdf conversion. But, some of my pdfs are not readable. I want my code to process those pdfs where the conversion works, and effectively skip over those pdfs where the conversion fails.</p>
<p>I'm trying to use the try/except feature, but it doesn't seem to be working. For the pdfs that fail, the exception works. But, for the pdfs where the conversion works, both the try and exception blocks are executed.</p>
<p>Here's my code:</p>
<pre><code>fileNum = 0
d = shelve.open('PyDocSearch.db')
for file in fileList:
    fileNum += 1
    z = []
    try:
        doc = convert_pdf(filePath + '/' + file)
        print 'Success:',file
        docWords = doc.split()
        x = Counter(docWords)
        y = x.most_common()
        for i,j in enumerate(y):
            if j[0] not in commonWords:
                z.append(j)
        d[file] = z
    except:
        doc = 'fail'
        print 'Fail:',file
        d[file] = doc
d.close()
</code></pre>
<p>When the pdf conversion works, why are both blocks being executed? And, how can I prevent this from happening? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>One thing you can do is you can use the <code>else</code> clause of <code>try ... except ...</code> to execute code only if no exceptions were raised:</p>
<pre><code>fileNum = 0
d = shelve.open('PyDocSearch.db')
for file in fileList:
    fileNum += 1
    z = []
    try:
        doc = convert_pdf(filePath + '/' + file)
    except:
        doc = 'fail'
        print 'Fail:',file
        d[file] = doc
    else:
        print 'Success:',file
        docWords = doc.split()
        x = Counter(docWords)
        y = x.most_common()
        for i,j in enumerate(y):
            if j[0] not in commonWords:
                z.append(j)
        d[file] = z
d.close()
</code></pre>
<p>The code in the <code>else</code> block is only executed if the code in the <code>try</code> block completes without raising an exception.  If an exception gets raised in the <code>else</code> block, the <code>except</code> clause does <em>not</em> handle it.</p>
<p>As others have said, using <code>except</code> on its own is bad practice.  The exceptions you're getting are quite probably trying to tell you something helpful about why your program is going wrong, but by using a 'bare' <code>except</code> you are sticking your fingers in your ears and saying 'la la la can't hear you' to Python's attempts to help you.</p>
<p>Generally it's good practice to only handle exceptions you are expecting.  If you know that your PDF library raises <code>SomePDFException</code> if something goes wrong, it would be better to write</p>
<pre><code>    except SomePDFException as e:
</code></pre>
<p>instead of </p>
<pre><code>    except:
</code></pre>
<p>However, if you don't know the type, you can catch most<sup>1</sup> exceptions with the following:</p>
<pre><code>    except Exception as e:
        print "Got exception of type %s:" % type(e)
        print e
</code></pre>
<p>This then tells you the type of exception raised, and the message.</p>
<p><sup>1</sup>There are a few exceptions that do not inherit from <code>Exception</code>, namely <code>SystemExit</code>, <code>KeyboardInterrupt</code> and <code>GeneratorExit</code> (documentation: <a href="http://docs.python.org/2/library/exceptions.html#exception-hierarchy" rel="nofollow">Python 2</a>, <a href="http://docs.python.org/3/library/exceptions.html#exception-hierarchy" rel="nofollow">Python 3</a>).  I would be surprised if you are getting one of these, and I would hope the PDF library you are using follows the Python guidance by deriving its exceptions from <code>Exception</code> rather than <code>BaseException</code>.</p>
</div>
<span class="comment-copy">For starters, don't use a bare <code>except</code> block, but specify what kinds of exceptions you want to catch.  Then you'll narrow down the cases where the <code>except</code> is executed.</span>
<span class="comment-copy">Your catch-all except will run for <i>any</i> exception. You really don't know if it's due to the conversion failure or something else from the try block.</span>
<span class="comment-copy">Ok, that makes sense. How can I catch an exception for when the pdf conversion fails?</span>
<span class="comment-copy">Also, only wrap as much code in the <code>try</code> as you are actually testing for exceptions. Move everything else below the <code>except</code>.</span>
<span class="comment-copy">When a conversion fails, what exception does it raise?</span>
