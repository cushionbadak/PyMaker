<div class="post-text" itemprop="text">
<p>Is there an easy way to compute the element-wise sum of N lists in python? I know if we have n lists <em>defined</em> (call the ith list <code>c_i</code>), we can do:</p>
<pre><code>z = [sum(x) for x in zip(c_1, c_2, ...)]
</code></pre>
<p>For example:</p>
<pre><code>c1 = [1,2]
c2 = [3,4]
c3 = [5,6]
z  = [sum(x) for x in zip(c1,c2,c3)]
</code></pre>
<p>Here <code>z = [9, 12]</code></p>
<p>But what if we don't have <code>c_i</code> defined and instead have <code>c_1...c_n</code> in a list <code>C</code>? </p>
<p>Is there a similar way to find <code>z</code> if we just have <code>C</code>?</p>
<p>I hope this is clear.</p>
<p>resolved: I was wondering what the * operator was all about...thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just do this:</p>
<pre><code>[sum(x) for x in zip(*C)]
</code></pre>
<p>In the above, <code>C</code> is the list of <code>c_1...c_n</code>. As explained in the <a href="https://stackoverflow.com/questions/5239856/foggy-on-asterisk-in-python">link</a> in the comments (thanks, @kevinsa5!):</p>
<blockquote>
<p><code>*</code> is the "splat" operator: It takes a list as input, and expands it into actual positional arguments in the function call.</p>
</blockquote>
<p>For additional details, take a look at the <a href="http://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="noreferrer">documentation</a>, under "unpacking argument lists" and also read about <a href="http://docs.python.org/3/reference/expressions.html#calls" rel="noreferrer">calls</a> (thanks, @abarnert!)</p>
</div>
<div class="post-text" itemprop="text">
<p>This isn't all that different from Óscar López's answer, but uses <code>itertools.imap</code> instead of a list comprehension.</p>
<pre><code>from itertools import imap
list(imap(sum, zip(*C))
</code></pre>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/5239856/foggy-on-asterisk-in-python" title="foggy on asterisk in python">stackoverflow.com/questions/5239856/foggy-on-asterisk-in-python</a> Shows what the asterisk does. I didn't know that was a thing.</span>
<span class="comment-copy">Didn't some spoilsport go through and remove all references to the name "splat" anywhere in the docs somewhere around 2.5 or 2.6/3.0? Anyway, the tutorial section is <a href="http://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">"Unpacking Argument Lists"</a>, and the reference is <a href="http://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">Calls</a>.</span>
<span class="comment-copy">Very nice and pythonic!</span>
<span class="comment-copy">does this only work for integers and because it breaks when I try it with floats.</span>
<span class="comment-copy">@Roshini of course it works with floats, you must be doing something wrong, it's just an addition! check the way you're building the input lists.</span>
<span class="comment-copy">works only for Python 2, <code>imap</code> was removed in Python 3</span>
