<div class="post-text" itemprop="text">
<p>I've got to find the images in a html source code. I'm using regex instead of html.parser because I know it better, but if you can explain to me how to use html parsing like you would a child, I'll be happy to go down that road too.</p>
<p>Can't use beautifulsoup, wish I could, but I got to learn to do this the hard way.</p>
<p>I've read through a lot of questions and answers on here on regex and html (<a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454">example</a>) so I'm aware of the feelings on this topic.</p>
<p>But hear me out!</p>
<p>Here's my coding attempt (Python 3):</p>
<pre><code>import urllib.request
import re

website = urllib.request.urlopen('http://google.com')
html = website.read()
pat = re.compile (r'&lt;img [^&gt;]*src="([^"]+)')
img = pat.findall(html)
</code></pre>
<p>I double checked my regex on regex101.com and it works at finding the img link, but when I run it on IDLE, I get a syntax error and keeps highlighting the caret. Why?</p>
<p>I'm headed in the right direction... yes?</p>
<p>update:
Hi, I was thinking may be I get short quick answer, but it seems I may touched a nerve in the community. </p>
<p>I am definitely new and terrible at programming, no way around that. I've been reading all the comments and I really appreciate all the help and patience users have shown me. </p>
</div>
<div class="post-text" itemprop="text">
<p>There is nothing wrong with the regex, you are missing two things:</p>
<ol>
<li>Python does not have a regex type, so you have to wrap it in a string. Use a <code>raw</code> string so that the string is passed as-is to the regex compiler, without any escape interpretation</li>
<li>The result of the <code>.read()</code> call is a byte sequence, not a string. So you need a <em>byte sequence</em> regex.</li>
</ol>
<p>The second one is Python3-specific (and I see that you are using Py3)</p>
<p>Putting all together, just fix the aforementioned line like this:</p>
<pre><code>pat = re.compile (rb'&lt;img [^&gt;]*src="([^"]+)')
</code></pre>
<p><code>r</code> stands for raw and <code>b</code> for byte sequence.</p>
<p>Additionally, test on a website that actually embeds images in <code>&lt;img&gt;</code> tags, like <a href="http://stackoverflow.com">http://stackoverflow.com</a>. You will not find anything when processing <a href="http://google.com" rel="nofollow">http://google.com</a></p>
<p>Here we go:</p>
<pre><code>Python 3.3.2+
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import urllib.request
&gt;&gt;&gt; import re
&gt;&gt;&gt; website = urllib.request.urlopen('http://stackoverflow.com/')
&gt;&gt;&gt; html = website.read()
&gt;&gt;&gt; pat = re.compile (rb'&lt;img [^&gt;]*src="([^"]+)')
&gt;&gt;&gt; img = pat.findall(html)
&gt;&gt;&gt; img
[b'http://i.stack.imgur.com/tKsDb.png', b'http://i.stack.imgur.com/dmHl0.png', b'http://i.stack.imgur.com/dmHl0.png', b'http://i.stack.imgur.com/tKsDb.png', b'http://i.stack.imgur.com/6QN0y.png', b'http://i.stack.imgur.com/tKsDb.png', b'http://i.stack.imgur.com/L8rHf.png', b'http://i.stack.imgur.com/tKsDb.png', b'http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using <code>urllib</code>, I used <code>requests</code>, you can download it from <a href="http://docs.python-requests.org/en/latest/user/install/" rel="nofollow">here</a>. They do the same thing, I just like <code>requests</code> better since it has a better API. The regex string is only slightly changed. <code>\s</code> is just added in case there are a few whites spaces before the <code>img</code> tag. You <em>were</em> headed in the right direction. You can find out more about the <code>re</code> module <a href="http://docs.python.org/3/library/re.html" rel="nofollow">here</a>.</p>
<p>Here is the code</p>
<pre><code>import requests
import re

website = requests.get('http://stackoverflow.com//')
html = website.text
pat = re.compile(r'&lt;\s*img [^&gt;]*src="([^"]+)')
img = pat.findall(html)

print img
</code></pre>
<p>And the output:</p>
<pre><code>[u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/L8rHf.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/Ryr18.png', u'http://i.stack.imgur.com/ASf0H.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/Ryr18.png', u'http://i.stack.imgur.com/VgvXl.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/tKsDb.png', u'http://i.stack.imgur.com/6QN0y.png', u'http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>re.compile (r'&lt;img [^&gt;]*src="([^"]+)')</code></p>
<p>you are missing the quotation marks (single or double) around the pattern</p>
</div>
<span class="comment-copy">You're getting a syntax error because... this is invalid syntax (hint: <code>re.compile</code> expects a string). But you should just take a look at the BeautifulSoup html parser, there's enough examples on here and elsewhere that should get you started.</span>
<span class="comment-copy">@user2799617 The person has asked a valid question, showed us what he's tried, and checked it on regex101 (which we need a link of). I highly doubt that he has done <i>anything</i> wrong.</span>
<span class="comment-copy">@pythonintraining For the gz issue, I guess you're using Windows. Install a utility like 7Zip.</span>
<span class="comment-copy">@user2799617 <a href="http://stackoverflow.com/a/1733489/1424875">Not always</a>.</span>
<span class="comment-copy">hey user2799617, you don't need to ride me, i already ride myself hard enough. i thought the point of stackoverflow was to help people like me, go to reddit or craigslist if you want to keep on ranting.</span>
<span class="comment-copy">Thanks! I knew I was close!</span>
<span class="comment-copy">I will add one suggestion. This answer is good. The question would have been valid without any code to retrieve a web page. In the future, it might be worthwhile to make a function that finds what you want from a string or array of bytes. Then the function has only a single concern, finding a list of images.</span>
<span class="comment-copy">"and just to be sure it's good to escape quotation marks within the expresion" - what? That's more than wrong in this case...</span>
<span class="comment-copy">agreed, but thanks for catching the missing quotation marks. now my error reads as:  TypeError: can't use a string pattern on a bytes-like object</span>
<span class="comment-copy">it's a general remark regarding regex. in his case of parsing html he should catch both single and double quotation marks, but that is his job to do</span>
<span class="comment-copy">@mislav do you know what the <code>r</code> in front of the string means? "escaping" the quotation marks should only be done if they actually need to be escaped. Your regex matches <code>\"</code> instead of just the <code>"</code>.</span>
<span class="comment-copy">i'm changing the answer just not do derail someone in the future to just include the remark about the missing quotes. worrying about quotes inside the regex for html is a whole new issue</span>
