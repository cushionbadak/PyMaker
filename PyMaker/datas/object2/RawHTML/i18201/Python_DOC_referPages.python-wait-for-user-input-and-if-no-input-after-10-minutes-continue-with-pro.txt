<div class="post-text" itemprop="text">
<p>I tried: </p>
<pre><code>from time import sleep
while sleep(3): 
    input("Press enter to continue.") 
</code></pre>
<p>But it doesn't seem to work. I want the program to await user input, but if there's no user input after 10 minutes, continue with the program anyway. </p>
<p>This is with python 3. </p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Why does the code not work?</strong></p>
<p><code>time.sleep</code> returns nothing; the value of the <code>time.sleep(..)</code> become <code>None</code>; <code>while</code> loop body is not executed.</p>
<p><strong>How to solve it</strong></p>
<p>If you're on Unix, you can use <a href="http://docs.python.org/2/library/select.html" rel="nofollow"><code>select.select</code></a>.</p>
<pre><code>import select
import sys

print('Press enter to continue.', end='', flush=True)
r, w, x = select.select([sys.stdin], [], [], 600)
</code></pre>
<p>Otherwise, you should use thread.</p>
<p><strong>Windows specific solution</strong> that use <a href="http://docs.python.org/3/library/msvcrt.html" rel="nofollow"><code>msvcrt</code></a>:</p>
<pre><code>import msvcrt
import time

t0 = time.time()
while time.time() - t0 &lt; 600:
    if msvcrt.kbhit():
        if msvcrt.getch() == '\r': # not '\n'
            break
    time.sleep(0.1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simple way using an alarm. When the time expires, the lambda function is called, which raises a <code>ZeroDivisionError</code></p>
<pre><code>from signal import signal, alarm, SIGALRM
signal(SIGALRM, lambda x:1/0)
try:
    alarm(600)
    input("Press enter to continue.")
except ZeroDivisionError:
    print("timed out")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way to do it is this:</p>
<pre><code>from time import sleep
print("I'm executing")
try:
    print("Wake up Ctrl-C!")
    sleep(600)
except KeyboardInterrupt:
    print("I woke up!")
else:
    print("I'm executing again.")
</code></pre>
<p>Not the greatest of answers and it definitely feels like an abuse of exceptions, but it works.</p>
</div>
<span class="comment-copy">you're going to need a thread, probably.</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/signal.html#signal.alarm" rel="nofollow noreferrer"><code>signal.alarm</code></a> is only available in Unix.</span>
<span class="comment-copy">Sadly some people are still using non-<a href="http://en.wikipedia.org/wiki/POSIX" rel="nofollow noreferrer">POSIX</a> compliant OS</span>
