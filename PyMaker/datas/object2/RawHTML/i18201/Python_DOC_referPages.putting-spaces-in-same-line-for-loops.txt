<div class="post-text" itemprop="text">
<p>I have an assignment for programming, and I'm having trouble. I'm 99% done but it's the little things that are tripping me up. Here is my code:</p>
<pre><code>a = 0
b = 0
c = 0

for h in first:
    a = LetterMap[h]

    print(a,end="")         

for h in middle:
    b = LetterMap[h]
    print(b,end="")

for c in last:
    c = letterMap[c]
    print(c,end="")
</code></pre>
<p>The output before this block and this block is this:</p>
<pre><code>first middle last

xxxxxxxxxxxxxxx
</code></pre>
<p>I would like it to be this:</p>
<pre><code>first middle last

xxxxx xxxxxx xxxx
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>for h in first:
    a = LetterMap[h]
    print(a,end="")

print(" ",end="")

for h in middle:
    b = LetterMap[h]
    print(b,end="")

print(" ",end="")

for c in last:
    c = letterMap[c]
    print(c,end="")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Rather than printing out your characters one by one, I'd suggest using <code>str.join</code> and generator expressions to combine your translated sequences into strings:</p>
<pre><code>first_str = "".join(LetterMap[c] for c in first)
middle_str = "".join(LetterMap[c] for c in middle)
last_str = "".join(LetterMap[c] for c in last)
</code></pre>
<p>Then you can print them with just one <code>print</code> call:</p>
<pre><code>print(first_str, middle_str, last_str) # default separator is a space!
</code></pre>
<p>If you wanted some more sophisticated formatting of the output (rather than just spaces separating the values), you can use the <code>str.format</code> method to do whatever kind of formatting you want:</p>
<pre><code>print('{2:&lt;20}{1:_^20}{0!r:*&gt;20}'.format(first_str, middle_str, last_str)
</code></pre>
<p>That will print the strings in "reverse" order, with the "last" one left-justified in a width-20 column, the middle value centered in a width-20 column with underscores padding it on each side, and a representation of the "first" value (with quotes and backslash escapes, as needed) on the right of the final 20-wide column padded with asterisks. </p>
<p>For example, if you three strings were <code>'foo'</code>, <code>'bar'</code> and <code>'baz'</code>, you'd get:</p>
<pre><code>baz                 ________bar_________***************'foo'
</code></pre>
<p>You can read about the string formatting mini-language <a href="http://docs.python.org/3/library/string.html#formatspec" rel="nofollow">in the documentation</a>.</p>
</div>
<span class="comment-copy">Just add a <code>print(" ", end="")</code> before the 2nd and 3rd loop?</span>
<span class="comment-copy">As a side note, you don't need to "declare variables at the top" like you're doing; this isn't C.</span>
<span class="comment-copy">You should have a capital L on last <code>LetterMap</code>. Maybe I am dense because everyone else seems to know, but where are the values set for the variables <code>first,middle,last</code>? Does <code>first = "first"</code>, presumably? If so can you do <code>for h in "first":</code></span>
