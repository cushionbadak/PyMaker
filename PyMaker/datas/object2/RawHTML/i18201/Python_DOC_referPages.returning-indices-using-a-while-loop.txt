<div class="post-text" itemprop="text">
<p>I'm trying to take an input of a list of numbers and return the list of indices in the original list that contain negative values.  I also want to use a while loop.  Here is my code so far.</p>
<pre><code>def scrollList2(myList):
    negativeIndices = []
    i = 0
    while i &lt; len(myList):
        if myList[i] &lt; 0:
            i = i + 1
            negativeIndices.append(i)
    return negativeIndices    
</code></pre>
<p>How to I stop the loop and how do i get the indices to return?  Right now when I run it, it runs forever (infinite loop)  how do I tell it to stop once it hits the last indices of myList?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you hit your first non-negative number, the <code>if</code> is never entered again and <code>i</code> never gets incremented again. Put the part where you increment <code>i</code> outside the <code>if</code> block.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>while i &lt; len(myList):
    if myList[i] &lt; 0:
        i = i + 1
        negativeIndices.append(i)
</code></pre>
<p>Assume, the conditional <code>myList[i] &lt; 0</code> is not true. In that case, <code>i</code> won’t be incremented and nothing else happens either. So you will end up in the next iteration, with the same value of <code>i</code> and the same conditional. Forever, in an endless loop.</p>
<p>You will want to increment <code>i</code> regardless of whether you matched something or not. So you will have to put the increment outside of the <code>if</code> conditional. Furthermore, you want to increment <code>i</code> <em>after</em> appending the index to the list, so you actually append the index you tested, and not the one afterwards:</p>
<pre><code>while i &lt; len(myList):
    if myList[i] &lt; 0:
        negativeIndices.append(i)
    i = i + 1
</code></pre>
<p>Also, you would usually use a <code>for</code> loop here. It will automatically take care of giving you all the values of <code>i</code> which you need to index every element in <code>myList</code>. It works like this:</p>
<pre><code>negativeIndices = []
for i in range(len(myList)):
    if myList[i] &lt; 0:
        negativeIndices.append(i)
</code></pre>
<p><code>range(len(myList))</code> will give you a sequence of values for every number from zero to the length of the list (not including the length itself). So if your list holds <code>4</code> values, you will get the values <code>0</code>, <code>1</code>, <code>2</code> and <code>3</code> for <code>i</code>. So you won’t need to take care of incrementing it on your own.</p>
<p>Another possibility would be <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> as Foo Bar User mentioned. That function will take a sequence, or list in your case, and will give you both an index and the value at the same time:</p>
<pre><code>negativeIndices = []
for i, value in enumerate(myList):
    if value &lt; 0:
        negativeIndices.append(i)
</code></pre>
<p>As you can see, this completely removes the need to even access the list by its index.</p>
</div>
<div class="post-text" itemprop="text">
<p>OP wants to use a while loop, so this answer is not exactly on point - but I feel I should point out that many pythonistas will expect something like:</p>
<pre><code>neg_indices = [k for k,v in enumerate(myList) if v &lt; 0]
</code></pre>
<p>This is implicit in the other answers, however it might be useful for lurkers and for OP to consider down the road...  <strong>While</strong> certainly does the job as the other answers show, but its 'free' in a list comprehension; plus, there's no chance of an infinite loop here....</p>
</div>
<span class="comment-copy">check <a href="http://stackoverflow.com/questions/19259627/how-can-i-iterate-over-a-list-of-strings-with-ints-in-python">enumerate</a> by the way</span>
<span class="comment-copy">You are only incementing <code>i</code> when you see numbers below zero. Any number &gt;= 0 will create an endless loop. Move the increment outside the condition (or better yet, use a <code>for</code> loop directly).</span>
<span class="comment-copy">I put it after negativeIndices.append(i) and outside the if loop and it just returns [], not a list of the indices when they are negative.</span>
<span class="comment-copy">I tried doing the same and it works just fine. Also, <code>if</code> statements are not loops. A loop is something that repeats something.</span>
<span class="comment-copy">I made a mistake, thank you for your help.  I understand it better now.</span>
<span class="comment-copy">If abandoning the OP's requirement to use a <code>while</code> loop, I'd go with a list comprehension: <code>[index for (index, value) in enumerate(myLst) if value &lt; 0]</code></span>
