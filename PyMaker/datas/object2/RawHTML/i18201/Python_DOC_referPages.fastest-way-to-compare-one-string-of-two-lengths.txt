<div class="post-text" itemprop="text">
<p>I'm looking for the fastest way to compare if a string has one of two lengths. This string must be either one letter longer or shorter, and I feel that the if statement below might not be the fastest and I don't see much of an improvement in time with it, or without it. </p>
<hr/>
<p>I'm comparing between two string, if <code>my_word</code> length is more than 1 character less or more than <code>compare_word</code> then I shall continue my loop.</p>
<pre><code>if (len(compare_word) &gt; (len(my_word)+1)) and (len(compare_word) &lt; (len(my_word)-1)): 
    continue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>you do not need to call <a href="http://docs.python.org/3/library/functions.html#len" rel="nofollow"><code>len</code></a> twice,</li>
<li>you can utilize <a href="http://docs.python.org/3/library/functions.html#abs" rel="nofollow"><code>abs</code></a></li>
</ul>
<p>Example:</p>
<pre><code>s = "Hello"
t = "Worl"

if abs(len(s) - len(t)) &gt; 1:
    print("string lengths differ by more than 1")
</code></pre>
<hr/>
<p>Update: With ipython's <a href="http://ipython.org/ipython-doc/stable/api/generated/IPython.core.magics.execution.html?highlight=timeit#IPython.core.magics.execution.ExecutionMagics.timeit" rel="nofollow"><code>timeit</code></a> there are almost no speed gain, however:</p>
<pre><code>In [10]: s = str(range(100000))

In [11]: t = str(range(100001))

In [12]: %timeit len(s) &gt; len(t) + 1 and len(s) &lt; len(t) - 1
10000000 loops, best of 3: 106 ns per loop

In [13]: %timeit abs(len(s) - len(t)) &gt; 1
10000000 loops, best of 3: 115 ns per loop

In [14]: %timeit 1 &gt;= len(s) - len(t) &gt;= -1
10000000 loops, best of 3: 113 ns per loop
</code></pre>
<p>Here's another run with shorter strings, but about the same result: <a href="https://gist.github.com/miku/6904419" rel="nofollow">https://gist.github.com/miku/6904419</a>.</p>
<p>Nevertheless, in the <a href="http://pastebin.com/UNZ2z2ae" rel="nofollow">context</a> of OPs code, <code>abs(len(s) - len(t)) &gt; 1</code> really is faster.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that the fastest way is</p>
<pre><code>if 1 &gt;= len(s) - len(t) &gt;= -1:
    print("string lengths differ by more than 1")
</code></pre>
<p>Indeed:</p>
<pre><code>&gt;&gt;&gt; %timeit abs(a) &lt;= 1
1000000 loops, best of 3: 283 ns per loop
&gt;&gt;&gt; %timeit  1 &gt;= a &gt;= -1
10000000 loops, best of 3: 198 ns per loop
</code></pre>
</div>
<span class="comment-copy">What about using <code>abs</code> of the difference?</span>
<span class="comment-copy">I'm pretty sure the condition in the question is incorrect. <code>len(compare_word)</code> will never be simultaneously greater than <b>and</b> less than <code>len(my_word)</code>.</span>
<span class="comment-copy">@Robáµ© You are right <code>and</code> is forcing more checks that I need, by changing it to `or, it has dramatically increased my time</span>
<span class="comment-copy">remarkable how much faster this is. Shaved 1.5 seconds off my search.</span>
<span class="comment-copy">@czl, really? I posted some benchmarks and they come out approximately the same.</span>
<span class="comment-copy">Yes, I take the time at the start of my loop and subtract it by the end time, when I output a list. I'm comparing a string from a set with my own string. For "the fastest" <code>if 1 &gt;= len(w) - len(word) &gt;= -1: continue</code> averages <code>1.5 seconds</code>. Then for my solution it's <code>1.65 seconds</code>. After using <code>abs(len(s1) - len(s2) &gt;1</code> the time drops down to <code>0.13</code> seconds.</span>
<span class="comment-copy">Interesting, would you mind pasting your code (modulo any confidential things) in a <a href="https://gist.github.com/" rel="nofollow noreferrer">gist</a> or a <a href="http://pastebin.com/" rel="nofollow noreferrer">paste</a>? I'm just curious about the context which yields such differences.</span>
<span class="comment-copy">@czl, ah, by looking at the bytecode, if get a bit more obvious, why it's faster - <a href="https://gist.github.com/miku/6904419#file-gistfile1-txt" rel="nofollow noreferrer">gist.github.com/miku/6904419#file-gistfile1-txt</a></span>
<span class="comment-copy">+1, saves the <code>abs</code> call. However, all three code snippets so far seem to come out <a href="https://gist.github.com/miku/6904419" rel="nofollow noreferrer">very similar</a> - can it be?</span>
