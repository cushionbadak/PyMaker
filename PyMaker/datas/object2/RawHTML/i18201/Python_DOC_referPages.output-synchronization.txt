<div class="post-text" itemprop="text">
<p>If a Python has a line:</p>
<pre><code>print(message)
</code></pre>
<p>is there a way to make the message to always appear on standard output as whole?</p>
<p>There problem is that there might be some subprocesses or C extensions which could write to stdout in the same time.</p>
<p>In other words, if I want to <code>print()</code> something how to guarantee that it will end up in stdout non-interleaved with other outputs? Is this even possible? I know there is <code>multiprocessing.Lock</code> but that would require to pass the same lock around every <code>print</code> in subprocesses or extension, something I'm not sure if possible to do...</p>
</div>
<div class="post-text" itemprop="text">
<p>In cPython for Python 2 the GIL,  global interpreter lock, will usually take care of this for you.</p>
<p>For sub-processes you can start them with stdout redirected and report at your convenience - most library C extensions would only normally give output to stdout in the event of a serious problem so should not be an issue.</p>
<p>If it is an issue - and I wouldn't worry too much until it is - why not replace all your print functions with a report function that uses Lock if needed - you could even replace the default print with such a class.</p>
</div>
<span class="comment-copy">No, it wont: <a href="http://docs.python.org/3/library/multiprocessing.html#synchronization-between-processes" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">I wont start a subprocess, a user library may. Also, this is not Python 3 specific, see: <a href="http://docs.python.org/2/library/multiprocessing.html#synchronization-between-processes" rel="nofollow noreferrer">docs.python.org/2/library/…</a></span>
<span class="comment-copy">Then override print to a print with lock.  If you are allowing <b>user</b> libraries and need to ensure that your output doesn't get overwritten then start them in sub-processes which is probably safer anyway.</span>
