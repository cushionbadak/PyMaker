<div class="post-text" itemprop="text">
<pre><code>from scipy.io.wavfile import read

filepath = glob.glob('*.wav') #list

rate,data = [read(fp) for fp in filepath]
</code></pre>
<p>and I get :</p>
<pre><code>ValueError: too many values to unpack
</code></pre>
<p>but i can load only once a time.</p>
<p>like this:</p>
<pre><code>rate,data = read('001.wav')
print rate
print data      
</code></pre>
<p>and I get:</p>
<pre><code>44100
[0 0 0 ..., 0 0 0]
</code></pre>
<p>How could I load the rate and data to two arrays, and if I do :</p>
<pre><code>datas = [read(fp) for fp in filepath]
</code></pre>
<p>I will get :</p>
<pre><code>[(44100, array([0, 0, 0, ..., 0, 0, 0], dtype=int16)), (44100, array([0, 0, 0, ..., 0, 0, 1], dtype=int16)), ..., (44100, array([0, 0, 0, ..., 0, 0, 0], dtype=int16))]
</code></pre>
<p>or there is any way I can split the datas to rate and data after loading.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can split it after loading using the inverse zip function (as explained in <a href="https://stackoverflow.com/a/19343/544059">this answer</a>):</p>
<pre><code>In [13]: rate, data = zip(*datas)

In [14]: rate
Out[14]: (44100, 44100)

In [15]: data
Out[15]: (array([0, 0, 0, 0, 0, 0]), array([0, 0, 0, 0, 1]))
</code></pre>
<p>I would say that this is an acceptable way to do it in this scenario, although I think using a more classical for loop, where you append to lists, without using list comprehension, would be cleaner:</p>
<pre><code>rates = []
datas = []
for fp in filepath:
    rate, data = read(fp)
    rates.append(rate)
    datas.append(data)
</code></pre>
<p>The reason you got a <code>ValueError</code> in the first case is because you are unpacking a list of all tuples for each of your files (obviously more than 2 given the error message) into only two variables - rate and data.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip(*x)</code> to format them into one list of rates and one list of the data lists.</p>
<pre><code>raw_data = [read(fp) for fp in filepath]
rates, data = zip(*raw_data)
</code></pre>
<p>For example,</p>
<pre><code>raw_data = zip(range(10), range(20, 30))
# [(0, 20), (1, 21), (2, 22), (3, 23), (4, 24), (5, 25), (6, 26), (7, 27), (8, 28), (9, 29)]

zip(*raw_data)
# [(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), (20, 21, 22, 23, 24, 25, 26, 27, 28, 29)]
</code></pre>
</div>
<span class="comment-copy"><code>[read(fp) for fp in filepath]</code> give more then two values.</span>
<span class="comment-copy">what do you mean for more then two values?</span>
<span class="comment-copy">Try this code on your interpreter: <code>&gt;&gt;&gt;a, b = [1, 2, 3]</code> it give you same exception. because rhs have two variables <code>a</code> and <code>b</code> where lhs has three values to unpack <code>1</code>, <code>2</code>, <code>3</code>.</span>
<span class="comment-copy">I think you need a better data structure!</span>
<span class="comment-copy">How to fix the problem of my code, I can do rate,data = read('001.wav') and datas = [read(fp) for fp in filepath], but I can't do rate,data = [read(fp) for fp in filepath]. How could I load them use [read(fp) for fp in filepath] and puts data into two array? Thanks.</span>
<span class="comment-copy">Thank you.If I want to make (array([0, 0, 0, 0, 0, 0]), array([0, 0, 0, 0, 1, 0])) to (array([0, 0, 0, 0, 0, 0],[0, 0, 0, 0, 1, 0])),what should I done?</span>
<span class="comment-copy">You can use <code>np.vstack(data)</code> as explained <a href="http://stackoverflow.com/questions/10104245/python-numpy-combine-array">here</a>, but you should try googling these things first, before asking here (I just searched for 'python combine arrays into matrix') :)</span>
<span class="comment-copy">I only have the data array that contains (array([0, 0, 0, ..., 0, 0, 0], dtype=int16), array([0, 0, 0, ..., 0, 0, 1], ..., dtype=int16), array([0, 0, 0, ..., 0, 0, 0], dtype=int16)),if use np.vstack(data), I didn't know how to split data to each array then I can use np.vstack(each array) to combine it.</span>
<span class="comment-copy">OK, I don't quite follow you, but in any case if you have some general problems understanding the data structures, I would first point you to read on the <a href="http://wiki.scipy.org/Tentative_NumPy_Tutorial" rel="nofollow noreferrer">numpy data structures</a> and <a href="http://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list and tuples in Python</a>. If you still have some specific questions after reading about them, open a new SO question. It is hard to read anything too detailed in these comments.</span>
<span class="comment-copy">I was trying what you suggest, that numpy.vstack([datas]) will creat array like this: [[array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 1], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)   array([0, 0, 0, ..., 0, 0, 0], dtype=int16)]].</span>
<span class="comment-copy">Thanks a lot.It's truly work! Thank you. :)</span>
