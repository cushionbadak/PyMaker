<div class="post-text" itemprop="text">
<p>When I print out my list of the top twenty occurrences all I get is the object location and not the actual data I need. Also if you have any ideas for improvement that would be greatly appreciated. Please help. Thanks.</p>
<p>Here is my code.</p>
<pre><code>class topList():
    __slots__ = ( "name", "gender", "occurences" )

def mkList( name, gender, occurences ):
    find = topList()
    find.name = name
    find.gender = gender
    find.occurences = occurences
    return find

def main():
    year = input( 'Enter year: ' )
    file = open( 'yob' + year + '.txt' )
    lst = []
    femaleLst = []
    maleLst = []
    for line in file:
        line = line.strip().split( "," )
        names = mkList( line[0], line[1], line[2] )
        lst.append( names )
        if names.gender == 'F':
            femaleLst += [ line ]
        else:
            maleLst += [ line ]
    while len( lst ) &lt; 20:
        male = maleLst.pop()
        female = femaleLst.pop()
        if maleLst.occurences &gt; femaleLst.occurences:
            lst += [ male ]
        else:
            lst += [ female ]
    print( lst[ : 20] )

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add <a href="http://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow"><code>__repr__</code></a> and <a href="http://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow"><code>__str__</code></a> methods to your class:</p>
<pre><code>class topList():
    __slots__ = ( "name", "gender", "occurences" )

    def __repr__(self):
        return 'topList({s.name!r}, {s.gender!r}, {s.occurences!r})'.format(s=self)

    def __str__(self):
        return '{s.name} ({s.gender}): {s.occurences!r})'.format(s=self)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; class topList():
...     __slots__ = ( "name", "gender", "occurences" )
...     def __str__(self):
...         return 'topList({s.name!r}, {s.gender!r}, {s.occurences!r})'.format(s=self)
... 
&gt;&gt;&gt; tl = topList()
&gt;&gt;&gt; tl.name = 'FooBar'
&gt;&gt;&gt; tl.gender = 'm'
&gt;&gt;&gt; tl.occurences = 42
&gt;&gt;&gt; print(tl)
FooBar (m): 42
&gt;&gt;&gt; tl
topList('FooBar', 'm', 42)
</code></pre>
<p>The <code>__str__</code> method is called automatically when your object is converted to a string, like the <code>print()</code> function does.</p>
<p>The <code>__repr__</code> method is used for <code>repr()</code> representations and when your object is displayed in lists and other containers.</p>
</div>
<span class="comment-copy">Thanks that helped but if you don't mind could you tell me how to make my .pop thing going? My program wont pop out the values I want it to instead it will just print everything.</span>
<span class="comment-copy">@Underdog_Nate: You have more than 20 elements in <code>lst</code> <i>already</i>; you add all entries to <code>lst</code> so the <code>len(lst) &lt; 20</code> test is never true.</span>
