<div class="post-text" itemprop="text">
<p>I am working in Python 3.3.2. right now I am trying to create a list of lists from a txt file. For example:</p>
<p>I have a txt file with this data: </p>
<pre><code>361263.236 1065865.816
361270.699 1065807.970
361280.158 1065757.748
361313.821 1065761.301
</code></pre>
<p>I want python to generate a list of lists from this txt file, so I need the data to look like this: <code>[[102547.879, 365478.456], [102547.658, 451658.263], [102658.878, 231456.454]]</code></p>
<p>What must I do?</p>
<p>Thanks for your attention!</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd encourage use of the <code>with</code> statement in new programmers, it's a good habit to get into.</p>
<pre><code>def read_list(filename):
    out = []
    # The `with` statement will close the opened file when you leave
    # the indented block
    with open(filename, 'r') as f:
        # f can be iterated line by line
        for line in f:
            # str.split() with no arguments splits a string by
            # whitespace charcters.
            strings = line.split()
            # You then need to cast/turn the strings into floating
            # point numbers.
            floats = [float(s) for s in strings]
            out.append(floats)
    return out
</code></pre>
<p>Depending on the size of the file, you could also instead of using the <code>out</code> list, modify it to use the <code>yield</code> keyword.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open("data.txt","r") as fh:
    data = [ [float(x), float(y)] for x,y in line.split() for line in fh ]
</code></pre>
<p>This is a case where I think <code>map</code> is more readable, although having to wrap that in a call to <code>list</code> in Python 3.x detracts from it.</p>
<pre><code>data = [ list(map(float, line.split())) for line in fh ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This might do:</p>
<pre><code>LofL = []
with open("path", "r") as txt:
    while True:
        try:
            LofL.append(txt.readline().split(" "))
        except:
            break
</code></pre>
</div>
<span class="comment-copy">These documents may be useful to you: <a href="http://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">Reading and Writing Files</a>, <a href="http://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">Lists</a>, <a href="http://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a></span>
<span class="comment-copy">Welcome to SO!  If you want someone to take the time and effort required to answer your question, it's a good idea to demonstrate your time and effort put in before asking the question.  This involves including what you have tried, methods you have heard about but don't understand how to use, and anything else that shows you put effort into finding a solution for yourself before consulting SO.</span>
<span class="comment-copy">Or just <code>[[float(el) for el in row.split()] for row in fh]</code> to emulate the 2.x style <code>map(float, ...)</code></span>
<span class="comment-copy">This is extremely non-idiomatic Python.</span>
