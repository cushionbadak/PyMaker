<div class="post-text" itemprop="text">
<p>I have these unicodes:</p>
<pre><code>uni_list = u'["","aa","bb","cc"]
</code></pre>
<p>I also have the following unicodes:</p>
<pre><code>uni_str = u'dd'
</code></pre>
<p>I need to combine them together to a list, and get rid of null ones, the desired result will be like:</p>
<pre><code>["aa","bb","cc","dd"]
</code></pre>
<p>But I don't know when it will be a uni_list, or a uni_str as i am reading a json file which split these results, is there a unified solution to convert them and combine them to a python list or set?</p>
<p>I tried to use ast.literal_eval, it seems only handle uni_list, but give me error of "malformed string" when it is a uni_str.</p>
<p><a href="https://i.stack.imgur.com/vLtuO.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/vLtuO.jpg"/></a></p>
<p>Many Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to convert your string to list as:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; my_unicode = u'["","aa","bb","cc"]'

# convert string to list
&gt;&gt;&gt; my_list = ast.literal_eval(my_unicode)
&gt;&gt;&gt; my_list
['', 'aa', 'bb', 'cc']

# Filter empty string from list
&gt;&gt;&gt; new_list = [i for i in my_list if i]
&gt;&gt;&gt; new_list
['aa', 'bb', 'cc']

# append `"dd"` string to the list
&gt;&gt;&gt; new_list.append("dd")  # OR, `str(u"dd")` if `"dd"` is unicode string
&gt;&gt;&gt; new_list
['aa', 'bb', 'cc', 'dd']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Alternative solution using <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">re.match</a> and <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">re.findall</a> functions:</p>
<pre><code>result = []

def getValues(s):
    global result
    // check if input string contains list representation
    is_list = re.match(r'^\[[^][]+\]$', s, re.UNICODE)

    if is_list:
        result = result + re.findall(r'\"([^",]+)\"', s, re.UNICODE)
    else:
        result.append(s)


getValues(u'["","aa","bb","cc"]')
getValues(u'dd')

print(result)
</code></pre>
<p>The output:</p>
<pre><code>['aa', 'bb', 'cc', 'dd']
</code></pre>
</div>
<span class="comment-copy">... There's no such thing as a "unicode of list". You can have a unicode string representing a list. You can have a list of unicode strings. It's really unclear what your situation is here. Can you post something that demonstrates your problem?</span>
<span class="comment-copy">Please show what you have tried so far as well as the input you are using. <code>u'["","aa","bb","cc"]</code> is neither a valid unicode string nor a valid list.</span>
<span class="comment-copy">If you are getting that string from json you have other problems, like who wrote that to json in the first place.</span>
<span class="comment-copy">I have tried ast.literal_eval, the problem is i don't know when i am having  a u"dd" or u'["","aa","bb","cc"]', so when i do ast.literal_eval for all of them, when it's a u"dd", it will give me an error of "malformed string", do you know how to solve this? Thanks!</span>
<span class="comment-copy">But are you sure that the string will be of only these two type? i.e. u"dd" or u'["","aa","bb","cc"]' ?</span>
<span class="comment-copy">Using <code>filter</code> for remove empty element in <code>list</code> is faster than <i>list comprehension</i>.  <code>new_list = filter(None, my_list)</code></span>
<span class="comment-copy">For my data, yes, after json.loads(), i have either u"aa", or u'[]', or u'["aa","bb"]', but i don't know when it is one of 3</span>
<span class="comment-copy">@MaxChr√©tien That's not the case. At least not in Python2.7. In Python3.x it will be faster because it returns the iterator object. If you type cast it to list, it'll again be slower</span>
