<div class="post-text" itemprop="text">
<p>I had come across this problem in one of the coding challanges, although i couldn't solve it then due to time constraint and being new to python. I have tried solving it now. But i was wondering if there is any easier and efficient way to solve this.</p>
<h1>Problem</h1>
<pre><code>config_file=[ \
    "[__Box1A,Box1B__]", \
    "portA:enabled=true", \
    "portB:vlan=10", \
    "portC:vlan=200", \
    "[__Box2__]", \
    "portA:poe=false", \
    "portB:speed=100mbps",\
    "[__Box3__]", \
    "portA:use_lld=false", \
    ]

port_mappings=[ \
    "[__Box1A,Box1B__]", \
    "portA:Eth1/1", \
    "portB:Eth1/2", \
    "portC:Eth1/3", \
    "[__Box3__]", \
    "portA:Eth3/1", \
    "[__Box2__]", \
    "portA:Eth2/1", \
    "portB:Eth2/2",\
    ]
</code></pre>
<p>Given 2 List as config_file and port_mappings, the resultant array should look like below.</p>
<pre><code>result_file=[ \
    "[__Box1A,Box1B__]", \
    "Eth1/1:enabled=true", \
    "Eth1/2:vlan=10", \
    "Eth1/3:vlan=200", \
    "[__Box2__]", \
    "Eth2/1:poe=false", \
    "Eth2/2:speed=100mbps",\
    "[__Box3__]", \
    "Eth3/1:use_lld=false", \
    ]
</code></pre>
<h1>my Solution</h1>
<pre><code>A1dict2={}
for item in config_file:
    if item.startswith('[_'):
        key1=item
        dict1={}
        A1dict2[key1]=dict1
    else:
        sitem=re.split(':',item)
        dict1[sitem[0]]=sitem[1]
print A1dict2

A2dict2={}
for item in port_mappings:
    if item.startswith('[_'):
        key1=item
        dict1={}
        A2dict2[key1]=dict1
    else:
        sitem=re.split(':',item)
        dict1[sitem[0]]=sitem[1]
print A2dict2

A3dict2={}

dict3 = {}        
for key in A1dict2:
        tmpdict = {}
        for key_child, item in A1dict2[key].iteritems():
            tmpdict[A2dict2[key][key_child]] = item
        dict3[key] = tmpdict

newlist=[]
for key,value in dict3.iteritems():
    newlist.append(key)
    for j in dict3[key].items():
        x=map(str,j)
        newlist.append(":".join(x))
print newlist
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>+1 on the suggestion for <a href="https://codereview.stackexchange.com/">Code Review</a> and your way looks fine, here is a few less lines:</p>
<pre><code>from collections import OrderedDict
config_dict = OrderedDict()
port_map_dict = OrderedDict()

def map_items(list_of_items, ordered_dict):
    for i in list_of_items:
        if i.startswith('[__Box'):
            current = i
            ordered_dict[i] = OrderedDict()
        else:
            port, option = i.split(':')
            ordered_dict[current][port] = option

map_items(config_file, config_dict)
map_items(port_mappings, port_map_dict)

result_file = []
for box, items in config_dict.iteritems():
    result_file.append(box)
    for port, value in items.iteritems():
        result_file.append('{}:{}'.format(port_map_dict[box][port], value))
</code></pre>
<p>result:</p>
<pre><code>In [47]: result_file
Out[47]:
['[__Box1A,Box1B__]',
 'Eth1/1:enabled=true',
 'Eth1/2:vlan=10',
 'Eth1/3:vlan=200',
 '[__Box2__]',
 'Eth2/1:poe=false',
 'Eth2/2:speed=100mbps',
 '[__Box3__]',
 'Eth3/1:use_lld=false']
</code></pre>
</div>
<span class="comment-copy">Is this working properly and you're just looking for improvements, or is it failing in some way?</span>
<span class="comment-copy">Works fine. Just looking for improvements .</span>
<span class="comment-copy">In that case, this would be more appropriate on Code Review.</span>
<span class="comment-copy">As an aside, you don't need to use a backslash (Explicit line joining) inside the brackets - <a href="https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining" rel="nofollow noreferrer">Implicit line joining</a></span>
<span class="comment-copy">This challenge is not fully clear (to me). Maybe the first <code>Box1A,Box1B</code> config entry could be matched with two separate port mappings for <code>Box1A</code> and <code>Box1B</code> resulting in two entries on the output.</span>
