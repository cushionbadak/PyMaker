<div class="post-text" itemprop="text">
<p>I have a List of Lists of Lists in python. I need to sort the highest level of lists based on one of the values in the lowest levels. </p>
<p>For a toy model, my list is created first with list <code>small</code>, which is a list containing lists with three items each: </p>
<pre><code>    small = [["dog", 5, 6], ["cat", 391, 130], ["pig", 45, 2]...]`
</code></pre>
<p>Then there is a larger list, <code>large</code>, that is created by appending the small list and another item together:</p>
<pre><code>    large.append([["category 1"], small])`
</code></pre>
<p>This is done in a loop, so if the loop has a counter of 5, it will proceed through a function that creates a list <code>small</code> 5 times, each time, appending it to list <code>large</code>. </p>
<p>My goal is to sort the final list based on an element in the smallest list (the list that comprises the <code>small</code> list). I am currently printing the <code>large</code> list out line by line, with the <code>small</code> list ordered by the <code>index 1</code> of the lists within it (see: 5,10,15 in order, 1,3,6 in order, etc), so my output is this:</p>
<pre><code>    &gt;category 1:
    &gt;['Dog', 5, 6]
    &gt;['Pig', 10, 2]
    &gt;['Cat', 15, 130]
    &gt;['Buffalo', 20, 1]
    &gt;['Newt', 25, 45]

    &gt;category 2:
    &gt;['Newt', 1, 1092]
    &gt;['Cat', 3, 352]
    &gt;['Pig', 6, 34]
    &gt;['Buffalo', 9, 12]
    &gt;['Dog', 12, 5]

    &gt;category 3:
    &gt;['Buffalo', 2, 12]
    &gt;['Pig', 4, 37]
    &gt;['Cat', 6, 34]
    &gt;['Newt', 8, 150]
    &gt;['Dog', 10, 52]
</code></pre>
<p>However, i would like to print the <code>large</code> list in order of smallest to largest when looking at the element in <code>index 1</code> in the list that makes up the smallest array. So my ideal output would be this:</p>
<pre><code>    &gt;category 2:
    &gt;['Newt', 1, 1092]
    &gt;['Cat', 3, 352]
    &gt;['Pig', 6, 34]
    &gt;['Buffalo', 9, 12]
    &gt;['Dog', 12, 5]

    &gt;category 3:
    &gt;['Buffalo', 2, 12]
    &gt;['Pig', 4, 37]
    &gt;['Cat', 6, 34]
    &gt;['Newt', 8, 150]
    &gt;['Dog', 10, 52]

    &gt;category 1:
    &gt;['Dog', 5, 6]
    &gt;['Pig', 10, 2]
    &gt;['Cat', 15, 130]
    &gt;['Buffalo', 20, 1]
    &gt;['Newt', 25, 45]
</code></pre>
<p>I have tried sorting with <code>itemgetter()</code>, however, when sorting <code>large</code> with <code>itemgetter()</code>, i can only sort the items in list <code>large</code>, which are <code>[category x]</code> and <code>[[a,b,c], [a,b,c]]</code>. Is there a way to access the lowest level of elements for itemgetter? or another way to go about sorting this list?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done in one line:</p>
<pre><code>sorted_large = sorted(large, key=lambda item: item[1][0][1])
</code></pre>
<p>The <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> built-in function takes a <code>key</code> parameter:</p>
<blockquote>
<p><code>key</code> specifies a function of one argument that is used to extract a
  comparison key from each list element</p>
</blockquote>
<p>Using a <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer"><code>lambda</code></a> expression, the sorting key can be extracted.</p>
</div>
<span class="comment-copy">Write it out as a normal loop first and then see about making it simpler or more efficient.</span>
<span class="comment-copy">nested indexing?  <code>large[i][j][1]</code></span>
<span class="comment-copy">This was perfect, i tried many things similar but didnt get the right syntax.. Thanks!</span>
