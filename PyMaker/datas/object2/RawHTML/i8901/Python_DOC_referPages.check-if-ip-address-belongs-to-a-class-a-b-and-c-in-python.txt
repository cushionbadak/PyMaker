<div class="post-text" itemprop="text">
<p>How can determine class of IP address in python. I am working with ipaddress module of python.
Following are class definitions</p>
<pre><code>Class   Private Networks    Subnet Mask Address Range
A   10.0.0.0    255.0.0.0   10.0.0.0 - 10.255.255.255
B   172.16.0.0 - 172.31.0.0 255.240.0.0 172.16.0.0 - 172.31.255.255
C   192.168.0.0 255.255.0.0 192.168.0.0 - 192.168.255.255
</code></pre>
<p>Given a IP how can I check if it belongs to Class A, B or C</p>
</div>
<div class="post-text" itemprop="text">
<h2>IPv4</h2>
<p>Use <code>ipaddress.IPv4Address</code> and <code>ipaddress.IPv4Network</code> types.</p>
<pre><code>from ipaddress import IPv4Address, IPv4Network

classA = IPv4Network(("10.0.0.0", "255.0.0.0"))  # or IPv4Network("10.0.0.0\8")
classB = IPv4Network(("172.16.0.0", "255.240.0.0"))  # or IPv4Network("172.16.0.0\12")
classC = IPv4Network(("192.168.0.0", "255.2550.0.0"))  # or IPv4Network("192.168.0.0\16")
</code></pre>
<p>I gave you the tuple form as you have the network address and mask but if you prefere the /X suffix it also accepts it. There are actually some additional ways.</p>
<p>To use it you will just check if a certain <code>IPv4Address</code> is <code>in</code> the <code>IPv4Network</code> as if you were checking in an element is found inside a <code>list</code>:</p>
<pre><code>ip1 = IPv4Address("10.0.2.8")
ip2 = IPv4Address("172.18.76.25")
ip3 = IPv4Address("192.168.45.62")

ip1 in classA  # True
ip2 in classA  # False
ip3 in classA  # False

ip1 in classB  # False
ip2 in classB  # True
ip3 in classB  # False

ip1 in classC  # False
ip2 in classC  # False
ip3 in classC  # True
</code></pre>
<h2>IPv6</h2>
<p>Use <code>ipaddress.IPv6Address</code> and <code>ipaddress.IPv6Network</code> types instead and correct IPv6 ip strings when creating the objects.</p>
<h2>Generic</h2>
<p>If both supporting IPv4 and IPv6 is desired, <code>ipaddress.ip_address</code> and <code>ipaddress.ip_network</code> convenience factory functions can be used, and the module will create the appropiate IPv4 or IPv6 class depending on the string format.</p>
<hr/>
<p>Source: <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer">https://docs.python.org/3/library/ipaddress.html</a></p>
</div>
<span class="comment-copy">Do you just want to see whether the IP <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address.is_private" rel="nofollow noreferrer"><code>is_private</code></a>? Because the definition of class A, B, C etc is outdated and not used anymore (see classless IP addresses) and in any case the definition included non-private IPs too.</span>
<span class="comment-copy">I want to categorize private IPs into classes but couldn't find a way</span>
<span class="comment-copy">maybe this a stupid idea, but what about string-comparison? A/B/C all have different rangers (first 3 numbers) - wouldnt it be possible to differentiate by that? Or am I missing the point?</span>
<span class="comment-copy">@Cribber a given IP may be putside of those 3 classes</span>
<span class="comment-copy">This looks good. Can we check classes in IPv6 in this way? Can you give any example</span>
<span class="comment-copy">There are equivalent classes for IPv6, <code>ipaddress.IPv6Address</code> and <code>ipaddress.IPv6Network</code>, but haven't tried them, will give them a shot and post back, but I expect a similar behaviour</span>
<span class="comment-copy">As expected, those classes work exactly the same as IPv4 versions.</span>
<span class="comment-copy">Information about IPv6 and generic versions included in the asnwer. Aside from Address and Network classes, there is a third one, Interface that basically groups both previous classes, meant to specify a device IP + the network it is connected to in a single object, take a look if it may help in your application.</span>
