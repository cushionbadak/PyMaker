<div class="post-text" itemprop="text">
<pre><code>class Parent01(object):
    def foo(self):
        print("Parent01")
        pass

class Parent02(object):
    def foo(self):
        print("Parent02")
        pass

class Child(Parent01,Parent02):
    def foo(self):
        print("Child")
        super(Parent01, self).foo()
    pass

c = Child()
c.foo()
</code></pre>
<p>Output:</p>
<pre><code>Child
Parent02
</code></pre>
<p>Why here is the output <code>Parent02</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're misusing <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow noreferrer"><code>super</code></a>. You're supposed to name your <em>own</em> class, not a parent. And given this is Python 3, you don't even need to do that, a simple:</p>
<pre><code>super().foo()
</code></pre>
<p>would work (as long as the first parameter to the function is a single argument, regardless of name; there are exceptions for when you're accepting <code>self</code> via <code>*args</code>, but that's rare, and only for complicated cases involving simulating a <code>dict</code>).</p>
<p>The reason it misbehaves as written is that you've told it explicitly you're doing <code>super</code> based in <code>Parent01</code>, not <code>Child</code>, so it scans <a href="https://docs.python.org/3/library/stdtypes.html#class.__mro__" rel="nofollow noreferrer">the MRO (method resolution order)</a> to find the next class after <code>Parent01</code>, which happens to be <code>Parent02</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/3277367/how-does-pythons-super-work-with-multiple-inheritance">How does Python's super() work with multiple inheritance?</a>. Also <a href="http://stackoverflow.com/q/14206015/4831822">Python's Multiple Inheritance: Picking which super() to call</a></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/24166225/python3-behaviour-of-super-on-multi-inheritance">python3 - behaviour of super() on multi-inheritance</a></span>
