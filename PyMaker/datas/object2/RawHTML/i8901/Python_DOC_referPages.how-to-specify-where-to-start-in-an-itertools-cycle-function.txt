<div class="post-text" itemprop="text">
<p>I need to cycle through a list for starting position between <code>1-4</code>
using <code>itertools</code> I am able to cycle through the list</p>
<pre><code>positions = itertools.cycle([1,2,3,4])
next(positions)
</code></pre>
<p>This does return the next position, but what if the next time I need to start at 3? How can I set the start position?</p>
<p>I need the start position to change often, I cant just change the list to start at 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't set a starting position; it'll always start where the given sequence starts.</p>
<p>You <em>can</em> move the cycle along a few steps before you use it for whatever you need it for. Use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="noreferrer"><code>itertools.islice()</code></a> to skip some items:</p>
<pre><code>from itertools import islice

starting_at_three = islice(positions, 2, None)
</code></pre>
<p>You pass in the iterable, then a start and stop value; <code>None</code> here means that the <code>islice()</code> iterator continues forever or until the underlying <code>positions</code> iterator is exhausted.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from itertools import islice, cycle
&gt;&gt;&gt; positions = cycle([1, 2, 3, 4])
&gt;&gt;&gt; starting_at_three = islice(positions, 2, None)
&gt;&gt;&gt; next(starting_at_three)
3
&gt;&gt;&gt; next(starting_at_three)
4
&gt;&gt;&gt; next(starting_at_three)
1
</code></pre>
<p>The other option is to pass in a different sequence; you could pass in <code>[3, 4, 1, 2]</code> for example.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools.cycle#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a> for that:</p>
<pre><code>from itertools import cycle
<b>from itertools import islice</b>

positions3 = <b>islice(</b>cycle([1,2,3,4])<b>,2,None)</b></code></pre>
<p>this will result in a generator that emits 3,4,1,2,3,4,1,2,3,4,...</p>
<p>In case the <strong>start position <code>k</code> is large</strong> (compared to the length of the original list), it can pay off to perform a modulo first:</p>
<pre><code>from itertools import cycle
from itertools import islice

source_list = [1,2,3,4]
k = 10000000 # offset index
positions_k = islice(cycle(source_list),k%len(source_list),None)
</code></pre>
<p>This will generate an equivalent result, but <code>islice</code> will not drop the first 10M elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use slices of the original list:</p>
<pre><code>In [15]: def custom_slice(lst, start):
   ....:     return cycle(lst[start:] + lst[:start + 1])
</code></pre>
<p>Demo:</p>
<pre><code>In [16]: positions = custom_slice(lst, 2)

In [17]: next(positions)
Out[17]: 3

In [18]: next(positions)
Out[18]: 4

In [19]: next(positions)
Out[19]: 1

In [20]: next(positions)
Out[20]: 2
</code></pre>
</div>
<span class="comment-copy">The start of a <i>running</i> <code>cycle</code>?</span>
<span class="comment-copy">islice works for setting the starting postion, but if I keep using it like in the demo it starts it at the new index position, so in your example it would actually go:       &gt;&gt;&gt; from itertools import islice, cycle     &gt;&gt;&gt; positions = cycle([1, 2, 3, 4])     &gt;&gt;&gt; starting_at_three = islice(positions, 2, None)     &gt;&gt;&gt; next(starting_at_three)     3     &gt;&gt;&gt; next(starting_at_three)     2     &gt;&gt;&gt; next(starting_at_three)     1</span>
<span class="comment-copy">@SierraKilo: That's demonstrably not true or even possible.</span>
<span class="comment-copy">@SierraKilo: see <a href="https://repl.it/Fxvp/0" rel="nofollow noreferrer">repl.it/Fxvp/0</a> a live demo if you want to play with this some more.</span>
<span class="comment-copy">@SierraKilo: last but not least, note that Willem's <code>position3</code> and my solutions are <i>exactly the same thing</i>.</span>
<span class="comment-copy">@marijn pieters: yes, thanks I see its the same answer, I marked his correct because it came first.  The link to like demo is not working.  I must have done something wrong, it always returns the same value.  my mistake.</span>
<span class="comment-copy">This works for setting the starting location, but to iterate through the rest of the list just use next(position)</span>
<span class="comment-copy">@SierraKilo: I do not follow what you want to say/ask...</span>
