<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19525490/output-from-sys-stdout-in-interactive-mode">Output from sys.stdout in interactive mode</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I have one question about this <code>for</code> loop, that writes strings to a file:</p>
<pre><code>&gt;&gt;&gt; n=15
&gt;&gt;&gt; for i in range (n):
...    outfile.write(str(i)+' '+str(i*i)+'\n')
...
4
4  
4
4
5 
5
5
5
5
5
7
7
7
7
7
</code></pre>
<p>Why am I getting those numbers?</p>
</div>
<div class="post-text" itemprop="text">
<p>In the interactive interpreter mode, Python will echo all expression statement results that are not <code>None</code>. </p>
<p>Here, the number are the return values of all the <code>outfile.write(...)</code> calls. Assuming <code>outfile</code> is a file openened in text mode, the <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.write" rel="nofollow noreferrer"><code>file.write()</code> method</a> returns the number of characters written.</p>
<p>For example, the first line written is <code>'0 0\n'</code>, which is 4 characters, as are <code>'1 1\n'</code>, <code>'2 4\n'</code> and <code>'3 9\n'</code>, after which you write 5 characters for <code>'4 16\n'</code>, etc.</p>
<p>If you don't want to see those numbers, assign the return value of the <code>.write()</code> method to a variable. It doesn't matter what variable here; an assignment statement is not an expression statement so there is nothing to echo:</p>
<pre><code>&gt;&gt;&gt; for i in range (n):
...    written = outfile.write(str(i)+' '+str(i*i)+'\n')
...
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">That is just the representation in the console. If you store the value to a variable and check its type, you will see that it is indeed a string.</span>
