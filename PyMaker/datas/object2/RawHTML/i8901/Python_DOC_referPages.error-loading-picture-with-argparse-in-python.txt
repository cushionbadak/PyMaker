<div class="post-text" itemprop="text">
<p>Using PyDev with Eclipse and receiving an "AttributeError: 'Namespace' object has no attribute 'perfect4k'.  The picture is saved under the project folder; however, it seems as though it is not able to load.  Thanks in advance, I am a newby at Python.  FYI, this is an example code I have borrowed off the internet.</p>
<pre><code>import numpy as np
from PIL import Image
import time
from mazes import Maze
from factory import SolverFactory

# Read command line arguments - the python argparse class is convenient here.
import argparse
sf = SolverFactory()
parser = argparse.ArgumentParser()
parser.add_argument("-m", "--method", nargs='?', const=sf.Default, default=sf.Default,
                        choices=sf.Choices)
parser.add_argument("perfect4k.png", help="4kImage", default=None, nargs='?') #input_file
parser.add_argument("SaveM.png", help="4kImageSave", default=None, nargs='?') #output_file
args = parser.parse_args() 

method = args.method

# Load Image
print ("Loading Image")
im = Image.open(args.perfect4k.png) #args.input_file

# Create the maze (and time it) - for many mazes this is more time consuming than solving the maze
print ("Creating Maze")
t0 = time.time()
maze = Maze(im)
t1 = time.time()
print ("Node Count:", maze.count)
total = t1-t0
print ("Time elapsed:", total, "\n")

# Create and run solver
[title, solver] = sf.createsolver(args.method)
print ("Starting Solve:", title)

t0 = time.time()
[result, stats] = solver(maze)
t1 = time.time()

total = t1-t0

# Print solve stats
print ("Nodes explored: ", stats[0])
if (stats[2]):
    print ("Path found, length", stats[1])
else:
    print ("No Path Found")
print ("Time elapsed: ", total, "\n")

"""
Create and save the output image.
This is simple drawing code that travels between each node in turn, drawing either
a horizontal or vertical line as required. Line colour is roughly interpolated between
blue and red depending on how far down the path this section is. Dependency on numpy
should be easy to remove at some point.
"""

print ("Saving Image")
mazeimage = np.array(im)
imout = np.array(mazeimage)
imout[imout==1] = 255
out = imout[:,:,np.newaxis]

out = np.repeat(out, 3, axis=2)

resultpath = [n.Position for n in result]

length = len(resultpath)

px = [0, 0, 0]
for i in range(0, length - 1):
    a = resultpath[i]
    b = resultpath[i+1]

    # Blue - red
    px[0] = int((i / length) * 255)
    px[2] = 255 - px[0]

    if a[0] == b[0]:
        # Ys equal - horizontal line
        for x in range(min(a[1],b[1]), max(a[1],b[1])):
            out[a[0],x,:] = px
    elif a[1] == b[1]:
        # Xs equal - vertical line
        for y in range(min(a[0],b[0]), max(a[0],b[0]) + 1):
            out[y,a[1],:] = px

img = Image.fromarray(out)
img.save(args.SaveM.png) #CHANGED
</code></pre>
<p>Output:</p>
<pre><code>pydev debugger: starting (pid: 12436)
Traceback (most recent call last):
  File "C:\Users\Gabriel\.p2\pool\plugins\org.python.pydev_5.5.0.201701191708\pysrc\pydevd.py", line 1537, in &lt;module&gt;
Loading Image
    globals = debugger.run(setup['file'], None, None, is_module)
  File "C:\Users\Gabriel\.p2\pool\plugins\org.python.pydev_5.5.0.201701191708\pysrc\pydevd.py", line 976, in run
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Users\Gabriel\.p2\pool\plugins\org.python.pydev_5.5.0.201701191708\pysrc\_pydev_imps\_pydev_execfile.py", line 25, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "C:\Users\Gabriel\Desktop\AP Computer Science\PythonMaze\solve.py", line 21, in &lt;module&gt;
    im = Image.open(args.perfect4k.png) #args.input_file
AttributeError: 'Namespace' object has no attribute 'perfect4k'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python variable names cannot contain a dot "." character, as this is use to reference some further property of that object.</p>
<p>The name "perfect4k.png" is used for one of the args, and this behaviour for argparse does not sound well defined. </p>
<p>I suggest using an underscore "_" for this instead. If you are expecting the help text to show this name, you could try using the keyword parameter "metavar". It is described in the python documentation as:</p>
<blockquote>
<p>metavar - A name for the argument in usage messages.</p>
</blockquote>
<p>(reference: <a href="https://docs.python.org/3/library/argparse.html#the-add-argument-method" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html#the-add-argument-method</a>)</p>
<p>In your specific case you could add it this way:</p>
<pre><code>parser.add_argument("input_file", metavar="perfect4k.png", help="4kImage", 
    default=None, nargs='?') #input_file
</code></pre>
<p>So the actual argument is "input_file", but will be referred to as "perfect4k.png" in the help output.</p>
<p>This means you will also need to refer to it as <code>input_file</code> elsewhere in the code. You will also need to give the same treatment to the output file.</p>
</div>
<span class="comment-copy">What specifically is the error - can you add the runtime output/stack trace here please?</span>
<span class="comment-copy">@DannyStaple I edited the post to add the output.  Hope this helps</span>
<span class="comment-copy">Thank you! This fixed it.</span>
<span class="comment-copy">If so can you mark this as answered please?</span>
