<div class="post-text" itemprop="text">
<p>I have a server class, that fetches files from Internet using <code>urllib</code>, and fetches files from the disk drive (<code>open</code>). I have several functions, whose jobs are to return an open stream, whether it's an open file, or an Internet resource. How should I unit-test these functions to know that they are returning what they should? Or, in general, how should I unit-test methods that access outside sources (whether it's a database or socket connection)?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use the <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock library</a> included in <code>unittest</code>.</p>
</div>
<span class="comment-copy">Check out this question: <a href="http://stackoverflow.com/questions/4199700/python-how-do-i-make-temporary-files-in-my-test-suite">link</a>. The answers explain how to set up local folders and files during unit testing.</span>
<span class="comment-copy">@JavoSN that can work for files, but what about other cases?</span>
<span class="comment-copy">Same strategy applies. You need to set everything up in a controlled manner. For fetching files, you should enable a temporary http server to serve the files. There are libraries such as <a href="https://gist.github.com/glenfant/7369894" rel="nofollow noreferrer">this</a> (warning: i haven't tried it) to do so.</span>
<span class="comment-copy">@JavoSN wouldn't that be dangerously close to the Integration Test territory?</span>
<span class="comment-copy">You should also look into the <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock library</a></span>
