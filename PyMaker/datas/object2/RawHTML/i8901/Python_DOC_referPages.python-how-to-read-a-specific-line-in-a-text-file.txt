<div class="post-text" itemprop="text">
<p>I have a huge text file (12GB). The lines are tab delimited and the first column contains an ID. For each ID I want to do something. Therefore, my plan is to go start with the first line, go through the first column line by line until the next ID is reached.</p>
<pre><code>start_line = b
num_lines = 377763316

while b &lt; num_lines:
  plasmid1 = linecache.getline("Result.txt", b-1)
  plasmid1 = plasmid1.strip("\n")
  plasmid1 = plasmid1.split("\t")

  plasmid2 = linecache.getline("Result.txt", b)
  plasmid2 = plasmid2.strip("\n")
  plasmid2 = plasmid2.split("\t")


    if not str(plasmid1[0]) == str(plasmid2[0]):
      end_line = b
      #do something
</code></pre>
<p>The code works, but the problem is that linecache seems to reload the txt-file every time. The code would run several years if I don't increase the performance.</p>
<p>I appreciate your help if you have a good idea how to solve the issue or know an alternative approach!</p>
<p>Thanks,
Philipp</p>
</div>
<div class="post-text" itemprop="text">
<p>I think <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html" rel="nofollow noreferrer">numpy.loadtxt()</a> is the way to go. Also it would be nice to pass <code>usecols</code> argument to specify which columns you actually need from the file. Numpy package is solid library written with high performance in mind. </p>
<p>After calling <code>loadtxt()</code> you will get <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html" rel="nofollow noreferrer">ndarray</a> back.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use itertools:</p>
<pre><code>from itertools import takewhile

class EqualityChecker(object):
   def __init__(self, id):
       self.id = id

   def __call__(self, current_line):
       result = False
       current_id = current_line.split('\t')[0]

       if self.id == current_id:
           result = True

       return result


with open('hugefile.txt', 'r') as f:
   for id in ids:
       checker = EqualityChecker(id)
       for line in takewhile(checker, f.xreadlines()):
           do_stuff(line) 
</code></pre>
<p>In outer loop <code>id</code> can actually be obtain from the first line with an id non-matching previous value.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should open the file just once, and iterate over the lines.</p>
<pre><code>with open('Result.txt', 'r') as f:
    aline = f.next()
    currentid = aline.split('\t', 1)[0]
    for nextline in f:
        nextid = nextline.split('\t', 1)[0]
        if nextid != currentid:
            #do stuff
            currentid = nextid
</code></pre>
<p>You get the idea, just use plain python.
Only one line is read in each iteration. The extra <code>1</code> argument in the split will split only to the first tab, encreasing performance. You will not get better performance with any specialized library. Only a plain C language implementation could beat this approach.</p>
<p>If you get the <code>AttributeError: '_io.TextIOWrapper' object has</code>, it is probably because you are using Python 3.X (see question <a href="https://stackoverflow.com/questions/26967509/attributeerror-io-textiowrapper-object-has-no-attribute-next-python">io-textiowrapper-object</a>). Try this version instead:</p>
<pre><code>with open('Result.txt', 'r') as f:
    aline = f.readline()
    currentid = aline.split('\t', 1)[0]
    while aline != '':
        aline = f.readline()
        nextid = aline.split('\t', 1)[0]
        if nextid != currentid:
            #do stuff
            currentid = nextid
</code></pre>
</div>
<span class="comment-copy">Lines are tab- delimited? Sounds like columns to me?</span>
<span class="comment-copy">Please, show all the code. What is <code>linecache</code></span>
<span class="comment-copy">@eguaio: <a href="https://docs.python.org/3/library/linecache.html" rel="nofollow noreferrer">docs.python.org/3/library/linecache.html</a></span>
<span class="comment-copy"><code>linecache</code> is not designed for this.  From the source code:  "<i>Cache lines from Python source files</i>".  Yes, from looking at the source code <code>linecache</code> does reopen the file each time.  <a href="https://hg.python.org/cpython/file/3.6/Lib/linecache.py" rel="nofollow noreferrer">hg.python.org/cpython/file/3.6/Lib/linecache.py</a></span>
<span class="comment-copy">Thanks for your comment!  I receive following error: AttributeError: '_io.TextIOWrapper' object has no attribute 'next'  Any ideas?</span>
<span class="comment-copy">It was  a python 2 vs 3 incompatibility.</span>
