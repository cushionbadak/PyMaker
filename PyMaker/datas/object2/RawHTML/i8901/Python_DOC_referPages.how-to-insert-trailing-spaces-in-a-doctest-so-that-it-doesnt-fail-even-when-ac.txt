<div class="post-text" itemprop="text">
<p>I'm trying to do a doctest. The 'Expected' and 'Got' results are identical, but my doctest still fails. It's failing because there are trailing spaces after <code>x-axis y-axis</code> in the printout which I haven't included in my docstring. How do I include it though? When I insert the spaces manually, and do the test, it runs successfully as long as I keep the cursor there. </p>
<p>x-axis y-axis______________________[cursor here]                           </p>
<p>However, if I run the test with my cursor somewhere else, then the trailing spaces get removed and the test fails. </p>
<p>I know that sounds really strange, but it is what it is!</p>
<p>This is the code:</p>
<pre><code>import pandas as pd
import doctest


class NewDataStructure(pd.DataFrame):
    """
    &gt;&gt;&gt; arrays = [[1, 1, 2, 2], [10, 20, 10, 20]]
    &gt;&gt;&gt; index = pd.MultiIndex.from_arrays(arrays, names=('x-axis', 'y-axis'))
    &gt;&gt;&gt; data_input = {"Pressure (Pa)": [1+1j, 2+2j, 3+3j, 4+4j],
    ...               "Temperature": [1, 2, 3, 4]}
    &gt;&gt;&gt; new_data_variable = NewDataStructure(data=data_input, index=index, title="Pressures and temperatures")
    &gt;&gt;&gt; print new_data_variable
    New Data Structure Pressures and temperatures:
                   Pressure (Pa)  Temperature
    x-axis y-axis                            
    1      10             (1+1j)            1
           20             (2+2j)            2
    2      10             (3+3j)            3
           20             (4+4j)            4

    """
    def __init__(self, data, index, title):
        super(NewDataStructure, self).__init__(data=data, index=index)
        self.title = title

    def __str__(self):
        return "New Data Structure {}:\n{}".format(self.title, super(NewDataStructure, self).__str__())

doctest.testmod()
</code></pre>
<p>Below is my result when it fails. Even on here you should be able to select the area after <code>x-axis y-axis</code> and detect whether there are trailing spaces or not.</p>
<pre><code>Failed example:
    print new_data_variable
Expected:
    New Data Structure Pressures and temperatures:
                   Pressure (Pa)  Temperature
    x-axis y-axis
    1      10             (1+1j)            1
           20             (2+2j)            2
    2      10             (3+3j)            3
           20             (4+4j)            4
Got:
    New Data Structure Pressures and temperatures:
                   Pressure (Pa)  Temperature
    x-axis y-axis                            
    1      10             (1+1j)            1
           20             (2+2j)            2
    2      10             (3+3j)            3
           20             (4+4j)            4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found a solution, using the <a href="https://docs.python.org/3/library/doctest.html#doctest.NORMALIZE_WHITESPACE" rel="noreferrer">normalize white space flag</a></p>
<p>put it either in the doctest as</p>
<pre><code>    &gt;&gt;&gt; print new_data_variable # doctest: +NORMALIZE_WHITESPACE
</code></pre>
<p>or when calling the doctest</p>
<pre><code>doctest.testmod( optionflags= doctest.NORMALIZE_WHITESPACE ) 
</code></pre>
</div>
<span class="comment-copy"><code>because the spaces are removed on saving the script.</code> What?</span>
<span class="comment-copy">@MadPhysicist I have corrected my question.</span>
<span class="comment-copy">is this your own code that makes the table?  If so, have it suppress the trailing spaces in the output.</span>
<span class="comment-copy">@NedBatchelder nope, it's the pandas dataframe code that adds the trailing spaces, I think.</span>
<span class="comment-copy">I don't see how coverage.py would be removing the spaces.  If you have a reproducible case, you could open an issue against coverage.py</span>
