<div class="post-text" itemprop="text">
<p>I'm working on a function that coverts an integer to hexidecimal.  There's more work to be done with two's compliment and handling negatives but right now I'm just working on getting the core logic to work.  Here is what I have:</p>
<pre><code>def intToHexaBin(num):
    num = abs(num)
    symdict={10:"A",11:"B",12:"C",13:"D",14:"E",15:"F"}
    rlist=[]
    while(num!=0):
        rlist.append(str(num%16))
        num//=16
    rlist=rlist[::-1]
    for i in rlist:
        if int(i) in symdict:
            print("Not sure how to swap list element for a dict value")

    print(''.join(rlist))


intToHexaBin(4512)
</code></pre>
<p>I want the output to look like this for this example:</p>
<pre><code>11A0
</code></pre>
<p>I'm trying to use a loop to iterate through <code>rlist</code> and check to see if an element in <code>rlist</code> matches a key in <code>symdict</code>.  If it does I want to swap the list element for the dictionary value that it matched.  So if say <code>10</code> is found in the list, it will be found in the dictionary and that element in the list will be changed to <code>"A"</code> the matching dict value.  I don't know where to go from here </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3.6/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> to iterate over <code>(index, value)</code> tuples. For each value you could use <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get</code></a> to either get value from <code>symdict</code> or use default value passed as a second parameter. Then just assign whatever the <code>get</code> returns to the index in <code>rlist</code>:</p>
<pre><code>def intToHexaBin(num):
    num = abs(num)
    symdict={10:"A",11:"B",12:"C",13:"D",14:"E",15:"F"}
    rlist=[]
    while(num!=0):
        rlist.append(num%16)
        num//=16
    rlist=rlist[::-1]
    print(rlist)
    for idx, val in enumerate(rlist):
        rlist[idx] = symdict.get(val, str(val))

    print(''.join(rlist))
</code></pre>
<p>Note that I've changed <code>rlist</code> to contain integers instead of strings since the keys in <code>symdict</code> are integers as well.</p>
<p>In case you just want convert <code>int</code> to hexadecimal representation you can use <a href="https://docs.python.org/3.6/library/functions.html#hex" rel="nofollow noreferrer"><code>hex</code></a> builtin:</p>
<pre><code>&gt;&gt;&gt; hex(4512)
'0x11a0' 
</code></pre>
</div>
<span class="comment-copy">Is using the <code>hex()</code> function out of the question? Sorry not sure if you wanted to roll-your-own, but the <code>hex()</code> method can convert int's, as an example, <code>hex(4512)</code> outputs <code>0x11a0</code></span>
<span class="comment-copy">The hex() method is definitely useful, but I'm doing this to work through converting ints to decimals so I better understand how the conversion works.  Plus this is good practice for coding.</span>
<span class="comment-copy">Excellent, thank you!  That did the trick.  I'm going to run through the code and learn more about enumeration.  It seems like something I could make use of in the future.</span>
