<div class="post-text" itemprop="text">
<p>I will try to provide example for the question. </p>
<p>Let's say we have 3 lists. e.g :-</p>
<pre><code>list1 =['one','two','three']
list2=['a','b','c']
list3=['mike','jack','ram']
</code></pre>
<p>Or, say there are list values for each lines in the file.</p>
<pre><code>['one','two','three']
['a','b','c']
['mike','jack','ram']
</code></pre>
<p>Now I want to write the three lists to three different files by creating them. The names of the files should be autogenerated e.g:-</p>
<pre><code>file001.txt
file002.txt
file003.txt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am assuming that your data is in the console and each list is a line.</p>
<p><strong>something like this:</strong></p>
<pre><code>line1 =['one','two','three']
line2=['a','b','c']
line3=['mike','jack','ram']
</code></pre>
<p><strong>I merged all the data into one lists of list</strong></p>
<pre><code>all_data = [line1] + [line2] + [line3]
</code></pre>
<p>This above part is not necessary if all the list values are line by line in one variable. If not you can merge them using some method.</p>
<p><strong>Now, write each line (list values) to the different file:</strong></p>
<pre><code>count = 1

for data in all_data:
    output = open('file' + str(count) + '.txt', 'w')
    output.write(','.join(data))
    count += 1
    output.close()
</code></pre>
<p>This keeps going on until the last value of the list. So, based on how many lists are there. If you want to join the values inside the list you can change the <code>''.join</code> with something desirable in the single quotes (<code>''</code>).</p>
<p>Hope I helped.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can see a detailed explanation <a href="http://www.guru99.com/reading-and-writing-files-in-python.html" rel="nofollow noreferrer">here</a> . But to sum it all up ,  you define an object of the type file , by opening a file(or creating one if it doesn't exist) , and then writing / reading / etc...</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> and <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">string formatting</a> to construct the file names.</p>
<pre><code>s = 'file{:03}.txt'
for n, lyst in enumerate((list1, list2, list3), 1):
    fname = s.format(n)
    with open(fname, 'w') as f:
        #f.write(','.join(lyst))
        f.write('\n'.join(lyst))
</code></pre>
<hr/>
<p>If any of the items are not strings change the <em>write</em> to </p>
<pre><code>        f.write('\n'.join(map(str, lyst)))
</code></pre>
<hr/>
<p>If the lists are so long that creating a single string to write to the file is prohibitive, change the <em>write</em> to</p>
<pre><code>        for thing in lyst:
            f.write('{}\n'.format(thing))
</code></pre>
</div>
<span class="comment-copy">Why does simultaneously matter; just open &amp; write one file for each list. Does your real data stream in somehow (wouldn't be a list then)? Is it very large?</span>
<span class="comment-copy">I am guessing your list values are inside one file?? something like ['one','two','three'] and next line ['a','b','c'] ??</span>
<span class="comment-copy">@NickT Yes. I have more than 50 documents that I have parsed into 50 lists. Now I have to write them into 50 files automatically.</span>
<span class="comment-copy">@everestial007 Each list writes into a diiferent file. Like list1 to file001.txt and list2 into file002.txt and so on..</span>
<span class="comment-copy">So, you want to read 50 different files in automated fashion, and each has one line of data.</span>
<span class="comment-copy">This answer is close to my solution.</span>
<span class="comment-copy">accept the answer if it helped.</span>
<span class="comment-copy">What does that have to do with simultaneity?</span>
<span class="comment-copy">I think the OP wants to generate as many files as many lines are there. I think the better approach is to read and write each line on the fly.</span>
<span class="comment-copy">@everestial007 - when you think a certain method is <i>better</i>, you should say why it is better.</span>
<span class="comment-copy">I was just trying to point out that, if data is read and write by each line (on the fly) it will work not matter how many lines are there (50 or millions).</span>
<span class="comment-copy">@everestial007 - thnx</span>
