<div class="post-text" itemprop="text">
<p>My list is laid out like this:</p>
<pre><code>1st name, last name, wins, losses
zac,kop,5,6
jack,mop,0,11
farth,tal,11,0
darth,vader,2,9
nump,kk,1,10
</code></pre>
<p>My code is this:</p>
<pre><code>def points():
    template = "|{0:30}|{1:30}|{2:30}|{3:30}|{4:30}"
    lol = template.format("1st name: ","2nd Name: ", "won: ", "lost: ","points: ")
    print(lol)

    with open(r'prac2.txt', 'r') as file:
        for line in file:
            data = line.split(',')

            if data[2] &gt;= ('1'):
                poin = (int(float(data[2]))) * 3)
                add_list = data.insert(4,poin)
                print('|{0[0]:&lt;30}|{0[1]:&lt;30}|{0[2]:&lt;30}|{0[3]:&lt;30}|{0[4]:&lt;30}'.format(data))

points()
</code></pre>
<p>The code is supposed to print out only the info of the players with at least 1 win.</p>
<p>Each win is 3 points, so the program has to calculate each players points and display it along side their information in a table.</p>
<p>The problem is that when it prints the points its on a newline indented, only the last player on the list isn't effected by this problem. Please help.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>if data[2] &gt;= ('1'):
    poin = int(float(data[2])) * 3
    data[3] = data[3].strip()
    add_list = data.insert(4,poin)
</code></pre>
<p>The last string in your split line contains a newline. You need to <code>strip()</code> it.</p>
<p>or, when you read the line:</p>
<pre><code>data = line.strip().split(',')
</code></pre>
<p>Which gives you what you want:</p>
<pre><code>&gt;&gt;&gt; points()
|1st name: |2nd Name: |won:      |lost:     |points:   
|zac       |kop       |5         |6         |15        
|farth     |tal       |11        |0         |33        
|darth     |vader     |2         |9         |6  
|nump      |kk        |1         |10        |3     
</code></pre>
<p>Also relevant:</p>
<pre><code>template = "|{0:&lt;30}|{1:&lt;30}|{2:&lt;30}|{3:&lt;30}|{4:&lt;30}"
...
print(template.format(*data))
</code></pre>
<p>works and actually uses the template you designed.</p>
<p><code>*data</code> <a href="https://docs.python.org/2/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">unpacks</a> the list into its individual components, so you don't have to subscript them in, equivalent, in this case, to doing:</p>
<p><code>print(template.format(data[0], data[1], data[2], data[3], data[4]))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you don't remove the line end characters from the last element of the line! Right before printing, after you inserted the points, <code>data</code> looks like this:</p>
<pre><code>['zac', 'kop', '5', '6\n', 15]
</code></pre>
<p>To fix it, you can add <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip</code></a> to your <code>data = ...</code> line to this:</p>
<pre><code>data = line.strip().split(',')
</code></pre>
<p>Some more points:</p>
<ul>
<li>don't compare strings when you want to compare numbers</li>
<li>skip the header line, e.g. using <code>next(file)</code> before the loop</li>
<li>no point in casting <code>wins</code> to <code>float</code> and then int, just use <code>int</code></li>
<li>instead of <code>insert(4, ...)</code> just use <code>append</code> to add to the end of the list</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>At least one of your problems is data type:</p>
<blockquote>
<pre><code> if data[2] &gt;= ('1'):
</code></pre>
</blockquote>
<p>Here you have two strings and are comparing them lexicographically.  You really want two numbers and to compare them arithmetically.</p>
<p>Without any error handling, that would look like this:</p>
<pre><code>if int(data[2]) &gt;= 1:
</code></pre>
</div>
<span class="comment-copy">Your list doesn't look like a list.</span>
<span class="comment-copy">Strings compare lexicographically.  If you want a numerical comparison: <code>int(data[2]) &gt;= 1</code>.  I'm sure this is a duplicate question, I just haven't found it yet.</span>
<span class="comment-copy"><code>if data[2] &gt;= ('1')</code> alphanum comparison. Is it deliberate?</span>
<span class="comment-copy"><code>poin = (int(float(data[2]))) * 3)</code> has one too many closing brackets at<code>data[2])))</code>.  The surrounding brackets can also be removed.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#value-comparisons" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#value-comparisons</a></span>
<span class="comment-copy">Or use <code>print( ...., end = '')</code>.</span>
<span class="comment-copy">@wwii Using <code>end=''</code> won't remove a <code>\n</code> in the middle of the string.</span>
<span class="comment-copy">.. just saw that - nevermind.</span>
