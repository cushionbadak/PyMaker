<div class="post-text" itemprop="text">
<p>I am having trouble finishing this code. My original plan was to accept a long string as input , for example '... ---.. -. -.. .... . .-.. .--.' and then be able to use morse_code = [code_input.split(' ')] to separate them and run them individually but I am either getting the first character returning from the index or no return at all so can anyone help me mend this or help lead me in the way of a simpler solution?
Thanks to all for any help!</p>
<pre><code>#morse code converter
def main():

    code_input = get_input()
    morse_code(code_input)

def get_input():

    return input('Enter morse code: ')

def morse_code(code_input):

    morse_code = [code_input]

    convert = ['--..--', '.-.-.-', '..--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..',
               '----.', '.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---' ,'-.-', '.-..', '--', '-.', '---',
               '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.-', '--..']
    new = [',', '.', '?', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
           'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',]
    print(morse_code)
    length = len(morse_code)
    for x in range(length):
        for value in range(39):
            if morse_code[x] == convert[value]:
                print(new[value])

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work for you:</p>
<pre><code>def morse_code(code_input):
    morse_codes = code_input.split(' ')
    convert = ['--..--', '.-.-.-', '..--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..',
               '----.', '.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---' ,'-.-', '.-..', '--', '-.', '---',
               '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.-', '--..']
    new = [',', '.', '?', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
           'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',]
    print(morse_codes)
    code = ''
    for x in morse_codes:
        index = convert.index(x)
        code+=new[index]
    return code

print morse_code('... ---.. -. -.. .... . .-.. .--.')
</code></pre>
<p>Output:</p>
<pre><code>['...', '---..', '-.', '-..', '....', '.', '.-..', '.--.']
'S8NDHELP'
</code></pre>
<p>As the Legendary Raymond mentioned, dict type is a better option.</p>
<p>Try <code>dict(zip(convert,new))</code> to make a dictionary for conversion.</p>
<pre><code>d = {'--..--': ',', '....-': '4', '.....': '5', '-...': 'B', '-..-': 'X',
 '.-.': 'R', '--.-': 'Q', '--..': 'Z', '.--': 'W', '..---': '2',
 '.-': 'A', '..': 'I', '-.-.': 'C', '...--': '3', '-': 'T', '.': 'E', 
 '.-..': 'L', '...': 'S', '..-': 'U', '..--..': '?', '.----': '1',
 '.--.': 'P', '-----': '0', '-.-': 'Y', '-..': 'D', '----.': '9', 
 '-....': '6', '.---': 'J', '---': 'O', '.-.-.-': '.', '--': 'M',
 '-.': 'N', '....': 'H', '---..': '8', '...-': 'V', '--...': '7',
 '--.': 'G', '..-.': 'F'}
</code></pre>
<p>To use the dict:</p>
<pre><code>translation = ''
for c in morse_codes:
    translation += d[c] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your idea to use <em>split</em> should work just fine:</p>
<pre><code>&gt;&gt;&gt; '... ---.. -. -.. .... . .-.. .--.'.split()
['...', '---..', '-.', '-..', '....', '.', '.-..', '.--.']
</code></pre>
<p>For the translation, I would use a dictionary instead of a list:</p>
<pre><code>morse2text = {'...': 's', '---': 'o'}
</code></pre>
<p>To avoid key errors, I would a do a "safe lookup" using the dictionary <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><em>get()</em></a> method:</p>
<pre><code>print( morse2text.get(m, m) )
</code></pre>
<p>Here is all the code put together (though with an incomplete dictionary) in case you want to build-off of a working example:</p>
<pre><code>morse2text = {
    '.-': 'a',
    '-..': 'd',
    '.': 'e',
    '....': 'h',
    '..': 'i',
    '-.': 'n',
    '---': 'o',
    '...': 's',
    '-': 't',
}

s = '... ---.. -. -.. .... . .-.. .--.'
for m in s.split():
    print( morse2text.get(m, m) )
</code></pre>
</div>
<span class="comment-copy">This looks a lot cleaner. Thank you for the advice!</span>
<span class="comment-copy">@ccbrantley you are welcome!</span>
<span class="comment-copy">@ccbrantley Remember to accept answers!</span>
<span class="comment-copy">while .split() works to split the strings apart there seems to be a problem when it is ran through since there are no values returned?</span>
<span class="comment-copy">nevermind... morse_code = code_input.split() works. This does not work,  morse_code = [code_input.split()]. I have been trying to remedy this for hours thank you!</span>
