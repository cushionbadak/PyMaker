<div class="post-text" itemprop="text">
<p>I am trying to import modules dynamically in Python.  Right now, I have a directory called 'modules' with two files inside; they are mod1.py and mod2.py.  They are simple test functions to return time (ie. <code>mod1.what_time('now')</code> returns the current time).</p>
<p>From my main application, I can import as follows :</p>
<pre><code>sys.path.append('/Users/dxg/import_test/modules')
import mod1
</code></pre>
<p>Then execute :</p>
<pre><code>mod1.what_time('now') 
</code></pre>
<p>and it works.</p>
<p>I am not always going to know what modules are available in the dirctory.  I wanted to <code>import</code> as follows :</p>
<pre><code>tree = []
tree = os.listdir('modules')

sys.path.append('/Users/dxg/import_test/modules')

for i in tree:
  import i
</code></pre>
<p>However I get the error :</p>
<pre class="lang-none prettyprint-override"><code>ImportError: No module named i
</code></pre>
<p>I hope I am missing something simple.  Appreciate any advice.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>import</code> instruction does not work with variable contents (as strings) (see extended explanation <a href="https://stackoverflow.com/questions/40823418">here</a>), but with file names. If you want to import dynamically, you can use the <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow noreferrer"><code>importlib.import_module</code></a> method:</p>
<pre><code>import importlib
tree = os.listdir('modules')

...

for i in tree:
    importlib.import_module(i)
</code></pre>
<p>Note:</p>
<ul>
<li><p>You can not import from a directory where the modules are not included under <code>Lib</code> or the current directory like that (adding the directory to the path won't help, see previous link for why). The simplest solution would be to make this directory (modules) a package (just drop an empty <code>__init__.py</code> file there), and call <code>importlib.import_module('..' + i, 'modules.subpkg')</code> or use the <a href="https://docs.python.org/3/library/functions.html#__import__" rel="nofollow noreferrer"><code>__import__</code></a> method.</p></li>
<li><p>You might also review <a href="https://stackoverflow.com/questions/301134">this question</a>. It discusses a similar situation.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve something <em>like</em> what you are proposing, but it will involve some un-pythonic code.  I do not recommend doing this:</p>
<pre><code>dynamic_imports = dict()
for filename in tree:
    name = filename.replace('.py', '')
    dynamic_imports[name] = __import__(name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Super easy way:</p>
<pre><code>exec(f'from {module} import *')
</code></pre>
<p>Swap out the string interpolation for long-hand if you are on Python &lt;3.6</p>
</div>
<span class="comment-copy">related <a href="http://stackoverflow.com/questions/40823418">stackoverflow.com/questions/40823418</a></span>
<span class="comment-copy">The above referenced question helps to understand why it does not work; but not if there is a solution to make this work.</span>
<span class="comment-copy">Take a look at the <a href="https://docs.python.org/2/library/functions.html#__import__" rel="nofollow noreferrer"><code>__import__()</code></a> function.</span>
<span class="comment-copy">This <a href="https://docs.python.org/2/library/functions.html#__import__" rel="nofollow noreferrer">answer</a> of mine shows using <code>__import__()</code> with <code>listdir()</code>. It's doing more than you want, but that should be easy to fix.</span>
<span class="comment-copy">Q: If you don't know what modules are available, how will your code know to use them?</span>
