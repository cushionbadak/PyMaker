<div class="post-text" itemprop="text">
<p>I am really new to Python (only started coding 2 weeks ago and still getting use to the terminology) and would love some help understanding lists and text files. </p>
<p>I have a text file that stores a list (I have also read it is called an array - is that correct?) of car details e.g.</p>
<pre><code>[1,Nissan, Red, 5, 2017]  
[2,Ford, Blue, 8, 2012]  
[3,Nissan, Yellow, 9, 2001]
</code></pre>
<p>My first question relates to "Are these lists?". Are they the same thing as coding:</p>
<pre><code>Car1 = [1,Nissan,Red, 2017]
Car2 = [2,Ford, Blue, 2012]
</code></pre>
<p>If the text file is the same as above - How do I call the data into <code>Car1</code>, <code>Car2</code> etc.?</p>
<p>My second question would be how would I say search for car '2' and then change the year, say from 2012 to 2016?</p>
<p>Any help would be very much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Lists and arrays are synonymous.</p>
<p><strong>Question 1</strong></p>
<p>Generally when data is stored, it is stored as a delimited text file. That is where the data entries are separated by some special character. For example, if a file contained</p>
<pre><code>1,Nissan,Red,5,2017
</code></pre>
<p>Then this would be a comma delimited text file (csv). You don't normally want to store data as it would be formatted by a particular language as in your example. </p>
<p><strong>Question 2</strong></p>
<p>Dictionaries in Python are probably needed so that your data would be indexed by names rather than positions. If you were to store your data as:</p>
<pre><code>cars = [
  {
    "index":1,
    "brand":"Nissan",
    "color":"Red",
    "year": 2017
  },{
    "index":2,
    "brand":"Ford",
    "color":"Blue",
    "year": 2012
  }
]
</code></pre>
<p>Then you could set <code>cars[1]["year"] = 2016</code> </p>
<p>This format will also allow you to use json formatting when writing to a text file. You could also serialize/pickle your data or use a database as other commenters have said.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would personally chose <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer" title="Data Structures - Dictionaries">dictionaries</a> in this case. You could easily define each one of them as simple as:</p>
<pre><code>{"no": 1, "maker": "Ford", "doors": "4", "year": 2016}
</code></pre>
<p>Storing and reading dicts from a file is fairly easy with <code>pickle</code> or the built-in <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer" title="json module">json library</a></p>
</div>
<span class="comment-copy">Why not use <code>pickle</code> to store an object binary into a file?</span>
<span class="comment-copy">What you're looking at is called serialization. You're trying to find the right way to serialize some data. An array is not a list, but since arrays are the most commonly-used collection in many languages and lists are the most commonly-used collection in Python, people know what you mean when you say array (even if they also know you're wrong). The objects you've written there would be better-off as tuples though <code>(1, "Nissan", "Red", 2017)</code>, since they're heterogeneous (<code>int</code>, <code>str</code>, <code>str</code>, <code>int</code>, <code>int</code>)</span>
<span class="comment-copy">If you've got a ton of these and you're using them for a non-toy project, now would be the correct time to learn to do serialization correctly. Look at the <code>sqlite3</code> stdlib module. Look up how to create a strong database structure and maintain it correctly.</span>
<span class="comment-copy">If you've only got a few, or if this is a toy project, look at storing state as a pickled object. the <code>pickle</code> stdlib module does serialization and deserialization, as do other modules such as the more standard <code>json</code>.</span>
<span class="comment-copy">If you're doing this as an exercise to better-understand the language, know that This Will Be Hard. Sanitizing input and getting helpful well-formed data out of arbitrary input is one of the hardest parts of programming (aside from naming things and off by one errors ;-) so be prepared to beat your head against the wall for a while. If those were well-formed lines (<code>[1, "Nissan", "Red", 5, 2017]</code>) you could use <code>ast.literal_eval(line)</code>, but since they're not (no quotes around your strings) you've got to write something yourself.</span>
<span class="comment-copy">Character delimited text is just <i>one</i> way to store data in files. There's literally infinitely many other possibilities. (Not all of them practical, of course.)</span>
<span class="comment-copy">Lists and arrays are not synonymous. Note that we do have <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">proper arrays in Python</a> and that they're not lists.</span>
