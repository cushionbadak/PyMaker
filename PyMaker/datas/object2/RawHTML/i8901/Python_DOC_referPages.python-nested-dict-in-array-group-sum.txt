<div class="post-text" itemprop="text">
<p>I have this data structure in Python:</p>
<pre><code>result = {
    "data": [
        {
            "2015-08-27": {
                "clicks": 10,
                "views":20

            }
        },
        {
            "2015-08-28": {
                "clicks": 6,
            }
        }
    ]
}
</code></pre>
<p>How can I add the elements of each dictionary? The output should be :</p>
<pre><code>{
    "clicks":16, # 10 + 6
    "views":20
}
</code></pre>
<p>I am looking for a Pythonic solution for this. Any solutions using Counter are welcome but I am not able to implement it.</p>
<p>I have tried this but I get an error:</p>
<pre><code>counters = []
for i in result:
    for k,v in i.items():
        counters.append(Counter(v))

sum(counters)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code was quite close to a workable solution, and we can make it work with a few important changes. The most important change is that we need to iterate over the <code>"data"</code> item in <code>result</code>.</p>
<pre><code>from collections import Counter

result = {
    "data": [
        {
            "2015-08-27": {
                "clicks": 10,
                "views":20

            }
        },
        {
            "2015-08-28": {
                "clicks": 6,
            }
        }
    ]
}

counts = Counter()
for d in result['data']:
    for k, v in d.items():
        counts.update(v)

print(counts)
</code></pre>
<p><strong>output</strong></p>
<pre><code>Counter({'views': 20, 'clicks': 16})
</code></pre>
<hr/>
<p>We can simplify that a little because we don't need the keys.</p>
<pre><code>counts = Counter()
for d in result['data']:
    for v in d.values():
        counts.update(v)
</code></pre>
<hr/>
<p>The code you posted makes a list of Counters and then tries to sum them. I guess that's also a valid strategy, but unfortunately the <code>sum</code> built-in doesn't know how to add Counters together. But we can do it using <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>functools.reduce</code></a>.</p>
<pre><code>from functools import reduce

counters = []
for d in result['data']:
    for v in d.values():
        counters.append(Counter(v))

print(reduce(Counter.__add__, counters))
</code></pre>
<p>However, I suspect that the first version will be faster, especially if there are lots of dicts to add together. Also, this version consumes more RAM, since it keeps a list of all the Counters.  </p>
<hr/>
<p>Actually we <em>can</em> use <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum</code></a> to add the Counters together, we just have to give it an empty Counter as the start value.</p>
<pre><code>print(sum(counters, Counter()))
</code></pre>
<p>We can combine this into a one-liner, eliminating the list by using a generator expression instead:</p>
<pre><code>from collections import Counter

result = {
    "data": [
        {
            "2015-08-27": {
                "clicks": 10,
                "views":20

            }
        },
        {
            "2015-08-28": {
                "clicks": 6,
            }
        }
    ]
}

totals = sum((Counter(v) for i in result['data'] for v in i.values()), Counter())
print(totals)
</code></pre>
<p><strong>output</strong></p>
<pre><code>Counter({'views': 20, 'clicks': 16})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is not the best solution as I am sure that there are libraries that can get you there in a less verbose way but it is one you can <em>easily</em> read.</p>
<pre><code>res = {}
for x in my_dict['data']:
    for y in x:
        for t in x[y]:
            res.setdefault(t, 0)
            res[t] += x[y][t]
print(res)  # {'views': 20, 'clicks': 16}
</code></pre>
</div>
<span class="comment-copy">You probably got all those down votes because you didn't show your own code attempt. Remember, even broken relevant code is better than no code.</span>
<span class="comment-copy">I made the edit that i tried . i thought my wrong solution was irrelevant</span>
<span class="comment-copy">That's much better! Showing us the wrong solution shows us that you tried to do the work and you aren't being lazy. But more importantly the bad code helps us to see the errors in your understanding of how Python works, and that helps us write answers that can correct those misunderstandings.</span>
<span class="comment-copy">@PM2Ring thanks a lot</span>
<span class="comment-copy">If i maulally iterate and sum using + it shows no error but using sum() if shows + cannot be used with counter any idead on why was that happening?</span>
<span class="comment-copy">The Counter already counts, you don't need to manually sum anything up.</span>
<span class="comment-copy">@anekix I've added some more info to my answer about that.</span>
<span class="comment-copy">@ChristianKÃ¶nig Sure, that's fine if you're accumulating all the results into one Counter, as in my first solution. But it becomes a problem if you try to add multiple Counters together.</span>
<span class="comment-copy">@PM2Ring thanks a lot for your explanation now i understand</span>
