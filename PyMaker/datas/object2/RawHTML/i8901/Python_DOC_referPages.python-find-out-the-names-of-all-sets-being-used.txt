<div class="post-text" itemprop="text">
<p>Suppose that you have a program running, and part of the program deals with sets that have been created elsewhere on the program.  But you don't know the actual names of the sets, you need to find that out.  Is that possible?  If so, how?</p>
</div>
<div class="post-text" itemprop="text">
<p>The solution using built-in <a href="https://docs.python.org/3.6/library/functions.html#globals" rel="nofollow noreferrer">globals()</a> and <a href="https://docs.python.org/3.6/library/functions.html#isinstance" rel="nofollow noreferrer">isinstance()</a> functions:</p>
<pre><code>s1 = set([1,2,3])

d = dict(a=1,b=2)

s2 = set([1,2,3])

l = [1,3,3]
s3 = set([1,2,3])

all_vars = globals().copy().items()
for k,v in all_vars:
    if isinstance(v, set):
        print(k)
</code></pre>
<p>The output:</p>
<pre><code>s1
s3
s2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = set()
b = a
c = [set()]

def fun(x):
    print(x)

fun(set())

fun(b)
</code></pre>
<p>Now what are "the name" of those sets ?</p>
<p>What I mean here is that your question doesn't make sense, it's just not how Python works. It's a typical <a href="http://xyproblem.info/" rel="nofollow noreferrer">XY problem</a>, so please post a question about your real problem, not about what you think is the solution.</p>
</div>
<span class="comment-copy">are you asking for <code>globals()</code>?</span>
<span class="comment-copy">Can you provide some more details on what you're really trying to accomplish?  It is possible to use dir()  to get a list of variables at the current scope and then do some extra work to go through that list and look for ones of type set, but that won't help if you have non-global sets elsewhere.  Alternatively, you could look at creating an InstrumentedSet wrapper (just because it feels Java-y doesn't mean it's wrong) that tracks anytime you create one</span>
<span class="comment-copy">Typical XY problem. Please explain your real problem instead.</span>
<span class="comment-copy">Voting to re-open.  This is a perfectly reasonable question.  Python does in fact have tool whose principal purpose is to aid debugging be finding the referrers to an object.  <a href="https://docs.python.org/3/library/gc.html#gc.get_referrers" rel="nofollow noreferrer">docs.python.org/3/library/gc.html#gc.get_referrers</a></span>
<span class="comment-copy">This only lists the global names which are bound to sets at this point of the program - which is not what the OP asks for.</span>
<span class="comment-copy">@brunodesthuilliers, what the OP ask for (in your opinion)?</span>
