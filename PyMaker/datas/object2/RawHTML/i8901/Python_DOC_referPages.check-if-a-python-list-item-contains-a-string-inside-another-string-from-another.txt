<div class="post-text" itemprop="text">
<p>I have a list that contains countries like so:</p>
<pre><code>country = ["england","france","germany"]
</code></pre>
<p>I would like to use this list and check if these values are within other string lists, such as: </p>
<pre><code>urllist = ["http://uk.soccerway.com/matches/2017/02/22/germany/oberliga/tus-mechtersheim-1914/hertha-wiesbach/2300594/head2head/","http://uk.soccerway.com/matches/2017/02/22/india/u18-league/delhi-united-sc-u18/sudeva-u18/2397728/head2head/","http://uk.soccerway.com/matches/2017/02/22/england/championship/bristol-city-fc/fulham-football-club/2247116/head2head/"]
</code></pre>
<p>The second value in <code>urllist</code> would be removed because it contains the value India and it's not in the country list, giving an end result of:</p>
<pre><code>urllist = ["http://uk.soccerway.com/matches/2017/02/22/germany/oberliga/tus-mechtersheim-1914/hertha-wiesbach/2300594/head2head/","http://uk.soccerway.com/matches/2017/02/22/england/championship/bristol-city-fc/fulham-football-club/2247116/head2head/"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use the split function here, and then check if the country specified in url is allowed.</p>
<pre><code>s  = 'http://a/date/france/other' 
country = s.split('/')[4] #Adapt this to your case
countries = ["england","france","germany"]

interesting_urls = [url for url in urllist if url.split('/')[4] in countries]
</code></pre>
<p>This will avoid (in)validating a country since an indian link may concern a topic with "england" in it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple list comprehension will achieve this:</p>
<pre><code>output = [i for k in country for i in urllist if k in i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the membership operator <code>in</code> to see if a string contains a substring. So, loop through <code>country</code>, and check if each element is in each url in <code>urllist</code>.</p>
<pre><code>[url for c in country for url in urllist if c in url]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>here yet another variation of it, but this time using <code>any</code> to be more clear in the intention</p>
<pre><code>&gt;&gt;&gt; [url for url in urllist if any( c in url for c in country)]
['http://uk.soccerway.com/matches/2017/02/22/germany/oberliga/tus-mechtersheim-1914/hertha-wiesbach/2300594/head2head/', 'http://uk.soccerway.com/matches/2017/02/22/england/championship/bristol-city-fc/fulham-football-club/2247116/head2head/']
&gt;&gt;&gt; 
</code></pre>
<p>you can also build a <a href="https://en.wikipedia.org/wiki/Regular_expression" rel="nofollow noreferrer">regular expression</a> to use with the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re module</a> if you want to specify the exact place in the url where you want to match the country</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; exp=r"([^/]+/+){6}"+ "({})".format( "|".join(country) )
&gt;&gt;&gt; exp
'([^/]+/+){6}(england|france|germany)'
&gt;&gt;&gt; [ url for url in urllist if re.match(exp, url) ]
['http://uk.soccerway.com/matches/2017/02/22/germany/oberliga/tus-mechtersheim-1914/hertha-wiesbach/2300594/head2head/', 'http://uk.soccerway.com/matches/2017/02/22/england/championship/bristol-city-fc/fulham-football-club/2247116/head2head/']
&gt;&gt;&gt; 
</code></pre>
<p>explanation of the expression: </p>
<ul>
<li><code>[^/]+</code> means everything that is not a <code>/</code> one or more times</li>
<li><code>/+</code> is one or more <code>/</code></li>
<li><code>([^/]+/+){6}</code> here I ask for exactly 6 groups of something like <code>*/*/*/*/*/*/</code> or in this case <code>*//*/*/*/*/*/</code></li>
<li>the rest should be self explanatory</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can do this easily with a list comprehension:</p>
<pre><code>urllist_new = set([url for url in urllist for cnty in country if cnty in url])
</code></pre>
<p>which is equivalent to</p>
<pre><code>urllist_new = []
for cnty in country:
    for url in urllist:
        if cnty in url:
            urllist_new.append(url)
urllist_new = set(urllist_new)
</code></pre>
</div>
<span class="comment-copy">So that's what you want to do - what exactly is the problem that you faced when trying to do it?</span>
<span class="comment-copy">This won't work if the country shows up in different parts of the url...</span>
<span class="comment-copy">Sure this assumes the urls parted this way obey the same pattern.</span>
<span class="comment-copy">Devil is always in the details; your approach seems problematic if a URL matches 2+ countries (either because you have us and belarus or other overlapping countries) or if the url is like www.americanews.com/germany) and also doesn't handle case</span>
<span class="comment-copy">I'm not sure I follow. That would only introduce duplicates into the list. I've added a fix for duplicates nonetheless.</span>
