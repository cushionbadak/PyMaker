<div class="post-text" itemprop="text">
<p>I'm trying to calculate a value once (because it takes a long time) and then store the value so that it can be used again.<br/>
I am aware types.MethodType but I want to just reference a property and not have to call it.</p>
<pre><code>import types

class stuff:
  @property
  def compute_once(self):
    takes_long_time_to_calculate = 5 - 2
    self.compute_once = takes_long_time_to_calculate
    return takes_long_time_to_calculate

instance = stuff()

print(instance.compute_once)
print(instance.compute_once)
</code></pre>
<p>Error Message:</p>
<pre><code>Traceback (most recent call last):
  File "try.py", line 12, in &lt;module&gt;
    print(instance.compute_once)
  File "try.py", line 7, in compute_once
    self.compute_once = takes_long_time_to_calculate
AttributeError: can't set attribute
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just need to store the result of the expensive calculation in another attribute. You can mark it as private by giving it a name with a single leading underscore. That's just a convention though, Python doesn't do anything special with such attributes, but users of your code will know that they shouldn't meddle directly with it. Python doesn't really have private attributes, instead it has the philosophy of "we're all consenting adults here". See <a href="https://stackoverflow.com/a/70736/4014959">https://stackoverflow.com/a/70736/4014959</a></p>
<pre><code>class Stuff:
    def __init__(self):
        self._compute_once = None

    @property
    def compute_once(self):
        if self._compute_once is None:
            print('Doing expensive calculation')
            self._compute_once = 2 * 3 * 5 * 7
        return self._compute_once

instance = Stuff()

print(instance.compute_once)
print(instance.compute_once)
</code></pre>
<p><strong>output</strong></p>
<pre><code>Doing expensive calculation
210
210
</code></pre>
<p>We initialize <code>._compute_once</code> to <code>None</code> and only perform the expensive calculation if <code>._compute_once</code> is <code>None</code>. We can force re-calculation at any time by resetting <code>._compute_once</code> to <code>None</code>.</p>
<p>For more info on how properties work, please read the excellent <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow noreferrer">Descriptor HowTo Guide</a> by Python core developer (and SO veteran) Raymond Hettinger.</p>
</div>
<span class="comment-copy">I realize this isn't pretty but idk</span>
