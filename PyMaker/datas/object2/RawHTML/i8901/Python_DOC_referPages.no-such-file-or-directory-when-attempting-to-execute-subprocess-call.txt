<div class="post-text" itemprop="text">
<p><strong>Preface:</strong> I understand this question has been asked before, but I cannot find a solution to my error from looking at those previous answers.</p>
<p>All I want to do is call <code>diff</code> for the output of two different commands on the same file.  </p>
<pre><code> import os, sys
 from subprocess import check_call
 import shlex

 ourCompiler = 'espressoc';
 checkCompiler = 'espressocr';

 indir = 'Tests/Espresso/GoodTests';

 check_call(["pwd"]);

 for root, dirs, filenames in os.walk(indir):
     for f in filenames:
         if len(sys.argv) == 2 and sys.argv[1] == f:
             str1 = "&lt;(./%s ./%s) " % (ourCompiler, os.path.join(root, f))
             str2 = "&lt;(./%s ./%s) " % (checkCompiler, os.path.join(root, f))
             check_call(["diff", str1, str2])
</code></pre>
<p>Why is it that I receive following error?</p>
<pre><code>diff: &lt;(./espressoc ./Tests/Espresso/GoodTests/Init.java) : No such file or directory
diff: &lt;(./espressocr ./Tests/Espresso/GoodTests/Init.java) : No such file or directory
Traceback (most recent call last):
  File "runTest.py", line 21, in &lt;module&gt;
    check_call(["diff", str1, str2])
  File "/usr/lib/python3.5/subprocess.py", line 581, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['diff', '&lt;(./espressoc ./Tests/Espresso/GoodTests/Init.java) ', '&lt;(./espressocr ./Tests/Espresso/GoodTests/Init.java) ']' returned non-zero exit status 2
</code></pre>
<p>If I were to run this command from my shell it works fine.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>diff</code> is complaining that it can't find the file with the strange name <code>&lt;(./espressoc ./Tests/Espresso/GoodTests/Init.java)</code> because that's the argument you fed it.</p>
<p><a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer"><code>subprocess.Popen</code></a> (<code>check_call</code> is a convenience function for it)  is <em>directly</em> calling what you give it, there <strong>isn't a shell</strong> to interpret redirections or anything, unless you tell it <code>shell=True</code>, which will then call the command via <code>/bin/sh</code> (on POSIX). Note the <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">security considerations</a> before using it.</p>
<p>So basically:</p>
<pre><code>subprocess.check_call(['diff', '&lt;this', '&lt;that'])` # strange files.
subprocess.check_call('diff &lt;this &lt;that', shell=True)` # /bin/sh does some redirection
</code></pre>
<p>If you wanted to be "pure" (probably more effort than it's worth), I think you could subprocess all three processes (diff, compiler 1 and 2) and handle the piping yourself. Does <code>diff</code> wait for 2 EOFs or something before closing stdin? Not sure how it actually deals with the double input redirection like your line has...</p>
</div>
