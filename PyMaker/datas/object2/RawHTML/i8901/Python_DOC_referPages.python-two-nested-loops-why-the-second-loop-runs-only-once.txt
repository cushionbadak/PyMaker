<div class="post-text" itemprop="text">
<p>This script is meant to read through a file and take in the number (numA) and the text next to it (sourceA). It then uses this and compares it to every other line in the file. If a match in "nums" is found but not in sources, it writes the num to a file along with the sources it appears in.</p>
<pre><code>with open(sortedNums, "r")as sor:
for line in sor:
    NumsA, sourceA = line.split('####')
    for line in sor:
        if '####' in line:
            NumsB, sourceB = line.split('####')
            if (NumsA == NumsB) &amp; (sourceA != sourceB):
                print("Found reused Nums")
                with open(reusedNums, 'a')as reused:
                    reused.write(NumsA + ' ' + sourceA + ' ' + sourceB)
            print ("setA: " + NumsA + ' ' + sourceA)
            print ("setB: " + NumsB + ' ' + sourceB)
</code></pre>
<p>Most of this is working except that it does the full inner loop but only the first iteration of the outer loop</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to read twice from the same file. Files use a <em>current position</em> to determine what to read next, and iterating over the remaining lines in the inner loop, you moved that position all the way to the end.</p>
<p>You could 'fix' that by seeking back to the start of the file with:</p>
<pre><code>sor.seek(0)
</code></pre>
<p>However, looping over the whole file for every line in that file is <em>really inefficient</em>. Use a dictionary to track if you have seen the same information on a previous line:</p>
<pre><code>with open(sortedNums, "r")as sor, \
     open(reusedNums, 'a') as reused:
    seen = {}
    for line in sor:
        if not '####' in line:
            continue
        nums, source = line.rstrip().split('####')
        if nums in seen and seen[nums] != source:
            print("Found reused Nums")
            reused.write('{} {} {}\n'.format(nums, source, seen[nums]))
        seen[nums] = source
</code></pre>
<p>By storing data in a dictionary, you only have to loop over the file <em>once</em>.</p>
</div>
<span class="comment-copy">You can't repeatedly loop over a file without resetting the read position. Add <code>sor.seek(0)</code>.</span>
<span class="comment-copy">Include sample from input file.</span>
<span class="comment-copy">Also, <code>&amp;</code> is <i>not</i> boolean <code>and</code>; that's the <i>binary bitwise and operator</i>. You want to use <code>and</code>.</span>
<span class="comment-copy">I'm new to python. Could you explain what <code>seen[nums] = source</code> does</span>
<span class="comment-copy">That sets a key-value pair in the dictionary; see the <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">Python tutorial</a>.</span>
<span class="comment-copy">Im getting an error on the last line. It follows the structure of <code>dictionary[key] = value</code> but gives back a syntax error. Might this be a python 3 issue? Or am I missing something?</span>
<span class="comment-copy">@S.McGuire: I missed out a closing <code>)</code> on the preceding line. Sorry about that, corrected now.</span>
<span class="comment-copy">I should have been able to find that really. That's working now. Thanks for that.</span>
