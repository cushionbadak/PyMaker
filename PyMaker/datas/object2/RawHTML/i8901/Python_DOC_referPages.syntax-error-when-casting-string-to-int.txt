<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/961632/converting-integer-to-string-in-python">Converting integer to string in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>My code:</p>
<pre><code>def digit_sum(n):
    result = 0
    s = str(n)
    for c in s:
        result += (int)c    # invalid syntax??????????
    return result

print digit_sum(1234)
</code></pre>
<p>Result:</p>
<pre><code>    result += (int)c    # invalid syntax??????????
                   ^
SyntaxError: invalid syntax
</code></pre>
<p>The function is supposed to return the sum of each digit of the argument "n".
Why do I get <code>SyntaxError</code> in the commented line? The variable <code>c</code> is of type <code>str</code>ing so it shouldnÂ´t be an issue to apply a type cast to <code>int</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python you <strong>do not cast that way</strong>. You use:</p>
<pre><code>result += <b>int(</b>c<b>)</b></code></pre>
<p>Technically speaking <em>this is not casting</em>: you <strong>call the <a href="https://docs.python.org/3/library/functions.html?highlight=int#int" rel="nofollow noreferrer"><code>int(..)</code></a> builtin function</strong> which takes as input the string and produces its equivalent as <code>int</code>. You do not cast in Python since it is a dynamically typed language.</p>
<p>Note that it is of course possible that <strong><code>c</code> contains text that is not an integer</strong>. Like <code>'the number fifteen whohaa'</code>. Of course <code>int(..)</code> cannot make sense out of that. In that case it will raise a <code>ValueError</code>. You can use <code>try</code>-<code>except</code> to handle these:</p>
<pre><code><b>try:</b>
    result += int(c)
<b>except ValueError:</b>
    # ... (do something to handle the error)
    pass</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, you cast a string to an integer by using a function <code>int()</code>.</p>
<pre><code>    result += int(c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def digit_sum(n):
        numsum=[]
        add_up=str(n)
    for n in add_up[0: len(add_up)]:
        numsum.append(int(n))
    return sum(numsum)
print digit_sum(1234)
</code></pre>
<p>Basically, you need to cast string to integer using <code>int(n)</code></p>
</div>
<span class="comment-copy">In Python you <b>do not cast that way</b>.</span>
<span class="comment-copy">This can also throw an exception if  <code>c</code> can't be converted into an integer. It will throw a <code>ValueError</code>exception so if possible treat it with a try-except.</span>
<span class="comment-copy">@Gugas: that is indeed a good suggestion. I've added that tho the answer.</span>
<span class="comment-copy">sorry but it's an <code>except</code> not a <code>catch</code> to pair with the try.</span>
<span class="comment-copy">@Gugas: yeah, some brainfreeze (or being buzzy with too many things at once). Thanks.</span>
