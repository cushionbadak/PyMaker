<div class="post-text" itemprop="text">
<p>In Python, <code>subprocess.Popen(cmd)</code> can return a <code>subprocess.Popen</code> instance, which represents a process with certain <code>cmd</code>. I'm wondering, is it possible to get such an instance by the port that the process listens to, or by the pid of the process?</p>
<p>For example, is there an API such as <code>subprocess.getProcessesByPort(port)</code> or <code>subprocess.getProcess(pid)</code>?</p>
<p>I understand such flexibility might cause security problems and will not be surprised if this is impossible. I didn't use this module before and want to look for more insights for it.</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://pythonhosted.org/psutil/" rel="nofollow noreferrer">psutil package</a> might provide what you want in a cross-platform manner.</p>
</div>
<span class="comment-copy">Thank you! I checked this module just now and it's indeed able to retrieve a process by its pid. So is it possible to cast the instance into the ones in <code>subprocess</code> module?</span>
<span class="comment-copy">I don't this so. Because Popen's  constructor invokes <b>a new</b> process: On POSIX, the class uses os.execvp()-like behavior to execute the child program. On Windows, the class uses the Windows CreateProcess() function. See <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">documentation</a>. On the other hand psutil has it's own class for the process abstraction: <code>psutil.Process</code> which might provide functionality you needed from <code>subprocess.Popen</code></span>
<span class="comment-copy">Got it that makes lots of sense. Thank you so much!</span>
