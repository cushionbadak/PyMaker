<div class="post-text" itemprop="text">
<p>I have a series of files that are in the following format:</p>
<pre><code>file_1991.xlsx
file_1992.xlsx
# there are some gaps in the file numbering sequence
file_1995.xlsx
file_1996.xlsx
file_1997.xlsx
</code></pre>
<p>For each file I want to do something like:</p>
<pre><code>import pandas as pd
data_1995 = pd.read_excel(open(directory + 'file_1995', 'rb'), sheetname = 'Sheet1')
</code></pre>
<p>do some work on the data, and save it as another file:</p>
<pre><code>output_1995 = pd.ExcelWriter('output_1995.xlsx')
data_1995.to_excel(output_1995,'Sheet1')
</code></pre>
<p>Instead of doing all these for every single file, how can I iterate through multiple files and repeat the same operation across multiple files? In other words, I would like to iterate over all the files (they mostly following a numerical sequence in their names, but there are some gaps in the sequence). </p>
<p>Thanks for the help in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use Python's <code>glob</code> module: <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">https://docs.python.org/3/library/glob.html</a></p>
<p>For example:</p>
<pre><code>import glob
for path in glob.iglob(directory + "file_*.xlsx"):
    pd.read_excel(path)
    # ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend <a href="https://docs.python.org/3.4/library/glob.html" rel="nofollow noreferrer">glob</a>.</p>
<p>Doing <code>glob.glob('file_*')</code> returns a list which you can iterate on and do work.</p>
<p>Doing <code>glob.iglob('file_*')</code> returns a generator object which is an iterator.</p>
<p>The first one will give you something like:</p>
<p><code>['file_1991.xlsx','file_1992.xlsx','file_1995.xlsx','file_1996.xlsx']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer">os.listdir</a> or <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> module to list all files in a directory.</p>
<p>With os.listdir, you can use <a href="https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch" rel="nofollow noreferrer">fnmatch</a> to filter files like this (can use a regex too);</p>
<pre><code>import fnmatch
import os

for file in os.listdir('my_directory'):
    if fnmatch.fnmatch(file, '*.xlsx'):
        pd.read_excel(open(file, 'rb'), sheetname = 'Sheet1')
        """ Do your thing to file """
</code></pre>
<p>Or with glob module (which is a shortcut for the fnmatch + listdir) you can do the same like this (or with a regex):</p>
<pre><code>import glob
for file in glob.glob("/my_directory/*.xlsx"):
    pd.read_excel(open(file, 'rb'), sheetname = 'Sheet1')
    """ Do your thing to file """
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you know how your file names can be constructed, you might <code>try</code> to open a file with the <code>'r'</code> attribute, so that <code>open(..., 'r')</code> fails if the file is non existent.</p>
<pre><code>yearly_data = {}

for year in range(1990,2018):
    try:
        f = open('file_%4.4d.xlsx'%year, 'r')
    except FileNotFoundError:
        continue # to the next year
    yearly_data[year] = ...
    f.close()
</code></pre>
</div>
<span class="comment-copy">Thanks! Can I use the <code>glob</code> module to assign variable names? For instance, I need to read the file by assigning something like this:  <code>data_1995 = pd.read_excel(open('file_1995.xlsx'), sheetname = 'Sheet1')</code></span>
<span class="comment-copy">@kfp_ny Why would you do that? You need to rethink your program.</span>
<span class="comment-copy">@kfp_ny no you can not, but if you want to keep the files you can use a dictionary and name the key values after the filename if you want to make a relation. But I would recommend not to do that and find a way to keep it dynamic if you can, as every file will be loaded to memory and you'll run into the same problem otherwise.</span>
<span class="comment-copy">@AliGajani Right. I think I got things mixed up. I'll try it again. Thanks!</span>
<span class="comment-copy">@umutto Thanks! I'll try to sort it out.</span>
