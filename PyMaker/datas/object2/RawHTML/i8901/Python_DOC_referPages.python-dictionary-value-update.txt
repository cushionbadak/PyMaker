<div class="post-text" itemprop="text">
<p>I have the following variables :</p>
<pre><code>list_m = ["a","b","c"]
list_s = ['x','y','z']
dict_m = dict.fromkeys(list_m[:])
dict_s = dict.fromkeys(list_s[:],copy.deepcopy(dict_m)) # empty dict of dicts 
</code></pre>
<p>So I have</p>
<pre><code>In[22]: dict_s
Out[22]: 
{'x': {'a': None, 'b': None, 'c': None},
 'y': {'a': None, 'b': None, 'c': None},
 'z': {'a': None, 'b': None, 'c': None}}
</code></pre>
<p>On updating a value of dict_s like this</p>
<pre><code> dict_s['x']['a']= np.arange(10)
</code></pre>
<p>I get </p>
<pre><code>In[27]: dict_s
Out[27]: 
{'x': {'a': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), 'b': None, 'c': None},
 'y': {'a': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), 'b': None, 'c': None},
 'z': {'a': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), 'b': None, 'c': None}}
</code></pre>
<p>instead of what i wanted/expected:</p>
<pre><code>In[27]: dict_s
Out[27]: 
{'x': {'a': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), 'b': None, 'c': None},
 'y': {'a': None, 'b': None, 'c': None},
 'z': {'a': None, 'b': None, 'c': None}}
</code></pre>
<p>I don't exactly understand if this is a deep/shallow copy issue or something else. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys" rel="nofollow noreferrer"><code>fromkeys</code></a> uses the same default value for each key. If you want separate values you can use dict comprehension and generate new dict for each value with <code>fromkeys</code>:</p>
<pre><code>&gt;&gt;&gt; list_m = ["a","b","c"]
&gt;&gt;&gt; list_s = ['x','y','z']
&gt;&gt;&gt; dict_s = {x: dict.fromkeys(list_m) for x in list_s}
&gt;&gt;&gt; dict_s
{'y': {'a': None, 'c': None, 'b': None}, 'x': {'a': None, 'c': None, 'b': None}, 'z': {'a': None, 'c': None, 'b': None}}
&gt;&gt;&gt; dict_s['y']['a'] = 100
&gt;&gt;&gt; dict_s
{'y': {'a': 100, 'c': None, 'b': None}, 'x': {'a': None, 'c': None, 'b': None}, 'z': {'a': None, 'c': None, 'b': None}}
</code></pre>
</div>
<span class="comment-copy">Please explain why you're trying to do with this code.</span>
<span class="comment-copy">i want the later outcome and not the former</span>
<span class="comment-copy">Your deepcopy is only performed once, and this copy is then assigned to all three keys. Try a dict comprehension instead of fromkeys</span>
<span class="comment-copy"><code>dict_s = {k:dict.fromkeys(list_m) for k in list_s}</code></span>
