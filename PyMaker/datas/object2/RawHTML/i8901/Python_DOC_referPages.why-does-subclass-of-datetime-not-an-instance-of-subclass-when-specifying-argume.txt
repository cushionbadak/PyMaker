<div class="post-text" itemprop="text">
<p>Below is sample code that subclasses datetime. </p>
<p>Since pass is the only subclass body, method '__new__' of datetime is expected to be preserved. </p>
<p>The following code has been tested on Python 3.4.2 on Mac OS 10.12.3 and Python 3.6.0 on Arch Linux. In both cases, same result.</p>
<p>The question is, why is 'a' an instance of MyDatetime when 'b' is not an instance of MyDatetime when they differ only by argument tz?</p>
<p>Thank you for your feedback. Now on with the example...</p>
<pre><code>#!/usr/bin/env python3

from datetime import datetime
from datetime import timezone

class MyDatetime(datetime):
    pass

if __name__ == '__main__':
    dt = 1231798102

    a = MyDatetime.fromtimestamp(dt)
    b = MyDatetime.fromtimestamp(dt, tz=timezone.utc)

    print('Why is isinstance(a, MyDatetime) == {}, while isinstance(b, MyDatetime) == {}?'.format(isinstance(a, MyDatetime), isinstance(b, MyDatetime)))
</code></pre>
<p>The above example prints the following:
'Why is isinstance(a, MyDatetime) == True, while isinstance(b, MyDatetime) == False?'</p>
<p>Here <code>type(a) == &lt;class '__main__.MyDatetime'&gt;</code>, while <code>type(b) == &lt;class 'datetime.datetime'&gt;</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Passing <code>tz</code> in <code>MyDatetime.fromtimestamp(dt, tz=timezone.utc)</code> invokes <a href="https://github.com/python/cpython/blob/3.6/Lib/datetime.py#L1456" rel="nofollow noreferrer"><code>tz.fromutc</code> in the implementation</a> which returns a new <code>datetime</code> object ignoring the actual subclass you've created.</p>
<p>One, but I doubt the most effective way of assuring your class gets considered:</p>
<pre><code>class MyDatetime(datetime):
    @classmethod
    def fromtimestamp(cls, t, tz=None):
        result = super().fromtimestamp(t, tz)
        if tz:
            print(result.strftime("%s"))
            return super().fromtimestamp(int(result.strftime("%s")))
        return result
</code></pre>
</div>
<span class="comment-copy">Yes, I saw that as well by looking at the source code. Would it be possible to expand the answer such that datetime can be subclassed in a way to obtain an aware datetime object, such as that documented at <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a> datetime.fromtimestamp(timestamp, timezone.utc)? Or for the principles of stackoverflow should a new question be raised?</span>
