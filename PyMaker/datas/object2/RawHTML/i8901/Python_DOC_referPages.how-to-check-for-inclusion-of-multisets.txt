<div class="post-text" itemprop="text">
<p>A multiset is a set which allows for repeats. So a submultiset is one that includes fewer or the same number of each element.</p>
<p>Is there a way to represent and operate on multisets in Python?</p>
<p>Sets obviously don't work for this. For example, the code below returns True, which is not what I want because it takes the repeated letters as one letter.</p>
<pre><code>{'h','h','h','e','e','e','e'}.issubset({'h', 'e'})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The most simple representation for a <a href="https://en.wikipedia.org/wiki/Multiset" rel="nofollow noreferrer">multiset</a> in Python which I know of is a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> object. It supports basic set operations (<code>+</code>, <code>-</code>, <code>&amp;</code>, <code>|</code>), and although it doesn't have methods like <code>issubset</code> you can probably mimic those with the more simple operations. </p>
<p>For example, </p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; big = Counter(list('hhheeee'))
&gt;&gt;&gt; small = Counter(list('he'))
&gt;&gt;&gt; big
Counter({'e': 4, 'h': 3})
</code></pre>
<p>To check if our Counter "multiset" <code>Counter({'e': 4, 'h': 3})</code> is a subset of the multiset <code>Counter({'e': 1, 'h': 1})</code>, </p>
<pre><code>&gt;&gt;&gt; not bool(big-small)
False
</code></pre>
<p>Or we could verify things like the well-known addition rule, </p>
<p><a href="https://i.stack.imgur.com/XDDQR.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/XDDQR.png"/></a> </p>
<pre><code>&gt;&gt;&gt; big | small == big + small - (big &amp; small)
True
</code></pre>
<p>It is worth noting that a <code>Counter</code> does <em>not</em> have the same breadth of interface as something like a C++ <code>std::multiset</code>, so interpreting it as an equivalent structure wouldn't be a good idea. It can be handy for some operations however. </p>
</div>
<span class="comment-copy">What do you mean, "take the repeated letters as one letter"? You are aware that a set cannot contain duplicate items?</span>
<span class="comment-copy">That set contains two elements ('h' and 'e'). You can't repeat items in a set, because a set consists of unique elements. IOW, you can add 'h' to the set a billion times and you'll still end up with a set with a single element.</span>
