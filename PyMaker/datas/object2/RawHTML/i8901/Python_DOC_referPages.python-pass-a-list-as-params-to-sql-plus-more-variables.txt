<div class="post-text" itemprop="text">
<p>I'm trying to pass a an unknown number of params to SQL Server in python 3.6.  Here is my code using pypyodbc:</p>
<pre><code>cursor = cnxn.cursor()
theargs= ['1033286869','1053474957','1063654630','1104116235','1104910306','JASON']

thesql = """SELECT * 
            FROM BI_DUPLICATES_STAGE_0 
            WHERE DUP_ID IN (?, ?, ?, ?, ?)
            AND FRST_NM = ?
         """
cursor.execute(thesql, theargs)
resultset = cursor.fetchall()
</code></pre>
<p>This works.  However, I'm never sure how many DUP_IDs I'm going to have.  I've seen some examples of using a list, but then if I have another variable such as is this case, <code>FRST_NM</code>, then I can't just use the list.</p>
<p>So if somebody could provide a simple example of having a list (of varying length), and another variable and how to get SQL to run that I would greatly appreciate it!  I'm not bound to using pypyodbc if that is the issue and there is another way to do this.</p>
<p>UPDATE:
Thank you for the nicely formatted answer.  Just one quick follow-up question.  I'm still a little unclear how I would format 2 lists if I had to produce something like:
<code>
SELECT * FROM BI_DUPLICATES_STAGE_0
WHERE DUP_ID IN (1033286869, 1053474957, 1063654630, 1104116235, 1104910306)
AND MID_NM IN ('SMITH','JON')
AND FRST_NM = 'JASON'
</code></p>
<p>Without the nice format join, I have some mess like this:
<code>
SELECT * FROM BI_DUPLICATES_STAGE_0 
WHERE DUP_ID IN (?,?,?,?,?)
AND MID_NM IN (?,?)
AND FRST_NM = ?
</code></p>
<p>How would I format the list twice as suggested?  Keeping in mind I won't know how long each list (the ID and MID_NM) are actually going to be.</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider formatting the string to dynamically build <code>?</code> placeholders by length of lists, <em>theargs</em> and <em>otherargs</em>. Do note the last name should be at end of param list to correspond to last <code>?</code> placedholder. Once done building the prepared statement, pass to <code>cursor.execute()</code> with param values:</p>
<pre><code>theargs= ['1033286869','1053474957','1063654630','1104116235','1104910306']
otherargs = ['SMITH','JON']
lastarg = ['JASON']
allargs = theargs + otherargs + lastarg

thesql = """SELECT * 
            FROM BI_DUPLICATES_STAGE_0 
            WHERE DUP_ID IN ({})
            AND MID_NM IN ({})
            AND FRST_NM = ?
         """.format(",".join(['?' for i in range(len(theargs))]),
                    ",".join(['?' for i in range(len(otherargs))]))    
print(thesql)

# SELECT * 
#             FROM BI_DUPLICATES_STAGE_0 
#             WHERE DUP_ID IN (?,?,?,?,?)
#             AND MID_NM IN (?,?)
#             AND FRST_NM = ?

cursor.execute(thesql, allargs)
</code></pre>
</div>
<span class="comment-copy"><i>I have some mess like this</i>...why is that query a mess? That is a prepared statement for a parameterized query.</span>
<span class="comment-copy">Interesting!  If my WHERE clause was something like: WHERE id IN (1,2,3) AND othervalue IN ('a','b','c') AND name = 'Bob' would there be a clever way to handle multiple lists of unknown lengths that I'm not seeing?  I'm just surprised there isn't a simple IN (@list) kind of parameter way to pass stuff :)</span>
<span class="comment-copy">You would need to format twice for both lists. SQL is declarative language. So as soon as a table, column, variable, even clauses like <code>WHERE</code> or <code>GROUP BY</code> or <code>JOIN</code> is declared it is immutable. Hence, it cannot dynamically change per conditions. Python can dynamically build the string but once built, SQL processes in one call.</span>
<span class="comment-copy">Thank you very much for the answer.  I've updated the question with a small follow-up.  I'm a little unclear how I would format twice for both lists :)</span>
<span class="comment-copy">See update. Simply extend <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format()</code></a> with another <code>.join</code> string. Also note how the <code>FRST_NM</code> param should be placed at the end. By the way, hopefully your lists do not extend to thousands as various databases have limits of values in <code>IN()</code> clause. Consider using temp tables for such large lists.</span>
