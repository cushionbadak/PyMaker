<div class="post-text" itemprop="text">
<p>This is from scraping data off of IMDB. I have four lists of items - ratings, rankings, titles, years. I need to take these lists and merge them into a list of dictionaries which would look like:</p>
<pre><code>dict_list = [{'rating':value_from_rating_list, 
              'ranking':value_from_ranking_list,
              'year':value_year_list,
              'title':value_from_title_list}, 
             {entry two}, 
             {entry three}, 
              etc...]
</code></pre>
<p>The end product being a list of dictionaries, with each dictionary having those four keys with the different values from the the four lists of items, so if looking at a completed dictionary within the list it would look like:</p>
<pre><code>{'rating':8.5, 'ranking':10, 'year':2010, 'title':'Movie Name'}
</code></pre>
<p>with each of key values coming from one of the separate lists.</p>
<p>I've tried generating a dictionary with the key names in place e.g.:</p>
<pre><code>key_names = {'rating':None, 'year':None, 'ranking':None, 'title':None}

lis = []

for i in range(1,20):
   lis.append(key_names)
</code></pre>
<p>But I'm not sure after doing that how to update the individual dictionaries within the list with the values from the other four pre-generated lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>You say you have 4 pre-generated lists, in that case (assuming the <code>i</code>-th item belongs together) you can zip them:</p>
<pre><code>mov = ['a', 'b', 'c']
rat = [1, 2, 3]
year = [1999, 2000, 2010]

[{'title': t, 'year': y, 'rating': r} for t, r, y in zip(mov, rat, year)]
</code></pre>
<p>which gives:</p>
<pre><code>[{'rating': 1, 'title': 'a', 'year': 1999},
 {'rating': 2, 'title': 'b', 'year': 2000},
 {'rating': 3, 'title': 'c', 'year': 2010}]
</code></pre>
<hr/>
<p>However I personally would prefer an immutable structure like <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer"><code>collections.namedtuple</code></a> here:</p>
<pre><code>from collections import namedtuple

Movie = namedtuple('Movie', ['title', 'year', 'rating', 'ranking'])

mov = ['a', 'b', 'c']
rat = [1, 2, 3]
rank = [10, 9, 10]
year = [1999, 2000, 2010]

&gt;&gt;&gt; [Movie(t, y, rt, rk) for t, rt, y, rk in zip(mov, rat, year, rank)]
[Movie(title='a', year=1999, rating=1, ranking=10),
 Movie(title='b', year=2000, rating=2, ranking=9),
 Movie(title='c', year=2010, rating=3, ranking=10)]
</code></pre>
<p>That's a matter of preference, <code>namedtuple</code> is just an alternative.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need pre-populate keys. Not existed keys automatically created on update. </p>
<pre><code>key_names.update(your_new_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Suppose you have following four lists, 2 elements each:</p>
<pre><code>In [177]: l1 = range(2)
In [178]: l2 = range(8, 10)
In [179]: l3 = range(12, 14)
In [180]: l4 = range(15, 17)
</code></pre>
<p>Let's create a list where'll store the result:</p>
<pre><code>In [181]: l = []
</code></pre>
<p>Iterate through the first list and create a new dictionary for each iteration:</p>
<pre><code>In [184]: for ind, i in enumerate(l1):
      d = {"a": i, "b": l2[ind], "c": l3[ind], "d": l4[ind]}
      l.append(d)

In [189]: l
Out[189]: [{'a': 0, 'b': 8, 'c': 12, 'd': 15},
           {'a': 1, 'b': 9, 'c': 13, 'd': 16}]
</code></pre>
</div>
<span class="comment-copy">Tried this... Worked perfectly! Thanks! Still pretty new to Python and still learning, seemingly, by the moment!</span>
<span class="comment-copy">@mswhitehead No problem. Please don't forget to <a href="http://stackoverflow.com/help/accepted-answer">upvote/accept</a> helpful answers. :)</span>
