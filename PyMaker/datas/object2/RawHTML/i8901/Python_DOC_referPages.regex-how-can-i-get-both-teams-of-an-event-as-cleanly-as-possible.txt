<div class="post-text" itemprop="text">
<p>I have been trying for a while now to successfully parse through bookmaker sites and retrieve markets/odds.</p>
<p>I have come to a point where I fetch the .text attribute of a Selenium web-element so I have something like this:</p>
<p><strong>Edited to showcase more examples</strong></p>
<pre><code>BPZ vs Griffin - League of Legends - Challenger Korea
Sat 2/25   1511 BPZ 1.645         
10:30PM   1512 Griffin   2.250

Team Battle Comics vs RisingStar Gaming - League of Legends - Challenger Korea
Sat 2/25   1513 Team Battle Comics 5.800         
11:59PM   1514 RisingStar Gaming   1.133

Going In vs Hala Ares - Dota 2 - Prodota Cup
Sat 2/25   1529 Going In 1.667         
1:30PM   1530 Hala Ares   2.200

Unicorns of Love vs G2 Esports - League of Legends - Intel Extreme Masters
Sat 2/25   1545 Unicorns of Love 2.750         
11:15AM   1546 G2 Esports   1.444
</code></pre>
<p>What I am unable to do after literally hours of googling regex and reading the syntax, is to extract parts of this string as i need them. In the above string, if i could use regex to filter it into a dictionary that would look like this:</p>
<pre><code>{'event':'BPZ vs Griffin - League of Legends',
 'outcome1':'BPZ',
 'outcome2':'Griffin',
 'outcome1odds':1.645,
 'outcome2odds':2.25,
 'date':'Sat 2/25',
 'time':'10:30PM'}
</code></pre>
<p>Then I would be extremely happy. I am fairly sure it is possible, but i am having too many difficulties wrapping my head around regex to achieve it. Any help and/or resources is much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>The solution using <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">re.match()</a> and <a href="https://docs.python.org/3/library/re.html#re.match.groupdict" rel="nofollow noreferrer">match.groupdict()</a> (gets all the named subgroups of the match) methods:</p>
<pre><code>s = '''
BPZ vs Griffin - League of Legends - Challenger Korea
Sat 2/25   1511 BPZ 1.645
10:30PM   1512 Griffin   2.250
'''
p = r'^(?P&lt;event&gt;[\w ]+-[\w ]+)\s[\w\s-]+' \
    r'(?P&lt;date&gt;[A-Z]\w+ \d+\/\d{2})\s+\d+\s(?P&lt;outcome1&gt;[\w ]+)' \
    r'(?P&lt;outcome1odds&gt;\d+\.\d+)\s+(?P&lt;time&gt;\d+:\d+(AM|PM))\s+\d+\s' \
    r'(?P&lt;outcome2&gt;[\w ]+)(?P&lt;outcome2odds&gt;\d+\.\d+)'

matches = re.match(p, s.strip(), re.M)
result = {k:v.strip() for k,v in matches.groupdict().items()}
print(result)
</code></pre>
<p>The output:</p>
<pre><code>{'time': '10:30PM', 'event': 'BPZ vs Griffin - League of Legends', 'outcome2odds': '2.250', 'date': 'Sat 2/25', 'outcome2': 'Griffin', 'outcome1': 'BPZ', 'outcome1odds': '1.645'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This pattern should do the trick:</p>
<pre><code>(?P&lt;event&gt;(?P&lt;outcome1&gt;[^-]+?) vs (?P&lt;outcome2&gt;[^-]+) -.*?) -[^\b]*?(?P&lt;date&gt;(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) \d+/\d+(?:/\d+)?)[^.]*(?P&lt;outcome1odds&gt;\d+\.\d+)\s+(?P&lt;time&gt;\d+:\d+[AP]M)[^.]*(?P&lt;outcome2odds&gt;\d+\.\d+)
</code></pre>
<p>It's very long, but in exchange you can use the <code>.groupdict()</code> function to directly get your desired result:</p>
<pre><code>print(re.match(pattern, text).groupdict())
</code></pre>
<hr/>
<p>Breakdown:</p>
<pre><code>(?P&lt;event&gt;          # in a named capture group, match...
    (?P&lt;outcome1&gt;   # outcome1, which is...
        [^-]+?      # all text up to...
    ) 
     vs             # a literal " vs " 
    (?P&lt;outcome2&gt;   # outcome2 is...
        [^-]+       # all text up to...
    )
     -              # the next literal " -"
    .*?             # still inside the "event" group, match until...
)
 -                  # a literal " -"
[^\b]*?             # skip forward to...
(?P&lt;date&gt;           # the date, which is...
    (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) # a weekday
     \d+/\d+(?:/\d+)?   # followed by digits separated with /
)
[^.]*               # skip worward to...
(?P&lt;outcome1odds&gt; 
    \d+\.\d+        # a floating point number
)
\s+
(?P&lt;time&gt;           # match the time, which is...
    \d+:\d+         # digits separated with :
    [AP]M           # followed by AM or PM
)
[^.]*               # skip to...
(?P&lt;outcome2odds&gt; 
    \d+\.\d+        # another floating point number
)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>with this long regex, you can find your data in 8 Groups:</p>
<pre><code>(.*-.*)\s-\s.*\n(\w{3})\s*(\d+\/\d+)\s*\d+\s*(\w+)\s*(\d+\.?\d*)\s*\n(\d+\:\d+\w\w)\s*\d+\s*(\w+)\s*(\d+\.?\d*)

Full match  0-104   `BPZ vs Griffin - League of Legends - Challenger Korea Sat 2/25 1511 BPZ 1.645
10:30PM 1512 Griffin 2.250`

Group 1.    n/a `BPZ vs Griffin - League of Legends`
Group 2.    n/a `Sat`
Group 3.    n/a `2/25`
Group 4.    n/a `BPZ`
Group 5.    n/a `1.645`
Group 6.    n/a `10:30PM`
Group 7.    n/a `Griffin`
Group 8.    n/a `2.250`

{'event':'$1',
 'outcome1':'$4',
 'outcome2':'$7',
 'outcome1odds':$5,
 'outcome2odds':$8,
 'date':'$2 $3',
 'time':'$6'}
</code></pre>
<p><a href="https://regex101.com/r/2IdfnB/2" rel="nofollow noreferrer">https://regex101.com/r/2IdfnB/2</a></p>
</div>
<span class="comment-copy">It would help if you could post more text samples. Regex is all about pattern matching, and it's difficult to discern a pattern from a single example.</span>
<span class="comment-copy">Is the text sample you are showing the exact same format you are always dealing with?</span>
<span class="comment-copy">Are your sets of data always separated by a new line like that? Or did you break that apart?</span>
<span class="comment-copy">Posted more examples. And yes, more or less the same format.</span>
<span class="comment-copy">are there linebreaks in the actual string?</span>
<span class="comment-copy">Wow, that is some good stuff. I just made a function to process any event output in a matter of seconds from copy/pasting most of your code. Thanks a ton good Sir!</span>
<span class="comment-copy">@TobiasJørgensen, you're welcome</span>
<span class="comment-copy">I got Muhamad solution implemented fairly easy, and thus i think i should mark him as the answer (?) Will do for this moment.. but thank you for that detailed breakdown, i had no idea why muhamads solution was working but now i actually am getting it.. Regex is a headache for me.. Thank you for your answer.</span>
<span class="comment-copy">That looks very promising Sir! I will give it a go and see how it behaves for me. Thanks for taking time to answer newbie me. :)</span>
<span class="comment-copy">Do you extracting this examples from HTML Table? @TobiasJørgensen</span>
<span class="comment-copy">yes, in my selenium code i find all elements in a table by their classes and then do .text on those to get the output i showcase.</span>
<span class="comment-copy">I can't advice any solution in python because I'm not familiar with it, and now you've found desire answer.</span>
