<div class="post-text" itemprop="text">
<p>I'm trying to produce an image from an array using <code>imshow</code>, and export it to file without having any whitespace added.</p>
<p>In the case in which the data has equal width and height I managed to achieve this by following <a href="https://stackoverflow.com/a/9295367/4063051">this answer</a>:</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
def borderless_imshow_save(data, outputname, size=(1, 1), dpi=80):
    fig = plt.figure()
    fig.set_size_inches(size)
    ax = plt.Axes(fig, [0, 0, 1, 1])
    ax.set_axis_off()
    fig.add_axes(ax)

    ax.imshow(data);
    plt.savefig(outputname, dpi=dpi)

data = np.random.randn(40, 40)
borderless_imshow_save(data, 'test.png', dpi=100)
</code></pre>
<p>This works perfectly.
However, I actually need to do this for data that is rectangular, that is, something like <code>np.random.randn(40, 100)</code>.</p>
<p>In this case, the code above does not work, as again whitespace is produced in the final image.
I tried playing with the <code>size</code> parameter and the arguments of <code>plt.Axes</code> but without success.</p>
<p>What's the best way to achieve this?</p>
<p>Note that <code>imsave</code> actually works here with something like</p>
<pre><code>plt.imsave('test.png', np.random.randn(40, 100))
</code></pre>
<p>the problem with this is that with <code>imsave</code> I do not have access to same amount of options I have with <code>imshow</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is you are specifying a square figure size with <code>size=(1,1)</code> and then plotting a rectangular image. I have modified your code to eliminate the white space around the figure by automatically setting the figure size to match the dimensions of the input data. The size parameter now specifies the width of the image, and the height is scaled from that:</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt

def borderless_imshow_save(data, outputname, size = 1, dpi=80):
    width = 1*size
    height = data.shape[0] / data.shape[1] * size
    size=(width, height)
    fig = plt.figure(figsize=size, dpi=dpi)
    ax = fig.add_axes([0, 0, 1, 1])
    ax.set_axis_off()

    ax.imshow(data);
    fig.savefig(outputname, dpi=dpi)

data = np.random.randn(40, 100)
borderless_imshow_save(data, 'test.png', size=5, dpi=100)
</code></pre>
<p>Saved image:</p>
<p><a href="https://i.stack.imgur.com/HACO8.png" rel="nofollow noreferrer"><img alt="Image with no borders" src="https://i.stack.imgur.com/HACO8.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>An easy option is to not care about the actual size of the figure and just crop the image automatically while saving.</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt

data = np.random.randn(40, 100)
fig, ax = plt.subplots()
ax.imshow(data)
ax.set_axis_off()
fig.savefig("data.png", bbox_inches="tight", pad_inches=0)
</code></pre>
</div>
<span class="comment-copy">does this actually work for you? When I add that option the whitespace actually increases. Note that I'm interested in the case in which <code>data=np.random.randn(40, 100)</code></span>
<span class="comment-copy">Hmm, you are right, it does increase the whitespace...</span>
<span class="comment-copy">I think the problem is you are setting the size of the figure, preventing it from shrinking to fit the size of the plot. If you specify a square figure size and then plot a rectangle, there will be margins. You can make the background transparent instead of white using "transparent = True" in plt.savefig().</span>
<span class="comment-copy">ah! this works. I tried something similar but also changing the values in <code>plt.Axes</code> which I guess was not right. Thanks</span>
<span class="comment-copy">You're welcome!</span>
