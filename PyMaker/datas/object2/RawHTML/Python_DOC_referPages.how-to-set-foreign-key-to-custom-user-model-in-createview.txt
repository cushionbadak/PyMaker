<div class="post-text" itemprop="text">
<p>I have this custom user model 'es_user'</p>
<p><strong>models.py</strong></p>
<pre><code>class es_user(models.Model):
user = models.OneToOneField(User, on_delete=models.CASCADE)

class es_event(models.Model):
    ev_name = models.CharField(max_length=100)
    ev_venue = models.CharField(max_length=100)
    ev_admin =  models.ForeignKey('es_user',related_name='events',on_delete=None)
</code></pre>
<p>Eventually, I'll be adding more fields to es_user that's why I used a custom user model. So I cannot settle for django's inbuilt user model.</p>
<p><strong>views.py</strong></p>
<pre><code>class CreateEventView(LoginRequiredMixin,CreateView):
    model = es_event
    fields = ['ev_name','ev_venue','ev_date','ev_description']
    def form_valid(self, form):
        form.instance.ev_admin = self.request.user
        return super(CreateEventView, self).form_valid(form)
</code></pre>
<p>when I submit the form I get this error</p>
<pre><code>Cannot assign "&lt;SimpleLazyObject: &lt;User: randy&gt;&gt;": "es_event.ev_admin" must be a "es_user" instance.
</code></pre>
<p>I've checked Django documentation and other stack overflow posts, but in all those the foreign key is referencing Django's inbuilt user model</p>
</div>
<div class="post-text" itemprop="text">
<p>So just assign the es_user, not the auth user.</p>
<pre><code>form.instance.ev_admin = self.request.user.es_user
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can fetch the <code>es_user</code> instead:</p>
<pre><code>form.instance.ev_admin = es_user.objects.get(user=self.request.user)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>everything worked fine when I made some changes to views.py and models.py</p>
<p><strong>views.py</strong></p>
<pre><code>class CreateEventView(LoginRequiredMixin,CreateView):
model = es_event
fields = ['ev_name','ev_venue','ev_date','ev_description']
def form_valid(self, form):
    form.instance.ev_admin = self.request.user.es_user
</code></pre>
<p>models.py</p>
<pre><code>class es_user(models.Model):
      user = models.OneToOneField(User,related_name='es_user', on_delete=models.CASCADE)
</code></pre>
</div>
<span class="comment-copy">when I changed it i get this error  <code>self.related.get_accessor_name() django.contrib.auth.models.User.es_user.RelatedObjectDoesNotExist: User has no es_user</code>.</span>
<span class="comment-copy">Well, that's clearly telling you that there is no es_user for the current logged-in user. Did you create one?</span>
<span class="comment-copy">when I changed the user field of es_user to <code>user = models.OneToOneField(User,related_name='es_user', on_delete=models.CASCADE)</code> . it worked  thanks @Daniel Roseman</span>
