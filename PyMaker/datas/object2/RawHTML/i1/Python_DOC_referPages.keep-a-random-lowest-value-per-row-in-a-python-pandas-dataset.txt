<div class="post-text" itemprop="text">
<p>I have a dataframe where every line is ranked on several attributes vs. all the other rows. A single line can have the same rank in 2 attributes (meaning a row can be the best in few attributes) like shown in row 2 and 3 below:</p>
<pre><code>     att_1  att_2  att_3 att_4
ID   
984   5       3      1     46
794   1       1      99    34
6471  20      2      3     2
</code></pre>
<p>Per line, I want to keep the index (ID) and the cell with the lowest value - in case there is more than 1 cell, I have to select a random one to keep a normal distribution.</p>
<p>I managed to convert the df into a numpy array and run the following:</p>
<pre><code>idx = np.argmin(h_data.values, axis=1)
</code></pre>
<p>But I get the first line every time.. </p>
<p>Desired output:</p>
<pre><code>ID   MIN
984   att_3
794   att_2
6471  att_1
</code></pre>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use list comprehension with <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html" rel="nofollow noreferrer"><code>numpy.random.choice</code></a>:</p>
<pre><code>df['MIN'] = [np.random.choice(df.columns[x == x.min()], 1)[0] for x in df.values]
print (df)
      att_1  att_2  att_3  att_4    MIN
ID                                     
984       5      3      1     46  att_3
794       1      1     99     34  att_1
6471     20      2      3      2  att_2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I you want to do something for each row (or column), you should try the .apply method</p>
<pre><code>df.apply(np.argmin, axis=1) #row wise
df.apply(np.argmin, axis=0) #column wise
</code></pre>
</div>
<span class="comment-copy">can you give an example of your desired output?</span>
<span class="comment-copy">Is this what you required? <code>df['min'] = (df.apply(lambda x: x.argmin() ,axis=1))</code>. Sohw us your expected o/p.</span>
<span class="comment-copy">@Craicerjack added desired output. Apply method works but it always return the first occurrence where I need a random one. So I need per line to keep an array of the smallest rank (1 being the highest) and then choose a random one.</span>
<span class="comment-copy">@Chen - Edited answer.</span>
<span class="comment-copy">That works! I had an error about int operator on string but managed to recover. Thank you @jezrael</span>
<span class="comment-copy">@Chen - You are welcome!</span>
<span class="comment-copy">this works but doesn't return a random column when 2 identical ranks are present. (my actual data set has 20 columns with many identical ranks)</span>
