<div class="post-text" itemprop="text">
<p>In python, to print dynamically, the standard method is to use carriage return.</p>
<p>Like so</p>
<pre class="lang-py prettyprint-override"><code>sys.stdout.write(f"\r {some_str}")
sys.stdout.flush()

#or

print(f"{some_str}", end="\r", flush=True)
</code></pre>
<p>But if my previous line was longer than the current line, it lingers.
For example, the following code - </p>
<pre class="lang-py prettyprint-override"><code>for i in range(100):  
   print(f"{10000*(99-i)} text", end='\r', flush=True)
   time.sleep(0.03)
</code></pre>
<p>ends with the following as the final output</p>
<pre><code>0 texttextt
</code></pre>
<p>instead of </p>
<pre><code>0 text
</code></pre>
<p>How do I make the program erase the line completely before the next input?</p>
</div>
<div class="post-text" itemprop="text">
<p>A general solution to this is surprisingly complicated, and probably involves the use of <code>curses</code> or some similar module to abstract away most of the system dependencies.</p>
<p>In your case, the easiest solution is probably to pad the number (using something like <code>...:6d</code> in the format template) so that it is always has the same length. Alternatively, you could put a suitable number of spaces at the end of the line, so that it wipes out whatever comes after it as it gets shorter. Both of these solutions cause problems if the line is so long that it gets wrapped.</p>
</div>
<span class="comment-copy">Oh :/ Can you provide a snippet that demonstrates this?</span>
