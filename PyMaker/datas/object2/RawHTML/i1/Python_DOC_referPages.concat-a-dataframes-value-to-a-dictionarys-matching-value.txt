<div class="post-text" itemprop="text">
<p>Tangent related to this post: <a href="https://stackoverflow.com/questions/55148478/customize-bokeh-unemployment-example-replacing-percentage-value">Customize Bokeh Unemployment Example: Replacing Percentage Value</a></p>
<p>Starter code:
<a href="https://bokeh.pydata.org/en/latest/docs/gallery/texas.html" rel="nofollow noreferrer">https://bokeh.pydata.org/en/latest/docs/gallery/texas.html</a></p>
<pre><code>from bokeh.io import show
from bokeh.models import LogColorMapper
from bokeh.palettes import Viridis6 as palette
from bokeh.plotting import figure

from bokeh.sampledata.us_counties import data as counties
counties = { code: county for code, county in counties.items() if county["state"] == "tx" }
</code></pre>
<p>csv data:</p>
<p><a href="https://i.stack.imgur.com/slG9g.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/slG9g.png"/></a></p>
<pre><code>I have a dictionary of county names:
{(48, 1): {'name': 'Anderson',
  'detailed name': 'Anderson County, Texas',
  'state': 'tx'}
{(48, 3): {'name': 'Andrews',
  'detailed name': 'Andrews County, Texas',
  'state': 'tx'}

and a dataframe created from a csv file of percentage values:
 {'Anderson': 21.0,
 'Andrews': 28.0,
 'Angelina': 31.0,
 'Aransas': 24.0,
 'Archer': 11.0,
 'Armstrong': 53.0,
 'Atascosa': 27.0,
 'Austin': 30.0,
 'Bailey': 42.0,
 'Bandera': 0.0}
</code></pre>
<p>I am trying to merge the dataframe's percentage value on the county name in the dictionary.</p>
<pre><code>from bokeh.models import LogColorMapper
from bokeh.palettes import Viridis6 as palette
from bokeh.plotting import figure, show
from bokeh.sampledata.us_counties import data as counties
import csv
import pandas as pd

pharmacy_concentration = {}
with open('resources/unemployment.csv', mode = 'r') as infile:
    next(infile)
    reader = csv.reader(infile, delimiter = ',', quotechar = '"')
    for row in reader:
        name, concentration = row 
            pharmacy_concentration[name] = float(concentration)

counties = { code: county for code, county in counties.items() if county["state"] == "tx" }
counties = pd.concat(pharmacy_concentration[concentration], on='name', 
how='left', keys='concentration')

counties
</code></pre>
<p>I receive a keyerror showing the percentage value and can't figure out why.</p>
<p>Expected output:</p>
<pre><code> counties
 {(48, 1): {'name': 'Anderson',
 'detailed name': 'Anderson County, Texas',
 'state': 'tx', 'concentration': 21}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you correctly, this is what you want to do:</p>
<p>First of all, we get your dictionarys in two dataframes: <code>county_names</code> &amp; <code>csv_data</code>.
After that I transform them to the right format, but this is probably not necessary for you:</p>
<pre><code>county_names = pd.DataFrame({'(48, 1)': {'name': 'Anderson', 'detailed name': 'Anderson County, Texas', 'state': 'tx'}, 
                             '(48, 3)': {'name': 'Andrews', 'detailed name': 'Andrews County, Texas', 'state': 'tx'}}).T.reset_index().rename({'index': 'County_ID'}, axis=1)

print(county_names)
  County_ID           detailed name      name state
0   (48, 1)  Anderson County, Texas  Anderson    tx
1   (48, 3)   Andrews County, Texas   Andrews    tx

 d = {'Anderson': 21.0,
 'Andrews': 28.0,
 'Angelina': 31.0,
 'Aransas': 24.0,
 'Archer': 11.0,
 'Armstrong': 53.0,
 'Atascosa': 27.0,
 'Austin': 30.0,
 'Bailey': 42.0,
 'Bandera': 0.0}

csv_data = pd.DataFrame(d, index=[0]).melt(var_name='name', value_name='concentration')
print(csv_data)
        name  concentration
0   Anderson           21.0
1    Andrews           28.0
2   Angelina           31.0
3    Aransas           24.0
4     Archer           11.0
5  Armstrong           53.0
6   Atascosa           27.0
7     Austin           30.0
8     Bailey           42.0
9    Bandera            0.0
</code></pre>
<p>Now we can merge our data on the <code>name</code> column:</p>
<pre><code>df_final = pd.merge(county_names, csv_data, on='name')

print(df_final)
  County_ID           detailed name      name state  concentration
0   (48, 1)  Anderson County, Texas  Anderson    tx           21.0
1   (48, 3)   Andrews County, Texas   Andrews    tx           28.0
</code></pre>
<p><strong>Note</strong><br/>
You can easily read a <code>csv file</code> with pandas, simply use:</p>
<pre><code>pd.read_csv(infile, delimiter = ',', quotechar = '"')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Credit to @Tony</p>
<pre><code>from bokeh.models import LogColorMapper
from bokeh.palettes import Viridis256 as palette
from bokeh.plotting import figure, show
from bokeh.sampledata.us_counties import data as counties
import csv

pharmacy_concentration = {}
with open('resources/unemployment.csv', mode = 'r') as infile:
    reader = [row for row in csv.reader(infile.read().splitlines())]
    for row in reader:
        try:
            county_name, concentration = row
            pharmacy_concentration[county_name] = float(concentration)
        except Exception, error:
            print error, row

counties = { code: county for code, county in counties.items() if county["state"] == 
"tx" }
county_xs = [county["lons"] for county in counties.values()]
county_ys = [county["lats"] for county in counties.values()]
county_names = [county['name'] for county in counties.values()]
# Below is the line of code I was missing to make it work
county_pharmacy_concentration_rates = [pharmacy_concentration[counties[county] 
['name']] for county in counties if counties[county]['name'] in 
pharmacy_concentration]
</code></pre>
</div>
<span class="comment-copy">Please include the entire dictionarys (if they are not too big)</span>
<span class="comment-copy">Added. The csv has one unique value for each county name, no duplicates.</span>
<span class="comment-copy">I did not mean the picture, I mean the piece of code, so I can copy and run myself @BoredPando</span>
<span class="comment-copy">Sorry can I add a csv file to my post? I couldn't figure out how to do that. The csv is two columns: name and concentration. If you can get 1 row to concat it should work for the rest. So in a csv file just have column headers: name, concentration, and in the next row: Anderson, 20.</span>
<span class="comment-copy">Try not to add a file, can you do <code>print(df.head(10))</code> and copy and paste that in your post? Plus your dictionary is not complete in your post. People cant help you like this.</span>
