<div class="post-text" itemprop="text">
<p>I have a plotly bar chart, from a dataframe:</p>
<pre><code>fig = df.iplot(asFigure=True, kind='bar', barmode = 'relative')
py.iplot(fig)
</code></pre>
<p>Is it possible to turn one of the columns in the data frame into a line series?</p>
</div>
<div class="post-text" itemprop="text">
<p>The suggested link in the comments does have some valuable resources, but they won't answer your questions directly. <code>iplot()</code> uses a pandas dataframe as input, and produces a stacked barplot. Here's an approach that will let you do exactly that, albeit without using <code>df.iplot()</code></p>
<hr/>
<p><strong>First, the plot :</strong></p>
<p><a href="https://i.stack.imgur.com/eOaJf.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/eOaJf.png"/></a></p>
<p><strong>Now, the code</strong></p>
<p>My suggestion builds on an example found at: <a href="https://plot.ly/pandas/bar-charts/" rel="nofollow noreferrer">plot.ly/pandas/bar-charts</a>. As you'll see that's an example that builds on a pandas dataframe - just like <code>df.iplot()</code>. You can simply take a series or 'trace' out of the stacked bars and display it as a line by changing </p>
<pre><code>go.Bar(x=df['x'],
       y=df['y4'])
</code></pre>
<p>to:</p>
<pre><code> go.Scatter(x=df['x'],
            y=df['y4'])
</code></pre>
<p>I've also added a few elements to make it easier to display your results offline in a Jupyter notebook. Also note that I've changed the last line from <code>py.iplot(fig, filename='pandas-bar-chart-layout')</code> to just  <code>iplot(fig, filename='pandas-bar-chart-layout')</code></p>
<p><strong>Complete snippet:</strong></p>
<pre><code>import plotly.plotly as py
import plotly.graph_objs as go
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot

init_notebook_mode(connected=True)

import pandas as pd
import numpy as np

N = 20
x = np.linspace(1, 10, N)
y = np.random.randn(N)+3
y2 = np.random.randn(N)+6
y3 = np.random.randn(N)+9
y4 = np.random.randn(N)+12
df = pd.DataFrame({'x': x, 'y': y, 'y2':y2, 'y3':y3, 'y4':y4})
df.head()

data = [
    go.Bar(
        x=df['x'], # assign x as the dataframe column 'x'
        y=df['y']
    ),
    go.Bar(
        x=df['x'],
        y=df['y2']
    ),
    go.Bar(
        x=df['x'],
        y=df['y3']
    ),
    go.Scatter(
        x=df['x'],
        y=df['y4']
    )

]

layout = go.Layout(
    barmode='stack',
    title='Stacked Bar with Pandas'
)

fig = go.Figure(data=data, layout=layout)

# IPython notebook
iplot(fig, filename='pandas-bar-chart-layout')
</code></pre>
</div>
<span class="comment-copy">Maybe you want to look at <a href="https://plot.ly/r/graphing-multiple-chart-types/" rel="nofollow noreferrer">plot.ly/r/graphing-multiple-chart-types</a></span>
<span class="comment-copy">this is great. thank you so much</span>
<span class="comment-copy">One more question, I've got loads of bars. Is there a loop I can set up. Ie. for all columns in dataframe, create a go.Bar command?</span>
<span class="comment-copy">@ fred.schwartz Glad to help! I'll take a loop at the <code>loop</code> when I find the time. Maybe later tonight or tomorrow. I don't see why it <b><i>wouldn't</i></b> work though. You could just loop on a list for your df columns and create a Bar object using <code>go.Bar</code> and store it in a list.</span>
<span class="comment-copy">that makes sense. got it sorted. Just looped through and appended to list</span>
<span class="comment-copy">thanks a lot, no one else seemed to have the answer to any of this</span>
