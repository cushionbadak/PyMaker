<div class="post-text" itemprop="text">
<p>I have a key from a dictionary which is:</p>
<pre><code>key = "-1-1-1100011--&gt;-10-1-100011"

print(key)

-1-1-1100011--&gt;-10-1-100011
</code></pre>
<p>I've copied the key as:</p>
<pre><code>previous key = np.copy(key)

print(previous key)

-1-1-1100011--&gt;-10-1-100011
</code></pre>
<p>However this changes the type of variable from a <code>str</code> to a <code>numpy.ndarray</code>. Is there any way around this so when I copy the key as a new variable it stays as a string?</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't copy the key.</p>
<p>Strings are immutable, so you can just assign <code>key</code> to <code>previous_key</code> like so:</p>
<pre><code>previous_key = key
</code></pre>
<p>Changing the value assigned to <code>key</code> won't change the value of <code>previous_key</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to use numpy to do so, this code may help:</p>
<pre><code>np.copy(key).tostring().decode('utf-8')
</code></pre>
<p>But why do you want to "copy" a string?</p>
</div>
<span class="comment-copy">Why are you trying to copy the string? In Python, copying an immutable object virtually never makes sense.</span>
<span class="comment-copy"><code>np.copy</code> says it <code>Return an array copy of the given object.</code>.  It is just <code>np.array</code> with the <code>copy=True</code> parameter.</span>
<span class="comment-copy">Except you should never need to do this. A string is immutable - there is no need to copy it, ever.</span>
