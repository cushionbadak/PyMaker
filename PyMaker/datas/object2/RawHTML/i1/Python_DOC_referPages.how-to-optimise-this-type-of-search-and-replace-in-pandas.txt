<div class="post-text" itemprop="text">
<p>I have a dataframe that roughly looks like this</p>
<pre><code>ID    VAL 
2     3
2     7
2     4
2     5
2     2
3     4
3     6
3     7
3     2
4     2
4     3
4     4
4     5
4     6
</code></pre>
<p>Another dataframe that roughly looks like this</p>
<pre><code>ID     VAL
2       5
3       7
</code></pre>
<p>I want to do an operation that for each row in the second dataframe, the row will move to the top.</p>
<pre><code>ID    VAL 
2     5
2     3
2     7
2     4
2     2
3     7
3     4
3     6
3     2
4     2
4     3
4     4
4     5
4     6
</code></pre>
<p>See that the (2, 5) tuple and the (3, 7) tuple have been moved up to where that "ID" begins.</p>
<p>I've currently a horribly inefficient implementation.</p>
<p>Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>I am using a help key create by using <code>merge</code> then we <code>sort_values</code></p>
<pre><code>df1.merge(df2.assign(key=0),how='left').fillna({'key':1}).sort_values(['ID','key'])
# you can add .drop('key',1) at the end :-)
    ID  VAL  key
3    2    5  0.0
0    2    3  1.0
1    2    7  1.0
2    2    4  1.0
4    2    2  1.0
7    3    7  0.0
5    3    4  1.0
6    3    6  1.0
8    3    2  1.0
9    4    2  1.0
10   4    3  1.0
11   4    4  1.0
12   4    5  1.0
13   4    6  1.0
</code></pre>
</div>
<span class="comment-copy">Do you care about the rest of the order, e.g. would <code>2, 5 | 2, 4 | 2, 3 | 2, 7 | ...</code> meet your requirements?</span>
<span class="comment-copy">Yes, the rest of the order would have to be the same.</span>
<span class="comment-copy">Simple and Elegant!!!</span>
<span class="comment-copy">You sir, are a amazing human being. Thank you so much!</span>
