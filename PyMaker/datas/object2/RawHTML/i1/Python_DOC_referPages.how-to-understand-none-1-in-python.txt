<div class="post-text" itemprop="text">
<p>I am now confused by the output of block 1, 2 and 3, what's the relationship among them?
<a href="https://i.stack.imgur.com/fiO1L.png" rel="nofollow noreferrer"><img alt="output of some code" src="https://i.stack.imgur.com/fiO1L.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is called <a href="https://en.wikipedia.org/wiki/Short-circuit_evaluation" rel="nofollow noreferrer">short-circuit evaluation</a>.</p>
<p>If you have <code>A and B</code> and <code>A</code> is evaluated to some False equivalent, the expression will simply return <code>A</code> (which is False or equivalent) and skipped <code>B</code>. But if <code>A</code> is True equivalent, we return the value of <code>B</code> because <code>A</code> doesn't matter anymore for the value of the whole expression.</p>
<p>Similarly for the case of <code>or</code>, if we have <code>A or B</code> and <code>A</code> is True equivalent, <code>B</code> will be skipped and <code>A</code> is returned for the expression. Or, if <code>A</code> is False equivalent, <code>B</code> is returned.</p>
</div>
<div class="post-text" itemprop="text">
<p>for example:you can do this in Python Console</p>
<pre><code>&gt;&gt;&gt;a = None
&gt;&gt;&gt;b = []
&gt;&gt;&gt;c = [1]
&gt;&gt;&gt;type(a)
&lt;class 'NoneType'&gt;
&gt;&gt;&gt;type(b)
&lt;class 'list'&gt;
&gt;&gt;&gt;type(c)
&lt;class 'list'&gt;
</code></pre>
<p>b and c have the same type list, and a belongs to 'NoneType'</p>
<p>b is an empty list ,there no elements in b, None is an special Object in Python, you see the boolean value(False =0, True =1),</p>
<pre><code>&gt;&gt;&gt;b is None
&gt;&gt;&gt; False
&gt;&gt;&gt;len(b) 
&gt;&gt;&gt; 0

&gt;&gt;&gt;if b is not None:
       print(b)
   else:
       print(b,"is None")
&gt;&gt;&gt;[]  #(b is empty, but it's not None)
</code></pre>
<p>you can also do this :</p>
<pre><code>&gt;&gt;&gt;b.append(a)
&gt;&gt;&gt;b
&gt;&gt;&gt;[None]
&gt;&gt;&gt;len(b)
&gt;&gt;&gt;1  #(b have one element None)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I will update all these False-equivalent codes from now on.</p>
<p>Conclusions: </p>
<p>It's Sunday, March 24, 2019.</p>
<ul>
<li><code>NaN</code> is not False-equivalent because <code>print(float('NaN') and False)</code> gives <code>False</code></li>
</ul>
<hr/>
<p>(It's Tuesday, March 19, 2019.)</p>
<ul>
<li><p><code>-1</code> is not False-equivalent because the result of
<code>
print(-1 and False)
</code>
is <code>False</code>.</p></li>
<li><p><code>not 1, [], None, 0</code> are False-equivalent because the results of
<code>
print(not -1)
print([] and False)
print(None and False)
print(0 and False)
</code>
are <code>False, [], None, 0</code>, respectively.</p></li>
</ul>
</div>
<span class="comment-copy">What is False equivalent, including <code>[ ]</code>, <code>0</code>, <code>None</code>, and negative numbers such as <code>-1</code>, <code>-2</code>?</span>
<span class="comment-copy">Empty containers (lists, dictionaries, strings, etc.), the number zero, and <code>None</code> are false.  Non-empty containers and nonzero numbers are true.</span>
<span class="comment-copy">In numbers False is only equivalent to 0 because that's its value, 1 is the value of True so things like False + 2 will return 2</span>
<span class="comment-copy">@JohnGordon and @adrtam. Thank you for all your helpful answers, I feel better now. By several lines of code such as <code>print -1 and False</code> outputs <code>False</code>, <code>print [] and False</code> outputs <code>[]</code>, <code>print None and False</code> outputs <code>None</code> and <code>print 0 and False</code> outputs <code>0</code>, I then know what is False equivalent and how to judge if an element is false equivalent or not, as @JohnGordon commented above.</span>
<span class="comment-copy">@gery you can apply <code>bool</code> to something to see if it will evaluate to <code>True</code> or <code>False</code> e.g. <code>bool(None)</code></span>
<span class="comment-copy">Thank you. It is very kind of you.</span>
