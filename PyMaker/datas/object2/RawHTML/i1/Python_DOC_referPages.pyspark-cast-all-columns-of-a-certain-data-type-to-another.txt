<div class="post-text" itemprop="text">
<p>I have a data frame with a certain number of date columns. I want to cast them all to timestamp, without having to worry about the exact names of the columns. So what I want is something in line of: "Cast all date columns to timestamp and keep the same column names"</p>
<p>I know that for one column it would be: </p>
<pre class="lang-py prettyprint-override"><code>df = df.withColumn('DATUM', df['DATUM'].cast('timestamp'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a loop and detect when the type is <code>date</code> and perform the cast only for those cases.</p>
<pre><code>for col in df.dtypes:
  if(col[1] == 'date'):
    df = df.withColumn(col[0],df[col[0]].cast('timestamp'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use for loop, and cast to timestamp</p>
<pre><code>df.select(
    *[df[col_name].cast('timestamp') for col_name in df.columns]
)
</code></pre>
</div>
<span class="comment-copy">This works great, thanks!</span>
