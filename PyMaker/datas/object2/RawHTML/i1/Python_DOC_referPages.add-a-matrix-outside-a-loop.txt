<div class="post-text" itemprop="text">
<p>I have a function that gives me a matrix of 17*3 (float (17,3)). I call that function again and again in a loop, i want to add the matrices so that rows remain 17 but column keeps on adding to make one big matrix.</p>
</div>
<div class="post-text" itemprop="text">
<h2>Without NUMPY:</h2>
<p>Transpose the matrix first because you are not gonna touch the 17 rows. </p>
<pre><code># a matrix is 17 * 3
a_transpose = [[a[j][i] for j in range(len(a))] for i in range(len(a[0]))] 
</code></pre>
<p>Then, add the column of 17 rows as one row of 17 columns</p>
<pre><code>a_transpose.append([1,2,3, ... 17])
</code></pre>
<p>Once, you are done adding several rows, transpose the matrix back as said above. That way, you don't iterate through your array 17 times everytime you add a column to your matrix.</p>
<h2>With NUMPY:</h2>
<p>Transpose</p>
<pre><code># a matrix is 17 * 3
a = numpy.array(a)
a_transpose = a.transpose()
</code></pre>
<p>Add a row (17 column values you wanted to add)</p>
<pre><code>a_transpose.append([1,2,3, .... 17], axis=0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your function:</p>
<pre><code>In [187]: def foo(i): 
     ...:     return np.arange(i,i+6).reshape(3,2) 
     ...:                                                                       
</code></pre>
<p>Iteratively build a list of arrays:</p>
<pre><code>In [188]: alist = []                                                            
In [189]: for i in range(4): 
     ...:     alist.append(foo(i)) 
     ...:                                                                       
In [190]: alist                                                                 
Out[190]: 
[array([[0, 1],
        [2, 3],
        [4, 5]]), array([[1, 2],
        [3, 4],
        [5, 6]]), array([[2, 3],
        [4, 5],
        [6, 7]]), array([[3, 4],
        [5, 6],
        [7, 8]])]
</code></pre>
<p>Make an array from that list:</p>
<pre><code>In [191]: np.concatenate(alist, axis=1)                                         
Out[191]: 
array([[0, 1, 1, 2, 2, 3, 3, 4],
       [2, 3, 3, 4, 4, 5, 5, 6],
       [4, 5, 5, 6, 6, 7, 7, 8]])
</code></pre>
</div>
<span class="comment-copy">Yes i have used np.array</span>
<span class="comment-copy">You can probably use <code>np.hstack(map(your_function, the_list_with_your_inputs))</code>. Add a sample input and expected output</span>
<span class="comment-copy">Welcome to Stackoverflow! Please check this guide about <b>How to create a Minimal, Complete, and Verifiable example</b> so that we can help you: <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a></span>
<span class="comment-copy">Careful here.  The first may work because <code>a_transpose</code> is a list, and lists have an <code>append</code> method.  The second won't work, because arrays don't have an append method.  And you shouldn't use <code>np.append</code> in its place.</span>
