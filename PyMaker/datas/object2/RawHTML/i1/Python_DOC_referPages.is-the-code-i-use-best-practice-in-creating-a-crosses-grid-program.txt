<div class="post-text" itemprop="text">
<p>I'm creating a crosses grid and would like some feedback when it comes to the 2d array application. Is this the best way to go about creating a crosses grid using the 2d array.</p>
<p><a href="https://i.stack.imgur.com/0AnfE.png" rel="nofollow noreferrer">Heres the output of my Crosses grid</a></p>
<p>But when it come to the 2d array i dont know if this is the best way to go about it. I had trouble when i put the inputs inside the array so i left it out.</p>
<pre><code>arr1 = [[], []]
arr1[0] = xrow
arr1[1] = ycolumn

for i in range(0, arr1[0]):
  for j in range(0, arr1[1]):
    print("X", end="")
  print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>best way to go about it.</p>
</blockquote>
<p>No, the way you suggested is not pythonic.
We prefer to use a tuple rather than a list when there's a fixed number of items with distinct names, such as your rectangle size.
Here is your code refactored to pass a tuple around, and with minor variable renames.</p>
<pre><code>def display_rectangle(size):
    height, width = size  # tuple unpacking
    for i in range(height):
        for j in range(width):
            print('X', end='')
        print('')

size = (4, 5)
display_rectangle(size)
</code></pre>
<p>Using the <code>end</code> option works well, it yields a nice parallel construction for the two dimensions.
But you might possibly prefer a slightly shorter version:</p>
<pre><code>def display_rectangle(size):
    height, width = size
    for i in range(height):
        print('X' * width)
</code></pre>
<p>If you start changing elements within the rectangle, for example to make a hollow box with rectangular border, then you might wish to represent your grid using a <a href="https://numpy.readthedocs.io/en/latest/user/quickstart.html" rel="nofollow noreferrer">numpy</a> array.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the single line statement to do this task using <code>list comprehension</code>.</p>
<blockquote>
<p>'\n'.join([("X" * col) for i in range(row)])</p>
</blockquote>
<pre><code>&gt;&gt;&gt; # One line statement to generate the rectangular GRID
... 
&gt;&gt;&gt; col = 4
&gt;&gt;&gt; row = 5
&gt;&gt;&gt; 
&gt;&gt;&gt; grid = '\n'.join([("X" * col) for i in range(row)])
&gt;&gt;&gt; 
&gt;&gt;&gt; print(grid)
XXXX
XXXX
XXXX
XXXX
XXXX
&gt;&gt;&gt; 
</code></pre>
<p>As we can see the above one is not reusable so finally you can write a function with signature like <code>generate_grid(row=5, col=5)</code> and make it reusable. </p>
<blockquote>
<p>Here, if you will call function without parameters, default will values for <code>row</code> &amp;  <code>col</code> will be taken as <code>5</code>. </p>
</blockquote>
<p>Let's see some examples executed on Python interactive terminal.</p>
<pre><code>def generate_grid(row=5, col=5):
    """
    Description
    ===========
        This function returns a GRID to the caller

    Parameter
    =========
        row: number of rows in GRID
        col: number of columns in GRID

    Note: 5 is default value for row &amp; col (if no parameters are supplied)
    """

    return '\n'.join([("X" * col) for i in range(row)])
</code></pre>
<p>Now, we will call (reuse) the above function by supplying at leat <code>0</code> &amp; at most <code>2</code> parameters.</p>
<blockquote>
<p>Test 1</p>
</blockquote>
<pre><code>grid = generate_grid(6, 5)
print(grid)
</code></pre>
<blockquote>
<p>Output</p>
</blockquote>
<pre><code>XXXXX
XXXXX
XXXXX
XXXXX
XXXXX
XXXXX
</code></pre>
<blockquote>
<p>Test 2</p>
</blockquote>
<p>grid = generate_grid() # default values will be taken as 5 (here)
print(grid)</p>
<blockquote>
<p>Output</p>
</blockquote>
<pre><code>XXXXX
XXXXX
XXXXX
XXXXX
XXXXX
</code></pre>
</div>
<span class="comment-copy">What's your <i>question</i>? What <i>"trouble"</i>? Please give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. I'd recommend taking the <a href="https://stackoverflow.com/tour">tour</a> and reading <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other material in the <a href="https://stackoverflow.com/help">help center</a>.</span>
<span class="comment-copy">my question is if the 2 code with the 2d array is the best way to go about creating a crosses grid.</span>
<span class="comment-copy"><i>"Best"</i> according to what criteria? Have you had a specific problem using it?</span>
<span class="comment-copy">I guess in terms of efficiency or best practice i guess. I just wasn't sure if the way i did it was the way to go about it. That is by leaving the array empty and instead had each variable in the array assign to the input  instead of having the inputs inside the array and calling it.</span>
