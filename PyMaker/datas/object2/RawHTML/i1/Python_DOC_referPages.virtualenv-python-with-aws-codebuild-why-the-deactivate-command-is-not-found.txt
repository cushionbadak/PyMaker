<div class="post-text" itemprop="text">
<p>I use AWS Codebuild to upload python code into AWS Lambda from a GitHub repository. So I set up virtual python environments with <code>virtualenv</code>.</p>
<p>Here is my <code>buildspec.yml</code>:</p>
<pre><code>version: 0.2
phases:
 install:
   commands:
     - echo "install step"
     - apt-get update
     - apt-get install zip -y
     - apt-get install python3-pip -y
     - pip install --upgrade pip
     - pip install --upgrade awscli
     # Define directories
     - export HOME_DIR=`pwd`
     - cd $HOME_DIR
     - export PREPROCESSING_DIR=$HOME_DIR/preprocessing
     - export COMPARE_DIR=$HOME_DIR/compareHilightGood
     - export NLTK_DATA=$HOME_DIR/nltk_data
 pre_build:
   commands:
     - echo "pre_build step"
     # Configure preprocessing virtual environement
     - cd $PREPROCESSING_DIR
     - virtualenv venv_preprocessing
     - . venv_preprocessing/bin/activate
     #  Install modules
     - pip install -U requests
     - pip install -U nltk
     #  NLTK download
     - python -m nltk.downloader -d $NLTK_DATA wordnet stopwords punkt
     - pip freeze &gt; requirements.txt
     #  zip everything
     - mv $VIRTUAL_ENV/lib/python3.6/site-packages/* .
     - sudo zip -r9 preprocessing.zip .
     - source deactivate
     # Configure compare virtual environement
     - cd $COMPARE_DIR
     - virtualenv venv_compare
     - . venv_compare/bin/activate
     # install modules
     - pip install -U gensim
     - pip install -U pandas
     - pip freeze &gt; requirements.txt
     # zip everything
     - mv $VIRTUAL_ENV/lib/python3.6/site-packages/* .
     - sudo zip -r9 compare.zip .
     - source deactivate
 build:
   commands:
     - echo 'build step'
     # preprocessing
     - cd $PREPROCESSING_DIR
     - aws s3 cp --recursive --acl public-read ./preprocessing.zip s3://lambda-preprocessing/
     - aws lambda update-function-code --function-name arn:aws:lambda:eu-west-3:671560023774:function:preprocessing --s3-bucket lambda-preprocessing --s3-key preprocessing.zip
     - aws lambda update-function-configuration --function-name arn:aws:lambda:eu-west-3:671560023774:function:preprocessing --environment 'Variables={NLTK_DATA=/var/task/nltk_data}'
     # compare
     - cd $COMPARE_DIR
     - aws s3 cp --recursive --acl public-read ./compare.zip s3://lambda-comparehilightgood/
     - aws lambda update-function-code --function-name arn:aws:lambda:eu-west-3:671560023774:function:preprocessing --s3-bucket lambda-comparehilightgood --s3-key compare.zip
 post_build:
   commands:
     - echo "post_build step"
</code></pre>
<p>In the <code>pre_build</code> step, I'm switching between two virtualenv. So, I use <code>deactivate</code> (or <code>source deactivate</code>).
But In both cases I get this error: </p>
<pre><code>[Container] 2019/03/17 09:07:54 Running command source deactivate
/codebuild/output/tmp/script.sh: 4: /codebuild/output/tmp/script.sh: source: not found
 [Container] 2019/03/17 09:07:54 Command did not exit successfully source deactivate exit status 127
[Container] 2019/03/17 09:07:54 Phase complete: PRE_BUILD Success: false
[Container] 2019/03/17 09:07:54 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: source deactivate. Reason: exit status 127
</code></pre>
<p>Anyway, it seems the commands <code>source</code> and <code>deactivate</code> are not found. Do you know why ?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>deactivate</code> is not a script that can be <code>source</code>d, it's a shell function created in the current shell environment by <code>. venv/bin/activate</code>. So try just <code>deactivate</code> without <code>source</code>.</p>
<p>As for the error about <code>source</code> itself please note that the command <code>. venv/bin/activate</code> works hence the shell understands command <code>.</code> but not <code>source</code>.</p>
</div>
<span class="comment-copy">Do those commands share a shell? I don't think you virtualenv activation is persisting from one command to the next.</span>
<span class="comment-copy">I don't know, but why wouldn't they be? This method works when I use it for one virtualenv.</span>
<span class="comment-copy">Yes I tried just <code>deactivate</code> and I have the same error. <code>[Container] 2019/03/17 08:09:06 Running command deactivate /codebuild/output/tmp/script.sh: 4: /codebuild/output/tmp/script.sh: deactivate: not found</code></span>
<span class="comment-copy">This means that every line in .yml is executed by a fresh shell. You have to run all commands between <code>. venv/bin/activate</code> and <code>deactivate</code> in one line that is one shell.</span>
