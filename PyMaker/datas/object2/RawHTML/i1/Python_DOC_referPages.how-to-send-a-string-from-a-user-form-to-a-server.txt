<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11556958/sending-data-from-html-form-to-a-python-script-in-flask">Sending data from HTML form to a Python script in Flask</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am new to client/server side programming, and I really would appriciate help on a problem that I have been stuck on for couple weeks. </p>
<p>I do not know how to send a word from a webpage form to a server, such that the server can send it to another computer.</p>
<p>I have tried setting up a flask framework to acquire the value of the user input. Then, I tried to run tcp client code in the same flask app to send it to my tcp server. It is not working, and I am wondering if that's a correct usage of flask, as I also do not have experience using flask. </p>
<p>Here is my flask app code:</p>
<pre><code>#client_app.py
#from the Flask class insert the flask library
from flask import Flask, render_template, request
import socket
import sys

#this is a route
@app.route('/send', methods=['POST'])
def send():
    puzzle_word = request.form['word']
    # Create a TCP/IP socket
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Connect the socket to the port where the server is listening
    server_address = ('localhost', 10000)
    print('connecting to {} port {}'.format(*server_address))
    sock.connect(server_address)
    try:

        # Send data
        message = b'Salam Alaikum.'
        print('sending {!r}'.format(message))
        sock.sendall(message)

        # Look for the response
        amount_received = 0
        amount_expected = len(message)

        while amount_received &lt; amount_expected:
            data = sock.recv(1024)
            amount_received += len(data)
            print('received {!r}'.format(data))

    finally:
        print('closing socket')
        sock.close()
</code></pre>
<p>Here is my tcp server</p>
<pre><code>#socket_echo_server.py

import socket
import sys

# Create a TCP/IP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Bind the socket to the port
server_address = ('localhost', 10000)
print('starting up on {} port {}'.format(*server_address))
sock.bind(server_address)

# Listen for incoming connections
sock.listen(1)

while True:
    # Wait for a connection
    print('waiting for a connection')
    connection, client_address = sock.accept()
    try:
        print('connection from', client_address)

        # Receive the data in small chunks and retransmit it
        while True:
            data = connection.recv(1024)
            print('received {!r}'.format(data))
            if data:
                print('sending data back to the client')
                connection.sendall(data)
            else:
                print('no data from', client_address)
                break

    finally:
        # Clean up the connection
        connection.close()
</code></pre>
<p>Here is the core part of my web form</p>
<pre><code>&lt;form  id="main" method="POST" onsubmit="app_client.py" &gt;
    &lt;h2 class="sr-only"&gt;Login Form&lt;/h2&gt;
    &lt;div class="two-colored-border"&gt;Game Rules: &lt;ol&gt; &lt;li&gt; A word must be 2-4 letters &lt;/li&gt; &lt;li&gt; A word contains only Alphabets  &lt;/li&gt; &lt;li&gt; Letters can be lower case, upper case, or a combination of both &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;
    &lt;div id="myForm" class="form-group"&gt;
      &lt;label for="word"&gt;Please select a word:&lt;/label&gt;
      &lt;input name="word" id="userInput" class="form-control" type="text"  required minlength="2" maxlength="5" onkeyup="lettersOnly(this)" &gt;
      &lt;button  id="sendbutton" class="btn btn-primary btn-block" type="submit"&gt;Submit&lt;/button&gt;
    &lt;/div&gt;
&lt;/form&gt;
</code></pre>
<p>Essentially, I do not know how to send a string from a webpage to another computer.</p>
<p>I am sorry that the question is lengthy, I tried to provide as much applicable details, and I appriciate any help!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>&lt;form  id="main" method="POST" onsubmit="app_client.py" &gt;</code></p>
<p>You're trying to point the form at your code, but <code>onsubmit</code> is for running script in the browser. What you want is for the form to send a POST message to your server and you use the <code>action</code> attribute for that.</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Sending_and_retrieving_form_data" rel="nofollow noreferrer">Documentation on the action attribute</a></p>
<p><code>@app.route('/send', methods=['POST'])</code> defines the endpoint the server is listening at. You need the action to tell the form it needs to submit there.</p>
</div>
<div class="post-text" itemprop="text">
<p>To send the form value over to the server, use action="http:127.0.0.1:5007" as follow:</p>
<pre><code>&lt;form  action="http:127.0.0.1:5007" method="post" id="main" &gt;
</code></pre>
<p>Of course, you could also use any ip address and port. The server will recieve something like this:</p>
<p><a href="https://i.stack.imgur.com/13rzC.png" rel="nofollow noreferrer">message from the client to ther server</a></p>
<p>Later, you can write server program to clean up the http request and get the particular value inside the http request body, in my case it is the value of the word input</p>
</div>
<span class="comment-copy">I used the tcp server and client from a person online, i would like to reference them here: <a href="https://pymotw.com/3/socket/tcp.html" rel="nofollow noreferrer">pymotw.com/3/socket/tcp.html</a></span>
<span class="comment-copy">No it won't. Flask is not serving the web page. Ignore my last comment.</span>
<span class="comment-copy">thanks for trying to help</span>
<span class="comment-copy">My gut still tells me that <code>onsubmit="app_client.py"</code> is something from PHP, without even knowing PHP. I don't get how the file path is resolved. If Flask isn't serving the web page then there seems a massive disconnect between all the parts of this app.</span>
<span class="comment-copy">thanks man this helped me figure out what to do . Here is what I did: I removed the onsubmit="app_client.py" and added action="http:127.0.0.1:5007" this sends the HTPP request to my server which has the word in the body of the HTTP request. I do not think I will need flask, this is pretty much it. Thank you :)</span>
<span class="comment-copy">The default port for Flask is 5000, not 5007</span>
