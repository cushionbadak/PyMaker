<div class="post-text" itemprop="text">
<p>I'm trying to build a linear classifier using <code>LinearSVC</code> in Scikit learn. I decided to use the tf-idf vectorization for the purpose of vectorizing the text input. The code I wrote is:</p>
<pre><code>review_corpus = list(train_data_df['text'])
vectorizer = TfidfVectorizer(max_df = 0.9,stop_words = 'english')
%timeit tfidf_matrix = vectorizer.fit_transform(review_corpus)
</code></pre>
<p>I now want to train an SVM model using this tfidf_matrix and use it to predict the class/label for the corresponding test set: <code>test_data_df['text']</code>.
The problem(s) I'm having:</p>
<ol>
<li>Is it correct to use only the training data to build the TfIdfVectorizer or should I use both the training and testing text data to build the vectorizer?</li>
<li><p>The main issue is: How do I get the matrix representation for the testing data? Currently, I'm not sure how to get the tfidf score from the vectorizer for the different documents in the test set. What I tried was to loop through the Pandas series <code>test_data_df['text']</code> and then do:</p>
<pre><code>tfidf_matrix.todense(list(text)
</code></pre></li>
</ol>
<p>for each text in the Series, put the result into a list and finally make a numpy array out of it but I get a Memory Error. </p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>You should use only the training data to build the <code>TfIdfVectorizer()</code>. This will ensure that you are not leaking any information about the test data during training process. </p></li>
<li><p>Use</p>
<pre><code>tfidf_matrix_test = vectorizer.transform(test_data_df['text'])
</code></pre></li>
</ol>
<p>Now you can feed the <code>tfidf_matrix_test</code> to the classifier. </p>
<p>P.S.: </p>
<p>Try to avoid casting the sparse_matrix output of the Vectorizer to list or dense array. Because it is memory intensive and classifier will also take more computation time while training/prediction.</p>
</div>
