<div class="post-text" itemprop="text">
<p>I want to read VTK files to do some processing.
Since I have to do this processing on both Linux and Windows, it is easier from me to do it with Python3.
Therefore, both Linux and Windows have Python3 (3.6.0) and its module VTK (version 8.1.2).</p>
<p>I create the MWE to highlight the problem:</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from vtk import *
import sys
import os


if __name__ == "__main__":
    pathFile1 = os.getcwd()+'/Output_253.vtk'
    print(pathFile1)

    if os.path.exists(pathFile1):

        # Creation of variables with the right type to read STRUCTURES_POINTS VTK files
        readerVTK1 = vtk.vtkStructuredPointsReader()

        # We put the content of our files in our variables
        readerVTK1.SetFileName(pathFile1)
        readerVTK1.Update()

        # We read our variables datas, hence we have our VTK files datas in these variables
        dataVTK1 = readerVTK1.GetOutput()

        # We check if the dimensions are not zeros
        if dataVTK1.GetDimensions()!=(0,0,0):
            (dimX,dimY,dimZ) = dataVTK1.GetDimensions()
            print((dimX,dimY,dimZ))
        else :
            print('dimensions are null... Problem !')
    else:
        print(' [WARN]   ','the file you are looking for do not exist')
        print(' pathFile1: ', pathFile1 )
</code></pre>
<p>The file <code>Output_253.vtk</code> in reference in the script can be download through the link:<a href="https://transfernow.net/01ke18g1ku8z" rel="nofollow noreferrer">here</a></p>
<p>Then when I run this script on Linux I get '(1000,1,1)' which coincides with the file header and with the rest of my processing. While on Windows I get <code>'dimensions are null... Problem !'</code>. </p>
<p>I tried to reinstall the VTK module on Windows, but I get the same problem.</p>
<p>Is that a bug ? Or is there any way to workaround ? Or Ideas ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the vtkStructuredPointsWriter class, in the doc it says:</p>
<p><strong>Warning</strong>
<em>Binary files written on one system may not be readable on other systems.</em></p>
<p>That's probably the cause of your problem (edit your file in a text editor, it's binary):</p>
<p><a href="https://vtk.org/doc/nightly/html/classvtkStructuredPointsWriter.html" rel="nofollow noreferrer">https://vtk.org/doc/nightly/html/classvtkStructuredPointsWriter.html</a></p>
<p>So to fix this: </p>
<ul>
<li><p>read the file in Linux (as it seems to work)</p></li>
<li><p>use a vtkStructuredPointsWriter to re-write a new version of the file
but remember to set the writer to ASCII mode (by calling <a href="https://vtk.org/doc/nightly/html/classvtkDataWriter.html" rel="nofollow noreferrer">SetFileTypeToASCII()</a>)</p></li>
</ul>
<p>For example, you can convert it to ASCII with this python script:</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from vtk import *
import sys
import os


if __name__ == "__main__":
    pathFile1 = os.getcwd()+'/Output_253.vtk'
    print(pathFile1)

    if os.path.exists(pathFile1):

        # Creation of variables with the right type to read STRUCTURES_POINTS VTK files
        readerVTK1 = vtk.vtkStructuredPointsReader()

        # We put the content of our files in our variables
        readerVTK1.SetFileName(pathFile1)
        readerVTK1.Update()

        # We read our variables datas, hence we have our VTK files datas in these variables
        dataVTK1 = readerVTK1.GetOutput()

        pathFile2 = os.getcwd()+'/Output_253_ASCII.vtk'
        writer = vtk.vtkStructuredPointsWriter()
        writer.SetFileName(pathFile2)
        writer.SetFileTypeToASCII()
        writer.SetInputData(dataVTK1)
        writer.Write()

    else:
        print(' [WARN]   ','the file you are looking for do not exist')
        print(' pathFile1: ', pathFile1 )
</code></pre>
<p>You can check the Python and VTK versions you are using while running the your script with this code:</p>
<pre><code>import platform
import vtk

print(platform.python_version())
print(platform.python_version_tuple())
print(vtk.vtkVersion.GetVTKSourceVersion())
</code></pre>
<p>As it works on my setup, I suggest you double check the path (put everything f.ex. in c:\temp and test if it works!).</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to the advice of L.C. I could determine that the problem came from the path and its encoding. Indeed, it contains spaces and accents. This leads to a wrong encoding when the path is given to the C++ <code>vtkDataReader.cxx</code> function. </p>
<p>A simple workaround is to change the directory to the folder containing the file or the last folder without accent. In the present case, simply by changing the definition of the path to <code>pathFile1='./Output_253.vtk'</code>, the problem get solved.</p>
</div>
<span class="comment-copy">I will test your solution this weekend. But the only problem with your solution is that I can't convert the file when I am on windows, because it is generated on windows (by a fortran code compiled with MinGW, I wander if this latter is not emulating a linux). Another weird point is that ParaView is able to read vtk binary files from both linux and windows.</span>
<span class="comment-copy">I convert the file using your script and checking it on ParaView: everything was ok. Then I try to re-run my script with <code>Output_253_ASCII.vtk</code>, and I get the same error about the dimension. Sorry. It seems to be a good idea. Any other idea ?</span>
<span class="comment-copy">I think you have a problem with your Python+VTK setup. On mine (Windows, Python 3.6.5 VTK 8.1.2) it works with the binary or ASCII file, the dimensions are correctly read (i.e. 1000,1,1). I wanted to double check I'm working with the original file but your link to the data file has expired.</span>
<span class="comment-copy">I update the question to refresh the link. You might be right about the setup but how can I check and correct it ?</span>
<span class="comment-copy">I posted the code to check the versions, add it at the beginning of your script. I was running VTK 8.1.0, I updated to 8.1.2 and it still works. In any case, you can try to install a new, fresh version of Python and "pip install vtk".</span>
