<div class="post-text" itemprop="text">
<p>I've been trying to build a Web Scraping Script to monitor for any changes in the html of a site, after it sees a change it than emails and texts me. I'm having an issue where the script is not seeing any changes it just restarts after 60 seconds.There are no errors at all. idk if i missed something within the code thats not letting it search and just moves on and restarts.</p>
<p>Heres the code:</p>
<pre><code>import time
print('&gt;&gt;&gt; Time Imported')
time.sleep(1)
from bs4 import BeautifulSoup as soup
print('&gt;&gt;&gt; BeautifulSoup Imported')
time.sleep(1)
import requests
print('&gt;&gt;&gt; Requests Imported')
time.sleep(1)
import ssl
print('&gt;&gt;&gt; SSL Imported')
time.sleep(1)
import smtplib
print('&gt;&gt;&gt; smtplib Imported')
time.sleep(1)
from lxml import html
print('&gt;&gt;&gt; LMXL and HTML Imported')
time.sleep(1)
from twilio.rest import Client
print('Twilio Imported')
time.sleep(1)
# End Imports

#start Script
while True:
    url = 'http://A****.com'
    print('&gt;&gt;&gt; We have connected to ' +url)
    time.sleep(1)

    headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
    print('&gt;&gt;&gt; Headers Initiating')
    time.sleep(1)

    page_response = requests.get(url, timeout=5)
    print('&gt;&gt;&gt; We got a response from ' +url)
    time.sleep(1)

    page_content = soup(page_response.content, "html.parser") # Takes 1 Min 48 Seconds to run
    print('&gt;&gt;&gt; Content Imported')
    time.sleep(2)

    print('&gt;&gt;&gt; To prove i have connected, here is ' +url+ ' headers')
    time.sleep(2)
    print(' ')
    print(page_content.title)
    #tree = html.fromstring(page_response.content)
    #price = tree.xpath('//span[@class="bid-price-val current-bid"]/text()')
    #print(price)
    time.sleep(2)
    print(' ')
    time.sleep(1)
    print('&gt;&gt;&gt; Initiating WebMonitor, If a change is found. That will be the next line')
    time.sleep(7)

    if str(soup).find('["330000"]') == -1:
        time.sleep(60)                       #The script restarts here 
                                             #never sees the change
                                             #Even tho there was one
        continue
    else:
        print('&gt;&gt;&gt; Theres been a change in '+url)
        from twilio.rest import TwilioRestClient
        accountSID = 'A*******'
        authToken = 'a********'
        twilioCli = TwilioRestClient(accountSID, authToken)
        myTwilioNumber = '1******'
        myCellPhone = '7*****'
        message = client.messages.create(
            body = "There has been a change at "+url,
            from_= "+14955551234",
            to = "7862199047",
            )

        print(message.sid)

        msg = 'Subject: This is the script talking, Check '+url
        fromaddr = 'r****'
        toaddrs = ['m****','2','3']

        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login("r****", 'r****')

        print('From: ' + fromaddr)
        print('To: ' + str(toaddrs))
        print('Message: ' + msg)
        server.sendmail(fromaddr, toaddrs, msg)
        server.quit()
        break
    #def monitor():
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looks as if your issue is in this line:</p>
<pre><code> if str(soup).find('["330000"]') == -1:
</code></pre>
<p>When you say <code>str(soup)</code>, you're trying to convert the Beautiful Soup class to a string. That's not going to work very well; it just creates a string something like <code>"&lt;class 'bs4.BeautifulSoup'&gt;"</code>. Using soup's <code>find()</code> method on that string will never find a match, so the result will always be -1 regardless of whether there have been any changes.</p>
</div>
<span class="comment-copy">Those <code>prints</code> make a grown man cry. Maybe look into <code>logging</code> so you can turn off the verbosity, and get the messages on standard error where you can avoid mixing them with actually useful output.</span>
<span class="comment-copy">Meaning? change to if soup.find?</span>
<span class="comment-copy">I don't think so. I'm not certain, because I don't know what effect you intended <code>str()</code> to have. Regardless, though, <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find" rel="nofollow noreferrer"><code>find()</code></a> generally requires a BeautifulSoup instance or tag or something like that as the first argument. So your solution <i>might</i> be something like <code>if soup.find(page_content, '["330000"]') == -1</code>, but from the information I have so far I'm not sure.</span>
<span class="comment-copy">Not to be a bother, but how would u write this? Everything i've pretty much tried has not worked.</span>
<span class="comment-copy">What indicates that there has been a change in the page? What does <code>["330000"]</code> mean?</span>
