<div class="post-text" itemprop="text">
<p>I have a time series data were I need to remove the trend and seasonality components from it. I was wondering whether I could use seasonal_decompose() function in Python and extract residual as follows:</p>
<pre><code>result =  seasonal_decompose(self.series, model='additive',freq=frequency) 
residual = result.resid
</code></pre>
<p>Or should I apply well know detrending and deseasonalizing methods (such as by differencing), and if I where to apply such methods, shall I detrend first then deseasonalize or vice versa ??</p>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://en.wikipedia.org/wiki/No_free_lunch_theorem" rel="nofollow noreferrer">No free lunch theorem</a> suggests, there is no universal model that can beat all other models on any kind of data. You should definitely try differencing and <a href="https://www.statsmodels.org/dev/generated/statsmodels.tsa.statespace.sarimax.SARIMAX.html" rel="nofollow noreferrer">Seasonal ARIMA</a> in addition to seasonal decomposition you'v already tried. The criterion of model selection is performance of a model on <em>your</em> data. With ARIMA, you don't need to detrend. Check out <a href="https://www.statsmodels.org/dev/generated/statsmodels.tsa.statespace.sarimax.SARIMAX.html" rel="nofollow noreferrer">this comprehensive tutorial</a>.</p>
</div>
