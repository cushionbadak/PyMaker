<div class="post-text" itemprop="text">
<p>I am a java developer turned python developer. How to read the classpath resources files in python</p>
<p>Here is my directory structure </p>
<pre><code>.
├── resources
│   ├── #test_schema.xml#
│   ├── create_confd_serialized_objects.sql
│   ├── create_notifications.txt
│   ├── create_notifications2.txt
│   ├── credentials.json
│   ├── delete_notifications.txt
│   ├── ngena-sa.xml
│   ├── ngena-sa.yang
│   ├── ngena-sa.yang~
│   ├── ngena-sa_v0.6.uml
│   ├── notification.txt
│   ├── notification.txt~
│   ├── requirements.txt
│   ├── test_schema.xml
│   └── test_schema.xml~
├── src
│   ├── ConfdAlertHandler.py
│   ├── ConfdAlertHandler.pyc
│   ├── ConfdAlertHandler.py~
│   ├── DataBaseManager.py
│   ├── DataBaseManager.pyc
│   ├── DataBaseManager.py~
│   ├── OUTPUT
│   ├── Record.py
│   ├── Record.py~
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── ConfdAlertHandler.cpython-37.pyc
│   │   ├── DataBaseManager.cpython-37.pyc
│   │   └── socket.cpython-37.pyc
│   ├── listener.py
│   ├── ngena_sa_create.sql
│   ├── ngena_sa_create.sql~
│   ├── output.xml
│   ├── server.py
│   ├── server.py~
│   ├── watcher.py
│   └── watcher.py~
</code></pre>
<p>Currently we are loading the file as below. Is there a better way or best practice to read the resource files.</p>
<p><strong>Record.py</strong></p>
<pre><code>class Record:

    def __init__(self, yang_path=None, json_path=None, xml_path=None,jsonData=None, xmlStr=None):

        self.xmlStr = xmlStr
        self.yang_path = yang_path
        self.xml_path = xml_path
        self.json_path = json_path
        self.tables = []
        self.module_name = ''
        self.connections = []
        self.table = None
        self.db_credentials = json.loads(open("../resources/credentials.json").read())
        self.db_manager = DataBaseManager(self.db_credentials['username'],
                                          self.db_credentials['password'],
                                          self.db_credentials['port'])
</code></pre>
<p>But, I am getting the below error</p>
<pre><code>python src/Record.py resources/ngena-sa.yang
resources/ngena-sa.yang
Traceback (most recent call last):
  File "src/Record.py", line 242, in &lt;module&gt;
    x = Record(args.yang_path)
  File "src/Record.py", line 39, in __init__
    self.db_credentials = json.loads(open("../resources/credentials.json").read())
FileNotFoundError: [Errno 2] No such file or directory: '../resources/credentials.json'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I could read the json using the below</p>
<pre><code>def __init__(self, yang_path=None, json_path=None, xml_path=None,jsonData=None, xmlStr=None):

        self.xmlStr = xmlStr
        self.yang_path = yang_path
        self.xml_path = xml_path
        self.json_path = json_path
        self.tables = []
        self.module_name = ''
        self.connections = []
        self.table = None
        abs_path = sys.path[0]
        base_name = os.path.dirname(abs_path)
        resources_path = os.path.join(base_name, "resources/credentials.json")

        self.db_credentials = json.loads(open(resources_path).read())
        self.db_manager = DataBaseManager(self.db_credentials['username'],
                                          self.db_credentials['password'],
                                          self.db_credentials['port'])
</code></pre>
</div>
<span class="comment-copy">I'm not sure which script is running (your second block of code). Could you label that file?</span>
<span class="comment-copy"><code>"../resources/credentials.json"</code> i'm not positive relative paths work. have you tried an absolute path just to test?</span>
<span class="comment-copy"><code>sys.path[0]</code> gives full path of the start script. From there you can build the absolute path to resources with <code>os.path.basename</code> and <code>os.path.join</code>.</span>
<span class="comment-copy">Can i use absolute path as the location changes basing on the deployment.</span>
<span class="comment-copy">Yeah, just build the absolute path dynamically using the <code>os</code> methods @MichaelButscher suggested! This allows it to be an absolute path, but also kinda a relative path because it was created dynamically</span>
<span class="comment-copy">Glad you could solve it :)</span>
