<div class="post-text" itemprop="text">
<p>Let's say I have a dataframe as follows:</p>
<pre><code>df = pd.DataFrame({"id": range(4), "price": ["15dollar/m2/day", "90dollar/m2/month", "18dollar/m2/day", "100dollar/m2/month"]})

       id               price
    0   0     15dollar/m2/day
    1   1   90dollar/m2/month
    2   2     18dollar/m2/day
    3   3  100dollar/m2/month
</code></pre>
<p>I would like to split column <code>price</code> into two new columns: <code>unit_price</code> and <code>price_unit</code> as below:</p>
<pre><code>   id     unit_price  price_unit
0   0        15.0    dollar/m2/day
1   1        90.0    dollar/m2/month
2   2        18.0    dollar/m2/day
3   3       100.0    dollar/m2/month
</code></pre>
<p>This is my solution:</p>
<pre><code>df['unit_price'] = df['price'].str.split('dollar').str[0].astype(float)
#df['unit_price'] = df['price'].str.extract('(\d*\.\d+|\d+)', expand=False).astype(float)
df['price_unit'] = df['price'].str.split('dollar').str[1]
del df['price']
</code></pre>
<p>For the column <code>unit_price</code>, it works fine, but for <code>price_unit</code>, when i split by <code>dollar</code>, I got result as below which doesn't including character <code>dollar</code>, or if I use <code>df['price'].str.replace(r'\d', '')</code>, all numbers were removed. 
How could I do it correctly in Python? Thanks.</p>
<pre><code>df['price_unit']
Out[474]: 
0      /m2/day
1    /m2/month
2      /m2/day
3    /m2/month
Name: price_unit, dtype: object 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.extract.html" rel="nofollow noreferrer"><code>Series.str.extract</code></a> with regex - <code>^</code> for start of string, <code>\d*\.\d+</code> for floats or <code>\d+</code> for integers and then for all another values by <code>.*</code>:</p>
<pre><code>df = df.join(df.pop('price').str.extract('(?P&lt;unit_price&gt;^\d*\.\d+|^\d+)(?P&lt;price_unit&gt;.*)'))
print (df)
   id unit_price       price_unit
0   0         15    dollar/m2/day
1   1         90  dollar/m2/month
2   2         18    dollar/m2/day
3   3        100  dollar/m2/month
</code></pre>
<p>First solution is using <code>extract</code> and <code>replace</code> by numeric:</p>
<pre><code>pat = '(^\d*\.\d+|^\d+)'
df['unit_price'] = df['price'].str.extract(pat, expand=False)
df['price_unit'] = df.pop('price').str.replace(pat,'')
print (df)
   id unit_price       price_unit
0   0         15    dollar/m2/day
1   1         90  dollar/m2/month
2   2         18    dollar/m2/day
3   3        100  dollar/m2/month
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If it's just a string, why not keep it simple and add the dollar part yourself?</p>
<p><code>df['price_unit'] = 'dollar' + df['price'].str.split('dollar').str[1]</code></p>
<pre><code>import pandas as pd

df = pd.DataFrame({"id": range(4), "price": ["15dollar/m2/day", "90dollar/m2/month", "18dollar/m2/day", "100dollar/m2/month"]})

df['unit_price'] = df['price'].str.split('dollar').str[0].astype(float)
df['price_unit'] = 'dollar' + df['price'].str.split('dollar').str[1]

del df['price']

print(df)
</code></pre>
<hr/>
<pre><code>   id  unit_price       price_unit
0   0        15.0    dollar/m2/day
1   1        90.0  dollar/m2/month
2   2        18.0    dollar/m2/day
3   3       100.0  dollar/m2/month
</code></pre>
</div>
<span class="comment-copy">Thanks. May I ask what <code>?P</code> stand for?</span>
<span class="comment-copy">@ahbon - sure, if check <a href="http://pandas.pydata.org/pandas-docs/stable/user_guide/text.html#extract-first-match-in-each-subject-extract" rel="nofollow noreferrer">this</a> - it is for new columns names</span>
<span class="comment-copy">Thanks it works in this situation. But I think @jezrael's solution is more general in case if there are other money unit <code>yen</code>, <code>euro</code>, etc.</span>
<span class="comment-copy">ah, yes. If the currency can change, that is indeed a more general solution.</span>
