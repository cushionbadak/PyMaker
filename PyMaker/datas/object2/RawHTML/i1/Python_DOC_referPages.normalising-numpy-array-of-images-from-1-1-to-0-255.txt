<div class="post-text" itemprop="text">
<p>I have a numpy array of images with shape (32,32,32,3),
being (batchsize,height,width,channel).</p>
<p>The values are between - 1 and 1, I wish to normalise/convert them to 0,255 for the whole array. </p>
<p>I have tried the follow solutions:</p>
<pre><code>realpics  = ((batch_images - batch_images.min()) * (1/(batch_images.max() - batch_images.min()) * 255).astype('uint8'))


realpics = np.interp(realpics, (realpics.min(), realpics.max()), (0, 255))
</code></pre>
<p>Any help with this would be greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>The only tricky part here is that when you convert from floating point arrays back to integer arrays, you have to be careful about how the floats are mapped to integers. For your case, you'll want to make sure all the floats round to the nearest integer, then you should be fine. Here's a working example that uses your first approach:</p>
<pre class="lang-py prettyprint-override"><code>import numpy as np

raw_images = np.random.randint(0, 256, (32, 32, 32, 3), dtype=np.uint8)
batch_images = raw_images / 255 * 2 - 1 # normalize to [-1, 1]
recovered = (batch_images - batch_images.min()) * 255 / (batch_images.max() - batch_images.min())
recovered = np.rint(recovered).astype(np.uint8) # round before casting
assert (recovered == raw_images).all()
</code></pre>
</div>
<span class="comment-copy">What error are you getting currently?</span>
<span class="comment-copy">No error the images are just displaying as white boxes.When in the -1 to 1 range they display correctly</span>
<span class="comment-copy">Thank you for your response. I tried your solution and the output is no longer white but static. This is the output <a href="https://i.imgur.com/CT2KgWp.png" rel="nofollow noreferrer">i.imgur.com/CT2KgWp.png</a> the middle is what the -1 to 1 is producing, left and right is the 0 to 255 code.</span>
<span class="comment-copy">Are you normalizing your image to [-1, 1] in a different way than I am here? If you use this normalization method on your original image, (i.e. replace the <code>raw_images = ...</code> line above with however you get your images), does the assertion not pass?</span>
