<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/29452320/python-prints-none">Python prints None</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>When I run this program in <code>m_tree.print_values(root)</code> appears the <strong>data</strong> and 3 times <strong>None</strong> to any Node present in this tree. I don't understand why appears these None because the function should print only the value.</p>
<pre><code>class Tree:
    def __init__(self, root=None):
        self.root = root

    def print_values(self, root):
        if root != None:
            print(root.data)
            print(self.print_values(root.left))
            print(self.print_values(root.right))
        #Define other tree operations that you want to perform here

class Node:
    def __init__(self, data=0, left=None, right=None):
        self.data = data
        self.left=left
        self.right=right

#Create a root node
root = Node(0)

#Create a tree with the root node
m_tree = Tree(root)


#Add a left and right node to the root
left_node = Node(3)
right_node = Node(4)
root.left = left_node
root.right = right_node

m_tree.print_values(root)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>print_values has no <code>return</code> statement, so it returns None by default. So if you call <code>print_values</code> and print the result, it will print None.</p>
<p>Change your recursive calls so that they call <code>print_values</code> without printing the result.</p>
<pre><code>def print_values(self, root):
    if root != None:
        print(root.data)
        self.print_values(root.left)
        self.print_values(root.right)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're calling</p>
<pre><code>print(self.print_values(root.left))
</code></pre>
<p>The <code>self.print_values</code> function <em>prints</em> the values, and then <em>returns</em> <code>None</code>. So first you get the value printed by <code>print_values</code>, and then you <code>print(None)</code> because that's what <code>self.print_values</code> returned.</p>
</div>
