<div class="post-text" itemprop="text">
<p>I want to input an image in my program, when I do this code</p>
<pre><code>from tkinter import *

root = Tk()

image1 = PhotoImage(file='dog.gif')
label1 = Label(root, image=image1)
label1.pack()

root.mainloop()
</code></pre>
<p>The image will appear, but when I do this code</p>
<pre><code>from tkinter import *

class Image():
    def __init__(self, master):
        self.master = master

        self.display_image()

    def display_image(self):
        self.image = PhotoImage(file='dog.gif')
        self.label1 = Label(self.master, image=self.image)
        self.label1.pack()

if __name__ == '__main__':
    root = Tk()
    Image(root)
    root.mainloop()
</code></pre>
<p>The window will appear but the image was not shown</p>
</div>
<div class="post-text" itemprop="text">
<p>If you create an image without keeping a strong reference somewhere, it will create a conflict between the garbage collector of Python and Tkinter : the reference stored in the <code>Label</code> prevents the complete destruction and the image will be blank. </p>
<p>Also, be careful to not override base classes like <code>Image</code>, you'd better rename your own class <code>My_Image</code></p>
<p>A simple workaround is to create a global variable containing the image:</p>
<pre><code>from tkinter import *

class My_Image():
    def __init__(self, master):
        self.master = master
        self.display_image()

    def display_image(self):

        self.label1 = Label(self.master, image=label1_img)
        self.label1.pack()


root = Tk()

label1_img = PhotoImage(file='dog.gif')
My_Image(root)

root.mainloop()
</code></pre>
<p>or you can even create a global variable to store the My_Image instance :</p>
<pre><code>if __name__ == '__main__':
    root = Tk()
    img = My_Image(root)
    root.mainloop()
</code></pre>
</div>
