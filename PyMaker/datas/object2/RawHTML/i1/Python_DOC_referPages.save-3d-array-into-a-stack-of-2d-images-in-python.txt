<div class="post-text" itemprop="text">
<p>I made a 3D array, which consists of numbers(0~4). What I want is to save 3D array as a stack of 2D images(if possible, save *.tiff file). What am I supposed to do?</p>
<pre><code>import numpy as np

a = np.random.randint(0,5, size=(100,100,100))
a = a.astype('int8')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work.  I haven't tested it but I have separated color images into RGB slices using this method and it should work pretty much the same way here, assuming you don't want to do anything with those pixel values first.  (They will be very close to the same color in an image).</p>
<pre><code>import imageio
import numpy as np

a = np.random.randint(0,5, size=(100,100,100))
a = a.astype('int8')
for i in range(100):
    newimage = a[:, :, i]
    imageio.imwrite("path/to/image%d.tiff" %i, newimage)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Actually, I made it. This is my code.
With this code, I don't need to stack a series of 2D image(array).
Make a 3D array, and save it. That is just what I did for this.</p>
<pre><code>import numpy as np
from skimage.external import tifffile as tif

a = np.random.randint(0,5, size=(100,100,100))
a = a.astype('int8')
tif.imsave('a.tif', a, bigtiff=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What exactly do you mean by "stack"? As you refer to <code>tiff</code> as output format, I assume here you want your data in one file as a multiframe-tiff.<br/>
This can easily be done with <code>imageio</code>'s <code>mimwrite()</code> function:</p>
<pre><code># import numpy as np
# a = np.random.randint(0,5, size=(100,100,100))
# a = a.astype('int8')

import imageio
imageio.mimwrite("image.tiff", a)
</code></pre>
<p>Note that this function relies on having the counter for your several frames as first parameter and x and y follw. See also its <a href="https://imageio.readthedocs.io/en/stable/userapi.html?highlight=mimwrite#imageio.mimwrite[documentation]" rel="nofollow noreferrer">documentation</a>.</p>
<p>However, if I'm wrong and you want to have n (e.g. 100) separate tif-files, you can also use the normal <code>imwrite()</code> function in a loop:</p>
<pre><code>n = len(a)
for i in range(n):
    imageio.imwrite(f'image_{i:03}.tiff', a[i])
</code></pre>
</div>
