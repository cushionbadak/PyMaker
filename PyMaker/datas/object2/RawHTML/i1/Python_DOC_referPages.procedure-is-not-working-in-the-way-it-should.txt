<div class="post-text" itemprop="text">
<p>I've been told to write a procedure to find the last position of a substring in a string. It seems to be outputing false information and I'm not sure where I've gone wrong.</p>
<p>Can anyone help?</p>
<pre><code>def find_last(s, c):
    last_position = -1

    while s.find(c) != -1:
        last_position = s.find(c)
        s = s[last_position + len(c):]

    return last_position


print(find_last('aaaa', 'a')) # returns 0, but the last position is 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Each time you call <code>s.find()</code> you're working just with the substring after the previous match. So <code>last_position</code> won't be the position in the original string, it will be the position in that substring.</p>
<p>It's easier to see what's happening if you use a more complicated string, e.g.</p>
<pre><code>find_last('abcaxya34', 'a')
</code></pre>
<p>The first time through the loop <code>s = 'abcaxya34'</code>, it finds <code>a</code> at index <code>0</code>. Then it removes that match from the beginning of the string.</p>
<p>The second time through the loop <code>s = 'bcaxya34'</code>, and it finds <code>a</code> at index <code>3</code>. Then it removes that match from the beginning of the string.</p>
<p>The third time through the loop, <code>s = 'xya34'</code>, and it finds <code>a</code> at index <code>3</code>. Then it removes that match from the beginning of the string.</p>
<p>The fourth time through the loop, <code>s = '34'</code>. This time it doesn't find <code>a</code>, so the loop ends. It then returns the position from the previous iteration, which is <code>3</code>. But that's just the index in the last successful substring, not the index in the original string.</p>
<p><code>str.find()</code> allows you to provide an optional starting index, you can use that instead of slicing the string each time.</p>
<pre><code>def find_last(s, c):
    last_position = 0
    result = -1

    while True:
        next_position = s.find(c, last_position)
        if next_position == -1:
            break
        result = next_position
        last_position = next_position + len(c)

    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>rfind()</code> to get last character position. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try (Scan from right to left)</p>
<pre><code>def find_last(s, c):
    for x in range(len(s)-1, 0, -1):
        if s[x] == c:
            return x
    return -1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can go through simple for loop.
If you type just s.find(c) it will see first s in c, meaning return will be 0 now if you add count = 0 and for every time s is in c add 1 it will return you that position.</p>
</div>
<div class="post-text" itemprop="text">
<p>Reverse both strings:</p>
<pre><code>def find_last(s, c):
    pos = s[::-1].find(c[::-1])
    if pos != -1:
        pos = len(s) - len(c) - pos
    return pos
</code></pre>
</div>
<span class="comment-copy">Try s[::-1].find(c)</span>
<span class="comment-copy">So what you're basically saying is, when I update <code>s</code> it isn't updating in the test condition for the while loop?</span>
<span class="comment-copy">The first time you search <code>aaaa</code>, you find it at position <code>0</code>. Then you search <code>aaa</code>, you find it at position <code>0</code>. Then you search <code>aa</code>, you find it at position <code>0</code>. Then you search <code>a</code>, you find it at position <code>0</code>.</span>
<span class="comment-copy">Didn't think of it in this way, so I just need to save the whole of s but just start from where I found the last one, + 1. Thanks! Accepted answer.</span>
<span class="comment-copy"><code>c</code> isnt always going to be a single character. I also need to do it with the code I wrote as I don't understand yours and its homework for my course.</span>
<span class="comment-copy">Let me explain the code. The code scans the input string, char by char. It starts from the end of the string and "goes left". When it encounters the char we need to find - it return its index. If there was no match, it returns -1</span>
<span class="comment-copy">I just noticed that 'c isnt always going to be a single character'. Got it ..</span>
<span class="comment-copy">There's a dedicated built-in function for finding the last position of a substring, by the way</span>
<span class="comment-copy">Pah, that would be <a href="https://docs.python.org/3/library/stdtypes.html#str.rfind" rel="nofollow noreferrer">too easy</a>.</span>
