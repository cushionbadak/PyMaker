<div class="post-text" itemprop="text">
<p>I am attempting to transition this program</p>
<p><a href="https://github.com/adambeagle/JeoparPy" rel="nofollow noreferrer">https://github.com/adambeagle/JeoparPy</a></p>
<p>from 2.7 to 3.7. I have run the program with 2.7 and it works.</p>
<p>I have already made modifications for xrange -&gt; range and basestring -&gt; str. I have also altered the import paths.</p>
<p>Here is the error I get when executing start.py:</p>
<pre><code>Traceback (most recent call last):
  File "start.py", line 64, in &lt;module&gt;
    main(*flags)
  File "D:\Users\Michael\IdeaProjects\JeoparPy\jeoparpy\main.py", line 55, in main
    uicontroller = Controller(screen, gameData, FPS_LIMIT)
  File "D:\Users\Michael\IdeaProjects\JeoparPy\jeoparpy\ui\controller.py", line 57, in __init__
    self.audioplayer = JeopAudioPlayer()
  File "D:\Users\Michael\IdeaProjects\JeoparPy\jeoparpy\ui\audioplayer.py", line 111, in __init__
    super().__init__(dict(SOUNDS, **reads))
TypeError: keywords must be strings
</code></pre>
<p>The error 'keywords must be strings' refers to this class:</p>
<p>I don't understand which variable is not a string. 'pos' seems to be a local variable that stands for position.</p>
<pre><code>class JeopAudioPlayer(AudioPlayer):
    """An AudioPlayer with JeoparPy sounds initialized."""
    def __init__(self):
        reads = {}
        for pos, path in CLUE_READS.items():
            key = pos + ('cr', )
            reads[key] = path

        super().__init__(dict(SOUNDS, **reads))
</code></pre>
<p>Here is the SOUNDS dictionary from resmaps:</p>
<pre><code>SOUNDS = {(0, 4) : _sndPath + 'sample_music.ogg',
          (1, 4) : _sndPath + 'sample_music.ogg',
          (2, 4) : _sndPath + 'sample_music.ogg',
          (3, 4) : _sndPath + 'sample_music.ogg',
          (4, 4) : _sndPath + 'sample_music.ogg',
          }
</code></pre>
<p>The CLUE_READS dictionary is very similar:</p>
<pre><code>CLUE_READS = {(0, 2) : _cluesPath + 'sample_read.ogg',
              (1, 2) : _cluesPath + 'sample_read.ogg',
              (2, 2) : _cluesPath + 'sample_read.ogg',
              (3, 2) : _cluesPath + 'sample_read.ogg',
              (4, 2) : _cluesPath + 'sample_read.ogg',
              }
</code></pre>
<p>This is how the paths are defined:</p>
<pre><code>from jeoparpy.constants import ROOT_PATH

_fontPath = path.join(ROOT_PATH, 'res', 'fonts', '')
_imgPath = path.join(ROOT_PATH, 'res', 'images', '')
_sndPath = path.join(ROOT_PATH, 'res', 'sounds', '')
_cluesPath = path.join(ROOT_PATH, 'res', 'sounds', 'clues', '')
</code></pre>
<p>And just in case, here is the ROOT_PATH:</p>
<pre><code>ROOT_PATH = path.abspath(path.join(path.dirname(__file__), pardir))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>SOUNDS</code> and <code>reads</code> are both already dictionaries. There's no point passing them as keyword arguments to a <code>dict</code> constructor; just update one from the other. Since <code>reads</code> was created entirely within the method, it's safe to update it directly with the contents of <code>SOUNDS</code>.</p>
<pre><code>reads.update(SOUNDS)
super().__init__(reads)
</code></pre>
</div>
<span class="comment-copy"><code>key = pos + ('cr', )</code> what is <code>pos</code></span>
<span class="comment-copy">What does the <code>CLUE_READS</code> (dictionary) look like?</span>
<span class="comment-copy">@SuperStew updated the post</span>
<span class="comment-copy">This allows the program to run (yay!) but removes the CLUE_READS association of the method. When the clue is opened there is supposed to be an audio file that plays that reads the clue.</span>
