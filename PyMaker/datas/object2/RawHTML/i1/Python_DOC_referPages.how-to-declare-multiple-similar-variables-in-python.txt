<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>How can I declare multiple (about 50) variables that count from slider1 to slider50 ? Is there an efficient way, like looping with for?</p>
<pre><code>slider1 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider2 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider3 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider4 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider5 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider6 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider7 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider8 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider9 = models.IntegerField(widget=widgets.Slider, default=50, label="")
slider10 = models.IntegerField(widget=widgets.Slider, default=50, label="")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using a Dictionary for this task:</p>
<pre><code>d = {}

for x in range(1,10):
        d["slider{0}".format(x)]= models.IntegerField(widget=widgets.Slider, default=50, label="")
</code></pre>
</div>
<span class="comment-copy">The short answer is: Don't declare individual variables dynamically, create an object like a dictionary with key-value pairs instead</span>
<span class="comment-copy"><code>sliders = [models.IntegerField(widget=widgets.Slider, default=50, label="") for _ in range(50)]</code></span>
<span class="comment-copy">If the names have no meaning and are just the same name with a number at the end, a <code>list</code> would be much more appropriate.</span>
<span class="comment-copy">If the names have no meaning, yes. If they have meaning... No :) It is a specific requirement so I'd assume that they do have a meaning.</span>
