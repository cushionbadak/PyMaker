<div class="post-text" itemprop="text">
<p>I have a speed of feature points at every frame. Here I have 165 frames in a video where every frame contains speed of feature points.This is my data. </p>
<pre><code>TrajDbscanData

array([[  1.        ,   0.51935178],
       [  1.        ,   0.52063496],
       [  1.        ,   0.54598193],
       ...,
       [165.        ,   0.47198981],
       [165.        ,   2.2686042 ],
       [165.        ,   0.79044946]])
</code></pre>
<p>where first index is frame number and second one is speed of a feature point at that frame.</p>
<p>Here I want to do density based clustering for different speed range. For this , I use following code.</p>
<pre><code>import sklearn.cluster as sklc
core_samples, labels_db = sklc.dbscan(
    TrajDbscanData,  # array has to be (n_samples, n_features)
    eps=0.5,
    min_samples=15,
    metric='euclidean',
    algorithm='auto'
)
core_samples_mask = np.zeros_like(labels_db, dtype=bool)
core_samples_mask[core_samples] = True

unique_labels = set(labels_db)

n_clusters_ = len(unique_labels) - (1 if -1 in labels_db else 0)

colors = plt.cm.Spectral(np.linspace(0, 1, len(unique_labels)))
plt.figure(figcount)
figcount+=1
for k, col in zip(unique_labels, colors):
    if k == -1:
        # Black used for noise.
        col = 'k'

    class_member_mask = (labels_db == k)

    xy = TrajDbscanData[class_member_mask &amp; core_samples_mask]
    plt.plot(xy[:, 0], xy[:, 1], 'o', markerfacecolor=col, markeredgecolor='k', markersize=6)

    xy = TrajDbscanData[class_member_mask &amp; ~core_samples_mask]
    plt.plot(xy[:, 0], xy[:, 1], 'x', markerfacecolor=col, markeredgecolor='k', markersize=4)

plt.rcParams["figure.figsize"] = (10,7)
plt.title('Estimated number of clusters: %d' % n_clusters_)
plt.grid(True)
plt.show()
</code></pre>
<p>I got the following result.</p>
<p><a href="https://i.stack.imgur.com/Hgs7f.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Hgs7f.png"/></a></p>
<p>Y axis is speed and x axis is frame number
I want to do density based clustering according to speed. for example speed upto 1.0 in one cluster , speed from 1 to 1.5 as outlier , speed from 1.5 to 2.0 another cluster and speed above 2.0 in another cluster. This helps to identify common motion pattern types. How can I do this ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use Euclidean distance.</p>
<p>Since your x and y a is have very different meaning, that is the wrong distance function to use.</p>
<p>Your plot is misleading, because the axes have different scale. If you would scale x and y the same way, you would understand what has been happening... The y axis is effectively ignored, and you slice the data by your discrete integer time axis.</p>
<p>You may need to use Generalized DBSCAN and treat time and value separately!</p>
</div>
<span class="comment-copy">Using Dbscan, can i cluster feature point in a video frame (here 165) with respect to speed?</span>
<span class="comment-copy">Yes, working one frame at a time is probably a good idea. Just split your data...</span>
<span class="comment-copy">I want to cluster speed having 0.5 to 1.0 in one cluster  of all frames. I am trying from last week.  Can you help me with some lines of python code?</span>
<span class="comment-copy">If you know the interval already: don't cluster at all. Just <i>select</i> data points with speed between 0.5 and 1.</span>
