<div class="post-text" itemprop="text">
<p>I have a data frame such as </p>
<pre><code>query   subject col1
A   dog ok
B   cat okl
C   cat oklp
D   frog    ok
E   cat ok
F   fox ok
</code></pre>
<p>and a file.txt such as:</p>
<pre><code>dog
cat 
</code></pre>
<p>and the idea is to only keep row that have a pattern present in the file.txt.
Here I should get :</p>
<pre><code>query   subject col1
A   dog ok
B   cat okl
C   cat oklp
E   cat ok
</code></pre>
<p>I tried with : </p>
<pre><code>file = open('file.txt').read()

df=[]
for row in tab['subject']:
 if row in file: 
   row.append(df)
</code></pre>
<p>but it does not seem to be the solution, thank you for your help. </p>
</div>
<div class="post-text" itemprop="text">
<p>Considering that your data frame is called <em>df</em>, this answer reads the file.txt also as a dataframe and <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html" rel="nofollow noreferrer">merge</a> both data frames, resulting in the desired result - solution similar to an inner join from SQL:</p>
<pre><code>&gt;&gt; df2 = pd.read_csv('file.txt', header= None, names=['subject'])
&gt;&gt; pd.merge(df, df2, on='subject')

    query   subject col1
0   A       dog     ok
1   B       cat     okl
2   C       cat     oklp
3   E       cat     ok
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.loc.html" rel="nofollow noreferrer"><code>df.loc[]</code></a> to grab specific rows where a criterion is met, and <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.isin.html" rel="nofollow noreferrer"><code>isin()</code></a> to check whether something in your dataframe shows up in a given list. First make a list of the entries in your file:</p>
<pre><code>vals = []  # placeholder for our file contents
with open('file.txt', 'r') as a_file:
    for line in a_file:
        vals.append(line)
</code></pre>
<p>Next select rows where the subject column is one of the values read from your file. Assuming your dataframe is called <code>df</code>:</p>
<pre><code>new_df = df.loc[df.subject.isin(vals)]
</code></pre>
<p>Side note: you almost never want to iterate over a dataframe. There are exceptions to this, but generally speaking if you find yourself iterating on a dataframe (e.g. <code>for row in df:</code>), you can rewrite that piece of code to take advantage of vectorized functions in Pandas which are <em>much</em> more efficient.</p>
</div>
<span class="comment-copy">thank you very much.</span>
<span class="comment-copy">you are welcome, @chippycentra! :)</span>
<span class="comment-copy">i think if you remove the loc you still should be fine. :)</span>
<span class="comment-copy">Thanks very much is does exactly what I needed :)</span>
<span class="comment-copy">@anky_91 you're right it should still work, but <code>loc</code> is the preferred method. See <a href="https://stackoverflow.com/a/48411543/2464597">stackoverflow.com/a/48411543/2464597</a> and <a href="https://stackoverflow.com/a/38886211/2464597">stackoverflow.com/a/38886211/2464597</a> for some reasons why. Generally I'd say it's best to get in the habit of using the preferred method; in this case <code>loc</code>.</span>
<span class="comment-copy">@Engineero cool, thanks for sharing. Not necessary here is what i meant incase you wanted to reduce operation. :) already upvoted</span>
