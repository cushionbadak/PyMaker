<div class="post-text" itemprop="text">
<p>I have a text file including 8 features and 1 class. The data of my file is (<code>data.txt</code>):</p>
<pre><code>1,1,3,2,1,1,1,3,HIGH
1,1,3,1,2,1,1,3,HIGH
1,1,1,1,3,3,1,2,HIGH
1,3,2,1,3,3,3,3,HIGH
1,3,1,2,3,1,2,1,HIGH
2,3,1,2,1,2,2,1,HIGH
2,2,2,2,2,1,2,3,HIGH
2,2,1,1,1,2,2,3,HIGH
3,2,1,3,1,3,3,3,HIGH
3,2,1,2,2,3,3,2,HIGH
</code></pre>
<p>In the above file, the first 8 columns are the features. They are tagged with a number that could be 1 or 2 or 3. The last column is the class name (<code>HIGH</code>). Now I want to plot these features based on the tag numbers. I can do it <strong>for 3 first column</strong> by this code:</p>
<pre><code>import pandas as pd
from matplotlib import pyplot as plt

df = pd.read_csv('data.txt', header=None)

# Features are : A,B,C,...,H
df.columns = ['A', 'B','C', 'D', 'E', 'F', 'G', 'H', 'class']

X = df.ix[:, 0:8].values
y = df.ix[:, 8].values

kind = ['barstacked']
deg = ['HIGH']
pos = ['left','right','mid']
col = ['r','b','y']

with plt.style.context('seaborn-whitegrid'):
    plt.figure(figsize=(8, 6))

    for j in range(0,3):
        for i in range(1):
                plt.hist(X[y == deg[i], j],
                     label=deg[i],
                     bins=30,
                     alpha=0.6, histtype=kind[i], align=pos[j], color=col[j])

    plt.tick_params(axis='both', which='major', labelsize=17)
    plt.xlim(0.75, 3.25)
    plt.tight_layout()
    plt.savefig("figure.png" , format='png', dpi=700)
    plt.show()
</code></pre>
<p>Here is the result:
<a href="https://i.stack.imgur.com/hJuJH.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hJuJH.png"/></a></p>
<p>However I could not plot the other 5 columns because I did not know how to put them next to each other as there are only 3 align options (<code>left</code>, <code>mid</code> and <code>right</code>). What I am looking at is a histogram plot <strong>for all 8 features</strong> that separates the features based on the tag number. A graph like this:</p>
<p><a href="https://i.stack.imgur.com/1zDdB.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/1zDdB.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need a histogram here and you can easily generate the required figure using a bar chart because you are just plotting a single frequency here. The idea is as follows:</p>
<ul>
<li>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> module from <a href="https://docs.python.org/3/library/collections.html#module-collections" rel="nofollow noreferrer"><code>collections</code></a> to get the frequency of 1, 2, and 3.</li>
<li>The x-positions for your bar chart will be centered around 1, 2 and 3. <strong>However</strong>, to have the desired effect, you can tweak the x-positions by offsetting them: first 4 bars to the left of 1, 2, 3 and the next 4 bars to the right of 1, 2, 3. This can be done using an offset parameter <code>(j-4)*0.1</code> which you add to the x-values. Here 0.1 serves as a nice choice of bar width.</li>
<li>You don't need an additional loop over <code>i</code> here since it is always 0</li>
<li><code>df.ix</code> is deprecated in the newer pandas versions. You will have to use <code>df.iloc</code> instead.</li>
</ul>
<hr/>
<p>Following is how you can do it. </p>
<pre><code>df.columns = ['A', 'B','C', 'D', 'E', 'F', 'G', 'H', 'class']

X = df.ix[:, 0:8].values
y = df.ix[:, 8].values

with plt.style.context('seaborn-whitegrid'):
    plt.figure(figsize=(8, 6))
    for j in range(0,8):
            freqs = Counter(X[y == deg[0], j])
            xvalues = np.array(list(freqs.keys()))
            plt.bar(xvalues+(j-4)*0.1, freqs.values(), width=0.1, 
                    alpha=0.9, edgecolor='k', lw=2)
    plt.tick_params(axis='both', which='major', labelsize=17)
    plt.xlim(0.25, 3.75)
    plt.xticks([1,2,3])
    plt.tight_layout()
    plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/7jFZD.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/7jFZD.png"/></a></p>
</div>
<span class="comment-copy">Thank you. It was exactly what I was looking for. Is there anyway that I could put the number corresponding to the height of each bar at the top of the corresponding bar? For example I want to see number 5 at the top of the very left blue bar. The same thing for other 23 bars.</span>
<span class="comment-copy">@Leo: It is possible. There are already several Stack Overflow answers on how to do this. I would recommend you to read them. For example: <a href="https://stackoverflow.com/questions/28931224/adding-value-labels-on-a-matplotlib-bar-chart">this</a>, <a href="https://stackoverflow.com/questions/44049999/matplotlib-way-to-annotate-bar-plots-with-lines-and-figures">this</a>, and <a href="https://matplotlib.org/examples/api/barchart_demo.html" rel="nofollow noreferrer">official example</a>. Try them out and if it doesn't work, I would recommend to post another fresh question with specific problem.</span>
<span class="comment-copy">Sure I will check them out. Thanks again for your help.</span>
