<div class="post-text" itemprop="text">
<p>I am trying to create a tk.OptionMenu which stores the results of an SQL search query as Options in its menu, however when the user re enters the page, an additional set of options appear which are identical to the first.</p>
<p>I have created example code:</p>
<pre><code>Attendance.grid(row=0,column=0,sticky="nsew")
Menu=tk.Frame(root)
Menu.grid(row=0,column=0,sticky="nsew")
EventList=[]
# Connect MySQL
mydb = mysql.connector.connect(
    host="localhost",
    user="root",
    passwd="#####",
    database="scoutsdatabase"
)
#Outputs Connection Object
print(mydb)
mycursor = mydb.cursor()
def CheckAttendance():
    return
#Define Trace Var
AttendanceEvent = tk.StringVar()
AttendanceEvent.trace("w", CheckAttendance)

def AttendanceRaiseFrame():
    mycursor.execute("SELECT eventname FROM events")
    myresults = mycursor.fetchall()
    if len(myresults)==0:
        tk.messagebox.showinfo("No Events","You Have Not Created Any Events to Take Attendance From.")
        return
    for i in myresults:
        EventList.append(i)

    AttendanceOptionMenu = tk.OptionMenu(Attendance, AttendanceEvent, *EventList)
    AttendanceOptionMenu.grid(row=2, column=2)
    Attendance.tkraise()
    return
def Back():
    Menu.tkraise()

StartButton=tk.Button(Menu,text="Start",command=AttendanceRaiseFrame)
StartButton.grid(row=1,column=0)
BackButton=tk.Button(Attendance,text="Back",command=Back)
BackButton.grid(row=2,column=0)
Menu.tkraise()
root.mainloop()
</code></pre>
<p>Here is an example of what occurs.</p>
<p>User starts program and is greeted with this interface:</p>
<p><a href="https://i.stack.imgur.com/FiSnL.png" rel="nofollow noreferrer"><img alt="1" src="https://i.stack.imgur.com/FiSnL.png"/></a></p>
<p>User presses "Start" button, moves Frame:</p>
<p><a href="https://i.stack.imgur.com/dYKhm.png" rel="nofollow noreferrer"><img alt="2" src="https://i.stack.imgur.com/dYKhm.png"/></a></p>
<p>See Options available in Option Menu.</p>
<p><a href="https://i.stack.imgur.com/SVNim.png" rel="nofollow noreferrer"><img alt="3" src="https://i.stack.imgur.com/SVNim.png"/></a></p>
<p>User presses "Back", returned to original frame</p>
<p><a href="https://i.stack.imgur.com/SU64K.png" rel="nofollow noreferrer"><img alt="4" src="https://i.stack.imgur.com/SU64K.png"/></a></p>
<p>User presses "Start", See options available in Option Menu</p>
<p><a href="https://i.stack.imgur.com/QvVxG.png" rel="nofollow noreferrer"><img alt="5" src="https://i.stack.imgur.com/QvVxG.png"/></a></p>
<p>Further, If their is an additional or deletion to the eventname column, I would like the change reflected in the Option Menu.</p>
<p>E.g I delete "Camping". I should be left with Knot Tieing,Boulder Trip, Treck Track in my Option Menu.</p>
<p>If you need to see my database or tables please just ask. Thanks in advance!</p>
<p>PS: Not sure why the {} enclose every Option apart from the first one. It is not intentional.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your are appending the query results to <code>EventList</code>, but <code>EventList</code> already contains the results of the previous execution of the query.</p>
<p>A simple solution is to clear <code>EventList</code> before appending the new query results.</p>
<pre><code>EventList.clear()
for i in myresults:
    EventList.append(i)
</code></pre>
<p>In fact, and as Martineau observes, the root cause of the problem is that <code>EventList</code> is a global variable, that is it is defined in toplevel code.  It's only used inside the <code>AttendanceRaiseFrame</code> function, so a better solution is to move the top-level <code>EventList = []</code> declaration to inside the function:</p>
<pre><code>def AttendanceRaiseFrame():
    mycursor.execute("SELECT eventname FROM events")
    myresults = mycursor.fetchall()
    # cursor.fetchall returns an empty list if no rows are
    # found, so check if myresults is falsey
    if not myresults:
        tk.messagebox.showinfo("No Events","You Have Not Created Any Events to Take Attendance From.")
        return
    EventList = [i for i in myresults]

    AttendanceOptionMenu = tk.OptionMenu(Attendance, AttendanceEvent, *EventList)
    AttendanceOptionMenu.grid(row=2, column=2)
    Attendance.tkraise()
    return
</code></pre>
</div>
<span class="comment-copy">The real problem is because <code>EventList</code> is a global variable, the source of all evil.</span>
<span class="comment-copy">The curly brackets are usually due to tcl/tkinter receiving tuples rather than strings. It may be that your query is returning a list of tuples so you could try <code>EventList = [i[0] for i in myresults]</code> to see if that fixes the problem</span>
<span class="comment-copy">@martineau edited accordingly</span>
