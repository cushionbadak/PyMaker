<div class="post-text" itemprop="text">
<p>I am trying to perform a secondary sorting with <code>list.sort()</code>, and here is my code:</p>
<pre><code>index_list = list(range(12))
a_list = [5, 5, 5, 1, 2, 3, 3, 3, 3, 8, 8, 10]
b_list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 10]

index_list.sort(key=lambda x:(a_list[x], b_list[x]))
print(index_list)
</code></pre>
<p>The result was <code>[3, 4, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11]</code>, while I expected the last three items to be <code>[..., 10, 9, 11]</code>.</p>
<p>I thought it should do secondary sorting (based on the value of <code>b_list</code>), but seems that it didn't.</p>
<hr/>
<p>EDIT: typo fixed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>index_list.sort(key=lambda x:(a_list[x], -b_list[x])) # because -3 &lt; 2 and by default it sorts in ascending order
</code></pre>
<p>Output</p>
<pre><code>[3, 4, 5, 6, 7, 8, 0, 1, 2, 10, 9, 11]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use:</p>
<pre><code>index_list.sort(key=lambda x:(a_list[x], -b_list[x]))
</code></pre>
<p>instead of </p>
<pre><code>index_list.sort(key=lambda x:(a_list[x], b_list[x]))
</code></pre>
</div>
<span class="comment-copy">Why did you expect 10, 9, 11?  The tenth value in the <code>b_list</code> is 3, which is less than the 9th value, 2.  Default sorting is smallest to largest, so it will come after.</span>
<span class="comment-copy">What <code>c_list</code>? In your question, there is only <code>a_list</code> and <code>b_list</code>.</span>
<span class="comment-copy">OMG didn't noticed that! That was a dumb one. Thanks!</span>
