<div class="post-text" itemprop="text">
<p>I found this strange problem when I trying to add comments to my code. I used the triple-quoted strings to comment but the program crashed by giving the following error: </p>
<p><code>IndentationError: unexpected indent</code></p>
<p>When I use <code>#</code> to comment the triple-quoted strings, everything works normally. Does anyone know the reason behind this error and how I could fix it?</p>
<p>My Code:</p>
<pre><code>#This programs show that comments using # rather than """ """

def main():
    print("let's do something")
#Try using hashtag to comment this block to get code working
'''
    Note following block gives you a non-sense indent error
    The next step would be to consider how to get all the words from spam and ham
    folder from different directory. My suggestion would be do it twice and then
    concentrate two lists

    Frist think about the most efficient way
    For example, we might need to get rid off the duplicated words in the beginning

    The thoughts of writing the algorithem to create the dictionary

    Method-1:
    1. To append all the list from the email all-together
    2. Eliminate those duplicated words

    cons: the list might become super large

    I Choose method-2 to save the memory
    Method-2:
    1. kill the duplicated words in each string
    2. Only append elements that is not already in the dictionary

    Note:
    1. In this case, the length of feature actually was determined by the
    training cohorts, as we used the different English terms to decide feature

    cons: the process time might be super long
'''
    def wtf_python(var1, var2):
        var3 = var1 + var2 + (var1*var2)
        return var3

    wtfRst1 = wtf_python(1,2)
    wtfRst2 = wtf_python(3,4)

    rstAll = { "wtfRst1" : wtfRst1,
               "wtfRst2" : wtfRst2
    }
    return(rstAll)

if __name__ == "__main__":
    mainRst = main()
    print("wtfRst1 is :\n", mainRst['wtfRst1'])
    print("wtfRst2 is :\n", mainRst['wtfRst2'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>The culprit</strong>:</p>
<p>Move the comments inside the function definition:</p>
<p><strong>The reason</strong>:</p>
<p>Since the triple-quote strings are valid python exp, they should be treated like-wise, i.e. inside the function scope.</p>
<p><strong>Hence</strong>:</p>
<pre><code>def main():
    print("let's do something")
    #Try using hashtag to comment this block to get code working
    '''
        Note following block gives you a non-sense indent error
        The next step would be to consider how to get all the words from spam and ham
        folder from different directory. My suggestion would be do it twice and then
        concentrate two lists

        Frist think about the most efficient way
        For example, we might need to get rid off the duplicated words in the beginning

        The thoughts of writing the algorithem to create the dictionary

        Method-1:
        1. To append all the list from the email all-together
        2. Eliminate those duplicated words

        cons: the list might become super large

        I Choose method-2 to save the memory
        Method-2:
        1. kill the duplicated words in each string
        2. Only append elements that is not already in the dictionary

        Note:
        1. In this case, the length of feature actually was determined by the
        training cohorts, as we used the different English terms to decide feature

        cons: the process time might be super long
    '''
    def wtf_python(var1, var2):
        var3 = var1 + var2 + (var1*var2)
        return var3

    wtfRst1 = wtf_python(1,2)
    wtfRst2 = wtf_python(3,4)

    rstAll = { "wtfRst1" : wtfRst1,
               "wtfRst2" : wtfRst2
    }
    return(rstAll)

if __name__ == "__main__":
    mainRst = main()
    print("wtfRst1 is :\n", mainRst['wtfRst1'])
    print("wtfRst2 is :\n", mainRst['wtfRst2'])
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>let's do something
wtfRst1 is :
 5
wtfRst2 is :
 19
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should push the indentation level of you triple-quote strings one tag to the  right.</p>
<p>Although triple-quote strings are often used as comments, they are normal python expressions, so they should follow the language's syntax.</p>
</div>
<div class="post-text" itemprop="text">
<p>Triple quoted strings as comments must be valid Python strings. Valid Python strings must be properly indented.</p>
<p>Python sees the multi-line string, evaluates it, but since you don't assign a variable to it the string gets thrown away in the next line.</p>
</div>
<span class="comment-copy"><code>def wtf_python(var1, var2):</code> not having fun, I suppose?</span>
<span class="comment-copy">Add indentation to your comments</span>
<span class="comment-copy">I have to admit. I am so annoying by indent error. Thanks guys. This really saves my day. Cheers</span>
<span class="comment-copy">@TomGauss happens to all of us, you may accept the answer that helped. cheers!</span>
