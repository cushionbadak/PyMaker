<div class="post-text" itemprop="text">
<p>I have a text file that contains gas price information by date. The format of the file is:  </p>
<p>Month-Day-Year:Price </p>
<p>Example: <a href="https://i.stack.imgur.com/eyCSl.png" rel="nofollow noreferrer">GasPrices</a></p>
<p>I need to accomplish 2 tasks:</p>
<p>(1) Separate the input into -- month, day, year, price</p>
<p>(2) Calculate the average gas price per year and per month.</p>
<p>Can someone point me in the right direction, because I'm new to Stack Overflow and coding?</p>
</div>
<div class="post-text" itemprop="text">
<p>This problem is so simple it doesn't even warrant using regular expression.<br/>
The beauty of python is that you can always economize on code.<br/>
your starting point is the separator <code>:</code> (I recreated your set and put it in a .txt file)</p>
<pre><code>import pandas as pd

df = pd.read_table("stack_example.txt", sep = ":", header = -1, names = 
["date","val"])
</code></pre>
<p><a href="https://i.stack.imgur.com/7VofP.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/7VofP.png"/></a></p>
<pre><code>df['month'] = pd.DatetimeIndex(df['date']).month
df['year']  = pd.DatetimeIndex(df['date']).year
df.head()
</code></pre>
<p><a href="https://i.stack.imgur.com/gAsne.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/gAsne.png"/></a></p>
<p>finally</p>
<pre><code>df_grp = df.loc[:,["val","month","year"]].groupby(["month", "year"]).mean()
df_grp
</code></pre>
<p><a href="https://i.stack.imgur.com/t5MNt.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/t5MNt.png"/></a></p>
<p>without counting <code>.head()</code> and <code>import pandas</code> this is 4 lines of code.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('/path/to/file','r') as f:
   fullfile = [x.strip() for x in f.readlines()]
datesprices=[(x.split(':')[0], x.split(':')[1]) for x in fullfile]
</code></pre>
<p>This code reads the file into a list called fullfile, strips newline characters, and puts the prices corresponding to the dates into a list of tuples using the split function. If you have questions comment.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>csv</code> stdlib module, which is good for all sorts of character-delimited file parsing.</p>
<pre><code>import csv

with open("path/to/file") as f:
    reader = csv.reader(f, delimiter=":")
    for date, gas_price in reader:
        # do whatever
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Someone had mentioned using Regex, so I designed all of my answers using regular expressions.  There are multiple ways to accomplish the first task in your question, which was to split the input data into 4 elements (month, day, year, price). I'm not sure what output you need, so you can modify this code to use a list, dictionary, etc. </p>
<p><strong>Answer One</strong></p>
<pre><code>import re

with open('tmpFile.txt', 'r') as input:
  lines = input.readlines()

  for line in lines:
    input_pattern = re.compile(r'(\d{2}-\d{2}-\d{4}):(\d{1}\.\d{2,3})')
    find_pattern = re.search(input_pattern, line)
    if find_pattern:
        ############################################
        # The regex above has 3 groups.
        # group(0) outputs this -- 04-05-1993:1.068
        # group(1) outputs this -- 04-05-1993
        # group(2) outputs this -- 1.068
        ############################################
        date_of_price = find_pattern.group(1)
        price_of_gas = find_pattern.group(2)

        print (date_of_price.split('-'))
        # outputs 
        ['04', '05', '1993']
        ['04', '05', '1993']
        ['04', '19', '1993']

        print (price_of_gas)
        # outputs
        1.068
        1.079
        1.079
</code></pre>
<p><strong>Answer Two</strong></p>
<pre><code>import re

input = open('tmpFile.txt', 'r')
  for line in input.readlines():
    print (re.split('[\-?:]+', line.rstrip('\n')))
    # outputs 
    ['04', '05', '1993', '1.068']
    ['04', '05', '1993', '1.079']
    ['04', '19', '1993', '1.079']
</code></pre>
<p><strong>Answer Three</strong></p>
<p>The method below uses list comprehension to archive the same results as the ones above. </p>
<pre><code>import re

input = open('tmpFile.txt', 'r')
gas_price_info = [re.split('[\-?:]+', x.rstrip('\n')) for x in input.readlines()]
print (gas_price_info)
# outputs 
[['04', '05', '1993', '1.068'], ['04', '05', '1993', '1.079'], ['04', '19', '1993', '1.079']]
</code></pre>
<p><strong>Answer Four</strong></p>
<p>This answer is similar to Answer Three, but the input line has been added to the list comprehension code.   This outputs a nested list like Answer Three.</p>
<pre><code>gas_price_info = [re.split('[\-?:]+', x.rstrip('\n')) for x in open('tmpFile.txt').readlines()]
</code></pre>
</div>
<span class="comment-copy">Can you include the data as text here and add an example of your desired output?</span>
<span class="comment-copy">Just try to write the code and we will help out through the mistakes. Directly giving the solution might not help you develop the skills required</span>
<span class="comment-copy">include a data sample as a text file so we one can provide a solution without having to recreate a sample</span>
<span class="comment-copy">Welcome to Stack Overflow!   Please familiarize with these FAQs and repost your question -- (1) How to create a Minimal, Complete, and Verifiable example - <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a> and (2) Why is voting important? - <a href="https://stackoverflow.com/help/why-vote">stackoverflow.com/help/why-vote</a>.  -- Happy Coding!</span>
