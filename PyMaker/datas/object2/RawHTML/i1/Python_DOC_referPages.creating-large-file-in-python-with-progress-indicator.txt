<div class="post-text" itemprop="text">
<p>I need to create some large files and show the write progress in python. Currently I am using this code to create the file. But I can not show the progress. Python <em><code>Write</code></em> function returns the number actually written at the end of <code>write</code> operation. But I need to know how much byte is written in every second. </p>
<pre><code>oneGB = 1024*1024*1024 # 1GB
with open('large_file', 'wb') as fout:
    bytes_number = fout.write(os.urandom(oneGB))
    print(bytes_number)
</code></pre>
<p>I know that I can get the expected result using <code>dd</code> comand with <code>progress</code> in linux, unfortunetly the system I am working doesn't support <code>progress</code> as status flag for <code>dd</code> command. I get this when try to run dd command. </p>
<pre><code>dd: invalid status flag: `progress'
</code></pre>
<p>Here is my dd command: </p>
<pre><code>dd if=/dev/zero of=temp_file status=progress count=1M bs=5120
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The best tool for this job, of course, is <a href="https://www.ivarch.com/programs/pv.shtml" rel="nofollow noreferrer"><code>pv</code></a>. If you don't have the permissions to install it globally, you may still be able to build and install it from the source (without sudo) in your user directory only, because it is installed using autoconf/automake, so you just have to run <code>./configure</code> with <code>--prefix=$HOME/bin</code> before making &amp; installing. </p>
<p>However, if you really want to write a Python script, there are two parts to consider: the progress bar itself and the data for the progress bar.</p>
<p>For the progress bar itself, @Mntfr has already mentioned <a href="https://stackoverflow.com/q/3160699/7315159">a question</a> that covers this.</p>
<p>For the progress bar information, you will need some way of keeping track of how much data has been written so far. So, either you need to write smaller amounts at a time (for example, only write 5MB before updating the progress bar), or you will need to asynchronously keep track of the size of your output file, and update your progress bar accordingly. The first method may be slower overall (since it involves starting and stopping writing), but the second method is probably harder (since it requires asynchronicity in your script, which is not very fun to implement in Python unless you just write two scripts and run them side-by-side). These two ideas should give you a start on how to implement what you're looking for.</p>
</div>
<span class="comment-copy">I think <a href="https://stackoverflow.com/questions/3160699/python-progress-bar">this</a> is what you are looking for</span>
<span class="comment-copy">Thanks. This is helpful. But I actually need the exact byte size written every second. Thats the main important information for me.</span>
<span class="comment-copy">Can't you use a constructor?</span>
<span class="comment-copy">@Mntfr, Sorry, I didn't get it. can you please explain? or give me an example?</span>
<span class="comment-copy">Are you trying to replace the <code>dd</code> command with your Python script, just because you want to see progress? Or do you have to use Python? Because <a href="https://askubuntu.com/q/215505/643673">this question</a> covers seeing <code>dd</code> progress in Linux itself.</span>
<span class="comment-copy">Lets say, I write 5MB at a time, and takes 2s to complete. how can get how much was written on first second, and how much written on second second?</span>
<span class="comment-copy">You can't (as far as I know). The only method that can actually tell in real time what is written at any smaller intervals is by checking the file itself. However, you can time how long each 5MB takes, and update your time estimate based on the average time per 5MB. After all, I'm guessing you're writing this for humans, and humans don't care about very small granularity of time, as long as the progress estimate is mostly accurate.</span>
