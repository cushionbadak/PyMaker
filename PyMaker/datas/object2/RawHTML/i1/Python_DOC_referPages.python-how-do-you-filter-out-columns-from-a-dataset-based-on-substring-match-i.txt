<div class="post-text" itemprop="text">
<pre><code>df_train = pd.read_csv('../xyz.csv')
headers = df_train.columns
</code></pre>
<p>I want to filter out those columns in headers which have <code>_pct</code> in their substring.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.filter.html" rel="nofollow noreferrer">df.filter</a></p>
<pre><code>df = pd.DataFrame({'a':[1,2,3], 'b_pct':[1,2,3],'c_pct':[1,2,3],'d':[1]*3})

print(df.filter(items=[i for i in df.columns if '_pct' not in i]))

## or as jezrael suggested
# print(df[[i for i in df.columns if '_pct' not in i]])
</code></pre>
<p>Output:</p>
<pre><code>   a  d                                                                                                                                                           
0  1  1                                                                                                                                                           
1  2  1                                                                                                                                                           
2  3  1 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use:</p>
<pre><code>#data from AkshayNevrekar answer
df = df.loc[:, ~df.columns.str.contains('_pct')]
print (df)
</code></pre>
<p>Filter solution is not trivial:</p>
<pre><code>df = df.filter(regex=r'^(?!.*_pct).*$')
</code></pre>
<hr/>
<pre><code>   a  d
0  1  1
1  2  1
2  3  1
</code></pre>
<hr/>
<p>Thank you, @IanS for another solutions:</p>
<pre><code>df[df.columns.difference(df.filter(like='_pct').columns).tolist()]

df.drop(df.filter(like='_pct').columns, axis=1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As <code>df.columns</code> returns a list of the column names, you can use list comprehension and build your new list with a simple condition:</p>
<pre><code>new_headers = [x for x in headers if '_pct' not in x]
</code></pre>
</div>
<span class="comment-copy">Filter should be omit - <code>print(df[[i for i in df.columns if '_pct' not in i]])</code></span>
<span class="comment-copy">The solution with filter is trivial: <code>df.filter(like='_pct')</code></span>
<span class="comment-copy">@IanS - not, because inverted</span>
<span class="comment-copy">what do you mean inverted?</span>
<span class="comment-copy">@IanS - <code>df.filter(not like='_pct')</code></span>
<span class="comment-copy">or more seriously: <code>df.drop(df.filter(like='_pct').columns, axis=1)</code></span>
