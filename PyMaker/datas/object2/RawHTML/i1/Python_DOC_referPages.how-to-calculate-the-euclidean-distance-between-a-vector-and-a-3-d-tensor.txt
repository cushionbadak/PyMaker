<div class="post-text" itemprop="text">
<p>I have a tensor <strong>A</strong> with the size of (1ï¼Œ<em>L</em>),  and a 3-D tensor <strong>B</strong> with the size of (<em>N</em>, <em>K</em>, <em>L</em>). Obviously, there are <em>N</em> arrays with the size of (<em>K</em>, <em>L</em>) in <strong>B</strong>, which are called <strong>C</strong> here.</p>
<p>Now, how can I calculate the <strong>mean euclidean distance</strong> (average the distance of <strong>A</strong> and each row of <strong>C</strong>) between <strong>A</strong> and every <strong>C</strong> without iterations of every rows in <strong>C</strong>, and finally return a vector with the size of (1,<em>N</em>) ? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do that with <a href="https://www.tensorflow.org/api_docs/python/tf/norm" rel="nofollow noreferrer"><code>tf.norm</code></a> and <a href="https://www.tensorflow.org/api_docs/python/tf/reduce_mean" rel="nofollow noreferrer"><code>tf.reduce_mean</code></a>:</p>
<pre><code>import tensorflow as tf

with tf.Graph().as_default(), tf.Session() as sess:
    a = tf.placeholder(tf.float32, [1, None])
    b = tf.placeholder(tf.float32, [None, None, None])
    dist = tf.reduce_mean(tf.norm(b - a, axis=2), axis=1)
    print(sess.run(dist, feed_dict={a: [[1, 2, 3]],
                                    b: [[[ 4,  5,  6], [ 7,  8,  9]],
                                        [[10, 11, 12], [13, 14, 15]]]}))
    # [ 7.7942286 18.186533 ]
</code></pre>
<p>EDIT: A variation for the case where you have several vectors in <code>a</code>:</p>
<pre><code>import tensorflow as tf

with tf.Graph().as_default(), tf.Session() as sess:
    a = tf.placeholder(tf.float32, [None, None])
    b = tf.placeholder(tf.float32, [None, None, None])
    a_exp = tf.expand_dims(tf.expand_dims(a, 1), 1)
    dist = tf.reduce_mean(tf.norm(b - a_exp, axis=3), axis=2)
    print(sess.run(dist, feed_dict={a: [[1, 2, 3], [4, 5, 6]],
                                    b: [[[ 4,  5,  6], [ 7,  8,  9]],
                                        [[10, 11, 12], [13, 14, 15]]]}))
    # [[ 7.7942286 18.186533 ]
    #  [ 2.598076  12.990381 ]]
</code></pre>
</div>
<span class="comment-copy">Furthermore, if the tensor A with the shape of [?,L] (where "?" is the batch size), how can I obtain the results with the shape of [?,N]? I have tried the solution above, but it didn't work.</span>
<span class="comment-copy">@BoboXi I have edited the answer slightly (adding a <code>tf.expand_dims</code>) so it works for that case as well.</span>
<span class="comment-copy">I have tried it, but it didn't work well. Assuming that  a = ([1, 2, 3], [4, 5, 6]) with a shape of (2, 3) when the batch_size = 2, while b remains the value above. It is supposed that I should get the result with the shape of (2, 2), of which the first row is the distance between [1, 2, 3] and the 3-D tensor denoted a,  and the second row is the distance between [4, 5, 6] and a. But the code above returns the result  [ 7.7942286 12.990381 ] with the shape of (1, 2), it is obviously not correct.</span>
<span class="comment-copy">@BoboXi Ah I think I understand what you mean now. See if the edited answer helps.</span>
<span class="comment-copy">It works well, thank you very much!</span>
