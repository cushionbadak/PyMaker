<div class="post-text" itemprop="text">
<p>In my game I am trying to create Mario kart (basically a racing game) apart from a 2D version and I am trying to add barriers so you cannot go into the middle of the screen. </p>
<pre><code>class Player:
    def __init__(self, x, y, wah):
        self.xpos = x
        self.ypos = y
        self.picture = wah
        self.speed_x = 0
        self.speed_y = 0
        self.rect = self.picture.get_rect()
        self.rect.x = self.xpos
        self.rect.y = self.ypos
        self.picture = pygame.transform.scale(self.picture, (20, 20))

    def update(self):
        self.xpos += self.speed_x
        self.ypos += self.speed_y
        self.rect.x = self.xpos
        self.rect.y = self.ypos


    def draw(self):
        screen.blit(self.picture, (self.xpos, self.ypos))

    def is_collided_with(self, sprite):
        return self.rect.colliderect(sprite.rect)


while True:

  if joystick:
        axis_x, axis_y = (joystick.get_axis(0), joystick.get_axis(1))
        if abs(axis_x) &gt; 0.1:
            player_one.speed_x = 2 * axis_x
        if abs(axis_y) &gt; 0.1:
            player_one.speed_y = 2 * axis_y


   if player_one.xpos &gt; 95 and player_one.ypos &gt; 30 and player_one.ypos &lt; 662:   #LEFT
        player_one.speed_x = -1

    if player_one.xpos &lt; 1161 and player_one.ypos &gt; 30 and player_one.ypos &lt; 662:   #RIGHT
        player_one.speed_x = 1

    if player_one.ypos &gt; 20 and player_one.xpos &gt; 95 and player_one.xpos &lt; 1161: #TOP
        player_one.speed_y = -1

    if player_one.ypos &lt; 666 and player_one.xpos &gt; 95 and player_one.xpos &lt; 1161: #TOP
        player_one.speed_y = 1

    player_one.update()
    player_one.draw()
</code></pre>
<p>What I am expecting is for the character to be able to move inside the black but not the middle pixelated part. I would like it so that once you hit the edge or rim of the pixels in the middle of the screen it will either stop your movement or bounce you off in the opposite direction of which it bounced into the middle. 
The problem which is actually happening is the fact that is forced only to move upwards when its on the left part of the screen and when its in a corner and trying to get to the top or the bottom it goes in an upside-down triangle back to where it was before. Here is a diagram:
<a href="https://i.stack.imgur.com/wOxdT.jpg" rel="nofollow noreferrer"><img alt="what I am asking for" src="https://i.stack.imgur.com/wOxdT.jpg"/></a>
if you need to see more of my code please leave a comment below.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are overriding your <code>.speed_x</code> and <code>.speed_y</code> values that you get in this part:</p>
<pre><code>while True:

   if player_one.xpos &gt; 95 and player_one.ypos &gt; 30 and player_one.ypos &lt; 662:   #LEFT
        player_one.speed_x = -1

    if player_one.xpos &lt; 1161 and player_one.ypos &gt; 30 and player_one.ypos &lt; 662:   #RIGHT
        player_one.speed_x = 1

    if player_one.ypos &gt; 20 and player_one.xpos &gt; 95 and player_one.xpos &lt; 1161: #TOP
        player_one.speed_y = -1

    if player_one.ypos &lt; 666 and player_one.xpos &gt; 95 and player_one.xpos &lt; 1161: #TOP
        player_one.speed_y = 1
</code></pre>
<p>With new values in this part:</p>
<pre><code>if joystick:
    axis_x, axis_y = (joystick.get_axis(0), joystick.get_axis(1))
    if abs(axis_x) &gt; 0.1:
        player_one.speed_x = 2 * axis_x
    if abs(axis_y) &gt; 0.1:
        player_one.speed_y = 2 * axis_y
</code></pre>
<p>So that first part of the loop does absolutely nothing, I assume you are not expecting that to be the case.  I would suggest doing your joystick calculation first and overriding it if you find your character will end up in the barrier.</p>
</div>
<span class="comment-copy">We either need a clearer explanation or an <a href="https://stackoverflow.com/help/mcve">MCVE</a> in order to fully understand what you are meaning. Currently it just feels like a poorly formatted runon sentence and I cannot provide a good answer for that. <a href="https://stackoverflow.com/help/how-to-ask">How To Ask</a> is also a good read in order to not make the same mistake once again.</span>
<span class="comment-copy">sorry that was an error it was supposed to be the other way around. I did that because I was in a rush.</span>
<span class="comment-copy">Have you got any ideas on why my code may not be working?</span>
<span class="comment-copy">I'm not entirely sure but I can give you a useful tool to help find it yourself.  Go through your code line by line and keep track of what will happen to all the variables.  Ask yourself: What will happen if I spawn this guy in the wall? If you expect him to be moved out of the wall you should be able to find a couple lines of code that you expect to do exactly that.  If what you expect and see are different we can help much better if you are asking a specific question about a small section of code.</span>
<span class="comment-copy">I know what the problem slightly is now. I have tried another way by adding a rim around the edge of the inside part of the track and that if the player is colliding with the track, then it will print True and when I go onto the game it begins to constantly print off True. Is there any reason why that happens to that other solution I am trying to do</span>
<span class="comment-copy">Good idea, if the game is constantly printing true then the conditions you have set are not acting the way you think.  Instead of just printing True, try printing True and the x, y position of your character.  You should be able to tell why those x and y values are getting through your if statements once you see them.</span>
