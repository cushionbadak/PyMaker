<div class="post-text" itemprop="text">
<p>Okay so this is a bit of a weird question but here goes.
I have been reading in a csv file that looks like this:</p>
<pre><code>Name,John,Susan,
Date,3/14/2019,3/14/2019
Job,Doctor,Cashier
</code></pre>
<p>The first string in every row is the key that I want to add into a dictionary so it looks like this:</p>
<pre><code>{"Name": ["John", "Susan"], "Date": ["3/14/2019, "3/14/2019"], "Job": ["Doctor", "Cashier"]}
</code></pre>
<p>I have been doing this all without the use of CSV reader or pandas due to the horizontal aspect of the data and it all works fine. The problem is when I run into a csv file that looks like this:</p>
<pre><code>Name,John,Susan,
Date,"3
/14/
2019",3/14/2019
Job,Doctor,Cashier
</code></pre>
<p>When reading in the data, it should come out to "3\n/14/\n2019", however I am reading in the file line by line in order to do it without CSV eader or pandas so I have this super weird algorithm that works like 80% of the time to catch things like this. Does anyone have a solution to this? I can supply more info if needed and am open to using CSV reader or pandas if it is possible that way. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>CSV reader can handle your csv with the extra newlines.</p>
<p>data.csv</p>
<pre><code>Name,John,Susan,
Date,"3
/14/
2019",3/14/2019
Job,Doctor,Cashier
</code></pre>
<p>Code</p>
<pre><code>import csv
myDict = {}
with open("data.csv") as file:
    for line in csv.reader(file):
        myDict[line[0]] = line[1:]
</code></pre>
<pre><code>print(myDict)
{'Name': ['John', 'Susan', ''], 'Date': ['3\n/14/\n2019', '3/14/2019'], 'Job': ['Doctor', 'Cashier']}
</code></pre>
<p>However, this isn't addressing the fact that you end up with an empty string as a third name in your dictionary because the original csv has that ending comma. I fixed this by adding the following if statement.</p>
<pre><code>import csv
myDict = {}
with open("members.txt") as file:
    for line in csv.reader(file):
        if line[-1] == "":
            myDict[line[0]] = line[1:-1]
        else:
            myDict[line[0]] = line[1:]
</code></pre>
<pre><code>print(myDict)
{'Name': ['John', 'Susan'], 'Date': ['3\n/14/\n2019', '3/14/2019'], 'Job': ['Doctor', 'Cashier']}
</code></pre>
</div>
<span class="comment-copy">I had no problem with csv reader, import csv  with open('data.csv') as csv_file: 	csv_reader = csv.reader(csv_file, delimiter=',') 	for row in csv_reader: 		print(row) why cant you use it?</span>
<span class="comment-copy">You miss a string literal here: ["3/14/2019, "3/14/2019"]. Does that fix your problem?</span>
