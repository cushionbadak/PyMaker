<div class="post-text" itemprop="text">
<p>I have a huge dataset with a lot of different client names, bills etc.</p>
<p>Now I want to show the 4 clients with the cumulated total highest bill. </p>
<p>So far I have used the groupby function:</p>
<pre><code>data.groupby(by = ["CustomerName","Bill"], as_index=False).sum()
</code></pre>
<p>I tried to group by the name of the customers and the bill but it's not giving me the total sum of all the individual customer orders but only each single order from the customer. </p>
<p>Can someone help and tell me how I can receive on the first position customer x (with the highest accumulated bill) and the sum of all his orders and on position 2 the customer with the second highest accumulated bill and so on?</p>
<p>Big thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Since, I don't know the full structure of your <code>data</code> data frame, I recommend subsetting the relevant columns first:</p>
<pre><code>data = data[["CustomerName", "Bill"]]
</code></pre>
<p>Then, you just need to group by <code>CustomerName</code> and sum over all columns (<code>Bill</code> in that case):</p>
<pre><code>data.groupby(by=["CustomerName"]).sum()
</code></pre>
<p>Finally, you need to sort by the <code>Bill</code> column in non-ascending order:</p>
<pre><code>data.sort_values(by='Bill', ascending=False)

print(data.head(4))
</code></pre>
</div>
<span class="comment-copy">import pandas as pd   data = pd.read_excel("data_Shipments.xls")  data.groupby(by = ["CustomerName","Bill"], as_index=False).sum()</span>
<span class="comment-copy">Can you further elaborate what is in which column/row of your dataset?</span>
