<div class="post-text" itemprop="text">
<pre><code>class Comment(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='comments')
    author = models.CharField(max_length=200)
    text = models.TextField()
    image = models.ImageField(upload_to='Comment_Pictures', blank=True)
    date_posted = models.DateTimeField(default=timezone.now)

    def __str__(self):
        return self.text

    def get_absolute_url(self):
        return '/'


class CommentAddView(LoginRequiredMixin, CreateView):
    model = Comment
    fields = ['text', 'image']

    def form_valid(self, form):
        form.instance.author = self.request.user
        form.instance.post = Post.objects.get(id=self.kwargs['pk'])
        return super().form_valid(form)

class CommentDeleteView(LoginRequiredMixin, UserPassesTestMixin, DeleteView):
    model = Comment
    success_url = '/'

    def test_func(self):
        comment = self.get_object()
        if request.user == comment.author:
            return True
        return False
</code></pre>
<blockquote>
<p>TypeError at /post/3/comment/ 'dict' object is not callable Request
  Method:   POST Request URL:   <a href="http://localhost:8000/post/3/comment/" rel="nofollow noreferrer">http://localhost:8000/post/3/comment/</a> Django
  Version:  2.1.7 Exception Type:   TypeError Exception Value:   'dict'
  object is not callable</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The error is telling you exactly what is wrong. <code>self.kwargs</code> is a dict, but you are calling it. </p>
<p>You probably meant: </p>
<pre><code>data = Post.objects.get(id=self.kwargs['pk'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this also:</p>
<pre><code>form.instance.post = Post.objects.get(id=self.kwargs.get('pk'))
</code></pre>
</div>
<span class="comment-copy">Sorry, Posted previous version of my code. Updated can you check it.</span>
<span class="comment-copy">Well the new code does not give that error. What is the error now? Please post the full traceback.</span>
<span class="comment-copy">For CommentDeleteView how to set test_func () to access particular post and delete that comment from that post permanently from Post model also.if i return True in test_func() without any condition it passes delete functionality. But that comment appears in page and when i try to delete that again it gives page 404 error .( updated DeleteView in post  )</span>
