<div class="post-text" itemprop="text">
<p>The problem is quite simple, I have a number: e.g. <code>x = 123.234</code></p>
<p>Now what I want to do is:
 1. change to 2 decimal places: <code>123.23</code>;
 2. add 2 zeros in the front: <code>00123.45</code>;
 3. add 2 x-s in the end: <code>00123.45xx</code>;
 4. and if my x changes to <code>x = 1234.2345</code>, then my final output will be <code>01234.2345x</code></p>
<p>I know how to get the answer with some code, but I just want to ask, is there a way, which I can combine all the formats into 1 line, like:</p>
<pre><code>"{:.2f,0&gt;A,x&lt;B}".format(number)
</code></pre>
<p>where A,B are some value you can set</p>
<p>then it will give me a string, though kind of meaningless, 00123.45xx</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to <em>pad</em> the number to a specific length with zeros:</p>
<pre><code>'{:0&gt;8.2f}'.format(123.234)  # 00123.23
</code></pre>
<p>If you always want to add exactly 2 zeros:</p>
<pre><code>'00{:.2f}'
</code></pre>
<p>And that should also make it obvious how to apply two trailing xxs:</p>
<pre><code>'00{:.2f}xx'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With variable precision, pre-width and post-width:</p>
<pre><code>&gt;&gt;&gt; "{:0&gt;{prewidth}.{prec}f}{:x&lt;{postwidth}s}".format(123.456, '', prec=2, prewidth=8, postwidth=2)
'00123.45xx'
</code></pre>
<p>or variants thereof.</p>
<p>See also the <a href="https://pyformat.info/#param_align" rel="nofollow noreferrer">PyFormat page</a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; x = 123.456
&gt;&gt;&gt; A = 5
&gt;&gt;&gt; B = 2
&gt;&gt;&gt; '{:0{}.{}f}'.format(x,A+B+1,B)+('X'*(str(x)[::-1].find('.')-B))
'00123.46X'

&gt;&gt;&gt; x = 1234.5678
&gt;&gt;&gt; A = 7
&gt;&gt;&gt; B = 2
&gt;&gt;&gt; '{:0{}.{}f}'.format(x,A+B+1,B)+('X'*(str(x)[::-1].find('.')-B))
'0001234.57XX'
</code></pre>
<p>Upside of this: Completely modular.
<code>A</code> is total numbers in front of the <code>.</code>, <code>B</code> is the number of decimals that should not be <code>X</code>. The rest of the decimals are <code>X</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Currently I am using this code:</p>
<pre><code>x = 13.23456

k = "{:x&lt;10s}".format("{:0&gt;8.2f}".format(x))
print(k) #00013.23xx
</code></pre>
<p>and if you change the length of x, the total length of the result keeps the same while still have 0 and x:</p>
<pre><code>x = 123.23456

k = "{:x&lt;10s}".format("{:0&gt;8.2f}".format(x))
print(k) #00123.23xx
</code></pre>
<p>seems we do not have a way to combine {:x&lt;10s} and {:0&gt;8.2f} into one:</p>
<pre><code>#not possible: {:0&gt;8.2f, x&lt;10s}.format(x)
</code></pre>
</div>
<span class="comment-copy">You want to <i>pad</i> the number with two zeros to a specific length, or you want to <i>always</i> add exactly two zeros…?</span>
<span class="comment-copy">What prevents you from writing the <code>00</code> and <code>xx</code> before and after the format placeholder?</span>
<span class="comment-copy">with a specific length which can be set by myself... with exactly 2 zeros/x i can just '00' + string + 'xx' no problem...maybe my question is too odd :)</span>
<span class="comment-copy">You want to pad 0's in front, and x's at the back of a (floating point) number?</span>
<span class="comment-copy">yes I know we can get 00123.23 by using '{:0&gt;8.2f}'.format(123.234); and we can get 123.23xx by using '{:x&lt;8.2f}'.format(123.234), but seems we cannot simply combine these two format into one...</span>
<span class="comment-copy">You want to <i>centre align</i> with different padding on the left and the right…?</span>
<span class="comment-copy">maybe another example: you can change x=5 into x = +5.00 by using "{:+.2f}".format(x), you can also change x = 5 into x = 05 by using "{:0&gt;2d}".format(x); but if I want to change x = 5 into x = +05.00, seems we cannot use "{:+2f, 0&gt;2d}".format(x), we cannot indicate multiple format in that {}</span>
<span class="comment-copy">It would really help if you could formalise your expectation to a simple English sentence, like "centre-align with different pre and post paddings"…</span>
<span class="comment-copy">"Applying multiple formats" is just a <i>means to an end</i>. It doesn't describe what you're <i>actually</i> trying to do. For any one specific end goal, there may be a very concise way to do it with a format string; but for other goals such a format string doesn't exist and you need to use some other solution. In general, no, "multiple formats" isn't a thing, but there's probably a closely related solution. Also see <a href="http://xyproblem.info" rel="nofollow noreferrer">xyproblem.info</a>.</span>
<span class="comment-copy">thanks for the help</span>
<span class="comment-copy">Sure. TBH I'm only on here to learn working other peoples problems :)</span>
