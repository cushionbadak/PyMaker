<div class="post-text" itemprop="text">
<p>My project structure looks like this:</p>
<pre><code>project/
|--- helper_modules/
    |--- util.py
|--- scripts/
    |--- A.py
</code></pre>
<p>If I put the script A.py in the project/ folder, it runs and imports successfully using <code>from helper_modules.util import fn</code>. But I have a number of scripts and to keep things organised I'd like to have them all in their own subfolder. How can I do this and still import from helper_modules?</p>
<p>I'm in the directory /project/ when I call the scripts.</p>
</div>
<div class="post-text" itemprop="text">
<p>If your current directory is <code>/project/</code>, you should launch the script using:</p>
<pre><code>python -m scripts.A
</code></pre>
<p>And from within <code>scripts/A.py</code>, you can do</p>
<pre><code>from helper_modules.util import fn
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just need add this in your script A.py :</p>
<pre><code>from ..helper_modules.util import fn
</code></pre>
<p>and run A.py exiting one level from the project folder, so if you are in project folder do:</p>
<pre><code>cd ..
</code></pre>
<p>Then run A.py using </p>
<pre><code>python -m project.scripts.A
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found this which gave me a workaround. Apparently <a href="https://stackoverflow.com/questions/4383571/importing-files-from-different-folder">this can't be done by default in Python.</a></p>
<p>In each script in the scripts folder, I started with this code:</p>
<pre><code># add to the Python path to import helper functions
import sys
import os
sys.path.append(os.path.abspath('.'))
</code></pre>
</div>
