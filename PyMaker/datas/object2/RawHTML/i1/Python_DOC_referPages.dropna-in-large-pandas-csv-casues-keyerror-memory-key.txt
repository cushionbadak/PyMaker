<div class="post-text" itemprop="text">
<p>I have DF loaded by pd.read_csv(). 500mb, 4 columns, 50xxx rows. I need to delete all rows with <code>0</code> or <code>-</code> (gap) in 3th (Allele1 - AB) or 4th (Allele2 - AB) columns.</p>
<p>My code:
<em>Read CSV</em></p>
<pre><code>data_skipped = pd.read_csv(cwd + file_list[i], sep='\t', skiprows = row_skipped_value, header = 0, index_col = False, dtype=object, low_memory = True)
</code></pre>
<p><em>Deleting gaps</em></p>
<pre><code>fixed_data = fixed_data.loc[fixed_data['Allele1 - AB' or 'Allele2 - AB'] != gap].dropna()
</code></pre>
<p>After deleting gaps line i got error: </p>
<pre><code>KeyError: MemoryError()
</code></pre>
<p>If I delete that line, all it's fine and next steps works fine (but in result I have files with gaps). 14GB free RAM.</p>
<p>Any advise or solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code does not do what you want.</p>
<p><strong>Pandas does not use <code>and</code>, <code>or</code> etc. as boolean operator.</strong> See <a href="http://pandas.pydata.org/pandas-docs/version/0.24.2/user_guide/indexing.html#boolean-indexing" rel="nofollow noreferrer">Pandas documentation</a>:</p>
<blockquote>
<p>Another common operation is the use of boolean vectors to filter the data. The operators are: | for or, &amp; for and, and ~ for not. These <strong>must</strong> be grouped by using parentheses</p>
</blockquote>
<p>So you should filter data in this way. Instead of:</p>
<pre><code>fixed_data = fixed_data.loc[fixed_data['Allele1 - AB' or 'Allele2 - AB'] != gap].dropna()
</code></pre>
<p>Do:</p>
<pre><code>fixed_data.loc[(fixed_data['Allele1 - AB'] != gap) | (fixed_data['Allele2 - AB'] != gap)].dropna()
</code></pre>
<p>And this does not require additional import of other packages.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should try using </p>
<pre><code>fixed_data.loc[fixed_data['Allele1 - AB' or 'Allele2 - AB'] != gap].dropna(inplace=True)
</code></pre>
<p>, and not reassigning it (it will return <code>None</code>).
In that case no copy of the array will be created, see <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dropna.html" rel="nofollow noreferrer">here</a>.</p>
<p>Update:
I think your code does not make that much sense in the first place. <code>'Allele1 - AB' or 'Allele2 - AB'</code> will always evaluate to <code>'Allele1 - AB'</code>.
I am guessing you want to drop all rows containing <code>NaN</code> and only keep rows where column <code>Allele1 - AB</code> is not equal to <code>gap</code> and <code>Allele2 - AB</code> is not equal to <code>gap</code>.</p>
<p>In that case use:</p>
<pre><code>import numpy as np
fixed_data = fixed_data[np.logical_or(fixed_data["Allele1 - AB"] != gap, fixed_data["Allele2 - AB"] != gap)].dropna()
</code></pre>
</div>
<span class="comment-copy">Are you sure <code>fixed_data.loc[fixed_data['Allele1 - AB' or 'Allele2 - AB'] != gap]</code> will work? Shouldn't it be <code>fixed_data.loc[(fixed_data['Allele1 - AB'] != gap) | (fixed_data['Allele2 - AB'] != gap)]</code>?</span>
<span class="comment-copy">I have a different file formats, and when I try it on smaller files, everything is fine. Gaps are deleting. But in this example yours code work. Thank u very much ! In this case, I will change that part of the code in scripts for others files :)</span>
<span class="comment-copy">Are you still getting <code>MemoryError</code>?</span>
<span class="comment-copy">No, ur code repair everything :D thank u very much. All works.</span>
<span class="comment-copy">Thank u for advice, I will learn about it more. :) But code it's still not working. I got the same error in the same line :/ What else can cause it?</span>
<span class="comment-copy">See update. Your code does not do what you want I think</span>
