<div class="post-text" itemprop="text">
<p>So, Python allows the use of tuples, which are essentially lists of constants. Is it good practice to use a tuple with a list of constants, even if that list has only one element, like this:</p>
<pre><code>tuple = ("item")
</code></pre>
<p>Or is it better to have a class of constants like this:</p>
<pre><code>class CONST():
    def ITEM(): return "item"
</code></pre>
<p>Constants so far:</p>
<pre><code>TITLE = "Title"
ABOUT_MESSAGE = """About message"""
LARGE_FONT = ("Verdana", 12) 
LANGUAGES = ["JAVA", "PYTHON", "HTML"] 
PAGE_NAMES = ["StartPage", "JAVA", "PYTHON", "HTML"] 
PAGES = []
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Tuples are not meant to hold a list of constants.</p>
<p>Python follows a "we are all consenting adult" philosophy. Just write your constants in capital letters like you've been done so far.</p>
<p>You may consider to use the <code>enum</code> package when it's appropriate.</p>
</div>
<span class="comment-copy">Nitpick: that isn't actually a tuple. A single element tuple needs a trailing comma to differentiate it from just parenthesis grouping. Also, this is pretty opinion based. What's the scenario in this case? And why would a constant be in a tuple in the first place? I can't see any immediate benefit.</span>
<span class="comment-copy">my_tuple = ('tuple',), In python we use tuples as a list of immutable, so it is up to the programmer how it is used</span>
<span class="comment-copy">Oh, thank you for the clarification, i got that off of a tutorial i read, apparently, it missed that bit of info out. I have edited my code with the constants i have so far.</span>
<span class="comment-copy">"tuples, which are essentially lists of constants"â€”where did you get this idea? Tuples are tuples. They have nothing to do with constants. <a href="https://stackoverflow.com/q/2682745/354577">Constants don't really exist in Python</a>.</span>
<span class="comment-copy">@al97729 You could just do <code>tuple = some_new_data</code> later though and overwrite the old <code>tuple</code> contents. Putting things in a tuple doesn't give any "const-ness".</span>
