<div class="post-text" itemprop="text">
<p>I'm facing a problem during cleaning tweets. I have a process which save tweets in a csv and then I do a pandas dataframe of the data.</p>
<p>x is a tweet from my dataframe : </p>
<p><code>'b\'RT @LBC: James O\\\'Brien on Geoffrey Cox\\\'s awaited legal advice:     "We are waiting for a single unelected expert to tell us whether or not fore\\xe2\\x80\\xa6\''</code></p>
<p>More tweets :
<code>"b'RT @suzannelynch1: Meanwhile in #Washington... Almost two dozen members of #Congress write to #TheresaMay on eve of #StPatricksDay visit wa\\xe2\\x80\\xa6'</code></p>
<p><code>b"RT @KMTV_Kent: #KentTonight Poll:\\nKent\'s MPs will be having their say on Theresa May\'s #Brexit deal today. @SirRogerGaleMP said he\'ll back\\xe2\\x80\\xa6"</code></p>
<p>The result should looks like that : 
<code>James O'Brien on Geoffrey Cox's awaited legal advice: "We are waiting for a single unelected expert to tell us whether or not for'</code>
(Keep hashtags, juste deleting no utf8 caracteres) </p>
<p>I would like to clean this tweet. I tried to use regex with re.sub(my_regex), re.compile ...</p>
<p>Differents regex I tried : ([\U00010000-\U0010ffff],r'@[A-Za-z0-9]+',https?://[A-Za-z0-9./]+)</p>
<p>I also tried like that :</p>
<pre><code>x.encode('ascii','ignore').decode('utf-8')  
</code></pre>
<p>It doesn't work because of the double backslash, and work when I do :</p>
<pre><code>'to tell us whether or not fore\xe2\x80\xa6'.encode('ascii','ignore').decode('utf-8')
</code></pre>
<p>It returns me :</p>
<pre><code>'to tell us whether or not fore'
</code></pre>
<p>Does some one know how to clean it ?
Many thanks ! </p>
</div>
<div class="post-text" itemprop="text">
<p>see if this helps</p>
<pre><code>a = 'b\'RT @LBC: James O\\\'Brien on Geoffrey Cox\\\'s awaited legal advice:     "We are waiting for a single unelected expert to tell us whether or not fore\\xe2\\x80\\xa6\''

chars = re.findall("""[\s"'#]+\w+""",a)

''.join([c for c in chars if c])
</code></pre>
<p><strong>Output</strong></p>
<pre><code>James O'Brien on Geoffrey Cox's awaited legal advice: "We are waiting for a single unelected expert to tell us whether or not for'
</code></pre>
</div>
<span class="comment-copy">Can you please provide us sample data</span>
<span class="comment-copy">I gave a tweet, do you need more ?</span>
<span class="comment-copy">Seems to me that those "escaped characters" are  not really escaped characters, since the backslash is escaped. This means that those are simply literals. <code>'fore\\xe2\\x80\\xa6\''</code> is just the literal <code>fore\xe2\x80\xa6'</code> (where <code>\xe2</code> is simply a <i>backslash</i> followed by an <code>x</code> followed by an <code>e</code> followed by a <code>2</code>).</span>
<span class="comment-copy">The real problem here seems to be that the data has already been corrupted.  The ideal solution is to fix the problem at source rather than try to work around it afterwards.</span>
<span class="comment-copy">Somewhere you've done <code>str(data)</code> where data is a  byte string.  Just decode the byte string as UTF-8.  Fix the mess instead of working around it.</span>
<span class="comment-copy">Yea it works, however it deletes also hashtags ... I will put more example of my tweets. I just want to delete no utf-8 caractere if possible</span>
<span class="comment-copy">see if the update works..</span>
<span class="comment-copy">Yea it works !!! Thanks. I have so many troubles with regex :(</span>
<span class="comment-copy">Trust me I know.. :)</span>
