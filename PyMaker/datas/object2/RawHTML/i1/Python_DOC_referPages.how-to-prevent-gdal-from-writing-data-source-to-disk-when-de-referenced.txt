<div class="post-text" itemprop="text">
<p>I need to extract the raster (stored as a numpy array) from a file. Following the very popular <a href="https://pcjericks.github.io/py-gdalogr-cookbook/raster_layers.html#convert-an-ogr-file-to-a-raster" rel="nofollow noreferrer">OGR Cookbook</a>, I am reading in an OGR layer (geojson) and then rasterizing the vectors. I read that array using GDAL's <a href="https://gdal.org/python/osgeo.gdal-pysrc.html#Dataset.ReadAsArray" rel="nofollow noreferrer">ReadAsArray()</a> function. That all works fine, and I can do all sorts of numpy things to it. However, GDAL automatically writes out the GDAL dataset I create because its automatically de-referenced once the program ends. I don't need/want this file to be output because its useless to have on disk, I just need the data in memory. How can you prevent this from happening?</p>
<p>I've tried not calling the <a href="https://www.gdal.org/classGDALDataset.html#ab6421c7ec7068c274a030e22aa6609e1" rel="nofollow noreferrer">FlushCache()</a> function, but the file still gets output in the end.
Code:</p>
<pre><code>...

    # Create the destination data source
    target = gdal.GetDriverByName('GTiff').Create(output_raster_path, source_raster.RasterXSize, source_raster.RasterYSize, 1, gdal.GDT_UInt16)
    target.SetGeoTransform(source_raster.GetGeoTransform())
    target.SetProjection(source_raster.GetProjection())
    band = target.GetRasterBand(1)
    band.SetNoDataValue(no_data_value)
    gdal.RasterizeLayer(target, [1], source_layer, options=["ATTRIBUTE=BuildingID"])
    raster = band.ReadAsArray()
    return raster
</code></pre>
<p>Afterwards, once the program completes, a geotiff is written to <code>output_raster_path</code>, which I had just set as "temp.tif".</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use In-Memory Driver  for things like that.</p>
<pre><code>mem_drv = gdal.GetDriverByName('MEM')
target = mem_drv.Create('', source_raster.RasterXSize, source_raster.RasterYSize, 1, gdal.GDT_UInt16)
</code></pre>
</div>
<span class="comment-copy">I'm not familiar with GDAL, but have you looked at the /vsimem/ "in-memory" virtual file system?  A quick search suggests that this is how GDAL addresses "files' that should remain in memory only</span>
<span class="comment-copy">@MarkAdelsberger I have looked at it but couldn't find the equivalent in python. The documentation is a little bit all over the place. Regardless, a solution was provided below. Thanks for the help!</span>
<span class="comment-copy">Thanks, that did the trick. I wish the python documentation was easier to navigate...</span>
