<div class="post-text" itemprop="text">
<p>Hello I have two DFs (rateQualityOut and subsetOut):</p>
<p>"rateQualityOut" is an empty DF that I created to store the temporary output "subsetOut". The idea is that all outputs (once the loop is finished) should be stored in that DF. </p>
<pre><code>rateQualityOut[['pID',   'carry_dt','position', 'product_type'  ,'positionLength']].loc[currLength:currLength+addLength,:]

   pID carry_dt position product_type  positionLength
0  NaN      NaT      NaN          NaN             NaN
1  NaN      NaT      NaN          NaN             NaN
2  NaN      NaT      NaN          NaN             NaN
3  NaN      NaT      NaN          NaN             NaN
4  NaN      NaT      NaN          NaN             NaN
5  NaN      NaT      NaN          NaN             NaN
</code></pre>
<p>and another DF which has the temporary output</p>
<pre><code>    subsetOut

subsetOut[['pID',   'carry_dt','position', 'product_type'  ,'positionLength']]

      pID   carry_dt              position product_type  positionLength
2739    1 2018-11-01  CITI_52299G66_201210     Physical               5
2738    1 2018-11-02  CITI_52299G66_201210     Physical               5
2737    1 2018-11-05  CITI_52299G66_201210     Physical               5
2736    1 2018-11-06  CITI_52299G66_201210     Physical               5
2735    1 2018-11-07  CITI_52299G66_201210     Physical               5
</code></pre>
<p>I am looking to store the temporary output "subsetOut" into "rateQualityOut". and What I have done in the past is simply do this:</p>
<pre><code>rateQualityOut.loc[currLength:currLength+addLength,:] = subsetOut
</code></pre>
<p>However it seems that it is not working as planned. The output shows that the NaN are not populated as expected. </p>
<pre><code>   pID carry_dt position product_type  positionLength
0  NaN      NaT      NaN          NaN             NaN
1  NaN      NaT      NaN          NaN             NaN
2  NaN      NaT      NaN          NaN             NaN
3  NaN      NaT      NaN          NaN             NaN
4  NaN      NaT      NaN          NaN             NaN
5  NaN      NaT      NaN          NaN             NaN
</code></pre>
<p>Can i please have some suggestions? Thank you so much</p>
</div>
<div class="post-text" itemprop="text">
<p>Typically it is easier and faster not to put subsetOut into rateQualityOut with each iteration. Instead you could store the subsets into a list and concatenate them at the end:</p>
<pre><code>import pandas as pd
rateQualityOut = [] #Make a list
for i in someIterator:
   #do something here
   rateQualityOut.append(subsetOut)

rateQualityOut = pd.concat(rateQualityOut)
</code></pre>
</div>
<span class="comment-copy">Is possible change data sample for 10 rows, 3 columns and add expected output with bad not working output? Becuase hard to simulate your error. thanks.</span>
<span class="comment-copy">done thank you for the suggestion</span>
<span class="comment-copy">Can you check <code>rateQualityOut.loc[currLength:currLength+addLength,:] = subsetOut.values</code> ?</span>
<span class="comment-copy">Is same rows in subset like in filtered data?</span>
<span class="comment-copy">your suggestion works fine, i only need to make sure that both DF have the same size. Thank you</span>
<span class="comment-copy">Hello Dennis this is a good suggestion too ..let me try it out and get back to you  thank you</span>
<span class="comment-copy">i think this approach is safer for me as I dont need to worry too much about size of DF matrices  like the previous approach   thank you John</span>
<span class="comment-copy">Dennis a quick follow on your suggestion. When i concatenate i have trouble keep the ordering of the column ..i loose the column ordering when i concatenate multiple times . any idea how to keep it please?</span>
<span class="comment-copy">I'm not sure if I understand correctly, but lets assume you have the fully concatenated dataframe rateQualityOut and a list of column names (which is ordered according to your needs) called columnList, then simply do rateQualityOut = rateQualityOut[columnList]. This should order the columns according to the list.</span>
<span class="comment-copy">thank you, i was looking for a more direct approach (i.e., by slighly amending the pd.concat( DF, xxx) ) but  rateQualityOut = rateQualityOut[columnList] also works  thank you</span>
