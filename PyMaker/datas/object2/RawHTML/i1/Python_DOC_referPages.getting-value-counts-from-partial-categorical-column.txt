<div class="post-text" itemprop="text">
<p>I'm looking to try and get <code>value_counts</code> from a <code>Categorical</code> column (specifically,  containing month information) using <code>pandas</code> (v0.23.4). When all categories are present, this works fine:</p>
<pre><code>import calendar
import random

import pandas as pd

random.seed(1)

month_names = calendar.month_name[1:]
month_names += month_names

df1 = pd.DataFrame({
    'Month': month_names,
    'Flag': [random.choice([True, False]) for _ in month_names]
})

df1['Month'] = pd.Categorical(
    df1['Month'], categories=calendar.month_name[1:], ordered=True
)
print(df1.groupby('Month')['Flag'].value_counts())
</code></pre>
<p>As expected prints:</p>
<pre><code>Month      Flag 
January    False    2
February   True     2
March      False    2
April      True     2
May        True     2
June       False    2
July       False    1
           True     1
August     False    1
           True     1
September  False    2
October    True     2
November   False    1
           True     1
December   False    2
Name: Flag, dtype: int64
</code></pre>
<p>However if our <code>'Month'</code> column does not contain all of the possible categories, <code>pandas</code> throws a <code>ValueError</code>. For example:</p>
<pre><code>month_names = ['January', 'February', 'March']
month_names += month_names

df2 = pd.DataFrame({
    'Month': month_names,
    'Flag': [random.choice([True, False]) for _ in month_names]
})

df2['Month'] = pd.Categorical(
    df2['Month'], categories=calendar.month_name[1:], ordered=True
)
print(df2.groupby('Month')['Flag'].value_counts())
</code></pre>
<p>raises:</p>
<pre><code>ValueError: operands could not be broadcast together with shape (12,) (3,)
</code></pre>
<p>Is there any way we can get the proper <code>value_counts</code> results from the partial data? Ideally this would retain the full set of categories but even without would be a start.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you only want the observed categories, you can use the <code>observed</code>-keyword:</p>
<pre><code>print(df2.groupby('Month', observed=True)['Flag'].value_counts())
#Month     Flag 
#January   False    1
#          True     1
#February  True     2
#March     False    2
#Name: Flag, dtype: int64
</code></pre>
<p>To get all the values in the groupby, you can use a workaround using <code>crosstab</code> and then <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.stack.html" rel="nofollow noreferrer"><code>reindex</code></a> using all the categories. To be honest, I'm not sure why the original <code>GroupBy</code> gives the error with <code>value_counts()</code> (it works fine for other methods), but this works, after using <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.stack.html" rel="nofollow noreferrer"><code>stack</code></a> to make the <code>Flag</code>-columns into a MultiIndex:</p>
<pre><code>(pd.crosstab(df2['Month'], df2['Flag'])
.reindex(df2['Month'].cat.categories.tolist(), fill_value=0)
.stack())
#Month      Flag 
#January    False    1.0
#           True     1.0
#February   False    0.0
#           True     2.0
#March      False    2.0
#           True     0.0
#April      False    0.0
#           True     0.0
#May        False    0.0
#           True     0.0
#June       False    0.0
#           True     0.0
#July       False    0.0
#           True     0.0
#August     False    0.0
#           True     0.0
#September  False    0.0
#           True     0.0
#October    False    0.0
#           True     0.0
#November   False    0.0
#           True     0.0
#December   False    0.0
#           True     0.0
</code></pre>
</div>
<span class="comment-copy">This is perfect, thankyou so much. It seems odd to me that <code>observed=False</code> basically malfunctions in this way but <code>observed=True</code> should be sufficient in my case.</span>
