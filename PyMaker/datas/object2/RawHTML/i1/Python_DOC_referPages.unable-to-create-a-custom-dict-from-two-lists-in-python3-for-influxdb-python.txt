<div class="post-text" itemprop="text">
<p>I have the following result from  InfluxDB when using it with <code>influxdb-python</code>:</p>
<pre><code>results = {'series': [{'columns': ['time', 'v'],
             'name': 'wind-angle',
             'values': [['2018-12-12T10:25:57.890567522Z', 2.9],
                        ['2018-12-12T10:25:57.918715188Z', 285],
                        ['2018-12-12T10:25:57.935111522Z', 3.7],
                        ['2018-12-12T10:25:57.957419855Z', 288.7],
                        ['2018-12-12T10:25:57.973892188Z', 6.3]]},
            {'columns': ['time', 'v'],
             'name': 'wind-spd',
             'values': [['2018-12-12T10:25:57.888505188Z', 1.44],
                        ['2018-12-12T10:25:57.916779855Z', 1.44],
                        ['2018-12-12T10:25:57.932662855Z', 1.44],
                        ['2018-12-12T10:25:57.955199188Z', 1.49],
                        ['2018-12-12T10:25:57.971157855Z', 1.54]]}],
 'statement_id': 0}
</code></pre>
<p>My aim is to <em>merge</em>  the two values under the same timestamp of the measurements as follows:</p>
<pre><code>{
   't': 2018-12-12T10:25:57.890567522Z,
   'd': [
      {
        't': 2018-12-12T10:25:57.890567522Z
        'd': {
         'wind-angle': 2.9,
         'wind-spd': 1.44
      },
      {
        't': 2018-12-12T10:25:57.918715188Z,
         'd': {
           'wind-angle': 285,
           'wind-spd': 1.44
         }
      }
   ]
}
</code></pre>
<p>Desired JSON Structure:</p>
<pre><code>{
  't': 1st timestamp from wind-angle,
   'd': [
      {
       't': timestamp from wind-angle,
       'd': {
           'wind-angle': value_wind-angle,
           'wind-spd': value_wind-spd
       }
   ]
}
</code></pre>
<p>The problem I see is that when I use a <code>for</code> loop there are 5 data points and only two <code>names</code>. Hence for example, the following loop logic:</p>
<pre><code>main = {'t': 0, 'd':[]}
_d = {}
for each_dataset_time, each_dataset_val in results.raw['series'][0]['values']:
    for each_series in results.raw['series']:
        _d[each_series['name']] = each_dataset_val
        _d['t'] = each_dataset_time
    main['d'].append(_d)
</code></pre>
<p>I will keep getting the same value and timestamp even if the JSON Structure is satisfied.</p>
<p>How do I loop over the inner <code>values</code> loop distinctly and make sure that the dict takes the <code>names</code> as keys for the desired structure within the same loop?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>zip</code> to generate <code>d</code> sounds good.<br/></p>
<pre><code>wind_angle  = results.raw['series'][0]['values']
wind_spd     = results.raw['series'][1]['values']

d = []
for wangle, wspd in zip(wind_angle, wind_spd):
    inner  = {}
    inner['t'] = wangle[0]
    inner['d'] = {'wind-angle': wangle[1], 'wind-spd': wspd[1]}
    d.append(inner) 
</code></pre>
</div>
<span class="comment-copy">IMO opinion, the real problem is that there are no identical timestamp between your two datasets. Is rounding the timestamp acceptable?</span>
<span class="comment-copy">Yes. That is what i have in mind</span>
<span class="comment-copy">On the example, he only wants the first timestamp to be used as a key, then he only want the value that is at the same index.</span>
<span class="comment-copy">It is okay. The timestamp resolutions arent very crucial at this points.</span>
