<div class="post-text" itemprop="text">
<p>Consider the function that converts a number of bytes into a human readable string:</p>
<pre><code>def sizeof_fmt(num, suffix='B'):
    for unit in ['','Ki','Mi','Gi','Ti','Pi','Ei','Zi']:
        if abs(num) &lt; 1024.0:
            return "%3.1f %s%s" % (num, unit, suffix)
        num /= 1024.0
    return "%.1f %s%s" % (num, 'Yi', suffix)
</code></pre>
<p>I'm looking for a function that, given the human readable string, would return the bounds of that size (min,max) in bytes, accounting for 1 number after decimal point.
For example:</p>
<p><code>human_readable_to_range('1 KiB') =&gt; 1024, 1075</code>
1 KiB stops at 1075 because 1076 is 1.1 KiB</p>
<p><code>human_readable_to_range('1.3 KiB') =&gt; 1281, 1382</code></p>
<p><code>human_readable_to_range('9.7 MiB') =&gt; 10118759, 10223615</code></p>
<p>I tried solving it this way:</p>
<pre><code>def human_readable_to_range(size):
  MULTIPLIERS = {
    'KiB': 2**10,
    'MiB': 2**20
  }
  number, unit = size.split(' ')
  multiplier = MULTIPLIERS[unit]
  rough_value = float(number) * multiplier
  min_ = rough_value - multiplier * 0.5
  max_ = rough_value + multiplier * 0.5
</code></pre>
<p>But this solution only gives approximate values</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use binary search: start from an approximate value, make it a range based on the multiplier, and search that range based on how a value gets converted to its human readable form.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you're assuming just 1 decimal digit in theinput, add and subtract <code>0.05</code> to the given number, and use that as the maximum and minimum amount, which you then multiply by the unit.</p>
<pre><code>def human_readable_to_range(size):
  MULTIPLIERS = {
    'KiB': 2**10,
    'MiB': 2**20
  }
  number, unit = size.split(' ')
  minnum = float(number) - 0.05
  maxnum = float(number) + 0.05
  multiplier = MULTIPLIERS[unit]
  return round(minnum * multiplier), round(maxnum * multiplier)
</code></pre>
</div>
<span class="comment-copy">This seems like a strange thing to need to do, why do you need to do it? Maybe there's a better way to solve the real problem.</span>
<span class="comment-copy">@Barmar got a table in DB that stores filesizes in bytes. Need the users of my app to filter that table with things like 'filesize equal 10.5 MB', 'filesize less that 9 KiB'</span>
<span class="comment-copy">Translating 10.5MB to a specific range seems like a poor UI. I'd just give them two fields to specify the endpoints of the range. But that's probably a better discussion for <a href="https://ux.stackexchange.com">User Experience</a>.</span>
