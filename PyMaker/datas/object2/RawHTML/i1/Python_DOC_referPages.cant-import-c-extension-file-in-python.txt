<div class="post-text" itemprop="text">
<p><strong>My extension C function, in <code>pyc.c</code></strong></p>
<pre><code>#include&lt;Python.h&gt;
static PyObject *add(PyObject* self,PyObject* args) {

    int a=9;
    int b=10;
    int c=a+b;
    return Py_BuildValue(c);

    //return Py_BuildValue( "s","hiiiii");
}

static char prin_docs[] = "prin( ): Any message you want to put here!!\n";

static PyMethodDef consume_methods[] = {
   {"add", (PyCFunction)add,
       METH_NOARGS, prin_docs},
       {NULL}
};

PyMODINIT_FUNC initadd(void) {
   Py_InitModule3(add, consume_methods,
                  "Extension module example!");
}
</code></pre>
<p><strong>My setup file:</strong></p>
<pre><code>from distutils.core import setup, Extension
setup(name='add', version='1.0',  
      ext_modules=[Extension('add', ['pyc.c'])])
</code></pre>
<p><strong>My Python program that uses that C file:</strong></p>
<pre><code>import add

print(add.add());
</code></pre>
<p>The above code successfully created a .so object but I can't import in the Python program by executing that. I get the following error:</p>
<pre><code>Traceback (most recent call last):
  File "pycall.py", line 1, in &lt;module&gt;
    import add
ImportError: No module named add
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Did you actually <code>setup.py install</code> your module? If you only built it, it won't be on <code>sys.path</code>.</p>
</div>
<span class="comment-copy">Welcome to SO! Have you already read the <a href="https://cython.readthedocs.io/en/latest/src/userguide/source_files_and_compilation.html" rel="nofollow noreferrer">Cython tutorial</a> on this topic? It looks to me like you're missing a call to <code>cythonize()</code>.</span>
<span class="comment-copy">@NiayeshIsky I believe the "cpython" tag that you edited out was correct - thee user is using the "cpython" implementation of Python. This doesn't look to have anything to do with Cython so I removed that tag which you added.</span>
<span class="comment-copy">@DavidW Fair enough, though removing <code>cpython</code> in the first place was actually <a href="https://stackoverflow.com/posts/55215233/revisions">OP's change</a>.</span>
