<div class="post-text" itemprop="text">
<p>I have a JSON file like this and have got troubles generating a table with 
COLUMNS as Name, number, countrycode(first item in price), currency</p>
<pre><code>{"a": [{"Name": "name1",
  "number": "number1",
  "defaultPrice": {"p": "232", "currency": "CAD"},
  "prices": {"DZ": {"p": "62", "currency": "RMB"},
   "AU": {"p": "73", "currency": "AUD"},
  "lg": "en"}},
 {"Name": "name2",
  "number": "number2",
  "defaultPrice": {"p": "233", "currency": "CAD"},
  "prices": {"DZ": {"p": "63", "currency": "RMB"},
  "US": {"p": "72", "currency": "USD"},
  "Lg": "en"}}]}
</code></pre>
<p>The problem is that I get traceback just at the parsing:</p>
<pre><code>Traceback (most recent call last):
  File "test.py", line 49, in &lt;module&gt;
    val = ast.literal_eval(mystr)
  File "/anaconda3/lib/python3.7/ast.py", line 46, in literal_eval
    node_or_string = parse(node_or_string, mode='eval')
  File "/anaconda3/lib/python3.7/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "&lt;unknown&gt;", line 38
 SyntaxError: unexpected EOF while parsing
</code></pre>
<p>What I used was </p>
<pre><code>mystr='''
....
'''
val = ast.literal_eval(mystr)
val1 = json.loads(json.dumps(val))
val2 = val1['a'][0]['Name']
print pd.DataFrame(val2, columns=["Name"])
</code></pre>
<p>Thanks for any help!!</p>
</div>
<div class="post-text" itemprop="text">
<p>To get a file loaded into a dictionary using the <code>json</code> module, <code>json.load</code> will take a file handle:</p>
<pre class="lang-py prettyprint-override"><code>import json

with open('yourfile.json') as fh:
    val = json.load(fh)

type(val)
dict

# to get the structure you're looking for
val1 = val.get('a')

type(val1)
list
# Now you can iterate over it, or throw it into pandas if you want a
# table-like data structure

val1[0].keys()
dict_keys(['Name', 'number', 'defaultPrice', 'prices'])
</code></pre>
<h3>Using your string approach</h3>
<p>You can do this with the string approach you have in your original post as well:</p>
<pre class="lang-py prettyprint-override"><code>import json

with open('yourfile.json') as fh:
    mystr = fh.read()

# Note, this is json.loads, which takes a string arg not a file handle
val = json.loads(mystr)

val
{'a': [{'Name': 'name1', 'number': 'number1', 'defaultPrice': {'p': '232', 'currency': 'CAD'}, 'prices': {'DZ': {'p': '62', 'currency': 'RMB'}, 'AU': {'p': '73', 'currency': 'AUD'}, 'lg': 'en'}}, {'Name': 'name2', 'number': 'number2', 'defaultPrice': {'p': '233', 'currency': 'CAD'}, 'prices': {'DZ': {'p': '63', 'currency': 'RMB'}, 'US': {'p': '72', 'currency': 'USD'}, 'Lg': 'en'}}]}

type(val)
dict


# To put this into pandas

import pandas as pd

val1 = val.get('a')

df = pd.DataFrame(val1)
</code></pre>
<p>Where <code>df</code> looks like:</p>
<pre class="lang-py prettyprint-override"><code>    Name                        ...                                                                     prices
0  name1                        ...                          {'DZ': {'p': '62', 'currency': 'RMB'}, 'AU': {...
1  name2                        ...                          {'DZ': {'p': '63', 'currency': 'RMB'}, 'US': {...

[2 rows x 4 columns]
</code></pre>
<p>Pandas will impute the column names as the keys in the list of dictionaries</p>
</div>
<span class="comment-copy">Is there a reason to use <code>ast</code> module here?</span>
<span class="comment-copy">Also, <code>json.loads(json.dumps())</code> seems a bit redundant as <code>ast</code> <i>should</i> resolve the data structure to <code>dict</code></span>
<span class="comment-copy">I was able to get this to run just copying the file into <code>mystr = '''&lt;file&gt;'''</code> then running <code>val = json.loads(mystr)</code></span>
<span class="comment-copy">Thanks a lot!! It worked! Really helped me. Could you pls also give an example of throwing it into pandas for a table-like data structure?</span>
<span class="comment-copy">@milkbear see newest edit, the same method will work for both approaches of loading the data</span>
<span class="comment-copy">Thanks!!!! Almost there. I just got one last question. I use this code and generated name and number successfully, but got error in currency.                      Name,number, currency = [],[],[] for result in val1:     Name.append(result['packageName'])     number.append(result['sku'])     currency.append(result['prices']['currency'])  df = pd.DataFrame(Name, number,currency)</span>
<span class="comment-copy"><code>DataFrame</code> expects a <code>list</code> of <code>dict</code> by default. To do what you want, you'll need a <code>pd.Series</code> and you can add those to an existing frame, I'll make a final edit</span>
<span class="comment-copy">looking at your data, <a href="https://stackoverflow.com/questions/30522724/take-multiple-lists-into-dataframe">this</a> question might be a good bit of help</span>
