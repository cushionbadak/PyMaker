<div class="post-text" itemprop="text">
<p>I'm trying to call a Python code from AHK for processing the YouTube transcript on my clipboard, remove those time stamps, fuse them back into one string, and then substitute the original texts with the new processed string so I can paste it out. </p>
<p>AHK code: </p>
<pre><code>^x::

clipboard =   
Send, ^c

Run "directory\try.py"

Return
</code></pre>
<p>Python code (the try.py): </p>
<pre><code>import pyperclip 

content = pyperclip.paste()
lines = content.split('\r\n')

new_lines = []
for line in lines: 
    for i,x in enumerate(line):
        if x.isalpha():
            position = i 
            break 
    new_line = line[position:]
    new_lines.append(new_line)

# print('Preview', '\n', ' '.join(new_lines))
pyperclip.copy(' '.join(new_lines))
</code></pre>
<p>Sometimes this system works, but sometimes it doesn't. Sometimes, when it didn't work, if I went back to the YouTube page and pressed ctrl + x again, it worked. I'm pretty sure the issue is in the AHK part, since I have manually been using the Python code for months without any error. Thanks to anyone can help. </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes. The AHK is too fast. That clipboard stuff takes time. Check it out. This is how to do it:</p>
<pre><code>; Using ClipWait to improve script reliability:
clipboard =  ; Start off empty to allow ClipWait to detect change
Send, ^c
ClipWait ; Wait for the clipboard to contain text.
Run "directory\try.py"
</code></pre>
<p>You might even have to add some sleep times:</p>
<pre><code>; Using ClipWait to improve script reliability:
clipboard =  ; Start off empty to allow ClipWait to detect change
Sleep, 50 ; milliseconds
Send, ^c
ClipWait ; Wait for the clipboard to contain text.
Sleep, 150 ; milliseconds
Run "directory\try.py"
</code></pre>
<p>Or better yet, try like so (using <code>OnClipboardChange</code> function):</p>
<pre><code>OnClipboardChange("ClipChanged")
return

^x::
    Send, ^c
return

ClipChanged(Type) {
    MsgBox "%Clipboard%"  ;  comment out if working well
    run "directory\try.py"
    ExitApp
}
</code></pre>
<p>You can comment out the ending  <code>ExitApp</code> but then not only will <code>^x</code> trigger it, but everytime the clipboard changes (so if you hit <code>control+c</code> yourself) and you will want some way to exit the command, such as <code>^{esc}::ExitApp</code> or the like.</p>
<p>Hth!!</p>
</div>
<span class="comment-copy">I think AHK is fast such that it doesn't wait till the Python code is finished rather than having no clipboard content since I haven't got any blank output. The results I got now are either not processed by the python code or processed by the python code instead of blank.</span>
<span class="comment-copy">Is there a way to check whether the content on the clipbarod has chnaged? If so, then I can add some "wait" steps.</span>
<span class="comment-copy">did you try to use it together with extension <code>.pyw</code> this will run the Python code without the Python Terminal, it should be load/run faster.</span>
<span class="comment-copy">@LouieLee check <a href="https://autohotkey.com/docs/commands/OnClipboardChange.htm" rel="nofollow noreferrer">OnClipboardChange</a></span>
<span class="comment-copy">@stevecody That's amazing. I just rename the extension right? The whole process got way faster without those distracting black windows.</span>
