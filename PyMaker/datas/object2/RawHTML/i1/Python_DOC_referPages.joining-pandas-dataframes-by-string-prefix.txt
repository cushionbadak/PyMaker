<div class="post-text" itemprop="text">
<p>I am looking for an efficient way to perform the following join on two pandas.DataFrames:</p>
<p>The first one contains in column <code>A</code> strings like:</p>
<pre><code>A  ....

Spam|One
Spam|Two
Ham
Eggs
</code></pre>
<p>The second one is a reference table with string keys as the index and a text description:</p>
<pre><code>index      description
Spam       "..."
Ham        "..." 
Eggs       "...."
BakedBeans "...."
</code></pre>
<p>Each key in the index can be a prefix to a string in <code>A</code>.  Now I'd like to join the description column to column A where the value in A matches the prefix. I have a feeling that there is an efficient pandas one-liner for it...</p>
<p>We can assume that all values in <code>A</code> have the format "prefix|suffix" or "prefix". Perhaps that can speed up things.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.split.html" rel="nofollow noreferrer"><code>Series.str.split</code></a> with select first values of lists and <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.map.html" rel="nofollow noreferrer"><code>Series.map</code></a> by <code>Series</code>:</p>
<pre><code>print (df1)
          A
0  Spam|One
1  Spam|Two
2       Ham
3      Eggs

print (df2)  
     description
Spam         aaa
Ham           sd
Eggs         rty

print (df2.index)
Index(['Spam', 'Ham', 'Eggs'], dtype='object')

df1['description'] = df1['A'].str.split('|').str[0].map(df2['description'])
print (df1)
          A description
0  Spam|One         aaa
1  Spam|Two         aaa
2       Ham          sd
3      Eggs         rty
</code></pre>
<p>More general solution should be <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.extract.html" rel="nofollow noreferrer"><code>Series.str.extract</code></a>, with <code>^</code> for extract starting strings and <code>join</code> by <code>|</code> for regex <code>OR</code> by <code>df2.index</code>:</p>
<pre><code>pat = '(' + '|'.join('^' + df2.index) + ')'
df1['new'] = df1['A'].str.extract(pat,expand=False).map(df2['description'])
</code></pre>
</div>
