<div class="post-text" itemprop="text">
<p>I'm fairly green to OOP and I was just playing around with it in Python and came across something I can't explain so hopefully you guys will be able to help.</p>
<p>I was playing with the code below:</p>
<pre><code>class Car():
    def __init__(self, brand, model, speed):
        self.brand = brand
        self.model = model
        self.speed = speed

    def increase_speed(self):
        return self.speed + 1


    def decrease_speed(self, decrease_by):
        return self.speed - decrease_by

car1 = Car("tesla","x",30)
print(car1.brand)
print(car1.speed)
print(car1.increase_speed())
print(car1.speed)
print(car1.decrease_speed(10))
</code></pre>
<p>My question is, I am expecting after increasing the speed, car1's speed will be 31 but instead it prints out 30. Why is it that way and how should the code be written for the speed to be 31 instead? </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def increase_speed(self):
    self.speed += 1
    return self.speed
</code></pre>
<p>Previously you did not increase your speed, rather you just return a value that is equal to the speed plus 1. Similarly, change your decrease_speed function.</p>
</div>
<div class="post-text" itemprop="text">
<p>The method increase_speed is just returning self.speed + 1, if you wish to update the speed you need to self.speed = self.speed + 1 into the method increase speed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of returning the values, set them on the attributes:</p>
<pre><code>class Car():
    def __init__(self, brand, model, speed):
        self.brand = brand
        self.model = model
        self.speed = speed

    def increase_speed(self):
        self.speed = self.speed + 1


    def decrease_speed(self, decrease_by):
        self.speed = self.speed - decrease_by
</code></pre>
<p>I deliberately don't return the changed speed anymore, as it's good style (at least with methods mainly setting attributes) to <em>either</em> return something <em>or</em> change state:</p>
<pre><code>car1 = Car("tesla","x",30)
print(car1.brand)
print(car1.speed)
car1.increase_speed()
print(car1.speed)
car1.decrease_speed(10)
print(car1.speed)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assign the increased speed with the original speed inside your <code>increase_speed</code> method, doing the same with your <code>decrease_speed</code> method:</p>
<pre><code>class Car():
    def __init__(self, brand, model, speed):
        self.brand = brand
        self.model = model
        self.speed = speed

    def increase_speed(self):
        self.speed = self.speed + 1

    def decrease_speed(self, decrease_by):
        self.speed = self.speed - decrease_by

car1 = Car("tesla","x",30)
print(car1.brand)
print(car1.speed)
car1.increase_speed()
print(car1.speed)
car1.decrease_speed(10)
print(car1.speed)
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>tesla
30
31
21
</code></pre>
</div>
<span class="comment-copy">You haven't assigned the increased speed back to the origial <code>self.speed</code>. Thus <code>increase_speed</code> didn't really <i>increased</i> the speed; it just <b>showed</b> 1 unit higher speed and gone.</span>
<span class="comment-copy">....and BTW that's not a problem of OOP, but just the "P" in OOP</span>
<span class="comment-copy">...<code>a = 5</code> now <code>print( a + 7 )</code>. What is the value of <code>a</code>?</span>
