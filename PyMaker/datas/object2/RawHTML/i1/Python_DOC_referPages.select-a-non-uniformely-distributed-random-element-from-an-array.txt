<div class="post-text" itemprop="text">
<p>I'm trying to pick numbers from an array at random.</p>
<p>I can easily do this by picking an element using <code>np.random.randint(len(myArray))</code> - but that gives a uniform distribution.</p>
<p>For my needs I need to pick a random number with higher probability of picking a number near the beginning of the array - so I think something like an exponential probability function would suit better.</p>
<p>Is there a way for me to generate a random integer in a range (1, 1000) using an exponential (or other, non-uniform distribution) to use as an array index?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can assign an exponential  probability vector to <code>choice</code> module from NumPy. The probability vector should add up to 1 therefore you normalize it by the sum of all probabilities.</p>
<pre><code>import numpy as np
from numpy.random import choice

arr = np.arange(0, 1001)
prob = np.exp(arr/1000) # To avoid a large number
rand_draw = choice(arr, 1, p=prob/sum(prob))
</code></pre>
<p>To make sure the random distribution follows exponential behavior, you can plot it for 100000 random draws between 0 and 1000.</p>
<pre><code>import matplotlib.pyplot as plt

# above code here

rand_draw = choice(arr, 100000, p=prob/sum(prob))

plt.hist(rand_draw, bins=100)
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/NvHaE.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/NvHaE.png"/></a></p>
</div>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/40244602/exponentially-distributed-random-generator-log-function-in-python" title="exponentially distributed random generator log function in python">stackoverflow.com/questions/40244602/â€¦</a> for starters.</span>
