<div class="post-text" itemprop="text">
<p>I have a class that takes 3 parameters(2 compulsory and 1 optional).
This is the part of my code:</p>
<pre><code>def __init__(self, user, url, env=None):
    """init method for the class."""
    self.user = user
    self.url = url
    if env is None:
        self.env = ""
    else:
        self.env = env

def check_file(self):
    # get the env value from a dictionary
    if self.env == "test":
        self.address = value['key1']
    else:
        self.address = value['key2']
</code></pre>
<p>The <code>address</code> variable has 2 values, one for production env and one for test env. If this <code>env</code> variable is passed as <code>p</code> then the value of <code>self.address</code> should be production url address and if the <code>env</code> value is <code>t</code> then the <code>self.address</code> shpuld be test url address , but if the <code>env</code> value is not passed then the <code>self.address</code> value should be the <code>key3</code> value from the dictionary <code>value</code>. These production url address and test url address are the <code>key1</code> and <code>key2</code> of the dictionary <code>value</code></p>
<p>I came up with this code, but this seems to be not working.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this: </p>
<pre><code>def __init__(self, user, url, env=None):
    """init method for the class."""
    self.user = user
    self.url = url
    if env is None:
        self.env = ""
    else:
        self.env = env

def check_file(self):
    # get the env value from a dictionary
    if self.env: # if not an empty string
        if self.env == "test":
            self.address = value['key1']
        else:
            self.address = value['key2']
    else:
        self.address = value['key3']
</code></pre>
</div>
<span class="comment-copy">What error message do you get? You have a strange condition <code>if envType is None:</code> That should of course be <code>if env is None:</code></span>
<span class="comment-copy">Don’t use ˋdict` as a variable. It is a builtin function. Choose a different name.</span>
<span class="comment-copy">Why not <code>..., env=''):</code> ?</span>
<span class="comment-copy">edited the code</span>
