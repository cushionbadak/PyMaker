<div class="post-text" itemprop="text">
<p>I have a Data Frame column with numeric values:</p>
<pre><code>df['percentage'].head()
46.5
44.2
100.0
42.12
</code></pre>
<p>I want to see the column as bin counts:</p>
<pre><code>bins = [0, 1, 5, 10, 25, 50, 100]
</code></pre>
<p>How can I get the result as bins with their <code>value counts</code>?</p>
<pre><code>[0, 1] bin amount
[1, 5] etc 
[5, 10] etc 
......
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.cut.html" rel="noreferrer"><code>pandas.cut</code></a>:</p>
<pre><code>bins = [0, 1, 5, 10, 25, 50, 100]
df['binned'] = pd.cut(df['percentage'], bins)
print (df)
   percentage     binned
0       46.50   (25, 50]
1       44.20   (25, 50]
2      100.00  (50, 100]
3       42.12   (25, 50]
</code></pre>
<hr/>
<pre><code>bins = [0, 1, 5, 10, 25, 50, 100]
labels = [1,2,3,4,5,6]
df['binned'] = pd.cut(df['percentage'], bins=bins, labels=labels)
print (df)
   percentage binned
0       46.50      5
1       44.20      5
2      100.00      6
3       42.12      5
</code></pre>
<p>Or <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.searchsorted.html" rel="noreferrer"><code>numpy.searchsorted</code></a>:</p>
<pre><code>bins = [0, 1, 5, 10, 25, 50, 100]
df['binned'] = np.searchsorted(bins, df['percentage'].values)
print (df)
   percentage  binned
0       46.50       5
1       44.20       5
2      100.00       6
3       42.12       5
</code></pre>
<hr/>
<p>...and then <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.value_counts.html" rel="noreferrer"><code>value_counts</code></a> or <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html" rel="noreferrer"><code>groupby</code></a> and aggregate <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.core.groupby.GroupBy.size.html" rel="noreferrer"><code>size</code></a>:</p>
<pre><code>s = pd.cut(df['percentage'], bins=bins).value_counts()
print (s)
(25, 50]     3
(50, 100]    1
(10, 25]     0
(5, 10]      0
(1, 5]       0
(0, 1]       0
Name: percentage, dtype: int64
</code></pre>
<hr/>
<pre><code>s = df.groupby(pd.cut(df['percentage'], bins=bins)).size()
print (s)
percentage
(0, 1]       0
(1, 5]       0
(5, 10]      0
(10, 25]     0
(25, 50]     3
(50, 100]    1
dtype: int64
</code></pre>
<p>By default <code>cut</code> return <code>categorical</code>.</p>
<p><code>Series</code> methods like <code>Series.value_counts()</code> will use all categories, even if some categories are not present in the data, <a href="http://pandas.pydata.org/pandas-docs/stable/categorical.html#operations" rel="noreferrer">operations in categorical</a>.</p>
</div>
<span class="comment-copy">without <code>bins = [0, 1, 5, 10, 25, 50, 100]</code>, can I just say create 5 bins and it will cut it by average cut? for example, i have 110 records, i want to cut them into 5 bins with 22 records in each bin.</span>
<span class="comment-copy">@qqqwww - NOt sure if understand, do you think <code>qcut</code>? <a href="https://stackoverflow.com/a/49879362/2901002">link</a></span>
<span class="comment-copy">you got me. thank you so so much!!!</span>
