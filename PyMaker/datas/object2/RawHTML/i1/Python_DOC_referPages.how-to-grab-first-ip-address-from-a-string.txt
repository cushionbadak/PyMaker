<div class="post-text" itemprop="text">
<p>I am trying to grab an <code>ip address</code> from a string and facing an issue.please help.<br/>
<code>inet addr:11.11.11.11  Bcast:11.11.11.111  Mask:111.111.11.1</code>.<br/>
This is the string I have and I need ip address next to addr:</p>
<p>I have tried the following code and failed to do in python: </p>
<p><code>ip = re.findall(r'(?:\d{1,3}\.)+(?:\d{1,3})', line)</code> and get index 0 item.</p>
<p>Result : This is actually giving me nothing in return</p>
</div>
<div class="post-text" itemprop="text">
<p>Your REGEX could be more specific, I think you could use something like :</p>
<p><code>addr:(?&lt;ip&gt;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})</code></p>
<p>In python:</p>
<p><code>match = re.match(r'addr:(?&lt;ip&gt;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})', line)</code></p>
<p>You can then access the <code>ip</code> group by calling <code>match.group('ip')</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I noted that your regex will match invalid IPv4 addresses. </p>
<pre><code>import re

string = 'inet addr:300.11.11.11  Bcast:11.11.11.111  Mask:111.111.11.1'

# your pattern 
ip_address_pattern = re.compile(r'(?:\d{1,3}\.)+(?:\d{1,3})')
find_ip_address = re.findall(ip_address_pattern, string)
if find_ip_address:
   print (find_ip_address)
   # outputs
   ['300.11.11.11', '11.11.11.111', '111.111.11.1']
</code></pre>
<p>I have used this <em>IPv4_format</em> in the past to extract valid IPv4 addresses.</p>
<pre><code>import re

string = 'inet addr:11.11.11.11  Bcast:11.11.11.111  Mask:111.111.11.1'

# Valid IPv4 address format
ip_address_pattern = re.compile(r'\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b')
find_ip_address = re.findall(ip_address_pattern, string)
if find_ip_address:
  print (find_ip_address)
  # outputs
  ['11.11.11.11', '11.11.11.111', '111.111.11.1']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

line = "inet addr:11.11.11.11  Bcast:11.11.11.111  Mask:111.111.11.1"

pattern = r"[\d]{2}[.][\d]{2}[.][\d]{2}[.][\d]{2}[\D]"

re.findall(pattern, line)
</code></pre>
<p><code>['11.11.11.11 ']</code></p>
<pre><code>re.findall(pattern, line)[0].strip()
</code></pre>
<p><code>'11.11.11.11'</code></p>
<p>if you have more than one element in the list just run a list-comp using <code>.strip()</code></p>
<pre><code>[i.strip() for i in re.findall(pattern, line)]
</code></pre>
<p><code>['11.11.11.11']</code></p>
<p><code>re.match()</code> is not going to work because it will try to match your pattern starting at the beginning of the string (granted that your pattern does not include the "<b>inet addr:</b>" portion.<br/>
<code>re.search()</code> works but it misses recurring elements and only returns the first encounter of the pattern upon a successful match, in addition you'll have to use <code>filter</code> to extract the element. </p>
<p>finally, the key to solving this problem lies in the last character of your target, <code>xx.xx.xx.xx[\D]</code>. The <code>[\D]</code> directive ensures that the pattern looks for a no-integer at index 12, <code>[\s]</code> works equally well and it matches a space. </p>
</div>
<span class="comment-copy">Try prepending addr and use a capturing group <code>addr:((?:\d{1,3}\.)+(?:\d{1,3}))</code> <a href="https://ideone.com/8qUHqL" rel="nofollow noreferrer">ideone.com/8qUHqL</a></span>
<span class="comment-copy">Your code works well and gives proper results. Try this <code>import re  line = 'inet addr:11.11.11.11  Bcast:11.11.11.111  Mask:111.111.11.1' ip = re.findall(r'(?:\d{1,3}\.)+(?:\d{1,3})', line) print(ip[0])</code></span>
<span class="comment-copy">I checked in editor and I see I get results but when I run test I do not see any result</span>
<span class="comment-copy">Show your code that fails.</span>
<span class="comment-copy">I found my mistake. I was checking it for every line and since the first line doesn't have it returns false and comes out of the loop. Thanks everyone for the help</span>
