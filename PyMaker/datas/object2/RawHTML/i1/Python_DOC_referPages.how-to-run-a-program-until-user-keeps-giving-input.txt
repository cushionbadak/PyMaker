<div class="post-text" itemprop="text">
<p><a href="https://www.hackerrank.com/challenges/30-dictionaries-and-maps/problem?h_r=next-challenge&amp;h_v=zen&amp;h_r=next-challenge&amp;h_v=zen&amp;h_r=next-challenge&amp;h_v=zen" rel="nofollow noreferrer">Problem Statement</a></p>
<blockquote>
<p>Given  names and phone numbers, assemble a phone book that maps friends' names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each name queried, print the associated entry from your phone book on a new line in the form "name=phoneNumber"; if an entry for name is not found, print "Not found" instead.</p>
</blockquote>
<p>Input Format: ...</p>
<p>After the  lines of phone book entries, there are an unknown number of lines of queries. Each line (query) contains a  to look up, and </p>
<blockquote>
<p><strong>You must continue reading lines until there is no more input.</strong></p>
</blockquote>
<p>How should I loop it until there is no more input?</p>
<p>Also can someone tell me how this is possible in C++?</p>
<p>Here's my code in Python 3:</p>
<pre><code>n = int(input())
names = {}
for foo in range(n):
    entry = input().split(' ')
    names[entry[0]] = entry[1]
while (1==1):
    check = input()
    if(names.get(check)!=None):
        print(check + '=' + names.get(check))
    else:
        print('Not Found')
</code></pre>
<p>It just loops infinitely and therefore triggers the error.
<a href="https://i.stack.imgur.com/dQqqdm.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/dQqqdm.png"/></a></p>
<p>Here's the C++ code:</p>
<pre><code>#include&lt;iostream&gt;
#include&lt;map&gt;
#include&lt;string&gt;
using namespace std;

int main(void)
{
    map&lt;string, string&gt; phonebook;
    int n;
    cin &gt;&gt; n;
    string key, num;
    for(int i = 0; i &lt; n; i++)
    {
        cin &gt;&gt; key &gt;&gt; num;
        phonebook.insert(pair&lt;string, string&gt;(key, num));
    }
    while (1 == 1)
    {
        cin &gt;&gt; key;
        if(phonebook.count(key) &gt; 0)
            cout &lt;&lt; key &lt;&lt; "=" &lt;&lt; phonebook[key] &lt;&lt; endl;
        else
            cout &lt;&lt; "Not found" &lt;&lt; endl;
    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>How should I loop it until there is no more input?</p>
</blockquote>
<p>Your use of the while loop is appropriate. To catch and silence the error, you can use a <code>try-except</code> block:</p>
<pre><code>n = int(input())
names = {}
for foo in range(n):
    entry = input().split(' ')
    names[entry[0]] = entry[1]

while True:     # (1 == 1) == True
    try:
        check = input()
    except EOFError:  # catch the error
        break       # exit the loop

    if(names.get(check)!=None):
        print(check + '=' + names.get(check))
    else:
        print('Not Found')
</code></pre>
<blockquote>
<p>Also can someone tell me how this is possible in C++?</p>
</blockquote>
<p>Hmm... weird request. I'll point you to <a href="https://en.cppreference.com/w/cpp/string/basic_string/getline" rel="nofollow noreferrer"><code>std::getline</code></a> and <a href="http://en.cppreference.com/w/cpp/container/map" rel="nofollow noreferrer"><code>std::map</code></a> and let them do the talking. :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's the correct C++ code:</p>
<pre><code>#include&lt;iostream&gt;
#include&lt;map&gt;
#include&lt;string&gt;
using namespace std;

int main(void)
{
    map&lt;string, string&gt; phonebook;
    int n;
    cin &gt;&gt; n;
    string key, num;
    for(int i = 0; i &lt; n; i++)
    {
        cin &gt;&gt; key &gt;&gt; num;
        phonebook.insert(pair&lt;string, string&gt;(key, num));
    }
    getline(cin, key);

    while(getline(cin, key))        //Loop runs while we are getting input.
    {
        if(phonebook.count(key) &gt; 0)
            cout &lt;&lt; key &lt;&lt; "=" &lt;&lt; phonebook[key] &lt;&lt; endl;
        else
            cout &lt;&lt; "Not found" &lt;&lt; endl;
    }
}
</code></pre>
</div>
<span class="comment-copy">For future reference, please constrain your question to only one issue. Otherwise, your question may be closed as too broad or unclear. Thanks.</span>
<span class="comment-copy">@TrebuchetMS So should I post them as two separate questions?</span>
<span class="comment-copy">I'd do a bit more research first before posting both (or either or any) question. Googling "<i>reading lines until there is no more input</i>" isn't too hard, is it? :-)  But yes, if it comes down to it, it's better to post two separate questions. (Or consider posting one question and attempting to solve the other one on your own.)</span>
<span class="comment-copy">@harshit54 There's a way to do it without catching: <a href="https://stackoverflow.com/questions/201992/how-to-read-until-eof-from-cin-in-c">how to read until eof from cin in C++</a>.</span>
<span class="comment-copy">Sorry about that. I did try googling this exact same question but could not find   any answer.  I will remember to search more thoroughly next time. I do remember using while(getline()) to read until EndOfFile while using file streams. I didn't know that it was valid for the input stream as well.</span>
