<div class="post-text" itemprop="text">
<h2>How do you force a frame to get window_height 0?</h2>
<p>the general case where my problem occurs:</p>
<pre><code>import Tkinter as Tk

class App(Tk.Frame):
    def __init__(self, master):
        Tk.Frame(self, master)
        self.place_holder = Tk.Frame(master=self)
        self.content = Tk.Frame(master=self)

        self.place_holder.pack()
        self.content.pack(side=Tk.RIGHT)

        Tk.Button(master=self,command=self.add_something).pack(side=Tk.TOP)
        self.to_destroy = []

    def add_something(self):
        foo = Tk.button(master=self.place_holder, command=self.destroy_last)
        self.too_destroy.append(foo)

    def destroy_last(self):
        self.to_destroy[-1].destroy()
</code></pre>
<h2>the problem:</h2>
<p>As I add more elements to the <code>place_holder</code>, it rescales nicely.</p>
<p>When I remove elements from the <code>place_holder</code>, it rescales nicely.
<strong>EXCEPT</strong> when I remove the last element.</p>
<p>Before i added anything, even when i do <code>place_holder.pack()</code>, it will not show. But after removing the last element, the place_holder will keep the size of this last element. Is there a way to hide the <code>place_holder</code> again untill i add content again?</p>
<h2>example image</h2>
<p><a href="https://i.stack.imgur.com/71Bs4.png" rel="nofollow noreferrer"><img alt="empty place_holder at bottom left" src="https://i.stack.imgur.com/71Bs4.png"/></a>
The empty container at the bottom left does not contain any elements, but still has the size of the last element in it, how can i get this to disappear without removing it (i want it again in the same place)?</p>
</div>
<div class="post-text" itemprop="text">
<p>What is happening is that when you remove the last widget, <code>pack</code> no longer is managing the frame so it isn't responsible for setting the frame size.</p>
<p>The simplest solution is just to temporarily pack a 1x1 pixel frame, which wil cause the placeholder frame to shrink.</p>
<p>There's no way to make a frame of zero pixels, so this method will always result in a one pixel tall/wide area for the placeholder. If you don't want that one pixel, you can install call <code>pack_forget</code> on the placeholder to completely remove it from the display, and then use <code>pack</code> with suitable options to re-add it when you put something in it.</p>
<p>Example:</p>
<pre><code>def destroy_last(self):
    self.to_destroy.pop().destroy()
    if len(self.to_destroy) == 0:
        tmp = Tk.Frame(self.place_holder, width=1, height=1, borderwidth=0)
        tmp.pack()
        self.place_holder.update()
        tmp.destroy()
</code></pre>
</div>
<span class="comment-copy">@stovfl when using <code>pack_forget()</code> and <code>pack()</code>, the Frame/Widget will be repositioned in as if you <code>pack()</code>'ed a new frame. It is not like grid_remove where it remembers the position.</span>
<span class="comment-copy">the real problem i'm trying to solve is to get a frame before an another frame using <code>pack()</code> . I've in the meantime discovered the existance of the <code>before</code> option for PanedWindow's. Does this option also work for <code>pack()</code> ? (it would eliminate the need for the existance of the place_holder)</span>
<span class="comment-copy">@miThom: <i>"to get a frame before an another frame"</i>: The <a href="http://effbot.org/tkinterbook/grid.htm" rel="nofollow noreferrer">Grid Geometry Manager</a> is especially convenient to use when you want to get them all where you want them.</span>
<span class="comment-copy">@stovfl i remember having the same issue with grid as with pack/pack_forget. the empty cell kept it's size upon deletion of the last element inside of it. But i am not sure if i had an empty frame in that cell or not... might be worth testing again</span>
<span class="comment-copy">@miThom: <i>"not sure if i had an empty frame"</i>:  Verify with <code>print('children:{}'.format(self.place_holder.children))</code></span>
<span class="comment-copy">the fact that it will always stay a 1x1 pixel is a bummer, i don't want that indeed. I missed the fact that the pack manager wasn't available anymore on destruction of last element. This is a good explanation as to why it is impossible to do exactly what i want. I switched to another method to accomplish what i wanted. My answer to people looking for the same: it is impossible, but you can accomplish the same thing in a lot of different ways, so don't get stuck in a thought pattern.</span>
