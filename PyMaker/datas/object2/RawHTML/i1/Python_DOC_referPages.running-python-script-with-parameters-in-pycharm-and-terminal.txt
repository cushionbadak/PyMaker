<div class="post-text" itemprop="text">
<p>I try to send an authorizing request to some API via python <code>requests</code>. 
The code looks like</p>
<pre><code>import requests
import argparse
import json

URL = "some url"

parser = argparse.ArgumentParser()
parser.add_argument("username", help="Username")
parser.add_argument("password", help="Password")
args = parser.parse_args()


def get_token(username, password):
    url = URL + "/auth"
    headers = {'Content-type': 'application/json'}
    params = {
        "username": username,
        "password": password
    }
    r = requests.post(url, json=params, headers=headers)
    return json.loads(r.content.decode('utf-8'))['data']['token']

token = get_token(args.username, args.password)
print(token)
</code></pre>
<p>Password contains different symbols including .$)? etc.</p>
<p>When I am passing args via Pycharm Run/Debug Configurations Parameters with quotes (e.g. <code>"abcde" "abcde"</code>) all is ok. </p>
<p>But when I try to run script from Terminal (Pycharm or Ubuntu terminal) via <code>python -m scriptname "abcde" "abcde"</code>, I receive next message in response: <code>{"message":"invalid login data","statusCode":400,"status":"BAD_REQUEST"}</code></p>
<p>I suppose there is some problem with string encoding, but can't find it.</p>
<p>File encoding (shown in the right down corner of the window in Pycharm) is UTF-8. String encoding in terminal <code>echo $LANG</code> is en_US.UTF-8. <code>python -c "import sys; print(sys.stdout.encoding)"</code> also returns UTF-8.</p>
<hr/>
<p><strong>UPDATE</strong></p>
<p>I've just noticed that a certain part of the password is disappearing while I pass it as a param in the terminal. 
I have a password with <code>$qTyqf</code> text inside (e.g. <code>abcde$qTyqfÂ§abcde</code>), and this part is just removed while running from the terminal. Why and how to avoid this? </p>
</div>
<div class="post-text" itemprop="text">
<p>Are you sure you need quotes for passing arguments to command line?
<a href="https://docs.python.org/2/library/argparse.html" rel="nofollow noreferrer">https://docs.python.org/2/library/argparse.html</a></p>
<pre><code>python -c "import sys; print(sys.argv)" x$ y
</code></pre>
<p>works as expected and I receive "x$", "y" as arguments</p>
</div>
<div class="post-text" itemprop="text">
<p>Using sys.arg from python might be a lot easier and won't manipulate your input in any way.</p>
<p>cmd&gt;myfile.py username password</p>
<ul>
<li><p>sys.argv[0] is the filename</p></li>
<li><p>sys.argv[1] would be your username</p></li>
<li><p>sys.argv[2] would be your password</p></li>
</ul>
<p>Usage:</p>
<pre><code>import requests
import argparse
import json
import sys

URL = "some url"
arguments = sys.argv[1:]
print("Argument Test: " + str(arguments))

def get_token(username, password):
    url = URL + "/auth"
    headers = {'Content-type': 'application/json'}
    params = {
        "username": username,
        "password": password
    }
    r = requests.post(url, json=params, headers=headers)
    return json.loads(r.content.decode('utf-8'))['data']['token']

token = get_token(arguments[0] , arguments[1])
print(token)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok. I've found an answer. </p>
<p>I used double quotas (") for passing arguments, and part of the password argument started with <code>$abc</code> was replaced with (I suppose) empty value of the env variable <code>abc</code>. So part of the password was just disappeared and I couldn't login with the wrong password. </p>
<p>Solution. I replaced double quotas (") with single quotas (') and now all is ok. </p>
</div>
<span class="comment-copy">in the command line/terminal what do you get if you run python -V ? is this is the same python version as you are using within pycharm?</span>
<span class="comment-copy">I activated virtual environment before executing script in Terminal, so version must be the same. Python version is 3.6.7</span>
<span class="comment-copy">Instead of python requests, you could use sysargs (<a href="https://www.pythonforbeginners.com/argv/more-fun-with-sys-argv" rel="nofollow noreferrer">pythonforbeginners.com/argv/more-fun-with-sys-argv</a> ), it might be easier to use</span>
<span class="comment-copy">Does the error appear when you try to receive the arguments (line 7-11) or when you execute request.post in line 20?</span>
<span class="comment-copy">I suppose you meant using sysargs instead of argsparse. I've tried but it doesn't help.  I also tried to add <code>print (params)</code> in <code>get_token</code>, args are present in dict and look like normal, but I still get  <code>invalid login data</code> in message while running from terminal</span>
<span class="comment-copy">I need quotas because password contains symbols like ). If I don't use quotas, I receive the next error <code>bash: syntax error near unexpected token `)'</code></span>
<span class="comment-copy">Thank for the code, but as I wrote in comment, I still get error while trying to run script from the terminal. No problems while running from pycharm with both sys args and argsparse.</span>
<span class="comment-copy">Updated the question</span>
<span class="comment-copy">If you <code>$ export X=y</code>, then bash will interpret <code>ls "$X"</code> as <code>ls y</code>, and will interpret <code>ls '$X'</code> as looking for a two-character filename. You were getting hung up on the shell variable interpolation that happened before python even started running.</span>
