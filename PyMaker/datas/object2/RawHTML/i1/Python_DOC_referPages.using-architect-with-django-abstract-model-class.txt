<div class="post-text" itemprop="text">
<p>As specified by <a href="https://pypi.org/project/architect/" rel="nofollow noreferrer">PyPI Architect</a>, for partitioning we can use the decorator on any model class in the following way:</p>
<pre><code>import architect

@architect.install('partition', **options)
class Model(object):
    pass
</code></pre>
<p>My model is abstract, the column to be partitioned on is present in abstract Model and I want all the child models to have the same partitioning. </p>
<pre><code>import architect

@architect.install('partition', **options)
class Model(object):
    class Meta:
        abstract = True
</code></pre>
<ul>
<li>Is the above structure correct way to use? </li>
<li>Will all the child models implement the same partitioning automatically?</li>
<li>If <strong>yes</strong>, is it safe to specify decorator at the abstract level (good practice)?</li>
</ul>
<p><em>Django: 2.x || Python: 3.x</em> ||  <em>MySQL: 5.x</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Haven't used python-archtitect on abstract models myself, but looking at its source finding a comment like <a href="https://github.com/maxtepkeev/architect/blob/master/architect/orms/decorators.py#L63-L71" rel="nofollow noreferrer">this</a> it is at least intended to work with every kind of inheritance. </p>
<p>The decorator mainly adds an attribute as a descriptor to the class which provides access to all its features: <code>MyModel.architect</code>. Normally this should not interfere with any kinds of class-inheritance.</p>
</div>
<span class="comment-copy">Someone with 1500+ Reputation, please create the tag of <code>python-architect</code> and attach to this question :) Thanks in advance.</span>
<span class="comment-copy">Created and added :)</span>
<span class="comment-copy">Looks good. I'll need to check few cases before accepting.</span>
