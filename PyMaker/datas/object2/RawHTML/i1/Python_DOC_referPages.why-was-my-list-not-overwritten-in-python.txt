<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/55192319/change-character-in-sublist">Change Character in Sublist</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<pre><code>List = ["I?", "Can", "!Not", "Do.", "It"]
l=[]
BadChars = ["?", "!", "."]
for i in List:
    for j in BadChars:
        if j in i:
            i=i.strip(j)
    l.append(i)
print(l)
print(List)
</code></pre>
<p>Output:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/9dlXV.png"/></p>
<p>As you can see in the output the list was not overwritten even if the wrote i=i.strip(j). What is happening? Thanks in advance. I am newly learning python so this question may be dumb.
This question raised in my mind when i was solving Change Character in Sublist in Stack Overflow. My question is "Why is List and l are having different values?"</p>
</div>
<div class="post-text" itemprop="text">
<p>Your list was not “overwritten” because of two reasons, the first one is that <code>strip</code> returns a new string. The second one is that when you do <code>i = i.strip(whatever)</code> you are not overwriting the value pointed by <code>i</code> but pointing <code>i</code> to a new value. Therefore other references to the old value pointed by <code>i</code> are not affected because you didn’t change it at all.</p>
</div>
<div class="post-text" itemprop="text">
<p>To overwrite, use indexing:</p>
<pre><code>List = ["I?", "Can", "!Not", "Do.", "It"]
l=[]
BadChars = ["?", "!", "."]
for i in range(len(List)):
    for j in BadChars:
        if j in List[i]:
            List[i] = List[i].strip(j)
    l.append(List[i])
print(l)
print(List)
</code></pre>
</div>
<span class="comment-copy">Isn't the code doing what you want? <code>l</code> is now free of characters you want to exclude</span>
<span class="comment-copy">Umm... You printed <code>l</code>, and it doesn't have the punctuation you didn't like that was in the <code>List</code> input. What did you expect to happen? Did you want <code>List</code> to change?</span>
<span class="comment-copy">Similar question is posted <a href="https://stackoverflow.com/questions/55192319/change-character-in-sublist">here</a> couple of minutes ago. It seems to be a homework</span>
<span class="comment-copy">This question raised in my mind when i was solving Change Character in Sublist in Stack Overflow. My question is "Why is List and l are having different values?". This not a copied question or duplicate. Both are different. But lists used are same.</span>
<span class="comment-copy">When you loop over a list with <code>for i in List</code>, the variable <code>i</code> does not "remember" where it came from.  Modifying its value does not transfer back to the list.</span>
