<div class="post-text" itemprop="text">
<p>I downloaded data from different sources in dataframes and would like to merge them in one final DataFrame. Let's illustarte it with the following example:</p>
<p><strong>dataframe 1</strong> (already multi indexed columns)</p>
<pre><code>index    stockA        stockB      ...
        O  L  H  C    O  L  H  C
1/1/19  10 15 20 17  35 30 39 37
2/1/19  ...          ...
...
</code></pre>
<p><strong>dataframe 2</strong> (non multi indexed columns)</p>
<pre><code>index    stockA  stockB     
1/1/19    1.5     3.2 
2/1/19    ...     ...
...
</code></pre>
<p>I would like to merge both dataframe and giving a column name to data in dataframe2 . Index Date might be not the same in both dataframe, So i might need to do an inner merge.</p>
<p><strong>Expected outputs</strong> (multi indexed columns)</p>
<pre><code>index    stockA                 stockB             ...
        O  L  H  C new_col    O  L  H  C  new_col
1/1/19  10 15 20 17 1.5       35 30 39 37  3.2
2/1/19       ...                     ...
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use:</p>
<pre><code>print (df1)
       stockA             stockB            
            O   L   H   C      O   L   H   C
1/1/19     10  15  20  17     35  30  39  37
2/1/19     12  13  26  27     31  50  29  17

print (df2)
        stockA  stockB
2/1/19     1.5     3.2
3/1/19     1.2     6.2
</code></pre>
<p>Convert index in both <code>index</code> to <code>datetime</code>s if necessary:</p>
<pre><code>df1.index = pd.to_datetime(df1.index, format='%d/%m/%y')
df2.index = pd.to_datetime(df2.index, format='%d/%m/%y')
</code></pre>
<p>Get same values in both indices by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Index.intersection.html" rel="nofollow noreferrer"><code>Index.intersection</code></a>:</p>
<pre><code>idx = df1.index.intersection(df2.index)
print (idx)
DatetimeIndex(['2019-01-02'], dtype='datetime64[ns]', freq=None)
</code></pre>
<p>Create <code>MultiIndex</code> in <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.MultiIndex.from_product.html" rel="nofollow noreferrer"><code>MultiIndex.from_product</code></a> in <code>df2</code>:</p>
<pre><code>df2.columns = pd.MultiIndex.from_product([df2.columns, ['new']])
print (df2)
           stockA stockB
              new    new
2019-01-02    1.5    3.2
2019-01-03    1.2    6.2
</code></pre>
<p>Filter both DataFrames by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.loc.html" rel="nofollow noreferrer"><code>DataFrame.loc</code></a>, join together by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html" rel="nofollow noreferrer"><code>DataFrame.join</code></a> and last sorting <code>MultiIndex</code> by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_index.html" rel="nofollow noreferrer"><code>DataFrame.sort_index</code></a>:</p>
<pre><code>df = df1.loc[idx].join(df2.loc[idx]).sort_index(level=0, axis=1)
print (df)
           stockA                  stockB                 
                C   H   L   O  new      C   H   L   O  new
2019-01-02     27  26  13  12  1.5     17  29  50  31  3.2
</code></pre>
</div>
<span class="comment-copy">Can you add expected output for <code>1)</code> and <code>2)</code> ? Why <code>inner merge</code> with sample data is necessary? Maybe is necessary change data to <a href="http://stackoverflow.com/help/mcve">minimal, complete, and verifiable example</a>, especially for <code>2)</code></span>
<span class="comment-copy">Hi, I removed <code>2)</code> as I figured it out. I'd need <code>inner merge</code> because dates might not match between dataframes. But I can overcome this by reslicing the new dataframe with intersected dates between dataframes.</span>
<span class="comment-copy">works like a charm. thanks</span>
