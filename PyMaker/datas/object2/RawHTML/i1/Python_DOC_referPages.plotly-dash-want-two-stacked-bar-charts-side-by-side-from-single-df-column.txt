<div class="post-text" itemprop="text">
<p>I am trying to get two stacked bar charts side by side but cannot figure it out.</p>
<p>Here's an example df:</p>
<pre><code>Field       Issue

Police      Budget cuts
Research    Budget cuts
Police      Time consuming
Banking     Lack of oversight
Healthcare  Lack of support
Research    Bureaucracy
Healthcare  Bureaucracy
Banking     Mistrust
</code></pre>
<p>What I want is a stacked bar chart of of field first. It will have a height of 8 broken down by 2 police, 2 x research etc. Then I want a stacked bar chart of Issue next to the first chart. This second one will have a height of 8 and be stacked by 2 x budget cuts, 1 x time consuming, 1 x lack of oversight etc.</p>
<p>I have tried:</p>
<p>to get the stacked bar chart of all fields:</p>
<pre><code>trace1 = go.Bar(
    x = df.Field.unique(),
    y = df.Field.value_counts(),
    name='Total Amount of roles'
)
</code></pre>
<p>to get a stacked bar chart of Budget cuts (then replicate for other issues):</p>
<pre><code>trace2 = go.Bar(
    x = df.Field.unique(),
    y = df[df['Issue'] == 'Budget cuts'].Field.value_counts(),
    name='Budget cuts'
)

data = [trace1, trace2]
layout = go.Layout(barmode='stack')

fig = go.Figure(data=data, layout=layout)
py.plot(fig, filename='test.html')
</code></pre>
<p>But the above code stacks the two graphs onto one. I want trace 1 stacked and trace 2 stacked. I also want this integrated into Dash and not plotly on it's own but that would be secondary to be honest. Would appreciate any help!</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>EDIT - after a short dialouge in the comments, this is my latest suggestion:</strong></p>
<hr/>
<p>Here's a possible solution with the count of each ocurence of each category stacked per column ( Field or Issue):</p>
<p><strong>Plot:</strong></p>
<p><a href="https://i.stack.imgur.com/sXmtJ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/sXmtJ.png"/></a></p>
<p><strong>Code:</strong></p>
<p>As you can see it's not very flexible since you'll have to add one <code>go.Bar</code> object for each category (Banking, Police etc). But if the plot above is what you're looking for, I'll sort out that part too.</p>
<pre><code># import
import pandas as pd
import numpy as np
import plotly.graph_objs as go
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)

#%qtconsole

# sample data
Field = ['Police', 'Research', 'Police', 'Banking', 'Healthcare', 'Research', 'Healthcare', 'Banking']
Issue = ['Budget cuts', 'Budget cuts', 'Time consuming', 'Lack of oversight', 'Lack of support', 'Bureaucracy', 'Bureaucracy', 'Mistrust']

# Put the lists in a pandas dataframe for
# easy grouping and indexing
df = pd.DataFrame([Field, Issue]).T
df.columns = ['Field', 'Issue']
grField = df.groupby('Field').count()
grIssue = df.groupby('Issue').count()
dfgr = pd.concat([grField, grIssue], axis = 1, sort = False)
dfgr = dfgr.T

# Make one go.Bar() object for each category
# for corresponing Field / Issue
trace1 = go.Bar(
    x = ['Issue'],
    #y = [dfgr['Field']],
    y = [dfgr['Banking'].loc['Issue']],
    name='Banking')

trace2 = go.Bar(
    x = ['Issue'],
    #y = [dfgr['Field']],
    y = [dfgr['Healthcare'].loc['Issue']],
    name='Healthcare')

trace3 = go.Bar(
    x = ['Issue'],
    #y = [dfgr['Field']],
    y = [dfgr['Police'].loc['Issue']],
    name='Police')

trace4 = go.Bar(
    x = ['Issue'],
    #y = [dfgr['Field']],
    y = [dfgr['Research'].loc['Issue']],
    name='Research')

trace5 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Budget cuts'].loc['Field']],
    name='Budget cuts')

trace6 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Bureaucracy'].loc['Field']],
    name='Bureaucracy')

trace7 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Lack of oversight'].loc['Field']],
    name='Lack of oversight')

trace7 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Lack of oversight'].loc['Field']],
    name='Lack of oversight')

trace8 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Lack of support'].loc['Field']],
    name='Lack of support')

trace9 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Mistrust'].loc['Field']],
    name='Mistrust')

trace10 = go.Bar(
    x = ['Field'],
    #y = [dfgr['Field']],
    y = [dfgr['Time consuming'].loc['Field']],
    name='Time consuming')

# gather data and set up layout
#data = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10]
data = [trace10, trace9, trace8, trace7, trace6, trace5, trace4, trace3, trace2, trace1]
layout = go.Layout(barmode='stack', title = 'Stacked bar chart from single column')

# Build figure
fig = go.Figure(data=data, layout=layout)

# PLot figure
iplot(fig, filename='test.html')
</code></pre>
</div>
<span class="comment-copy">By <code>pyo.plot(fig, filename='test.html')</code> you must have meant <code>py.plot(fig, filename='test.html')</code>? That depends of course on what your imports look like, but I changed it anyway.</span>
<span class="comment-copy">Hi vestland thank you for the code. So that graph is what I have now, and that's how I did it. What I am looking for is basically one stacked bar showing there are 2 police, 2 research etc. with height of 8 (because there's 8 fields) and a second stacked bar chart for issues with a height of 8 (stacked by height of 2 for budget cuts, one for time consuming etc.).   One stacked chart to show breakdown of number of Fields next to one stacked chart to show the breakdown of number of Issues. Does this make sense? Thanks</span>
<span class="comment-copy">@user8322222 So, two bars then? In that case the challenge here is the data transformation and not the plot itself that's the challenge. I'll take a look at it.</span>
<span class="comment-copy">Yes 2 bars in total. Thanks Vestland.</span>
<span class="comment-copy">No problem, but we're not there yet. I'll take another look tomorrow.</span>
<span class="comment-copy">@user8322222 Glad to help! If my sugestion answers your question, please consider marking it as the accepted answer. And don't worry, I'll find the time to make it more flexible as well since this is very interesting to me too. Any other details can be discussed in the established chat.</span>
