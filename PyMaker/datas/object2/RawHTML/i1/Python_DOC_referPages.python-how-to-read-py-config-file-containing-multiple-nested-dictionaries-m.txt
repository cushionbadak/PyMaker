<div class="post-text" itemprop="text">
<p>I have a following python config file with multiple nested dictionary:</p>
<pre><code># sample_config.py
import numpy as np
import datetime

params1 = {key1: {key2: val1,
                  key3: val2}}

params2 = {key4: datetime(2018, 3, 14)}

params3 = {key5: np.linspace(0, 1, 21)}
</code></pre>
<p>I have a main python file that calls the sample_config.py, uses the params dictionaries and update the params dictionaries.</p>
<pre><code># main.py
config = __import__('sample_config')
params1 = config.params1
params2 = config.params2
params3 = config.params3

test_out = test_function(input1, input2, params1)

params1['key1'] = updated_value
</code></pre>
<p>etc etc</p>
<p>What I'd like to do is to update the sample_config.py (or create a new config .py file) with the updated params dictionaries in main.py.</p>
<p>In my searches past couple of hours, many people recommend using json file, but since config file uses python modules, I'd like to keep it in the same .py format if possible..</p>
<p>Any help will be really appreciated. Thank you in advance. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could cast the whole dictionary as a string and then write it to a .py file. Here's an example of what I mean:</p>
<pre><code>updated_params_1 = {'a':1, 'b':2, 'c':3}
updated_params_2 = {'d':4, 'e':5, 'f':6}
new_python_file_contents = ('''
    new_params_1 = {0}
    new_params_2 = {1}
'''.format(updated_params_1, updated_params_2))
with open('updated_params.py', 'w') as f:
    f.write(new_python_file_contents)
</code></pre>
</div>
<span class="comment-copy">Did you need to use python file? Maybe you can change it to json?</span>
<span class="comment-copy">@GrzegorzBokota yes unless the overhead is terrible and doesn't justify the use of python file</span>
<span class="comment-copy">thanks. however, the config py file can have many dictionaries though. I don't think your method scales.</span>
<span class="comment-copy">If you're working with a large number of dictionaries, you're definitely right. But I've updated my original post to show how this could work with more than 1, at least.</span>
