<div class="post-text" itemprop="text">
<p>I have a code as below:</p>
<pre><code>a = [[0, 'CN1101'], [1, 'CN1602'], [2, 'CN1601']]   
b = [[0, 'CN1601'], [1, 'CN1101'], [2, 'CN1101'], [3, 'CN1602']]   
c = []   
d = []  

for i in range(len(a)):
    for j in range(len(b)):
        if a[i][1] == b[j][1]:
            c.append(b[j][0])
    d.append(c)
</code></pre>
<p>The result is <code>d = [[1, 2, 3, 0], [1, 2, 3, 0], [1, 2, 3, 0]]</code>.<br/>
I want the result <code>d = [[1,2],[3],[0]]</code>. How will you code?</p>
</div>
<div class="post-text" itemprop="text">
<p>I would go at it like this:</p>
<pre><code>a = ['CN1101', 'CN1602', 'CN1601']   
b = ['CN1601', 'CN1101', 'CN1101', 'CN1602']   
d = {}

for i in range (0, len(a)):
    d[i] = [j for j in range(0, len(b)) if b[j] == a[i]]
print d
</code></pre>
<p>You want to link indices in the second list to definitions in the first list, I think using a dictionary is a better fit in your case. Notice that this program will still run in <code>O(N^2)</code>. The output will in this case be: </p>
<pre><code>{0: [1, 2], 1: [3], 2: [0]}
</code></pre>
<p>Notice that changing the line iterated to: </p>
<pre><code>d[a[i]] = [j for j in range(0, len(b)) if b[j] == a[i]]
</code></pre>
<p>Will yield:</p>
<pre><code>{'CN1101': [1, 2], 'CN1601': [0], 'CN1602': [3]}
</code></pre>
<p>If a list is what you want and not a dictionary, then this will be your solution:</p>
<pre><code>a = ['CN1101', 'CN1602', 'CN1601']   
b = ['CN1601', 'CN1101', 'CN1101', 'CN1602']   
d = []

for i in range (0, len(a)):
    d.append([j for j in range(0, len(b)) if b[j] == a[i]])
print d
</code></pre>
<p>And the output is:</p>
<pre><code>[[1, 2], [3], [0]]
</code></pre>
<p>Please read more here:</p>
<p><a href="https://docs.python.org/2/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">https://docs.python.org/2/tutorial/datastructures.html#dictionaries</a></p>
</div>
<div class="post-text" itemprop="text">
<p>We first build a dict containing the data of <code>b</code>, with the refs as keys.
We can then build your output.</p>
<p>By doing it this way, we iterate only once on each list.</p>
<pre><code>from collections import defaultdict

a = [[0, 'CN1101'], [1, 'CN1602'], [2, 'CN1601']]   
b = [[0, 'CN1601'], [1, 'CN1101'], [2, 'CN1101'], [3, 'CN1602']]  

bd = defaultdict(list)
for num, ref in b:
    bd[ref].append(num)

# bd will now be  {'CN1601': [0], 'CN1101': [1, 2], 'CN1602': [3]}

out = [bd[ref] for num, ref in a]
print(out)
# [[1, 2], [3], [0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I appreciate your answers.
I have other code for your reference.</p>
<pre><code>a = [[0, 'CN1101'], [1, 'CN1602'], [2, 'CN1601']]
b = [[0, 'CN1601'], [1, 'CN1101'], [2, 'CN1101'], [3, 'CN1602']]
d = []
    for i in range(0,len(a),1):
        locals()['rowy%s' %i] = []
        for j in range(0,len(b),1):
            if a[i][1] == b[j][1]:
                locals()['rowx%s' %j] = b[j][0]
            elif a[i][1] != b[j][1]:
                continue
            locals()['rowy%s' %i].append(locals()['rowx%s' %j])
        d.append(locals()['rowy%s' %i])`
</code></pre>
</div>
<span class="comment-copy">Hi Alvin, please update your question to state the wanted output.</span>
<span class="comment-copy">Dear Nexaspx, I have clarified the wanted output. Thanks.</span>
<span class="comment-copy">Alvin, I have posted an answer to your question, please take a look and see if it works for you.</span>
<span class="comment-copy">You can do it in O(len(a) + len(b)), see <a href="https://stackoverflow.com/a/55397587/550094">my answer</a> for an example.</span>
