<div class="post-text" itemprop="text">
<p>In Python, the itertools.combination module returns empty if the set size given is larger than the size of the possible combinations</p>
<pre><code>&gt;&gt;&gt; list(itertools.combinations([1,2,3], 4))
[]
</code></pre>
<p>Is there a way to give a limiting size and have the function return the biggest set it can create?
Something like this:</p>
<pre><code>&gt;&gt;&gt; list(itertools.combinations([1,2,3], 4))
[(1, 2, 3)]
</code></pre>
<p>Do I have to verify if the number of items in the collection is smaller than the desired size?</p>
<pre><code>if len([1,2,3]) &lt; 4:
    list(itertools.combinations([1,2,3], len([1,2,3])))
else:
    list(itertools.combinations([1,2,3], 4))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about:</p>
<pre><code>list(itertools.combinations([1,2,3], min(4, len([1,2,3])))
</code></pre>
<p>and indeed, you can write a function to wrap it around:</p>
<pre><code>def combinations(items, howmany):
    return list(itertools.combinations(items, min(howmany, len(items)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use a <code>lambda</code> function (although I'm not sure where the benefits outweigh the use of a normal function)</p>
<pre><code>In [118]: import itertools as it

In [121]: max_combs = lambda items, combs: it.combinations(items, min(combs, len(items)))

In [122]: list(max_combs([1,2,3], 4))
Out[122]: [(1, 2, 3)]
</code></pre>
</div>
<span class="comment-copy">I mean, it's trivial to write a wrapper like you did in the question. Are you asking if you can make itertools do this itself?</span>
<span class="comment-copy">I feel dumb about how simple that was. Thank you!</span>
<span class="comment-copy">I feel like it only adds a level of difficulty in comprehension without many benefits. But TIL it's possible to rename modules imported and how to do a lambda function, so thank you!</span>
<span class="comment-copy">it's just another approach. <a href="https://stackoverflow.com/a/55232000/5491375">adrtam's</a> answer is best</span>
