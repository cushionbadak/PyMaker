<div class="post-text" itemprop="text">
<p>Why does the virtualenv creation mechanism insist on naming subdirectories with the version of Python used?  I am referring to something like <code>test_venv/venv3/lib/&gt;&gt;&gt;python3.6&lt;&lt;&lt;/site-packages</code></p>
<p>When you're in a 3.6 venv, you of course get 3.6 packages.  And same with 2.7 meaning 2.7 packages.  And you can't use these without <code>activate</code>-ing the venv beforehand so the risk of confusion seems low.</p>
<p>Among other things people often have questions about why something is not working that have to do with either the OS system path or the python sys.path.  And having those subpaths named after the python version makes it hard to generalize on where to find <code>site-packages</code>.</p>
<p>edit:  the following is on macOS, but I got roughly the same behavior on an Ubuntu 18.04 VM.</p>
<h3>create a python 2 virtual environment with  <code>virtualenv ./venv2</code></h3>
<p>directory structure with <code>tree -d -L 3 ./venv2/</code>:</p>
<pre><code>./venv2/
├── bin
├── include
│   └── python2.7 -&gt; /opt/local/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7
└── lib
    └── python2.7
        ├── config -&gt; /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/config
        ├── distutils
        ├── encodings -&gt; /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings
        ├── lib-dynload -&gt; /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
        └── site-packages
</code></pre>
<h3>create a python 3 virtual environment with  <code>python3 -m venv ./venv3</code></h3>
<p>Slightly better, but still impacts site-packages.</p>
<pre><code>./venv3/
├── bin
├── include
└── lib
    └── python3.6
        └── site-packages
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is consistent with the <a href="https://www.python.org/dev/peps/pep-0405/#creating-virtual-environments" rel="nofollow noreferrer">specification</a>:</p>
<blockquote>
<p>Running this command creates the target directory... And it creates an (initially empty) lib/pythonX.Y/site-packages (or Lib\site-packages on Windows) subdirectory.</p>
</blockquote>
<p>This is the cpython <a href="https://github.com/python/cpython/blob/842a2f07f2f08a935ef470bfdaeef40f87490cfc/Lib/venv/__init__.py#L122" rel="nofollow noreferrer">bit</a> that implements it if you were curious.</p>
<p>As to why: it reflects (and as noted (and reflected in specification and code) different on Windows) behavior of how search paths are constructed from <code>sys.prefix</code> (which in turn would be determined from location of python executable in your venv in this case). Resolution thereof is implemented in <a href="https://github.com/python/cpython/blob/master/Modules/getpath.c" rel="nofollow noreferrer"><code>Modules/getpath.c</code></a> and also contains more detailed description in comments.</p>
<p>Long story short: It allows venv to relatively easily use existing code for all the search path handling work it needs.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because system can hos few version of python, then naming convention  allows to distinguish site-package folders. </p>
<p>And it is easier to keep this naming convention in virtualenv than checking in code if python interpreter is started form virtualev or normal installation and then choose proper path. </p>
</div>
<span class="comment-copy">Curiously, on Windows, the path is <code>ENV/Lib/site-packages</code>. However, the <a href="https://virtualenv.pypa.io/en/stable/userguide/" rel="nofollow noreferrer">documentation</a> does say <code>ENV/lib/pythonX.X/site-packages/</code>. Now I wonder why the inconsistency among different OS...</span>
<span class="comment-copy">@azalea  that seems much better, which is why I am wondering why the macOS and Linux behave this way.</span>
<span class="comment-copy">Not an answer to your question, but you can get the path of site-packages no matter where that is. see: <a href="https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory#comment79362432_46071447" title="how do i find the location of my python site packages directory%23comment79362432_46071447">stackoverflow.com/questions/122327/…</a></span>
