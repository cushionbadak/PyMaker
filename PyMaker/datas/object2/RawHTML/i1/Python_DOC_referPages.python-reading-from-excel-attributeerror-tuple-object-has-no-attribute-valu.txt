<div class="post-text" itemprop="text">
<p>I'm just getting into Python and am trying to write a script which prints a cell from a excel work book. I've got an input which I want to add 2 to the value so it finds the right cell. Just having a problem when I put the variable into the index. Could you help please?</p>
<p>I've tried looking at the other examples with the same callback but none answer the question.</p>
<pre><code>import openpyxl
wb = openpyxl.load_workbook('kids.xlsx')
sheet = wb["Sheet1"]

print("Type index of student")
find_student  = input()
val = int(find_student)
proper_index = val + 2
print(proper_index)

string_value = str(proper_index)
index_search = "'A" + string_value + "'"
print(index_search)



print(sheet[string_value].value)
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Aha...solved it</p>
<pre><code>#access cell data

let_us_see = ws.cell(row=proper_index, column=1).value
print(let_us_see)
</code></pre>
<p>Instead of using: print(sheet[string_value].value)  i looked on the openpyxl forum which suggested another way of accessing the value from the cell. The above code accepts the integer value of proper_index!</p>
<p>Thanks for all your help dudes and dudettes.</p>
</div>
<div class="post-text" itemprop="text">
<p>If answer still applies, <code>sheet[string_value]</code> always returns a tuple of cells. Hence you have to choose, which cell you want, even if it gives you only a singleton tuple:</p>
<pre><code>import openpyxl

wb = openpyxl.load_workbook('kids.xlsx')
sheet = wb["Sheet1"]

print("Type index of student")
val = int(
    input()
)

proper_index = val + 2
print(proper_index)

index_search = "A%s"%(proper_index,)
print(index_search)

print(sheet[string_value][0].value)
</code></pre>
<p>PS: Sorry for being a bit late.</p>
</div>
<span class="comment-copy">When I change the code to:  print(sheet['A3'].value) it returns the right value</span>
<span class="comment-copy">Try removing the " ' " when you generate your string.</span>
<span class="comment-copy">tried that just now, when i run the code, i type in 1, string_value now returns A3 but I get the reply print(sheet[string_value].value) AttributeError: 'tuple' object has no attribute 'value'</span>
<span class="comment-copy">Next thing would be" dir(sheet[string_value])" and" type(sheet[string_value])". Just to see what method are possible. The method you are calling with [ _ ] is this one: def __getitem__(self, key): """Convenience access by Excel style coordinates         The key can be a single cell coordinate 'A1', a range of cells 'A1:D25',         individual rows or columns 'A', 4 or ranges of rows or columns 'A:D',         4:10.         Single cells will always be created if they do not exist.         Returns either a single cell or a tuple of rows or columns.         """</span>
<span class="comment-copy"><a href="https://bitbucket.org/openpyxl/openpyxl/src/87153d1598b5fc7692472d20ec2b6ef153ddf478/openpyxl/worksheet/worksheet.py?at=default&amp;fileviewer=file-view-default" rel="nofollow noreferrer">bitbucket.org/openpyxl/openpyxl/src/â€¦</a></span>
<span class="comment-copy">Never too late for a little extra knowledge, thanks.</span>
