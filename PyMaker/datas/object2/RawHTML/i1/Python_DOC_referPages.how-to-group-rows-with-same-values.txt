<div class="post-text" itemprop="text">
<p>I have a <code>DataFrame</code> <code>df</code> like this :</p>
<pre><code>     user_id  movie_id  rating
32236   1        1        5
23171   1        2        3
83307   1        3        4
62631   1        4        3
47638   1        5        3
26184   2        1        4
1333    5        1        4
172     5        2        3
54487   6        1        4
52430   7        4        5
18504   10       1        4
4617    10       4        4
</code></pre>
<p>I want <code>df</code> to be grouped randomly based on <code>user_id</code>, and each group with identical amounts of <code>user_id</code>(if can't be divided equally, at least with similar amounts of <code>user_id</code>), but without merging the <code>user_id</code> rows.</p>
<p>e.g. divided with 2 <code>user_id</code> in each group</p>
<pre><code>     user_id  movie_id  rating
32236   1        1        5
23171   1        2        3
83307   1        3        4
62631   1        4        3
47638   1        5        3
52430   7        4        5

     user_id  movie_id  rating
26184   2        1        4
18504   10       1        4
4617    10       4        4

     user_id  movie_id  rating
1333    5        1        4
172     5        2        3
54487   6        1        4
</code></pre>
<p>I've written a method <code>group(df, n)</code> :</p>
<pre><code>def group(df, n) :
    shuffled = df.sample(frac=1)
    result = np.array_split(shuffled, n) 

    dict = {}
    for i, part in enumerate(result):
        dict['df_'+str(i+1)] = part

    return dict
</code></pre>
<p>But it doesn't work with identical numbers appearing in multiple rows like <code>df</code>. And I can only set how many groups to be divided to, not how many <code>user_id</code> in each divided group.</p>
<p>How to divide <code>df</code> into groups based on <code>user_id</code>, and each group with selected amounts of <code>user_id</code> like I mentioned?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, get the unique user IDs and randomly permute them:</p>
<p><code>uniques = np.random.permutation(df['user_id'].unique())</code></p>
<p>Split the unique IDs (assuming 2 IDs per split):</p>
<p><code>splits = np.array_split(uniques, len(uniques) // 2)</code></p>
<p>Define a function that will group rows based on the value of the index:</p>
<pre><code>def grouper(value):
    return np.argmax([value in split for split in splits])
</code></pre>
<p>And use it:</p>
<pre><code>for group in df.set_index('user_id').groupby(grouper):
    print(group)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand, you can use:</p>
<pre><code>d={'df'+str(e):df[df.user_id.isin(i)] for e,i in 
    enumerate(np.array_split(np.random.permutation(df.user_id.unique()),
                                        len(df.user_id.unique())/2))}
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'df0':        user_id  movie_id  rating
 26184        2         1       4
 18504       10         1       4
 4617        10         4       4, 'df1':        user_id  movie_id  rating
 32236        1         1       5
 23171        1         2       3
 83307        1         3       4
 62631        1         4       3
 47638        1         5       3
 52430        7         4       5, 'df2':        user_id  movie_id  rating
 1333         5         1       4
 172          5         2       3
 54487        6         1       4}
</code></pre>
<p>you can call each key in this dict:</p>
<pre><code>print(d['df1'])

       user_id  movie_id  rating
32236        1         1       5
23171        1         2       3
83307        1         3       4
62631        1         4       3
47638        1         5       3
52430        7         4       5
</code></pre>
</div>
