<div class="post-text" itemprop="text">
<p>I'm trying to compare two time series datasets. One of the dataset has sets of time ranges (event start and end times)and a value. The second dataset has time range (frequency = 1 hour) from Minimum of start time to max end time of dataset1. I want to add a value to those whose time range match.</p>
<p>Example:</p>
<p>Dataset 1, imported as pandas dataframe and dates are parsed:</p>
<pre><code>data1:
Start_Time       |     End_Time        | Value

01/01/2017 13:00   01/01/2017 16:00      68
01/02/2017 00:00   01/02/2017 08:00      70
01/03/2017 10:00   01/03/2017 17:00      90
</code></pre>
<p>Dataset 2 is created using pandas date_range</p>
<pre><code>data2['date'] = pd.date_range(start=data1['Start_Time'].min(), 
                            end = data1['End_Time'].max(), freq = '1H')
</code></pre>
<p>I tried using <code>np.where</code> to find the date range satisfying the condition</p>
<p><strong>Note:</strong> Both DataFrames are of unequal size</p>
<pre><code>data2['Value'] = np.where((data1['Start_Time']&gt;=data2['date'][data1.index]) 
                  &amp; (data1['End_time']&lt;=data2['date'][data1.index]),
                  data1['Value'], 0)
</code></pre>
<p>What I need data2 dataframe to be is </p>
<pre><code>Date             | Value
01/01/2017 13:00   68
01/01/2017 14:00   68
01/01/2017 15:00   68
01/01/2017 16:00   68
01/01/2017 17:00   0
01/01/2017 18:00   0
.
.
.
.
01/02/2017 00:00   70
01/02/2017 01:00   70
01/02/2017 02:00   70
and so on.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am using <code>numpy</code> broadcast which is o(m*n) method</p>
<pre><code>#data1.Start_Time=pd.to_datetime(data1.Start_Time)
#data1.End_Time=pd.to_datetime(data1.End_Time)
s1=data1.Start_Time.values
s2=data1.End_Time.values
s=data2.date.values
a=np.dot((s[:,None]&gt;=s1)&amp;(s[:,None]&lt;=s2),data1.Value.values)
Out[639]: 
array([68, 68, 68, 68,  0,  0,  0,  0,  0,  0,  0, 70, 70, 70, 70, 70, 70,
       70, 70, 70,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 90, 90, 90, 90, 90, 90,
       90, 90], dtype=int64)
data2['Value']=a
</code></pre>
</div>
<span class="comment-copy">Impressive answer as always, one sidenote. You should replace <code>df</code> in the line of <code>a=...</code> with <code>data1</code></span>
<span class="comment-copy">@Erfan yep forgot replace that one :-)</span>
<span class="comment-copy">Could you explain a bit more what you do with <code>np.dot</code> here? I am quite interested since I face this quite often.</span>
<span class="comment-copy">@Erfan <code>dot</code> is matrix multiple and sum(Basically if you have a (n,m) and a (m,1) array, the out put will be (n,1) array ) , since we broadcast the data1 's times , then we will have a n*m matrix as result , True when satisfied both conditions , <code>dot</code> just do multiple   with every row in new matrix which shape is (n,1)</span>
<span class="comment-copy">That worked. I did one small edit to eliminate adding two same time periods (where end time of last entry is same as start time next entry. <code>a=np.dot((s[:,None]&gt;=s1)&amp;(s[:,None]&lt;s2),data1.Value.values)</code></span>
