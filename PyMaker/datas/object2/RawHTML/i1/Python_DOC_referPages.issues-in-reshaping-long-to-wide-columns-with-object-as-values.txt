<div class="post-text" itemprop="text">
<p>Hello I have the following dataframe.   </p>
<pre><code>    Group           Size

    Short          Small
    Short          Small
    Moderate       Medium
    Moderate       Small
    Tall           Large
</code></pre>
<p>I want to count the frequency of how many time the same row appears in the dataframe.</p>
<pre><code>    Group           Size      Time

    Short          Small        2
    Moderate       Medium       1 
    Moderate       Small        1
    Tall           Large        1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use groupby's <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.core.groupby.GroupBy.size.html"><code>size</code></a>:</p>
<pre><code>In [11]: df.groupby(["Group", "Size"]).size()
Out[11]:
Group     Size
Moderate  Medium    1
          Small     1
Short     Small     2
Tall      Large     1
dtype: int64

In [12]: df.groupby(["Group", "Size"]).size().reset_index(name="Time")
Out[12]:
      Group    Size  Time
0  Moderate  Medium     1
1  Moderate   Small     1
2     Short   Small     2
3      Tall   Large     1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also try <code>pd.crosstab()</code></p>
<pre><code>Group           Size

Short          Small
Short          Small
Moderate       Medium
Moderate       Small
Tall           Large

pd.crosstab(df.Group,df.Size)


Size      Large  Medium  Small
Group                         
Moderate      0       1      1
Short         0       0      2
Tall          1       0      0
</code></pre>
<p>EDIT: In order to get your out put </p>
<pre><code>pd.crosstab(df.Group,df.Size).replace(0,np.nan).\
     stack().reset_index().rename(columns={0:'Time'})
Out[591]: 
      Group    Size  Time
0  Moderate  Medium   1.0
1  Moderate   Small   1.0
2     Short   Small   2.0
3      Tall   Large   1.0
</code></pre>
</div>
<span class="comment-copy">Note on performance, including alternatives: <a href="https://stackoverflow.com/questions/50328246/pandas-groupby-size-vs-series-value-counts-vs-collections-counter-with-multiple">Pandas groupby.size vs series.value_counts vs collections.Counter with multiple series</a></span>
<span class="comment-copy">Thanks. One minor addition to pick the top k (=20) values based on the frequency ("Time"):      df.groupby(["Group", "Size"]).size().reset_index(name="Time").sort_values(by='Time',ascending=False).head(20);</span>
<span class="comment-copy">nice. you can even add <code>margins=True</code> to get the marginal counts!</span>
<span class="comment-copy">pandas. the gift that keeps on giving.</span>
