<div class="post-text" itemprop="text">
<p>I need help because I'm stuck. So I'm actually on Web-scrapper project, and the problem is that I can't manage to get the right "a" tags of the searched words, i only get the one of www.google.com or the URL that i use is:</p>
<pre><code>   url_dorked ="https://www.google.com/search?q={}&amp;sources=lnms&amp;tbs=nws".format(dork_used)
</code></pre>
<p>When I try the URL on my browser, he displays me the right page. But the python script receive only the tags of the Home page of google.</p>
<p>Here is the full script:</p>
<pre><code>    #!/bin/bash
# -*- coding: utf-8 -*-
#Codded by Naylor From Exploit-Zone
#Join-us ! ==&gt; https://forum.exploit-zone.eu/
#Create a folder nammed ==&gt; Dork

from urllib.request import *
import os
from bs4 import BeautifulSoup

"""
http ==&gt; 80
https ==&gt; 443
----------
200 ==&gt; OK
400 ==&gt; Bad request
403 ==&gt; Forbidden
404 ==&gt; Not found
"""

def checker():
    dork_used = ""
    url_dorked ="https://www.google.co.ve/?gws_rd=cr&amp;ei=DgBqVpWJMoPA-gHy25fACg#q={}".format(dork_used)
    dorks = open("Dork/{}.txt".format(txtdork_path),"r")
    list_dorks = []
    dorks_lines = dorks.readlines()
    tot_dorks = len(dorks_lines)
    tot_dorks -= 1
    for line in dorks_lines:
      list_dorks.append(line)
      print("\t{}\n (--) Has been charged\n".format(line))
    print("\n(--) All {} dorks charged\n".format(tot_dorks))
    dorks.close()
    choosen_dork = int(input("Witch line do you want to use ? (write a number between 0 and {})\n&gt;".format(tot_dorks)))
    if choosen_dork &gt;= 0 and choosen_dork &lt;= tot_dorks:
        pass
    else:
        print("The choosen number is to big !")
        choosen_dork = int(input("Witch line do you want to use ? (write a number between 0 and {})\n&gt;".format(tot_dorks)))
    dork_used = str(list_dorks[choosen_dork])
    print("\n(--) Selected Dorks ==&gt; {}".format(dork_used))

    req_fbypss = Request(url_dorked, headers = {'User-Agent': 'Mozilla/5.0'}) #user-agent to bypass Anti-crawl)
    init_google = urlopen(req_fbypss)#init connection
    print("(--) Google connection response ==&gt; {}\n".format(init_google.code))
    html_google = init_google.read() #read response of init
    html_decoded = html_google.decode("utf-8")#like ISO-8859-1
    soup = BeautifulSoup(html_google, "html.parser") #start an html html_parser
    result_link = soup.findAll('a')
    for i in result_link:
        print(i,"\n")
    """
    with open("dork_{}.txt".format(choosen_dork),"a") as f:
        for result in result_1:
            f.write(result)
    """

print("\n\n\welcome\n\n")
print("here Are the available dork file :\n")
dork_list = str(os.listdir('Dork/.'))
print("=&gt; {}\n".format(dork_list))

txtdork_path = str(input("Enter dork file's name (without '.txt'/'[]'/''')\n&gt;"))

check_file = os.path.isfile("Dork/{}.txt".format(txtdork_path))

if check_file == True:
    print("\n(--) {} as been selected".format(txtdork_path))
else:
    print("\nWrong name!\n (write only the name of the .txt file like : Google dork 2019)\n the .txt file have to be on the Dork folder\n\n")
    exit()
checker()
</code></pre>
<p>The script isn't finish it's only a dev version.</p>
<p>The result of my research are:</p>
<p>-either there is an anti-crawler and the User-Agent doesn't bypass him.</p>
<p>-either it's a problem from the URL, and I have to modify her.</p>
<p>Thanks for helping me ^^</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def checker():
    dork_used = ""
    url_dorked ="https://www.google.co.ve/?gws_rd=cr&amp;ei=DgBqVpWJMoPA-gHy25fACg#q={}".format(dork_used)
</code></pre>
<p>When <code>url_dorked</code> is assigned, <code>dork_used</code> is an empty string, therefore <code>q=</code> is empty.  Did you intend that?</p>
<p>Also, I believe it should be <code>&amp;q={}</code>, not <code>#q={}</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I follow your advice and replace the code to :</p>
<pre><code>#!/bin/bash
# -*- coding: utf-8 -*-
#Codded by Naylor From Exploit-Zone
#Join-us ! ==&gt; https://forum.exploit-zone.eu/
#Create a folder nammed ==&gt; Dork

from urllib.request import *
import os
from bs4 import BeautifulSoup

"""
http ==&gt; 80
https ==&gt; 443
----------
200 ==&gt; OK
400 ==&gt; Bad request
403 ==&gt; Forbidden
404 ==&gt; Not found
"""

def checker():
    dorks = open("Dork/{}.txt".format(txtdork_path),"r")
    list_dorks = []
    dorks_lines = dorks.readlines()
    tot_dorks = len(dorks_lines)
    tot_dorks -= 1
    for line in dorks_lines:
      list_dorks.append(line)
      print("\t{}\n (--) Has been charged\n".format(line))
    print("\n(--) All {} dorks charged\n".format(tot_dorks))
    dorks.close()
    choosen_dork = int(input("Witch line do you want to use ? (write a number between 0 and {})\n&gt;".format(tot_dorks)))
    if choosen_dork &gt;= 0 and choosen_dork &lt;= tot_dorks:
        pass
    else:
        print("The choosen number is to big !")
        choosen_dork = int(input("Witch line do you want to use ? (write a number between 0 and {})\n&gt;".format(tot_dorks)))
    dork_used = str(list_dorks[choosen_dork])
    print("\n(--) Selected Dorks ==&gt; {}".format(dork_used))

    url_dorked ="https://www.google.com/search?q={}&amp;sources=lnms&amp;tbs=nws".format(dork_used)

    req_fbypss = Request(url_dorked, headers = {'User-Agent': 'Mozilla/5.0'}) #user-agent to bypass Anti-crawl)
    init_google = urlopen(req_fbypss)#init connection
    print("(--) Google connection response ==&gt; {}\n".format(init_google.code))
    html_google = init_google.read() #read response of init
    html_decoded = html_google.decode("ISO-8859-1")#like utf-8
    soup = BeautifulSoup(html_google, "html.parser") #start an html html_parser
    result_link = soup.findAll('a')
    for i in result_link:
        print(i,"\n")
    """
    with open("dork_{}.txt".format(choosen_dork),"a") as f:
        for result in result_1:
            f.write(result)
    """

print("\n\n\tWelcome\n\n")
print("here Are the available dork file :\n")
dork_list = str(os.listdir('Dork/.'))
print("=&gt; {}\n".format(dork_list))

txtdork_path = str(input("Enter dork file's name (without '.txt'/'[]'/''')\n&gt;"))

check_file = os.path.isfile("Dork/{}.txt".format(txtdork_path))

if check_file == True:
    print("\n(--) {} as been selected".format(txtdork_path))
else:
    print("\nWrong name!\n (write only the name of the .txt file like : Google dork 2019)\n the .txt file have to be on the Dork folder\n\n")
    exit()
checker()
</code></pre>
<p>so I replace the url_dorked because the one that I put was a wrong one that I forgot to replace ^^</p>
<p>and i change the place of the url_dorked to put him after the selection of dork_used </p>
<p>one thing change he asks now to decode with ISO-8859-1 instead of utf-8
but still don't work :/</p>
</div>
