<div class="post-text" itemprop="text">
<p>I have a file (sysid.txt) that consist of multiple line of data (systemid and hostname) as follow</p>
<pre><code>0192.4500.0000 uue01.re1                              
0192.4500.0010 ccu01.re1                              
0192.4500.0110 uue02.re1                               
0192.4500.0001 core1.re2                                   
</code></pre>
<p>Based from info and help here, the 1st string(numbers) successfully replace as require but the 2nd string(hostname) missing and the output presented in single line when I run the code below.</p>
<pre><code>file1 = open('sysid.txt', 'r')
file2 = open('sysip.txt', 'w')
file1_cont = file1.readlines()
for line in file1_cont:
    line = line.replace('.', '')
    f = itemgetter(slice(0,3), slice(3,6), slice(6,9), slice(9,12))
    line = '.'.join(f(line.replace('.','')))
    line = '{}.{}.{}.{}'.format(*map(int, f(line.replace('.', ''))))
    file2.write(line)
    print(line)
</code></pre>
<p>the output of sysip.txt</p>
<pre><code>10.89.0.010.89.0.110.89.0.3210.89.0.3310.89.0.3410.89.0.3510.89.0.64
</code></pre>
<p>Read each line, I would like to replace 1st string(numbers) and maintain 2nd string (hostname) as below</p>
<pre><code>192.45.0.0 uue01.re1                              
192.45.0.10 ccu01.re1                              
192.45.0.110 uue02.re1                               
192.45.0.1 core1.re2
</code></pre>
<p>How can i manipulate 1st string/numbers and save the output line (file2.write(line)) in new line and at the same time remain the 2nd string as above. </p>
<p>Thank you for your support and guidance.</p>

#

<p>updated list.txt... </p>
<pre><code>System ID      Hostname                                        
0192.4500.0000 uue01.re1                              
0192.4500.0010 ccu01.re1                              
0192.4500.0110 uue02.re1                               
0192.4500.0001 core1.re2 

{master}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>list.txt:</p>
<pre><code>0192.4500.0000 uue01.re1                              
0192.4500.0010 ccu01.re1                              
0192.4500.0110 uue02.re1                               
0192.4500.0001 core1.re2   
</code></pre>
<p><strong>Hence</strong>:</p>
<pre><code>def removeZeros(ip):
    # splits the ip by "."
    # converts the words to integeres to remove leading removeZeros
    # convert back the integer to string and join them back to a string
    new_ip = ".".join([str(int(i)) for i in ip.split(".")])
    return new_ip

logFile = "list.txt"
with open(logFile) as f:
    content = f.readlines()
# you may also want to remove empty lines
content = [l.strip() for l in content if l.strip()]

for line in content:
    line = line[1:].split(" ")[0]
    line =  removeZeros(line).replace(removeZeros(line).split(".", 2)[1],removeZeros(line).split(".", 2)[1][:-2] + ".0")
    print(line)
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>192.45.0.0
192.45.0.10 
192.45.0.110 
192.45.0.1 
</code></pre>
<p><strong>EDIT</strong>:</p>
<p>If you want to overwrite the new ip <code>list</code> to the same file, you can create two separate lists to store the <code>ips</code> and the <code>text</code>:</p>
<pre><code>logFile = "list.txt"
with open(logFile) as f:
    content = f.readlines()
# you may also want to remove empty lines
content = [l.strip() for l in content if l.strip()]
ipList = []
stList = []
for line in content:
    stList.append(line[1:].split(" ")[1])
    line = line[1:].split(" ")[0]
    line =  removeZeros(line).replace(removeZeros(line).split(".", 2)[1],removeZeros(line).split(".", 2)[1][:-2] + ".0")
    ipList.append(line)
    # print(line)

with open(logFile, "w") as f:
    for index in range(len(ipList)):
        f.write(str(ipList[index]) + " " + str(stList[index]) + "\n")
</code></pre>
<p><strong>OUTPUT (from the file)</strong>:</p>
<pre><code>192.45.0.0 uue01.re1
192.45.0.10 ccu01.re1
192.45.0.110 uue02.re1
192.45.0.1 core1.re2
</code></pre>
<p><strong>EDIT 3</strong>:</p>
<p>In order to remove the first and last line, use slicing:</p>
<p>Replace this line:</p>
<pre><code>for line in content:
</code></pre>
<p>with this:</p>
<pre><code>for line in content[1:-1]:  # after the first and before the last line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>How can i manipulate 1st string/numbers [...] and at the same time remain the 2nd string as above. </p>
</blockquote>
<p>It seems you can split the string on the space character before you replace the points, to only modify the part where you need to.</p>
<p>Example:</p>
<pre><code>s = "0192.4500.0010 ccu01.re1                              "
numbers, host = s.split()
numbers = numbers.replace(".", "")
# TODO: fill in appropriate conversions with `numbers` here
print(numbers, host)
</code></pre>
<p>The output is:</p>
<pre><code>019245000010 ccu01.re1
</code></pre>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.split</a></li>
</ul>
<hr/>
<blockquote>
<p>How can i [...] save the output line (file2.write(line)) in new line </p>
</blockquote>
<p>When writing the output to the file, newline characters are not added automatically. You need to add them to the string yourself. </p>
<p>Example:</p>
<pre><code>numbers = "{}.{}.{}.{}".format(*numbers)
line = "{} {}\n".format(numbers, host)
outf.write(line)
</code></pre>
<p>Also, it is a good habit to use the <code>with</code> statement to open and eventually close the files.</p>
<p>For reference:</p>
<ul>
<li><a href="https://stackoverflow.com/q/13730107/1025391">Writelines writes lines without newline, Just fills the file..</a></li>
<li><a href="https://stackoverflow.com/q/9282967/1025391">How to open a file using the open with statement</a></li>
</ul>
</div>
<span class="comment-copy">see if the answer posted below helps?</span>
<span class="comment-copy">Hi...I'm getting error below --&gt; stList.append(line[1:].split(" ")[1]) IndexError: list index out of range</span>
<span class="comment-copy">@chenoi The above code is tested. Do you have the same data like I do in the above <code>list.txt</code>?</span>
<span class="comment-copy">Hi sir, the list got header and string at the end of the file... when i manually delete the header and last string...and just the data....run code ok...i have updated the list.txt... how can i remove the header and the last line?</span>
<span class="comment-copy">@chenoi using slicing, check the Edit 3.</span>
<span class="comment-copy">U r the man sir!...i tried using [1:-1] before... but...i add wrongly.... thank goodness u point me to the right point...thank you sir.</span>
<span class="comment-copy">Not an output OP wanted.</span>
<span class="comment-copy">@DirtyBit Copying the missing parts from the OP is left as an excercise to the reader.</span>
<span class="comment-copy">ip, hostname = line.split()     print(ip, hostname)          ....Im getting error below--&gt;      ip, hostname = line.split() ValueError: need more than 1 value to unpack</span>
<span class="comment-copy">@chenoi You have a line not adhering to the format, e.g., an empty line or one containing more or less than two words. You might want to add <a href="https://docs.python.org/3.7/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">exception handling</a> and <a href="https://docs.python.org/3.7/reference/simple_stmts.html#continue" rel="nofollow noreferrer">skip such lines</a>, for example.</span>
<span class="comment-copy">Oh...yaaa...thanks for point me out....</span>
