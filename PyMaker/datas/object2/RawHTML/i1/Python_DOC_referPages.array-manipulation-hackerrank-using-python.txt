<div class="post-text" itemprop="text">
<p>This logic is working for most of the test cases but not all. What I am doing wrong?</p>
<pre><code>def arrayManipulation(n, queries, m):
    li = []
    for j in range(0, m):
        p = queries[j][0]
        r = queries[j][1]
        v = queries[j][2]

        lo = []
        for i in range(0, n):
            lo.append(0)

        for i in range(p - 1, r):
            lo[i] = lo[i] + v

        li.append(lo)

    for i in range(1, m):
        for j in range(0, n):
            li[i][j] = li[i-1][j] + li[i][j]
    return max(max(li))

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    nm = input().split()
    n = int(nm[0])
    m = int(nm[1])

    queries = []
    for _ in range(m):
        queries.append(list(map(int, input().rstrip().split())))

    result = arrayManipulation(n, queries,m)
    print(result)
    fptr.write(str(result) + '\n')
    fptr.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>None of the python samples pass <code>m</code> to <code>arrayManipulation</code> as it is not necessary - in python you can just iterate over the list rather than an index of the list:</p>
<p>You are making this way more complicated than it needs to be, you don't need to keep the previous lists just update the one list, e.g.:</p>
<pre><code>def arrayManipulation(n, queries):
    arr = [0]*n
    for a, b, k in queries:
        for i in range(a-1, b):
            arr[i] += k
    return max(arr)
</code></pre>
</div>
<span class="comment-copy">What problem are you trying to solve?</span>
<span class="comment-copy"><a href="https://www.hackerrank.com/challenges/crush/problem" rel="nofollow noreferrer">link</a> this is the problem statement</span>
<span class="comment-copy">Your approach is extremely brute-force. Look for appropriate data structure - segment tree or perhaps Fenwick tree</span>
<span class="comment-copy">When asking questions it's helpful if you refer to the specific problem you are facing. In this case sharing the specific tests that are failing and maybe which part of the code you are most struggling with or any errors you are getting would help others be able to answer more quickly.</span>
