<div class="post-text" itemprop="text">
<p><em>This is not for homework!</em></p>
<p>Hello,</p>
<p>Just a quick question about <code>Regex</code> formatting.</p>
<p>I have a list of different courses.</p>
<p><code>L = ['CI101', 'CS164', 'ENGL101', 'I-', 'III-', 'MATH116', 'PSY101']</code></p>
<p>I was looking for a format to find all the words that start with <code>I</code>, or <code>II</code>, or <code>III</code>. Here is what I did. (I used python fyi)</p>
<pre><code>for course in L:
    if re.search("(I?II?III?)*", course):
        L.pop()
</code></pre>
<p>I learned that <code>?</code> in regex means optional. So I was thinking of making <code>I</code>, <code>II</code>, and <code>III</code> optional and <code>*</code> to include whatever follows.  However, it seems like it is not working as I intended. What would be a better working format?</p>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the regex you should use:</p>
<pre><code>^I{1,3}.*$
</code></pre>
<p><a href="https://regex101.com/r/HDS4TX/1" rel="nofollow noreferrer">click here to see example</a></p>
<p><code>^</code> means the head of a line. <code>I{1,3}</code> means repeat <code>I</code> 1 to 3 times. <code>.*</code> means any other strings. <code>$</code> means the tail of a line. So this regex will match all the words that start with <code>I</code>, <code>II</code>, or <code>III</code>.</p>
<p>Look at your regex, first, you don't have the <code>^</code> mark, so it will match <code>I</code> anywhere. Second, <code>?</code> will only affect the previous one character, so the first <code>I</code> is optional,  but the second <code>I</code> is not, then the third <code>I</code> is optional, the fourth and fifth <code>I</code> are not, the sixth <code>I</code> is optional. Finally, you use parentheses with <code>*</code>, that means the expression in parentheses will repeat many times include 0 time. So it will match 0 <code>I</code>, or at least 3 <code>I</code>.</p>
<p><a href="https://regex101.com/r/C49TPK/1" rel="nofollow noreferrer">your regex</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of <code>search()</code> you can use the function <code>match()</code> that matches the pattern at the beginning of string:</p>
<pre><code>import re

l = ['CI101', 'CS164', 'ENGL101', 'I-', 'III-', 'MATH116', 'PSY101']

pattern = re.compile(r'I{1,3}')

[i for i in l if not pattern.match(i)]
# ['CI101', 'CS164', 'ENGL101', 'MATH116', 'PSY101']
</code></pre>
</div>
<span class="comment-copy"><code>re.match('^I{1,3}.*$')</code>, please see <a href="https://regex101.com/r/HDS4TX/1" rel="nofollow noreferrer">regex101.com/r/HDS4TX/1</a>.</span>
<span class="comment-copy">Aha, Thank you!</span>
<span class="comment-copy">@Yang Do you mind making that an answer so the question can be resolved?</span>
<span class="comment-copy">Thanks for reminding me, I've forgot this question :) @NiayeshIsky</span>
<span class="comment-copy">Yang's regex is correct, but note that your Python code won't work as intended: the <code>pop()</code> operation will always remove the first element in the list. Consider using a list comprehension like so: <code>[ c for c in courses if re.match("^I{1,3}.*", c) ]</code></span>
<span class="comment-copy">I see. Thanks for the explanation!</span>
