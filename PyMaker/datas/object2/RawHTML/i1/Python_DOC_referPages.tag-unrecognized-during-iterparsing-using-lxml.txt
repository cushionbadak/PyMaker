<div class="post-text" itemprop="text">
<p>I have a really weird problem with lxml, I try to parse my xml file with iterparse as follow:</p>
<pre><code>for event, elem in etree.iterparse(input_file, events=('start', 'end')):
    if elem.tag == 'tuv' and event == 'start':
        if elem.get('{http://www.w3.org/XML/1998/namespace}lang') == 'en':
            if elem.find('seg') is not None:
                write_in_some_file
        elif elem.get('{http://www.w3.org/XML/1998/namespace}lang') == 'de':
            if elem.find('seg') is not None:
                write_in_some_file
</code></pre>
<p>It is pretty simple and works almost perfectly, shortly it goes through my xml file, if an elem is  it checks if the language attribute is 'en' or 'de', it then checks if the  got a  child, if yes it writes its value into a file</p>
<p><strong>There is ONE &lt; seg &gt; in the file that seems not existing</strong>, returning None when doing elem.find('seg'), you can see it here and you have it in its context below <code>&lt;seg&gt;! keine Spalten und Ventile&lt;/seg&gt;</code>.</p>
<p>I don't understand why this tag which seems perfectly fine creates a problem (since I can't use its .text), note that every other  tag is find well</p>
<pre><code>&lt;tu tuid="235084307" datatype="Text"&gt;
&lt;prop type="score"&gt;1.67647&lt;/prop&gt;
&lt;prop type="score-zipporah"&gt;0.6683&lt;/prop&gt;
&lt;prop type="score-bicleaner"&gt;0.7813&lt;/prop&gt;
&lt;prop type="lengthRatio"&gt;0.740740740741&lt;/prop&gt;
&lt;tuv xml:lang="en"&gt;
 &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
 &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
 &lt;seg&gt;! no gaps and valves&lt;/seg&gt;
&lt;/tuv&gt;
&lt;tuv xml:lang="de"&gt;
 &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
 &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
 &lt;seg&gt;! keine Spalten und Ventile&lt;/seg&gt;
&lt;/tuv&gt;
&lt;/tu&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In the <a href="https://lxml.de/parsing.html#incremental-event-parsing" rel="nofollow noreferrer">lxml docs</a> there is this warning:</p>
<blockquote>
<p><strong>WARNING</strong>: During the 'start' event, any content of the element, such as
  the descendants, following siblings or text, is not yet available and
  should not be accessed. Only attributes are guaranteed to be set.</p>
</blockquote>
<p>Maybe instead of using <code>find()</code> from <code>tu</code> to get the <code>seg</code> element, change your "if" statement to match <code>seg</code> and the "end" event. </p>
<p>You can use <code>getparent()</code> to get the <code>xml:lang</code> attribute value from the parent <code>tu</code>.</p>
<p><strong>Example</strong> ("test.xml" with an additional "tu" element for testing)</p>
<pre class="lang-xml prettyprint-override"><code>&lt;tus&gt;
    &lt;tu tuid="235084307" datatype="Text"&gt;
        &lt;prop type="score"&gt;1.67647&lt;/prop&gt;
        &lt;prop type="score-zipporah"&gt;0.6683&lt;/prop&gt;
        &lt;prop type="score-bicleaner"&gt;0.7813&lt;/prop&gt;
        &lt;prop type="lengthRatio"&gt;0.740740740741&lt;/prop&gt;
        &lt;tuv xml:lang="en"&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
            &lt;seg&gt;! no gaps and valves&lt;/seg&gt;
        &lt;/tuv&gt;
        &lt;tuv xml:lang="de"&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
            &lt;seg&gt;! keine Spalten und Ventile&lt;/seg&gt;
        &lt;/tuv&gt;
    &lt;/tu&gt;
    &lt;tu tuid="235084307A" datatype="Text"&gt;
        &lt;prop type="score"&gt;1.67647&lt;/prop&gt;
        &lt;prop type="score-zipporah"&gt;0.6683&lt;/prop&gt;
        &lt;prop type="score-bicleaner"&gt;0.7813&lt;/prop&gt;
        &lt;prop type="lengthRatio"&gt;0.740740740741&lt;/prop&gt;
        &lt;tuv xml:lang="en"&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
            &lt;seg&gt;! no gaps and valves #2&lt;/seg&gt;
        &lt;/tuv&gt;
        &lt;tuv xml:lang="de"&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34/7969ccc9b6/bevi-clean-ball.html&lt;/prop&gt;
            &lt;prop type="source-document"&gt;http://www.beviclean.de/en/shop/product-details/artikel/bevi-accessoires/34//bevi-clean-ball.html&lt;/prop&gt;
            &lt;seg&gt;! keine Spalten und Ventile #2&lt;/seg&gt;
        &lt;/tuv&gt;
    &lt;/tu&gt;
&lt;/tus&gt;
</code></pre>
<p><strong>Python 3.x</strong></p>
<pre class="lang-py prettyprint-override"><code>from lxml import etree

for event, elem in etree.iterparse("test.xml", events=("start", "end")):

    if elem.tag == "seg" and event == "end":
        current_lang = elem.getparent().get("{http://www.w3.org/XML/1998/namespace}lang")
        if current_lang == "en":
            print(f"Writing en text \"{elem.text}\" to file...")
        elif current_lang == "de":
            print(f"Writing de text \"{elem.text}\" to file...")
        else:
            print(f"Unable to determine language. Not writing \"{elem.text}\" to any file.")

    if event == "end":
        elem.clear()
</code></pre>
<p><strong>Printed Output</strong></p>
<pre class="lang-none prettyprint-override"><code>Writing en text "! no gaps and valves" to file...
Writing de text "! keine Spalten und Ventile" to file...
Writing en text "! no gaps and valves #2" to file...
Writing de text "! keine Spalten und Ventile #2" to file...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if this is what you're looking (I'm pretty new to this myself), but</p>
<pre><code>for event, elem in etree.iterparse('xml_try.txt', events=('start', 'end')):
if elem.tag == 'tuv' and event == 'start':
    if elem.get('{http://www.w3.org/XML/1998/namespace}lang') == 'en':
        if elem.find('seg') is not None:
            print(elem[2].text)
    elif elem.get('{http://www.w3.org/XML/1998/namespace}lang') == 'de':
        if elem.find('seg') is not None:
            print(elem[2].text)
</code></pre>
<p>Generates this output:</p>
<pre><code>! no gaps and valves
! keine Spalten und Ventile
</code></pre>
<p>Again, apologies if this isn't what you're after.</p>
</div>
<span class="comment-copy">Try changing <code>event == 'start'</code> to <code>event == 'end'</code>. <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse" rel="nofollow noreferrer">According to the docs</a>, if you need a fully populated element, look for “end” events instead (see Note in link).</span>
<span class="comment-copy">I tried but when I use event == end the elem seems empty, for example find doesn't return anything</span>
<span class="comment-copy">I can't manage to get index 2 of elem (index out of range), and if I use index it doesn't work neither, thank you for trying though</span>
<span class="comment-copy">@ValentinMacé - don't know what to tell you; I tried it again on a fresh Jupyter notebook using the xml from your question (loaded from the <code>xml_try.txt</code> file in the first line of code) and the code from my answer (together with <code>from lxml import etree</code>, of course) and got the same output.</span>
