<div class="post-text" itemprop="text">
<p>In my bot, the user is supposed to interact mostly through <code>Inlinekeyboard</code> messages.</p>
<p>So, if the user writes some 'regular' message or sends something, I must somehow change the last <code>Inlinekeyboard</code> message to continue the process or give him some message.</p>
<p>See the picture below:</p>
<p><a href="https://i.stack.imgur.com/DEIHD.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DEIHD.jpg"/></a></p>
<p>The user wrote some message but I had to create a new <code>Inlinekeyboard</code> button with the new message because I couldn't find a way to get the  <code>message_id</code> of the previous 'Welcome' button and change it.</p>
<p>My code:</p>
<pre><code>HELP = range(1)

def start(bot, update):
    keyboard = [
                 [InlineKeyboardButton('Help', callback_data='help')]
               ]

    # Create initial message:
    message = 'Welcome.'

    update.message.reply_text(message, reply_markup=InlineKeyboardMarkup(keyboard))

def help(bot, update):

    keyboard = [
                 [InlineKeyboardButton('Help', callback_data='help')]
               ]

    bot.edit_message_text(
        text='Help ... help..',
        chat_id=update.callback_query.message.chat_id,
        message_id=update.callback_query.message.message_id,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    bot.answer_callback_query(update.callback_query.id, text='')

def unknown(bot, update):

    message = 'Please press the Help button for more instructions.'

    keyboard = [
                 [InlineKeyboardButton('Help', callback_data='help')]
               ]

    update.message.reply_text(message, reply_markup=InlineKeyboardMarkup(keyboard))



# Create the EventHandler and pass it your bot's token.
updater = Updater(token=config.TELEGRAM_API_TOKEN)

# Get the dispatcher to register handlers:
dispatcher = updater.dispatcher

dispatcher.add_handler(CommandHandler('start', start))
dispatcher.add_handler(CallbackQueryHandler(help, pattern='help'))
dispatcher.add_handler(MessageHandler(Filters.all, unknown))

updater.start_polling()

updater.idle()    
</code></pre>
<p>Best Regards.
Kleyson Rios.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to <em>edit the previous messages that the bot has sent</em>, you need to store their <code>message_id</code> (which you already know).</p>
<p>So you can simply do this:</p>
<pre><code>sent_message = update.message.reply_text(
    message,
    reply_markup=InlineKeyboardMarkup(keyboard)
)
</code></pre>
<p>And then you can access it like <code>sent_message.message_id</code></p>
<p>Now for the variable <code>sent_message</code>, you can make it <em>global</em> or create a <em>separate file</em> to handle these variables, or at larger scale, you can store it in a <em>database</em>.</p>
</div>
<span class="comment-copy">Well, I came out with a 'workaround' but I believe that might have a better solution. My dispatcher is basically a ConversationHandler. Then I activated in all the handlers the option 'pass_user_data=True' and now I'm keeping track of the message_id inside the user_data, and based on the content of the user_data I know if I have to update the inlinebuttons message or delete the old message and add a new one (to stay at the bottom) saving the new message_id. May I have a better solution than this ?</span>
<span class="comment-copy">Thanks again Amir.</span>
<span class="comment-copy">@KleysonRios Any time ^_^</span>
