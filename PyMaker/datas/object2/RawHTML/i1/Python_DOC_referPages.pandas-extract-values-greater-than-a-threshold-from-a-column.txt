<div class="post-text" itemprop="text">
<p>I have a DataFrame - a snapshot of which looks like this:</p>
<p><a href="https://i.stack.imgur.com/4YCgd.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/4YCgd.png"/></a></p>
<p>I am trying to grab all the <code>math_score</code> and <code>reading_score</code> values greater than 70 grouped by <code>school_name</code>. </p>
<p>So my end result should look something like this:</p>
<p><a href="https://i.stack.imgur.com/Z1pMZ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Z1pMZ.png"/></a></p>
<p>I am trying to calculate the % of students with a passing <code>math_score</code> and <code>reading_score</code> which is % of scores &gt; 70.</p>
<p>Any help on how I can go about this? </p>
<p>This is what I have tried:</p>
<pre><code>school_data_grouped = school_data_complete.groupby('school_name')
passing_math_score = school_data_grouped.loc[(school_data_grouped['math_score'] &gt;= 70)]
</code></pre>
<p>I get an error with this that says:</p>
<pre><code>AttributeError: Cannot access callable attribute 'loc' of 'DataFrameGroupBy' objects, try using the 'apply' method
</code></pre>
<p>What can I do to achive this? Any help is much appreciated.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a column for whether each student passed, for example:</p>
<pre><code>school_data['passed_math'] = school_data['math_score'] &gt;= 70
school_data['passed_both'] = (school_data['math_score'] &gt;= 70) &amp; (school_data['reading_score'] &gt;= 70)
</code></pre>
<p>You can then get the pass rate by school using a <code>groupby</code>:</p>
<pre><code>pass_rate = school_data.groupby('school_name').mean()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to first filter for math_score &amp; reading_score then apply groupby, because groupby doesn't return a Dataframe. </p>
<p>To work on your question, I got data from this link </p>
<h3>DATA</h3>
<p><a href="https://www.kaggle.com/aljarah/xAPI-Edu-Data/" rel="nofollow noreferrer">https://www.kaggle.com/aljarah/xAPI-Edu-Data/</a></p>
<p>I changed column names though. </p>
<h3>CODE</h3>
<pre><code>import pandas as pd 
school_data_df  = pd.read_csv('xAPI-Edu-Data 2.csv')
school_data_df.head()

df_70_math_score = school_data_df[school_data_df.math_score &gt; 70]
df_70_reading_math_score = df_70_math_score[df_70_math_score.reading_score &gt;70]
df_70_reading_math_score.head()

grouped_grade = df_70_reading_math_score.groupby('GradeID') 
</code></pre>
<p>You can do any stats generation from this groupby_object 'grouped_grade'</p>
</div>
<span class="comment-copy">please dont post data as images, we cannot copy them and thus cannnot reproduce the question. Please post all codes and data as text. Thanks</span>
<span class="comment-copy">@anky_91, the data is in CSV so that is why I have posted a screenshot</span>
<span class="comment-copy">You can always copy or create 5 rows of sample data to recreate your problem. Users would find that easy to just execute the code and help you out. :) check <a href="https://stackoverflow.com/questions/20109391/how-to-make-good-reproducible-pandas-examples">this</a></span>
<span class="comment-copy">you get a pandas.core.series.Series after filtering. and applying groupby on that series is not that useful.</span>
