<div class="post-text" itemprop="text">
<p>There are two spiders which use the same resource file and almost the same structure.</p>
<p>The spiderA contains :</p>
<pre><code>import scrapy
import pkgutil

class StockSpider(scrapy.Spider):
    name = "spiderA"
    data = pkgutil.get_data("tutorial", "resources/webs.txt")
    data = data.decode()
    urls = data.split("\r\n")
    start_urls = [url + "string1"  for url in urls]

    def parse(self, response):
        pass
</code></pre>
<p>The spiderB contains :</p>
<pre><code>import scrapy
import pkgutil

class StockSpider(scrapy.Spider):
    name = "spiderB"
    data = pkgutil.get_data("tutorial", "resources/webs.txt")
    data = data.decode()
    urls = data.split("\r\n")
    start_urls = [url + "string2"  for url in urls]

    def parse(self, response):
        pass
</code></pre>
<p>How can I combine spiderA and spiderB, and add a switch variable to let <code>crapy scral</code> call different spider depending on my need?  </p>
</div>
<div class="post-text" itemprop="text">
<p>Try to add separate parameter for spider type. You can set it with calling <code>scrapy crawl myspider -a spider_type=second</code>. Check this code example:</p>
<pre><code>import scrapy
import pkgutil

class StockSpider(scrapy.Spider):
    name = "myspider"

    def start_requests(self):
        if not hasattr(self, 'spider_type'):
            self.logger.error('No spider_type specified')
            return
        data = pkgutil.get_data("tutorial", "resources/webs.txt")
        data = data.decode()

        for url in data.split("\r\n"):
            if self.spider_type == 'first':
                url += 'first'
            if self.spider_type == 'second':
                url += 'second'
            yield scrapy.Request(url)

    def parse(self, response):
        pass
</code></pre>
<p>And also you can always create base main class and then inherit from it, overloading only one variable (that you add to url) and name (for separate calls).</p>
</div>
<div class="post-text" itemprop="text">
<p><code>spider_type</code>  result in error</p>
<pre><code>NameError: name 'spider_type' is not defined.
</code></pre>
<p>It is self.spider_type in spider class.</p>
<pre><code>import scrapy
import pkgutil

class StockSpider(scrapy.Spider):
    name = "myspider"

    def start_requests(self):
        if not hasattr(self, 'spider_type'):
            self.logger.error('No spider_type specified')
            return
        data = pkgutil.get_data("tutorial", "resources/webs.txt")
        data = data.decode()

        for url in data.split("\r\n"):
            if self.spider_type == 'first':
                url += 'first'
            if self.spider_type == 'second':
                url += 'second'
            yield scrapy.Request(url)

    def parse(self, response):
        pass
</code></pre>
<p>To make it more strictly and accurately.</p>
<pre><code>scrapy crawl myspider -a spider_type='second'
</code></pre>
</div>
