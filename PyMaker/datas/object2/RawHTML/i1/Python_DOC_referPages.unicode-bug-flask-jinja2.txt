<div class="post-text" itemprop="text">
<p>I am looking to create a web page with python back on flask, everything is working greatly and i'd recommand flask greatly. But when it comes to Unicode et encoding its always hard between python the webpage etc.. </p>
<p>So i have a form that i post at a specific flask route, i get my my values and i need to do some little wrapper to get my variables in the good order and all.</p>
<p>I got this dict:</p>
<pre><code>            task_formatted.append(str(item['entity']))
</code></pre>
<p>I transform it to a str then i append it to a list so i can easely pass it to my template</p>
<p>I'd expect the str to be render as UTF-8 on the webpage 
python page:</p>
<pre><code>  # -*- coding: utf-8 -*- 
</code></pre>
<p>html page:</p>
<pre><code>  &lt;meta charset="utf-8"/&gt;
</code></pre>
<p>i then print them in my page using jinja:</p>
<pre><code>            {% for item in task %}
            &lt;tr&gt;
              &lt;td&gt;{{item[0].decode('utf-8')}}&lt;/td&gt;
              &lt;td&gt;{{item[1].decode('utf-8')}}&lt;/td&gt;
              &lt;td&gt;{{item[2]}}&lt;/td&gt;
              &lt;td&gt;{{item[3]}}&lt;/td&gt;
              &lt;td&gt;{{item[4]}}&lt;/td&gt;
              &lt;td&gt;&lt;button id="taskmodal1"&gt;&lt;/td&gt;
            &lt;/tr&gt;
            {% endfor %}
</code></pre>
<p>but my item[0].decode('utf-8')
and my item[1].decode('utf-8')</p>
<p>are printing :</p>
<p>{'type': 'Asset', 'id': 1404, 'name': 'Test-Asset comm\xc3\xa9'}</p>
<p>instead of </p>
<p>{'type': 'Asset', 'id': 1404, 'name': 'Test-Asset comm√©'}</p>
<p>I have tried several ways with .encode('utf-8') on the python side with unicode(str) with render_template().encode('utf-8') And i am growing out of ideas.</p>
<p>To be fair i think their is something i didn't understand with Unicode so i'd like to get some explanations (not documentation link because i most likely already read them) or some solutions to get it working,</p>
<p>its very important for my program to be able to write properly the str has i use it after in js http calls.</p>
<p>Thanks</p>
<p>PS: I am using python2</p>
</div>
<div class="post-text" itemprop="text">
<p>You are doing thing wrong.</p>
<pre><code>&lt;td&gt;{{item[0].decode('utf-8')}}&lt;/td&gt;
</code></pre>
<p>Why do you add the <code>decode</code>? This is wrong. I recommend you not to put any conversion function. UTF-8 will work fine (and I think it is the default). In any case, you are not <strong>decoding</strong>. You are encoding a string into UTF-8 ("encoding": you use the <em>code UTF-8</em>, "decoding": from a specific coding value to a semantic value: in fact in python you should not care about how the strings are internally coded [BTW an internal coding, a sort of UTF-8, latin1, UTF-16 or UTF-32, according the most efficient way to encode the entire string]).</p>
<p>Just remove the <code>decode('utf-8')</code>. On python code, you should not care about coding and decoding, but on input and output: use the sandwich rule. This will hugely simplify handling of strings, logic, and it avoid most of bugs</p>
</div>
<div class="post-text" itemprop="text">
<p>I found a solution for my problem:</p>
<pre><code>unicodedata.normalize('NFKD', unicode(str(item['entity']['type']) + str(item['entity']['name']),'utf-8'))
</code></pre>
<p>first i transforme my dict to a string with str() then i turn it in UTF-8 Unicode with unicode('str' , 'utf-8') end finaly after importing unicodedata i use unicodedata.normalize()</p>
<p>Hope it'll help poeple</p>
</div>
<span class="comment-copy">I never had problem with jinja and UTF-8</span>
<span class="comment-copy">Python 2. This could be a problem. Avoid python2 when you should internationalize. Nobody support it anymore, and it take much more programming effort (so to you) to take care of encoding and system settings.</span>
<span class="comment-copy">Indeed, but i have no choice right now but to use python2 thats why i search for a solution that is not going to python3</span>
<span class="comment-copy">i assume its true for python 3 which uses UTF-8 as standart but i have to use Python2 which uses ascii as standart. I'll try anyway</span>
