<div class="post-text" itemprop="text">
<p>I have a script that creates files for each line of a CSV file. However, somehow a blank line is being added to the end of the newly created file. </p>
<p><strong>Code:</strong></p>
<pre><code> with open(fullCSV, 'r') as f:
            reader = csv.reader(f)
            csvList = list(reader)

        for item in csvList:
            if not os.path.exists(tempLoc + item[0]):
                os.mkdir(tempLoc + item[0])
            with open(tempLoc + item[0] + r"\prm.263", "w+") as f:
                csv.writer(f).writerow(item[1:])
            f.close
</code></pre>
<p>Is there some way I can strip the blank line on creation?</p>
<p>Thanks in advance</p>
<p><strong>Edit:</strong></p>
<p>Here is the sample of 1 of the output files that is being created
<a href="https://i.stack.imgur.com/k82gt.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/k82gt.png"/></a></p>
<p>Here is the CSV file its reading
<a href="https://i.stack.imgur.com/I9whQ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/I9whQ.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is the csv module. You can see that there is no way to get rid of the end of line character from the output of <code>writerow()</code>. After all, the csv module assume you can repeatedly write rows:</p>
<pre><code> writer.writerow(row1)
 writer.writerow(row2)
 ...
</code></pre>
<p>so emitting a newline on <em>every row output</em> is necessary to make it work. But your question is to remove the newline at end of file. So you can consider adding an extra step in between: (using Python 3 io module)</p>
<pre><code>with open(tempLoc + item[0] + r"\prm.263", "w+") as f:
    g = io.StringIO()
    csv.writer(g).writerow(item[1:])
    f.write(g.getvalue().rstrip())
</code></pre>
<p>Above, we make a <code>StringIO</code> as file-like object for <code>csv.writer()</code> and ask the writer to write to the buffer instead of the file. After you finish writing all the rows, we read the buffer by <code>g.getvalue()</code> and then strip out the whitespaces (i.e., the newline) at the end, and write to the file.</p>
<p>If you're interested, this is what the csv module will give you for each row:</p>
<pre><code>&gt;&gt;&gt; import io
&gt;&gt;&gt; f = io.StringIO()
&gt;&gt;&gt; import csv
&gt;&gt;&gt; csv.writer(f).writerow([1,2,3,4])
9
&gt;&gt;&gt; f.getvalue()
'1,2,3,4\r\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/fr/3/library/csv.html#csv.writer" rel="nofollow noreferrer"><code>csv.writer</code></a> by default uses the <a href="https://docs.python.org/fr/3/library/csv.html#csv.excel" rel="nofollow noreferrer"><code>excel</code></a> dialect, which has a <code>'\r\n'</code> as lineterminator. </p>
<p>If you really don't want any line terminator, you can override that with the <code>lineterminator</code> parameter to <code>csv.writer()</code>:</p>
<pre><code>csv.writer(f, lineterminator='').writerow(item[1:])
</code></pre>
<p>Since you only write 1 single line in each file, you will not have an issue with all original lines ending up concatenated in 1 single line in your output.</p>
<p>Your sample code rewritten:</p>
<pre><code>with open(fullCSV, 'r') as finput:
    for item in csv.reader(finput):
        if not os.path.exists(tempLoc + item[0]):
            os.mkdir(tempLoc + item[0])
        with open(tempLoc + item[0] + r"\prm.263", "w+") as foutput:
            csv.writer(foutput, lineterminator='').writerow(item[1:])
</code></pre>
</div>
<span class="comment-copy">(With the <code>with open() as</code>, you don't have to close the file at the end manually)</span>
<span class="comment-copy">@Fukiyel good to know, thanks!</span>
<span class="comment-copy">Are you sure you want to strip it? It's a pretty common convention for *nix-like systems to use a new line character as the terminator of every line. Depending on what you are doing with the files, getting rid of it could potentially cause issues with other tools.</span>
<span class="comment-copy">@PAckerman yes, having the blank line in the newly created files is breaking other scripts when they are reading the file(s).</span>
<span class="comment-copy">Did you already try <code>csv.writer(f).writerow(item[1:].strip())</code>?</span>
<span class="comment-copy">You are a lifesaver. I will award the bounty when the timer expires. Thanks again!</span>
