<div class="post-text" itemprop="text">
<p>I have 2 lists </p>
<blockquote>
<p>List A (called a) : 2D list like this : [[1,'aaa'],[2,'bbb'],[3,'ccc'],[4,'ddd']]</p>
<p>List B (called b) : 1D list like this : ['aaa','abc','cba','acb']</p>
</blockquote>
<p>I want to remove elements from the list A based on the content of list B.
In the example, the expected result is :</p>
<blockquote>
<p>New List C (called c) : [[2,'bbb'],[3,'ccc'],[4,'ddd']] //Since there is no element 'bbb', 'ccc' or 'ddd' in the list B</p>
</blockquote>
<p>I'm currently using the following code and I find it very slow : </p>
<pre><code>c = []
for elem in a:
    if elem[1] not in b:
        c.append(elem)
</code></pre>
<p>Is there a better way to do this removal ? Is it better to create a new list and append elements or remove elements from the orignal list ?</p>
<p>Thank you for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Not much faster, but perhaps more clean using a list comprehension</p>
<pre><code>c = [elem for elem in a if elem[1] not in b]
</code></pre>
<hr/>
<p>If <code>b</code> is very large, then converting to a set will speed things up significantly since lookups in lists are in linear time <code>O(n)</code> but lookups in sets are in constant time <code>O(1)</code></p>
<pre><code>b_set = set(b)
c = [elem for elem in a if elem[1] not in b_set]
</code></pre>
<hr/>
<p>If the index-1 elements of <code>a</code> (<code>'aaa', 'bbb',</code> etc) are <strong>unique</strong>, then this might be even faster because then we can use the <a href="https://docs.python.org/3.4/library/stdtypes.html#frozenset.difference" rel="nofollow noreferrer">set difference operator</a> <code>-</code></p>
<pre><code>a_dict = {k: v for v, k in a}
b_set = set(b)

set_difference = a_dict.keys() - b_set
c = [(a_dict[k]: k) for k in set_difference]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <code>set</code> for O(1) lookup which would speed up execution quite a bit for large B</p>
<pre><code>A =  [[1,'aaa'],[2,'bbb'],[3,'ccc'],[4,'ddd']]
B = {'aaa','abc','cba','acb'} # {} means set 

C = filter(lambda x: x[1] in B, A)
print C
</code></pre>
</div>
<span class="comment-copy">There's no <code>'ddd'</code> in list <code>B</code> either.</span>
<span class="comment-copy">You could speed it up by making list B a dictionary</span>
<span class="comment-copy">@RocketHazmat You're right! I've fix the mistake, thank you</span>
<span class="comment-copy">Thank you very much! I didn't know what a set was before.. My program is now 100x faster. The last method is not suited for my case but it can surely help others.</span>
<span class="comment-copy">What makes you think OP is using python 2? Otherwise, this is an exact copy of my answer.</span>
