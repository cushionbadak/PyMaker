<div class="post-text" itemprop="text">
<p>I run my Django app on my laptop using <code>python manage.py runserver</code> and my allauth pages render fine. When I run them on production with <code>python manage.py runserver 0.0.0.0:8000</code> they break.</p>
<p>I am pretty sure the problem is with accessing the static ccs files (both bootstrap and my own css one).</p>
<p><code>settings.py</code></p>
<pre><code>import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = 'hidden'

DEBUG = True

ALLOWED_HOSTS = ['18.207.218.217', '127.0.0.1']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'streaming_platform',
    'users',

    'widget_tweaks',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

SITE_ID = 1
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
ACCOUNT_SIGNUP_FORM_CLASS = 'users.forms.SignupForm'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mainsite.urls'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'mainsite.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
    '/static/',
)
</code></pre>
<p>Let me know if you need any other file or detail. 
Thank you,
Gio</p>
</div>
<div class="post-text" itemprop="text">
<p>Setup your static root path</p>
<pre class="lang-py prettyprint-override"><code>    STATIC_URL = '/static/'

    STATIC_ROOT = '/your/path/for/staticFiles/'


    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, "static_in_pro", "our_static"),
    )
</code></pre>
</div>
<span class="comment-copy">Static handling in production is completely different than development. For production you need to store static file in server i.e AWS or App engine buckets etc. Then you need to add <code>STATIC_ROOT</code> in your settings.</span>
<span class="comment-copy">I see. I am still pretty new to AWS and the website is not used by anybody for now so I'm just running a <code>python runserver</code> on an ec2 machine because my client wants to see progress from his computer.</span>
