<div class="post-text" itemprop="text">
<p>My original goal was to remove the extensive white margins on my PDF pages.</p>
<p>Then I found this purpose can be achieved by scaling the page using the code below, but annotations are not scaled.</p>
<pre><code>import PyPDF2

# This works fine
with open('old.pdf', 'rb') as pdf_obj:
    pdf = PyPDF2.PdfFileReader(pdf_obj)
    out = PyPDF2.PdfFileWriter()
    for page in pdf.pages:
        page.scale(2, 2)
        out.addPage(page)
    with open('new.pdf', 'wb') as f: 
        out.write(f)

# This attempts to remove annotations
with open('old.pdf', 'rb') as pdf_obj:
    pdf = PyPDF2.PdfFileReader(pdf_obj)
    page = pdf.pages[2]
    print(page['/Annots'], '\n\n\n\n')
    page.Annots = []
    print(page['/Annots'])
</code></pre>
<p>Is there a way to remove annotations? Or any suggestion that can help me to get rid of the white margin. </p>
</div>
<div class="post-text" itemprop="text">
<p>The method <code>PdfFileWriter.removeLinks()</code> removes links and annotations. So, if you are okay with losing both you can add <code>out.removeLinks()</code> in your first block of code, the one that's working fine.</p>
</div>
<span class="comment-copy">According to <a href="https://pythonhosted.org/PyPDF2/PdfFileWriter.html" rel="nofollow noreferrer">PyPDF2 documentation</a> the <code>PdfFileWriter</code> has a <code>removeLinks()</code> method that "removes links and annotations." Can you use that?</span>
<span class="comment-copy">This works for me, thanks! @TrevorReid</span>
<span class="comment-copy">Great.  Glad it helped @n33. I submitted that as an answer based on your success and a little more testing of my own.</span>
