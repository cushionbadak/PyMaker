<div class="post-text" itemprop="text">
<p>I'm new to Python and I'm trying to create a "Master List" by retrieving the first item from lists A, B, and C, and appending list D with those values, then iterating on that.</p>
<p>I'm using the code:</p>
<pre><code>i = 1
while i &lt; 4:
    listA.append(str(i))
    listB.append(str(i + 10))
    listC.append(str(i + 100))
    i += 1
print(listA, listB, listC)
</code></pre>
<p>Which returns: <code>[1, 2, 3] [11, 12, 13] [101, 102, 103]</code></p>
<p>What I <em>want</em> to end up with would look like: <code>[1, 11, 101, 2, 12, 102, 3, 13, 103]</code></p>
<p>I tried using the following code:</p>
<pre><code>while k &lt; 4:
    listD.append([item[k] for item in listA])
    listD.append([item[k] for item in listB])
    listD.append([item[k] for item in listC])
    k += 1

print(listD)
</code></pre>
<p>But this returns the error: <code>TypeError: 'int' object is not subscriptable</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is some pythonic code:</p>
<pre><code>&gt;&gt;&gt; 
&gt;&gt;&gt; 
&gt;&gt;&gt; A=[1,2,3]
&gt;&gt;&gt; B=[11,12,13]
&gt;&gt;&gt; C=[101,102,103]
&gt;&gt;&gt; 
&gt;&gt;&gt; 
&gt;&gt;&gt; D=[]
&gt;&gt;&gt; 
&gt;&gt;&gt; [D.extend(a) for a in zip(A,B,C)]
[None, None, None]
&gt;&gt;&gt; 
&gt;&gt;&gt; D
[1, 11, 101, 2, 12, 102, 3, 13, 103]
&gt;&gt;&gt; 
</code></pre>
<p>So your python code should like this:</p>
<pre><code>D = []
for i in range(1,4):
    listA.append(str(i))
    listB.append(str(i + 10))
    listC.append(str(i + 100))
[D.extend(a) for a in zip(A,B,C)]
print(D)
</code></pre>
<p>This is just a starting point , you can write it better.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use the built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function:</p>
<pre><code>listA, listB, listC = [], [], []

i = 1
while i &lt; 4:
    listA.append(str(i))
    listB.append(str(i + 10))
    listC.append(str(i + 100))
    i += 1

print(listA, listB, listC)

listD = [item for sublist in zip(listA, listB, listC) for item in sublist]
print(listD)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>['1', '2', '3'] ['11', '12', '13'] ['101', '102', '103']
['1', '11', '101', '2', '12', '102', '3', '13', '103']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about skipping component lists altogether?</p>
<pre><code>#! /bin/env python3
orders_of_magnitude = 3
numbers = 4

out = [10**om - 0**om + n for n in range(1,numbers) for om in range(orders_of_magnitude)]
print(out)
</code></pre>
</div>
<span class="comment-copy">You should definitely be using a <code>for</code> loop if you know how many iterations it will have</span>
<span class="comment-copy">there's no need for a list comprehension, you're already iterating over the list. You can just do <code>listD.append(listA[k])</code>.</span>
<span class="comment-copy">The reason you're getting that <code>TypeError</code> is because <code>[item[k] for item in listA]</code> is iterating over the list, so the variable <code>item</code> is set to <code>1</code> and you try to access <code>item[k]</code> since is the number 1 and not a list, you can't ask for the n-th element of an integer because that doesn't really make sense.</span>
<span class="comment-copy">You coudl take your lists and transform them by doing <code>[x for z in zip(list1, list2, list3) for x in z]</code></span>
<span class="comment-copy">Beautiful, thank you for your post.</span>
<span class="comment-copy">welcome , I could do it in one line , but one lining hurts readibility , and python code must be super readable , the zen of python</span>
<span class="comment-copy">That's what I was looking for. Thank you!</span>
