<div class="post-text" itemprop="text">
<p>When I do </p>
<pre><code>df.dtypes
</code></pre>
<p>, appears this</p>
<pre><code>utc_time         int64
</code></pre>
<p>one example of utc_time is:
    1536444323321</p>
<p>I found a code here to change utc_time (epoch) to day of week</p>
<pre><code>df['Week_Day'] = 
datetime.fromtimestamp(df['utc_time']/1000).strftime("%A")
</code></pre>
<p>But i receive this error:</p>
<pre><code>TypeError                                 Traceback (most recent call 
last)
&lt;ipython-input-124-b3277c232078&gt; in &lt;module&gt;()
      2 # df['intage'] = df['utc_time'].astype(int)
      3 # df['intage'] = df['utc_time'].dt.days
----&gt; 4 df['Week_Day'] = 
datetime.fromtimestamp(df['utc_time']/1000).strftime("%A")

/anaconda3/lib/python3.6/site-packages/pandas/core/series.py in 
wrapper(self)
    115             return converter(self.iloc[0])
    116         raise TypeError("cannot convert the series to "
--&gt; 117                         "{0}".format(str(converter)))
    118 
    119     return wrapper

TypeError: cannot convert the series to &lt;class 'int'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, convert your column/Series to a datetime object.
<code>df['column'] = pd.to_datetime(df['column'])</code></p>
<p>Then, you have two options:</p>
<ul>
<li><p>Option 1 - use the <code>.dt</code> accessor:
<code>df['column'].dt.weekday</code> gives you the weekdays as integers</p></li>
<li><p>Option 2 - use the pandas <code>Timestamp</code> object:
<code>df['column'].apply(pd.Timestamp.weekday)</code></p></li>
</ul>
<p>But I really recommend option 1.</p>
</div>
<span class="comment-copy">If you like my answer, please don't forget to accept it :)</span>
