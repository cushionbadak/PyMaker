<div class="post-text" itemprop="text">
<p>In this program, you think of the number, the computer guesses. Before the game begins, the computer asks how many guesses it gets. If the computer loses, it asks what the correct answer was. It also checks to make sure that the answer is legal, and points it out if it wasnâ€™t. If the user gives inconsistent answers, the computer points it out and stop playing.</p>
<p>My issue is that when I run the program, if I say "higher" or "lower" when the computer asks if my number is higher/lower/same as a number, say 50, I can later say my number was 50 and it tells me that I win instead of saying "That can't be; you said it was higher/lower than 50!" How would I fix this problem?</p>
<pre><code>print("Think of a number between 1 and 100 and I'll guess it.")
total = int(input("How many guesses do I get? "))

h = "higher"
l = "lower"
s = "same"
low = 0
high = 100
hls = ""

guess_count = 0

average = 0

while guess_count &lt; total and hls != s:
    average = (high + low) // 2
    hls = input("Is the number higher, lower, or the same as " + str(average) + "? ")
    if hls == h:
        low = average
    elif hls == l:
        high = average
    guess_count += 1
    if high - low == 1:
        break
if high - low == 1:
    print("Wait; how can it be both higher than " + str(low) + " and lower than " + str(high) + "?")
elif hls == s:
    print("I won!")
else:
    answer = int(input("I lost; what was the answer? "))
    if answer &lt; low:
        print("That can't be; you said it was higher than " + str(low) + "!")
    elif answer &gt; high:
        print("That can't be; you said it was lower than " + str(high) + "!")
    elif answer != average:
        print("Well played!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I ran your code with a bunch of prints in it to check the variables as it executes. This behavior </p>
<pre><code>Think of a number between 1 and 100 and I'll guess it.
How many guesses do I get? 5
Is the number higher, lower, or the same as 50? lower
High is: 50, low is: 0, average is: 50
Is the number higher, lower, or the same as 25? higher
High is: 50, low is: 25, average is: 25
Is the number higher, lower, or the same as 37? higher
High is: 50, low is: 37, average is: 37
Is the number higher, lower, or the same as 43? higher
High is: 50, low is: 43, average is: 43
Is the number higher, lower, or the same as 46? higher
High is: 50, low is: 46, average is: 46
I lost; what was the answer? 50
High is: 50, low is: 46, average is: 46
Well played!
</code></pre>
<p>So, when the computer lost, and the <code>average</code> was <code>46</code>, it ran through these conditionals:</p>
<pre><code>if answer &lt; low:
    print("That can't be; you said it was higher than " + str(low) + "!")
elif answer &gt; high:
    print("That can't be; you said it was lower than " + str(high) + "!")
elif answer != average:
    print("Well played!")
</code></pre>
<p><code>low</code> was <code>46</code>, and answer was <code>50</code> so the first condition is <code>False</code>. <code>high</code> was <code>50</code> and my answer was <code>50</code> so the second condition is <code>False</code>. However, <code>average</code> is <code>46</code>, and not equal to my <code>answer</code> which is <code>50</code>. <code>Well played!</code> is the end result. </p>
<p>Change <code>elif answer &gt; high:</code> to <code>elif answer &gt;= high:</code> and you'll get the expected result. Then change <code>elif answer &lt; low:</code> to <code>elif answer &lt;= low:</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue here is that in order for the computer program to know that you gave the wrong response for a value (like, say, saying that "50 is too low" when in fact the answer is 50), it needs to have a record of its guesses and your responses to those guesses.</p>
<p>So after it makes a guess and you obtain a "lower" or "higher" response, you could place the guess in a <code>low_guesses</code> or <code>high_guesses</code> list, and then examine those list at the end of the game.  You could have something like this:</p>
<pre><code>low_guesses = []
high_guesses = []

while True:  # breaks out when user types "same"
    response = input("Is the number higher, lower, or the same as " + str(guess) + "? ")
    if response == "lower":
        # Add the guess to the low_guesses array:
        low_guesses.append(guess)
    elif response == "higher":
        # Add the guess to the high_guesses array:
        high_guesses.append(guess)
    else:
        # Secret number found, so break out of loop:
        break

# Outside of the loop, examine your low_guesses and high_guesses lists.
</code></pre>
<p>You can examine the lists by making sure that all the elements of <code>low_guesses</code> are less than the secret number, and that all the elements of <code>high_guesses</code> are greater than the secret number.  If that's not true, you know that something is wrong.</p>
<p>(Also, some advice:  Please don't name variables <code>l</code> or <code>lst</code>.  They look so much like <code>1</code> or <code>1st</code> that it makes reading your code harder to read, <em>even when those reading your code already know that they represent variable names</em>.)</p>
</div>
<span class="comment-copy">This type of question should be on <a href="https://codereview.stackexchange.com/">Code Review</a>. Anyway, I do not understand the question: if you input 50, you should answer <code>same</code> at the first question, and the program wins. As a side note, if the user provides unexpected input in the guessing phase, you still add 1 to the <code>guess_count</code></span>
<span class="comment-copy">This seems to work fine, thank you for the help!</span>
<span class="comment-copy">Thanks for the advice! I'll be sure to pay more attention to giving variables clearer names.</span>
