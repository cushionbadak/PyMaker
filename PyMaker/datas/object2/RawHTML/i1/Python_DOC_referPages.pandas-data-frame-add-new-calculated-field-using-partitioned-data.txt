<div class="post-text" itemprop="text">
<p>I am trying to add a new calculated field.  I am trying the 2nd best answer in <a href="https://stackoverflow.com/questions/12376863/adding-calculated-columns-to-a-dataframe-in-pandas">Adding calculated column(s) to a dataframe in pandas</a> because it seems the best in my opinion as it is neat.  Please feel free to offer better alternatives.</p>
<p>Either way my initial code is below:</p>
<pre><code>import pandas as pd    

#https://github.com/sivabalanb/Data-Analysis-with-Pandas-and-Python/blob/master/nba.csv
dt_nba = pd.read_csv("data//nba.csv")  

#note this is just basic function.  I want to pass partitioned data like team's average salary
def GetSalaryIncrement(val):
    return val * 1.1

dt_nba["SalaryPlus10Percent"] = map(GetSalaryIncrement,dt_nba["Salary"])

dt_nba[["Name","Team","Salary","SalaryPlus10Percent"]][:5]
</code></pre>
<p>However, the result is not what I expected:</p>
<pre><code>+----+---------------+----------------+--------------+--------------------------------+
| ID |     Name      |      Team      |    Salary    |      SalaryPlus10Percent       |
+----+---------------+----------------+--------------+--------------------------------+
|  0 | Avery Bradley | Boston Celtics | 7730337.0000 | &lt;map object at 0x7fb819e9b7b8&gt; |
|  1 | Jae Crowder   | Boston Celtics | 6796117.0000 | &lt;map object at 0x7fb819e9b7b8&gt; |
|  2 | John Holland  | Boston Celtics | nan          | &lt;map object at 0x7fb819e9b7b8&gt; |
|  3 | R.J. Hunter   | Boston Celtics | 1148640.0000 | &lt;map object at 0x7fb819e9b7b8&gt; |
|  4 | Jonas Jerebko | Boston Celtics | 5000000.0000 | &lt;map object at 0x7fb819e9b7b8&gt; |
+----+---------------+----------------+--------------+--------------------------------+
</code></pre>
<p>In particular I am interested in passing "window/aggregate data" where it should gracefully ignore Nan values.</p>
<p>Example in T-SQL I can do this:</p>
<pre><code>-- INCREASE EACH PLAYERS SALARY BY 10% OF AVERAGE SALARY OF THE TEAM
SELECT NewSalary= Salary + (.1 * AVG(Salary) OVER (PARTITION BY Team))
FROM nba_data
</code></pre>
<p>I want to do that in Pandas if possible. Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are looking for </p>
<pre><code>dt_nba["Salary"]=dt_nba["Salary"].map(GetSalaryIncrement)
</code></pre>
<p>Also you can do with </p>
<pre><code>GetSalaryIncrement(dt_nba["Salary"])
</code></pre>
<hr/>
<pre><code>dt_nba["Salary"].apply(GetSalaryIncrement) 
</code></pre>
<hr/>
<p>To calculated<code>INCREASE EACH PLAYERS SALARY BY 10% OF AVERAGE SALARY OF THE TEAM</code></p>
<pre><code>dt_nba['Newsa']=dt_nba.groupby('Team')['Salary'].transform('mean')*0.1+dt_nba["Salary"]
</code></pre>
</div>
<span class="comment-copy">@Earl, in this case Wen_Ben's solution on the bottom will work. Your function is just adding 10% to each row, inconsiderate of the aggregate on team.</span>
<span class="comment-copy">looks like it is working if I isolate the average team data, the values of the average does not repeat.  I have not done actual tally yet.   However, the GetSalaryIncrement formula does not seem to work.  Did i make a mistake on my function?  A salary of 7730337 returns 8148487.4857.</span>
<span class="comment-copy">sorry Ignore my mistake above.  I miss-type the column names I was actually looking at average team salary increment.   So far the figures match on the function.   I shall evaluate the group by values now.</span>
<span class="comment-copy">Okay, I confirm the window aggregation code works perfectly.  I have checked the Boston Celtics and it gives 4181504.857 as expected and Brooklyn Nets gives 3501898.333 as expected.    Pandas looks a very good library.  Thanks Wen-Bee and Efran for the answer and comments.</span>
