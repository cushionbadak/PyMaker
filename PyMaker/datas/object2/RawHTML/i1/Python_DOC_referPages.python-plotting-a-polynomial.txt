<div class="post-text" itemprop="text">
<p>I am struggling a bit with python as I am new to this lang. Basically what I am trying to do is read from a txt file x,y points and plot them. After, plot a polynomial whose coefficients are stored in another text file.
I have achieved plotting the x,y coordinates I think but I can not seem to wrap my head around this pyplot and how to input data so as to draw the polynomial. The polynomial and the x,y coordinates have nothing in common.</p>
<pre><code>import matplotlib.pyplot as plt
import numpy as np
x = []
y = []
with open ( "Points.txt","r") as f:
    for line in f:
        x.append(line.split()[0])
        y.append(line.split()[1])
x = list(map(int, x))
y = list(map(int, y))
plt.figure(figsize=(10,10))
plt.gca().set_aspect("equal")
plt.plot(x,y,'ro')
plt.axis([-15, 15, -15, 15])
j = open ("Lines.txt")
z = []
myReadLine = j.readline()
for i in range (6):
    z.append(myReadLine.split()[i])
z = list(map(int, z))
poly = np.poly1d(z)
plt.plot(i,poly(i))
plt.show()
j.close()
</code></pre>
<p>Some input data for Points.txt:</p>
<pre><code>-2 1
8 0
1 -3
-7 -7
</code></pre>
<p>Some input data for Lines.txt:</p>
<pre><code>6 4 1 1 -3 -5 
10 -5 -9 -10 1 -3 
9 3 -9 -1 1 5 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to give the <code>poly</code> object more than one x-coordinate to plot, the line</p>
<pre><code>plt.plot(i,poly(i), label="Poly")
</code></pre>
<p>will plot the point <code>(i, poly(i)</code> (this is a single point because <code>i</code> is a single scalar), this is the same as plotting (x, f(x)). You need to give an array-like object in order to plot the polynomial over a given range. Changing the above line to something like</p>
<pre><code>xi = np.linspace(-15,15, 200)
plt.plot(xi,poly(xi))
</code></pre>
<p>Will give you this (label included for demonstration):</p>
<p><a href="https://i.stack.imgur.com/7b33z.png" rel="nofollow noreferrer"><img alt="Polynomial and data" src="https://i.stack.imgur.com/7b33z.png"/></a></p>
<p>Which I believe is what you are looking for.</p>
</div>
<span class="comment-copy">Welcome to Stack Overflow. Since this is your first question, I would recommend you to please read <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>. Now giving you some hints: Read the coefficients from your second file and pass that list of coefficients to NumPy's <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.poly1d.html" rel="nofollow noreferrer"><code>poly1d</code></a>. It will return a polynomial expression. Then you can do <code>plt.plot(x, polynomial(x))</code> where <code>polynomial = np.poly1d(list_of_coefficients)</code> to plot the polynomial in the same graph as x and y</span>
<span class="comment-copy">I used np.poly1d to get the polynomial correctly, but when I use plt.plot(z,np,poly1d(z)) i get just a straight line not the actual polynomial</span>
<span class="comment-copy">You should use <code>poly= np,poly1d(z)</code> and then <code>plt.plot(x, poly(x))</code></span>
<span class="comment-copy">I used the following: <code>z = list(map(int, z)) poly = np.poly1d(z) plt.plot(x,poly(x))</code> But it still draws not the correct thing</span>
<span class="comment-copy">We can't find the error unless we have the data. You can share some few lines of your both files in your question so that people can run your code. Otherwise, it is impossible to know what is appearing on your laptop/desktop by just reading your comments</span>
