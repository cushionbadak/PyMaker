<div class="post-text" itemprop="text">
<p>I'm quite sure that there is a very easy way to do this but I was not able to find it so far</p>
<h1>Problem</h1>
<p>I have two tensors. </p>
<p>One has a probability for each action across a batch. Thus, it has size <code>N times M</code> where N is the batch size and M is the number of possible actions. This is called <code>action_probs</code></p>
<p>As my agent can do multiple actions, my other tensor has ones for actions that had been chosen and zero otherwise. This has the same dimension as <code>action_probs</code> and is called <code>action</code>.</p>
<p>I want to output, for each batch, the probability of choosing those actions. The probability for each batch is the product of the probabilities of the picked indices.</p>
<h1>Attempted failed methods</h1>
<p>I tried to first create a mask and then conduct <code>tf.reduce_prob</code> over the whole thing like as follows</p>
<pre><code>ones = tf.ones_like(action)
mask = tf.equal(action, ones)
action_probs_masked = tf.boolean_mask(action_probs, mask)
picked_action_probs = tf.reduce_prod(action_probs_masked, axis = 1)
</code></pre>
<p>However, as the boolean mask does not return a 2d array, this was not successful.
I tried next to loop over each index using <code>tf.while_loop</code> but the code became too complicated and filled with bugs so I was not able to continue.</p>
<h1>Example</h1>
<p>Input</p>
<pre><code>action = [[0.0,0.0,1.0,1.0], [1.0,0.0,1.0,1.0]]
action_probs = [[0.9, 0.8, 0.4, 0.5], [0.5, 0.7, 0.6, 0.4]]
</code></pre>
<p>Output</p>
<pre><code>output = [0.2,0.12] 
</code></pre>
<p>which is given by
[0.4*0.5, 0.5*0.6*0.4]</p>
<p>If anything is unclear please tell me in the comments! </p>
</div>
<div class="post-text" itemprop="text">
<p>You can mask <code>action_probs</code> to 1 when <code>action=0</code>.</p>
<pre><code>import tensorflow as tf

action = tf.constant([[0.0,0.0,1.0,1.0], [1.0,0.0,1.0,1.0]],dtype=tf.float32)
action_probs  = tf.constant([[0.9, 0.8, 0.4, 0.5], [0.5, 0.7, 0.6, 0.4]],dtype=tf.float32)

action_probs_mask = tf.where(tf.equal(action,1),action_probs,tf.ones_like(action_probs))
result = tf.reduce_prod(action_probs_mask,axis=1)

with tf.Session() as sess:
    print(sess.run(result))

[0.2  0.12]
</code></pre>
</div>
<span class="comment-copy">Can you give an example of input and except output?</span>
<span class="comment-copy">@giser_yugang Thanks for the suggestion. I did!</span>
