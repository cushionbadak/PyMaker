<div class="post-text" itemprop="text">
<p>I have a text in file "File1" that contains the below text:</p>
<pre><code>-Accounting  
-HR

Some text  

-IT  
--Networks   
--Storage  
--DBA  
</code></pre>
<p>I need a piece of code that will read File1 line by line and replace "-" and "--" with appropriate HTML tags and save the end result shown below in a text file File2</p>
<pre><code>&lt;ul&gt;
&lt;li&gt;Accounting&lt;/li&gt;
&lt;li&gt;HR&lt;/li&gt;
&lt;/ul&gt;

Some text

&lt;ul&gt;&lt;li&gt;IT
       &lt;ul&gt;
          &lt;li&gt;Networks&lt;/li&gt;
          &lt;li&gt;Storage&lt;/li&gt;
          &lt;li&gt;DBA&lt;/li&gt;
         &lt;/ul&gt;
         &lt;/li&gt;&lt;/ul&gt;
</code></pre>
<p>So far I tried the code below. </p>
<p>I set two booleans that are used to check if the current line contains "-" or "--" to False initially. If there is a "-" or "--" in the current line then code adds appropriate tags in the beginning of the line, changes booleans to True and goes to the next line. </p>
<p>Now booleans are used to see if there was "-" or "--" in the previous line, if there were dashes it will add appropriate tags to the beginning of the line which should be in the previous line but we're already in the next line so. The other way would be to check if the next line starts with "-" or "--" but I am not sure how to. When I use next() the line is skipped. Would reading from two files at the same time with one being one line ahead and checking what it has in that next line be a better solution?  </p>
<pre><code>    single_dash_prev_line = False
    double_dash_prev_line = False
    for line in File1:
        current_line = line

        if line[0] == "-":
            if line[1] != "-":
                if single_dash_prev_line == False:
                    new_line = "&lt;ul&gt;&lt;li&gt;" + current_line[1:]
                    File2.write(new_line)
                    single_dash_prev_line = True
                elif single_dash_prev_line == True:
                    new_line = "&lt;/li&gt;&lt;li&gt;" + current_line[1:]
                    File2.write(new_line)
                    single_dash_prev_line = True


            elif line[1] == "-":
                if single_dash_prev_line == True:
                    new_line = "&lt;ul&gt;&lt;li&gt;" + line[2:]
                    print(new_line)
                    File2.write(new_line)
                    double_dash_prev_line = True
                elif double_dash_prev_line == True:
                    new_line = "&lt;/li&gt;&lt;li&gt;" + line[2:]
                    File2.write(new_line)
                    double_dash_prev_line = True

        elif single_dash_prev_line == True:
            new_line = "&lt;/li&gt;&lt;/ul&gt;" + current_line[1:]
            File2.write(new_line)
            single_dash_prev_line = False
        elif double_dash_prev_line == True:
            new_line = "&lt;/li&gt;&lt;/ul&gt;" + current_line[1:]
            File2.write(new_line)
            single_dash_prev_line = False

        else:
            single_dash_prev_line = False
            double_dash_prev_line = False
            File2.write(current_line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The code below did what I needed.</p>
<pre><code>with open("finalfile.txt", 'w', encoding='utf-8') as File2, open("test.txt", "r", encoding='utf-8') as File1:
previous_line = ""
new_line = ""
double_dash_prev_line = False
single_dash_prev_line = False
for line in File1:
    current_line = line
    if line[0] == "-":
        if line[1] != "-":
            if single_dash_prev_line == False and double_dash_prev_line == False:
                new_line = "&lt;ul&gt;&lt;li&gt; " + current_line[1:]
                File2.write(new_line)
                single_dash_prev_line = True
                double_dash_prev_line = False
            elif single_dash_prev_line == True:
                new_line = "&lt;/li&gt;&lt;li&gt; " + current_line[1:]
                File2.write(new_line)
                single_dash_prev_line = True
                double_dash_prev_line = False
            elif double_dash_prev_line == True:
                new_line = "&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt; " + current_line[1:]
                File2.write(new_line)
                single_dash_prev_line = True
                double_dash_prev_line = False


        elif line[1] == "-":
            if single_dash_prev_line == True:
                new_line = "&lt;ul&gt;&lt;li&gt; " + line[2:]
                File2.write(new_line)
                double_dash_prev_line = True
                single_dash_prev_line = False
            elif double_dash_prev_line_line == True:
                new_line = "&lt;/li&gt;&lt;li&gt; " + line[2:]
                File2.write(new_line)
                double_dash_prev_line = True
                single_dash_prev_line = False
    elif single_dash_prev_line == True:
        new_line = "&lt;/li&gt;&lt;/ul&gt; " + current_line[1:]
        File2.write(new_line)
        single_dash_prev_line = False
        double_dash_prev_line = False
    elif double_dash_prev_line_line == True:
        new_line = "&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt; " + current_line[1:]
        File2.write(new_line)
        double_dash_prev_line = False
        single_dash_prev_line = False
    else:
        single_dash_prev_line = False
        double_dash_prev_line = False
        File2.write(current_line)
</code></pre>
</div>
<span class="comment-copy">Just learn how to write content to a file, then write content to a file named <code>index.html</code>. You can write HTML tags to that file :)</span>
<span class="comment-copy">Seb_ what did you try to do in solving this problem? We wan't to help make you a better programmer. So please show us what you tried. Assuming you don't know, I'll give you a hint: loop over de lines in the textfile, regex the "-" and substitute with place holders.</span>
<span class="comment-copy">@duhaime sorry should have been more clear. I know how to write to a file. I know how to add tags. But I have thousands of such text files which I will have to add HTML tags to so there is no option to add manually and would have done it already had it been a few pages.</span>
<span class="comment-copy">@Seb_ just read each of your files and generate a new corresponding html file--don't write html into the input files, generate new output files with your markup...</span>
<span class="comment-copy">@duhaime I think I wasn't clear again. What I need here is the logic that will be adding the appropriate tags depending on what in current and previous line. Or it could be rewritten to check current line and the next but I am not sure about this option because as I said the next() goes to the next line. Or perhaps reading from two files would be an option</span>
