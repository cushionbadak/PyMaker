<div class="post-text" itemprop="text">
<p>I need to classify timestamps based on the hour, for example if it is between 7 AM and 9 AM, it will be morning. I have timestamps that I take from my csv file and I need to get only hour so I can classify the number with if statements.</p>
<p>I will take the timestamps from <strong>date</strong> column and create a new column named <strong>hour</strong>, </p>
<pre><code>df['hour'] = df.date.dt.hour
</code></pre>
<p>but it gives me the following error: <strong>AttributeError: Can only use .dt accessor with datetimelike values</strong></p>
<p>Timestamps are like the following: 2016-03-14 17:24:55</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what kind of object is <code>df</code> but you could convert timestamps to <code>datetime</code> objects and then use attributes of datetime objects to access timestamp attributes:</p>
<pre><code>from datetime import datetime

d = datetime.strptime('2016-03-14 17:24:55', '%Y-%m-%d %H:%M:%S')
df['hour'] = d.hour
</code></pre>
<p>You can read more about <code>datetime</code> module <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">at this link</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You need to create a <code>datetime</code> object with the timestamp string extracted from your CSV input data:</p>
<pre><code>In [1]: import datetime

In [2]: s = '2016-03-14 17:24:55'

In [3]: d = datetime.datetime.fromisoformat(s)

In [4]: d.hour
Out[4]: 17
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert your 'date' columnn to a datatime object first:</p>
<pre><code>df['date'] = pd.to_datetime(df['date'], format='%Y-%m-%d %H:%M:%S')
df['hour'] = df['date'].dt.hour
</code></pre>
</div>
<span class="comment-copy">you have to first convert date-column to datetime like this:  df['date'] = pd.to_datetime(df['date'])</span>
