<div class="post-text" itemprop="text">
<p>I read the scipy docs for the function here : <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.uniform_filter1d.html" rel="nofollow noreferrer">scipy.ndimage.uniform_filter1d</a>. However, when I tried using it, I couldn't wrap around my head on it's working. I read the docs, ran the example over there in the Python Shell, used my own example but still no progress. 
For eg:</p>
<pre><code>&gt;&gt;&gt; from scipy.ndimage import uniform_filter1d
&gt;&gt;&gt; uniform_filter1d([2, 8, 0, 4, 1, 9, 9, 0], size=3)
array([4, 3, 4, 1, 4, 6, 6, 3])
&gt;&gt;&gt; uniform_filter1d([1, 2, 3, 4, 5, 6, 7, 8], size=3)
array([1, 2, 3, 4, 5, 6, 7, 7])
</code></pre>
<p>When I saw the output of the second array, it felt like the function retained most of the array's elements. However in the second example it felt like barring 4 &amp; 1 all the other elements in the output array were completely new.</p>
<p>Thus I request you to help me understand the working and the use of this function.</p>
</div>
<div class="post-text" itemprop="text">
<p>What this filter does is, according to size, to take the arithmetic average of each pixel with its neighbor. Size is the size of the sub-array to calculate arithmetic average. The standard for pixels without enough neighbors is to reflect. Let us go its process:</p>
<pre><code>uniform_filter1d([1,2,3,4,5,6], size=3)

[1,2,3,4,5,6] # index 0, Reflect 1 : [1,1,2] -&gt; average: 4/3 = 1
[1,2,3,4,5,6] # index 1, [1,2,3] -&gt; average: 6/3 = 2
[1,2,3,4,5,6] # index 2, [2,3,4] -&gt; average: 9/3 = 3
[1,2,3,4,5,6] # index 3, [3,4,5] -&gt; average: 12/3 = 4
[1,2,3,4,5,6] # index 4, [4,5,6] -&gt; average: 15/3 = 5
[1,2,3,4,5,6] # index 5, Reflect 6 : [5,6,6] -&gt; average: 17/3 = 5

Result: [1,2,3,4,5,5]
</code></pre>
</div>
<span class="comment-copy">Thankyou for the crisp explaination.</span>
