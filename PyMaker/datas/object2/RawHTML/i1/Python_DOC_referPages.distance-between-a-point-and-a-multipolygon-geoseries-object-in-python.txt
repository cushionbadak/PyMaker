<div class="post-text" itemprop="text">
<p>I want to calculate the distance of a point from the Multiploygon geoseries object created using cascaded_union function of GeoPandas. Following is my code:</p>
<pre><code>import numpy as np
import pandas as pd
import geopandas as gpd
from shapely.ops import cascaded_union
from matplotlib import pyplot as plt
from shapely.geometry import LineString, Point, MultiPoint

fp = "\\TM_WORLD_BORDERS-0.3\\TM_WORLD_BORDERS-0.3.shp"
data = gpd.read_file(fp)

mycountries = ['Canada','Russia']

req_data = data[data.NAME.isin(mycountries)]
req_data = req_data.reset_index()
req_data = req_data.drop('index',axis=1)

polygons = [req_data['geometry'][0],req_data['geometry'][1]]
boundary = gpd.GeoSeries(cascaded_union(polygons))
boundary.plot(color = 'black')
plt.show()
</code></pre>
<p>I require that when I calculate the distance of a point from the multipolygon, it should consider the closest country/polygon and the distance should be in miles/kms. Any help around this will be really appreciated.</p>
<p>I tried using distance function but the result which I am getting is not correct. Moreover, if I consider point somewhere in Indian Ocean, it gives result as 0 which is again not what I require.</p>
<p>Shape file can be downloaded from the <strong>TM_WORLD_BORDERS-0.3.zip</strong> file available at <strong><em><a href="http://thematicmapping.org/downloads/world_borders.php" rel="nofollow noreferrer">http://thematicmapping.org/downloads/world_borders.php</a></em></strong></p>
</div>
<div class="post-text" itemprop="text">
<p>here one solution using Point.distance:</p>
<pre><code>from shapely.geometry import Point
point = Point(34.23, 86.44)
dist={}
for index, row in req_data.iterrows():
    if row.geometry.geom_type == 'MultiPolygon':
        for  r in row.geometry:
            print(row.NAME,'  dist', point.distance(r))
            if row.NAME in dist:
                l = dist[row.NAME];l.append(point.distance(r))
                dist[row.NAME] = l
            else:
                dist[row.NAME] = [point.distance(r)]
    else: #Polygon
        print(row.NAME,'  dist', point.distance(row.geometry))
        dist[row.NAME] = [point.distance(row.geometry)]


for x in dist:
    print(x, min(dist[x]))
</code></pre>
<p>output: min distance from each country</p>
<pre><code> Canada 95.0619464401356
 Russia 12.118509615115519
</code></pre>
</div>
<span class="comment-copy">How do you define your distance from a point to a multipolygon?</span>
<span class="comment-copy">I define distance from a point to a multipolygon as the minimum distance between the point and the nearest point on the boundary of the nearest polygon present in the plane of multipolygon. I hope this answer your question.</span>
<span class="comment-copy">I am trying to calculate the distance from point (52.2605,-50.581). Ideally, this point is very close to Canada, but the answer which I am getting is Canada : 143.34 and Russia : 91.88. Also, I am assuming the distance is in degrees and 1 degree ~ 69 miles. Right?</span>
<span class="comment-copy">The distance is 60 miles nautic for 1 degree, its an approximation because the calculated distance is an euclidian distance of the orthogonal projection of the world (you are using). If you want a better precision, you have to transform all points (lat,long) in cartesian coord (x,y,z).  But that means to transform all yours multipolygons to polygons and finally to points -&gt; long very, long time....</span>
