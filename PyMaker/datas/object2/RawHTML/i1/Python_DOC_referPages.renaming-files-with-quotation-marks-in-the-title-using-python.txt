<div class="post-text" itemprop="text">
<p>I know similar questions have been asked a few times on this site, but the solutions provided there did not work for me.</p>
<p>I need to rename files with titles such as</p>
<pre><code>a.jpg
'b.jpg'
c.jpg
"d.jpg"
</code></pre>
<p>to </p>
<pre><code>a.jpg
b.jpg
c.jpg
d.jpg
</code></pre>
<p>Some of these titles have quotation marks inside the title as well, but it doesn't matter whether they get removed or not.</p>
<p>I have tried </p>
<pre><code>import os
import re

fnames = os.listdir('.')
for fname in fnames:
   os.rename(fname, re.sub("\'", '', fname))
</code></pre>
<p>and </p>
<pre><code>import os
for file in os.listdir("."):
  os.rename(file, file.replace("\'", "")) 
</code></pre>
<p>to then do the same for the " quotation mark as well, but the titles remained unchanged. I think it might be due to listdir returning the filenames with ' quotation marks around them, but I am not sure.</p>
<p>Edit: I am working on a Ubuntu 18.04.</p>
</div>
<div class="post-text" itemprop="text">
<p>On windows, a filename with double quotes in it isn't a valid filename. However, a filename with single quotes is valid.</p>
<p>A string with double quotes in it in python would look like:</p>
<pre><code>'"I\'m a string with a double quote on each side"'
</code></pre>
<p>A string with single quotes in it in python would look like:</p>
<pre><code>"'I\'m a string with a single quote on each side'"
</code></pre>
<p>Because you can't have a double-quote filename on windows, you can't <code>os.rename('"example.txt"', "example.txt")</code>. Because it can't exist to even be renamed.</p>
<p>You can put this script on your desktop and watch the filenames change as it executes:</p>
<pre><code>import os

open("'ex'am'ple.t'xt'",'w')
input("Press enter to rename.")
#example with single quotes all over the filename
os.rename("'ex'am'ple.t'xt'", "example.txt")

open("'example.txt'",'w')
input("Press enter to rename.")
#example with single quotes on each side of filename
os.rename("'example2.txt'", "example2.txt")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is my attempt using a for-loop, like you do and list comprehension used on the string, which is also an iterable.</p>
<pre><code>import os

files = os.listdir(os.getcwd())
for file in files:
    new_name = ''.join([char for char in file if not char == '\''])
    print(new_name)
    os.rename(file, new_name)
</code></pre>
<p>Edit the forbidden_chars list with the characters, that you do not want in the future filename.
Remember that this will also change folder names afaik, so you may want to check at the start of the for-loop
    if os.isfile(file):
before changing the name.
I actually do not understand how you would have filenames, that include the extension inside of quotation marks, but this should work either way. I highly recommend being careful if you want to remove dots. 
I also recommend peeking at the documentation for the os module, before using its functions as they can do things you may not be aware of. For example: renaming to an existing filename within the directory will just silently replace the file.</p>
</div>
<span class="comment-copy">what is your operating system?</span>
<span class="comment-copy">it works on windows, what is the current directory? can you print the files you're trying ot rename?</span>
<span class="comment-copy">I am working on an Ubuntu server. There's neither rename installed nor do I have the rights to install it, so I opted for Python. I have just tried to print the new file names and they seem to be corrected properly, but the filenames remain unchanged.</span>
<span class="comment-copy">Works on Ubuntu 18.04 desktop with  Python 3.7. What do you mean corrected properly but remain unchanged?</span>
<span class="comment-copy">I mean that if I print the changed filenames then the quotation mark is removed properly, but if I check the directory they are still unchanged.</span>
<span class="comment-copy">I am working on a ubuntu 18.04, should have clarified that in the post, sorry.</span>
<span class="comment-copy">@Shikah If filenames with double quotes are valid in Ubuntu then os.rename('"example.txt"', "example.txt") should work.</span>
<span class="comment-copy">I am getting "TypeError: rename: dst should be string, bytes or os.PathLike, not list" with this solution.</span>
<span class="comment-copy">I think the file in files is no string, so the list comprehension doesn't create a new string. Does adding file = str(file) to the top of the for-loop solve your issue?</span>
<span class="comment-copy">Sadly no, still same error message :(</span>
<span class="comment-copy">Use str.join on the list</span>
<span class="comment-copy">That works! I should have tested my code properly. That is my fault. I updated the code sample. I removed the list of forbidden characters, but i am sure you can do that yourself by now.</span>
