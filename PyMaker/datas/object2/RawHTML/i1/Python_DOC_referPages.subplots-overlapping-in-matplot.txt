<div class="post-text" itemprop="text">
<p>What I am trying to do is to display 3 images (columns) as subplots in every row, the images are getting displayed but are overlapping against each other. I have tried manually tweaking them but the number of rows in my subplots depends on a "n" value so manually tweaking for every n is not possible. I have tried "fig.tight_layout()" but in vain.</p>
<p>Any ideas on how to overcome this??</p>
<pre><code>    coeffs=coeffs[1:][::-1]

for i,v in enumerate(coeffs,1):
    toWork=[v[0], v[1], v[2]]
    for j,a in enumerate(toWork):
        ax = fig.add_subplot(i, 3, j+1)
        ax.imshow(a, interpolation="nearest", cmap=plt.cm.gray)
        ax.set_title(titles[j]+str(i), fontsize=10)
        ax.set_xticks([])
        ax.set_yticks([])
        # fig.tight_layout()
# plt.subplots_adjust(top=1,bottom=0,left=0.10,right=0.95,hspace=0.1,wspace=100)
plt.subplot_tool()
plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not entirely clear from you description. Please provide a <a href="https://stackoverflow.com/help/mcve">minimal an verifiable example</a>. However, judging from you code you are creating different number of rows with the <code>i</code> variable, which I think is not intended. From the <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.subplot.html" rel="nofollow noreferrer">docs</a> we can see how subplots work</p>
<p><a href="https://i.stack.imgur.com/gn5KQ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/gn5KQ.png"/></a></p>
<pre><code>import matplotlib.pyplot as plt
fig = plt.figure()
nrows, ncols = 3, 3 # total of 9 plots
for idx in range(9):
    ax = fig.add_subplot(nrows, ncols, idx + 1)
    ax.text(0.5, 0.5, idx)
fig.show()
</code></pre>
<p>So we predefine the number of columns and rows and then index into the correct subplot we want to use. I think what you are doing is redefining subplots on the same figure, causing the overlapping.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try plt.tight_layout()   This will flatten your figure and make figures neat.</p>
</div>
<span class="comment-copy">Consider creating all axes at the start, e.g <code>fig, axes = plt.subplots(ncols=3, nrows=n)</code>. Then you can loop over the the two variabels, indexing the axes <code>axes[i,j]</code>, or directly or directly looping over the axes, <code>for i, ax in enumerate(axes.flat): ..</code>.</span>
<span class="comment-copy">can you please explain a bit more?? how exactly should the plot syntax be??</span>
<span class="comment-copy">never mind, thank you managed to fix it, did what you said indexed them with two variables as opposed to the iterating the object itself.</span>
<span class="comment-copy">Just some advice: <code>toWork = v[:3]</code></span>
<span class="comment-copy">Thanks Paul!! also is slicing a list faster than manual indexing?? if its 'timeit' compassion worthy then let me know!!</span>
<span class="comment-copy">so I nest my two for loops inside the new for loop you are suggesting ??</span>
<span class="comment-copy">No I am saying <code>fig.add_subplot(i, 3, j+1)</code> this line in your code is causing the overlaps. You need to index into your plots differently (hint: combine i and j and use it where you use j)</span>
<span class="comment-copy">I managed to get around that, I followed @ImportanceOfBeingErnest and that workaround helped me do it, thanks!!</span>
<span class="comment-copy">Can you accept the answer? As it it literally why my example illustrates...</span>
<span class="comment-copy">done, thanks again</span>
