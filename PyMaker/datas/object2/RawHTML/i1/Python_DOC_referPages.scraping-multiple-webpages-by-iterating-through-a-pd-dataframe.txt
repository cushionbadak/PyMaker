<div class="post-text" itemprop="text">
<p>I am trying to scrape a set of webpages by iterating through a Pandas dataframe ("names") which contains first and last names to be inserted into webpage URLs.</p>
<p>I have set up empty lists ("collab", "freq") to be populated with data extracted from each webpage.  My code successfully extracts data to populate these lists when I scrape only a single webpage.  But if I iterate through more than one webpage, I end up with empty lists.</p>
<p>I have the feeling the problem lies with my for loop.  Could anybody help me figure out what is going wrong?</p>
<pre><code>import pandas as pd
from urllib.request import urlopen
from bs4 import BeautifulSoup
import re
import requests
import time

first_names = pd.Series(['Ernest', 'Archie', 'Donald', 'Charles', 
'Ralph'], index = [0, 1, 2, 3, 4])
last_names = pd.Series(['Anderson', 'Higdon', 'Rock', 'Thorne', 
'Tripp'], index = [0, 1, 2, 3, 4])
names = pd.DataFrame(columns = ['first_name', 'last_name'])
names['first_name'] = first_names
names['last_name'] = last_names

collab = []
freq = []

for first_name, last_name in names.iterrows():
    url = "https://zbmath.org/authors/?q={}+{}".format(first_name, 
    last_name)
    r = requests.get(url)
    html = BeautifulSoup(r.content)
    coauthors = html.find_all('div', class_='facet1st')
    coauthors=str(coauthors)
    frequency = re.findall('Joint\sPublications"&gt;(.*?)&lt;/a&gt;', coauthors)
    freq.append(frequency)
    collaborators = re.findall('Author\sProfile"&gt;\n(.*?)&lt;/a&gt;', 
    coauthors)
    collaborators = [x.strip(' ') for x in collaborators]
    collab.append(collaborators)
    time.sleep(1)

print(collab)
</code></pre>
<p>[[], [], [], [], []]</p>
</div>
<div class="post-text" itemprop="text">
<p>Be careful with re-assignment.  Although <code>re.findall()</code> returns a list, and <code>collaborators</code> is used in a list comprehension whose results are then assigned to <code>collaborators</code> is going to make trouble if/when those data structures are modified while being read.  Though that is not the primary problem.</p>
<p><code>collab</code> is an empty list of lists because the page scraping is not successful. </p>
<p>The root issue is the usage of <code>DataFrame.iterrows()</code>.  The doc shows that it returns an index and then data, as would be pythonically expected.</p>
<p>So check the return values you are looping over from <code>names.iterrows()</code>.</p>
<p><code>DataFrame.iterrows</code> returns the 'row' which is really a <code>pandas.Series</code>.  So, you will need to access <code>first_name</code> and <code>last_name</code> from the series.</p>
<p>The unpack values <code>first_name</code> and <code>last_name</code> are:</p>
<pre><code>for first_name, last_name in names.iterrows():
    print (i, type(data))

0 &lt;class 'pandas.core.series.Series'&gt;
1 &lt;class 'pandas.core.series.Series'&gt;
2 &lt;class 'pandas.core.series.Series'&gt;
3 &lt;class 'pandas.core.series.Series'&gt;
4 &lt;class 'pandas.core.series.Series'&gt;
</code></pre>
<p><code>last_name</code> is a series in which you will find <code>first_name</code> and <code>last_name</code></p>
<p>This doc <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iterrows.html" rel="nofollow noreferrer">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iterrows.html</a> shows usages of <code>iterrows()</code> and that the user of it might wish to consider <code>itertuples()</code>.</p>
</div>
<span class="comment-copy">Hi Julia, welcome to SO.  Please see: <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a>. It would be helpful to have a working example that people who can answer can copy/paste and run on their side.</span>
<span class="comment-copy">One problem that often occurs with this type of scraping is sending too many requests in too short a time, resulting in the page rate limiting your IP or session. It might be worthwhile to check for a proper response code, and maybe include some intervals with time.sleep</span>
<span class="comment-copy">Thanks very much Rich!  I appreciate this.  I'll try some print debugging first and then if it doesn't work then I'll update my question with a working dataframe for names so others can try out the code.  I appreciate the fast and thorough response and will update when I figure something out!!</span>
<span class="comment-copy">FYI I've just edited my question so the code is runnable.</span>
<span class="comment-copy">Thanks, however I wrecked my python environment on my Mac tonight, and it will be hours of figuring out what I just did. :-(</span>
<span class="comment-copy">Oh no!  Good luck... that is a huge pain.</span>
<span class="comment-copy">Thanks. Your answer is above.  I'm not providing the code change, but you should be able to follow along and make the correction on how you are looping over the DataFrame rows that <code>iterrows()</code> yields.  Read up on python generators and yield.</span>
