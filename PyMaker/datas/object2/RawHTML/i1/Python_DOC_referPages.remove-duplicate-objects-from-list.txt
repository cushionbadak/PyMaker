<div class="post-text" itemprop="text">
<p>I'd like to use Python's built-in set class with a custom class that I've created.  If I want
to create sets containing instances of my custom class, what functions do I need to implement so that I can perform tests, like set_a - set_b?</p>
</div>
<div class="post-text" itemprop="text">
<p>It will work out of the box, however, there might be cases, when it makes sense to overload <a href="https://docs.python.org/3.4/reference/datamodel.html#object.__eq__" rel="noreferrer"><code>__eq__</code></a>, <a href="https://docs.python.org/3.4/reference/datamodel.html#object.__ne__" rel="noreferrer"><code>__ne__</code></a> and <a href="https://docs.python.org/3.4/reference/datamodel.html#object.__hash__" rel="noreferrer"><code>__hash__</code></a>. By default, <code>__eq__</code> will compare for object identity. This might not be what you want. In that case, you have to take care that equal object have equal hashes, and, ideally, not equal object have different hashes (although this is not required, it merely reduces collisions). You should always implement <code>__ne__</code> using <code>__eq__</code>, unless you have a specific reason to do otherwise (this is done to ensure logical consistency).</p>
<p>Also, when overloading <code>__hash__</code>, you have to take care that the hash does not change while the object is stored in a <code>set</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to support <code>-</code> operation for your <code>class</code>, you can do something like this :</p>
<pre><code>#!/usr/bin/python

class Test(object):
    def __init__(self, val):
        self.val = val
    def __sub__(self, y):
        return Test(self.val - y.val)

x = Test(10) - Test(5)
print x.val
</code></pre>
<p><code>__sub__</code> is called when <code>-</code> operation is performed.</p>
</div>
<span class="comment-copy">Thanks, @Space_C0wb0y.  The bit about <b>eq</b> and <b>hash</b> is what I need to know.</span>
<span class="comment-copy">@Danny: Glad to help. If an answer solves your problem, you can accept it using the tick on the left.</span>
<span class="comment-copy">OP is talking about set difference, not numeric subtraction.</span>
<span class="comment-copy">@sarah : OS asked about the functions that are needed to be implemented to use <code>-</code> operator.</span>
<span class="comment-copy">OS clearly asked for "set_a - set_b", i.e. difference of two sets of objects, not a function that emulates a simple substraction (your example of a.sub(b).. )</span>
