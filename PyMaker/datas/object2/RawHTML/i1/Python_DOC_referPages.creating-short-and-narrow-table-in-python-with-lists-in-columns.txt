<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22219004/grouping-rows-in-list-in-pandas-groupby">grouping rows in list in pandas groupby</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I currently have a dataset that I want to squash. For example, imagine that one column is <code>mother</code> and the other is <code>child</code>. Mothers might have more than one child, but each child only has one mother. So in my ideal output, there would be one row per mother, with the mother as one column and a list of children as the other. My current data instead has one row per child, with the mother duplicated. </p>
<p>I can do this in R, based on this very useful <a href="http://brooksandrew.github.io/simpleblog/articles/advanced-data-table/#columns-of-lists" rel="nofollow noreferrer">blog post</a>. So for example: </p>
<pre><code>library(data.table)
dt &lt;- data.table(mother = c("Penny", "Penny", "Anya", "Sam", "Sam", "Sam"), 
                 child = c("Violet", "Prudence", "Erika", "Jake", "Wolf", "Red"))
dt[, children := .(list(unique(child))), by = mother]
dt[, child := NULL]
dt &lt;- unique(dt, by = "mother")
</code></pre>
<p>My output looks like this: </p>
<pre><code>   mother        children
1:  Penny        Violet,Prudence
2:  Anya         Erika
3:  Sam          Jake,Wolf,Red
</code></pre>
<p>However, I am working in Python with pandas and I can't figure out something equivalent. I can see that it is possible to have a list in a pandas dataframe cell, but I'm not sure how to manipulate the existing data to produce this. Perhaps pandas is not the right thing to use but it seems like it would be. </p>
<p>Here's my dataframe as things stand: </p>
<pre><code>import pandas as pd
data = {'mother':["Penny", "Penny", "Anya", "Sam", "Sam", "Sam"],'child':["Violet", "Prudence", "Erika", "Jake", "Wolf", "Red"]}
df = pd.DataFrame(data)
</code></pre>
<p>Apologies if this is basic - I am new to Python and can't find the answer on here. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html" rel="nofollow noreferrer"><code>GroupBy</code></a> the column <code>mother</code> and aggregate with a <a href="https://docs.python.org/2.4/lib/string-methods.html" rel="nofollow noreferrer"><code>join</code></a> using <code>','</code> as a separator:</p>
<pre><code>df.groupby('mother').agg(','.join).reset_index()

   mother        child
0   Anya            Erika
1  Penny  Violet,Prudence
2    Sam    Jake,Wolf,Red
</code></pre>
<hr/>
<p>For lists instead of strings you can do:</p>
<pre><code>df.groupby('mother').child.apply(list).reset_index()

   mother           child
0   Anya             [Erika]
1  Penny  [Violet, Prudence]
2    Sam   [Jake, Wolf, Red] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also try this pivot solution. This will create a dataframe with the name of children in different column</p>
<pre><code>df = pd.DataFrame({'mother':("Penny", "Penny", "Anya", "Sam", "Sam", "Sam"),'child': ("Violet", "Prudence", "Erika", "Jake", "Wolf", "Red")}) 


df_group1 = df.pivot(index  = 'mother', values = 'child', columns = 'child').reset_index()
df_group1.columns = range(df_group1.shape[1])
</code></pre>
</div>
<span class="comment-copy">Thanks! Will values in the <code>child</code> column be treated as a list? It looks to me like this would combine them into a string, so the type is an object rather than a list. I still want to be able to manipulate the children-data in a list-like way, so via indexing for example...does that make sense?</span>
