<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26522997/convert-from-for-loops-to-while-loops">Convert from “For-loops” to “While-loops”</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>This is the for loop that I need to convert to a while loop. I thought this would work, but it is giving me an error of no attribute for move. This is a program that creates a graphics image of a face, so all 'shapes' in 'shapeList' are the head, nose, mouth, eyes. The face needs to move along the edges of the window.  </p>
<pre><code>def moveAll(shapeList, dx, dy):
    for shape in shapeList: 
        shape.move(dx, dy)    


def moveAll(shapeList, dx, dy): 
    shape = []
    while shape != shapeList:
        shapeList.append(shape)
        shape.move(dx, dy)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In the <code>while</code> loop version of your code, the <code>shape</code> variable is initialized as a list, so it naturally does not have a <code>move</code> method. To convert your <code>for</code> loop into a <code>while</code> loop that's basically about iterating over a list of shape objects, you can convert the list to a <code>collections.deque</code> object so that you can efficiently dequeue a queue of shape objects until it's empty:</p>
<pre><code>from collections import deque
def moveAll(shapeList, dx, dy):
    queue = deque(shapeList)
    while queue:
        shape = queue.popleft()
        shape.move(dx, dy)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe something like this?</p>
<pre><code>def moveAll(shapeList, dx, dy):
    while shapeList:
        shape = shapeList.pop(0)
        shape.move(dx, dy)
</code></pre>
<p>As long as the list has items, we remove one and process it.</p>
<p>The <code>for</code> loop is probably both more efficient and more idiomatic, though.</p>
</div>
<div class="post-text" itemprop="text">
<p>weird question, weird answer hehe</p>
<pre><code>def moveAll(shapeList, dx, dy): 
    try:
        ilist = iter(shapeList)
        while True:
            shape = next(ilist)
            shape.move(dx, dy)
    except:
        pass # done

</code></pre>
</div>
<span class="comment-copy">What are the inputs and the expected outputs?</span>
<span class="comment-copy">The <code>for</code> loop looks correct. Why change it?</span>
<span class="comment-copy">The for loop is correct. The assignment is to switch it to a while loop and I am stuck with attribute error.</span>
<span class="comment-copy">Well, <code>shapeList.append(shape)</code> is just appending <code>shape</code>, which is always <code>[]</code> , to <code>shapeList</code>, and you are calling <code>move(dx,dy)</code> on an empty list (namely, <code>[]</code>). That's why you got that error.</span>
<span class="comment-copy">What you should do is to repeatedly get an element out of <code>shapeList</code>, and call <code>move(dx,dy)</code> , until you've visited every element in <code>shapeList</code>.</span>
<span class="comment-copy">This works well, I do think there is another way, but thank you for this.</span>
<span class="comment-copy">Note that this mutates the incoming list, which might not be what one would expect here (OP’s for loop does not mutate it).</span>
<span class="comment-copy">True; a simple workaround is to copy <code>shapeList[:]</code> to another variable and then <code>pop</code> from that instead.</span>
<span class="comment-copy">This will fail if <code>move</code> returns anything other than a trueish value (e.g. <code>None</code> which would be somewhat likely).</span>
<span class="comment-copy">you are right haha. any idea on how to handle that?</span>
<span class="comment-copy">You will have to store the result of <code>next()</code> separately, and then call <code>move</code> on it. You’ll likely need a <code>while True</code> loop for that.</span>
<span class="comment-copy">ah! ok.........</span>
