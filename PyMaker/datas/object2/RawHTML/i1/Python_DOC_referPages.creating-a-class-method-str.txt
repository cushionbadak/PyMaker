<div class="post-text" itemprop="text">
<p>I am working on a program that needs a <strong>str</strong> method. However, when I run the code, it only outputs:</p>
<pre><code>What is the name of the pet: Tim
What type of pet is it: Turtle
How old is your pet: 6
</code></pre>
<p>How can I print out what I need from the str method?
Here is what I have.
<strong><em>This is the code for my class (classPet.py)</em></strong></p>
<pre><code>class Pet:
def __init__(self, name, animal_type, age):
    self.__name = name
    self.__animal_type = animal_type
    self.__age = age

def set_name(self, name):
    self.__name = name

def set_type(self, animal_type):
    self.__animal_type = animal_type

def set_age(self, age):
    self.__age = age

def get_name(self):
    return self.__name

def get_animal_type(self):
    return self.__animal_type

def get_age(self):
    return self.__age

def __str__(self):
    return 'Pet Name:', self.__name +\
           '\nAnimal Type:', self.__animal_type +\
           '\nAge:', self.__age
</code></pre>
<p><strong><em>This is the code for my main function (pet.py):</em></strong></p>
<pre><code>import classPet

def main():
    # Prompt user to enter name, type, and age of pet
    name = input('What is the name of the pet: ')
    animal_type = input('What type of pet is it: ')
    age = int(input('How old is your pet: '))

    pets = classPet.Pet(name, animal_type, age)
    print()

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In the code for your main function (pet.py), you are calling print without any parameters. You need to call print with your pet instance as a parameter:</p>
<pre class="lang-py prettyprint-override"><code>pets = classPet.Pet(name, animal_type, age)
print(pets)  # see here
</code></pre>
<p>You also need to fix an error in your <code>__str__</code> method:
the <code>__str__</code> method doesn't concatenate all of its arguments to a string like the <code>print()</code> function does it. Instead, it must return a single string.</p>
<p>In your <code>__str__</code> method you are seperating your different parts of the string by commas. This will make python think that it's dealing with a tuple. I propose the following solution using pythons <code>format</code> function:</p>
<pre class="lang-py prettyprint-override"><code>def __str__(self):
    return "Pet Name: {}\nAnimal Type: {}\nAge: {}".format(self.__name, self.__animal_type, self.__age)
</code></pre>
<p>The <code>{}</code> parts in the string are placeholders that are replaced with the arguments in the parenthesis through the <code>format</code> function. They are replaced in order, so the first one is replaced with <code>self.__name</code>, etc.</p>
</div>
<span class="comment-copy">And what did you <i>expect</i>? What do you think you're printing?</span>
<span class="comment-copy">Did you... forgot to <code>print(pets)</code> ..? You've just done <code>print()</code>..</span>
<span class="comment-copy">I get errors when I do that. TypeError: <b>str</b> returned non-string (type tuple)</span>
<span class="comment-copy">@Sleepy I edited my answer.</span>
