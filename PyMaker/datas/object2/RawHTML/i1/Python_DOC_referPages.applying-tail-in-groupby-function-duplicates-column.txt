<div class="post-text" itemprop="text">
<p>Consider the following MVCE</p>
<pre><code>import pandas as pd

data_in = [
  { 'company': 'A', 'time': 1552521600, 'interval': 'day',     'violations': 3, 'handled': 1800 },
  { 'company': 'A', 'time': 1552521600, 'interval': 'hour',    'violations': 0, 'handled': 400 },
  { 'company': 'A', 'time': 1552526100, 'interval': 'quarter', 'violations': 0, 'handled': 100 },
  { 'company': 'A', 'time': 1552528800, 'interval': 'hour',    'violations': 0, 'handled': 20 },

  { 'company': 'B', 'time': 1552521600, 'interval': 'hour', 'violations': 1, 'handled': 200 },
  { 'company': 'B', 'time': 1552525200, 'interval': 'hour', 'violations': 1, 'handled': 200 },
  { 'company': 'B', 'time': 1552526100, 'interval': 'quarter', 'violations': 0, 'handled': 50 },
  { 'company': 'B', 'time': 1552521600, 'interval': 'day', 'violations': 4, 'handled': 1400 },
]

df = pd.DataFrame(data_in).set_index(['company', 'time'])
df.sort_index(axis=0, inplace=True)

pv = df.pivot_table(index=['company', 'time'], columns='interval')
pv = pv.groupby(level=['company']).apply(lambda o: o.ffill()).groupby(level=['company']).tail(1)
print(pv)
</code></pre>
<p>Which prints</p>
<pre><code>                   handled                violations
interval               day   hour quarter        day hour quarter
company time
A       1552528800  1800.0   20.0   100.0        3.0  0.0     0.0
B       1552526100  1400.0  200.0    50.0        4.0  1.0     0.0
</code></pre>
<p>I'm trying to figure out if I can apply multiple operations in a single groupby. I figured this should work:</p>
<pre><code>pv = pv.groupby(level=['company']).apply(lambda o: o.ffill().tail(1))
</code></pre>
<p>Which does <em>almost</em> the same thing, but ends up duplicating the column that I grouped by.</p>
<pre><code>                           handled                violations
interval                       day   hour quarter        day hour quarter
company company time
A       A       1552528800  1800.0   20.0   100.0        3.0  0.0     0.0
B       B       1552526100  1400.0  200.0    50.0        4.0  1.0     0.0
</code></pre>
<p>How do I prevent it from duplicating the column?</p>
<p>I am aware that this is a bit of an X/Y problem, however I'm very curious about the root of this specific behavior.</p>
</div>
<div class="post-text" itemprop="text">
<p>For avoid this behaviour is necessary use parameter <code>group_keys=False</code> in <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html" rel="nofollow noreferrer"><code>DataFrame.groupby</code></a>:</p>
<blockquote>
<p>group_keys : bool, default <strong>True</strong></p>
<p>When calling apply, add group keys to index to identify pieces.</p>
</blockquote>
<pre><code>pv = pv.groupby(level=['company'], group_keys=False).apply(lambda o: o.ffill().tail(1))
print (pv)
                   handled                violations             
interval               day   hour quarter        day hour quarter
company time                                                     
A       1552528800  1800.0   20.0   100.0        3.0  0.0     0.0
B       1552526100  1400.0  200.0    50.0        4.0  1.0     0.0
</code></pre>
</div>
<span class="comment-copy">Oh, what a simple fix. Thanks!</span>
