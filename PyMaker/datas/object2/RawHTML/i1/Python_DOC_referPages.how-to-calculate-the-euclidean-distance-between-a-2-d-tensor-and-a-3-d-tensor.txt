<div class="post-text" itemprop="text">
<p>I have a 2-D tensor <strong>A</strong> with the shape of (?, <em>L</em>) which refers to the features obtained through the neural network (where '?' is the batch size),  and a 3-D tensor <strong>B</strong> with the shape of (<em>N</em>, <em>K</em>, <em>L</em>). Obviously, there are <em>N</em> arrays with the shape of (<em>K</em>, <em>L</em>) in <strong>B</strong>, which are called <strong>C</strong> here.</p>
<p>Now, how can I calculate the <strong>mean euclidean distance</strong> (average the distance of one row of <strong>A</strong> and each row of <strong>C</strong>) between each row of <strong>A</strong> and every <strong>C</strong> without iterations of every rows in  <strong>A</strong> and <strong>C</strong>, and finally return a vector with the shape of (?, <em>N</em>) ? </p>
<p>For example, when the <strong>A</strong> with shape of (1, <em>L</em>), the result can be obtained as follows:</p>
<pre><code>import tensorflow as tf

with tf.Graph().as_default(), tf.Session() as sess:
    A = tf.placeholder(tf.float32, [1, None])
    B = tf.placeholder(tf.float32, [None, None, None])
    dist = tf.reduce_mean(tf.norm(B - A, axis=2), axis=1)
    print(sess.run(dist, feed_dict={A: [[1, 2, 3]],
                                    B: [[[ 4,  5,  6], [ 7,  8,  9]],
                                        [[10, 11, 12], [13, 14, 15]]]}))
    # [ 7.7942286 18.186533 ]
</code></pre>
<p>I want to know that when A = ([[1, 2, 3], [4, 5, 6]]) (it is just an example of <strong>A</strong> with the shape of (2, 3)), how can I get the result of the question above with the shape of [2, 2] ?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import tensorflow as tf

with tf.Graph().as_default(), tf.Session() as sess:
    A = tf.placeholder(tf.float32, [1, None])
    B = tf.placeholder(tf.float32, [None, None, None])
    newA = tf.expand_dims(A, 0)
    dist = tf.reduce_mean(tf.norm(B - newA, axis=2), axis=1)
    print(sess.run(dist, feed_dict={A: [[1, 2, 3]],
                                    B: [[[ 4,  5,  6], [ 7,  8,  9]],
                                        [[10, 11, 12], [13, 14, 15]]]}))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem has been solved as follows:</p>
<pre><code>import tensorflow as tf

with tf.Graph().as_default(), tf.Session() as sess:
    a = tf.placeholder(tf.float32, [None, None])
    b = tf.placeholder(tf.float32, [None, None, None])
    a_exp = tf.expand_dims(tf.expand_dims(a, 1), 1)
    dist = tf.reduce_mean(tf.norm(b - a_exp, axis=3), axis=2)
    print(sess.run(dist, feed_dict={a: [[1, 2, 3], [4, 5, 6]],
                                    b: [[[ 4,  5,  6], [ 7,  8,  9]],
                                        [[10, 11, 12], [13, 14, 15]]]}))
    # [[ 7.7942286 18.186533 ]
    #  [ 2.598076  12.990381 ]]
</code></pre>
</div>
<span class="comment-copy">We need some data and code to reproduce your problem. In addition, your attempts to achieve your goal are also missing.</span>
<span class="comment-copy">I have clarified the problem and given an example, would you please help me solve it?</span>
<span class="comment-copy">I have tried it, but it didn't work well. Assuming that a = ([1, 2, 3], [4, 5, 6]) with a shape of (2, 3) when the batch_size = 2, while b remains the value above. It is supposed that I should get the result with the shape of (2, 2), of which the first row equals [7.7942286 18.186533 ] is the distance between [1, 2, 3] and the 3-D tensor denoted a, and the second row equals[ 2.598076 12.990381] is the distance between [4, 5, 6] and a. But the code above returns the result [5.196152 15.588457] with the shape of (1, 2), it is obviously not correct.</span>
