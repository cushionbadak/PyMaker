<div class="post-text" itemprop="text">
<p>I am trying to build a Python function that returns a string that contains every other character duplicated by the following algorithm:</p>
<pre><code>Index position * 2 + 2
</code></pre>
<p>for example: <code>Testing --&gt; TTssssssiiiiiiiiiigggggggggggggg</code></p>
<p>Below is my code but I get an error:</p>
<blockquote>
<p>IndexError: string index out of range </p>
</blockquote>
<p>Version A:</p>
<pre><code>def string_expansion(input_string):
i = 0
while i &lt; len(string):
    i += 1
    if input_string[::2] == string[i]:
        return input_string[i] * (i * 2) + 2
</code></pre>
<p>second version returns none when I pass an argument</p>
<p>Version B:</p>
<pre><code>def string_expansion(input_string):
i = 0
while i &lt; len(string):
    if input_string[::2] == string[i]:
        return input_string[i] * (i * 2) + 2
    i += 1
</code></pre>
<p>Any assistance would be greatly appreciated. Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I get your Question Correctly, you need to build and store string value during each iteration:</p>
<pre><code>def string_expansion(input_string):
    i = 0
    str=""
    while i &lt; len(input_string):
        str =str+input_string[i] * ((i * 2) + 2)
        i=i+2        
    print(str)
string_expansion("testing")
</code></pre>
<p><a href="https://i.stack.imgur.com/Bf0Cw.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Bf0Cw.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I would do it like this...</p>
<pre><code>def string_expansion(input_string):
    return ''.join([e[1]*(e[0]*2+2) for e in enumerate(input_string) if e[0]%2 == 0])

string_expansion('Testing')
'TTssssssiiiiiiiiiigggggggggggggg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def iter_tokens(inp):
    for ind, ch in enumerate(inp):
    if ind % 2 == 0:
        yield ch * (ind * 2 + 2)

# Call this one
def str_exp(inp):
    return ''.join(iter_tokens(inp))
</code></pre>
</div>
<span class="comment-copy">how are you defining the "string" variable?   Also if you're using step size of 2 on one string, while just a incrementing by 1 on the input_string, that could be the reason you're getting an index error.</span>
<span class="comment-copy">You are incrementing <code>i</code> too soon in the first version; <code>i = len(string) - 1</code> is the last valid string index, so <code>i + 1</code> is invalid.</span>
<span class="comment-copy">You're also returning too soon; you need to build up the return value during each iteration, <i>then</i> return the final result.</span>
