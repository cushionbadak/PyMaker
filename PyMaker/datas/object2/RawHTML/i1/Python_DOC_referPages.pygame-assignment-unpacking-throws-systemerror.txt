<div class="post-text" itemprop="text">
<p>I am facing a curious behaviour: assignment unpacking on a 2D vector works perfectly fine, until I subclass it.</p>
<pre><code>$ ipython
Python 3.6.7 (default, Oct 22 2018, 11:32:17) 
IPython 5.5.0 

pygame 1.9.4
Hello from the pygame community. https://www.pygame.org/contribute.html
In [1]: from pygame.math import Vector2

In [2]: a = Vector2(1,1)

In [3]: x,y = a

In [4]: class myvec(Vector2):
   ...:     pass
   ...: 

In [5]: b = myvec(1,1)

In [6]: z,w = b
---------------------------------------------------------------------------
SystemError                               Traceback (most recent call last)
&lt;ipython-input-6-dc661fdbb625&gt; in &lt;module&gt;()
----&gt; 1 z,w = b

SystemError: src/math.c:2954: bad argument to internal function
</code></pre>
<p>Can someone help me figure out what is happening here? Is it a pygame bug that I need to report somewhere else, or am I doing something wrong?</p>
<p>Fun fact: it worked perfectly fine for a while, then it suddenly started throwing this exception and there is no going back.</p>
</div>
<div class="post-text" itemprop="text">
<p>This may not be an answer but I made some checks starting from your example. For instance it does on the surface look like your two classes are at least a little different:</p>
<pre><code> &gt;&gt;&gt; [print(item) for item in dir(a) if item not in dir(b)]
 []
 &gt;&gt;&gt; [print(item) for item in dir(b) if item not in dir(a)]
 __dict__
 __module__
 __weakref__
 [None, None, None]
</code></pre>
<p>so it looks like inheritance does add something even though you're, on the surface, just making a copy of the old class. </p>
<p>So let's look at what the original class looks like from <a href="https://github.com/pygame/pygame/blob/master/src_c/math.c" rel="nofollow noreferrer">here</a>: </p>
<p>Welp, it's implemented in C. but the error does seem to point to line <code>2954</code>:</p>
<pre><code>    double *other_coords;
</code></pre>
<p>That has me stumped, but I would file this as an issue on the github or wait for the issue fix mentioned in the comment to be rolled out</p>
</div>
<span class="comment-copy">The ability for subclasses of pygame's Vectors to actually work right was only recently added (<a href="https://github.com/pygame/pygame/issues/552" rel="nofollow noreferrer">github.com/pygame/pygame/issues/552</a>).  It doesn't look like this fix has made it to any of the release versions yet.</span>
