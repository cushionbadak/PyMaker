<div class="post-text" itemprop="text">
<p>I am extracting features from Audio clips. In doing so for 1 clip a matrix of <code>20x2</code> dimension is obtained. I have around <code>1000</code> of such clips. I want to store all the data in 1 numpy array of dimension <code>20x2x1000</code>. Please suggest a method for the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>The function you're looking for is <code>np.stack</code>. It's used to stack multiple NumPy arrays along a new axis.</p>
<pre><code>import numpy as np

# Generate 1000 features
original_features = [np.random.rand(20, 2) for i in range(1000)]

# Stack them into one array
stacked_features = np.stack(original_features, axis=2)
assert stacked_features.shape == (20, 2, 1000)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a convenient function for this and that is <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.dstack.html" rel="nofollow noreferrer">numpy.dstack</a>. Below is a snippet of code for depth stacking of arrays:</p>
<pre><code># whatever the number of arrays that you have
In [4]: tuple_of_arrs = tuple(np.random.randn(20, 2) for _ in range(10))

# stack each of the arrays along third axis
In [7]: depth_stacked = np.dstack(tuple_of_arrs)

In [8]: depth_stacked.shape
Out[8]: (20, 2, 10)
</code></pre>
</div>
<span class="comment-copy"><code>np.array([list of clips])</code> will give you a (1000,20,2) array.  You could swap axes on that.  Or use <code>np.stack([list of clips], axis=2)</code>.</span>
