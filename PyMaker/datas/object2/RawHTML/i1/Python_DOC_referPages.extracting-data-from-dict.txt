<div class="post-text" itemprop="text">
<p>Here is an example of the data I'm working with. </p>
<pre><code>{'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/1v2mrzYSYG6onNLt2qTj13hkQZk"',
 'items': [{'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/Xy1mB4_yLrHy_BmKmPBggty2mZQ"',
            'id': '1',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Film &amp; Animation'}},
           {'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/UZ1oLIIz2dxIhO45ZTFR3a3NyTA"',
            'id': '2',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Autos &amp; Vehicles'}},
           {'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/nqRIq97-xe5XRZTxbknKFVe5Lmg"',
            'id': '10',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Music'}},
 'kind': 'youtube#videoCategoryListResponse'}
</code></pre>
<p>I'd like to extract 2 columns of data</p>
<ol>
<li>'id'</li>
<li>'title'</li>
</ol>
<p>I.e., from the first item, I would have <code>'id' = 1, 'title' = Film &amp; Animation</code></p>
<p>I'm very new to Python, what would be the best way to do this in Python? </p>
<p>Thank you all so much! </p>
</div>
<div class="post-text" itemprop="text">
<p>I think it's </p>
<pre><code>for it in data['items']:
  print(it['id'], it['snippet']['title'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>'items' is a list of object you can iterate through it via for loop:</p>
<pre><code>for item in your_data['items']:
    id = item['id']
    title = item['snippet']['title']
    print(id, title)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Guess there's a typo, <code>'items'</code> key, is a <code>list</code>, and whenever we start brackets (<code>[</code>) we need to close them (<code>]</code>). </p>
<pre class="lang-py prettyprint-override"><code>{'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/1v2mrzYSYG6onNLt2qTj13hkQZk"',
 'items': [{'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/Xy1mB4_yLrHy_BmKmPBggty2mZQ"',
            'id': '1',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Film &amp; Animation'}},
           {'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/UZ1oLIIz2dxIhO45ZTFR3a3NyTA"',
            'id': '2',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Autos &amp; Vehicles'}},
           {'etag': '"ld9biNPKjAjgjV7EZ4EKeEGrhao/nqRIq97-xe5XRZTxbknKFVe5Lmg"',
            'id': '10',
            'kind': 'youtube#videoCategory',
            'snippet': {'assignable': True,
                        'channelId': 'UCBR8-60-B28hp2BmDPdntcQ',
                        'title': 'Music'}},     # &lt;-----  HERE, no brackets
 'kind': 'youtube#videoCategoryListResponse'}
</code></pre>
<h2>List Comprehension</h2>
<pre class="lang-py prettyprint-override"><code># all items
[row for row in data['items']]   

# custom data from all items
[(row['id'], row['snippet']['title']) for row in data['items']]     

# just id &gt; 0 (filtering data)
[row for row in data['items'] if row['id']&gt;0]   
</code></pre>
<p>combine both filtering data extracting special fields: </p>
<pre class="lang-py prettyprint-override"><code>[(r['id'], r['snippet']['title']) for r in data['items'] if r['id'] &gt; 0]   
</code></pre>
<h2>Also give <code>filter</code> a Chance</h2>
<p><strong>it's really cool</strong></p>
<pre class="lang-py prettyprint-override"><code>f = lambda r: (r['id'], r['snippet']['title'])
result = filter(f, data['items'])
</code></pre>
</div>
<span class="comment-copy">That is not JSON, that's a dict.</span>
<span class="comment-copy">It's not so hard, <a href="https://www.youtube.com/watch?v=oQfNYqz8pLs&amp;t=937s" rel="nofollow noreferrer">check this video</a> for accessing nested dictionary keys</span>
<span class="comment-copy">Welcome to StackOverflow! That's great, that you've posted sample data, but please, add also your code snippets which you've been trying so far - to show your efforts and way, how you wanted to solve the issue.</span>
<span class="comment-copy">Thank you for your comments and recommendations, I'm new to both coding and Stack Overflow, so I will keep the above in mind in future.</span>
<span class="comment-copy">Thank you! I will give this a try. I really appreciate your time and effort.</span>
<span class="comment-copy">Thank you! I will give this a try. I really appreciate you taking the time to help me.</span>
<span class="comment-copy">Thank you for your comprehensive solutions! I'll give these a try. I am very very new to Python so I really appreciate this.</span>
