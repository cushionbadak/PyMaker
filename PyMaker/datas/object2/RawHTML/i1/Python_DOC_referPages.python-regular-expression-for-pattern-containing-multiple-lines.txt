<div class="post-text" itemprop="text">
<p>I want to extract all the text printed after "AAAAAAAAAAAAAAAAAA"</p>
<pre><code>Give me some text!
AAAAAAAAAAAAAAAAAA




        S
       p
      p
     p
Epppp
</code></pre>
<p>The following does not work:</p>
<pre><code>import re

m = re.findall(r'AAAAAAAAAAAAAAAAAA(.*)', result)

print m[0]
</code></pre>
<p>Also, can I specify a variable in a regular expression instead of a hard coded string: "AAAAAAAAAAAAAAAAAA"?</p>
<p>Reason being, the text: "AAAAAAAAAAAAAAAAAA" is a variable and changes. So, I would like to look for a specific variable value in the pattern and then extract all the text after it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>re.S</code> or <code>re.DOTALL</code> (they are synonyms) to have <code>findall</code> match across lines. Or, in your case, <code>search</code> is probably more appropriate since you only want one match. Also, to have it work for a non-hard-coded string, simply use string formatting or string concatenation. To avoid having unescaped regex characters in the string, run it through <code>re.escape</code>.</p>
<pre><code>import re

result = """Give me some text!
AAAAAAAAAAAAAAAAAA




        S
       p
      p
     p
Epppp"""

s = 'AAAAAAAAAAAAAAAAAA'
# With formatting
m = re.search(r'{}(.*)'.format(re.escape(s)), result, re.S)
# With concatenation
m = re.search(re.escape(s) + r'(.*)', result, re.S)

print m.group(1)
</code></pre>
</div>
<span class="comment-copy">Specify flag <code>re.DOTALL</code>. You can build your regular expression by concatenating string (variable)s together. Have a look at <code>re.escape</code> to avoid accidental metahcaracters in the string variable.</span>
