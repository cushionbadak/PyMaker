<div class="post-text" itemprop="text">
<p>The <code>gsutil</code> command has options to optimize upload/download speed for large files. For example</p>
<pre><code>GSUtil:parallel_composite_upload_threshold=150M
GSUtil:sliced_object_download_max_components=8
</code></pre>
<p>see <a href="https://cloud.google.com/blog/products/gcp/optimizing-your-cloud-storage-performance-google-cloud-performance-atlas" rel="nofollow noreferrer">this page</a> for reference.</p>
<p>What is the equivalence in the <code>google.cloud.storage</code> python API? I didn't find the relevant parameters in <a href="https://googleapis.github.io/google-cloud-python/latest/storage/blobs.html" rel="nofollow noreferrer">this document</a>.</p>
<p>In general, does the client API and <code>gsutil</code> have one to one correspondence in terms of functionalities? </p>
</div>
<div class="post-text" itemprop="text">
<p>I think it's not natively supported.</p>
<p>However (!) if you're willing to decompose files then use <code>threading</code> or <code>multiprocessing</code>, there is a <a href="https://googleapis.github.io/google-cloud-python/latest/storage/blobs.html#google.cloud.storage.blob.Blob.compose" rel="nofollow noreferrer"><code>compose</code></a> method that should help you assemble the parts into one GCS object.</p>
<p>Ironically, <code>gsutil</code> is written in Python but it uses a library <a href="https://github.com/GoogleCloudPlatform/gsutil/tree/0e629ab55032b799ec728c05a71faf72cd49ff48/gslib" rel="nofollow noreferrer"><code>gslib</code></a> to implement parallel uploads. You may be able to use <code>gslib</code> as a template. </p>
</div>
