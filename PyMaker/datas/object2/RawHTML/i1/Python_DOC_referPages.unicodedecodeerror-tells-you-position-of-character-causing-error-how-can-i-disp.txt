<div class="post-text" itemprop="text">
<p>When opening/reading a file using something like </p>
<pre><code>with open(&lt;csv_file&gt;) as f:
    df = pandas.read_csv(f)
</code></pre>
<p>it is possible to get an error such as </p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1678
</code></pre>
<p>I know I can use a vscode extension to locate the character in the csv_file at position 1678. But is there a way I can do it with python. Naively, something like. </p>
<pre><code>&gt;&gt;getCharInPosition(1678)
"The character is that position is 'x'"
</code></pre>
<p>Or even better, getting the line number</p>
<pre><code>&gt;&gt;getLineNumOfCharInPosition(1678)
"The line number for the character in that position is 25"
</code></pre>
<p>I'm looking for a way of making the standard UnicodeDecodeError message more useful than just telling me a character position.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/exceptions.html#UnicodeError" rel="nofollow noreferrer"><code>UnicodeError</code></a> has quite a bit of information in its attributes.</p>
<p>By catching the exception, you can exploit this to find the offending bytes:</p>
<pre><code>try:
    df = pandas.read_csv(f)
except UnicodeError as e:
    offending = e.object[e.start:e.end]
    print("This file isn't encoded with", e.encoding)
    print("Illegal bytes:", repr(offending))
    raise
</code></pre>
<p>In order to determine the line number, you can maybe do something like this (inside the except clause):</p>
<pre><code>    seen_text = e.object[:e.start]
    line_no = seent_text.count(b'\n') + 1
</code></pre>
<p>... but I'm not sure if <code>e.object</code> is always a (byte) string (this could cause extra trouble for huge files), so I don't know if it always works.</p>
<p>Also, in a CSV file, the number of newlines might be greater than the number of logical rows, in case there are newlines inside some the cells.</p>
</div>
<span class="comment-copy">Thank you, that worked for me</span>
