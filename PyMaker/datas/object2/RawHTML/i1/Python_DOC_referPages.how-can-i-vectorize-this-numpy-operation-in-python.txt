<div class="post-text" itemprop="text">
<p>I have two vectors of shape <code>(batch, dim)</code>, which I'm trying to subtract from one another. Currently I am using a simple loop to subtract a specific entry in a vector (i.e. <code>error</code>) based on the second vector(i.e. <code>label</code>),from 1 : </p>
<pre><code>per_ts_loss=0
for i, idx in enumerate(np.argmax(label, axis=1)):
    error[i, idx] -=1
    per_ts_loss += error[i, idx]
</code></pre>
<p>How Can I vectorize this?   </p>
<p>For an example, error and label can look like this :   </p>
<pre><code>error :
array([[ 0.5488135   0.71518937  0.60276338  0.54488318  0.4236548 ]
       [ 0.64589411  0.43758721  0.891773    0.96366276  0.38344152]])
label:
    array([[0, 0, 0, 1, 0 ],
           [0, 1, 0, 0, 0]])
</code></pre>
<p>for  this example, running the code below results in the following outcomes: </p>
<pre><code>for i, idx in enumerate(np.argmax(label,axis=1)):
    error[i,idx] -=1
    ls_loss += error[i,idx]
</code></pre>
<p>result : </p>
<pre><code>error: 
 [[ 0.5488135   0.71518937  0.60276338  0.54488318  0.4236548 ]
 [ 0.64589411  0.43758721  0.891773    0.96366276  0.38344152]]
label: 
 [[ 0.  0.  0.  1.  0.]
 [ 0.  1.  0.  0.  0.]]

error(indexes 3 and 1 are changed): 
[[ 0.5488135   0.71518937  0.60276338 -0.45511682  0.4236548 ]
 [ 0.64589411 -0.56241279  0.891773    0.96366276  0.38344152]]
per_ts_loss: 
 -1.01752960574
</code></pre>
<p>Here is the code itself : <a href="https://ideone.com/e1k8ra" rel="nofollow noreferrer">https://ideone.com/e1k8ra</a> </p>
<p>I get stuck on how to use the result of <code>np.argmax</code>, since the result is a new vector of indexes, and it cant simply be used like : </p>
<pre><code> error[:, np.argmax(label, axis=1)] -=1
</code></pre>
<p>So I'm stuck here!</p>
</div>
<div class="post-text" itemprop="text">
<p>Replace:</p>
<pre><code>error[:, np.argmax(label, axis=1)] -=1
</code></pre>
<p>with:</p>
<pre><code>error[np.arange(error.shape[0]), np.argmax(label, axis=1)] -=1
</code></pre>
<p>and of course</p>
<pre><code>loss = error[np.arange(error.shape[0]), np.argmax(label, axis=1)].sum()
</code></pre>
<p>In your example you are changing, and summing, <code>error[0,3]</code> and <code>error[1,1]</code>, or in short <code>error[[0,1],[3,1]]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe this:</p>
<pre><code>import numpy as np


error = np.array([[0.32783139, 0.29204386, 0.0572163 , 0.96162543, 0.8343454 ],
       [0.67308787, 0.27715222, 0.11738748, 0.091061  , 0.51806117]])

label= np.array([[0, 0, 0, 1, 0 ],
           [0, 1, 0, 0, 0]])



def f(error, label):
    per_ts_loss=0
    t=np.zeros(error.shape)
    argma=np.argmax(label, axis=1)
    t[[i for i in range(error.shape[0])],argma]=-1
    print(t)
    error+=t
    per_ts_loss += error[[i for i in range(error.shape[0])],argma]


f(error, label)
</code></pre>
<p>Ouput:</p>
<pre><code>[[ 0.  0.  0. -1.  0.]
 [ 0. -1.  0.  0.  0.]]
</code></pre>
</div>
<span class="comment-copy">Could you share a sample of the arrays, and the expected output?</span>
<span class="comment-copy">Sure, I'll edit the question in a few seconds.</span>
<span class="comment-copy">Also, in the last line, what is <code>e</code>, error?</span>
<span class="comment-copy">@yatu: that was a typo, I fixed it. the example is also provided</span>
<span class="comment-copy">Is label always 0 or 1?</span>
<span class="comment-copy">Thanks for the effort, but no. O dont subtract the label, the label is used to subtract 1 from the error (this is to show, how much we are away from the correct answer (i.e 1 )  and this is not a vectorized implementation either.</span>
