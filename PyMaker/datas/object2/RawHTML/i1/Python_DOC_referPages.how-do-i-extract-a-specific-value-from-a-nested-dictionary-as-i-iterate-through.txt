<div class="post-text" itemprop="text">
<p>I'm working on a CNN and need to grab some images from URI's in a json file but keep them associated with the corresponding ids. I have a json file that looks something like this. I want to iterate through each product and extract 'id' and from 'image_uris' the "large" uri. </p>
<pre><code>[{
  "product_type": "widget",
  "id": "1744556-ghh56h-4633",
  "manufacture_id": "AAB4567",
  "store_ids": [416835, 456145],
  "name": "Best Widget",
  "origin": "US",
  "manufactured": "2018-08-26",
  "uri": "https://bobswidgets.com/best_widget",
  "image_uris": {
    "small": "https://bobswidgets.com/small/best_widget_sm.jpg",
    "normal": "https://bobswidgets.com/medium/best_widget_md.jpg",
    "large": "https://bobswidgets.com/large/best_widget_lg.jpg",
  },
  "manufacture_cost": "12.50",
},
{
  "product_type": "widget",
  "id": "0956786-dje596-3904",
  "manufacture_id": "BCD13D",
  "store_ids": [014329, 40123],
  "name": "Best Widget2",
  "origin": "US",
  "manufactured": "2018-10-03",
  "uri": "https://bobswidgets.com/best_widget_2",
  "image_uris": {
    "small": "https://bobswidgets.com/small/best_widget2_sm.jpg",
    "normal": "https://bobswidgets.com/medium/best_widget2_md.jpg",
    "large": "https://bobswidgets.com/large/best_widget2_lg.jpg",
  },
  "manufacture_cost": "13.33",
}]
</code></pre>
<p>I then want to put them into their own dictionary like this. At least this is what I think I want to do unless there is a better idea:</p>
<pre><code>[{"1744556-ghh56h-4633" : "https://bobswidgets.com/large/best_widget_lg.jpg"}, {"0956786-dje596-3904", "https://bobswidgets.com/large/best_widget2_lg.jpg"}]
</code></pre>
<p>My endgame would be to grab the images at those URI's and save them with the 'id' as the image name like this:</p>
<pre><code>1744556-ghh56h-4633_lg.jpg
0956786-dje596-3904_lg.jpg
</code></pre>
<p>Eventually these images will be used for CNN as I mentioned earlier. When the image is recognized a lookup can be performed and return all the other values from the json file.</p>
<p>So far here is the code I've been using to extract the data I want. It grabs the 'id' fine but it grabs all of the image uris. I only want the  'large' uri. </p>
<pre><code>import ujson as json

with open('product.json', 'r') as f:
    prod_txt = f.read()

prod_dict = json.loads(prod_txt)

id = []
uris = []

    for dictionary in prod_dict:
        id.append(list(dictionary.values())[1])
        if isinstance(dictionary, dict):
            uris.append(list(dictionary.values())[8])
</code></pre>
<p>I've made various attempts to single out the 'large' uri without success Not really sure how to do it with a nested dictionary without throwing an error. I'm sure it is something simple but I'm still an amateur coder.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>list</code> comprehensions this can be done quite simply</p>
<pre><code>In [106]: img_ids = [{d['id']: d['image_uris']['large']} for d in prod_dict]

In [107]: img_ids
Out[107]:
[{'1744556-ghh56h-4633': 'https://bobswidgets.com/large/best_widget_lg.jpg'},
 {'0956786-dje596-3904': 'https://bobswidgets.com/large/best_widget2_lg.jpg'}]
</code></pre>
<p>Note that this assumes that in each <code>dict</code> within the <code>list</code> that there is always an <code>id</code> and a value for <code>large</code> in <code>image_uris</code>. If these aren't present you will get a <code>KeyError</code></p>
<p>If this is the case you will have to utilise <code>dict.get</code> like so</p>
<pre><code># Adding new entry without 'image_uris' dict
In [110]: prod_dict.append({'id': 'new_id'})

In [111]: img_ids = [{d['id']: d.get('image_uris', {}).get('large', 'N/A')} for d in prod_dict]

In [112]: img_ids
Out[112]:
[{'1744556-ghh56h-4633': 'https://bobswidgets.com/large/best_widget_lg.jpg'},
 {'0956786-dje596-3904': 'https://bobswidgets.com/large/best_widget2_lg.jpg'},
 {'new_id': 'N/A'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your edits to the <code>product.json</code> file still don't make it valid JSON, so I used the following instead, which is:</p>
<pre class="lang-json prettyprint-override"><code>[
  {
    "product_type": "widget",
    "id": "1744556-ghh56h-4633",
    "manufacture_id": "AAB4567",
    "store_ids": [
      416835,
      456145
    ],
    "name": "Best Widget",
    "origin": "US",
    "manufactured": "2018-08-26",
    "uri": "https://bobswidgets.com/best_widget",
    "image_uris": {
      "small": "https://bobswidgets.com/small/best_widget_sm.jpg",
      "normal": "https://bobswidgets.com/medium/best_widget_md.jpg",
      "large": "https://bobswidgets.com/large/best_widget_lg.jpg"
    },
    "manufacture_cost": "12.50"
  },
  {
    "product_type": "widget",
    "id": "0956786-dje596-3904",
    "manufacture_id": "BCD13D",
    "store_ids": [
      "014329",
      "40123"
    ],
    "name": "Best Widget2",
    "origin": "US",
    "manufactured": "2018-10-03",
    "uri": "https://bobswidgets.com/best_widget_2",
    "image_uris": {
      "small": "https://bobswidgets.com/small/best_widget2_sm.jpg",
      "normal": "https://bobswidgets.com/medium/best_widget2_md.jpg",
      "large": "https://bobswidgets.com/large/best_widget2_lg.jpg"
    },
    "manufacture_cost": "13.33"
  }
]
</code></pre>
<p>So, ignoring that and assuming you're able to do it somehow yourself, you could create the dictionary you want using something called a <a href="https://docs.python.org/3/reference/expressions.html#dictionary-displays" rel="nofollow noreferrer">dictionary display</a> which is very similar to a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>.</p>
<pre><code>import json
from pprint import pprint

filename = 'product.json'

with open(filename, 'r') as f:
    prod_txt = f.read()
    prod_list = json.loads(prod_txt)

result_dict = {product['id']: product['image_uris']['large']
                for product in prod_list}

pprint(result_dict)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>{'0956786-dje596-3904': 'https://bobswidgets.com/large/best_widget2_lg.jpg',
 '1744556-ghh56h-4633': 'https://bobswidgets.com/large/best_widget_lg.jpg'}
</code></pre>
</div>
<span class="comment-copy">The data in your " json file" isn't valid (one reason being that having a bunch of JSON objects like that, one-after-the-other, isn't syntactically correct according to the <a href="http://json.org" rel="nofollow noreferrer">JSON secification</a> â€” there are other issues, too). Please edit your question and fix this.</span>
<span class="comment-copy">@martineau I didn't create the json file and what I listed is a rough approximation. Each entity contains many more key value pairs. I did go back and add in the comma between the dictionaries.</span>
<span class="comment-copy">Hmm. I'm getting a KeyError: 'image_uris'. Of course I am executing this on the actual json file and not what i posted but image_uris does exist.</span>
<span class="comment-copy">@MixedBeans, see the end of the post. if you are getting that <code>KeyError</code> then the <code>image_uris</code> aren't present</span>
<span class="comment-copy">Ah. Yes. I did read that multiple times. I need some rest I think. Is there a way to check which dictionaries are missing img_uri so I can remove those entries? I'm thinking there needs to be some type of exception built in.</span>
<span class="comment-copy">@MixedBeans, see updated answer</span>
<span class="comment-copy">How damn! That's way easier then what I was trying to do. Thanks!</span>
