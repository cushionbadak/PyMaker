<div class="post-text" itemprop="text">
<p>I have the following phrase:</p>
<pre><code>05/30/2016 07:02 AM (GMT+02:00) added by XXX YYY (PID-000301):\tSome_alphanum_text_Some_alphanum_text_Some_alphanum_text_Some_alphanum_text\t\t*************************************************************************************************\t05/12/2016 02:03 PM (GMT+02:00) added by ZZZ AAA (PID-000301):\tSome_other_alphanum_text_Some_other_alphanum_text_Some_other_alphanum_text_Some_other_alphanum_text\t\t
</code></pre>
<p>I would like to write a RegEx which is just going to scoop up for me only 'Some_alphanum_text' and 'Some_other_alphanum_text'.</p>
<p>So far I was trying my luck with something like this:</p>
<pre><code>r'(?:.+\(PID-\d{6}\):)(.+)'
</code></pre>
<p>But it is only giving me the 'Some_other_alphanum_text' occurrence.
There can be more than 2 unique strings I will need to scoop out from this mess of a text. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to replace <code>.+</code> with something that only matches what you want to return. Since you only want to match alphanumeric text, use <code>\w</code> instead of <code>.</code></p>
<pre><code>r'(?:\(PID-\d{6}\):)\s*(\w+)'
</code></pre>
<p>You need <code>\s*</code> before the second group because the whitespace before the alphanumeric text won't match <code>\w+</code>.</p>
<p>You also don't need <code>.+</code> at the beginning. The match will just begin where it finds <code>PID</code>.</p>
<p><a href="https://regex101.com/r/yc5Ave/1" rel="nofollow noreferrer">DEMO</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I believe you need this regex:</p>
<pre><code>\(PID-\d{6}\):\\t(.+?)(?:\\t){2}
</code></pre>
<p><a href="https://regex101.com/r/oIkqog/3" rel="nofollow noreferrer">regex101</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think you could use this to find all the instances of text occurring between <code>"\t"</code>s
<a href="https://i.stack.imgur.com/Rcl4B.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Rcl4B.jpg"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I didn't change the regex area to be a code block so it has not worked.</p>
<p>Now it works! One thing you should consider is that there could be no '\t'. But </p>
<p>every matched text follows a date format such as 05/12/2016 02:03 or ends.</p>
<pre><code>\(PID-\d{6}\)[\n\r\t\s]*:(?:.|[\n\r\t\s])*?(?=[0-9]{2}\/[0-9]{2}\/[0-9]{4}[\n\r\t\s]*[0-9]{2}:[0-9]{2}|$)
</code></pre>
<p><a href="https://i.stack.imgur.com/3gRdB.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/3gRdB.jpg"/></a></p>
</div>
<span class="comment-copy"><code>.+</code> is greedy, it will match as far as it can, which is to the end of the string. You need something for it to match at the end of what you want to return.</span>
<span class="comment-copy">And you need to use the non-greedy form, <code>.+?</code></span>
<span class="comment-copy">Does the text you want to return always end with 2 tabs?</span>
<span class="comment-copy">Yes, there are always going to be these \t escape chars in there.</span>
<span class="comment-copy">Unfortunately, this does not work :( Checked in <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a> on Python settings.</span>
<span class="comment-copy">Can you give a link to your actual regex101.com demo?</span>
<span class="comment-copy">I've added a link to my demo that works. I replaced <code>\t</code> with actual tab characters, which is what I assumed you meant.</span>
