<div class="post-text" itemprop="text">
<p>I can get the hollow square, but I can't seem to figure out how to fill in the right half of the square. Here is what I have...</p>
<pre><code>def star():
    """ Display a star without the normal new line """
    print('*', end='')
def space():
    """ Display a space without the normal new line """
    print(' ', end='')
def newline():
    """ Display a new line """
    print()

def halfAndHalf(size):
    """ Display a square that is half filled 
        - This example has size = 6
    ******  
    *  ##*
    *  ##*
    *  ##*
    *  ##*
    ******    
    """
    print('Half and half square of size', size)
    for i in range(size):
        star()
    newline()
    for i in range(size - 2):
        star()
        for j in range(size - 2):
            space()
        star()
        newline()
    for i in range(size):
        star()
    newline()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add an explicit check:</p>
<pre><code>def star(): print('*', end = '')
def newline(): print()
def space(): print(' ', end = '')
def sharp(): print('#', end = '')

def halfAndHalf(size):
    print('Half and half square of size', size)
    for i in range(size):
        star()

    newline()
    sz = size - 2;

    for i in range(sz):
        star()
        for j in range(sz):
            space() if (j &lt; sz / 2) else sharp(); # &lt;- check here

        star()
        newline()

    for i in range(size):
        star()

    newline()

def main():
  halfAndHalf(20);

if (__name__ == '__main__'):
  main();
</code></pre>
<p>Output:</p>
<pre><code>Half and half square of size 20
********************
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
*         #########*
********************
</code></pre>
<p>If you are not familiar with the <code>space() if (j &lt; sz / 2) else sharp()</code> ternary operator, you may use a simple <code>if</code> or refer to the Python <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="nofollow noreferrer">documentations</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can calculate the width of the white spaces on the left by floor-dividing the total width sans the border by 2, and calculate the width of the hashes on the right by subtracting that width from the total width sans the border (I've replaced your helper functions for better reproducibility):</p>
<pre><code>def halfAndHalf(size):
    print('Half and half square of size', size)
    for i in range(size):
        print('*', end='')
    print('\n', end='')
    for i in range(size - 2):
        padding_size = size // 2 - 1
        print('*', end='')
        for j in range(padding_size):
            print(' ', end='')
        for j in range(size - 2 - padding_size):
            print('#', end='')
        print('*', end='')
        print('\n', end='')
    for i in range(size):
        print('*', end='')
    print('\n', end='')
</code></pre>
<p>Note that instead of a loop to print a character repeatedly you can use the repeat operator for strings, so the code below will suffice and is more readable:</p>
<pre><code>def halfAndHalf(size):
    print('Half and half square of size', size)
    print('*' * size)
    padding_size = size // 2 - 1
    for i in range(size - 2):
        print('*' + ' ' * padding_size + '#' * (size - 2 - padding_size) + '*')
    print('*' * size)
</code></pre>
</div>
