<div class="post-text" itemprop="text">
<p>I installed 64 bit Linux version of Anaconda recently (1.8.0-Linux-x86_64). The installation seemed to work fine:</p>
<pre><code>$ python 
Python 2.7.5 |Continuum Analytics, Inc.| (default, Nov  4 2013, 15:30:26)
[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import numpy
&gt;&gt;&gt;
##No issues here 
</code></pre>
<p>However if I try any of the conda commands, I get an error:</p>
<pre><code>$ conda info
Traceback (most recent call last):
  File "~/anaconda/bin/conda", line 3, in &lt;module&gt;
    from conda.cli import main
ImportError: No module named conda.cli
</code></pre>
<p>Installation is under my user directory (~/anaconda). I have verified that $PATH contains ~/anaconda/bin. $PYTHONPATH is also set to ~/anaconda/lib. </p>
<p>Any thoughts on what is wrong with the 'conda' command? My searches do not appear to show any one else reporting this error. </p>
</div>
<div class="post-text" itemprop="text">
<p>When you were installing it, you missed a section. When conda asked you if it can set your .bashrc file, you probably clicked NO. It's a simple fix: fire up your interpreter and add this line:</p>
<p><code>export PATH=/home/add your username here/anaconda/bin:$PATH</code> </p>
<p>Now type <code>python</code> into the interpreter and you will see Anaconda 1.8.0 or whatever version you have. You will have to do this each time you start a new interpreter.</p>
<p>Enjoy!</p>
</div>
<div class="post-text" itemprop="text">
<p>If anaconda was installed by the root user, a permissions issue could produce the <code>ImportError: No module named 'conda.cli'</code> error. </p>
<p>Something like this </p>
<p><code>sudo chown -R [username] [anaconda_dir]</code></p>
<p>would help in that case.</p>
<p>Alternatively, the conda install could be cloned to another location, such as the user's home directory:</p>
<p><code>conda create -n [my_conda_root] --clone=[current_conda_dir]</code></p>
<p>But for this to work, you will need at least the read and traverse permissions. </p>
</div>
<span class="comment-copy">What happens if you unset PYTHONPATH?</span>
<span class="comment-copy">Thanks @asmeurer. unset PYTHONPATH by itself did not work. However, if I also unset PYTHONHOME, it works. Looks like PYTHONHOME was pointing to a different python installation which caused this error.</span>
<span class="comment-copy">Generally with Anaconda, you don't need to set those variables. Just $PATH.</span>
<span class="comment-copy">for me it was : export PATH=/Users/add your username here/anaconda/bin:$PATH, but basically same thing</span>
<span class="comment-copy">This resolved my issue.  Thank you!  I am going to link this to the multiple github issues so that it's easier to find.</span>
<span class="comment-copy">This doesn't solve my problem, I already have <code>export PATH="/home/&lt;myusername&gt;/miniconda3/bin:$PATH"</code> in my .bashrc and it doesn't work. Neither if I go to the folder itself.</span>
<span class="comment-copy">This is now recommended against. See <a href="https://conda.io/projects/conda/en/latest/release-notes.html#recommended-change-to-enable-conda-in-your-shell" rel="nofollow noreferrer">Conda v4.4 Release Notes</a>.</span>
