<div class="post-text" itemprop="text">
<p>I have a python list of different URLs. I am trying to extract the domain names out of that.</p>
<pre><code>list1 = ['wwww.google.com.my','www.yahoo.co.jp','www.facebook.com']
</code></pre>
<p>I am trying to convert the above such that the final output is as below:</p>
<pre><code>list1 = ['www.google.com','www.yahoo.com','www.facebook.com']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Split by <code>.com</code> and concatenate with a <code>.com</code>, since it is assumed that you want them all to end like that:</p>
<pre><code>list1 = ['wwww.google.com.my','www.yahoo.co.jp','www.facebook.com']

print([e.split(".co")[0] + ".com" for e in list1])
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>['wwww.google.com', 'www.yahoo.com', 'www.facebook.com']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that you don't want to change <code>.co</code> into <code>.com</code> (why would you?), you might try:</p>
<pre><code>list2 = ['.'.join(url.split('.')[:3]) for url in list1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regular expressions to parse the input and build the actual outcome you desire.</p>
<p>For example, this regex finds the domain and plants it in a www.<strong>domain</strong>.com pattern, there are lot's of other patterns to use that can work.</p>
<pre><code>import re
list2 = [re.sub(r'w*\.?(\w+)\..*', r'www.\1.com', x) for x in list1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've added a few more urls in the list to tackle all different types possible,</p>
<pre><code>list1 = ['wwww.google.com.my','www.yahoo.co.jp','www.facebook.com',
'https://stackoverflow.com/questions/','https://google.co.in',
'https://stackoverflow.co.uk/questions/','www.stackoverflow.co.uk/questions/']
</code></pre>
<p>The code is as follows,</p>
<pre><code>new_list=[]

list1 = ['wwww.google.com.my','www.yahoo.co.jp','www.facebook.com',
'https://stackoverflow.com/questions/','https://google.co.in',
'https://stackoverflow.co.uk/questions/','www.stackoverflow.co.uk/questions/']

for item in list1:
    if(item[:4]!='http'):
        url1='www.'+item.split(".")[1]+'.com'
        if(item.split('/')[0])==item:
            new_list.append(url1)
        else:
            length=len(item.split('/'))
            url2=''
            for i in range(1,length):
                url2=url2+'/'+item.split('/')[i]
            url1=url1+url2
            new_list.append(url1)
    if(item[:4]=='http'):
        url1='www.'+item.split('://')[1]
        url1='www.'+url1.split('.')[1]+'.com'
        if(item.split('/'))[2]==item[8:]:
            new_list.append(url1)
        else:
            length=len(item.split('/'))
            url2=''
            for i in range(3,length):
                url2=url2+'/'+item.split('/')[i]
            url1=url1+url2
            new_list.append(url1)
</code></pre>
<p>The <code>new_list</code> in the above code is to be considered as output, and is as follows,</p>
<pre><code>In [1]:new_list
Out[1]: 
['www.google.com',
 'www.yahoo.com',
 'www.facebook.com',
 'www.stackoverflow.com/questions/',
 'www.google.com',
 'www.stackoverflow.com/questions/',
 'www.stackoverflow.com/questions/']
</code></pre>
<p>Let me know if this works enough for you!</p>
<p>Edit: Since this a specific use-case based query there is no general solution, hence I've not addressed any addresses that uses <code>.gov</code> or <code>.edu</code> ,etc. Those use-cases can be appended to the code above as required. 
Also, this might change address and output a global <code>.com</code> url to a website which may not exist globally.</p>
</div>
<span class="comment-copy">That is an invalid syntax for list in Python.</span>
<span class="comment-copy">What have you tried? Show your piece of code.</span>
<span class="comment-copy">Try searching up on regular expressions.</span>
<span class="comment-copy">How exactly does <code>www.yahoo.co.jp</code> turn into <code>www.yahoo.com</code>?</span>
<span class="comment-copy">I'm wondering where you got those URLs from. A domain ending in ".my"? www.yahoo.co.jp is probably a valid domain for the Japanese branch of Yahoo, so why switch that to .com?</span>
<span class="comment-copy">Wow, really? A solution that only works for <code>.com</code>/<code>.co</code> urls?</span>
<span class="comment-copy">@Aran-Fey Indeed. looking at the question. Since the OP wants  <code>www.yahoo.co.jp</code> to <code>www.yahoo.com</code>. How else would you suggest?</span>
<span class="comment-copy">returns <code>www.yahoo.co</code> instead of <code>'www.yahoo.com'</code></span>
<span class="comment-copy">I know. I wrote that, in my opinion, there's no need to change it into <code>.com</code> since <code>.co</code> is still a valid domain. I'm waiting for the OP to clarify on this</span>
<span class="comment-copy">Indeed. but not the output OP wanted.</span>
<span class="comment-copy">This prints <code>['wwww.google.com.my', 'www.yahoo.co.jp', 'www.facebook.com']</code></span>
<span class="comment-copy">Thanks, I edited my answer, swapped \W with \w so that the period won't be swallowed.</span>
