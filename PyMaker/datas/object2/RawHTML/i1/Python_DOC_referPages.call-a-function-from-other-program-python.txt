<div class="post-text" itemprop="text">
<p>`First program: first.py</p>
<pre><code>list=["ab","cd","ef"]
for i in list:
    with open("input.txt", "w") as input_file:
        print(" {}".format(i), file = input_file)
</code></pre>
<p>Expected Output:</p>
<pre><code>ab
cd
ef
</code></pre>
<p>But i got Output:</p>
<pre><code>ef
</code></pre>
<p>Second Program: second.py</p>
<pre><code>input_file = open('input.txt','r')     

for line in input_file:
    if "ef" in line:
       print(line)
</code></pre>
<p>Expected Output:</p>
<pre><code>ef
</code></pre>
<p>Got Ouput:</p>
<pre><code>ef
</code></pre>
<p>Now i want to call directly the text file(input.txt) from first.py and use it in second.py ?`How to call a function from other program  python?</p>
<p>Edit: Applied code blocks</p>
</div>
<div class="post-text" itemprop="text">
<p>You're opening the file in a <code>for</code> loop, and with the <code>w</code> as the mode parameter for the <code>open</code> function it makes <code>open</code> overwrite the file it opens, which is why you only get the output from the last iteration of the loop.</p>
<p>You should open the file outside the loop instead:</p>
<pre><code>with open("input.txt", "w") as input_file:
    for i in list:
        print("{}".format(i), file = input_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>first.py</code>, change your code like this.</p>
<blockquote>
<p><code>w</code> mode is for write operation. In each iteration of for loop you are overwriting the last content and writing the new one. So <code>input.txt</code> was having <code>ef</code> in that (finally).</p>
</blockquote>
<pre><code>list=["ab","cd","ef"]

for i in list:
    with open("input.txt", "a+") as input_file:
        print("{}".format(i), file = input_file)
</code></pre>
<p>And now you will get what you expected from this. Now <code>input.txt</code> will have the following unlike with your case.</p>
<pre><code>ab
cd
ef
</code></pre>
<blockquote>
<p><strong>Note:</strong> But if you will will run <code>first.py</code> 2nd time, it will continue to add as <code>a+</code> creates file if file does not exist otherwise it appends.
  For better working of this code use <strong>os.path</strong> module's <code>exists()</code> function.</p>
</blockquote>
<p>And if you want to call the code available in <code>first.py</code> then wrap it inside the function. Then import that function in <code>second.py</code> and call.</p>
<p>For example</p>
<p>First make sure <code>first.py</code> and <code>second.py</code> are in the same directory.</p>
<blockquote>
<p>first.py</p>
</blockquote>
<pre><code>def create_file(file_name):
    list=["ab","cd","ef"]
    for i in list:
        with open(file_name, "a+") as input_file:
            print(" {}".format(i), file = input_file)
</code></pre>
<blockquote>
<p>second.py</p>
</blockquote>
<pre><code>from first import create_file

def read_file(file_name):
    # Create file with content
    create_file(file_name)

    # Now read file content
    input_file = open(file_name, 'r')     
    for line in input_file:
        if "ef" in line:
           print(line)

read_file('input.txt')
</code></pre>
<blockquote>
<p>Open terminal, navigate to this directory, run <code>python second.py</code>.</p>
</blockquote>
<p><a href="https://www.learnpython.org/en/Modules_and_Packages" rel="nofollow noreferrer">https://www.learnpython.org/en/Module...</a> | <a href="https://www.digitalocean.com/community/tutorials/how-to-write-modules-in-python-3" rel="nofollow noreferrer">https://www.digitalocean.com...</a> | <a href="https://www.programiz.com/python-programming/modules" rel="nofollow noreferrer">https://www.programiz.com/pytho...</a> would be the helpers for you if you want to read and try <strong>how to create module/package</strong> in Python.</p>
<blockquote>
<p><strong>Update</strong>: The above has a problem as you have mentioned in comment, in each each run, it will append the content. Let's fix it with a little change to <code>first.py</code> as follows. </p>
</blockquote>
<pre><code>import os

def create_file(file_name):
    l = ["ab", "cd", "ef"]

    if os.path.exists(file_name): # If file `input.txt` exists (for this example)
        os.remove(file_name)      # Delete the file

    for i in l:
        with open(file_name, "a+") as input_file:
            print(" {}".format(i), file = input_file)
</code></pre>
<p>That is it (update in comment if you are stuck).</p>
</div>
<span class="comment-copy">Hi! Please format your code using the editor so it is readable.</span>
<span class="comment-copy">i changed the format</span>
<span class="comment-copy"><code>list</code> is a reserved word in python. When you assign a value to it you lose all of that word's functionality. Basically if you tried calling <code>list(something)</code> you will get a <code>TypeError</code>. DO NOT use keywords or reserved words as variable names!</span>
<span class="comment-copy">No comment on the use of <code>list</code> as a variable?</span>
<span class="comment-copy">Thanks a lot. one more question how to import that function in second.py and call please give me a solution.</span>
<span class="comment-copy">Thanks a lot. one more question how to call that input.txt file for second.py program  directly instead of calling like this --&gt;  input_file = open('input.txt','r')</span>
<span class="comment-copy">how to import that function in second.py and call please give me a solution.</span>
<span class="comment-copy">I have updated my answer, please check and I am sorry for answering your query late.</span>
<span class="comment-copy">thanks a lot. when i run the code for first time i got the correct output but when i run again it print the answer twice then again i run the code it print thrice ..i dont know why pls suggest me</span>
<span class="comment-copy">Thank you so much for your guidance ....</span>
