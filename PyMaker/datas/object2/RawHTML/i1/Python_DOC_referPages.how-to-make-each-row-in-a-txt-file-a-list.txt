<div class="post-text" itemprop="text">
<p>I have text file in alphabetic order looking like this in Python:</p>
<pre><code>At 210.001 \n Au 196.9665 \n B 10.81 \n Ba 137.34 \n
</code></pre>
<p>How do I make each line a list? To make it a list, the space between the letters and the numbers need to be ",", and how do I do that as well?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following code:</p>
<pre><code>with open('list.txt', 'r') as myfile:
    data=myfile.read()
    print([i.strip().split() for i in data.split(' \\n') if len(i.strip())&gt;0])
</code></pre>
<p><strong>output:</strong></p>
<pre><code>[['At', '210.001'], ['Au', '196.9665'], ['B', '10.81'], ['Ba', '137.34']] 
</code></pre>
<p>If you want to convert the 2nd element into a <code>float</code> then change the code into:</p>
<pre><code>def floatify_list_of_lists(nested_list):
    def floatify(s):
      try:
        return float(s)
      except ValueError:
        return s
    def floatify_list(lst):
        return [floatify(s) for s in lst]
    return [floatify_list(lst) for lst in nested_list]

with open('list.txt', 'r') as myfile:
    data = myfile.read()
    print(floatify_list_of_lists([i.strip().split() for i in data.split(' \\n') if len(i.strip())&gt;0]))
</code></pre>
<p><strong>output:</strong></p>
<pre><code>[['At', 210.001], ['Au', 196.9665], ['B', 10.81], ['Ba', 137.34]] 
</code></pre>
<p>If you do really need to have one string in all the nested lines then use:</p>
<pre><code>with open('list.txt', 'r') as myfile:
    data=myfile.read()
    print([[i.strip().replace(' ',',')] for i in data.split(' \\n') if len(i.strip())&gt;0])
</code></pre>
<p><strong>output:</strong></p>
<pre><code>[['At,210.001'], ['Au,196.9665'], ['B,10.81'], ['Ba,137.34']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>replace()</code> to replace the space with <code>,</code>:</p>
<p>list.txt:</p>
<pre><code>At 210.001
Au 196.9665
B 10.81
Ba 137.34
</code></pre>
<p><strong>Hence</strong>:</p>
<pre><code>logFile = "list.txt"

with open(logFile) as f:
    content = f.readlines()      
# you may also want to remove empty lines
content = [l.strip() for l in content if l.strip()]        
for line in content:     
    print([line.replace(" ", ",")])  # for each line, replace the space with ,
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>['At,210.001']
['Au,196.9665']
['B,10.81']
['Ba,137.34']
</code></pre>
</div>
<span class="comment-copy">When reading the text file, you could use the <code>readlines()</code>method, returning a list where each object is a line in your document. For every object in that list, you can then apply <code>split()</code>. This will give you a list of the respective line, splitting the line into objects that are separated by a white space. However what I don't get from your question: Do want every line to be a single object in your list or every line to be a list?</span>
<span class="comment-copy">You could consider the csv module in the standard library</span>
<span class="comment-copy">Oh wow the first answer was exactly what I was looking for. Although, I do not want the second element to be a string, how do I convert so it will be a float instead?</span>
