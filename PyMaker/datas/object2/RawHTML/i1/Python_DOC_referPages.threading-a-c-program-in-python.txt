<div class="post-text" itemprop="text">
<p>I have a Python application written in Kivy that uses a C++ program for a high speed calculation, then it returns a value and my Python application uses that.</p>
<p>The C++ program is wrapped in PyBind11 and imported into the application and then called from Python.</p>
<p>My issue is when the C++ program is executed, my application stops for a short while and I'd still like things to be going on in the background.</p>
<p>I naively thought this could be solved by threading the C++ call, but on second thoughts I think the issue lies in the GIL. Must I unlock the GIL and how could I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Without seeing any code, I can only deduce that your Python code is waiting for the C++ code to complete before doing anything else. Which can mean either or both of the following:</p>
<ul>
<li><p>you are not <a href="https://docs.python.org/3/c-api/init.html#releasing-the-gil-from-extension-code" rel="nofollow noreferrer">unlocking the GIL</a> in the C++ code</p>
<ul>
<li><p>According to <a href="https://pybind11.readthedocs.io/en/stable/advanced/misc.html?highlight=GIL#global-interpreter-lock-gil" rel="nofollow noreferrer">Global Interpreter Lock (GIL) — Miscellaneous — pybind11 2.2.3 documentation</a>, with <code>pybind</code>, this is supposed to be done like this:</p>
<pre class="lang-cpp prettyprint-override"><code>py::gil_scoped_release release;
long_running_method();
py::gil_scoped_acquire acquire;
</code></pre>
<p>Note that you need the GIL to access any Python machinery (including returning the result). So before releasing it, make sure to convert all the data you need from Python types to C++ types.</p></li>
</ul></li>
<li><p>you don't have any other active <em>Python</em> threads, so there's no other Python activity programmed in to do anything while the C++ call is in progress</p></li>
</ul>
</div>
<span class="comment-copy">if you have a multithreaded application, then you wont get much speed up from the multithreading if your c++ code isnt unlocking the GIL</span>
<span class="comment-copy">Please add a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> that shows how your C++ and Python code interact and how you do threads. Otherwise we're having a pointless discussion here since without knowing that, we can't say anything specific.</span>
<span class="comment-copy">Amazing, both answers are correct!! I've implemented the first answer and I'm deciding on the activity to be undertaken while the calculation has taken place. Thank you so much for your response, I'd upvote it but I don't have the required reputation yet... :/ !!</span>
<span class="comment-copy">@ljelliot you can <a href="https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">accept</a> it instead.</span>
<span class="comment-copy">done:) have a nice day</span>
