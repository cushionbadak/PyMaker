<div class="post-text" itemprop="text">
<p>I have two arrays of gridded data 'A' and 'B' of the same dimensions (1440, 400).  I want to create a new array 'C'  of the same dimension (1440, 400) where C contains the values from grid points of A that are only greater than B for the same grid point. If A &lt; B, the values of A need to be replaced by NaN in C. Using the following code</p>
<pre><code>C = A[A&gt;B]
</code></pre>
<p>gives a one-dimensional array. In my case, it gives an array of shape (2362,). </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>np.where</code> to replace values where <code>A &gt; B</code> is <code>False</code> with <code>np.nan</code>:</p>
<pre><code>In [1]: import numpy as np

In [2]: A = np.arange(9).reshape(3, 3)

In [3]: B = np.full((3, 3), 4)

In [4]: np.where(A &gt; B, A, np.nan)
Out[4]:
array([[nan, nan, nan],
       [nan, nan,  5.],
       [ 6.,  7.,  8.]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think <code>np.where(A&gt;B, A, np.nan)</code> is what you're looking for. That will give you <code>A</code> when the condition (<code>A&gt;B</code>) is True and <code>B</code> when it is False. Here's an example:</p>
<pre><code>import numpy as np
A = np.ones((1440, 400))
B = np.zeros((1440, 400))
B[0, 0] = 3
C = np.where(A&gt;B, A, np.nan)
</code></pre>
<p>This gives:</p>
<pre><code>array([[nan, 1., 1., ..., 1., 1., 1.],
       [1., 1., 1., ..., 1., 1., 1.],
       [1., 1., 1., ..., 1., 1., 1.],
       ...,
       [1., 1., 1., ..., 1., 1., 1.],
       [1., 1., 1., ..., 1., 1., 1.],
       [1., 1., 1., ..., 1., 1., 1.]])
</code></pre>
<p>EDIT: I misread how the final result should be so I updated this.</p>
</div>
