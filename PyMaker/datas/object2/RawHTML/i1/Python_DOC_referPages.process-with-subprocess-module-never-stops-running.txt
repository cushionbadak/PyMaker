<div class="post-text" itemprop="text">
<p>I've just started using the subprocess module on Python 3 and I can't figure out exactly how it works.
This is a function I wrote to power the USB ports on and off. It works, but then it runs indefinitely and I can't do anything else until forcing it to stop with Ctrl+C. The print statements also never get called:</p>
<pre><code>def usb_power_toggle(s):
    power_off, power_on = "echo '1-1' |sudo tee sys/bus/usb/drivers/usb/unbind", "echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/bind"
    if s == "off":
        subprocess.run(power_off, shell = True)
        print("USB power off!")
    elif s == "on":
        subprocess.run(power_on, shell = True)
        print("USB power on!")
    else:
        raise ValueError
</code></pre>
<p>Does anyone understand what the problem is? Could you please tell me how to close the process after it does what it's supposed to?</p>
</div>
<div class="post-text" itemprop="text">
<p>just use popen</p>
<pre><code>    def usb_power_toggle(s):
       from os import popen
       power_off, power_on = "echo '1-1' |sudo tee sys/bus/usb/drivers/usb/unbind", "echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/bind"
       if s == "off":
           popen(power_off)
           print("USB power off!")
       elif s == "on":
           popen(power_on)
           print("USB power on!")
       else:
           raise ValueErro
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I finally got it to work after trying some different things.
I must admit that I don't understand why this worked, or why I had this problem before in the first place. If somebody knows that and is willing to clarify I'd be grateful.</p>
<pre><code>from subprocess import STDOUT, check_output

def call_cmd(cmd):
    try:
        check_output(cmd, stderr=STDOUT, timeout=1, shell = True)
    except subprocess.CalledProcessError:
        print("Exit status 1")

def usb_power_toggle(s):
    power_off, power_on = "echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/unbind", \
    "echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/bind"
    if s == "off":
        call_cmd(power_off)
        print("USB power off")
    elif s == "on":
        call_cmd(power_on)
        print("USB power on")
    else:
        raise ValueError
</code></pre>
</div>
<span class="comment-copy">I couldn't duplicate. I just used a simple command - <code>"echo 'off'"</code> and <code>"echo 'on'"</code> - everything else in the function the same; and it worked so something must be <i>hanging</i> in the command you are trying to run.</span>
<span class="comment-copy">Set the subprocess' <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.daemon" rel="nofollow noreferrer"><code>daemon</code></a> flag to <code>True</code> to allow the main process to exit even if it's still running.</span>
<span class="comment-copy">@martineau ?? <code>TypeError: __init__() got an unexpected keyword argument 'daemon'</code></span>
<span class="comment-copy">You'll need to explicitly create a <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process" rel="nofollow noreferrer"><code>Process</code></a> instance to set it. Also note that the <code>daemon</code> keyword argument for <code>__init__()</code> wasn't added until version 3.3â€”so you'll need to set the attribute manually yourself after creation in earlier versions. I usually do it that way to be more backwards compatible.</span>
<span class="comment-copy">@martineau - <code>subprocess</code> I think, not <code>multiprocessing.Process</code></span>
<span class="comment-copy">Unfortunately, this didn't work. The process terminates but the USB isn't turned on/off; nothing happens.</span>
