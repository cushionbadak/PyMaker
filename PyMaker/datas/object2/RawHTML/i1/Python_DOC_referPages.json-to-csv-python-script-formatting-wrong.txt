<div class="post-text" itemprop="text">
<p>I'm trying to convert a JSON file to a CSV file and the formatting of the CSV file is incorrect. It creates the columns properly, but the text that it puts below the headers of the columns is ridiculously spaced out. </p>
<p>For example, for the timestamp column, it would span the timestamp from the JSON file across 5 columns within its row, when it should only take up 1 single column. When I edited the file to only write the text to the CSV file, this problem was not there (i.e. only one column was used). Here's a picture: 
<a href="https://i.stack.imgur.com/ddKCm.png" rel="nofollow noreferrer"><img alt="output of code" src="https://i.stack.imgur.com/ddKCm.png"/></a></p>
<p>What's causing this problem when the script works properly with only one item to treat and then bugs out when given more info? </p>
<p>Here's the code: </p>
<pre><code>__author__ = 'seandolinar'

import json
import csv
import io

data_json = io.open('2018_to_2019-03-11.json', mode='r', encoding='utf-8').read()
data_python = json.loads(data_json)

csv_out = io.open('2018_to_2019-03-11.csv', mode='w', encoding='utf-8')


fields = u'timestamp, text, retweets, favorites' 
csv_out.write(fields)
csv_out.write(u'\n')

for line in data_python:

    row = [line.get('timestamp'),
        '"' + line.get('text').replace('"','""') + '"',
          line.get('retweets'),
          line.get('favorites')]

row_joined = u','.join(row)
csv_out.write(row_joined)
csv_out.write(u'\n')

csv_out.close()
</code></pre>
<p>Here's one entry to my JSON file:</p>
<pre><code>{
"id": "1104890307706060802",
"timestamp": "4:42 PM - 10 Mar 2019",
"text": "“There’s not one shred of evidence that President Trump has done anything wrong.” @GrahamLedger One America News.  So true, a total Witch Hunt - All started illegally by Crooked Hillary Clinton, the DNC and others!",
"link": "https://twitter.com/realDonaldTrump/status/1104890307706060802",
"is_retweet": false,
"retweets": "19K",
"favorites": "76K",
"replies": "17K"
 },
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The code you've given takes a circuitous route that doesn't make sense to me, and doesn't make use of the <code>csv</code> module it imports. This is a speculative approach that might throw some errors that the author saw but we can't, but we can try work from there.</p>
<pre><code>import csv
import json


with open('example_input.json') as infile:
    input_data = json.load(infile)

# These 3 lines could be consolidated but I'm being explicit about building a
# nested list
output_headers = ['timestamp', 'text', 'retweets', 'favorites']

output_to_write = []

output_to_write.append(output_headers)

# Now iterate the JSON data and append rows as lists
for row in input_data:
    output_to_write.append([row.get('timestamp'),
                            row.get('text'),
                            row.get('retweets'),
                            row.get('favorites')])

with open('example_output.csv', 'w', newline='') as outfile:
    writer = csv.writer(outfile)
    writer.writerows(output_to_write)
</code></pre>
</div>
<span class="comment-copy">would you mind posting the output of the script as well, so we can see exactly what it is doing</span>
<span class="comment-copy">Is there a reason you're using <code>io.open()</code> and then enforcing strings to be unicode? You import the <code>csv</code> module but then don't use the <code>csv.writer</code> and instead go back to <code>io</code>.</span>
<span class="comment-copy">I've added a photo of the output file demonstrating my problem. Also I wasn't the one who wrote the code -- I'm not super good at Python and can only make minor tweaks at the moment, so I can't explain why these libraries were used (and the Github didn't explain the code at all).</span>
<span class="comment-copy">I'm going to put together a speculative answer. If you're not aware of why these quirks are in the code and there are no comments then it's worth a shot. I can't think why this roundabout approach is needed.</span>
<span class="comment-copy">Upload the csv and explain what is wring with the output.</span>
<span class="comment-copy">This unfortunately has the same problem, only with the added problem of the output_headers being all put into the same cell</span>
<span class="comment-copy">@ArieG. please used the edited code. I <i>did</i> forget to put the headers into different columns by missing the <code>'</code> to split the strings. If you were using my original post, I know it won't work. Apologies for that, I have nothing to test against before posting.</span>
