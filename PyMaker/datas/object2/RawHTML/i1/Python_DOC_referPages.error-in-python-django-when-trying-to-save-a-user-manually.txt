<div class="post-text" itemprop="text">
<p>I am experimenting some error when i try to create a new user manually in django</p>
<p>This is my code:</p>
<pre><code>from django.contrib.auth.models import User

newuser = User()
newuser.username = request.data['username']
newuser.first_name = request.data['first_name']
newuser.last_name = request.data['last_name']
newuser.email = request.data['email']
newuser.is_active = True
newuser.set_password(request.data['password'])
newuser.full_clean()
newuser.save()
</code></pre>
<p>The code is able to insert correctly the user, I see the changes in my database, however the code breaks after saving the user with this</p>
<pre><code>File "/usr/local/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
return getattr(self.get_queryset(), name)(*args, **kwargs)
File "/usr/local/lib/python3.6/site-packages/django/db/models/query.py", line 413, in create
obj.save(force_insert=True, using=self.db)
TypeError: save() got an unexpected keyword argument 'force_insert'
</code></pre>
<p>I really can not figure out what the problem is</p>
</div>
<div class="post-text" itemprop="text">
<p>Use this User instead</p>
<pre><code>from django.contrib.auth import get_user_model
User = get_user_model()
</code></pre>
<p><a href="https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#django.contrib.auth.get_user_model" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#django.contrib.auth.get_user_model</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I solved my problem adding this code</p>
<pre><code>args = ()
kwargs = {}
newuser.save(*args,**kwargs)
</code></pre>
<p>I took the idea of this post
<a href="https://stackoverflow.com/questions/52351756/django-typeerror-save-got-an-unexpected-keyword-argument-force-insert/52351829">Django - TypeError - save() got an unexpected keyword argument 'force_insert'</a></p>
<p>In fact I detected that all my forms are failing too, for example one of my forms</p>
<pre><code>class UserRegisterForm(UserCreationForm):


    class Meta:
        model = User
        fields = ['first_name','last_name','username','email','password1','password2']
</code></pre>
<p>was working ok until today when it failed, so I needed to change it to</p>
<pre><code>class UserRegisterForm(UserCreationForm):


    def save(self, *args, **kwargs):
        super().save(*args, **kwargs)**

    class Meta:
        model = User
        fields = ['first_name','last_name','username','email','password1','password2']
</code></pre>
<p>I do not know when this problem started, I mean in what django version.</p>
</div>
<span class="comment-copy">What version of django are you using?</span>
<span class="comment-copy">Hi, Django version 2.1.7,</span>
<span class="comment-copy">Why you are not using User.objects.create() function? you can create a dictionary with all the data you need and then pass it to this function.</span>
<span class="comment-copy">@JuanMiGabarron - <code>create()</code> is a shortcut for the perfectly valid code the OP is using.</span>
<span class="comment-copy">Only makes a difference if a custom user model is used.</span>
