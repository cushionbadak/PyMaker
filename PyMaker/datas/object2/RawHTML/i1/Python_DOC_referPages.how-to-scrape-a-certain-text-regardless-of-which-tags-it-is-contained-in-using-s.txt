<div class="post-text" itemprop="text">
<p>I am trying to scrape a number of sites to find if a certain code snippet is present. Most of the time the scraper works perfectly as intended.</p>
<p>I am using the following method to find the bit of code I am looking for:</p>
<pre><code>...
item["foo"] = response.xpath("//script[contains(text(), 'fooscript')]")

...
if len(item["foo"]) != 0:
    doStuff()
</code></pre>
<p>However, my issue is the following: sometimes the thing I want to find is not in the script itself but as the source for the script (I know how to scrape this as well), and sometimes when JQuery is used, I can't get the correct scrape results.</p>
<p>So my question is, is there an easier way to look through the raw HTML/JS text to find a match for what I am looking for? Trying to look through all alternatives to scrapes will quickly bloat up the code, and I only need to see if this certain text is present. I have not found a suitable method from the official scrapy documentation (though I am still somewhat inexperienced with the tool, so I might have missed it), so if anyone has a solution for this it would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe simple regex search through the HTML source is what you are looking for? Something like</p>
<pre><code>if re.search(r'fooscript', response.text):
    doStuff()
</code></pre>
<p>Or, if you just know it's wrapped inside some element and just don't know which, you can do</p>
<pre><code>item["foo"] = response.xpath("//*[contains(text(), 'fooscript')]")
</code></pre>
<p>Also, you don't need to use <code>len</code> to check the result, simply</p>
<pre><code>if item["foo"]:
    doStuff()
</code></pre>
<p>is enough.</p>
</div>
<span class="comment-copy">Perfect, this is exactly what I was looking for! Thank you very much.</span>
