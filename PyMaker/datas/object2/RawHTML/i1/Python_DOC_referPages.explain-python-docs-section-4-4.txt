<div class="post-text" itemprop="text">
<p>I am going through the Python docs and can't make sense of what is going on in section 4.4</p>
<pre><code>for n in range(2, 10):
    for x in range(2, n):
        if n % x == 0:
            print(n, 'equals', x, '*', n//x)
            break
    else:
        print(n, 'is a prime number')
</code></pre>
<p>The main issue I am having is understanding what gets assigned to n and x in the first iteration of these loops (maybe I don't fully understand nested loops) but I would assume in the first iteration we should get something like:</p>
<pre><code>for 2(n) in range(2,10):
    for 2(x) in range(2, 2(n)):
        if 2 % 2 == 0
</code></pre>
<p>But this is not happening ( I know 2 is a prime number), but I am not getting why this is not the behavior occurring. Appreciate the help in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your confusion is not about the nested loop, but the <code>range</code> function.</p>
<p><code>range(2, 2)</code> is an empty range, because it is exclusive of the endpoint.</p>
<p>To illustrate: <code>list(range(3)) == [0, 1, 2]</code>.</p>
<p>As a note: when iterating through an empty range, nothing happens. So, for example, the following code will not produce an error or print anything:</p>
<pre><code>for i in range(0):
    print('Nothing here')
    raise ValueError
</code></pre>
<p>Therefore, when <code>n</code> is 2, the for loop <code>for x in range(2, 2)</code> does nothing. <code>x</code> does not take the value <code>None</code> or any other value. If you attempt to convert an empty range to a <code>list</code>, it will simply return <code>[]</code>, the empty <code>list</code>.</p>
<p>The <code>for</code> loop does a set of actions once <em>for</em> every element in some collection. When the collection is empty, or has 0 elements, that set of actions is done 0 times.</p>
</div>
<span class="comment-copy">I know that it excludes the endpoint and is empty range (ran it in terminal a few times), but I guess what I don't know is what the n % x looks like for the first iteration?</span>
<span class="comment-copy">The first values of <code>n</code> and <code>x</code> are 3 and 2 respectively. This is because <code>range(2, 2)</code> is empty, so the outer loop reaches its next iteration, which gives a value of 3 for <code>n</code>. <code>x</code> then iterates through the range <code>(2, 3)</code>, which yields only the value 2.</span>
<span class="comment-copy">Ok, so I believe I understand this now. So this means, Python has something already set up to handle 2 % None (or blank?) i.e. instead of throwing some type of error it just skips to the else statement in this case.</span>
<span class="comment-copy">Okay, I think I understand your question better now. I will edit my answer.</span>
