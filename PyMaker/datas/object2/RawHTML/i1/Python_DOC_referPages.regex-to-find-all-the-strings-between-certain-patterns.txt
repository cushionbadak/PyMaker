<div class="post-text" itemprop="text">
<p>My input string can be one of the following lines:</p>
<pre><code>Active App: Coffee (priority 34)

Active App: Hot Bread (priority 20)

Active App: Hot Baked Bread (priority 1)

etc...
</code></pre>
<p>In this case, instead of "<code>Coffee</code>", it could be any string [a-zA-Z] (one or more words). </p>
<p>In "<code>(priority 34)</code>", only the integer would change.</p>
<p>So how do I get the "<code>Coffee</code>"/"<code>Hot Bread</code>"/"<code>Hot Baked Bread</code>" from this line?</p>
<p>I am unable to properly handle the space between the words. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple solution with python regex <code>match()</code> for you:</p>
<p>It disregards the part of the string after the application name that you want to capture. But that could be added, if important.</p>
<p>It will capture untill it sees a <code>(</code>, and then later strip the trailing whitespace character from the string.</p>
<pre class="lang-py prettyprint-override"><code>import re;

myStr = "Active App: Hot Baked Bread (priority 34)";
appStr = re.match("Active App: ([^\(]*)", myStr);
print(appStr.group(1).rstrip());
</code></pre>
<p>Here's a version that only captures the actual 'Active App' name, without the need to trim the string afterwards. And also checks to see that a match was found before printing it:</p>
<pre class="lang-py prettyprint-override"><code>import re;

myStr = "Active App: Coffee Some (priority 34)";
appStringMatch = re.match("Active App: (.*)\s\(", myStr);
if appStringMatch:
    print(appStringMatch.group(1));
</code></pre>
</div>
<span class="comment-copy">Space between words in regex can be added to the one or more words part: <code>[a-zA-Z ]</code>. But I'd suggest to take a look at this module instead: <a href="https://pypi.org/project/parse/" rel="nofollow noreferrer">parse</a>. It will make your life easier.</span>
<span class="comment-copy">for at least one space between words you can use /s+</span>
<span class="comment-copy">something like <code>s.split(': ')[-1].split(' (')[0] </code></span>
<span class="comment-copy">Try <code>Active App: +([^(]+?) +\(priority +\d+\)</code>. What you need is in first capturing group.</span>
