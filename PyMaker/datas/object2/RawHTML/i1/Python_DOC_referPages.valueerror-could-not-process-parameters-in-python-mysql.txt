<div class="post-text" itemprop="text">
<p>i am a newbie</p>
<p>I want to prevent the duplicate usernames every time people do registration. </p>
<p>Here is my snipped code:</p>
<pre><code>def submit(self):
    username_info = username.get()
    username_password = password.get()

    #connect to db
    db = mysql.connector.connect(host = 'localhost', user = 'root', password = '', database = 'user')

    #create a cursor
    mycursor = db.cursor()
    #insert to db
    sql = ("INSERT INTO useraccess (user_type, password) VALUES (%s, %s)")

    query = (username_info, username_password)
    mycursor.execute(sql, query)
    #commit
    db.commit()

    #create a messagebox
    messagebox.showinfo("Registration", "Successfully Register")

    #if username has been used
    find_user = ("SELECT * FROM useraccess WHERE user_type = ?")
    user_query = (username_info)

    mycursor.execute(find_user, user_query)
    #if (username == username_info):
    if mycursor.fetchall():
        messagebox.showerror("Registration", "The username chosen is already used. Please select another username")
    else:
        messagebox.showinfo("Registration", "Account Created!")
</code></pre>
<p>But every time I run it, although the username has been registered in the db, it only shows the successfully created messagebox and error: </p>
<blockquote>
<p>ValueError: Could not process parameters. </p>
</blockquote>
<p>Anyone can help me to solve this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the source of the problem is in the line</p>
<pre><code>user_query = (username_info)
</code></pre>
<p>It should be</p>
<pre><code>user_query = (username_info,)
</code></pre>
<p>The trailing comma is the syntactic  difference between an expression in parentheses and a <a href="https://docs.python.org/3.5/library/stdtypes.html#typesseq-tuple" rel="nofollow noreferrer">tuple</a>.</p>
<p>Another issue with code is the query:</p>
<pre><code>find_user = ("SELECT * FROM useraccess WHERE user_type = ?")
</code></pre>
<p>Which should be:</p>
<pre><code>find_user = ("SELECT * FROM useraccess WHERE user_type = %s")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you checked these variables,</p>
<pre><code>username_info = username.get()
username_password = password.get()
</code></pre>
<p>are they in proccesable formats? (i.e. can you directly put the username.get() into user_type ?)</p>
<p>I'm not familiar with this way of passing a parameter</p>
<pre><code>find_user = ("SELECT * FROM useraccess WHERE user_type = ?")
</code></pre>
<p>have you double checked this? (why not the %s method?)</p>
<p>also, you probably get the "Account Created!" because mycursor.fetchall() fails.</p>
</div>
<span class="comment-copy">You need to make sure your query variables are tuples.</span>
<span class="comment-copy">when i change it to user_query = (username_info,) , it shows another error which is mysql.connector.errors.ProgrammingError: Not all parameters were used in the SQL statement</span>
<span class="comment-copy">@Eve11 The <code>?</code> in your second query string is not a valid placeholder for parameters in <code>mysql.connector</code>. You need to change that to <code>%s</code>.</span>
<span class="comment-copy">Updated answer with fix for the second issue</span>
<span class="comment-copy">yeay, it is solved. Thank you so much!:)</span>
<span class="comment-copy">of course, i mark it as accepted:)</span>
<span class="comment-copy">yes, they are proccesable formats.</span>
<span class="comment-copy">I change it to  #if username has been used         find_user = ("SELECT * FROM useraccess WHERE user_type = %s")         user_query = (username_info, )          mycursor.execute(find_user, user_query)         #if (username == username_info):         if mycursor.fetchall():             messagebox.showerror("Registration", "The username chosen is already used. Please select another username")         else:             messagebox.showinfo("Registration", "Account Created!")</span>
<span class="comment-copy">now when i run that code, there is no error. But it only shows "The username chosen is already used. Please select another username" messagebox, but the username is duplicated in the db</span>
<span class="comment-copy">Its because you insert the new user before you check if theres a duplicate;</span>
<span class="comment-copy">nb. mycursor.execute(sql, query)  already adds the duplicate before you check if theres going to be a duplicate (advies: run the insert after checking if theres a duplicate)</span>
