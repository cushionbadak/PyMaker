<div class="post-text" itemprop="text">
<p>Im trying to create a features array using python and python-geojson. I appended some features such as Polygon with working coordinates. However when I dump, there is no indentation in the geoJson file. It is all on one line and mapbox does not accept the data. </p>
<p>f</p>
<pre><code>features = []
poly = Polygon([[(2.38, 57.322), (23.194, -20.28), (-120.43, 19.15), (2.38, 57.322)]])


features.append(Polygon([[(2.38, 57.322), (23.194, -20.28), (-120.43, 19.15), (2.38, 57.322)]]))
features.append(Feature(geometry=poly, properties={"country": "Spain"}))


feature_collection = FeatureCollection(features)

with open('myfile.geojson', 'w') as f:
   dump(feature_collection,f)
f.close()
</code></pre>
<p>Thats how the output looks. It should be indented instead of clustered like that.</p>
<p>{"type": "FeatureCollection", "features": [{"type": "Polygon", "coordinates": [[[2.38, 57.322], [23.194, -20.28], [-120.43, 19.15], [2.38, 57.322]]]}, {"geometry": {"type": "Polygon", "coordinates": [[[2.38, 57.322], [23.194, -20.28], [-120.43, 19.15], [2.38, 57.322]]]}, "type": "Feature", "properties": {"country": "Spain"}}]}</p>
</div>
<div class="post-text" itemprop="text">
<p>Add an 'indent' param to your dump() call:</p>
<pre><code>with open('myfile.geojson', 'w') as f:
   dump(feature_collection, f, indent=4)
</code></pre>
<p>It's strange, however, that a piece of code won't accept JSON that is all on one line.  It's just as much valid, legal JSON.  That's a bug in that code.  Using the 'indent' param is usually done just for human readability.</p>
</div>
<div class="post-text" itemprop="text">
<p>Backing up a bit, there are three types of GeoJSON objects:</p>
<ol>
<li>Geometry</li>
<li>Feature</li>
<li>FeatureCollection</li>
</ol>
<p>A <code>Feature</code> includes a <code>Geometry</code>, and a <code>FeatureCollection</code> includes one or more <code>Features</code>. You can't directly put a <code>Geometry</code> inside a <code>FeatureCollection</code>, however, it needs to be a <code>Feature</code>.</p>
<p>In the example you've shared, your <code>FeatureCollection</code> includes one <code>Feature</code> and one <code>Geometry</code> (in this case, a <code>Polygon</code>). You'll need to convert that <code>Polygon</code> to a <code>Feature</code> before adding it to a <code>FeatureCollection</code>.</p>
<p>Not sure if you intended to have two identical polygons, but your example would need to look something like this to output valid GeoJSON:</p>
<pre class="lang-py prettyprint-override"><code>features = []
poly1 = Polygon([[(2.38, 57.322), (23.194, -20.28), (-120.43, 19.15), (2.38, 57.322)]])
poly2 = Polygon([[(2.38, 57.322), (23.194, -20.28), (-120.43, 19.15), (2.38, 57.322)]])


features.append(Feature(geometry=poly1, properties={"country": "Spain"}))
features.append(Feature(geometry=poly2))


feature_collection = FeatureCollection(features)

with open('myfile.geojson', 'w') as f:
   dump(feature_collection,f)
f.close()
</code></pre>
<p>Indentation shouldn't matter here.</p>
<p>You can read more than you ever wanted to know about the GeoJSON spec at <a href="https://tools.ietf.org/html/rfc7946" rel="nofollow noreferrer">https://tools.ietf.org/html/rfc7946</a>.</p>
</div>
