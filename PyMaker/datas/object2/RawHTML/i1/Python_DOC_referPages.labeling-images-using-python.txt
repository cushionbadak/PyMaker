<div class="post-text" itemprop="text">
<p>I recently stumbled upon this question: <a href="https://stackoverflow.com/questions/54921711/interactive-labeling-of-images-in-jupyter-notebook">Interactive labeling of images in jupyter notebook</a>
which I found quite interesting. </p>
<p>Having little experience in python coding, I tried to run the provided code from the answer using a jupyter notebook, but I somehow cannot get it to work. I believe that I am doing something wrong when importing the images. I am trying to import all images from a folder called "images" which is located in "PATH". </p>
<p>Here is the complete code:</p>
<pre><code>import cv2
import os

import ipywidgets as widgets
import functools

images_list = []

os.chdir(PATH)
# Load in the images
for filepath in os.listdir('images/'):
    images_list.append(cv2.imread('images/{0}'.format(filepath),0))


COLS = 4
ROWS = 2
IMAGES = images_list 
IMG_WIDTH = 200
IMG_HEIGHT = 200

def on_click(index):
    print('Image %d clicked' % index)


rows = []

for row in range(ROWS):
    cols = []
    for col in range(COLS):
        index = row * COLS + col
        image = widgets.Image(
            value=IMAGES[index], width=IMG_WIDTH, height=IMG_HEIGHT
        )
        button = widgets.Button(description='Image %d' % index)
        # Bind the click event to the on_click function, with our index as argument
        button.on_click(functools.partial(on_click, index))

        # Create a vertical layout box, image above the button
        box = widgets.VBox([image, button])
        cols.append(box)

    # Create a horizontal layout box, grouping all the columns together
    rows.append(widgets.HBox(cols))

# Create a vertical layout box, grouping all the rows together
result = widgets.VBox(rows)
</code></pre>
<p>Edit: After fixing the syntax error, I get the following error:</p>
<pre><code>--------------------------------------------------------------------------- 
TraitError 
Traceback (most recent call last) &lt;ipython-input-87-2ca2a1eb59b4&gt; in &lt;module&gt;()
     36         index = row * COLS + col
     37         image = widgets.Image(
---&gt; 38             value=IMAGES[index], width=IMG_WIDTH, height=IMG_HEIGHT
     39         )
     40         button = widgets.Button(description='Image %d' % index)

~\Anaconda3\lib\site-packages\ipywidgets\widgets\widget.py in __init__(self, **kwargs)
    409         """Public constructor"""
    410         self._model_id = kwargs.pop('model_id', None)
--&gt; 411         super(Widget, self).__init__(**kwargs)
    412
    413         Widget._call_widget_constructed(self)

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in __init__(self, *args, **kwargs)
    995             for key, value in kwargs.items():
    996                 if self.has_trait(key):
--&gt; 997                     setattr(self, key, value)
    998                 else:
    999                     # passthrough args that don't set traits to super

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in __set__(self, obj, value)
    583             raise TraitError('The "%s" trait is read-only.' % self.name)
    584         else:
--&gt; 585             self.set(obj, value)
    586 
    587     def _validate(self, obj, value):

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in set(self, obj, value)
    557 
    558     def set(self, obj, value):
--&gt; 559         new_value = self._validate(obj, value)
    560         try:
    561             old_value = obj._trait_values[self.name]

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in _validate(self, obj, value)
    589             return value
    590         if hasattr(self, 'validate'):
--&gt; 591             value = self.validate(obj, value)
    592         if obj._cross_validation_lock is False:
    593             value = self._cross_validate(obj, value)

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in validate(self, obj, value)
   2024         if isinstance(value, bytes):
   2025             return value
-&gt; 2026         self.error(obj, value)
   2027 
   2028 

~\Anaconda3\lib\site-packages\traitlets\traitlets.py in error(self, obj, value)
    623             e = "The '%s' trait must be %s, but a value of %r was specified." \
    624                 % (self.name, self.info(), repr_type(value))
--&gt; 625         raise TraitError(e)
    626 
    627     def get_metadata(self, key, default=None):

TraitError: The 'value' trait of an Image instance must be a bytes object, but a value of 
    array([[232, 242, 243, ..., 243, 246, 232],
           [244, 254, 255, ..., 254, 255, 243],
           [244, 254, 255, ..., 254, 255, 242],
           ...,
           [242, 253, 253, ..., 254, 254, 243],
           [245, 255, 255, ..., 255, 255, 244],
           [238, 249, 248, ..., 245, 245, 234]], dtype=uint8) 
    &lt;class 'numpy.ndarray'&gt; 
was specified.
</code></pre>
<p>I would be pleased if someone could help me.</p>
<p><strong>EDIT:</strong></p>
<p>Here is my jupyter notebook version:
<a href="https://i.stack.imgur.com/ok826.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/ok826.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The code you copied has a missing colon at the end of the second <code>for</code> line, which should look like this:</p>
<pre><code>    for col in range(COLS):
</code></pre>
<p>(I would recommend a good IDE, or, at the very least, a syntax checker, to catch these sorts of errors, though!)</p>
<p>Once you've fixed any syntax issues, you can verify if you really have any actual problems with the way you're importing the images. But from what I can see, your code is fine - you're opening a bunch of files as greyscale images and passing them to the code from the linked question. (If you still have issues after the syntax errors are gone, though, you can edit this question or post another.)</p>
</div>
<span class="comment-copy">For your edited question: The TraitError looks like the Traitlets package is expecting a Bytes object, but IPyWidget is sending it a numpy array. Considering that you don't do anything with numpy yourself, I would guess that this is a compatibility issue. What version of ipywidgets are you using? What about traitlets? Are they compatible?</span>
<span class="comment-copy">@NiayeshIsky Thanks for your comment. I have updated my question with my jupyter version, but I don't know how to check traitlets. How would you do that ? Thanks.</span>
<span class="comment-copy">It looks like you're using Anaconda, so according to <a href="https://stackoverflow.com/a/33694864/7315159">this answer</a>, just run <code>conda env export -n YOUR_ENV_NAME &gt; environment.yml</code> and look for <code>traitlets</code> in the output <code>environment.yml</code> file. (Or you can <a href="https://pastebin.com/" rel="nofollow noreferrer">pastebin</a> the whole output file and link to it here, if you prefer.)</span>
<span class="comment-copy">Thanks for noting my typo ! I fixed it, but now I get another error message (see updated question)</span>
<span class="comment-copy">@henry please, if you edit your original and you get answers, just add below your own question, the new coming issue you are facing, after an "Edit:" so everyone can traceback what happened. Cheers.</span>
