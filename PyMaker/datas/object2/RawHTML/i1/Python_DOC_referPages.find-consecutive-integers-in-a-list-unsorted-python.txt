<div class="post-text" itemprop="text">
<p>I am trying to find consecutive values from an unsorted list. Experimental code below:</p>
<p>num=[8,9,4,1,2,3]</p>
<pre><code>#(num[0+1])  next value

for i in range(len(num)-1):  # not using -1 will cause index error
    if num[i]+1==num[i+1]:
        print('Con',num[i])
</code></pre>
<p>Problem: I am not able to get the last value with this current code. My output excludes the last value. Here is what I get(no 9 or no 3):</p>
<pre><code>Con 8
Con 1
Con 2
</code></pre>
<p>I have seen a few complex solutions which was little difficult for me to understand. Is it possible to tweak the for loop portion a little bit and get the entire sequence ? Thanks a lot. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is because you only check the <em>next</em> number. When you want the second number (like 9 or 3), you have to include a check for the <em>previous</em> number too. This will make the <code>if</code> a bit longer, but it'll work. </p>
<pre><code>num=[8,9,4,1,2,3]

for i in range(len(num)):
    if (
        (  # check for the next number
            i + 1 != len (num) and  # don't check the end of the list
            num[i]+1==num[i+1] 
        ) or (  # check for the previous number
            i != 0 and  # don't check before the list
            num [i-1] == num [i] - 1
        )
    ): print('Con',num[i])
</code></pre>
<p>Also, I had to remove the <code>-1</code> in your range, because I already do a manual check, and as pointed out, this prvented 3 from being shown.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code only tests in one direction (being followed by a consecutive number).
For the full sequence you have to test in both direction.</p>
<pre><code>num=[8,9,4,1,2,3]

assert(len(num) &gt; 1)
for i, n in enumerate(num):
    if i != 0:
        if n == num[i-1] + 1:
            print("Con", n)
            continue
    if i != len(num) - 1:
        if n == num[i+1] - 1:
            print("Con", n)

</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way would be to print both numbers when you found them to be consecutive, but also check that the one at index <code>i-1</code> was not in the consecutive list as well so that the number at index <code>i</code> is not printed twice:</p>
<pre><code>num = [8, 9, 4, 1, 2, 3]

for i in range(len(num)-1):  # not using -1 will cause index error
    if num[i] + 1 == num[i + 1]:
        if i == 0 or (i - 1 &gt;= 0 and num[i - 1] != num[i] - 1):
            print('Con', num[i])
        print('Con', num[i + 1])
</code></pre>
<p>Could try with a more complex list as well:</p>
<pre><code>num = [8, 9, 4, 1, 2, 3, 4, 4, 8, 9, 1, 2, 3, 0, 1, 5, 6, 1]

for i in range(len(num)-1):  # not using -1 will cause index error
    if num[i] + 1 == num[i + 1]:
        if i == 0 or (i - 1 &gt;= 0 and num[i - 1] != num[i] - 1):
            print('Con', num[i])
        print('Con', num[i + 1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the function <code>groupby()</code>:</p>
<pre><code>from itertools import groupby
from operator import sub, itemgetter

num = [8, 9, 4, 1, 2, 3]

iget = itemgetter(1)
gb = groupby(enumerate(num), key=lambda x: sub(*x))
all_groups = (list(map(iget, g)) for _, g in gb)
list(filter(lambda x: len(x) &gt; 1, all_groups))
# [[8, 9], [1, 2, 3]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>num = [8, 9, 4, 1, 2, 3]

def con(rng, pos=0):
    if pos &lt; len(rng):
        if (pos &gt; 0 and rng[pos]-1 == rng[pos-1]) or (pos &lt; len(rng) -1 and rng[pos]+1 == rng[pos+1]):
            print("con", rng[pos])
        con(rng, pos+1)

con(num)
</code></pre>
<p>edit:
this is solution is based on concurrent function, and needs only the list as argument. As long as they are within lower-/upperbound of list, the function will check if (previous number)-1 or (next number)+1 are equal (this number)
output will be:
con 8
con 9
con 1
con 2
con 3</p>
</div>
<span class="comment-copy">Do you want only <b>pairs</b> of consecutive numbers, or <code>n</code> consecutive numbers?</span>
<span class="comment-copy">8,9 and 1,2,3. Thanks</span>
<span class="comment-copy">What is your expected output and why?</span>
<span class="comment-copy">The output is 8, 9, 1, 2. I think OP wants 3 to be included.</span>
<span class="comment-copy">Thanks, I fixed that (I checked for being the last element twice)</span>
<span class="comment-copy">While this code may answer the posted question, it's best to include a short description of how the code works and why you've made the choices you have, if possible. At the least, a sample of inputs and their respective outputs would improve this answer.</span>
