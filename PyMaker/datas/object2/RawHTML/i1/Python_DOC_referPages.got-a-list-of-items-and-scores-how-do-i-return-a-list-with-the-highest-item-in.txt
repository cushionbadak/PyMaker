<div class="post-text" itemprop="text">
<p>I got the list of items and their scores. How do I return a list with the highest item in each subfolder</p>
<p>from </p>
<pre><code>[('../dir_a/1.png', 5.14), 
 ('../dir_a/2.png', 5.15), 
 ('../dir_b/3.png', 4.19), 
 ('../dir_b/4.png', 3.81)]
</code></pre>
<p>To</p>
<pre><code>[('../dir_a/2.png', 5.15), 
 ('../dir_b/3.png', 4.19)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os

result = {}
lst = [('../dir_a/1.png', 5.14), ('../dir_a/2.png', 5.15), ('../dir_b/3.png', 4.19), ('../dir_b/4.png', 3.81)]

for p in lst:
    base_dir =  os.path.basename(os.path.dirname(p[0]))     #Use base dir as key
    if base_dir not in result:
        result[base_dir] = ("", 0)
    if p[1] &gt; result[base_dir][1]:                          #check score
        result[base_dir] = (p)
print(result.values())                                      #Get values
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[('../dir_a/2.png', 5.15), ('../dir_b/3.png', 4.19)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a way to do it using Pandas:</p>
<pre><code># Create example data frame
df = pd.DataFrame([('../dir_a/1.png', 5.14), 
                   ('../dir_a/2.png', 5.15), 
                   ('../dir_b/3.png', 4.19), 
                   ('../dir_b/4.png', 3.81)], columns = ['path', 'score'])

# Split the file path by '/' and expand into columns with original data frame
df = pd.concat([df.path.str.split('/', expand=True), df], axis=1)

# Group the rows based on the directory name (column 1) and find the max score
df.groupby(1)['score'].max().reset_index()

       1  score
0  dir_a   5.15
1  dir_b   4.19
</code></pre>
<p>Then you can convert the values back into a list if need be.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you only ever need the max, you can put the directory in a dictionary and key off that, then keep the max.</p>
<pre><code>from pathlib import PurePath

max_dict = {}
for path, val in lst:
    parent = PurePath(path).parent
    max_dict[parent] = max(max_dict.get(parent, float('-inf')), val)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is an one-liner :</p>
<pre><code>a = [('../dir_a/1.png', 5.14), ('../dir_a/2.png', 5.15), ('../dir_b/3.png', 4.19), ('../dir_b/4.png', 3.81)]

f = [(next((x[0] for x in a if x[1]==max([v[1] for v in a if v[0].split('/')[1]==k])),k),max([v[1] for v in a if v[0].split('/')[1]==k])) for k in set([kk[0].split('/')[1] for kk in a])]
</code></pre>
<p><strong>OUTPUT</strong> :</p>
<pre><code>[('../dir_a/2.png', 5.15), ('../dir_b/3.png', 4.19)]
</code></pre>
</div>
<span class="comment-copy">This is just a program description. What did you code to solve it, where did your solution go wrong and where is your <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>?</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and please take the tour - we help you fix up your broken code, SO is no coding service that produces solutions ... generally.</span>
<span class="comment-copy">Thx for the advice and trying to learn better next time...  I was trying to use pathlib.Path(i[0]) and then I still couldn't figure out the way in python to do something like argmax in Numpy. And then I came up to ask. Sorry for making an unpleasant movement.</span>
<span class="comment-copy">thx for ure reply. Learned the os.path way to nail this down</span>
<span class="comment-copy">Thx for ur answering. Panda is also a good way to do. Learn a lot</span>
