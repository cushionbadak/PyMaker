<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21608228/conditional-replace-pandas">Conditional Replace Pandas</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I want to add "1" in each row for columns "Score"  where the below statement is true, </p>
<pre><code>import pandas as pd
import numpy as np


df = pd.read_csv(Path1 + 'Test.csv')
df.replace(np.nan, 0, inplace=True)
df[(df.Day7 &gt;= 500)]
</code></pre>
<p><a href="https://i.stack.imgur.com/7xTAK.png" rel="nofollow noreferrer">Sample Value</a></p>
<p><a href="https://i.stack.imgur.com/2vLIj.png" rel="nofollow noreferrer">Output</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Could you please try following.</p>
<pre><code>df['score']=np.where(df['Day7']&gt;=500,1,"")
</code></pre>
<p>Or as per OP's comment(adding @anky_91's enhanced solution here):</p>
<pre><code>np.where((df['Day7']&gt;=500)&amp;(df['Day7']&lt;1000),1,"")
</code></pre>
<p>When we print the value of <code>df</code> following will be the output.</p>
<pre><code>    Cat          Day7    score
0   Advertisir   145    
1   Blogs        56 
2   Business     92 
3   Classfied    23 
4   Continuin    110    
5   Corporate    1974     1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are halfway there. Just use <code>df.loc[mask, "Score"] = 1</code>:</p>
<pre><code>import numpy as np
import pandas as pd

df = pd.DataFrame({"Day7":np.random.rand(5)*1000,
                   "Score": np.random.rand(5)})
print(df)
df.loc[(df.Day7&gt;=500), "Score"] = 1
print(df)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>df = df.assign(Score=0)
df.Score = df.Day7 &gt;= 500
</code></pre>
</div>
<span class="comment-copy">Please add samples in text form of input and expected output in your post and do let us know then.</span>
<span class="comment-copy">@RavinderSingh13 added sample value and require output details</span>
<span class="comment-copy">As mentioned above it is always recommended to add samples of input and expected output in TEXT form, kindly do edit your post and let us know then.</span>
<span class="comment-copy">yep, this is a good usecase for np.where also. +1</span>
<span class="comment-copy">@anky_91, Thanks for encouragement buddy, learning from all greats(you are one of them too) pandas, cheers</span>
<span class="comment-copy">Ha ha i am no where close. :D we all are learning. :) Thank you</span>
<span class="comment-copy">@MDSAQUIBNASIRKHAN use <code>np.where((df['Day7']&gt;=500)&amp;(df['Day7']&lt;1000),1,"")</code></span>
<span class="comment-copy">@MDSAQUIBNASIRKHAN same like you do in np.where, but this time use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.select.html" rel="nofollow noreferrer">np.select</a> for multiple conditions:</span>
