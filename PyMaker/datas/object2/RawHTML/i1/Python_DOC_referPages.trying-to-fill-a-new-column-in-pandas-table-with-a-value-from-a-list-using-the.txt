<div class="post-text" itemprop="text">
<p>I have a pandas table. That has a time stamp in a column. 
I have already parsed that timestamp out into something understandble. 
I have also already gotten the day of the week as an integer. 
What I'm wanting, is to add a new column with the name of the day of the week. 
I have a list of the names (mon-sun).
what is the correct way to add a new column, using the value in the existing weekdayINT column as the index value for the list of weekday names to fill that new column.</p>
<p>Heres what I have:</p>
<pre><code>weekdays = ['mon','tue','wed','thur','fri','sat','sun']
def calc_time(df):

    df['parsedtime'] = pandas.to_datetime(df['Timestamp'], unit='s')
    df['weekdayINT'] = df['parsedtime'].dt.dayofweek
    df['weekdayName'] = numpy.nan
    #????Not sure how to fill this new column.
    return df
</code></pre>
<p>Very new to pandas and taking a datascience class. I know I can iterate over the dataframe rows. But there are over 2million rows. 
Im sure pandas has a better method of doing this. It seems like itd be a common thing to use the values from another column as an index for a list in order to fill a new column with values.</p>
<p>Thank you for the help.</p>
</div>
<div class="post-text" itemprop="text">
<p>pandas has a built-in function called <code>day_name</code>:</p>
<pre><code># sample data
df = pd.DataFrame(pd.date_range('2019-01-01', '2019-01-10'))

# use day_name
df['day of week'] = df[0].dt.day_name()

           0 day of week
0 2019-01-01     Tuesday
1 2019-01-02   Wednesday
2 2019-01-03    Thursday
3 2019-01-04      Friday
4 2019-01-05    Saturday
5 2019-01-06      Sunday
6 2019-01-07      Monday
7 2019-01-08     Tuesday
8 2019-01-09   Wednesday
9 2019-01-10    Thursday
</code></pre>
<p>or you can <code>map</code> with a dict:</p>
<pre><code># sample data
df = pd.DataFrame(pd.date_range('2019-01-01', '2019-01-10'))
# int of day of week
df['day_of_week'] = df[0].dt.dayofweek
# map with a dict
df['day_of_week_name'] = df['day_of_week'].map({0:'mon', 1:'tue',
                                                2:'wed', 3:'thur',
                                                4:'fri', 5:'sat', 6:'sun'})

           0  day_of_week day_of_week_name
0 2019-01-01            1              tue
1 2019-01-02            2              wed
2 2019-01-03            3             thur
3 2019-01-04            4              fri
4 2019-01-05            5              sat
5 2019-01-06            6              sun
6 2019-01-07            0              mon
7 2019-01-08            1              tue
8 2019-01-09            2              wed
9 2019-01-10            3             thur
</code></pre>
</div>
<span class="comment-copy">That'll do it. thank you! Surprised that didn't come up in my google searches. Thanks again mate.</span>
