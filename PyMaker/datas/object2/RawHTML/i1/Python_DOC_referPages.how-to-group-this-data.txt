<div class="post-text" itemprop="text">
<p>I have a database of items, each with 5 attributes. They are returned by the SQL query as follows: </p>
<blockquote>
<p>(ID, First_Name, Surname, Group, Year)</p>
</blockquote>
<p>E.g:</p>
<blockquote>
<p>(1, "Jack", "Williams", "S", 5)</p>
</blockquote>
<p>My SQL query is very simple: <code>SELECT * FROM people;</code>.</p>
<p>What I would like to do is group them by their group in alphabetical order, then within that group them by their year in ascending order and within that they should be ordered in alphabetical order by surname.</p>
<p>So it should produce something like this:</p>
<blockquote>
<p>((((1, "Roger", "Acaster", "A", 5), (15, "Jamie", "Atkins", "A", 5),
  ...), ((30, "Alice", "Colewell", "A", 6), (37, "Charles", "Edwards",
  "A", 6), ...), ...), (((92, "Grace", "Barnes", "B", 5), ...), ((104,
  "Matthew", "Crawley", "B", 6), ...), ...), ...)</p>
</blockquote>
<p>So if we call that tuple <code>people_array</code>:</p>
<ul>
<li><p><code>people_array[0]</code> should return the first group with the first letter closest or equal to "A".</p></li>
<li><p><code>people_array[0][0]</code> should return the first year with the lowest number.</p></li>
<li><p><code>people_array[0][0][0]</code> should return the person in the first group in the first year with the first letter of their surname closest or equal to "A".</p></li>
</ul>
<p>Whereas at the moment the SQL query returns it like this:</p>
<blockquote>
<p>((1, "Roger", "Acaster", "A", 5), (...), (...), ...)</p>
</blockquote>
<p>i.e. just a list of each person, first ordered by group then within that ordered by year.</p>
<p>I don't know if this is possible to achieve in MYSQL, or perhaps it needs to be done with Python once I have returned it from SQL in the above form. Either way, I do not know how to achieve the desired result.</p>
<p>Could someone help me do this please?</p>
<p>Thanks.</p>
<p>EDIT: At the moment my idea is to go through each group in alphabetical order then through each year in alphabetical order and make a query for each, something like this:</p>
<pre><code>people = []
groups = ["A", "B", "D", "F", "S", ...]
years = [5, 6, 7, 8, 9, ...]

for group in groups:
    temp_group = []
    for year in years:
        query = "SELECT * FROM people WHERE group='{}' AND year={} ORDER BY Surname".format(group, year)
        temp_group.append(make_query(query))
    pupils.append(temp_group)
</code></pre>
<p>Although that seems quite inefficient and that's important because I will be running this query very frequently.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use SQL <a href="https://www.w3schools.com/sql/sql_orderby.asp" rel="nofollow noreferrer">ORDER BY</a></p>
<p>This will do sort the data according to the fields you will define.</p>
<p>You can test the SQL below in <a href="http://www.compileonline.com/execute_sql_online.php" rel="nofollow noreferrer">http://www.compileonline.com/execute_sql_online.php</a></p>
<pre><code>BEGIN TRANSACTION;

/* Create a table called people */
CREATE TABLE people(id integer PRIMARY KEY,
                    name text,
                    surname text,
                    grp text,
                    year integer);

/* Create few records in this table */
INSERT INTO people VALUES(1,'Tom','Tom1','g1',1987);
INSERT INTO people VALUES(2,'Lucy','Lucy1','g1',1756);
INSERT INTO people VALUES(3,'Frank','Frank1','g2',2000);
INSERT INTO people VALUES(4,'Jane','Jane1','g3',1897);
INSERT INTO people VALUES(5,'Robert','Robert1','g4',2000);
COMMIT;

/* Display all the records (orderd) from the table */
SELECT * FROM people order by grp asc, year asc,surname asc ;
</code></pre>
</div>
<span class="comment-copy">You can use ORDER BY, but equally you can just rearrange the resulting array</span>
<span class="comment-copy">You do not want to 'group' it, which has a different meaning in sql</span>
<span class="comment-copy">Mysql cannot produce nested resultsets. This is something you need to do in python.</span>
<span class="comment-copy">Thanks but how @Shadow</span>
<span class="comment-copy">If I can't do it with SQL then how do I do it with Python @Strawberry</span>
<span class="comment-copy">I don't want to order it, I want to group it like I said in my question.</span>
<span class="comment-copy">OK. did you look at <a href="https://www.w3schools.com/sql/sql_groupby.asp" rel="nofollow noreferrer">w3schools.com/sql/sql_groupby.asp</a> GROUP BY?</span>
<span class="comment-copy">Yes, but I don't think it works like I want it to. Unless you can show me otherwise?</span>
<span class="comment-copy">I still don't think you understand my request.</span>
