<div class="post-text" itemprop="text">
<p>I have the following three lists: </p>
<pre><code>ov = [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]

participant = [1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4]

geom = ['0101000020E864000077C385FFB4231C417F437ECE83E95441', '0101000020E8640000F532AC46BA231C41A945335C84E95441', '0101000020E8640000CD138FFA46EA1A41C71D074C27E15441', '0101000020E864000087373742A94A1A41B6A39D38B0815441', '0101000020E86400003A60EE21A3231C41ACB8FFA584E95441', '0101000020E864000046717DBEB2231C4115840F5D84E95441', '0101000020E8640000AAAF4E36AB231C413AC5EB5D84E95441', '0101000020E8640000B84BD7B961231C41D245C83B85E95441', '0101000020E864000026940AB784231C417B5D79A984E95441', '0101000020E86400003FE809B587231C4102DB987E85E95441', '0101000020E8640000B8FC550A83231C41E5B0F93785E95441', '0101000020E8640000E1A849F9A1231C41009C21A684E95441', '0101000020E8640000E1A849F9A1231C41009C21A684E95441', '0101000020E864000066EB7C29A0231C41F29756A684E95441', '0101000020E86400009B3CC349DC711C41EE7E428C76E15441', '0101000020E86400008985282945681C4182B65E6F50DC5441', '0101000020E86400005B469B1AB1711C410553435A76E15441']
</code></pre>
<p>Now I would like to create lines under following conditions:</p>
<ul>
<li><p>using <code>geom</code> as points, a line normally starts when <code>ov</code> is <code>1</code> and ends when <code>ov</code> is <code>0</code></p></li>
<li><p>except when the participant changes, then a new line starts</p></li>
</ul>
<p>So in my case I would like to create linestrings using <code>geom</code> with the <code>ov</code> being:</p>
<pre><code>linestring 1: 1, 0
linestring 2: 1, 1, 1, 1, 1, 0
linestring 3: 1, 1, 1, 0
linestring 4: 1, 1, 1
linestring 5: 1, 1
</code></pre>
<p>I thought of doing this using a for loop, but I don't know how to implement it to say: if the value is changing, then stop and make a line.</p>
<p>Note: The problem is not how to make a line, but how to use all the right values in the implementation.</p>
<p>I hope I explained it okay and somebody can help me, thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that <code>participant</code> is always sorted, use <code>itertools.groupby</code> to group the items according to its elements:</p>
<pre><code>for k, g in groupby(zip(participant, ov, geom), itemgetter(0)):
    # k: element of participant
    # g: all (participant, ov, geom) items corresponding to k
</code></pre>
<p>To print each line, separate the <code>(ov, geom)</code> elements from <code>g</code> (an iterator) and join by commas:</p>
<pre><code># each (ov, geom) --&gt; "ov, geom"
line = ', '.join(map(lambda x: str(x[1])+', '+x[2], g))
</code></pre>
<p>Full code:</p>
<pre><code>from itertools import groupby
from operator import itemgetter

for k, g in groupby(zip(participant, ov, geom), itemgetter(0)):
    print('linestring %i:' % k, ', '.join(map(lambda x: '%s, %i' % x[1:], g)))
</code></pre>
<p>Output:</p>
<pre><code>linestring 1: 1, 0101000020E864000077C385FFB4231C417F437ECE83E95441, 0, 0101000020E8640000F532AC46BA231C41A945335C84E95441
linestring 2: 1, 0101000020E8640000CD138FFA46EA1A41C71D074C27E15441, 1, 0101000020E864000087373742A94A1A41B6A39D38B0815441, 1, 0101000020E86400003A60EE21A3231C41ACB8FFA584E95441, 1, 0101000020E864000046717DBEB2231C4115840F5D84E95441, 1, 0101000020E8640000AAAF4E36AB231C413AC5EB5D84E95441, 0, 0101000020E8640000B84BD7B961231C41D245C83B85E95441
linestring 3: 1, 0101000020E864000026940AB784231C417B5D79A984E95441, 1, 0101000020E86400003FE809B587231C4102DB987E85E95441, 1, 0101000020E8640000B8FC550A83231C41E5B0F93785E95441, 0, 0101000020E8640000E1A849F9A1231C41009C21A684E95441, 1, 0101000020E8640000E1A849F9A1231C41009C21A684E95441, 1, 0101000020E864000066EB7C29A0231C41F29756A684E95441, 1, 0101000020E86400009B3CC349DC711C41EE7E428C76E15441
linestring 4: 1, 0101000020E86400008985282945681C4182B65E6F50DC5441, 1, 0101000020E86400005B469B1AB1711C410553435A76E15441
</code></pre>
<p>Printing each pair of items on separate lines for clarity:</p>
<pre><code>linestring 1:
   1, 0101000020E864000077C385FFB4231C417F437ECE83E95441
   0, 0101000020E8640000F532AC46BA231C41A945335C84E95441
linestring 2:
   1, 0101000020E8640000CD138FFA46EA1A41C71D074C27E15441
   1, 0101000020E864000087373742A94A1A41B6A39D38B0815441
   1, 0101000020E86400003A60EE21A3231C41ACB8FFA584E95441
   1, 0101000020E864000046717DBEB2231C4115840F5D84E95441
   1, 0101000020E8640000AAAF4E36AB231C413AC5EB5D84E95441
   0, 0101000020E8640000B84BD7B961231C41D245C83B85E95441
linestring 3:
   1, 0101000020E864000026940AB784231C417B5D79A984E95441
   1, 0101000020E86400003FE809B587231C4102DB987E85E95441
   1, 0101000020E8640000B8FC550A83231C41E5B0F93785E95441
   0, 0101000020E8640000E1A849F9A1231C41009C21A684E95441
   1, 0101000020E8640000E1A849F9A1231C41009C21A684E95441
   1, 0101000020E864000066EB7C29A0231C41F29756A684E95441
   1, 0101000020E86400009B3CC349DC711C41EE7E428C76E15441
linestring 4:
   1, 0101000020E86400008985282945681C4182B65E6F50DC5441
   1, 0101000020E86400005B469B1AB1711C410553435A76E15441
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://www.programiz.com/python-programming/methods/built-in/zip" rel="nofollow noreferrer">zip</a> in order to combine the 3 lists.</p>
<pre><code>entries = zip(ov,participant,geom)
for entry in entries:
    # for the first entry it should print 1,1,0101000020E864000077C385FFB4231C417F437ECE83E95441
    print(entry)
</code></pre>
</div>
<span class="comment-copy">What do you mean by using geom as point ? I think a couple of for loops and if-else checks would solve this problem.</span>
<span class="comment-copy">By "making a line" you mean plotting a line graph? Or printing a text line? Also, it's not quite clear how <code>geom</code> is encoded (looks like hexadecimal, sure, but how do we get points from it?) and how it should be used there.</span>
<span class="comment-copy">the entries in geom are point coordinates. I know how to make a line (a linestring) from them but i don't know how i can do it with the given conditions... the "couple of for loops and if-else checks" is what i am actually looking for ;)</span>
<span class="comment-copy">The data in <code>geom</code> seems to have nothing to do with your expected output (can be obtained using only <code>ov</code> and <code>participant</code>).</span>
<span class="comment-copy">Haha i know, but it does. I want to get make different lines for each participant if those conditions stated apply. So for the first line, that uses the first and the second item of the ov list it should also use the first and the second item of the geom list to make a linestring (because my line has the condition that ov starts with 1 and ends with 0).</span>
<span class="comment-copy">yeah i already did that, but i don't know how to implement the different conditions stated above...</span>
