<div class="post-text" itemprop="text">
<pre><code>def save_contact (self, driver):
     sleep(15)
     driver.find_element_by_css_selector("#publishButton").click()
</code></pre>
<p>With the above; I am trying to achieve my click function to fire after 15 seconds. Similar to a JavaScript <code>setTimeOut</code> function - </p>
<pre><code>save_contact() 
</code></pre>
<p>I know this is obviously not correct, but it's as far as I've gotten in Python. Currently it seems like this just stops my entire script/program. Is this possible to do in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>driver.execute_script("window.setTimeout(() =&gt; document.getElementById('publishButton').click(), 15000)")
</code></pre>
</div>
<span class="comment-copy">You are requesting async logic (tasks/corourintes) in python. One thing I would ask before trying to answer: Why would you want this to run like setTimeOut? That is not how an automation test using Selenium should work. Am I missing some use case here? You may need to elaborate. If you got what you are asking for, you would have a bunch of stuff running continuously until the task/coroutine is called that does this. You would have almost no guarantee that things are in the proper state before this logic runs.  Or are you saying that your application/program, seems to freeze for 15 seconds?</span>
<span class="comment-copy">Ran out of characters. Have you tried "driver.implicitly_wait(15)" instead? That only needs to be set once, but I suspect that would be better than calling sleep(15) in this instance.</span>
<span class="comment-copy">Yes; I have tried that - but it seems to pause the entire program/script; as opposed to just delay the specific click function.</span>
<span class="comment-copy">You should really add some explanation as to what this code is doing. From what I know, it's really not that much different than a sleep. The main difference being that your example doesn't tie up the thread but from the way OP's script is likely written, he's probably not doing anything threaded anyway so the end result is basically the same... wait 15s then click.</span>
<span class="comment-copy">OP asked for a javascript setTimeout from python. That's what this is. This is the only to do it without blocking.</span>
<span class="comment-copy">...and yet you still didn't add anything to the answer other than just code... no explanation of what this does, how it sleeps without blocking, etc.</span>
<span class="comment-copy">Because it wasn't a javascript question. The question was how to implement it in python.</span>
