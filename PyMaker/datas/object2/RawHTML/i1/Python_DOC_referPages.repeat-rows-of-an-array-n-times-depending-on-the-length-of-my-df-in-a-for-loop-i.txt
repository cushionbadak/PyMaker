<div class="post-text" itemprop="text">
<p>Ok so, I have looked for other similar questions but I just can't get it to work. 
1) I have a for-loop that reads multiple files 
2) For each file I need its lenght (T)
3) Then I need the values of the df repeated (T) times.</p>
<p>This works fine if I'm not using a for loop, however by using the same script in a loop the error I get is 'numpy.ndarray' object is not callable. Which I believe is because I'm treating the np.repeat as a function but I'm not sure how to fix it. Any good advice on how to fix this?</p>
<pre><code>result_files = '/Users/result_files' 
reservoirs = ['AA','AB', etc.]

for res in reservoirs:
    res_files = pd.read_csv('{}/{}_storage.csv'.format(result_files,res), index_col=0, skiprows=1, parse_dates=True)

    T = len(res_files)

    ### Df of number of days per month x length of reservoir's data 
    df = pd.DataFrame.from_dict(df, orient='index')
    df = df.transpose()   
    df = pd.DataFrame(np.repeat(df.values,T,axis=0))
</code></pre>
<p>Error </p>
<pre><code>  File "/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py", line 974, in from_dict
    if isinstance(list(data.values())[0], (Series, dict)):

TypeError: 'numpy.ndarray' object is not callable
</code></pre>
<p>For example,  lets say my df has these values:</p>
<pre><code>df= ( 1.3, 1.5, 1.7)
</code></pre>
<p>And my file has a lenght of 3, my output should look like this</p>
<pre><code>T = 3


[Out]
df= ( 1.3, 1.5, 1.7
      1.3, 1.5, 1.7
      1.3, 1.5, 1.7. )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code> File "/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py", line 974, in from_dict
    if isinstance(list(data.values())[0], (Series, dict)):

TypeError: 'numpy.ndarray' object is not callable
</code></pre>
<p>If <code>data</code> is a dataframe, it would produce this error, because <code>value</code> is an array, not a function.  See the DF docs:</p>
<pre><code>DataFrame.values
Return a Numpy representation of the DataFrame.
</code></pre>
<p>What <code>from_dict</code> expects is a dictionary, which does have a <code>values</code> method.</p>
<pre><code>pd.DataFrame.from_dict(df, orient='index')
</code></pre>
<p>So your code would work on the first iteration if <code>df</code> is created as a dictionary, but fail on the next loop when <code>df</code> is a dataframe (from the end of the last loop).</p>
</div>
<span class="comment-copy">Whenever you report a Python error, include the <i>complete</i> traceback (i.e. the complete error message) in the question.  There is useful information in there.</span>
<span class="comment-copy"><i>"Which I believe is because I'm treating the np.repeat as a function ..."</i> <code>np.repeat</code> <i>is</i> a function, so that should not cause the error.  It would be easier for someone to help you if you provided a <a href="https://stackoverflow.com/help/mcve">minimal, complete and verifiable example</a>.</span>
<span class="comment-copy">Check this line: <code>df = pd.DataFrame.from_dict(df, orient='index')</code>.  You are overwriting the original value of <code>df</code> with a Pandas DataFrame.  You don't show how <code>df</code> is originally created, but after the first time this line is executed, <code>df</code> is a DataFrame, not a dict.</span>
<span class="comment-copy">Thanks for your input. I've edited my question, to show more info. I don't mind to overwrite it since I need the same data for T times in every loop. @WarrenWeckesser</span>
