<div class="post-text" itemprop="text">
<p>I am trying to format two 2D numpy arrays to have a similar format to this:
<a href="https://i.stack.imgur.com/2O9gN.jpg" rel="nofollow noreferrer">Table Format</a></p>
<p>Currently, I have transposed the 2 arrays to look like coordinates:</p>
<pre><code>##Transposes both arrays into coordinates
gameSet = np.array((player1,player2)).T
</code></pre>
<p>Then I have iterated through the array to get the similar form using:</p>
<pre><code>##iterates through 2D numpy array
for player1 in range(0, row-1):
    print(" ")
    for player2 in range(0, col-1):
        print (gameSet[player1,player2], end = "")
</code></pre>
<p>With the code above, I get the similar format but I would like for it to have the A1...An and B1....Bn on the axis'. Any idea how I could do that or a package that may help with the formatting? Anything helps, thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>An illustration of how to use basic Python formatting</p>
<p>An array:</p>
<pre><code>In [188]: arr = np.arange(12).reshape(3,4)                                                
</code></pre>
<p>Generate labels:</p>
<pre><code>In [189]: rlbl = ['A{}'.format(i) for i in range(arr.shape[0])]                           
In [190]: clbl = ['B{}'.format(i) for i in range(arr.shape[1])]                           
</code></pre>
<p>Formatting strings:</p>
<p>Top row:</p>
<pre><code>In [192]: tfmt = ' ~   ||'+'|'.join(['%10s']*arr.shape[1])                                
In [193]: tfmt%tuple(clbl)                                                                
Out[193]: ' ~   ||        B0|        B1|        B2|        B3'
</code></pre>
<p>data row:</p>
<pre><code>In [194]: rfmt = '%5s||'+'|'.join(['%10d']*arr.shape[1])                                  
In [195]: rfmt%(rlbl[0], *tuple(arr[i,:]))                                                
Out[195]: '   A0||         4|         5|         6|         7'
</code></pre>
<p>Collect rows:</p>
<pre><code>In [201]: astr = [_193]                                                                   
In [202]: for i in range(arr.shape[0]): 
     ...:     astr.append(rfmt%(rlbl[i], *tuple(arr[i,:]))) 
     ...:
</code></pre>
<p>and print:</p>
<pre><code>In [203]: print('\n'.join(astr))                                                          
 ~   ||        B0|        B1|        B2|        B3
   A0||         0|         1|         2|         3
   A1||         4|         5|         6|         7
   A2||         8|         9|        10|        11
</code></pre>
</div>
<span class="comment-copy">You mean, do a <code>print('   B1     B2    B3    B4 ...')</code> with proper spacing?</span>
<span class="comment-copy">This is a hack, but what if you just added "A1", "A2", etc. to the player1 array, and "B1", "B2", etc. to the player2 array? This would not give you the nice table borders, but it would give you the correct spacing. And you can use a <a href="https://stackoverflow.com/a/9713042/7315159">table-printing package</a> to format your data nicely.</span>
<span class="comment-copy">@hpaulj yes, I could print B1, B2,... but the rows and columns change depending on user input so how could I set it to fill depending on the user input for both A and B and with proper spacing?</span>
<span class="comment-copy">Python formatting, either the older % style or new <code>.format</code> has the tools for displaying strings and numbers with a specific spacing.  <code>np.savetxt</code>, it's <code>csv</code> writer, uses the <code>%</code> style.  Yes, using this can be a bit tedious.  <code>pandas</code> may have some fancier layout tools, but I haven't used those.</span>
