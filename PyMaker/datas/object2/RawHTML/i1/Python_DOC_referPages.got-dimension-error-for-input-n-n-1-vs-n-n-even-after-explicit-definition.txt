<div class="post-text" itemprop="text">
<p>I have two greyscale image input (both are 256 x 256 image), and I put them under <code>filename1</code> and <code>filename2</code>. When I put these two image into a placeholder under <code>feed</code>, I already mentioned that the shape is <code>[None, 256, 256, 1]</code>.</p>
<p>However, when I run the below code, I still got an error, saying that my current input is <code>(256,256)</code> instead of <code>(256,256,1)</code>. How should I modify my code?</p>
<p>My code:-</p>
<pre><code>feed = {
          tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): misc.imread(filename1),
          tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): misc.imread(filename2)
        }

sess.run(graph.get_tensor_by_name("output:0"), feed_dict=feed)
</code></pre>
<p>Error I got:-</p>
<pre><code>ValueError: Cannot feed value of shape (256, 256) for Tensor u'Placeholder:0', which has shape '(?, 256, 256, 1)'
</code></pre>
<hr/>
<p>Updated</p>
<p>I tested this as well, and got error as below:-</p>
<pre><code>with tf.Session(graph=tf.Graph()) as sess:
    tf.saved_model.loader.load(sess, [tag_constants.TRAINING], export_dir)

    img1 = misc.imread(filename1, flatten=True)
    img2 = misc.imread(filename2, flatten=True)

    feed = {
      tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): img1[np.newaxis, :, :, np.newaxis],
      tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): img2[np.newaxis, :, :, np.newaxis]
    }

    graph = tf.get_default_graph()

    sess.run(graph.get_tensor_by_name("output:0"), feed_dict=feed)
</code></pre>
<p>Error that I got:-</p>
<pre><code>InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'data' with dtype float and shape [?,256,256,1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>(256, 256) is the default shape for an array outputted by <code>imread</code> function for grayscale image. So in order to feed it to your <code>feed_dict</code> you need to </p>
<pre><code>file = misc.imread(filename1)
arr = tf.expand_dims(file, -1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.misc.imread.html" rel="nofollow noreferrer"><code>scipy.misc.imread</code></a> returns a <code>(256, 256)</code> array because the images is grayscale, so there is no need for a "channels" dimension. You can just add that dimension by yourself. You will also need to add a new first dimensions to match the first dimension of the placeholder (<code>None</code>).</p>
<p>In addition to that, you should make sure that you read the image in the format that you expect. Since you are working with grayscale images, you can pass <code>flatten=True</code> to <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.misc.imread.html" rel="nofollow noreferrer"><code>scipy.misc.imread</code></a> to ensure that the returned image is float32 and has no color channels.</p>
<pre><code>from scipy import misc

img1 = misc.imread(filename1, flatten=True)
img2 = misc.imread(filename2, flatten=True)
feed = {
          tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): img1[np.newaxis, :, :, np.newaxis],
          tf.placeholder(tf.float32, shape=[None, 256, 256, 1]): img2[np.newaxis, :, :, np.newaxis]
        }

sess.run(graph.get_tensor_by_name("output:0"), feed_dict=feed)
</code></pre>
</div>
<span class="comment-copy">is the problem maybe your first dimension? try passing <code>[misc.imread(filename1)]</code> instead of the single array. It worked for me on a similar case in the past.</span>
<span class="comment-copy">Thanks. I tried <code>tf.expand_dims(misc.imread(filename1),-1)</code> and <code>tf.expand_dims(misc.imread(filename2),-1)</code> in <code>feed</code>. But I got <code>TypeError: The value of a feed cannot be a tf.Tensor object. Acceptable feed values include Python scalars, strings, lists, numpy ndarrays, or TensorHandles. For reference, the tensor object was Tensor("ExpandDims:0", shape=(256, 256, 1), dtype=uint8) which was passed to the feed with key Tensor("Placeholder:0", shape=(?, 256, 256, 1), dtype=float32)</code>. What should I do?</span>
<span class="comment-copy">It clearly says that value should be numpy array, not tensor. You need to place this code before</span>
<span class="comment-copy">In this case <code>file</code> is the value fed to TensorFlow, so it has to be a NumPy value, not a TensorFlow tensor (that is, the shape or type of <code>file</code> should be fixed with NumPy operations, not TensorFlow ones).</span>
<span class="comment-copy">Thanks for your reply. I tried it, but I got <code>InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'data' with dtype float and shape [?,256,256,1]</code>. How should I fix that?</span>
<span class="comment-copy">@H42 I edited the answer, see if it helps.</span>
<span class="comment-copy">I tried, but I still get the exactly same error <code>InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'data' with dtype float and shape [?,256,256,1]</code></span>
<span class="comment-copy">@H42 Hum, strange, what I posted seems to work for me, if I add the missing parts (setting <code>filename1</code> and <code>filename2</code>, defining <code>graph</code> and creating an <code>output</code> tensor). Is it possible there is any difference between the snippet and what you are running?</span>
<span class="comment-copy">I think it's the same. But I pasted more codes at the "edited" section above, and you can have a look. Thanks</span>
