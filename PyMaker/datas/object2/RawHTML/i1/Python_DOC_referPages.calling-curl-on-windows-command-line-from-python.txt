<div class="post-text" itemprop="text">
<p>At a certain point in the execution of my Python script, I want to call cURL on the Windows command line, like so:</p>
<pre><code>import subprocess
subprocess.call('curl', shell=True)
</code></pre>
<p>But I get this error:</p>
<blockquote>
<p>'curl' is not recognized as an internal or external command,
  operable program or batch file.</p>
</blockquote>
<p>Same thing happens if I use the full path:</p>
<pre><code>subprocess.call('C:\\Windows\\System32\\curl.exe', shell=True)
</code></pre>
<blockquote>
<p>'curl' is not recognized as an internal or external command, operable program or batch file.</p>
</blockquote>
<p>Yet, if I simply open my Windows command prompt and type in 'curl', it works:</p>
<blockquote>
<p>curl: try 'curl --help' for more information</p>
</blockquote>
<p>Why?  </p>
<p>(curl is in my Environment Variables, and my Visual C++ Redistributables are up-to-date. I am using Windows 10 Home on x64 machine.)</p>
<p>Thanks for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Turns out I don't need cURL after all.  <a href="https://stackoverflow.com/questions/13534807/python-ftplib-connection-error-gaierror">The second answer to this post</a> helped me figure out how to download and save a file locally via FTP using Python's 'ftplib' package.  Here's my final code:</p>
<pre><code>from ftplib import FTP
with FTP('ftp.ncbi.nlm.nih.gov') as ftp:
    ftp.login()
    ftp.cwd('pubmed/baseline-2018-sample')
    # acronym: File To Be Downloaded
    FTBD = 'pubmed19n0004.xml.gz'
    # acronym: Where To Store Downloaded File
    WTSDF = open('C:/Users/S/Documents/this_project/pubmed19n0004.xml.gz', 'wb')
    ftp.retrbinary('RETR ' + FTBD, WTSDF.write, 1024)
    WTSDF.close()
    ftp.quit()
</code></pre>
</div>
<span class="comment-copy">check the path of curl, and you can  run C:\\Windows\\System32\\curl.exe in your Windows command prompt</span>
<span class="comment-copy">Why do you want to call <code>curl</code> though? The Python <code>requests</code> library does pretty much everything <code>curl</code> does, but with much more programmatic control.</span>
<span class="comment-copy">Because I’m downloading a file via FTP instead of HTTP.  I agree that ‘requests’ is wonderful, though.  I’m looking into another Python package, ‘ftplib’, now....</span>
