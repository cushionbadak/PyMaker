<div class="post-text" itemprop="text">
<p>I am very new to python and trying to find the solution to this for a class.  </p>
<p>I need the function missing_letters to take a list, check the letters using histogram and then loop over the letters in alphabet to determine which are missing from the input parameter.  Finally I need to print the letters that are missing, in a string.</p>
<pre><code> alphabet = "abcdefghijklmnopqrstuvwxyz"   

    test = ["one","two","three"]

    def histogram(s):
        d = dict() 
        for c in s:
            if c not in d:
                d[c] = 1
            else:
                d[c] += 1
        return d

    def missing_letter(s):
        for i in s:
            checked = (histogram(i))
</code></pre>
<p>As you can see I haven't gotten very far, at the moment missing_letters returns </p>
<pre><code>{'o': 1, 'n': 1, 'e': 1}
{'t': 1, 'w': 1, 'o': 1}
{'t': 1, 'h': 1, 'r': 1, 'e': 2}
</code></pre>
<p>I now need to loop over alphabet to check which characters are missing and print.  Any help and direction will be much appreciated. Many thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use set functions in python, which is very fast and efficient:</p>
<pre><code>alphabet = set('abcdefghijklmnopqrstuvwxyz')
s1 = 'one'
s2 = 'two'
s3 = 'three'

list_of_missing_letters = set(alphabet) - set(s1) - set(s2) - set(s3)

print(list_of_missing_letters)
</code></pre>
<p>Or like this:</p>
<pre><code>from functools import reduce

alphabet = set('abcdefghijklmnopqrstuvwxyz')
list_of_strings = ['one', 'two', 'three']

list_of_missing_letters = set(alphabet) - \
    reduce(lambda x, y: set(x).union(set(y)), list_of_strings)

print(list_of_missing_letters)
</code></pre>
<hr/>
<p>Or using your own <code>histogram</code> function:</p>
<pre><code>alphabet = "abcdefghijklmnopqrstuvwxyz"

test = ["one", "two", "three"]


def histogram(s):
    d = dict()
    for c in s:
        if c not in d:
            d[c] = 1
        else:
            d[c] += 1
    return d


def missing_letter(t):
    test_string = ''.join(t)
    result = []
    for l in alphabet:
        if l not in histogram(test_string).keys():
            result.append(l)
    return result

print(missing_letter(test))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['a', 'b', 'c', 'd', 'f', 'g', 'i', 'j', 'k', 'l', 'm', 'p', 'q', 's', 'u', 'v', 'x', 'y', 'z']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from string import ascii_lowercase

words = ["one","two","three"]

letters = [l.lower() for w in words for l in w]

# all letters not in alphabet
letter_str = "".join(x for x in ascii_lowercase if x not in letters)
</code></pre>
<p>Output:</p>
<pre><code>'abcdfgijklmpqsuvxyz'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is not the easiest question to understand, but from what I can gather you require all the letters of the alphabet not in the input to be returned in console.</p>
<p>So a loop as opposed to functions which have been already shown would be:</p>
<pre><code>def output():
    output = ""    
    for i in list(alphabet):
        for key in checked.keys():
            if i != key:
               if i not in list(output):
                  output += i
    print(output)
</code></pre>
<p><em>Sidenote: Please either make checked a global variable or put it outside of function so this function can use it</em></p>
</div>
<span class="comment-copy">It seems like there are no missing letters at all?</span>
<span class="comment-copy">I didn't understand. you want to list all the alphabet letters that are not present in the string? So if the string is <code>one</code>, you want to print all letters except [<code>o</code>, <code>n</code>, <code>e</code>]?</span>
<span class="comment-copy">What should be the output for this?</span>
<span class="comment-copy">from string import ascii_lowercase</span>
<span class="comment-copy">The histogram function can be optimized, but is ok. The second function can be solved looping the alphabet: <code>[letter for letter in alphabet if letter not in s]</code></span>
<span class="comment-copy">Yes Amir, I appreciate your help.  Thank you!</span>
