<div class="post-text" itemprop="text">
<p>I have a python script I'm working on that I am packaging into a one file executable with pyinstaller.  </p>
<p>Within the script, when it is uncompiled, I am referencing a set of tools that live in a folder next to the main script, so something like this:</p>
<pre><code>\parent
    -----&gt;\tools\
       ------&gt;db.py
       ------&gt;file_utils.py
main.py
</code></pre>
<p>I've omitted the init, but it's there as well.  Within my script, I'm importing these files like </p>
<pre><code>import tools.db
import tools.file_utils
</code></pre>
<p>and all of this works fine.  When I package it as an executable with PyInstaller, I am getting a module not found error for tools.  I've tried adding the absolute path to tools, adding tools and the relevant files to hidden imports, and all of this, but I have a feeling it's the way I'm calling them in the script.  </p>
<p>I suppose all those helper scripts could just be in the parent directory next to the script, or I could add tools to the sys.path and just import db and fileutils directly, but that seems a bit janky and/or cluttered.  Anything obvious I am missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>from tools import db
from tools import file_utils
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, after flattening the entirety of my directory structure in a tmp folder to write the executable, and changing my spec file to not compile to a different directory (as well as adding the parent directory to the -p switch) and remembering to delete a reference in a different py file to another module that no longer exists, I got this all working.  </p>
<p>I think I'll piece back the parts so I can make this work much easier in the future and try and identify which part of the process was giving my packaging ImportErrors, but it was a useful exercise in picking apart the pieces of PyInstaller a bit and learning more about hooks and imports and module/package level imports.  </p>
</div>
<span class="comment-copy">So that's what I had originally.  I replaced it with the dot notation, and nothing seemed to change.  I'm writing everything to a compile folder, so my pathex in my spec file is just to that compile folder, so I wonder if adding in the parent directory, or the tools directory, will help.  Going to try and recompile and see results.</span>
