<div class="post-text" itemprop="text">
<p>Is there a way to extract specific information from a list of dictionary?
For example, I am looking to get StartInterface for StartNode is router3 and EndNode is router4</p>
<pre><code>abc = 
 [{'StartNode': 'router1',
  'EndNode': 'router2',
  'StartInterface': 'Po1',
  'EndInterface': 'Po1'},
 {'StartNode': 'router3',
  'EndNode': 'router4',
  'StartInterface': 'Po8',
  'EndInterface': 'Po8'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Its a list of objects, so to get what you want, you can go to the index of the object in the list, and with the key, you can get the value of it.</p>
<blockquote>
<pre><code>abc[1]["StartNode"] #router3
abc[1]["EndNode"] #router4
</code></pre>
</blockquote>
<p>An advice for you is that, whenever you post a question here, do share the minimum implementation which you have tried. Have a look into "how to ask question" section. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try like this:</p>
<pre><code>abc = [
        {
            'StartNode': 'router1',
            'EndNode': 'router2',
            'StartInterface': 'Po1',
            'EndInterface': 'Po1'
        },
        {
            'StartNode': 'router3',
            'EndNode': 'router4',
            'StartInterface': 'Po8',
            'EndInterface': 'Po8'
        }
    ]

for item in abc:
    print('{} for {}: startnode: {}, endnode: {}'.format(
        item['StartInterface'],
        item['StartNode'],
        item['StartInterface'],
        item['EndInterface']
    ))
</code></pre>
<p>output:</p>
<pre><code>Po1 for router1: startnode: Po1, endnode: Po1
Po8 for router3: startnode: Po8, endnode: Po
</code></pre>
<p>8</p>
<p>You can interact with all items in the list and print formatted as you wish. See the format documentation for more detail 
this article may be useful:
<a href="https://www.learnpython.org/en/String_Formatting" rel="nofollow noreferrer">https://www.learnpython.org/en/String_Formatting</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To do what you want requires iterating though the list of dictionaries to find one that matches (if any).</p>
<p>Here's a brute-force (via a linear search) way of doing that:</p>
<pre><code>abc = [{'StartNode': 'router1',
       'EndNode': 'router2',
       'StartInterface': 'Po1',
       'EndInterface': 'Po1'},
      {'StartNode': 'router3',
       'EndNode': 'router4',
       'StartInterface': 'Po8',
       'EndInterface': 'Po8'}]

def get_startinterface(objects, startnode, endnode):
    """ Return StartInterface of object with given StartNode and EndNode.
    """
    for obj in objects:
        if obj['StartNode'] == startnode and obj['EndNode'] == endnode:
            return obj['StartInterface']
    else:
        return None  # Not found.

print(get_startinterface(abc, 'router3', 'router4'))  # -&gt; Po8
</code></pre>
<p>If there are a <em>lot</em> of dictionaries and/or this is going to be done <em>very frequently</em>, the overhead of building a lookup table and using it would be worthwhile because it eliminates the need to do a relatively-slow linear search each time:</p>
<pre><code># Get better search performance by building and using a lookup table.

def get_startinterface(table, startnode, endnode):
    """ Return StartInterface of object with given StartNode and EndNode.
    """
    match = table.get((startnode, endnode), {'StartInterface': None})
    return match['StartInterface']

lookup_table = {(obj['StartNode'], obj['EndNode']): obj for obj in abc}

print(get_startinterface(lookup_table, 'router3', 'router4'))  # -&gt; Po8
</code></pre>
</div>
<span class="comment-copy"><i>"is there a way.."</i> believe me, there is nothing impossible. What have you tried?</span>
