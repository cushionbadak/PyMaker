<div class="post-text" itemprop="text">
<p>I want to be able to parse through multiple <code>ReportCharacters</code> and make sure that all are using the <code>characterID</code> number in the <code>ReportCharacter</code> name attribute and not the actual characters name.</p>
<p>How can I parse, and compare the <code>ReportCharacter name</code> and if the <code>CharacterID</code> is not there, replace the name with the corresponding <code>CharacterID</code> value?</p>
<p>This is some sample original file:</p>
<pre><code>'    &lt;?xml version="1.0" ?&gt;
    &lt;CharacterData&gt;
    &lt;Report&gt;
    &lt;ReportCharacter name="scoobydoo"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;scoobydoo&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724312&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;ReportCharacter name="mickey"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;mickey&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724313&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;ReportCharacter name="goofy"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;goofy&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724314&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;/Report&gt;
    &lt;/CharacterData&gt;'
</code></pre>
<p>This is what I would like the modified file to look like:</p>
<pre><code>'    &lt;?xml version="1.0" ?&gt;
    &lt;CharacterData&gt;
    &lt;Report&gt;
    &lt;ReportCharacter name="1024724312"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;scoobydoo&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724312&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;ReportCharacter name="1024724313"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;mickey&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724313&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;ReportCharacter name="1024724314"&gt;
    &lt;CharacterProperties&gt;
    &lt;tag name="charactername"&gt;goofy&lt;/tag&gt;
    &lt;tag name="characterID"&gt;1024724314&lt;/tag&gt;
    &lt;tag name="characterSTART"&gt;Sat Sep 15 02:01:56 2018&lt;/tag&gt;
    &lt;/CharacterProperties&gt;
    &lt;/ReportCharacter&gt;
    &lt;/Report&gt;
    &lt;/CharacterData&gt;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import xml.etree.ElementTree as ET

tree = ET.parse('characters.txt')
root = tree.getroot()

for character in root.iter('ReportCharacter'):
    current_name = character.get('name', '')
    if current_name.isdecimal():
        continue

    name = character.findtext('.//tag[@name="characterID"]')
    if name:
        character.set('name', name)

with open('characters_parsed.xml', 'w') as file_out:
    tree.write(file_out, encoding='unicode', short_empty_elements=True)
</code></pre>
</div>
<span class="comment-copy">I did try some python and am able to parse, but am new to python and am stuck.                                     import xml.etree.ElementTree as ET tree = ET.parse('characters.txt') root = tree.getroot()       root.tag root.attrib #for child in root: #    print(child.tag, child.attrib)      for ReportCharacter in root.iter('ReportCharacter'):     if ReportCharacter.attrib == root.iter('CharacterID'):         print(ReportCharacter.attrib,"nothing wrong")     &lt;- this didnt give me any results...i have tried other ways as well. I was trying to see if I could even match the two</span>
<span class="comment-copy">Please post your code in the question, properly formatted, it will be easier to help you</span>
<span class="comment-copy">This works until it comes to a node that doesnt have a characterID. Apparently there are a couple like that but they have the correct ReportCharacter value. How would I skip over those. Right now it runs and stops at the first one with this type of setup.</span>
<span class="comment-copy">here is the error:   File "/home/test01/anaconda3/lib/python3.7/xml/etree/ElementTree.py", line 1058, in <i>raise_serialization_error     "cannot serialize %r (type %s)" % (text, type(text).__name_</i>)  TypeError: cannot serialize None (type NoneType)       I was thinking of using an if (character ==0): print() # but it didnt work...I dont want to add anything to the reportcharacter if it is already correct and/or doest have a characterID.   Thanks in advance, Chris</span>
<span class="comment-copy">i didnt reallize these type of records existed, sorry for adding to the mix.</span>
<span class="comment-copy">Also to clarify the comment "add anything to the reportcharacter if it is already correct"  It is correct if it is already a numeric value and not a character name.</span>
<span class="comment-copy">I am continuing reviewing the output that did work (it worked up to the point of the error mentioned above). Since I am also learning xml at the same time one note that i have after reviewing the output is that ET optimizes what it writes back to the file. Am I assuming correctly here... an example of what I am seeing here is, from a diff of the input to the output:  &lt; &lt;preferenceValues&gt;&lt;/preferenceValues&gt; &lt; &lt;selectedValue&gt;&lt;/selectedValue&gt; --- &gt; &lt;preferenceValues /&gt; &gt; &lt;selectedValue /&gt; 5435,5436c5434,5435</span>
