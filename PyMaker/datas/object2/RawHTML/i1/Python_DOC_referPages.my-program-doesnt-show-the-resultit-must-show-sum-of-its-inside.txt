<div class="post-text" itemprop="text">
<p>I want to take a number and print sum of its digits, and if the sum is greater than 10, then sum the digits of that again (and so on)</p>
<pre><code>Example: 621
6+2+1=9
print 9

Example:743
7+4+3=14
1+4=5
print 5
</code></pre>
<p>This is what I have so far:</p>
<pre><code>num=int(input("what's the number?"))
def oneNum(num):
   numLen=len(str(num))
   tot=0
   if num&gt;=10:
      for i in range(numLen):
         i=i+1
         tot=num%10+tot
         print(tot)
         num=num//10
   if tot&gt;=10:
      num=tot
         oneNum(num)
   else:
      return(tot)
print(tot)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is called the "digital root" of a number - take the sum of the digits, and if that number is greater than or equal to 10, keep doing it until you get small enough. </p>
<p>Normally I'd fix your code, but since I just happened to write a method like this yesterday I'll just paste it here:</p>
<pre><code>def digital_root(num):
    root = sum(int(d) for d in str(num))
    while root &gt;= 10:
        root = sum(int(d) for d in str(root))
    return root
</code></pre>
<p>The easiest way to do it, as you can see, is to convert the integer into a string and iterate through each character, turning it back into a single-digit number, and add them all up.</p>
<p>Here's a recursive version (though, due to function call overhead, it would actually be slightly less efficient):</p>
<pre><code>def digital_root(num):
    root = sum(int(d) for d in str(num))
    return root if root &lt; 10 else digital_root(root)
</code></pre>
</div>
<span class="comment-copy">You defined a function called oneNum, however you never call the function. You have to call it to make it do the work.</span>
<span class="comment-copy">Also you don't return in the recursive case.</span>
