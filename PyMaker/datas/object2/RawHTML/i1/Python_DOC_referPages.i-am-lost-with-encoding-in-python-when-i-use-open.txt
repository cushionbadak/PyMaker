<div class="post-text" itemprop="text">
<p>I'm trying to write hex data taken from ascii file to a newly created binary file</p>
<p>ascii file example:</p>
<pre><code>98 af b7 93 bb 03 bf 8e ae 16 bf 2e 52 43 8b df
4f 4e 5a e4 26 3f ca f7 b1 ab 93 4f 20 bf 0a bf
82 2c dd c5 38 70 17 a0 00 fd 3b fe 3d 53 fc 3b
28 c1 ff 9e a9 28 29 c1 94 d4 54 d4 d4 ff 7b 40
</code></pre>
<p>my code </p>
<pre><code>hexList = []
with open('hexFile.txt', 'r') as hexData:
    line=hexData.readline()
    while line != '':
        line = line.rstrip()
        lineHex = line.split(' ')
        for i in lineHex:
            hexList.append(int(i, 16))
        line = hexData.readline()


with open('test', 'wb') as f:
    for i in hexList:
        f.write(hex(i))
</code></pre>
<p>Thought <code>hexList</code> holds already hex converted data and <code>f.write(hex(i))</code> should write these hex data into a file, but python writes it with ascii mode</p>
<p>final output: <code>0x9f0x2c0x380x590xcd0x110x7c0x590xc90x30xea0x37</code> which is wrong!</p>
<p>where is the issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/binascii.html#binascii.unhexlify" rel="noreferrer"><code>binascii.unhexlify</code></a>:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; binascii.unhexlify('9f')
'\x9f'

&gt;&gt;&gt; hex(int('9f', 16))
'0x9f'
</code></pre>
<hr/>
<pre><code>import binascii

with open('hexFile.txt') as f, open('test', 'wb') as fout:
    for line in f:
        fout.write(
            binascii.unhexlify(''.join(line.split()))
        )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>replace:</p>
<pre><code>    f.write(hex(i))
</code></pre>
<p>With:</p>
<pre><code>    f.write(chr(i))  # python 2
</code></pre>
<p>Or,</p>
<pre><code>    f.write(bytes((i,))) # python 3
</code></pre>
<h3>Explanation</h3>
<p>Observe:</p>
<pre><code>&gt;&gt;&gt; hex(65)
'0x41'
</code></pre>
<p><code>65</code> should translate into a single byte but <code>hex</code> returns a four character string.  <code>write</code> will send all four characters to the file.</p>
<p>By contrast, in python2:</p>
<pre><code>&gt;&gt;&gt; chr(65)
'A'
</code></pre>
<p>This does what you want: <code>chr</code> converts the number <code>65</code> to the character single-byte string which is what belongs in a binary file.</p>
<p>In python3, <code>chr(i)</code> is replaced by <code>bytes((i,))</code>.</p>
</div>
<span class="comment-copy">works much faster than the main code</span>
<span class="comment-copy">This will not work in Python 3.x, because binary file write expect <code>bytes</code> or <code>bytearray</code> object, but <code>chr</code> returns a <code>str</code> object.</span>
<span class="comment-copy">@falsetru Thanks.  The answer is now updated with both py2 and py3 forms.</span>
