<div class="post-text" itemprop="text">
<p>I'd like to fill in a mean value where a feature is null.</p>
<p>I've tried:</p>
<pre><code># Let's impute other NAs with mean value
for f in data:
   if data[f].isnull().sum() / data.shape[0] &lt; threshold: np.isnan(data[f]) = data[f].mean()
</code></pre>
<p>...which raises an error:</p>
<blockquote>
<p>SyntaxError: can't assign to function call</p>
</blockquote>
<p>I've also tried</p>
<pre><code>data[f][np.isnan(data[f])] = data[f].mean()
</code></pre>
<p>but that's even a bigger mess.</p>
<p>Help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>DataFrame.fillna</code> to fill the nan's directly.
It creates a dataframe replacing <code>nan</code> with value specified in the parentheses. </p>
<p><code>df.fillna(df.mean())</code> will return the new dataframe, so you will have to write  <code>df=df.fillna(df.mean())</code> to keep it.</p>
</div>
<span class="comment-copy">It takes terribly long time to compute.</span>
<span class="comment-copy">Well, try to group your data if it's too large. You can try: <code>df = df.groupby(['id']).fillna(df.mean())</code></span>
