<div class="post-text" itemprop="text">
<p>I have a Django project with an HTML file that lists all of the CSV files that have been uploaded to my Postgresql database and when you click on the CSV of interest a new page is rendered with the CSV model's basic information (name/time submitted). </p>
<p>This is the First Page:
<div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>  {% for csv in Data_List %}
      &lt;a href = "{{csv.id}}"&gt;&lt;button class="btn btn-primary" style = "font-size:1.2em;" &gt;{{csv.name}}&lt;/button&gt;&lt;/a&gt;
      &lt;br&gt;&lt;br&gt;
  {% endfor %}</code></pre>
</div>
</div>
</p>
<p>This is the second page:
<div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;p&gt;{{request.user.username}}'s Note
    &lt;h6&gt;{{worklog.name}}
        &lt;br&gt;
      {{worklog.date}}
        &lt;br&gt;
      {{worklog.notes|safe}}
      &lt;br&gt;
      {{worklog.mycsv|safe}}
    &lt;/h6&gt;
  &lt;/p&gt;</code></pre>
</div>
</div>
</p>
<p>However, my goal is that when you click the button a python <strong>VIEW</strong> will be passed (or just retrieve) the chosen posts primary key (or other information). I want to do this so the view can ask the database for the actual CSV and do some work.</p>
<p>How can I get a view.py to request a selected posts information such as primary key? </p>
<p>Thanks and Happy Coding</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>#The url
url(r'^anote/(?P&lt;pk&gt;\d+)$', views.A_Note, name = 'anote'),
#The view
def A_Note(request, pk):
    #the rest of code here
    return render(request, "some.html", {"thing":thing, "pk":pk, "etc":etc})
</code></pre>
<p>I learned that sharp brackets &lt;&gt; in a url passes the value through to the view where it can then be accessed as an argument when defining the view. From there it can easily be used in the code.</p>
<p>Thanks!</p>
</div>
<span class="comment-copy">You'll need to share some code and explain where you're struggling - but the basic strategy is to have the database id passed to the view function as a parameter in the URL. Then in your view function you can get the corresponding object, and pass it to the template where you can extract whatever fields you're interested in.</span>
<span class="comment-copy">Thank you for answering Robin! I 100% understand the second part of your comment. Where I am struggling is having the database id passed to the view function as a parameter in the URL. and example of my URL would be either this:  `    url(r'^(?P&lt;pk&gt;\d+)$', DetailView.as_view(model = Your_CSV, template_name = "accounts/csv_graph.html")),` or it would be along the lines of `    url(r'^(?P&lt;pk&gt;\d+)$', views.YourCSV")),` int this case the view would handle the data. What are the other parameters that can be passed here? Do you have a reference to documentation? Thanks again!</span>
<span class="comment-copy">looks like you're using Django 1 (hopefully 1.11) based on those URL patterns (it's changed in Django 2). In that case <a href="https://docs.djangoproject.com/en/1.11/topics/http/urls/#named-groups" rel="nofollow noreferrer">this</a> is the link to show you how to send parameters in URLs - although it appears that you're already fine with that based on what you've posted there. (You can pass any number of parameters in a URL.)</span>
<span class="comment-copy">I FIGURED IT OUT! Thank youuuuu! I had been pushing my pk through to the view already using the sharp brackets &lt;&gt; (I didn't realize that was their function). So all I had to do was in my view "def yourcsv(request, pk):" and now I can access it! Thank you again for all of your help!</span>
