<div class="post-text" itemprop="text">
<p>I was reading the source code of the Python xml.etree.ElementTree module (<a href="https://github.com/python/cpython/blob/master/Lib/xml/etree/ElementTree.py" rel="nofollow noreferrer">https://github.com/python/cpython/blob/master/Lib/xml/etree/ElementTree.py</a>) and I came across an interesting use of slices. The authors wrote the following code:</p>
<pre><code>prefix = text[:1]
</code></pre>
<p>Which as far as I can tell is identical to:</p>
<pre><code>try:
    prefix = text[0]
except IndexError:
    prefix = text
</code></pre>
<p>Are these code snippets identical? What are the benefits and detriments of using [:1] in place of [0]?</p>
</div>
<div class="post-text" itemprop="text">
<p>One other difference: <code>text[0]</code> results in an exception if <code>text</code> is an empty list, while <code>text[:1]</code> returns an empty list. Similarly, indexing an empty string will give you an exception while slicing returns an empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>The difference is in the output format:</p>
<p><code>a[:1]</code> returns a list with the first element. While <code>a[0]</code> returns the first element.</p>
<pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4, 5, 6]
&gt;&gt;&gt; a[:1]
[1]
&gt;&gt;&gt; a[0]
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Slices -- [:1] -- return a list, whereas [0] returns an atom. </p>
</div>
<div class="post-text" itemprop="text">
<p>If your question is scoped by string usage only, then yes â€“ they are identical. You get benefit from less code, but second snippet is more pythonic and explicit.</p>
</div>
<span class="comment-copy">They're identical for strings, not necessarily for other sequence types.  For example, in the case of lists, <code>[:1]</code> is always a list (of length 0 or 1), <code>[0]</code> is a list element which may be of any type.</span>
<span class="comment-copy">I've noticed the difference between text[0] and text[:1] when text is empty. To me it seems that text[:1] is a way to silently avoid raising IndexErrors. Is it a better practice to enclose "text[0]" in a try/except block than to use "text[:1]"?</span>
<span class="comment-copy">I don't think one is better practice than the other. It all depends on what your're trying to accomplish.</span>
<span class="comment-copy">While this may be true for slicing lists, the source code in reference is using slices on strings. Both text[0] and text[:1] return a string.</span>
