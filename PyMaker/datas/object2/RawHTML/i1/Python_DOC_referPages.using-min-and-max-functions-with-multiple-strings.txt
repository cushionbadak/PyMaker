<div class="post-text" itemprop="text">
<p>I am working on a short CodingBat problem: given 2 strings, a and b, return a string of the form short+long+short, with the shorter string on the outside and the longer string on the inside. </p>
<p>Here is what I have:</p>
<pre><code>def combo_string(a, b):
    short = min(a, b)
    long = max(a, b)
    return short + long + short
</code></pre>
<p>The idea: <code>min(a, b)</code> would return the shortest of the two strings and <code>max(a, b)</code> would return the longest of the two. However, this code works inconsistently.</p>
<p><code>combo_string('a', 'bb')</code> returns <code>'abba'</code> (correct), but <code>combo_string('Hello', 'hi')</code> returns <code>'HellohiHello'</code> (incorrect and actually opposite of what I want).</p>
<p>Am I using the min() and max() functions incorrectly?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>hello</code> alphabetically precedes <code>hi</code> so it is the "minimum." What you want to do is use the <code>key</code> argument to specify that you want the minimum <em>length,</em> not the minimum <em>value.</em></p>
<pre><code>min(a, b, key=len)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to specify the key function (which will be <code>len</code>). Otherwise, Python will sort lexicographically (alphabetically, basically), which is almost certainly not what you want:</p>
<pre><code>def combo_string(a, b):
    short = min(a, b, key=len)
    long = max(a, b, key=len)
    return short + long + short
</code></pre>
<p>For example:</p>
<pre><code>min('a', 'bb', key=len)
# 'a'
min('Hello', 'hi', key=len)
# 'hi'
</code></pre>
<p>Basically, instead of just using the <code>&gt;</code> and <code>&lt;</code> operator s for comparison (i.e. <code>a &gt; b</code> or whatever), the <code>min</code> and <code>max</code> functions will use the result of the <code>key</code> function (i.e. <code>len(a) &gt; len(b)</code> or whatever).</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Am I using the min() and max() functions incorrectly?</p>
</blockquote>
<p>Yep. Basically, your problem is that <code>max(a, b)</code> isn't exactly doing what you think it is. <code>max(a, b)</code> compares the string objects <code>a</code> and <code>b</code> themselves. Python implements comparisons between strings <em>not by the strings length</em>, but by their <a href="https://en.wikipedia.org/wiki/Lexicographical_order" rel="nofollow noreferrer">lexicographical values</a>.</p>
<p>This means that sometimes <code>max(a, b)</code> might happen to work, but not always. You need to tell Python to directly compare the lengths of the strings by using <code>len</code>.</p>
</div>
