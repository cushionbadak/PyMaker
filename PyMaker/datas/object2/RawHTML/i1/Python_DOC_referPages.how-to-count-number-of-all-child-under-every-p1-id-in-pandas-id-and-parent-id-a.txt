<div class="post-text" itemprop="text">
<p>here is some part of the data table </p>
<p>Df2</p>
<pre><code>   id   title   parent_id
0   11  p1          11
1   12  p1          11
2   13  p2          12
3   14  p2          12
4   15  p2          13
5   16  p2          13
6   17  p3          13
</code></pre>
<p>This df2 problem should give output like</p>
<pre><code>p1_id | no. of p1|no. of p2| no. of p3 |
11    | 1        |4        | 1         |
12    | 0        |2        | 0         |
</code></pre>
<p>given that:
1--There is no certain hierarchy. like, may be possible that p1 have another p1 under him or p3 under him. And there may be n number of branches and node possible.
2--The p1 may have child at n number of level. how to approach to this problem.</p>
<p>Edit -<a href="https://i.stack.imgur.com/wzKRZ.png" rel="nofollow noreferrer"><img alt="see this picture" src="https://i.stack.imgur.com/wzKRZ.png"/></a> to visualize the problem</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Code</strong></p>
<pre><code>import pandas as pd
import numpy as np

data=np.array([['','id','title','parent_id'],
                [0,11,'p1',11],
                [1,12,'p1',11],
                [2,13,'p2',12],
                [3,14,'p2',12],
                [4,15,'p2',13],
                [5,16,'p3',13],
                [6,17,'p3',13]])


df=pd.DataFrame(data=data[1:,1:],
                  index=data[1:,0],
                  columns=data[0,1:])

df2=df.pivot(index='id',columns='title',values='parent_id')

df2=df.groupby(['title', 'parent_id']).count()
df2=df2.reset_index(drop=False)
df3=df2.pivot(index='parent_id',columns='title',values='id')
df3=df3.fillna(0)
print(df3)
</code></pre>
<p><strong>Input</strong></p>
<pre><code>   id title parent_id
0  11    p1        11
1  12    p1        11
2  13    p2        12
3  14    p2        12
4  15    p2        13
5  16    p3        13
6  17    p3        13
</code></pre>
<p><strong>Output</strong></p>
<pre><code>title       p1   p2   p3
parent_id               
11         2.0  0.0  0.0
12         0.0  2.0  0.0
13         0.0  1.0  2.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the crosstab function:</p>
<p><strong>Step 1: Create DataFrame</strong></p>
<pre><code>import pandas as pd
import numpy as np
d = {'id': [11, 12, 13, 14, 15, 16, 17], 'title': ['p1','p1','p2', 'p2', 'p2', 'p2', 'p3'],'parentid':['11','11','12', '12', '13', '13', '13']}
df = pd.DataFrame(data=d)
</code></pre>
<p><strong>Step 2: Crosstab</strong></p>
<pre><code>pd.crosstab(df['parentid'], df['title'])
</code></pre>
</div>
<span class="comment-copy">You can use pandas data frame grouping function.</span>
<span class="comment-copy">Can you explain why in the desired output p1_id: l1, no. of p1 is 1? I thought it should be 2?</span>
<span class="comment-copy">Did you check your output? Its not what OP wants..</span>
<span class="comment-copy">not getting the desire output.</span>
<span class="comment-copy">@Aamir, I changed the groupby to crosstab, is this what you were looking for?</span>
