<div class="post-text" itemprop="text">
<p>I have variables associated with a name that i want to take the mean of, based on its MainName. Noting that i have more than two MainNames as opposed to the example below, and would look messy doing all of it. So i was wondering if anyone could make this more concise?
Thanks in advance!</p>
<pre><code>fullname = ['MainName1,subname1','MainName1,subname2','MainName2,subname1','MainName2,subname2']
var1 = [1,5,9,4]
var2 = [2,6,1,5]
var3 = [3,7,2,6]
var4 = [4,8,3,7]

    vars = pd.DataFrame(np.column_stack([fullname,var1,var2,var3,var4]))
    vars = vars.set_index('fullname')

    meanvars = [(allvars[allvars.index.str.contains('MainName1')]).mean(),
                (allvars[allvars.index.str.contains('MainName2')]).mean()]
    MainName = ['MainName1','MainName2']

    Final = pd.DataFrame(np.column_stack([MainName,meanvars]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.extract.html" rel="nofollow noreferrer"><code>str.extract</code></a> for get substrings with joined substrings from list joined by <code>|</code> for regex <code>OR</code> passed to <code>groupby</code> with aggregating <code>mean</code>:</p>
<pre><code>fullname = ['MainName1,subname1','MainName1,subname2',
            'MainName2,subname1','MainName2,subname2']
var1 = [1,5,9,4]
var2 = [2,6,1,5]
var3 = [3,7,2,6]
var4 = [4,8,3,7]

df = pd.DataFrame(np.column_stack([var1,var2,var3,var4]), index=fullname)
print (df)
                    0  1  2  3
MainName1,subname1  1  2  3  4
MainName1,subname2  5  6  7  8
MainName2,subname1  9  1  2  3
MainName2,subname2  4  5  6  7

L = ['MainName1','MainName2']
idx = df.index.str.extract('('+ '|'.join(L) + ')', expand=False)
print (idx)
Index(['MainName1', 'MainName1', 'MainName2', 'MainName2'], dtype='object')

df = df.groupby(idx).mean()
print (df)
             0    1    2    3
MainName1  3.0  4.0  5.0  6.0
MainName2  6.5  3.0  4.0  5.0
</code></pre>
</div>
<span class="comment-copy">Can you provide an example of what your dataframe looks like? Could it be as simple as <code>allvars.groupby('names').mean()</code>?</span>
<span class="comment-copy">sorry, did not realize my question was so confusing. Have edited it thanks!</span>
<span class="comment-copy">@WarenDaleSoriano - how working my solution?</span>
<span class="comment-copy">This is great! Cheers!</span>
