<div class="post-text" itemprop="text">
<p>I have a data frame with values like below</p>
<pre><code>A B C D
1 2 3 4
5   6 7
8     9
</code></pre>
<p>When i read the above frame into Pandas using the below</p>
<pre><code>pd.read_csv(io.StringIO(raw_2), sep='\s+')
</code></pre>
<p>It is read as</p>
<pre><code>A B C   D
1 2 3   4
5 6 7   NaN
8 9 NaN NaN
</code></pre>
<p>Is there a way i can retain the blank columns and have the 9 under column D instead of B</p>
</div>
<div class="post-text" itemprop="text">
<p>You need a reader that reads fixed-width columns:</p>
<pre><code>pd.read_fwf(io.StringIO(raw_2))
#   A    B    C  D
#0  1  2.0  3.0  4
#1  5  NaN  6.0  7
#2  8  NaN  NaN  9
</code></pre>
<p>This procedure is not guaranteed to work in general. You may have to specify the columns widths by hand.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use:</p>
<pre><code>pd.read_csv(io.StringIO(raw_2), sep=r'\s{1,2}')

    A   B   C   D
0   1   2.0 3.0 4
1   5   NaN 6.0 7
2   8   NaN NaN 9
</code></pre>
<p>Which uses the regex pattern \s{1,2} as the separator. This regex matches 1-or-2 whitespace characters.</p>
<blockquote>
<p>\s{1,2} matches any whitespace character (equal to [\r\n\t\f\v ])</p>
<p>{1,2} Quantifier â€” Matches between 1 and 2 times, as many times as
  possible, giving back as needed</p>
</blockquote>
</div>
<span class="comment-copy">Looks like you do not have a dataframe but have either a text table or a CSV file, right?</span>
<span class="comment-copy">This Worked for me however to to the complexity of the data frame i had to use additional processing but this is a good suggestion thanks</span>
