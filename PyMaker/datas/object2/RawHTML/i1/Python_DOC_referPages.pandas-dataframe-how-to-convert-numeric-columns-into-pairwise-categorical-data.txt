<div class="post-text" itemprop="text">
<p>Given a pandas dataFrame, how does one convert several numeric columns (where xâ‰ 1 denotes the value exists, x=0 denotes it doesn't) into pairwise categorical dataframe? I know it is similar to one-hot decoding but the columns are not exactly one hot.</p>
<p>An example:</p>
<pre><code> df
id A  B  C  D
0  3  0  0  1
1  4  1  0  0
2  1  7  20 0
3  0  0  0  4
4  0  0  0  0
5  0  1  0  0
</code></pre>
<p>The result would be:
    df
    id match</p>
<pre><code> result 
0  A
0  D 
1  A
1  B
2  A
2  B
2  C
3  D
5  B
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.stack.html" rel="nofollow noreferrer"><code>DataFrame.stack</code></a> with filtering and <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Index.to_frame.html" rel="nofollow noreferrer"><code>Index.to_frame</code></a>:</p>
<pre><code>s = df.stack()

df = s[s!=0].index.to_frame(index=False).rename(columns={1:'result'})
print (df)
   id result
0   0      A
1   0      D
2   1      A
3   1      B
4   2      A
5   2      B
6   2      C
7   3      D
8   5      B
</code></pre>
<p>Or if performance is important use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.where.html" rel="nofollow noreferrer"><code>numpy.where</code></a> for indices by matched values with <code>DataFrame</code> constructor:</p>
<pre><code>i, c = np.where(df != 0)

df = pd.DataFrame({'id':df.index.values[i],
                   'result':df.columns.values[c]})
print (df)
   id result
0   0      A
1   0      D
2   1      A
3   1      B
4   2      A
5   2      B
6   2      C
7   3      D
8   5      B
</code></pre>
<p>EDIT:</p>
<p>For first:</p>
<pre><code>s = df.stack()

df = s[s!=0].reset_index()
df.columns= ['id','result','vals']
print (df)
   id result  vals
0   0      A     3
1   0      D     1
2   1      A     4
3   1      B     1
4   2      A     1
5   2      B     7
6   2      C    20
7   3      D     4
8   5      B     1
</code></pre>
<p>For second:</p>
<pre><code>df = pd.DataFrame({'id':df.index.values[i],
                   'result':df.columns.values[c],
                   'vals':df.values[i,c]})
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/26762100/reconstruct-a-categorical-variable-from-dummies-in-pandas">Reconstruct a categorical variable from dummies in pandas</a></span>
<span class="comment-copy">Thanks! do you know hoe to add into an extra column the value itself?</span>
<span class="comment-copy">@Codevan - sure, give em a sec.</span>
<span class="comment-copy">'value':df_train.iloc[i,c] for the resulted df would help</span>
