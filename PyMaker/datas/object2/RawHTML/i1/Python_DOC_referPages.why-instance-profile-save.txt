<div class="post-text" itemprop="text">
<p>I have some trouble understanding this code. </p>
<pre><code>from django.db.models.signals import post_save
from django.contrib.auth.models import User
from django.dispatch import receiver
from .models import Profile


@receiver(post_save, sender=User)
def create_profile(sender, instance, created, **kwargs):
    if created:
        Profile.objects.create(user=instance)


@receiver(post_save, sender=User)
def save_profile(sender, instance, **kwargs):
    instance.profile.save()
</code></pre>
<p>Why do we need to execute <code>instance.profile.save()</code> here, given that <code>post_save</code> signal is a proof that the user is already saved and a profile associated that user is already created? </p>
<p>Please help me understand it! Thanks</p>
<p>edit:
in <code>instance.profile.save()</code> is <code>profile</code> a built-in keyword</p>
</div>
<div class="post-text" itemprop="text">
<p>Seems like the first signal is to create the profile when the user is created. The second one to update the user and profile in one call, for example:</p>
<pre><code>user.first_name = 'John'
user.last_name = 'Smith'
user.profile.age = 30
user.save()  # user and profile are updated in one call
</code></pre>
<p>so you don't have to do:</p>
<pre><code>user.profile.save()
</code></pre>
</div>
<span class="comment-copy">Honestly, the second signal is an overkill to avoid writing one line of code.</span>
