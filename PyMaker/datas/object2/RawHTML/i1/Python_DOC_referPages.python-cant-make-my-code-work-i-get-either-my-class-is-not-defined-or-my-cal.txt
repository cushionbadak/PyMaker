<div class="post-text" itemprop="text">
<p>I'm doing a mine sweeper game, and here is the whole code: <a href="https://codeshare.io/5zxyXW" rel="nofollow noreferrer">https://codeshare.io/5zxyXW</a></p>
<p>I'm trying different code to make this work, at line 82(from the whole code):  </p>
<pre><code>g=class playGame(object):
    """Make the game play"""
    def __init__(self, play_game):
        def play_game(self, play_game):
            self.play_game = play_game
            grid_size = int(input("Choose the Width of the board: "))
            num = int(input("Choose the number of mines: "))
            self.mines = mines
            mines = place_mines(grid, mines)
            grid1 = grid(grid_size, self.mines)
            while not gameOver:
                print(grid)
                print("Make your move:")
                x = int(input("x: "))
                y = int(input("y: "))
                grid.makeMove(x, y)
                gameOver = grid.hitMine(x, y)
                if grid.isWinner() and gameOver == False:
                    gameOver = True
                    winner = True
                    print(grid)
                    if winner:
                        print("Congratulations. You Win!")
                    else:
                        print("You hit a mine. Game Over!")
g.play_game()
</code></pre>
<p>The error I get is that my <strong>class</strong> is marked, as an invalid syntax, So I found this:  <a href="https://stackoverflow.com/questions/16931461/invalid-syntax-when-create-a-instance-of-class">invalid syntax when create a instance of class</a></p>
<p>But as far as I can see <code>play_game()</code> is to the fully to the right. And even if I add a doc string, it still complains.</p>
<p>So I found this <a href="https://stackoverflow.com/questions/14044060/nameerror-name-game-is-not-defined-but-it-is">NameError: name 'Game' is not defined, but it is</a> but, shall I really take <code>self.play_game=play_game</code></p>
<p>outside the class???</p>
<p>Okey so It looks something like this now: </p>
<pre><code>class playGame(object):
    def __init__(self, play_game):
        def play_game(self, play_game):
            #self.play_game = play_game
            grid_size = int(input("Choose the Width of the board: "))
            num = int(input("Choose the number of mines: "))
            self.mines = mines
            mines = place_mines(grid, mines)
            grid1 = grid(grid_size, self.mines)
            while not gameOver:
                print(grid)
                print("Make your move:")
                x = int(input("x: "))
                y = int(input("y: "))
                grid.makeMove(x, y)
                gameOver = grid.hitMine(x, y)
                if grid.isWinner() and gameOver == False:
                    gameOver = True
                    winner = True
                    print(grid)
                    if winner:
                        print("Congratulations. You Win!")
                    else:
                        print("You hit a mine. Game Over!")
self.play_game = play_game
play_game()
</code></pre>
<p>Then I got: </p>
<pre><code>    self.play_game = play_game
NameError: name 'play_game' is not defined
</code></pre>
<p>Note! I choose to delete the <code>g</code> in the <code>g = class playGame()</code></p>
<p>So the invalid syntax, disappeared. (even though I don't agree that is the answer but)</p>
<p>--</p>
<p>So I don't know what to do here. I want to make it work. If it should run properly it should:</p>
<ol>
<li><p>ask me the size of the grid.</p></li>
<li><p>ask me how many mines in the grid.</p></li>
<li><p>play.</p></li>
<li><p>the end.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You are definitely struggling with basics.
Second attempt is good, but:</p>
<ol>
<li>You have to remove nested function <strong>play_game</strong> from <strong>__init__</strong> function.</li>
<li>Change object initialization code.</li>
</ol>
<hr/>
<pre><code>class PlayGame(object): # class names should start with big letter
    def play_game(self):
        grid_size = int(input("Choose the Width of the board: "))
        num = int(input("Choose the number of mines: "))
        self.mines = mines
        mines = place_mines(grid, mines)
        grid1 = grid(grid_size, self.mines)
        while not gameOver:
            print(grid)
            print("Make your move:")
            x = int(input("x: "))
            y = int(input("y: "))
            grid.makeMove(x, y)
            gameOver = grid.hitMine(x, y)
            if grid.isWinner() and gameOver == False:
                gameOver = True
                winner = True
                print(grid)
                if winner:
                    print("Congratulations. You Win!")
                else:
                    print("You hit a mine. Game Over!")
game = PlayGame() # this line would call your __init__ function
game.play_game() 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to instantiate an object of your class. With your updated code, after you define the class, what are you supposed to do next? Obviously can't just let it sit there, you have to instantiate an object (variable) to that class. So you've defined the class <code>playGame</code></p>
<pre><code># Instantiate it to whichever variable/object here
myInstance = PlayGame()
</code></pre>
<p>This will instantiate the PlayGame class and assign it to the object <code>myInstance</code>. Everything defined within <code>def __init__</code> will be executed as well.</p>
<pre><code># Then execute any function(s) outside of `__init__`
# With your code, since everything is inside of `__init__`, you don't need anything else
# With Dawid's code, you need another line like so:
myInstance.play_game()
</code></pre>
</div>
<span class="comment-copy">You should work through a <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">basic tutorial</a>.</span>
<span class="comment-copy">I strongly recommend that you use <i>incremental programming</i>: write a few lines to carry out a simple task.  Test those; repair until they work.  Then go on to the next trivial step.  Continue until you have a better facility with programming.  The code you've posted is mis-using the <code>class</code> concept and mechanics, such that I'm not sure what you intend for your program structure.  You're also missing some basic skills with variables, necessary before you move on to classes.  Just back up a few steps and move forward from things you've learned.</span>
<span class="comment-copy">okej, thank you David. Even though with your, i got this: `    TypeError: play_game() missing 1 required positional argument: 'play_game `</span>
<span class="comment-copy">I haven't tested logic of your code. There was unnecessary argument in <code>play_game</code> function. Also please provide what is <code>mines</code>. Seems like you re not using it right.</span>
<span class="comment-copy">thank you! :D  :) I would vote your answer, but I can't..</span>
<span class="comment-copy">I would vote your answer, but I can't. Thanks!</span>
<span class="comment-copy">That solves only the immediate syntax problem; there are several other structural and usage problems immediately after that one; any of these cause the program to crash.</span>
<span class="comment-copy">Sure, but that's out of the scope of the question IMO and OP clearly doesn't understand how to instantiate the class</span>
