<div class="post-text" itemprop="text">
<p>I am working with the following example. I wanted to run my code with <code>mu&gt;=0.9</code> in the last line of the following snippet. </p>
<pre><code>alpha,beta,loc,scale = stats.beta.fit(value)  

error=(scale/(1.96))**2

gpdf = lambda B0, mu, sigma2: 1/np.sqrt(2*pi*sigma2)*np.exp(-1/2*((B0-mu)**2)/sigma2)
approx_sigma2 = lambda scale: (scale/(1.96))**2
ggpdf_v  = lambda B0, D0, error: gpdf(B0, mu=0.8, sigma2=error) * (D0 &lt; 3) + (D0 &gt;= 3) * gpdf(B0, mu=0.5, sigma2=error)
ggpdf_r  = lambda B0, D0, error: gpdf(B0, mu=0.5, sigma2=error)
ggpdf_c  = lambda B0, D0, error: gpdf(B0, mu=0.7, sigma2=error)
ggpdf_v  = lambda B0, D0, error: gpdf(B0, mu&gt;=0.9, sigma2=error)
</code></pre>
<p>However, I am getting this error <code>NameError: name 'mu' is not defined</code>. It is already defined but I don't see the problem. How can I fix this error? </p>
</div>
<div class="post-text" itemprop="text">
<p>This</p>
<pre><code>gpdf(B0, mu=0.7, sigma2=error)
</code></pre>
<p>is actually syntax for a function, assigning 0.7 to the argument called <code>mu</code> in that function, and the value of <code>error</code> to the argument called <code>sigma2</code> in that function.</p>
<p><code>mu&gt;=0.9</code> is not valid Python syntax for assigning to a keyword argument in a function call, but it is a valid ordinary Python expression. But for that expression to evaluate, the variable <code>mu</code> must be defined, which it isn't. But even if it was defined, I doubt it would do what you want: it would pass <code>True</code> as an argument to that function.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned elsewhere, this comes from your typo in keyword assignment <code>&gt;=</code> instead of <code>=</code>.  It is confusing because you don't hit it when <code>f2</code> is defined, only when it <code>f2</code> is evaluated (since it is hidden inside a lambda).</p>
<p>Here is a minimal example that shows the issue.</p>
<pre><code>&gt;&gt;&gt; f1 = lambda a: None
&gt;&gt;&gt; f2 = lambda: f1(a &gt;= 0)
&gt;&gt;&gt; f2()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 1, in &lt;lambda&gt;
NameError: name 'a' is not defined
</code></pre>
</div>
<span class="comment-copy">Where is it defined??? Why are you using lambda expressions here to begin with? Assigning a lambda to a name <b>defeats the entire purpose of a lambda and you should just use a regular function definition</b></span>
<span class="comment-copy">Where you define mu?  in lines <code>ggpdf_c  = lambda B0, D0, error: gpdf(B0, mu=0.7, sigma2=error)</code> you do not use <code>mu</code> variable, but set <code>gpdf</code> parameter mu to 0.7</span>
<span class="comment-copy">You should define <code>mu=0</code> before the lambda function calls. If you don't do that, Python does not find a definition for <code>mu</code> inside the scope of the lambda functions.</span>
<span class="comment-copy">Note, <code>mu</code> is not defined anywhere in the lambda where you try to do <code>mu&gt;=0.9</code>. Don't take this the wrong way, but I think you have some fundamental misunderstandings about the way Python works. Often, when people come from a math background they think programming is like math. There are superficial similarities, and math helps make you a good programmer, but programming languages do not work like mathematical formalisms. Also note, your question has <b>nothing to do with anonymous functions</b>, which you shouldn't be using tobegin with. This same error would happen with regular functions.</span>
<span class="comment-copy">How can I change these lambda functions to regular functions?</span>
<span class="comment-copy">Well, the syntax is valid, it is passing the result of the expression <code>mu&gt;=0.9</code> to that positional argument. It happens to be a <i>runtime error</i> because <code>mu</code> isn't defined.</span>
<span class="comment-copy">so how can we define the value of <code>a</code> to be <code>&gt;=0</code> inside or outside the function?</span>
<span class="comment-copy"><code>&gt;=0</code> to a not a valid python literal. What is that supposed to represent?</span>
<span class="comment-copy">The line <code>ggpdf_v  = lambda B0, D0, error: gpdf(B0, mu&gt;=0.9, sigma2=error)</code> runs into the same issue that I show here, keyword arguments are not variables that can be manipulated.  There is a 1:1 correspondence between <code>f1(a=1)</code> and <code>f1(**{'a': 1})</code>, the fact that <code>a</code> looks like a normal variable there is syntactic sugar.  The reason that we get a NameError instead of a SyntaxError is because the expression <code>a &gt;= 0</code> still means something (or would, if <code>a</code> existed).</span>
