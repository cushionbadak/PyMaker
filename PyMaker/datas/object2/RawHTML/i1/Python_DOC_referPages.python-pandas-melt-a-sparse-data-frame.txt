<div class="post-text" itemprop="text">
<p>I have a dataframe which looks like this</p>
<pre><code>   a    b        z
1 NULL NULL  ... 1
2 NULL  1    ... NULL
3  1   NULL  ... NULL
</code></pre>
<p>The first column is always populated and there are many others to the right of it. Of columns a through z one is populated the rest are not.</p>
<p>I would like to transform this dataframe into a two-column data frame with the headers of columns a through z in the second column. The example above would be transformed to this.</p>
<pre><code>  The_Column
1    z
2    b
3    a
</code></pre>
<p>The pandas.melt() function is close to what I need, but it doesn't handle the NULL values. I only care about the one cell in columns B through Z which is populated. </p>
<p>Is there an elegant way to handle this problem? </p>
</div>
<div class="post-text" itemprop="text">
<p>you need melt, and then df.dropna() - that's it</p>
<p>this should work:</p>
<pre><code>df.set_index('a').melt().dropna().reset_index()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>stack</code> (which drops NA's by default):</p>
<pre><code>x = (df.set_index('a')
         .stack()
         .reset_index()
         .drop(columns=0)
         .rename(columns={'level_1': 'The_Column'})

print(x)
</code></pre>
<p>Output:</p>
<pre><code>   a The_Column
0  1          z
1  2          b
2  3          c
</code></pre>
</div>
<span class="comment-copy">That's not a DataFrame. Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> that accurately represents your problem.</span>
<span class="comment-copy">sorry, i meant dropna(), not drop_duplicates()</span>
