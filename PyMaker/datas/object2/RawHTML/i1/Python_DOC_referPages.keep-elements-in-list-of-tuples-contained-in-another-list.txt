<div class="post-text" itemprop="text">
<p>so I have this list of badWords:</p>
<pre><code>badWords = ["nu", "să", "o", "și", "de", "i", "pe", "cu", "ce", "mai", "la", "în", "un", "se", "mi", "eu", "ca",
                "că"]
</code></pre>
<p>And I have this double list in this format:</p>
<pre><code>word_list = [(673, 'de'), (606, 'și'), (518, 'o'), (486, 'să'), (484, 'nu'), (469, 'i'), (348, 'pe'), (309, 'răzvan'), (308, 'cu'), (304, 'ce'), (302, 'mai')]
</code></pre>
<p>I have tried to do this, in order to delete an entry which match my list of bad words</p>
<pre><code>for x in range(len(word_list)):
    for y in range(len(word_list[x])):
        for word in badWords:
            if(word_list[x][y] == word):
                word_list.remove(x)
</code></pre>
<p>But I get this:</p>
<blockquote>
<p>Error: list.remove(x): x not in list</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You're better off creating a new list with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>, and keeping only those tuples with a second item not present in <code>badWords</code>:</p>
<pre><code>[i for i in word_list if i[1] not in badWords]
# [(309, 'răzvan')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'd better not remove items while iterating.
You can do like this:</p>
<pre class="lang-py prettyprint-override"><code>for word in word_list[:]:
    if word[1] in badWords:
        word_list.remove(word)

print(word_list)
# [(309, 'răzvan')]
</code></pre>
<p>You can read <a href="https://github.com/satwikkansal/wtfpython#-deleting-a-list-item-while-iterating" rel="nofollow noreferrer">wtfpython</a>, it may help you.</p>
</div>
<div class="post-text" itemprop="text">
<p>The operator <code>in</code> works much faster with sets than with lists:</p>
<pre><code>s = set(badWords)
list(filter(lambda x: x[1] not in s, word_list))
# [(309, 'răzvan')]
</code></pre>
</div>
<span class="comment-copy">This is probably a duplicate of multiple things.  TL/DR: A) generally using remove inside a for loop is a bad idea.  B) You probably just want to do cleaned_word_list = [x for x in word_list if x[1] not in badWords]</span>
<span class="comment-copy"><code>remove</code> takes an element of a list, not an index.<code>x</code> is an index in your case.</span>
<span class="comment-copy">That was working. Thank you so much!</span>
