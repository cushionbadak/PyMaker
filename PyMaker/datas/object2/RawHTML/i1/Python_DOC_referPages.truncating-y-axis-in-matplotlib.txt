<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15858192/how-to-set-xlim-and-ylim-for-a-subplot-in-matplotlib">How to set xlim and ylim for a subplot in matplotlib [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>The y axis of my matplotlib bar chart is between 0 and 1. However, all values for in the chart are between 0.8 and 1 so I would like to start the y axis at 0.7. I haven't been able to find the pandas method of doing this so any help would be appreciated. </p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<h2>New Answer</h2>
<p>@ChrisA has provided the best answer in the comments: <strong>If using <code>DataFrame.plot()</code> method, add argument <code>ylim=(0.7, 1)</code></strong></p>
<h2>Old Answer</h2>
<p>If you've used the usual <code>import matplotlib.pyplot as plt</code>, a quick fix could be to add the following lines under your pandas plot command:</p>
<pre><code># gca = "get current axis"
ax = plt.gca()

# ax.get_ylim() returns a tuple of (lower ylim, upper ylim)
ax.set_ylim(0.7, ax.get_ylim()[1])
</code></pre>
<p>If you're using the object-oriented matplotlib API that typically starts with something like <code>fig, ax = plt.subplots()</code> (reference: <a href="https://matplotlib.org/tutorials/introductory/lifecycle.html" rel="nofollow noreferrer">The Lifecycle of a Plot</a>), then you won't need to run <code>ax = plt.gca()</code>.</p>
</div>
<span class="comment-copy">If using <code>DataFrame.plot()</code> method, add argument <code>ylim=(0.7, 1)</code></span>
<span class="comment-copy">yep that worked perfectly thanks. I did not know lim existed</span>
