<div class="post-text" itemprop="text">
<p>I have a model form say,</p>

models.py

<pre><code>Y_N = (('Y', 'Yes'), ('N', 'No'))
M_A = (('M', 'Man'), ('A', 'Auto'))

class Test(models.Model):
    feild1 = models.CharField(max_length=1, choices=Y_N, default='Y', db_index=True)
    feild2 = models.CharField(max_length = 1, choice=M_A, default = 'M')
</code></pre>

forms.py

<pre><code>class TestForm(ModelForm):
    class Meta:
        model = Test
        feilds = ['feild1', 'feild2']
</code></pre>
<p>Now in a template I am adding another select value 'Don't update' whose value is 0. So how can I handle this <code>'Select a valid choice. 0 is not one of the available choices.'</code>. I need that form submit if the feild value is either 0 or 'Y' or 'N'.</p>
</div>
<div class="post-text" itemprop="text">
<p>You add <code>(0, "Don't update")</code> to <code>Y_N</code> so it's a valid choice.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to do that in the <code>Form</code>. You can override the <code>clean</code> method for example, or in this case just the specific <code>clean_FOO</code> method:</p>
<pre><code>class TestForm(ModelForm):

    class Meta:
        ... # same as before

    def clean(self):
        cleaned_data = super().clean()
        if self.errors.get('field1') and self.data.get('field1') == '0':
            # we know the error is because submitted data doesn't match model options
            del self._errors['field1']  # error on field1 removed
        return cleaned_data  # note cleaned_data won't contain 'field1' so it won't save it.
</code></pre>
</div>
<span class="comment-copy">There's various ways to approach it, but all involve customising your <code>TestForm</code>: Either define your own form field for <code>field1</code> (with 3 choices), then when saving the form, make sure you only save if <code>cleaned_data['field1']</code> is Y or N. Or you override the <code>clean_field1</code> method to accept 0 and again, override <code>save()</code> to not save when it's 0.</span>
<span class="comment-copy">@dirkgroten can't I do some validation in my forms as I don't have to make changes in feilds.</span>
<span class="comment-copy">Can I get the value in my view to make a check and based on that I modify my save.</span>
<span class="comment-copy">Which value? It depends how your view is structured. Normally, you'd first check if the form <code>is_valid()</code> and that would return <code>False</code> if you don't change the validation as shown in my answer. It would be bad design to then in the view, when the form is not valid, to override the behaviour and save regardless, but yes, you can do it in the view.</span>
<span class="comment-copy">Does this above clean() method need to call explicitly or it will check on .is_valid() ?</span>
<span class="comment-copy">It's called by <code>is_valid()</code>. You should read <a href="https://docs.djangoproject.com/en/2.2/ref/forms/validation/#form-and-field-validation" rel="nofollow noreferrer">this</a></span>
<span class="comment-copy">But when I submit the form it says formset.is_valid is False. And when I check using formset.errors I get this, [{'feild1': [u'Select a valid choice. 0 is not one of the available choices.']}]</span>
