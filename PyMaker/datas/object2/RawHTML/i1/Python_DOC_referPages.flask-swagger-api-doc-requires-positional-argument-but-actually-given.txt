<div class="post-text" itemprop="text">
<p>I just started to code in Flask swagger backend. When I tried to extract multiple paths and the argument parameters, an error occurs, says:</p>
<pre><code>TypeError: get() missing 1 required positional argument: 'q'
</code></pre>
<p>But actually, my "get()" function <strong>has</strong> the positional argument 'q'. I may ask why this error occurs? That could be weird since I use</p>
<pre><code>request.arg.get('q')
</code></pre>
<p>it works good and can returns the expected query argument.</p>
<p>The expected API paths is:</p>
<pre><code>GET 127.0.0.1:8888/book/1?q=question20
</code></pre>
<p>and my code is here:</p>
<pre><code>from flask import Flask, request
from flask_restplus import Resource, Api

app = Flask(__name__)
api = Api(app)


@api.route("/&lt;string:resource&gt;/&lt;int:rid&gt;")
@api.doc(params={'q': 'Your query here'})
class API(Resource):
    def get(self, resource, rid, q):
        return {"resource": resource,
                "id": rid,
                "query": q
                }, 200


if __name__ == "__main__":
    app.run(host='127.0.0.1', port=8888, debug=True)
</code></pre>
<p>I would appreciate if someone can help me solve this problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>api.parser()</code> to document and capture query parameters</p>
<pre><code>parser = api.parser()
parser.add_argument('q', type=str, help='Resource name', location='args')

@api.route("/&lt;string:resource&gt;/&lt;int:rid&gt;")
@api.doc(parser=parser)
class API(Resource):
    def get(self, resource, rid):

        args = parser.parse_args()
        q = args['q']

        return {"resource": resource,
                "id": rid,
                "q":q,
                }, 200
</code></pre>
<p>This method is marked as deprecated <a href="https://flask-restplus.readthedocs.io/en/stable/parsing.html" rel="nofollow noreferrer">https://flask-restplus.readthedocs.io/en/stable/parsing.html</a></p>
</div>
<span class="comment-copy">Thank you Adrian. This method works.</span>
