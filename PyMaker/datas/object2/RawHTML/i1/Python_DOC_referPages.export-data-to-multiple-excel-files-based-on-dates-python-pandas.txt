<div class="post-text" itemprop="text">
<p>I'm trying to export my datasets to multiple excel files based on dates. </p>
<p>Here's my table</p>
<pre><code>datestart
+----------+
2019-03-14
2019-03-14
2019-03-12
2019-03-11
2019-03-08
2019-03-07
2019-03-06
2019-03-05
2019-03-04
2019-03-01
</code></pre>
<p>for each date I want to create a new file.</p>
<pre><code>datestart   | filename
+-----------+-------------+
2019-03-14  | file_031419
2019-03-14  | file_031419
2019-03-12  | file_031219
2019-03-12  | file_031219
2019-03-08  | file_030819
2019-03-08  | file_030819
2019-03-06  | file_030619
2019-03-06  | file_030619
2019-03-06  | file_030619
2019-03-01  | file_030119
</code></pre>
<p>The dates are stored as datetime. I don't want to hard code the dates. I want the script to look for columns with the same date, group them together and export to a file with the date in the filename.</p>
<p>The script should export to 5 files. Each of the files would only include data with the specific date. </p>
<p>For example, file_031419 would only have the data with 031419 as the date, file_031219 would only have 031219 data, etc..</p>
<p>file_031419
file_031219
file_030819
file_030619
file_030119</p>
</div>
<div class="post-text" itemprop="text">
<p>You can get a list of unique dates using <code>list(set())</code>, use Pandas and <code>df.loc[]</code> to subset the data based on the date, use <code>pd.to_datetime()</code> to convert the date into the format you want for the filename, and then use <code>df.to_excel()</code> to save your datasets as Excel files:</p>
<pre><code>import pandas as pd

df = pd.Series('''2019-03-14
2019-03-14
2019-03-12
2019-03-12
2019-03-08
2019-03-08
2019-03-06
2019-03-06
2019-03-06
2019-03-01'''.split('\n'), name='datestart', dtype=str).to_frame()

df['data'] = np.random.rand(len(df))

# Get unique dates
dates = list(set(df.datestart.values))

for date in dates:
    idx = df.datestart == date # Filter by unique date
    filename = 'file_'+list(set(pd.to_datetime(df.loc[idx, 'datestart']).dt.strftime('%m%d%y')))[0]+'.xlsx'
    df.loc[idx, 'data'].to_excel(filename) # Save subset of data frame as excel file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use some string methods and string formatting.</p>
<pre><code>dates = [‘2019-03-01’, ‘2019-05-06’]
for date in dates:
    split_date = date.split(‘-‘)
    fname = ‘file_{}{}{}’.format(split_date[0],split_date[2],split_date[1]
    # save to .csv with fname
</code></pre>
</div>
<span class="comment-copy">How are your dates stored? Are they strings?</span>
<span class="comment-copy">And what is your problem? Please be more precise. <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a></span>
<span class="comment-copy">I don't want to hard code the dates. I want the script to look for columns with the same date, group them together and export to a separate file from all other dates.</span>
<span class="comment-copy">Okay, that changes the question. You should put those additional details in your question, and I will update my answer to reflect them.</span>
<span class="comment-copy">This only exports one file with the first date in the list. I would need 5 files. The 5 files would include all the data with the specific date.file_031419 file_031219 file_030819 file_030619 file_030119</span>
