<div class="post-text" itemprop="text">
<p>I have seen a couple of questions asking how to force a screen redraw in tkinter (which can be done using <code>update_idletasks</code>. I would like to do the opposite: suspend Tkinter's automatic screen redrawing until I have completed some major surgery to the application window - insert, delete, reposition a large number of widgets on a canvas, and then activate automatic screen redrawing after I'm done. Is that possible? I can't find any documented way of doing this. I'm using Tkinter with Python 3. </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I would like to do the opposite: suspend Tkinter's automatic screen redrawing until I have completed some major surgery to the application window - insert, delete, reposition a large number of widgets on a canvas, and then activate automatic screen redrawing after I'm done. Is that possible?</p>
</blockquote>
<p>Yes, it's possible. That's precisely how tkinter works by default. </p>
<p>Tkinter runs in a single thread. While any of your code is running, tkinter has no ability to update the screen unless you explicitly call <code>update</code> or <code>update_idletasks</code> for it to be updated. </p>
</div>
<span class="comment-copy">That's the way it works by default.  If the mainloop isn't running, and you're not calling <code>.update()</code> or <code>.update_idletasks()</code>, none of your canvas changes get drawn.</span>
<span class="comment-copy">@jasonharper - but the mainloop <i>is</i> running. Is there a way to suspend it?</span>
<span class="comment-copy">How are you managing to let the mainloop have any CPU time while you're doing your canvas updates?  You'd have to go out of your way to allow that.</span>
<span class="comment-copy">@jasonharper - isn't the mainloop running in a separate thread? I was under the impression that it is.</span>
<span class="comment-copy">With your <code>mainloop</code>-issue: You can break the <code>mainloop</code>by instantiating <code>.quit()</code>. After that you can just simply start the <code>mainloop</code>again if you want. But keep in mind that the window will be closed if you run it over the console and you don't give the program any tasks after <code>.quit()</code>.</span>
<span class="comment-copy">Thanks for the explanation.</span>
