<div class="post-text" itemprop="text">
<p>The code below determines if a number is prime or not.</p>
<p>I get the same outputs if I do <code>def prime(number)</code> as I would <code>def prime()</code> and for the if statement at the bottom. What is the difference between using the two?</p>
<pre><code>def prime(number):
    if number &gt; 0:
        for i in range(2, number):
            if number % i == 0:
                return False
            return True

number = int(input('Enter your number:\n'))

if prime(number):
    print('Prime Number!')
else:
    print('Not Prime Number!')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason this works is because if a variable is not defined in the local scope, then Python will get the global scope variable instead (if you want to alter a global variable from a local scope you should specify that with the statement <code>global my_variable</code>). Your names between these scopes should be unique such as:</p>
<pre><code>def prime(local_number): # whatever is fed to our function we'll call "local_number"
    if local_number &gt; 0:
        for i in range(2, local_number):
            if local_number % i == 0:
                return False
            return True

number = int(input('Enter your number:\n')) # our global variable

if prime(number):
    print('Prime Number!')
else:
    print('Not Prime Number!')
</code></pre>
<p>This is better practice, and now <code>prime()</code> will have an error while <code>prime(number)</code> will work correctly. </p>
</div>
<span class="comment-copy">The answer has to do with <a href="https://python-textbok.readthedocs.io/en/1.0/Variables_and_Scope.html#variable-scope-and-lifetime" rel="nofollow noreferrer">variable scope</a>.</span>
<span class="comment-copy">It's better to use the version with the parameter, because then you're not relying on a global variable.</span>
<span class="comment-copy">Put your top-level code in a <code>main()</code> method (generally a good practice for many reasons). Then repeat your experiment where you try to call <code>prime()</code> without any arguments. You'll get an instructive error.</span>
<span class="comment-copy">Not just variable scope, but the fact that there isn't another thread running that could change the value of <code>number</code> while <code>prime</code> is running.</span>
