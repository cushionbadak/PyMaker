<div class="post-text" itemprop="text">
<p>I'm trying to write code using Tensorflow Probability to classify a set of samples (coming from multiple Gaussian distributions) using the EM algorithm.</p>
<p>As I want to write this code for any generic problem (I want it to work if the samples come from 2 Gaussian distributions or 8 Gaussian distributions).</p>
<p>The problem that I have right now is that <strong>I can't find a way to create an array of tfd.Normal</strong>.</p>
<p>I want to have it as an array (or another similar type of data) because this way I can work with an indeterminate number of distributions.</p>
<p><strong>Can anyone help me with this problem?</strong></p>
<p><strong>EDIT</strong>: Could be a solution the following code?</p>
<pre><code>true_mu = np.array([20,60], dtype=np.float64)
true_sigma = np.array([8,4], dtype=np.float64)  
true_dist = tfd.Normal(loc=true_mu, scale=true_sigma)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>TFP distributions are batch capable out of the box. Your code should work, and represents a vector of 2 normal distributions, where the first is <code>N(X|20, 8)</code> and the second is <code>N(X|60, 4)</code>.</p>
<p>You can query this by <code>true_dist.batch_shape</code> (which will return <code>[2]</code> in this case).</p>
<p>You can now sample: <code>true_dist.sample()</code> (returns a float64 with shape <code>[2]</code>).</p>
<p>You can compute probabilities: <code>true_dist.log_prob(0)</code> (returns a float64 with shape <code>[2]</code>, representing <code>[log N(0|20, 8), log N(0|60, 4)]</code>).</p>
<p>You can estimate independent probs for each batch member: <code>true_dist.log_prob([0, 1])</code> (returns a <code>float64</code> with shape <code>[2]</code>, representing <code>[log N(0|20, 8), log N(1|60, 4)]</code>).</p>
<p>Also note that TFP distributions broadcast their parameters, so if you want two normals with the same loc and different scale, you can write <code>tfd.Normal(0, [10, 20])</code>.</p>
</div>
<span class="comment-copy">Just check <a href="https://www.tensorflow.org/api_docs/python/tf/distributions/Normal" rel="nofollow noreferrer">this</a></span>
<span class="comment-copy">Thanks! Do you know if there is anyway to generate 200 samples of 1 distribution and 500 of the other one? The only way I find is: 1. Generate 500 samples and for the first one take the first 200 and discard the other 300. 2. Generate 500 samples and only take the second column, generate 200 samples and only take the first column.</span>
<span class="comment-copy">You could write <code>d[0].sample(200), d[1].sample(500)</code>, but note that distribution slicing is a new feature, you would need to use <code>pip install tfp-nightly</code></span>
