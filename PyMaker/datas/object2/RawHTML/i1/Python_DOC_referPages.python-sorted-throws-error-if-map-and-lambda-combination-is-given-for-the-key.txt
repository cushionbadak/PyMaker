<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; def last_letter(s):
...   return s[-1]
...
&gt;&gt;&gt; sorted(['ghi', 'def', 'abc'], key=last_letter)
['abc', 'def', 'ghi']
</code></pre>
<p>But,</p>
<pre><code>&gt;&gt;&gt; sorted(['ghi', 'def', 'abc'], key=map(lambda f: f[-1], ['abc', 'def', 'ghi']))

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'list' object is not callable
</code></pre>
<p>I can see the <strong>map</strong>() returns the expected values</p>
<pre><code>&gt;&gt;&gt; map(lambda f: f[-1], ['abc', 'def', 'ghi'])
['c', 'f', 'i']
</code></pre>
<p>Where I am doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>key</code> argument to your call to <code>sorted</code> needs to be a function. Instead, you're currently giving it the <em>result</em> of a function call. Try <code>sorted(['ghi', 'def', 'abc'], key=lambda f:f[-1])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can't to use a map as a <code>lambda</code> function, the strings in the list are automatically passed to the <code>lambda</code> and the operation defined in the <code>lambda</code> will be executed and the result will be returned, simply use it like this:</p>
<pre><code>print(sorted(['ghi', 'def', 'abc'], key = lambda f: f[-1])) # ==&gt; ['abc', 'def', 'ghi']
</code></pre>
</div>
<span class="comment-copy"><code>map</code> creates an iterator / list whereas <code>key</code> should be a function. The result of a function is not equal to the function itself.</span>
<span class="comment-copy">What do you expect this to doâ€¦?</span>
