<div class="post-text" itemprop="text">
<p>I have a pandas DataFrame where each cell in a column is a 2d array of items.</p>
<p>EX: Observation 1 has column <code>items</code> with values <code>['Baseball', 'Glove','Snack']</code></p>
<p>When I use <code>.unique</code> on the individual cells, each cell gets analyzed based on the whole arrays value, not individual values in the array.</p>
<p>How can I iterate through each array in each cell to determine the true unique amount of items in the column? Thanks</p>
<pre><code>  Items
0 ['Baseball', 'Hockey Stick', 'Mit']
1 ['Mit', 'Tennis Racket']
2 ['Baseball', 'Helmet']
</code></pre>
<p>These all return as unique values, I would like to get the unique count for each value in each list.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use <code>chain</code> method of <code>itertools</code> together with <code>set</code>s as to solve the problem as follows.</p>
<pre><code># you have a dataframe called data with the column items.

from itertools import chain
unique_lists_in_items = data.items.unique().tolist()
set_of_items = set(chain(*unique_lists_in_items))
</code></pre>
<p><code>set_of_items</code> is what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>np.unique</code> and <code>np.concatenate</code> on the column of interest. I have made an example below:</p>
<pre><code>import pandas as pd
import numpy as np

df = pd.DataFrame({'fruits':(np.array(['banana', 'apple']), np.array(['cherry', 'apple']))})
#   items
#0  [banana, apple]
#1  [cherry, apple]
np.concatenate(df.fruits.values) #.values accesses the numpy array representation of the column
#array(['banana', 'apple', 'cherry', 'apple'],
#      dtype='&lt;U6')
np.unique(np.concatenate(df.fruits.values)) #unique items
#array(['apple', 'banana', 'cherry'],
#      dtype='&lt;U6')
np.unique(np.concatenate(df.fruits.values), return_counts=True) #counts
#(array(['apple', 'banana', 'cherry'],
#   dtype='&lt;U6'), array([2, 1, 1]))
subset = df.fruits.dropna() # getting rid of NaNs
subset.loc[subset.map(len)!=0] #get rid of zero-length arrays
#0    [banana, apple]
#1    [cherry, apple]
#Name: fruits, dtype: object
np.unique(np.concatenate(subset.loc[subset.map(len)!=0].values), return_counts=True) #This works as desired
#(array(['apple', 'banana', 'cherry'],
   dtype='&lt;U6'), array([2, 1, 1]))
</code></pre>
</div>
<span class="comment-copy">"I have a pandas DataFrame where each cell in a column is a 2d array of items." then you almost certainly shouldn't be using pandas. Store only scalar values in cells. Pandas is just not geared for this, use numpy if possible or just go back to base Python and drop all the added complexity.</span>
<span class="comment-copy">This is relevant: <a href="https://stackoverflow.com/questions/30565759/get-unique-values-in-list-of-lists-in-python" title="get unique values in list of lists in python">stackoverflow.com/questions/30565759/â€¦</a>. Just replace the list with <code>df.Items</code></span>
<span class="comment-copy">Yes, I understand to only store scalar values in cells, however this is a homework problem. Not real world case.</span>
<span class="comment-copy">Your homework <i>requires</i> you to use pandas with numpy arrays in each cell? That doesn't make sense. What I'm saying is that if you have come to this approach and it's not a requirement, you will want to rethink the approach.</span>
<span class="comment-copy">The requirement is to find unique values however possible. The data was given with an array in each column cell, this is all i know.</span>
<span class="comment-copy">I don't understand how this gives a count?</span>
<span class="comment-copy">What if the array in the cell is empty?</span>
<span class="comment-copy">This should tolerate empty cells. For a count you can simply take the length of the array of unique values. Hope I understood that correctly.</span>
<span class="comment-copy">Well, 'apple' appears twice originally, but only once in the output. So all counts will be 1</span>
<span class="comment-copy">Oh, I guess I did not read the edited question. Let me update the solution.</span>
