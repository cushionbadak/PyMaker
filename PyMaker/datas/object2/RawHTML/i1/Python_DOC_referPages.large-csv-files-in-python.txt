<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17444679/reading-a-huge-csv-file">Reading a huge .csv file</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I use Python to find some patterns in a large csv file (1.2 million lines, 250MB) and perform some modification on each line if such a pattern found.
My approach is like this:</p>
<pre><code>dfile=open(csvfile,'r')
lines=dfile.readlines()
dfile.close()
for i in range(0, len(lines)):
    lines[i]=f(lines[i])
# f(.) is a function that modifies line string if a pattern is found
# then I have a code to write the processed data in another csv file.
</code></pre>
<p>The problem is that after certain iterations, the code stops running, returning memory error. My system has 32GB RAM. 
How can I improve memory performance?
I tried to read the data line by line using the following approach:</p>
<pre><code>import cache
j=1
while True:
    line=cache.getline(csvfile,j)
    if line='':
        break
    outp=open(newfile,'w')
    outp.write(f(line))
    outp.close()
    j+=1
</code></pre>
<p>This approach also failed:</p>
<pre><code>encoding error reading location 0X9b?!
</code></pre>
<p>Any solution?</p>
<p>If you are interested about the function and patterns in my csv file, voila.
This is a small example of my csv file. </p>
<pre><code>Description           Effectivity                AvailableLengths  Vendors
Screw 2" length 3"    "machine1, machine2"       25mm              "vend1, ven2"
pin 3"                machine1                   2-3/4"            vend3
pin 25mm              "machine2, machine4"       34mm              "vend5,Vend6"
Filler 2" red         machine5                   "4-1/2", 3""      vend7
"descr1, descr2"      "machin1,machin2,machine3" 50                "vend1,vend4"
</code></pre>
<p>The fields in the csv file are separated with commas, so the first line is like this:</p>
<pre><code>Screw 2" length 3","machine1, machine2",25mm,"vend1, ven2"
</code></pre>
<p>A csv reader fails reading this file because of multi value fields and use of quotation for dimensions. My function (function f in the above code) replaces commas with semicolons if that comma is between two data belonging to the same field, and replaces it with 'INCH' if that quotation is a dimension thing.</p>
<pre><code>f(firstline)=Screw 2INCH length 3INCH,machine1;machine2,25mm,vend1;ven2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try to use the following for encoding error:</p>
<pre><code>open(csvfile, 'r', encoding = 'utf8')
</code></pre>
<p>For the performance, it could be the problem of your function f() that it's having a high complexity / memory consumption.</p>
<p>Could you paste the function f() here? You may also consider using regex if you are trying to find a pattern.</p>
</div>
<span class="comment-copy">have you tried using pandas?</span>
<span class="comment-copy">What do the file contents look like and please explain the pattern you're looking for. This will help immensly! Please <a href="https://stackoverflow.com/posts/55175754/edit">edit</a> your question with these things not reply in a comment.</span>
<span class="comment-copy">The problem is that the if I split each line by commas, or read the csv file with pandas, the number of fields in each line will be different and inconsistent. So, before reading as a csv file, I need to perform some modifications on each line.</span>
<span class="comment-copy">Excactly why including what kind of actions you're performing and a sample of the data you're performing it on deems itself necessary.</span>
<span class="comment-copy">Also, opening the outfile every iteration is definitely not a great idea. I suggest keeping it open and writting a line when needed, then closing it</span>
<span class="comment-copy">Also consider seeing my comment on opening outfile in loop. It may not impact memory as much as it would performance.</span>
<span class="comment-copy">Thank you. I thought opening the output file, writing something in it and closing it right after, will release some memory so my code will go until end of the csv file, but it didn't work!</span>
<span class="comment-copy">I do not have access to my f() function right now. I will paste it here soon</span>
<span class="comment-copy">Thank you nick.  regarding your first comment, I tried several formatting, but the error didn't go. Also, in notepad++ I see that the formatting is utf-8 but cache.getline fails to read the line.</span>
<span class="comment-copy">Try opening it with notepad++ and see the encoding.</span>
