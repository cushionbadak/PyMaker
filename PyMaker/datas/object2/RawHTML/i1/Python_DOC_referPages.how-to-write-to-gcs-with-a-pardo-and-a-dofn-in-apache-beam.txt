<div class="post-text" itemprop="text">
<p>Using <code>apache_beam.io.filesystems.FileSystems</code> how to write to GCS with a ParDo and a DoFn ?? I am already getting output in csv format from a pardo, do i need  to write another pardo to write it to gcs or can i directly import a module to write it directly to gcs ? please help</p>
</div>
<div class="post-text" itemprop="text">
<p>I have an example <a href="https://github.com/gxercavins/dataflow-samples/blob/master/quick-draw/convert.py" rel="nofollow noreferrer">here</a> where I write b64-encoded images to GCS using <code>apache_beam.io.filesystems.FileSystems</code>. The last step of the pipeline takes <code>b64</code> as the PCollection containing two fields <code>key_id</code> and <code>image</code> and applies the ParDo:</p>
<pre><code>b64 | 'Save images' &gt;&gt; beam.ParDo(WriteToSeparateFiles(known_args.output))
</code></pre>
<p>where <code>known_args.output</code> is a GCS base path and <code>WriteToSeparateFiles</code> is as follows:</p>
<pre><code>class WriteToSeparateFiles(beam.DoFn):
    def __init__(self, outdir):
        self.outdir = outdir
    def process(self, element):
        writer = filesystems.FileSystems.create(self.outdir + element['key_id'] + '.png')
        writer.write(element['image'])
        writer.close()
</code></pre>
<p>With <code>filesystems.FileSystems.create()</code> I have control over the destination path. For the base path I use the parameter we passed to the function and I use the <code>key_id</code> of each element to generate meaningful file names. Finally, I append the <code>.png</code> extension as I am writing images.</p>
<p>I use <code>writer.write(element['image'])</code> to save the contents of the <code>image</code> field for each file and close the stream with <code>writer.close()</code>.</p>
</div>
<span class="comment-copy">perfect ! It helped but there's one issue instead of appending my result my output gets overwritten .could you please help me with that?</span>
