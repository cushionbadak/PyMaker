<div class="post-text" itemprop="text">
<p>i'm using SQLAlchemy - Marshmallow for schema creation, it roughly looks like this: </p>
<pre><code>class someModel(db.Model):
  y_x = db.Column(db.BigInteger, primary_key = True)

class someSchema(ma.ModelSchema):
  class Meta:
    model = someModel
</code></pre>
<p>The problem I'm having is the JSON object that I want to use has the property x, {"x": 1}, not y_x. Is there a way for the schema to recognize this? I'm aware in Marshmallow you can do y = fields.Integer(data_key="x")
But i'm not sure if this works with Marshmallow flask, and if you can add this after model = someModel or not.</p>
</div>
<div class="post-text" itemprop="text">
<p>SqlAlchemy-Marshmallow provides few examples on how to use the ModelSchemas, one about <a href="https://marshmallow-sqlalchemy.readthedocs.io/en/latest/recipes.html#overriding-generated-fields" rel="nofollow noreferrer">Overriding generated fields</a> corresponds to your needs:</p>
<blockquote>
<p>Any field generated by a ModelSchema can be overridden.</p>
</blockquote>
<p>You could for example simply manually specify the field and <a href="https://marshmallow.readthedocs.io/en/3.0/api_reference.html#module-marshmallow.fields" rel="nofollow noreferrer">use the <code>attribute</code> parameter</a> of the <code>field</code> object: </p>
<pre><code>from marshmallow import fields

class someSchema(ma.ModelSchema):
    x = fields.Integer(attribute='y') # Or vice-versa
    class Meta:
        model = someModel
</code></pre>
</div>
