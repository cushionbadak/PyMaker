<div class="post-text" itemprop="text">
<p>EDIT2: I apologize for the lack of clarity.
I will provide several values. The first is the URL that I call using my frontend app. The second is the value before calling <code>urllib.unquote</code>. The third is the value after calling <code>urlib.unquote</code>.</p>
<p>frontend:</p>
<pre><code>console.log('http://localhost:8080/v1/' + encodeURIComponent(name))
</code></pre>
<p>backend:</p>
<pre><code>def f(param=''):
    print('*', param)
    param = urllib.unquote(param)
    print('**', param)
</code></pre>
<p>Ex.</p>
<pre><code>http://localhost:8080/v1/https%3A%2F%2Fgoogle.com
* https:%2F%2Fgoogle.com
** https://google.com
</code></pre>
<p>Ex2.</p>
<pre><code>http://localhost:8080/v1/foo%2520bar
* foo%20bar
** foo bar
</code></pre>
<p>Ex3.</p>
<pre><code>http://localhost:8080/v1/foo%20bar
* foo bar
** foo bar
</code></pre>
<p>Thank you for being patient and helping me with this. I apologize for being unclear in my original post.</p>
<p>EDIT: In short, if I call <code>/v1/%2520</code>, param is equal to <code>" "</code> at the end of the function, instead of <code>"%20"</code>, at the beginning of the function it is equal to <code>"%20"</code> and not <code>"%2520"</code>.</p>
<p>I'm currently working on a Flask App using Python 2.7.</p>
<p>I'm trying to create a function which can handle URL parameters.</p>
<pre><code>@app.route('/v1/&lt;param&gt;', methods=['DELETE'])
def f(param=''):
    param = urllib.unquote(param)
</code></pre>
<p>On my frontend application, I call this function by encoding the <code>param</code>. However, if I pass <code>"foo bar"</code> and <code>"foo%20bar"</code> to the function, the <code>param</code> is resolved to the same value -- <code>"foo bar"</code>, when really <code>"foo bar"</code> should be <code>"foo bar"</code> and <code>"foo%20bar"</code> should be <code>"foo%20bar"</code>.</p>
<p>Due to this bug, I am unable to delete the <code>"foo%20bar"</code> entry. If I try to delete it, it will delete <code>"foo bar"</code>, and once <code>"foo bar"</code> is deleted, the <code>"foo%20bar"</code>entry will never be deleted.</p>
<p>I believe this is because <code>"%20"</code> is not equal to <code>"%2520"</code> even though that is what the param is. When I print this value before calling <code>urllib.unquote(param)</code> it is already equal to <code>"%20"</code>. Then, when I call <code>urllib.unquote(param)</code> the value is changed to <code>" "</code>.</p>
<p>I'm not really sure if this is a bug in Flask/Werkzeug, but it is causing my application to not work.</p>
<p>Do you have any suggestions for fixing this issue? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>No, Flask is usually handling percent encoding <em>exactly right</em>. Parameters in a URL are percent encoded, and these are decoded for you when the WSGI environment is set up. Flask then passes this on to your route when matching.</p>
<p>You do <strong>not</strong> need to decode the parameter value again, remove your <code>urllib.unquote()</code> call.</p>
<p>Your browser will actually encode spaces in the URL to <code>%20</code> for you, even though the location bar will show a space. The location bar decodes percent-encoded components to make it possible to read international characters (so <code>%E3%81%A9%E3%81%86%E3%82%82%E3%81%82%E3%82%8A%E3%81%8C%E3%81%A8%E3%81%86</code> is shown as <code>どうもありがとう</code>, for example).</p>
<p>If you are having issues with encoded slashes (<code>/</code>, <code>%2F</code>), then see <a href="https://github.com/pallets/flask/issues/900" rel="nofollow noreferrer">issue #900</a>, there are edge cases with Apache directives (and other WSGI servers) to consider. You would need to use a <code>&lt;path:param&gt;</code> component to match those, because the default <code>string</code> parameter type will not match slashes.</p>
<p>If I use the following test script, named <code>routetest.py</code>:</p>
<pre><code>from flask import Flask
try:
    from urllib.parse import unquote  # PY3
except ImportError:
    from urllib import unquote  # PY2

app = Flask(__name__)

@app.route('/v1/&lt;path:param&gt;')  # NOTE: &lt;path:param&gt; is required to match /
def f(param=''):
    return (
        f"param: {param}\ndecoded param: {urllib.parse.unquote(param)}\n",
        200,
        {'content-type': 'text/plain'}
    )
</code></pre>
<p>use <code>FLASK_APP=routetest flask run</code> to launch this script on <code>localhost:5000</code>, then I can't reproduce your issues:</p>
<pre><code>$ curl http://localhost:5000/v1/https%3A%2F%2Fgoogle.com
param: https://google.com
decoded param: https://google.com
$ curl http://localhost:5000/v1/foo%2520bar
param: foo%20bar
decoded param: foo bar
$ curl http://localhost:5000/v1/foo%20bar
param: foo bar
decoded param: foo bar
</code></pre>
<p>which can only mean that you have a WSGI server that is mishandling quoting in paths.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the problem is you are not understanding the URL encoding :)
It requires to avoid spaces, so they are translated to %20 by the browser and back automatically by flask.
Read this for more information: <a href="https://www.w3schools.com/tags/ref_urlencode.asp" rel="nofollow noreferrer">https://www.w3schools.com/tags/ref_urlencode.asp</a></p>
<p>Solution: send an encoded <code>foo%20bar</code> to the server with <code>foo%2520bar</code>.</p>
</div>
<span class="comment-copy">No, <code>foo%20bar</code> <b><i>is</i></b> <code>foo bar</code>. Even <code>foo bar</code> in the browser URL bar is actually sent to the server as <code>foo%20bar</code>. If you really wanted <code>foo%20bar</code> after URL decoding, then send <code>foo%2520bar</code>.</span>
<span class="comment-copy">Sorry. I must have been unclear. <code>"foo%2520bar"</code> is equal to <code>"foo%20bar"</code> BEFORE I modify the value using <code>urllib.unquote</code>. So if I call <code>/v1/foo%2520bar</code>, the param value is equal to <code>"foo bar"</code> instead of <code>"foo%20bar"</code> @MartijnPieters</span>
<span class="comment-copy">So why are you using <code>urllib.unquote()</code> at all then?</span>
<span class="comment-copy">@MartijnPieters I will be passing URLs to the param.</span>
<span class="comment-copy">I need to modify the param.  This is because I am passing URLs to this endpoint on my frontend.</span>
<span class="comment-copy">@Daniel: so? That doesn't require double decoding.</span>
<span class="comment-copy">I have been dealing with this bug for a day now. I encode the parameter on the frontend. I pass it to the backend. I believe flask decodes the parameter IN PART for me. That's the issue. <code>%2F</code> is still <code>%2F</code>. It is not turned into a <code>/</code>.</span>
<span class="comment-copy">@Daniel: Then I suggest you give us a proper MCVE that reproduces your actual problem. Right now, all we have is a partial diagnosis from you, and it's incorrect.</span>
<span class="comment-copy">I am sorry that I wasn't clear. I updated my post. Thank you for helping me with this and being patient.</span>
<span class="comment-copy">Sorry I was unclear. I updated my question. For convenience, EDIT: In short, if I call /v1/%2520, param is equal to " " at the end of the function, instead of "%20"</span>
