<div class="post-text" itemprop="text">
<p>How can I call a method from class Account in my kv file?</p>
<p>py file:</p>
<pre><code>import kivy
kivy.require("1.10.1")
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.widget import Widget
class Account():
def __init__(self,name, balance):
    self.name = name
    self.__balance__ = balance
def getBalance(self):
    return (self.__balance__)
def setBalance(self, zmena):
    self.__balance__ = self.__balance__+zmena
acc = Account("Account1", "1000")
class myWidget(Widget):
Builder.load_file("MP.kv")
class MainApp(App):
def build(self):
    return myWidget()
if __name__ == "__main__":
MainApp().run()
</code></pre>
<p>kv file:</p>
<pre><code>#:kivy 1.10.1

&lt;Button&gt;
background_color: 0.1, 0.1, 0.9, 0.9
font_size: 22
&lt;Label&gt;
background_color: 0.1, 0.1, 0.9, 0.9
font_size: 22

&lt;myWidget&gt;:
Label:
    id: lb
    text: "Account"
    pos: root.width /2-self.width/2, root.top/2+200
Label:
    id: lb1
    text: "Account name"
    pos: root.width /2-self.width/2, root.top/2+150
Label:
    id: lb2
    text: "balance"   '''here i want call methot getBalance, but how?
    pos: root.width /2-self.width/2, root.top/2+100
Label:
    id: lb3
    text: "Add/sub money"
    pos: root.width /2-self.width/2, root.top/2+50
TextInput:
    id: tp
    text: "money"
    pos: root.width /2-self.width/2, root.top/2-50
    size_hint: .5, .25
Button:
    id: btn1
    text: "Confirm"
    size_hint: .5, .25
    pos: root.width /2-self.width/2, root.top/2-150
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Question #2</h1>
<blockquote>
<p>if i add some money, how i update balance in Label lb2?</p>
</blockquote>
<h1>Solution #2</h1>
<p>Use Kivy Properties e.g. StringProperty, because they produce events such that when an attribute of your object changes, all properties that reference that attribute are automatically updated.</p>
<h1>Example #2</h1>
<h2>main.py</h2>
<pre><code>import kivy

kivy.require("1.10.1")
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.widget import Widget
from kivy.properties import ObjectProperty, StringProperty


class Account():
    def __init__(self, name, balance):
        self.name = name
        self.__balance__ = balance

    def getBalance(self):
        return (self.__balance__)

    def setBalance(self, zmena):
        self.__balance__ = self.__balance__ + zmena


class myWidget(Widget):
    acc = ObjectProperty(None)
    balance = StringProperty('')

    def __init__(self, **kwargs):
        super(myWidget, self).__init__(**kwargs)
        self.acc = Account("Account1", 1008)
        self.update_balance()

    def update_balance(self):
        self.balance = str(self.acc.getBalance())


Builder.load_file("MP.kv")


class MainApp(App):
    def build(self):
        return myWidget()


if __name__ == "__main__":
    MainApp().run()
</code></pre>
<h2>MP.kv</h2>
<pre><code>#:kivy 1.10.1

&lt;Button&gt;:
    background_color: 0.1, 0.1, 0.9, 0.9
    font_size: 22

&lt;Label&gt;:
    background_color: 0.1, 0.1, 0.9, 0.9
    font_size: 22

&lt;myWidget&gt;:
    Label:
        id: lb
        text: "Account"
        pos: root.width /2-self.width/2, root.top/2+200
    Label:
        id: lb1
        text: "Account name"
        pos: root.width /2-self.width/2, root.top/2+150
    Label:
        id: lb2
        text: root.balance
        pos: root.width /2-self.width/2, root.top/2+100
    Label:
        id: lb3
        text: "Add/sub money"
        pos: root.width /2-self.width/2, root.top/2+50
    TextInput:
        id: tp
        hint_text: "money"
        pos: root.width /2-self.width/2, root.top/2-50
        size_hint: .5, .25
    Button:
        id: btn1
        text: "Confirm"
        size_hint: .5, .25
        pos: root.width /2-self.width/2, root.top/2-150
        on_release:
            root.acc.setBalance(int(tp.text))
            root.update_balance()
</code></pre>
<h1>Output #2</h1>
<p><a href="https://i.stack.imgur.com/I0R8Q.png" rel="nofollow noreferrer"><img alt="lb2 automatically updated when balance is updated" src="https://i.stack.imgur.com/I0R8Q.png"/></a></p>
<h1>Solution</h1>
<h2>Python Script - main.py</h2>
<ol>
<li>Add import statement for Kivy ObjectProperty e.g. <code>from kivy.properties import ObjectProperty</code></li>
<li>Declare a Kivy ObjectProperty, e.g. <code>acc = ObjectProperty(None)</code></li>
<li>Implement constructor method for myWidget()</li>
</ol>
<h2>kv file</h2>
<p>When the app start, acc is None. Therefore, we need to check for None to avoid error.</p>
<pre><code>text: '' if root.acc is None else root.acc.getBalance()
</code></pre>
<h1>Example</h1>
<h2>main.py</h2>
<pre><code>import kivy

kivy.require("1.10.1")
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.widget import Widget
from kivy.properties import ObjectProperty


class Account():
    def __init__(self, name, balance):
        self.name = name
        self.__balance__ = balance

    def getBalance(self):
        return (self.__balance__)

    def setBalance(self, zmena):
        self.__balance__ = self.__balance__ + zmena


class myWidget(Widget):
    acc = ObjectProperty(None)

    def __init__(self, **kwargs):
        super(myWidget, self).__init__(**kwargs)
        self.acc = Account("Account1", "1000")


Builder.load_file("MP.kv")


class MainApp(App):
    def build(self):
        return myWidget()


if __name__ == "__main__":
    MainApp().run()
</code></pre>
<h2>MP.kv</h2>
<pre><code>#:kivy 1.10.1

&lt;Button&gt;:
    background_color: 0.1, 0.1, 0.9, 0.9
    font_size: 22

&lt;Label&gt;:
    background_color: 0.1, 0.1, 0.9, 0.9
    font_size: 22

&lt;myWidget&gt;:
    Label:
        id: lb
        text: "Account"
        pos: root.width /2-self.width/2, root.top/2+200
    Label:
        id: lb1
        text: "Account name"
        pos: root.width /2-self.width/2, root.top/2+150
    Label:
        id: lb2
        text: '' if root.acc is None else root.acc.getBalance()
        pos: root.width /2-self.width/2, root.top/2+100
    Label:
        id: lb3
        text: "Add/sub money"
        pos: root.width /2-self.width/2, root.top/2+50
    TextInput:
        id: tp
        text: "money"
        pos: root.width /2-self.width/2, root.top/2-50
        size_hint: .5, .25
    Button:
        id: btn1
        text: "Confirm"
        size_hint: .5, .25
        pos: root.width /2-self.width/2, root.top/2-150
</code></pre>
<h1>Output</h1>
<p><a href="https://i.stack.imgur.com/0XoRL.png" rel="nofollow noreferrer"><img alt="output" src="https://i.stack.imgur.com/0XoRL.png"/></a></p>
</div>
<span class="comment-copy">Thanks, i invented another solution, but your is better, but i have one more question...if i add some money, how i update balance in Label lb2?</span>
<span class="comment-copy">In the Python script, add a new Kivy StringProperty, e.g. <code>balance = StringProperty('')</code> and implement a method, <code>update_balance()</code>. In kv file, replace <code>root.acc.getBalance()</code> with <code>root.balance</code>. Please refer to updated post for the complete solution.</span>
