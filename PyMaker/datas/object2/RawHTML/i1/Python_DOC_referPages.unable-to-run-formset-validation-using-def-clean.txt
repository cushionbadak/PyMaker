<div class="post-text" itemprop="text">
<p>I'm struggling to figure out how to apply formset validation to my formset. When I save the formset, the def clean method isn't run (i.e. 'In formset validation' is never printed to the console). Any thoughts as to why?</p>
<p><strong>forms.py</strong></p>
<pre><code>class UserServiceForm (forms.ModelForm):
   active = forms.BooleanField(required=False)
   sale_expiry = forms.DateField(required=True)

   class Meta:
      model = UserService
      exclude = ('user',)


class UserServiceFormSet(BaseFormSet):
   def clean(self):
      for form in self.forms:
         print('In formset validation')
         user_title = form.cleaned_data['user_title']
         title = form.instance.title
         if user_title == None and title == None:
            self.add_error('user_title', "Please enter a title for this service.")
</code></pre>
<p><strong>views.py</strong></p>
<pre><code>from accounts.forms import UserServiceForm, UserServiceFormSet
from accounts.models import UserService

def userservices(request):
   UserServiceFormSet = modelformset_factory(UserService, form=UserServiceForm)
   formset = UserServiceFormSet(request.POST or None, request.FILES or None, queryset=UserService.objects.filter(user=user), prefix='first')

   ... non-relevant bits of view...

   if request.method == 'POST':
       if formset.is_valid():
           formset_instances = formset.save(commit=True)            
</code></pre>
<p><strong>template</strong></p>
<p>My template contains </p>
<pre><code>{{ formset.non_form_errors }}
{% csrf_token %}
{{ formset.management_form }}
field level error tags (eg. {{ form.active_service.errors }}
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>At the moment, you import <code>UserServiceFormSet</code>, but then you replace it without using it.</p>
<pre><code>from accounts.forms import UserServiceForm, UserServiceFormSet

def userservices(request):
    UserServiceFormSet = modelformset_factory(UserService, form=UserServiceForm)
    ...
</code></pre>
<p>You need to pass the formset to <code>modelformset_factory</code>. I suggest renaming the class to <code>BaseUserServiceFormSet</code> to avoid a name clash.</p>
<pre><code>from accounts.forms import UserServiceForm, BaseUserServiceFormSet

def userservices(request):
    UserServiceFormSet = modelformset_factory(UserService, form=UserServiceForm, formset=BaseUserServiceFormSet)
    ...
</code></pre>
</div>
