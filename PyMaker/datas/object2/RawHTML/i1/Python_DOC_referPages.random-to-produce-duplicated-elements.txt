<div class="post-text" itemprop="text">
<p>When working with random module</p>
<pre><code>In [1]: from random import *                                                                                                  

In [2]: sample([10, 20, 30, 40, 50], k=4)                                                                                     
Out[2]: [20, 30, 50, 10]
</code></pre>
<p>the result is not randomly completely</p>
<p>How could produce a result as </p>
<pre><code>In [2]: sample([10, 20, 30, 40, 50], k=4)                                                                                     
Out[2]: [20, 20, 20, 10]
</code></pre>
<p>to generate duplicated elements.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sample</code> is the wrong tool, as you've seen. Instead, you could use <a href="https://docs.python.org/3.6/library/random.html#random.choices" rel="nofollow noreferrer"><code>choices</code></a>:</p>
<pre><code>choices([10, 20, 30, 40, 50], k=4)     
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try use Python's standard <code>random.choices</code> where you can specify optional weights for each element you generate. <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer">Docs</a>:</p>
<pre class="lang-py prettyprint-override"><code>choices([10, 20, 30, 40, 50], weights=[5, 50, 10, 15, 10], k=4)
</code></pre>
<p>Output</p>
<pre><code>[40, 20, 50, 20]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html" rel="nofollow noreferrer">numpy.random.choice</a></p>
<pre><code>import numpy as np

x = [10, 20, 30, 40, 50]

print(np.random.choice(x, 4, replace=True))
</code></pre>
<p>Output:</p>
<pre><code>[50 50 30 30] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is <code>random.choices</code> - <em>New in Python version 3.6</em>. - The function definition is below; and you can read more <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer">here</a>.</p>
<pre><code>random.choices(population, weights=None, *, cum_weights=None, k=1)
</code></pre>
<p>You can assign <code>weights</code> in order to give a specific element precedence over others. - Although I believe the example below would satisfy your needs.</p>
<p><strong>Example</strong></p>
<pre><code>import random

random.choices([1, 2, 3, 4], k=4)
</code></pre>
<p>Alternatively in older Python versions you can use <code>random.choice</code> as shown below; although it simply support one argument, a sequence.</p>
<p><strong>Example</strong></p>
<pre><code>import random

population = [1, 2, 3, 4, 5]

def choices(population, k=1):
    return [random.choice(population) for _ in range(k)] if k &gt; 1 else random.choice(population)

choices(population, k=5)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[2, 4, 2, 5, 1]
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/39379515/how-do-i-generate-a-random-list-in-python-with-duplicates-numbers" title="how do i generate a random list in python with duplicates numbers">stackoverflow.com/questions/39379515/â€¦</a> Here you go, your question is answered already :)</span>
