<div class="post-text" itemprop="text">
<p>I have an ILP problem where I need to constrain the values of the variable matrix to be in {0, 1}. I tried to do this with the following (simplified) code, but it doesn't let me use the '|' operator. How would I do this?</p>
<pre><code>def test_ILP(scores):
    N = scores.shape[0]
    eye_bool = np.eye(N)
    zero_when_equal = np.abs(np.eye(N) - 1)


    opt = cp.Variable(scores.shape)
    objective = cp.Maximize(
        cp.sum(cp.multiply(scores, opt * zero_when_equal))
    )


    constraints = [(opt == 0) | (opt == 1) | eye_bool]

    prob = cp.Problem(objective, constraints)
    prob.solve()
    return opt.value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on @sascha's comment, for a boolean (or integer) constraint, one can use the argument in the Variable constructor. For this case:</p>
<pre><code>def test_ILP(scores):
    N = scores.shape[0]
    eye_bool = np.eye(N)
    zero_when_equal = np.abs(np.eye(N) - 1)
    boolean_constraint = [(x, y) for x in range(N) for y in range(N) if x != y]

    opt = cp.Variable(scores.shape, boolean=boolean_constraint)
    objective = cp.Maximize(
        cp.sum(cp.multiply(scores, opt * zero_when_equal))
    )


    constraints = [#Rest of the constraints]

    prob = cp.Problem(objective, constraints)
    prob.solve()
    return opt.value
</code></pre>
</div>
<span class="comment-copy">You define the variable as binary variable (or integer) like explained in the docs. The exact syntax depends on your version of cvxpy. You can't just use any python operator or python function on cvxpy's variables. You can only use what's defined a-priori.    From that code though it's hard to grasp what exactly you want to formulate.</span>
<span class="comment-copy">Thanks @sascha. That is the solution to my problem.</span>
