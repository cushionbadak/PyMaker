<div class="post-text" itemprop="text">
<p>I am trying to integrate over some function with <a href="https://github.com/gplepage/vegas" rel="nofollow noreferrer">vegas</a> library, a simple implement that integrates <code>f(x) = lambda x: x ** 2.0</code> is</p>
<pre><code>import vegas
f = lambda x: x ** 2.0
integrator = vegas.Integrator([[0.0, 1.0]])
result = integrator(f, nitn = 10, neval = 10000)
print result
</code></pre>
<p>which would print <code>[0.33333389(69)]</code> and is correct. However, if I would like to be able to change the power value of function <code>f</code> but adding an input parameter like the following</p>
<pre><code>def f(x, p):
    return x ** p
</code></pre>
<p>The method <code>Integrator</code> would complain the following</p>
<blockquote>
<p>SyntaxError: invalid syntax</p>
</blockquote>
<p>Using <code>global</code> variable to pass <code>p</code> would mess up the code because in practice, I have a lot of parameter to pass onto <code>f</code>. Using the following alternative definition would involve changing the actual definition of the function and is not a preferred solution</p>
<pre><code>def f(x, p = 2.0):
    return x ** p
</code></pre>
<p>So what could I do to pass parameter to <code>f</code> which is called in method <code>Integrator</code>? Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>One solution is to have a function that will build your power function: </p>
<pre class="lang-py prettyprint-override"><code>def to_the_power(p):
    return lambda x: x ** p

result = integrator(to_the_power(2), nitn = 10, neval = 10000)
</code></pre>
<p>That technique is usually referred as <a href="https://www.wikiwand.com/en/Currying" rel="nofollow noreferrer"><em>currying</em></a>, here we <em>curry</em> the power function so we can pass parameters one by one instead of all at once. Note that if you need to do this with several parameters or if you use a function you don't have control over, you may find <a href="https://docs.python.org/3.7/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial</code></a> useful:</p>
<pre class="lang-py prettyprint-override"><code>import functools

def f(p, x):
    return x ** p

integrator(functools.partial(f, 2), nitn = 10, neval = 10000)
</code></pre>
</div>
<span class="comment-copy">Thanks so much! The package <code>functools</code> worked so nicely! Also, I am having a question with regard to your first approach. Is it possible to use <code>def</code> inside <code>to_the_power </code>?</span>
<span class="comment-copy">Sure you can define a function inside a function, but then you need to remember to return the inner function :)</span>
