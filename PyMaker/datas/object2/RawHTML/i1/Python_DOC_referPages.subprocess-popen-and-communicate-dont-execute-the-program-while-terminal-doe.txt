<div class="post-text" itemprop="text">
<p>I have a routine that I run every morning, where I want a sequence of programs to run. It looks something like this. (content of programCaller.py)</p>
<pre><code>programs = [
    'program 1',
    'program 2',
    'program 3'
    ]

for program in programs:
    print('Executing: ' + program)
    p = subprocess.Popen('/path/to/directory/' + program)
    p.communicate()
</code></pre>
<p>Everything was working great until a week or so ago. It communicated in real time (perk that I struggled to obtain on Windows, as I am running this on Mac), and if a program fails, it goes to the next one. </p>
<p>Now it won't just run from IDLE. However, it works just fine from the Terminal "./programCaller.py". </p>
<p>All the programs have shebang lines and permission of course. I have tried all variations of shell=True, executable, stdout and the other arguments, but it won't work. </p>
<p>What it does is that it instantly finishes the execution, giving me the "&gt;&gt;&gt;" prompt, as if it was done. And it is not working in the background, as I have tested a very simple program that sends me a mail, and it doesn't do it. </p>
<p>Something must have changed and maybe it uses another executable, but it is a silent crash. </p>
</div>
<div class="post-text" itemprop="text">
<p>If it's a startup call you should ensure that <code>programCaller.py</code> is correctly called with the python you want so <code>"/path/to/Python/python" programCaller.py</code> I don't know how this works for Mac but on windows I would suggest you use <a href="https://pypi.org/project/auto-py-to-exe/" rel="nofollow noreferrer">https://pypi.org/project/auto-py-to-exe/</a> to create an exe based on <code>programCaller.py</code>.</p>
<p>Also if you want to sort of debug this add a <code>time.sleep()</code> or a <code>print(p)</code> after the <code>p.communicate()</code> just to ensure the subprocess was created correctly. I am suggesting this because if you have different version of Python you might be missing some external libraries.</p>
<p>Something a bit more elaborate would be:</p>
<pre><code>try:
    p = subprocess.Popen('/path/to/directory/' + program)
    stdout, stderr = p.communicate()
    print(stdout)
    print(stderr)
except KeyboardInterrupt:
    p.kill()
    print("KeyboardInterrupt: killing process")
except Exception as e:
    print(e)
</code></pre>
<p>if the subprocess doesn't need an input:</p>
<pre><code>try:
    p = subprocess.Popen('/path/to/directory/' + program)
    output = p.stdout.readline()
    if output:
        sys.stdout.flush()
        print(output)
except KeyboardInterrupt:
    p.kill()
    print("KeyboardInterrupt: killing process")
except Exception as e:
    print(e)
</code></pre>
</div>
<span class="comment-copy">You may need to enclose the program path in double quotes <code>"</code> since it appears it may contain embedded space characters.</span>
<span class="comment-copy">Does that make a difference? Anyway, I never have spaces in my titles</span>
<span class="comment-copy">However you do have spaces in your <code>programs</code> â€” and yes <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">it does matter</a> when the first argument passed to <code>Popen</code> is single string.</span>
<span class="comment-copy">I tried both with IDLE and from Terminal. First one with IDLE:  None None, First one from Terminal:  None  None but then actually executed the code (send me an email),  2nd one in IDLE:  'NoneType' object has no attribute 'readline', 2nd one from Terminal: Same but executed the code</span>
<span class="comment-copy">What do you mean @Alexandru to call it with the right Python? I have no problems calling the program from the Terminal. It just doesn't execute when I run it in IDLE (by pressing F5). It will silently crash. By playing around with subprocess.run and subprocess.call, I have occasionally received errors about /usr/bin/env python3 not being a directory... I will read the subprocess module well to figure this one out. In the meantime, from Terminal all works well</span>
