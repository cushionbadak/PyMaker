<div class="post-text" itemprop="text">
<p>I would like to know how to retrieve all the values of my loop via a Return.
In my first function, I loop to recover all my folders, subfolders. Then I go back to pathFiles</p>
<p>In my second function, I test my linux command on all files in folders, but the problem is this: my function only tests the last result of my loop and not all values.</p>
<pre><code>from ftplib import FTP
import ftplib
import os
import errno
import time

class ProcessFile:
  path= "FolderFiles"
  target=" /var/www/folder/Output"
  extract=""
  monitoring=""
  bash="unrar "

  @staticmethod
  def returnPath():
    pathFiles= []
    for root, dirs, files in os.walk(ProcessFile.path, topdown=True):
      for name in dirs:
        os.path.join(root, name)
      for name in files:
        pathFiles= os.path.join(root, name)
        print(pathFiles)
    return pathFiles 

  @staticmethod
  def testArchive(pathFile):
    monitoring = ProcessFile.bash+"t "+pathFile
    verifyFiles = os.system(monitoring)
    return verifyFiles 

def testCodeRetour():
  myPath = ProcessFile.returnPath()
  print(myPath)
</code></pre>
<p>Do you have any idea how it works?</p>
<p>Thank you for your help</p>
</div>
<div class="post-text" itemprop="text">
<p>The list <code>pathFiles= []</code> is never used. Maybe you want to append something in it?  If this is the case then you have to fix a couple of things.</p>
<p>In the loop:</p>
<pre><code>for name in files:
    pathFiles= os.path.join(root, name)
    print(pathFiles)
</code></pre>
<p>Change the name <code>pathFiles</code> to <code>pathFile</code> and then append it to the list.</p>
<pre><code>for name in files:
    pathFile= os.path.join(root, name)
    print(pathFile)
    pathFiles.append(pathFile)
</code></pre>
</div>
<span class="comment-copy"><code>Do you have any idea how it works?</code> - Did you write that code?</span>
<span class="comment-copy">Do you ever intend to make a <code>ProcessFile</code> instance? Or are you just using it to <i>contain</i> those static methods?  Typically in Python you wouldn't make a class with only static methods - you would write the methods as <i>standalone</i> functions and the variables in their own module then import the module.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/q/53529034/2823755">Using classes with only static methods for organizational purposes?</a> | <a href="https://stackoverflow.com/q/21883511/2823755">module with classes with only static methods</a> |  <a href="https://stackoverflow.com/q/42757961/2823755">a class with all static methods (closed)</a></span>
