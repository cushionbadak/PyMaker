<div class="post-text" itemprop="text">
<p>I am printing to a console in python. I am looking for a one off piece of code so that all print statments after a line of code have 4 spaces at the start. Eg.</p>
<pre><code>print('Computer: Hello world')
print.setStart('    ')
print('receiving...')
print('received!')
print.setStart('')
print('World: Hi!')
</code></pre>
<p>Output:</p>
<pre><code>Computer: Hello world
    receiving...
    received!
World: Hi!
</code></pre>
<p>This would be helpful for tabbing all of the output that is contained in a function, and setting when functions output are tabbed. Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can define a <code>print</code> function which first prints your prefix, and then internally calls the built-in <code>print</code> function. You can even make your custom <code>print()</code> function to look at the call-stack and accordingly determine how many spaces to use as a prefix:</p>
<pre><code>import builtins
import traceback

def print(*objs, **kwargs):
    my_prefix = len(traceback.format_stack())*" "
    builtins.print(my_prefix, *objs, **kwargs)
</code></pre>
<p><strong>Test it out:</strong></p>
<pre><code>def func_f():
    print("Printing from func_f")
    func_g()

def func_g():
    print ("Printing from func_g")

func_f()
</code></pre>
<p><strong>Output:</strong></p>
<blockquote>
<pre><code>                    Printing from func_f
                     Printing from func_g
</code></pre>
</blockquote>
<p><strong>Reverting back to the built-in <code>print()</code> function:</strong></p>
<p>When you are done with your custom printing, and want to start using the built-in <code>print()</code> function, just use <code>del</code> to "delete" your own definition of print:</p>
<pre><code>del print
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not define your own custom function and use that when needed:</p>
<pre><code>def tprint(*args):
    print('    ', *args)
</code></pre>
<p>It would be used like so:</p>
<pre><code>print('Computer: Hello world')
tprint('receiving...')
tprint('received!')
print('World: Hi!')
</code></pre>
<p>Output:</p>
<pre><code>Computer: Hello world
     receiving...
     received!
World: Hi!
</code></pre>
</div>
