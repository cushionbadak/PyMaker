<div class="post-text" itemprop="text">
<p>i have two models with relationship one to many in django app using app using postgres/postgis database.
i have create one not easy query in database and pgadmin panel  and works correct.</p>
<p>here the query :</p>
<pre><code>select string_agg(distinct app_work.id::text, ', ') AS code_work,string_agg(distinct app_work.stage, ', ') 
AS stage,string_agg(distinct app_work.dfield_work, ', ') AS dfield,app_point.geom  
from app_point, app_work where app_point.id=app_work.point_field_id GROUP BY app_point.id;
</code></pre>
<p>now i want to use this query(i need that results from this query) in my django app to create a geojson or json export.
i am not sure how convert this query using django method objects and queries(like <code>point.objects.all()</code>) i try to use custom postgres query like this :</p>
<p>models.py</p>
<pre><code>class point(models.Model):
    geom = models.MultiPointField(srid=4326)
    objects = models.GeoManager()

    def __unicode__(self):
        return str(self.id)

    class meta:
        verbose_name_plural="point_info"


class work(models.Model):
        dfield_work = models.CharField(max_length=100,blank=True, null=True)
    stage = models.CharField(max_length=100,blank=True, null=True)
    field1 = models.CharField(max_length=100,blank=True, null=True)
    field2 = models.CharField(max_length=100,blank=True, null=True)
    point_field= models.ForeignKey('point', blank=True, null=True)

    def __unicode__(self):
        return str(self.id)
</code></pre>
<p>vews.py</p>
<pre><code>from django.db import connection


def points(request):
    cursor = connection.cursor()
    cursor.execute("""seselect string_agg(distinct app_work.id::text, ', ') AS code_work,string_agg(distinct app_work.stage, ', ') 
AS stage,string_agg(distinct app_work.dfield_work, ', ') AS dfield,app_point.geom  
from app_point, app_work where app_point.id=app_work.point_field_id GROUP BY app_point.id from log_point, log_work where log_point.id=log_work.point_field_id GROUP BY log_point.id""")
    row = cursor.fetchall()
    print row
    data = serialize('geojson', row)
    return HttpResponse(data,content_type='json')
</code></pre>
<p>in the print row i take a correct list results</p>
<p>but not working and  i have this error :</p>
<pre><code>'tuple' object has no attribute '_meta'
</code></pre>
<p>any idea how to fix it ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The Django geojson <code>serialize</code> method expects a queryset (as can be seen from usage <a href="https://docs.djangoproject.com/en/2.1/ref/contrib/gis/serializers/" rel="nofollow noreferrer">here in the docs</a>) rather than a tuple. From the <a href="https://github.com/django/django/blob/8ef8bc0f64c463684268a7c55f3d3da4de066c0d/django/contrib/gis/serializers/geojson.py" rel="nofollow noreferrer">source</a>, we can see that the <code>Serializer(JSONSerializer)</code> class is designed to "Convert a queryset to GeoJSON" and expects objects that it can call <code>._meta</code> on (i.e. Django models). Thus when you pass a tuple (the output of <code>cursor.fetchall()</code>) to <code>serialize</code> you get the error <code>'tuple' object has no attribute '_meta'</code>.</p>
<p>Since you are using a raw SQL query there is really no need to use the geojson serializer as it's designed to convert Python objects to JSON. You can instead convert the output of your SQL query to JSON and send that as the response.</p>
<p>Here is an example:</p>
<pre><code>import json
from django.db import connection
from django.http import HttpResponse


query_text = """
SELECT
    string_agg(distinct app_work.id::text, ', ') AS code_work,
    string_agg(distinct app_work.stage, ', ') AS stage,
    string_agg(distinct app_work.dfield_work, ', ') AS dfield,
    app_point.geom
FROM
    app_point, app_work
WHERE
    app_point.id = app_work.point_field_id
GROUP BY
    app_point.id;
"""

def points(request):
    with connection.cursor() as cursor:
        cursor.execute(query_text)
        data = dictfetchall(cursor)

    stringified_data = json.dumps(data)
    return HttpResponse(stringified_data, content_type="application/json")


def dictfetchall(cursor):
    "Return all rows from a cursor as a dict"
    columns = [col[0] for col in cursor.description]
    return [
        dict(zip(columns, row))
        for row in cursor.fetchall()
    ]
</code></pre>
<p>(<code>dictfetchall</code> from the the <a href="https://docs.djangoproject.com/en/2.1/topics/db/sql/#executing-custom-sql-directly" rel="nofollow noreferrer">Django SQL docs</a>)</p>
<p>A couple things to note in the above code:</p>
<ol>
<li><p>This is fairly important: using a <code>with</code> for the <code>cursor</code> so that the connection is closed when we are done querying the database. You can also close the connection manually, but the <code>with</code> statement handles it for us.</p></li>
<li><p>Using the <code>dictfetchall</code> function, we convert the output of the SQL query to a Python dictionary (ready to become JSON). There is no need to use the Django serializer since we are using raw Python datatypes instead of Python Objects or Django Models.</p></li>
</ol>
</div>
<span class="comment-copy">what line is that error from?</span>
<span class="comment-copy">@HenryWoody that error show me in the page from the browser if I visit this link.any idea ?</span>
<span class="comment-copy">I think there should still be a traceback with the error even in the browser, but if not can you include the traceback from the console/terminal that's running your server?</span>
<span class="comment-copy">Also where is <code>serialize</code> defined?</span>
<span class="comment-copy">Request Method:	GET Request URL:	<a href="http://127.0.0.1:8000/data/" rel="nofollow noreferrer">127.0.0.1:8000/data</a> Django Version:	1.11.3 Exception Type:	AttributeError Exception Value:	 'tuple' object has no attribute '_meta' Exception Location:	Python27\Lib\site-packages\django\contrib\gis\serializers\geojson.py in start_object, line 35   if that help you I use this code in views.py</span>
<span class="comment-copy">not I take this error <code>In order to allow non-dict objects to be serialized set the safe parameter to False</code> in browser. in the line <code>return JsonResponse(data) </code></span>
<span class="comment-copy">@Mar oh right, since <code>data</code> will be a list, not a dictionary you will have to set <code>safe=False</code> I'll update.</span>
<span class="comment-copy">@Mar Actually changed to <code>HttpResponse</code> but calling <code>json.dumps</code> before sending. The <code>safe=False</code> flag is a little spooky</span>
<span class="comment-copy">you are amazing look to work,but its not geojson but a simple json</span>
<span class="comment-copy">@Mar what database are you using?</span>
