<div class="post-text" itemprop="text">
<p>I have to add leading zeros to a string of variable length - to always fit a certain length. And I have to use very simple python without control structures such as <code>if</code> statements or <code>while</code>/<code>for</code>loops. It can be hard coded.</p>
<p>E.g.</p>
<pre class="lang-py prettyprint-override"><code>    rannum = random.randrange(1, 999)
    zero = "000"
    rannumformat = (zero[0] + str(rannum))
    print(rannumformat)
</code></pre>
<p>Do I need to use <code>len()</code> function as well?</p>
</div>
<div class="post-text" itemprop="text">
<p>If this is "hard coded" to numbers below 10000 and you want 4 total digits, you can simply add 10000 and drop the first character:</p>
<pre><code>rannum = random.randrange(1, 999)
print(str(rannum+10000)[1:])
</code></pre>
<p>or more generally speaking:</p>
<pre><code>rannum = random.randrange(1, 999)
digits = 4
print(str(rannum+10**digits)[1:]) 
</code></pre>
<p>another (non-numeric) way of doing it could be:</p>
<pre><code>rannum = random.randrange(1, 999)
digits = 4
print( ("0"*digits+str(rannum))[-digits:] )

# or hard coded:
print( ("0"*4+str(rannum))[-4:] )
</code></pre>
<p>and i'm guessing you can't use rjust() either:</p>
<pre><code>print( str(rannum).rjust(4,"0") )    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have an answer for you here.</p>
<p>The following script will add a number of leading zeros to the string representation of your random number, always ensuring that it is 3 characters long.</p>
<pre class="lang-py prettyprint-override"><code>import random;

rannum = random.randrange(1, 999)
rannumStr = str(rannum);

for x in range(len(rannumStr), 3):
    rannumStr = "0" + rannumStr;
print(rannumStr);
</code></pre>
<p>In case you want the string longer, just update the second parameter of the <code>range(...)</code> function, like this for 4 characters:</p>
<pre class="lang-py prettyprint-override"><code>for x in range(len(rannumStr), 4):
</code></pre>
<h2>Solution without control statements</h2>
<p>Based on the comments, I am adding another answer here. This ones does not use any loops, or other control statements like <code>if</code>.</p>
<p>It declares an array of strings, that we can index into using the length of the string representation of the random number. And simply prefix the string with that.</p>
<pre class="lang-py prettyprint-override"><code>import random;

rannum = random.randrange(1, 999)
rannumStr = str(rannum);

padding = ["000", "00", "0", ""];

rannumStr = padding[len(rannumStr)] + rannumStr;

print(rannumStr);
</code></pre>
<p>I hope that this solves your issue?</p>
</div>
<span class="comment-copy">Why can't you use zfill or format?</span>
<span class="comment-copy">Do you want this string to be a specific length?</span>
<span class="comment-copy">You do not need to use <code>len</code> to <i>add</i> a leading zero to a string.</span>
<span class="comment-copy">What is the expected output?</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem.   We should be able to paste your posted code into a text file and reproduce the problem you described. StackOverflow is not a coding, review, or tutorial resource.</span>
<span class="comment-copy">Thank you very much! :D</span>
<span class="comment-copy">Thank you very much for your time and effort. Is there any change I could do this without conditional loops (the for x in range), as I have to use very simple python to make this. Again thank you very much and have a great day! :D</span>
<span class="comment-copy">Can I use if statements and the len() function?</span>
<span class="comment-copy">I added another solution that does not use loops or if statements. But does make use of the len() function. Let me know if that then can be accepted?</span>
<span class="comment-copy">Yes that is fine. Thank you very much! :D</span>
