<div class="post-text" itemprop="text">
<p>I am manually trying to get permutations of all elements in a list.</p>
<p>This is the code I have written.</p>
<pre><code>lst = [1,2,3,4]

def list_forward(lst_lst):
    lst2 =[]
    for lst in lst_lst: 
        for i in range(len(lst)):
            for j in range(len(lst)):
                lst[j],lst[i]=lst[i],lst[j]
                lst2.append(lst[:])
    return lst2

def perm(lst):
    lst2 =[]
    lst2.append(lst[:])
    for i in range(len(lst)):
        lst[0],lst[i]=lst[i],lst[0]
        lst2.append(lst[:])
    return list_forward(lst2)

l3 = perm(lst)
lset = set([tuple(t) for t in l3])
l4 = [list(t) for t in lset]
print(len(l4))
</code></pre>
<p>This returns 23 whereas I should be getting 24 unique lists. What am I doing wrong? What I am looking for is guidance to why one of the lists is missing. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can just see the code from <code>itertools.permutations()</code> which does the same thing.</p>
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools.permutations</a></p>
</div>
<span class="comment-copy">The documentation for <a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations()</code></a> has a sample implementation.</span>
