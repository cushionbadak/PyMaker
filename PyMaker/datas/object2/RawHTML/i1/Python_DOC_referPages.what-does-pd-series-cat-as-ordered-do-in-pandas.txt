<div class="post-text" itemprop="text">
<p>I was looking at some of the source code in the fastai library, and the function <code>train_cats</code> reads like this:</p>
<pre><code>def train_cats(df):
"""Change any columns of strings in a panda's dataframe to a column of
catagorical values. This applies the changes inplace.

for n,c in df.items():
    if is_string_dtype(c): df[n] = c.astype('category').cat.as_ordered()
</code></pre>
<p>I understand what the function is doing, but I wasn't sure what the <code>as_ordered</code> part was supposed to accomplish.</p>
<p>I tried looking through the <a href="https://pandas.pydata.org/pandas-docs/version/0.23/generated/pandas.Series.cat.as_ordered.html" rel="nofollow noreferrer">documentation on it</a>, and it was sparse.  To my surprise there's not a lot of information on <code>as_ordered()</code> on the internet either.  </p>
<p>What's the main benefit of adding this method in this circumstance?</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should take a look at the <strong>Sorting and Order</strong> section in this link: <a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html" rel="nofollow noreferrer">Pandas Documentation on Categorical</a>. It says that:</p>
<blockquote>
<p>If categorical data is ordered (s.cat.ordered ==
  True), then the order of the categories has a meaning and certain
  operations are possible. If the categorical is unordered,
  .min()/.max() will raise a TypeError.</p>
</blockquote>
<p>And:</p>
<blockquote>
<p>You can set categorical data to be ordered by using as_ordered() or unordered by using as_unordered(). These will by default return a new object.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>We can get some information from <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Categorical.html" rel="nofollow noreferrer"><code>pandas.Categorical</code></a></p>
<pre><code>s=pd.Series(list('zbdce')).astype('category')
s
0    z
1    b
2    d
3    c
4    e
dtype: category
Categories (5, object): [b, c, d, e, z]
s.cat.as_ordered()
0    z
1    b
2    d
3    c
4    e
dtype: category
Categories (5, object): [b &lt; c &lt; d &lt; e &lt; z]
</code></pre>
<hr/>
<pre><code>pd.Categorical(list('zbdce'))
[z, b, d, c, e]
Categories (5, object): [b, c, d, e, z]
pd.Categorical(list('zbdce'),ordered=True)
[z, b, d, c, e]
Categories (5, object): [b &lt; c &lt; d &lt; e &lt; z]
</code></pre>
<blockquote>
<p>ordered : boolean, (default False) Whether or not this categorical is
  treated as a ordered categorical. If True, the resulting categorical
  will be ordered. An ordered categorical respects, when sorted, the
  order of its categories attribute (which in turn is the categories
  argument, if provided).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>This is a helper function that calls <code>set_ordered</code> with the first argument set to True. </p>
<p>Here's <code>set_ordered</code>:</p>
<pre><code>    def set_ordered(self, value, inplace=False):
    """
    Set the ordered attribute to the boolean value.
    Parameters
    ----------
    value : bool
       Set whether this categorical is ordered (True) or not (False).
    inplace : bool, default False
       Whether or not to set the ordered attribute in-place or return
       a copy of this categorical with ordered set to the value.
    """
        inplace = validate_bool_kwarg(inplace, 'inplace')
        new_dtype = CategoricalDtype(self.categories, ordered=value)
        cat = self if inplace else self.copy()
        cat._dtype = new_dtype
        if not inplace:
            return cat
</code></pre>
<p>So this just sets the fact that you want to treat your Categorical data as having an ordering. This has some more sparse documentation here: <a href="https://pandas.pydata.org/pandas-docs/version/0.23/generated/pandas.api.types.CategoricalDtype.ordered.html" rel="nofollow noreferrer">https://pandas.pydata.org/pandas-docs/version/0.23/generated/pandas.api.types.CategoricalDtype.ordered.html</a> </p>
<p>Some discussion can be found here: <a href="https://github.com/pandas-dev/pandas/issues/14711" rel="nofollow noreferrer">https://github.com/pandas-dev/pandas/issues/14711</a></p>
</div>
<span class="comment-copy">So essentially, this means each columns that gets turned into a category will have an assumed order, and corresponding min(), max(), etc?</span>
<span class="comment-copy">Yes. That is it!</span>
