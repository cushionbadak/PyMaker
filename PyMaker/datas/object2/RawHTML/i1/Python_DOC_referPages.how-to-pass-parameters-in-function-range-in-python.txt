<div class="post-text" itemprop="text">
<p>I am trying to set three arguments for the range function as an input. The code works fine with just one parameter. I have searched on the official documentation and pyanative but did not find the answer.</p>
<pre><code>def range_lister():
    trange=list(range(int(input('Please enter your range: '))))
    print(trange)
range_lister()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>def range_lister():
            '''Example 5:10:2 -&gt; [5,7,9]
            '''
    query = input('Please enter your range start:stop[:step]\n&gt; ')
    values = [int(q) for q in query.split(':')]
    trange = list(range(*values))
    print(trange)


range_lister()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this method, which takes the three args as separate input lines, and provides fallbacks to prevent (some) exceptions:</p>
<pre><code>def safeint(s, fallback):
    try:
        return int(s)
    except ValueError:
        return fallback

def range_lister():
    start = safeint(input("start: "), 0)
    stop = safeint(input("stop: "), 0)
    step = safeint(input("step: "), 1)  # Zero is not valid here
    trange=list(range(start, stop, step))
    print(trange)
</code></pre>
<p>....some tests:</p>
<pre><code>&gt;&gt;&gt; range_lister()
start: 1
stop: 14
step: 3
[1, 4, 7, 10, 13]
&gt;&gt;&gt; range_lister()
start: 
stop: 
step: 14
[]
&gt;&gt;&gt; range_lister()
start: 14
stop: 2000
step: 24
[14, 38, 62, 86, 110, 134, 158, 182, 206, 230, 254, 278, 302, 326, 350, 374, 398, 422, 446, 
470, 494, 518, 542, 566, 590, 614, 638, 662, 686, 710, 734, 758, 782, 806, 830, 854, 878,
902, 926, 950, 974, 998, 1022, 1046, 1070, 1094, 1118, 1142, 1166, 1190, 1214, 1238, 1262,
1286, 1310, 1334, 1358, 1382, 1406, 1430, 1454, 1478, 1502, 1526, 1550, 1574, 1598, 1622,
1646, 1670, 1694, 1718, 1742, 1766, 1790, 1814, 1838, 1862, 1886, 1910, 1934, 1958, 1982]
&gt;&gt;&gt; range_lister()
start: 
stop: 22
step: 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
</code></pre>
</div>
<span class="comment-copy">how do you intend to collect the three inputs from the user? <code>input()</code> returns a string, which could be entered by the user as a comma-separated string, newline-separated string, space-separated string, etc.</span>
<span class="comment-copy">I like this code, but use of the <code>-</code> separator character does prevent the user from accessing any negative numbers they may wish to use in the range function. Just an edge case to consider.</span>
<span class="comment-copy">Very true, I will change it to :</span>
