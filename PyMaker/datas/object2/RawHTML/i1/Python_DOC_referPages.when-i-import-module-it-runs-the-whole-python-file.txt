<div class="post-text" itemprop="text">
<p>client.py</p>
<pre><code># Importing modules
import os
import asyncio
import sys
import Events
import glob
import Plugins
global FPath
global PlugPath
global CMDPath
FPath = os.path.dirname(os.path.abspath(__file__))
PlugPath = os.path.dirname(os.path.abspath(__file__)) + "\\Plugins"

Events.Startup()
global cmds
cmds = input("\\&gt;")
global commandlst
commandlst = cmds.split()
command = commandlst[0]
runpy = "python " + str(FPath) + "\\" +  str(command) + ".py"
if(os.path.isfile(FPath + "\\" + command + ".py") == True):
    os.system(runpy)
else:
    print(command + " is not a command or a plugin command!")
    os.system("ping localhost -n 2 &gt;nul")
    os.system("py client.py")
</code></pre>
<p>help.py</p>
<pre class="lang-py prettyprint-override"><code>import json
from pprint import pprint
import os
import sys
import client
commands = json.loads(open(sys.path[0] + "\\commands.json").read())
</code></pre>
<p>when it imports client it runs the entire client.py file.
i have tried from client import commandlst and nothing works.
please help.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is how importing works. To solve your particular problem - do not run the whole <code>client.py</code> module you can place it's content into <code>if __name__ == '__main__':</code> check like this:</p>
<pre><code># Importing modules
...
if __name__ == '__main__':
    global FPath
    ...
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1917958/python-import-mechanics">Python import mechanics</a></span>
<span class="comment-copy">That's how Python works. When you import a module in Python it executes everything in that code. If you don't want some part of code to be executed you should write it inside <code>if __name__ == '__main__':</code> scope.</span>
<span class="comment-copy">that did not work</span>
