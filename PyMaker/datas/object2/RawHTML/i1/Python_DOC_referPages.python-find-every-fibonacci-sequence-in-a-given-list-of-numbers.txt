<div class="post-text" itemprop="text">
<p>a program that takes a list of numbers separated with "," from the user and extracts and prints every fibonacci sequence from the list.
like this:</p>
<pre><code>In: 5,6,9,3,0,1,1,2,3,8,2,9,3,0,1,1,2,3,5,98
Out: 
[0,1,1,2,3]
[0,1,1,2,3,5]
</code></pre>
<p>i tried to use "for" loops to find the first 0 and process the program after it. like it checks and follows the list for the fibonacci sequence until it's out of the sequence, prints the list, and then looks for the next 0.
i wrote the part of the code that gets the input, but i don't know how to do the rest</p>
<pre><code>numbers = input("Enter your numbers list and use comma to seperate them: ")
numlist = numbers.split(",")
numlist = [int(x) for x in numlist]
result = []
</code></pre>
<p>"result" is the output list (or lists).
i hope my explanations were clear. anyone can help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Below program should work, it will check for the fibbonaci series in the list of numbers</p>
<pre><code>numbers = [5,6,9,3,0,1,1,2,3,8,2,9,3,0,1,1,2,3,5,98]

first = numbers[0]
second = numbers[1]

fibbonacci = []
result = []

for number in numbers[2:]:
    if first + second == number:
        if not fibbonacci:
            fibbonacci.extend([first, second, number])
        else:
            fibbonacci.append(number)
    elif fibbonacci:
        result.append(fibbonacci)
        fibbonacci = []
    first = second
    second = number

print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Idea is very similar to @Vuplex but can use os.path.commonprefix to remove extra code to compare two series</p>
<pre><code>import os
numlist = list(map(int,input.split(',')))
answer = []
fib_series = [0,1,1,2,3,5,8,13]
answer = []
i = 0
while i &lt; len(numlist):
    if not numlist[i]:
        answer.append(os.path.commonprefix([fib_series,numlist[i:]]))
    i += 1
print(answer) #[[0, 1, 1, 2, 3], [0, 1, 1, 2, 3, 5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>FIB = [0,1,1,2,3,5,8,13]

def checkSequence(numArr):
    i = 0
    while i &lt; len(numArr):
        if FIB[i] == int(numArr[i]):
            i += 1
        else:
            return i

numbers = input("Enter your numbers list and use comma to seperate them: ")
numlist = numbers.split(",")
answer = list()
i = 0
while i &lt; len(numlist):
    if int(numlist[i]) == 0:
        ret = checkSequence(numlist[i:])
        answer.append(numlist[i:i+ret])
    i += 1
</code></pre>
<p>As you can see, you can quite easily make a CheckSquence method to check the array splice for a squence and return the amount of entries you've found. With the answer from the checkSequence you then can create a splice for your answer list. This produces the results you've specified in your question.</p>
<p>EDIT: You'll need to define the Fibunacci sequence before. You can either use a static sequence like I did, or compute till a certain point and then compair against that result.</p>
</div>
<span class="comment-copy">This somewhat sounds like some programming homework. Apart from that I don't quite understand what your problem seems to be. You said you tried for loops, but in your example is no real effort to target the issue at hand.</span>
<span class="comment-copy">Your expected output is not very clear for the given input. When you say <code>every fibonacci sequence</code> what exactly do you mean by this? For example as per your text <code>[0]</code> will also be a valid fibonacci  series but it is not included in your expected output</span>
<span class="comment-copy">Why shouldn't the program output <code>[0]</code> or <code>[0,1]</code> or <code>[0,1,1]</code> or <code>[0,1,1,2]</code>?</span>
<span class="comment-copy">@mad_ where does that not answer the question directly?</span>
