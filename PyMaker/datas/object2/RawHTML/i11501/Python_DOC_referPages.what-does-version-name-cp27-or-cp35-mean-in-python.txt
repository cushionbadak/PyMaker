<div class="post-text" itemprop="text">
<p>What does version name 'cp27' or 'cp35' mean in Python?</p>
<p>Like the files in <a href="https://pypi.python.org/pypi/gensim#downloads" rel="noreferrer">https://pypi.python.org/pypi/gensim#downloads</a></p>
<p><a href="https://i.stack.imgur.com/gIQRy.png" rel="noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/gIQRy.png"/></a></p>
<p>I am using Python 2.7 on a 64-bit Window 7 PC, and don't know which version of python package I should install.</p>
<p>There are three questions:</p>
<ol>
<li><p>Which of "<strong>gensim-0.12.4-cp27-none-win_amd64.whl</strong>" or "<strong>gensim-0.12.4.win-amd64-py2.7.exe</strong>" should I install?  I have installed 'WinPython-64bit-2.7.10.3' on 64-bit Window 7 PC which I am using.</p></li>
<li><p>What does '<strong>cp27</strong>' mean in Python or Python version name? I searched online with keywords 'Python cp27' but failed to find any answers.</p></li>
<li><p>Are there differences between these two versions of python packages? ('<strong>0.12.4-cp27-none-win_amd64</strong>' and '<strong>win-amd64-py2.7</strong>') If there are, what are the differences? </p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>If you check out the <a href="https://www.python.org/dev/peps/pep-0425/" rel="noreferrer">Python Enhancement Proposal</a> (more commonly known as a PEP), you'll see that the <code>cpN</code> refers to the particular version of Python</p>
<p>in <code>gensim-0.12.4-cp27-none-win_amd64.whl</code> you can break it apart:</p>
<ul>
<li><strong>0.12.4</strong> - package version, they <em>may</em> be using <a href="http://semver.org" rel="noreferrer">semantic versioning</a></li>
<li><strong>cp27</strong> - this package is for CPython. IronPython, Jython, or PyPy will probably be unhappy.</li>
<li><strong>none</strong> - no feature of this package depends on the python <a href="https://docs.python.org/3/c-api/stable.html" rel="noreferrer">Application Binary Interface, or ABI</a></li>
<li><strong>win_amd64</strong> - this has been compiled for 64-bit Windows. That means that it probably has some code written in C/C++</li>
<li><strong>.whl</strong> - that means this is a wheel distribution. Which is handy, because it means if you're running CPython 2.7 64-bit on Windows, and assuming you have pip installed, all you have to do to get this package is run: <code>py -2.7 -m pip install --use-wheel gensim</code> (assuming that it's available on pypi, of course). You <em>may</em> need to <code>py -2.7 -m pip install wheel</code> first. But other than that, that should be all it takes.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>These stand for the version of CPython (i.e. the Python official distribution you get from python.org) which the wheel files are built for.</p>
<p>For example <code>cp27</code> is meant to be used on a CPython version 2.7.</p>
<p>Warning: <code>cp32</code> is meant to be used in a CPython version 3.2. The difference between the 32 bits version and the 64 bits version is stated in another suffix, e.g. <code>win32</code> or <code>amd64</code> in the filename.</p>
</div>
<span class="comment-copy">I have been wondering the same thing, but the broad meaning should not be hard to guess - CPython versions 2.7 and 3.5?</span>
<span class="comment-copy">The precompiled executable is packaged differently than the wheel, but the contents are fundamentally the same. The former makes sense in a standalone installation, whereas the latter is useful for e.g. development.</span>
<span class="comment-copy">Only one question per question, please.</span>
<span class="comment-copy">@tripleee see my answer for links to the docs :)</span>
