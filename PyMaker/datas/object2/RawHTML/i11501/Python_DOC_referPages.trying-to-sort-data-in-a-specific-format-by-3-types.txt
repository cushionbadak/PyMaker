<div class="post-text" itemprop="text">
<p>So I am having issues with sorting data in the format:
Name, Score1, Score2, Score3 stored in a text file.</p>
<p>For example:</p>
<p>Zac, 0, 0, 0</p>
<p>Zac, 0, 0, 0</p>
<p>Zac, 0, 0, 0</p>
<p>Zac, 0, 0, 0</p>
<p>I need to sort it by alphabetical, highest score and average score but I am unsure on how to do this.</p>
<p>Could someone help me out or give me some pointers as I'm not sure where to start?</p>
<p>Here is the task:</p>
<p>Task 3
The teacher wants to use the results from students taking these quizzes to log their performance. The system should store the last three scores for each student. The teacher would like to be able to output the results of the quiz for a particular class, sorted:</p>
<p>• in alphabetical order with each student’s highest score for the tests</p>
<p>• by the highest score, highest to lowest</p>
<p>• by the average score, highest to lowest.</p>
<p>And my code so far: </p>
<pre><code>import random
import csv

User = input("Student (s) / Teacher (t):")

if User == "s" or "S":
    classList = []

    Name = input("What is your name? ")
    Class = int(input("Please enter your class: "))

    CompletedTimes = int(0)
    while CompletedTimes &lt;= 2:
        NumberQuestion = 0
        Score = int(0)
        while NumberQuestion &lt; 10:
            Symbol = random.randrange (1, 4)
            if Symbol == 1:
                number1 = random.randrange(1, 25)
                number2 = random.randrange(1, 25)
                SetQuestion = (number1 * number2)
                print (number1, "x", number2)
                while True:
                            try:
                                Answer = int(input("Answer: "))
                                break
                            except ValueError:
                                print("Enter a number")
                if Answer == SetQuestion:
                    print ("Correct. +1")
                    Score = (Score + 1)
                    NumberQuestion = (NumberQuestion + 1)
                else:
                    print ("incorrect")
                    NumberQuestion = (NumberQuestion + 1)

            if Symbol == 2:
                number1 = random.randrange(1, 25)
                number2 = random.randrange(1, 25)
                SetQuestion = (number1 + number2)
                print (number1, "+", number2)
                while True:
                            try:
                                Answer = int(input("Answer: "))
                                break
                            except ValueError:
                                print("Enter a number")
                if Answer == SetQuestion:
                    print ("Correct. +1")
                    Score = (Score + 1)
                    NumberQuestion = (NumberQuestion + 1)
                else:
                        print ("incorrect")
                        NumberQuestion = (NumberQuestion + 1)

            elif Symbol == 3:
                number1 = random.randrange(1, 25)
                number2 = random.randrange(1, 25)
                SetQuestion = (number1 - number2)
                print (number1, "-", number2)
                while True:
                            try:
                                Answer = int(input("Answer: "))
                                break
                            except ValueError:
                                print("Enter a number")
                if Answer == SetQuestion:
                    print ("Correct. +1")
                    Score = (Score + 1)
                    NumberQuestion = (NumberQuestion + 1)
                else:
                    print ("incorrect")
                    NumberQuestion = (NumberQuestion + 1)
        classList.append(Score)
        print ("Your final score is: ", Score)
        CompletedTimes = (CompletedTimes + 1)

    classList = str(classList)
    classList = str(classList)[1:-1]

    Class = str(Class)
    Class = (Class+'.csv')
    thefile = open(Class, 'w')
    thefile.write(Name + ',')
    thefile.write(classList)
    thefile.close()

elif User == "t" or 'T':
    CONTINUE CODE HERE
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that your file is named "data.csv" and has the following text:</p>
<pre><code>Zac, 0, 0, 0
Zac, 4, 5, 6
Zac, 0, 0, 0
Zac, 1, 2, 3
Al, 1, 2, 3
</code></pre>
<p>Then we can construct our code:</p>
<pre><code>import csv  # import csv reader
with open("data.csv", 'r') as f:  # open the file
   reader = csv.reader(f)         # read the data
   lines = [[l[0], float(l[1][1:]), float(l[2][1:]), float(l[3][1:]) for l in reader]
# sort the list
sorted(lines, key = lambda x: (x[0], max(x[1:3]),sum(x[1:3])/float(len(x[1:3]))))
# [['Al', 1.0, 2.0, 3.0],
# ['Zac', 0.0, 0.0, 0.0],
# ['Zac', 0.0, 0.0, 0.0],
# ['Zac', 1.0, 2.0, 3.0],
# ['Zac', 4.0, 5.0, 6.0]]
</code></pre>
<p>Because your file isn't perfectly formatted csv (there is a space in between the commas), we have to do some extra parsing.  This is the breakdown of what happens at <em>lines=</em>:</p>
<ol>
<li><code>reader</code> contains each line from your file so we can iterate through it</li>
<li><code>for l in reader</code> says, for each line in reader, do some action</li>
<li>The outermost brackets indicate that we want to store the result of these actions in a list</li>
<li>The innermost brackets indicate that for each line in reader, we want to build a list that holds the data from the line</li>
<li>In order to do math operations, we have to convert the strings to <code>int</code> or <code>float</code> types</li>
<li><code>i[0]</code> access the first element which is the name</li>
<li><code>i[1]</code> is the second element which is currently a string - ' 0'</li>
<li><code>i[1][1:]</code> says given the second element, take everything from the second element to the end of the string which is '0'</li>
<li><code>float([1][1:])</code> says given the string '0', convert it to a float type</li>
</ol>
<p>Then we sort the list.  First, it will sort on the names, then on the max score, then on the average.</p>
<p><a href="https://stackoverflow.com/questions/4233476/sort-a-list-by-multiple-attributes">Sort list by multiple attributes</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I would have an object like this:</p>
<pre><code>class Grade(object):
    def __init__(self, name, score1, score2, score3):
        self.name = name
        self.score1 = score1
        self.score2 = score2
        self.score3 = score3

    @property
    def average(self):
        return float(self.score1 + self.score2 + self.score3) / 3.0

    @property
    def highest(self):
        return max([self.score1, self.score2, self.score3])

    def __repr__(self):
        return "&lt;Grade({}, [{}, {}, {}]) object at 0x{:08X}&gt;".format(self.name, self.score1, self.score2, self.score3, id(self))

    def __str__(self):
        return "Grade({}, [{}, {}, {}])".format(self.name, self.score1, self.score2, self.score3)    

x = Grade("Bob", 85, 92, 90)
y = Grade("Alice", 80, 75, 95)

grades = [x, y]

alphabetical = sorted(grades, key=lambda g: g.name)
highest_score = sorted(grades, key=lambda g: g.highest, reverse=True)
average_score = sorted(grades, key=lambda g: g.average, reverse=True)

def display(l):
    print([str(item) for item in l])

display(alphabetical)  # =&gt; ['Grade(Alice, [80, 75, 95])', 'Grade(Bob, [85, 92, 90])']
display(highest_score)  # =&gt; ['Grade(Alice, [80, 75, 95])', 'Grade(Bob, [85, 92, 90])']
display(average_score)  # =&gt; ['Grade(Bob, [85, 92, 90])', 'Grade(Alice, [80, 75, 95])']
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">docs.python.org/3/howto/sorting.html#key-functions</a></span>
<span class="comment-copy">My data doesn't look like that, it's written to a file like specified above with each name on a different line. However would it be too tricky to change it to be like that? Pretty new to python so go easy on me :)           Written like this:  Zac, 0, 0, 0 Zac, 0, 0, 0 Zac, 0, 0, 0 Zac, 0, 0, 0</span>
<span class="comment-copy">If you could include the format of your file in the original question, that would be most helpful.  Depending on how the file is formatted, you should be able to parse it into a data structure that you can easily work with.</span>
<span class="comment-copy">Formatted as in a text file? Or in the list described? Again, very new to python and the forums so treat me like a monkey.</span>
<span class="comment-copy">Sorry to keep asking questions but I meant that I wanted to do the sorting separately so that I can specifiy which method I wanted to use. Can I easily separate them? Sorry for the trouble.</span>
