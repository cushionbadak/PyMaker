<div class="post-text" itemprop="text">
<p>I am trying to make a list that only displays the odd numbers between 1 and 12, but I have to use the def main function. I have looked all over and have tried everything I could. I'm not sure why, but I've always had trouble using the def main function. Here is where i'm at now with my program.</p>
<pre><code>print("I will display the odd numbers between 1 and 12.")

def main( ):

    for num in [0,1,2,3,4,5,6,7,8,9,10,11,12]:

        odd = num[::2]

main( )

print (odd)
</code></pre>
<p>Anyone have any advice or see what I am doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're pretty close. Start by getting rid of your <code>for</code>-loop, because what you want to do is to assign the list <code>[0,1,2,3,4,5,6,7,8,9,10,11,12]</code> to the variable <code>num</code>, not iterate over the individual numbers in the list.
Then you'll notice that <code>num[::2]</code> actually gives you the even numbers, so change that to <code>num[1::2]</code>. Lastly, you have to move <code>print (odd)</code> inside the <code>main</code> function, because the variable <code>odd</code> is only defined within that function.</p>
<p>The end result should look like this:</p>
<pre><code>def main():
    print("I will display the odd numbers between 1 and 12.")
    num = [0,1,2,3,4,5,6,7,8,9,10,11,12]
    odd = num[1::2]
    print (odd)
main()
</code></pre>
<hr/>
<p>If you want to keep the loop, you'll have to check each number individually and append it the list of odd numbers if it's odd:</p>
<pre><code>odd = [] # make an empty list
for num in [0,1,2,3,4,5,6,7,8,9,10,11,12]: # for each number...
    if num % 2: #...check if it's odd with a modulo division
        odd.append(num) # if yes, add it to the list
print(odd)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python implicitly defines the <code>main()</code> function, unlike C++ and some others. The problem in your code is not in the definition of <code>main()</code>. If you read the error message:</p>
<pre><code>TypeError: 'int' object is not subscriptable
</code></pre>
<p>you may get an idea that something is wrong with types. With the code snippet you've provided, you're iterating over a list of numbers (Python has a function <code>range()</code> specifically for the purpose of generating a sequence of numbers) and with each iteration, the number (type <code>int</code>) is stored in the variable <code>num</code>. And you're trying to use slicing, which is made for iterables. <code>int</code> is not an iterable. You don't need a for loop in your case. This will do the trick:</p>
<pre><code>print("I will display the odd numbers between 1 and 12.")
num = [0,1,2,3,4,5,6,7,8,9,10,11,12]
odd = num[1::2] # first index is one to get the odd numbers
print(odd)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>well you have much to learn, but in this particular case you use the <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range</a> function to get the numbers, and even make it more general by asking the user for a number with <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow">input</a>, like this</p>
<pre><code>def odd_number(n):
    print("I will display the odd numbers between 1 and",n)
    odd = list(range(1,n+1,2))
    print(odd)

def main():
    n = int(input("choose the max number to display odd number: "))
    odd_number(n)

odd_number(12)
main()
</code></pre>
</div>
<span class="comment-copy">Do you have experience programming in other languages, or are you new to programming as well?</span>
<span class="comment-copy">Completely new to programming overall.</span>
<span class="comment-copy">The main function has nothing specific in Python, you can even name your main function whatever you like. Your problem would be the same with any function.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer"><i>The Python Tutorial</i></a> is a very good introduction to the language.  You specifically need to read (or review) section <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">4.6. Defining Functions</a> and 4.7, farther down that same page.  The typical way to call the <code>main</code> function is in an <code>if</code> block at the very bottom of your <code>.py</code> file, described in the library docs, "<a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">29.4. <code>__main__</code> --- Top-level script environment</a>".</span>
<span class="comment-copy">Is there a way to do it with the for-loop?</span>
<span class="comment-copy">@tmoKSU: Yes, but it's more complicated that way. I've updated my answer.</span>
<span class="comment-copy">I think you meant "Python does <i>not</i> implicitly define the <code>main()</code> function...".  It doesn't exist until the programmer defines it explicitly.</span>
<span class="comment-copy">@KevinJ.Chase No, it always exists. That's why Python code does not require an explicit definition</span>
<span class="comment-copy">No, it doesn't.  Try it:  Open up a <code>python</code> or <code>python3</code> interactive session and type <code>main()</code>.  You'll get a <code>NameError</code>, because <code>main</code> does not exist unless you create it.  It's just a function, like any other (and <i>unlike</i> C or Java, where the name "main" has special significance).  Were you thinking of the string <a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer"><code>'__main__'</code></a>, which gets assigned to <code>__name__</code> when executing as a script?</span>
