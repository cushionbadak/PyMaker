<div class="post-text" itemprop="text">
<p>I'm using Mac OS X with PyCharm and Python 3.5.1 and Blender 2.77.</p>
<p>I'm using Blender with Python scripts. I understand that in order to run Python scripts that use Blender (i.e. that imports <code>bpy</code>), I need to run it from command line using <code>blender -b -P /path/to/my_python_script.py</code> (although I don't really know why). That's all fine and it works, but I wish I could just run it from inside Python, because I use these scripts with other non-Blender Python code and I like to use PyCharm to debug and to do pretty much everything. I understand that I can't just run the Blender Python script from PyCharm, but I thought I'd try anyway. I took care to ensure that PyCharm can see the <code>bpy</code> module by editing the "Project Structure" settings in "Preferences" to include the parent directory in which the <code>bpy</code> module lives, which on my machine is  <code>/Applications/blender.app/Contents/Resources/2.77/scripts/modules</code>. However, when I try to run the script, it gives <code>ImportError: No module named '_bpy'</code>. I followed the source of the error and the culprit was a line in the <code>__init__.py</code> file in the <code>bpy</code> module (whose location on my machine is <code>/Applications/blender.app/Contents/Resources/2.77/scripts/modules/bpy/__init__.py</code>); the line is:</p>
<pre><code>from _bpy import types, props, app, data, context
</code></pre>
<p>So I tried to search for the module <code>_bpy</code> on my machine, and couldn't find it anywhere. So it seems to be importing things from a module that doesn't exist. However, I know that my script works because I've successfully run it in Blender.</p>
<p>So my question is, what witchcraft is going on with the mysterious <code>_bpy</code> module, that neither I nor PyCharm can find, but that the Blender app doesn't have a problem with? I looking to gain a general understanding of what might be going on here, so educated guesses (as well as precise answers obviously) are welcome.</p>
</div>
<div class="post-text" itemprop="text">
<p>Did you happen to notice the <a href="https://developer.blender.org/diffusion/B/browse/master/release/scripts/modules/bpy/__init__.py$37" rel="nofollow noreferrer">line before</a> <code>from _bpy import...</code> it says <code># internal blender C module</code> which should be the giveaway.</p>
<p>The <em>witchcraft</em> that makes this work is that the blender binary includes <code>_bpy</code> as a binary python module, blender makes this module accessible within the python interpreter included with blender, it does this during the initialization of the python interpreter. The normal blender binary cannot be imported into a python interpreter outside of blender.</p>
<p>To figure out how to do it you can start with the python docs on <a href="https://docs.python.org/3/c-api/index.html" rel="nofollow noreferrer">python's c-api</a>. You may also want to look through blender's source code within <a href="https://developer.blender.org/diffusion/B/browse/master/source/blender/python/" rel="nofollow noreferrer">source/blender/python</a> where you will find the c files used to build blender's main c based modules such as bpy, bgl, bmesh, mathutils.</p>
<p>Also see <a href="https://stackoverflow.com/a/32825066/2684771">this answer</a> which has a link to info on building blender as a python module so it can be imported (without the gui) into an external python interpreter. If you search for pycharm at <a href="https://blender.stackexchange.com/search?q=pycharm">blender.stackexchange.com</a> you will find several answers about using <code>bpy</code> in pycharm and eclipse, including ways to have blender running as an external interpreter for debugging.</p>
</div>
<span class="comment-copy">What is the output when you type <code>import _bpy;_bpy.__file__</code></span>
<span class="comment-copy">ImportError: No module named '_bpy'</span>
<span class="comment-copy">I assume then that the <code>_bpy</code> module is built in to blender and doesn;t have any source file.</span>
<span class="comment-copy">How does that work? I mean, if I were to try to build a module into a program and distribute the program without distributing the source code, how would I go about doing that?</span>
<span class="comment-copy">Precisely the kind of answer I was looking for. Recommendations for further reading are a big plus. Thank you!</span>
