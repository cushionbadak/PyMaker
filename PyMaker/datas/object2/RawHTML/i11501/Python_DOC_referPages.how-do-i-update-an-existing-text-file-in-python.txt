<div class="post-text" itemprop="text">
<p>I've got a <code>books.txt</code> file which contains book titles, authors and prices as follows:</p>
<pre><code>The Hunger Games,Suzanne Collins,12.97
The Fault In Our Stars,John Green,11.76
The Notebook,Nicholas Sparks,11.39
</code></pre>
<p>I sorted it into a list of lists to get this:</p>
<pre><code>[[The Hunger Games, Suzanne Collins, 12.97], [The Fault In Our Stars, John Green, 11.76], [The Notebook, Nicholas Sparks, 11.39]]
</code></pre>
<p>The code I used is:</p>
<pre><code>def booksDatabase():
        for line in infile:
            line = line.rstrip().split(",")
            line[2] = float(line[2])
            table.append(line)


infile = open("books.txt")

table = []

booksDatabase() 

infile.close()
</code></pre>
<p>And I'd like to update the <code>.txt</code> file so that it contains the current list of lists. How do I do that without importing any libraries? </p>
<p>Thanks in advance.</p>
<p><strong>Update:</strong> I tried doing this:</p>
<pre><code>def booksDatabase():
        for line in infile:
            line = line.rstrip().split(",")
            line[2] = float(line[2])
            table.append(line)
            outfile.write(line)

infile = open("books.txt")
outfile = open("books.txt", 'w')

table = []

booksDatabase() 

infile.close()
</code></pre>
<p>But I got this error:</p>
<pre><code>    outfile.write(line)
TypeError: write() argument must be str, not list
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to sort the lines in the file, there is no need to split the lines or to strip them. That would only make it necessary to join them and add the correct line separator again later.</p>
<p>So try this;</p>
<pre><code>with open('books.txt') as books:
    lines = books.readlines()
lines.sort()
with open('books.txt', 'w') as sortedbooks:
    sortedbooks.writelines(lines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>In [354]: l
Out[354]:
[['The Hunger Games', 'Suzanne Collins', '12.97'],
 ['The Fault In Our Stars', 'John Green', '11.76'],
 ['The Notebook', 'Nicholas Sparks', '11.39']]

with open('d:/temp/a.txt', 'w') as f:
    f.write('\n'.join([','.join(line) for line in l]))
</code></pre>
</div>
<span class="comment-copy">Have you tried opening the file in write/append mode instead of only read mode?</span>
<span class="comment-copy">No, I haven't. Could you please explain what you mean? I'm new to Python.</span>
<span class="comment-copy">Suggest you read this: <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">@SammieG: Why don't you just use the <code>csv</code> module? It comes with Python.</span>
<span class="comment-copy">Although this is a very basic question/anwser just a word of warning: This setup is not atomic i.e. if books.txt gets changed by another process between the read and write lines you will loose data (see <a href="https://stackoverflow.com/questions/2333872/atomic-writing-to-file-with-python" title="atomic writing to file with python">stackoverflow.com/questions/2333872/…</a> )!</span>
<span class="comment-copy">@OliverZendel You are correct, but given the use case I don't think that this is an issue here. And unless the operating system support (strict, not advisory) locking, you can never have a <i>guarantee</i> that a file is not overwritten.</span>
<span class="comment-copy">Correct, it's a mess. Still, many platforms allow file locking. For anyone interested in the topic see: <a href="https://stackoverflow.com/questions/489861/locking-a-file-in-python" title="locking a file in python">stackoverflow.com/questions/489861/locking-a-file-in-python</a></span>
<span class="comment-copy">(though this works, the file may remain open until the interpreter exits; files should always be explicitly closed in python, preferably using the <code>with</code> syntax)</span>
<span class="comment-copy">@spectras, thanks for the correction! I've updated my answer correspondingly</span>
