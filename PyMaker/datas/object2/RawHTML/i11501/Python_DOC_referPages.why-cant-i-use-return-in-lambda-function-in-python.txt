<div class="post-text" itemprop="text">
<p>This does not work:</p>
<pre><code>print((lambda :  return None)())
</code></pre>
<p>But this does:</p>
<pre><code>print((lambda :  None)())
</code></pre>
<p>Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>return</code> is a statement. Lambdas <a href="https://docs.python.org/3/reference/expressions.html#lambda">can only contain expressions</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>lambda</code> functions automatically return an expression. They cannot contain statements. <code>return None</code> is a statement and therefore cannot work. <code>None</code> is an expression and therefore works.</p>
</div>
<div class="post-text" itemprop="text">
<p>because lambda takes a number of parameters and an expression combining these parameters, and creates a small function that returns the value of the expression.</p>
<p>see: <a href="https://docs.python.org/2/howto/functional.html?highlight=lambda#small-functions-and-the-lambda-expression" rel="nofollow">https://docs.python.org/2/howto/functional.html?highlight=lambda#small-functions-and-the-lambda-expression</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Lambda can execute only <strong>statements</strong> and return result of the executed statement, result is the expression.</p>
<p>Consider using <code>or</code> and <code>and</code> operators to get more flexability in the values which will be returned by your lambda. See some samples below:</p>
<pre><code># return result of function f if bool(f(x)) == True otherwise return g(x)
lambda x: f(x) or g(x) 

# return result of function g if bool(f(x)) == True otherwise return False.
lambda x: f(x) or g(x) 
</code></pre>
</div>
<span class="comment-copy">Why would you want to?  Do you have a specific example we can help with?</span>
<span class="comment-copy">I m trying to give an educational example of the most simplistic lambda function - empty lambda</span>
<span class="comment-copy">great, also insightful into the nature of lambdas - they can only contain expressions</span>
