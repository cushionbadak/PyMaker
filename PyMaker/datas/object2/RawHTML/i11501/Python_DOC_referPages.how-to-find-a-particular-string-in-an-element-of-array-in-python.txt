<div class="post-text" itemprop="text">
<p>I have a list of strings in python and if an element of the list contains the word "parthipan" I should print a message. But the below script is not working</p>
<pre><code>import re
a = ["paul Parthipan","paul","sdds","sdsdd"]
last_name = "Parthipan"
my_regex = r"(?mis){0}".format(re.escape(last_name))
if my_regex in a:
    print "matched"
</code></pre>
<p>The first element of the list contains the word "parthipan", so it should print the message.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not: </p>
<pre><code>a = ["paul Parthipan","paul","sdds","sdsdd"]
last_name = "Parthipan"
if any(last_name in ai for ai in a):
    print "matched"
</code></pre>
<p>Also what for is this part: </p>
<pre><code>...
import re
my_regex = r"(?mis){0}".format(re.escape(last_name))
...
</code></pre>
<p>EDIT:</p>
<p>Im just too blind to see what for do You need regex here. It would be best if You would give some real input and output. This is small example which could be done in that way too:</p>
<pre><code>a = ["paul Parthipan","paul","sdds","sdsdd",'Mala_Koala','Czarna,Pala']
last_name = "Parthipan"
names=[]
breakers=[' ','_',',']
for ai in a:
    for b in breakers:
        if b in ai:
            names.append(ai.split(b))
full_names=[ai for ai in names if len(ai)==2]
last_names=[ai[1] for ai in full_names]

if any(last_name in ai for ai in last_names):
    print "matched"
</code></pre>
<p>But if regex part is really needed I cant imagine how to find '(?mis)Parthipan' in 'Parthipan'. Most simple would be in reverse direction 'Parthipan' in '(?mis)Parthipan'. Like here...</p>
<pre><code>import re
a = ["paul Parthipan","paul","sdds","sdsdd",'Mala_Koala','Czarna,Pala']
last_name = "Parthipan"
names=[]
breakers=[' ','_',',']
for ai in a:
    for b in breakers:
        if b in ai:
            names.append(ai.split(b))
full_names=[ai for ai in names if len(ai)==2]
last_names=[r"(?mis){0}".format(re.escape(ai[1])) for ai in full_names]
print last_names
if any(last_name in ai for ai in last_names):
    print "matched"
</code></pre>
<p>EDIT:</p>
<p>Yhm, with regex You have few possibilities...</p>
<pre><code>import re
a = ["paul Parthipan","paul","sdds","sdsdd",'jony-Parthipan','koala_Parthipan','Parthipan']
lastName = "Parthipan"
myRegex = r"(?mis){0}".format(re.escape(lastName))

strA=';'.join(a)
se = re.search(myRegex, strA)
ma = re.match(myRegex, strA)
fa = re.findall(myRegex, strA)
fi=[i.group() for i in re.finditer(myRegex, strA, flags=0)]
se = '' if se is None else se.group()
ma = '' if ma is None else ma.group()

print se, 'match' if any(se) else 'no match'
print ma, 'match' if any(ma) else 'no match'
print fa, 'match' if any(fa) else 'no match'
print fi, 'match' if any(fi) else 'no match'
</code></pre>
<p>output, only first one seems ok, so only re.search gives proper solution:</p>
<pre><code>Parthipan match
 no match
['Parthipan', 'Parthipan', 'Parthipan', 'Parthipan'] match
['Parthipan', 'Parthipan', 'Parthipan', 'Parthipan'] match
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to do this with a regexp, you can't use the <code>in</code> operator. Use <code>re.search()</code> instead. But it works with <em>strings,</em> not a whole list.</p>
<pre><code>for elt in a:
    if re.search(my_regexp, elt):
        print "Matched"
        break # stop looking
</code></pre>
<p>Or in more functional style:</p>
<pre><code>if any(re.search(my_regexp, elt) for elt in a)):
    print "Matched"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need regex for this simply use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a>.</p>
<pre><code>&gt;&gt;&gt; a = ["paul Parthipan","paul","sdds","sdsdd"]
&gt;&gt;&gt; last_name = "Parthipan".lower()
&gt;&gt;&gt; if any(last_name in name.lower() for name in a):
...     print("Matched")
... 
Matched
</code></pre>
</div>
<span class="comment-copy">No need to <code>import re</code> in your first code snippet as you don't use it any more...</span>
<span class="comment-copy">The part you don't understand requires regexp!</span>
<span class="comment-copy">@Robert, you're off track. Read <a href="https://docs.python.org/2/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">the documentation</a> to find out what <code>(?...)</code> does.</span>
