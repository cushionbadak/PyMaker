<div class="post-text" itemprop="text">
<p>My Python code</p>
<pre><code>import operator

with open('index.txt') as f:
    lines = f.read().splitlines()

print type(lines)
print len(lines)

l2=lines[1::3] 
print len(l2)
print l2[0]

list1 = [0,2]
my_items = operator.itemgetter(*list1)
new_list = [ my_items(x) for x in l2 ]

with open('newindex1.txt','w') as thefile:
    for item in l2:
        thefile.write("%s\n" % item)
</code></pre>
<p>Couple of lines from <code>index.txt</code></p>
<pre><code>0 0 0
0 1 0
0 2 0
1 0 0
1 1 0
1 2 0
2 0 0
2 1 0
2 2 0
3 0 0
</code></pre>
<p>Couple of lines from <code>newindex1.txt</code></p>
<pre><code>0 1 0
1 1 0
2 1 0
3 1 0
4 1 0
5 1 0
6 1 0
7 1 0
8 1 0
9 1 0
</code></pre>
<p>I wanted to read the file as a list,then choose every third row and then finally select first and the third column from that list.It seems that I do not understand how operator works.</p>
<p>If I try with Back2Basics solution
import numpy as np</p>
<p>myarray = np.fromfile('index.txt', dtype=int, sep=' ')
anotherarray = myarray[::3][0,2]</p>
<p>I got</p>
<pre><code>  File "a12.py", line 4, in &lt;module&gt;
    anotherarray = myarray[::3][0,2]
IndexError: too many indices
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to read all the data into memory at all, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow">itertools.islice</a> to parse the rows you want and the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow">csv lib</a> to read and write the data:</p>
<pre><code>from operator import itemgetter
from itertools import islice
import  csv

with open("in.txt") as f, open('newindex1.txt','w') as out:
    r = csv.reader(f, delimiter=" ")
    wr = csv.writer(out, delimiter=" ")
    for row in iter(lambda: list(islice(r, 0, 3, 3)), []):
        wr.writerow(map(itemgetter(0, 2), row)[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd highly suggest using numpy for this.  The reason being this is all numerical data that fits so nicely into memory.  The code looks like this.</p>
<pre><code>import numpy as np
myarray = np.fromfile('index.txt', dtype=int, sep=' ')
anotherarray = myarray[::3,::2]
</code></pre>
<p>and then you want to write the file</p>
<pre><code>anotherarray.tofile('newfile.txt', sep=" ")
</code></pre>
<p>The way the array slicing line <code>[::3,::2]</code> reads is "take every 3rd row starting from 0, and take every other column starting from 0"</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you need something this?</p>
<pre><code>lines = []

with open('index.txt', 'r') as fi:
    lines = fi.read().splitlines()

lines = [line.split() for line in lines]

with open('answer.txt', 'w') as fo:
    for column in range(len(lines)):
        if (column + 1) % 3:
            fo.write('%s %s\n' % (lines[column][0], lines[column][2]))
</code></pre>
</div>
<span class="comment-copy">What mean first in the third column? All elements in your third column in index.txt equal zero..</span>
<span class="comment-copy">@cmashinho First and the third. No they are not all zero,it is just frst 10 lines.</span>
<span class="comment-copy">What do you want from the first text file?</span>
<span class="comment-copy">@PadraicCunningham First and the third column,every third row.</span>
<span class="comment-copy">Yeah I had to edit my answer.</span>
