<div class="post-text" itemprop="text">
<p>I have a text file with keywords and I use </p>
<pre><code>with open('filename.txt','r') as file:
    list_of_words = [x.strip('\n') for x in file.readlines()
</code></pre>
<p>I get a:
<strong>UnicodeDecodeError : 'ascii' codec can't decode byte 0xc4 in position 5595: ordinal not in range(128)</strong>
on line 2</p>
<p>I understand the error. I don't understand why is it on line 2.</p>
<p>According to python docs: <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow">https://docs.python.org/3/library/functions.html#open</a></p>
<blockquote>
<p>In text mode (the default, or when 't' is included in the mode
  argument), the contents of the file are returned as str, the bytes
  having been first decoded using a platform-dependent encoding or using
  the specified encoding if given.</p>
</blockquote>
<p>This means that while opening the file, the decoding process happens while opening the file and returned in 'file' variable.</p>
<p>Why do I get the error on line 2 then?</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be confusing the <a href="https://docs.python.org/3/glossary.html#term-file-object" rel="nofollow"><em>file object</em></a> returned by the <code>open()</code> call, for the actual process of reading from a file object.</p>
<p>Python decodes the <strong>contents</strong> of the file, as you read it. Opening a file object doesn't read any data from the file, it just creates a <em>file object</em>. No data is read from the file at that point, there are no bytes for Python to process <strong>yet</strong>.</p>
<p>In line 2 you actually <em>read</em> from the file, using the <code>file.readlines()</code> method. It is <strong>that method</strong> that tells the file object to fetch data from the filesystem (bytes) and decode those bytes. Only <strong>then</strong> can Python know that the data cannot actually be decoded as ASCII.</p>
</div>
<div class="post-text" itemprop="text">
<p>Opening the file doesn't actually examine the contents. Only when some of the file data is returned via one of its several methods that perform a read can the contents be decoded.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't get an error immediately because the file is just opened, not read from in line 1. Opening a file just involves acquiring a handle from the operating system to the file - no contents are being read.</p>
<p>Only when you call <code>readlines</code>, <code>read</code>, iterate over the file, or otherwise read from the file you actually get contents, initially as bytes. These bytes are then decoded, and only then found not to be a valid in the specified encoding.</p>
<p>If you're not specifying an encoding, python <a href="https://docs.python.org/dev/library/functions.html#open" rel="nofollow">guesses it from the operating system configuration</a>:</p>
<blockquote>
<p><code>encoding</code> is the name of the encoding used to decode or encode the (...). The default encoding is platform dependent (whatever locale.getpreferredencoding() returns)</p>
</blockquote>
<p>It seems that on your system <code>locale.getpreferredencoding()</code> returns ASCII, and the file is not encoded in ASCII.</p>
<p>Simply specify the correct encoding:</p>
<pre><code>with open('filename.txt', 'r', encoding='utf-8') as file:
    list_of_words = [line.strip('\n') for line in file]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Actually this is just poorly worded explanation in documentation. Open function does not read any content it only returns file handle with specified mode and encoding that was passed to it from OS.</p>
</div>
<span class="comment-copy">Why would it happen on line 1? Only when actually reading data would any decoding take place. Only on line 2 are you reading data from the file.</span>
<span class="comment-copy">So you mean that type of the 'file' variable is still bytes. It is when file.readlines() is called, is the data decoded?</span>
<span class="comment-copy">The type of the "file" variable is <code>file</code>.</span>
<span class="comment-copy">@ChintanShah: no, a file object is a file object. Decoding doesn't apply to a file object, only to the data being read from it.</span>
<span class="comment-copy">Thank you. I get it now. So what happens is that open returns a file pointer and then when we read the contents, python tries and decodes it using the default codec. Am I right?</span>
<span class="comment-copy">@ChintanShah: In Python <i>everything is an object</i>. <code>open()</code> returns a file object. See the <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer"><code>io</code> module documentation</a> to see what type of object is returned and what methods are available.</span>
<span class="comment-copy">The OP seems to think that the act of <i>opening the file</i> also involves decoding. They are not confused as to why the encoding is wrong, only as to <b>where</b> decoding takes place.</span>
<span class="comment-copy">Thanks, this I understood. Now I have a second problem too, my locale.getpreferredencoding() returns 'UTF-8'. Even then I get the error saying 'ascii' failing to decode. Why is that?</span>
<span class="comment-copy">@ChintanShah That's really strange. Do you get the same error if you specify to the encoding to <code>open</code>?</span>
<span class="comment-copy">I'll try that quickly and post the result..</span>
<span class="comment-copy">Somehow I just can't reproduce the error. Either ways the question still stands that it should take utf-8 as the codec..</span>
<span class="comment-copy">I disagree there is any poorly worded explanation here. What is missing, is the understanding <i>how</i> the file object produces the contents of the file.</span>
