<div class="post-text" itemprop="text">
<p>I was just playing around with <code>sys.stdout.write()</code> in a Python console when I noticed that this gives some strange output.</p>
<p>For every <code>write()</code> call the number of characters written, passed to the function respectively gets append to the output in console.</p>
<p><code>&gt;&gt;&gt; sys.stdout.write('foo bar')</code>
for example results in
<code>foo bar7</code> being printed out.</p>
<p>Even passing an empty string results in an output of <code>0</code>.</p>
<p>This really only happens in a Python console, but not when executing a file with the same statements. More interestingly it only happens for Python 3, but not for Python 2. </p>
<p>Although this isn't really an issue for me as it only occurs in a console, I really wonder why it behaves like this.</p>
<p>My Python version is 3.5.1 under Ubuntu 15.10.</p>
</div>
<div class="post-text" itemprop="text">
<p>Apart from writing out the given string, <code>write</code> will also return the number of characters (actually, bytes, try <code>sys.stdout.write('へllö')</code>) As the python console prints the return value of each expression to stdout, the return value is appended to the actual printed value.</p>
<p>Because <code>write</code> doesn't append any newlines, it looks like the same string.</p>
<p>You can verify this with a script containing this:</p>
<pre><code>#!/usr/bin/python
import sys

ret = sys.stdout.write("Greetings, human!\n")
print("return value: &lt;{}&gt;".format(ret))
</code></pre>
<p>This script should when executed output:</p>
<pre><code>Greetings, human!
return value: &lt;18&gt;
</code></pre>
<p>This behaviour is mentioned in the docs <a href="https://docs.python.org/3.3/tutorial/inputoutput.html" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">Interesting. So <code>a = sys.stdout.write('foo')</code> should reveal this behavior what it actually also does. <code>a</code> is set to <code>3</code> in this case, and number isn't append to the output anymore. But I still wonder why this only happens in Python 3. Afaik I also can't find any mention in the doc for this.</span>
<span class="comment-copy">I've appended a script that shows the result, to make things more clear. I didn't really read the docs for this, I just assumed it because it happens in quite a lot of languages and tested it. I'll search for a PEP mentioning this and get back here if I do.</span>
<span class="comment-copy">Just to add, it counts Unicode characters <code>sys.stdout.write('へllö')</code> returns "へllö4"</span>
<span class="comment-copy">Good call @C14L.</span>
<span class="comment-copy">@critop It's because IO was given an overhaul from 2 to 3. The type of <code>stdout</code> was a <code>file</code>, which declares <a href="https://docs.python.org/2/library/stdtypes.html#file.write" rel="nofollow noreferrer">write</a> as having no return value. The new type is <code>TextIOWrapper</code>, of which one of it's bases (<code>TextIOBase</code>) declares <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.write" rel="nofollow noreferrer">write</a> to return the number of characters written.</span>
