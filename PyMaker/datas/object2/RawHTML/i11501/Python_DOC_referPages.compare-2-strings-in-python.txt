<div class="post-text" itemprop="text">
<p>So, I need to figure out a program that when you input 2 different strings of the same length it will return NOT print the number of differences between the two strings. The order of the characters matters as well. </p>
<p>For example if you input <code>("abcdef", "aabccf")</code>
it should return 4. </p>
<p><code>("abcdef", "accddf")</code> should return 2.</p>
<p>All I have so far is: </p>
<p>def differencecount ( A, B):
    counter = 0
    str1 = list (A)
    str2 = list (B)
    for letter in str1:
        if letter == str2:
            counter = counter + 1
    return counter</p>
<p>All this does is return 0 though so I feel like I'm missing something.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use</p>
<pre><code>def difference(word_one, word_two):
    return sum(l1 != l2 for l1, l2 in zip(word_one, word_two))
</code></pre>
<p>Which works like</p>
<pre><code>&gt;&gt;&gt; difference('abcdef', 'abcdef')
0
&gt;&gt;&gt; difference('abcdef', 'abcabc')
3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">zip</a> the strings together and then count how many different pairs there are:</p>
<pre><code>def chardifferencecounter(x, y):
    return len([1 for c1, c2 in zip(x, y) if c1 != c2])

&gt;&gt;&gt; chardifferencecounter('abcdef', 'aabccf')
4
&gt;&gt;&gt; chardifferencecounter('abcdef', 'accddf')
2
</code></pre>
<p><strong>Explanation:</strong></p>
<p>Zipping the strings together produces this:</p>
<pre><code>&gt;&gt;&gt; s1 = 'abcdef'
&gt;&gt;&gt; s2 = 'aabccf'
&gt;&gt;&gt; zip(s1, s2)
[('a', 'a'), ('b', 'a'), ('c', 'b'), ('d', 'c'), ('e', 'c'), ('f', 'f')]
</code></pre>
<p>so it takes a character from the same position in each string and pairs them together. So you just need to count how many pairs are different. That can be done using a list comprehension to create a list with those pairs that are the same filtered out, and then get the length of that list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just for a different look here is a solution that doesn't use <code>zip</code> or <code>enumerate</code>:</p>
<pre><code>def chardifferencecounter(x,y):
    if len(x) != len(y):
        raise Exception('Please enter strings of equal length')
    return sum(x[i] != y[i] for i in range(len(x)))
</code></pre>
<p>Note that this solution also raises an exception when <code>x</code> and <code>y</code> are of different lengths, which is what you wanted in your comment.</p>
</div>
<span class="comment-copy">what happens if x and y are different lengths? what is the expected output?</span>
<span class="comment-copy">I was thinking of adding len (x) = len (y) to make sure they're equal in length. If they aren't equal in length I'll probably add a print 'Please enter strings of equal length' at the end.</span>
<span class="comment-copy">Not sure it's a good idea to be doing this person's homework for them :/</span>
<span class="comment-copy">I've never learned what zip is.. I don't know how it works.</span>
<span class="comment-copy">I've never learned what zip is.. how does it work?</span>
<span class="comment-copy">@Pichu2016: didn't I already explain that in the answer? Check the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">documentation</a>  for more details.</span>
