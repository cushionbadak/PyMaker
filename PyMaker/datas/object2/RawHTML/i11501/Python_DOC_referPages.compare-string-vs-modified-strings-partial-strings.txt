<div class="post-text" itemprop="text">
<p>I have a list of links, and I want to see if they're listed in my disavow file.</p>
<p>My disavow file contains both URLs (e.g. <code>http://getpaydayloan.org/blog/blog-how-to-apply-for-online-payday-loans-san</code>) as well as whole domains, listed as <code>domain:getpaydayloan.org</code>.</p>
<p>The new URLs file holds URLs only, e.g. <code>http://getpaydayloan.org/blog/blog-how-to-apply-for-online-payday-loans-san</code></p>
<p>I want to see if the new URLs are already in the disavow file. I am currently generating a diff using <code>diff = set(url_set)-set(disavow_urls)</code>, but I also need to check to see if they are in the disavow file using the <code>domain:url.com</code> format.</p>
<p>How would I do something like that?</p>
<p>In case it helps, here is the whole script: <a href="https://github.com/growth-austen/disavow_automator" rel="nofollow">https://github.com/growth-austen/disavow_automator</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a function to check if the url contains any of the disavowed domains. </p>
<pre><code>def inDisavow(url, disavowDomainList):
    for domain in disavowDomainList:
        if domain in url:
            return true
    return false
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Some alternative definitions to David's function for fun:</p>
<p><code>return any(domain in url for domain in disavowDomainList)
 return any(map(url.__contains__, disavowDomainList))</code></p>
<p>(replace <code>map</code> with <code>itertools.imap</code> in Python 2 for memory efficiency)</p>
</div>
<span class="comment-copy"><code>http://getpaydayloan.org/blog/blog-how-to-apply-for-online-payday-loans-san</code> is not a domain...</span>
<span class="comment-copy">You may want to look into <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">docs.python.org/3/library/urllib.parse.html</a></span>
<span class="comment-copy">Whoops, sorry, meant URLs. Thanks.</span>
<span class="comment-copy">There are efficient ways to do this, but there's only a need if there's a lot of data. How many lines are you expecting in the two file? A simple nested loop over both files may be enough.</span>
<span class="comment-copy">@AlexHall Nexted loops are fine (I think). Maybe a few thousand in the disavow, ~50 in the URLs</span>
<span class="comment-copy">These work in the case we're comparing <code>http://someurl.com/123</code> in the URLs to <code>http://someurl.com/123</code> in the disavow, but not if we're comparing <code>http://someurl.com/123</code> to <code>domain:someurl.com</code>.  I think the part that was tripping me up was being able to parse the domain; if I can strip the <code>http://</code> and the <code>/123</code> off, keep the <code>someurl.com</code>, and compare that against <code>domain:someurl.com</code>. So Wayne should have given me enough to start.  Thanks!</span>
<span class="comment-copy">If your disavow strings are always domain:url.com, you could also strip off the 'domain:' part by modifying the if statement to "if domain[7:] in url:"</span>
