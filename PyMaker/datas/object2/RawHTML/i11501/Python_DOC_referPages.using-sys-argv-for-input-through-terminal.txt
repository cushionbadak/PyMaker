<div class="post-text" itemprop="text">
<p>I wrote a Python script that I am now trying to get to run via the command line. It consists of a function that takes one obligatory and a few optional arguments. </p>
<p><code>def main(input_folder, iterations = 1000, probability_cutoff = - 40 , threshold = 10): ...</code></p>
<p>Now I am trying to make it executable through the command line like so:</p>
<p><code>if __name__ == "__main__":
    main(sys.argv[1])</code></p>
<p>This works well as long as I put in only one argument; but I don't know how to accept the additional, optional input that <code>sys.argv</code> delivers as a list. </p>
<ul>
<li>Is there a simple way of doing this with this approach?</li>
<li>Or is it necessary to use an additional module such as
<a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a>?</li>
<li>I tried feeding keyword arguments into the function as well but
couldn't make that work either - is that a feasible approach?</li>
</ul>
<p>I am working with Python 2.7 on a Mac. Any help is much appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>I always use argparse, because it gives you nice error handling, converts strings to ints or open files, and clearly documents the options. However, this should do what you want:</p>
<pre><code>if __name__ == "__main__":
    main(*sys.argv[1:])
</code></pre>
</div>
<span class="comment-copy">I'm going to say this is a duplicate of <a href="http://stackoverflow.com/questions/7527849/how-to-extract-parameters-from-a-list-and-pass-them-to-a-function-call">How to extract parameters from a list and pass them to a function call</a> because that is the mechanism you are asking for (as well as <code>[1:]</code> to skip the first item of argv)</span>
<span class="comment-copy">that is probably true but I did not find that one as I was not using the right search terms. Should I delete this one?</span>
<span class="comment-copy">I would like to note however that all the elements of <code>sys.argv</code> are strings so when you do  <code>main(*sys.argv[1:])</code> like in the accepted answer you will need to parse the numbers yourself.</span>
<span class="comment-copy">yeah, just reminding you since your default values are already integers so any conversions would be redundant (not a problem but you might forget why conversions are needed)</span>
<span class="comment-copy">Type conversion is another reason I prefer argparse, @TadhgMcDonald-Jensen. I've added it to the answer.</span>
<span class="comment-copy">you rock sir, thanks!</span>
