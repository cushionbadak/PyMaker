<div class="post-text" itemprop="text">
<p>Take <code>kwargs</code> i.e: <code>send_members</code>, <code>send_companies</code>, <code>send_reviewers</code>, each of which contains the string <code>'true'</code> or <code>'false'</code>.</p>
<p>If <em>all</em> the values in every <code>kwargs</code> are <code>'false'</code>, I want to display an error message e.g:</p>
<pre><code>if (kwargs['send_members'] == 'false' and kwargs['send_companies'] == 'false' and
    kwargs['send_reviewers'] == 'false'):
        raise SomeError('at least one keyword needs to be true')
</code></pre>
<p>Is there a Pythonic way of checking if all the values in <code>kwargs</code> are the same, <code>'false'</code>? While the above example works, it gets very messy when I have 10 <code>kwargs</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>all()</code></p>
<pre><code>if all(v == 'false' for v in kwargs.values()):
    print("All kwargs are false")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>kwargs = {'send_members':'false', 'send_companies':'false', 'send_reviewers':'false'}

def v1 ():
    if set(kwargs.values()) == {'false'}:
    return 'all false!'

def v2 ():
    if not [x for x in kwargs.values() if x !='false']:
    return 'all false!'

def v3 ():
    if all(v == 'false' for v in kwargs.values()):
    return 'all false!'


In [10]: %timeit -n100 v1()
100 loops, best of 3: 1.05 µs per loop

In [11]: %timeit -n100 v2()
100 loops, best of 3: 961 ns per loop

In [12]: %timeit -n100 v3()
100 loops, best of 3: 10.3 µs per loop
</code></pre>
<p>Interestingly using all() seems about 10x slower. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could [also] use the built-in <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code></a> function which might be a little faster than <code>all()</code> because it will stop checking as soon as a failure is detected. </p>
<pre><code>class SomeError(Exception): pass

testcases = [
    {'send_members': 'true', 'send_companies': 'false', 'send_reviewers': 'false'},
    {'send_members': 'false', 'send_companies': 'true', 'send_reviewers': 'false'},
    {'send_members': 'false', 'send_companies': 'false', 'send_reviewers': 'false'},
]

for kwargs in testcases:
    print(kwargs, end=' ')
    try:
        if any(value != 'false' for value in kwargs.values()):
            raise SomeError('at least one keyword needs to be true')
    except SomeError:
        print("At least one kwarg is not 'false'")
    else:
        print("OK, all kwargs are 'false'")
</code></pre>
</div>
<span class="comment-copy"><code>if set(kwargs.values()) == {'false'}: ...</code></span>
<span class="comment-copy">This should work      <code>if not [x for x in kwargs.values() if x != "false"]:</code></span>
<span class="comment-copy">@rtemperv Unfortunately, the values are strings, not instances of <code>bool</code>. (You could first map <code>bool</code> over <code>kwargs.values()</code>, though.)</span>
<span class="comment-copy">re <code>if not any(kwargs.values()):</code> @rtemperv sorry it's a string true or false so that will not work as kwargs always contains values</span>
<span class="comment-copy">My bad, updated answer</span>
<span class="comment-copy">Based on the OPs changes (actually having the caller pass in <code>bool</code>s) then <code>any()</code> is a good choice: <code>if not any(kwargs.values()):</code></span>
