<div class="post-text" itemprop="text">
<p>I was wanting to read in a file which has 4 values on each line:
title, author, genre, price.</p>
<p>I want to split each value which has a ',' as the delimiter. Then I want to save it to my List each line being an entry in the list. For example</p>
<pre><code>title, author, genre, price

title2, author2, genre2, price2
</code></pre>
<p>This will save as</p>
<pre><code>List[0][1] = title 
List[0][2] = author 
List[0][3] = genre 
List[0][4] = price

List[1][1] = title2
List[1][2] = author2 
List[1][3] = genre2 
List[1][4] = price2
</code></pre>
<p>This is what I have so far:</p>
<pre><code>def readFile(fileName):
List = []
f = open(fileName, 'r')
line = f.readline()
x = 0
while len(line) != 0:
    for i in range(4):
        List[x][i] = line.split(',')
    x += 1
    line = f.readline()
f.close()
return List
</code></pre>
<p>But I'm just getting <code>List index out of range</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has you covered here, just use the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow"><code>csv</code> module</a>:</p>
<pre><code>import csv

def readFile(filename):
    with open(filename, 'rb') as f:
        reader = csv.reader(f)
        return list(reader)
</code></pre>
<p>Your code makes several classical errors:</p>
<ul>
<li><code>str.split()</code> returns a list; you are trying to assign that list 4 times to indices of another list. Just use the list returned by <code>str.split()</code> directly.</li>
<li>Take into account that lines from a file come with the line-separator (<code>\n</code>) included; you probably want to strip that off first.</li>
<li>You started with an <em>empty</em> list. You can't assign to indices that are not there, use <code>list.append()</code> instead to add elements.</li>
<li>You don't need to test for <code>len(line) != 0</code>; just <code>if line:</code> is enough because empty strings are considered 'false' in a truth test. See <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow"><em>Truth Value Testing</em></a>.</li>
<li>You don't need to use <code>file.readline()</code> each time; just use a <code>for line in f:</code> loop and you'll get each line one by one, because file objects are <em>iterable</em>.</li>
<li>If you use your <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow">file as a context manager</a> (by using the <code>with</code> statement), Python will close the file for you. </li>
</ul>
<p>So, without the <code>csv</code> module, you could write your code like this:</p>
<pre><code>def readFile(fileName):
    rows = []
    with open(fileName, 'r') as f:
        for line in f:
            columns = line.strip().split(',')
            rows.append(columns)
    return rows
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you can use the Python <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">List Comprehensions</a>, to achieve the your function with less code .</p>
<pre><code>def readFile(fileName):
    with open(fileName, 'r') as f:
        List = [line.strip().split(',') for line in f if line.strip()]
    return List
</code></pre>
<p>The program above is equivalent to the following program:</p>
<pre><code>def readFile2(fileName):
    with open(fileName, 'r') as f:
        List = []
        for line in f:
            if line.strip():
                List.append(line.strip().split(','))
    return List
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>   with open(filname,'r') as f:
        lst_data = f.readlines()

    List = []
    for data in lst_data:
        List.append(data.strip().split(','))
</code></pre>
<p>List will have the data like this</p>
<pre><code>List[0][1] = title 
List[0][2] = author 
List[0][3] = genre 
List[0][4] = price

List[1][1] = title2
List[1][2] = author2 
List[1][3] = genre2 
List[1][4] = price2
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/9857731/python-read-in-string-from-file-and-split-it-into-values">Python read in string from file and split it into values</a></span>
<span class="comment-copy">Sorry, I'm not allowed to use modules - I should have specified that. It's for classwork.</span>
<span class="comment-copy">@Ryan: I was already writing out everything that needed correcting in your code.</span>
<span class="comment-copy">Thank you - That's so much cleaner and more efficient than what I've been doing. The explanations really helped too!</span>
