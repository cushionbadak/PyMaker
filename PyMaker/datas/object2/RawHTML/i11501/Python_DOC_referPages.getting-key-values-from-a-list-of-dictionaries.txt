<div class="post-text" itemprop="text">
<p>I have a list that contains dictionaries with Letters and Frequencies. Basically, I have 53 dictionaries each for every alphabet (lowercase and uppercase) and space. </p>
<pre><code>adict = {'Letter':'a', 'Frequency':0}
bdict = {'Letter':'b', 'Frequency':0}
cdict = {'Letter':'c', 'Frequency':0}
</code></pre>
<p>If you input a word, it will scan the word and update the frequency for its corresponding letter. </p>
<pre><code>for ex in range(0, len(temp)):
    if temp[count] == 'a': adict['Frequency']+=1
    elif temp[count] == 'b': bdict['Frequency']+=1
    elif temp[count] == 'c': cdict['Frequency']+=1
</code></pre>
<p>For example, I enter the word "Hello", The letters H,e,l,l,o is detected and its frequencies updated. Non zero frequencies will be transferred to a new list.</p>
<pre><code>if adict['Frequency'] != 0 : newArr.append(adict) 
if bdict['Frequency'] != 0 : newArr.append(bdict)
if cdict['Frequency'] != 0 : newArr.append(cdict) 
</code></pre>
<p>After this, I had the newArr sorted by Frequency and transferred to a new list called finalArr. Below is a sample list contents for the word "Hello"</p>
<pre><code>{'Letter': 'H', 'Frequency': 1}
{'Letter': 'e', 'Frequency': 1}
{'Letter': 'o', 'Frequency': 1}
{'Letter': 'l', 'Frequency': 2}
</code></pre>
<p>Now what I want is to transfer only the key values to 2 seperate lists; letterArr and numArr. How do I do this? my desired output is:</p>
<pre><code>letterArr = [H,e,o,l]
numArr = [1,1,1,2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why don't you just use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>? For example:</p>
<pre><code>from collections import Counter
from operator import itemgetter

word = input('Enter a word: ')
c = Counter(word)

letter_arr, num_arr = zip(*sorted(c.items(), key=itemgetter(1,0)))
print(letter_arr)
print(num_arr)
</code></pre>
<p>Note the use of <code>sorted()</code> to sort by increasing frequency. <code>itemgetter()</code> is used to reverse the sort order so that the sort is performed first on the frequency, and then on the letter. The sorted frequencies are then separated using <code>zip()</code> on the unpacked list.</p>
<p><strong>Demo</strong></p>
<pre>
Enter a word: Hello
('H', 'e', 'o', 'l')
(1, 1, 1, 2)
</pre>
<p>The results are tuples, but you can convert to lists if you want with <code>list(letter_arr)</code> and <code>list(num_arr)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have a hard time understanding your data structure choice for this problem.
Why don't you just go with a dictionary like this:</p>
<pre><code>frequencies = { 'H': 1, 'e': 1, 'l': 2, 'o': 1 }
</code></pre>
<p>Which is even easier to implement with a Counter:</p>
<pre><code>from collections import Counter
frequencies = Counter("Hello")
print(frequencies)
&gt;&gt;&gt; Counter({ 'H': 1, 'e': 1, 'l': 2, 'o': 1 })
</code></pre>
<p>Then to add another word, you'd simply have to use the <code>update</code>method:</p>
<pre><code>frequencies.update("How")
print(frequencies)
&gt;&gt;&gt; Counter({'l': 2, 'H': 2, 'o': 2, 'w': 1, 'e': 1})
</code></pre>
<p>Finally, to get your 2 arrays, you can do:</p>
<pre><code>letterArr, numArr = zip(*frequencies.items())
</code></pre>
<p>This will give you tuples though, if you really need lists, just do: <code>list(letterArr)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You wanted a simple answer without further todo like zip, collections, itemgetter etc. This does the minimum to get it done, 3 lines in a loop.  </p>
<pre><code>finalArr= [{'Letter': 'H', 'Frequency': 1},
           {'Letter': 'e', 'Frequency': 1},
           {'Letter': 'o', 'Frequency': 1},
           {'Letter': 'l', 'Frequency': 2}]

letterArr = []
numArr    = []
for i in range(len(finalArr)):
    letterArr.append(finalArr[i]['Letter'])
    numArr.append(finalArr[i]['Frequency'])
print letterArr
print numArr
</code></pre>
<p>Output is  </p>
<pre><code>['H', 'e', 'o', 'l']
[1, 1, 1, 2]
</code></pre>
</div>
<span class="comment-copy">You have three separate dictionaries. They're not associated in any way. That means there's no easy way to iterate through them. Why do each of your dictionaries only contain two elements? Why not use one dictionary, using the letter as the key and the frequency as the value?</span>
<span class="comment-copy">Why do you have 53 dictionaries in the first place? You could do it like <code>freq_dict = {'a': 0, 'b': 0, ...}</code>. Then it would be easy to transfer frequencies into a list.</span>
<span class="comment-copy">Just makes it easier for me to understand. Basically my final list is just a list of dictionaries.</span>
<span class="comment-copy">It's easier to work with a more complicated and unfit approach first? Well, if you say so ...</span>
<span class="comment-copy">Haven't thought of this before. You sir have my big thanks! Just made my code shorter. Still need to learn alot of things in python.</span>
