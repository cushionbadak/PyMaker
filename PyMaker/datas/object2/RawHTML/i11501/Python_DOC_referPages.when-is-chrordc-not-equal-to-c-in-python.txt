<div class="post-text" itemprop="text">
<p>I am reading the source code of <code>testinfra</code> in the <a href="https://github.com/philpep/testinfra/blob/55e4ed92db8cc9fe118fe3da465010169825b0d6/testinfra/backend/ansible.py#L40" rel="nofollow">Ansible</a> module. I found the following lines of code:</p>
<pre><code>    # Ansible return an unicode object but this is bytes ...
    # A simple test case is:
    # &gt;&gt;&gt; assert File("/bin/true").content == open("/bin/true").read()
    stdout_bytes = b"".join((chr(ord(c)) for c in out['stdout']))
    stderr_bytes = b"".join((chr(ord(c)) for c in out['stderr']))
</code></pre>
<p>It iterates over <code>stdout</code>, gets the integer ordinal of each character and converts it back to a one-character string.  But what's the point?</p>
</div>
<div class="post-text" itemprop="text">
<p>When <code>c</code> is unicode-specific character (cannot be encoded in ASCII):</p>
<pre><code>&gt;&gt;&gt; ord(u'\u2020')
8224
&gt;&gt;&gt; chr(ord(u'\u2020'))
ValueError: chr() arg not in range(256)
</code></pre>
<p>This is only true in <a href="https://docs.python.org/2/library/functions.html#chr" rel="nofollow">Python2</a>, as in <a href="https://docs.python.org/3/library/functions.html#chr" rel="nofollow">Python3</a>, unichr is removed and chr acts as unichr. This seems to be unusual behavior for such a library, since it would routinely throw an unexpected error that's executable-specific for any non-English locale. </p>
</div>
<div class="post-text" itemprop="text">
<p>When c is an 8-bit string. From the <a href="https://docs.python.org/2/library/functions.html#ord" rel="nofollow">docs for ord()</a>:</p>
<blockquote>
<p>[returns] the value of the byte when the argument is an 8-bit string</p>
</blockquote>
<p><code>chr()</code> then converts that to the corresponding character. It's basically just converting bytes to a character, as the comment says.</p>
</div>
<span class="comment-copy">Python version probably matters here. In Python2, ord takes unicode characters as input, but chr only goes from int to ASCII, so there may be taking advantage of some weirdness there?</span>
<span class="comment-copy">It would help to point out where in the code you saw that line. There's not much we can do without context. I'm assuming you're referring to the code in the <a href="https://github.com/philpep/testinfra/blob/55e4ed92db8cc9fe118fe3da465010169825b0d6/testinfra/backend/ansible.py#L40" rel="nofollow noreferrer">Ansible</a> module... the comment there could have been useful.</span>
<span class="comment-copy">@JeffMercado Yes, it's in the ansible backend source code. I've read the comment, but why does the author use this? Is it equal to <code>out['stdout'].encode('ascii')</code>?</span>
<span class="comment-copy">I think it should be the other way around: converting unicode to byte.</span>
