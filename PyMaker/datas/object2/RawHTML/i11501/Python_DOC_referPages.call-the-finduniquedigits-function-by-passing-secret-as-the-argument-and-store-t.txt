<div class="post-text" itemprop="text">
<p>could someone please help me understand what this line is trying to get me to do? Thanks. </p>
<p>findCows function: Write a function called “findCows” that takes two string values as parameters (Say secret, guess) and returns the number of digits in guess match the secret only in digit but not in position. Assume that there are exactly 4 digits in each string. For example, findCows(“1807”, “7810”) will return 3. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use filter function:</p>
<pre><code>len(list(filter( lambda x: x[0]!= x[1], zip(secret ,guess))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def findCows(secret, guess):
  sum([x!=y for (x, y) in zip(secret, guess)])
</code></pre>
<p><code>zip(secret, guess)</code> converts two lists of the same size to a list of element-wise pairs. The <code>[x!=y for (x, y) in zip(secret, guess)]</code> statement is a <code>for</code> comprehension which maps each pair to <code>True</code>/<code>False</code> based on their equality. Finally, <code>sum</code> counts the number of <code>True</code> values.</p>
</div>
<span class="comment-copy">findCows function: Write a function called “findCows” that takes two string values as parameters (Say secret, guess) and returns the number of digits in guess match the secret only in digit but not in position. Assume that there are exactly 4 digits in each string. For example, findCows(“1807”, “7810”) will return 3.</span>
<span class="comment-copy">Comments are not meant to be long-standing.  Make your question complete by <a href="https://stackoverflow.com/posts/36973144/edit">edit</a>ing it to include that.</span>
<span class="comment-copy">You can actually omit the <code>list</code> typecast as <code>filter</code> already returns that type.</span>
<span class="comment-copy">filter returns a <code>filter</code> object that doesn't support the <code>len</code> function</span>
<span class="comment-copy">You're right, I was using Python 2.x. It looks like it's a <code>filter</code> object for Python 3: <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#filter</a>.</span>
<span class="comment-copy">your function is wrong, it will return the number of different elements and this is not what the op asked for.</span>
<span class="comment-copy">@nino_705 Misread the original question, the answer is fixed. In any case, the difference is trivial as far as implementation.</span>
<span class="comment-copy">Your code is giving the intersection of tow sets, if you read the  poster's comment on the question you will notice that he asks for common elements that are in wrong positions</span>
<span class="comment-copy">Yup, I know, the answer has already been updated....</span>
<span class="comment-copy">now it's a clever answer ;)</span>
