<div class="post-text" itemprop="text">
<p>I've tried what feels like a million ffmpeg wrappers and none of them seem to work, so I thought I'd ask here. How would one go about losslessly converting .ts files to .mp4 with Python? Every ffmpeg wrapper I've tried has not worked despite both the ffmpeg bin and .exe being in the PATH and every installation step followed. Is there a simple wrapper that I can use? I hate to ask for a step-by-step, but I must be doing something wrong, right?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your conversion requirements are specific, why don't you just call <code>ffmpeg</code> directly from Python with <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow"><code>subprocess.run()</code></a> (Python &gt;= 3.5) or <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow"><code>subprocess.call()</code></a> (Python &lt; 3.5)?</p>
<pre><code>import subprocess

infile = 'video.ts'
outfile = 'video.mp4'

subprocess.run(['ffmpeg', '-i', infile, outfile])
</code></pre>
<p>You can capture the output if wanted. Refer to the documentation for that.</p>
</div>
<span class="comment-copy">Could you provide some examples of what hasn't worked for you so far and how it didn't work?</span>
<span class="comment-copy">@Ownaginatious ffmpy, python-video-converter, and one or two others. mhawke has already posted a solution, though, so hopefully I won't need to use those.</span>
<span class="comment-copy">Worked like a charm, thank you very much!</span>
<span class="comment-copy">@displayname: glad it helped.</span>
<span class="comment-copy">@downvoter: care to explain the downvote for an answer that a) directly answers the question with a working solution and b) has been accepted by the OP as a solution to their problem?</span>
