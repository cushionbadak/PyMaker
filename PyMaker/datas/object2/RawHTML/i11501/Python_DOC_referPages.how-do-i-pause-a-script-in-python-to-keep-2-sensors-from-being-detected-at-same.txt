<div class="post-text" itemprop="text">
<p>I have this function in a python script that detects 2 vibrations sensors, the problem is the sensors are very sensitive so usually when one is hit they are both detected which gives me a false reading. How would I stop them both from being detected at the same time? I want to detect whichever was first. This is what I have tried -</p>
<pre><code>#!/usr/bin/env python
import RPi.GPIO as GPIO
from time import sleep

def setup():
    GPIO.setmode(GPIO.BOARD)         
    GPIO.setup(KnockPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    GPIO.setup(ShockPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def shock():
    print('shock')

def knock():
    print('knock')

def register_callbacks():
    if GPIO.add_event_detect(ShockPin, GPIO.FALLING, callback=shock, bouncetime=5000):
        sleep(5)
    elif GPIO.add_event_detect(KnockPin, GPIO.FALLING, callback=knock, bouncetime=5000):
        sleep(5)

if __name__ == '__main__':
    try:
        setup()
        register_callbacks()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just a suggestion, I don't have the setup to test it. Save the time of the last event (using <a href="https://docs.python.org/3.5/library/datetime.html" rel="nofollow">datetime</a>), and then check if the last event is more than 5 seconds ago.</p>
<pre><code>import datetime
sensor_delay = 5 #delay in seconds
last_event = datetime.datetime.now()

def shock():
    global last_event
    if datetime.datetime.now() &gt; last_event + datetime.timedelta(seconds=sensor_delay):
        print ('shock')
        last_event = datetime.datetime.now()

def knock():
    global last_event
    if datetime.datetime.now() &gt; last_event + datetime.timedelta(seconds=sensor_delay):
        print('knock')
        last_event = datetime.datetime.now()
</code></pre>
</div>
<span class="comment-copy">Your snippet looks fine. Does your code work? If not, what is the error message or undesired behavior?</span>
<span class="comment-copy">Ya code works, except both sensors will detect at the same time, i just want to detect one or the other.</span>
<span class="comment-copy">what about adding a variable which saves the time of the last event and checking in knock/shock if the last event is more than 5 seconds ago?</span>
<span class="comment-copy">@Ashafix hmm good idea I will give that a shot..seems logical, I am new to python so how would I check  the time of each event detection?</span>
<span class="comment-copy">Thanks @Ashafix, I will give this a go!</span>
<span class="comment-copy">thanks again for the tip, I impleneted this but am still having the same issue.. When a sensor is knocked or shocked to hard it registers both sensors.. It delays the sensors for 5 seconds from being detected at the start but after the 5 seconds it goes back to my original problem of detecting both if one is knocked to hard.. Do I maybe need to add this to the register callback function?</span>
<span class="comment-copy">Well that was stupid, last_event should be global, <a href="https://docs.python.org/3/reference/simple_stmts.html#global" rel="nofollow noreferrer">docs.python.org/3/reference/simple_stmts.html#global</a></span>
<span class="comment-copy">thanks for the update but still having the same problem, both are registering.. Doesnt make any sense</span>
<span class="comment-copy">Sorry @Ashafix im a dumba$$, I forgot to add the last_event = datetime.datetime.now() at the end .. now it works thank you so much!</span>
