<div class="post-text" itemprop="text">
<p>i have been using Python recently and i want to extract information from a given xml file. The problem is that the information is really badly stored, in a format like this</p>
<pre><code>&lt;Content&gt;
   &lt;tags&gt;
   ....
   &lt;/tags&gt;
&lt;![CDATA["string1"; "string2"; ....
]]&gt;
&lt;/Content&gt;
</code></pre>
<p>I can not post the entire data here, since it is about 20.000 lines.
I just want to recieve the list containing ["string1", "string2", ...] and this is the code i have been using so far:</p>
<pre><code>import xml.etree.ElementTree as ET

tree = ET.parse(xmlfile)
for node in tree.iter('Content'):
    print (node.text)
</code></pre>
<p>However my output is none. How can i recieve the comment data? (again, I am using Python)</p>
</div>
<div class="post-text" itemprop="text">
<p>You'll want to create a SAX based parser instead of a DOM based parser. Especially with a document as large as yours.</p>
<p>A sax based parser requires you to write your own control logic in how data is stored. It's more complicated than simply loading it into a DOM, but much faster as it loads line by line and not the entire document at once. Which gives it the advantage that it can deal with squirrely cases like yours with comments.</p>
<p>When you build your handler, you'll probably want to use the <a href="https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.property_lexical_handler" rel="nofollow">LexicalHandler</a> in your parser to pull out those comments.</p>
<p>I'd give you a working example on how to build one, but it's been a long time since I've done it myself. There's plenty of guides on how to build a sax based parser online, and will defer that discussion to another thread.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that your comment does not seem to be standard. The standard comment is <code>&lt;!--Comment here--&gt;</code> like this.</p>
<p>And these kind of comments can be parsed with <code>Beautifulsoup</code>  for example:</p>
<pre><code>from bs4 import BeautifulSoup, Comment

xml = """&lt;Content&gt;
   &lt;tags&gt;
   ...
   &lt;/tags&gt;
&lt;!--[CDATA["string1"; "string2"; ....]]--&gt;
&lt;/Content&gt;"""
soup = BeautifulSoup(xml)
comments = soup.findAll(text=lambda text:isinstance(text, Comment))
print(comments)
</code></pre>
<p>This returns <code>['[CDATA["string1"; "string2"; ....]]']</code> From where it could be easy to parse further into the required strings.</p>
<p>If you have non standard comments, i would recommend a regular expression like:</p>
<pre><code>import re
xml = """&lt;Content&gt;
   &lt;tags&gt;
   asd
   &lt;/tags&gt;
&lt;![CDATA["string1"; "string2"; ....]]&gt;
&lt;/Content&gt;"""
for i in re.findall("&lt;!.+&gt;",xml):
    for j in re.findall('\".+\"', i):
        print(j)
</code></pre>
<p>This returns: <code>"string1"; "string2"</code></p>
</div>
<span class="comment-copy">if you just want a single line, then consider opening the file and trying to find  the line with string/regex functions.</span>
<span class="comment-copy">also, see <a href="http://stackoverflow.com/questions/541100/finding-top-level-xml-comments-using-pythons-elementtree" title="finding top level xml comments using pythons elementtree">stackoverflow.com/questions/541100/â€¦</a></span>
<span class="comment-copy">It is not a single line, like i said i have about 20000 lines as list elements.</span>
<span class="comment-copy">Still, consider using the file opening and reading-through strategy since for a huge XML doc, DOM creation/parsing/walkthrough can be time consuming.</span>
