<div class="post-text" itemprop="text">
<p>I have a list of dictionaries in Python:</p>
<pre><code>[{u'value': u'firstname', u'key': u'Coach'}, 
 {u'value': u'lastname', u'key': u'Coach'}, 
 {u'value': u'age', u'key': u'Coach'}, 
 {u'value': u'firstname', u'key': u'Player'}, 
 {u'value': u'league', u'key': u'Player'}]
</code></pre>
<p>How can I remove duplicate <strong>key</strong> from a list of dictionaries and merge their values into a list as shown below:</p>
<pre><code>l = [('Coach', ['firstname', 'lastname', 'age']), 
     ('Player', ['firstname', 'league'])]
</code></pre>
<p>Iterate over list items</p>
<pre><code>for k, v in l:
    print k, v
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a> with <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow"><code>list</code></a> as value type in order to collect values:</p>
<pre><code>In [5]: from collections import defaultdict

In [6]: data = [{u'value': u'firstname', u'key': u'Coach'}, 
 {u'value': u'lastname', u'key': u'Coach'}, 
 {u'value': u'age', u'key': u'Coach'}, 
 {u'value': u'firstname', u'key': u'Player'}, 
 {u'value': u'league', u'key': u'Player'}]

In [7]: l = defaultdict(list)

In [8]: for row in data:
   ...:     l[row['key']].append(row['value'])
   ...:     

In [9]: l
Out[9]: 
defaultdict(list,
            {'Coach': ['firstname', 'lastname', 'age'],
             'Player': ['firstname', 'league']})
</code></pre>
<p>And then you could easily convert the dictionary into a list of tuples using <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow"><code>items</code></a> method:</p>
<pre><code>In [10]: list(l.items())
Out[10]: 
[('Coach', ['firstname', 'lastname', 'age']),
 ('Player', ['firstname', 'league'])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>[(k, [x['value'] for x in v]) for k, v in itertools.groupby(sorted(data, key=lambda x: x['key']), lambda d: d['key'])]
</code></pre>
<p><code>groupby</code> is in the standard module <code>itertools</code>. </p>
<p><strong>EDIT:</strong>
Thank @soon for pointing out that <code>itertools.groupby</code> requires input sequence being consecutive, thus need to sort beforehand.</p>
</div>
<span class="comment-copy"><code>groupby</code> groups consecutive elements only</span>
<span class="comment-copy">@soon yep, a big bug, just fixed, thanks.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer">operator.itemgetter</a> could also be useful.</span>
<span class="comment-copy">Really learned a lot new stuff, haha. thanks again.</span>
