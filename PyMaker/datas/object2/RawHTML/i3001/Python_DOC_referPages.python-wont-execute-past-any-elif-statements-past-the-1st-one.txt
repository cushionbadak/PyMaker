<div class="post-text" itemprop="text">
<p>I'm in the process of writing a rudimentary Connect 4 game, with the board built into the command line, etc.  My problem is that I cant get the code to execute past the 2nd elif statement.  I set it up so that if a certain cell in the grid does not have an underscore, it should proceed to place the piece in the next row.  However, the following move always only replaces whatever piece is in the cell in row 2.  I've tried starting from rows other than the bottom 2 rows, just to try to troubleshoot, but it never gets past the 1st elif statement. Can anyone tell me where I'm going wrong with my elifs?</p>
<pre><code>board = []

for x in range(0, 6):
    board.append(["_"] * 7)

def print_board(board):
    for i in range(1,7):
        print(i, end=" ")
    print(7)
    for row in board:
        print("|".join(row))

print_board(board)

for turn in range(42):
    print('Turn', turn+1)
    if turn % 2 == 0:
        player1 = int(input('Player 1, choose your column: '))
        while player1 not in range(1,8):
            player1 = int(input('You must enter a column number from 1-7: '))
        if board[5][player1-1] == '_':
            board[5][player1-1] = 'O'
        elif board[5][player1-1] != '_':
            board[4][player1-1] = 'O'
        elif board[4][player1-1] != '_':
            board[3][player1-1] = 'O'
        elif board[3][player1-1] != '_':
            board[2][player1-1] = 'O'
        elif board[2][player1-1] != '_':
            board[1][player1-1] = 'O'
        elif board[1][player1-1] != '_':
            board[0][player1-1] = 'O'
        print_board(board)
    elif turn % 2 != 0:
        player2 = int(input('Player 2, choose your column: '))
        while player2 not in range(1,8):
            player2 = int(input('You must enter a column number from 1-7: '))
        if board[5][player2-1] == '_':
            board[5][player2-1] = 'X'
        elif board[5][player2-1] != '_':
            board[4][player2-1] = 'X'
        elif board[4][player2-1] != '_':
            board[3][player2-1] = 'X'
        elif board[3][player2-1] != '_':
            board[2][player2-1] = 'X'
        elif board[2][player2-1] != '_':
            board[1][player2-1] = 'X'
        elif board[1][player2-1] != '_':
            board[0][player2-1] = 'X'
        print_board(board)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should test the cells using <code>==</code>, not <code>!=</code>. Also, you should change the same cell you test on, not the one below it:</p>
<pre><code>board = []

for x in range(0, 6):
    board.append(["_"] * 7)

def print_board(board):
    for i in range(1,7):
        print(i, end=" ")
    print(7)
    for row in board:
        print("|".join(row))

print_board(board)

for turn in range(42):
    print('Turn', turn+1)
    if turn % 2 == 0:
        player1 = int(input('Player 1, choose your column: '))
        while player1 not in range(1,8):
            player1 = int(input('You must enter a column number from 1-7: '))
        if board[5][player1-1] == '_':
            board[5][player1-1] = 'O'
        elif board[4][player1-1] == '_':
            board[4][player1-1] = 'O'
        elif board[3][player1-1] == '_':
            board[3][player1-1] = 'O'
        elif board[2][player1-1] == '_':
            board[2][player1-1] = 'O'
        elif board[1][player1-1] == '_':
            board[1][player1-1] = 'O'
        elif board[0][player1-1] == '_':
            board[0][player1-1] = 'O'
        print_board(board)
    elif turn % 2 != 0:
        player2 = int(input('Player 2, choose your column: '))
        while player2 not in range(1,8):
            player2 = int(input('You must enter a column number from 1-7: '))
        if board[5][player2-1] == '_':
            board[5][player2-1] = 'X'
        elif board[4][player2-1] == '_':
            board[4][player2-1] = 'X'
        elif board[3][player2-1] == '_':
            board[3][player2-1] = 'X'
        elif board[2][player2-1] == '_':
            board[2][player2-1] = 'X'
        elif board[1][player2-1] == '_':
            board[1][player2-1] = 'X'
        elif board[0][player2-1] == '_':
            board[0][player2-1] = 'X'
        print_board(board)
</code></pre>
</div>
<span class="comment-copy">If the condition matched, the remaining conditions <code>elif</code> or <code>else</code> in the related blocks will never be executed, as <a href="https://docs.python.org/3/reference/compound_stmts.html#elif" rel="nofollow noreferrer">only one will be executed as documented</a></span>
<span class="comment-copy">I think metotaster is right, or at least, I have the same understanding. Change the elifs to ifs if you want to have the piece test for a fall at each row.  Elif is great if conditions are mutually exclusive, so you can skip the rest of the tests, but that's not what you want.</span>
