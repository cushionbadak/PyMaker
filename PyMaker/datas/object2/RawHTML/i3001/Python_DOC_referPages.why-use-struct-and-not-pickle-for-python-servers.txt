<div class="post-text" itemprop="text">
<p>I don't understand why should I use <code>struct</code> for python server and not <code>pickle</code></p>
<ul>
<li><code>struct</code>-harder to use, can't convert python object and can only send numbers or bools </li>
<li><code>pickle</code>-easy to use and I can just convert the object it self to bytes so it easy in the client side as well (I mean I can convert <code>dict</code> to bytes and send it to the client)</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You should <strong>never</strong> accept Pickle from remote connections, at least not without rigorous checks that the data can be trusted. As the [documentation] states:</p>
<blockquote>
<p><strong>Warning</strong>: The <code>pickle</code> module is not secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source.</p>
</blockquote>
<p>A pickle data stream is a simple stack language that can be used to create and execute arbitrary Python code. You can't guard against this on the receiving end. IF there is any remote possibility that an attacker can send pickle data of their choosing to your server, your process is compromised. The hacker could send <code>os.execv('rm -rf /')</code> or marshalled code objects to set up a <a href="https://docs.python.org/3/library/socketserver.html" rel="nofollow noreferrer">simple socket server</a> awaiting further commands.</p>
<p><code>struct</code> may be harder to use, but it would only allow <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow noreferrer">specific data types</a>, and those are standardised. That would make it easier to write clients in other programming languages.</p>
<p>There are more alternatives that don't have the downsides of pickle, and are easier to work with. You could consider schema-less but standardised formats such as <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON</a> (more verbose as it is a textual format, but compression can help), and <a href="http://bsonspec.org/" rel="nofollow noreferrer">BSON</a> (Binary JSON) or use something like <a href="https://developers.google.com/protocol-buffers/" rel="nofollow noreferrer">protocol buffers</a> to handle your protocol data serialisation.</p>
</div>
<span class="comment-copy">Pickle is <b>not secure</b>. You can <a href="http://www.zopatista.com/plone/2007/11/09/one-cookie-please/" rel="nofollow noreferrer">trivially hack a system that accepts pickles</a>.</span>
