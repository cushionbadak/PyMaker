<div class="post-text" itemprop="text">
<p>I just want to launch my program written in C++ from a Python script. 
I wrote the following script:</p>
<pre><code>import subprocess
subprocess.call(['l:\Proj\Silium.exe', '--AddWatch c:\fff.txt'])
</code></pre>
<p>But to my c++ application the parameter <code>"--AddWatch c:\fff.txt"</code> arrives without hyphens - it arrives as <code>"AddWatch c:\fff.txt"</code>. So my program doesn't work. </p>
<p>Why does this happen, and how can I fix it?</p>
<p>UPD: thx for comments - yours answer helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>I explain the issue and the solution.
I need to launch my application in the following way:</p>
<pre><code>l:\Proj\Silium.exe --AddWatch c:\fff.txt
</code></pre>
<p>When I tried to do this using some hint from internet:</p>
<pre><code>import subprocess
subprocess.call(['l:\Proj\Silium.exe', '--AddWatch c:\fff.txt'])
</code></pre>
<p>the key "--AddWatch" arrives to my program without hyphens - like "AddWatch".</p>
<p>The solution is quite simple:</p>
<pre><code>import subprocess
subprocess.call(['l:\Proj\Silium.exe', '--AddCMakeWatch', 'c:\fff.txt',])
</code></pre>
<p>And issue gone away. </p>
<p>P.S.: its very strange that my initial code didnt work, I dont have any idea why python corrupt the command line, I think it is the python bug.</p>
</div>
<span class="comment-copy">Have you tried breaking them at each space so it looks like this. <code>subprocess.call(['l:\Proj\Silium.exe', '--AddWatch', 'c:\fff.txt'])</code></span>
<span class="comment-copy">you should probably use raw strings in this case as well: <code>r'l:\Proj\Silium.exe'</code>, (note the <code>r</code> prefix on the string,) otherwise python interprets your backslashes as escape sequences, which isn't what you want.</span>
<span class="comment-copy">To be clear, others of us can't tell with certainty what a correct answer is because we don't know how your <code>Silium.exe</code> <i>expects</i> to be called. If you would call <code>Silium.exe --AddWatch c:\fff.txt</code>, then it should be <code>['Silium.exe', '--AddWatch', 'c:\\ff.txt']</code>; if you would call <code>Silium.exe "--AddWatch c:\fff.txt"</code> at <code>cmd.exe</code>, then it would be <code>['Silium.exe', '--AddWatch c:\\ff.txt']</code>. (<code>'\\'</code> is the same as <code>r'\'</code>). As its author, you're the only person here who knows what command-line format <code>Silium.exe</code> wants; everyone else is just guessing.</span>
<span class="comment-copy">You need to escape your backslashes ('\") in regular strings.  Otherwise they could be interpreted as escape sequences that mean something else.  Such as <code>'\f'</code>, which translates into the form-feed character.  See <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">String and Byte Literals</a> for more information.  Also, Python didn't corrupt the command line, your initial attempt didn't work because you had <code>--AddCMakeWatch</code> and <code>c:\fff.txt</code> together in a single string which will get passed as a single parameter, not two args as required by the program. :-)</span>
