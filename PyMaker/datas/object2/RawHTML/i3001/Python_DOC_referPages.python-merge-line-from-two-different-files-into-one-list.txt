<div class="post-text" itemprop="text">
<p>I am trying to build a list from lines from two different files.</p>
<p>File1.txt</p>
<pre><code>['2.02', '-3.88', '15.25']
['4.40', '-2.36', '14.97']
['5.44', '0.34', '7.34']
['5.76', '0.41', '7.60']
['5.35', '0.19', '13.95']
</code></pre>
<p>File2.txt</p>
<pre><code>['P1']
['P2']
['P3']
['P4']
['P5']
</code></pre>
<p>desirable output</p>
<pre><code>['2.02', '-3.88', '15.25', 'P1']
['4.40', '-2.36', '14.97', 'P2']
['5.44', '0.34', '7.34', 'P3']
['5.76', '0.41', '7.60', 'P4']
['5.35', '0.19', '13.95', 'P5']
</code></pre>
<p>I tried to simple add lines</p>
<pre><code>combined = open('file1.txt').readlines() + open('line2.txt').readlines()
</code></pre>
<p>output</p>
<pre><code>["['2.02', '-3.88', '15.25']\n", "['4.40', '-2.36', '14.97']\n", "['5.44', '0.34', '7.34']\n", "['5.76', '0.41', '7.60']\n", "['5.35', '0.19', '13.95']\n", 'P1\n', 'P2\n', 'P3\n', 'P4\n', 'P5\n']
</code></pre>
<p>I also wrote a function which tries to merge both in a third file file3.txt</p>
<pre><code>def combiner():
with open("file1.txt", 'r') as file1:
    with open('file2.txt', 'r') as file2:
        with open('file3.txt',"w") as file3:
            clines = file1.readlines()
            plines = file2.readlines()
   #Write to third file
            for i in range(len(clines)):
                line = clines[i].strip() + plines[i]
                file3.write(line)
</code></pre>
<p>But it still writes in 2 different Lists</p>
<p>cat file3.txt</p>
<pre><code>['2.02', '-3.88', '15.25']['P1']
['4.40', '-2.36', '14.97']['P2']
['5.44', '0.34', '7.34']['P3']
['5.76', '0.41', '7.60']['P4']
['5.35', '0.19', '13.95']['P5']
</code></pre>
<p>The best would be a function which return such a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Even though the lines in the files resemble lists, you're actually treating them as strings.  You can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to evaluate the strings into lists, combine them, and then write them to the other file</p>
<pre><code>from ast import literal_eval

def combiner(infile1, infile2, outfile):
    with open(infile1) as f1, open(infile2) as f2, open(outfile, 'w+') as f3:
        f1_lists = (literal_eval(line) for line in f1)
        f2_lists = (literal_eval(line) for line in f2)
        for l1, l2 in zip(f1_lists, f2_lists):
            f3.write(str(l1+l2) + '\n')  # This could also be print(l1+l2, file=f3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>pandas</code></p>
<pre><code>import ast

df1 = pd.read_csv(file1, sep='\n', header=None, names=['data'])
df2 = pd.read_csv(file2, sep='\n', header=None, names=['data'])

parse = lambda d: d.transform(ast.literal_eval)

df1['data'] = parse(df1.data)
df2['data'] = parse(df2.data)
</code></pre>
<p>Then just</p>
<pre><code>df1 + df2

    data
0   [2.02, -3.88, 15.25,  P1]
1   [4.40, -2.36, 14.97,  P2]
2   [5.44, 0.34,  7.34,   P3]
3   [5.76, 0.41,  7.60,   P4]
4   [5.35, 0.19,  13.95,  P5]
</code></pre>
</div>
<span class="comment-copy">If you're also generating the data that goes into the files, it might be worthwhile to look into serializing the data in some way. <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow noreferrer">Pickling</a> is the standard way in Python.</span>
<span class="comment-copy">Brilliant! Deleting mine since yours is better.</span>
<span class="comment-copy">Same -- this is the right way to do it (and 12 minutes earlier than mine!)</span>
<span class="comment-copy">I didnt know ast. That solves the problem within a few lines. Thank you very much!</span>
<span class="comment-copy">this should work only for python 3.0, right?</span>
<span class="comment-copy">@Lango yep. This lib is very useful for manipulating data (especially if you have lots of data and lots of files). Reading them manually and iterating over the lines can be very tricky as the code can get very messy and prone to bugs :)</span>
<span class="comment-copy">thank you. I forgot to mention that Im using 2.7. So it didnt not work. I just tried with python 3 and it does. Cheers.</span>
