<div class="post-text" itemprop="text">
<p>I am trying to set default values on an instance of <code>configparser.ConfigParser</code> after its instantiation.
While inspecting the instance I found the method <code>ConfigParser.setdefault()</code>:</p>
<pre><code>Help on method setdefault in module collections.abc:

setdefault(key, default=None) method of configparser.ConfigParser instance
    D.setdefault(k[,d]) -&gt; D.get(k,d), also set D[k]=d if k not in D
</code></pre>
<p>While this is not very helpful at all, the <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">official documentation</a> does not even mention this <em>public</em> method.</p>
<p>So I started just to try-and-error:</p>
<pre><code>&gt;&gt;&gt; cp.setdefault('asd', 'foo')
&lt;Section: asd&gt;
&gt;&gt;&gt; cp['asd']
&lt;Section: asd&gt;
&gt;&gt;&gt; cp['asd']['foo']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/configparser.py", line 1233, in __getitem__
    raise KeyError(key)
KeyError: 'foo'
&gt;&gt;&gt; cp['foo']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/configparser.py", line 959, in __getitem__
    raise KeyError(key)
KeyError: 'foo'
&gt;&gt;&gt; cp.setdefault('asd', {'foo': 'bar'})
&lt;Section: asd&gt;
&gt;&gt;&gt; cp['asd']
&lt;Section: asd&gt;
&gt;&gt;&gt; cp['asd']['foo']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/configparser.py", line 1233, in __getitem__
    raise KeyError(key)
KeyError: 'foo'
&gt;&gt;&gt; cp['foo']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/configparser.py", line 959, in __getitem__
    raise KeyError(key)
KeyError: 'foo'
&gt;&gt;&gt; 
</code></pre>
<p>But I could not figure out how to initialize a default section <code>'asd'</code> with a default key <code>'foo'</code> with value <code>'bar'</code>.</p>
<p>So my questions are:</p>
<ol>
<li><s>What is the method <code>ConfigParser.setdefault()</code> for?</s></li>
<li>How can I set defaults on my <code>ConfigParser</code>'s instance after its initialization?</li>
</ol>
<p><strong>Update</strong><br/>
After some further investigation it turned out that <code>ConfigParser.setdefault()</code> is inherited from <code>_collections_abc.MutableMapping</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>ConfigParser.setdefault</code> has nothing to do with setting the ConfigParser's defaults. If you want to set defaults, use the <code>DEFAULT</code> section, which provides defaults for other sections:</p>
<pre><code>cp['DEFAULT']['key'] = 'value'
</code></pre>
<p>or if you configured a different <code>default_section</code>, use whatever you configured.</p>
<p>As described in the <a href="https://docs.python.org/3/library/configparser.html#mapping-protocol-access" rel="nofollow noreferrer">docs</a>,</p>
<blockquote>
<p>configparser objects behave as close to actual dictionaries as possible. The mapping interface is complete and adheres to the MutableMapping ABC. However, there are a few differences that should be taken into account:</p>
<p>[list of differences, none of which involve <code>setdefault</code>]</p>
</blockquote>
<p><code>setdefault</code> is one of the operations specified by MutableMapping. <code>cp.setdefault('asd', 'foo')</code> attempts to set <code>cp['asd'] = 'foo'</code> if there is no entry for <code>cp['asd']</code>, then returns <code>cp['asd']</code>.</p>
<p>In a ConfigParser, an entry for <code>cp['asd']</code> would be an <code>'asd'</code> section, and it is not legal to set <code>cp['asd'] = 'foo'</code>. It is legal to set <code>cp['asd']</code> to a mapping, but you already had a <code>cp['asd']</code> section, so your <code>cp.setdefault('asd', {'foo': 'bar'})</code> call didn't do anything either.</p>
</div>
