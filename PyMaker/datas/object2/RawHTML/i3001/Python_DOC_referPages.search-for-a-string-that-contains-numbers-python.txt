<div class="post-text" itemprop="text">
<p>So I have the following code:</p>
<pre><code>cus_str = "show configuration " #intiate router command string variable

with open(var) as config_file: #open file
    for line in config_file: #line by line reading of file
        if '"xe-" + #anynumber + "/" #anynumber + "/" + #anynumber' in line:
            line = line.replace('\n' , '').replace('"' , '').replace(']' , '')     #removes all extra characters
            i = "| except " + (line.split("cust ", 1)[1]) + " " #split the line and save last index (cust name)
        cus_str+=i #append to string
config_file.close()
</code></pre>
<p>The line: <em>if '"xe-" + #anynumber + "/" #anynumber + "/" + #anynumber' in line:</em> Is what I'm struggling with syntax-wise.</p>
<p>I am looking to see if a line in the file contains the following string: "xe-<em>number</em>/<em>number</em>/<em>number</em>" (ex: "xe-6/1/10"). It will always have this format, but the numbers will change. What sort of syntax would I use to do this most efficiently.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use regular expressions for this.  Regular expressions allow you to specify a pattern of text (though not all patterns can be expressed as a regular expression).  We can then <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer"><code>compile</code></a> that expression into a <a href="https://docs.python.org/3/library/re.html#re-objects" rel="nofollow noreferrer"><code>Pattern</code></a> object, and use that object to <a href="https://docs.python.org/3/library/re.html#re.Pattern.search" rel="nofollow noreferrer"><code>search</code></a> strings for the pattern.</p>
<pre><code>import re

pattern = re.compile(r'"xe-\d+/\d+/\d+"')  # \d+ is "one or more digits".  
                                           # Everything else is literal

with open(var) as config_file:
    for line in config_file:
        if pattern.search(line):  # will return a Match object if found, else None
            ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sounds like a job for the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Regular Expressions</a> library!</p>
<p>Is this number a date? You can restrict the amount of digits. </p>
<pre><code>from re import search, compile #Import the re library with search
pattern = compile(r"xe-\d{1,2}\/\d{1,2}\/\d{1,2}") #Use this pattern to find lines

cus_str = "show configuration " #intiate router command string variable

with open(var) as config_file: #open file
    for line in config_file: #line by line reading of file
        if search(pattern, line): #Returns None if match is not found
            line = line.replace('\n' , '').replace('"' , '').replace(']' , '')     #removes all extra characters
            i = "| except " + (line.split("cust ", 1)[1]) + " " #split the line and save last index (cust name)
        cus_str+=i #append to string
</code></pre>
<p>The regular expression: <code>xe-\d{1,2}\/\d{1,2}\/\d{1,2}</code> matches "xe-" followed by 3 groups of digit pairs with a slash separator. Each group of digits can be 1 or 2 characters in length.</p>
<p><a href="https://i.stack.imgur.com/51oFe.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/51oFe.png"/></a></p>
<h2>Sidenotes</h2>
<ul>
<li><p>You don't need to close <code>config_file</code> since the <a href="https://docs.python.org/3/reference/compound_stmts.html#grammar-token-with_stmt" rel="nofollow noreferrer"><code>with</code></a> statement does that for you when you exit the block.</p></li>
<li><p>I'm not sure what you were trying to accomplish with <code>cus_str += i</code> when there is no match for the pattern. As it stands, it will just repeat the same <code>i</code> from the previous line, unless you indent that line by 1 level. Or give you an error if the first line doesn't contain the pattern.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can test a regex with a simple program like with some online tools like <a href="https://pythex.org/" rel="nofollow noreferrer">https://pythex.org/</a> , and then make your program, a little sample to point you in the right direction would be:</p>
<pre><code>import re

config_file = ["xe-6/1/10", "xf-5/5/542", "xe-4/53/32" ]
rex = re.compile(r'xe-[\d]+/[\d]+/[\d]+')
for line in config_file: #line by line reading of file
    if rex.search(line):
      print(line)

xe-6/1/10
xe-4/53/32
</code></pre>
</div>
<span class="comment-copy">Use python's regular expression module <code>re</code>: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">that's a good and complete answer, good, +1</span>
<span class="comment-copy">Very nice diagram.  How did you generate it?  I think the original question includes surrounding <code>""</code> double quotes, you might want to amend your answer.</span>
<span class="comment-copy">I shamelessly took a screenshot from <a href="https://www.debuggex.com/" rel="nofollow noreferrer">debuggex.com</a></span>
<span class="comment-copy">I think the double quotes were part of the pseudocode to show what she wanted done for that line.</span>
