<div class="post-text" itemprop="text">
<p>I am practicing myself in python online and have come across this question.</p>
<p><a href="https://www.testdome.com/questions/python/file-owners/11846?visibility=1&amp;skillId=9" rel="nofollow noreferrer">https://www.testdome.com/questions/python/file-owners/11846?visibility=1&amp;skillId=9</a></p>
<p>I dont know how to solve this. When I interchange the Key and Value and I am getting the output with only unique Key-value pairs as below</p>
<pre><code>{'Stan': 'Code.py', 'Randy': 'Input.txt'}
</code></pre>
<p>Kindly suggest how to resolve this.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to put the value in the list for "Randy", as in dictionary we can't have multiple keys of same name. Here is the solution for the same,</p>
<pre><code>class FileOwners:

    @staticmethod
    def group_by_owners(files):
        d={}
        for i in files:
           if files[i] in d:
            d[files[i]].append(i)
           else:
            d[files[i]]=[i]
        return d

files = {
    'Input.txt': 'Randy',
    'Code.py': 'Stan',
    'Output.txt': 'Randy'
}
print(FileOwners.group_by_owners(files))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't have the same key in a dict. For your example, use owner as key and the value will be a list of files. </p>
<p>Something like this:</p>
<pre><code>class FileOwners:

@staticmethod
def group_by_owners(files):
    result = {}
    for _f in list(files.keys()):
        if not files[_f] in result.keys():
            result[files[_f]] = []
        result[files[_f]].append(_f)
    return result

files = {
    'Input.txt': 'Randy',
    'Code.py': 'Stan',
    'Output.txt': 'Randy'
}
print(FileOwners.group_by_owners(files))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hint: instead of using a single item as the contents of the dict, use a list. Then, using a <code>for</code> loop, gradually populate that list with items:</p>
<pre><code>output = {}
for key, value in files.items():
    if value in output:
        output[value].append(key)
    else:
        output[value] = [key]
return output
</code></pre>
<p>You can see here that we first create a new dictionary, <code>output</code>, and then we put the key-value pairs from <code>files</code> into <code>output</code> as value-key. </p>
<p>The key here is that each value of <code>output</code> is a <em>list</em>, not just a single item. That's why we check if the value already exists in <code>output</code> before adding it: if it does, then we just add the new <code>key</code> to the list. If not, we create a new list, with just one element: <code>key</code>.</p>
<p>A <code>dict</code> can't have duplicate keys, which is why when you just interchange a dict (e.g. <code>output = {val:key for key, val in files.items()}</code>) the code doesn't work as intended. The first value for <code>Randy</code> gets overwritten by the second value for <code>Randy</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#defaultdict-examples" rel="nofollow noreferrer">defaultdict</a> for this:</p>
<pre><code>from collections import defaultdict

class FileOwners:

    @staticmethod
    def group_by_owners(files):
        d = defaultdict(list)
        for k, v in files.items():
            d[v].append(k)
        return dict(d)

files = {
    'Input.txt': 'Randy',
    'Code.py': 'Stan',
    'Output.txt': 'Randy'
}
print(FileOwners.group_by_owners(files))

# {'Randy': ['Input.txt', 'Output.txt'], 'Stan': ['Code.py']}
</code></pre>
</div>
<span class="comment-copy">You can't have a duplicate key in a <code>dict</code>, this is why you get this output. I really think giving you the answer wouldn't be beneficial for you. Also, provide your not working code so we can guide you in solving it yourself.</span>
<span class="comment-copy">check out the Werkzeug <code>MultiDict</code> datastructure for reference: <a href="http://werkzeug.pocoo.org/docs/0.14/datastructures/#werkzeug.datastructures.MultiDict" rel="nofollow noreferrer">werkzeug.pocoo.org/docs/0.14/datastructures/â€¦</a></span>
