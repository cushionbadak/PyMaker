<div class="post-text" itemprop="text">
<p>I have been having a path error: <strong><em>No file or directory found</em></strong> for hours. After hours of debugging, I realised that python2 added an invisible <code>'\r'</code> at the end of each line.</p>
<p>The input: (trainval.txt)</p>
<pre><code>Images/K0KKI1.jpg Labels/K0KKI1.xml
Images/2KVW51.jpg Labels/2KVW51.xml
Images/MMCPZY.jpg Labels/MMCPZY.xml
Images/LCW6RB.jpg Labels/LCW6RB.xml
</code></pre>
<p>The code I used to debug the error</p>
<pre><code>with open('trainval.txt', "r") as lf:
 for line in lf.readlines():
  print ((line),repr(line))
  img_file, anno = line.strip("\n").split(" ")
  print(repr(img_file), repr(anno))
</code></pre>
<p>Python2 output:</p>
<pre><code>("'Images/K0KKI1.jpg'", "'Labels/K0KKI1.xml\\r'")
('Images/2KVW51.jpg Labels/2KVW51.xml\r\n', "'Images/2KVW51.jpg Labels/2KVW51.xml\\r\\n'")
("'Images/2KVW51.jpg'", "'Labels/2KVW51.xml\\r'")
('Images/MMCPZY.jpg Labels/MMCPZY.xml\r\n', "'Images/MMCPZY.jpg Labels/MMCPZY.xml\\r\\n'")
("'Images/MMCPZY.jpg'", "'Labels/MMCPZY.xml\\r'")
('Images/LCW6RB.jpg Labels/LCW6RB.xml\r\n', "'Images/LCW6RB.jpg Labels/LCW6RB.xml\\r\\n'")
("'Images/LCW6RB.jpg'", "'Labels/LCW6RB.xml\\r'")
</code></pre>
<p>Python3 output:</p>
<pre><code>Images/K0KKI1.jpg Labels/K0KKI1.xml
 'Images/K0KKI1.jpg Labels/K0KKI1.xml\n'
'Images/K0KKI1.jpg' 'Labels/K0KKI1.xml'
Images/2KVW51.jpg Labels/2KVW51.xml
 'Images/2KVW51.jpg Labels/2KVW51.xml\n'
'Images/2KVW51.jpg' 'Labels/2KVW51.xml'
Images/MMCPZY.jpg Labels/MMCPZY.xml
 'Images/MMCPZY.jpg Labels/MMCPZY.xml\n'
'Images/MMCPZY.jpg' 'Labels/MMCPZY.xml'
Images/LCW6RB.jpg Labels/LCW6RB.xml
 'Images/LCW6RB.jpg Labels/LCW6RB.xml\n'
'Images/LCW6RB.jpg' 'Labels/LCW6RB.xml'
</code></pre>
<p>As annoying as it was, it was that small <code>'\r'</code> who caused the path error. I could not see it in my console until I write the script above. My question is: Why is this <code>'\r'</code> even there? I did not create it. Something somewhere added it there. It would be helpful if someone could tell me what is the use of this small '<code>r</code>' , why did it appear in python2 and not in python3 and how to avoid getting bugs due to it. </p>
</div>
<div class="post-text" itemprop="text">
<p>there's probably a subtle difference of processing between Windows text file in python 2 &amp; 3 versions.</p>
<p>The issue here is that your file has a Windows text format, and contains one or several carriage return chars before the linefeed. A quick &amp; generic fix would be to change:</p>
<pre><code>img_file, anno = line.strip("\n").split(" ")
</code></pre>
<p>by just:</p>
<pre><code>img_file, anno = line.split()
</code></pre>
<p>Without arguments <code>str.split</code> is very smart:</p>
<ul>
<li>it splits according to any kind of whitespace (linefeed, space, carriage return, tab)</li>
<li>it removes empty fields (no need for <code>strip</code> after all)</li>
</ul>
<p>So use that cross-platform/python version agnostic form unless you need really specific split operation, and your problems will be history.</p>
<p>As an aside, don't do <code>for line in lf.readlines():</code> but just <code>for line in lf:</code>, it will read &amp; yield the lines one by one, handy when the file is big so you don't consume too much memory.</p>
</div>
<span class="comment-copy"><code>\r</code> is a carriage return (a kind of whitespace). It's probably in the file you're reading. You can remove it from the end of a line with <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip()</code></a>.</span>
<span class="comment-copy">Better yet, fix whichever tool or process created this file with DOS line endings.</span>
<span class="comment-copy">better yet, make your program robust to those characters as they're just noise in your case.</span>
<span class="comment-copy">Better better yet yet, don't use Python 2 any longer.</span>
<span class="comment-copy">Not so subtle, actually; Python 2 required <code>open(filename, 'Ur')</code> for the behavior wich is now the standard default mode for text files in Python 3.</span>
<span class="comment-copy">interesting. I'm more used to windows, where it is different too since \r are removed when using text mode.</span>
