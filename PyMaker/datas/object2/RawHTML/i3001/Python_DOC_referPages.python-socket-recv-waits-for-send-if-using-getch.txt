<div class="post-text" itemprop="text">
<p>This is a very unexpected behavior:</p>
<p>Here is a textbook classic short program that uses one thread to get characters one by one from a socket stream and display it, and a second thread to read input and send the input over the same socket stream.</p>
<p>import socket
    import threading
    import getch
    import sys</p>
<pre><code>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 1)

def rxWorker():
    while(True):
        r = s.recv(1)
        print(r.decode('ascii'), end='')

def txWorker():
    while (True):
        i = input('')
        s.send(i.encode())

s.connect(('localhost',9999))

threading.Thread(name='Rx', target=rxWorker).start()
threading.Thread(name='Tx', target=txWorker).start()
</code></pre>
<p>This works against netcat listener that is running is a different terminal:</p>
<pre><code>nc -l localhost 9999
</code></pre>
<p>At this point everything works well. Lines are sent from side to side and appear as expected.</p>
<p>Now the input is changed to immediate, so the python side  sends characters as they are typed (not waiting for a newline), like so:</p>
<p>import socket
    import threading
    import getch
    import sys</p>
<pre><code>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 1)

def rxWorker():
    while(True):
        r = s.recv(1)
        print(r.decode('ascii'), end='')

def txWorker():
    while (True):
        # i = input('')
        i = getch.getche()
        s.send(i.encode())

s.connect(('localhost',9999))

threading.Thread(name='Rx', target=rxWorker).start()
threading.Thread(name='Tx', target=txWorker).start()
</code></pre>
<p>Note that the only change is the way the input is read:                    <code>i = getch.getche()</code> vs <code>i = input('')</code></p>
<p>Now the behavior is different.</p>
<p>Characters from the python side appear at the netcat side correctly and immediately.</p>
<p>The problem: character from the netcat side now do not show at the python side immediately.
Thy actually do not show until one or several characters are sent from python to netcat.</p>
<p>This is very strange and kind of breaks my control flow/:</p>
<p>Please advise</p>
<p>System: Ubuntu 16.04 , python 3.5.2</p>
</div>
<div class="post-text" itemprop="text">
<p>The main problem is that you haven't actually enabled <code>TCP_NODELAY</code>.</p>
<p>This line does not do what you think it does:</p>
<pre><code>s = socket.socket(socket.AF_INET, socket.TCP_NODELAY )
</code></pre>
<p>The arguments to <a href="https://docs.python.org/3/library/socket.html#socket.socket" rel="nofollow noreferrer"><code>socket</code></a> are:</p>
<blockquote>
<pre><code>socket.socket(family=AF_INET, type=SOCK_STREAM, proto=0, fileno=None)
</code></pre>
</blockquote>
<p>It just so happens that, at least on *nix systems, <code>TCP_NODELAY</code> is <code>1</code>, and <code>SOCK_STREAM</code> is an enum with value <code>1</code>, so by passing <code>TCP_NODELAY</code> as the type you're selecting <code>SOCK_STREAM</code>, aka TCP. When a future version of the <code>socket</code> library switches to using enums for <code>sockopt</code> values (as it already does for the types), this will become a <code>TypeError</code> instead of silently doing something unexpected that occasionally happens to sort of work.</p>
<p>If you want to enable a <code>sockopt</code> value like <code>TCP_NODELAY</code>, you have to call <a href="https://docs.python.org/3/library/socket.html#socket.socket.setsockopt" rel="nofollow noreferrer"><code>setsockopt</code></a> on the socket. Like this:</p>
<pre><code>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_TCP, socket.TCP_NODELAY, 1)
</code></pre>
<hr/>
<p>As a side note, there's at least one other obvious error in your code, although it isn't causing any problems:</p>
<pre><code>rxt = threading.Thread(name='Rx', target=rxWorker).start()
</code></pre>
<p><code>Thread.start</code> returns <code>None</code>. So you're seeing <code>rxt</code> (and <code>txt</code>) to <code>None</code>. Fortunately, you don't actually do anything with themâ€”but as soon as you do, e.g., <code>rxt.join()</code>, you're going to get an <code>AttributeError</code>.</p>
</div>
<span class="comment-copy">Done some changes to sample code according to abarnert's notes. problem, persists as described.</span>
<span class="comment-copy">Thanks for the comments.  I changed the question according to the comments to make the question more clear.  Unfortunately the problem is not related to the flags and still persists.</span>
