<div class="post-text" itemprop="text">
<p>My plan is to take every value in a python dict, so I have done that.</p>
<pre><code>data = {}
for _ in range(int(input())):
    n = input()
    s = float(input())
    data.update({n: s})


&gt;&gt;&gt; 2
&gt;&gt;&gt; harry
&gt;&gt;&gt; 2
&gt;&gt;&gt; barry
&gt;&gt;&gt; 3
&gt;&gt;&gt; {'harry': 2.0, 'barry': 3.0}
</code></pre>
<p>now I want to compare the <strong>VALUES</strong> in this dict and return the result of max-min. How could i do this ?</p>
<p>thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You can get the values of a dict with <a href="https://docs.python.org/3/library/stdtypes.html#dict.values" rel="nofollow noreferrer"><code>data.values()</code></a>. That gives you a perfectly good iterable that you can pass to <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> or <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min</code></a>:</p>
<pre><code>&gt;&gt;&gt; data = {'harry': 2.0, 'barry': 3.0}
&gt;&gt;&gt; max(data.values())
3.0
</code></pre>
<hr/>
<p>Or you can get the key-value pairs with <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>data.items()</code></a>, and pass the result to <code>max</code> or <code>min</code> with a <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer"><code>key</code> function</a> that compares on the second part of the pair instead of the first:</p>
<pre><code>&gt;&gt;&gt; max(data.items(), key=lambda kv: kv[1])
('barry', 3.0)
</code></pre>
<p>Or, instead of writing the <code>key</code> function manually, you can use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a> to do it for you:</p>
<pre><code>&gt;&gt;&gt; max(data.items(), key=operator.itemgetter(1))
('barry', 3.0)
</code></pre>
<hr/>
<p>Or you can get the keys (either with <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>data.keys()</code></a>, or just using <code>data</code> itself as the iterableâ€”dictionaries are iterables of their keys), and use the dict's <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>data.get</code></a> method as your key function:</p>
<pre><code>&gt;&gt;&gt; max(data, key=data.get)
'barry'
</code></pre>
<hr/>
<p>Or, if you need to do a lot of these value-based searches, you might want to create a reverse dictionary:</p>
<pre><code>&gt;&gt;&gt; revdata = {value: key for key, value in data.items()}
&gt;&gt;&gt; max(revdata)
3.0
&gt;&gt;&gt; max(revdata.items())
(3.0, 'barry')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want just the values:</p>
<pre><code>min_value = min(data.values())
max_value = max(data.values())
</code></pre>
<p>If you want the key (getting the value later is easy):</p>
<pre><code>min_key = min(data, key=data.get)  # key=data.__getitem__ will also work
max_key = max(data, key=data.get)
</code></pre>
</div>
