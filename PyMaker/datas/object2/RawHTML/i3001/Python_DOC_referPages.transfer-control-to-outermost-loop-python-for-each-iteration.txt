<div class="post-text" itemprop="text">
<p>Consider the code </p>
<pre><code>for i in range(1,3):
  print(i)
  for j in range(4,7):
    print(j)

    for k in range(8,10):

      print(k)
      continue
</code></pre>
<p>the expected output is 
<code>[1 4 8 9] and [2 5 8 9]</code> </p>
<p>for each iteration
and actual is <code>[1 4 8 9 ],[5 8 9],[6 8 9],[2 4 8 9],[5 8 9],[6 8 9]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot achieve your desired output with simple nested <code>for</code> loops like that.</p>
<p>Incidentally, the <code>continue</code> statement says to perform the next iteration of the loop that contains it, skipping any statements that are below it in the block. But your <code>continue</code> is at the end of the block, so it has no effect. </p>
<p>But even if there was a statement similar to <code>continue</code> that passed control back to the outermost <code>for i</code> loop it <em>still</em> wouldn't do what you want because the <code>for j</code> loop will simply start counting up from 4 again.</p>
<p>However, we <em>can</em> achieve your goal by creating an iterator using the built-in <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter</code></a> function. We can then use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a> to get each item from that iterator when we want them.</p>
<pre><code>it = iter(range(4, 7))

for i in range(1, 3):
    print(i, end=' ')
    j = next(it)
    print(j, end=' ')
    for k in range(8, 10):
        print(k, end=' ')
    print()
</code></pre>
<p><strong>output</strong></p>
<pre><code>1 4 8 9 
2 5 8 9 
</code></pre>
<p>If we change the 1st statement to </p>
<pre><code>for i in range(1, 4):
</code></pre>
<p>the output becomes</p>
<pre><code>1 4 8 9
2 5 8 9
3 6 8 9
</code></pre>
</div>
<span class="comment-copy">What exactly is your question ? How to achieve such expected output ? Or why it produces the output you gave ? Please specify.</span>
<span class="comment-copy">Please clarify your question. That code cannot produce that output. It prints single integers, one per line. It doesn't print any brackets or commas. However, the integers it prints are those that you give. Why do you expect that expected output of <code>[1 4 8 9]</code> and <code>[2 5 8 9]</code>?</span>
<span class="comment-copy"><a href="http://idownvotedbecau.se/unclearquestion" rel="nofollow noreferrer">idownvotedbecau.se/unclearquestion</a></span>
<span class="comment-copy">the out put is like 1 4 8 9 5 8 9 6 2 4 8 9 5 8 9 6 and I want 1 4 8 9 2 5 8 9</span>
