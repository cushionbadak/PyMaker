<div class="post-text" itemprop="text">
<p>Newbie here, so apologies for a duplicate/silly question but I can't find the answer.</p>
<p>I am trying to store the contents of a list (of dictionaries) into a new dictionary.</p>
<pre><code>a={}
b=[]
c={"Name":"Claude","Surname":"Verde","Age":"35","City":"Paris"}
b.append(c)
c={"Name":"Jean","Surname":"Claude","Age":"22","City":"Paris"}
b.append(c)
c={"Name":"Sam","Surname":"Smith","Age":"42","City":"London"}
b.append(c)
c={"Name":"James","Surname":"Jones","Age":"44","City":"London"}
b.append(c)
for i in range(len(b)):
    if b[i]['City'] == 'Paris':
        a["Paris"]=([b[i]])
    elif b[i]['City'] == 'London':
        a["London"]=([b[i]])
a
</code></pre>
<p>Result:</p>
<pre><code>{'Paris': [{'Name': 'Jean',
   'Surname': 'Claude',
   'Age': '22',
   'City': 'Paris'}],
 'London': [{'Name': 'James',
   'Surname': 'Jones',
   'Age': '44',
   'City': 'London'}]}
</code></pre>
<p>However, I want a dictionary containing all residents of a city.</p>
<p>The code above only stores the second, not the first, resident in the list.</p>
<p>i.e. hoping for the below output.</p>
<p>How can I achieve this?</p>
<p>Any help greatly appreciated. Thanks</p>
<pre><code>{'Paris': [{'Name': 'Claude',
   'Surname': 'Verde',
   'Age': '35',
   'City': 'Paris'},{'Name': 'Jean',
   'Surname': 'Claude',
   'Age': '22',
   'City': 'Paris'}],
 'London': [{'Name': 'Sam',
   'Surname': 'Smith,
   'Age': '42',
   'City': 'London'},{'Name': 'James',
   'Surname': 'Jones',
   'Age': '44',
   'City': 'London'}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you initialize a, I would approach it like this:</p>
<pre><code>a = {}

b=[]
c={"Name":"Claude","Surname":"Verde","Age":"35","City":"Paris"}
b.append(c)
c={"Name":"Jean","Surname":"Claude","Age":"22","City":"Paris"}
b.append(c)
c={"Name":"Sam","Surname":"Smith","Age":"42","City":"London"}
b.append(c)
c={"Name":"James","Surname":"Jones","Age":"44","City":"London"}
b.append(c)

for i in range(len(b)):
    if b[i]['City'] not in a.keys():
        a[b[i]['City']] = []

for i in range(len(b)):
    a[b[i]['City']].append(b[i]])
</code></pre>
<p>As a note:
I'm pretty sure you can combine those for loops like this:</p>
<pre><code>for i in range(len(b)):
    if b[i]['City'] not in a.keys():
        a[b[i]['City']] = []
    a[b[i]['City']].append(b[i]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>itertools.groupby</code></p>
<pre><code>&gt;&gt;&gt; lst = [
... {"Name":"Claude","Surname":"Verde","Age":"35","City":"Paris"},
... {"Name":"Jean","Surname":"Claude","Age":"22","City":"Paris"},
... {"Name":"Sam","Surname":"Smith","Age":"42","City":"London"},
... {"Name":"James","Surname":"Jones","Age":"44","City":"London"}]
&gt;&gt;&gt;
&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; f = lambda d: d['City']
&gt;&gt;&gt; res = {k:list(v) for k,v in groupby(sorted(lst, key=f), f)}
&gt;&gt;&gt; pprint(res)
{'London': [{'Age': '42', 'City': 'London', 'Name': 'Sam', 'Surname': 'Smith'},
            {'Age': '44', 'City': 'London', 'Name': 'James', 'Surname': 'Jones'}],
 'Paris': [{'Age': '35', 'City': 'Paris', 'Name': 'Claude', 'Surname': 'Verde'},
           {'Age': '22', 'City': 'Paris', 'Name': 'Jean', 'Surname': 'Claude'}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>get</code> method that has a default argument:</p>
<pre><code>a["Paris"]= a.get("Paris", []) + [b[i]]
</code></pre>
<p>The drawback is that it will create a new list every time you insert an element. However, it's fine if you don't have much data.</p>
<p>This gives, with a few improvements:</p>
<pre><code>for person in b:
    if person['City'] in ('Paris', 'London'):
        a[person['City']] = a.get(person['City'], []) + [person]
</code></pre>
<p>If you don't want to recreate a new list:</p>
<pre><code>for person in b:
    if person['City'] in ('Paris', 'London'):
        new_city = a.get(person['City'], [])
        new_city.append(person)
        a[person['City']] = new_city
</code></pre>
<p>Or you could also use a <code>defaultdict</code> instead of a <code>dict</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

b = [{'Name': 'Claude', 'Surname': 'Verde', 'Age': '35', 'City': 'Paris'}, 
     {'Name': 'Jean', 'Surname': 'Claude', 'Age': '22', 'City': 'Paris'}, 
     {'Name': 'Sam', 'Surname': 'Smith', 'Age': '42', 'City': 'London'}, 
     {'Name': 'James', 'Surname': 'Jones', 'Age': '44', 'City': 'London'}]

print({k: list(g) for k, g in groupby(b, key=lambda x: x['City'])})

# {'Paris': [{'Name': 'Claude', 'Surname': 'Verde', 'Age': '35', 'City': 'Paris'}, {'Name': 'Jean', 'Surname': 'Claude', 'Age': '22', 'City': 'Paris'}], 
#  'London': [{'Name': 'Sam', 'Surname': 'Smith', 'Age': '42', 'City': 'London'}, {'Name': 'James', 'Surname': 'Jones', 'Age': '44', 'City': 'London'}]}
</code></pre>
</div>
<span class="comment-copy">First, thank you for putting effort into your question!  When you have assign a value to a dictionary key you will overwrite any values that exist with that key, which is what you're doing now.  Instead of setting the value of the key to a single element you might want to consider making the value of each key a list and then appending each person who lives in the city to the list.</span>
<span class="comment-copy">What if you don't know all of the cities ahead of time?</span>
<span class="comment-copy">Edited, look at the first for loop, it will add citys to the dictionary</span>
<span class="comment-copy">I also cleaned up the second for loop</span>
<span class="comment-copy">using <code>set</code> instead of a <code>tuple</code> can be an improvement as well</span>
<span class="comment-copy">even for a tuple with 2 values? I don't think so...</span>
<span class="comment-copy">this <code>tuple</code> may increase in size over time since there are more than 2 cities in the world</span>
<span class="comment-copy">If this <code>tuple</code> contains all the cities of the world, I could simply remove that condition... I'm not sure if OP wants all the city or only Paris and London.</span>
