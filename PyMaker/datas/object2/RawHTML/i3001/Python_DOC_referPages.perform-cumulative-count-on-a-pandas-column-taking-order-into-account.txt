<div class="post-text" itemprop="text">
<p>I have a pandas data frame </p>
<pre><code>pd.DataFrame(columns=["A", "B"], data=[['id1','a'],['id1','a'], ['id1','a'], ['id1','b'], ['id1','b'], ['id1','a'], ['id1','a'], ['id2','c'], ['id2','c'],  ['id2','a'],  ['id2','c']])

    A   B
0   id1 a
1   id1 a
2   id1 a
3   id1 b
4   id1 b
5   id1 a
6   id1 a
7   id2 c
8   id2 c
9   id2 a
10  id2 c
</code></pre>
<p>I want to do a group by that gives me cumulative sum of occurrences in B column considering the order</p>
<pre><code>    A   B   C
0   id1 a   3
1       b   2
2       a   2
3   id2 c   2
4       a   1
5       c   1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> followed by a list comprehension. This works because, unlike Pandas <code>GroupBy</code>, the <code>itertools</code> version does not aggregate like elements which are non-adjacent.</p>
<pre><code>from itertools import groupby

grouper = groupby(zip(df['A'], df['B']))
res = [(i1, i2, len(list(j))) for (i1, i2), j in grouper]

df = pd.DataFrame(res, columns=['A', 'B', 'C'])

print(df)

     A  B  C
0  id1  a  3
1  id1  b  2
2  id1  a  2
3  id2  c  2
4  id2  a  1
5  id2  c  1
</code></pre>
</div>
