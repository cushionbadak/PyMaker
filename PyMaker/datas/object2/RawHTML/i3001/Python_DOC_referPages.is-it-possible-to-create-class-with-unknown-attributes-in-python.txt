<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8187082/how-can-you-set-class-attributes-from-variable-arguments-kwargs-in-python">How can you set class attributes from variable arguments (kwargs) in python</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>I'm learning Python and I just finished to learn about the basics of the class. This is the first OOP language I am learning so not everything is very perfectly clear at the moment. Anyway. </p>
<hr/>
<p>I'm wondering if it's possible in Python (3.6), to create a class for which we don't know the attributes of a few objects (or maybe only 2 or 3 among many possible). </p>
<p>For example, let say you want to define a molecule by its properties so that you can use them in another program to model or predict things. The basic properties you can involve will be (for example), <code>Temperature</code>, <code>MolecularWeight</code> and <code>MolarVolume</code>. However, you can also easily define your molecule with 20 different parameters. But, some of them may not exist for every molecule, or you may not need, at the moment, to use them. (i.e. first version of a software, ...).</p>
<hr/>
<p><strong>The question:</strong></p>
<p>I would like to know if a syntax as following exists in Python 3.x, so that the class will be able to create exactly the number of parameters a molecule has. I think it will cost a lot of memory space to define variables which don't exist for thousands of molecules...</p>
<pre><code>class Molecule:

    def __init__(self, Temperature, MolecularWeight, MolarVolume, *properties):
        self.Temperature = Temperature
        self.MolecularWeight = MolecularWeight
        self.MolarVolume = MolarVolume
        self.*properties = *properties
</code></pre>
<p>My goal is to use a file .txt to record the properties of my molecules (I have thousands of them) with their properties sorted in a defined order so that when the class is used if for the molecule methanol we have 10 parameters with the first three as mention before, then the class will create the molecule "methanol" with the ten properties in order.</p>
<hr/>
<p>Else, if it doesn't exist, should I by default create a class with all parameters I have in mind and consider some of them as not useful depending on the situations? Or use something much better that exists?</p>
<p>Thank you in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do exactly that by using <a href="https://docs.python.org/3.7/tutorial/controlflow.html#keyword-arguments" rel="nofollow noreferrer">keyword arguments</a> and the <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer"><code>setattr</code></a> function:</p>
<pre><code>class Molecule:
     def __init__(self, temperature, molecular_weight, molar_volume, **properties):
         self.temperature = temperature
         self.molecular_weight = molecular_weight
         self.molar_volume = molar_volume
         for k, v in properties.items():
             setattr(self, k, v)
</code></pre>
<p>I also snake cased your variable names <a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names" rel="nofollow noreferrer">as is convention</a>. Then</p>
<pre><code>m = Molecule(15, 7.5, 3.4, other_property=100)

m.other_property  # returns 100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you heard of dictionaries?</p>
<pre><code>properties = {'A':'value', ... , 'ljkhasdfljkhasdfhj':'value'}
</code></pre>
<p>If you add a method called <code>getProperty( propertyName )</code>, you can handle events where the property doesn't exist:</p>
<pre><code>def getProperty ( propName ):
    try:
        return properties[propName]
    except KeyError:
        return "Something went wrong"
</code></pre>
<p>The value at a dictionary's key can be any type. For mroe details, the documentation is here: <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#dictionaries</a></p>
</div>
<span class="comment-copy">OP specifically asks to use a class. Also <code>properties.get(propName, "Some indicator of failure")</code> is more pythonic than this solution. You may also want to check out json <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>loads</code></a> if a dictionary is actually desired.</span>
