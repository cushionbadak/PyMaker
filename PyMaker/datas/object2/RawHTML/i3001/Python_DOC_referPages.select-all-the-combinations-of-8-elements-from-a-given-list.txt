<div class="post-text" itemprop="text">
<p>I have a list of 27 elements. </p>
<pre><code>str1=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]
</code></pre>
<p>I need to find all the combinations of selecting 8 elements from the list. So far I have found an algorithm as below.</p>
<pre><code>def combi(iterable, r):

pool = tuple(iterable)
n = len(pool)
if r &gt; n:
    return
indices = list(range(r))
yield tuple(pool[i] for i in indices)
while True:
    for i in reversed(range(r)):
        if indices[i] != i + n - r:
            break
    else:
        return
    indices[i] += 1
    for j in range(i+1, r):
        indices[j] = indices[j-1] + 1
    yield tuple(pool[i] for i in indices)
</code></pre>
<p>Any suggestion would be really helpful</p>
<p><strong>Edit-</strong></p>
<pre><code>def getCombinations5(list1):
list1=list1
list2=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
#print list2
#str1='123456'
str1=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]
#print str1
list3=[]



for value in combi(str1,8):
    #print '#############################'
    #print list3
    #print value
    #print list2[int(value[0])]
    list2[int(value[0])]=0
    list2[int(value[1])]=0
    list2[int(value[2])]=0
    list2[int(value[3])]=0
    list2[int(value[4])]=0
    list2[int(value[5])]=0
    list2[int(value[6])]=0
    list2[int(value[7])]=0

    #print list2
    list3.append(list2[:])
    #print list3
    #print list3
    list2[int(value[0])]=1
    list2[int(value[1])]=1
    list2[int(value[2])]=1
    list2[int(value[3])]=1
    list2[int(value[4])]=1
    list2[int(value[5])]=1
    list2[int(value[6])]=1
    list2[int(value[7])]=1
    #print '@@@@@@@@@@@@@@@@@'
    #print len(list3)
    #print list2
print len(list3)

list4=[]
for value in list3:
    str2=''.join(str(e) for e in value)
    if '00000000' in str2 or '0000000' in str2 or '000000' in str2 or '00000' in str2 or '0000' in str2:
        continue
    elif '000' in str2:
        continue

    else:
        list0=list(str2)
        #print list0
        list0=map(int, list0)
        list4.append(list0)
print list4
</code></pre>
<p>What I want to do is to get combinations of 1s and 0s of 28 length pattern where only 8 bits are 0s and I need to discard combinations with 8,7,6,5,4 or 3 consecutive 0s.(First bit of the pattern is always 1) This method I have is really exhaustive. (I'm new to python, please bear with my bad programming)Any better algorithm will be really great.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a python inbuilt to find combinations. It's <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">itertools.combinations</a>. This will give you a generator at which you can iterate over to get all the combinations -</p>
<pre><code>import itertools
for combi in itertools.combinations(str1, 8):
    print combi
</code></pre>
<p>Or do a <code>list</code> in front of it to get a list of tuples of all the combinations -</p>
<pre><code>combi = list(itertools.combinations(str1, 8))
</code></pre>
</div>
<span class="comment-copy">Are you ready to enumerate all the 2 220 075 combinations?</span>
<span class="comment-copy">@bipll can you check the new edit please</span>
