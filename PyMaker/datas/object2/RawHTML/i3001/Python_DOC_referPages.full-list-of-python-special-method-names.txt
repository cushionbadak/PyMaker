<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/38344848/is-there-a-comprehensive-table-of-pythons-magic-constants">Is there a comprehensive table of Python's “magic constants”?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I'm wondering if there's a way to list all the special methods (like <code>__getattr__</code>, <code>__lt__</code>) programmatically instead of going to the <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">Python data model documentation</a> and copy paste all of them. Since I can use <code>dir(builtins)</code> to retrieve a list of builtin identifiers, so I was hoping there's also a way for the special methods.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, there isn't a canonical way to get that from the language itself. You're stuck with the documentation (which is not a bad thing).</p>
<p>I mean, you could always do that</p>
<pre><code>&gt;&gt;&gt; import re, requests
&gt;&gt;&gt; set(re.findall('__\w+__', requests.get('https://docs.python.org/3/reference/datamodel.html').text))
set(['__abs__',
     '__add__',
     '__aenter__',
     '__aexit__',
     '__aiter__',
     '__and__',
     '__anext__',
     '__annotations__',
     '__await__',
     '__bases__',
     '__bool__',
     '__bytes__',
     '__call__',
     '__ceil__',
     '__class__',
     '__class_getitem__',
     '__classcell__',
     '__closure__',
     '__code__',
     '__complex__',
     '__contains__',
     '__defaults__',
     '__del__',
     '__delattr__',
     '__delete__',
     '__delitem__',
     '__dict__',
     '__dir__',
     '__divmod__',
     '__doc__',
     '__enter__',
     '__eq__',
     '__exit__',
     '__file__',
     '__float__',
     '__floor__',
     '__floordiv__',
     '__format__',
     '__func__',
     '__future__',
     '__ge__',
     '__get__',
     '__getattr__',
     '__getattribute__',
     '__getitem__',
     '__globals__',
     '__gt__',
     '__hash__',
     '__iadd__',
     '__iand__',
     '__ifloordiv__',
     '__ilshift__',
     '__imatmul__',
     '__imod__',
     '__import__',
     '__imul__',
     '__index__',
     '__init__',
     '__init_subclass__',
     '__instancecheck__',
     '__int__',
     '__invert__',
     '__ior__',
     '__ipow__',
     '__irshift__',
     '__isub__',
     '__iter__',
     '__itruediv__',
     '__ixor__',
     '__kwdefaults__',
     '__le__',
     '__len__',
     '__length_hint__',
     '__lshift__',
     '__lt__',
     '__matmul__',
     '__missing__',
     '__mod__',
     '__module__',
     '__mro__',
     '__mro_entries__',
     '__mul__',
     '__name__',
     '__ne__',
     '__neg__',
     '__new__',
     '__next__',
     '__objclass__',
     '__or__',
     '__pos__',
     '__pow__',
     '__prepare__',
     '__qualname__',
     '__radd__',
     '__rand__',
     '__rdivmod__',
     '__repr__',
     '__reversed__',
     '__rfloordiv__',
     '__rlshift__',
     '__rmatmul__',
     '__rmod__',
     '__rmul__',
     '__ror__',
     '__round__',
     '__rpow__',
     '__rrshift__',
     '__rshift__',
     '__rsub__',
     '__rtruediv__',
     '__rxor__',
     '__self__',
     '__set__',
     '__set_name__',
     '__setattr__',
     '__setitem__',
     '__slots__',
     '__str__',
     '__sub__',
     '__subclasscheck__',
     '__traceback__',
     '__truediv__',
     '__trunc__',
     '__weakref__',
     '__xor__'])
</code></pre>
</div>
<span class="comment-copy"><code>dir(builtins)</code> will also give you <code>quit</code> and <code>exit</code> that are added by <code>site.py</code> but are not actually part of the builr-in functions documentation. -- Edit: Nvm they are actually documented here: <a href="https://docs.python.org/3/library/constants.html#built-in-consts" rel="nofollow noreferrer">docs.python.org/3/library/constants.html#built-in-consts</a></span>
<span class="comment-copy">Related: <a href="https://stackoverflow.com/a/38345345/3001761">stackoverflow.com/a/38345345/3001761</a></span>
<span class="comment-copy">I doubt it.  There's nothing really "special" about the special methods.  You could easily require write a function that required its  inputs to have a <code>__foo__</code> method, and that would be just as meaningful as <code>__len__</code> or <code>__getattr__</code></span>
<span class="comment-copy">Are you doing something with the list in a program? Or just need it as a convenient reference?</span>
<span class="comment-copy">See this, <a href="https://stackoverflow.com/questions/8920341/finding-a-list-of-all-double-underscore-variables" title="finding a list of all double underscore variables">stackoverflow.com/questions/8920341/…</a></span>
<span class="comment-copy">Scraping the docs is how I'd do that too.</span>
