<div class="post-text" itemprop="text">
<p>I have been working on a program which will take a hex file, and if the file name starts with "CID", then it should remove the first 104 characters, and after that point there is a few words. I also want to remove everything after the words, but the problem is the part I want to isolate varies in length.</p>
<p>My code is currently like this:</p>
<pre><code>y = 0
import os
files = os.listdir(".")

filenames = []
for names in files:
    if names.endswith(".uexp"):
        filenames.append(names)
        y +=1
        print(y)
print(filenames)

for x in range(1,y):
    filenamestart = (filenames[x][0:3])
    print(filenamestart)
    if filenamestart == "CID":
        openFile = open(filenames[x],'r')
        fileContents = (openFile.read())
        ItemName = (fileContents[104:])
        print(ItemName)
</code></pre>
<p>Input Example file (pulled from HxD):</p>
<pre><code>.........................ýÿÿÿ................E.................!...1AC9816A4D34966936605BB7EFBC0841.....Sun Tan Specialist.................9.................!...9658361F4EFF6B98FF153898E58C9D52.....Outfit.................D.................!...F37BE72345271144C16FECAFE6A46F2A.....Don't get burned............................................................................................................................Áƒ*ž
</code></pre>
<p>I have got it working to remove the first 104 characters, but I would also like to remove the characters after 'Sun Tan Specialist', which will differ in length, so I am left with only that part.</p>
<p>I appreciate any help that anyone can give me.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way to remove non-alphabetic characters in a string is to use regular expressions [<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer" title="documentation of `re` module in the stdlib">1</a>].</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r'[^a-z]', '', "lol123\t")
'lol'
</code></pre>
<p><strong>EDIT</strong></p>
<p>The first argument <code>r'[^a-z]'</code> is the pattern that captures what will removed (here, by replacing it by an empty string <code>''</code>). The square brackets are used to denote a category (the pattern will match anything in this category), the <code>^</code> is a "not" operator and the <code>a-z</code> denotes all the small caps alphabetiv characters. More information here:</p>
<p><a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#regular-expression-syntax</a></p>
<p>So for instance, to keep also capital letters and spaces it would be:</p>
<pre><code>&gt;&gt;&gt; re.sub(r'[^a-zA-Z ]', '', 'Lol !this *is* a3 -test\t12378')
'Lol this is a test'
</code></pre>
<p>However from the data you give in your question the exact process you need seems to be a bit more complicated than just "getting rid of non-alphabetical characters".</p>
</div>
<div class="post-text" itemprop="text">
<p>You mentioned in a comment that you got the string down to <code>Sun Tan SpecialistFEFFBFFECDOutfitDFBECFECAFEAFADont get burned</code></p>
<p>Essentially your goal at this point is to remove any uppercase letter that isn't immediately followed by a lowercase letter because Upper Lower indicates the start of a phrase. You can use a for loop to do this.</p>
<pre><code>import re

h =  "Sun Tan SpecialistFEFFBFFECDOutfitDFBECFECAFEAFADont get burned"

output = ""
for i in range(0, len(h)):
    # Keep spaces
    if h[i] is " ":
        output += h[i]
    # Start of a phrase found, so separate with space and store character
    elif h[i].isupper() and h[i+1].islower():
        output += " " + h[i]
    # We want all lowercase characters
    elif h[i].islower():
        output += h[i]

# [1:] because we appended a space to the start of every word
 print output[1:]
 # If you dont care about Outfit since it is always there, remove it
 print output[1:].replace("Outfit", "")
</code></pre>
<p>Output:</p>
<p>Sun  Tan  Specialist Outfit Dont get burned</p>
<p>Sun  Tan  Specialist  Dont get burned</p>
</div>
<span class="comment-copy">Your question title is "remove non-alphabetic characters from a string".  From the content of your question, it seems there are many more requirements thatn just that.  Please clarify with a sample input, desired output, and a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">I have added an example file and what I would like the output to be</span>
<span class="comment-copy">So what is your desired output? Just <code>Sun Tan Specialist</code>?</span>
<span class="comment-copy">Try something like <code>re.sub(r'(.*?)(\..*)', r'\1', s[104:])</code></span>
<span class="comment-copy">At this point yes, but ideally I would like: "Sun Tan Specialist | Don't get burned"</span>
<span class="comment-copy">This may be a possibility, however I also want to keep capital letters and spaces, how would I do this?</span>
<span class="comment-copy">@A.Domni see edit for capital letters and spaces</span>
