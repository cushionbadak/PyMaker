<div class="post-text" itemprop="text">
<p>I have a multi-dtype series <code>pd.Series</code> like <code>[100, 50, 0, foo, bar, baz]</code></p>
<p>when I run <code>pd.Series.str.isnumeric()</code></p>
<p>I get <code>[NaN, NaN, NaN, False, False, False]</code></p>
<p>Why is this happening? Shouldn't it return <code>True</code> for the first three in this series?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pandas string methods follow Python methods closely:</p>
<pre><code>str.isnumeric(100)    # TypeError
str.isnumeric('100')  # True
str.isnumeric('a10')  # False
</code></pre>
<p>Any type which yields an error will give <code>NaN</code>. As per the Python <a href="https://docs.python.org/3/library/stdtypes.html#str.isnumeric" rel="nofollow noreferrer">docs</a>, <code>str.isnumeric</code> is only applicable for strings:</p>
<blockquote>
<p><strong>str.isnumeric()</strong><br/> Return true if all characters in the string are numeric characters, and there is at least one character, false
  otherwise.</p>
</blockquote>
<p>As per the Pandas <a href="https://pandas.pydata.org/pandas-docs/version/0.22/generated/pandas.Series.str.isnumeric.html" rel="nofollow noreferrer">docs</a>, <code>pd.Series.str.isnumeric</code> is equivalent to <code>str.isnumeric</code>:</p>
<blockquote>
<p><strong>Series.str.isnumeric()</strong><br/> Check whether all characters in each string in the Series/Index are numeric. Equivalent to <code>str.isnumeric()</code>.</p>
</blockquote>
<p>Your series has "object" dtype, this is an all-encompassing type which holds pointers to arbitrary Python objects. These may be a mixture of strings, integers, etc. Therefore, you should expect <code>NaN</code> values where strings are not found.</p>
<p>To accommodate numeric types, you need to convert to strings explicitly, e.g. given a series <code>s</code>:</p>
<pre><code>s.astype(str).str.isnumeric()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using the string accessor is converting your numbers to <code>NaN</code>, it is happening before you even try to use <code>isnumeric</code>:</p>
<pre><code>s = pd.Series([100, 50, 0, 'foo', 'bar', 'baz'])
s.str[:]

0    NaN
1    NaN
2    NaN
3    foo
4    bar
5    baz
dtype: object
</code></pre>
<p>So the <code>NaN</code>'s remain when you use <code>isnumeric</code>.  Use <strong><code>astype</code></strong> first instead:</p>
<pre><code>s.astype(str).str.isnumeric()

0     True
1     True
2     True
3    False
4    False
5    False
dtype: bool
</code></pre>
</div>
<span class="comment-copy">show the code you're actually running, otherwise is hard to tell</span>
<span class="comment-copy">Running <code>pd.Series.str.isnumeric()</code> should give you an error.</span>
<span class="comment-copy">Ok. I think this answers it. So my Series is reading in as an Object dtype, but the actual values are some strings and some int, so the int values are evaluated to nan since they are not strings.</span>
<span class="comment-copy">@Andrew, Yup, that's exactly the case, I updated my answer with a more detailed description.</span>
<span class="comment-copy">Thanks. This answers my question but @jpp answered it first.</span>
