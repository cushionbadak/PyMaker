<div class="post-text" itemprop="text">
<p>My code determines if the contents of the file returns <code>True</code> or <code>False</code> and output the results to a .csv. </p>
<p>I would like to write the filename also to the csv in the same row. </p>
<p><strong>Error message</strong></p>
<pre class="lang-none prettyprint-override"><code>for i in range(vt_result_file):
NameError: name 'vt_result_file' is not defined
</code></pre>
<p><strong>Code</strong></p>
<pre><code>import os
import json
import csv

path=r'./output/'
csvpath='C:/Users/xxx/Documents/csvtest'
file_n = 'file.csv'

def vt_result_check(path):
    vt_result = False
    for filename in os.listdir(path):
        with open(path + filename, 'r') as vt_result_file:
            vt_data = json.load(vt_result_file)

        # Look for any positive detected referrer samples
        # Look for any positive detected communicating samples
        # Look for any positive detected downloaded samples
        # Look for any positive detected URLs
        sample_types = ('detected_referrer_samples', 'detected_communicating_samples',
                        'detected_downloaded_samples', 'detected_urls')
        vt_result |= any(sample['positives'] &gt; 0 for sample_type in sample_types
                                                 for sample in vt_data.get(sample_type, []))

        # Look for a Dr. Web category of known infection source
        vt_result |= vt_data.get('Dr.Web category') == "known infection source"

        # Look for a Forecepoint ThreatSeeker category of elevated exposure
        # Look for a Forecepoint ThreatSeeker category of phishing and other frauds
        # Look for a Forecepoint ThreatSeeker category of suspicious content
        threats = ("elevated exposure", "phishing and other frauds", "suspicious content")
        vt_result |= vt_data.get('Forcepoint ThreatSeeker category') in threats

    return str(vt_result)


if __name__ == '__main__':
    with open(file_n, 'w') as output:
        for i in range(vt_result_file):
            output.write(vt_result_file, vt_result_check(path))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are getting the error because you're trying to use a variable, <code>vt_result_file</code>, that is not in scope--it doesn't exist in the part of the script that you're trying to access it in. You are trying to use it here, presumably to loop over a set of files:</p>
<pre><code>    for i in range(vt_result_file):
        output.write(vt_result_file, vt_result_check(path))
</code></pre>
<p>but <code>vt_result_file</code> only exists in the <code>vt_result_check</code> function, which hasn't even been called when you try to use the variable in <code>for i in range(vt_result_file)</code>.</p>
<p>You're also duplicating work, as your <code>vt_result_check</code> function iterates through all the files in a directory, so you don't need to do the same thing to get the results.</p>
<p>It looks as though your main function is also not working correctly, as you're iterating through the files, setting the contents to <code>vt_data</code>, but you only do further analysis on the last set of data:</p>
<pre><code>    with open(path + filename, 'r') as vt_result_file:
        # this is done for every file
        vt_data = json.load(vt_result_file)

    # check the indentation level of the code
    # it'll only run on the last value of vt_data
    sample_types = ('detected_referrer_samples', 'detected_communicating_samples',
                    'detected_downloaded_samples', 'detected_urls')
    vt_result |= any(sample['positives'] &gt; 0 for sample_type in sample_types
                                             for sample in vt_data.get(sample_type, []))
</code></pre>
<p>I think you probably want to run the analysis code on every file, and then save the result for each file. An easy way to do this is using a dictionary -- see <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#mapping-types-dict</a>  Here's a suggestion for how to restructure your code:</p>
<pre><code>def vt_result_check(path):

    # initialise an empty dictionary for your results
    results = {}

    sample_types = ('detected_referrer_samples', 'detected_communicating_samples',
                            'detected_downloaded_samples', 'detected_urls')
    threats = ("elevated exposure", "phishing and other frauds", "suspicious content")

    for filename in os.listdir(path):
        with open(path + filename, 'r') as vt_result_file:
            # set this to false for each file
            vt_result = False
            vt_data = json.load(vt_result_file)

            # do all your analysis here
            vt_result |= any(sample['positives'] &gt; 0 for sample_type in sample_types
                                                     for sample in vt_data.get(sample_type, []))

            # Look for a Dr. Web category of known infection source
            vt_result |= vt_data.get('Dr.Web category') == "known infection source"

            # Look for a Forecepoint ThreatSeeker category of elevated exposure
            # Look for a Forecepoint ThreatSeeker category of phishing and other frauds
            # Look for a Forecepoint ThreatSeeker category of suspicious content
            vt_result |= vt_data.get('Forcepoint ThreatSeeker category') in threats

            # save the file name and the result in your dict
            results[vt_result_file] = str(vt_result)

    # return the dictionary
    return results
</code></pre>
<p>You can then print out your results as follows:</p>
<pre><code>if __name__ == '__main__':
    result_dict = vt_result_check(path)
    with open(file_n, 'w') as output:
        for i in result_dict:
            output.write(i + ": " + result_dict[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>vt_result_file</code> only exists as a <strong>local</strong> variable to <code>vt_result_check</code>, your error is saying this variable does not exist at the bottom of the file. </p>
<p>Plus, (even though it doesn't matter) you are referring to that variable before you called the function that creates that variable. </p>
<hr/>
<p>There is nothing you are looping over in the main function area. And your <code>check</code> function only returns a single value. </p>
<p>Therefore, you can only write out one CSV row</p>
<pre><code>if __name__ == '__main__':
    with open(file_n, 'w') as output:
        writer = csv.writer(output)
        writer.writerow([file_n, vt_result_check(path)])
</code></pre>
<hr/>
<p><strong>Edit</strong></p>
<p>Regarding your comment, you want something like this</p>
<pre><code>with open(file_n, 'w') as output:  # Open the CSV file
    writer = csv.writer(output)
    for filename in os.listdir(path):  # Loop over all files to check
        full_filename = path + filename
        with open(full_filename, 'r') as vt_result_file: 
            # Load the file and check it 
            vt_data = json.load(vt_result_file)
            writer.writerow([full_filename, check_file(full_filename)])
</code></pre>
</div>
<span class="comment-copy">what is the error you're getting?</span>
<span class="comment-copy">for i in range(vt_result_file): NameError: name 'vt_result_file' is not defined</span>
<span class="comment-copy">Do you want a true/false for each file that you examine? I think your <code>for</code> loop nesting might be adrift.</span>
<span class="comment-copy">What are you trying to loop over? That variable doesn't exist...</span>
<span class="comment-copy">That variable doesn't exist in the scope you're trying to use it. It only exists within the <code>with</code> block in the <code>vt_result_check</code> function</span>
<span class="comment-copy">@i_alarmed_alien Thanks for your help! After implementing your suggestions I'm now getting these two error messages:  File "/7_27_python_script.py", line 35, in &lt;module&gt;     result_dict = vt_result_check(path)   File "7_27_python_script.py", line 26, in vt_result_check     vt_result |= vt_data.get('Forcepoint ThreatSeeker category') in threats NameError: name 'threats' is not defined</span>
<span class="comment-copy">I cut out a load of your code -- you will need to reinstate the lines that I removed. I will edit my answer.</span>
<span class="comment-copy">@bedford please accept the answer and/or vote it up if it was helpful.</span>
<span class="comment-copy">Thanks for your help! I actually want the vt_result_file listed in the csv since I would like to display the name of the file that I'm checking to be true or false.</span>
<span class="comment-copy">Then you need to completely rewrite your code so that <code>vt_result_check</code> takes <b>one file</b>, instead of looping over a path. In other words, you need to move <code>for filename in os.listdir(path)</code> <b>outside</b> of that function. -- See updated answer</span>
