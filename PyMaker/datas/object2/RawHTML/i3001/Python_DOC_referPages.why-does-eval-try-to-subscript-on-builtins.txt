<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; eval('potato', {'__builtins__': None})
NameError: name 'potato' is not defined
</code></pre>
<p>Python 2.  Makes sense.</p>
<pre><code>&gt;&gt;&gt; eval('potato', {'__builtins__': None})
TypeError: 'NoneType' object is not subscriptable
</code></pre>
<p>Python 3. How/why does <code>eval</code> try to subscript <code>None</code>?  I expected the same <code>NameError</code> here, or perhaps an <code>AttributeError: 'NoneType' object has no attribute 'potato'</code>.</p>
<p><sub>Encountered via <a href="https://stackoverflow.com/q/51659933/674039">Python eval error</a></sub></p>
</div>
<div class="post-text" itemprop="text">
<p>From the <code>eval(expression, globals=None, locals=None)</code> <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>If the globals dictionary is present and lacks ‘<code>__builtins__</code>’, the
  current globals are copied into globals before expression is parsed.
  This means that expression normally has full access to the standard
  <code>__builtin__</code> module and restricted environments are propagated.</p>
</blockquote>
<p>But you are setting <code>__builtins__</code> to <code>None</code> in the globals dictionary, so your code will evaluate to <code>None['potato']</code> which leads to:</p>
<pre><code>TypeError: 'NoneType' object is not subscriptable
</code></pre>
<p>EDIT:</p>
<p>Python2.7 raises <code>NameError</code> if it doesn't find the variable in <code>__builtins__</code> - <a href="https://github.com/certik/python-2.7/blob/master/Python/ceval.c#L2058" rel="nofollow noreferrer">source code</a>. <code>NAME_ERROR_MSG</code> is defined as:</p>
<pre><code>#define NAME_ERROR_MSG \
"name '%.200s' is not defined"
</code></pre>
<p>Python3 print different message - see <a href="https://github.com/python/cpython/blob/master/Python/ceval.c#L2189" rel="nofollow noreferrer">source</a> - the <code>PyObject_GetItem</code> will not raise <code>KeyError</code> but <code>TypeError</code> so the string is formatted differently, in this case <code>TypeError: 'NoneType' object is not subscriptable</code></p>
<p>In CPython, the name <code>__builtins__</code> can be bound to a module or a dictionary.  That is <a href="https://docs.python.org/3/reference/executionmodel.html#builtins-and-restricted-execution" rel="nofollow noreferrer">documented under the execution model</a>:</p>
<blockquote>
<p>The builtins namespace associated with the execution of a code block is actually found by looking up the name <code>__builtins__</code> in its global namespace; this should be a dictionary or a module (in the latter case the module’s dictionary is used).</p>
</blockquote>
</div>
<span class="comment-copy">@wim But you aren't assigning into <code>None</code>, Python needs firstly load the variable. But it cannot load it from None.</span>
<span class="comment-copy">@wim I linked the source code for Python2.7 and Python3. It's clearly seen, that Python2 formats the string in all cases, but Python3 only when KeyError is thrown.</span>
