<div class="post-text" itemprop="text">
<p>This is rather a unusual use case where I had to make a legacy system to work.</p>
<p>I have Windows batch script like following named 'batch_test.bat' (example only):</p>
<pre><code>@echo OFF
set /P choice=Enter your choice: 

if /I "%choice%" == "N" (
    echo "Don't proceed"
)

if /I "%choice%" == "Y" (
    echo "Proceed"
)
if /I "%choice%" == "C" (
    echo "Cancel"

)
EXIT /B 0
</code></pre>
<p>I have following python code (sample):</p>
<pre><code>import os

os.system('batch_test.bat')
</code></pre>
<p>Question is how do I feed the choice batch script is expecting from Python? I did some look up but could not find the appropriate answer.</p>
<p>thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>subprocess.Popen</code> to provide input to a process:</p>
<pre><code>from subprocess import Popen, PIPE
p = Popen('batch_test.bat', stdin=PIPE, stdout=PIPE)
output, _ = p.communicate(b'Y\n')
</code></pre>
</div>
<span class="comment-copy">If you read the docs for <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer"><code>os.system</code></a>: "The <code>subprocess</code> module provides more powerful facilities… using that module is preferable to using this function…" If you want to control the stdin of a program, or capture its stdout, or run it safely without using the shell, or anything else, use <code>subprocess</code>, not <code>os.system</code>.</span>
<span class="comment-copy">And notice that the docs linked to from that paragraph, <a href="https://docs.python.org/3/library/subprocess.html#subprocess-replacements" rel="nofollow noreferrer">Replacing Older Functions with the <code>subprocess</code> Module</a>, include examples that feed input into other programs, exactly what you haven't been able to find.</span>
<span class="comment-copy">Note that <code>echo "some text"</code> includes the quotes in the output...</span>
<span class="comment-copy">This worked! Deep within I found some doc that explains it in subtle way: <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html#subprocess.Popen</a></span>
