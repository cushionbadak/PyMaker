<div class="post-text" itemprop="text">
<p>I am new to the programming. I have a list. List contains multiple spaces. All the multiple spaces should be replaced with single space.</p>
<pre><code>lis = ['h','e','l','l','','','','','o','','','','w']

output = ['h','e','l','l','','o','','w']
</code></pre>
<p>Could anyone tell how to do?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension with <code>enumerate</code> 
and select only those <code>''</code> which 
follow non-empty characters themselves </p>
<pre><code>[c for i, c in enumerate(lis) if c or (not c and lis[i - 1])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools</code>. The idea here is to group according whether strings are empty, noting <code>bool('') == False</code>.</p>
<pre><code>from itertools import chain, groupby

L = (list(j) if i else [''] for i, j in groupby(lis, key=bool))

res = list(chain.from_iterable(L))

print(res)

['h', 'e', 'l', 'l', '', 'o', '', 'w']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use <code>zip()</code> within a list comprehension as following:</p>
<pre><code>In [21]: lis = ['', '', 'h','e','l','l','','','','','o','','','','w', '', '']

In [22]: lis[:1] + [j for i, j in zip(lis, lis[1:]) if i or j]
Out[22]: ['', 'h', 'e', 'l', 'l', '', 'o', '', 'w', '']
</code></pre>
<p>In this case we're looping over each pair an keeping the second item if one of the items in our pair is valid (not empty). You just then need to add the first item to the result because it's omitted.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not just a for loop?</p>
<pre><code>new_list = []
for char in lis:
    if char == '' and new_list[-1] == '': continue
    new_list.append(char)
</code></pre>
<p>Outputs</p>
<pre><code>['h', 'e', 'l', 'l', '', 'o', '', 'w']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just simple list comprehension will suffice:</p>
<pre><code>lis = ['h','e','l','l','','','','','o','','','','w']

output = [v for i, v in enumerate(lis) if v != '' or i == 0 or (v == '' and lis[i-1] != '')]
print(output)
</code></pre>
<p>This will print:</p>
<pre><code>['h', 'e', 'l', 'l', '', 'o', '', 'w']
</code></pre>
</div>
<span class="comment-copy">If possible, Can you tell me how to do without using inbuilt libraries?</span>
<span class="comment-copy">@merkle Use the equivalent implementations from the <code>itertools</code> docs: <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a></span>
