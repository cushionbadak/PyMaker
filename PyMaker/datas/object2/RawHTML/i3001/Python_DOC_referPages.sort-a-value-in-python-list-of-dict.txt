<div class="post-text" itemprop="text">
<p>I am looking to sort a list of dictionary based on a key which is in the format \d+:\d+</p>
<p>The list of dictionary should have the expected key(age)</p>
<pre><code>lst = [
[{'id': 'SOMEDATA_31_30', 'age': '31:30', 'values':0, 'hasdata': False, 'name': u'SOMEDATA'}]
[{'id': 'SOMEDATA1_32_29', 'age': '32:29', 'values':1, 'hasdata': False, 'name': u'SOMEDATA1'}]
[{'id': 'SOMEDATA2_22_20', 'age': '22:20', 'values':3, 'hasdata': False, 'name': u'SOMEDATA2'},{'id': 'SOMEDATA2_28_27', 'age': '28:27', 'values':4, 'hasdata': False, 'name': u'SOMEDATA2'}]
]
</code></pre>
<p>So when I pass the whole(lst) to compare(function?!) then it should give me a list of dict ordered in desc order based on the age.</p>
<pre><code>lst = [
    {'id': 'SOMEDATA1_32_29', 'age': '32:29', 'values':1, 'hasdata': False, 'name': u'SOMEDATA1'}
    {'id': 'SOMEDATA_31_30', 'age': '31:30', 'values':0, 'hasdata': False, 'name': u'SOMEDATA'}
    {'id': 'SOMEDATA2_28_27', 'age': '28:27', 'values':4, 'hasdata': False, 'name': u'SOMEDATA2'}
    {'id': 'SOMEDATA2_22_20', 'age': '22:20', 'values':3, 'hasdata': False, 'name': u'SOMEDATA2'}
    ]
</code></pre>
<p>How should we do this ? Thanks for your time. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">sorted()</a>.</p>
<pre><code>lst = [
{'id': 'SOMEDATA_31_30', 'age': '31:30', 'values':0, 'hasdata': False, 'name': u'SOMEDATA'},
{'id': 'SOMEDATA1_32_29', 'age': '32:29', 'values':1, 'hasdata': False, 'name': u'SOMEDATA1'},
{'id': 'SOMEDATA2_22_20', 'age': '22:20', 'values':3, 'hasdata': False, 'name': u'SOMEDATA2'},
{'id': 'SOMEDATA2_28_27', 'age': '28:27', 'values':4, 'hasdata': False, 'name': u'SOMEDATA2'},
]

newlist = sorted([x[0] for x in lst], key=lambda k: k['age'], reverse=True)

print(newlist)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[{'age': '32:29', 'hasdata': False, 'id': 'SOMEDATA1_32_29','name': 'SOMEDATA1', 'values': 1},
 {'age': '31:30','hasdata': False, 'id': 'SOMEDATA_31_30','name': 'SOMEDATA', 'values': 0},
 {'age': '28:27', 'hasdata': False, 'id': 'SOMEDATA2_28_27','name':'SOMEDATA2','values': 4},
 {'age': '22:20', 'hasdata': False, 'id': 'SOMEDATA2_22_20','name': 'SOMEDATA2','values': 3}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using the <code>key</code> and <code>reverse</code> argument of python built-in function <code>sorted()</code>:</p>
<pre><code>lst = [
{'id': 'SOMEDATA_31_30', 'age': '31:30', 'values':0, 'hasdata': False, 'name': u'SOMEDATA'},
{'id': 'SOMEDATA1_32_29', 'age': '32:29', 'values':1, 'hasdata': False, 'name': u'SOMEDATA1'},
{'id': 'SOMEDATA2_22_20', 'age': '22:20', 'values':3, 'hasdata': False, 'name': u'SOMEDATA2'},
{'id': 'SOMEDATA2_28_27', 'age': '28:27', 'values':4, 'hasdata': False, 'name': u'SOMEDATA2'},
]

import re
from pprint import pprint


pprint( sorted(lst, reverse=True, key=lambda v: [(int(i[0]), int(i[1])) for i in re.findall(r'(\d+):(\d+)', v['age'])]), width=120 )
</code></pre>
<p>This prints:</p>
<pre><code>[{'age': '32:29', 'hasdata': False, 'id': 'SOMEDATA1_32_29', 'name': 'SOMEDATA1', 'values': 1},
 {'age': '31:30', 'hasdata': False, 'id': 'SOMEDATA_31_30', 'name': 'SOMEDATA', 'values': 0},
 {'age': '28:27', 'hasdata': False, 'id': 'SOMEDATA2_28_27', 'name': 'SOMEDATA2', 'values': 4},
 {'age': '22:20', 'hasdata': False, 'id': 'SOMEDATA2_22_20', 'name': 'SOMEDATA2', 'values': 3}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using NumPy you can try this:</p>
<pre><code>ages = [i['age'] for i in lst]
print (np.array(lst)[np.argsort(ages)[::-1]])
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[ {'id': 'SOMEDATA1_32_29', 'age': '32:29', 'values': 1, 'hasdata': False, 'name': 'SOMEDATA1'}
 {'id': 'SOMEDATA_31_30', 'age': '31:30', 'values': 0, 'hasdata': False, 'name': 'SOMEDATA'}
 {'id': 'SOMEDATA2_28_27', 'age': '28:27', 'values': 4, 'hasdata': False, 'name': 'SOMEDATA2'}
 {'id': 'SOMEDATA2_22_20', 'age': '22:20', 'values': 3, 'hasdata': False, 'name': 'SOMEDATA2'}]
</code></pre>
</div>
<span class="comment-copy">The <code>age</code> gives me an <code>invalid syntax</code> because of <code>:</code></span>
<span class="comment-copy">Is the <code>age</code> value stored as a string? The code you currently have fails with <code>Invalid syntax</code> because of the colons.</span>
<span class="comment-copy">Your <code>age</code> values are invalid Python values to begin with. If they are strings, you can just use lexicographical ordering.</span>
<span class="comment-copy">Just made them to strings. Sorry my fault.</span>
<span class="comment-copy">This won't sort properly if the number of characters differ in different ages (consider <code>8:00</code> as a possible age value, this script would put it at the start of the reversed array).</span>
<span class="comment-copy">What if it is a list of list with dictionary with in each list? have update the question.</span>
<span class="comment-copy">@user1958532 i update my answer</span>
