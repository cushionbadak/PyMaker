<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2970520/string-count-with-overlapping-occurrences">string count with overlapping occurrences</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>Why is this giving output as 1 and not 2:</p>
<pre><code>string = "ABCDCDC"
print(string.count("CDC"))
</code></pre>
<p>Also, since this is not working, how can I get 2 in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an algorithmic solution</p>
<pre><code>string = "ABCDCDC"
sub_string = "CDC"

count = 0
for i in range(len(string)):
    if string[i:len(sub_string)+i] == sub_string:
        count += 1 
print count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a regular expression to count overlapping substrings:</p>
<pre><code>import re
string = "ABCDCDC"
print(len(re.findall('(?=CDC)', string))) # 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
print([m.start() for m in re.finditer('(?=CDC)', 'ABCDCDC')])
</code></pre>
<p>This should find all potentially overlapping occurences</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this simple way: </p>
<pre><code>def overlapping_count(string, seek):
    seek_len = len(seek)
    return sum(c == seek[0] and string[i:i + seek_len] == seek
                  for i, c in enumerate(string))
string = "ABCDCDC"
print(overlapping_count(string, "CDC"))
</code></pre>
</div>
<span class="comment-copy">Because <code>count</code> method doesn't take overlapping substrings into account.</span>
<span class="comment-copy">@Kasramvd okay, but then how do I count overlapping substrings?</span>
<span class="comment-copy">Don't use <code>string</code> as a variable name</span>
<span class="comment-copy">@user3483203 what's so bad about using <code>string</code> as a variable name? I'd be more worried about using <code>str</code> as a variable name, since that is a built-in function.</span>
<span class="comment-copy">@Joel <code>string</code> is a module <a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer">docs.python.org/3/library/string.html</a></span>
