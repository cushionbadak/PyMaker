<div class="post-text" itemprop="text">
<p>I am attempting to start a simple HTTP web server in python and then ping it with the selenium driver. I can get the web server to start but it "hangs" after the server starts even though I have started it in a new thread.</p>
<pre><code>from socket import *
from selenium import webdriver
import SimpleHTTPServer
import SocketServer
import thread


def create_server():
    port = 8000
    handler = SimpleHTTPServer.SimpleHTTPRequestHandler
    httpd = SocketServer.TCPServer(("", port), handler)
    print("serving at port:" + str(port))
    httpd.serve_forever()


thread.start_new_thread(create_server())

print("Server has started. Continuing..")

browser = webdriver.Firefox()
browser.get("http://localhost:8000")

assert "&lt;title&gt;" in browser.page_source
thread.exit()
</code></pre>
<p>The server starts but the script execution stops after the server has started. The code after I start the thread is never executed. </p>
<p>How do I get the server to start and then have the code continue execution? </p>
</div>
<div class="post-text" itemprop="text">
<p>Start your thread with function <code>create_server</code> (without calling it <code>()</code>):</p>
<pre><code>thread.start_new_thread(create_server, tuple())
</code></pre>
<p>If you call <code>create_server()</code>, it will stop at <code>httpd.serve_forever()</code>.</p>
</div>
<span class="comment-copy">You are executing <code>create_server()</code> before you <code>start_new_thread</code> - which  will execute <code>serve_forever()</code> and you are stuck. Put it inside <code>lambda</code> for example.</span>
<span class="comment-copy">If the thread never finishes its task, it shouldn't progress beyond the line where it starts.</span>
<span class="comment-copy">You should use <code>thread.start_new_thread(create_server)</code> (notice the missing brackets) because otherwise you'd be calling the function itself instead of having the threading code do that for you. Even better, use the <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer"><code>threading</code></a> module for a far more comfortable higher level interface for threads.</span>
<span class="comment-copy">That worked perfectly! Thank you.</span>
