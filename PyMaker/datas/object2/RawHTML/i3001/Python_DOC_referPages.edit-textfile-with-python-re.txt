<div class="post-text" itemprop="text">
<p>I have a large textfile (&gt;200mb) with 70k rows. Now I want to find some special text in each row an place it again at the end of each row (separated with a $-symbol). N++ and Regex works, but is a bit slow, so I want try it with python.</p>
<p>With the code I'll get a "TypeError: must be str, not list" for fn.write(text+run+"\n")</p>
<pre><code>import re

with open('Testfile.txt', mode='r', encoding='utf-8', errors='ignore') as f:
    for line in f.readlines():
        text = line.replace("\n","$")
        run = re.findall(r'Typ: (.*?);', line) or "0"
        print(text+run)

        with open ("NEWTest.txt", mode="w") as fn:
            fn.write(text+run+"\n")
</code></pre>
<p>Does anyone know the error and also knows if there is an even faster way (code)?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code> returns a list of strings</a> - i.e. all matches found in the text given to it.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall(r'Typ: (.*?);', 'Typ: foobar;')
['foobar']
</code></pre>
<p>To include it again at the end, you can join all the matches together:</p>
<pre><code> fn.write(text + ''.join(run) + "\n")
</code></pre>
<p>If you only want one match, you can use <code>re.search</code> instead:</p>
<pre><code>&gt;&gt;&gt; re.search(r'Typ: (.*?);', 'Typ: foobar;').group(1)
'foobar'
</code></pre>
<p>It works with your example:</p>
<pre><code>&gt;&gt;&gt; re.search(r'Typ: (.*?);', 'Typ: Mehrfamilienhaus;').group(1)
'Mehrfamilienhaus'
</code></pre>
<p>But since <code>re.search</code> will give <code>None</code> if there isn't a match, you can check that you get a proper match before attempting to retrieve the <code>group</code> (as you do in your <code>findall</code> above):</p>
<pre><code>result = re.search(r'Typ: (.*?);', 'Typ: Mehrfamilienhaus;')
run = result.group(1) if result else '0'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try </p>
<pre><code>import re

with open('Testfile.txt', mode='r', encoding='utf-8', errors='ignore') as f:
    for line in f.readlines():
        text = line.replace("\n","$")
        run = re.findall(r'Typ: (.*?);', line) or "0"


        with open ("NEWTest.txt", mode="w") as fn:
            fn.write(text + ''.join(run) + "\n")
</code></pre>
<p><strong>Or</strong> </p>
<pre><code>with open('Testfile.txt', mode='r', encoding='utf-8', errors='ignore') as f:
    for line in f.readlines():
        text = line.replace("\n","$")
        run = re.search(r'Typ: (.*?);', line) or "0"


        with open ("NEWTest.txt", mode="w") as fn:
            fn.write(text + run + "\n")
</code></pre>
</div>
<span class="comment-copy">You should have posted the error and highlighted the line number. Beside try <code>print(type(line))</code> check if it is <code>str</code></span>
<span class="comment-copy">I edit my post. print(type(line)) = each line is a str.</span>
<span class="comment-copy">so here. <code>text = line.replace("\n","$")</code> or <code>run = re.findall(r'Typ: (.*?);', line) or "0"</code> is returning a list. please add a print statement for both <code>text</code> and <code>run</code> and check.</span>
<span class="comment-copy">print text and run separately works fine, print text+run give's an error: TypeError: can only concatenate list (not "str") to list</span>
<span class="comment-copy">As highlighted by @MatsLindh Use <code>fn.write(text + ''.join(run) + "\n")</code> inplace of <code>fn.write(text+run+"\n")</code>.</span>
<span class="comment-copy">I tried with search and print and it don't work: AttributeError: 'NoneType' object has no attribute 'group'. If I leave the group statement my Output shows like: &lt;_sre.SRE_Match object; span=(117, 139), match='Typ: Mehrfamilienhaus;'&gt;. But I only want to get "Mehrfamilienhaus".</span>
<span class="comment-copy">In that case it sounds like you also have lines that doesn't match the regex. The one you've included gives a patch. I've updated the answer with how to check that as well.</span>
<span class="comment-copy">that works fine too. thanks.</span>
<span class="comment-copy">Both scripts don't work. 1. error is TypeError: must be str, not list. And 2. error is TypeError: must be str, not _sre.SRE_Match</span>
<span class="comment-copy">@JuliGoe Can try the answer now.</span>
<span class="comment-copy">Now the first one works fine. Thanks. I have also found another mistake: I have to use mode "a" instead of "w".</span>
<span class="comment-copy">Cool. You can upvote the answer if it was helpful.</span>
