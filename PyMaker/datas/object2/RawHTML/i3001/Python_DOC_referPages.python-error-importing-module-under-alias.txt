<div class="post-text" itemprop="text">
<p>I am getting this error:</p>
<blockquote>
<p>/sw/lib/python2.7/site-packages/matplotlib/backends/backend_macosx.py:235:
  UserWarning: Python is not installed as a framework. The MacOSX
  backend may not work correctly if Python is not installed as a
  framework. Please see the Python documentation for more information on
  installing Python as a framework on Mac OS X</p>
</blockquote>
<p>I installed python27 using fink and it's using the default matplotlib is using macosx framework.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways Python can be built and installed on Mac OS X.  One is as a traditional flat Unix-y shared library.  The other is known as a <code>framework</code> install, a file layout similar to other frameworks on OS X where all of the component directories (<code>include</code>, <code>lib</code>, <code>bin</code>) for the product are installed as subdirectories under the main framework directory.  The <code>Fink</code> project installs Pythons using the Unix shared library method.  Most other distributors, including the Apple-supplied Pythons in OS X, the <code>python.org</code> installers, and the <code>MacPorts</code> project, install <code>framework</code> versions of Python.  One of the advantages of a framework installation is that it will work properly with various OS X API calls that require a window manager connection (generally GUI-related interfaces) because the Python interpreter is packaged as an app bundle within the framework.</p>
<p>If you do need the functions in matplotlib that require the GUI functions, the simplest approach may be to switch to MacPorts which also packages matplotlib (<code>port py27-matplotlib</code>) and its dependencies.  If so, be careful not to mix packages between <code>Fink</code> and <code>MacPorts</code>.  It's best to stick with one or the other unless you are really careful. Adjust your shell path accordingly; it would be safest to remove all of the Fink packages and install MacPorts versions.</p>
</div>
<div class="post-text" itemprop="text">
<p>Some users may not want to change the backend for all of their scripts.  This page -- <a href="http://matplotlib.org/faq/usage_faq.html#what-is-a-backend" rel="noreferrer">http://matplotlib.org/faq/usage_faq.html#what-is-a-backend</a> -- tells another way:  </p>
<pre><code>import matplotlib
matplotlib.use('TkAgg')
</code></pre>
<p>You have to do this before importing a subpackage of <code>matplotlib</code> or a third-party package that depends on <code>matplotlib</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Optionally you could use the <code>Agg</code> backend which requires no extra installation of anything. Just put <code>backend : Agg</code> into <code>~/.matplotlib/matplotlibrc</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This shows up for me when switching to OSX 10.10 (Yosemite).  I fixed it by switching to the WXAgg backend.</p>
<pre><code>fink install wxpython300-py27
mkdir ~/.matplotlib
echo "backend : WXAgg" &gt;&gt;~/.matplotlib/matplotlibrc
</code></pre>
<p><a href="http://matplotlib.org/1.3.0/faq/usage_faq.html#what-is-a-backend">http://matplotlib.org/1.3.0/faq/usage_faq.html#what-is-a-backend</a></p>
<p>If the matplotlibrc file is not found there, put matplotlibrc and check the location with:</p>
<pre><code>import matplotlib as mpl
mpl.get_configdir()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I hit this problem using the Anaconda distribution of Python on my computer and a virtual conda environment with Python 3.4. </p>
<p>After doing "pip install matplotlib", I could import matplotlit in my code fine, but it would give an error when I tried to plot images. </p>
<p>So I went back to the Terminal and used the recommended conda command for Anaconda Python ("conda install matplotlib"), and the issue resolved itself (keep in mind this was all within an environment that I had created using the conda command tool at <a href="http://conda.pydata.org/docs/using/envs.html" rel="noreferrer">http://conda.pydata.org/docs/using/envs.html</a>). My system is running Mac OSX 10.10.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>Import the library by following code sequences works for me. With this does not need to create new folder:</p>
<pre><code>import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm running OSX 10.14 with Python 3.7.1 installed with <a href="https://github.com/pyenv/pyenv" rel="nofollow noreferrer">pyenv</a>.</p>
<p>I could not get any of the <a href="https://matplotlib.org/faq/usage_faq.html#what-is-a-backend" rel="nofollow noreferrer">backends</a> listed in the other answers to work for me (<code>TkAgg</code>, <code>WXAgg</code>, <code>macosx</code>).</p>
<p>Instead what worked is the newer <code>Qt5Agg</code> backend, installed with <code>pip install pyqt5</code>, and then creating a <code>~/.matplotlib/matplotlibrc</code> file containing <code>backend: Qt5Agg</code> (per the other answers).</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are facing the same problem even after adding <code>"backend: TkAgg"</code> in <code>~/.matplotlib/matplotlibrc</code> their might a problem with your virtual environment.</p>
<p>So if your are on python3 use <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">venv</a> instead of virtualenv.</p>
<p>To use venv with python3 use <code>python -m venv my-virtualenv</code> to make a virtual environment and use <code>source my-virtualenv/bin/activate</code> to activate the virtualenv.</p>
<p>Rest is same as virtualenv. Otherwise use 
<code>PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install x.x.x</code> if you want to use virtualenv as your virtual environment.</p>
</div>
<div class="post-text" itemprop="text">
<p>Generally, I've been using </p>
<pre><code>import matplotlib
matplotlib.use('Agg')
</code></pre>
<p>to solve this. Recently however I got this framework error running tests on a codebase I should only be making very limited changes to. In that case, following matplotlib's OSX documentation's advice on how I set up my virtual environment worked for me:</p>
<pre><code>If you are on Python 3, use venv instead of virtualenv:

python -m venv my-virtualenv
source my-virtualenv/bin/activate
</code></pre>
<p>from: <a href="https://matplotlib.org/faq/osx_framework.html" rel="nofollow noreferrer">https://matplotlib.org/faq/osx_framework.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Check out the official FAQ on for <a href="https://matplotlib.org/faq/osx_framework.html#osxframework-faq" rel="nofollow noreferrer">Working with Matplotlib on OSX.</a> It has several solutions depending on your situation. The one that worked for me is:</p>
<ul>
<li>Step 1: Open terminal    </li>
<li>Step 2: Execute <code>conda install python.app</code> to install python.app    </li>
<li>Step 3: Run python script with <code>pythonw</code> e.g. <code>pythonw my_script.py</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Simply aliasing a new command to launch python in ~/.bash_profile will do the trick.</p>
<p>alias vpython3=/Library/Frameworks/Python.framework/Versions/3.6(replace with your own python version)/bin/python3</p>
<p>then 'source ~/.bash_profile' and use vpython3 to launch python3.</p>
<p>Explanation: Python is actually by default installed as framework on mac, but using virtualenv would link your python3 command under the created virtual environment, instead of the above framework directory ('which python3' in terminal and you'll see that). Perhaps Matplotlib has to find the bin/ include/ lib/,etc in the python framework.</p>
</div>
<span class="comment-copy">You should <i>still</i> use the framework install. It is relatively straightforward to install scipy, matplotlib, and ipython with it.</span>
<span class="comment-copy">Disagree. As Python is used for system OSX utilities, it's best not to touch the system install at all. These days, Continuum.io's Anaconda/Miniconda installs the same way in Lin/Mac/Win, so very recommendable.</span>
<span class="comment-copy">For this reason I use vagrant for my python work. That way I can simply start with a debian guest-os which saves me from a lot of mac specific headaches.</span>
<span class="comment-copy">What would you then recommend for someone who installed on his new mac everything using Fink (python2.7, numpy-py27, matplotlib-py27, ipython-py27)? I also need some packages that I can only get on Fink and they don't exist on MacPorts.</span>
<span class="comment-copy">It would probably be best to ask on one of the matplotlib or numpy mailing lists: <a href="http://sourceforge.net/mail/?group_id=80706" rel="nofollow noreferrer">sourceforge.net/mail/?group_id=80706</a> or <a href="http://www.scipy.org/Mailing_Lists" rel="nofollow noreferrer">scipy.org/Mailing_Lists</a></span>
<span class="comment-copy">If you're using <code>pyenv</code> you can also do a <code>framework</code> install of Python, like this: <code>env PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 2.7.12</code></span>
<span class="comment-copy">Could you explain why <code>TkAgg</code> and not <code>Agg</code>? <a href="https://stackoverflow.com/a/33873802/2962344">Jonathan's answer</a> suggest that <code>Agg</code> is a more portable solution.</span>
<span class="comment-copy">This answer worked well for me when using <code>pyenv</code>.</span>
<span class="comment-copy">Although this works for me. I notice that, installing the same package using <code>conda</code> and <code>pip</code> at the same time will create a lot of duplicating packages in <code>conda list</code>.</span>
<span class="comment-copy">Phew - this worked! On OSX 10.14 running Python 3.6.6 with pyenv - I couldn't get any of the other backends to work.</span>
<span class="comment-copy">Can you provide more info on step 3 please @Jonny Brooks</span>
<span class="comment-copy">@Maxibon If you want to know the difference between using <code>python</code> and <code>pythonw</code> check out the most upvoted answer <a href="https://stackoverflow.com/questions/9705982/pythonw-exe-or-python-exe">here</a>.   I confess I don't know exactly why this sequence of steps worked for me though.</span>
