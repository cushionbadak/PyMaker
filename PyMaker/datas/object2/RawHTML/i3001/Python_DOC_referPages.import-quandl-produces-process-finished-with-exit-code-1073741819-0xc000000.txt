<div class="post-text" itemprop="text">
<p>Here is my entire program:</p>
<pre><code>import quandl

print("Hello World");
</code></pre>
<p>which results in:</p>
<blockquote>
<p>Process finished with exit code -1073741819 (0xC0000005)</p>
</blockquote>
<p>In the first place I imported Quandl, but then I received:</p>
<blockquote>
<p>ModuleNotFoundError: No module named 'Quandl'</p>
</blockquote>
<p>and then I googled it and read a suggestion to change the name to quandl.</p>
<p>I have installed the package in the project intercepter, there it's named Quandl though. Anyway, it looks like at least with the lower case it passes the compilation.</p>
<p>I run my program on Windows 10. My Python version is 3.7. I use PyCharm.</p>
<p>If I try to import a different package, then it works. Quandl is the problematic one.</p>
</div>
<div class="post-text" itemprop="text">
<p>Quandl is a pure Python distribution (containing only Python code), so when you get an access violation error on <code>import quandl</code>, it can either mean that:</p>
<ol>
<li>your Python installation is broken, which is not the case here as you mentioned other packages working, or that</li>
<li>Quandl imports some broken dependency.</li>
</ol>
<p>In your case, it's <code>pandas</code> causing the issue. First of all, check what platform/ABI tags <code>pip</code> reports on your machine:</p>
<ul>
<li><p><code>pip&lt;10</code>:</p>
<pre><code>$ python -c "import pip; print(pip.pep425tags.get_impl_tag())"
$ python -c "import pip; print(pip.pep425tags.get_abi_tag())"
$ python -c "import pip; print(pip.pep425tags.get_platform())"
</code></pre></li>
<li><p><code>pip&gt;=10</code>:</p>
<pre><code>$ python -c "import pip._internal as pip; print(pip.pep425tags.get_impl_tag())"
$ python -c "import pip._internal as pip; print(pip.pep425tags.get_abi_tag())"
$ python -c "import pip._internal as pip; print(pip.pep425tags.get_platform())"
</code></pre></li>
</ul>
<p>Be sure to use the correct Python version if you have multiple installed (version check with <code>python --version</code>); replace <code>python</code> with <code>py -2</code> or <code>py -3</code> if necessary.</p>
<p>The impl tag is an abbreviation for your Python implementation, usually CPython; for example, <code>cp35</code> means CPython of major version 3.5 etc. The ABI tag consists of three parts: Python implementation abbreviation, impl version (same as in Python tag) plus the ABI flags (for example, <code>m</code> if your Python impl was built with <code>--with-pymalloc</code> etc). You platform should be either <code>win_amd64</code> for 64 bit Windows, or <code>win32</code> for 32 bit one. </p>
<p>Now check if there is a wheel with precompiled extensions available for your platform: go to <a href="https://pypi.org/project/pandas/#files" rel="nofollow noreferrer">https://pypi.org/project/pandas/#files</a> and browse through the list of files. Look for a file <code>pandas-0.23.4-{impl tag}-{ABI tag}-{platform tag}.whl</code>.</p>
<h3>PyPI wheels</h3>
<p>If there is a wheel file suitable for your current platform, copy its link and run:</p>
<pre><code>$ pip uninstall -y pandas
$ pip install https://copied-link-to-wheel-file
</code></pre>
<p>If <code>pip uninstall</code> fails, run</p>
<pre><code>$ pip install --force-reinstall https://copied-link-to-wheel-file
</code></pre>
<p>instead.</p>
<h3>third-party wheels</h3>
<p>If no wheel is available from PyPI, you may look for other wheel sources; often <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs" rel="nofollow noreferrer">https://www.lfd.uci.edu/~gohlke/pythonlibs</a> contains prebuilt wheels for Windows. Check out the <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#pandas" rel="nofollow noreferrer">list of <code>pandas</code> wheels available there</a>. If a wheel matches your platform, download it and run</p>
<pre><code>$ pip uninstall -y pandas
$ pip install c:/path/to/downloaded/wheel/file.whl
</code></pre>
<h3>building from source dist</h3>
<p>If no wheels are available for your platform, you have to build <code>pandas</code> from source. In this case, you need to install a C compiler (Visual C++ build tools on Windows) and run:</p>
<pre><code>$ pip uninstall -y pandas
$ pip install pandas --verbose --no-cache-dir --no-binary=pandas --global-option="--inplace"
</code></pre>
<p>Be sure to install the correct Visual C++ build tools, for example, Python 3.7 requires the 2017 version, while Python 3.4/3.5/3.6 require the 2015 version. Also, make sure you have a recent <code>setuptools</code> version; upgrade if necessary:</p>
<pre><code>$ pip install --upgrade setuptools
</code></pre>
<p>It may be wise to copy and store the build log if you encounter any problems after installation, you may get a clue from warnings emitted on build.</p>
<p>Now install <code>pytest</code> and run the tests to validate the installation:</p>
<pre><code>$ pip install pytest
$ python -c "import pandas; pandas.test()"
</code></pre>
<p>If the tests fail and you downloaded the wheel from PyPI, open a new issue in <code>pandas</code>' <a href="https://github.com/pandas-dev/pandas/issues" rel="nofollow noreferrer">Github repo</a> as the wheel should be supported on your platform, but is isn't. In both other cases (installing third-party wheels or building from source), you're on your own. If you're building from source, ask another question here, providing the full build log.</p>
</div>
<div class="post-text" itemprop="text">
<p>You Probably have not installed the Quandl package properly. Because I've tried it in Juypter Notebook before installation it gives me the same error that you are getting.
But after installing the package it works fine.
Please see the attached screenshot.<a href="https://i.stack.imgur.com/HdsVm.png" rel="nofollow noreferrer"><img alt="" src="https://i.stack.imgur.com/HdsVm.png"/></a>
Incase of command line installation please type the following command:</p>
<pre><code>pip install quandl
</code></pre>
<p><a href="https://pypi.org/project/Quandl/" rel="nofollow noreferrer">Quandl Installation Link</a>
<a href="https://i.stack.imgur.com/HpO0L.png" rel="nofollow noreferrer"><img alt="" src="https://i.stack.imgur.com/HpO0L.png"/></a></p>
<p>If it gives the pip installation then first you need to install pip.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, I use Quandl with Canopy and Anaconda (Windows and Mac) and never had any kind of problem at all. Sorry I did not see that you had already installed.</p>
<p>But on the other hand, I had some troubles using pip when I did not run it as administrator - sometimes it said that the package was installed but it was not.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you install quandl sucessfully, then check where it installed. Generally, default library resides in </p>
<blockquote>
<p><em>your installed python directory</em>/lib, , in my case C:/Program Files (x86)/Python37-32/lib</p>
</blockquote>
<p>and pip installs third party packages into</p>
<blockquote>
<p>(your python dir/lib/site-packages, in my case C:/Program Files (x86)/Python37-32/lib/site-packages</p>
</blockquote>
<p>you should be able to find quandl packages there, if not then you did not installed it correctly. And if you use pip in a venv(i.e, VirtualEnv- find more about venv at <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/venv.html</a> and pycharm uses venv by default, you'll find the library in (your project location)/venv/lib/site-packages, which in my case, <strong>C:/Users/user/Documents/PyProject1/venv/lib/site-packages</strong>, you'll definitely find your quandl packages there too; if not you need to re-install it. Python import mechanism is,</p>
<blockquote>
<p>it always tries find modules into your code file home directory, PYTHONPATH, standard library directories, site-packages directory, .pth files, by default. you can see the path by the following command,</p>
</blockquote>
<pre><code>import sys
print(sys.path)
</code></pre>
<p>then you can check the paths, check for quadl installation dir, if it's not in site-packages as mentioned earlier(which may be an exception and installation fault), update it. check <a href="https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows">PYTHONPATH in Windows</a></p>
<p>If you use pycharm then when you create a project, expand the </p>
<blockquote>
<p><em>project Interpreter:new virtual environment</em>, then check <strong><em>inherit global site-packages</em></strong>, then pycharm automatically import third party packages into venv site-packages.</p>
</blockquote>
<p>and also you need to install anything using pip with administrator privileges in windows, otherwise pip'll not install packages correctly. Hope this helps</p>
</div>
<span class="comment-copy">"Import quandl" means nothing if the package is not installed - that appears to be in your case. See this instructions : <a href="https://docs.quandl.com/v1.0/docs/python-installation" rel="nofollow noreferrer">docs.quandl.com/v1.0/docs/python-installation</a>. I use Quandl a lot and it works fine.</span>
<span class="comment-copy">@Roberval_T_ I have installed the package. I mentioned that in my question.</span>
<span class="comment-copy">Windows 10 64 bit, Python 3.7.0, no errors. surely something wrong with your PyCharm settings.</span>
<span class="comment-copy">@MunimMunna that doesn't help me so much. Tell me what to check.</span>
<span class="comment-copy">IIRC 0xC0000005 means access violation, but judging by the <code>quandl</code>s source code, it's pure python - are you sure it's <code>quandl</code> and not some dependency? Can you at least try <code>import numpy, pandas</code> first to see if those work?</span>
<span class="comment-copy">I did find the proper wheel to my pip in the link you attached. It is pandas-0.23.4-cp37-cp37m-win_amd64.whl. However I unistalled pandas and then installed the wheel and the exception is still thrown when I try to import pandas and run the program. I'm yet to try the other options (of 3rd party wheels and building from source file).</span>
<span class="comment-copy">@Alon If you found the wheel on PyPI and after reinstalling you still get the same error, I strongly encourage you to open an issue on pandas <a href="https://github.com/pandas-dev/pandas/issues" rel="nofollow noreferrer">Github repo</a>. On your machine, installing the official wheel makes <code>pandas</code> unusable, so it's a severe issue to me. Also, keep in mind that Python 3.7 is still in its early days, so errors are likely to occur. You can install Python 3.6 alongside the 3.7, install <code>pandas</code> there (<code>py -3.6 -m pip install pandas</code>) and check whether the <code>import pandas</code> succeeds. If it does, most probably you found a new bug.</span>
<span class="comment-copy">I'd also suggest to run the import line with <code>gdb</code> to get some error stacktrace before filing the issue, but am unsure whether/how one can install and use <code>gdb</code> on Windows.</span>
<span class="comment-copy">I have installed both pip and Quandl. I tried now to reinstall it, but there's no change. This is not the case.</span>
