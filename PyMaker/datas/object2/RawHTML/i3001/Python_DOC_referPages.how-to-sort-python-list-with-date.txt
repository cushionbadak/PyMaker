<div class="post-text" itemprop="text">
<p>I have a list in Python like this</p>
<pre><code>myList = ['http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']
</code></pre>
<p>i want to sort this list by the dates </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a method that should work in a more general case:</p>
<pre><code>from dateutil.parser import parse

myList = [
    'http://google.com Google 2018-07-10',
    'http://apple.com Apple Inc 2018-07-11',
    'Foo 2017-07-13 http://whatever.com',
    'http://microsoft.com Microsoft 2018-07-12',
    '2015-07-15 http://whatever.com Whatever'
]

dct = {parse(v, fuzzy=True): v for v in myList}
print([dct[k] for k in sorted(dct, reverse=True)])
print([dct[k] for k in sorted(dct)])
</code></pre>
<p>This way you won't be forced to have dates at the end of the list strings, output:</p>
<pre><code>['http://microsoft.com Microsoft 2018-07-12', 'http://apple.com Apple Inc 2018-07-11', 'http://google.com Google 2018-07-10', 'Foo 2017-07-13 http://whatever.com', '2015-07-15 http://whatever.com Whatever']
['2015-07-15 http://whatever.com Whatever', 'Foo 2017-07-13 http://whatever.com', 'http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>sorted</code> with <code>lambda</code> in <code>key</code></p>
<p><strong>Ex:</strong></p>
<pre><code>myList = ['http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']

print( sorted(myList, key= lambda x: x.split()[-1], reverse=True) )
print( sorted(myList, key= lambda x: x.split()[-1]) )
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['http://microsoft.com Microsoft 2018-07-12', 'http://apple.com Apple Inc 2018-07-11', 'http://google.com Google 2018-07-10']
['http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can split each string, take the last part, and sort by this part:</p>
<pre><code>myList = [
    'http://apple.com Apple Inc 2018-07-11', 
    'http://google.com Google 2018-07-10',     
    'http://microsoft.com Microsoft 2018-07-12'
]

sorted(myList, key=lambda s: s.split()[-1])
</code></pre>
<p>Output:</p>
<pre><code>['http://google.com Google 2018-07-10',
 'http://apple.com Apple Inc 2018-07-11',
 'http://microsoft.com Microsoft 2018-07-12']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also sort the list by applying <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.strptime()</code></a> to <code>key</code>:</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; myList = ['http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']
&gt;&gt;&gt; sorted(myList, key=lambda x: datetime.strptime(x.split()[-1], '%Y-%m-%d'))
['http://google.com Google 2018-07-10', 'http://apple.com Apple Inc 2018-07-11', 'http://microsoft.com Microsoft 2018-07-12']
</code></pre>
<p><strong>Note:</strong> This might be over complicating it slightly, since ISO formats dates, and sorts string dates perfectly fine, as shown in the other answers. Using <code>strptime()</code> is to just ensure that the dates are sorted by correct date format. </p>
</div>
<span class="comment-copy">Have you tried something?</span>
<span class="comment-copy">yes, i've tried to sort dictionary before appending but my dictionary's key values are always changing so i couldn't figure it out with list</span>
<span class="comment-copy">thank you! but could you please explain me how python handle random list data in to dictionary like this?</span>
