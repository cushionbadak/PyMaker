<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/48572831/how-to-access-the-type-arguments-of-typing-generic">How to access the type arguments of typing.Generic?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have some list types (coming from <code>inspect.signature</code> -&gt; <code>inspect.Parameter</code>) and I'd like to get to know the type of their elements. My current solution works but is extremely ugly, see minimal example below:</p>
<pre><code>from typing import List, Type, TypeVar

TypeT = TypeVar('TypeT')

IntList = List[int]
StrList = List[str]

# todo: Solve without string representation and eval
def list_elem_type(list_type: Type[TypeT]) -&gt; Type[TypeT]:
    assert str(list_type)[:11] == 'typing.List'
    return eval(str(list_type)[12:-1]) # type: ignore

assert list_elem_type(IntList) is int
assert list_elem_type(StrList) is str
</code></pre>
<p>What would be the correct way to get the type of a <code>List</code>'s elements?</p>
<p>(I'm using Python 3.6 and the code should survive a check with <code>mypy --strict</code>.)</p>
</div>
<div class="post-text" itemprop="text">
<p>I <em>believe</em> that you should be able to check the <code>__args__</code> parameter:</p>
<pre><code>&gt;&gt;&gt; from typing import Dict, List, Type, TypeVar
&gt;&gt;&gt; List[Dict].__args__
(typing.Dict,)
&gt;&gt;&gt; List[int].__args__
(&lt;class 'int'&gt;,)
</code></pre>
<p>But note from the <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><strong>Note</strong> The typing module has been included in the standard library on a provisional basis. New features might be added and API may change
  even between minor releases if deemed necessary by the core
  developers.</p>
</blockquote>
<p>So this probably isn't future proof.</p>
</div>
