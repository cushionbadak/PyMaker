<div class="post-text" itemprop="text">
<p>I am trying to implement a logic using python :</p>
<pre><code> cat /etc/shadow | awk -F: '($2 == "" ) { print $1 " does not have a password "}'
</code></pre>
<p>If the above returns the output for the user i will do </p>
<pre><code>passwd -l &lt;username&gt;
</code></pre>
<p>I am trying to implement the above logic using python , but i am not really sure if it is working out in that way; here is my python code: </p>
<p><code>/etc/shadow</code> looks like</p>
<pre><code>root:*:17709:0:99999:7:::
daemon:*:17709:0:99999:7:::
bin:*:17709:0:99999:7:::
sys:*:17709:0:99999:7:::
sync:*:17709:0:99999:7:::
games:*:17709:0:99999:7:::
man:*:17709:0:99999:7:::
lp:*:17709:0:99999:7:::
mail:*:17709:0:99999:7:::
news:*:17709:0:99999:7:::
uucp:*:17709:0:99999:7:::
proxy:*:17709:0:99999:7:::
www-data:*:17709:0:99999:7:::
backup:*:17709:0:99999:7:::
</code></pre>
<p><strong>CODE</strong></p>
<pre><code>with open("/etc/shadow") as file:
   for line in file:
       line = line.rstrip()
       if line[line.find(":")+1:line.find(":")]=="":
          print "This is a problem"
       elif line[line.find(":")+1:line.find(":")]=="*":
          print line[line.find(":")+1:line.find(":")]
       else:
          print "All Good"
</code></pre>
<p>The above code returns "This is a problem" , which isn't right</p>
</div>
<div class="post-text" itemprop="text">
<p>Just split your lines on the ":" separator and check the value at the second position (which is at index 1 of course):</p>
<pre><code>data = """
root:*:17709:0:99999:7:::
daemon:*:17709:0:99999:7:::
bin:*:17709:0:99999:7:::
sys:*:17709:0:99999:7:::
sync:*:17709:0:99999:7:::
games:*:17709:0:99999:7:::
man:*:17709:0:99999:7:::
lp:*:17709:0:99999:7:::
mail:*:17709:0:99999:7:::
news:*:17709:0:99999:7:::
uucp:*:17709:0:99999:7:::
proxy:*:17709:0:99999:7:::
www-data:*:17709:0:99999:7:::
backup:*:17709:0:99999:7:::
"""

for line in data.strip().splitlines():
    row = [part.strip() for part in line.split(":")]
    if row[1] == "":
        print("this is a problem")
    elif row[1] == "*":
        print row[1] 
    else: 
        print "all good"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re</code> to extract desired column:</p>
<pre><code>import re

data = """root:*:17709:0:99999:7:::
daemon:*:17709:0:99999:7:::
bin:*:17709:0:99999:7:::
sys:*:17709:0:99999:7:::
sync:*:17709:0:99999:7:::
games:*:17709:0:99999:7:::
man:*:17709:0:99999:7:::
lp:*:17709:0:99999:7:::
mail:*:17709:0:99999:7:::
news:*:17709:0:99999:7:::
uucp:*:17709:0:99999:7:::
proxy:*:17709:0:99999:7:::
www-data:*:17709:0:99999:7:::
backup:*:17709:0:99999:7:::"""

groups = re.findall('(.*?):(.*?):(.*?):(.*?):(.*?):(.*?):(.*?):(.*?):', data)

if all(g[1].strip() for g in groups):
    print('All good')
else:
    print('This is a problem')
</code></pre>
<p>This prints:</p>
<pre><code>All good
</code></pre>
<p>Explanation of this regex <a href="https://regex101.com/r/esJBgh/1" rel="nofollow noreferrer">here</a>. In the second group (<code>g[1]</code>), you have the shadowed password (<code>*</code>), or empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try it:</p>
<pre><code>with open("/etc/shadow/") as ff:
   for line in ff:   
        login_name,pwd,remainder=line.split(":",maxsplit=2)
        print(login_name,pwd) # change it as you like
</code></pre>
</div>
<span class="comment-copy"><code>line.find(":")</code> will always give first occurence of ":". Problem here is that second <code>line.find(":")</code> will again return the index of first ":".</span>
<span class="comment-copy">Note that <code>line.find(":")</code> always starts searching at the beginning of the string. "This is a problem" because <code>line[x+1:x]</code> will always result in an empty string.</span>
<span class="comment-copy">Consider using a dictionary here if it makes sense for your data. The user could be the key, and then a list of each userâ€™s properties in <code>/etc/shadow</code>. It also makes importing the data much easier in my opinion.</span>
<span class="comment-copy">re is overkill here. You can just split the line on ":"</span>
<span class="comment-copy">@brunodesthuilliers Second group should be g[2] ? no ?</span>
<span class="comment-copy">@DeathADDER Indexing is starting from <code>0</code> - so <code>g[0]</code> is first group, <code>g[1]</code> is second group.</span>
<span class="comment-copy">ah okay, but we aren't comparing g[1]=="" ?</span>
<span class="comment-copy">@DeathADDER <code>g[1].strip()</code> returns empty string <code>""</code>, if there isn't any asteriks. The <code>all()</code> built-in function will evaluate the empty string as False and returns False - which prints "This is a problem". Documentation to <code>all()</code> - <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#all</a></span>
