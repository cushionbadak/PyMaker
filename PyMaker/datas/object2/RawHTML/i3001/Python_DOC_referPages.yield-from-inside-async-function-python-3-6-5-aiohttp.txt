<div class="post-text" itemprop="text">
<p>SyntaxError: 'yield from' inside async function</p>
<pre><code>async def handle(request):
    for m in (yield from request.post()):
        print(m)
    return web.Response()
</code></pre>
<p>Used python3.5 before, found pep525, install python3.6.5 and still receive this error.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using the new <code>async</code>/<code>await</code> syntax to define and execute co-routines, but have not made a full switch. You need to use <code>await</code> here:</p>
<pre><code>async def handle(request):
    post_data = await request.post()
    for m in post_data:
        print(m)
    return web.Response()
</code></pre>
<p>If you wanted to stick to the old, pre-Python 3.5 syntax, then mark your function as a coroutine with the <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.coroutine" rel="nofollow noreferrer"><code>@asyncio.coroutine</code> decorator</a>, drop the <code>async</code> keyword, and use <code>yield from</code> instead of <code>await</code>:</p>
<pre><code>@async.coroutine
def handle(request):
    post_data = yield from request.post()
    for m in post_data:
        print(m)
    return web.Response()
</code></pre>
<p>but this syntax is being phased out, and is not nearly as discoverable and readable as the new syntax. You should only use this form if you need to write code that is compatible with older Python versions.</p>
</div>
