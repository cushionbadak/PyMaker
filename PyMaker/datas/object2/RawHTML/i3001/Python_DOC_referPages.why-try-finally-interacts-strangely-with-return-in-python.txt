<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/517060/return-eats-exception">return eats exception</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/11164144/weird-try-except-else-finally-behavior-with-return-statements">Weird Try-Except-Else-Finally behavior with Return statements</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Can someone please explain me why does this work like it does? Python 3.6.3</p>
<pre><code>In [1]: def test():
   ...:     try:
   ...:         return 1
   ...:     finally:
   ...:         return 2
   ...:     

In [2]: test()
Out[2]: 2
</code></pre>
<p><strong>EDIT:</strong>
This is not exactly duplicate as linked questions raise exceptions in their <code>try :</code> and my example uses <code>return</code> which I expected to work. This function looks like it should return 1 yet it returns 2 - so basically <code>return 1</code> is ignored. <code>finally</code> makes a good job of eating any risen exceptions but should it also eat returns?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because finally is a cleaning up action that is always excuted if added in a try, except,else, finally ;)  </p>
<p>You can read Python 3 documentationâ€™s page on Error handlings here:<a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/errors.html</a></p>
<p>Section: 8.6. Defining Clean-up Actions</p>
</div>
<span class="comment-copy">As <code>finally</code> will be executed without any exception, I think in this case the statement in <code>try</code> is executed but the value doesn't return.</span>
<span class="comment-copy">This answer in the duplicate is valid both for <code>return</code> and for exceptions. <a href="https://stackoverflow.com/a/11164157/1977847">stackoverflow.com/a/11164157/1977847</a></span>
