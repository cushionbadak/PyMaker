<div class="post-text" itemprop="text">
<p>I have a list of street addresses, some of which have po boxes. What I want to do is remove anything that isn't a po box from the line if it does contain a po box. For example, if there is a list of ['123 whatever drive', '234 anywhere lane po box 3213', 'po box 190 441 bettername street'] this should return ['123 whatever drive', 'po box 3213', 'po box 190'].
All I have thus far is</p>
<pre><code>def listofaddr(lst)):
    boxes = ('po box ', 'p o box ')
    finstring = []
    for i in lst:
        if boxes in i:
            i = 'po box ' + 
        finstring.append(i)
</code></pre>
<p>What I think I can do is use the space after 'box' as a delimiter, grab the next substring of numbers after the space, and use the next space as a delimiter to end the string but I can't think of how to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>a=['123 whatever drive', '234 anywhere lane po box 3213', 'po box 190 441 bettername street']
["po box "+e.split("po box ")[1].split(" ")[0] if "po box" in e else e for e in a]
</code></pre>
<p>Output:</p>
<pre><code>['123 whatever drive', 'po box 3213', 'po box 190']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex, which is easy to test here: <a href="https://pythex.org/" rel="nofollow noreferrer">https://pythex.org/</a></p>
<pre><code>import re
firstList = ['123 whatever drive', '234 anywhere lane po box 3213', 'po box 190 441 bettername street']
outputList = [re.search('[0-9]+', x)[0] if 'po box' in x else x for x in firstList]
</code></pre>
<p>Will output:</p>
<pre><code>['123 whatever drive', 'po box 3213', 'po box 190']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using list comprehension:</p>
<pre><code>addrs = ['123 whatever drive', '234 anywhere lane po box 3213', 'po box 190 441 bettername street']
boxes = [(a[a.index('po box'):] if ('po box' in a) else a) for a in addrs]
</code></pre>
<p>I'm using simple string slicing here: if the string <code>'po box'</code> exists in any address <code>a</code>, cut off the part of the string before that point. Otherwise, just return the address <code>a</code>, and do this for all addresses <code>a</code> in <code>addrs</code>.</p>
<p>If you want to get more specific, you could look into using <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> instead of string slicing.</p>
</div>
<span class="comment-copy">What in the world do <code>e</code> and <code>a</code> correspond to?</span>
<span class="comment-copy"><code>a</code> is the input list. <code>e</code> is the loop variable</span>
<span class="comment-copy"><code>['123 whatever drive', 'po box 3213', 'po box 190']</code> is not the same as <code>['123 whatever drive', 'po box 3213', 'po box 190 441']</code></span>
<span class="comment-copy">This is not the intended result as per the OP's question.</span>
<span class="comment-copy">@ChristophTerasa read the OP's question one more time. They don't want the 411. They just want the first set of numbers.</span>
<span class="comment-copy">I proposed another edit.</span>
<span class="comment-copy">I think they want the specific number after po box, not everything after po box</span>
<span class="comment-copy"><code>['123 whatever drive', 'po box 3213', 'po box 190 441 bettername street']</code> is not <code>['123 whatever drive', 'po box 3213', 'po box 190']</code></span>
