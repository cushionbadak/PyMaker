<div class="post-text" itemprop="text">
<p>I have a test which uses <code>os.getcwd()</code> to determine the path to a file. When running <code>pytest -k test_name</code>, I see the value of <code>os.getcwd()</code> to be my project root where as when running <code>pytest --cov --cov-report html</code> the same test fails because the value returned by <code>os.getcwd()</code> is some other path, some nested directories inside the folder test (containing all the tests) in my project root.</p>
<p>Is there an easy way to standardise this behaviour or getting the result of <code>os.getcwd</code> as when running for individual tests by some other library method such that I don't need to write long path names in my source code?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.getcwd" rel="nofollow noreferrer"><code>os.getcwd()</code></a> returns a current working directory, which means that any part of the script or other module may perform actions, that will make it's value change.</p>
<p>Depending on your purpose you can use value of <a href="https://docs.python.org/3/reference/import.html#__file__" rel="nofollow noreferrer"><code>__file__</code></a> (along with helpers provided by <code>os.path</code>) to determine path to your module/test in the filesystem.</p>
</div>
<span class="comment-copy">thanks but can you explain the theory behind it why is my <code>cwd</code> changing when running <code>pytest</code> as whole ?</span>
<span class="comment-copy">I am not that familiar with <code>pytest</code> but a <a href="https://github.com/pytest-dev/pytest/search?q=os.chdir&amp;unscoped_q=os.chdir" rel="nofollow noreferrer">glimpse at source code</a> reveals quite a few places where <code>os.chdir</code> is called.</span>
<span class="comment-copy">This is correct: use <code>__file__</code>. It will remain static regardless of where your script (including <code>pytest</code>'s runner) is executed from</span>
