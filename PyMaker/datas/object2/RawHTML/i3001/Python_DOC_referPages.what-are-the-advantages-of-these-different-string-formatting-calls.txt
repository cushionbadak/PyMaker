<div class="post-text" itemprop="text">
<pre><code>name = 'John'

#basic method
print('Hello, his name is ' + name)

#.format method
print('Hello, his name is {}'.format(name))

#f-string literal method
print(f'Hello, his name is {name}')
</code></pre>
<p>All are viable ways to concatenate and outputs the same thing, but why would I choose one over the other?</p>
</div>
<div class="post-text" itemprop="text">
<p>#1 won't work if <code>name</code> isn't a string.</p>
<p>#2 is fine on any version but is a little unwieldy to type. Generally the best for compatibility across python versions.</p>
<p>#3 If the best option in terms of readability (and performance). But it only works on python3.6+, so not a good idea if you want your code to be backwards compatible. </p>
<p>There's also #4, old style formatting ala %s, %d, etc, which are now discouraged in favour for <code>str.format</code>.</p>
</div>
<span class="comment-copy">Which one do you find the most readable?</span>
<span class="comment-copy">Probably the first one, but are there additional functionalities by using the others?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/13451989/pythons-many-ways-of-string-formatting-are-the-older-ones-going-to-be-deprec" title="pythons many ways of string formatting are the older ones going to be deprec">stackoverflow.com/questions/13451989/…</a> and the linked questions within are highly relevant</span>
<span class="comment-copy">Related and near-duplicate: <a href="https://stackoverflow.com/questions/13451989/pythons-many-ways-of-string-formatting-are-the-older-ones-going-to-be-deprec">Pythons many ways of string formatting — are the older ones (going to be) deprecated?</a>, and the older question <a href="https://stackoverflow.com/questions/5082452/python-string-formatting-vs-format">Python string formatting: % vs. .format</a></span>
<span class="comment-copy">@khelwood oops, thanks for the correction!</span>
<span class="comment-copy">Well spotted...</span>
<span class="comment-copy">all but #1 also allow the use of <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">Format Specification Mini-Language</a> to tailor your output</span>
