<div class="post-text" itemprop="text">
<p>Below is the code snippet that i am executing in sublime text</p>
<pre><code>class Employee:
    def __init__(self, first, last):
        self.first = first
        self.last = last

        @property
        def email(self):
            return '{}.{}@email.com'.format(self.first, self.last)

            @property
            def fullname(self):
                return '{} {}'.format(self.first, self.last)

                emp1 = Employee('Aquib', 'Javed')

                emp1.email()
                emp1.fullname()
                print(emp1.fullname)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code is not properly indented.</p>
<pre><code>class Employee:
 def __init__(self, first, last):
    self.first = first
    self.last = last

 @property
 def email(self):   #same level indentation as __init__() or it'll have scope under __init__() method only
    return '{}.{}@email.com'.format(self.first, self.last)

 @property
 def fullname(self):
    return '{} {}'.format(self.first, self.last)

emp1 = Employee('Aquib', 'Javed')

emp1.email # Since you've mentioned `email` as property and returning as string, you should just use its property's name
emp1.fullname # same goes here too
print(emp1.fullname)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Read about <a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">Short Description of the Scoping Rules?</a>  (and here about classes: <a href="https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes</a>)</p>
<p>Fix your code to:</p>
<pre><code># your class definition, all that belongs to it, is indented 1 more then "class .... :"
class Employee:
    # method of your class
    def __init__(self, first, last):
        self.first = first
        self.last = last

    # property of your class
    @property
    def email(self):
        return '{}.{}@email.com'.format(self.first, self.last)

    @property
    def fullname(self):
        return '{} {}'.format(self.first, self.last)

# not part of your class, you are creating an Instance of your class
emp1 = Employee('Aquib', 'Javed')

emp1.email      # this returns a string, but you do nothing with it - so it is discarded
emp1.fullname   # this returns a string, but you do nothing with it - so it is discarded
print(emp1.fullname) # this prints it 
</code></pre>
</div>
<span class="comment-copy">Well your code doesn't do anything except define a class. What did you expect to happen?</span>
<span class="comment-copy">You shouldn't indent lines from <code>emp1</code> onwards. And also both properties should have been on the same level as <code>__init__</code></span>
<span class="comment-copy">@Aran-Fey what do i need to add extra then</span>
<span class="comment-copy">can you name some auto indentation tool in sublime text3</span>
<span class="comment-copy">You could give <a href="https://packagecontrol.io/packages/Python%20PEP8%20Autoformat" rel="nofollow noreferrer">Python PEP8 Autoformat</a> a try! (never used it myself though)</span>
<span class="comment-copy">Indentation conveys meaning in Python. If such auto-indenting tool existed (and worked), that would mean it could somehow deduce and modify the meaning of your code. I doubt any automatic tool can re-indent your code as in this answer because no tool (as of today) can understand what you <i>meant</i> to write.</span>
<span class="comment-copy">yes got it. thanks</span>
