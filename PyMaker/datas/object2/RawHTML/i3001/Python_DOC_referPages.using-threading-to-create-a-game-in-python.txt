<div class="post-text" itemprop="text">
<p>I'm attempting to create a scroller (game where the player seems to run an infinite distance until they die).</p>
<p>I know that libraries and modules exist (such as <code>pygame</code>) which make it much easier to create games, but I'm trying to do it without any external modules. I'm running my code in the console window.</p>
<p>My code:</p>
<pre><code>import os, time, threading, keyboard

key = False
def checkForJump(i, key, character):
    while True:
        if key:
            character = " xo                                                                                                                     "
            print(character)
            key = False
        time.sleep(0.05)
        i, character = printScreen(i, character)


i = 1
character = "  x                                                                                                                     "
def printScreen(i, character):

    sky1 =  "               *                                       *                               oooo                (())         "
    sky2 = "                           ____                                                     oooo                *                "
    space1 = "                                                                                                                        "
    space2 = "                                                                                                                        "

    land = "------------------------------------------------------------------------------------------------------------------------"


    os.system("cls")
    print((sky1[i:] + sky1[:i] +  "\n" + sky2[i:] + sky2[:i] + "\n") * 3)
    print("\n\n")
    print(space1)
    print(space2)
    print(character)
    print(land)
    i += 1
    i = i % 120

    return i, character


t = threading.Thread(target=checkForJump, args=(i, key, character))
t.daemon = True
t.start()

while True:
    key = keyboard.is_pressed('q')
</code></pre>
<p>My problem: I'm using threading (which I'm a complete beginner at), as I need to keep the background moving while checking for any user input. In this case, I'm checking if 'q' is pressed. If it is, I want my character to become 'xo' instead of 'x'. However, when I press 'q', nothing changes.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are passing the <code>key</code> as an argument to <code>checkForJump</code> function, which makes a local copy of <code>key</code> for that function, so key is always False in checkForJump. You should access to the global key variable:</p>
<pre><code>import os, time, threading, keyboard

key = False
def checkForJump(i, character):
    global key
    while True:
        if key:
            character = " xo                                                                                                                     "
            print(character)
            key = False
        time.sleep(0.05)
        i, character = printScreen(i, character)


i = 1
character = "  x                                                                                                                     "
def printScreen(i, character):

    sky1 =  "               *                                       *                               oooo                (())         "
    sky2 = "                           ____                                                     oooo                *                "
    space1 = "                                                                                                                        "
    space2 = "                                                                                                                        "

    land = "------------------------------------------------------------------------------------------------------------------------"


    os.system("cls")
    print((sky1[i:] + sky1[:i] +  "\n" + sky2[i:] + sky2[:i] + "\n") * 3)
    print("\n\n")
    print(space1)
    print(space2)
    print(character)
    print(land)
    i += 1
    i = i % 120

    return i, character


t = threading.Thread(target=checkForJump, args=(i, character))
t.daemon = True
t.start()

while True:
    key = keyboard.is_pressed('q')
</code></pre>
<p>Although this should work for this simple example, Using global variables to pass messages between threads is not a good idea and can get messy quite easily. You might want to take a look at <a href="https://docs.python.org/3/library/queue.html" rel="nofollow noreferrer">queue library</a>, a much better way to communicate between threads.</p>
</div>
<span class="comment-copy">Thanks! It works like a charm :)</span>
