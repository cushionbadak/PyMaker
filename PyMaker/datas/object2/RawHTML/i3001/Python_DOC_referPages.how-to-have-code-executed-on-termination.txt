<div class="post-text" itemprop="text">
<p>I want a part of my code to only execute when I manually stop the program (like pressing stop button in <code>pycharm</code>). I thought finally statement could do it for me. Like this:</p>
<pre><code>try:
   do_sth()
finally:
   print("you stopped the program")
</code></pre>
<p>but it doesn't work. I tried both finally and except but none of them worked. I thought when we stopped the program from running, a <code>keyboard_intrrupt</code> error occurred so finally must have worked.</p>
<p>Any idea? </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <code>atexit</code> library.</p>
<p>From the <a href="https://docs.python.org/3/library/atexit.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The atexit module defines functions to register and unregister cleanup functions. Functions thus registered are automatically executed upon normal interpreter termination.</p>
</blockquote>
<p>This can be implemented like so:</p>
<pre><code>#Rest of program...

def before_termination():
    #Do something...

import atexit    
atexit.register(before_termination)
</code></pre>
<p>However this is only called during normal program termination, not if keyboard interrupt occurs.</p>
</div>
<span class="comment-copy">When i use this, I don't need to call the function somewhere in my code?</span>
<span class="comment-copy">No, this is all done by the <code>atexit</code> library.</span>
<span class="comment-copy">Thank you very very much</span>
<span class="comment-copy">@aref Should probably mention that <code>atexit</code> is only called during normal program termination, not when you keyboard interrupt/stop in pycharm.</span>
<span class="comment-copy">@dheiberg Thank you, I've added that to the answer :)</span>
