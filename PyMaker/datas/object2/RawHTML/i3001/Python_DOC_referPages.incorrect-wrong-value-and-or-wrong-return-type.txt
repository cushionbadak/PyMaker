<div class="post-text" itemprop="text">
<pre><code>def token(t):
    running_cost = []
    total_cost = 0
    for y in t:
        running_cost.append(y)

    for k in range(len(running_cost)):
        total_cost += float(running_cost[k])

    total_cost = '{:,.2f}' .format(total_cost)
    return total_cost
</code></pre>
<p>When I run my code through the tester, this is what I get: </p>
<blockquote>
<p>Expected: 1.17</p>
<p>Actual:   1.17</p>
<p>Incorrect! (wrong value and/or wrong return type)</p>
</blockquote>
<p>I suppose the code does not want a string return type but the reason I have to string it is because the code requires that I return all my values with a floating point number to 2 decimal places whether it is a 0 or not. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can round() your return - float to 2 digits, no need to make it a string. </p>
<pre><code>def token(t):
    running_cost = []
    total_cost = 0
    for y in t:
        running_cost.append(y)

    for k in range(len(running_cost)):
        total_cost += float(running_cost[k])

    total_cost = '{:,.2f}' .format(total_cost)
    return total_cost

def tok2(t):
    """Creates float values from all elements of t, sums them, then rounds to 2 digits."""
    return round(sum(map(float,t)),2)

test = ['2.1093','4.0']


print(token(test), type(token(test)))
print(tok2(test), type(tok2(test)))
</code></pre>
<p>returns:</p>
<pre><code>6.11 &lt;class 'str'&gt;   # you return a formatted string
6.11 &lt;class 'float'&gt; # I return a rounded float
</code></pre>
<p>Reference:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#round" rel="nofollow noreferrer">rounds a float to n digit: <code>round(float,n)</code></a></li>
<li><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">applies a function to a sequence: <code>map(func,seq)</code></a> - I am applying the <code>float()</code> conversion to each element of <code>t</code></li>
<li><a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sums all values of iterable: <code>sum(iterable)</code></a></li>
</ul>
<hr/>
<p>Edit: you could fix yours by doing <code>return float(total_cost)</code> as well if you are prohibited to use <code>round()</code> </p>
</div>
<span class="comment-copy">Which tester did you use? From what I can tell, you're doing the right thing... The tester shouldn't be checking for equality of floating point values.</span>
<span class="comment-copy">I still think there's a flaw in the logic of the tester program since it relies on testing the equality of floating point values, which in itself is just a poor design. But this probably solves the immediate issue :)</span>
<span class="comment-copy">@roganjosh agreed, but thats how all those hackathon-challenges work :/</span>
<span class="comment-copy">My previous code obviously returned a 0/10 on the tester but your version got 7/10 as there are still 3 strings that are returned which generates a Type Error. However, I just assigned <code>tot_cost = round(sum(map(float, t)), 2) </code>and on the next line, <code>return float(tot_cost)</code>. either way your code simplifies mine by a million and I really need to learn how to code like that. Its simply a matter of being new to coding and not being familiar with the python vocab/syntax. With time and practice I think I'll be okay in a few months. Thank you so much!</span>
