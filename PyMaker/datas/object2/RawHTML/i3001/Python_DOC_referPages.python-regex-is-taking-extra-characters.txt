<div class="post-text" itemprop="text">
<p>I have a long script to match devices names by regular expressions. However, the devices names looks alike and some times the other types of the machines just a letter extra. e.g. yel15 is the HP machine, but yel15e is the Cisco machine. However, it matches with the first match </p>
<pre><code>  if re.match(r'(yel)([1-9])', serverName):
    machine = re.match(r'(yel)([1-9])', serverName)
    print ('This is the HP Machine')

  elif re.match(r'(yel)([1-9])([a-z])', serverName):
    machine = re.match(r'(yel)([1-9])([a-z])', serverName)
    print ('This is the Cisco Machine'
</code></pre>
<p>When I set the device name to "yel11x" The output for that will be "This is the HP Machine" which is wrong.</p>
<p>Also, I am not willing to change the order of the matches. So, How I should make the regex stop at the exact match ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Like Alex already mentioned you need to add the <code>$</code> character, but you also would need to add the <code>+</code> character to tell python that it can expect one or more numbers.</p>
<p>I would change the regex like so:</p>
<pre><code>if re.match(r'(yel)([1-9]+)$', serverName):
</code></pre>
<p>I would also change the <code>elif</code> clause, otherwise there won't be a match, the regex is expecting only one digit and your string has two, my suggestion:</p>
<pre><code>elif re.match(r'(yel)([1-9]+)([a-z])', serverName):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code> documentation</a>:</p>
<blockquote>
<p>If zero or more characters <strong>at the beginning of string</strong> match the regular expression pattern, return a corresponding match object.</p>
</blockquote>
<p>You can specify the that the match should go until the end of the string using a <code>$</code>:</p>
<pre><code>(yel)([1-9]+)$
</code></pre>
</div>
<span class="comment-copy">You match the whole string if the pattern is found. Add a <code>$</code> to the end so that you are saying the pattern is the whole string.</span>
<span class="comment-copy">Apart from what has already been told in answers. It is always better to match for longer string first and smaller ones later in such scenarios. If you just make this change your code will work.</span>
<span class="comment-copy">I think this won't work, you would need to add the <code>+</code> sign like so <code>(yel)([1-9])+$</code> for it to work as intended</span>
<span class="comment-copy">Yeah, I see your point. I've added the <code>+</code> inside the capturing group for the number though.</span>
