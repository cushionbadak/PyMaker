<div class="post-text" itemprop="text">
<p>The idea is to do concatenate of nth item from sub-list as below. Here I would like to automate such a way that I don't need to define each ol[0] or ol[1] manually each time depending upon length of the original list i.e ol; Any possibility?</p>
<p>For example, if my input list is:</p>
<pre><code>[("a","b","c"),("A","B","C")]
</code></pre>
<p>the desired result is as:</p>
<pre><code>['aA', 'bB', 'cC']
</code></pre>
<hr/>
<p>Here's my current code to perform this:</p>
<pre><code>ol = [("a","b","c"),("A","B","C")]

x=None
y=None

nL=[(x+y) for x in ol[0] for y in ol[1] if ol[0].index(x)==ol[1].index(y)]
print(nL)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><strong><code>zip()</code></strong></a> to achieve this as:</p>
<pre><code>&gt;&gt;&gt; ol=[("a","b","c"),("A","B","C")]

#                                 v to unpack the list
&gt;&gt;&gt; nL = [''.join(x) for x in zip(*ol)]
# OR explicitly concatenate elements at each index
# &gt;&gt;&gt; nL = [a+b for a, b in zip(*ol)]

&gt;&gt;&gt; nL
['aA', 'bB', 'cC']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use builtin <code>zip()</code> function (this example is using f-string for concatenating the strings inside the lists):</p>
<pre><code>ol=[("a","b","c"),("A","B","C")]
print([f'{a}{b}' for a, b in zip(*ol)])
</code></pre>
<p>Output:</p>
<pre><code>['aA', 'bB', 'cC']
</code></pre>
<p>The asterisk <code>*</code> in the <code>zip</code> will expands the iterable, so you don't have to index it by hand.</p>
<p>To make it universal and concatenate multiple values, you can use this script:</p>
<pre><code>ol=[("a","b","c"),("A","B","C"), (1, 2, 3), ('!', '@', '#')]
print([('{}' * len(ol)).format(*v) for v in zip(*ol)])
</code></pre>
<p>Will print:</p>
<pre><code>['aA1!', 'bB2@', 'cC3#']
</code></pre>
</div>
