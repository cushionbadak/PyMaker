<div class="post-text" itemprop="text">
<p>I have deployed my django project on digitalocean and it was working fine so far, until I made some changes to the way I was storing datetimes in my databases. I made them time-aware (before they were naive). Eventually, I ironed out all the bugs and my times were aware, and the project was working fine until I pulled the changes to my production server and when I tried to deploy it, it gave me the following error:</p>
<p>TypeError: combine() takes at most 2 arguments (3 given)</p>
<p>on this line:</p>
<pre><code> start_time_in_local_time = datetime.datetime.combine(date, start_time, time_difference) 
</code></pre>
<p>For context, this error happens every time I attempt to schedule a lesson with another user. I receive the timings and timezone information from the user, and I am trying to store the starting and ending times of that lesson in my database. </p>
<p>Here's the code:</p>
<pre><code>def error_check_and_save_lesson(request, lesson, context):
# Get lesson timezone when (re)scheduling lessons
minutes_offset = request.POST.get('timezoneInfo','')
minutes_difference = int(minutes_offset)
time_difference = datetime.timezone(datetime.timedelta(minutes=minutes_difference))
# Get lesson name when (re)scheduling lessons
if not request.POST['name']:
    context['name_error'] = True
else:
    lesson.name = request.POST['name']
# Get lesson location when (re)scheduling lessons
if not request.POST['location']:
    context['location_error'] = True
else:
    lesson.location = request.POST['location']
# Get lesson date when (re)scheduling lessons
if not request.POST['date']:
    context['date_error'] = True
else:
    date = datetime.datetime.strptime(request.POST['date'], '%m/%d/%Y').date() # a date object.
# Get lesson starting time when (re)scheduling lessons
if not request.POST['startingTime']:
    context['starting_time_error'] = True
else:
    start_time = datetime.datetime.strptime(request.POST['startingTime'], '%I:%M %p').time() # a time object
# Get lesson ending time when (re)scheduling lessons
if not request.POST['endingTime']:
    context['ending_time_error'] = True
else:
    end_time = datetime.datetime.strptime(request.POST['endingTime'], '%I:%M %p').time()

lesson.tutor = request.user if request.user.profile.user_type == 'tutor' else context['person_to_schedule_with']
lesson.student = request.user if request.user.profile.user_type == 'student' else context['person_to_schedule_with']

if not context.get('name_error') and not context.get('location_error') and not context.get('date_error') and not context.get('starting_time_error') and not context.get('ending_time_error'):
    utczone = datetime.timezone(datetime.timedelta(0)) # used to convert times in other timezones to UTC
    start_time_in_local_time = datetime.datetime.combine(date, start_time) # THE BUG!
    start_time_in_local_time=start_time_in_local_time.replace(tzinfo=time_difference)
    end_time_in_local_time = datetime.datetime.combine(date, end_time)
    end_time_in_local_time = end_time_in_local_time.replace(tzinfo=time_difference)
    lesson.start_time = start_time_in_local_time.astimezone(utczone) # store starting time in UTC
    lesson.end_time = end_time_in_local_time.astimezone(utczone) # store ending time in UTC
    lesson.created_by = request.user
    lesson.save()
    context['schedule_success'] = "Your Lesson '" + lesson.name + "' Was Scheduled Successfully"
return context
</code></pre>
<p>I've checked the documentation (<a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html</a>), the method takes 3 arguments, I'm especially confused because the exact action that's causing the bug in my project (scheduling lessons) works perfectly fine locally. I would guess this has something to do with my local database being sqlite and my production database being postgres, I'm not sure though.</p>
<p>Also, yes I have changed USE_TZ to True</p>
</div>
<div class="post-text" itemprop="text">
<p><em>Python 2</em> and <em>Python 3</em> has different signature for the <strong><code>datetime.combine</code></strong> method<br/><br/>
<a href="https://docs.python.org/2/library/datetime.html#datetime.datetime.combine" rel="nofollow noreferrer">Python 2 method signature</a>,</p>
<blockquote>
<p><strong><code>datetime.combine(date, time)</code></strong></p>
</blockquote>
<p><br/><br/>
<a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.combine" rel="nofollow noreferrer">Python 3 method signature</a></p>
<blockquote>
<p><strong><code>datetime.combine(date, time, tzinfo=self.tzinfo)</code></strong></p>
</blockquote>
</div>
<span class="comment-copy">How can I use python3 signature then? I am using Django 2.0.6 and python 3.6.5, why is the python 2 signature being used?</span>
<span class="comment-copy">Maybe you haven't given the correct path of python when you deployed.</span>
<span class="comment-copy">ahh nvm i realized I am using python 3.5.2 and the method signature for that is the same as in python 2. Thank you so much for your help Jerin</span>
<span class="comment-copy">@Ahmed Are you sure that you are using Python.3 env ?</span>
<span class="comment-copy">I was using a python 3 virtual env yes. All I needed to do to fix the problem was delete the virutal environment and make a new one but this time specifying the venv to use python 3.6, " virtualenv -p python3.6 schedulearn-venv", thanks for the help everyone =D</span>
