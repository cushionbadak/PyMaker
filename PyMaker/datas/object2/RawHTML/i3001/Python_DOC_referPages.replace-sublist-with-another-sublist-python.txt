<div class="post-text" itemprop="text">
<p>I have a list:</p>
<pre><code>Online = [['Robot1', '23.9', 'None', '0'], ['Robot2', '25.9', 'None', '0']]
</code></pre>
<p>and i want to replace the sublist if i received different values:</p>
<pre><code>NewSublist1 =  ['Robot1', '30.9', 'Sending', '440']

NewSublist2 =  ['Robot2', '50']
</code></pre>
<p>And i want:</p>
<pre><code>Online = [['Robot1', '30.9', 'Sending', '440'], ['Robot2', '50']]
</code></pre>
<p>The number of the sublist elements could change. The only thing that is the same is the Robot id. So i want to make a search, see if the Robot id is on the Online list and replace the sublist with the new one.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a dictionary mapping the <code>robot</code> IDs in your new sublists to the actual new sublists, then look up the existing <code>robot</code> IDs in that dict and replace accordingly.</p>
<pre><code>&gt;&gt;&gt; Online = [['Robot1', '23.9', 'None', '0'], ['Robot3', 'has no replacement'], ['Robot2', '25.9', 'None', '0']]
&gt;&gt;&gt; NewSublists = [['Robot1', '30.9', 'Sending', '440'], ['Robot2', '50'], ['Robot4', 'new entry']]
&gt;&gt;&gt; newsub_dict = {sub[0]: sub for sub in NewSublists}
&gt;&gt;&gt; [newsub_dict.get(sub[0], sub) for sub in Online]
[['Robot1', '30.9', 'Sending', '440'],
 ['Robot3', 'has no replacement'],
 ['Robot2', '50']]
</code></pre>
<p>This will loop over each element in the list once, giving it a complexity of O(n), n being the number of elements in the <code>Online</code> list. If, instead, you make <code>Online</code> also a dictionary mapping <code>robot</code> IDs to sublists, you could get this down to O(k), k being the number of new sublists.</p>
<p>If you also want to add elements from <code>NewSublists</code> to <code>Online</code> if those are not yet present, you should <em>definitely</em> convert <code>Online</code> to a <code>dict</code> as well; then you can simply <code>update</code> the dict and get the <code>values</code>. Ir order matters, make sure to use a <code>collections.OrderedDict</code> or Python 3.7.</p>
<pre><code>&gt;&gt;&gt; online_dict = {sub[0]: sub for sub in Online}
&gt;&gt;&gt; online_dict.update(newsub_dict)
&gt;&gt;&gt; list(online_dict.values())
[['Robot1', '30.9', 'Sending', '440'],
 ['Robot3', 'has no replacement'],
 ['Robot2', '50'],
 ['Robot4', 'new entry']]
</code></pre>
</div>
<span class="comment-copy">Ok, that sounds straight-forward. What does your code look like, and where are you stuck?</span>
<span class="comment-copy">You want to merge those lists?</span>
<span class="comment-copy">Please post the code you have written so far, and read through the Python tutorial on data structures: <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html</a></span>
<span class="comment-copy">Thanks. One more thing, how to replace the sublist only when the Robot id is on the Online list? When Robot id not present, add the sublist to thge Online list.</span>
<span class="comment-copy">@HugoAguiar See my edit.</span>
