<div class="post-text" itemprop="text">
<p>For example:</p>
<pre><code>with io.open('Example.txt','r',encoding='utf-8') as temp:
    ExampleText=temp.readlines()[1]
</code></pre>
<p>Do I need to close it manually, like:</p>
<pre><code>with io.open('Example.txt','r',encoding='utf-8') as temp:
    ExampleText=temp.readlines()[1]
temp.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>TL;DR: No, you don't need to close the stream when used with the <code>with</code> statement.</p>
<p>The reason for this is that the <code>TextIOWrapper</code> object returned by <code>io.open</code> is a context manager which will call <code>close</code> on the underlying file when a context is exited.</p>
<p>To verify this behavior we can simply call <code>__exit__</code> explicitly and then try to read the file:</p>
<pre><code>&gt;&gt;&gt; import io
&gt;&gt;&gt; foo = io.open("foo.txt", "w+")
&gt;&gt;&gt; foo.__exit__()
&gt;&gt;&gt; foo.read()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: I/O operation on closed file.
</code></pre>
<p>Which demonstrates that the file is in fact closed when <code>__exit__</code> is called, which happens automatically when the <code>with</code> block is exited.</p>
<p>Note that there is one case where the file descriptor will not be closed on <code>__exit__</code> and that is the case where a file-descriptor is passed to <code>io.open</code> rather than a file name or object along with a value of <code>False</code> for the <code>closefd</code> argument:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; file_ = open("foo.txt", "w+")
&gt;&gt;&gt; foo = io.open(file_.fileno(), closefd=False)
&gt;&gt;&gt; foo.__exit__()
&gt;&gt;&gt; # the IOTextWrapper is closed
&gt;&gt;&gt; foo.read()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: I/O operation on closed file.
&gt;&gt;&gt; # but the underlying file descriptor is not closed.
&gt;&gt;&gt; os.read(file_.fileno(), 512)
b''
</code></pre>
<p>If you pass a value of <code>True</code> for the <code>closefd</code> argument than the passed file descriptor is closed on context exit:</p>
<pre><code>&gt;&gt;&gt; with io.open(file_.fileno(), closefd=True):
...     pass
&gt;&gt;&gt; os.read(file_.fileno(), 512)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
OSError: [Errno 9] Bad file descriptor
</code></pre>
<p>Docs describing this behavior in detail can be found <a href="https://docs.python.org/3.5/library/io.html#raw-file-i-o" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, You don't need to close it manually.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/2/library/io.html" rel="nofollow noreferrer" title="close io">reference</a>,</p>
<blockquote>
<p>If a file descriptor is given, it is closed when the returned I/O object is closed, unless closefd is set to False.</p>
</blockquote>
<p>So if you provide a file descriptor and want to manually close it (because you might use descriptor later) you call it as </p>
<pre><code>import os
import io
fd = os.open("foo.txt", os.O_RDONLY)
io.open(fd, 'r', encoding='utf-8', closefd=False)
</code></pre>
</div>
<span class="comment-copy">According to docs at <a href="https://docs.python.org/3/library/io.html#high-level-module-interface" rel="nofollow noreferrer">docs.python.org/3/library/io.html#high-level-module-interface</a> it's alias of built-in <code>open()</code> so no, you don't need to close after <code>with</code> statement.</span>
<span class="comment-copy">From the same reference: <code>file is either a string giving the pathname (absolute or relative to the current working directory) of the file to be opened or an integer file descriptor of the file to be wrapped</code>. <code>'Example.txt'</code> is not a file descriptor and I am not sure if this is the answer to the question</span>
<span class="comment-copy">closefd doesn't work this way. per the docs, closefd prevents the file descriptor from being closed when the <code>close</code> method of the IOWrapper object is called if the initial passed value is a file descriptor. in fact using closefd this way throws an error: &gt;&gt;&gt; foo = <code>io.open("foo.txt", "w+", closefd=False) Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; ValueError: Cannot use closefd=False with file name</code></span>
<span class="comment-copy">Thanks, I updated the answer.</span>
<span class="comment-copy">os.open requires a flag argument, so ... your code still errors. <code>&gt;&gt;&gt; os.open("foo.txt") Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; TypeError: open() missing required argument 'flags' (pos 2)</code> ... you can fix it like this: <code>os.open("foo.txt", os.O_RDONLY)</code></span>
<span class="comment-copy">Sorry, but your post still does not answer the question: <code>Does “with io.open” close the file automatically?</code> because your code does not contain <code>with</code> (or <code>__enter__</code> / <code>__exit__</code>)</span>
