<div class="post-text" itemprop="text">
<p>Suppose I have a below text file called file1.txt:</p>
<pre><code>Adam male
John male
Mike male
Sue female
</code></pre>
<p>and I have the below list</p>
<pre><code>fullname=['John Smith', 'Sue Hunt']
</code></pre>
<p>I want to be able go though the text file, and if it there is any matching there, amend the line with the word found, output should look like below:</p>
<pre><code>Adam male
John male found
Mike male
Sue female found
</code></pre>
<p>so I got this code, but the replace function don;t seem to be right</p>
<pre><code>f=open(file1.txt,'a')
for line in f:
    for name in fullname:
        firstname,lastname=name.split('--')
        if firstname in line:
            line.replace('\n', 'found\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>replace</code></a> function doesn't work inplace :</p>
<blockquote>
<p>Return a copy of the string with all occurrences...</p>
</blockquote>
<pre><code>line = line.replace('\n', 'found\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>fullname=['John Smith', 'Sue Hunt']
fname = [i.split()[0] for i in fullname]
res = []
with open(filename) as infile:
    for line in infile:
        if line.split()[0] in fname:
            res.append("{} Found \n".format(line.strip()))
        else:
            res.append(line)

with open(filename, "w") as outfile:
    for line in res:
        outfile.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This sounds like a work in progress, so I'd prepare for future modifications by creating two dictionaries of the <code>names</code> and <code>genders</code> that can be consulted later on and writing a new output file, so as not to corrupt the source file.</p>
<pre><code># python 3.6+
import re

fullname=['John Smith', 'Sue Hunt']
names = { re.split('\W+', line)[0]:re.split('\W+', line)[1] for line in fullname }

with open('file1.txt', 'r') as f:
    file=f.read().splitlines()
genders = { re.split('\W+', line)[0]:re.split('\W+', line)[1] for line in file }

with open('results.txt', 'w') as f:
         for k,v in genders.items():
              if k in names.keys():
                  f.write(f"{k} {v} found \n")
              else:
                  f.write(f"{k} {v} \n")


cat results.txt
Adam male
John male found
Mike male
Sue female found
</code></pre>
</div>
<span class="comment-copy">You are never writing anythin back into some other file. You are splitting on characters that are not in your exampledata. your firstname will never be in your line as it was not split. your replace is never hit. <a href="https://ericlippert.com/2014/03/05/how-to-debug-small-programs/" rel="nofollow noreferrer">How to debug small programs (#1)</a></span>
<span class="comment-copy">Also, even if your <code>replace</code> <i>were</i> hit, you're ignoring the new string that it returns anyway.</span>
<span class="comment-copy">It don't seem to write back to the file</span>
<span class="comment-copy">@chrissk8er yeah and you should add this part yourself</span>
<span class="comment-copy">Why not write to the file directly instead of building <code>res</code>?</span>
<span class="comment-copy">I believe that is not a good practice....to use <code>r+</code></span>
