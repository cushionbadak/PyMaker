<div class="post-text" itemprop="text">
<p>I'm running the following query:</p>
<pre><code>s.query(db.Order, db.Execution).join(db.Execution).all()
</code></pre>
<p>Which produces an output that looks like:</p>
<pre><code>[(&lt;db.Order at 0x7fd061efeda0&gt;, &lt;db.Execution at 0x7fd061789780&gt;),
 (&lt;db.Order at 0x7fd061efeda0&gt;, &lt;db.Execution at 0x7fd061789b38&gt;),
 (&lt;db.Order at 0x7fd061efee48&gt;, &lt;db.Execution at 0x7fd061789550&gt;),
 (&lt;db.Order at 0x7fd061efeb00&gt;, &lt;db.Execution at 0x7fd061789630&gt;),
 (&lt;db.Order at 0x7fd061efeb00&gt;, &lt;db.Execution at 0x7fd061741400&gt;),
 (&lt;db.Order at 0x7fd0603bdcf8&gt;, &lt;db.Execution at 0x7fd060de3c88&gt;),
 (&lt;db.Order at 0x7fd0603bdcf8&gt;, &lt;db.Execution at 0x7fd060de3c18&gt;),
 (&lt;db.Order at 0x7fd0603bdcf8&gt;, &lt;db.Execution at 0x7fd060de3860&gt;),
 (&lt;db.Order at 0x7fd061efe4e0&gt;, &lt;db.Execution at 0x7fd0617412e8&gt;),
 (&lt;db.Order at 0x7fd0603bdcf8&gt;, &lt;db.Execution at 0x7fd060de3710&gt;),
 (&lt;db.Order at 0x7fd0603bdcf8&gt;, &lt;db.Execution at 0x7fd060de35c0&gt;),
 (&lt;db.Order at 0x7fd061f13438&gt;, &lt;db.Execution at 0x7fd061741ba8&gt;)]
</code></pre>
<p>It looks right, but is there an easy way to actually see the results?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you would like to receive instances of objects, then you see <em>actual</em> results already.</p>
<p>If, however, you would like to have more user-friendly view, then you should implement <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer"><code>__repr__</code></a>.</p>
<p>If what you want is to see some columns, then specify columns instead of the whole objects, and you will get only those columns (values). For example:</p>
<pre><code>s.query(
    db.Order.id, 
    db.Order.name, 
    db.Execution.date, 
    db.Execution.type.label("execution_type"),
).join(db.Execution).all()
</code></pre>
<p>If you really would like all columns of your query, then you could do the following as well:</p>
<pre><code>q = s.query(db.Order, db.Execution).join(db.Execution)
q = s.execute(s.subquery())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try to implement the method <strong>repr</strong> in your SQLAlchemy mapped objects (Order and Execution).
Supposing that your Order object has an "id" attribute, this is what you might want to do:</p>
<pre><code>#...inside class Order
def __repr__(self):
    return "&lt;Order(id=" + str(self.id) + ")&gt;")
</code></pre>
<p>HTH</p>
<p>C</p>
</div>
<div class="post-text" itemprop="text">
<p>Ä°f you need to see the result you can use for, the query returns a list as you can see every element has an Order and an Execution object. Therefore you can access object attribute:</p>
<pre><code>result = s.query(db.Order,db.Execution).join(db.Execution).all()
for r in result:
    print(r.Order.id, r.Execution.id)
</code></pre>
</div>
