<div class="post-text" itemprop="text">
<p>I have a list</p>
<pre><code>truthList = [True,False,False,False,True,False,True,True]
</code></pre>
<p>I want to "and" the two subsequent indexes of this list.</p>
<pre><code>output[0]=truthList[0] and truthList[1]
output[1]=truthList[2] and truthList[3]
....
</code></pre>
<p>"Anding" the above list will give the following output</p>
<pre><code>output = [False,False,False,True]
</code></pre>
<p>There are two cases</p>
<p>1 List has only even number of indexes</p>
<p>2 List can have even or odd number of indexes</p>
<p>Can someone please suggest an easy shortcut for both of these cases(preferably through list comprehension or maps)</p>
</div>
<div class="post-text" itemprop="text">
<p>For both <em>even</em> and <em>odd</em> length list, you may use <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow noreferrer"><code>itertools.izip_longest()</code></a> with <em>list comprehesnion</em> expression as:</p>
<pre><code>&gt;&gt;&gt; from itertools import izip_longest
&gt;&gt;&gt; truthList = [True,False,False,False,True,False,True,True, False]

#                           jumping the list by 2  v                    
&gt;&gt;&gt; [i and j for i, j in izip_longest(truthList[::2], truthList[1::2], fillvalue=False)]
#     Does `and` with `False` as pair up for last entry in case of `odd` list ^
[False, False, False, True, False]
</code></pre>
<p>Here, you need to set the value of <code>fillvalue</code> parameter as <code>True</code>/<code>False</code> based on the behavior you need. As the <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow noreferrer">document</a> say:</p>
<blockquote>
<p>If the iterables are of uneven length, missing values are filled-in with <code>fillvalue</code>.</p>
</blockquote>
<p>For odd length list, if you want to keep the last value of list as it is, then you have to set the <code>fillvalue</code> as <code>truthList[-1]</code>.</p>
<hr/>
<p>For just <em>even</em> list, <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> will suffice the requirement as:</p>
<pre><code>&gt;&gt;&gt; truthList = [True,False,False,False,True,False,True,True]

&gt;&gt;&gt; [i and j for i, j in zip(truthList[::2], truthList[1::2])]
[False, False, False, True]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One brute force way to approach this would be to just append the last item back onto the end of the list if we have an odd number of elements.  That way we get <code>l[n - 1] and l[n - 1]</code> for the last element in the output list:</p>
<pre><code>l = [True, False, False, False, True, False, True, True]
if len(l) % 2 == 1:
    l.append(l[-1])
l_sort = [ l[i] and l[i + 1] for i in range(0, len(l), 2)] 
print(l_sort)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> with <a href="https://docs.python.org/3.5/library/operator.html#operator.and_" rel="nofollow noreferrer"><code>operator.and_()</code></a>  like below:</p>
<pre><code>import operator

map(operator.and_, truthList[::2], truthList[1::2])
</code></pre>
<p>If your list length is an odd number, you can do:</p>
<pre><code>result = map(operator.and_, truthList[:-1:2], truthList[1:-1:2])
</code></pre>
<p>Then, if you want to add <code>False</code> for the last value:</p>
<pre><code>result.append(False)
</code></pre>
<p>The complete code would be:</p>
<pre><code>def my_and(my_list):
    if len(my_list) % 2:
        result = map(operator.and_, my_list[:-1:2], my_list[1:-1:2])
        result.append(False)
        return result
    return map(operator.and_, my_list[::2], my_list[1::2])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; truth_list1 = [True,False,False,False,True,False,True,True]
&gt;&gt;&gt; my_and(truth_list1)
[False, False, False, True]
&gt;&gt;&gt; 
&gt;&gt;&gt; truth_list2 = [True,False,False,False,True,False,True,True,True]
&gt;&gt;&gt; my_and(truth_list2)
[False, False, False, True, False]
</code></pre>
</div>
<span class="comment-copy">would this work on list of odd length?</span>
<span class="comment-copy">@HassanK: Updated the answer</span>
<span class="comment-copy">so will this make the last element of the list False by default?</span>
<span class="comment-copy">@HassanK: It has a <code>fillvalue</code> parameter which you may set to <code>True</code>/ <code>False</code> based on the behavior you need. Currently it is set to <code>False</code>. That means; in case of odd length list, it will do the pairing of last element using <code>and</code> with the <code>False</code> value</span>
<span class="comment-copy">@HassanK: In case you want to keep the value of last element as it is. You may set <code>fillvalue</code> to <code>truthList[-1]</code></span>
<span class="comment-copy">Describe what you have done.</span>
<span class="comment-copy">would this work on list of odd length as well?</span>
<span class="comment-copy">@HassanK Look at the edit, I added the example for that case. It depends on what you want to do with the last element of your list, in the above example, I just add it in <code>result</code> list</span>
