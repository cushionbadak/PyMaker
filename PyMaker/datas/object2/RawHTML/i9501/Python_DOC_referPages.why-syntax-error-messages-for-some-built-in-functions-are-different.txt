<div class="post-text" itemprop="text">
<p>I recently noticed something weird. I typed something like</p>
<pre><code>exec code
</code></pre>
<p>And I obviously got an error. What is interesting is the error description - <code>SyntaxError: Missing parentheses in call to 'exec'</code>. I haven't found any other function that would give similarly detailed one. If I have for example</p>
<pre><code>eval code
</code></pre>
<p>I get <code>SyntaxError: invalid syntax</code>. All user-defined functions and all built-ins I found, e. g. <code>min</code>, <code>filter</code>, behave the same.</p>
<p>Why are these error messages inconsistent?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>exec code</code> is a valid syntax in Python 2 but not in Python 3, this error message is more detailed than a general <code>SyntaxError</code> because it was (and is) very popular (well, as popular as the usage of <code>exec</code>) when one is transitioning from Python 2 to Python 3.</p>
<p>You get the exact error when trying to <code>print string</code> in Python 3 (as long as <code>string</code> is defined of course).</p>
</div>
<div class="post-text" itemprop="text">
<p>The difference in errors exists because <code>eval</code> was (<a href="https://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer">in <code>2.x</code></a>) <em>and still is</em> (<a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">in <code>3.x</code></a>) a <em>function call</em>. <code>exec</code>, on the other hand, was <a href="https://docs.python.org/2.7/reference/simple_stmts.html#the-exec-statement" rel="nofollow noreferrer">a statement in <code>2.x</code></a> and <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">made into a function in <code>3.x</code></a>.</p>
</div>
<span class="comment-copy">Oh, I did not think about that. I didn't even know that <code>exec</code> was keyword in Python 2...</span>
