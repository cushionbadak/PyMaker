<div class="post-text" itemprop="text">
<p><a href="https://coderbyte.com/information/Division%20Stringified" rel="nofollow noreferrer">https://coderbyte.com/information/Division%20Stringified</a></p>
<blockquote>
<p>Have the function DivisionStringified(num1,num2) take both parameters
  being passed, divide num1 by num2, and return the result as a string
  with properly formatted commas. If an answer is only 3 digits long,
  return the number with no commas (ie. 2 / 3 should output "1"). For
  example: if num1 is 123456789 and num2 is 10000 the output should be
  "12,346".</p>
</blockquote>
<p>This is the top user's solution, not mine:</p>
<pre><code>def DivisionStringified(num1, num2): 
    return '{:,}'.format((num1 + (num2 / 2)) / num2)
</code></pre>
<p>What does <code>'{:,}'.format</code> do? I have no idea how that would place commas in the correct positions in a large number.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/string.html#formatspec" rel="nofollow noreferrer">documentation</a> says that:</p>
<blockquote>
<p>The ',' option signals the use of a comma for a thousands separator. For a locale aware separator, use the 'n' integer presentation type instead.</p>
</blockquote>
<p>So we can see that is what the <code>,</code> is doing in the format string.</p>
<p>As for the <code>:</code>, the <em>general</em> format of a format string is something like:</p>
<pre><code>{what:format_spec}
</code></pre>
<p>Both parts are optional -- The default format spec simply <code>!s</code> (which means format this using the <code>str</code> builtin).  And if the "what" part isn't specified, then python just fills in the position of the appropriate positional argument.  In this case, the <code>:</code> is necessary so that the format parser can pick up the format_spec part.</p>
</div>
<span class="comment-copy">I love the way you mentioned on the top "THIS IS NOT HOMEWORK" :)</span>
<span class="comment-copy">See the section of the Python documentation on <a href="https://docs.python.org/2/library/string.html#formatstrings" rel="nofollow noreferrer">format string syntax</a>. (It's a pretty dense read; don't expect to absorb all of it immediately, but it'll be important to learn to read stuff like that and pick out the parts that are relevant to you.)</span>
<span class="comment-copy">if you only need to apply string formatting to one thing just use the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer"><code>format</code> builtin</a> <code>return format( (num1+(num2/2))/num2, ',')</code></span>
