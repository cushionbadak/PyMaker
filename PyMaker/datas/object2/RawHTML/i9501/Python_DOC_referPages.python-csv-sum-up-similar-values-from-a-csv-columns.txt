<div class="post-text" itemprop="text">
<p><strong>INPUT file:</strong></p>
<pre><code>$ cat dummy.csv 
OS,A,B,C,D,E
Ubuntu,0,1,0,1,1
Windows,0,0,1,1,1
Mac,1,0,1,0,0
Ubuntu,1,1,1,1,0
Windows,0,0,1,1,0
Mac,1,0,1,1,1
Ubuntu,0,1,0,1,1
Ubuntu,0,0,1,1,1
Ubuntu,1,0,1,0,0
Ubuntu,1,1,1,1,0
Mac,0,0,1,1,0
Mac,1,0,1,1,1
Windows,1,1,1,1,0
Ubuntu,0,0,1,1,0
Windows,1,0,1,1,1
Mac,0,1,0,1,1
Windows,0,0,1,1,1
Mac,1,0,1,0,0
Windows,1,1,1,1,0
Mac,0,0,1,1,0
</code></pre>
<p><strong>Expected output:</strong></p>
<pre><code>OS,A,B,C,D,E
Mac,4,1,6,5,3
Ubuntu,3,4,5,6,3
Windows,3,2,6,6,3
</code></pre>
<p><em>I generated above output using Excel's Pivot Table.</em></p>
<p><strong>MyCode:</strong></p>
<pre><code>import csv
import pprint
from collections import defaultdict

d = defaultdict(dict)

with open('dummy.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        d[row['OS']]['A'] += row['A']
        d[row['OS']]['B'] += row['B']
        d[row['OS']]['C'] += row['C']
        d[row['OS']]['D'] += row['D']
        d[row['OS']]['E'] += row['E']

pprint.pprint(d)
</code></pre>
<p><strong>Error:</strong></p>
<pre><code>$ python3 dummy.py
Traceback (most recent call last):
  File "dummy.py", line 10, in &lt;module&gt;
    d[row['OS']]['A'] += row['A']
KeyError: 'A'
</code></pre>
<p>My Idea was to get the CSV values accumulated into a dictionary and later print it. However, I get above error when I try to add the values. </p>
<p>This seems like achievable with built-in <code>csv</code> module. I thought this was an easier one :( Any pointers would be of great help.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two problems. The nested dictionaries don't initially have any keys set so <code>d[row[OS]]['A']</code> results to error. The other issue is that you need to convert column values to <code>int</code> before adding them.</p>
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> as values in <code>defaultdict</code> since there missing keys default to <code>0</code>:</p>
<pre><code>import csv
from collections import Counter, defaultdict

d = defaultdict(Counter)

with open('dummy.csv') as csvfile:
    reader = csv.DictReader(csvfile)

    for row in reader:
        nested = d[row.pop('OS')]
        for k, v in row.items():
            nested[k] += int(v)

print(*d.items(), sep='\n')
</code></pre>
<p>Output:</p>
<pre><code>('Ubuntu', Counter({'D': 6, 'C': 5, 'B': 4, 'E': 3, 'A': 3}))
('Windows', Counter({'C': 6, 'D': 6, 'E': 3, 'A': 3, 'B': 2}))
('Mac', Counter({'C': 6, 'D': 5, 'A': 4, 'E': 3, 'B': 1}))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this? You can write the dataframe to csv file to get the desired format.</p>
<pre><code>import pandas as pd
# df0=pd.read_clipboard(sep=',')
# df0
df=df0.copy()
df=df.groupby(by='OS').sum()
print df
</code></pre>
<p>Output:</p>
<pre><code>         A  B  C  D  E
OS                    
Mac      4  1  6  5  3
Ubuntu   3  4  5  6  3
Windows  3  2  6  6  3
</code></pre>
<hr/>
<pre><code>df.to_csv('file01')
</code></pre>
<p><strong>file01</strong></p>
<pre><code>OS,A,B,C,D,E
Mac,4,1,6,5,3
Ubuntu,3,4,5,6,3
Windows,3,2,6,6,3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You got that exception because for the first time, <code>row['OS']</code> does not exist in <code>d</code>, so <code>'A'</code> does not exist in <code>d[row['OS']]</code>. Try the following to fix that:</p>
<pre><code>import csv
from collections import defaultdict

d = defaultdict(dict)

with open('dummy.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        d[row['OS']]['A'] = d[row['OS']]['A'] + int(row['A']) if (row['OS'] in d and 'A' in d[row['OS']]) else int(row['A'])
        d[row['OS']]['B'] = d[row['OS']]['B'] + int(row['B']) if (row['OS'] in d and 'B' in d[row['OS']]) else int(row['B'])
        d[row['OS']]['C'] = d[row['OS']]['C'] + int(row['C']) if (row['OS'] in d and 'C' in d[row['OS']]) else int(row['C'])
        d[row['OS']]['D'] = d[row['OS']]['D'] + int(row['D']) if (row['OS'] in d and 'D' in d[row['OS']]) else int(row['D'])
        d[row['OS']]['E'] = d[row['OS']]['E'] + int(row['E']) if (row['OS'] in d and 'E' in d[row['OS']]) else int(row['E'])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; import pprint
&gt;&gt;&gt;
&gt;&gt;&gt; pprint.pprint(dict(d))
{'Mac': {'A': 4, 'B': 1, 'C': 6, 'D': 5, 'E': 3},
 'Ubuntu': {'A': 3, 'B': 4, 'C': 5, 'D': 6, 'E': 3},
 'Windows': {'A': 3, 'B': 2, 'C': 6, 'D': 6, 'E': 3}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This does not answer your question exactly, as it is indeed possible to solve the problem using <code>csv</code>, but it is worth mentioning that <code>pandas</code> is perfect for this sort of thing:</p>
<pre><code>In [1]: import pandas as pd

In [2]: df = pd.read_csv('dummy.csv')

In [3]: df.groupby('OS').sum()
Out[3]:
         A  B  C  D  E
OS
Mac      4  1  6  5  3
Ubuntu   3  4  5  6  3
Windows  3  2  6  6  3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>d</code> is a dictionary, so <code>d[row['OS']]</code> is a valid expression, but <code>d[row['OS']]['A']</code> expects that dictionary item to be some kind of collection.  Since you didn't provide a default value, it will instead be <code>None</code>, which is not.</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume your input file is called <code>input_file.csv</code>.</p>
<p>You can also process your data and have your desired output using <code>groupby</code> from <code>itertools</code> module and <code>two dicts</code> like the example below:</p>
<pre><code>from itertools import groupby

data = list(k.strip("\n").split(",") for k in open("input_file.csv", 'r'))

a, b = {}, {}
for k, v in groupby(data[1:], lambda x : x[0]):
    try:
        a[k] += [i[1:] for i in list(v)]
    except KeyError:
        a[k] = [i[1:] for i in list(v)]

for key in a.keys():
    for j in range(5):
        c = 0
        for i in a[key]:
            c += int(i[j])
        try:
            b[key] += ',' + str(c) 
        except KeyError:
            b[key] = str(c)
</code></pre>
<p>Output:</p>
<pre><code>print(','.join(data[0]))
for k in b.keys():
    print("{0},{1}".format(k, b[k]))

&gt;&gt;&gt; OS,A,B,C,D,E
&gt;&gt;&gt; Ubuntu,3,4,5,6,3
&gt;&gt;&gt; Windows,3,2,6,6,3
&gt;&gt;&gt; Mac,4,1,6,5,3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This extends <a href="https://stackoverflow.com/users/5043793/niemmi">niemmi's</a> <a href="https://stackoverflow.com/a/41363513/3657941">solution</a> to format the output to be the same as the <a href="https://stackoverflow.com/users/1251660/slayedbylucifer">OP's</a> <a href="https://stackoverflow.com/q/41363430/3657941">example</a>:</p>
<pre><code>import csv
from collections import Counter, defaultdict

d = defaultdict(Counter)
with open('dummy.csv') as csv_file:
    reader = csv.DictReader(csv_file)
    field_names = reader.fieldnames
    for row in reader:
        counter = d[row.pop('OS')]
        for key, value in row.iteritems():
            counter[key] += int(value)

print ','.join(field_names)
for os, counter in sorted(d.iteritems()):
    print "%s,%s" % (os, ','.join([str(v) for k, v in sorted(counter.iteritems())]))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>OS,A,B,C,D,E
Mac,4,1,6,5,3
Ubuntu,3,4,5,6,3
Windows,3,2,6,6,3
</code></pre>
<p><strong>Update:</strong> Fixed the output.</p>
</div>
<span class="comment-copy">+1. However, I would prefer <code>csv</code> for this job as it saves me from installing a new package which is not practical on the server I am working on.</span>
<span class="comment-copy">@slayedbylucifer Makes sense. But if you have to do a lot of these csv tasks then <code>pandas</code> is your best bet.</span>
<span class="comment-copy">+1. I never realized the keys are empty in first place. May be because I had used <code>autovivification</code> in perl a lot. Now I understand what I was missing.</span>
<span class="comment-copy">+1. However, I would prefer <code>csv</code> for this job as it saves me from installing a new package which is not practical on the server I am working on.</span>
<span class="comment-copy">Something is wrong in the sorting/joining in above code as the output is wrong.</span>
<span class="comment-copy">Thanks. I forgot to sort the counter.</span>
