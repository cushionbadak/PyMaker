<div class="post-text" itemprop="text">
<p>In Python 3, <code>read</code>(<em>size</em>) has the following documentation:</p>
<blockquote>
<p>Read and return at most <em>size</em> characters from the stream as a single <code>str</code>. If size is negative or <code>None</code>, reads until EOF.</p>
</blockquote>
<p>But suppose that you <code>seek()</code> to the <em>middle</em> of a multi-byte UTF-8 character. What will <code>read(1)</code> return?</p>
</div>
<div class="post-text" itemprop="text">
<p>The partial unicode character can't be decoded so python will raise a <code>UnicodeDecodeError</code>. But you can recover from the problem. The UTF-8 encoding is built to be self-healing, meaning that the first byte of the character sequence (0x00-0x7f or 0xc0-0xfd) will not appear in any other byte, so you just need to keep seeking backwards by 1 byte until the decode works.</p>
<pre><code>&gt;&gt;&gt; def read_unicode(fp, position, count):
...     while position &gt;= 0:
...         fp.seek(position)
...         try:
...             return fp.read(count)
...         except UnicodeDecodeError:
...             position -= 1
...     raise UnicodeDecodeError("File not decodable")
... 
&gt;&gt;&gt; open('test.txt', 'w', encoding='utf-8').write("学"*10000)
10000
&gt;&gt;&gt; f=open('test.txt', 'r', encoding='utf-8')
&gt;&gt;&gt; f.seek(32)
32
&gt;&gt;&gt; f.read(1)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.4/codecs.py", line 319, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa6 in position 0: invalid start byte
&gt;&gt;&gt; read_unicode(f, 32, 1)
'学'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Text streams in Python 3 don't support arbitrary seek offsets, you're only supposed to use offsets of 0, or values returned by <code>tell</code> with <code>whence</code> of <code>SEEK_SET</code>. Everything else is undefined or unsupported behavior. See <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.seek" rel="nofollow noreferrer">the docs for <code>TextIOBase.seek</code></a>.</p>
<p>Sure, in practice, you might get <code>UnicodeDecodeError</code>, but that is not a guarantee. As soon as you violate the API contractual requirements, it can do whatever it wants.</p>
</div>
