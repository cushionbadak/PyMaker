<div class="post-text" itemprop="text">
<p>Given the following code:</p>
<pre><code>import pickle

class Test:
    d = {}    

    def func(self):
        self.d['x'] = 'y'

test = Test()
test.func()
pickle.dump(test, open('test.p', 'wb'))

%reset

import pickle
class Test:
    d = {}    

    def func(self):
        self.d['x'] = 'y'


print(pickle.load(open('test.p', 'rb')).d)
</code></pre>
<p>I would expect the output</p>
<pre><code>y
y
</code></pre>
<p>However, the actual output is</p>
<pre><code>y
{}
</code></pre>
<p>Is this a known bug or am I misunderstanding something?</p>
<p>I am using <strong>Miniconda Python 3.5.2</strong> on <em>Windows</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled" rel="nofollow noreferrer">pickle documentation</a></p>
<blockquote>
<p>... when class instances are pickled, their classâ€™s code and data are not pickled along with them. Only the instance data are pickled. </p>
</blockquote>
<p>The behavior you see is documented and not in error.</p>
</div>
<span class="comment-copy">I would not expect the output that you expect. <code>self.d</code> is a class variable. Pickle serializes objects, not classes.</span>
<span class="comment-copy">Any time you're wondering whether there's a bug in a Python standard library module, you can generally assume that the answer is "no, you're just doing something wrong."</span>
<span class="comment-copy">the <code>.d</code> is not specific to the object you pickled, why would you expect it to be pickled along with the object?</span>
<span class="comment-copy">In that case, either <a href="https://stackoverflow.com/posts/41233003/edit">edit</a> this question and add your new program, or ask a new question. Perhaps there is another issue.</span>
