<div class="post-text" itemprop="text">
<p>I have a list like this for example:</p>
<pre><code>L = [(0, "test", "value"), (0, "test2", "value2")]
</code></pre>
<p>and I need to = bisect_left the first item of each tuple to find an index in the list. However, I can't think of a way of doing this without creating a list of all of these first items before hand:</p>
<p><code>exampleList = [L[i][0] for i in range(len(L))]</code></p>
<p>any ideas on another way to do this as it works but when my list gets to 5000 items long it is very slow and I need a faster way of doing it?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import bisect
L = [(0, "test", "value"), (1, "test2", "value2"),(3,"test3","value3")]
print (bisect.bisect_left(L,(2,)))
</code></pre>
<p>python deals with tuple comparisons great... just pass it <code>(2,"asd","dsa")</code> or even just <code>(2,)</code> (or whatever your index location item you are trying to find)</p>
<p>or you could pass it <code>(0,"asd","value")</code> and it would know to put it to the left of the other <code>(0,"test","value")</code> item tuple ... or <code>(0,"zzzz","value")</code> and it would know to put it to the right of that item</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a builtin <a href="https://docs.python.org/3/library/bisect.html#bisect.bisect_left" rel="nofollow noreferrer"><code>bisect_left</code></a>, you can use it.  You don't need to build the whole intermediate list, you just need a lazy object that retrieves the first item from the tuple at that position.  </p>
<p>Something simple like:</p>
<pre><code>class Proxy(object):
    def __getitem__(self, item):
        return L[item][0]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/library/bisect.html" rel="nofollow noreferrer">bisect left or right</a> is already in the language.</span>
<span class="comment-copy">Great answer ! Thanks.</span>
