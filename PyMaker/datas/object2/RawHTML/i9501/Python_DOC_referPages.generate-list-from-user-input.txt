<div class="post-text" itemprop="text">
<p>How could I have a user input something like <code>Blah Blah [1-30] Blah</code> and then parse it to get a list like so:</p>
<pre><code>[
    'Blah Blah 1 Blah',
    'Blah Blah 2 Blah',
    etc...
    'Blah Blah 30 Blah',
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use regex. First find the start and end points ,specified by <code>[a-b]</code>. Then loop them, and replace these brackets by the increasing number:</p>
<pre><code>import re
expr = input('Enter expression: ') # Blah Blah [1-30] Blah
start, end = map(int, re.findall('(\d+)-(\d+)', expr)[0])
my_list = [re.sub('\[.*\]', str(i), expr) for i in range(start, end + 1)]

&gt;&gt;&gt; pprint(my_list)
['Blah Blah 1 Blah',
 'Blah Blah 2 Blah',
 ...
 'Blah Blah 29 Blah',
 'Blah Blah 30 Blah']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you do not want to use regex you could try something like this using <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">split</a>:</p>
<pre><code>user_input = input('Please enter your input e.g. blah blah [1-30] blah:')

list_definiton = (user_input[user_input.find('[')+len(']'):user_input.rfind(']')])

minimum = int(list_definiton.split('-')[0])
maximum = int(list_definiton.split('-')[1])

core_string = user_input.split('[' + list_definiton + ']')

string_list = []
for number in range(minimum, maximum + 1):
  string_list.append("%s%d%s" % (core_string[0], number, core_string[1]))

print(string_list)
</code></pre>
<p>Try it <a href="https://repl.it/EsyE/1" rel="nofollow noreferrer">here!</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Edited to your needs:</p>
<pre><code>import re
seqre = re.compile("\[(\d+)-(\d+)\]")
s = "Blah Blah [1-30] blah"

seq = re.findall(seqre, s)[0]
start, end = int(seq[0]), int(seq[1])

l = []
for i in range(start, end+1):
    l.append(re.sub(seqre, str(i), s))
</code></pre>
</div>
<span class="comment-copy">It works just fine, but the regex is shorter and clearer. Thanks for your answer though.</span>
<span class="comment-copy">This is in python 3 :P but I wanted the user to input one line and then the program to generate the list.</span>
<span class="comment-copy">Would the line have certain delimiters? For example a comma?</span>
<span class="comment-copy">I could do input().split(', ') but the problem with that it that the user would have to type out j1, j2, j3, etc... instead of j[1-10]</span>
<span class="comment-copy">The new answer doesn't work. Something with how you are getting the start -- [135,136] returns [5,6,7,8,...,136]</span>
