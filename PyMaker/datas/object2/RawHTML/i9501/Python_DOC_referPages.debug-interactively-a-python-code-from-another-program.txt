<div class="post-text" itemprop="text">
<p>I'm writing a python editor with support to debugging. I have to debug <strong>interactively</strong> a python code from my application like a IDE, but without many options.</p>
<p>I know bdb and <a href="https://docs.python.org/3.4/library/pdb.html" rel="nofollow noreferrer">pdb</a>, but I have to execute this script saved into a file and send commands like <em>step over, continue, quit</em>, etc.</p>
<p>I'm trying something using <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> lib with pdb but I didn't achive a good result.</p>
<pre><code>p = subprocess.Popen(args=[sys.executable, '-m', 'pdb', 'mide.py'],
                 stdin=subprocess.PIPE,
                 stdout=subprocess.PIPE,
                 stderr=subprocess.PIPE,
                 universal_newlines=True)
p.communicate('s')
p.communicate('s')# I know why this line doesn't work, it's just a example how i wanted to do it.
</code></pre>
<p>How to make this works in python 3.x? I just need a path to follow, but preferably just with python 3 without external dependences.</p>
<p>P.S. I'm using PyQt5.</p>
</div>
<div class="post-text" itemprop="text">
<p>From Subprocess documentation on <code>communicate</code>:</p>
<blockquote>
<p>Popen.communicate(input=None)</p>
<p>Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. Wait for process to terminate. The optional input argument should be a string to be sent to the child process, or None, if no data should be sent to the child.</p>
</blockquote>
<p>So when <code>communicate</code> is called it will wait for the process to terminate. It can not be called a second time because the process has already terminated.</p>
<p>You should probably instead read directly from the <code>stdout</code> and <code>stderr</code> yourself. This has to be done in different threads, or you have to poll once in a while to see if data is available. Each command can take an unknown time to be executed by pdb, so you don't know when the output will be ready. You send command by writing to the process <code>stdin</code>.</p>
<p>You might also want to look into the <code>pexpect</code> module <a href="http://pexpect.readthedocs.io/en/stable/" rel="nofollow noreferrer">here</a>. However it does not have good Windows support yet.</p>
</div>
<span class="comment-copy">thanks Petersen for the answer!!</span>
