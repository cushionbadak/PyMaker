<div class="post-text" itemprop="text">
<p>When I inherit <code>Atom</code> from <code>atom.api</code>, I can not create a member variable.</p>
<p>What mechanism explains this?</p>
<pre><code>from atom.api import Atom

class A:
    def init(self):
        self.var = 0

class B(Atom):
    def init(self):
        self.var = 0

a = A()
a.init()

b = B()
b.init()
</code></pre>
<p>When <code>b.init()</code> is executed, I get the error msg:</p>
<blockquote>
<p>AttributeError: 'B' object has no attribute 'var'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Atom has overridden descriptors. They are responsible for the different behavior of the use of getters (<code>self.x</code>) and setters (<code>self.x = 42</code>). That's why you've got the error. For more information read:</p>
<p>1) About descriptors in Python: <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow noreferrer">https://docs.python.org/3/howto/descriptor.html</a></p>
<p>2) About Atom framework: <a href="https://pypi.python.org/pypi/atom/0.3.6" rel="nofollow noreferrer">https://pypi.python.org/pypi/atom/0.3.6</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Declare the variable like you would a static member of the class</p>
<pre><code>class B(Atom):

    var = Range(low=0)

    def init(self):
        self.var = 0
</code></pre>
<p>It will then be considered by <code>atom</code> as a valid class field.</p>
</div>
<span class="comment-copy">I'd say its likely that atom being a <code>framework for creating memory efficient Python objects</code> is changing the underlying representation of the object itself. This probably causes ordinary assignment to be invalid. You should read the documentation for <a href="https://github.com/nucleic/atom" rel="nofollow noreferrer">atom</a> to see how it can be done.</span>
<span class="comment-copy">Perhaps you could add the relevant part(s) of each link to your answer?</span>
<span class="comment-copy">Thanks for the answer.</span>
