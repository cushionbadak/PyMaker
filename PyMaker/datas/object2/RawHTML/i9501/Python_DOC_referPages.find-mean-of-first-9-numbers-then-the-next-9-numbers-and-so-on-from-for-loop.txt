<div class="post-text" itemprop="text">
<p>I have a <code>for</code> loop that gives me the following output.</p>
<pre><code>0.53125
0.4375
0.546875
0.578125
0.75
0.734375
0.640625
0.53125
0.515625
0.828125
0.5
0.484375
0.59375
0.59375
0.734375
0.71875
0.609375
0.484375
.
.
.
</code></pre>
<p>How do I find the mean of the first 9 values, the next 9 values and so on and store them into a list like <code>[0.58,0.20,...]</code>? I have tried a lot of things but the values seem to be incorrect. What is the correct way of doing this?</p>
<p>What I did:</p>
<pre><code>matchedRatioList = []
matchedRatio = 0
i = 0
for feature in range(90):
    featureToCompare = featuresList[feature]
    number = labelsList[feature]
    match = difflib.SequenceMatcher(None,featureToCompare,imagePixList)
    matchingRatio = match.ratio()
    print(matchingRatio)
    matchedRatio += matchingRatio
    if i == 8:
        matchedRatioList.append(matchedRatio / 9)
        i = 0
        matchedRatio = 0
    i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Once you have the list of numbers you can calculate the average of each group of 9 numbers using list comprehensions:</p>
<pre><code>from statistics import mean

numbers = [0.53125, 0.4375, 0.546875, 0.578125, 0.75, 0.734375, 0.640625,
           0.53125, 0.515625, 0.828125, 0.5, 0.484375, 0.59375, 0.59375, 
           0.734375, 0.71875, 0.609375, 0.484375]

group_len = 9
matched_ratios = [mean(group) for group in [numbers[i:i+group_len] 
                  for i in range(0, len(numbers), group_len)]]
print(matched_ratios)
# [0.5850694444444444, 0.6163194444444444]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your solution is close. Start with <code>i = 1</code> and check for <code>i == 9</code></p>
<pre><code>matchedRatioList = []
matchedRatio = 0
i = 1   # change here
for feature in range(90):
    ...
    matchedRatio += matchingRatio
    if i == 9:  # change here
        matchedRatioList.append(matchedRatio / 9)
        i = 0
        matchedRatio = 0
    i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I do not know what you have tried so far, but I can present you with one solution to the problem.</p>
<p>Save all values in your for-loop to a buffer array. Use an if-statement with <code>iterator % 9 == 0</code> inside your for-loop, which will make some portion of code execute only every 9 values. </p>
<p>Inside the if-statement you can write the mean value of your buffer array to a different output array. Reset your buffer array inside this if-statement as well, then this process is repeated and should behave in the way you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>r = []
for b in a:
    c += b
    if i == 8:
        c = c/9
        r.append(c)
        c = 0
        i = 0
    i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>since nobody used reduce so far :)</p>
<pre><code>import functools
l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
m = []
for i in range(9,len(l), 9):
    m.append(functools.reduce(lambda x, y: x + y, l[i-9:i])/9)
print(m)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using mean function from the statistics module of Python.</p>
<pre><code>import statistics
# Sample Values list I created.
values_list = list()
for i in range(1,82):
    values_list.append(i)
mean_list = list()
for i in range(0, len(values_list), 9):
    mean_list.append(statistics.mean(values_list[i:i+9]))
for i in mean_list:
    print(i)
</code></pre>
<p>This is the simplest way in which you can do it.
<a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer">https://docs.python.org/3/library/statistics.html#statistics.mean</a></p>
</div>
<div class="post-text" itemprop="text">
<p>One-line solution given loop output in <code>numbers</code>:</p>
<pre><code>[float(sum(a))/len(a) for a in zip(*[iter(numbers)]*9)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Putting ideas from the other answers together, this could be the whole program:</p>
<pre><code>from statistics import mean

matching_ratios = (difflib.SequenceMatcher(None, feature, imagePixList).ratio()
                   for feature in featuresList[:90])
matchedRatioList = [mean(group) for group in zip(*[matching_ratios] * 9)]
</code></pre>
</div>
<span class="comment-copy"><i>I have tried a lot of things</i> - Please show them, we might be able to help you fix them.</span>
<span class="comment-copy">@thefourtheye ok, sure</span>
<span class="comment-copy">Decompose your problem in to smaller parts. To take the means of groups of 9, you need to know how to make groups of 9 and how to take means of groups. I suppose in this case it's the former that gives you problems, so you're asking about forming groups and taking means is irrelevant. Luckily how to group lists into many evenly sized smaller lists has been asked many times.</span>
<span class="comment-copy">Note that you're doing <code>i=0</code> in the <code>if</code> block and then <code>i+=1</code> immediately after.</span>
<span class="comment-copy">What @muru is trying to point out is that you're counting 0, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8. You should not increase <code>i</code> when you just set it to <code>0</code>, so you're missing an <code>else</code>.</span>
<span class="comment-copy">But value % 9 will exclude multiple of 9 values won't they?</span>
<span class="comment-copy">I am sorry I made a mistake, you should use the iterator of your for-loop in stead of the value!</span>
<span class="comment-copy">I seem to have the wrong values...</span>
<span class="comment-copy">it is adding <code>0+1+2+3+4+5+6+7+8 = 36, 36 / 9 = 4</code></span>
<span class="comment-copy">then adds 9 to i which becomes 18, then <code>9+10+11+12+13+14+15+16+17 = 117, 117/9 = 13</code> and 18 is left off because it is only adding full 9 elements chunks</span>
