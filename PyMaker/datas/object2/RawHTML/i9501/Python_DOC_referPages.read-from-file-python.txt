<div class="post-text" itemprop="text">
<p>I have defined some constant in my python code. Those constants are the following :</p>
<pre><code>pairs = (
 (0.0, 0.25, 0.2, 0.30),
 (0.25, 0.5, 0.35, 0.45),
 (0.5, 0.75, 0.5, 0.6),
 (0.75, 1.0, 0.65, 0.75)
) 
</code></pre>
<p>I want to put those constants in text file and read them from my code. How is it possible to do so? How can I read in exact the same way those constants?</p>
<p>EDIT: I tried to read the variables using the following code:</p>
<pre><code>with open ("test.txt", "r") as myfile:
   data=myfile.readlines()
</code></pre>
<p>However it does not produce the desired output.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import csv
with open(path, 'rb') as f:
    reader = csv.reader(f)
    list_out = list(reader)
    print list_out
</code></pre>
<p>Creates the output in list format </p>
<pre><code>[['0.0', ' 0.25', ' 0.2', ' 0.30'], ['0.25', ' 0.5', ' 0.35', ' 0.45'], ['0.5', ' 0.75', ' 0.5', ' 0.6'], ['0.75', ' 1.0', ' 0.65', ' 0.75']]
</code></pre>
<p>Input file is created and saved as follows</p>
<pre><code>0.0, 0.25, 0.2, 0.30
0.25, 0.5, 0.35, 0.45
0.5, 0.75, 0.5, 0.6
0.75, 1.0, 0.65, 0.75
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Writing them is easy</p>
<pre><code>def writeinformationtofile(info, thefilename): # writes information to file
  with open(thefilename, "w") as filea:
    filea.write(info)
</code></pre>
<p>Interpreting them is similarly easy. First read the file</p>
<pre><code>with open(thefilename, "r") as filea:
  openedinfo = openedfile.read()
</code></pre>
<p>This will be a string. Then turn it into a tuple using the following as a source of information</p>
<p><a href="https://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval">Using python's eval() vs. ast.literal_eval()?</a></p>
<pre><code>import ast
ast.literal_eval(openedinfo)
</code></pre>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on their own. A good way to demonstrate this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the <a href="http://stackoverflow.com/tour">FAQ</a> and <a href="http://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">And <code>import</code> it.</span>
<span class="comment-copy">There are several ways, but if you don't know any way It looks like you should read up on <a href="https://docs.python.org/2/library/json.html" rel="nofollow noreferrer">json</a>. There are many tutorials on this subject, if the official documentation is not clear to you.</span>
<span class="comment-copy">You could consider serializing by mean of pickle: <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow noreferrer">docs.python.org/2/library/pickle.html</a></span>
<span class="comment-copy">There's also <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a></span>
<span class="comment-copy">You may benefit from <a href="https://docs.python.org/3/library/csv.html#csv.QUOTE_NONNUMERIC" rel="nofollow noreferrer"><code>QUOTE_NONNUMERIC</code></a>, so that these numbers are automatically converted to floats</span>
<span class="comment-copy"><code>"%s" %(thefilename)</code> is equivalent to <code>thefilename</code>. Also, you probably wanted to use <code>filea.write(repr(info))</code>. BTW, consider using context managers (i.e. <code>with</code> blocks) when dealing with files, to ensure that they are properly closed in case an error occurs</span>
<span class="comment-copy">Thanks for the comment - I believed I have edited as you suggested. Let me know if I could improve it further. Thank you!</span>
