<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/437589/how-do-i-unload-reload-a-python-module">How do I unload (reload) a Python module?</a>
<span class="question-originals-answer-count">
                    18 answers
                </span>
</li>
</ul>
</div>
<pre><code>import utils; reload(utils)

from utils import *
</code></pre>
<p>Why does it need load twice? 'reload' is not a built-in function. Right?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What does 'reload' do in this case?</p>
</blockquote>
<p>That depends on what <code>utils</code> does... For example, if importing <code>utils</code> has a side-effect, then that effect will take place again.</p>
<hr/>
<p>Also note that using <code>reload</code> in any production code is definitely something that you want to avoid. The main reason that <code>reload</code> exists is for interactive use ...</p>
<ul>
<li>load module</li>
<li>Test it out and see a bug</li>
<li>Edit module</li>
<li>Reload module</li>
<li>Test it out</li>
<li>...</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Best way to find out is to check the <a href="https://docs.python.org/3/library/imp.html#imp.reload" rel="nofollow noreferrer"><code>reload</code> document</a>, which says:</p>
<blockquote>
<ol>
<li><p><em>Python modules’ code is recompiled and the module-level code reexecuted</em>, defining a new set of objects which are bound to names in the module’s dictionary. The init function of extension modules is not called a second time.</p></li>
<li><p>As with all other objects in Python the <em>old objects are only reclaimed after their reference counts drop to zero</em>.</p></li>
<li><p>The <em>names in the module namespace are updated</em> to point to any new or changed objects.</p></li>
<li><p>Other <em>references to the old objects</em> (such as names external to the module) <em>are not rebound to refer to the new objects and must be updated in each namespace where they occur if that is desired</em>.</p></li>
</ol>
</blockquote>
</div>
<span class="comment-copy">reload is a built-in function in python 2 <a href="https://docs.python.org/2/library/functions.html#reload" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#reload</a></span>
<span class="comment-copy">Why does the 'side-effect' need to take place again?</span>
<span class="comment-copy">@user697911 -- I don't have any idea why the side-effect would need to happen again :-).  I don't even know if <code>utils</code> <i>has</i> a side-effect.</span>
<span class="comment-copy">After "edit" a module, you have to run the module again, and when you run the module, the first "import utils" is executed AGAIN. Why do you need to reload(utils) to get the effect?</span>
<span class="comment-copy">@user697911 -- You needed the first import to get a reference to reload.  Each import first checks to see if the module was <i>already</i> imported.  If it was, then it doesn't get imported <i>again</i>.</span>
