<div class="post-text" itemprop="text">
<p>pytest has this example in the <a href="http://doc.pytest.org/en/latest/monkeypatch.html" rel="nofollow noreferrer">monkeypatching</a> docs:</p>
<pre><code>import os.path
def getssh(): # pseudo application code
    return os.path.join(os.path.expanduser("~admin"), '.ssh')

def test_mytest(monkeypatch):
    def mockreturn(path):
        return '/abc'
    monkeypatch.setattr(os.path, 'expanduser', mockreturn)
    x = getssh()
    assert x == '/abc/.ssh'
</code></pre>
<p>When I remove the <code>path</code> argument from the <code>mockreturn</code> function, I get the error</p>
<pre><code>    def getssh():  # pseudo application code
&gt;       return os.path.join(os.path.expanduser("~admin"), '.ssh')
E       TypeError: mockreturn() takes 0 positional arguments but 1 was given
</code></pre>
<p>I don't understand what is providing that positional argument?</p>
<p>Also, when I reimplement the same thing for pathlib.Path.home() I cannot have this argument <code>path</code> there, otherwise it won't work. Unfortunately, the documentation does not say anything about that ominous <code>path</code> argument.</p>
<p>Any illumination for what magic is happening here would be very helpful!</p>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to replace <code>os.path.expanduser</code> that takes one argument with a mock that doesn't take arguments at all which results to an error when called. 
Under the hood <code>monkeypatch.setattr</code> uses builtin <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer"><code>setattr</code></a> so the original version is basically doing following which works since both <code>expanduser</code> and <code>mock</code> take single argument:</p>
<pre><code>&gt;&gt;&gt; import os.path
&gt;&gt;&gt; def mock(path):
...     return '/abc'
... 
&gt;&gt;&gt; setattr(os.path, 'expanduser', mock)
&gt;&gt;&gt; os.path.expanduser('~admin')
'/abc'
</code></pre>
<p>Now if you try to replace <code>expanduser</code> with a method that doesn't take arguments and keep calling it the same way you'll get an error:</p>
<pre><code>&gt;&gt;&gt; setattr(os.path, 'expanduser', mock)
&gt;&gt;&gt; os.path.expanduser('~admin')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: mock() takes 0 positional arguments but 1 was given
</code></pre>
<p>Note that you'll get exactly the same error if you try to call <code>mock</code> directly:</p>
<pre><code>&gt;&gt;&gt; mock('~admin')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: mock() takes 0 positional arguments but 1 was given
</code></pre>
</div>
<span class="comment-copy">Thank you, I just didn't click/see that <code>expanduser</code> is of course the function that provides the path, while pathlib.Path.home() works without it.</span>
