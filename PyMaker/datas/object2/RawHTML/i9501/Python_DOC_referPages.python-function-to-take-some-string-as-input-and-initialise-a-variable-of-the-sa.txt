<div class="post-text" itemprop="text">
<p>I was trying to create a <code>name(string)</code> function which prompts user for "name" and stores it in a variable of named string.  </p>
<pre><code> ` def name(variable_name):
     var = variable_name
     var = input('Enter a name: ')` 
</code></pre>
<p>Though I know the above code won't work since a variable can't be passed as an argument to the parameter. So is there any way yo do this?</p>
<p>Sorry, for the typecast I am new to Python as well as Stackoverflock.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def get_name():
    return input('Enter a name: ')

my_name = get_name()  # my_name var stores the result
</code></pre>
<p>If you're trying to abstract out the prompt and underlying <code>input()</code> call, the above would be the recommended way. The function returns the value, and you can store or utilize the return of the wrapper however you choose.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python does give you the ability to manipulate the symbol table via <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a> and <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer"><code>locals()</code></a>. By using these you can create a variable with an arbitrary user supplied name and attach it to the global scope as follows:</p>
<pre><code>def make_var():
    var_name = input("Variable name")
    globals()[var_name] = 0
</code></pre>
<p>You might also want to look at what <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer"><code>locals()</code></a> does too.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you want something like :</p>
<pre><code> def name():
     var = input('Enter a name: ')
     return var
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly you want the text entered by the user to be the name of the variable in the Python code. So if I give my name 'Chris' there should be a variable created called Chris.</p>
<p>The only reason I can see to do this is that you are trying to get your program to pick from variables that already exist in your code, since otherwise what value do we assign to the variable?</p>
<p>I can see four ways to do this.</p>
<p>1) Use a dictionary:</p>
<pre><code>data_dictionary = dict(Chris=1, Dave=2, John=3)
default_value = 0
var = input('Enter a name: ')

# Get
new_value = data_dictionary.get(var, default_value)

# Set
data_dictionary[var] = default_value
</code></pre>
<p>2) Use an object (if you are writing this code into a class even better):</p>
<pre><code>class DataClass(object):
    default_value = 0

data_class = DataClass()
var = input('Enter a name: ')

# Get
new_value = getattr(data_class, var, data_class.default_value)

# Set
setattr(data_class, var, data_class.default_value)
</code></pre>
<p>3) Use <code>exec</code> (<a href="https://docs.python.org/2.0/ref/exec.html" rel="nofollow noreferrer">https://docs.python.org/2.0/ref/exec.html</a>) (Warning: Dangerous if used incorrectly)</p>
<pre><code>default_value = 0
var = input('Enter a name: ')

# Get (with highly inadequate amount of error catching)
exec('new_value = {}'.format(var))

# Set
exec('{0} = {1}'.format(var, default_value))
</code></pre>
<p>4) Use <code>eval</code> (Warning: Ridiculously dangerous, especially if the user cannot be 100% trusted, this could be used to do almost anything by the user)</p>
<pre><code>Actually I changed my mind, never use eval.
</code></pre>
<p>Hope one of these is helpful.</p>
</div>
<span class="comment-copy">Tell us the larger problem you are trying to solve. Messing with variable names is not a good idea. You probably want a dictionary.</span>
<span class="comment-copy">This sounds a bit like an XY problem.</span>
<span class="comment-copy">Well, no I don't need a dictionary. I was just wondering if we can create a function which takes a valid variable name and initialise a variable of the same name. Since we can't use variables as arguments we should pass a string. But can we convert the string to a variable.</span>
<span class="comment-copy">No i basically want a function which takes a string as input and initialises a variable of the same name.</span>
<span class="comment-copy">The OP is trying to create variable names dynamically, not get user input. nice guess though.</span>
<span class="comment-copy">I cannot edit my comment so, I am commenting again.                    I need a function that converts a given string into a variable.        Maybe its impossible but I still want to know.</span>
<span class="comment-copy">@AbhinavRaj That's what the first snippet of code here does. You might also want to look at what <code>locals()</code> does too.</span>
<span class="comment-copy">Thabk You very much. That's exactly what I needed. I just need to add one parameter to the make_var function.                              Well, I was wondering could we do this in other languages also.</span>
