<div class="post-text" itemprop="text">
<p>I have a list of tuples, and now I need to get the key <code>rate</code></p>
<pre><code>'rate': 3.3000000000000003
</code></pre>
<p>However when I do <code>print rates[0]['rate']</code> I am getting <code>3.3</code>, not <code>3.3000000000000003</code>. Any idea why, and how to solve?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are not loosing the precision. Python is just changing it's <em>representation</em> by making precision. If you want to display the value as it is, you may use <a href="https://docs.python.org/2/library/functions.html#func-repr" rel="nofollow noreferrer"><code>repr()</code></a> as:</p>
<pre><code>print repr(rates[0]['rate'])
</code></pre>
<p>which will print your number as a string:</p>
<pre><code>'3.3000000000000003'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Don’t confuse rounding with formatting a value for output.</strong> If your goal is simply to output a numerical value with a certain number of decimal places, you don’t typically need to use round(). Instead, just specify the desired precision when formatting. For example:</p>
<pre><code>&gt;&gt;&gt; x = 1.23456
&gt;&gt;&gt; format(x, '0.2f')
'1.23'
&gt;&gt;&gt; format(x, '0.3f')
'1.235'
&gt;&gt;&gt; 'value is {:0.3f}'.format(x)
'value is 1.235'
&gt;&gt;&gt;
</code></pre>
<p>Also, resist the urge to round floating-point numbers to "fix" perceived accuracy problems. For example, you might be inclined to do this:</p>
<pre><code>&gt;&gt;&gt; a = 2.1
&gt;&gt;&gt; b = 4.2
&gt;&gt;&gt; c = a + b
&gt;&gt;&gt; c
6.300000000000001
&gt;&gt;&gt; c = round(c, 2)      # "Fix" result (???)
&gt;&gt;&gt; c
6.3
&gt;&gt;&gt;
</code></pre>
<p><strong><a href="http://chimera.labs.oreilly.com/books/1230000000393/ch03.html#_discussion_41" rel="nofollow noreferrer">Source</a></strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Of course, you can use string formatting tools, as @parik and @Molnuddin hoted. Also you can use decimal arithmetic module <code>decimal</code> for operations for <a href="https://docs.python.org/2/library/decimal.html" rel="nofollow noreferrer">Python 2</a> or <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">Python 3</a> .</p>
</div>
<span class="comment-copy">depends on where you print it</span>
<span class="comment-copy">The minimal example for this is <code>print 3.3000000000000003</code>. You're not losing any information, it's just a representation.</span>
<span class="comment-copy">@jonrsharpe, ok, but how to represent the number with all decimal places?  I need this in terms of visual representation, I can't truncate info.</span>
<span class="comment-copy"><code>print repr(3.3000000000000003)</code>. Or be more explicit about the formatting you want using e.g. <code>str.format</code> to create a string to print.</span>
