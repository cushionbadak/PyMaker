<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11456637/removing-an-instance-of-an-object-in-python-list">removing an instance of an object in python list</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm working on implementing Dijkstra's algorithm in python and I was wondering how I can remove an instance of an object from a list ? 
Here's a part of my code in which I get an error: "list.remove(x): x not in list".</p>
<pre><code>class Vertex:
    def __init__(self, id, name):
        self.id = id
        self.name = name
        self.minDistance = float("inf")
        self.previousVertex = None
        self.edges = []

    def computePath(self, sourceId):
        for i in self.vertexes:
            if i.id == sourceId:
                startVertex = i
                startVertex.minDistance=0
                break
            else:
                continue
        unvisited = []
        for vertex in self.vertexes:
            unvisited.append(vertex)
        while len(unvisited)!=0:
            self.visited.append(startVertex)
            unvisited.remove(startVertex)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list.remove()</code> will remove the first item from the list where that item is equal to whatever you wanted to remove.</p>
<p>In other words, the algorithm is to do this:</p>
<pre><code>def remove(self, item_to_remove):
    for index, item in enumerate(self):
        if item == item_to_remove:
            del self[index]
            return
    raise ValueError('list.remove(x): x not in list')
</code></pre>
<p>The trick then is to make the <code>==</code> equality test pass. This is done with the <a href="https://docs.python.org/3/reference/datamodel.html#object.__eq__" rel="nofollow noreferrer"><code>__eq__</code> method</a>. The <em>default</em> implementation is to only return <code>True</code> when the two items are <em>one and the same object</em>, so <code>item is item_to_remove</code> is true.</p>
<p>You can create a custom method for your <code>Vertex</code> class:</p>
<pre><code>def __eq__(self, other):
    if not isinstance(other, Vertex):
        return NotImplemented
    return self.id == other.id  # refine as needed
</code></pre>
<p>You need to decide when two <code>Vertex</code> instances are equal.</p>
</div>
<span class="comment-copy">You keep trying to remove <code>startVertex</code> over and over in the loop.</span>
<span class="comment-copy">Also <code>pop()</code> is a good function to remove things from list too as it does it in place.</span>
<span class="comment-copy">@MooingRawr so does <code>.remove</code></span>
<span class="comment-copy">@user2357112 I prevent it from doing so later in the code, I just didnt want to post the whole code cause it would be too long</span>
