<div class="post-text" itemprop="text">
<p>I have a basic question about ordering in <code>scandir</code> function. So far I read man pages for  POSIX <code>readdir</code> and didn't found specific information about ordering guaranties. </p>
<p>But when I iterate over large directory (which cannot be changed, read only) I observe same results over multiple systems (Fedora 24 and Ubuntu 16.04).</p>
<p>What is the reason of this behaviour? Where I can read more about it?</p>
<p>If I need consisted ordering, should I wrote my own wrapper around POSIX <a href="http://man7.org/linux/man-pages/man3/scandir.3.html" rel="nofollow noreferrer">scandir</a> or someone knows existing implementation for python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Man page for <code>readdir</code> is explicit:</p>
<blockquote>
<p>The order in which filenames are read by successive calls to
         readdir() depends on the filesystem implementation; it is unlikely
         that the names will be sorted in any fashion.</p>
</blockquote>
<p>In most implementations, a directory is a sequential list entries and both <code>readdir</code> and <code>scandir</code> follow the underlying order. If you used similar file systems on different Linux version, and filled the directory in same order, it is likely that <code>readdir</code> also give same order. The order is not random and is absolutely deterministic and reproductible provided you do not add, remove or rename any file (at least once the file system is <em>stable</em>, because some can delay some actions). Simply it is not <em>predictible</em> from the file names.</p>
<p>So if you want a consistent order, you must deal yourself with the ordering.</p>
</div>
<div class="post-text" itemprop="text">
<p>To answer the second part of the question, here is an implementation that sorts:</p>
<pre><code>for f in sorted(os.listdir('/usr/share')): print(f)
</code></pre>
<p>Using listdir() here, instead of scandir() to get a list of names as strings, which sort easier than the DirEntry objects returned by scandir().</p>
</div>
<span class="comment-copy">Yes, in python you need a wrapper: <a href="https://docs.python.org/3/library/os.html#os.scandir" rel="nofollow noreferrer">"The entries are yielded in arbitrary order"</a>.</span>
