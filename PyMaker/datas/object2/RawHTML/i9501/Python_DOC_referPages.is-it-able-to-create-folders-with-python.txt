<div class="post-text" itemprop="text">
<p>I am writing a Pokemon game and I want to make folders to save different types of Pokemon, as well as other sorts of information, in. I want to use folders because it would be really messy if I were to save all my data into a single file.</p>
<p>Is it possible to create folders with a Python program?  This would make it easier and cleaner for me when I try to import the Pokemon data from external websites.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can run any command that you want with python by doing:</p>
<pre><code>import os
os.popen("mkdir random_name") # This creates a directory called "random_name"
os.popen("touch rando_name.txt") # This creates a file called "random_name"
</code></pre>
<p>You can run any command that you would usually run in terminal inside the popen.</p>
<p>You can use the popen() command in both UNIX(Linux, macOS) as well as Windows OS.
You can learn more regarding this by taking a look in the python documentation.
<a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/2/library/subprocess.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open</code></a> with the <code>a</code> mode, which opens a file in append mode, and creates it if it does not exist:</p>
<pre><code>my_file = open('file.txt', 'a')
# Optionally: write stuff to my_file, using my_file.write('stuff')
my_file.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you'd like to create folders (or <em>directories</em>), you need <a href="https://docs.python.org/2/library/os.html" rel="nofollow noreferrer"><code>os.mkdir</code></a>:</p>
<pre><code>import os 

os.mkdir("folder_name")
</code></pre>
<p>To create some <em>deep</em> folders at once, use <code>os.makedirs</code>:</p>
<pre><code>os.makedirs("path/to/something")
</code></pre>
<p>Then all that structure of three folders will be created. </p>
<p>Tutorialspoint has a short <a href="http://www.tutorialspoint.com/python/os_mkdir.htm" rel="nofollow noreferrer">tutorial</a> about <code>os.mkdir</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer"><code>with statement</code></a> like this:</p>
<pre><code>with open('some_file_100.txt', 'a') as f:
    pass
</code></pre>
<p>The above will just create an empty file, if you want to write something to the created file, you can try:</p>
<pre><code>with open('some_file_100.txt', 'a') as f:
    f.write('some text')
</code></pre>
<p>When you use <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer"><code>with statement</code></a> you do not need to close your files explicitly because they are closed autmatically at the end of the block.</p>
</div>
<span class="comment-copy">"not txt, those which you organise your stuff with" - <i>what??</i> You mean, 'folders', right?</span>
<span class="comment-copy">Yes Sorry my English is bad</span>
<span class="comment-copy">Is this problematic in a security sense?  (I don't know, I'm genuinely asking.)  I could imagine that it might be suboptimal for a service with an open web connection to have OS access ...</span>
<span class="comment-copy">Not really sure. If you want to use in production as a web application probably not the wisest thing to do.</span>
