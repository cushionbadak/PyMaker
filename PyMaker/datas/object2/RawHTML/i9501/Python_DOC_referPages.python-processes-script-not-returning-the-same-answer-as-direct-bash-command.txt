<div class="post-text" itemprop="text">
<p>hey first time question asker hope this is the correct format</p>
<p>i have a python scirpt which is trying to basically to use a bash command in this case telnet
this is the script</p>
<pre><code>import subprocess

proc = subprocess.Popen(['/bin/bash'], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
stdout = proc.communicate('telnet 192.168.1.67 5555')
print (stdout)
</code></pre>
<p>i have a script on my other machine listening on port 5555
and the calling the script in bash returns</p>
<pre><code>Connection closed by foreign host.
("Trying 192.168.1.67...\nConnected to 192.168.1.67.\nEscape character is '^]'.\n", None
</code></pre>
<p>and my other computer recognizes a connection but it closes the connection immediately 
while when i run the command </p>
<pre><code>telnet 192.168.1.67 5555
</code></pre>
<p>it works fine and keeps the connection open </p>
<p>my question is how to i write a script which dose the same thing as the command "telnet 192.168.1.67 5555" and keeps the connection open?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">socket â€” Low-level networking interfac</a></p>
<p>See the Python module of the week about <a href="https://pymotw.com/2/socket/" rel="nofollow noreferrer">socket</a>.</p>
<p>Python 2 Example:</p>
<pre><code>import socket, select, string, sys

if(len(sys.argv) &lt; 3) :
    print 'Usage : python telnet.py hostname port'
    sys.exit()

host = sys.argv[1]
port = int(sys.argv[2])

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.settimeout(2)

# connect to remote host
try :
    s.connect((host, port))
except :
    print 'Unable to connect'
    sys.exit()

print 'Connected to remote host'

while 1:
    socket_list = [sys.stdin, s]

    # Get the list sockets which are readable
    read_sockets, write_sockets, error_sockets = select.select(socket_list , [], [])

    for sock in read_sockets:
        #incoming message from remote server
        if sock == s:
            data = sock.recv(4096)
            if not data :
                print 'Connection closed'
                sys.exit()
            else :
                #print data
                sys.stdout.write(data)

        #user entered a message
        else :
            msg = sys.stdin.readline()
            s.send(msg)
</code></pre>
</div>
