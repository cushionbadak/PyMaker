<div class="post-text" itemprop="text">
<p>I have a data dictionary with eeg, gyroscope and other data. For processing, I want to extract eeg and gyroscope data in seperate dicts. Therefore I have two lists with the keys of eeg and gyroscope. I made it work with two dict comprehensions, but maybe there is a smoother solution to this.</p>
<pre><code>eegKeys = ["FP3", "FP4"]
gyroKeys = ["X", "Y"]

# 'Foo' is ignored
data = {"FP3": 1, "FP4": 2, "X": 3, "Y": 4, "Foo": 5}

eegData = {x: data[x] for x in data if x in eegKeys}
gyroData = {x: data[x] for x in data if x in gyroKeys}

print(eegData, gyroData) # ({'FP4': 2, 'FP3': 1}, {'Y': 4, 'X': 3}) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Minor modifications, but this should be only a little bit cleaner:</p>
<pre><code>eegKeys = ["FP3", "FP4"]
gyroKeys = ["X", "Y"]

# 'Foo' is ignored
data = {"FP3": 1, "FP4": 2, "X": 3, "Y": 4, "Foo": 5}

filterByKey = lambda keys: {x: data[x] for x in keys}
eegData = filterByKey(eegKeys)
gyroData = filterByKey(gyroKeys)

print(eegData, gyroData) # ({'FP4': 2, 'FP3': 1}, {'Y': 4, 'X': 3})
</code></pre>
<p>Or, if you prefer an one-liner:</p>
<pre><code>eegKeys = ["FP3", "FP4"]
gyroKeys = ["X", "Y"]

# 'Foo' is ignored
data = {"FP3": 1, "FP4": 2, "X": 3, "Y": 4, "Foo": 5}

[eegData, gyroData] = map(lambda keys: {x: data[x] for x in keys}, [eegKeys, gyroKeys])

print(eegData, gyroData) # ({'FP4': 2, 'FP3': 1}, {'Y': 4, 'X': 3})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, two dict comprehensions are pretty much it. You can use <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">dictionary views</a> to select the keys that are present, perhaps:</p>
<pre><code>eegData = {key: data[key] for key in data.keys() &amp; eegKeys}
gyroData = {key: data[key] for key in data.keys() &amp; gyroKeys}
</code></pre>
<p>Use <code>data.viewkeys()</code> if you are using Python 2 still.</p>
<p>Dictionary views give you a <em>set-like object</em>, on which you can then use set operations; <code>&amp;</code> gives you the intersection.</p>
<p>Note that your approach, using <code>key in eegKeys</code> and <code>key in gyroKeys</code> could be sped up by inverting the loop (loop over the smaller list, not the bigger dictionary):</p>
<pre><code>eegData = {key: data[key] for key in eegKeys if key in data}
gyroData = {key: data[key] for key in gyroKeys if key in data}
</code></pre>
</div>
<span class="comment-copy"><code>for x in data if x in eegKeys</code> can just be <code>for x in eegKeys</code>. And maybe make a function to reduce duplication.</span>
<span class="comment-copy">If you're code is working correctly you might want to try <a href="http://codereview.stackexchange.com/">Code Review</a>.</span>
<span class="comment-copy">@AlexHall the OP's code is safer if you don't know beforehand what <code>data</code> will actually contain.</span>
<span class="comment-copy">@brunodesthuilliers not necessarily, if <code>data</code> is missing a key in <code>eegKeys</code> that might be a good reason to throw an exception.</span>
<span class="comment-copy">@JoséSánchez thanks I did not know this one, next time I will try it out.</span>
<span class="comment-copy">Thank you! It looks a lot cleaner to extract the dict comprehension, but as mentioned in comments I prefer a real method over a lambda expression.</span>
<span class="comment-copy">Thanks, inverting the loop is a great idea!</span>
