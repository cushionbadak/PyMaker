<div class="post-text" itemprop="text">
<p>I am trying to understand <strong><em>pos</em></strong>,<strong><em>endpos</em></strong> and <strong><em>slice</em></strong> which using <strong><code>RegexObject</code></strong> in Python.</p>
<p>My Code is as following:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pat=re.compile(r'^abcd')

# Starting search from index 2.
&gt;&gt;&gt; print(pat.match('..abcd',2))   
None

# Slicing gives a new string "abcd" hence a match for ^ is found.
&gt;&gt;&gt; pat.match('..abcd'[2:]) 
&lt;_sre.SRE_Match object; span=(0, 4), match='abcd'&gt;

&gt;&gt;&gt; pat=re.compile(r'abcd$')

# How does $ appear at end ?
&gt;&gt;&gt; pat.match('abcd..',0,4)
&lt;_sre.SRE_Match object; span=(0, 4), match='abcd'&gt; 

# Slicing gives a new string "abcd" hence a match for ^ is found.    
&gt;&gt;&gt; pat.match('abcd..'[:4])
&lt;_sre.SRE_Match object; span=(0, 4), match='abcd'&gt;
</code></pre>
<p>My question: As string <code>abcd..</code> is not sliced in <code>&gt;&gt;&gt; pat.match('abcd..',0,4)</code> </p>
<p><strong>How does <code>$</code> appear at endpos ?</strong> </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>match</code> method <a href="https://docs.python.org/3/library/re.html#re.regex.match" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>The optional <em>pos</em> and <em>endpos</em> parameters have the same meaning as for the <code>search()</code> method.</p>
</blockquote>
<p>refer to the <a href="https://docs.python.org/3/library/re.html#re.regex.search" rel="nofollow noreferrer"><code>search</code> method</a>, which says</p>
<blockquote>
<p>The optional parameter <em>endpos</em> limits how far the string will be searched; it will be as if the string is <em>endpos</em> characters long, so only the characters from <em>pos</em> to <code>endpos - 1</code> will be searched for a match. If <em>endpos</em> is less than <em>pos</em>, no match will be found; <strong>otherwise, if <em>rx</em> is a compiled regular expression object, <code>rx.search(string, 0, 50)</code> is equivalent to <code>rx.search(string[:50], 0)</code></strong>.</p>
</blockquote>
<p>Providing an <code>endpos</code> of 4 is equivalent to slicing the string to a length of 4, so <code>endpos</code> is considered the new end of the string, and <code>$</code> matches there. This is a bizarre contrast to the interaction of <code>pos</code> and <code>^</code>, which explicitly does not work that way:</p>
<blockquote>
<p>the <code>'^'</code> pattern character matches at the real beginning of the string and at positions just after a newline, but not necessarily at the index where the search is to start.</p>
</blockquote>
</div>
<span class="comment-copy">Huh. That's especially weird if you compare it to <code>^</code>, which is explicitly documented <i>not</i> to behave this way.</span>
<span class="comment-copy">The docs seem to indirectly imply that <code>$</code> matches at <code>endpos</code>, but it's easy to miss if you're not reading carefully, and no rationale is provided. I suspect this is a mistake they left in for backward compatibility.</span>
