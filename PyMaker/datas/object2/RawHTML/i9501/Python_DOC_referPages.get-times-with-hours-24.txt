<div class="post-text" itemprop="text">
<p>I am trying to convert a time duration, stringified as "3h30m" (for example), into the individual hours and minutes component. I want to allow hours to be greater than 23</p>
<pre><code>time.strptime("3h30m", "%Hh%Mm")
</code></pre>
<p>The above returns a <code>time.struct_time</code> where <code>tm_hour=3</code> and <code>tm_min=30</code>.</p>
<p>If I try:</p>
<pre><code>time.strptime("25h30m", "%Hh%Mm")
</code></pre>
<p>I get a <code>ValueError</code>. Is it possible to run the above and get a <code>tm_hour=25</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, you can't use <code>time.strptime()</code> for that, <code>%H</code> can only represent a number between 0 and 23. The time tuple format doesn't support <code>tm_hour</code> values &gt; 23 either.</p>
<p>You could use a regular expression instead:</p>
<pre><code>import re

def parse_time(inputtext, _pattern=re.compile(r'(?:(\d+)h)?([0-5]\d)m')):
    try:
        hours, minutes = _pattern.search(inputtext).groups()
    except AttributeError:
        raise ValueError('Not a valid time string')
    return int(hours or 0), int(minutes)
</code></pre>
<p>The above pattern works for any hours and minutes combination, with minutes up to 59 and hours unlimited (and omitting them altogether works too).</p>
<pre><code>&gt;&gt;&gt; parse_time('25h82m')  # invalid
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 5, in parse_time
ValueError: Not a valid time string
&gt;&gt;&gt; parse_time('25h30m')  # valid
(25, 30)
&gt;&gt;&gt; parse_time('3h30m')  # valid
(3, 30)
&gt;&gt;&gt; parse_time('30m')  # valid
(0, 30)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I did end up using a regex:</p>
<pre><code>def parse_time_span(time_string):
    """Convert an inputted string representing a timespan, like 3h30m15s, into a duration in seconds."""
    pattern = re.compile(r"^(?:(?P&lt;hours&gt;\d+)h)?(?:(?P&lt;minutes&gt;\d+)m)?(?:(?P&lt;seconds&gt;\d+)s)?$")
    (hours, minutes, seconds) = pattern.match(time_string).groups()
    hours = 0 if hours is None else int(hours)
    minutes = 0 if minutes is None else int(minutes)
    seconds = 0 if seconds is None else int(seconds)
    total_seconds = datetime.timedelta(hours=hours, minutes=minutes, seconds=seconds).total_seconds()
    return round(total_seconds)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just because you want it does not mean it is possible in this framework. As @Psidom said, you will need to do the work to parse out what you care about.</p>
<p>The regex for your hour would be:</p>
<pre><code>[0-9]*h
</code></pre>
<p>And minute:</p>
<pre><code>[0-9]*m
</code></pre>
<p>Using regex in py can be found <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">Isn't the max value of hour 23?</span>
<span class="comment-copy">@Psidom I don't want it to be</span>
<span class="comment-copy">No, by defenition: <code>%H</code>: 	"Hour (24-hour clock) as a zero-padded decimal number.   00, 01, ..., 23"  <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Then I guess you can use regular expression to get the number by yourself instead of using time module.</span>
<span class="comment-copy">My opinion: "25h30m" is not a time, it is a time duration. For that you can use <code>datetime.timedelta</code>.</span>
<span class="comment-copy">If you are going to down vote please offer input.</span>
