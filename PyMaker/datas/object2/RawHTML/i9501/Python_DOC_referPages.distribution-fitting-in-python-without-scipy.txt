<div class="post-text" itemprop="text">
<p>I am writing a python script that needs to make a distribution fit against some generated data.</p>
<p>I found that this is possible using SciPy, or other packages having SciPy as dependency; however, due to administrative constraints, I am unable to install SciPy's dependencies (such as Blas) on the machine where the script will run.</p>
<p>Is there a way to perform distribution fitting in Python without using SciPy or packages depending on it?</p>
<p><strong>EDIT</strong>: as asked in a comment, what I want to do is perform an Anderson-Darling test for normality.</p>
<p>The alternatives I found so far (but had to disregard):</p>
<ol>
<li><a href="https://github.com/statsmodels/statsmodels" rel="nofollow noreferrer">statsmodel</a>: has SciPy as dependency</li>
<li>R and Matlab python apis: need setup of external software, same problem for me as SciPy</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Fitting the normal distribution only requires calculating mean and standard deviation.</p>
<p>The Anderson-Darling test only requires numpy or alternatively could be rewritten using list comprehension. The critical values for the AD-test are tabulated or based on a simple approximation formula. It does not use any difficult parts of scipy like optimize or special.</p>
<p>So, I think it should not be too difficult to translate either the scipy.stats or the statsmodels version to using pure Python or only with numpy as dependency.</p>
</div>
<span class="comment-copy">Sure. Sit down, write your own fitting library. It will probably be a tad slower, assuming you're going to have to do it in native python.</span>
<span class="comment-copy">What distribution do you want to fit your data to? For most common distributions all you do is assume the data follows that distribution and compute the distribution parameters from the mean and variance of the data, so you don't really need SciPy for that. If you want to also check goodness of fit then things get more complicated. But we really need more information to give you a proper answer...</span>
<span class="comment-copy">@Jaime What I'm trying to do is implement an Anderson-Darling test for normality</span>
<span class="comment-copy">Does your machine/environment has <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">venc-support</a>? This is common in my opinion. If so, you can create your own virtual python environment and install whatever you want (which is not deeply connected to the os; maybe stuff like fuse will be trouble; BLAS should be already available on many distributions) without root-access. (I did this once on some university-computer per ssh). <b>Alternative:</b> talk to the admin.</span>
