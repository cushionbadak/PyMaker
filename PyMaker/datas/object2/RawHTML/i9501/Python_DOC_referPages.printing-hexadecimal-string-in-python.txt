<div class="post-text" itemprop="text">
<p>I'm on x86, little-endian. 
So I got this data from a udp packet. </p>
<pre><code>data, addr = sock.recvfrom(1024)

print(data) 
</code></pre>
<p>gives something like <code>'\xfe\x15'</code></p>
<p>which I understand to be the little-endian layout in memory. </p>
<p>The value should be represented as 
0x15fe</p>
<p>In C i do, </p>
<pre><code>printf("%x", hexvalue); 
</code></pre>
<p>and it gives me 0x15fe straightaway. </p>
<p>How do I get Python to print the hexadecimal value out properly? </p>
<p>Many thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert the bytestring to an int using <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">struct</a>, like this:</p>
<pre><code>&gt;&gt;&gt; data = b'\xfe\x15'
&gt;&gt;&gt; num, = struct.unpack('&lt;h', data)
</code></pre>
<p>Here <code>&lt;h</code> represents a little-endian 2-bytes signed integer. Use <code>&lt;H</code> if your data is unsigned. Check out the <a href="https://docs.python.org/3/library/struct.html#format-strings" rel="nofollow noreferrer">documentation</a> for more.</p>
<p>Then you can print it using <code>print(hex(num))</code> or similar:</p>
<pre><code>&gt;&gt;&gt; print(hex(num))
0x15fe
</code></pre>
<hr/>
<p>As a side note, remember that <code>sock.recvfrom(1024)</code> may return more or less than 2 bytes. Keep that into account when parsing.</p>
</div>
<span class="comment-copy">have you tried repr(data)?</span>
