<div class="post-text" itemprop="text">
<p>This function in python downloads a file to AWS S3 bucket. I have a problem with the code that I want to not nest the three "If" so that the code can be more clear and readable :</p>
<pre><code>            for fileinfo in response['Contents']:
                if key in fileinfo['Key']:
                    if '/' in fileinfo['Key']:
                        filekeysplit = fileinfo['Key'].rsplit('/', 1)
                        if filekeysplit[1] == '':
                            continue
                        if not os.path.exists(file):
                            os.makedirs(file)
                        fileout = os.path.join(file, filekeysplit[1])
                        self._s3.download_file(bucket, fileinfo['Key'], fileout)
                    else:
                        self._s3.download_file(bucket, fileinfo['Key'], file)
</code></pre>
<p>How to do that ? thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>You can always invert a test and use <code>continue</code> to skip the iteration:</p>
<pre><code>for fileinfo in response['Contents']:
    if key not in fileinfo['Key']:
        continue
    if '/' not in fileinfo['Key']:
        self._s3.download_file(bucket, fileinfo['Key'], file)
        continue

    filekeysplit = fileinfo['Key'].rsplit('/', 1)
    if filekeysplit[1] == '':
        continue
    if not os.path.exists(file):
        os.makedirs(file)
    fileout = os.path.join(file, filekeysplit[1])
    self._s3.download_file(bucket, fileinfo['Key'], fileout)
</code></pre>
<p>We can pull out the double <code>download_file()</code> call; skip keys that end in <code>/</code> <em>early</em>. You only need to create directories <em>once</em>, outside the loop (I'd rename <code>file</code> to <code>directory</code> here too). I'd use <code>str.rpartition()</code> here instead of <code>str.rsplit()</code>:</p>
<pre><code># file has been renamed to directory, no need to test,
# as `os.makedirs()` does this for us
os.makedirs(directory)

for fileinfo in response['Contents']:
    if key not in fileinfo['Key']:
        continue
    __, slash, basename = fileinfo['Key'].rpartition('/')
    if not basename and slash:  # ended in "/"
        continue

    target = directory
    if slash:  # there was a partition
        target = os.path.join(target, basename)
    self._s3.download_file(bucket, fileinfo['Key'], target)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would like to suggest using some features of the standard library. Like Martijn Pieters said, you should have renamed your <code>file</code> variable to <code>target_directory</code> or something like that because it could confuse the reader of you code if you don't:</p>
<pre><code>for fileinfo in response['Contents']:
    filepath_retrieved = fileinfo['Key']
    if key in filepath_retrieved:
        pathname_retrieved, filename_retrieved = os.path.split(filepath_retrieved)
        if pathname_retrieved:
            if filename_retrieved:
                os.makedirs(target_directory, exist_ok=True)
                output_filepath = os.path.join(target_directory, filename_retrieved)
                self._s3.download_file(bucket, filepath_retrieved, output_filepath)
        else:
            output_filepath = target_directory
            self._s3.download_file(bucket, filepath_retrieved, output_filepath)
</code></pre>
<p>The features used are:</p>
<ul>
<li><a href="https://docs.python.org/3/library/os.path.html#os.path.split" rel="nofollow noreferrer"><code>os.path.split()</code></a> instead of str.rsplit() or str.rpartition() because it looks like you wanted to retrieve a filename at the end of a filepath when you tried to do <code>fileinfo['Key'].rsplit('/', 1)</code></li>
<li><code>exist_ok</code> argument of <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow noreferrer"><code>os.makedirs()</code></a> so you don't have to worry about the existence of directory before you need to create it.</li>
</ul>
</div>
<span class="comment-copy">1) the duplicated <code>self._s3.download_file</code> should be fixed as well... 2) logging should be built on top of working functionality... don't mix it.</span>
<span class="comment-copy">So a key that ends in <code>/</code> is invalid and should be skipped too?</span>
<span class="comment-copy">There is a problem , you forgot to calculate the value of ` filekeysplit` before the condition <code>if filekeysplit[1] == '':</code></span>
<span class="comment-copy">@Cloudgls: thanks, I was rewriting some more and forgot to put that back in. Another update is coming.</span>
