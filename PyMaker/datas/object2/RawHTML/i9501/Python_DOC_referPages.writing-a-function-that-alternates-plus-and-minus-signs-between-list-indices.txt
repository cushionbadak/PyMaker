<div class="post-text" itemprop="text">
<p>In a homework set I'm working on, I've come across the following question, which I am having trouble answering in a Python-3 function:</p>
<blockquote>
<p>"Write a function alternate : int list -&gt; int that takes a list of
  numbers and adds them with alternating sign. For example alternate
  [1,2,3,4] = 1 - 2 + 3 - 4 = -2."</p>
</blockquote>
<p>Full disclosure, the question was written with Standard ML in mind but I have been attempting to learn Python and came across the question. I'm imagining it involves some combination of:</p>
<p>splitting the list,</p>
<pre><code>if [i] % 2 == 0:
</code></pre>
<p>and then concatenating the alternate plus and minus signs.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def alternate(l):
  return sum(l[::2]) - sum(l[1::2])
</code></pre>
<p>Take the sum of all the even indexed elements and subtract the sum of all the odd indexed elements. Empty lists sum to <code>0</code> so it coincidently handles lists of length 0 or 1 without code specifically for those cases.</p>
<p>References:</p>
<ul>
<li><a href="https://www.dotnetperls.com/slice-python" rel="nofollow noreferrer">list slice examples</a></li>
<li><a href="https://docs.python.org/3.6/library/functions.html#sum" rel="nofollow noreferrer"><code>sum()</code></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Not using fancy modules or operators since you are learning Python.</p>
<pre><code>&gt;&gt;&gt; mylist = range(2,20,3)
&gt;&gt;&gt; mylist
[2, 5, 8, 11, 14, 17]
&gt;&gt;&gt; sum(item if i%2 else -1*item for i,item in enumerate(mylist, 1))
-9
&gt;&gt;&gt;
</code></pre>
<p>How it works?</p>
<pre><code>&gt;&gt;&gt; mylist = range(2,20,3)
&gt;&gt;&gt; mylist
[2, 5, 8, 11, 14, 17]
</code></pre>
<p><code>enumerate(mylist, 1)</code> - returns each item in the list and its index in the list starting from 1</p>
<p>If the index is odd, then add the item. If the index is even add the negative of the item.</p>
<pre><code>if i%2:
  return item
else:
  return -1*item
</code></pre>
<p>Add everything using <code>sum</code> bulitin.</p>
<pre><code>&gt;&gt;&gt; sum(item if i%2 else -1*item for i,item in enumerate(mylist, 1))
-9
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Although this already has an accepted answer I felt it would be better to also provide a solution that isn't a one-liner.</p>
<pre><code>def alt_sum(lst):
    total = 0
    for i, value in enumerate(lst):
        # checks if current index is odd or even
        # if even then add, if odd then subtract
        if i % 2 == 0:
            total += value
        else:
            total -= value
    return total

&gt;&gt;&gt; alt_sum([1, 2, 3, 4])
-2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>my_list = range(3, 20, 2)
sum(item * ((-1)**index) for index, item in enumerate(my_list))
</code></pre>
<p>sum = 11 (result of 3-5+7-9+11-13+15-17+19)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try this list comprehension:</p>
<pre><code>sum([-e if c%2 else e for c,e in enumerate(yourlistylist)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one way using <code>operator</code> module: </p>
<pre><code>In [21]: from operator import pos, neg

In [23]: ops = (pos, neg)

In [24]: sum(ops[ind%2](value) for ind, value in enumerate(lst))
Out[24]: -2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer">cycle from itertools</a> to alternate +/-</p>
<pre><code>&gt;&gt;&gt; from itertools import cycle
&gt;&gt;&gt; data = [*range(1, 5)]
&gt;&gt;&gt; sum(i * s for i, s in zip(data, cycle([1, -1])))
-2
</code></pre>
</div>
<span class="comment-copy">write down how you would approach, a code that you wrote and failed may be then we can help you out.</span>
