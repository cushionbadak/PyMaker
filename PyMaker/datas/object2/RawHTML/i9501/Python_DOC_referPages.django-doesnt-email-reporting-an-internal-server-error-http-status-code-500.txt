<div class="post-text" itemprop="text">
<p>I could send mail using the following code </p>
<pre><code>E:\Python\django-test\LYYDownloaderServer&gt;python manage.py shell

Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:01:18) [MSC v.1900 32 bit (In
tel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
&gt;&gt;&gt; from django.core.mail import send_mail
&gt;&gt;&gt;
&gt;&gt;&gt; send_mail(
...     'Subject here',
...     'Here is the message.',
...     'redstone-cold@163.com',
...     ['2281570025@qq.com'],
...     fail_silently=False,
... )
1
&gt;&gt;&gt; 
</code></pre>
<p>According to the <a href="https://docs.djangoproject.com/en/1.10/howto/error-reporting/#server-errors" rel="nofollow noreferrer">doc</a>:</p>
<blockquote>
<p>When DEBUG is False, Django will email the users listed in the ADMINS
  setting whenever your code raises an unhandled exception and results
  in an internal server error (HTTP status code 500). This gives the
  administrators immediate notification of any errors. The ADMINS will
  get a description of the error, a complete Python traceback, and
  details about the HTTP request that caused the error.</p>
</blockquote>
<p>but in my case, Django doesn't email reporting an internal server error (HTTP status code 500)
<a href="https://i.stack.imgur.com/zQFGZ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/zQFGZ.png"/></a></p>
<p>what's the problem? please help fix the problem</p>
<p>settings.py</p>
<pre><code>"""
Django settings for LYYDownloaderServer project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
ADMINS = [('Philip', 'r234327894@163.com'), ('Philip2', '768799875@qq.com')]
EMAIL_HOST = 'smtp.163.com'  # 'localhost'#'smtp.139.com'
# EMAIL_PORT = 25
# EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'r234327894@163.com'  # '13529123633@139.com'
EMAIL_HOST_PASSWORD = '******'
# DEFAULT_FROM_EMAIL = 'r234327894@163.com'
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's4(z8qzt$=x(2t(ok5bb58_!u==+x97t0vpa=*8bb_68baekkh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1']#, '.0letter.com'


# Application definition

INSTALLED_APPS = [
    'VideoParser.apps.VideoparserConfig',
    'FileHost.apps.FilehostConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LYYDownloaderServer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LYYDownloaderServer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
</code></pre>
<p>the start of views.py</p>
<pre><code>from django.http import JsonResponse, HttpResponse
import logging
import m3u8
import os
from VideoParser.parsers.CommonParsers import *
import urllib.parse
import hashlib
from datetime import datetime, timedelta, date
from django.views.decorators.csrf import csrf_exempt
from django.db import IntegrityError
from VideoParser.models import *
from importlib import import_module
# print('-------------views --------')
FILES_DIR = 'files'

# specialHostName2module = {'56': 'v56'}
logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d %I:%M:%S %p', level=logging.ERROR, handlers=[logging.handlers.RotatingFileHandler(filename=os.path.join(FILES_DIR, 'LYYDownloaderServer.log'), maxBytes=1024 * 1024, backupCount=1)])
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, it doesn't matter if you were able to send the mail using the console, but if you received the mail. I assume you did.</p>
<p>Second, it's best to try with exactly the same email address in the console as the one set in the <code>ADMINS</code>, just to be sure.</p>
<p>Finally, the sender address might also matter. The default is "root@localhost", and while "root" is OK, "localhost" is not, and some mail servers may refuse the email. Specify another sender email address by setting the <code>SERVER_EMAIL</code> Django setting.</p>
</div>
<div class="post-text" itemprop="text">
<p>Djano sends admin emails on error using logging system.</p>
<p>As I can see from your <code>views.py</code> you are changing logging settings.
This can be the cause of the problem as you cleared that django admin handler <code>mail_admins</code>.</p>
<p>For more information check <a href="https://docs.djangoproject.com/en/1.10/topics/logging/#topic-logging-parts-handlers" rel="nofollow noreferrer">django documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.djangoproject.com/en/1.10/howto/error-reporting/#server-errors" rel="nofollow noreferrer">Django doc</a> says: In order to send email, EMAIL_HOST, EMAIL_HOST_USER and EMAIL_HOST_PASSWORD are at the very least needed, but  as I tested, we should also specify SERVER_EMAIL, and only when  SERVER_EMAIL is equal to EMAIL_HOST_USER so can send the email, e.g.</p>
<pre><code>EMAIL_HOST = 'smtp.163.com'  
SERVER_EMAIL = '234327894-cold@163.com'  # 
EMAIL_HOST_USER = '234327894-cold@163.com'  # 
EMAIL_HOST_PASSWORD = '234327894123'  #
</code></pre>
<p>Django uses <a href="https://docs.djangoproject.com/en/1.10/topics/logging/#django.utils.log.AdminEmailHandler" rel="nofollow noreferrer">AdminEmailHandler</a> to  send an email to the site admins for each log message it receives.
Besides Django,   we could also use Python's 
<a href="https://docs.python.org/3/library/logging.handlers.html#smtphandler" rel="nofollow noreferrer">logging.handlers.SMTPHandler(mailhost, fromaddr, toaddrs, subject, credentials=None, secure=None, timeout=1.0)</a>
to do the same.
For example, put the following code in <code>views.py</code>(do change to your account), it will email reporting unhandled exceptions and results in an internal server error (HTTP status code 500).</p>
<pre><code>import logging
logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d %I:%M:%S %p', handlers=[logging.handlers.SMTPHandler('smtp.163.com', '234327894-cold@163.com', ['234327894-cold@163.com'], 'LYYDownloader Server Exception', credentials=('234327894-cold@163.com', '234327894123'))])
</code></pre>
<p>Comparing <code>AdminEmailHandler</code>  and <code>SMTPHandler</code>, I advocate to use <code>SMTPHandler</code> whenever possible.
First, <code>AdminEmailHandler</code> is Django specific, while you can use  <code>SMTPHandler</code> in any Python program, one thing you should care is when using  <code>SMTPHandler</code> in client side software,  some  anti-virus software may treat the software as spyware, so you should inform users when your software is about to send email.
Second,  I found email sending by <code>AdminEmailHandler</code>  has a bunch  of Information while <code>SMTPHandler</code> just send the Python exception Information which makes debugging a bit clear! </p>
<p>Third , If you configure your email within  <code>settings.py</code> in Django , there is no exception throw out even If you have made something wrong with the email confirmation ,  while <code>SMTPHandler</code> always throw out exception on what's wrong in using . </p>
<p>cite from <a href="http://redstoneleo.blogspot.com/2016/12/email-reporting-exceptions-and-errors_30.html" rel="nofollow noreferrer">http://redstoneleo.blogspot.com/2016/12/email-reporting-exceptions-and-errors_30.html</a></p>
</div>
<span class="comment-copy">set <code>DEBUG = True</code> in settings to see what the traceback is</span>
<span class="comment-copy">Thanks, SERVER_EMAIL  is essential to this problem , I've written a article about the problem, learn more here <a href="http://redstoneleo.blogspot.com/2016/12/email-reporting-exceptions-and-errors_30.html" rel="nofollow noreferrer">redstoneleo.blogspot.com/2016/12/…</a></span>
