<div class="post-text" itemprop="text">
<p>I've used this code to open a excel file, to create lists of each line of the excel file:</p>
<pre><code>import csv
with open("csvfile.csv", "rb") as f:
    lines = list(csv.reader(f))

&gt;&gt;&gt; lines
[['0', '23.345', '-122.456'], ['1', '12.546', '-118.987'] ['2', '67.435', '-104.112']]
</code></pre>
<p>I do want to keep the lists of each line of the excel file in a bigger list, but I want each element to be floats rather than strings. What alteration would I have to make?</p>
<p>i.e  <code>[[0, 23.345, -122.456], [1, 12.546, -118.987], [2, 67.435, -104.112]]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You may use nested <em>list comprehension</em> on your list of lists as:</p>
<pre><code>&gt;&gt;&gt; my_list = [['0', '23.345', '-122.456'], ['1', '12.546', '-118.987'], ['2', '67.435', '-104.112']]

&gt;&gt;&gt; [[float(i) for i in sub_list] for sub_list in my_list]
[[0.0, 23.345, -122.456], [1.0, 12.546, -118.987], [2.0, 67.435, -104.112]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>map</code> in a list-comprehension while reading the file.</p>
<pre><code>import csv

with open("csvfile.csv", "rb") as f:
    lines = [map(float, line) for line in csv.reader(f)]
</code></pre>
<p>Saves you creating a list twice (reading, converting)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>[map(float, sub_list) for sub_list in my_list]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; [map(float, sub_list) for sub_list in my_list]
[[0.0, 23.345, -122.456], [1.0, 12.546, -118.987], [2.0, 67.435, -104.112]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change:</p>
<pre><code>lines = list(csv.reader(f))
</code></pre>
<p>into:</p>
<pre><code>lines = [[float(x) for x in line] for line in csv.reader(f)]
</code></pre>
<p>i.e.:</p>
<pre><code>import csv
    with open("csvfile.csv", "rb") as f:
        lines =  [[float(x) for x in line] for line in csv.reader(f)]
</code></pre>
</div>
<span class="comment-copy">You can replace the inner list comprehension with a map statement. <code>[list(map(float, sub_list)) for sub_list in my_list]</code></span>
<span class="comment-copy">@BurhanKhalid One should ignore map whenever it is possible to do so. <i>list comprehension</i> is more efficient than <code>map</code>. In fact, even Guido was not a fan of <code>map()</code></span>
<span class="comment-copy">@burhankhalid you don't need the list outside map.</span>
<span class="comment-copy">In Python 3 you do.</span>
