<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/32431150/how-where-to-use-os-path-sep">How/where to use os.path.sep?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Below you can find a simple script to search text in files. I'm looking for how to be more crossplatform i mean how to avoid '\' in path to look through all dirs and do it with standard library from Python. Because as i know, mac use '/' instead of backslash. Any idea how to do it? </p>
<pre><code>#!/usr/bin/env python    

def find(text, search_path):
    res = []

    for subdir, dirs, files in os.walk(search_path):
        for fname in files:
            if os.path.isfile(subdir + "\\" + fname):
                with open(subdir + "\\" + fname) as f:
                    for i, line in enumerate(f):
                        if text in line:
                            res.append([fname, i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.path.join</code> to join paths together, for example
instead of</p>
<pre><code>subdir + "\\" + fname
</code></pre>
<p>you could do</p>
<pre><code>os.path.join(subdir, fname)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/2/library/os.html#os.sep" rel="nofollow noreferrer"><code>os.sep</code></a>. This is just showing that you can in fact get the character used by the operating system to separate pathname components if you want, but for concatenating path names, see the other answer on using <code>os.path.join()</code>.</p>
<blockquote>
<p>The character used by the operating system to separate pathname components. This is <code>'/'</code> for POSIX and <code>'\\'</code> for Windows. Note that knowing this is not sufficient to be able to parse or concatenate pathnames — use <code>os.path.split()</code> and <code>os.path.join()</code> — but it is occasionally useful. Also available via <code>os.path</code>.</p>
</blockquote>
</div>
<span class="comment-copy">check <code>os.path.join</code></span>
<span class="comment-copy">While <code>os.path.join</code> is the correct solution, Windows is perfectly happy with <code>/</code> directory separators.</span>
<span class="comment-copy">So obviously answer. Thank you!</span>
<span class="comment-copy">@mbomb007:  Purple Rain is not looking for the <a href="https://docs.python.org/3/library/os.html#os.pathsep" rel="nofollow noreferrer"><code>PATH</code> separator</a> (typically <code>':'</code> or <code>';'</code>), but the <a href="https://docs.python.org/3/library/os.html#os.sep" rel="nofollow noreferrer"><i>directory</i> separator</a> (typically <code>'/'</code> or <code>'\'</code>).</span>
<span class="comment-copy">See "<a href="https://stackoverflow.com/questions/32431150">How/where to use <code>os.path.sep</code>?</a>", and the <a href="https://stackoverflow.com/questions/16789790/4116239">accepted answer</a> from "<a href="https://stackoverflow.com/questions/16789714">Differences between use of <code>os.path.join</code> and <code>os.sep</code> concatenation</a>" for better ways to handle directory separators.</span>
