<div class="post-text" itemprop="text">
<p>If I have a list of both integers and floats and I print it, is there a way to print the integers without a decimal place but keep it for the floats?</p>
<p>I created a game based on the cards in a deck where different cards have different values. The value of each card is then multiplied by either 2, 1.5, 1 or 0.5 based on the suit. This is done randomly. This process is repeated 10 times.</p>
<p>The code looks something like this:</p>
<pre><code>Scores = [2, 4, 6, 8, 10, 12, 15]
Suits = [2, 1.5, 1, 0.5]
TScore = 0
for each in range(10):
Score = random.choice(Scores)
Suit = random.choice(Suits)
TScore = Score * Suit
print("Your score is {0}".format(TScore))
</code></pre>
<p>The console may print something like this:</p>
<blockquote>
<p>Your score is 12<br/>
      Your score is 22.5<br/>
      Your score is 18.0<br/>
      Your score is 15<br/>
      Your score is 30<br/>
      Your score is 6.0<br/>
      Your score is 6.0<br/>
      Your score is 6.0<br/>
      Your score is 12<br/>
      Your score is 6  </p>
</blockquote>
<p>Is there a way to make sure that the integers are not followed by a decimal point?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>g</code> or <code>n</code> format <code>type</code> does this for you:</p>
<pre><code>In [560]: for score in [4.0, 22.5]:
     ...:     print('Your score is {:n}'.format(score))
     ...:     
Your score is 4
Your score is 22.5
</code></pre>
<p><a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">https://docs.python.org/3/library/string.html#format-specification-mini-language</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>for score in [4.0, 22.5]:
    '''
    Modulo(%) pulls the remainder, if the number is a whole number
    dividing by 1 should always return 0.
    '''
    if score % 1 == 0:
        score = int(score)
    print(score)
</code></pre>
<p>For more information on modulo or other operators: <a href="https://www.tutorialspoint.com/python/python_basic_operators.htm" rel="nofollow noreferrer">https://www.tutorialspoint.com/python/python_basic_operators.htm</a></p>
<p>In reference to jonrsharpe's comment above.</p>
<pre><code>    if score.is_integer(): # a float.method returns true if the number is whole.
        score = int(score)
    print(score)
</code></pre>
<p>For more information on float.methods: <a href="https://docs.python.org/3/library/stdtypes.html#additional-methods-on-float" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#additional-methods-on-float</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I hope it will work in your case:</p>
<pre><code>def removeDecimal(num):
        num1 = list(str(num))
        if(num1[-1]=='0'):      
                return int(num)
        else:
                return num

def main():
        score1 = 4.0
        score2 = 22.5
        print(removeDecimal(score1))    
        print(removeDecimal(score2))
if __name__=="__main__":
        main()
</code></pre>
<p>output for this is :</p>
<p>4</p>
<p>22.5</p>
</div>
<span class="comment-copy">How are you printing them? Are you sure they're not <i>both</i> floats? The fact that one could also be an integer can be tested with <code>float.is_integer</code>; see e.g. <a href="http://stackoverflow.com/q/21583758/3001761">stackoverflow.com/q/21583758/3001761</a></span>
<span class="comment-copy">Please provide more details and enough data to enable others to help.</span>
<span class="comment-copy">Those are both floats...</span>
<span class="comment-copy">@jonrsharpe the question has been updated with the code</span>
<span class="comment-copy">@adele code has been added.</span>
<span class="comment-copy">if score.is_integer: # a float.method returns true if the number is whole.         score = int(score)     print(score)  it gives 4 if score is 4.0 or 4.8 in both the case</span>
<span class="comment-copy">I apologize I entered a syntax error thanks for pointing it out.</span>
