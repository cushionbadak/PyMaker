<div class="post-text" itemprop="text">
<p>How do you explicitly access name in Python's built in scope?  </p>
<p>One situation where I ran in to this was a in module, say called foo, which happened to have an open function.  In another module foo's open function would be accessible as foo.open which works well.  In foo itself though, open blocks the built in open.  How can you access the built in version of a name like open explicitly?</p>
<p>I am aware it is probably practically bad idea to block any built in name, but I am still curious to know if there is a way to explicitly access the built in scope.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>__builtin__</code>.</p>
<pre><code>def open():
    pass

import __builtin__

print open
print __builtin__.open
</code></pre>
<p>... gives you ...</p>
<blockquote>
<p><code>&lt;function open at 0x011E8670&gt;</code><br/>
<code>&lt;built-in function open&gt;</code> </p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It's something like</p>
<pre><code>__builtins__.open()
</code></pre>
</div>
<span class="comment-copy">+1: It's a very bad idea to override builtin names.</span>
<span class="comment-copy">I admit I am opening an ooold subject, but question seems right to me. I explain: I wrote a function for getting access to file just like <code>open</code> does, taking the same parameters, and returning the same object, but handling cases where file could not be opened in the desired (typically read-only). I would access it only by something like <code>import my_scripts; f = my_scripts.open(filename, mode)</code>. As I find name <code>my_scripts.open_</code> not good-looking, would that be that bad, since scope is clearly given?</span>
<span class="comment-copy">Bonus point if someone can tell me when this was first included in python.  The docs are normally good at saying that, but it doesn't seem to be the case here: <a href="http://docs.python.org/library/__builtin__.html" rel="nofollow noreferrer">docs.python.org/library/__builtin__.html</a></span>
<span class="comment-copy">A long, long time as you can see this thread dating from 1992: <a href="http://www.python.org/search/hypermail/python-1992/0049.html" rel="nofollow noreferrer">python.org/search/hypermail/python-1992/0049.html</a> (it was called builtin instead of <b>builtin</b> back then). Would not worry about older versions not supporting it ;-)</span>
<span class="comment-copy">Now, that Python 3 is around, they changed <b>builtin</b> to regular builtins module: <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer">docs.python.org/3/library/builtins.html</a></span>
<span class="comment-copy"><b>builtins</b> is an implementation detail of CPython.  I wouldn't rely on it.</span>
<span class="comment-copy">True... I was originally going to suggest <b>builtin</b> but I'd forgotten that it was a module :-/</span>
