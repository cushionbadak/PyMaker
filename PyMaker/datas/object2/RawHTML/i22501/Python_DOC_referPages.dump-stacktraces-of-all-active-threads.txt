<div class="post-text" itemprop="text">
<p>I'm trying to dump a list of all active threads including the current stack of each. I can get a list of all threads using threading.enumerate(), but i can't figure out a way to get to the stack from there. </p>
<p>Background: A Zope/Plone app freaks out from time to time, consuming 100% of cpu and needs to be restarted. I have a feeling it's a loop which doesn't terminate properly, but i cannot reproduce it in the test-environemt for verification. I managed to register a signal handler which can be triggered from the outside, so i can trigger some code as soon as the situation occurs again. If I could dump the stacktrace for all active threads, that would give me a clue what goes wrong. The hole thing runs on python 2.4...</p>
<p>Any ideas on how to trace down situations like these are appreciated :)</p>
<p>Cheers,
   Chriss</p>
</div>
<div class="post-text" itemprop="text">
<p>When using Zope, you want to install <a href="http://pypi.python.org/pypi/Products.signalstack" rel="nofollow noreferrer"><code>Products.signalstack</code></a> or <a href="https://pypi.python.org/pypi/mr.freeze" rel="nofollow noreferrer">mr.freeze</a>; these were designed for just this purpose!</p>
<p>Send a USR1 signal to your Zope server and it'll immediately dump stack traces for all threads to the console. It'll do this even if all Zope threads are locked up.</p>
<p>Under the hood these packages indirectly use <a href="http://web.archive.org/web/20100111034624/https://majid.info/blog/threadframe-multithreaded-stack-frame-extraction-for-python/" rel="nofollow noreferrer"><code>threadframes</code></a>; for Python versions 2.5 and up, when <em>not</em> using Zope, you can build the same functionality using the <a href="https://docs.python.org/2/library/sys.html#sys._current_frames" rel="nofollow noreferrer"><code>sys._current_frames()</code></a> function to access per-thread stack frames.</p>
<p>As of <a href="https://github.com/zopefoundation/Zope/commit/16796274463f21327e1b7bb3831b39eb671460af" rel="nofollow noreferrer">Zope 2.12.5</a> this functionality is integrated into Zope itself, and there is no need to install additional packages anymore.</p>
</div>
<div class="post-text" itemprop="text">
<p>As jitter points out in an earlier answer <code>sys._current_frames()</code> gives you what you need for v2.5+. For the lazy the following code snippet worked for me and may help you:</p>
<pre><code>print &gt;&gt; sys.stderr, "\n*** STACKTRACE - START ***\n"
code = []
for threadId, stack in sys._current_frames().items():
    code.append("\n# ThreadID: %s" % threadId)
    for filename, lineno, name, line in traceback.extract_stack(stack):
        code.append('File: "%s", line %d, in %s' % (filename,
                                                    lineno, name))
        if line:
            code.append("  %s" % (line.strip()))

for line in code:
    print &gt;&gt; sys.stderr, line
print &gt;&gt; sys.stderr, "\n*** STACKTRACE - END ***\n"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For Python 3.3 and later, there is <a href="https://docs.python.org/3/library/faulthandler.html#dumping-the-traceback" rel="noreferrer"><code>faulthandler.dump_traceback()</code></a>.</p>
<p>The code below produces similar output, but includes the thread name and could be enhanced to print more information.</p>
<pre><code>for th in threading.enumerate():
    print(th)
    traceback.print_stack(sys._current_frames()[th.ident])
    print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>2.4. Too bad. From Python 2.5 on there is <code>sys._current_frames()</code>.</p>
<p>But you could try <a href="http://www.majid.info/mylos/stories/2004/06/10/threadframe.html" rel="nofollow noreferrer">threadframe</a>. And if the makefile gives you trouble you could try this <a href="http://www.wsanchez.net/blog/2004/06/stack_traces_in_python_threads.html#comment-55" rel="nofollow noreferrer">setup.py for threadframe</a></p>
<p><a href="http://www.majid.info/python/threadframe/threadframe-0.2/sample.txt" rel="nofollow noreferrer">Sample output when using threadframe</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just for completeness sake, <a href="https://pypi.python.org/pypi/Products.LongRequestLogger" rel="nofollow">Products.LongRequestLogger</a> is super helpful to identify bottlenecks, and to do so it dumps stacktraces at specific intervals.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is an applicable recipe on <a href="http://code.activestate.com/recipes/496960/" rel="nofollow noreferrer">ASPN</a>. You can use <code>threading.enumerate()</code> to get all the tids, then just call _async_raise() with some suitable exception to force a stack trace.</p>
</div>
<span class="comment-copy">Thank you very much, this is exactly what I need!</span>
<span class="comment-copy">Nowadays in Plone "no special packages are necessary" <a href="http://stackoverflow.com/a/36633215/3046069">stackoverflow.com/a/36633215/3046069</a></span>
<span class="comment-copy">@Danimal: thanks, added to the post. 2.12.5 was released a year after I wrote this answer.</span>
<span class="comment-copy">The link to threadframes is dead now, but in any case, as of python 2.5 you can use <a href="https://docs.python.org/2/library/sys.html#sys._current_frames" rel="nofollow noreferrer"><code>sys._current_frames()</code></a>.</span>
<span class="comment-copy">@ImranRashid: yes, my answer already states you can. I've replaced the broken link.</span>
