<div class="post-text" itemprop="text">
<p>I want to print the bit representation of numbers onto console, so that I can see all operations that are being done on bits itself.</p>
<p>How can I possibly do it in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>This kind of thing?</p>
<pre><code>&gt;&gt;&gt; ord('a')
97
&gt;&gt;&gt; hex(ord('a'))
'0x61'
&gt;&gt;&gt; bin(ord('a'))
'0b1100001'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>In Python 2.6+</strong>:</p>
<pre><code>print bin(123)
</code></pre>
<p>Results in:</p>
<pre><code>0b1111011
</code></pre>
<p><strong>In python 2.x</strong></p>
<pre><code>&gt;&gt;&gt; binary = lambda n: n&gt;0 and [n&amp;1]+binary(n&gt;&gt;1) or []
&gt;&gt;&gt; binary(123)
[1, 1, 0, 1, 1, 1, 1]
</code></pre>
<p><sup>Note, example taken from: "Mark Dufour"  at <a href="http://mail.python.org/pipermail/python-list/2003-December/240914.html" rel="noreferrer">http://mail.python.org/pipermail/python-list/2003-December/240914.html</a></sup></p>
</div>
<div class="post-text" itemprop="text">
<p><strong>From Python 2.6</strong> - with the <a href="http://docs.python.org/2/library/string.html#string-formatting" rel="nofollow noreferrer">string.format method</a>:</p>
<pre><code>"{0:b}".format(0x1234)
</code></pre>
<p>in particular, you might like to use padding, so that multiple prints of different numbers still line up:</p>
<pre><code>"{0:16b}".format(0x1234)
</code></pre>
<p>and to have left padding with leading 0s rather than spaces:</p>
<pre><code>"{0:016b}".format(0x1234)
</code></pre>
<p><strong>From Python 3.6</strong> - with <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a>:</p>
<p>The same three examples, with f-strings, would be:</p>
<pre><code>f"{0x1234:b}"
f"{0x1234:16b}"
f"{0x1234:016b}"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3.1/library/functions.html#bin" rel="nofollow noreferrer">The <code>bin</code> function</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Slightly off-topic, but might be helpful. For better user-friendly printing I would use custom print function, define representation characters and group spacing for better readability. Here is an example function, it takes a list/array and the group width:</p>
<pre><code>def bprint(A, grp):
    for x in A:
        brp = "{:08b}".format(x)
        L=[]
        for i,b in enumerate(brp):
            if b=="1":
                L.append("k")
            else: 
                L.append("-")
            if (i+1)%grp ==0 :
                L.append(" ")

        print "".join(L) 

#run
A = [0,1,2,127,128,255]
bprint (A,4)
</code></pre>
<p>Output:</p>
<pre><code>---- ----
---- ---k
---- --k-
-kkk kkkk
k--- ----
kkkk kkkk
</code></pre>
</div>
<span class="comment-copy">Being strict, this is the binary representation of a number, but not necessarily the underlying bits in memory.</span>
<span class="comment-copy">This is the bit representation of strings, not numbers..</span>
<span class="comment-copy">you can further add bin = lambda b:'0b'+''.join(map(str,binary(b))), so it mimics 2.6+ completely</span>
<span class="comment-copy">what is I want the binary padded with 0's to accommodate for a fixed length binary number.</span>
<span class="comment-copy"><code>bin(-7)</code> returns <code>-0b111</code> but your function returns <code>[]</code>.</span>
