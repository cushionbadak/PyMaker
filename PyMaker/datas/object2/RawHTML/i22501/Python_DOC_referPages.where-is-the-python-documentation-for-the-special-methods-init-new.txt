<div class="post-text" itemprop="text">
<p>Where is a complete list of the special double-underscore/dunder methods that can be used in classes? (e.g., <code>__init__</code>, <code>__new__</code>, <code>__len__</code>, <code>__add__</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Please take a look at the <a href="http://docs.python.org/reference/datamodel.html#special-method-names" rel="noreferrer">special method names section</a> in the Python language reference.</p>
</div>
<div class="post-text" itemprop="text">
<p>Dive Into Python has <a href="http://web.archive.org/web/20110131211638/http://diveintopython3.org/special-method-names.html" rel="noreferrer">an excellent appendix</a> for them.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a <a href="http://www.ironpythoninaction.com/magic-methods.html" rel="noreferrer">complete reference of all the Python magic methods</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If, like me, you want a plain, unadorned list, here it is.  I compiled it based on the <a href="https://docs.python.org/2/reference/datamodel.html#special-method-names" rel="noreferrer">Python documentation link</a> from the accepted answer.</p>
<pre><code>__abs__
__add__
__and__
__call__
__class__
__cmp__
__coerce__
__complex__
__contains__
__del__
__delattr__
__delete__
__delitem__
__delslice__
__dict__
__div__
__divmod__
__eq__
__float__
__floordiv__
__ge__
__get__
__getattr__
__getattribute__
__getitem__
__getslice__
__gt__
__hash__
__hex__
__iadd__
__iand__
__idiv__
__ifloordiv__
__ilshift__
__imod__
__imul__
__index__
__init__
__instancecheck__
__int__
__invert__
__ior__
__ipow__
__irshift__
__isub__
__iter__
__itruediv__
__ixor__
__le__
__len__
__long__
__lshift__
__lt__
__metaclass__
__mod__
__mro__
__mul__
__ne__
__neg__
__new__
__nonzero__
__oct__
__or__
__pos__
__pow__
__radd__
__rand__
__rcmp__
__rdiv__
__rdivmod__
__repr__
__reversed__
__rfloordiv__
__rlshift__
__rmod__
__rmul__
__ror__
__rpow__
__rrshift__
__rshift__
__rsub__
__rtruediv__
__rxor__
__set__
__setattr__
__setitem__
__setslice__
__slots__
__str__
__sub__
__subclasscheck__
__truediv__
__unicode__
__weakref__
__xor__
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="http://rgruet.free.fr/PQR25/PQR2.5.html#SpecialMethods" rel="nofollow noreferrer">Python Quick reference</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Do this if you prefer reading documentation from a CLI instead of the browser. </p>
<p><code>$ pydoc SPECIALMETHODS</code></p>
</div>
<div class="post-text" itemprop="text">
<p>For somebody who is relatively new to Python, and for whom the documentation is often not quite accessible enough (like myself): somebody wrote a <a href="https://github.com/RafeKettler/magicmethods" rel="nofollow noreferrer">nice introduction</a> with lots of examples on how the special (magic) methods work, how to use them, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Familiarize yourself with the dir function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's double underscore ("dunder") methods are also known as <em>datamodel</em> methods because they are at the core of Python's data model, providing a protocol for  customizing (overloading) built-in methods. 
This is the reason why they are listed in the <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">"Data Model"</a> section of the Python's documentation.</p>
</div>
<span class="comment-copy">Where you unable to locate the Python documentation?</span>
<span class="comment-copy">@Mk12: tags are about questions not about askers. Please, stop reverting</span>
<span class="comment-copy">@S.Lott Perhaps OP simply couldn't find the relevant section? If you don't have something constructive to add...</span>
<span class="comment-copy">I'm trying to figure out what the question means.  These these are well-covered in the Python documentation.  Since these things are well-documented, I'm trying to understand what the question means.</span>
<span class="comment-copy">Python's official documentation is excellent.</span>
<span class="comment-copy">Actually, some of those--like <code>__dict__</code>--are not methods.</span>
<span class="comment-copy">but that would only do what I wanted if a the class passed to it implemented all of the special methods.</span>
