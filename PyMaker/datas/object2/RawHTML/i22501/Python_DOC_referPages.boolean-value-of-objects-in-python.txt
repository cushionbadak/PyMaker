<div class="post-text" itemprop="text">
<p>As we know, Python has boolean values for objects: If a class has a <code>__len__</code> method, every instance of it for which <code>__len__()</code> happens to return 0 will be evaluated as a boolean <code>False</code> (for example, the empty list).</p>
<p>In fact, every iterable, empty custom object is evaluated as <code>False</code> if it appears in boolean expression.</p>
<p>Now suppose I have a class <code>foo</code> with attribute <code>bar</code>. How can I define its truth value, so that, say, it will be evaluated to <code>True if bar % 2 == 0</code> and <code>False</code> otherwise?</p>
<p>For example:</p>
<pre><code>myfoo = foo()
myfoo.bar = 3
def a(myfoo):
    if foo:
        print "spam"
    else:
        print "eggs"
</code></pre>
<p>so, <code>a(myfoo)</code> should print <code>"eggs"</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Refer to the Python docs for <a href="https://docs.python.org/2/reference/datamodel.html#object.__nonzero__" rel="noreferrer"><code>__nonzero__</code></a>.</p>
<pre><code>class foo(object):
    def __nonzero__( self) :
        return self.bar % 2 == 0

def a(foo):
    if foo:
        print "spam"
    else:
        print "eggs"

def main():
    myfoo = foo()
    myfoo.bar = 3
    a(myfoo)

if __name__ == "__main__":
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>In Python &lt; 3.0 :</strong></p>
<p>You have to use <a href="https://docs.python.org/2/reference/datamodel.html#object.__nonzero__" rel="noreferrer"><code>__nonzero__</code></a> to achieve what you want. It's a method that is called automatically by Python when evaluating an object in a boolean context. It must return a boolean that will be used as the value to evaluate.</p>
<p>E.G :</p>
<pre><code>class Foo(object):

    def __init__(self, bar) :
        self.bar = bar

    def __nonzero__(self) :
        return self.bar % 2 == 0

if __name__ == "__main__":
     if (Foo(2)) : print "yess !"
</code></pre>
<p><strong>In Python =&gt; 3.0 :</strong></p>
<p>Same thing, except the method has been renamed to the much more obvious <a href="https://docs.python.org/3/reference/datamodel.html#object.__bool__" rel="noreferrer"><code>__bool__</code></a>.</p>
</div>
<span class="comment-copy">See also: <code>__nonzero__()</code></span>
<span class="comment-copy">Will <code>__nonzero__</code> work as well in Python &gt;= 3.0?</span>
<span class="comment-copy">@Wolf, no it will not.</span>
