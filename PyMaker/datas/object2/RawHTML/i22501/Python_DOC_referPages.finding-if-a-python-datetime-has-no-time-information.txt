<div class="post-text" itemprop="text">
<p>I want to trap values that are like this (in which there is not 'time info' on the datetime):</p>
<pre><code>datetime.datetime(2009, 4, 6, 0, 0)
</code></pre>
<p>Is there a better way to detect these values other than testing hour/minute/second?</p>
<pre><code>if value.hour == 0 and value.minute == 0 and value.second == 0:
     # do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The time method works here. Evaluates as boolean false if there's zero'd-out time info.</p>
<pre><code>if not value.time():
    # do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I see nothing wrong with your method, but you could compare it to a 'zeroed' time object.</p>
<pre><code>someDateTime = datetime.datetime(2009, 4, 6, 0, 0)
someDateTime.time() == datetime.time(0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For python 3.5 and above:</p>
<pre><code>if value.hour == 0 and value.minute == 0 and value.second == 0 and value.microsecond == 0:
  # do stuff
</code></pre>
<p>For python lower than 3.5:</p>
<pre><code>if not value.time():
  # do stuff
</code></pre>
<p>Explanation: the boolean evaluation of a <code>datetime.time</code> instance <a href="https://docs.python.org/3/library/datetime.html#time-objects" rel="nofollow noreferrer">was changed in python 3.5</a> : </p>
<blockquote>
<p>In boolean contexts, a time object is always considered to be true.</p>
<p>Changed in version 3.5: Before Python 3.5, a time object was considered to be false if it represented midnight in UTC. This behavior was considered obscure and error-prone and has been removed in Python 3.5. See bpo-13936 for full details.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You would actually need to check microsecond as well. Another option:</p>
<pre><code>NO_TIME = datetime.time(0) # can be stored as constant

if (value.time() == NO_TIME):
   # do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another option:</p>
<pre><code>if not (value.hour or value.minute or value.second):
    # do stuff
</code></pre>
</div>
<span class="comment-copy">Caution to future viewers that midnight is a valid datetime for which hour/minute/second/microsecond values will all be zero. In general one should use <code>datetime.date</code> to represent values with no time part.</span>
<span class="comment-copy">Mark's answer is the most compact and correct solution and works in any version of Python. Please consider accepting it as the answer.</span>
<span class="comment-copy">mmm that's clean</span>
<span class="comment-copy">WARNING: this no longer works in Python 3.5+</span>
<span class="comment-copy">@jtschoonhoven What's the solution for Python 3.5+ then?</span>
<span class="comment-copy">@HendrikWiese there's a more fundamental problem which is that there's no way to distinguish between a <code>datetime</code> for midnight and one with "missing" time info.  With that caveat I'd use @Mark's solution below.</span>
<span class="comment-copy">@jtschoonhoven I'd call that a major design flaw... but that's just my opinion.</span>
<span class="comment-copy">As <a href="https://docs.python.org/3/library/datetime.html#time-objects" rel="nofollow noreferrer">all arguments are optional</a> and default to 0 it can be just <code>datetime.time()</code> instead of <code>datetime.time(0)</code>.</span>
<span class="comment-copy">It should be called <code>MIDNIGHT_SOMETIMES_CONSIDERED_NO_TIME</code> :)</span>
<span class="comment-copy">Even if both your alternative and 'if not value.hour and not value.minute and not value.second' do the same, I find the latter expresses the intended behavior more clearly.</span>
