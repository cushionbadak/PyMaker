<div class="post-text" itemprop="text">
<p>I am trying to convert a Python dictionary to a string for use as URL parameters. I am sure that there is a better, more <a href="http://en.wikipedia.org/wiki/Pythonic" rel="noreferrer">Pythonic</a> way of doing this. What is it?</p>
<pre><code>x = ""
for key, val in {'a':'A', 'b':'B'}.items():
    x += "%s=%s&amp;" %(key,val)
x = x[:-1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/library/urllib.html#urllib.urlencode" rel="noreferrer"><code>urllib.urlencode()</code></a>. It takes a dictionary of key-value pairs, and converts it into a form suitable for a URL (e.g., <code>key1=val1&amp;key2=val2</code>).</p>
<p>If you are using Python3, use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode" rel="noreferrer"><code>urllib.parse.urlencode()</code></a></p>
<p>If you want to make a URL with repetitive params such as: <code>p=1&amp;p=2&amp;p=3</code> you have two options:</p>
<pre><code>&gt;&gt;&gt; import urllib
&gt;&gt;&gt; a = (('p',1),('p',2), ('p', 3))
&gt;&gt;&gt; urllib.urlencode(a)
'p=1&amp;p=2&amp;p=3'
</code></pre>
<p>or if you want to make a url with repetitive params:</p>
<pre><code>&gt;&gt;&gt; urllib.urlencode({'p': [1, 2, 3]}, doseq=True)
'p=1&amp;p=2&amp;p=3'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the 3rd party Python url manipulation library <strong>furl</strong>:</p>
<pre><code>f = furl.furl('')
f.args = {'a':'A', 'b':'B'}
print(f.url) # prints ... '?a=A&amp;b=B'
</code></pre>
<p>If you want repetitive parameters, you can do the following:</p>
<pre><code>f = furl.furl('')
f.args = [('a', 'A'), ('b', 'B'),('b', 'B2')]
print(f.url) # prints ... '?a=A&amp;b=B&amp;b=B2'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This seems a bit more Pythonic to me, and doesn't use any other modules:</p>
<pre><code>x = '&amp;'.join(["{}={}".format(k, v) for k, v in {'a':'A', 'b':'B'}.items()])
</code></pre>
</div>
<span class="comment-copy">+1 for the word Pythonic. Should give a corresponding -1 for that word's vagueness.</span>
<span class="comment-copy">Reference: <a href="http://docs.python.org/library/urllib.html#urllib.urlencode" rel="nofollow noreferrer">docs.python.org/library/urllib.html#urllib.urlencode</a></span>
<span class="comment-copy">if you want to make a url with repetitive params for example: ?p=1&amp;p=2&amp;p=3 then a = (('p',1),('p',2), ('p', 3)); urllib.urlencode(a) the result is 'p=1&amp;p=2&amp;p=3'</span>
<span class="comment-copy">Another way to get repetitive params: urllib.urlencode({'p': [1, 2, 3]}, doseq=True) resulting in 'p=1&amp;p=2&amp;p=3'.</span>
<span class="comment-copy">If you wonder what <code>doeseq</code> is about: "If any values in the query arg are sequences and doseq is true, each  sequence element is converted to a separate parameter."</span>
<span class="comment-copy">Where do I get furl? It appears not to be a standard library</span>
<span class="comment-copy"><code>pip install furl</code> Its not a part of standard library</span>
<span class="comment-copy">This won't percent encode the parameters properly. This will create unexpected results if your data includes ampersands, equals, hash symbols, etc.</span>
