<div class="post-text" itemprop="text">
<p>Is there a way to make Python's optparse print the default value of an option or flag when showing the help with --help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try using the <code>%default</code> string placeholder:</p>
<pre><code># This example taken from http://docs.python.org/library/optparse.html#generating-help
parser.add_option("-m", "--mode",
                  default="intermediate",
                  help="interaction mode: novice, intermediate, "
                       "or expert [default: %default]")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>And if you need programmatic access to the default values, you can get to them via the <code>defaults</code> attribute of the parser (it's a dict)</p>
</div>
<div class="post-text" itemprop="text">
<p>And if you want to add default values automatically to all options that you have specified, you can do the following:</p>
<pre><code>for option in parser.option_list:
    if option.default != ("NO", "DEFAULT"):
        option.help += (" " if option.help else "") + "[default: %default]"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The comments to your question already indicate there's another way to parse arguments called <a href="https://docs.python.org/3.5/library/argparse.html" rel="nofollow">argparse</a>. It's been introduced in Python 3.2. It actually deprecates <code>optparse</code> but is used similarly.</p>
<p><code>argpass</code> comes with different formatting classes and for instance <code>argparse.ArgumentDefaultsHelpFormatter</code> will also print the default values without you having to manipulate the help string manually.</p>
<blockquote>
<p>ArgumentParser objects allow the help formatting to be customized by
  specifying an alternate formatting class. Currently, there are four
  such classes:</p>
<p>class argparse.RawDescriptionHelpFormatter</p>
<p>class argparse.RawTextHelpFormatter</p>
<p>class argparse.ArgumentDefaultsHelpFormatter</p>
<p>class argparse.MetavarTypeHelpFormatter</p>
</blockquote>
<p>An example from the python docs:</p>
<pre><code>&gt;&gt;&gt; parser = argparse.ArgumentParser(
...     prog='PROG',
...     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
&gt;&gt;&gt; parser.add_argument('--foo', type=int, default=42, help='FOO!')
&gt;&gt;&gt; parser.add_argument('bar', nargs='*', default=[1, 2, 3], help='BAR!')
&gt;&gt;&gt; parser.print_help()
usage: PROG [-h] [--foo FOO] [bar [bar ...]]

positional arguments:
 bar         BAR! (default: [1, 2, 3])

optional arguments:
 -h, --help  show this help message and exit
 --foo FOO   FOO! (default: 42)
</code></pre>
<p>see <a href="https://docs.python.org/3.5/library/argparse.html#formatter-class" rel="nofollow">argparse formatting classes</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Add <a href="https://docs.python.org/3/library/argparse.html#formatter-class" rel="nofollow noreferrer">argparse.ArgumentDefaultsHelpFormatter</a> to your parser</p>
<pre><code>    import argparse

    parser = argparse.ArgumentParser(
    description='Your application description',
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)
</code></pre>
<p>from documentation:</p>
<blockquote>
<p>ArgumentDefaultsHelpFormatter automatically adds information about
  default values to each of the argument help messages:
  Blockquote</p>
</blockquote>
</div>
<span class="comment-copy">See this SO: <a href="http://stackoverflow.com/questions/12151306/argparse-way-to-include-default-values-in-help" title="argparse way to include default values in help">stackoverflow.com/questions/12151306/â€¦</a></span>
<span class="comment-copy">If somebody seeks the same for Argparse: <a href="http://stackoverflow.com/a/12151325/562769">Argparse: Way to include default values in '--help'?</a></span>
