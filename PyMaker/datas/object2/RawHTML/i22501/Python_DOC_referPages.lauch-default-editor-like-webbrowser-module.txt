<div class="post-text" itemprop="text">
<p>Is there a simple way to lauch the systems default editor from a Python command-line tool, like the <a href="http://docs.python.org/library/webbrowser.html" rel="noreferrer">webbrowser</a> module?</p>
</div>
<div class="post-text" itemprop="text">
<p>Under windows you can simply "execute" the file and the default action will be taken: </p>
<p><code>os.system('c:/tmp/sample.txt')</code></p>
<p>For this example a default editor will spawn. Under UNIX there is an environment variable called <code>EDITOR</code>, so you need to use something like: </p>
<p><code>os.system('%s %s' % (os.getenv('EDITOR'), filename))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The modern Linux way to open a file is using <code>xdg-open</code>; however it does not guarantee that a text editor will open the file. Using <code>$EDITOR</code> is appropriate if your program is command-line oriented (and your users).</p>
</div>
<div class="post-text" itemprop="text">
<p>If you need to open a file for editing, you could be interested in <a href="https://stackoverflow.com/questions/434597/open-document-with-default-application-in-python">this question</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can actually use the <a href="https://docs.python.org/3/library/webbrowser.html" rel="nofollow noreferrer">webbrowser</a> module to do this. All the answers given so far for both this and the linked question are just the same things the <a href="https://docs.python.org/3/library/webbrowser.html" rel="nofollow noreferrer">webbrowser</a> module does behind the hood. </p>
<p>The ONLY difference is if they have <code>$EDITOR</code> set, which is rare. So perhaps a better flow would be:</p>
<pre><code>editor = os.getenv('EDITOR')
if editor:
    os.system(editor + ' ' + filename)
else:
    webbrowser.open(filename)
</code></pre>
<p>OK, now that I’ve told you that, I should let you know that the webbrowser module does state that it does not support this case.</p>
<blockquote>
<p>Note that on some platforms, trying to open a filename using this function, may work and start the operating system's associated program. However, this is neither supported nor portable.</p>
</blockquote>
<p>So if it doesn't work, don’t submit a bug report. But for most uses, it should work.</p>
</div>
<span class="comment-copy">Which filetype? For .txt and .py, opening with default application is good enough. For other filetypes, you might not get an editor.</span>
<span class="comment-copy">In my case I need to edit .xml and normal text (like commit messag in svn).</span>
<span class="comment-copy">Mac users don't get any love?</span>
<span class="comment-copy">And what if <code>EDITOR</code> is unset?</span>
<span class="comment-copy">@exhuma if $EDITOR isn't set then you don't have <i>user-set</i> default to work with.  On OS X you can <code>subprocess.call(["open, "&lt;file-path&gt;"])</code> to use the default application, just like if you used the GUI.  On linux you can <code>subprocess.call(["xdg-open", "&lt;file-path&gt;"])</code> like @u0b34a0f6ae suggested.  <code>suprocess</code> is used here instead of <code>system</code> since <code>subprocess</code> is intended to replace <code>system</code>.  It's more secure and provides methods like <code>Popen</code> that provide greater flexibility.</span>
<span class="comment-copy">What if it's not a .txt file? What if you want to edit a .html file using default editor?</span>
<span class="comment-copy">(This caveat also applies to my answer) If viewer and editor are separate, this opens the viewer in 9/10 cases. Call it on a HTML file and the web browser will open it for <i>viewing</i>.</span>
<span class="comment-copy">You're right, of course :) Maybe the OP will clarify which filetype she needs to handle..</span>
