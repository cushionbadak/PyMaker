<div class="post-text" itemprop="text">
<p>I want to convert an integer to a string in Python. I am typecasting it in vain:</p>
<pre><code>d = 15
d.str()
</code></pre>
<p>When I try to convert it to string, it's showing an error like <code>int</code> doesn't have any attribute called <code>str</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; str(10)
'10'
&gt;&gt;&gt; int('10')
10
</code></pre>
<p>Links to the documentation:</p>
<ul>
<li><a href="https://docs.python.org/2/library/functions.html#int" rel="noreferrer"><code>int()</code></a> </li>
<li><a href="https://docs.python.org/2/library/functions.html#str" rel="noreferrer"><code>str()</code></a></li>
</ul>
<p>The problem seems to come from this line: <code>d.str()</code>. </p>
<p>Conversion to a string is done with the builtin <code>str()</code> function, which basically calls the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="noreferrer"><code>__str__()</code></a> method of its parameter.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>str(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is not typecast and no type coercion in Python. You have to convert your variable in an explicit way.</p>
<p>To convert an object in string you use the <code>str()</code> function. It works with any object that has a method  called <code>__str__()</code> defined. In fact</p>
<pre><code>str(a)
</code></pre>
<p>is equivalent to</p>
<pre><code>a.__str__()
</code></pre>
<p>The same if you want to convert something to int, float, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>To manage non-integer inputs:</p>
<pre><code>number = raw_input()
try:
    value = int(number)
except ValueError:
    value = 0
</code></pre>
<hr/>
<p>Ok, if I take your latest code and rewrite a bit to get it working with Python:</p>
<pre><code>t=raw_input()
c=[]
for j in range(0,int(t)):
    n=raw_input()
    a=[]
    a,b= (int(i) for i in n.split(' '))
    d=pow(a,b)
    d2=str(d)
    c.append(d2[0])
for j in c:
    print j
</code></pre>
<p>It gives me something like:</p>
<pre><code>&gt;&gt;&gt; 2
&gt;&gt;&gt; 8 2
&gt;&gt;&gt; 2 3
6
8
</code></pre>
<p>Which is the first characters of the string result <code>pow(a,b)</code>.
What are we trying to do here?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; i = 5
&gt;&gt;&gt; print "Hello, world the number is " + i
TypeError: must be str, not int
&gt;&gt;&gt; s = str(i)
&gt;&gt;&gt; print "Hello, world the number is " + s
Hello, world the number is 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python =&gt; 3.6 you can use <code>f</code> formatting:</p>
<pre><code>&gt;&gt;&gt; int_value = 10
&gt;&gt;&gt; f'{int_value}'
'10'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The most decent way in my opinion is ``.</p>
<pre><code>i = 32   --&gt;    `i` == '32'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can use <code>%s</code> or <code>.format</code></p>
<pre><code>&gt;&gt;&gt; "%s" % 10
'10'
&gt;&gt;&gt;
</code></pre>
<p>(OR)</p>
<pre><code>&gt;&gt;&gt; '{}'.format(10)
'10'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For someone who wants to convert int to string in specific digits, the below method is recommended.</p>
<pre><code>month = "{0:04d}".format(localtime[1])
</code></pre>
<p>For more details, you can refer to Stack Overflow question <em><a href="https://stackoverflow.com/questions/134934/display-number-with-leading-zeros">Display number with leading zeros</a></em>.</p>
</div>
<span class="comment-copy">So, did you try      d2=str(d)     c.append(d2[0])  is that what you want?</span>
<span class="comment-copy">use str(d) for getting string form of an integer.</span>
<span class="comment-copy"><a href="http://blog.amir.rachum.com/post/48428590088/python-number-conversion-chart" rel="nofollow noreferrer">blog.amir.rachum.com/post/48428590088/â€¦</a></span>
<span class="comment-copy">surprise, i will check type for false-true : UnicodeEncodeError: 'ascii' codec can't encode characters in position 332-333: ordinal not in range(128)</span>
<span class="comment-copy">I like answers like this. Exactly answering the question based on the knowledge of the asker. Thank you.</span>
<span class="comment-copy">In fact, <code>f</code> formatting is faster than calling <code>str()</code>.</span>
<span class="comment-copy">Note that this is equivalent to <code>repr(i)</code>, so it will be weird for longs. (Try <code>i = `2 ** 32`; print i</code>)</span>
<span class="comment-copy">This has been deprecated in python 2 and completely removed in python 3, so I wouldn't suggest using it anymore. <a href="https://docs.python.org/3.0/whatsnew/3.0.html#removed-syntax" rel="nofollow noreferrer">docs.python.org/3.0/whatsnew/3.0.html#removed-syntax</a></span>
