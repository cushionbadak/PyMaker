<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2849645/in-python-is-it-better-to-use-list-comprehensions-or-for-each-loops">In Python, is it better to use list comprehensions or for-each loops?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>Python beginner here; in Python3, wanted to know about the right occasion to use either technique:
1) For Loop </p>
<pre><code>l_1=[1, 2, 3]
l_2=list()
for i in range(len(l_1)):
    l_2.append(l_1[i])
print(l_2)   #[1, 2, 3]
</code></pre>
<p>2) List Comprehension</p>
<pre><code>l_1=[1, 2, 3]
l_3=[l_1[i] for i in range(len(l_1))]
print(l_3)  #[1, 2, 3]
</code></pre>
<p>From the outset it looks exactly the same. Any intrinsic difference between the two?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What are the advantages of using List Comprehensions? First of all, you’re reducing 3 lines of code into one, which will be instantly recognizable to anyone who understands list comprehensions. Secondly, the second code is faster, as Python will allocate the list’s memory first, before adding the elements to it, instead of having to resize on runtime. It’ll also avoid having to make calls to ‘append’, which may be cheap but add up. Lastly, code using comprehensions is considered more ‘Pythonic’ — better fitting Python’s style guidelines. <a href="https://towardsdatascience.com/how-list-comprehensions-can-help-your-code-look-better-and-run-smoother-3cf8f87172ae" rel="nofollow noreferrer"><em>Python’s List Comprehensions: Uses and Advantages</em>, Luciano Strika</a></p>
</blockquote>
<p>List comprehension:</p>
<ul>
<li>Easier to read</li>
<li>Quicker, because of prior memory allocation</li>
</ul>
<p>For loop:</p>
<ul>
<li>More flexible</li>
</ul>
</div>
<span class="comment-copy">Thanks mate; you've reiterated an answer made in the earlier question.  " If the iteration is being done for its side effect (to print each newly added list element), then a loop is clearer.  If the iteration is executed in order to build a composite value, then list comprehensions are usually more readable. " by @Steven D. Majewski</span>
