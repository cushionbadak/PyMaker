<div class="post-text" itemprop="text">
<p>I'm having a difficult time with detecting the Backspace key using the Curses module. Whenever I press the Backspace key, the character / string returned is '^?', however I'm not able to detect it with:</p>
<p>if str(key) == '^?':</p>
<p>The code below is set up to run</p>
<pre><code>import curses

def main(win):
    win.nodelay(True)
    key = ''
    record = ''
    win.clear()
    win.addstr("Key:")
    win.addstr('\n\nRecord:')
    win.addstr(record)
    while True:
        try:
            key = win.getkey()

            if str(key) == '^?':
                # Attempt at detecting the Backspace key
                record = record[:-1]

            elif str(key) == '\n':
                # Attempt at detecting the Enter Key
                record = ''

            else:
                record += str(key)
            win.clear()
            win.addstr("Key:")
            win.addstr(str(key))
            win.addstr('\n\nRecord:')
            win.addstr(record)
            if key == os.linesep:
                break
        except Exception as e:
            # No input
            pass

curses.wrapper(main)
# CTRL+C to close the program
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On my machine, running Python 3.5.2 or 2.7.12, I get <code>KEY_BACKSPACE</code> shown as the key when I press backspace, and using</p>
<pre><code>if str(key) == 'KEY_BACKSPACE':
</code></pre>
<p>in place of</p>
<pre><code>if str(key) == '^?':
</code></pre>
<p>results in the backspace key backspacing letters off <code>record</code>.</p>
<p>I think it's possible that, on your system, you're getting the actual backspace character. In that case, you might try <code>'\b'</code> in place of <code>'^?'</code>, as according to <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">the docs</a>, that is the string escape for the ASCII backspace character.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to your clarifying comment, backspace in your terminal is neither <code>'KEY_BACKSPACE'</code> nor <code>'\b'</code> (<code>'\x08'</code>).</p>
<p>Since you're using <code>curses.wrapper()</code>, which calls <code>curses.initscr()</code>, this suggests that something is wrong with either your <code>terminfo</code> database (unlikely) or your terminal configuration (more likely).</p>
<p><code>getkey() == 'KEY_BACKSPACE'</code> or <code>getch() == curses.KEY_BACKSPACE</code> is supposed to work on any properly-configured system, so you're likely to have problems in other applications too.</p>
<p>The <code>TERM</code> environment variable is how the terminal type is communicated to tools which need the functionality beyond basic teletype, so, to fix that, start by checking what the <code>TERM</code> environment variable contains in the environment where you're running Python.</p>
<pre><code>print(os.environ['TERM'])
</code></pre>
<p>As a quick hack, you can check all the values it's been observed to take.</p>
<pre><code>if key in ('KEY_BACKSPACE', '\b', '\x7f'):
</code></pre>
</div>
<span class="comment-copy">What do <code>type(key)</code> and <code>repr(key)</code> say when you press backspace?</span>
<span class="comment-copy">type(key): &lt;class 'str'&gt;        repr(key): '\x7f'</span>
<span class="comment-copy"><code>ord(key)</code> returns 127 for me when I press backspace, I used this to detect the backspace key.</span>
<span class="comment-copy">What is do you use</span>
<span class="comment-copy">Neither of those worked for me sadly. I'm using macOS v10.13.1</span>
<span class="comment-copy"><code>if getch() in [KEY_BACKSPACE, ord('\b')]</code> works for me</span>
<span class="comment-copy">Sorry to anyone who tried the old version of the "quick hack". I had <code>getkey()</code> and <code>getch()</code> muddled together in my mind.</span>
<span class="comment-copy">By doing <code>ord(key)</code>, the integer 127 was returned, so I was able to use that to detect the backspace key.</span>
<span class="comment-copy">For the record, <code>ord('\x7f') == 127</code></span>
