<div class="post-text" itemprop="text">
<p>Me very very new programmer, I'm new to classes and not sure how to set up a print method for this class. How do I go about setting up a print method for my class here? Thanks for anything! </p>
<pre><code>class travelItem :

    def __init__(self, itemID, itemName, itemCount) :
        self.id = itemID
        self.name = itemName
        self.itemCount = itemCount
        self.transactions = []

    def getID(self) :
        return(self, id)

    def getName(self) :
        return(self.name)

    def setName(self, newName) :
        self.name = newName

    def getAvailableStart(self):
       return(self.AvailableStart)

    def appendTransaction(self, num) :
       self.transactions.append(num)

    def getTransactions(self) :
        return(self.transactions) 

    def getReservations(self) :
        Additions = 0
        for num in self.transactions :
            if (num &gt; 0) :
                Additions = Additions + num
        return(Additions)

    def getCancellations(self) :
        Subtractions = 0
        for num in self.transactions :
            if (num &lt; 0) :
                Subtractions = Subtractions + num
        return(Subtractions)

    def getAvailableEnd(self) :
       total = self.AvailableStart
       for num in self.transactions :
           total = total + num
       return(total)   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remember that a method is called on an instance of a class, so if you mean to create a true method that just prints a class you can write something like</p>
<pre><code>class Foo(object):
    def print_me(self):
        print(self)

foo_instance= Foo()
foo_instance.print_me()
</code></pre>
<p>But it sounds like you want to customize the output of print(). That is what the built in method <code>__str__</code> is for, so try this.</p>
<pre><code>class Foo(object):
    def __str__(self):
        # remember to coerce everything returned to a string please!
        return str(self.some_attribute_of_this_foo_instance)
</code></pre>
<p>a good example from your code might be </p>
<pre><code>...
    def __str__(self):
        return self.getName + ' with id number: ' + str(self.getId) + 'has ' + str(self.getTransactions) + ' transactions'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You must use a <code>__str__</code> special method:</p>
<pre><code>class travelItem:

    ...
    def __str__(self):
        return "a string that describe the data I want printed when print(instance of class) is called"
</code></pre>
</div>
<span class="comment-copy">Create a <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><code>__str__</code></a> method for your object</span>
<span class="comment-copy">Also, <a href="https://stackoverflow.com/questions/2627002/whats-the-pythonic-way-to-use-getters-and-setters">getters and setters are general considered unidiomatic in Python</a>.</span>
