<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1227121/compare-object-instances-for-equality-by-their-attributes-in-python">Compare object instances for equality by their attributes in Python</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/8276983/why-cant-i-use-the-method-cmp-in-python-3-as-for-python-2">Why can't I use the method __cmp__ in Python 3 as for Python 2?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Could anyone please find out what is wrong going on here? <strong>cmp</strong> is not being invoked. sorted(list, key=...) or similar works fine. However, that is also not overriding <strong>cmp</strong> method. </p>
<p>My aim is to sort by multiple keys. I have composition relationship as well. Student can have list of another custom object and so on. What is best way to do? I am thinking to do something like compareTo or comparing or Comparator (Stream API) in Java in functional way. There could be default sorting.</p>
<p>Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.</p>
<pre><code>class Student(object):
    def __init__(self, name, mark):
         self.name = name
         self.mark = mark

    def __cmp__(self, other):
        if self.name &lt; other.name:
           return -1
        elif self.name &gt; other.name:
           return 1
        else:
           return 0
        #return self.name.__cmp__(other.name)

student_list = [
Student(name="cccc", mark=10),
Student(name="aaaa", mark=5),
Student(name="dddd", mark=7)
]

student_list = sorted(student_list)
</code></pre>
<p>TypeError: unorderable types: Student() &lt; Student()</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons" rel="nofollow noreferrer"><code>__cmp__()</code> is obsolete and is no longer supported.</a> The correct way to do it is to override as many of <a href="https://docs.python.org/3/reference/datamodel.html#object.__lt__" rel="nofollow noreferrer"><code>__lt__()</code>, <code>__le__()</code> and <code>__eq__()</code></a> as required.</p>
</div>
<div class="post-text" itemprop="text">
<p>In <a href="https://stackoverflow.com/questions/8276983/python-2-and-python-3-cmp">Python 3 <code>__cmp__</code> is deprecated</a>. For sorting use <a href="https://docs.python.org/3/reference/datamodel.html#object.__lt__" rel="nofollow noreferrer"><code>__lt__</code></a> instead:</p>
<pre><code>class Student(object):
    def __init__(self, name, mark):
         self.name = name
         self.mark = mark

    def __lt__(self, other):
        return self.name &lt; other.name

    def __repr__(self):
        return self.name

student_list = [
Student(name="cccc", mark=10),
Student(name="aaaa", mark=5),
Student(name="dddd", mark=7)
]

print(sorted(student_list)) # [aaaa, cccc, dddd]
</code></pre>
</div>
