<div class="post-text" itemprop="text">
<p>I have long lists, for example:</p>
<pre><code>list1 = ["a","a","b","b","c"]

list2 = [1, 3, 5, 7, 9]`
</code></pre>
<p>How can I slice the second list based on the first list (<code>list1</code> is sorted by its values)?</p>
<p>Like <code>[[1,3],[5,7],[9]]</code></p>
<p>My lists are very long so I am looking for a fast way to precess this. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>With <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a> and a bit of effort.</p>
<pre><code>&gt;&gt;&gt; [[b[1] for b in r] for p,r in itertools.groupby(zip(list1, list2), operator.itemgetter(0))]
[[1, 3], [5, 7], [9]]
</code></pre>
<p>Use <code>itertools.izip()</code> instead of <code>zip()</code> if you're running 2.x.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could also just use a dictionary:</p>
<pre><code>from collections import defaultdict

list1 = ["a","a","b","b","c"]
list2 = [1, 3, 5, 7, 9]

d = defaultdict(list)
for k, v in zip(list1, list2):
    d[k].append(v)

&gt;&gt;&gt; print([lst for lst in sorted(d.values())])
[[1, 3], [5, 7], [9]]
</code></pre>
</div>
