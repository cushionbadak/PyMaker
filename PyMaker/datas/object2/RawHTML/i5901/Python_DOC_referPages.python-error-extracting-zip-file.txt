<div class="post-text" itemprop="text">
<p>I only know how to write python for GIS purposes. There is more to this code using arcpy and geoprocessing tools.... this is just the beginning part I'm stuck on that is for trying to get data ready so I can then use the shapefiles within the zipped folder for the rest of my script</p>
<p>I am trying to prompt the user to enter a directory to search through. For use of this script it will be searching for a compressed zip file, then extract all the files to that same directory. </p>
<pre><code>import zipfile, os


# ask what directory to search in 
mypath = input("Enter .zip folder path: ")
extension = ".zip"

os.chdir(mypath) # change directory from working dir to dir with files

for item in os.listdir(mypath):
    if item.endswith(extension):
        filename = os.path.abspath(item)
        zip_ref = zipfile.ZipFile(filename)
        zip_ref.extractall(mypath)
        zip_ref.close()
</code></pre>
<p>Tried with y'alls suggestions and still have issues with the following:</p>
<pre><code>import zipfile, os

mypath = input("Enter folder: ")


if os.path.isdir(mypath):
    for dirpath, dirname, filenames in os.listdir(mypath):
        for file in filenames:
            if file.endswith(".zip"):
                print(os.path.abspath(file))
                with zipfile.ZipFile(os.path.abspath(file)) as z:
                    z.extractall(mypath)

else:
    print("Directory does not exist.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure on the use of <code>arcpy</code>. However...</p>
<p>To iterate over entries in a directory, use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a>:</p>
<pre><code>for entry_name in os.listdir(directory_path): 
    # ...
</code></pre>
<p>Inside the loop, <code>entry_name</code> will be the name of an item in the directory at <code>directory_path</code>. </p>
<p>When checking if it ends with ".zip", keep in mind that the comparison is case sensitive. You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.lower" rel="nofollow noreferrer"><code>str.lower</code></a> to effectively ignore case when using <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith" rel="nofollow noreferrer"><code>str.endswith</code></a>:</p>
<pre><code>if entry_name.lower().endswith('.zip'):
        # ...
</code></pre>
<p>To get the full path to the entry (in this case, your .zip), use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join</code></a>:</p>
<pre><code>entry_path = os.path.join(directory_path, entry_name)
</code></pre>
<p>Pass this full path to <code>zipfile.ZipFile</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your first if-block will negate the else-block if the location is invalid. I'd remove the 'else' operator entirely. If you keep it, the if-check effectively kills the program. The "if folderExist" is sufficient to replace the else.</p>
<pre><code>import arcpy, zipfile, os


# ask what directory to search in 
folder = input("Where is the directory? ")
# set workspace as variable so can change location
arcpy.env.workspace = folder

# check if invalid entry - if bad, ask to input different location
if len(folder) == 0:
    print("Invalid location.")
    new_folder = input("Try another directory?")
    new_folder = folder
    # does the above replace old location and re set as directory location?



# check to see if folder exists
folderExist = arcpy.Exists(folder)
if folderExist:
    # loop through files in directory
        for item in folder:
        # check for .zip extension
            if item.endswith(".zip"):
                 file_name = os.path.abspath(item) # get full path of files
                 print(file_name)
                 zip_ref = zipfile.ZipFile(file_name) # create zipfile object
                 zip_ref.extractall(folder) # extract all to directory
                 zip_ref.close() # close file
</code></pre>
<p>This may be neater if you're okay not using your original code:</p>
<pre><code>import zipfile, os
from tkinter import filedialog as fd

# ask what directory to search in 
folder = fd.askdirectory(title="Where is the directory?")

# loop through files in directory
for item in os.listdir(folder):
     # check for .zip extension
     if zipfile.is_zipfile(item):
         file_name = os.path.abspath(item) # get full path of files
         # could string combine to ensure path
         # file_name = folder + "/" + item
         print(file_name)

         zip_ref = zipfile.ZipFile(file_name) # create zipfile object
         zip_ref.extractall(folder) # extract all to directory
         zip_ref.close() # close file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>[UPDATED]</p>
<p>I was able to solve the same with the following code</p>
<pre><code>import os
import zipfile

mypath = raw_input('Enter Folder: ')

if os.path.isdir(mypath):
    for file in os.listdir(mypath):
        if file.endswith('.zip'):
            with zipfile.ZipFile(os.path.join(mypath, file)) as z:
                z.extractall(mypath)
else:
    print('Directory does not exist')
</code></pre>
</div>
<span class="comment-copy">What does "stops working" mean? Is there an error? Does <code>print(file_name)</code> show the correct path to the file? It looks like your code is not indented properly after <code>else:</code>.</span>
<span class="comment-copy">The indentation is correct in my program, it got moved to the left when I was posting on here.  I'm terrible at explaining things, sorry. It will run completely through and I get the "Process finished with exit code 0" (I'm using PyCharm)... but it didn't actually unzip the folder that I input for the directory. I'm not sure why, I just tested some print statements and that's how I found out it is somewhere after the "if item.endswith(".zip")" line</span>
<span class="comment-copy">I'm not sure how you're looping over the files in your code. Either use <b>os.listdir</b> or <b>os.walk</b> to get the files inside the folder.</span>
<span class="comment-copy">I don't understand how to use os. this is all making me more confused</span>
<span class="comment-copy">@hawkia <a href="https://docs.python.org/2/library/os.html" rel="nofollow noreferrer">os</a> is a python module which provides a portable way of using operating system dependent functionality. <a href="https://docs.python.org/2/library/os.html#os.listdir" rel="nofollow noreferrer">os.listdir</a> returns a list containing the names of the entries in the directory given by path Check some of the answers to understand how it is working</span>
<span class="comment-copy">I tried to make the changes you suggested and it still did not extract the files. I was using other people posts to figure out the extraction so I'm clueless as to why it won't work still</span>
<span class="comment-copy">If you can verify that the issue does not stem from arcpy (setting an environment in a file directory seems strange especially if you're just trying to extract a zip file), then you should check to see if the file_name is truly returning your zip file of interest.</span>
<span class="comment-copy">Note that <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> covers the entire directory tree (using <code>os.listdir</code>) while <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a> only covers the directory.</span>
<span class="comment-copy">When I tried this it says there is an error with "for dirpath, dirnames, filenames in os.walk(mypath):" saying there are too many variables to unpack</span>
<span class="comment-copy">@hawkia that should not be happening, it works fine on mine. <a href="https://docs.python.org/2/library/os.html#os.walk" rel="nofollow noreferrer">os.walk</a> returns 3 tuples. Can you paste the code you tried?</span>
<span class="comment-copy">@DevUberoi I wasn't sure how to add the code to the comment correctly so I added it to the end of my original post.</span>
