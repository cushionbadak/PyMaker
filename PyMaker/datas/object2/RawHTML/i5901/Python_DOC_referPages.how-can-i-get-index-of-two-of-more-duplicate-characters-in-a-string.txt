<div class="post-text" itemprop="text">
<p>I want to store actual index of Two or more duplicate characters in a list. For that i used index() but it returns the same index of all the duplicate characters.
Any other solution for this problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Let our list and our desired element be defined as follows:</p>
<pre><code>my_list = [1, 3, 2, 4, 3, 3, 5, 3]
desired_element = 3
</code></pre>
<p>Then you can use a nice built-in of Python, <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a>:</p>
<pre><code>indexes = [index for index, element in enumerate(my_list) if element == desired_element]
print(indexes)
</code></pre>
<p>The output is, as expected <code>[1, 4, 5, 7]</code>.</p>
<hr/>
<p>Or, in a nicer format:</p>
<pre><code>def indexes(my_list, desired_element):
    return [index for index, element in enumerate(my_list) if element == desired_element]
</code></pre>
<p>And then just call it using <code>indexes(list, element)</code>.</p>
<hr/>
<p>If you are looking for efficiency (I doubt you are):</p>
<pre><code>def indexes2(my_list, desired_element):
    for index, element in enumerate(my_list):
        if element == desired_element:
            yield index
</code></pre>
<p>For large lists (as far as I have tested), this is 4-5 times faster. Note that this returns a generator, and in order to visualise the result, you must convert it to a list using <code>list(...)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using pandas we can read this to a pd series and do some operations in one go.</p>
<pre><code>import pandas as pd

l = ['a','b','c','a','b']

d = (pd.Series(l)[pd.Series(l).duplicated(keep=False)]
     .reset_index()
     .groupby(0)['index']
     .apply(list)
     .to_dict())

d
</code></pre>
<p>Returns:</p>
<pre><code>{'a': [0, 3], 'b': [1, 4]}
</code></pre>
<p>Or this:</p>
<pre><code>d = (pd.Series(l)
     .reset_index()
     .groupby(0)['index']
     .apply(lambda x: list(x) if len(list(x)) &gt; 1 else None)
     .dropna()
     .to_dict())
</code></pre>
</div>
<span class="comment-copy">post the code that you tried.</span>
<span class="comment-copy">Welcome to StackOverflow. Please take the time to read this post  how to provide a <a href="http://stackoverflow.com/help/mcve">minimal, complete, and verifiable example</a> and revise your question accordingly. These tips on <a href="http://stackoverflow.com/help/how-to-ask">how to ask a good question</a> may also be useful.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/11122291/python-find-char-in-string-can-i-get-all-indexes">python - find char in string - can I get all indexes?</a></span>
<span class="comment-copy">why do you have both <a href="https://stackoverflow.com/questions/tagged/python-2.7">python-2.7</a> and <a href="https://stackoverflow.com/questions/tagged/python-3.x">python-3.x</a> tags?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/991350/counting-repeated-characters-in-a-string-in-python">Counting repeated characters in a string in Python</a></span>
