<div class="post-text" itemprop="text">
<p>It appears, based on a <a href="http://urwid.org/tutorial/#horizontal-menu" rel="nofollow noreferrer">urwid example</a> that <code>u'\N{HYPHEN BULLET}</code> will create a unicode character that is a hyphen intended for a bullet. </p>
<p>The names for unicode characters seem to be defined at <a href="http://www.fileformat.info/info/unicode/char/b.htm" rel="nofollow noreferrer">fileformat.info</a> and some element of using Unicode in Python appears in the <a href="https://docs.python.org/2/howto/unicode.html" rel="nofollow noreferrer">howto documentation</a>. Though there is no mention of the <code>\N{}</code> syntax.</p>
<p>If you pull all these docs together you get the idea that the constant <code>u"\N{HYPHEN BULLET}"</code> creates a ⁃</p>
<p>However, this is all a theory based on pulling all this data together. I can find no documentation for <code>"\N{}</code> in the Python docs. </p>
<p>My question is whether my theory of operation is correct and whether it is documented anywhere?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are correct that <code>u"\N{CHARACTER NAME}</code> produces a valid unicode character in Python.</p>
<p>It is not documented much in the Python docs, but after some searching I found a reference to it on effbot.org</p>
<p><a href="http://effbot.org/librarybook/ucnhash.htm" rel="nofollow noreferrer">http://effbot.org/librarybook/ucnhash.htm</a></p>
<blockquote>
<h2>The ucnhash module</h2>
<p>(Implementation, 2.0 only) This module is an implementation module,
  which provides a name to character code mapping for Unicode string
  literals. If this module is present, you can use \N{} escapes to map
  Unicode character names to codes.</p>
<p>In Python 2.1, the functionality of this module was moved to the
  <strong>unicodedata</strong> module.</p>
</blockquote>
<p>Checking the documentation for <a href="https://docs.python.org/3/library/unicodedata.html" rel="nofollow noreferrer"><code>unicodedata</code></a> shows that the module is using the data from the Unicode Character Database.</p>
<blockquote>
<h2>unicodedata — Unicode Database</h2>
<p>This module provides access to the Unicode Character Database (UCD)
  which defines character properties for all Unicode characters. The
  data contained in this database is compiled from the UCD version
  9.0.0.</p>
</blockquote>
<p>The full data can be found at: <a href="https://www.unicode.org/Public/9.0.0/ucd/UnicodeData.txt" rel="nofollow noreferrer">https://www.unicode.org/Public/9.0.0/ucd/UnicodeData.txt</a></p>
<p>The data has the structure: <code>HEXVALUE;CHARACTER NAME;etc..</code> so you could use this data to look up characters.</p>
<p>For example:</p>
<pre><code># 0041;LATIN CAPITAL LETTER A;Lu;0;L;;;;;N;;;;0061;
&gt;&gt;&gt; u"\N{LATIN CAPITAL LETTER A}"
'A'

# FF7B;HALFWIDTH KATAKANA LETTER SA;Lo;0;L;&lt;narrow&gt; 30B5;;;;N;;;;;
&gt;&gt;&gt; u"\N{HALFWIDTH KATAKANA LETTER SA}"
'ｻ'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not every gory detail can be found in a how-to. The <a href="https://docs.python.org/2/reference/lexical_analysis.html#string-literals" rel="nofollow noreferrer">table of escape sequences</a> in the reference manual includes:</p>
<p>Escape Sequence: <code>\N{name}</code><br/>
Meaning: Character named <code>name</code> in the Unicode database (Unicode only)</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>\N{}</code> syntax is documented in the <a href="https://docs.python.org/3/howto/unicode.html?highlight=unicode%20howto#the-string-type" rel="nofollow noreferrer">Unicode HOWTO</a>, at least.</p>
<p>The names are documented in the Unicode standard, such as:</p>
<pre><code>http://www.unicode.org/Public/UCD/latest/ucd/NamesList.txt
</code></pre>
<p>The <code>unicodedata</code> module can look up a name for a character:</p>
<pre><code>&gt;&gt;&gt; import unicodedata as ud
&gt;&gt;&gt; ud.name('A')
'LATIN CAPITAL LETTER A'
&gt;&gt;&gt; print('\N{LATIN CAPITAL LETTER A}')
A
</code></pre>
</div>
