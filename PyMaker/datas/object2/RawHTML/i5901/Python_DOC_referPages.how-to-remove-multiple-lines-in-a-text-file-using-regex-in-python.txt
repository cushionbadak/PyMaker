<div class="post-text" itemprop="text">
<p>I want to remove multiple lines in a file using regex.</p>
<p>I have a file with something like this : </p>
<pre><code>host host_name {
# comment (optional)
    hardware ethernet 01:22:85:EA:A8:5D;
    fixed-address 192.168.107.210;
}

host another_host_name {
# comment (optional)
    hardware ethernet 01:22:85:EA:A8:5D;
    fixed-address 192.168.107.210;

}
</code></pre>
<p>Basically, when I choose the host name like <code>host_name</code> for example, it'll detect the line that has it and remove all the lines after it until it encounters the first <code>{</code> : </p>
<pre><code>#before 


host host_name {
# comment (optional)
    hardware ethernet 01:22:85:EA:A8:5D;
    fixed-address 192.168.107.210;
}

host another_host_name {
# comment (optional)
    hardware ethernet 01:22:85:EA:A8:5D;
    fixed-address 192.168.107.210;

}

#after 

host another_host_name {
# comment (optional)
    hardware ethernet 01:22:85:EA:A8:5D;
    fixed-address 192.168.107.210;

}
</code></pre>
<p>I guess we would use something like <code>m = search('r"^host.*}', line)</code> but it works for line by line stuff not for multiple lines.</p>
<pre><code>def remove(filename, hostname):
           with open(os.path.abspath("app/static/DATA/{}".format(filename)), "a") as f:
           for line in f:
               m = search('r"^hostname.*}', line, re.MULTILIGNE)
               if m:
                   #we delete the bloc, I don't know how to do it though
</code></pre>
<p>Starting like this?</p>
</div>
<div class="post-text" itemprop="text">
<p>I have 3 ideas for you.  </p>
<ul>
<li><p>Try MULTILINE mode.  You can read more about it here: <a href="https://docs.python.org/3/library/re.html#re.MULTILINE" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#re.MULTILINE</a> which I think will do what you are asking.</p></li>
<li><p>When that just doesn't do the trick, I cheat.  I'll run a pre regex to swap all \n to something strange like "this_is_my_special_holder".  Now everything is on one line.  I'll do the work I want like you have written.  Then I'll run a post regex that swaps all "this_is_my_special_holder" back to \n.  If you ever get stuck in a language that doesn't support multiline this should always get it done :)</p></li>
<li><p>You may just be able to run the regex, my example here does just that:</p></li>
</ul>
<p>Here is how I would do this whole thing:
    import re</p>
<pre><code>def main(regex_part):
    the_regex = re.compile("".join(["host ", regex_part, " {[^}]+}"]))
    with open('test.txt', 'r') as myfile:
        data=myfile.read()
        data = re.sub(the_regex, "", data)
        print (data)
        with open('test2.txt', 'w') as newfile:
            newfile.write(data)

main("host_name")
</code></pre>
<p>I open the file with 'with', that way you don't have to close the file handle later.  'r' is to read the file and 'w' is to write the file.  The regex simply replaces:</p>
<pre><code>host host_name { everything up to the next } and then the next }
</code></pre>
<p>with nothing.  </p>
<p><a href="http://regex101.com" rel="nofollow noreferrer">http://regex101.com</a> is a handy site to actually play with the regexs.  good luck!</p>
</div>
<span class="comment-copy">This is going to get super messy, don't go there. Just find a full blown parser for <code>dhcp.conf</code>: <a href="https://pypi.python.org/pypi/iscconf" rel="nofollow noreferrer">pypi.python.org/pypi/iscconf</a> <a href="https://pypi.python.org/pypi/iscpy/1.0.1" rel="nofollow noreferrer">pypi.python.org/pypi/iscpy/1.0.1</a> <a href="https://pypi.python.org/pypi/bicop/" rel="nofollow noreferrer">pypi.python.org/pypi/bicop</a></span>
<span class="comment-copy">Have you tried enabling <a href="https://docs.python.org/3/library/re.html#re.MULTILINE" rel="nofollow noreferrer">multiline mode</a>?</span>
<span class="comment-copy">@Pavel I am a beginner and I never used those, isn't it more complex that way? At least I used some regex before this is why I suggested that way even though I know it might not be the best one.</span>
<span class="comment-copy">I edited my post with an example of program, can you tell me if I am starting well?</span>
<span class="comment-copy">I'll write up a little example of code :)</span>
<span class="comment-copy">Wow, it's almost what I want, now I just want to make the "host_name" dynamic, like for example with host_name = request.form.get('host_name') and then I use re.sub("host host_name,etc...", data), is it possible? and your link is awesome btw.</span>
<span class="comment-copy">sure, I'll update this</span>
<span class="comment-copy">I just need to find a way to give an argument to my regex to be able to choose the host_name that I want now but I won't ask you that because you already did a lot. I adapted your program to mine and it works, thank you so much !</span>
