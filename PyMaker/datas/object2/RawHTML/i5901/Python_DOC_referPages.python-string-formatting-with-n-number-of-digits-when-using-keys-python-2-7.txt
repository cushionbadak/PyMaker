<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/339007/nicest-way-to-pad-zeroes-to-a-string">Nicest way to pad zeroes to a string</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>To have specific number of digits in string formatting, I am aware that it can be done in this way:</p>
<pre><code>In [18]: hours = 01

In [19]: "%.2d" %(hours)
Out[19]: '01'

In [20]: "%.2f" %(hours)
Out[20]: '1.00'
</code></pre>
<p>But my case is a bit different. I am using specific keys to denote the values, for example:</p>
<pre><code>for filename in os.listdir('/home/user/zphot_01/')
</code></pre>
<p>Here I want to have different values for the <code>'01'</code>, i.e. </p>
<pre><code>for filename in os.listdir('/home/user/zphot_{value1}/'.format(value1=some_number):
</code></pre>
<p><strong>When I use the above method with <code>some_number = 01</code>, it does not take into account the <code>0</code> and so my folder is not recognised.</strong> </p>
<p><strong>EDIT:</strong></p>
<p>Most of the answers are for only one value, however, I want to have more than one key value, i.e.:</p>
<pre><code>for filename in os.listdir('/home/user/zphot_{value1}/zphot_{value2}'.format(value1=some_number1,value2=some_number2)). 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">new format string syntax</a> allows you to use format specifiers, just like the old <code>%</code>-based syntax. The format specifiers you can use are similar, not exactly the same in all cases (I think), but as far as I know, anything you could do with the old syntax can also be done with the new syntax.</p>
<p>All you have to do is put the format specifier inside the formatting expression, separated from the field name/number by a colon. In this case, you could use <code>{value1:02d}</code>, where <code>02d</code> is the code to get a zero-filled (<code>0</code>) width-2 (<code>2</code>) representation of an integer (<code>d</code>).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print("{0:02}".format(1))
&gt;&gt;0001
</code></pre>
<p>Just learnt from other answers and commentators that we don't need <code>zfill</code> but can use the expression <code>:02</code> to give the padding.</p>
<p><strong>Expand to more positions</strong>:</p>
<pre><code>print("{0:02}_{1:02}".format(1, 2))
&gt;&gt;0001_0002
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>There are a lot of ways. Look <a href="https://stackoverflow.com/a/339013/7655838">this answer</a>.</h1>
<p>This is my subjetive opinion, but I have ordered them by worst to best.</p>
<pre><code>&gt;&gt;&gt; '1'.zfill(2)
'01'
&gt;&gt;&gt; '%02d' % 1
'01'
&gt;&gt;&gt; '%02s' % '1'
'01'
&gt;&gt;&gt; '{0:0&gt;2}'.format(1)
'01'
&gt;&gt;&gt; '{0:02d}'.format(1)
'01'
&gt;&gt;&gt; '{:02d}'.format(1)
'01'
&gt;&gt;&gt; f'{1:02}'
'01'
</code></pre>
<p>Then, you have to combine that with your current string, nothing really complicate.</p>
<h2>Edit:</h2>
<p>I am not sure what the OP is asking with his edit exactly but:</p>
<pre><code>for filename in os.listdir('/home/user/zphot_{value1}/zphot_{value2}'.format(value1=some_number1,value2=some_number2)).
</code></pre>
<p>Can be changed by a lot of ways, I'll give some examples:</p>
<pre><code>&gt;&gt;&gt; number_first, number_second = '1', '2'
&gt;&gt;&gt; '/home/user/zphot_{value1}/zphot_{value2}'.format(value1 = number_first.zfill(2), value2 = '2'.zfill(2))
'/home/user/zphot_01/zphot_02'
&gt;&gt;&gt; '/home/user/zphot_{}/zphot_{}'.format('1'.zfill(2), number_second.zfill(2))
'/home/user/zphot_01/zphot_02'
&gt;&gt;&gt; f'/home/user/zphot_{{number_first:02}}/zphot_{2:02}'
'/home/user/zphot_01/zphot_02'    
&gt;&gt;&gt; '/home/user/zphot_%02d/zphot_%02s' % (1, '2')
'/home/user/zphot_01/zphot_02'
&gt;&gt;&gt; '/home/user/zphot_{:02d}/zphot_{:02d}'.format(1, 2)
'/home/user/zphot_01/zphot_02'
</code></pre>
<p>Etc.</p>
</div>
<span class="comment-copy">Please use the new string formatting and you won't have a lot of these problems.</span>
<span class="comment-copy">You can use <code>'1'.zfill(2)</code></span>
<span class="comment-copy">@user1767754: Could you please give me a link</span>
<span class="comment-copy">'{value:02d}'.format(value=1)</span>
<span class="comment-copy">Or you could upgrade to Python 3.6 and use f-strings, Eg <code>f'{value1:02}'</code></span>
<span class="comment-copy">This is surely a more pythonic way than the other one.</span>
<span class="comment-copy">How to go about in Python 2.7 ?</span>
<span class="comment-copy">The new string format codes also work in Python 2.7.</span>
<span class="comment-copy">@DavidZ: It doesn't! It still does not recognise the <code>0</code> in <code>01</code></span>
<span class="comment-copy">@ThePredator What is that <code>0</code> supposed to mean? Are you talking about when you set <code>hours = 01</code>? You should know that in code, <code>1</code> and <code>01</code> represent exactly the same value</span>
<span class="comment-copy">I love grumpy downvoters</span>
<span class="comment-copy">I was about to iteratively make my answer better</span>
<span class="comment-copy">There's no need for a separate <code>.zfill</code> call: <code>.format</code> can do that operation. Eg, <code>"{0:02}".format(1)</code></span>
<span class="comment-copy">Um, your answer is now a carbon copy of DavidZ's...</span>
<span class="comment-copy">Still iterating, I'm not the downvoter.... but keep in mind that taking a solution someone else suggested first as yours is a little unfair to that other person.</span>
<span class="comment-copy">Lovely, thanks for the dupe target.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ, my english isn't really good and the translator think you are going to kill someone with "dupe target"... but, you're welcome, I guess.</span>
<span class="comment-copy">I want to use it for more than one value</span>
<span class="comment-copy">@ThePredator, Could you explain better? I don't understand what are you meaning.</span>
<span class="comment-copy">I have edited my question, please look</span>
