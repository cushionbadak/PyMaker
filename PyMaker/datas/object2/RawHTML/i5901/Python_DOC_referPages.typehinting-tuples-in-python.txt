<div class="post-text" itemprop="text">
<p>When I want to typehint a tuple in Python like:</p>
<pre><code>def func(var: tuple[int, int]):
    # do something

func((1, 2))    # would be fine
func((1, 2, 3)) # would throw an error
</code></pre>
<p>It is required to give the exact number of items in the tuple. That's different from list typehinting:</p>
<pre><code>def func(var: list[int]):
    # do something

func([1])       # would be fine
func([1, 2])    # would also be fine
func([1, 2, 3]) # would also be fine
</code></pre>
<p>That's consequentially, in a way, because of the type of tuples. Because they are designed not to be changed, you have to hardcode the amount of items in it.</p>
<p>So my question is, is there a way to make the number of items in a tuple type hint flexible? I tried something like that but it didn't work:</p>
<pre><code>def func(var: tuple[*int]):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can <em>make the number of items in a tuple type hint flexible</em>:</p>
<pre><code>from typing import Tuple

def func(var: Tuple[int, ...]):
    pass
</code></pre>
<p>From the docs: <a href="https://docs.python.org/3/library/typing.html#typing.Tuple" rel="noreferrer">https://docs.python.org/3/library/typing.html#typing.Tuple</a></p>
<blockquote>
<p>To specify a variable-length tuple of homogeneous type, use literal ellipsis, e.g. <code>Tuple[int, ...]</code>. A plain <code>Tuple</code> is equivalent to <code>Tuple[Any, ...]</code>, and in turn to <code>tuple</code>.</p>
</blockquote>
</div>
<span class="comment-copy">would just have been nice to make it possible without using an extra package, but I will need it anyway, and it seems there is no other option</span>
