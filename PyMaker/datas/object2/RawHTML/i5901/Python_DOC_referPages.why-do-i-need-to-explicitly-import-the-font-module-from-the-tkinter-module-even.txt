<div class="post-text" itemprop="text">
<p>I have tried to run the give python snippet:</p>
<pre><code>from tkinter import *
from tkinter import font
root = Tk()
list_fonts = list(font.families())
for i in list_fonts:
    print(i)
root.mainloop()
</code></pre>
<p>I get the output as:</p>
<pre><code>Sitka Display
Sitka Banner
Nirmala UI Semilight
Leelawadee UI
Gadugi
Microsoft New Tai Lue
DokChampa
Segoe UI
Calibri
Miriam
Angsana New
Iskoola Pota
Kartika
Segoe UI Semilight
Vijaya
Nirmala UI
Mongolian Baiti
Microsoft YaHei
@Microsoft YaHei
Microsoft YaHei UI
@Microsoft YaHei UI
Vani
Arial Black
IrisUPC
Batang
@Batang
BatangChe
@BatangChe
Gungsuh
@Gungsuh
GungsuhChe
@GungsuhChe
Gautami
Segoe UI Black
Calibri Light
Cambria
Rod
Georgia
Verdana
Symbol
Euphemia
Raavi
Corbel
Shruti
Consolas
Segoe UI Semibold
Simplified Arabic
Cambria Math
DaunPenh
Nyala
Constantia
Yu Gothic
@Yu Gothic
CordiaUPC
Khmer UI
Aharoni
Microsoft Uighur
Times New Roman
Times New Roman CYR
Times New Roman TUR
Times New Roman CE
Times New Roman Baltic
Times New Roman Greek
Segoe Script
Candara
Ebrima
DilleniaUPC
MS Mincho
@MS Mincho
MS PMincho
@MS PMincho
Browallia New
Segoe UI Light
Segoe UI Emoji
Aldhabi
DFKai-SB
@DFKai-SB
SimHei
@SimHei
Lao UI
Courier New
Courier New CYR
Courier New TUR
Courier New CE
Courier New Greek
Courier New Baltic
Kalinga
Microsoft PhagsPa
Tahoma
EucrosiaUPC
KaiTi
@KaiTi
SimSun
@SimSun
NSimSun
@NSimSun
Meiryo
@Meiryo
Meiryo UI
@Meiryo UI
Sylfaen
Tunga
Urdu Typesetting
Microsoft YaHei Light
@Microsoft YaHei Light
Microsoft YaHei UI Light
@Microsoft YaHei UI Light
Webdings
Plantagenet Cherokee
Gabriola
MS Gothic
@MS Gothic
MS UI Gothic
@MS UI Gothic
MS PGothic
@MS PGothic
Gulim
@Gulim
GulimChe
@GulimChe
Dotum
@Dotum
DotumChe
@DotumChe
Lucida Sans Unicode
Andalus
Leelawadee
FangSong
@FangSong
Yu Mincho Demibold
@Yu Mincho Demibold
David
Miriam Fixed
Impact
Levenim MT
Segoe Print
Estrangelo Edessa
Leelawadee UI Semilight
Microsoft JhengHei
@Microsoft JhengHei
Microsoft JhengHei UI
@Microsoft JhengHei UI
Narkisim
MingLiU-ExtB
@MingLiU-ExtB
PMingLiU-ExtB
@PMingLiU-ExtB
MingLiU_HKSCS-ExtB
@MingLiU_HKSCS-ExtB
Yu Mincho Light
@Yu Mincho Light
Latha
Microsoft Sans Serif
FrankRuehl
MingLiU
@MingLiU
PMingLiU
@PMingLiU
MingLiU_HKSCS
@MingLiU_HKSCS
Myanmar Text
Yu Gothic Light
@Yu Gothic Light
Javanese Text
Microsoft Himalaya
Yu Mincho
@Yu Mincho
Lucida Console
Arabic Typesetting
Microsoft Yi Baiti
MV Boli
Wingdings
MT Extra
Arial Unicode MS
@Arial Unicode MS
Century
Wingdings 2
Wingdings 3
Book Antiqua
Century Gothic
Haettenschweiler
MS Outlook
Tempus Sans ITC
Pristina
Papyrus
Mistral
Lucida Handwriting
Kristen ITC
Juice ITC
French Script MT
Freestyle Script
Bradley Hand ITC
Arial Narrow
Garamond
Monotype Corsiva
Algerian
Baskerville Old Face
Bauhaus 93
Bell MT
Berlin Sans FB
Bernard MT Condensed
Bodoni MT Poster Compressed
Britannic Bold
Broadway
Brush Script MT
Californian FB
Centaur
Chiller
Colonna MT
Cooper Black
Footlight MT Light
Harlow Solid Italic
Harrington
High Tower Text
Jokerman
Kunstler Script
Lucida Bright
Lucida Calligraphy
Lucida Fax
Magneto
Matura MT Script Capitals
Modern No. 20
Niagara Engraved
Niagara Solid
Old English Text MT
Onyx
Parchment
Playbill
Poor Richard
Ravie
Informal Roman
Showcard Gothic
Snap ITC
Stencil
Viner Hand ITC
Vivaldi
Vladimir Script
Wide Latin
Tw Cen MT
Tw Cen MT Condensed
Script MT Bold
Rockwell Extra Bold
Rockwell Condensed
Rockwell
Rage Italic
Perpetua Titling MT
Perpetua
Palace Script MT
OCR A Extended
Maiandra GD
Lucida Sans Typewriter
Lucida Sans
Imprint MT Shadow
Goudy Stout
Goudy Old Style
Gloucester MT Extra Condensed
Gill Sans Ultra Bold Condensed
Gill Sans Ultra Bold
Gill Sans MT Condensed
Gill Sans MT
Gill Sans MT Ext Condensed Bold
Gigi
Franklin Gothic Medium Cond
Franklin Gothic Heavy
Franklin Gothic Demi Cond
Franklin Gothic Demi
Franklin Gothic Book
Forte
Felix Titling
Eras Medium ITC
Eras Light ITC
Eras Demi ITC
Eras Bold ITC
Engravers MT
Elephant
Edwardian Script ITC
Curlz MT
Copperplate Gothic Light
Copperplate Gothic Bold
Century Schoolbook
Castellar
Calisto MT
Bookman Old Style
Bodoni MT Condensed
Bodoni MT Black
Bodoni MT
Blackadder ITC
Arial Rounded MT Bold
Agency FB
Bookshelf Symbol 7
MS Reference Sans Serif
MS Reference Specialty
Berlin Sans FB Demi
Tw Cen MT Condensed Extra Bold
</code></pre>
<p>As well as a tkinter window</p>
<p>But when I tried to execute the snippet as given below:</p>
<pre><code>from tkinter import *
root = Tk()
list_fonts = list(font.families())
for i in list_fonts:
    print(i)
root.mainloop()
</code></pre>
<p>I get an error:</p>
<pre><code>Traceback (most recent call last):
  File "fonts.py", line 4, in &lt;module&gt;
    list_fonts = list(font.families())
NameError: name 'font' is not defined
</code></pre>
<p>My doubt is that why do I explicitly need to import font from tkinter. As you can see that I have already imported the font module using the "*" notation in line 1. Please give some example so that I can understand how this is taking place. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>import *</code> does not import everything. One way that it doesn't import everything is that <a href="https://docs.python.org/3/tutorial/modules.html#importing-from-a-package" rel="nofollow noreferrer">it does not automatically search for submodules of a package</a>. <code>font</code> is a submodule of the <code>tkinter</code> package, and if it has not already been loaded by some other import, <code>from tkinter import *</code> will not find <code>tkinter.font</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is simple: Python doesn't automagically import all module hierarchies, just because you import the top-level one. Those who do (e.g. os, which will make os.path available) have to explicitly write code for that .</p>
<p>Just add <code>import tkinter.font</code>, and it works</p>
<p>However, as IDLE uses tkinter itself, it has already imported tkinter.font, thus you think you can get away without that import , 
I hope this helps : )</p>
</div>
<div class="post-text" itemprop="text">
<p>Modules can have submodules and/or functions, variables, etc. What gets imported by <code>from &lt;module&gt; import *</code> depends on how the module was implemented.  Most modules will not automatically import submodules. <br/>
In this case, <strong>tkinter</strong> is the main module, and <strong>font</strong> is a submodule, and <strong>tkinter</strong> was not designed to import all submodules automatically.  So when you do <code>from tkinter import *</code>, you are grabbing all the functions and variables, but not the submodules.  The submodules must be explicitly imported to be used.  You can enter:</p>
<pre><code>from tkinter import *
from tkinter import font
</code></pre>
<p>Or you could also enter:</p>
<pre><code>import tkinter  # actually not needed since the below "does both"
import tkinter.font
</code></pre>
<p>The difference would be whether you want to use <code>font.Font(...</code> or <code>tkinter.font.Font(...</code></p>
</div>
<span class="comment-copy">what do you mean by submodules are not imported?</span>
<span class="comment-copy">Coming from a java background, It means that there are differences between the two imports...isn't???</span>
<span class="comment-copy">Yes ,@SumitPrasad , there is a difference between the two imports, import * - means ideally imports everything(not in this case) also it's not at all a good idea , and import tkinter.font will import only font .</span>
<span class="comment-copy">sir, can you please tell what a submodule actually means?</span>
<span class="comment-copy">Check out <a href="https://docs.python.org/3.6/tutorial/modules.html" rel="nofollow noreferrer">docs.python.org/3.6/tutorial/modules.html</a> for a complete discussion of modules and submodules.  Essentially, a submodule is like a standalone module inside another module...</span>
<span class="comment-copy">in the tkinter package(correct me if I am wrong about considering tkinter as a package) had there been a ** <b>all__=[font]**  declaration in the <i>*__init</i></b>.py*</span>
