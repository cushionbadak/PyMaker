<div class="post-text" itemprop="text">
<p>I made my code like below....</p>
<p>But as i input the data such as spam &amp; number, previous data is deleted.</p>
<p>So i'd like to make multiple value in one key...
(i think using list is kinda good method)</p>
<p>For example, </p>
<p>Key: spam - Value: 01012341111, 01099991234, </p>
<p>Key: spam - Value: 01032938962, 01023421232, 01023124242</p>
<p><a href="https://i.stack.imgur.com/jzbK1.jpg" rel="nofollow noreferrer">enter image description here</a></p>
<p>In summary, I want to get this print (attached Picture)</p>
<p>this is my code: </p>
<pre><code>enter code here
phonebook = dict()
ntype = ['spam', 'friend', 'family', 'etc']
trash =[]
spam = []
friend = []
family = []
etc = []
while True:
    a = input("Input your number and ntype : ")
    b = a.split()
    i = 0
    j = 0
    if a == 'exit':
        print("end program")
        break
        exit()
    elif a == "print spam":
        print("*** spam numbers: ")
        print('*', phonebook['spam'])
    elif a == "print numbers":
        print("*** numbers:")
    for t in ntype:
        try:
            print("**", t)
            print('*',phonebook[t])
        except KeyError:
            continue
    print("** trash")
    print("*", phonebook['trash'])
else:
    while True:
        try:
            if ntype[j] in b:
                for k in b:
                    if list(k)[0] == '0' and len(k) &gt;= 10 and len(k) &lt;= 11:
                        if k in phonebook.values():
                            print("Already Registered")
                        else:
                            phonebook[ntype[j]] = k
                            print(phonebook)
                break
            else:
                j+=1
        except IndexError:
            if list(b[i])[0] == '0' and len(b[i]) &gt;= 10 and len(b[i]) &lt;= 11:
                if b[i] in phonebook.values():
                    print("Already Registered")
                else:
                    phonebook['trash'] = b[i]
                    print(phonebook)
                break
            else:
                break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use list for that. The problem is that you cannot append to a value that has not yet been set.
</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; d['a'].append('value')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'a'
</code></pre>
<p>And, as you saw, assigning multiple times to the same key won't do the trick.</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; d['a'] = 'value1'
&gt;&gt;&gt; d['a'] = 'value2'
&gt;&gt;&gt; d
{'a': 'value2'}
</code></pre>
<p>So, in order to make it work you could initialize all your possible keys with an empty list:</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; possible_keys = ['a', 'b']
&gt;&gt;&gt; for k in possible_keys:
...     d[k] = []
... 
&gt;&gt;&gt; d['a'].append('value1')
&gt;&gt;&gt; d['a'].append('value2')
&gt;&gt;&gt; d['b'].append('value3')
&gt;&gt;&gt; d['b'].append('value4')
&gt;&gt;&gt; d
{'b': ['value3', 'value4'], 'a': ['value1', 'value2']}
</code></pre>
<p>This works but it's just tiring. Initializing dicts is a very common use case, so a method was added to <code>dict</code> to add a default value if it has not yet been set:</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; d.setdefault('a', []).append('value1')
&gt;&gt;&gt; d.setdefault('a', []).append('value2')
&gt;&gt;&gt; d.setdefault('b', []).append('value3')
&gt;&gt;&gt; d.setdefault('b', []).append('value4')
&gt;&gt;&gt; d
{'b': ['value3', 'value4'], 'a': ['value1', 'value2']}
</code></pre>
<p>But then again you would have to remember to call <code>setdefault</code> every time. To solve this the default library offers <code>defaultdict</code>.</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; d = defaultdict(list)
&gt;&gt;&gt; d['a'].append('value1')
&gt;&gt;&gt; d['a'].append('value2')
&gt;&gt;&gt; d['b'].append('value3')
&gt;&gt;&gt; d['b'].append('value4')
&gt;&gt;&gt; d['a']
['value1', 'value2']
&gt;&gt;&gt; d['b']
['value3', 'value4']
</code></pre>
<p>Which may just be what you need.</p>
<p>Hope I could help. ;)</p>
</div>
<span class="comment-copy">Your else block could possibly go into an infinite loop</span>
<span class="comment-copy">I've only glanced over your code, but it sounds like  you might benefit from using a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defualtdict(list)</code></a></span>
<span class="comment-copy">you mean defaultdict(list)?</span>
<span class="comment-copy">Thank you so much!!</span>
<span class="comment-copy">No problem. I'm glad I could help.</span>
