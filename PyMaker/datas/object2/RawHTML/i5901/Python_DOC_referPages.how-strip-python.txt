<div class="post-text" itemprop="text">
<p>I'm writing a quiz code for school. The code iterates over a text file and loads the questions and answers from it. The user will select a difficulty to do the quiz on. The number of options for answers will vary depending on the difficulty. I have split each question and possible answer in the text file with commas.</p>
<pre><code>from random import shuffle

file = open("maths.txt" , "r")
for line in file:
    question = line.split(",")
    print(question[0])
    if difficulty in ("e", "E"):
        options = (question[1], question[2])

    if difficulty in ("m", "M"):
        options = (question[1], question[2], question[3])

    if difficulty in("h", "H"):
        options = (question[1], question[2], question[3], question[4])

    options = list(options)
    shuffle(options)
    print(options)

    answer = input("Please enter answer: ")

    if answer in (question[1]):
        print("Correct!")
    else:
        print("incorrect")
  file.close()
</code></pre>
<p>This is what a line of the text file would look like:
Question 1. What is 4+5?,9,10,20,11</p>
<p>The first option (question[1]) will always be the correct answer, therefore I would like to shuffle the options. With this code the options are outputted with square brackets, newline characters and quotation marks. Does anyone know how I can strip these? I tried to use: <code>line.split(",").strip()</code> however this seemed to do nothing at all. Thanks  </p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are trying to print a <code>list</code> object. Instead, you should print each option. you'd probably be better printing some formatting around it:</p>
<pre><code>for option_num, option in enumerate(options):
    print("{} - {}").format(option_num, option)
</code></pre>
<p>please read about <code>enumerate</code> and <code>format</code> to understand exactly what happens here</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this?</p>
<pre><code>from random import shuffle
def maths_questions():
  file = open("maths.txt" , "r")
  for line in file:
    question = line.strip().split(",") # every line in file contains newline. add str.strip() to remove it
    print(question[0])

    if difficulty in ("e","E"):
        options = [question[1],question[2]]
    elif difficulty in ("m","M"):
        options = [question[1],question[2],question[3]]
    elif difficulty in("h","H"):
        options = [question[1],question[2],question[3],question[4]]
    # why to create tuple and then convert to list? create list directly

    shuffle(options) #shuffle list
    print("Options: ", ", ".join(options)) # will print "Options: opt1, opt2, opt3" for M difficulty

    answer=input("Please enter answer: ")

    if answer in (question[1]):
            print("Correct!")
    else:
        print("Incorrect, please try again...")
  file.close()
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">Python docs</a>:</p>
<blockquote>
<p><code>str.join(iterable)</code></p>
<p>Return a string which is the concatenation of the strings in iterable. A TypeError will be raised if there are any non-string values in iterable, including bytes objects. The separator between elements is the string providing this method.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>for option in options:
    print(option)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To remove characters from a string, use <code>.rstrip("put text to remove here")</code> to remove characters from the right end of the string and <code>.lstrip("text to remove")</code> to remove characters from the left of the string.</p>
</div>
<span class="comment-copy">What's the expected output? Also update this <code>if difficulty in ("m","M""):</code></span>
<span class="comment-copy"><code>line.split(",").strip()</code> should raise an error, not do nothing. What do the contents of <code>maths.txt</code> look like?</span>
<span class="comment-copy">Please add that to the question in a code block.</span>
<span class="comment-copy">You should use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> in the standard library to read <code>maths.txt</code> so the lines are split correctly. That would take care of newlines and correctly handle commas in the text of the answers.</span>
<span class="comment-copy">I find the question title amusing.</span>
<span class="comment-copy">Needs a <code>.strip()</code> in there somewhere</span>
<span class="comment-copy">@Blurp I believe the commas and brackets mentioned are actually from Python's way of printing a list, and that's why the answer was much simpler than it seemed. No strip was needed</span>
<span class="comment-copy">Wouldn't the last option have a newline that would need to be stripped? And the options might have leading and trailing whitespace. That's why I suggested using the <code>csv</code> module to read the file above.</span>
