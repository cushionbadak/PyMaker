<div class="post-text" itemprop="text">
<p>I have a datafile that looks like this.</p>
<pre><code>HETATM    1  H10 XSHQ    0      10.139   2.231   0.091  1.00  0.00           H
HETATM    2   N1 XSHQ    0       9.641   1.386  -0.104  1.00  0.00           N
HETATM    3   H9 XSHQ    0       9.773   1.133  -1.063  1.00  0.00           H
HETATM    4   C1 XSHQ    0       8.245   1.531   0.230  1.00  0.00           H
</code></pre>
<p>where XYZ coordinates are in columns 6,7,8 and and a letter associated with a point is in the last column. I want to identify distances between those points that have a letter H in the last column. How can I do this? I know that this is the code I need to perform the operation, but I am confused as to how to use the values in columns 6,7 and 8, and only for the case where the last column is H:</p>
<pre><code>from scipy.spatial import distance    
dst = distance.euclidean(a,b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Of course, @Silencer's answer is already correct and the use of a data structure like <code>OrderedDict</code> is a good idea, but if you want to use standard methods only, you can try:</p>
<pre><code>from scipy.spatial import distance

# Load data from file
with open('datafile.txt') as datafile: 
    contents = [line.split() for line in datafile]

# Extract the xyz coordiantes, if there is an H in the last column
coords = []
for i, item in enumerate(contents):
    if item[-1] == 'H':
        coords.append([[float(x) for x in item[5:8]], i+1])

# Show results
for i in range(len(coords)):
    for j in range(i+1, len(coords)):
        dist = distance.euclidean(coords[i][0], coords[j][0])
        print('({}, {}): {:.5f}'.format(coords[i][1], coords[j][1], dist))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I use regexp to extract the date, and then filter them by the rules.</p>
<p>A demo code is like this:</p>
<p><a href="https://i.stack.imgur.com/6qxVo.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/6qxVo.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution that uses generator expressions</p>
<blockquote>
<p>From <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">PEP 289 -- Generator Expressions</a><br/>
<strong>Rationale</strong><br/>
   Experience with list comprehensions has shown their widespread utility 
   throughout Python. However, many of the use cases do not need to have a full list created in memory. Instead, they only need to iterate over the elements one at a time.</p>
</blockquote>
<p>because</p>
<ol>
<li>you don't need to save the intermediate results, </li>
<li>possibly you have a large data set</li>
</ol>
<p>and <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>combinations</code></a> from the <code>itertools</code> standard library module because you want to compute the distances for every couple of <em>interesting</em> points in your data set.</p>
<pre><code>$ cat euclid.py
from scipy.spatial.distance import euclidean
from itertools import combinations

lines = ['HETATM 1 H10 XSHQ 0  10.139 2.231  0.091 1.00 0.00 H',
         'HETATM 2  N1 XSHQ 0   9.641 1.386 -0.104 1.00 0.00 N',
         'HETATM 3  H9 XSHQ 0   9.773 1.133 -1.063 1.00 0.00 H',
         'HETATM 4  C1 XSHQ 0   8.245 1.531  0.230 1.00 0.00 H']

H_lines = (line for line in lines if line[-1]=='H')
H_lists = (line.split() for line in H_lines)
H_data = ((int(tok[1]), [float(x) for x in tok[5:8]]) for tok in H_lists)
H_dist = {(i[0], j[0]):euclidean(i[1], j[1])
             for i, j in combinations(H_data, 2)}

for m, n in H_dist:
    print('Distance between points %d and %d is %.6f'%(
             m, n, H_dist[m, n]))
$ python3 euclid.py
Distance between points 1 and 3 is 1.634404
Distance between points 1 and 4 is 2.023995
Distance between points 3 and 4 is 2.040842
$ 
</code></pre>
</div>
<span class="comment-copy">what is datafile format?</span>
<span class="comment-copy">thanks for the answer, this does indeed give the first distance! the only thing is that it does not go through the whole file to check for all distances.</span>
<span class="comment-copy">I added a double sum to show all possible results, instead of <code>combinations</code> from <code>itertools</code>. I also used a different style of string formatting, maybe this will solve your syntax error.</span>
<span class="comment-copy">Thank you, you are a star, it works like a charm and is very clear! I really appreciate your help!</span>
<span class="comment-copy">thanks a lot. Is there a way of printing each distance on a separate line? I have tried \n everywhere but it doesnt work...    print({(i[0], j[0]):euclidean(i[1], j[1]) for i, j in combinations(H_v,2)})</span>
<span class="comment-copy">I guess that you have a problem with generators... I will try to rewrite my answer in terms of a function that returns a dictionary. Stay tuned.</span>
<span class="comment-copy">print('Distance between point %d and %d is %.6f'%(*points, distances[points]))                                                       ^ SyntaxError: invalid syntax """ thanks, but I get this error for some reason..."""</span>
<span class="comment-copy">I've posted a screenshot, no syntax errors in my case. What else should I do to help you?</span>
<span class="comment-copy">thanks a lot, I will try to see why I get the syntax error, really appreciate your help!</span>
