<div class="post-text" itemprop="text">
<p>I need to access command prompt in python, currently I use</p>
<pre><code>import win32com.client
from datetime import datetime
import time


datestring = datetime.strftime(datetime.now(), '%Y-%m-%d-%H-%M-%S')
shell = win32com.client.Dispatch("WScript.Shell")
def start():
    datestring = datetime.strftime(datetime.now(), '%Y-%m-%d-%H-%M-%S')

    shell.run("cmd")
    shell.AppActivate("cmd")
    time.sleep(2)
    shell.SendKeys('ffmpeg -y -f dshow -i video="Logitech HD Webcam C270"  kamera'+datestring+'.mp4')
    time.sleep(1)
    shell.SendKeys("{ENTER}")


def stop():
    time.sleep(2)

    shell.SendKeys('^c')
    time.sleep(2)
    shell.SendKeys('exit')
    time.sleep(1)
    shell.SendKeys("{ENTER}")
</code></pre>
<p>I would need to get os.system commands like <code>os.system(start cmd)</code> and other commands for writing inside of cmd(command panel).</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of running the command prompt, and running programs from there, you can just immediately run the programs that you are interested in. Take a look at python's <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> module.</p>
<p>So in your case, </p>
<pre><code>import subprocess

cmd = 'ffmpeg -y -f dshow -i video="Logitech HD Webcam C270"  kamera'+datestring+'.mp4'
subprocess.run(cmd, shell=True)
</code></pre>
<p>If you want to start/stop on demand, then you can do this:</p>
<pre><code>import os
import signal
import subprocess

cmd = 'ffmpeg -y -f dshow -i video="Logitech HD Webcam C270"  kamera'+datestring+'.mp4'
pro = subprocess.Popen(cmd, stdout=subprocess.PIPE, 
                   shell=True, preexec_fn=os.setsid) 

os.killpg(os.getpgid(pro.pid), signal.SIGTERM)  # Send the signal to all the process groups
</code></pre>
<p><code>subprocess.Popen</code> starts the process, and <code>os.killpg</code> will stop it.</p>
<p>By the way, it's <em>"Command Prompt"</em>, not "Command Panel". I'm not being pedantic here - unless the context gives it away, many people will have no clue what "Command Panel" is referring to.</p>
</div>
<span class="comment-copy">Hey! I must admit your choice is much simpler and all, but i need a program that starts recording by command, and stop's by command. That's why i choose cmd, so i could tell it when to stop.</span>
<span class="comment-copy">@J.Foe I augmented my answer.</span>
<span class="comment-copy">It shows me this error:                                                                  ` Traceback (most recent call last):   File "C:/Dobot Magician/Audio_python/Py3.6/Call_and_check/record_test.py", line 8, in &lt;module&gt;     shell=True, preexec_fn=os.setsid) AttributeError: module 'os' has no attribute 'setsid'  Process finished with exit code 1`</span>
<span class="comment-copy">@J.Foe Ah crap that's right... os.setsid is only available on Unix. :/ I'm looking into an alternative.</span>
<span class="comment-copy">Is there any way I could change/replace <code>os.setsid</code>, the second you answered that is for linux only, i was searching for replacement but I didn't get any luck.</span>
