<div class="post-text" itemprop="text">
<pre><code>import nltk
import pickle

input_file=open('file.txt', 'r')
input_datafile=open('newskills1.txt', 'r')

string=input_file.read()
fp=(input_datafile.read().splitlines())

def extract_skills(string):
    skills=pickle.load(fp)
    skill_set=[]
    for skill in skills:
        skill= ''+skill+''
    if skill.lower() in string:
        skill_set.append(skill)
    return skill_set

if __name__ == '__main__':
    skills= extract_skills(string)
print(skills)
</code></pre>
<p>I want to print the <code>skills</code> from file but, here <code>pickle</code> is not working.<br/>
It shows the error:</p>
<blockquote>
<p>_pickle.UnpicklingError: the STRING opcode argument must be quoted</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The file containing the pickled data must be written and read as a binary file. See <a href="https://docs.python.org/3/library/pickle.html#examples" rel="nofollow noreferrer">the documentation</a> for examples.</p>
<p>Your extraction function should look like:</p>
<pre><code>def extract_skills(path):
    with open(path, 'rb') as inputFile:
        skills = pickle.load(inputFile)
</code></pre>
<p>Of course, you will need to dump your data into a file open as binary as well:</p>
<pre><code>def save_skills(path, skills):
    with open(path, 'wb') as outputFile:
        pickle.dump(outputFile, skills)
</code></pre>
<p>Additionally, the logic of your main seems a bit flawed.
While the code that follows <code>if __name__ == '__main__'</code> is only executed when the script is run as main module, the code that is <strong>not</strong> in the main should only be static, ie definitions.
Basically, your script should not <strong>do</strong> anything, unless run as main.
Here is a cleaner version.</p>
<pre><code>import pickle

def extract_skills(path):
    ...

def save_skills(path, skills):
    ...

if __name__ == '__main__':
    inputPath = "skills_input.pickle"
    outputPath = "skills_output.pickle"

    skills = extract_skills(inputPath)
    # Modify skills
    save_skills(outputPath, skills)
</code></pre>
</div>
<span class="comment-copy">Thank you for answer but it's give the error:AttributeError: module 'pickle' has no attribute 'dump'</span>
<span class="comment-copy">@JayPratapPandey I'm lacking information. Pickle does have a <code>dump</code> attribute, regardless of Python's version.</span>
<span class="comment-copy">Can i load txt file in pickle?</span>
<span class="comment-copy">it gives the error :UnpicklingError: the STRING opcode argument must be quoted</span>
