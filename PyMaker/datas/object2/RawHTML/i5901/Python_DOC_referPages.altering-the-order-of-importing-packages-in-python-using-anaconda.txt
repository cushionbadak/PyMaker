<div class="post-text" itemprop="text">
<p>I'd like to alter the order of python's importing packages. I'm using anaconda to manage python packages. In this case, I think the packages subordinate to the certain env should have higher priority than those of my local python after I activate the env. Let me reproduce my case below.</p>
<blockquote>
<p>OS: Ubuntu 16.04, python version: 3.5, package manager: anaconda3</p>
</blockquote>
<pre><code>        $: source activate myenv
(myenv) $: which python
~/.conda/envs/myenv/bin/python

(myenv) $:python
&gt;&gt;&gt; from sys import path
&gt;&gt;&gt; print (path)
~/.conda/envs/myenv/lib/python35.zip
~/.conda/envs/myenv/lib/python3.5
~/.conda/envs/myenv/lib/python3.5/plat-linux
~/.conda/envs/myenv/lib/python3.5/lib-dynload
~/.local/lib/python3.5/site-packages
~/.conda/envs/myenv/lib/python3.5/site-packages
</code></pre>
<p>When it comes to below <strong>two paths</strong>, both have the same package with a different version. For example, there's tensorflow-1.3 in the former and tensorflow-1.4 in the later. In this case, when I import tensorflow, one from the former gets imported.</p>
<pre><code>(myenv) $: python
&gt;&gt;&gt; import tensorflow as tf
&gt;&gt;&gt; print(tf.__version__)
'1.3.0'
&gt;&gt;&gt; print(tf)
&lt;module 'tensorflow' from '~/.local/lib/python3.5/site-packages/tensorflow/__init__.py'&gt;
</code></pre>
<p>I want the one with '1.4.0' to be imported rather than with '1.3.0', and I think it's ought to the order listed on sys.path. So, how can I alter the order manually and permanently?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the issue you are describing is covered in the Anaconda troubleshooting documentation, here: <a href="https://docs.anaconda.com/docs_oss/conda/troubleshooting#resolution-for-python-packages-remove-any-site-specific-directories" rel="nofollow noreferrer">Resolution: For Python packages, remove any site-specific directories</a></p>
<p>If you just wish to use the version of tensorflow you have installed in your Anaconda virtual environment (and ignore the version in your <code>~/.local/lib/python</code> folders) you could <code>export PYTHONNOUSERSITE=True</code> in your Anaconda environment to tell python to <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNOUSERSITE" rel="nofollow noreferrer">ignore your user site packages directory</a>. </p>
<p>If you want this to be done automatically for you every time you are running inside your Anaconda environment you could look to save the environment variable as described in the Anaconda documentation, here: <a href="https://conda.io/docs/user-guide/tasks/manage-environments.html#saving-environment-variables" rel="nofollow noreferrer">Saving environment variables</a></p>
</div>
<span class="comment-copy">Thank you for your clear and kind direction. I solved my problem,</span>
