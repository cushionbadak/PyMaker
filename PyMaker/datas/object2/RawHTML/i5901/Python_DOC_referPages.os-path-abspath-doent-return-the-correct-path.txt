<div class="post-text" itemprop="text">
<p>It doesn't behave in the way I except:</p>
<pre><code>def main():
    print(os.path.abspath(sys.argv[1]))
    print(os.path.dirname(os.path.realpath(__file__)))
</code></pre>
<p>the output of this code is:</p>
<blockquote>
<p>/cs/my_user/wanted_path</p>
<p>/cs/my_user/Desktop/project</p>
</blockquote>
<p>Actually it just skipped two folders behind my current working directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just get the absolute path with <a href="https://docs.python.org/3/library/os.path.html#os.path.abspath" rel="nofollow noreferrer"><code>abspath</code></a></p>
<pre><code>def main():
    filename = os.path.abspath(sys.argv[1])
</code></pre>
<p>This will convert a relative path to an absolute path while leaving an already absolute path unchanged.</p>
</div>
<span class="comment-copy">this belongs on <a href="https://codereview.stackexchange.com/">codereview.stackexchange.com</a></span>
<span class="comment-copy">An absolute path depends on your current working directory, not the directory that the calling module is in.</span>
<span class="comment-copy">I tried this, but in very strange way it doesn't keep the last folder (when python script and the arg path in the same folder)</span>
<span class="comment-copy">@SuperMario provide an example of your problem, bearing in mind that a "relative" path is generally defined to be relative to the working directory, not your script.  Are you wanting to do the latter?</span>
<span class="comment-copy">it doesn't work, I change the question</span>
