<div class="post-text" itemprop="text">
<p>Is there a way for Python to close that the file is already open file.  </p>
<p>Or at the very least display a popup that file is open or a custom written error message popup for <code>permission error.</code> </p>
<p>As to avoid:</p>
<pre><code>PermissionError: [Errno 13] Permission denied: 'C:\\zf.csv'
</code></pre>
<p>I've seen a lot of solutions that open a file then close it through python.  But in my case.  Lets say I left my csv open and then tried to run the job.  </p>
<p>How can I make it so it closes the currently opened csv?</p>
<p>I've tried the below variations but none seem to work as they expect that I have already opened the csv at an earlier point through python.  I suspect I'm over complicating this.</p>
<pre><code>f = 'C:\\zf.csv'
file.close()
AttributeError: 'str' object has no attribute 'close'
</code></pre>
<p>This gives an error as there is no reference to opening of file but simply strings.</p>
<p>Or even..</p>
<pre><code>theFile = open(f)
file_content = theFile.read()
# do whatever you need to do
theFile.close()
</code></pre>
<p>As well as:</p>
<pre><code>fileobj=open('C:\\zf.csv',"wb+")

if not fileobj.closed:
    print("file is already opened")
</code></pre>
<p>How do I close an already open csv? </p>
<p>The only workaround I can think of would be to add a messagebox, though I can't seem to get it to detect the file.</p>
<pre><code>filename = "C:\\zf.csv"
if not os.access(filename, os.W_OK):
    print("Write access not permitted on %s" % filename)
    messagebox.showinfo("Title", "Close your CSV")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also try to copy the file to a temporary file, and open/close/remove it at will. It requires that you have read access to the original, though.</p>
<p>In this example I have a file "test.txt" that is write-only (chmod 444) and it throws a "Permission denied" error if I try writing to it directly. I copy it to a temporary file that has "777" rights so that I can do what I want with it:</p>
<pre><code>import tempfile, shutil, os

def create_temporary_copy(path):
    temp_dir = tempfile.gettempdir()
    temp_path = os.path.join(temp_dir, 'temp_file_name')
    os.chmod(temp_path, 0o777);          # give full access to the tempfile so we can copy
    shutil.copy2(path, temp_path)        # copy the original into the temp one
    os.chmod(temp_path, 0o777);          # replace permissions from the original file
    return temp_path

path = "./test.txt"                      # original file
copy_path = create_temporary_copy(path)  # temp copy
with open(copy_path, "w") as g:          # can do what I want with it
    g.write("TEST\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using a <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code></a> context, which will manage the close (<code>__exit__</code>) operation smoothly at the end of the context:</p>
<pre><code>with open(...) as theFile:
    file_content = theFile.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>f = open("C:/Users/amol/Downloads/result.csv", "r")
print(f.readlines()) #just to check file is open
f.close()
# here you can add above print statement to check if file is closed or not. I am using python 3.5
</code></pre>
</div>
<span class="comment-copy">you can use <code>try/except</code> to catch this error and do something</span>
<span class="comment-copy">you can't close file opened in other program because system control it for security. But problem can be because you put file in folder which you shouldn't use - every user has own folder for documents. Did you try to save it in your folde or on your desktop ?</span>
<span class="comment-copy">BTW: <code>Permission denied</code> don't have to mean that file is open but that you don't have permission to open files in this folder.</span>
<span class="comment-copy">@furas For me I get this on windows when I have that file already open.</span>
<span class="comment-copy">Can't you copy the file to a <a href="https://docs.python.org/3/library/tempfile.html" rel="nofollow noreferrer">temporary file</a>, so that you can open, close and remove it at will?</span>
<span class="comment-copy">This does not seem to close anything.  with open('C:\\1\\c.csv') as theFile:     file_content = theFile.read()     theFile.close()</span>
<span class="comment-copy">Don't call <code>theFile.close()</code>, it is done automatically at the end of the <code>with</code> block. It will not force close it if it cannot (this you cannot achieve anyway if it is opened in another program), but it will not throw an error and your program continues.</span>
<span class="comment-copy">if there will be error/exception before <code>close()</code> then it will not run <code>close()</code> and it will not close it.</span>
<span class="comment-copy">here you can add try except method</span>
<span class="comment-copy">but you didn't use it in example</span>
