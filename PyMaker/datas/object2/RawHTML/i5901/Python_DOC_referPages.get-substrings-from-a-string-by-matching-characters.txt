<div class="post-text" itemprop="text">
<p>I am trying to extract the prices from a string list that I have.</p>
<p>These is a sample of <code>PriceList</code>:</p>
<pre><code>PriceList = ['Weekly:$3,600.00\n\nMonthly:$15,120.00',
             'Daily:$3,000.00\n\nWeekly:$8,400.00\n\nMonthly:$33,600.00',
             'Daily:$1,800.00\n\nWeekend:$2200.00',
             'Day:$3,600.00\n\nWeekly:$6,000.00\n\nMonthly:$24,000.00']
</code></pre>
<p>From the <code>PriceList</code>, I want to extract the <code>MonthlyPrice</code> and <code>DailyPrice</code>.</p>
<p>If <code>MonthlyPrice</code> is not present then it is <code>NA</code>.</p>
<p>I tried this code:</p>
<pre><code>for item in PriceList:
    if item.find("Monthly")!= -1:
        MonthlyPrice = (item[8:])
    if item.find("Yearly")!= -1:
        YearlyPrice = (item[7:])
    if item.find("Weekly")!= -1:
        WeeklyPrice = (item[7:])
</code></pre>
<p>But it is not working, Kindly help me with this.</p>
<p>Expected Result</p>
<p><code>print(WeeklyPrice)</code> for the 1st example on the list will give you <code>$3600.00</code><br/>
<code>print(DailyPrice)</code>  for the 1st example on the list will give you - <code>NA</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of awkwardly parsing that lonely string wrapped in a list, build a dictionary.</p>
<pre><code>&gt;&gt;&gt; prices = ['Daily:$3,000.00\n\nWeekly:$8,400.00\n\nMonthly:$33,600.00']
&gt;&gt;&gt; prices = dict(time_price.split(':') for time_price in prices[0].split())
&gt;&gt;&gt; prices
{'Monthly': '$33,600.00', 'Daily': '$3,000.00', 'Weekly': '$8,400.00'}
</code></pre>
<p>From here it's child's play to extract whatever you want.</p>
<pre><code>&gt;&gt;&gt; prices['Daily']
'$3,000.00'
&gt;&gt;&gt; prices.get('NotFound', 'NA')
'NA'
</code></pre>
<p>Note that if you plan to do any arithmetic with the prices in the future converting them to <code>float</code> values is a good idea.</p>
<pre><code>&gt;&gt;&gt; prices = {k:float(v[1:].replace(',', '')) for k,v in prices.items()}
&gt;&gt;&gt; prices
{'Monthly': 33600.0, 'Daily': 3000.0, 'Weekly': 8400.0}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>for item in PriceList:
    for line in item.splitlines():
        if line.startswith('Daily:'):
            DailyPrice = line[len('Daily:'):]
        if line.startswith('Weekly:'):
            WeeklyPrice = line[len('Weekly:'):]
        if line.startswith('Monthly:'):
            MonthlyPrice = line[len('Monthly:'):]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Complete solution with <a href="https://docs.python.org/3/library/re.html#re.regex.findall" rel="nofollow noreferrer"><code>regex.findall()</code></a> function and specific regex pattern:</p>
<pre><code>import re

price_list = ['Weekly:$3,600.00\n\nMonthly:$15,120.00',
              'Daily:$3,000.00\n\nWeekly:$8,400.00\n\nMonthly:$33,600.00',
              'Daily:$1,800.00\n\nWeekend:$2200.00',
              'Day:$3,600.00\n\nWeekly:$6,000.00\n\nMonthly:$24,000.00']

base_dict = {'Yearly': 'NA', 'Monthly': 'NA', 'Weekly': 'NA', 'Daily': 'NA'}
pat = re.compile('(?:(Yearly|Monthly|Weekly|Daily):(\$[\d.,]+))')

for p_str in price_list:
    result_d = dict(base_dict)
    result_d.update(pat.findall(p_str))
    print('Yearly: {Yearly}, Monthly: {Monthly}, Weekly: {Weekly}, Daily: {Daily}'.format(**result_d))
</code></pre>
<p>The output:</p>
<pre><code>Yearly: NA, Monthly: $15,120.00, Weekly: $3,600.00, Daily: NA
Yearly: NA, Monthly: $33,600.00, Weekly: $8,400.00, Daily: $3,000.00
Yearly: NA, Monthly: NA, Weekly: NA, Daily: $1,800.00
Yearly: NA, Monthly: $24,000.00, Weekly: $6,000.00, Daily: NA
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do it like this which first creates a temporary <code>prices</code> dictionary from each string of data in <code>PriceList</code>, and then uses the dictionary <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>get()</code></a> method to determine if specific values were in the string. Looking up things in dictionaries is very fast, so this implementation approach is also fairly efficient as well.</p>
<pre><code>PriceList = ['Weekly:$3,600.00\n\nMonthly:$15,120.00',
             'Daily:$3,000.00\n\nWeekly:$8,400.00\n\nMonthly:$33,600.00',
             'Daily:$1,800.00\n\nWeekend:$2200.00',
             'Day:$3,600.00\n\nWeekly:$6,000.00\n\nMonthly:$24,000.00']

for data in PriceList:
    prices = dict(item.split(':') for item in data.split('\n\n'))
    MonthlyPrice = prices.get("Monthly", "NA")
    YearlyPrice = prices.get("Yearly", "NA")
    WeeklyPrice = prices.get("Weekly", "NA")
    print('MonthlyPrice: {:&lt;10}, YearlyPrice: {:&lt;10}, WeeklyPrice: {:&lt;10}'.format(
            MonthlyPrice, YearlyPrice, WeeklyPrice))
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>MonthlyPrice: $15,120.00, YearlyPrice: NA        , WeeklyPrice: $3,600.00
MonthlyPrice: $33,600.00, YearlyPrice: NA        , WeeklyPrice: $8,400.00
MonthlyPrice: NA        , YearlyPrice: NA        , WeeklyPrice: NA
MonthlyPrice: $24,000.00, YearlyPrice: NA        , WeeklyPrice: $6,000.00
</code></pre>
</div>
<span class="comment-copy">What's with the lonely <code>"\n\nWeekend"</code> in the last list?</span>
<span class="comment-copy">your code tries to find also <code>Yearly</code> and <code>Weekly</code> when you just <i>want to extract the MonthlyPrice and DailyPrice</i>, why?</span>
<span class="comment-copy">@timgeb Fixed it on the question now.</span>
<span class="comment-copy">@RomanPerekhrest I was just trying to give an example. I need the Yearly, Monthly, Weekly and Daily Price.</span>
<span class="comment-copy">ok, post the final expected result</span>
