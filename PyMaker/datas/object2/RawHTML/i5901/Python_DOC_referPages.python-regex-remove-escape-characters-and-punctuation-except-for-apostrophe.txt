<div class="post-text" itemprop="text">
<p>I have a string that looks like this:</p>
<pre><code>"aaa\n\t\n asd123asd water's tap413 water blooe's"
</code></pre>
<p>How can I remove all escape characters, numbers, and punctuation except apostrophe using regex? </p>
<p>I'm pretty new to regex, and would appreciate it if you can explain what each expression means, if the regex formula is to be complicated</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for a search and replace method, which in Python should be <code>re#sub()</code>.</p>
<p>Simply replace non-letters &amp; apostrophe (<code>[^a-zA-Z' ]+</code>) with <code>''</code> (nothing).</p>
<p>- Oh well, what about the escaped characters?<br/>
R: They will turn into a single character when inside the string,  <code>\n</code> will be turned into a newline character for example, which is not a letter or a <code>'</code>.</p>
<p>Instead, if you actually have escaped an escaped character in your string (like: <code>"abc\\nefg"</code>), you should add a <code>\\\\.|</code> at the start of your regex, which will match the backslash + any other character (so it will be: <code>\\\\.|[^a-zA-Z' ]</code>)</p>
<p>Here is the working exemple:</p>
<pre><code>import re
s = "aaa\n\t\n asd123asd water's tap413 water blooe's"
replaced = re.sub("[^a-zA-Z' ]+", '', s)
print(replaced)
</code></pre>
<p><a href="https://repl.it/repls/ReasonableUtterAnglerfish" rel="nofollow noreferrer">https://repl.it/repls/ReasonableUtterAnglerfish</a></p>
<hr/>
<blockquote>
<p>Would appreciate it if you can explain what each expression means</p>
</blockquote>
<p>So, the explanation:</p>
<ul>
<li><code>\\\\</code> - Matches a backslash (Why four? Each pair will escape the slash for the Python string's compilation, which will turn into a <code>\\</code> which is how you match a backslash in regex).</li>
<li><code>.</code> - Match any character except for the newline <strong>character</strong>.</li>
<li><code>|</code> - OR expression, matches what is before OR what is after.</li>
<li><code>[^...]</code> - Must <strong>NOT</strong> be one of these characters (inside).</li>
<li><code>a-zA-Z' </code> - Match characters from <code>a</code> to <code>z</code>, <code>A</code> to <code>Z</code>, <code>'</code> or <code> </code>.</li>
<li><code>+</code> - Quantifier, not needed here, but would be good to reduce the matches, hence reduce the time of execution (Which would translate as "One or more occurrences of the term behind").</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
snt="aaa\n\t\n asd123asd water's tap413 water blooe's"
"".join(re.findall("[^\n\t\d:.,]+",snt))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I not sure what are you specifically browse, but <code>((\\n|\\t|\.|\ |\,|\;)+)+</code> can select your specification ... try your own regex in <a href="https://regexr.com" rel="nofollow noreferrer">regexr.com</a></p>
</div>
<span class="comment-copy">Please define what you mean by "escape characters".</span>
<span class="comment-copy">@Jan \n \t \r ....</span>
<span class="comment-copy">@EricKim Did you have a look at the python page for the <code>re</code> module in charge of regular expressions? (<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a>) It's quite well explained there, I use it as my go-to document when I do regex stuff.</span>
