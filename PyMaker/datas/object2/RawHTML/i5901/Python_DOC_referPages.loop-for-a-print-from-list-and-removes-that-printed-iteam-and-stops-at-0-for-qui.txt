<div class="post-text" itemprop="text">
<pre><code>def ask_questions():
    choice = (random.choice(question))
    print(choice)
    if choice == question[0]:
        print options[0]
        answer0 = raw_input(inputs)
        if answer0 == answers[0]:
            print("correct")
        else:
            print("incorrect")
    elif choice == question[1]:
        print choice
        print options[1]
        answer1 = raw_input(inputs)
        if answer1 == answers[1]:
            print("correct")
        else:
            print("incorrect")
    elif choice == question[2]:
        print choice
        print options[2]
        answer2 = raw_input(inputs)
        if answer2 == answers[2]:
            print("correct")
        else:
            print("incorrect")
    elif choice == question[3]:
        print choice
        print options[3]
        answer3 = raw_input(inputs)
        if answer3 == answers[3]:
            print("correct")
        else:
            print("incorrect")
    elif choice == question[4]:
        print choice
        print options[4]
        answer4 = raw_input(inputs)
        if answer4 == answers[4]:
            print("correct")
        else:
            print("incorrect")
    elif choice == question[5]:
        print choice
        print options[5]
        answer5 = raw_input(inputs)
        if answer5 == answers[5]:
            print("correct")
        else:
            print("incorrect")
</code></pre>
<p>This is my code, is there anyway that i make a loop that keep printing my random choice question (and removes from the list the called one) need it for a quiz, when it calls the question i print options and input than use if elif else statements. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>When I see the way you're doing this, I don't like how you have 3 separate data structures when a single dict could combine them into one simple structure. Here's an example of what I'd do instead:</p>
<pre><code>import random

QUESTIONS_ANSWERS = {
    "What is 21 + 21": ["42", "43", "13", "12"],
    "Question 2: enter the correct answer...": ["correct answer", "another answer", "incorrect answer"],
}

def ask_questions():
    all_questions = QUESTIONS_ANSWERS.keys()
    random.shuffle(all_questions)
    for question in all_questions:
        options = QUESTIONS_ANSWERS[question]
        correct_option = options[0]
        random.shuffle(options)
        print "Q:", question
        print options
        answer = raw_input("&gt;&gt;&gt; ")
        print "correct" if (answer == correct_option) else "incorrect"

ask_questions()
</code></pre>
<p>This way, all the questions and options are in the same dict. The correct answer is, in this case, always the first element of the dict's value (first element of the list). These can be shuffled after you store it in a temp variable for comparison.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def ask_questions():
    choice = (random.choice(question))
    index = question.index(choice)
    print(choice)
    print(options[index])
    answer = raw_input(inputs)
    if answer == answers[index]:
        print("correct")
    else:
        print("incorrect")
    del question[index]
    del options[index]
</code></pre>
<p>For the loop:</p>
<pre><code>while len(questions) &gt; 1:
    ask_questions()
</code></pre>
<p>That is just a sketch, because you did not post code that could be run <a href="https://stackoverflow.com/help/mcve">link</a>.
Also you are mixing <code>print('sth')</code> (python3) and <code>print 'sth'</code> (python2)</p>
</div>
<span class="comment-copy">Looks like it's not properly indented. Try using the <code>{}</code> button when editing</span>
<span class="comment-copy">i kinda need  to know how to add that loop , it dose not show any error to me, it works fine</span>
<span class="comment-copy">Your code might be correct. But it isn't displayed here properly</span>
<span class="comment-copy">You would have better luck with the code review community or another coding review platform apart from stack exchange.</span>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial service. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links on that page.  You should invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
