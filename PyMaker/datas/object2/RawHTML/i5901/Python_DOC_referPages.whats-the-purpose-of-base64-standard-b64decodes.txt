<div class="post-text" itemprop="text">
<p>It seems to be identical to <code>base64.b64decode(s)</code> except it doesn't have the option to take an additional argument. Why would someone need the "standard_" version when they can just use the normal version and leave out the second argument?</p>
</div>
<div class="post-text" itemprop="text">
<p>The first can use an optional alphabet, and revert to the standard if none is given; the other uses the standard.<br/>
It is possible that the API has both methods for backwards compatibility (to avoid breaking existing code)</p>
<p><a href="https://docs.python.org/3/library/base64.html" rel="nofollow noreferrer"><strong>From the documentation:</strong></a></p>
<blockquote>
<p><strong>base64.b64encode(s, altchars=None)</strong><br/>
  Encode the bytes-like object s
  using Base64 and return the encoded bytes.<br/>
       Optional altchars must be a bytes-like object of at least length 2 (additional characters are ignored) which specifies an alternative
  alphabet for the + and / characters. This allows an application to
  e.g. generate URL or filesystem safe Base64 strings. The default is
  None, for which the standard Base64 alphabet is used.</p>
</blockquote>
<hr/>
<blockquote>
<p><strong>base64.standard_b64encode(s)</strong>   Encode bytes-like object s using the standard Base64 alphabet and return the encoded bytes.</p>
</blockquote>
</div>
