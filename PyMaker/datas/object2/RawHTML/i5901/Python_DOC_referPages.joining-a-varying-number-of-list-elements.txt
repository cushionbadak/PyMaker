<div class="post-text" itemprop="text">
<p>I have the following list of strings:</p>
<pre><code>data = ['1 General Electric (GE)   24581660 $18.19 0.04 0.22 ',
        '2 Qudian ADR (QD)   24227349 12.22 -3.93 -24.33 ',
        '3 Square Cl A (SQ)   16233308 48.86 0.05 0.10 ',
        '4 Teva Pharmaceutical Industries ADR (TEVA)   15830425 13.70 0.22 1.63 ',
        '5 Vale ADR (VALE)   14768221 10.98 0.21 1.95 ',
        '6 Bank of America (BAC)   13938799 26.59 -0.07 -0.26 ',
        '7 Entercom Communications Cl A (ETM)   13087209 12.00 0.10 0.84 ',
        '8 Chesapeake Energy (CHK)   12948648 3.92 -0.05 -1.26 ',
        "9 Macy's (M)   12684478 21.07 0.44 2.13 "]
</code></pre>
<p>Where the format of every string is: count, stock name, volume, some more int values...</p>
<p>I need to split these strings into a list where each element is one of the items in the string format above, and this is how I attempted to do that:</p>
<pre><code>for i in range(1, len(data)-1):
    split = data[i].split()
    temp = "{} {} {}".format(split[1], split[2], split[3])
    del split[2 : 4]
    split[1] = temp
    print(split)
</code></pre>
<p>However, I believe this is inefficient and it doesn't work when the name is more or less than two words. How would I handle this? Would I have to adjust how I generate the list of strings (data) in the first place?</p>
<p>EDIT:</p>
<pre><code>final_data = [
    re.split('(?&lt;=\))\s+|(?&lt;=[\d\$-])\s(?=[\d\$-])|(?&lt;=\d)\s(?=[a-zA-Z])', i)
        for i in data[1]]
final_data = [i[:-1]+[i[-1][:-1]] for i in final_data]
print(final_data)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>~/workspace $ python extract.py 2017-11-27-04-26-51-ss.xhtml
[[''],
 [''],
 [''],

 ...,

 [''],
 [''],
 ['']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.split</code>:</p>
<pre><code>import re
data = ['1 General Electric (GE)   24581660 $18.19 0.04 0.22 ', '2 Qudian ADR (QD)   24227349 12.22 -3.93 -24.33 ', '3 Square Cl A (SQ)   16233308 48.86 0.05 0.10 ', '4 Teva Pharmaceutical Industries ADR (TEVA)   15830425 13.70 0.22 1.63 ', '5 Vale ADR (VALE)   14768221 10.98 0.21 1.95 ', '6 Bank of America (BAC)   13938799 26.59 -0.07 -0.26 ', '7 Entercom Communications Cl A (ETM)   13087209 12.00 0.10 0.84 ', '8 Chesapeake Energy (CHK)   12948648 3.92 -0.05 -1.26 ', "9 Macy's (M)   12684478 21.07 0.44 2.13 "]
final_data = [re.split('(?&lt;=[a-zA-Z])\s+(?=\()|(?&lt;=\))\s+|(?&lt;=[\d\$-])\s+(?=[\d\$-])|(?&lt;=\d)\s+(?=[a-zA-Z])', i) for i in data]
</code></pre>
<p>Output:</p>
<pre><code>[['1', 'General Electric', '(GE)', '24581660', '$18.19', '0.04', '0.22 '], ['2', 'Qudian ADR', '(QD)', '24227349', '12.22', '-3.93', '-24.33 '], ['3', 'Square Cl A', '(SQ)', '16233308', '48.86', '0.05', '0.10 '], ['4', 'Teva Pharmaceutical Industries ADR', '(TEVA)', '15830425', '13.70', '0.22', '1.63 '], ['5', 'Vale ADR', '(VALE)', '14768221', '10.98', '0.21', '1.95 '], ['6', 'Bank of America', '(BAC)', '13938799', '26.59', '-0.07', '-0.26 '], ['7', 'Entercom Communications Cl A', '(ETM)', '13087209', '12.00', '0.10', '0.84 '], ['8', 'Chesapeake Energy', '(CHK)', '12948648', '3.92', '-0.05', '-1.26 '], ['9', "Macy's", '(M)', '12684478', '21.07', '0.44', '2.13 ']]
</code></pre>
<p>With the parenthesis removed:</p>
<pre><code>final_data = [[b[1:-1] if b.startswith('(') and b.endswith(')') else b for b in i] for i in final_data]
</code></pre>
<p>Output:</p>
<pre><code>[['1', 'General Electric', 'GE', '24581660', '$18.19', '0.04', '0.22 '], ['2', 'Qudian ADR', 'QD', '24227349', '12.22', '-3.93', '-24.33 '], ['3', 'Square Cl A', 'SQ', '16233308', '48.86', '0.05', '0.10 '], ['4', 'Teva Pharmaceutical Industries ADR', 'TEVA', '15830425', '13.70', '0.22', '1.63 '], ['5', 'Vale ADR', 'VALE', '14768221', '10.98', '0.21', '1.95 '], ['6', 'Bank of America', 'BAC', '13938799', '26.59', '-0.07', '-0.26 '], ['7', 'Entercom Communications Cl A', 'ETM', '13087209', '12.00', '0.10', '0.84 '], ['8', 'Chesapeake Energy', 'CHK', '12948648', '3.92', '-0.05', '-1.26 '], ['9', "Macy's", 'M', '12684478', '21.07', '0.44', '2.13 ']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can split lists on characters</p>
<p>All of the strings in your original data list have 2 sections, the stock name and then the number values, if you split on the closing paranthesis in the string you can break it into a list holding a string for the stockname and a string containing the numbers, the numbers have consistent spacing between them of one space and then you can split the list of numbers on the space character.</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.split</a></p>
</div>
<span class="comment-copy">Regular expressions have never been my strong suit, but I need the count (the first number), as its own string in the final_data. Would I have to add [0-9][0-9]? to the beginning of the regex so the count # doesn't get split with the name of the stock?</span>
<span class="comment-copy">@Muffinman Please see my recent edit.</span>
<span class="comment-copy">Am I missing something? I updated my post with attempting re.split on the first string in data, and it just creates a list of empty lists</span>
<span class="comment-copy">@Muffinman can you post the results of <code>final_data</code> before running <code>[i[:-1]+[i[-1][:-1]] for i in final_data]</code>? The earlier results should shed light on this issue.</span>
<span class="comment-copy">Even stranger: [['1'], [' '], ['G'], ['e'], ['n'], ['e'], ['r'], ['a'], ['l'], [' '], ['E'], ['l'], ['e'], ['c'], ['t'], ['r'], ['i'], ['c'], [' '], ['('], ['G'], ['E'], [')'], [' '], [' '], [' '], ['2'], ['4'], ['5'], ['8'], ['1'], ['6'], ['6'], ['0'], [' '], ['$'], ['1'], ['8'], ['.'], ['1'], ['9'], [' '], ['0'], ['.'], ['0'], ['4'], [' '], ['0'], ['.'], ['2'], ['2'], [' ']]</span>
