<div class="post-text" itemprop="text">
<p>In my code, I create a directory like so:</p>
<pre><code>try:
    os.makedirs(playlist_name)
except OSError as e:
    if e.errno != errno.EEXIST:
        raise
</code></pre>
<p>Which creates a directory in the place where I run my python script.
Then  I wish to copy three files from the original directory where the folder is located into the newly created directory, like so</p>
<pre><code># Copy FFMPEG files into that folder so youtube dl can download the videos as audio tracks
# Tried using os.getcwd() to get full path, same error
shutil.copyfile(os.getcwd() + '\\ffmpeg.exe', os.getcwd() + "\\" + playlist_name)
shutil.copyfile('ffplay.exe', "/" + playlist_name + "/")
shutil.copyfile('ffprobe.exe', "/" + playlist_name + "/")
</code></pre>
<p>However, trying to copy those files throws this error:</p>
<pre><code>PermissionError: [Errno 13] Permission denied: 'C:\\Users\\ME\\Documents\\python\\DIRECTORY\\PLAYLIST_NAME_HERE'
</code></pre>
<p>I have tried various shutil copy methods with the same error.</p>
<p>EDIT: This is running on windows</p>
</div>
<div class="post-text" itemprop="text">
<p>Per <a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile" rel="nofollow noreferrer">the <code>copyfile</code> docs</a>:</p>
<blockquote>
<p><code>dst</code> must be the complete target file name; look at <code>shutil.copy()</code> for a copy that accepts a target directory path.</p>
</blockquote>
<p>You can't use it to do what you do in the shell, naming a source file and a target directory and having it deduce the file should be put in the directory with the file's original name. You have to explicitly name the target file, or it thinks you're trying to copy to the same name as the directory, and unlike replacing a file, you can't replace a directory with a file without explicitly renaming the directory or deleting the whole directory tree first. To fix, just make sure to repeat the file name in both source and destination:</p>
<pre><code>for filename in ('ffmpeg.exe', 'ffplay.exe', 'ffprobe.exe'):
    shutil.copyfile(filename, os.path.join(playlist_name, filename))
</code></pre>
<p>The problem would be more obvious on a UNIX-like system, because those systems would reject the action with <code>EISDIR</code>, causing a Python <code>IsADirectoryError</code> to be raised, but Windows for some reason chose to use more general error codes associated with permission/access problems (<code>EACCES</code> and related Windows specific error codes) that Python translates to <code>PermissionError</code> (because Windows just isn't telling it the real problem, and it would introduce all sorts of race conditions if Python tried to check if the real problem was trying to use a directory as a file to fix the exception type).</p>
</div>
<span class="comment-copy">The error tells you what the problem is, make sure you have permissions, with the account that is executing your script, probably your user.</span>
<span class="comment-copy">@user1767754: It's not actually a permissions error in the classical model of "do you have write permission"; Windows uses that error code (or <code>EPERM</code> in other cases, but still a Python <code>PermissionError</code>) when you try to overwrite a directory with a file or open a directory for write as if it were a file, the problem in this case, because you're not "allowed" to do that. <code>EISDIR</code> (Python <code>IsADirectoryError</code>) is what you'd expect, but Windows uses <code>EACCES</code>/<code>EPERM</code> because they hate you so hard.</span>
<span class="comment-copy">The <code>NtCreateFile</code> system call returns <code>STATUS_FILE_IS_A_DIRECTORY</code>. The problem is Windows maps this status value to the error code <code>ERROR_ACCESS_DENIED</code>, a legacy behavior from ancient times (16-bit Windows). If it explicitly guaranteed the preservation of the thread's last NT status value, then Python could simply call <code>RtlGetLastNtStatus</code> to be able to raise <code>IsADirectoryError</code> in this case.</span>
<span class="comment-copy">I see where I was going wrong now, makes sense that it did not like me trying replace a directory with a file. Nice for loop too, got late last night and I lost all train of thought. Thanks.</span>
