<div class="post-text" itemprop="text">
<p>How does rowcount work.  I am using pyodbc and it's always returning -1.</p>
<pre><code> return_query = conn.query_db_param(query, q_params)
 print(return_query.rowcount)

 def query_db_param(self, query, params):
     self.cursor.execute(query,params)
     print(self.cursor.rowcount)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>rowcount</code> refers to the number of rows affected by the last operation. So, if you do an <code>insert</code> and insert only one row, then it will return 1. If you update 200 rows, then it will return 200. On the other hand, if you <code>SELECT</code>, the last operation doesn't really affect <em>rows</em>, it is a result set. In that case, <code>0</code> would be syntactically incorrect, so the interface returns <code>-1</code> instead.</p>
<p>It will also return <code>-1</code> for operations where you do things like set variables or use create/alter commands.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are connecting to a database that can't give you that number for your query. Many database engines produce rows as you fetch results, scanning their internal table and index data structures for the next matching result as you do so. The engine can't know the final count until you fetched all rows.</p>
<p>When the rowcount is not known, the <a href="https://www.python.org/dev/peps/pep-0249/#rowcount" rel="nofollow noreferrer">Python DB-API 2.0 specification for <code>Cursor.rowcount</code></a> states the number must be set to <code>-1</code> in that case:</p>
<blockquote>
<p>The attribute is <code>-1</code> in case <em>[...]</em> the rowcount of the last operation is cannot be determined by the interface.</p>
</blockquote>
<p>The pyodbc <a href="https://github.com/mkleehammer/pyodbc/wiki/Cursor" rel="nofollow noreferrer"><code>Cursor.rowcount</code> documentation</a> conforms to this requirement:</p>
<blockquote>
<p>The number of rows modified by the last SQL statement.</p>
<p>This is -1 if no SQL has been executed or if the number of rows is unknown. Note that it is not uncommon for databases to report -1 immediately after a SQL select statement for performance reasons. (The exact number may not be known before the first records are returned to the application.)</p>
</blockquote>
<p>pyodbc is not alone in this, another easy-to-link-to example is the Python standard library <code>sqlite3</code> module; it's <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount" rel="nofollow noreferrer"><code>Cursor.rowcount</code> documentation</a> states:</p>
<blockquote>
<p>As required by the Python DB API Spec, the rowcount attribute “is -1 in case no <code>executeXX()</code> has been performed on the cursor or the rowcount of the last operation is not determinable by the interface”. This includes <code>SELECT</code> statements because we cannot determine the number of rows a query produced until all rows were fetched.</p>
</blockquote>
<p>Note that for subset of database implementations, the rowcount value can be updated after fetching <em>some</em> of the rows. You'll have to check your specific database documentation you are connecting to to see if that implementations can do this, or if the rowcount must remain at -1.  You could always experiment, of course.</p>
<p>You could execute a <code>COUNT()</code> select first, or, if the result set is not expected to be too large, use <code>cursor.fetchall()</code> and use <code>len()</code> on the resulting list.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/839069/cursor-rowcount-always-1-in-sqlite3-in-python3k">cursor.rowcount always -1 in sqlite3 in python3k</a></span>
<span class="comment-copy">Thanks I thought rowcount was the number of rows returned from a query. In Coldfusion they have queryname.RecordCount Php has mysql_num_rows does python have anything like that? @cwallenpoole</span>
<span class="comment-copy"><code>len(cursor.fetchall())</code> is you closest. That's what MySQL does behind the scenes anyway.</span>
<span class="comment-copy"><i>On the other hand, if you SELECT, the last operation doesn't really affect rows, it is a result set. In that case, 0 would be syntactically incorrect, so the interface returns -1 instead.</i> This is not correct, sorry. Many database implementations will set the rowcount to the <i>number of rows selected</i>. It is only set to -1 if that number can't be determined up-front; e.g. the SQLite engine won't be able to tell you how many rows are selected until it has returned all rows. The pyodbc documenation <a href="https://github.com/mkleehammer/pyodbc/wiki/Cursor" rel="nofollow noreferrer">explicitly covers this case</a>.</span>
<span class="comment-copy">@user3525290: rowcount <i>is</i> the number of rows returned for a SELECT query. But not all database engines can know this number up front (they find rows as they scan the affected tables and indices, so the final count is only known when all rows have been produced). The Python DB-API 2.0 specification <a href="https://www.python.org/dev/peps/pep-0249/#rowcount" rel="nofollow noreferrer">allows the rowcount to be set to -1 in that case</a>.</span>
