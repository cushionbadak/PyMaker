<div class="post-text" itemprop="text">
<p>Is an attribute of an object possible dynamically?</p>
<p>Attribute name is:<br/>
pergunta1item<br/>
pergunta2item</p>
<p>This data is dynamically generated.</p>
<p>I tried this way</p>
<pre><code>{{ object.data.pesquisa+var.id+item }}
</code></pre>
<p>But, did not work.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to construct the attribute name as a string, then <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">use <code>getattr</code></a> to look it up on the parent object, replacing:</p>
<pre><code>object.data.pesquisa+var.id+item
</code></pre>
<p>with:</p>
<pre><code># We're looking up an attribute of object.data
# with a dynamically generated name
getattr(object.data, 'pesquisa{}item'.format(var.id))
</code></pre>
<p>Mind you, as others have mentioned, a numbered set of items should probably be handled as a single <code>list</code> (or <code>tuple</code>, or <code>dict</code>, depending on needs) with a consistent name, so you can just do:</p>
<pre><code>object.data.pesquisaitems[var.id]
</code></pre>
<p>to look up a dynamic index on the fixed name, but if your data source can't be changed, <code>getattr</code> is the way to go here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Of course we can.What you need to do is add a new attribution and assigned to the old value,then delete the old attribution.</p>
<pre><code>def motify_attri(d,newattr,oldattr):
    d[newattr] = d[oldattr]
    d.pop(oldattr)

d = dict(key1='a',key2='2')
print(d)
motify_attri(d,'key3','key2')
print(d)
</code></pre>
<p>Then:</p>
<pre><code>{'key2': '2', 'key1': 'a'}
{'key3': '2', 'key1': 'a'}
[Finished in 0.0s]
</code></pre>
</div>
<span class="comment-copy">Is this Jinja?  We need a <i>lot</i> more information.</span>
<span class="comment-copy">Just use a list?</span>
<span class="comment-copy">"Is an attribute of an object possible dynamically?" - it's not clear what you're asking. Did you mean: "can we set an object attribute dynamically?" if so the answer is "yes"</span>
<span class="comment-copy">Hi Phix, This is Django</span>
<span class="comment-copy">Hi Alfasin, Thanks for the correction.</span>
<span class="comment-copy">thank you so much ShadowRanger. Its work.</span>
<span class="comment-copy">How can I do it? I'm new to python.</span>
