<div class="post-text" itemprop="text">
<p>I am not clear on how to properly use <code>unittest.mock</code>. I need to test <code>APIView</code> using <code>rest_framework.test.APITestCase.client</code>. But I don't need to call one of methods. </p>
<pre><code>class MyClass(MyMixin):
    def do_some_stuff(self, request):
        self.should_be_called_in_the_test()
        self.should_not_be_called_in_the_test()

class MyView(views.APIView):
    def post(self, request):
        my_object = MyClass()
        my_object.do_some_stuff(request)
        return Response(status=status.HTTP_200_OK)

#test.py:
class MyViewTest(APITestCase):
    def test_post_request(self):
        url = reverse('my-view-url')
        # How properly skip call of "should_not_be_called_in_the_test()" ?
        response = self.client.post(url, data)
        # some asserts...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll need to use the <a href="https://docs.python.org/3/library/unittest.mock.html#patch" rel="nofollow noreferrer">patch</a> instead of mock. You can do it with something like this,</p>
<pre><code>#views.py
class MyClass(MyMixin):
    def do_some_stuff(self, request):
        self.should_be_called_in_the_test()
        self.should_not_be_called_in_the_test()

class MyView(views.APIView):
    def post(self, request):
        my_object = MyClass()
        my_object.do_some_stuff(request)
        return Response(status=status.HTTP_200_OK)

#test.py:
class MyViewTest(APITestCase):
    def test_post_request(self):
        url = reverse('my-view-url')
        with patch('app.views.MyClass.should_not_be_called_in_the_test'):
            response = self.client.post(url, data)
        # some asserts...
</code></pre>
<p>When using patch you'll usually have to be careful where to patch which is explained <a href="https://docs.python.org/3/library/unittest.mock.html#id5" rel="nofollow noreferrer">here</a></p>
</div>
