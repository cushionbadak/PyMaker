<div class="post-text" itemprop="text">
<p>I am trying to learn Python by porting an old Java project I did some time ago to Python.</p>
<p>But I will present here my doubt in a more simplified way...</p>
<p>I want to make my code as Object Oriented as possible...</p>
<p>This is the basic doubt that I got...</p>
<pre><code>public class MainApp {
public static void main(String[] args) {
    AnotherClass another = new AnotherClass(); // I instantiated an object
    System.exit(0);
  }
}
</code></pre>
<p>When I instantiate this object, I can work on procedural code in AnotherClass() and get the output from there...</p>
<pre><code>public class AnotherClass {
   public AnotherClass(){
    System.out.println("Output from AnotherClass()");
   }
}
</code></pre>
<p>and I get this:</p>
<pre><code>Output from AnotherClass()
</code></pre>
<p>How can I do the same thing but in Python... (this is my first time trying to understand OOP but in Python!)</p>
<p>I hope an answer to my question will help another programmer that wants to learn a new language through porting!</p>
<p>EDIT: I am currently using python 2.7....
Sorry for not declaring the version...</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's how to translate AnotherClass to python</p>
<pre><code>class AnotherClass:
    def __init__(self):
        print("Output from AnotherClass()")
        self._x = 0


another_class = AnotherClass()  # get instance of AnotherClass 
</code></pre>
<p>There's no <code>new</code> in python. I assume You already know <code>this</code> keyword in Java, <code>self</code> in python do the same thing, you can access instance variables like <code>self._x</code> but <code>self</code> is not a reserved keyword</p>
</div>
<span class="comment-copy">Do you just want the <code>print()</code> function (or <code>print</code> statement in Python 2.x versions) to output a string?</span>
<span class="comment-copy">You should read the tutorial: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a></span>
<span class="comment-copy">I am using Python 2.7 :)</span>
<span class="comment-copy">Then the tutorial is <a href="https://docs.python.org/2.7/tutorial/" rel="nofollow noreferrer">docs.python.org/2.7/tutorial</a></span>
