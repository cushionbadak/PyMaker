<div class="post-text" itemprop="text">
<p>I am currently trying to make a program that will run commands. I want to have it so there is a list of commands and the program will take my input command, check to see if its in the list, and then run the command if it does. and if not I want it to print out Invalid Command.</p>
<pre><code>    while 1 == 1:
    command = input("Daisy: ")
    commands = ['cmd', 'google']
    if command == 'cmd' or 'google':
        if command == 'cmd':
            os.system("start")
        elif command == 'google':
            webbrowser.open_new('google.ca')
</code></pre>
<p>this is currently what i have. I already made the list but youll notice in my if statement i want it to check to see if it equals cmd or google. I am going to have a lot more commands then this so in the nature of making things look pretty, i wanted to know if there was a way i could have the command check the list, run the command if its in the list, and if its not, print invalid command.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a function per command, and store the name for command and function to be executed in a dictionary. Like this:</p>
<pre><code>def open_google():
    webbrowser.open('google.ca')

commands = {'open_google': open_google}

while True:
    # Get input here
    if command in commands:
        commands[command]()
</code></pre>
<p>This way you only have to create new functions, and add them to the dictionary. The logic in the main loop remains the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the most versatile way would be using a dictionary and the exec funktion</p>
<pre><code>commands = dict()
commands['google'] = "webbrowser.open_new(\"google.ca\")"
commands['cmd'] = "os.system(\"start\")"

if key in commands:
    exec(commands[key])
</code></pre>
<p>Can't test this right now but it should work</p>
</div>
<div class="post-text" itemprop="text">
<p>I did a similar program, a little console, to help me on the developments.</p>
<p>the solution is a if-elif-else statement because every command is different to the other. So:</p>
<pre><code> while 1 == 1:
    command = input("Daisy: ")
    if command == 'cmd':
        os.system("start")
    elif command == 'google':
        webbrowser.open_new('google.ca')
    elif command == 'new command':
        # put here a new command
    else:
        print('Invalid Command')
</code></pre>
<p>Array commands and the first if statement aren't necessary because now there is "else" that intercept all invalid commands.</p>
<p>if you want see my code there is a link:  <a href="https://github.com/ffex/DevUtils/blob/master/Linux/LinuxURLManager.py" rel="nofollow noreferrer">DevUtils</a> at line 38 i manage commands.</p>
</div>
<span class="comment-copy"><code>command == 'cmd' or 'google'</code> will not do what you think it does. use <code>command in commands</code> instead. To answer your question: <b>yes, there is a way</b>.</span>
<span class="comment-copy">If your commands become more complicated (take parameters, for example), I would suggest looking at the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> module.</span>
<span class="comment-copy">Beat me to typing it out!</span>
<span class="comment-copy">And you probably want to be able to stop the program. So add an if command == 'stop': break to the main loop.</span>
<span class="comment-copy">Thanks Man! This is perfect. I only just started getting into python so please excuse the dumb question.</span>
<span class="comment-copy">The exec function is powerful, but it is a big security risk. I would not recommend using it as a beginner.</span>
