<div class="post-text" itemprop="text">
<p>So I'm having an issue where when I read in info from an xml file. The data it reads in is supposed to be a list of numbers but when I read it in, it comes as a string. Is there a way to read xml data as a list or a way to convert a string to a list.</p>
<p>Eg I get the data from the xml as say [1.0, 2.0, 3.0, 4.0, 5.0] and if I check the type it says its a string, ie the whole thing is a string including the brackets and the comma. </p>
<p>Can't wrap my head around how to convert this back to a list of numbers</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>eval()</code> if you want to convert your string to a list of floats</p>
<pre><code>&gt;&gt;&gt; string = '[1.0, 2.0, 3.0]'

&gt;&gt;&gt; print(type(string))
&lt;type 'str'&gt;

&gt;&gt;&gt; mylist = eval(string)

&gt;&gt;&gt; print(type(mylist))
&lt;type 'list'&gt;

&gt;&gt;&gt; print([type(x) for x in mylist])
[&lt;type 'float'&gt;, &lt;type 'float'&gt;, &lt;type 'float'&gt;]

&gt;&gt;&gt; print(mylist)
[1.0, 2.0, 3.0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For this, you would use the str.split() builtin method.</p>
<p>Set <code>x = "[1.0, 2.0, 3.0, 4.0, 5.0]"</code></p>
<p>First of all, get rid of the square brackets around the string:</p>
<p><code>x = x[1:-1]</code> (x is now <code>"1.0, 2.0, 3.0, 4.0, 5.0"</code>, a long string)</p>
<p>Then, split the string to form a list of strings:</p>
<p><code>x = x.split(',')</code> (x is now <code>["1.0", "2.0", "3.0", "4.0", "5.0"]</code>, a list of strings)</p>
<p>Then, convert all of these strings into floats (as I assume you want that):</p>
<p><code>x = [float(i) for i in x]</code> (x is now <code>[1.0, 2.0, 3.0, 4.0, 5.0]</code>, a list of floats)</p>
</div>
<span class="comment-copy"><code>[float(x) for x in mystring.lstrip('[').rstrip(']').strip().split(',')]</code></span>
<span class="comment-copy">@AK47 What a magnificent one-liner! Not very helpful for a beginner though...</span>
<span class="comment-copy">@AK47 Yes, that's a good method, worth an upvote (I never even thought about <code>eval()</code>! Ususally I avoid it like the plague, but this might be a real application for it!)</span>
<span class="comment-copy">[float(x) for x in mystring.lstrip('[').rstrip(']').strip().split(',')] â€“ AK47 38 mins ago This worked out brilliantly! Thank you!!</span>
<span class="comment-copy">@dege the <code>eval()</code> command is cleaner and works in python2 and python3</span>
<span class="comment-copy">Ah forgot to mention I'm trying this in python. So the eval command doesn't work as it's a keyword in maya's version of python libraries</span>
<span class="comment-copy"><code>eval()</code> is a builtin for both <a href="https://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer">python2</a> and <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">python3</a></span>
<span class="comment-copy">yeah buy maya has it's version of eval() as well so it overwrites python's eval() unfortunately.</span>
<span class="comment-copy">I stand corrected... eval() does work and it is a lot easier... noob mistake of calling maya's version of eval() as maya.cmds.eval() instead of python eval()... I need coffee</span>
