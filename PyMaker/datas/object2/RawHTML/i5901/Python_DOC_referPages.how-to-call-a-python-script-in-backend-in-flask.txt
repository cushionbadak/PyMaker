<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/89228/calling-an-external-command-in-python">Calling an external command in Python</a>
<span class="question-originals-answer-count">
                    56 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to call a complicated python script in a flask app, but not entirely sure on how to do it right now. If it was simple I would just copy and paste the script with a router in flask, but that would get too messy. So far I have this for my main.py. I want to call a script temp.py.</p>
<pre><code>from flask import Flask, render_template, request
app = Flask(__name__)

@app.route('/')
def base():
    return render_template("base.html")


@app.route('/temp', methods=['GET', 'POST'])
def temp():


if __name__ == "__main__":
    app.run(debug=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use subprocess for calling script in command line</p>
<pre><code>import subprocess
process = subprocess.Popen(['python' , 'temp.py' ], stdout=subprocess.PIPE)
out, err = process.communicate()
print(out)
</code></pre>
<p>it will provide the output or error(if its there)</p>
<p>for more info on this look for:</p>
<p>python 2:
<a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/2/library/subprocess.html</a></p>
<p>python 3:
<a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html</a></p>
</div>
<span class="comment-copy">In addition to this, you can maintain different queuing and scheduling techniques as well.</span>
<span class="comment-copy">in <code>temp.py</code> ensure there is a <code>__name__ == '__main__':</code> block, so it doesn't execute immediately when its imported. Then if it doesnt already exist, define a function to call in <code>temp.py</code> that will execute the code you want to run and then import temp and call the function.</span>
<span class="comment-copy">Thanks, the stackoverflow thread you linked me to actually helped me a lot!</span>
<span class="comment-copy">or <code>os.system()</code> or <code>subprocess.call()</code> or <code>subprocess.check_output()</code>... there are many ways to create/call a process from current process</span>
