<div class="post-text" itemprop="text">
<p>I have a dictionary, <code>what</code>:</p>
<pre><code>what = {'a': ['b'], 'c': ['d\n', 'e\n', 'f'], 'd': ['f', 'g']}
</code></pre>
<p>and need to get the items with '/n' separate and without '/n' (order is important, need to sort the values.):</p>
<pre><code>[[{'a': ['b'], 'c': ['f'], 'd': ['f', 'g']}], [{'c': ['d\n', 'e\n']}]]
</code></pre>
<p>This is what I tried:</p>
<pre><code>    def lst(profiles_file: TextIO):
        solve_lst = []
        new_lst = fix_files(profiles_file)
        for k, v in new_lst.items():
            for i in v:
                if i.find('\n') != -1:
                get_index = [v.index(i)]
                solve_lst.append(get_index)
     return solve_lst
</code></pre>
<p>How can i get this without doing anything to complicated?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a></p>
<pre><code>from collections import defaultdict

def lst(profiles_file: TextIO):
    initial_dict = fix_files(profiles_file)

    with_n = defaultdict(list)
    without_n = defaultdict(list)

    for k, v in initial_dict.items():
        for item in v:
            if '\n' in item:
                with_n[k].append(item)
            else:
                without_n[k].append(item)

    return [without_n, with_n]
</code></pre>
</div>
