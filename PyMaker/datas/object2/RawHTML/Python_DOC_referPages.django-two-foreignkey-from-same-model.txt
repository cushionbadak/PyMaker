<div class="post-text" itemprop="text">
<p>In <code>Pegawai</code> model, I need two <code>ForeignKey</code>s to:</p>
<ol>
<li><code>Jabatan</code> model</li>
<li><code>unit_kerja</code> field of <code>Jabatan</code> model</li>
</ol>
<p>How to apply these for my <code>Pegawai</code> model? Only the first one worked.</p>
<p>Here is my <code>models.py</code>:</p>
<pre><code>from django.db import models
from django.urls import reverse
# Create your models here.
class UnitKerja(models.Model):
    nama_unit_kerja     = models.CharField(max_length=100)
    def get_absolute_url(self):
        return reverse("users:unitkerja")

    def __str__(self):
        return self.nama_unit_kerja

class Jabatan(models.Model):
    nama_jabatan        = models.CharField(max_length=100)
    level_jabatan       = models.IntegerField()
    unit_kerja          = models.ForeignKey(UnitKerja, on_delete=models.CASCADE, blank=True, null=True)

    def get_absolute_url(self):
        return reverse("users:jabatan")

    def __str__(self):
        return self.nama_jabatan

class Pegawai(models.Model):
        nip                 = models.CharField(max_length=100, unique=True)
        nama_pegawai        = models.CharField(max_length=100)
        alamat              = models.CharField(max_length=255)
        jabatan             = models.ForeignKey(Jabatan, on_delete=models.CASCADE)
        #this line#    
        unit_kerja          = models.ForeignKey(Jabatan.unit_kerja, on_delete=models.CASCADE, blank=True, null=True)

    def get_absolute_url(self):
        return reverse("users:pegawai")

    def __str__(self):
        return self.pegawai
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no such thing as a foreign key to a field, but you don't need it anyway. You can always access the <code>UnitKerja</code> instance by using multiple traversal, for example:</p>
<pre><code>my_unit_kerja = my_pegawai.jabatan.unit_kerja
</code></pre>
<p>Or you can have a helper property, if the above is too much work:</p>
<pre><code>class Pegawai(models.Model):
    ...
    @property
    def unit_kerja(self):
        return self.jabatan.unit_kerja
</code></pre>
<p>and then simply use</p>
<pre><code>my_pegawai.unit_kerja
</code></pre>
</div>
<span class="comment-copy">honestly, i don't get about "my_pegawai.unit_kerja" part. How to apply it to my code?</span>
<span class="comment-copy">You should add the <code>@property</code> to your <code>Pegawai</code> class as I described above. Then any <code>Pegawai</code> instance (<code>my_pegawai</code> in my example) will have access to that property.</span>
