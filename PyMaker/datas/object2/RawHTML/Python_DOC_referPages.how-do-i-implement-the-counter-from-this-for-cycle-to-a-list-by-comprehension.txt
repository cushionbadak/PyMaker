<div class="post-text" itemprop="text">
<p>How can i write this code</p>
<pre><code>def Serie_a(n):
    Serie_a = []
    m=0
    for i in [1..n]:
        m = m + 1/i
        Serie_a.append(m)
    print Serie_a
</code></pre>
<p>in the form of a list by comprehension?</p>
</div>
<div class="post-text" itemprop="text">
<p>Currently, you can't write a list comprehension that would be as easy to read as your <code>for</code> loop. Instead, use <code>itertools.accumulate</code>.</p>
<pre><code>&gt;&gt;&gt; list(accumulate(range(1,11), lambda acc, x: acc + 1/x))
[1, 1.5, 1.8333333333333333, 2.083333333333333, 2.283333333333333, 2.4499999999999997, 2.5928571428571425, 2.7178571428571425, 2.8289682539682537, 2.9289682539682538]
</code></pre>
<p>In Python 3.8, <a href="https://www.python.org/dev/peps/pep-0572/" rel="nofollow noreferrer">assignment expressions</a> will allow you to write</p>
<pre><code>% ./python.exe
Python 3.8.0a2 (tags/v3.8.0a2:23f4589b4b, Mar 18 2019, 15:16:44)
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; m = 0
&gt;&gt;&gt; [m := m + 1/x for x in range(1,11)]
[1.0, 1.5, 1.8333333333333333, 2.083333333333333, 2.283333333333333, 2.4499999999999997, 2.5928571428571425, 2.7178571428571425, 2.8289682539682537, 2.9289682539682538]
</code></pre>
<p>Note that <code>m</code> needs to be initialized before it can be used in the list comprehension, though.</p>
</div>
<span class="comment-copy">If you just want the last element (which you probably don't but just conjecturing), you can do <code>result = reduce(lambda x, y: x + 1/float(y), range(1, n+1))</code></span>
