<div class="post-text" itemprop="text">
<p>What will be the proper way to raise an exception and let the user know that it was raised from my_module, even if its a common python exception, like a ValueError:</p>
<pre><code>#my_module.exceptions.py
    class MyModuleError(Exception):
        pass

#my_module.do_something.py
    def do_something(*args):
        try:
           some logic here
        except Exception as e: 
           # i dont know in advance what kinds of exceptions
           # this code might throw 
           raise MyModuleError('An error ocurred %s' % (repr(e))
</code></pre>
<p>I would like the user to know that the exception was trown inside of my module, even tho it was a general python Exception.</p>
<p><strong>Edit1:</strong> sorry, i should´ve explained better:
Even tho i dont know what kind of exceptions the code above might throw, i´d like the user to know that it was an error originated from my_module.
Is this even best practice? 
How should i handle unexpected exceptions inside custom modules?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do the following:</p>
<pre><code>#...

raise ValueError('This exception was raised from myModule')

#....
</code></pre>
</div>
<span class="comment-copy">see <a href="https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html#user-defined-exceptions</a></span>
<span class="comment-copy">This is already accomplished by the traceback, which shows the originating exception (and its module).</span>
