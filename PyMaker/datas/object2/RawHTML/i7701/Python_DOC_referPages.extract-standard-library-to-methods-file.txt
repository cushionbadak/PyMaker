<div class="post-text" itemprop="text">
<p>I need to create autocomplete file for custom made editor written in other languages. With the keywords it is simply:</p>
<pre><code>&gt;&gt;&gt; import keyword
&gt;&gt;&gt; s = " ".join(keyword.kwlist) 
</code></pre>
<p>But I don't know if there is something similar. If not does Python team maintain any parsable format for their documentation?</p>
<p>All I need is <code>name</code> of the function and possibly arguments it takes and description of what it actually does. Other details like package name et al are nice to have too.</p>
<p>for example Python have <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">open function</a> and as such it will be:</p>
<p><strong>name</strong>: <code>open()</code></p>
<p><strong>signature</strong>: <code>open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)</code></p>
<p><strong>description</strong>: <code>Open file and return a corresponding file object. If the file cannot be opened, an OSError is raised....</code></p>
<p>I hope am clear enough. Let me know of anything that is still ambiguous.</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on your question, you want some information to display on a variable. Objects in python contain a couple of builtin attributes you could read to get this information.</p>
<ol>
<li><p><code>__name__</code>: Provides the name of the object (beware, if the object does not have this, it will raise an <code>AttributeError</code>.</p>
<pre><code>&gt;&gt;&gt; f = 5
&gt;&gt;&gt; f.__name__
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'int' object has no attribute '__name__'
</code></pre></li>
<li><p><code>__doc__</code>: Provides useful help text on an object. May or may not contain anything.</p>
<pre><code>&gt;&gt;&gt; print(f.__doc__)
int(x=0) -&gt; integer
int(x, base=10) -&gt; integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by '+' or '-' and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
&gt;&gt;&gt; int('0b100', base=0)
4
</code></pre></li>
<li><p><code>dir(__builtins__)</code>: To retrieve information about all builtins.</p>
<pre><code>&gt;&gt;&gt; dir(__builtins__)
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BufferError', 'BytesWarning', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'NameError', 'None', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'ReferenceError', 'RuntimeError', 'RuntimeWarning', 'StandardError', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'ZeroDivisionError', '_', '__debug__', '__doc__', '__import__', '__name__', '__package__', 'abs', 'all', 'any', 'apply', 'basestring', 'bin', 'bool', 'buffer', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'cmp', 'coerce', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'execfile', 'exit', 'file', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'intern', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'long', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'raw_input', 'reduce', 'reload', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'unichr', 'unicode', 'vars', 'xrange', 'zip']
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>In python3 any object has attributes <code>__name__</code> (and <code>__qualname__</code>, not sure what's the difference), <code>__text_signature__</code> and <code>__doc__</code>.</p>
</div>
<span class="comment-copy">You want the name, signature and description of what?</span>
<span class="comment-copy">You can look at <code>globals()</code>, and <code>xxx.__doc__</code>.</span>
<span class="comment-copy">@Coldspeed thank you. I will take a look at it</span>
<span class="comment-copy">@Coldspeed looking at globals it does not seem to provide any useful information. Doc string is useful to provide description though. can you explain a bit?</span>
<span class="comment-copy">thanks but it is part of my question also on how to get all python object similar to how I get all keywords. If you know how I will appreciate it</span>
<span class="comment-copy">@StefanoMtangoo As I mentioned, <code>globals()</code> can do this. Do take a look at me edit.</span>
<span class="comment-copy">I think I have not made myself clear. All I want is (1) Get all standard library object (2) extract methods et al from them. Number (2) is solved but not (1)</span>
<span class="comment-copy">@StefanoMtangoo Fixed. Check my edit.</span>
<span class="comment-copy">I see that I need to use <code>dir()</code> in results of globals to get the list. Thanks</span>
<span class="comment-copy">thanks a lot. That solves all except one thing, how do I get list of all python objects. I will try to find out but if you know it will be great to update your answer</span>
