<div class="post-text" itemprop="text">
<p>I'm using python regular expressions to extract dimensional information from a database. The entries in that column look like this:</p>
<pre><code>23 cm
43 1/2 cm

20cm
15 cm x 30 cm
</code></pre>
<p>What I need from this is only the width of the entry (so for the entries with an 'x', only the first number), but as you can see the values are all over the place.</p>
<p>From what I understood in the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer" title="documentation">documentation</a>, you can access the groups in a match using their position, so I was thinking I could determine the type of the entry based on how many groups are returned and what is found at each index.</p>
<p>The expression I used so far is <code>^(\d{2})\s?(x\s?(\d{2}))?(\d+/\d+)?$</code>, however it's not perfect and it returns a number of useless groups. Is there something more efficient and appropriate?</p>
<p><strong>Edit</strong>: I need the number from every line. When there is only one number, it is implied that only the width was measured (including any fractional components such as line 2). When there are two numbers, the height was also measured, but I only need the width which is the first number (such as in the last line)</p>
</div>
<div class="post-text" itemprop="text">
<p>try regex below, it will capture 1st digits and optional fractional come after it before the 1st 'cm'</p>
<pre><code>import re
regex = re.compile('(\d+.*?)\s?cm') # this will works for all your example data
# or
# this asserted whatever come after the 1st digit group must be fractional number only
regex = re.compile('(\d+(?:\s+\d+\/\d+)?)\s?cm') 


&gt;&gt;&gt; regex.match('23 cm').group(1)
&gt;&gt;&gt; '23' 
&gt;&gt;&gt; regex.match('43 1/2 cm').group(1)
&gt;&gt;&gt; '43 1/2'
&gt;&gt;&gt; regex.match('20cm').group(1)
&gt;&gt;&gt; '20'
&gt;&gt;&gt; regex.match('15 cm x 30 cm').group(1)
&gt;&gt;&gt; '15'
</code></pre>
<p><a href="https://regex101.com/r/FTZOIb/1" rel="nofollow noreferrer">regex101 demo</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a sample of how to do it from a text file.
It works for the provided data.      </p>
<pre><code>     f = open("textfile.txt",r')

     for line in f :
         if 'x'in line:
             iposition = line.find('x')
             print(line[:iposition])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This regex should work (<a href="https://regex101.com/r/LhJl2V/1" rel="nofollow noreferrer">Live Demo</a>)</p>
<pre><code>^(\d+)(?:\s*cm\s+[xX])
</code></pre>
<h1>Explanation</h1>
<ul>
<li><code>^(\d+)</code> - capture at least one digit at the beginning of the line</li>
<li><code>(?:</code> - start non-capturing group</li>
<li><code>\s*</code> - followed by at least zero whitespace characters</li>
<li><code>cm</code> - followed by a literal <code>c</code> and <code>m</code></li>
<li><code>\s+</code> - followed by at least one whitespace character</li>
<li><code>[xX]</code> - followed by a literal <code>x</code> or <code>X</code></li>
<li><code>)</code> - end non-capturing group</li>
</ul>
<p>You shouldn't need to bother matching the rest of the line.</p>
</div>
<span class="comment-copy">Do you want the units (<code>cm</code>) as well or just the numerical value?</span>
<span class="comment-copy">Are those only value examples you can encounter, or these can be mixed with other data? e.g. does your string always begin with a number and doesn't contain anything else but dimensions such as these?</span>
<span class="comment-copy">Why is this <code>43 1/2</code> different from the rest ? Or just <code>^(?:(?!cm).)+</code></span>
<span class="comment-copy">These seem to be the only variations in the data set. @sln the 1/2 means 43.5. Unfortunately the person that gave me the data didn't really care about formatting it.</span>
<span class="comment-copy">@ShammelLee just the numerical value</span>
<span class="comment-copy">That works perfectly!</span>
