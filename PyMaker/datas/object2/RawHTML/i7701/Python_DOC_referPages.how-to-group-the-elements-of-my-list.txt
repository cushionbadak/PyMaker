<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5083194/python-convert-5-4-2-4-1-0-into-5-4-2-4-1-0">python: convert “5,4,2,4,1,0” into [[5, 4], [2, 4], [1, 0]]</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>i had a list: </p>
<pre><code>    list = ['a', 'b', 'c', 'd', 'e', 'f']
</code></pre>
<p>how would I go about converting this list to:</p>
<pre><code>    list = ['ab', 'cd', 'ef']
</code></pre>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Given:</p>
<pre><code>&gt;&gt;&gt; li=['a', 'b', 'c', 'd', 'e', 'f']
</code></pre>
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a>:</p>
<pre><code>&gt;&gt;&gt; ['{}{}'.format(a,b) for a,b in zip(li, li[1:])]
['ab', 'bc', 'cd', 'de', 'ef']
</code></pre>
<p>Or:</p>
<pre><code>&gt;&gt;&gt; [a+b for a,b in zip(li, li[1:])]
['ab', 'bc', 'cd', 'de', 'ef']
</code></pre>
<p>Or, if you want <code>['ab', 'cd', 'ef']</code> you can do:</p>
<pre><code>&gt;&gt;&gt; [a+b for a,b in zip(*[iter(li)]*2)]
['ab', 'cd', 'ef']
</code></pre>
<p>Or, </p>
<pre><code>&gt;&gt;&gt; [a+b for a,b in zip(li[::2],li[1::2])]
['ab', 'cd', 'ef']
</code></pre>
<p>For a different group length:</p>
<pre><code>&gt;&gt;&gt; [''.join(l) for l in zip(*[iter(li)]*3)]
['abc', 'def']
</code></pre>
<p>(And please don't use <code>list</code> as a name for a list. You clobber the function by the same name)</p>
</div>
<div class="post-text" itemprop="text">
<pre class="lang-py prettyprint-override"><code>def pairs(sequence):
    sequence = iter(sequence)
    while True:
        yield next(sequence) + next(sequence)

&gt;&gt;&gt; list(pairs(['a', 'b', 'c', 'd']))
['ab', 'cd']
&gt;&gt;&gt; list(pairs(['a', 'b', 'c']))
['ab']
</code></pre>
<p>Note that it would ignore elements when the total number is not even.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have many ways, here is one:</p>
<pre><code>[n for n in map(lambda x: x[0]+x[1], zip(list[::2], list[1::2]))]
</code></pre>
<p>Reason I don't use <code>list()</code> to force output is because you are occupying it, which is not recommended. If you rename your <code>list</code> to <code>ls</code>, here is a shorter version:</p>
<pre><code>list(map(lambda x: x[0]+x[1], zip(ls[::2], ls[1::2])))
</code></pre>
</div>
<span class="comment-copy">Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of your own code and explanation of what it is that is giving you issues in your current implementation.</span>
<span class="comment-copy">does the list always have an even number of elements?</span>
<span class="comment-copy">How to group: Build always pairs? Build always 3 groups? What if the list isn't 6 elements in size?</span>
<span class="comment-copy">Also see <a href="https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks" title="how do you split a list into evenly sized chunks">stackoverflow.com/questions/312443/…</a></span>
<span class="comment-copy">I hope this is not the starting point for a grouping strategies database ;)</span>
<span class="comment-copy">The desired output is <code>['ab', 'cd', 'ef']</code> and not <code>['ab', 'bc', 'cd', 'de', 'ef']</code></span>
<span class="comment-copy">@MoeA What makes you sure about this?</span>
<span class="comment-copy">@Wolf its mentioned in the question?</span>
<span class="comment-copy">How would i be able to do the last one if i wasnt sure how many elements will be in the list? Automate it in a sense?</span>
<span class="comment-copy">Thanks for your help. i just tried this, and when i tried to print i got this:  &lt;map object at 0x500952c&gt; , how can i get it to actually print?</span>
<span class="comment-copy">I have updated for your case (python3). Usually you can call <code>list()</code> to force output but as you are already using it as your data variable, I used a different method of dumping.</span>
