<div class="post-text" itemprop="text">
<p>I have this Django query where I get some information from different databases, which I want to expose to the front end:</p>
<pre><code>specifics = PageData.objects.filter(page_id__in=page_ids).values('page_id'). \
                annotate(views=Count('page_id')).                            \
                values('views', 'page__title', 'page__content_size')
</code></pre>
<p>that gives me in turn a list of dictionaries - the prompt is for <code>list(specifics)</code>:</p>
<pre><code>[
{'page__content_size': 19438L,
  'page__title': u'Bosch Tassimo Charmy anmeldelse. Positivt: Bryggehastighed. Negativt: Placering af vandtanken.  | 96 Grader',
  'views': 5},
 […]
 {'page__content_size': 19395L,
  'page__title': u'Banwood First Go Balance Bike - studiominishop.com',
  'views': 1}
]
</code></pre>
<p>I would like to be able to <strong>arrange</strong> the order of the keys in each dictionary, that means in a required and specific order I am provided. The order would always be the same for each element in the list.</p>
<p>Is there any way to do it in Django or in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You probabily need this:</p>
<blockquote>
<p>import collections</p>
<p>OrderedDict   dict subclass that remembers the order entries were added</p>
</blockquote>
<p>Documentation here:  <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html#collections.OrderedDict</a></p>
<p>Here you can find a full example:</p>
<p><a href="https://pymotw.com/2/collections/ordereddict.html" rel="nofollow noreferrer">https://pymotw.com/2/collections/ordereddict.html</a></p>
<pre><code>d = collections.OrderedDict()
d['a'] = 'A'
d['b'] = 'B'
d['c'] = 'C'
d['d'] = 'D'
d['e'] = 'E'

for k, v in d.items():
    print k, v`
</code></pre>
<p>Hope this help,
Ciao!</p>
</div>
<div class="post-text" itemprop="text">
<p>This is actually related to python. Here is the cross-reference to the same question which already answered.</p>
<p><a href="https://stackoverflow.com/questions/575819/sorting-dictionary-keys-in-python">Sorting dictionary keys in python</a></p>
<p>You can only get a sorted representation of the key list.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to use <code>values_list</code> instead of <code>values</code>. However this returns list of <code>tuples</code> instead of list of <code>dictionaries</code> but the order is always the same in all elements.</p>
<pre><code>specifics = PageData.objects.filter(
    page_id__in=page_ids).values('page_id').annotate(
    views=Count('page_id')).values_list(
    'views', 'page__title', 'page__content_size')
</code></pre>
<p>Values will always be in the order specified in <code>values_list</code> but a tuple instead of dictionaries.</p>
<pre><code>[
    (5, u'Bosch Tassimo Charmy anmeldelse. Positivt: Bryggehastighed. Negativt: Placering af vandtanken.  | 96 Grader', 19438L),
     […]
    (1, u'Banwood First Go Balance Bike - studiominishop.com', 19395L)
]
</code></pre>
<p><code>Python dictionary does not guarantee the order</code></p>
</div>
<span class="comment-copy">What is not clear about the fact that dicts don't guarantee order?</span>
<span class="comment-copy">It is clear, I was just wondering if the <i>does not guarantee</i> condition may be circumvented or not.</span>
<span class="comment-copy">it does exactly what I want, grazie!</span>
<span class="comment-copy">maybe I've been unclear in the explanation, I'd like to arrange the order of the keys, not sort them. And I need the dictionary, not a sorted representation. I'll update my question.</span>
<span class="comment-copy">@MattiaPaterna You cannot sort the dictionary. Python internally change the order of keys when storing values.</span>
