<div class="post-text" itemprop="text">
<p>From Python in a Nutshell</p>
<blockquote>
<p><strong>Custom Importers</strong></p>
<p>An advanced, rarely needed functionality that Python offers is the
  ability to change the semantics of some or all  import  and  from 
  statements.</p>
<p><strong>Rebinding __import__</strong></p>
<p>You can rebind the  <code>__import__</code>  attribute of the module  <code>builtin</code>
  to your own custom importer function—for example, one using the
  generic built-in-wrapping technique shown in “Python built-ins” on
  page 174.</p>
</blockquote>
<ol>
<li><p>In "You can rebind the  <code>__import__</code>  attribute of the module  <code>builtin</code>", should "the module  <code>builtin</code>" be "the module  <code>builtins</code>" instead?</p></li>
<li><p>Is "the  <code>__import__</code>  attribute of the module  <code>builtin</code>" <a href="https://docs.python.org/3/library/importlib.html#importlib.__import__" rel="nofollow noreferrer">bound to <code>importlib.__import__</code>function by default</a>? Or does "the module  <code>builtin</code>" provide the default implementation bound to its   <code>__import__</code>  attribute?</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>Yes, that's a typo in the book. In Python 2 the same module is named <a href="https://docs.python.org/2/library/__builtin__.html" rel="nofollow noreferrer"><code>__builtin__</code></a> (no <code>s</code>), in Python 3 it is named <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer"><code>builtins</code></a>.</p></li>
<li><p><code>builtins.__import__</code> is a distinct function from <code>importlib.__import__</code>. If you are going to rebind <code>builtins.__import__</code>, save a reference.</p>
<ul>
<li><p><code>builtins.__import__</code> is <a href="https://github.com/python/cpython/blob/v3.6.1/Python/bltinmodule.c#L220-L260" rel="nofollow noreferrer">implemented in C</a>, and essentially calls the <a href="https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleLevelObject" rel="nofollow noreferrer">C-API <code>PyImport_ImportModuleLevelObject</code> function</a>.</p></li>
<li><p><code>importlib.__import__</code> is a <a href="https://github.com/python/cpython/blob/v3.6.1/Lib/importlib/_bootstrap.py#L1047-L1079" rel="nofollow noreferrer">pure-Python function</a>. The <em>goal</em> of <code>importlib</code> is to provide a pure-python implementation of the import machinery so it can be hacked on more easily, and this function is no exception.</p></li>
</ul></li>
</ol>
</div>
<span class="comment-copy">1. Yes. That's probably an editing error.</span>
<span class="comment-copy">2. No. It is bound to <code>builtins.__import__</code>. Save that function if you rebind it.</span>
<span class="comment-copy">I think <a href="https://stackoverflow.com/questions/9047745/where-is-the-builtin-module-in-python3-why-was-it-renamed">this</a> is relevant.</span>
<span class="comment-copy">Thanks. Do you mean that <code>importlib.__import__</code> implement the same things as <code>builtins.__import__</code>? The only difference between them is in which language they are implemented?</span>
<span class="comment-copy">@Tim: exactly, the two <i>aim</i> to do the same thing.</span>
