<div class="post-text" itemprop="text">
<p>I have a piece of code that is checking if a user is in a table of data.  I can get it to produce a list of the user details but I cannot for the life of me figure out why it won't let me produce a greeting if the user name is valid.</p>
<p>The code is:</p>
<pre><code>import sqlite3
import itertools
conn = sqlite3.connect("student_test_db.sqlite")
c = conn.cursor()
## connects to the database

username = input("please enter your username")
username = (username,)
c.execute( 'SELECT fname,sname,username  FROM students WHERE username =?', username )

user_check = c.fetchall()
print (user_check)
print (type(user_check))

if username in user_check:
  print ("Welcome")
else:
  print ("Wrong username")
</code></pre>
<p>What I get out of this is:</p>
<pre><code>please enter your usernameBobF
[('Bob', 'Fleming', 'BobF')]
&lt;class 'list'&gt;
Wrong username
</code></pre>
<p>I cannot see why as the username is clearly matching what is in the list.  I am a novice user so apologies if it i something really obvious!</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your username is likely to be unique, change your <code>c.fetchall()</code> to <code>c.fetchone()</code> which should give you the required row instead of a list of rows with only one row in it. Check the sqlite3 documentation related to the <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.fetchone" rel="nofollow noreferrer">fetch methods</a>.</p>
<p>As pointed out in a comment, you shouldremove the line reassigning the <code>username</code> variable <code>username = (username,)</code> and directly use <code>(username,)</code> in <code>c.execute()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Beside change <code>fetchall()</code> to <code>fetchone()</code>, the problem is that you assign tuple <code>(username,)</code> to variable <code>username</code>, it changed from <code>Bob</code> to <code>(Bob,)</code>, when your code check variable <code>username</code> is in the result, it will use the tuple <code>(Bob,)</code> instead of <code>Bob</code>. That's why the code always print <code>Wrong username</code>. you have to change to a new variable name not <code>username</code>, Change your code to:</p>
<pre><code>import sqlite3
import itertools
conn = sqlite3.connect("student_test_db.sqlite")
c = conn.cursor()
## connects to the database

username = input("please enter your username")
username_sql = (username,)
print username
c.execute( 'SELECT fname,sname,username  FROM students WHERE username =?',username_sql)

user_check = c.fetchone()
print (user_check)
print (type(user_check))

if username in user_check:
    print ("Welcome")
else:
    print ("Wrong username")
conn.close()
</code></pre>
<p>output:</p>
<pre><code>please enter your username'Bob'
Bob
(u'BobF', u'Fleming', u'Bob')
&lt;type 'tuple'&gt;
Welcome
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Solved it!
When I changed the username variable for use in the query I added a "," after it.  That was why it was not finding the user in the list. I added a separate variable for the username in the query and all works.
Thanks for all the advice.</p>
</div>
<span class="comment-copy"><code>'Bob' in [('Bob', 'Fleming', 'BobF')]</code> will always return <code>False</code> because it is tuple inside list, use index as <code>0</code> like <code>user_check[0]</code></span>
<span class="comment-copy">Try <code>username in user_check[0]</code></span>
<span class="comment-copy">Actually <code>username in user_check[0]</code> also will not work because <code>username</code> is also a tuple</span>
<span class="comment-copy">@Ev.Kounis, but <code>user_check[0]</code> is a tuple (<code>('Bob', 'Fleming', 'BobF')</code>) and <code>username</code> is also a tuple <code>(BobF',)</code></span>
<span class="comment-copy">And you don't need to import <code>itertools</code> for this situation.</span>
