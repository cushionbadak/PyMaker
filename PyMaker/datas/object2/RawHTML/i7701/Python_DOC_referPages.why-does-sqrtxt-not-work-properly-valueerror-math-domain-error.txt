<div class="post-text" itemprop="text">
<p>So I want to make a program that says what are the solutions to  n   in the function  2^n  -15 = xt  where n is a positive integer and xt is a square number. But this doesn't work:</p>
<pre><code>from math import sqrt
n = 0
def is_square(x):
    answer = sqrt(x)
    return answer.is_integer()

while True:
    n += 1
    xt = 2 ^ n - 15
    if is_square(xt):
        print(xt)
</code></pre>
<p>The error says this:</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/NemPl/Desktop/Python/Python programi/M/P #1.py", line 9, in &lt;module&gt;
    if is_square(xt):
  File "C:/Users/NemPl/Desktop/Python/Python programi/M/P #1.py", line 4, in is_square
    answer = sqrt(x)
ValueError: math domain error
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Short answer</strong>: you aim to calculate the square root of a <strong>negative number</strong>.</p>
<p>If we add a <code>print(xt)</code> statement to the program:</p>
<pre><code>while True:
    n += 1
    xt = 2 ^ n - 15
    <b>print(xt)</b>
    if is_square(xt):
        print(xt)</code></pre>
<p>We see that the first element that is queried, is:</p>
<pre><code>-16
</code></pre>
<p>Although there are <em>complex</em> numbers that represent square roots of negative numbers, <code>math.sqrt(..)</code> works on floating points, so a subset of "<em>reals</em>". Now for reals, the square root of a negative number is <em>not</em> defined.</p>
<p>Finally not that <code>^</code> does <strong>not calculate the power</strong>, one can calculate the power by using <code>2 ** n</code> (or <code>1 &lt;&lt; n</code> in this case). The caret <strong><code>^</code> is a bitwise or</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This error could happen when your argument to <code>sqrt</code> is a negative number.</p>
<p>The <code>math.sqrt</code> function is not able to calculate the square of a negative numbers.</p>
<p>You can use the <code>cmath</code> lib for negative number:</p>
<pre><code>import cmath
print (cmath.sqrt(-2))
&gt;&gt;&gt; 1.4142135623730951j
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>math.sqrt</code> apparently does not like negative numbers which would lead to a complex result. From the <a href="https://docs.python.org/3/library/math.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>These functions cannot be used with complex numbers; use the functions of the same name from the cmath module if you require support for complex numbers. The distinction between functions which support complex numbers and those which donâ€™t is made since most users do not want to learn quite as much mathematics as required to understand complex numbers. Receiving an exception instead of a complex result allows earlier detection of the unexpected complex number used as a parameter, so that the programmer can determine how and why it was generated in the first place.</p>
</blockquote>
<p>Use <code>cmath.sqrt()</code> from <a href="https://docs.python.org/3/library/cmath.html" rel="nofollow noreferrer">cmath</a> if you need complex results as well.</p>
</div>
<span class="comment-copy">I doubt the <code>2^n</code> is really what you want</span>
<span class="comment-copy">(1) The caret <code>^</code> does not calculate powers but bitwise XOR. To calculate powers use <code>**</code>. (2) You created an endless loop. Python will go on until it encounters an error. In your case you hit one early, when <code>2^n-15</code> became negative right away. To fix that, define a criterion to end the loop: <code>if n &gt; 1000: break</code>.</span>
