<div class="post-text" itemprop="text">
<p>I need to take the average, minimum and maximum from this list, without using built in functions, but it throws an Exception:</p>
<pre><code>File "&lt;ipython-input-150-ff44c542ba16&gt;", line 10, in problem2_8
    if temp_list[item]&lt;lowest:

TypeError: list indices must be integers or slices, not float
</code></pre>
<p>Here is my code:</p>
<pre><code>hourly_temp = [40.0, 39.0, 37.0, 34.0, 33.0, 34.0, 36.0, 37.0, 38.0, 39.0, \
               40.0, 41.0, 44.0, 45.0, 47.0, 48.0, 45.0, 42.0, 39.0, 37.0, \
               36.0, 35.0, 33.0, 32.0]
def problem2_8(temp_list):
    total=0
    for item in temp_list:
        total=total+item
    print("Average: ",total/len(temp_list))
    low=0
    lowest= int(low)
    for item in temp_list:
        if temp_list[item]&lt;lowest:
            lowest=temp_list[list]
    print("Low: ",lowest)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could simply iterate in the second loop too:</p>
<pre><code>hourly_temp = [40.0, 39.0, 37.0, 34.0, 33.0, 34.0, 36.0, 37.0, 38.0, 39.0, \
               40.0, 41.0, 44.0, 45.0, 47.0, 48.0, 45.0, 42.0, 39.0, 37.0, \
               36.0, 35.0, 33.0, 32.0]

def problem2_8(temp_list):
    total=0
    for item in temp_list:
        total = total + item
    print("Average: ", total / len(temp_list))
    lowest=float('inf')  # the temporary lowest should be really big (not small)
    for item in temp_list:
        if item &lt; lowest:
            lowest = item
    print("Low: ", lowest)

problem2_8(hourly_temp)
</code></pre>
<p>But in case you're interested using the built-in functions <code>sum</code> and <code>min</code> could make this much easier:</p>
<pre><code>def problem2_8(temp_list):
    print('Average', sum(temp_list) / len(temp_list))
    print('Lowest', min(temp_list))
</code></pre>
<p>In case you have python &gt;= 3.4 you could also use <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer"><code>statistics.mean</code></a> instead of dividing the sum by the length:</p>
<pre><code>from statistics import mean

def problem2_8(temp_list):
    print('Average', mean(temp_list))
    print('Lowest', min(temp_list))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is relatively easy to solve. The code can be changed thus.</p>
<pre><code>hourly_temp = [40.0, 39.0, 37.0, 34.0, 33.0, 34.0, 36.0, 37.0, 38.0, 39.0, \
               40.0, 41.0, 44.0, 45.0, 47.0, 48.0, 45.0, 42.0, 39.0, 37.0, \
               36.0, 35.0, 33.0, 32.0]

def problem2_8(temp_list):
    total=0
    for item in temp_list:
        total=total+item
    print("Average: ",total/len(temp_list))
    lowest= temp_list[0] # Point a
    for item in temp_list: # Point b
        if item&lt;lowest: # Point c
            lowest=item # Point d
    print("Low: ",lowest)

 problem2_8 (hourly_temp)
</code></pre>
<p>So here is the explanation of how it works</p>
<p>Point a: I am not sure why you had defined a low, which would be an integer, and then said lowest was the int of low. I have no idea why that exists. What you actually want is to set it to the first value arbitrarily, which is what I have done.</p>
<p>Point b: Each item is the item in the list. It is not the integer of each item, it gives you the value of each item</p>
<p>Point c: As you have the value of the item, you should directly compare it to lowest</p>
<p>Point d: You should then set the lowest value as the new one</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>for item in temp_list:
</code></pre>
<p>Return the element  and not the index, you then just use for your conditions:</p>
<pre><code>if item &lt;lowest:
</code></pre>
<p>If you want to use the index, you can use :</p>
<pre><code>for item in range(len(temp_list)):
</code></pre>
<p>or even using enumeration : </p>
<pre><code>for index,value in enumerate(temp_list):
</code></pre>
<p>Also, next time you may want to print the value that made the error to see if it is what you expected</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot use the floating point numbers as indices. So try this</p>
<pre><code>for i in range(len(temp_list)): 
     if temp_list[i]&lt;lowest:                  
              lowest=temp_list[i]
 print("Low: ",lowest)
</code></pre>
<p>If you do not want to use the len() as well. Try this</p>
<pre><code>for item in temp_list: 
         if item&lt;lowest:                  
                  lowest=item
     print("Low: ",lowest)
</code></pre>
<p>And finally your question you could convert float to int by typecasting it. <code>int(item)</code> is one way to do that.</p>
</div>
<span class="comment-copy">So what do you think is the problem? The error message seems pretty clear. You need to use the ordinal index values to index into a list not the values themselves</span>
<span class="comment-copy">Do a <code>for index, item in enumerate(temp_list)</code>. And then use <code>index</code> not an <code>item</code>.</span>
<span class="comment-copy">That's not how the "for each" loop works. Perhaps you should go back to the <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer"><code>for</code> loop tutorial</a> and read more about it? As a hint of what's going on, try <i>printing</i> <code>item</code> in the loop.</span>
<span class="comment-copy">I tried and it worked fine, can you please explain how did it worked ? I'm a newbie to python</span>
<span class="comment-copy">@ChiliMili Please read the tutorial as suggested above.</span>
<span class="comment-copy">I think that his assignment requiere him not too use them, so that he know how to do it, nice explanation still</span>
<span class="comment-copy">Yes, I read that they aren't allowed - but I thought the answer would be incomplete without at least showing how it "could be done". :)</span>
<span class="comment-copy">I've the following code now working very fine on my data, but the coursera autograde fails it, any idea how ? <code>def problem2_8(temp_list):     total=0     for item in temp_list:         total=total+item     print("Average: ",total/len(temp_list))          highest= hourly_temp[0]     for item in temp_list:         if item&gt;highest:             highest=item     print("Highest: ",highest)          lowest= hourly_temp[0]     for item in temp_list:         if item&lt;lowest:             lowest=item     print("Low: ",lowest)</code></span>
<span class="comment-copy">Without indentation it's hard to make sure if it's correct. But at a quick glance it seems correct. Maybe you're not formatting it correctly. Currently there will be two whitespaces after <code>Lowest:</code>, etc. Maybe try it with <code>print('Lowest: {}'.format(lowest))</code> and similarly for the others.</span>
<span class="comment-copy">Alright, thank you so much</span>
