<div class="post-text" itemprop="text">
<p>The HTTP response header for 'packages_list' returns the following, which is a list looking string. How do i convert this to an actual list? I have tried typecasting the string as a list which didn't work. I am not keen on doing find and replace or strip. Once I have the list I am creating a windows forms with buttons with text for each of the items in list. Any help is appreciated</p>
<p>I am using IronPython 2.6 (yes, I know its old but cant move away for backward compatibility reasons) </p>
<pre><code>['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']


httpConn = httplib.HTTPConnection(base_server_url)
httpConn.request("POST", urlparser.path, params)
response = httpConn.getresponse()
headers = dict(response.getheaders())
print headers['packages_list']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest approach, IMHO, would be to use <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="noreferrer"><code>literal_eval</code></a>:</p>
<pre><code>&gt;&gt;&gt; s = "['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']"
&gt;&gt;&gt; s
"['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']"
&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; literal_eval(s)
['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can to check if the string is a valid python type</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; s = "['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']"
&gt;&gt;&gt; ast.literal_eval(s)
['Admin', 'MMX_G10_Asia', 'MMX_G10_London', 'MMX_G10_Readonly', 'MMX_Credit_Readonly', 'MMX_Govies_ReadOnly']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another option is to convert this string to JSON format and then read it in:</p>
<pre><code>import json
s = headers['packages_list'].replace("'", '"')
result = json.loads(s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ugly but I am going with the below. Thanks again everyone for the help !</p>
<pre><code>headers = dict(response.getheaders())
print headers['packages_list']
result = headers['packages_list'].replace("'",'')
result = result.replace("[","")
result = result.replace("]", "")
print result
package_list = result.split(",") 
print "the 2nd item in teh list is ", package_list[1]
</code></pre>
</div>
<span class="comment-copy">Thanks everyone for your help. to my disappointment IronPython 2.6 has a bug apparently and json.loads blows up  and it does not have ast package in built. and I cant installl for backward compatibility reasons  File "C:\Program Files (x86)\MMI_RADIA_PKG\IronPython 2.6\Lib\json_<i>init_</i>.py", line 307, in loads   File "C:\Program Files (x86)\MMI_RADIA_PKG\IronPython 2.6\Lib\json\scanner.py", line 42, in iterscan AttributeError: 'NoneType' object has no attribute 'scanner'  IronPython bug reference <a href="http://ironpython.codeplex.com/workitem/25787" rel="nofollow noreferrer">ironpython.codeplex.com/workitem/25787</a></span>
<span class="comment-copy">Thanks Mureinik for taking time to help. Sadly there is no ast in IronPython 2.6</span>
<span class="comment-copy">Thanks for the answer Fred. unfortunately the stupid IronPython 2.6 does not have ast package :-(</span>
<span class="comment-copy"><a href="https://ironpython-test.readthedocs.io/en/latest/library/ast.html#ast-helpers" rel="nofollow noreferrer">This is quite surprising !</a></span>
<span class="comment-copy">Looks like I am using the oldest of 2.6 series ' "C:\Program Files (x86)\MMI_RADIA_PKG\IronPython 2.6\ipy.exe" C:/Users//PycharmProjects/MultiPackageSupport/temp/temp1.py Traceback (most recent call last):   File "C:/Users//PycharmProjects/MultiPackageSupport/temp/temp1.py", line 1, in C:/Users//PycharmProjects/MultiPackageSupport/temp/temp1.py ImportError: No module named ast Process finished with exit code 1 '</span>
<span class="comment-copy">Can you make an update of IronPython ?</span>
<span class="comment-copy">Hello mate, I cant, it has been distributed to 100s of user desktops. so my work should work on their PCs with their version of IronPython. thanks</span>
<span class="comment-copy">Do you really need to replace all <code>'</code>' with <code>"</code>? Doesn't JSON use either one to enclose a string literal?</span>
<span class="comment-copy">@Code-Apprentice not sure what JSON specification says, but <code>json.load</code> only accepts <code>"</code> as string delimiter.</span>
<span class="comment-copy">The example at <a href="https://docs.python.org/2/library/json.html" rel="nofollow noreferrer">docs.python.org/2/library/json.html</a> and <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a> says otherwise: <code>&gt;&gt;&gt; json.loads('["foo", {"bar":["baz", null, 1.0, 2]}]')</code>.</span>
<span class="comment-copy">Oh wait...I had it backwards. My bad.</span>
