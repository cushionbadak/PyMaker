<div class="post-text" itemprop="text">
<p>I have a question about python regex. 
I am trying to get count of the number start with 1, end with 1, and between 1s there are only 0s from the string.</p>
<p>The problem is if the number is 10101, it should return 2, but based on my regex, it returns 1. </p>
<pre><code>[(1)][(0)]+[(1)]
</code></pre>
<p>How can I change this regex to count duplicated 1 between two 101s?</p>
<p><a href="https://regex101.com/r/R78CRD/1/" rel="nofollow noreferrer">https://regex101.com/r/R78CRD/1/</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>Regex only counts non-overlapping matches. Your regex however matches two <code>1</code>s, so regex skips forward to the 3rd <code>1</code> and continues to count from there.</p>
<p>You can use a <a href="https://docs.python.org/3/howto/regex.html#lookahead-assertions" rel="nofollow noreferrer">lookahead assertion</a> to fix this:</p>
<pre><code>10+(?=1)
</code></pre>
</div>
<span class="comment-copy"><i>if the number is 10101, it should return 2...</i> what do you mean exactly?</span>
<span class="comment-copy">@revo Thanks for your reply. It means there are two 101 in that string. First three numbers and last three numbers.</span>
<span class="comment-copy">In your comment, you are talking about digits, not numbers. Use proper terminology, and people would know what you mean.</span>
<span class="comment-copy">2 notes: 1) <code>[(1)]</code> means a character class containing <code>1</code>,<code>(</code> and <code>)</code> individually. So it matches all three characters. You don't need a character class at all. <code>1</code> is enough. 2) You should use a positive lookahead <code>10+(?=1)</code> to make a right assertion otherwise a match will happen which engine won't retry matching over it again.</span>
<span class="comment-copy">Why is this question asked several times today for different languages? The third one already.</span>
