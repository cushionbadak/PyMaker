<div class="post-text" itemprop="text">
<p>I have a script that when I run it from pycharm, it runs fine, but when executed from the command line it complains</p>
<pre><code>import util as u
</code></pre>
<p><code>ModuleNotFoundError: No module named 'util'</code></p>
<p>I followed this advice here:
<a href="https://stackoverflow.com/questions/29553668/script-running-in-pycharm-but-not-from-the-command-line">Script running in PyCharm but not from the command line</a></p>
<p>Interpreter is the same, working directory is the same, but sys paths are different.</p>
<p>The module's folder looks like this</p>
<pre><code>mymodule
    sub_1
        util.py
    sub_2
         ...
    main.py
</code></pre>
<p>pycharm shows all folders when printing sys.path elements. when running from the command line, it doesn't show any of them, even when I run it from thr director where <code>main.py</code> is.
Do I have to add the directory to <code>PYTHONPATH</code> even when I run the file from that directory? Seems like overkill having every project's directory added. Is there a better way to do this or is that the standard procedure?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think more information is needed to make solution recommendations, but here is what I would check for:</p>
<ol>
<li>does your package of modules have the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer"><code>__init__.py</code></a> file(s)</li>
<li>when using command line, are you calling python interpreter with the <code>-I</code> parameter? that would strip location context from your script and so <strong>not</strong> scan the local directory for modules or packages, so if you do, try running without it.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>digitake's suggestion to use a relative path worked</p>
<pre><code>import .util as u
</code></pre>
</div>
<span class="comment-copy">try relative <code>import .util as u</code></span>
<span class="comment-copy">make <code>__init__.py</code> in <code>sub_1</code></span>
<span class="comment-copy">It seems you don't have a package with subpackages, you have directories containing a bunch of ifles. If <code>mymodule</code> was a package, the directory containing it shoud be on <code>sys.path</code>, every directory below it should have an <code>__init__.py</code> and your shoudn't try call a script inside it. A lounch script should be on the same level as the top level directory and basically just import the entry point and call it.</span>
<span class="comment-copy">thanks digitake. the dot worked its magic. if you could add as reply, I can accept</span>
