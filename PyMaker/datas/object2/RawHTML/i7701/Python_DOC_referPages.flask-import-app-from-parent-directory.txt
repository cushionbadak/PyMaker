<div class="post-text" itemprop="text">
<p>I have an app structured like so:</p>
<pre><code>name
    -app.py
    -__init__.py
    -folder1
            -views.py
            -models.py
            -__init__.py
</code></pre>
<p>The content of my app.py:</p>
<pre><code>from flask import Flask
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

if __name__ == '__main__':
    app.run('0.0.0.0')
</code></pre>
<p>And <strong>init</strong>.py in the name folder is:</p>
<pre><code>from app import app
</code></pre>
<p>How would I import this app into views.py? Currently, I'm using </p>
<pre><code>from name import app
from models import Class1
app.add_url_rule('/', view_func=Class1.as_view('class1'))
</code></pre>
<p>, but then when I run the app it returns a 404 error.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is what I did to my apps:</p>
<p>In <code>__init__.py</code>:</p>
<pre><code>from .app import app

with app.app_context():
    from .folder1 import models, views  # noqa
</code></pre>
<p>In <code>folder1/views.py</code>:</p>
<pre><code>from flask import current_app as app
# then use `app` as usual
from .models import Class1
app.add_url_rule('/', view_func=Class1.as_view('class1'))
</code></pre>
<p>The "<code>app_context()</code>" injects the current <code>app</code> object into the <code>current_app</code> proxy. Read <a href="http://flask.pocoo.org/docs/0.12/appcontext/" rel="nofollow noreferrer">this</a> to understand the mechanism.</p>
<p>Also <a href="https://docs.python.org/3/whatsnew/2.5.html#pep-328" rel="nofollow noreferrer">it is recommended</a> to explicitly use relative imports (with the extra dots "<code>.</code>").</p>
</div>
