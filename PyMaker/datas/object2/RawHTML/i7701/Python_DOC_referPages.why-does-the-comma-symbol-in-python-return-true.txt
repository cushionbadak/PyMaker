<div class="post-text" itemprop="text">
<p>I am wondering why the comma symbol "," returns true:</p>
<pre><code>mutant = toolbox.clone(ind1)
ind2, = tools.mutGaussian(mutant, mu=0.0, sigma=0.2, indpb=0.2)
print (ind2 is mutant)
&gt;&gt;&gt;True
</code></pre>
<p>But when I remove the comma symbol:</p>
<pre><code>ind2 = tools.mutGaussian(mutant, mu=0.0, sigma=0.2, indpb=0.2)
print (ind2 is mutant)
&gt;&gt;&gt;False
</code></pre>
<p>it returns false. 
It would be very thankful if anyone could explain the mechanism behind this.   </p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://deap.readthedocs.io/en/master/api/tools.html#deap.tools.mutGaussian" rel="nofollow noreferrer"><code>deap.tools.mutGaussian()</code> function</a> you are calling returns a <em>tuple</em> containing a single value:</p>
<blockquote>
<p><strong>Returns</strong>:  A tuple of one individual.</p>
</blockquote>
<p>When you leave off the comma, you are assigning the resulting tuple to a single variable.</p>
<p><em>With</em> the comma, you are asking Python to unpack the iterable on the right-hand-side into a series of names on the left; because both the left-hand side and the right-hand-side have just one element, this work. You unpacked the value <em>in</em> the returned tuple into a single variable.</p>
<p>See the <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer"><em>Assignment statements</em> reference documenation</a>:</p>
<blockquote>
<p>An assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right.</p>
</blockquote>
<p>If you wanted to test that single value without using iterable assignment, you'll have to manually get that one value out of the tuple:</p>
<pre><code>ind2 = tools.mutGaussian(mutant, mu=0.0, sigma=0.2, indpb=0.2)
print(ind2[0] is mutant)
</code></pre>
<p>Note the <code>[0]</code> indexing.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you declare or assign variables with a comma, you're creating a <a href="https://www.tutorialspoint.com/python/python_tuples.htm" rel="nofollow noreferrer">tuple</a>.</p>
</div>
<span class="comment-copy">You are assigning an iterable containing one element to a <i>tuple</i> of names.</span>
<span class="comment-copy">In other words, in your second version, <code>ind2[0] is mutant</code> will work.</span>
<span class="comment-copy">Type just <code>ind2</code> to see exactly what the variable holds in each case. You'll see it's two similar, but different values.</span>
<span class="comment-copy">From the <a href="http://deap.readthedocs.io/en/master/api/tools.html#deap.tools.mutGaussian" rel="nofollow noreferrer"><code>mutGaussian()</code> documentation</a>: <b><i>Returns:</i></b> A tuple of one individual</span>
<span class="comment-copy">Thanks for the reminder, and the difference is due to the list and tuple.</span>
