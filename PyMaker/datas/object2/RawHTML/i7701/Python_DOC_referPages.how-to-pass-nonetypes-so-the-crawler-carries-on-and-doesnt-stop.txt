<div class="post-text" itemprop="text">
<p>The below come's up with the error: 
    "if soup.find(text=bbb).parent.parent.get_text(strip=True
AttributeError: 'NoneType' object has no attribute 'parent'"</p>
<p>Any help would be appreciated as I can't quite get it to run fully, python only returns results up to the error, I need it to return empty if there is no item and move on. I tried putting a IF statement but that doesnt work. </p>
<pre><code>import csv
import re
import requests
from bs4 import BeautifulSoup

f = open('dataoutput.csv','w', newline= "")
writer = csv.writer(f)

def trade_spider(max_pages):
    page = 1
    while page &lt;= max_pages:
        url = 'http://www.zoopla.co.uk/for-sale/property/nottingham/?price_max=200000&amp;identifier=nottingham&amp;q=Nottingham&amp;search_source=home&amp;radius=0&amp;pn=' + str(page) + '&amp;page_size=100'
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text)
        for link in soup.findAll('a', {'class': 'listing-results-price text-price'}):
            href = "http://www.zoopla.co.uk" + link.get('href')
            title = link.string 
            get_single_item_data(href) 
        page += 1

def get_single_item_data(item_url): 
    source_code = requests.get(item_url)
    plain_text = source_code.text
    soup = BeautifulSoup(plain_text)

    for item_e in soup.findAll('table', {'class' : 'neither'}):
        Sold = item_e.get_text(strip=True)

bbb = re.compile('First listed')
    try:
        next_s = soup.find(text=bbb).parent.parent.get_text(strip=True)  
    except:  
        Pass

try:
 writer.writerow([ Sold, next_s])
except:
 pass

trade_spider(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your exception comes from trying to access an attribute on <code>None</code>. You don't intend to do that, but because some earlier part of your expression turns out to be <code>None</code> where you expected something else, the later parts break.</p>
<p>Specifically, either <code>soup.find(text=bbb)</code> or <code>soup.find(text=bbb).parent</code> is <code>None</code> (probably the former, since I think <code>None</code> is the returned value if <code>find</code> doesn't find anything).</p>
<p>There are a few ways you can write your code to address this issue. You could either try to detect that it's going to happen ahead of time (and do something else instead), or you can just go ahead and try the attribute lookup and react if it fails. These two approaches are often called "Look Before You Leap" (LBYL) and "Easier to Ask Forgiveness than Permission" (EAFP).</p>
<p>Here's a bit of code using an LBYL approach that checks to make sure the values are not <code>None</code> before accessing their attributes:</p>
<pre><code>val = soup.find(text=bbb)
if val and val.parent:   # I'm assuming the non-None values are never falsey
    next_s = val.parent.parent.get_text(strip=True) 
else:
    # do something else here?
</code></pre>
<p>The EAFP approach is perhaps simpler, but there's some risk that it could catch other unexpected exceptions instead of the ones we expect (so be careful using this design approach during development):</p>
<pre><code>try:
    next_s = soup.find(text=bbb).parent.parent.get_text(strip=True)
except AttributeError: # try to catch the fewest exceptions possible (so you don't miss bugs)
    # do something else here?
</code></pre>
<p>It's not obvious to me what your code should do in the "do something else here" sections in the code above. It might be that you can ignore the situation, but probably you'd need an alternative value for <code>next_s</code> to be used by later code. If there's no useful value to substitute, you might want to bail out of the function early instead (with a <code>return</code> statement).</p>
</div>
<span class="comment-copy">Assign <code>result = soup.find(...)</code> then check <code>if result:</code> before continuing to access attributes on it. Or <code>try:</code> and then <code>catch AttributeError:</code>. Or use <code>getattr</code>.</span>
<span class="comment-copy">Thanks, I'm very new to coding, can you input the examples you gave into the code I have, appreciate your help</span>
<span class="comment-copy">Then I'd recommend running through e.g. <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a> to get to grips with this basic syntax.</span>
<span class="comment-copy">the site didn't really help as I have tried the try and except rule and if I put that on the next_s statement or the writer statement it still returns the error, any idea? thanks</span>
<span class="comment-copy">That's not a terribly helpful description. If you want help, <a href="https://stackoverflow.com/posts/44639222/edit">edit</a> to provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Thanks Blckknght, appreciate your help</span>
