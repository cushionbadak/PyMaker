<div class="post-text" itemprop="text">
<p>I would like to get the unix file type of a file specified by path (find out whether it is a regular file, a named pipe, a block device, ...)</p>
<p>I found in the docs <code>os.stat(path).st_type</code> but in Python 3.6, this seems not to work.</p>
<p>Another approach is to use <code>os.DirEntry</code> objects (e. g. by <code>os.listdir(path)</code>), but there are only methods <code>is_dir()</code>, <code>is_file()</code> and <code>is_symlink()</code>.</p>
<p>Any ideas how to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.6 has <code>pathlib</code> and its <code>Path</code> objects have methods:</p>
<ul>
<li><code>is_dir()</code></li>
<li><code>is_file()</code></li>
<li><code>is_symlink()</code></li>
<li><code>is_socket()</code></li>
<li><code>is_fifo()</code></li>
<li><code>is_block_device()</code></li>
<li><code>is_char_device()</code></li>
</ul>
<p><code>pathlib</code> takes a bit to get used to (at least for me having come to Python from C/C++ on Unix), but it is a nice library</p>
</div>
<div class="post-text" itemprop="text">
<p>You use the <a href="https://docs.python.org/3/library/stat.html" rel="nofollow noreferrer"><code>stat</code></a> module to interpret the result of <code>os.stat(path).st_mode</code>.</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; import stat
&gt;&gt;&gt; stat.S_ISDIR(os.stat('/dev/null').st_mode)
False
&gt;&gt;&gt; stat.S_ISCHR(os.stat('/dev/null').st_mode)
True
</code></pre>
<p>You can make a general function to return the determined type. This works for both Python 2 and 3.</p>
<pre><code>import enum
import os
import stat

class PathType(enum.Enum):
    dir = 0  # directory
    chr = 1  # character special device file
    blk = 2  # block special device file
    reg = 3  # regular file
    fifo = 4  # FIFO (named pipe)
    lnk = 5  # symbolic link
    sock = 6  # socket
    door = 7  # door  (Py 3.4+)
    port = 8  # event port  (Py 3.4+)
    wht = 9  # whiteout (Py 3.4+)

    unknown = 10

    @classmethod
    def get(cls, path):
        if not isinstance(path, int):
            path = os.stat(path).st_mode
        for path_type in cls:
            method = getattr(stat, 'S_IS' + path_type.name.upper())
            if method and method(path):
                return path_type
        return cls.unknown

PathType.__new__ = (lambda cls, path: cls.get(path))
</code></pre>
<pre><code>&gt;&gt;&gt; PathType('/dev/null')
&lt;PathType.chr: 1&gt;
&gt;&gt;&gt; PathType('/home')
&lt;PathType.dir: 0&gt;
</code></pre>
</div>
<span class="comment-copy">I absolutely did not know about this one. I just opened the docs and it looks nice, thank you. Just to save a google search for the others: <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">docs.python.org/3/library/pathlib.html</a></span>
<span class="comment-copy">It is also available as an installable package for Python 2. I have published <a href="https://pypi.python.org/pypi/ruamel.std.pathlib" rel="nofollow noreferrer"><code>ruamel.std.pathlib</code></a> on PyPI, which has a few extensions on <code>Path</code>, and a"PathLibConversionHelper" class that can assist in transitioning.</span>
