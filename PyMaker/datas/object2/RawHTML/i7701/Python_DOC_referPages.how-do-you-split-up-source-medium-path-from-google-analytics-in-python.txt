<div class="post-text" itemprop="text">
<p>I have a year worth of data from Google Analytics Multi-Attribute Funnel API. Example below. The Source Medium comes in with varying lengths and I am looking for ways to create a new column for each channel as "&gt;" the delimiter. </p>
<pre><code>20160101    google / organic
20160101    bing / organic
20160101    google / organic &gt; google / organic
20160101    google / organic &gt; google / organic
20160101    (direct) / (none) &gt; (direct) / (none)
20160101    (direct) / (none) &gt; online.fliphtml5.com / referral
20160101    google / organic &gt; google / organic &gt; (direct) / (none)
20160101    google / organic &gt; (direct) / (none) &gt; google / organic
20160101    google / organic &gt; online.fliphtml5.com / referral &gt; (direct) / (none)
20160101    (direct) / (none) &gt; (direct) / (none) &gt; (direct) / (none)
20160101    pinterest.com / referral &gt; (direct) / (none) &gt; (direct) / (none)
20160101    google / organic &gt; (direct) / (none) &gt; (direct) / (none) &gt; google / organic
20160101    bing / organic &gt; (direct) / (none) &gt; (direct) / (none) &gt; (direct) / (none)
20160101    google / organic &gt; (direct) / (none) &gt; (direct) / (none) &gt; (direct) / (none)
</code></pre>
<p>An example is below of what format I would like the data. How would this be done in Python?</p>
<pre><code>Source_Med_Path_1 Source_Med_Path_2....Source_Med_Path_72
google / cpc          direct            google / organic
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do it using Pandas and apply() functions.</p>
<p><a href="http://pandas.pydata.org/pandas-docs/version/0.18.1/generated/pandas.Series.apply.html" rel="nofollow noreferrer">http://pandas.pydata.org/pandas-docs/version/0.18.1/generated/pandas.Series.apply.html</a></p>
<p>My code that takes the source mediums from csv but could just as easily use for API results.</p>
<pre><code>import pandas as pd


def main():
    #read original data from csv
    data = pd.read_csv('source.csv')

    #split the data on identifier &gt;
    splitdata = data['source'].apply(lambda x: pd.Series(x.split('&gt;')))
    #join the split data onto transaction data
    data = pd.concat([data['transaction'], splitdata], axis=1, join_axes=[data['transaction'].index])   


    #loop through renaming columns
    cols = ['transaction']    
    for i in range(len(data.columns) -1):
        cols.append('Source_Med_Path_' + str(i+1))

    data.columns = cols        


    #output data    
    print(data)
    data.to_csv('output.csv')

if __name__ == '__main__':
    main()
</code></pre>
</div>
<span class="comment-copy">Have you taken a look at Python's <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">split</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">replace</a> methods?</span>
