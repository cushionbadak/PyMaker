<div class="post-text" itemprop="text">
<p>Good day! I have question about python dictionary and json! At one file i am creating json dictionary with this structure:</p>
<pre><code>{"face_1": {"face_rect": "(127, 68, 177, 177)", "Age": 1, "Gender": 1}}
</code></pre>
<p>For it  use this code (i - number of faces, (x,y,w,h) - rect. of coord.):</p>
<pre><code>for i, (x, y, w, h) in enumerate(faces):
        face = dict()
        face["face_{}".format(i + 1)] =  {"face_rect": str((x, y, w, h)), "Age": 1, "Gender": 1}
        with open('face.json', 'a') as fp:
            data_to_write = json.dumps(face)
            fp.write(data_to_write + '\n')
</code></pre>
<p>Before this part all is great. My question - how i can open this dictionary (face.json) at the another py file and CHANGE value of 'Age', 'Gender' and save it? 
Thank you for your time! </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer"><code>json.load</code></a> in order to load the dictionary:</p>
<pre><code>with open('face.json') as fp:
    data = json.load(fp)

# Make some modifications here.
</code></pre>
<p>Then you can save the data again using <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer"><code>json.dump</code></a>:</p>
<pre><code>with open('face.json', 'w') as fp:
    json.dump(data, fp)
</code></pre>
<p>Note that there is no need to invoke <code>fp.write</code> manually as <code>json.dump</code> handles this already for you. Also when opening the file you want to use mode <code>'w'</code> instead of <code>'a'</code> because otherwise you don't overwrite the old data but instead just append the new dictionary to the end. This will also invalidate the json format.</p>
</div>
<span class="comment-copy">Suggest using <code>json.load</code> as you already know <code>json.dumps</code> - maybe even directly use <code>json.dump</code> with the file as target? B.t.w. as you only use <code>i</code> as <code>i + 1</code> once in your code, maybe consider using <code>... enumerate(faces, start=1):</code> right from the start.</span>
