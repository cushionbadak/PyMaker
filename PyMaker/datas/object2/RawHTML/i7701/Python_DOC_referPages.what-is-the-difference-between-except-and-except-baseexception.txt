<div class="post-text" itemprop="text">
<p>What is the difference between those two:</p>
<pre><code>except:
    # do something
</code></pre>
<p>and </p>
<pre><code>except BaseException as be:
    print(be)
</code></pre>
<p>I mean in the first case all possible exception are caught, but is this true for the second?</p>
<p>Also can the error message be printed using the first case?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Practically speaking</strong>, there is <em>no difference</em> between <code>except:</code> and <code>except BaseException:</code>, for any current Python release.</p>
<p>That's because you can't just raise any type of object as an exception. The <a href="https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement" rel="noreferrer"><code>raise</code> statement</a> explicitly disallows raising anything else:</p>
<blockquote>
<p>[...] raise evaluates the first expression as the exception object. <strong>It must be either a subclass or an instance of <code>BaseException</code>.</strong></p>
</blockquote>
<p>Bold emphasis mine. This has not always been the case however, in older Python releases (2.4 and before) you could use <em>strings</em> as exceptions too.</p>
<p>The advantage then is that you get to have easy access to the caught exception. <em>In order to be able to add <code>as targetname</code></em>, you <em>must</em> catch a specific class of exceptions, and only <code>BaseException</code> is going to do that.</p>
<p>You can still access the currently active exception by using <a href="https://docs.python.org/3/library/sys.html#sys.exc_info" rel="noreferrer"><code>sys.exc_info()</code></a> though:</p>
<pre><code>except:
    be = sys.ext_info()[1] 
</code></pre>
<p>Pick what you feel is more readable for your future self and your colleagues.</p>
</div>
<span class="comment-copy">Unless you haven't put something like <code>BaseException = ValueError</code> before ;-) <code>except:</code> guarantees to always except any error.</span>
<span class="comment-copy">@a_guest: yes, the <i>name</i> can still be rebound. <code>builtins.BaseException</code> is a nice fallback, but not foolproof either.</span>
<span class="comment-copy">how is <code>except Exception</code> different from <code>except BaseException</code>?</span>
<span class="comment-copy">@MaggieYing: <code>Exception</code> is a subclass of <code>BaseException</code>, but it is not the only such subclass. There are other subclasses too, see the <a href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy" rel="nofollow noreferrer">inheritance diagram in the docs</a>; those other exceptions are not really errors but signals that you <i>usually</i> would not catch.</span>
<span class="comment-copy">Thanks @MartijnPieters, the diagram is very helpful!</span>
