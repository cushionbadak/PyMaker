<div class="post-text" itemprop="text">
<p>I am trying to find the date of the newest file in a directory, based on some Python code I shamelessly found on this site.</p>
<pre><code>def newest_file_in_tree(rootfnewer, extension=".avi"):
    return max(
        (os.path.join(dirname, filename)
        for dirname, dirnames, filenames in os.walk(rootfnewer)
        for filename in filenames
        if filename.endswith(extension)),
        key=lambda fn: os.stat(fn).st_mtime)
</code></pre>
<p>This works, but fails on empty directories.</p>
<pre><code>    key=lambda fn: os.stat(fn).st_mtime)
ValueError: max() arg is an empty sequence
</code></pre>
<p>I concede that I am a Python beginner, and the last line is way beyond my pay grade.</p>
<p>Can anyone suggest how I can trap the error and prevent the function from crashing? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can separate out that monstrously pythonic one liner into two separate lines, to make sure that <code>max</code> is called only when you have a non-empty list of files from which you pick the newest one:</p>
<pre><code>def newest_file_in_tree(rootfnewer, extension=".avi"):
    files = [os.path.join(dirname, filename)
        for dirname, dirnames, filenames in os.walk(rootfnewer)
        for filename in filenames
        if filename.endswith(extension)]

    if files:
        return max(files, key=lambda fn: os.stat(fn).st_mtime)

    return None
</code></pre>
<p>Not as pretty as @hiroprotagonist's solution, but is more readable.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3.5/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> has a <code>default</code> keyword:</p>
<pre><code>m = max([], key=lambda x: abs(x), default='emtpy...')
print(m) # 'emtpy...'
</code></pre>
<p>the <code>default</code> will be returned if the iterable is empty. without the <code>default</code> this would raise a <code>ValueError</code>.</p>
<hr/>
<p>a different way for you to go would be to use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob</code></a> in order to list the files:</p>
<pre><code>import os
from glob import glob

def newest_file_in_tree(rootdir, ext='.avi'):
    glob_wildcard = os.path.join(rootdir, '**/*{}'.format(ext))
    glob_gen = glob(glob_wildcard, recursive=True)
    return max(glob_gen, key=lambda fn: os.stat(fn).st_mtime, default='?')
</code></pre>
<p>or even more concise with <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a>:</p>
<pre><code>from pathlib import Path

def newest_file_in_tree(rootpath, ext='.avi'):
    return max(Path(rootpath).glob('**/*{}'.format(ext)),
               key=lambda pth: pth.stat().st_mtime, default='?')
</code></pre>
</div>
<span class="comment-copy">@TimPietzcker Yesss! Testing the truthiness of an empty list. Updated, thank you.</span>
<span class="comment-copy">I like this because it unclutters the code and is nicely explicit about what is happening.</span>
<span class="comment-copy">@TimPietzcker Agreed. An even nicer (albeit less pythonic) solution would be removing the nested loops from that comprehension!</span>
<span class="comment-copy">Thanks; I prefer readable code myself.</span>
<span class="comment-copy">Cool. Did not know this.</span>
<span class="comment-copy">Thanks, I tested this and it worked, but I normally use Python 2 (macOS does not come with Python3 by default!) which does not have the default (also not mentioned in <code>Learning Python</code>)</span>
<span class="comment-copy">@Milliways: you are right, this is new in python 3. did not consider that...</span>
