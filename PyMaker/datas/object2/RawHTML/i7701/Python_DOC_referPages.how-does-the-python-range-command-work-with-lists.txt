<div class="post-text" itemprop="text">
<p>Hey everyone i have this issue here, i really can't make out what the problem is. 
I know that range(2) gives 0 and 1 for possible i. len(R) = 2. And lists starts with 0.</p>
<pre><code>R = [[1,1],[5,5]]
for i in range(len(R)):
    if R[i][0] == R[i][1]:     
        R.remove(R[i])
</code></pre>
<p>the error:</p>
<pre><code>if R[i][0] == R[i][1]:

IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>R = [[1,1],[5,5]]
R = [x for x in R if x[0] != x[1]]
</code></pre>
<p>It should be != instead of == since he wants to get the numbers that are not identical.</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, It's much easier to iterate over the items in the list:</p>
<pre><code>Removal_items =[]
for I in R:
  #I is now a variable that represents the object in the list, or I = R[0]...R[n] where n = len(r) -1
  if I[0] == I[1]:
  Removal_items.append(I)

for I in Removal_items:
  R.remove(I)
</code></pre>
</div>
<span class="comment-copy">When you <b>remove</b> from the list, its size shrinks</span>
<span class="comment-copy">Oh yeah, ofcourse!</span>
<span class="comment-copy">Consider using <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> for deleting items from a collection based on a simple predicate on item, in your case f.e. <code>filter(lambda r: r[0] != r[1], R)</code></span>
<span class="comment-copy">Thanks for correction, Lukas.</span>
<span class="comment-copy">Oh that is of course another possibility to look at it! Thanks! I will try that!</span>
<span class="comment-copy">Nope, this won't work. It'll skip items after each removal.</span>
<span class="comment-copy">See eg <a href="https://stackoverflow.com/questions/6260089/strange-result-when-removing-item-from-a-list" title="strange result when removing item from a list">stackoverflow.com/questions/6260089/â€¦</a> for why this does not work.</span>
<span class="comment-copy">Thanks guys i see now why this indeed does not work!</span>
<span class="comment-copy">Ok this won't run verbatim but the idea is there. I'll fix er up</span>
