<div class="post-text" itemprop="text">
<p>I am new to Python,I am writing a simple program </p>
<p>Input</p>
<pre><code>{'messagingservice': 'build4', 
 'oltpdatabase': 'build1', 
 'paymentsdatabase': 'build2', 
 'restserver': 'build5', 
 'PESQL': 'build3', 
 'configdatabase': 'build1'} 
</code></pre>
<p>expected output is as below</p>
<pre><code>{'build4': 'messagingservice', 
 'build5': 'restserver', 
 'build2': 'paymentsdatabase', 
 'build3': 'PESQL', 
 'build1': 'oltpdatabase,configdatabase '}
</code></pre>
<p>Below is the code I have used ...</p>
<pre><code>#!/usr/bin/python
import json
import ast
from sys import argv
data = json.dumps(argv[1]);
json_to_unicode = json.loads(data)
unicode_to_dic = ast.literal_eval(json_to_unicode);
print(unicode_to_dic);
result_dic={};
data='';
for k,v in unicode_to_dic.iteritems():
  if v in result_dic:
    data=data.join((result_dic[v],','));
    print (data)
    result_dic[v]=data

  else:
    result_dic[v]=k;

print(result_dic)
</code></pre>
<p>Actual output is:</p>
<pre><code>{'build4': 'messagingservice', 
 'build5': 'restserver', 
 'build2': 'paymentsdatabase', 
 'build3': 'PESQL', 
 'build1': 'oltpdatabase,'}
</code></pre>
<p>Missing one more value. </p>
</div>
<div class="post-text" itemprop="text">
<p>your join did not join the new item</p>
<pre><code>result_dic={}
data=''
for k,v in d.iteritems():
   if v in result_dic.keys():
      data=data.join((result_dic[v],', ',k))
      result_dic[v]=data
   else:
      result_dic[v]=k

print(result_dic)
</code></pre>
<p>returns</p>
<pre><code>{'build4': 'messagingservice', 'build5': 'restserver', 'build2':   'paymentsdatabase', 'build3': 'PESQL', 'build1': 'oltpdatabase, configdatabase'}
</code></pre>
<p>you could also use <code>collections.Counter</code></p>
<pre><code>from collections import Counter
new =Counter() 
d={'messagingservice': 'build4', 'oltpdatabase': 'build1', 'paymentsdatabase': 'build2', 'restserver': 'build5', 'PESQL': 'build3','configdatabase': 'build1'} 
for k,v in d.items():
    if new[v]:
        new[v]+=', '+k
    else:
        new[v]=k
print new
</code></pre>
<p>returns</p>
<pre><code>Counter({'build1': 'oltpdatabase, configdatabase',
         'build2': 'paymentsdatabase',
         'build3': 'PESQL',
         'build4': 'messagingservice',
         'build5': 'restserver'})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a>, that could make the program much easier:</p>
<pre><code>unicode_to_dic = {
 'messagingservice': 'build4', 
 'oltpdatabase': 'build1', 
 'paymentsdatabase': 'build2', 
 'restserver': 'build5', 
 'PESQL': 'build3', 
 'configdatabase': 'build1'}

from collections import defaultdict

res = defaultdict(list)

# find all keys that have the same value
for key, value in unicode_to_dic.items():
    res[value].append(key)

# convert the list of keys to a string seperated by ','
for key, value in res.items():
    res[key] = ','.join(value)

# Convert it to  a normal dict - that's optional because defaultdict behaves just
# like a normal dict (in most circumstances at least).
dict(res)

# {'build1': 'oltpdatabase,configdatabase',
#  'build2': 'paymentsdatabase',
#  'build3': 'PESQL',
#  'build4': 'messagingservice',
#  'build5': 'restserver'}
</code></pre>
<p>I haven't debugged your algorithm but there are several things that stand out:</p>
<ul>
<li><p>Python doesn't need <code>;</code> at the end of lines.</p></li>
<li><p><code>str.join</code> is actually called as <code>seperator.join(list_of_words_to_be_joined)</code>. You used the seperator as input for the function.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>data.join</code> doesn't do what you think. What you want is:</p>
<pre><code>result_dic[v] += ',' + k
</code></pre>
</div>
<span class="comment-copy">Can you provide a short explanation of what this code is supposed to do?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/14611352/malformed-string-valueerror-ast-literal-eval-with-string-representation-of-tup">Malformed String ValueError ast.literal_eval() with String representation of Tuple</a></span>
<span class="comment-copy">Thanks a lot , I spent whole day to crack this .. :)</span>
<span class="comment-copy">@VetrivelkumarPandi No problem. Don't forget to <a href="https://stackoverflow.com/help/privileges/vote-up">upvote</a> all helpful answers and <a href="https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">accept</a> the most helpful one.</span>
