<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters">What does ** (double star/asterisk) and * (star/asterisk) do for parameters?</a>
<span class="question-originals-answer-count">
                    18 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to parse a json file, Suppose the function that is called takes in the json path from a variable called <code>section1</code></p>
<pre><code>def traverseJson(arg1):
    #do stuff

section1 = json["section"]["section"][1]
</code></pre>
<p>To call the function I'd run:</p>
<pre><code>traverseJson(section1)
</code></pre>
<p>How would I then pass in multiple arguments into the function? e.g</p>
<pre><code>section2 = json["section"]["subsection"][0]
section3 = json["section"]["subsection"][0]
</code></pre>
<p>A solution which does not predefine the number of arguments will be more suitable as the number of arguments can vary.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>*args</code> syntax:</p>
<pre><code>def traverse(*args):
    for arg in args:
        # logic
</code></pre>
<hr/>
<p><strong>UPDATE: Usage</strong></p>
<pre><code>section1 = ...
section2 = ...
traverse(section1, section2)

# or

sections = [..., ...]
traverse(*sections) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can pass this kind of arguments as an array or as a dictionary (keyword map).</p>
<p>To pass as an array use <code>*</code> operator, to pass as a hash, use <code>**</code> operator.</p>
<p>Example:</p>
<pre><code>def function(first_arg, *args, **kwargs): 
  # something
</code></pre>
<p>Read more <a href="https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists" rel="nofollow noreferrer">here</a> and <a href="https://docs.python.org/2/library/operator.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you know the maximum number of args an un-pythonic way of doing it would be</p>
<pre><code>def traverseJson(arg1=0, arg2=0, arg3=0, arg4=0):
</code></pre>
<p>If four arguments aren't given it just assigns 0 to the remaining variables.</p>
<p>However, I would recommend passing the arguments as a list. e.g.</p>
<pre><code>def traverseJson(arg1) :
    for i in arg1:
        #do stuff

traverseJson([section1, section2, section3])
</code></pre>
<p>Hope this helps</p>
</div>
