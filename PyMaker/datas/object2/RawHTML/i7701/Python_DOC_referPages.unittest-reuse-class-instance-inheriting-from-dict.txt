<div class="post-text" itemprop="text">
<p>I am facing a strange issue where <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer">unittest</a> is re-using the same class instance if it is inheriting from a dict.</p>
<p>My actual class does not directly inherit from <code>dict</code> but from <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping" rel="nofollow noreferrer">MutableMapping</a> and the behavior is the same.</p>
<pre><code>import unittest


class MyClass(dict):
    pass


class TestMyClass(unittest.TestCase):
    def test_myclass_1(self):
        mc = MyClass()
        print(id(mc))

    def test_myclass_2(self):
        mc = MyClass()
        print(id(mc))

    def test_myclass_3(self):
        mc = MyClass()
        print(id(mc))

    def test_myclass_4(self):
        mc = MyClass()
        print(id(mc))
</code></pre>
<p>Then when running this, we can see that the same object instance is re-used:</p>
<pre><code>$ python3 -m unittest -v test.py                                                                                                                           
test_myclass_1 (test.TestMyClass) ... 140057337562040
ok
test_myclass_2 (test.TestMyClass) ... 140057337562128
ok
test_myclass_3 (test.TestMyClass) ... 140057337562040
ok
test_myclass_4 (test.TestMyClass) ... 140057337562128
ok
</code></pre>
<p>What is going on?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the python 3 documentation of <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><strong>id()</strong></a>:</p>
<blockquote>
<p>Return the “identity” of an object. This is an integer which is guaranteed to be unique and constant for this object during its lifetime. <strong>Two objects with non-overlapping lifetimes may have the same id() value.</strong></p>
</blockquote>
<p>Your test cases are executed one after another, which means that two instance of MyClass is non-overlapping objects as pointed in documentation the id isn't guaranteed to be unique for such case.</p>
<p><strong>Good Luck ! :)</strong> </p>
</div>
<span class="comment-copy">What makes you think it's the same instance? It isn't; Python is just reusing a spare memory location.</span>
<span class="comment-copy">@DanielRoseman In my example the <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer">id</a> is the same, so there are enormous chances that this is the same object. Also if I set a value in one of the <code>MyClass</code> instance it shows up in the other test.</span>
<span class="comment-copy">Sorry, I just forgot a <code>deepcopy</code> somewhere. ;)</span>
