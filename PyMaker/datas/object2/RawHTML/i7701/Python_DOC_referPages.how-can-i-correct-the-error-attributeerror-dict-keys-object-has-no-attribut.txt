<div class="post-text" itemprop="text">
<p>I was trying shortest path finder using dijkstra algorithm but It seems not working. Can't figure out what the problem is. Here are the code and the error message. 
(I'm working on Python 3.5. <a href="https://www.youtube.com/watch?v=LHCVNtxb4ss" rel="noreferrer">https://www.youtube.com/watch?v=LHCVNtxb4ss</a>)</p>
<pre><code>graph = {
    'A': {'B': 10, 'D': 4, 'F': 10},
    'B': {'E': 5, 'J': 10, 'I': 17},
    'C': {'A': 4, 'D': 10, 'E': 16},
    'D': {'F': 12, 'G': 21},
    'E': {'G': 4},
    'F': {'E': 3},
    'G': {'J': 3},
    'H': {'G': 3, 'J': 3},
    'I': {},
    'J': {'I': 8},
}

def dijkstra(graph, start, end):
    D = {}
    P = {}
    for node in graph.keys():
        D[node]= -1
        P[node]=""
    D[start]=0
    unseen_nodes=graph.keys()
    while len(unseen_nodes) &gt; 0:
        shortest=None
        node=' '
        for temp_node in unseen_nodes:
            if shortest==None:
                shortest = D[temp_node]
                node = temp_node
            elif D[temp_node]&lt;shortest:
                    shortest=D[temp_node]
                    node=temp_node
        unseen_nodes.remove(node)
        for child_node, child_value in graph[node].items():
            if D[child_node] &lt; D[node] + child_value:
                D[child_node] = D[node] + child_value
                P[child_node]=node
    path = []
    node = end
    while not (node==start):
        if path.count(node)==0:
            path.insert(0, node)
            node=P[node]
        else:
            break
    path.insert(0, start)
    return path
</code></pre>
<p>AttributeError: 'dict_keys' object has no attribute 'remove'</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="noreferrer"><code>dict.keys()</code></a> returns <a href="https://docs.python.org/3/library/stdtypes.html#dict-views" rel="noreferrer">a dict_keys object (a view of the dictionary)</a> which does not have <code>remove</code> method; unlike Python 2, where <code>dict.keys()</code> returns a list object.</p>
<pre><code>&gt;&gt;&gt; graph = {'a': []}
&gt;&gt;&gt; keys = graph.keys()
&gt;&gt;&gt; keys
dict_keys(['a'])
&gt;&gt;&gt; keys.remove('a')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'dict_keys' object has no attribute 'remove'
</code></pre>
<p>You can use <code>list(..)</code> to get a keys list:</p>
<pre><code>&gt;&gt;&gt; keys = list(graph)
&gt;&gt;&gt; keys
['a']
&gt;&gt;&gt; keys.remove('a')
&gt;&gt;&gt; keys
[]
</code></pre>
<hr/>
<pre><code>unseen_nodes = graph.keys()
</code></pre>
<p>to</p>
<pre><code>unseen_nodes = list(graph)
</code></pre>
</div>
