<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15008758/parsing-boolean-values-with-argparse">Parsing boolean values with argparse</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>Here is the simplest Python script, named test.py:</p>
<pre><code>import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--bool', default=True, type=bool, help='Bool type')
args = parser.parse_args()
print(args.bool)
</code></pre>
<p>But when I run this code on the command line:</p>
<pre><code>python test.py --bool False
True
</code></pre>
<p>Whereas when my code reads <code>'--bool', default=False</code>, the argparse runs correctly.</p>
<p>Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are not passing in the <code>False</code> object. You are passing in the <code>'False'</code> string, and that's a string of non-zero length.</p>
<p>Only a string of length 0 tests as false:</p>
<pre><code>&gt;&gt;&gt; bool('')
False
&gt;&gt;&gt; bool('Any other string is True')
True
&gt;&gt;&gt; bool('False')  # this includes the string 'False'
True
</code></pre>
<p>Use a <a href="https://docs.python.org/3/library/argparse.html#action" rel="noreferrer"><code>store_true</code> or <code>store_false</code> action</a> instead. For <code>default=True</code>, use <code>store_false</code>:</p>
<pre><code>parser.add_argument('--bool', default=True, action='store_false', help='Bool type')
</code></pre>
<p>Now omitting the switch sets <code>args.bool</code> to <code>True</code>, using <code>--bool</code> (with no further argument) sets <code>args.bool</code> to <code>False</code>:</p>
<pre><code>python test.py
True

python test.py --bool
False
</code></pre>
<p>If you <em>must</em> parse a string with <code>True</code> or <code>False</code> in it, you'll have to do so explicitly:</p>
<pre><code>def boolean_string(s):
    if s not in {'False', 'True'}:
        raise ValueError('Not a valid boolean string')
    return s == 'True'
</code></pre>
<p>and use that as the conversion argument:</p>
<pre><code>parser.add_argument('--bool', default=True, type=boolean_string, help='Bool type')
</code></pre>
<p>at which point <code>--bool False</code> will work as you expect it to.</p>
</div>
