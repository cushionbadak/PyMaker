<div class="post-text" itemprop="text">
<p>I have a list of postcodes, e.g.</p>
<pre><code>DD1 1DB
DD1 5PH
DD10 8JG
DD10 9LJ
</code></pre>
<p>What I would like to do is keep the first representative, depending on the first part of the postcode e.g.</p>
<p>I need to keep:</p>
<pre><code>DD1 1DB
DD10 8JG
</code></pre>
<p>I am using pandas and imported the file.csv containing column POSTCODES as:</p>
<pre><code>df = pandas.read_csv('file.csv')
pc = df.POSTCODES
</code></pre>
<p>Now I am completely stuck. I managed to get it working using Excel (is this the better option?) but I would like to learn python and decided to see if I can do it in python. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://pandas.pydata.org/pandas-docs/stable/text.html#indexing-with-str" rel="nofollow noreferrer"><code>df['POSTCODES'].str[:4]</code></a> to obtain the first four characters,
and use the <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.duplicated.html" rel="nofollow noreferrer"><code>duplicated</code> method</a> to identify duplicates:</p>
<pre><code>In [89]: df.loc[~df['POSTCODES'].str[:4].duplicated(keep='first')]
Out[89]: 
  POSTCODES
0   DD1 1DB
2  DD10 8JG
</code></pre>
<p>Since <code>duplicated(keep='first')</code> marks duplicates as True, the row we wish to keep would be marked False. So to select the False rows with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.loc.html" rel="nofollow noreferrer"><code>df.loc</code></a>, the <code>~</code> is used to <a href="http://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing" rel="nofollow noreferrer">invert the boolean Series</a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>pc[~pc.POSTCODES.str.split(' ', expand=True)[0].duplicated()]
</code></pre>
<p>OR as piRSquared suggests in the comments:</p>
<pre><code>pc[~pc.POSTCODES.str.split().str[0].duplicated()]
</code></pre>
<p>Output:</p>
<pre><code>  POSTCODES
0   DD1 1DB
2  DD10 8JG
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>In[24]: f = '''\
   ...: DD1 1DB
   ...: DD1 5PH
   ...: DD10 8JG
   ...: DD10 9LJ'''.split('\n')
In[25]: d = {}
   ...: for line in f:
   ...:     left, right = line.split()
   ...:     if left not in d:
   ...:         d[left] = right
   ...: 
In[26]: d
Out[26]: {'DD1': '1DB', 'DD10': '8JG'}
</code></pre>
</div>
<span class="comment-copy">Please make an attempt.  If you do not need a Pandas DataFrame, you could easily do this with Python.  Check out <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a> - practice the examples given, eventually you will start getting ideas for solving your problem.</span>
<span class="comment-copy">What if you got up to <code>DD100</code> and <code>DD101</code>?</span>
<span class="comment-copy">The OP requests a solution based on the first four letters. But I agree, splitting may be a better solution.</span>
<span class="comment-copy">You are right... that is what OP said :-)</span>
<span class="comment-copy">I like <code>pc[~pc.POSTCODES.str.split().str[0].duplicated()]</code></span>
