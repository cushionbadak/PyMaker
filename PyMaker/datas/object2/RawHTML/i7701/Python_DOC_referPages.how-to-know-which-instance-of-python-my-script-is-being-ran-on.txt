<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1093322/how-do-i-check-what-version-of-python-is-running-my-script">How do I check what version of Python is running my script?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2589711/find-full-path-of-the-python-interpreter">Find full path of the Python interpreter?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>So I am trying to run a script from task scheduler. It has not been working and in the second that the terminal pops up and disappears, I was able to read it say "ImportError no Module named Pandas" My script imports Pandas fine and runs perfectly, but whenever I double click the script to run or schedule it to run automatically it is saying I do not have Pandas.</p>
<p>My theory is that it is using a different instance of Python that is installed on this computer that does not have the Pandas library installed. However, when i try to reinstall pandas on the command line using pip it sends back "requirement already satisfied". I would appreciate any advice or ideas for me to try. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/sys.html#sys.version_info" rel="nofollow noreferrer"><code>sys.version_info</code></a> and <a href="https://docs.python.org/3/library/sys.html#sys.version" rel="nofollow noreferrer"><code>sys.version</code></a> contain the version of Python that is being run. <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow noreferrer"><code>sys.executable</code></a> contains the path to the specific interpreter running.</p>
<p>Python3:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.version_info
sys.version_info(major=3, minor=4, micro=3, releaselevel='final', serial=0)
&gt;&gt;&gt; sys.version
'3.4.3 (default, Nov 17 2016, 01:08:31) \n[GCC 4.8.4]'
&gt;&gt;&gt; sys.executable
'/usr/bin/python3'
</code></pre>
<p>Python2:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.version_info
sys.version_info(major=2, minor=7, micro=6, releaselevel='final', serial=0)
&gt;&gt;&gt; sys.version
'2.7.6 (default, Oct 26 2016, 20:30:19) \n[GCC 4.8.4]'
&gt;&gt;&gt; sys.executable
'/usr/bin/python2'
</code></pre>
<p>The problem seems to be that your registry editor has set a different version set to run "on-click" for Python executables. You can fix that by running the Python installer for the version you want, and setting it to repair, or modifying "HKEY_CLASSES_ROOT\Python.File\Shell\open\command" to run the correct python executable (Should be "C:\Windows\py.exe"). See <a href="https://i.stack.imgur.com/dO4qJ.png" rel="nofollow noreferrer">this image</a> for where to find it.</p>
<p>If you are already using py.exe, adding a hashbang to the top of the file (<code>#!Python&lt;version&gt;</code>, or to work with Unix executables, <code>#!/usr/bin/env python&lt;version&gt;</code>) should help py.exe pick the correct executable to run.</p>
<p>To install using pip for a specific executable, run <code>Path\To\Executable -m pip install &lt;module&gt;</code>.</p>
<p>To use modules from a different site-path, add the directory to the PYTHONPATH environment variable. Using <code>import &lt;file&gt;</code> will check for modules in directories in the PYTHONPATH.</p>
</div>
<span class="comment-copy">You are right you are using different versions of Python. <code>python --version</code> will give you the default version of Python in your system. You can use a specific version of python by typing <code>python2.7</code> or <code>python3.5</code> in the terminal. This will give you terminal access to the specific python. Different python versions present in your system will be available in the path: <code>/usr/lib/python2.X</code>.</span>
