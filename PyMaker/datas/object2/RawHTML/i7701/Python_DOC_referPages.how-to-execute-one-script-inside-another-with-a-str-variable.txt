<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/301134/how-to-import-a-module-given-its-name">How to import a module given its name?</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p> </p>
<p>I had made a project manager for maya in python with Qtdesingner,
in the UI, a QLineEdit authorize the user to fill a path of a script to run (the variable is: <code>BatchRunScript</code>)
but it seems to not be possible to import a module if it's a variable (<code>str</code>):</p>
<pre class="lang-none prettyprint-override"><code>import maya.utils
BatchRunScript = 'X:\PathOfTheScript\NameOfScriptToRun.ScriptToRun()'
BatchRunScriptName = BatchRunScript.replace('\\', '/').split('/')[-1]
BatchRunScriptPath = BatchRunScript.replace('\\', '/').split(BatchRunScriptName)[0]
BatchRunModuleName = BatchRunScriptName.split('.')[0]       
print 'BatchRunScriptPath: ', BatchRunScriptPath    # X:/PathOfTheScript/
print 'BatchRunScriptName: ', BatchRunScriptName    # NameOfScriptToRun.ScriptToRun()
print 'BatchRunModuleName: ', BatchRunModuleName    # NameOfScriptToRun

sys.path.append(BatchRunScriptPath)
import BatchRunModuleName
maya.utils.executeDeferred(BatchRunScriptName) 
</code></pre>
<p>It gives me this error:</p>
<pre class="lang-none prettyprint-override"><code>Error: ImportError: file &lt;maya console&gt; line 13: No module named BatchRunModuleName
</code></pre>
<p>Is there another way to do run a python script from inside another?</p>
</div>
<div class="post-text" itemprop="text">
<p>After additional consideration, I believe @Rawing is correct and the issue you are attempting to resolve is clarified at the following link: <a href="https://stackoverflow.com/questions/301134/dynamic-module-import-in-python">Dynamic module import in Python</a></p>
<p>I've left my original response below for reference in case you find it helpful. The difference is, the link above shows how you can dynamically import scripts based on strings, while the code below simply executes another local python script based on a string. Import v. Execute.</p>
<p>Although maybe it's considered "hacky" you could always take advantage of the os library to call other scripts on the fly from within your Python client.</p>
<pre><code>import os
mystr = "myscriptname.py"
os.system('Python ' + mystr)
</code></pre>
<p>This will allow you to call other python scripts, based on the string name of a Python file, and execute them from within your Python client.</p>
</div>
<span class="comment-copy">You shouldn't hardcode <code>'Python'</code> like that, as it may be incorrect. A better practice is to use <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow noreferrer"><code>sys.executable</code></a> which will always be right.</span>
<span class="comment-copy">thank you very much for your answer :)</span>
