<div class="post-text" itemprop="text">
<p>I am using <code>opencv-python</code> by installing with <code>pip install opencv-python</code>, without building from sources.</p>
<p>Earlier I used to build opencv from sources, but the installation process was quite painful. The <code>pip</code> installation was so easy, and I could use most of its functions. One problem is that I cannot use <code>cv2.imshow</code> anymore (may because it requires OS GUIs?).</p>
<pre><code>cv2.imshow("test",xx)
</code></pre>
<blockquote>
<p>OpenCV Error: Unspecified error (The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Carbon support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script) in cvShowImage, file /io/opencv/modules/highgui/src/window.cpp, line 583</p>
</blockquote>
<p><strong>There are two questions:</strong></p>
<ul>
<li><p>Are there alternatives for <code>cv2.imshow</code>, which is light, simple, and proper to show image frames like a video?</p></li>
<li><p>In addition to <code>imshow</code>, are there more critical functions that I cannot use anymore if I only use the <code>pip</code> version?</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The <code>opencv-python</code> package does not install the <code>contrib</code> modules and it is not compiled with <code>ffmpeg</code>, so things like <code>imshow</code> will not work on Linux or Mac, along with many other GUI features. See the <a href="https://pypi.python.org/pypi/opencv-python" rel="nofollow noreferrer">official package index docs for <code>opencv-python</code></a>.</p>
<p>You'll get a much cleaner install compiling OpenCV from source. It's a little bit of a pain but it is worth it IMO; and you get better at it after a few installs. Learning <code>cmake</code> is valuable as well. I'm sure you've seen the oft-linked pyImageSearch tutorials for <a href="http://www.pyimagesearch.com/2016/12/05/macos-install-opencv-3-and-python-3-5/" rel="nofollow noreferrer">macOS</a> and <a href="http://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/" rel="nofollow noreferrer">Ubuntu</a>. </p>
<p>As an alternative that I've never seen on Stack before, Udacity has a self-driving car nanodegree course and they have an <a href="https://github.com/udacity/CarND-Term1-Starter-Kit" rel="nofollow noreferrer">open repository on their GitHub for the starter kit</a>. You simply install with <code>conda</code> (and also create a <code>conda</code> virtual environment in the process) and it comes with many additional libraries that are relevant to the course (e.g. TensorFlow, Matplotlib, Jupyter, ...). It installs with Python 3.5 and OpenCV 3.1.0. It works well cross-platform (incl. Windows) and is a breeze to set up. The instructions are on the repository's <code>README.md</code> file.</p>
<p>Lastly, there are many libraries for image processing or at least GUI interfaces that work far better than OpenCV's limited feature set, which was never meant to be exhaustive. A few you might try are <a href="https://matplotlib.org/" rel="nofollow noreferrer"><code>matplotlib</code></a>, <a href="http://www.pythonware.com/products/pil/" rel="nofollow noreferrer"><code>PIL</code></a>, <a href="http://scikit-image.org/" rel="nofollow noreferrer"><code>scikit-image</code></a>, and lastly really lightweight, nicely object oriented, plus comes preinstalled in Python <a href="https://docs.python.org/3/library/tk.html" rel="nofollow noreferrer"><code>tkinter</code></a>. Even <em>with</em> the working normal interface, you'll probably find yourself wanting more functionality, which all of these provide to different degrees.</p>
</div>
<span class="comment-copy">You won't have the UI related stuff in <a href="http://docs.opencv.org/2.4/modules/highgui/doc/highgui.html" rel="nofollow noreferrer">highgui</a>. You can just write your own display functionality, say with <a href="https://stackoverflow.com/questions/32342935/using-opencv-with-tkinter">tkinter</a>.</span>
<span class="comment-copy">I have noticed some having success with installing opencv via Anaconda using <code>conda install -c menpo opencv</code> or <code>conda install -c conda-forge opencv</code>. You might need ffmpeg in your PATH as well.</span>
