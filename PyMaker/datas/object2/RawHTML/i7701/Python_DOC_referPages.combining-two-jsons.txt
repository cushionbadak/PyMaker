<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1024847/add-new-keys-to-a-dictionary">Add new keys to a dictionary?</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I've two json objects, I 'm figuring out a way on how to merge them in python</p>
<pre><code>y={"success":"true"}
x={"0":"740","1":"747","2":"883","3":"750","4":"769"}
</code></pre>
<p>I need the final result in the following manner</p>
<pre><code>{"success":"true",
  "data":{
       "0":"740",
       "1":"747",
       "2":"883", 
       "3":"750", 
       "4":"769"
         }
              }
</code></pre>
<p>I am trying to append it, but its showing some error. Help me with the code in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>your input seem to be strings and not dictionaries. you need to convert them to dicts using <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads</code></a>:</p>
<pre><code>import json

y = '{"success":"true"}'
x = '{"0":"740","1":"747","2":"883","3":"750","4":"769"}'

res = json.loads(y)
res['data'] = json.loads(x)

print(res)
</code></pre>
<p>if you need the output as string again, use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json.dumps</code></a>:</p>
<pre><code>res_str = json.dumps(res)
</code></pre>
<p>if you insist on having the ouput sorted:</p>
<pre><code>res_str = json.dumps(res, sort_keys=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply do <code>y["data"] = x</code></p>
<pre><code>y={"success":"true"}
x={"0":"740","1":"747","2":"883","3":"750","4":"769"}

y["data"] = x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assume that they are strings and not python dicts. So here is what you can do</p>
<pre><code>y='{"success":"true"}'
x='{"0":"740","1":"747","2":"883","3":"750","4":"769"}'

import json
dict1 = json.loads(x)
dict2 = json.loads(y)

dict2['data'] = dict1

result = json.dumps(dict2)
print result
</code></pre>
<p>The code above gives you this</p>
<pre><code>{"data": {"1": "747", "0": "740", "3": "750", "2": "883", "4": "769"}, "success": "true"}
</code></pre>
<p>If you want to have the structure in the json string preserved you can look into <a href="https://stackoverflow.com/questions/6921699/can-i-get-json-to-load-into-an-ordereddict-in-python">this link</a>. That will make the decoding a little bit more complex.</p>
</div>
<span class="comment-copy">these are just 2 dicts. why not just <code>y['data'] = x</code>?</span>
<span class="comment-copy">It shows the following error when I tried that</span>
<span class="comment-copy">'str' object does not support item assignment</span>
<span class="comment-copy">I've tried to append x into y,not working!:(</span>
<span class="comment-copy">If they are json (which means they are probably string) then first convert both of them to python dict using <code>json.loads</code> and then merge those dicts and then finally convert them back to json using <code>json.dumps</code></span>
<span class="comment-copy">Getting output as   {"data": {"1": "747", "0": "740", "3": "750", "2": "883", "4": "769"}, "success": "true"}, why is 1 coming infront of 0?</span>
<span class="comment-copy">dictionaries are unordered. see <a href="https://stackoverflow.com/questions/15479928/why-is-the-order-in-dictionaries-and-sets-arbitrary">this</a> for example.</span>
<span class="comment-copy">Because python dicts, by definition are  not ordered. If you need to have ordered dict you can either sort it on keys or use something like <a href="https://stackoverflow.com/questions/6921699/can-i-get-json-to-load-into-an-ordereddict-in-python">ordereddict</a> in which case the conversion becomes more complex of course.</span>
<span class="comment-copy">@SandeepRajamahendravarapu: added a way how you can sort the output with <code>json.dumps</code>. but that will only concern the json string; not the dict itself.</span>
<span class="comment-copy">error:'str' object does not support item assignment</span>
<span class="comment-copy">In that case, look at <a href="https://stackoverflow.com/a/44562838/8160345">this other answer</a>.</span>
<span class="comment-copy">{"1": "747", "0": "740", "3": "750", "2": "883", "4": "769", "data": {"success": "true"}}    wrong output!</span>
<span class="comment-copy">Changed the code a bit to fit the output. I also mentioned a link to use ordered dicts to be be created directly from json string in my comment to other answer. Let me know if it helps.</span>
