<div class="post-text" itemprop="text">
<h2>For python 2.7.13</h2>
<pre><code>&gt;&gt;&gt; lst_ = [1]
&gt;&gt;&gt; map(lambda x, y: x + y if y else 1, lst_, lst_[1:])
[1]
</code></pre>
<h2>For python 3.6.1</h2>
<pre><code>&gt;&gt;&gt; lst_ = [1]
&gt;&gt;&gt; list(map(lambda x, y: x + y if y else 1, lst_, lst_[1:]))
[]
</code></pre>
<h2>Two Questions:</h2>
<ul>
<li><p>I want to know why the python2 return the correct result, but python3 return None</p></li>
<li><p>How should I modify the code with python3 to return the correct result</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>This is a change to the functionality of the <code>map()</code> function (together with the change to becoming an iterator). Because the inputs are now <em>iterators</em>, <code>map()</code> has been updated to follow the same behaviour as <code>zip()</code>, and not pad shorter inputs with <code>None</code> values.</p>
<p>Compare the <a href="https://docs.python.org/2/library/functions.html#map" rel="noreferrer">documentation for <code>map()</code> in Python 2</a>:</p>
<blockquote>
<p>If one iterable is shorter than another it is assumed to be extended with <code>None</code> items.</p>
</blockquote>
<p>with the <a href="https://docs.python.org/3/library/functions.html#map" rel="noreferrer">Python 3 version</a>:</p>
<blockquote>
<p>With multiple iterables, the iterator stops when the shortest iterable is exhausted.</p>
</blockquote>
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="noreferrer"><code>itertools.zip_longest()</code></a> together with <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="noreferrer"><code>itertools.starmap()</code></a> to get the Python 2 behaviour again:</p>
<pre><code>from itertools import starmap, zip_longest

starmap(lambda x, y: x + y if y else 1, zip_longest(lst_, lst_[1:]))
</code></pre>
<p><code>zip_longest()</code> has the added advantage that you can now specify what value to use as a filler; as an example, you can set it to <code>0</code>:</p>
<pre><code>starmap(lambda x, y: x + y, zip_longest(lst_, lst_[1:], fillvalue=0))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from itertools import starmap, zip_longest
&gt;&gt;&gt; lst_ = [1]
&gt;&gt;&gt; list(starmap(lambda x, y: x + y if y else 1, zip_longest(lst_, lst_[1:])))
[1]
&gt;&gt;&gt; list(starmap(lambda x, y: x + y, zip_longest(lst_, lst_[1:], fillvalue=0)))
[1]
</code></pre>
</div>
<span class="comment-copy">Now I think I know ! Thanks!</span>
