<div class="post-text" itemprop="text">
<p>I have the following code</p>
<pre><code>import urllib2
import unicodedata
from sh import git

repo_name = "bitbucket.org/foo/foo.git"
repo_dir = "/home/foo/code"
user = "foo"
pwd = "foo"

git = git.bake(_tty_out=False, _cwd=repo_dir)
for file_name in git.diff('--name-only'):
    file_name_str=file_name.encode('ascii','ignore')
    file_name_str=file_name_str.strip()
    git("-c user.name=foo -c user.email='foo@bitbacket.org' commit -m 'no comments' group_vars/git_vars.yml")
</code></pre>
<p>Which gives me the following error:</p>
<pre><code>sh.ErrorReturnCode_129:

  RAN: /usr/bin/git -c user.name=awsAnsibleViju -c user.email='awsAnsibleViju@bitbacket.org' commit -m 'no comments' /home/r_ansible/playbooks/group_vars/git_vars.yml

  STDOUT:

  STDERR:
Unknown option: -c user.name=awsAnsibleViju -c user.email='awsAnsibleViju@bitbacket.org' commit -m 'no comments' /home/r_ansible/playbooks/group_vars/git_vars.yml
usage: git [--version] [--help] [-C &lt;path&gt;] [-c name=value]
           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]
           &lt;command&gt; [&lt;args&gt;]
</code></pre>
<p>The main reason I am finding this difficult to troubleshoot is if I copy the output command  <code>-c user.name=foo -c user.email='foo@bitbacket.org' commit -m 'no comments' group_vars/git_vars.yml</code> to the terminal and add <code>$git</code> at the front of it file <code>group_vars/git_vars.yml</code> gets committed to the local repo fine</p>
</div>
<div class="post-text" itemprop="text">
<p>you need to split your arguments.</p>
<p>your error message would read (added quotes and newlines):</p>
<pre><code>RAN: /usr/bin/git "-c user.name=awsAnsibleViju -c 
                   user.email='awsAnsibleViju@bitbacket.org' commit -m 
                   'no comments' 
                   /home/r_ansible/playbooks/group_vars/git_vars.yml"
</code></pre>
<p>and <code>git</code> does not understand that (it takes the whole string as the first argument).</p>
<p>you can use <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer"><code>shlex</code></a> to split your arguments:</p>
<pre><code>import shlex

args = shlex.split(("-c user.name=foo -c user.email='foo@bitbacket.org'"
                    " commit -m 'no comments' group_vars/git_vars.yml"))
# ['-c', 'user.name=foo', '-c', 'user.email=foo@bitbacket.org', 'commit',
#  '-m', 'no comments', 'group_vars/git_vars.yml']
</code></pre>
<p>and use that as</p>
<pre><code>git(args)  # or: git(*args)
</code></pre>
<p>that is also what <a href="https://amoffat.github.io/sh/sections/passing_arguments.html" rel="nofollow noreferrer">the documentation</a> says:</p>
<blockquote>
<p>When passing multiple arguments to a command, each argument must be a separate string:</p>
<p><code>tar("cvf", "/tmp/test.tar", "/my/home/directory/")</code></p>
<p>This <em>will not work</em>:</p>
<p><code>tar("cvf /tmp/test.tar /my/home/directory")</code></p>
</blockquote>
<p>note: when working with <code>git</code> i prefer <a href="https://gitpython.readthedocs.io/" rel="nofollow noreferrer"><code>gitpython</code></a> over <code>sh</code>.</p>
</div>
<span class="comment-copy">Maybe you're using some other version in the terminal than in your script?</span>
<span class="comment-copy">apologies my original for was not 100% accurate. I should have stated that i use the exact same command as the sh module and I do not add just add git. So the command in the terminal I use <code>/usr/bin/git -c user.name=foo -c user.email='foo@bitbacket.org' commit -m 'no comments' group_vars/git_vars.yml</code> so should be the same git <code>/usr/bin/git/</code></span>
<span class="comment-copy">have you tried this <a href="http://gitpython.readthedocs.io/en/stable/tutorial.html" rel="nofollow noreferrer">gitpython.readthedocs.io/en/stable/tutorial.html</a></span>
<span class="comment-copy">I tried but I couldn't get my head around its API or the doc it provided.</span>
<span class="comment-copy">thanks for the resolution provided and equally important the clear explanation and links to the relevant doc's. I have tried to used <code>gitpython</code> but i found it's API and its doc incomprehensible (which I am sure is down to me)</span>
<span class="comment-copy">@alexis i had a hard time starting with <code>gitpython</code> myself, i have to admit!</span>
