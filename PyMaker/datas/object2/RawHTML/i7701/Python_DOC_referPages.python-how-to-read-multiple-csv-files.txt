<div class="post-text" itemprop="text">
<p>I've got more than 200 files in .csv and I'd like to read and compute two of them in the same time (current and the next one). I'm trying to use <em>glob</em> and <em>pandas data frames</em></p>
<pre><code>import glob

for file in glob.glob(path+'*.csv'):
    x1 = pd.read_csv(file, delimiter=',', dtype=None, names=('x', 'y'))
    x2 = pd.read_csv(file + 1 , delimiter=',', dtype=None, names=('x', 'y'))
</code></pre>
<p>I've got no other ideas.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>pairwise</code> recipe from the <code>itertools</code> documentation:</p>
<pre><code>from itertools import tee
def pairwise(iterable):
    "s -&gt; (s0,s1), (s1,s2), (s2, s3), ..."
    a, b = tee(iterable)
    next(b, None)
    return zip(a, b)
</code></pre>
<p>From: <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools-recipes</a></p>
<p>and usage:</p>
<pre><code>for file1, file2 in pairwise(glob.glob(path+'*.csv')):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you wish to work with the current and next file at every iteration, the following should do:</p>
<pre><code>from glob import glob


files = glob('*.csv')

for i, file in enumerate(files[:-1]):
    x1 = pd.read_csv(file, delimiter=',', dtype=None, names=('x', 'y'))
    x2 = pd.read_csv(files[i+1] , delimiter=',', dtype=None, names=('x', 'y'))
    # Do what you want to do
</code></pre>
<p>This uses <code>enumerate</code> to keep track of the index of the current file from the <code>files</code> sequence. This way, you can grab the "next file" while working with the "current" file by just adding <code>1</code> the current index.</p>
<p>I hope this helps.</p>
</div>
<span class="comment-copy">The previous and the next one? That does not make sense. You mean: the <b><i>current</i></b> and the next one? or the <b><i>current</i></b> and the previous one?</span>
<span class="comment-copy">@Abdou u'r right - <b>current</b> was the word that I wanted to use;-)</span>
