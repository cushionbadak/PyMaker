<div class="post-text" itemprop="text">
<p>I am writing a Python script to find duplicate entries in a CSV list of call numbers and titles. Here is the format of the CSV file:</p>
<blockquote>
<p>920.105,George Mueller  <br/>920.105,George Mueller  <br/>920.105,George Mueller <br/>327.373,The Letters to the Galatians and Ephesians
  <br/>327.371,Galatians and Ephesians <br/>289,The Modern Tongues
  Movement <br/>288.01,The Seduction of Christianity
  <br/>288.003,Understanding Cults and New Religions
  <br/>288.002,Understanding Cults and New Religions <br/>286.061,"History
  of the Baptists, A" <br/>286.044,"History of the Baptists, A"
  <br/>286.003,This Day in Baptist History 3 <br/>286.003,This Day in
  Baptist History 3 <br/>286.003,This Day in Baptist History 3</p>
</blockquote>
<p>What I need to do is find all of the duplicated call numbers that have different titles. So I don't care about most of the entries, because they are duplicates of the same book. I'm looking for different books that were given the same call number. The script I have will complete with no errors, but when I open the file the script created it is empty. 
<br/>Here's my code:
<br/></p>
<pre><code>#!/usr/bin/python3

import csv


def readerObject(csvFileName):
    """
    Opens and returns a reader object.
    """
    libFile = open(csvFileName)
    libReader = csv.reader(libFile)
    libData = list(libReader)
    return libData


def main():

    # Initialize the state variable
    state = 0

    # Prompt the user for the CSV file name
    fileName = input('Enter the CSV file to be read (Please use the full path): \n')
    # Open readerObject and copy its contents into a list
    csvToList = readerObject(fileName)
    loopList1 = list(csvToList)

    # Create writer object to... Write to
    fileToWrite = input('Enter the name of the file to write to: \n')
    libOutputFile = open(fileToWrite, 'w', newline='')
    libOutputWriter = csv.writer(libOutputFile)

    # Loop 1:
    for a in range(len(loopList1)):
        if state == 1:
            libOutputWriter.writerow(loopList2[0])
            del loopList1[0]
        loopList2 = list(csvToList)
        state = 0
        # Loop 2:
        for b in range(len(loopList2)):
            if loopList2[0][0] == loopList2[1][0]:
                if loopList2[0][1] != loopList2[1][1]:
                    libOutputWriter.writerow(loopList2[1])
                    del loopList2[1]
                    state = 1

    libOutputFile.close()

if __name__ == "__main__":
    main()
</code></pre>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>This is based off of @hiro protaginist's <a href="https://stackoverflow.com/a/44607850/7246614">answer</a> but it allows unsorted duplicates.</p>
<pre><code>import csv
from io import StringIO
from itertools import groupby
from collections import defaultdict

text = '''286.003,This Day in Baptist History 1
920.105,George Mueller
327.373,The Letters to the Galatians and Ephesians
327.371,Galatians and Ephesians
920.105,George Mueller 1
289,The Modern Tongues Movement
288.01,The Seduction of Christianity
920.105,George Mueller
288.003,Understanding Cults and New Religions
288.002,Understanding Cults and New Religions
286.061,"History of the Baptists, A"
286.044,"History of the Baptists, A"
286.003,This Day in Baptist History 2
286.003,This Day in Baptist History 3'''

with StringIO(text) as in_file, StringIO() as out_file:
    reader = csv.reader(in_file)
    writer = csv.writer(out_file)

    grouped = defaultdict(set)
    # Maps call_numbers to a set of all book_titles under that number
    for entry in reader:
        grouped[entry[0]].add(entry[1])
    for call_number, titles in grouped.items():
        if len(titles) &gt; 1:
            for title in titles:
                writer.writerow((call_number, title))
    print(out_file.getvalue()) # Remove this line if actually writing to a file
</code></pre>
<p>As with the aforementioned answer, replace <code>StringIO(text)</code> with <code>open(filename)</code> and <code>StringIO()</code> with <code>open(outfilename, 'w')</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>if your input is sorted by the book numbers, you could use  <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>import csv
from io import StringIO
from itertools import groupby

text = '''920.105,George Mueller
920.105,George Mueller
920.105,George Mueller 1
327.373,The Letters to the Galatians and Ephesians
327.371,Galatians and Ephesians
289,The Modern Tongues Movement
288.01,The Seduction of Christianity
288.003,Understanding Cults and New Religions
288.002,Understanding Cults and New Religions
286.061,"History of the Baptists, A"
286.044,"History of the Baptists, A"
286.003,This Day in Baptist History 1
286.003,This Day in Baptist History 2
286.003,This Day in Baptist History 3'''

with StringIO(text) as in_file, StringIO() as out_file:
    reader = csv.reader(in_file)
    writer = csv.writer(out_file)

    for number, group in groupby(reader, key=lambda x: x[0]):

        titles = set(item[1] for item in group)
        if len(titles) != 1:
            writer.writerow((number, *titles))

    print(out_file.getvalue())
</code></pre>
<p>which will output</p>
<pre><code>920.105,George Mueller 1,George Mueller
286.003,This Day in Baptist History 2,This Day in Baptist History 3,This Day in Baptist History 1
</code></pre>
<p>note that i had to change your input as that would not have generated any output...</p>
<p>in order to use that you'd need replace the <code>with StringIO(text) as file:</code> with something like <code>with open('infile.txt', 'r') as file</code> for the program to read your actual file (and similar for the output file with <code>open('outfile.txt', 'w')</code>).</p>
<p>again: this will <strong>only</strong> work if your input is sorted by the numbers.</p>
</div>
<span class="comment-copy">Does the order of the output matter?</span>
<span class="comment-copy">in your loops you are deleting from the lists you are iterating over. this usually ends in tears...</span>
<span class="comment-copy">is your input list ordered the way your example is? or are the numbers in random order?</span>
<span class="comment-copy">From your example input it appears that you don't expect any output.</span>
<span class="comment-copy">@Coldspeed, the output needs to group the duplicates together, other than that the order doesn't matter.</span>
<span class="comment-copy">you could make it a little simpler by using <a href="https://docs.python.org/3/library/collections.html?highlight=defaultdict#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>: <code>grouped = defaultdict(set)</code>. that way you could save the <code>if entry[0] not in grouped</code> part.</span>
<span class="comment-copy">thanks. I have edited it.</span>
