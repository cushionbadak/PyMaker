<div class="post-text" itemprop="text">
<p>My problem is i have to read a big text file (several GBs at least) and then while reading, according to a pattern i will write some portion of it to one of many output text files (about 5000). If this or that pattern is present, i need to write on this or that file. </p>
<p>So I can create all 5000 text files beforehand, but I don't know how to access that specific text file later to write. Effiency is also a big problem, but i am not even there. </p>
<p>to make it more clear: there are 5000 patterns but total numbe rof them are hundreds of millions, maybe more. So whenever i stumble upon a specific pattern, i will write it to its text file. However there is no order, so i may need to call same outputfile 1million lines later for example or just after 3 lines, whenever i see it</p>
<p>Thanks in advance (note: i am also a beginner in python language and i am using 3.6)</p>
</div>
<div class="post-text" itemprop="text">
<p>The built-in for opening files in python is <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open()</code></a>.</p>
<p>In Your case I would probably use it with <code>mode = r</code> for the big file and <code>mode = a</code> for all the other files. Python will create a file if it is not already there, so no need to create them beforehand.</p>
<p>While reading the big file you can just specify the the path to the file you want to write to as a string, so you can use string formatting on it.</p>
<pre><code>with open(r"/BigFile.txt",mode=r) as InputFile:
    for row in InputFile:

        id = #what you want to have to determine which file to write to

        file_to_write_to = r"/Subfiles/outputfile{}.txt".format(id)

        with open(file_to_write_to,mode="a") as OutputFile:
            OutputFile.write(row + "\n")
</code></pre>
<p>(The advantage of the <code>with open()</code> syntax is that you do not have to call the <code>.close()</code> function on the file Object)</p>
<p>This code has the disadvantage that there is one file open and close operation per input block. You might want to consider building a list of several output operations before exporting them as a batch, but that will only give a time advantage if there are multiple output operations on the same file.</p>
<pre><code>BATCH_SIZE = 500
batch_dict = {}

with open(r"/BigFile.txt",mode=r) as InputFile:
    for index,row in enumerate(InputFile):

        id = #what you want to have to determine which file to write to
        if batch_dict.setdefault(str(id),row) is not None:
            batch_dict[str(id)] = batch_dict[str(id)] + row +"\n"

        if index % BATCH_SIZE = 0:
            for batch_id,batch in batch_dict:

                file_to_write_to = r"/Subfiles/outputfile{}.txt".format(id)
                with open(file_to_write_to,mode="a") as OutputFile:
                    OutputFile.write(batch + "\n")

            batch_dict = {}
</code></pre>
<p>(Code is untested as I dont have python 3 right now)</p>
</div>
<div class="post-text" itemprop="text">
<p>You should open the file only when needed in appending mode, write your data and then close it.</p>
<pre><code>with open('my-file-name','a+') as ff:
    ff.write('my-text'+'\n')
</code></pre>
</div>
<span class="comment-copy">why not to create a file as you got the data to put inside of it?</span>
<span class="comment-copy">This is a very unclear problem. How do you determine what to write to which file?</span>
<span class="comment-copy">i am editing now to make it more clear</span>
<span class="comment-copy">Are the filenames identical to patterns being written to them, or somehow derived from those patterns?</span>
<span class="comment-copy">filenames can definitely be derived from patterns beforehand. Actually i coded a similar problem in perl many years ago, without strict control i was giving file namehandles that pattern name and with that pattern name i could call that output file to write. however i couldn't find how to do this in python</span>
<span class="comment-copy">thank you very much, this is definetly what i needed. if i wont take your time, can you make a comment on how i can build batches. but i can search if otherwise. thanks again</span>
<span class="comment-copy">@xcvbnm I have edited my answer. I do not know what a good value for BATCH_SIZE is and how much the time advantage actually is.</span>
<span class="comment-copy">i edited to make it more clear, can you have a look at it</span>
