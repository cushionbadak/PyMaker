<div class="post-text" itemprop="text">
<p>How can I reverse the results of a <a href="http://docs.python.org/library/shlex.html#shlex.split" rel="noreferrer"><code>shlex.split</code></a>? That is, how can I obtain a quoted string that would <a href="http://docs.python.org/library/shlex.html" rel="noreferrer">"resemble that of a Unix shell"</a>, given a <code>list</code> of strings I wish quoted?</p>
<h2>Update0</h2>
<p>I've located a Python bug, and made corresponding feature requests <a href="http://bugs.python.org/issue9723" rel="noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>We now (3.3) have a <a href="http://docs.python.org/3/library/shlex.html#shlex.quote" rel="noreferrer">shlex.quote</a> function.  Itâ€™s none other that <code>pipes.quote</code> moved and documented (code using <code>pipes.quote</code> will still work).  See <a href="http://bugs.python.org/issue9723" rel="noreferrer">http://bugs.python.org/issue9723</a> for the whole discussion.</p>
<p><code>subprocess.list2cmdline</code> is a private function that should not be used.  It could however be moved to <code>shlex</code> and made officially public.  See also <a href="http://bugs.python.org/issue1724822" rel="noreferrer">http://bugs.python.org/issue1724822</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about using <code>pipes.quote</code>?</p>
<pre><code>import pipes
strings = ["ls", "/etc/services", "file with spaces"]
" ".join(pipes.quote(s) for s in strings)
# "ls /etc/services 'file with spaces'"
</code></pre>
<p>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>subprocess</code> uses <code>subprocess.list2cmdline()</code>.  It's not an official public API, but it's mentioned in the <code>subprocess</code> documentation and I think it's pretty safe to use.  It's more sophisticated than <code>pipes.open()</code> (for better or worse).</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a feature request for adding <code>shlex.join()</code>, which would do exactly what you ask. As of now, there does not seem any progress on it, though, mostly as it would mostly just forward to <code>shlex.quote()</code>. In the bug report, a suggested implementation is mentioned:</p>
<pre><code>' '.join(shlex.quote(x) for x in split_command)
</code></pre>
<p>See <a href="https://bugs.python.org/issue22454" rel="nofollow noreferrer">https://bugs.python.org/issue22454</a></p>
</div>
<span class="comment-copy">Out of curiosity, why do you need this if subprocess.Popen takes a list for the command? (when shell=False)</span>
<span class="comment-copy">@tokland: I'm not actually using the output of shlex.split for Popen, I'm parsing a list of paths provided by the user. I allow them to use shell-style splitting.</span>
<span class="comment-copy">ok, it makes sense.</span>
<span class="comment-copy">What designates <code>subprocess.list2cmdline()</code> as private? It is not underscore prefixed, and mentioned in the official documentation!</span>
<span class="comment-copy"><code>shlex.quote</code> wont work correctly for chaining commands. i.e. dummy  <code>cmd = ['pwd', '&amp;&amp;', 'cd']</code> which yields incorrect command: <code>"pwd '&amp;&amp;' cd"</code>.</span>
<span class="comment-copy"><code>subprocess.list2cmdline()</code> seems like different command and it behaves correctly with chaining symbols, although it's intended for Windows, where user can pass list to <code>Popen</code> anyways (even with enabled shell - <code>shell=True</code>)</span>
<span class="comment-copy">Perhaps it would be good to add an actual example of how to use <code>shlex.quote</code> to the answer itself? At <a href="https://bugs.python.org/issue22454" rel="nofollow noreferrer">bugs.python.org/issue22454</a> they suggest using <code>' '.join(shlex.quote(x) for x in split_command)</code> should be sufficient.</span>
<span class="comment-copy"><code>pipes.quote</code> is not Windows safe. Windows needs double quotes</span>
<span class="comment-copy"><code>list2cmdline</code> is <i>only used on windows</i>, so the escaping it performs is only suitable for windows.</span>
