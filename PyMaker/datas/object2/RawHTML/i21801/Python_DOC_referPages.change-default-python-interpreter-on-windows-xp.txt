<div class="post-text" itemprop="text">
<p>I have two python versions: Python 2.5 and Python 2.7. When I'm setting up django, I want to use Python 2.7, but django is using Python 2.5 somehow. </p>
<p>How can I make sure that django use Python 2.7? I'm using Windows XP</p>
</div>
<div class="post-text" itemprop="text">
<p>Change your PATH system environment variable to point to the version of Python you want to use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Changing your PATH will help, if you always call python directly, rather than relying on 
file association.</p>
<p>For example: <code>"python foo.py"</code> will run the 'foo' script with whichever python is first on your PATH.</p>
<p>However, if you just run <code>"foo.py"</code>, the handler associated in the registry, for this file extension, will be the first one called.</p>
<p>In your case, it sounds like that would be python 2.5.  Have a look by opening regedit, and checking the
values of:</p>
<pre><code>HKEY_CLASSES_ROOT\Python.File\shell\open\command
</code></pre>
<p>The (default) value listed will probably be something like <code>"C:\Python25\python.exe" "%1" %*</code></p>
<p>A quick (and dirty?) fix for you would be to change these values to the python version you actually want.</p>
<p>A better fix would be to do something like what's outlined in this feature request:</p>
<p><a href="http://bugs.python.org/issue4485" rel="noreferrer">http://bugs.python.org/issue4485</a></p>
<p>Since then, as long as you had admin rights, you could switch as you needed by pointing assoc at the version you want quickly.</p>
</div>
<div class="post-text" itemprop="text">
<p>Make two simple .cmd files:</p>
<p>python25.cmd:</p>
<pre><code>@echo off
set PYTHONHOME=c:\python25
set PATH=%PATH%;c:\python25
</code></pre>
<p>python27.cmd:</p>
<pre><code>@echo off
set PYTHONHOME=c:\python27
set PATH=%PATH%;c:\python27
</code></pre>
<p>Now you can switch between Python 2.5 and 2.7. :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Python installer does no change to PATH environment variable under windows.
When typing something like <code>python setup.py</code> windows first looks for python in PATH, then in current user registry hive</p>
<pre><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\App Paths\Python.exe
</code></pre>
<p>and then in local machine registry hive</p>
<pre><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\App Paths\Python.exe
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Now that Python 3.3 is released it is easiest to use the py.exe utility described here:
<a href="http://www.python.org/dev/peps/pep-0397/" rel="noreferrer">http://www.python.org/dev/peps/pep-0397/</a></p>
<p>It allows you to specify a Python version in your script file using a UNIX style directive.  There are also command line and environment variable options for controlling which version of Python is run.</p>
<p>The easiest way to get this utility is to install Python 3.3 or later.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to switch between Python 2.x and Python 3.x then easiest way is to use <a href="https://docs.python.org/3/using/windows.html#python-launcher-for-windows" rel="nofollow">Python Launcher</a> which is included since 3.3 version. This is basically py.exe in Windows folder. To start Python 3.x command prompt, just type </p>
<pre><code>py -3
</code></pre>
<p>To execute script with Python 3.x, use</p>
<pre><code>py -3 script.py
</code></pre>
<p>If you don't specify -3 then 2.x version is used by default. You can also make this explicit by using -2.7 switch.</p>
<pre><code>py -2.7 script.py
</code></pre>
<p>Finally, you can now embed the version number to use in .script file itself. This works because after Python 3.3+ is installed, it associated py.exe with .py files.</p>
<pre><code>#! python3
import sys
sys.stdout.write("hello from Python %s\n" % (sys.version,))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change the registry key at</p>
<pre><code>HKEY_CLASSES_ROOT\Applications\python.exe\shell\open\command
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1053794/changing-python-interpreter-windows">Changing python interpreter windows</a></span>
<span class="comment-copy">Note that this won't change file extension associations.</span>
<span class="comment-copy">how??? please elaborate, this doesn't help much</span>
<span class="comment-copy">BTW Quick way to find out handler for python file extension: <code>ftype|find /I "python"</code></span>
<span class="comment-copy">this answer provides more details on finding what is associated with .py <a href="http://stackoverflow.com/a/5088548/264607">stackoverflow.com/a/5088548/264607</a> and shitalshah answer is more current: <a href="http://stackoverflow.com/a/24277570/264607">stackoverflow.com/a/24277570/264607</a></span>
<span class="comment-copy">I would add that you can change the default in py.ini file included in the location of py.exe</span>
