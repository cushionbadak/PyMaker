<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; class A(object):  
...         def some(self):  
...                 pass  
...  
&gt;&gt;&gt; a=A()  
&gt;&gt;&gt; a.some  
&lt;bound method A.some of &lt;__main__.A object at 0x7f0d6fb9c090&gt;&gt;
</code></pre>
<p>IOW, I need to get access to "a" after being handed over only "a.some".</p>
</div>
<div class="post-text" itemprop="text">
<p>Starting python 2.6 you can use special attribute <code>__self__</code>:</p>
<pre><code>&gt;&gt;&gt; a.some.__self__ is a
True
</code></pre>
<p><code>im_self</code> is phased out in py3k.</p>
<p>For details, see the <a href="https://docs.python.org/3/library/inspect.html"><code>inspect</code> module in the Python Standard Library.</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; class A(object):
...   def some(self):
...     pass
...
&gt;&gt;&gt; a = A()
&gt;&gt;&gt; a
&lt;__main__.A object at 0x7fa9b965f410&gt;
&gt;&gt;&gt; a.some
&lt;bound method A.some of &lt;__main__.A object at 0x7fa9b965f410&gt;&gt;
&gt;&gt;&gt; dir(a.some)
['__call__', '__class__', '__cmp__', '__delattr__', '__doc__', '__format__', '__func__', '__get__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'im_class', 'im_func', 'im_self']
&gt;&gt;&gt; a.some.im_self
&lt;__main__.A object at 0x7fa9b965f410&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try following code and see, if it helps you:</p>
<pre><code>a.some.im_self
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want something like this I guess:</p>
<pre><code>&gt;&gt;&gt; a = A()
&gt;&gt;&gt; m = a.some
&gt;&gt;&gt; another_obj = m.im_self
&gt;&gt;&gt; another_obj
&lt;__main__.A object at 0x0000000002818320&gt;
</code></pre>
<p><code>im_self</code> is the class instance object.</p>
</div>
<span class="comment-copy">Just to make it entirely clear: Use this if you have Python 3. If you're using Python 2, the equivalent is the <code>im_self</code> that others have posted.</span>
<span class="comment-copy">@Thomas: works perfectly fine for me in stable python2.x</span>
<span class="comment-copy">My mistake, I'd not read your answer carefully enough.</span>
