<div class="post-text" itemprop="text">
<p>If I have a filename like one of these:</p>
<pre><code>1.1.1.1.1.jpg

1.1.jpg

1.jpg
</code></pre>
<p>How could I get only the filename, without the extension? Would a regex be appropriate?</p>
</div>
<div class="post-text" itemprop="text">
<p>In most cases, you shouldn't use a regex for that.</p>
<pre><code>os.path.splitext(filename)[0]
</code></pre>
<p>This will also handle a filename like <code>.bashrc</code> correctly by keeping the whole name.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.path.splitext("1.1.1.1.1.jpg")
('1.1.1.1.1', '.jpg')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I had to do this with a regex, I'd do it like this:</p>
<pre><code>s = re.sub(r'\.jpg$', '', s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No need for regex. <code>os.path.splitext</code> is your friend:</p>
<pre><code>os.path.splitext('1.1.1.jpg')
&gt;&gt;&gt; ('1.1.1', '.jpg')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.stem" rel="nofollow noreferrer">stem</a> method to get file name.</p>
<p>Here is an example:</p>
<pre><code>from pathlib import Path

p = Path(r"\\some_directory\subdirectory\my_file.txt")
print(p.stem)
# my_file
</code></pre>
</div>
<span class="comment-copy">@nate c: I amended my answer while you were writing your comment.</span>
<span class="comment-copy">Does not work properly with "git-1.7.8.tar.gz", where it only removes the ".gz". I use <code>basename[:-len(".tar.gz")]</code> for this.</span>
<span class="comment-copy">@blueyed: "Does not work properly" is a matter of perspective. The file <i>is</i> a gzip file, who's base name is <code>git-1.7.8.tar</code>. There is no way to correctly guess how many dots the caller wants to strip off, so <code>splitext()</code> only strips the last one. If you want to handle edge-cases like <code>.tar.gz</code>, you'll have to do it by hand. Obviously, you can't strip all the dots, since you'll end up with <code>git-1</code>.</span>
