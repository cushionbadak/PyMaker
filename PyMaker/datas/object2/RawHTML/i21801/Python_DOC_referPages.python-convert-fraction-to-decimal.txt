<div class="post-text" itemprop="text">
<p>I want to convert 1/2 in python so that when i say print x (where x = 1/2) it returns 0.5</p>
<p>I am looking for the most basic way of doing this, without using any split functions, loops or maps</p>
<p>I have tried float(1/2) but I get 0... 
can someone explain me why and how to fix it?</p>
<p>Is it possible to do this without modifying the variable x= 1/2 ??</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>in python 3.x any division returns a float;</p>
<pre><code>&gt;&gt;&gt; 1/2
0.5
</code></pre>
<p>to achieve that in python 2.x, you have to force float conversion:</p>
<pre><code>&gt;&gt;&gt; 1.0/2
0.5
</code></pre>
<p>or to import the division from the "future"</p>
<pre><code>&gt;&gt;&gt; from __future__ import division
&gt;&gt;&gt; 1/2
0.5
</code></pre>
<p>An extra: there is no a built-in fraction type, but there is in the official library:</p>
<pre><code>&gt;&gt;&gt; from fractions import Fraction
&gt;&gt;&gt; a = Fraction(1, 2) #or Fraction('1/2')
&gt;&gt;&gt; a
Fraction(1, 2)
&gt;&gt;&gt; print a
1/2
&gt;&gt;&gt; float(a)
0.5
</code></pre>
<p>and so on...</p>
</div>
<div class="post-text" itemprop="text">
<p>You're probably using Python 2. You can "fix" division by using:</p>
<pre><code>from __future__ import division
</code></pre>
<p>at the start of your script (before any other imports). By default in Python 2, the <code>/</code> operator performs integer division when using integer operands, which discards fractional parts of the result. </p>
<p>This has been changed in Python 3 so that <code>/</code> is always floating point division. The new <code>//</code> operator performs integer division.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alternatively, you can force floating point division by specifying a decimal or by multiplying by 1.0. For instance (from inside the python interpreter):</p>
<pre><code>&gt;&gt;&gt; print 1/2
0
&gt;&gt;&gt; print 1./2
0.5
&gt;&gt;&gt; x = 1/2
&gt;&gt;&gt; print x
0
&gt;&gt;&gt; x = 1./2
&gt;&gt;&gt; print x
0.5
&gt;&gt;&gt; x = 1.0 * 1/2
&gt;&gt;&gt; print x
0.5
</code></pre>
<p>EDIT: Looks like I was beaten to the punch in the time it took to type up my response :)</p>
</div>
<div class="post-text" itemprop="text">
<p>If the input is a string,then you could use Fraction directly on the input:</p>
<pre><code>from fractions import Fraction

x='1/2'
x=Fraction(x)  #change the type of x from string to Fraction
x=float(x)     #change the type of x from Fraction to float
print x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no quantity <code>1/2</code> anywhere. Python does not represent rational numbers with a built-in type - just integers and floating-point numbers. 1 is divided by 2 - following the integer division rules - resulting in 0. <code>float(0)</code> is 0.</p>
</div>
<span class="comment-copy">Can you elaborate more what you mean by <code>without modifying the variable x= 1/2</code>?</span>
<span class="comment-copy">Is this a trick question as part of a class you're taking?  If so, please mark it as [homework].</span>
<span class="comment-copy">It's also good in Python questions to mark whether you are talking about Python version 2 or 3.</span>
<span class="comment-copy">correction - in Python3, <code>/</code> does float division and <code>//</code> does int division; where in Python2, depending on the arguments, <code>/</code> can be float division (if at least one arg is float) or int (if all args are int)</span>
<span class="comment-copy">@NasBanov Using the term <i>"int division"</i> may be misleading, because it does more than integers, e.g. <code>0.8 // 0.11</code> evaluates to <code>7.0</code>, The correct term is <a href="https://docs.python.org/3/glossary.html#term-floor-division" rel="nofollow noreferrer">floor division</a></span>
<span class="comment-copy">I cant put this inside a function.. its giving me an error saying that the line must be placed at the beginning of the file..</span>
<span class="comment-copy">That's right. Another way to force floating point division is to use at least one floating point operand. So try <code>1/2.0</code>, or <code>1/float(2)</code>.</span>
<span class="comment-copy">I know that way but the problem is that I cant modify the input.. i cant change x = '1/2'.. all i can do is apply different functions to it in order to get 0.5.. Is it possible that way?</span>
<span class="comment-copy">No. By the time you get the result of <code>1/2</code>, it is already zero.</span>
<span class="comment-copy">What "input" are you talking about, exactly? Please explain more about what you are doing.</span>
