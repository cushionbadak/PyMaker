<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Possible Duplicate:</strong><br/>
<a href="https://stackoverflow.com/questions/4284313/how-can-i-check-the-syntax-of-python-script-without-executing-it">How can I check the syntax of Python script without executing it?</a> </p>
</blockquote>
<p>How do I compile a Python script without running it?  I just want to check the script for syntax errors.  I was hoping for a simple command line switch, but I didn't see anything in <code>python --help</code>.  I'd like an answer for both Python 2 and Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/library/py_compile.html">py_compile â€” Compile Python source files</a></p>
<pre><code>import py_compile
py_compile.compile('my_script.py')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>python -m py_compile script.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://github.com/PyCQA/pylint/" rel="nofollow noreferrer">pylint</a> to find syntax errors as well as more subtle errors, such as accessing undefined variables in some rarely-used conditional branch.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to do something like this (for <code>test.py</code>):</p>
<pre><code>python -c "__import__('compiler').parse(open('test.py').read())"
</code></pre>
<p>This works for Python 2.x.</p>
</div>
<span class="comment-copy">@sukhbir: You're right, but I just realized the answer, and it isn't given in that thread.</span>
<span class="comment-copy">@asmeurer: Yes it is, the answer that you posted is in that question.</span>
<span class="comment-copy">Compiling and syntax checking are different things, really. You want to syntax check, The answer is in the other thread. You <i>ask</i> how to compile it, which is a different question, you should really change the topic.</span>
<span class="comment-copy">@Lennart:  Is there a way to check syntax without compiling?  I suppose you could use something like pylint, but in Python compiling is such a fast operation that you might as well do that and make truly sure that everything works.</span>
<span class="comment-copy">Using pylint or pyflakes will find <i>more</i> problems than compiling will.</span>
<span class="comment-copy">Before you use this approach, take a look at Mark Johnson's highly voted answer to make this a command-line execution without additional python.</span>
<span class="comment-copy">thanks. this is just great! and a lot easier to remember than @Greg Hewgills version ;)</span>
<span class="comment-copy">This should be the accepted answer.</span>
<span class="comment-copy">Exactly what I was hoping for - thanks</span>
<span class="comment-copy">You can expand on this with <code>find</code> and <code>xargs</code> to check directories.  Here's how to run it on your <code>src/</code> dir: <code>find src -type f -name '*.py' | xargs -n1 python3 -m py_compile</code></span>
<span class="comment-copy">Documentation: <a href="https://docs.python.org/3/using/cmdline.html#using-on-cmdline" rel="nofollow noreferrer">docs.python.org/3/using/cmdline.html#using-on-cmdline</a> and <a href="https://docs.python.org/3/library/py_compile.html" rel="nofollow noreferrer">docs.python.org/3/library/py_compile.html</a>  (In particular, see the discussion of <code>main()</code>.)</span>
