<div class="post-text" itemprop="text">
<p>From a Moodle survey, I get the next DataFrame</p>
<pre><code># -*- coding: utf-8 -*-

import pandas as pd

data = pd.DataFrame({
    "Id":[0, 1, 2, 3, 4, 5],
    "App ABAP": ["Aucune expérience", "Aucune expérience", "en Bachelor", "Aucune expérience", "Aucune expérience", "en Bachelor"], # where did you learn
    "Exp ABAP": ["Aucune expérience", "Aucune expérience", "1 semestre de pratique", "Aucune expérience", "Aucune expérience", "1 semestre de pratique"], # how long did you practice
    "Autre": ["-", "Arduino", "-", "-", "-", "-"],
    "App Autre": ["Aucune expérience", "en Bachelor", "Aucune expérience", "Aucune expérience", "Aucune expérience", "Aucune expérience"],
    "Exp Autre": ["Aucune expérience", "1 an de pratique", "Aucune expérience", "Aucune expérience", "Aucune expérience", "Aucune expérience"],
    "App Python": ["en Bachelor", "en Terminale,; en Bachelor,; dans un autre cadre", "Aucune expérience", "en Bachelor", "Aucune expérience", "en Bachelor"],
    "Exp Python": ["1 semestre de pratique", "1 semestre de pratique", "Aucune expérience", "1 semestre de pratique", "Aucune expérience", "1 semestre de pratique"],
    })
</code></pre>
<p>For each language, I'd like to count by Xp value for instance:</p>
<pre class="lang-none prettyprint-override"><code>| Exp                    | ABAP | Autre | Python |
|------------------------|------|-------|--------|
| Aucune expérience      | 4    | 5     | 2      |
| 1 semestre de pratique | 2    | 0     | 4      |
| 1 an de pratique       | 0    | 1     | 0      |
</code></pre>
<p>Is there any way to do this in pandas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can seelct all columns starting by <code>Exp</code> with regex (<code>^</code> is for start of string) by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.filter.html" rel="nofollow noreferrer"><code>DataFrame.filter</code></a>, then call <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.value_counts.html" rel="nofollow noreferrer"><code>value_counts</code></a> with <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html" rel="nofollow noreferrer"><code>DataFrame.apply</code></a> and last convert <code>NaN</code>s to <code>0</code> with casting to integers:</p>
<pre><code>df = data.filter(regex='^Exp').apply(pd.value_counts).fillna(0).astype(int)
print (df)
                        Exp ABAP  Exp Autre  Exp Python
1 an de pratique               0          1           0
1 semestre de pratique         2          0           4
Aucune expérience              4          5           2
</code></pre>
<p>EDIT:</p>
<pre><code>df = (data.filter(regex='^App')
         .stack()
         .str.split(',;\s+', expand=True)
         .stack()
         .groupby(level=1)
         .value_counts()
         .unstack(0, fill_value=0)
         )
print (df)
                     App ABAP  App Autre  App Python
Aucune expérience           4          5           2
dans un autre cadre         0          0           1
en Bachelor                 2          1           4
en Terminale                0          0           1
</code></pre>
</div>
<span class="comment-copy">Great! Just to go further: in the "App" columns, I can have multiple response. Is there a simple way to reuse your solution after splitting the values?</span>
<span class="comment-copy">@NBur - a bit complicated, give me some time.</span>
<span class="comment-copy">@NBur - It is more complicated, need split and <code>stack</code>, edited answer.</span>
<span class="comment-copy">I wouldn't have found this by myself…</span>
