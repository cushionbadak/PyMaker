<div class="post-text" itemprop="text">
<p>How would I count the number of occurrences of some value in a multidimensional array made with nested lists? as in, when looking for 'foobar' in the following list:</p>
<pre><code>list = [['foobar', 'a', 'b'], ['x', 'c'], ['y', 'd', 'e', 'foobar'], ['z', 'f']]
</code></pre>
<p>it should return <code>2</code>.</p>
<p>(yes I am aware that I could write a loop that just searches through all of it, but I dislike that solution as it is rather time-consuming, (to write and during runtime))</p>
<p>.count maybe?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; list = [['foobar', 'a', 'b'], ['x', 'c'], ['y', 'd', 'e', 'foobar'], ['z', 'f']]
&gt;&gt;&gt; sum(x.count('foobar') for x in list)
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First <a href="https://stackoverflow.com/questions/716477/join-list-of-lists-in-python">join the lists together using <code>itertools</code></a>, then just count each occurrence using the <a href="http://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Collections</code> module</a>:</p>
<pre><code>import itertools
from collections import Counter

some_list = [['foobar', 'a', 'b'], ['x', 'c'], ['y', 'd', 'e', 'foobar'], ['z', 'f']]
totals = Counter(i for i in list(itertools.chain.from_iterable(some_list)))
print(totals["foobar"])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt; from collections import Counter
&gt;&gt; counted = Counter([item for sublist in my_list for item in sublist])
&gt;&gt; counted.get('foobar', 'not found!')
&gt;&gt; 2
#or if not found in your counter
&gt;&gt; 'not found!'
</code></pre>
<p>This uses flattening of sublists and then using the <a href="http://docs.python.org/2/library/collections.html" rel="nofollow">collections</a> module and <a href="http://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow">Counter</a>
to produce the counts of words.</p>
</div>
