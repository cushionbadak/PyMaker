<div class="post-text" itemprop="text">
<p>I have some syntax :</p>
<pre><code>l_one = [ x for x in someList ] # list with duplicates
l = []
l_two = [ l.append( y ) for y in l_one if y not in l ] # duplicates removed
</code></pre>
<p>Both l and l_two are the same lists without duplicates. Is there way to reduce lines and maybe have oneliner?</p>
<p>EDIT :
Correction - l_two are the "Noned" list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, they aren't the same. <code>.append()</code> returns <code>None</code> because it modifies the list in place, so <code>l_two</code> is a list with a bunch of <code>None</code>s. However, <code>l</code> will be the list with no dupes.</p>
<p>If you want to remove duplicates from a list, you can make it into a set:</p>
<pre><code>l_two = list(set(l_one))
</code></pre>
<p>Note that this will remove order.</p>
<hr/>
<p>Try using a for-loop instead of a list comprehension if you want to use unhashable types:</p>
<pre><code>l_one = [x for x in someList]
l_two = []
for i in l_one:
    if i not in l_two:
        l_two.append(i)
</code></pre>
<p>Or:</p>
<pre><code>from itertools import groupby
l_two = [key for key, value in groupby(l_one)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>IF I'm understanding correctly, you're starting with a list called <code>someList</code> which may have duplicates, and you want to end up with the same list but with duplicates removed?</p>
<p>You could start by removing your first line of code, which just duplicates someList into a new (but identical) list called l_one:</p>
<pre><code>&gt;&gt;&gt; someList = [ 3,1,4,1,5,9,2,7 ]
&gt;&gt;&gt; l = []
&gt;&gt;&gt; [ l.append(y) for y in someList if y not in l]
[None, None, None, None, None, None, None]
&gt;&gt;&gt; print l
[3, 1, 4, 5, 9, 2, 7]
&gt;&gt;&gt;
</code></pre>
<p>This works even if the elements of someList are themselves lists:</p>
<pre><code>&gt;&gt;&gt; l = []
&gt;&gt;&gt; someList = [[1,2],[2,1],[1,2],[3,4]]
&gt;&gt;&gt; l = []
&gt;&gt;&gt; [ l.append(y) for y in someList if y not in l]
[None, None, None]
&gt;&gt;&gt; print l
[[1, 2], [2, 1], [3, 4]]
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">Please check <a href="http://docs.python.org/3/faq/programming.html#how-do-you-remove-duplicates-from-a-list" rel="nofollow noreferrer">How do you remove duplicates from a list</a>.</span>
<span class="comment-copy">Yes you're in right. I will edit that.</span>
<span class="comment-copy">Now it wouldn't work, because "someList" members are also lists. So, you know, "unhashable" err.</span>
<span class="comment-copy">@Alex Ah, let me edit my answer</span>
<span class="comment-copy">@Alex Okay, I have edited my answer. That should fix it</span>
<span class="comment-copy">@Alex Ah, you are correct. Is it necessary for a one liner? Sparse <i>is</i> better than dense...</span>
<span class="comment-copy">Well, someList contains other lists which are collected in. But I can't be so broad in explaining. Thanks anyway.</span>
<span class="comment-copy">Not sure what difference that makes - works fine even if the element of someList are lists.</span>
<span class="comment-copy">l_one = [ x.attributeList for x in very_large_attributeList_container ], so it has to be l_one. Excuse me if I was not clear at first. Thanks for your time.</span>
