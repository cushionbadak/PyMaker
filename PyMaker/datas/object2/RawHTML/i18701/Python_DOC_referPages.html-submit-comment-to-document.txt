<div class="post-text" itemprop="text">
<p>I am trying to add a comment form to my HTML test site, but i can not get the form to write the comments to a file. </p>
<pre><code>&lt;form action="/Users/kyle/server/comments.html" method="POST"&gt;
    Your name: &lt;br&gt;
    &lt;input type="text" name="realname"&gt;&lt;br&gt;
    &lt;br&gt;Your email: &lt;br&gt;
    &lt;input type="text" name="email"&gt;&lt;br&gt;
    &lt;br&gt;Your comments: &lt;br&gt;
    &lt;textarea name="comments" rows="15" cols="50"&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;
    &lt;input type="submit" value="Submit"&gt;
&lt;/form&gt;
</code></pre>
<p>How can i get the form to write comments to the file? </p>
<p>This is the python code that i am using for the server</p>
<pre><code>#!/usr/bin/python
from BaseHTTPServer import BaseHTTPRequestHandler,HTTPServer

PORT_NUMBER = 8080

#This class will handles any incoming request from
#the browser
a = open("/Users/kyle/server/web-test.html")
site=a.read()
class myHandler(BaseHTTPRequestHandler):

    #Handler for the GET requests
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type','text/html')
        self.end_headers()
        # Send the html message
        self.wfile.write(site)
        return

try:
    #Create a web server and define the handler to manage the
    #incoming request
    server = HTTPServer(('', PORT_NUMBER), myHandler)
    print 'Started httpserver on port ' , PORT_NUMBER

    #Wait forever for incoming htto requests
    server.serve_forever()

except KeyboardInterrupt:
    print '^C received, shutting down the web server'
    server.socket.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using this code, you will need to extend <code>myHandler</code> to handle a POST request, and then in the method that accepts a POST request, you will need to parse the form data out yourself. This site provides a simple example of getting POST data: <a href="http://pymotw.com/2/BaseHTTPServer/#http-post" rel="nofollow">http://pymotw.com/2/BaseHTTPServer/#http-post</a>. Once you have the comment from the form data, you can write it to a file like you normally would in any other Python application. Here is some Python documentation on reading and writing files if you need it: <a href="http://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow">http://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files</a>.</p>
<p>That said, code like this that operates directly on raw requests is not usually written for production use. Generally speaking, web applications are developed using a framework that has pieces that do a lot of this work for you. The framework is often run under an independent web server. For example, <a href="https://www.djangoproject.com/" rel="nofollow">Django</a> is a web application framework, and you might run your Django application using <a href="http://httpd.apache.org/" rel="nofollow">Apache</a> and <a href="http://www.modpython.org/" rel="nofollow">mod_python</a>.</p>
<p>In terms of other frameworks, I'm fond of <a href="http://flask.pocoo.org/" rel="nofollow">flask</a> personally. You might find <a href="http://www.cherrypy.org/" rel="nofollow">CherryPy</a> interesting since CherryPy provides both a web application framework and a web server to run it under, which might be better to minimize server set up issues while you're just beginning to learn about web applications. (flask does come with a development server you could use just for testing, but that development server is hardly ready for production use.)</p>
</div>
<span class="comment-copy">You need some sort of backend programming language such as php, java, or python to do this. HTML alone is a markup language and is not able to do this.</span>
<span class="comment-copy">Are you talking about <code>&lt;!-- this kind of comments --&gt;</code>?</span>
<span class="comment-copy">See first comment then, again.</span>
<span class="comment-copy">See <a href="http://www.w3.org/TR/html5/forms.html#implementing-the-server-side-processing-for-a-form" rel="nofollow noreferrer">the HTML forms specification</a></span>
<span class="comment-copy">@kylek if you use <a href="http://sawmac.com/xampp/" rel="nofollow noreferrer"><b>XAMPP</b></a> to make yourself a home server on your PC then you can use <code>PHP</code> and <code>HTML</code> to receive data from your form and even <code>MySQL</code> to store it on a database.</span>
<span class="comment-copy">@kylek Glad to be of service. Mind if I ask what you ended up using?</span>
