<div class="post-text" itemprop="text">
<p>In my code I loop through the keys in a dictionary and if a key matches a condition (existence in another list) the key-value pair is deleted:</p>
<pre><code>for key in my_dict:
    if key in my_list:
        del my_dict[key]
</code></pre>
<p>Problem is, when I run the code I get an error: 'dictionary changed size during iteration'.
I realize I can't do it with:</p>
<pre><code>for i in range(len(my_dict)):...
</code></pre>
<p>since key indices in my dictionary will change with every deletion.</p>
<p>Is there a way to delete elements in a dictionary without raising an error?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to loop over your dictionary.</p>
<p></p>
<pre><code>lst  = ['4','8','15','16','23','42']
dct  = {'4':4, 'foo':'bar'}
keys = dct.keys()

for key in lst:
    if key in keys:
        dct.pop(key)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>there's no need to iterate through all the keys in the dict necessarily</p>
<pre><code>for key in my_list:
    my_dict.pop(key, None)
</code></pre>
<p>will do it.</p>
<p><a href="http://docs.python.org/3/library/stdtypes.html#dict.pop" rel="nofollow"><code>pop</code></a> here will remove the item if it exists, but doesn't raise an exception if there's a key in my_list which is not in the dict.</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer to this requires copying the dictionary. You need to write a small function I believe. See <a href="https://stackoverflow.com/questions/5844672/delete-an-element-from-a-dictionary">this</a> thread.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should first create a copy of <strong>dict(my)</strong> :</p>
<pre><code>my = {2:5, 3:4, 7:9}
lst = [2,7]
del_my = dict(my)


for i in my:
    if i in lst:
        del del_my[i]


print del_my
</code></pre>
</div>
<span class="comment-copy">Providing a fair sample if possible would be great. It saves time on the other end and in most cases early reponse.</span>
