<div class="post-text" itemprop="text">
<p>If I have a list L that contains a mix of floats and large ints (e.g. 0.00148185, 38749872947239428 and so forth), how can I determine how much memory this list is taking up on my computer?</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the size of the list itself, use <a href="http://docs.python.org/3.3/library/sys.html?highlight=__sizeof__#sys.getsizeof" rel="nofollow"><code>getsizeof</code></a>:</p>
<pre><code>sys.getsizeof(L)
</code></pre>
<p>To get the size of the list and all of the objects it contains, use the <a href="http://code.activestate.com/recipes/577504/" rel="nofollow">recursive sizeof recipe</a> linked from the docs:</p>
<pre><code>total_size(L)
</code></pre>
<p>However, this is misleading in multiple ways.</p>
<p>First, many of the objects in <code>L</code> may be shared by other references. For example, adding 300000 copies of the number <code>0</code> to your list won't allocate 300000 new objects; it'll reuse the cached <code>0</code>. If you want to only count objects that are uniquely referenced by <code>L</code>, you could use the <a href="http://docs.python.org/3/library/gc.html" rel="nofollow"><code>gc</code></a> module to filter out anything with outside referrers or something, but that would be difficult, and silly.</p>
<p>Second, this is only telling you the memory used by the objects; it doesn't count the overhead involved in tracking the objects, and in the malloc allocator, and so on, while it <em>does</em> count memory that you've already paid for because it's in the startup freelist. Allocating 500KB worth of objects in your script will not increase your memory usage at all; allocating 500MB will likely increase it your real memory use by more than 500MB, and your VM use by even more. Unless you know what you're really asking for, there's no number that's going to be meaningful for you, including this one.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try <a href="https://pypi.python.org/pypi/Pympler" rel="nofollow">Pympler</a>:</p>
<pre><code>In [132]: import pympler.asizeof as asizeof

In [133]: asizeof.asizeof([0]*300000)
Out[133]: 1200048

In [134]: asizeof.asizeof([0])
Out[134]: 56

In [135]: asizeof.asizeof(range(300000))
Out[135]: 6000032
</code></pre>
</div>
<span class="comment-copy">I mostly want to be able to say "You can use this program if you have at least ____ GB RAM free memory" but don't know a good way to gauge</span>
<span class="comment-copy">@AnovaVariance: What do you mean by "free memory"? My laptop currently has only 73MB of free physical memory, but 742GB of free virtual memory. Neither one of those things measures anything useful to a typical user.</span>
<span class="comment-copy">@AnovaVariance: More generally, are you trying to solve an actual problem? Do you have people who get out of memory errors trying to run your program? Or whose computers start thrashing in swap hell?</span>
<span class="comment-copy">MemoryError, yes</span>
<span class="comment-copy">This returns the exact same thing as <code>sys.getsizeof</code>, so there's no real reason to use a third-party library if that's all you want.</span>
<span class="comment-copy"><code>sys.getsizeof(obj)</code> measures only the size of <code>obj</code>, but not the objects it contains. <code>asizeof.asizeof(obj)</code> measures both the size of <code>obj</code> <i>and</i> the objects it contains.</span>
