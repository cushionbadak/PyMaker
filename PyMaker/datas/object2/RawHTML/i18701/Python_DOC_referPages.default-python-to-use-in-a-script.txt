<div class="post-text" itemprop="text">
<p>I outsmarted myself and created an error as a result of trying to be prepared. </p>
<p>On the first line of a script I placed
<code>#! /usr/bin/python</code>
and later upgraded python and installed a new module. Sure enough, the new python is now <code>/opt/local/bin/python</code> and I got errors. It took a bit of debugging before I found this. </p>
<p>Anyway, now that I have I am wondering what is the best way to run a script:</p>
<p>Should I:</p>
<ol>
<li>use <code>python &lt;myscript.py&gt;</code> or</li>
<li>make it executable, add the environment on the first line, and use it from the command line <code>./&lt;myscript.py&gt;</code></li>
</ol>
<p>I like <code>2.</code> but upon upgrading or changing the default python, the script can break because it specifies a different install. </p>
<p>Then am I expected to go through all the scripts and update them? </p>
<p>Is there a way to make the current/default python override the one specified on line1 of the script or is there another way to make a script executable without explicitly stating which python it uses (ie, to use the default one)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since the mentioned stackoverflow links do not have an accepted answer.  I'll answer it while giving my opinion.  I think the best solution for all python scripts is <code>#!/usr/bin/env python</code> as changing the python that runs is as simple as modifying the <code>PATH</code> environment variable.  This is much better than updating all scripts (assuming scripts are already this way).</p>
<p>Number 1 <code>python &lt;myscript.py&gt;</code> can be used first to test before <code>PATH</code> modification.</p>
</div>
<span class="comment-copy"><code>#!/usr/bin/env python</code>, see <a href="http://stackoverflow.com/questions/2429511/why-do-people-write-usr-bin-env-python-on-the-first-line-of-a-python-script" title="why do people write usr bin env python on the first line of a python script">stackoverflow.com/questions/2429511/…</a></span>
<span class="comment-copy">Also see <a href="http://www.python.org/dev/peps/pep-0394/" rel="nofollow noreferrer">PEP 394: The "python" Command on Unix-Like Systems</a>, which gives some more details. (It's mostly about Python 2 vs. 3 or 3.x vs. 3.y, and it assumes you already know the basics of shbang lines, the <code>env</code> command, and prior practice… but there's some useful info there.)</span>
<span class="comment-copy">@isbadawi: You should write that up as an answer, with some explanation (unless you think this question needs to be closed as a dup).</span>
<span class="comment-copy">@isbadawi, abarnet just beat me to it, but if you write that up as the answer, I'll check it. That was what I was after. Thanks</span>
<span class="comment-copy">Also note that this is in the official tutorial under <a href="http://docs.python.org/3/tutorial/interpreter.html#executable-python-scripts" rel="nofollow noreferrer">Executable Python Scripts</a>.</span>
