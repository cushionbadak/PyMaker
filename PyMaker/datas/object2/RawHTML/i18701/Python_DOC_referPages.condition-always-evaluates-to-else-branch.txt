<div class="post-text" itemprop="text">
<p>When I type <code>play</code>, a random number is assigned to <code>number1</code>. It asks me for a prediction and I put in a number, say 5. After putting in 5 I always get the <code>else</code> statement and not the <code>if</code> statement. I even put a <code>print()</code> to find out what number was generated. Sometimes I'm right on or within 1 (The game also allows for within 1) and it still re-directs me to the <code>else</code> statement. Could anyone help? Thanks.</p>
<pre><code>money = 1000000

def luckyrollgame():
    global money
    from random import choice
    print('You are in the game lobby of Lucky Roll.')
    print('Choose either \'rules,\' \'play,\' or \'back\'')
    lobby = input()
    if lobby == 'rules':
        luckyrollgamerules()
    if lobby == 'play':
        die = [1, 2, 3, 4, 5, 6]
        number1 = choice(die)
        prediction = input('Please type your prediction number: ')
        if prediction == number1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        if prediction == number1 - 1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        if prediction == number1 + 1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        else:
            print('I\'m sorry. You didn\'t get the number right.')
            print('The number was ' + str(number1) + '.')
            money = money - 1
            print('You now have ' + str(money) + 'dollars.')
            print('--------------------------------------------------')
            altluckyrollgame()
    if lobby == 'back':
        altvillagescene()
    else:
        print('Please type a valid option.')
        print('--------------------------------')
        altluckyrollgame()
</code></pre>
<p>*Functions such as <code>altluckyrollgame()</code> or <code>altvillagescene()</code> are part of the game logic and defined elsewhere, so you can ignore them. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>elif</code> statement after the very first statement. At current, your code</p>
<pre><code>    if lobby == 'back':
        altvillagescene()
    else:
        print('Please type a valid option.')
        print('--------------------------------')
        altluckyrollgame()
</code></pre>
<p>is checking if lobby == 'back' and running the else in all other cases. You probably don't want this, as the code under else is run in addition to every other if case.</p>
<pre><code>if x == 0: pass
elif x == 1: pass
else: pass
</code></pre>
<p>Code should look like this</p>
<pre><code>money = 1000000

def luckyrollgame():
    global money
    from random import choice
    print('You are in the game lobby of Lucky Roll.')
    print('Choose either \'rules,\' \'play,\' or \'back\'')
    lobby = input()
    if lobby == 'rules':
        luckyrollgamerules()
    elif lobby == 'play':
        die = [1, 2, 3, 4, 5, 6]
        number1 = choice(die)
        prediction = input('Please type your prediction number: ')
######################### This too
        try: prediction = int(prediction)
        except ValueError: prediction = -10
#########################
        if prediction == number1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        elif prediction == number1 - 1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        elif prediction == number1 + 1:
            print('Good job! You guessed right!')
            money = money + 3
            print('You now have ' + str(dollars) + 'dollars.')
        else:
            print('I\'m sorry. You didn\'t get the number right.')
            print('The number was ' + str(number1) + '.')
            money = money - 1
            print('You now have ' + str(money) + 'dollars.')
            print('--------------------------------------------------')
            altluckyrollgame()
    elif lobby == 'back':
        altvillagescene()
    else:
        print('Please type a valid option.')
        print('--------------------------------')
        altluckyrollgame()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you're comparing a string to an integer.</p>
<p>You'll need to first convert the input to an <code>int</code>:</p>
<pre><code>try:
    guess = int(prediction)
except ValueError:
    #Handle when a person enters an invalid number here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The "else" block is only matched with the final "if prediction == number1 + 1". This means that if the correct number is guessed (or the number1 - 1 case) then it still also run the final else block.</p>
<p>You need to change the code to use "elif" for the intermediate conditionals:</p>
<pre><code>if prediction == number1:
   pass # do the win
elif prediction == number1 - 1
   pass # do the win
elif prediction == number1 + 1
   pass  # do the win
else:
   pass # do the lose
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your have three different if structures there. You almost certainly want</p>
<p><code>
if ...</code></p>
<p>elif ...</p>
<p>elif ...</p>
<p>else</p>
<p></p></div>
<div class="post-text" itemprop="text">
<p>The <code>prediction</code> returned by <code>input()</code> is a <strong>string</strong>, so all the comparisons fail. Try casting the value to an integer:</p>
<pre><code>prediction = int(input())
</code></pre>
</div>
<span class="comment-copy">Do consider more descriptive titles for your questions in future.</span>
<span class="comment-copy">Thanks! This worked! I can only accept your answer in 4 minutes.</span>
<span class="comment-copy">Glad to be of service.</span>
<span class="comment-copy">Also, the structure should be <code>if-elif</code>, not seperate <code>if</code> statements. :)</span>
<span class="comment-copy">@ Sukrit Kalra Yes. I'm accepting Travis GD's answer which had both the elif statements and the prediction = int(prediction)</span>
<span class="comment-copy">Welp, the typos caught my eye first. :P</span>
<span class="comment-copy"><code>input</code> returns a string. I have reviewed the <a href="http://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">docs</a> again and tested on <code>Python3.3.0</code>, the value return is a string. @Alp</span>
