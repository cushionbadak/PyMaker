<div class="post-text" itemprop="text">
<p>From Python it is required to output a <strong>text</strong> report with multiple sections and contents such as simple paragraphs, lists, tables, etc. created from basic Python data structures.  </p>
<p>Is there a "standard" Python way to create such a simple text report, beside doing string formatting from the ground up.</p>
<p>It would be nice if a HTML report could also be generated, but the primary output is to be text, and more advanced reports line PDF and XML are unnecessary.</p>
</div>
<div class="post-text" itemprop="text">
<p>This sort of question is best investigated using a search engine because those answering cannot know all your requirements.  You'll have to research the different options.  Here is where I would start...</p>
<ol>
<li>Generate PDF reports using <a href="http://www.reportlab.com/software/opensource/" rel="nofollow">Report Lab</a>, or see <a href="https://pypi.python.org/pypi/reportlab" rel="nofollow">reportlab</a> at pypi.</li>
<li>Create HTML reports using a template engine like <a href="http://jinja.pocoo.org/" rel="nofollow">jinja2</a>.  Search for others because there might be something you like better.  <a href="http://mustache.github.io/" rel="nofollow">Mustache</a> is nice for logic-less templates.</li>
<li>Create text reports using Python's built in <code>open</code> and <code>file.write</code>.  Maybe see <a href="http://appyframework.org/pod.html" rel="nofollow">pod</a> too.</li>
<li>Generate CSV files using Python's <code>csv</code> module.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Two approaches that you could take:</p>
<p>You could use a templating engine; for each report, provide two templates - one that generates html and one that generates plain text. Lots of customisability, but every time you make a change to the report you're going to have to change both templates.</p>
<p>The alternative is to make use of a markup format that's designed to be converted into several formats. As an example, the reStructuredText format is designed to be human-readable as plain text, but also easy to convert into HTML (or latex, or pdf, or ...) and produce good-looking well laid-out documents.</p>
<p>The latter is how Python's documentation is written - it's written in rST and converted into HTML and other formats via <a href="http://sphinx-doc.org/" rel="nofollow">Sphinx</a>. You can see the raw text for any page of the 
Python docs by clicking the "Show Source" link - for instance, <a href="http://docs.python.org/3/_sources/library/constants.txt" rel="nofollow">http://docs.python.org/3/_sources/library/constants.txt</a> is the source for <a href="http://docs.python.org/3/library/constants.html#constants-added-by-the-site-module" rel="nofollow">http://docs.python.org/3/library/constants.html#constants-added-by-the-site-module</a></p>
<p>You might still need to use a template engine to generate the rST form of your report, but hopefully that gives you a plain-text version immediately, and then that plain-text version can be processed to give HTML and whatever other rich formats you need. This way, you'd only need to write one template, but that one template would be able to produce reports in many formats.</p>
</div>
