<div class="post-text" itemprop="text">
<p>I'd like to know how to handle different exceptions that have the same "type". I'm trying to use some code to make a directory:</p>
<pre><code>os.mkdir(target_dir_name)
</code></pre>
<p>And I know this can fail for a variety of reasons, for example if the directory already exists:</p>
<pre><code>OSError: [Errno 17] File exists: 
</code></pre>
<p>or if there's no permissions to create a new dir:</p>
<pre><code>OSError: [Errno 13] Permission denied:
</code></pre>
<p>I'd like to tailor my error messages to the specific failure cause, so I came up with the following code:</p>
<pre><code>try:
  os.mkdir(target_dir_name)
except OSError as e:
  if e.errno == 17:
    print "Warning: Directory %s already exists, executing a rebuild" % (target_dir_name)
  elif e.errno == 13:
    sys.exit("Error: Directory "+target_dir_name+" cannot be created incorrect permissions")
</code></pre>
<p>but I'd like to do something a little less hardcoded. Is there a Pythonic way I could update my sub-failure checks?</p>
</div>
<div class="post-text" itemprop="text">
<p>The only information I've found... which I guess is my best answer:</p>
<p>With the <a href="http://docs.python.org/2/library/errno.html#module-errno" rel="nofollow">errno module</a> I can at least rewrite my current code as:</p>
<pre><code>import errno
#...
except OSError as e:
  if e.errno == errno.EEXIST:
    print "Warning: Directory %s already exists, e..."
  elif e.errno == errno.EACCESS:
    sys.exit("Error: Directory "+target_dir_name+"..."
</code></pre>
<p>If I upgrade to <a href="http://docs.python.org/3/whatsnew/3.3.html#pep-3151-reworking-the-os-and-io-exception-hierarchy" rel="nofollow">python 3.2</a> there is the much nicer:</p>
<pre><code>except FileExistsError:
  print ("Warning: Directory %s already exists, e...")
except PermissionError:
  sys.exit("Error: Directory "+target_dir_name+"...")
</code></pre>
<p>Seems I could do something fancy with using <code>sys.version_info.major</code> and <code>minor</code> to make sure it's at least <code>3.2</code> as well.</p>
<p>Hopefully something better will come up...</p>
</div>
<span class="comment-copy">In Python 3.3, there errors got split into distinct types: <a href="http://docs.python.org/3/whatsnew/3.3.html#pep-3151-reworking-the-os-and-io-exception-hierarchy" rel="nofollow noreferrer">docs.python.org/3/whatsnew/â€¦</a></span>
<span class="comment-copy">I haven't found an elegant solution yet since a lot of those exception and error types are so specific with their attributes. So generally in this case I usually do what <a href="http://stackoverflow.com/a/16268642/158111">stackoverflow.com/a/16268642/158111</a> suggests - wrap specific error handling into a function and avoid repetitive hardcoding.</span>
<span class="comment-copy">@delnan - Thanks for the input. This will be a distributed script when I'm done with it and I'm trying not to tie myself down to one version of Python if I can help it. I can't guarantee what everyone will be running, but I figured 2.7.3 would be pretty safe (as that comes standard on the latest stable Ubuntu release)</span>
<span class="comment-copy">2.7.3 is almost as version-locked as you can get. The 2.7 line is the final version of Python 2. Python 2.7.4 and 2.7.5 are bugfix releases, and Python 3 breaks backwards compatibility.</span>
