<div class="post-text" itemprop="text">
<p>How can I strip a string with all <code>\n</code> and <code>\t</code> in python other than using <code>strip()</code>?</p>
<p>I want to format a string like <code>"abc   \n \t \t\t \t \nefg"</code> to <code>"abcefg</code>"?</p>
<pre><code>result = re.match("\n\t ", "abc \n\t efg")
print result
</code></pre>
<p>and result is <code>None</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you also want to remove spaces. You can do something like this,</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "abc \n \t \t\t \t \nefg"
&gt;&gt;&gt; s = re.sub('\s+', '', s)
&gt;&gt;&gt; s
'abcefg'
</code></pre>
<p>Another way would be to do,</p>
<pre><code>&gt;&gt;&gt; s = "abc \n \t \t\t \t \nefg"
&gt;&gt;&gt; s = s.translate(None, '\t\n ')
&gt;&gt;&gt; s
'abcefg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Some more non-regex approaches, for variety:</p>
<pre><code>&gt;&gt;&gt; s="abc \n \t \t\t \t \nefg"
&gt;&gt;&gt; ''.join(s.split())
'abcefg'
&gt;&gt;&gt; ''.join(c for c in s if not c.isspace())
'abcefg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Like this:</p>
<pre><code>import re

s = 'abc \n \t \t\t \t \nefg'
re.sub(r'\s', '', s)
=&gt; 'abcefg'
</code></pre>
</div>
<span class="comment-copy">Parameters for <code>translate()</code> changed in Python &gt;3. It now takes a translation table which can be generated by <code>str.maketrans()</code>. <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.translate</a></span>
<span class="comment-copy">This is significantly faster than re.</span>
<span class="comment-copy">@seth: I think <code>translate</code> usually comes out the winner in these games, where it's applicable.  I just don't care for regexps. :^)</span>
