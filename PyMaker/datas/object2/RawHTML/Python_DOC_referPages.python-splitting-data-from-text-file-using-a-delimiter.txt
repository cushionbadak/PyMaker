<div class="post-text" itemprop="text">
<p>I am trying to read a set of text files and have them saved to a Dataframe. Thanks to @jezrael I have managed to get this working as shown below:</p>
<pre><code>list_ = []
dfs = []
for file_ in allFiles:
    with open(file_) as fp:
        lines1 = fp.read().split('\n')
        b = [i.split('~', 1)[1].split('*') for i in lines1]
        df = pd.DataFrame(b)
        dfs.append(df)

dfbig = pd.concat(dfs, ignore_index=True)
dfbig.to_csv('file.csv')
</code></pre>
<p>I however see there are a few rows that have multiple entries of <code>('~')</code> and hence each time when <code>('~')</code> occurs more than once in a row it just performs the split once. I am trying to see how could I modify the above code such that the split happens each time <code>('~')</code> appears.</p>
<p>Sample data:</p>
<pre><code>[ABC*DEF*123&gt;~123*999*HHH~HELLO*TEST*DATA]
</code></pre>
<p>Expected output:</p>
<pre><code>123 999 HHH
HELLO TEST DATA
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can change:</p>
<pre><code>b = [i.split('~', 1)[1].split('*') for i in lines1]
</code></pre>
<p>to list comprehension with flattening and spliting by all <code>~</code> values with filtering out first value:</p>
<pre><code>b = [x.split('*') for i in lines1 for x in i.split('~')[1:]]
</code></pre>
<p>Verifying:</p>
<pre><code>lines1 = ['ABC*DEF*123&gt;~123*999*HHH~HELLO*TEST*DATA']
b = [x.split('*') for i in lines1 for x in i.split('~')[1:]]
print (b)
[['123', '999', 'HHH'], ['HELLO', 'TEST', 'DATA']]
</code></pre>
<p>Then solution should be change with <code>extend</code>:</p>
<pre><code>list_ = []

allFiles = glob.glob('csv/*.*')
for file_ in allFiles:
    with open(file_) as fp:
        lines1 = fp.read().split('\n')
        b = [x.split('*') for i in lines1 for x in i.split('~')[1:]]
        list_.extend(b)

dfbig = pd.DataFrame(list_)
</code></pre>
</div>
<span class="comment-copy">@jezrael, continuing from our previous question. Thanks..</span>
<span class="comment-copy">Can you add some sample data?</span>
<span class="comment-copy">the best with some problematic lines.</span>
<span class="comment-copy">I think that a regular expression would work better here</span>
<span class="comment-copy">Can u provide sample output?</span>
<span class="comment-copy">thank you that worked perfectly..</span>
