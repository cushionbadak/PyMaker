<div class="post-text" itemprop="text">
<p>I have a set of super simple XML files to parse... but... they use custom defined entities.  I don't need to map these to characters, but I do wish to parse and act on each one.  For example:</p>
<pre><code>&lt;Style name="admin-5678"&gt;
    &lt;Rule&gt;
      &lt;Filter&gt;[admin_level]='5'&lt;/Filter&gt;
      &amp;maxscale_zoom11;
    &lt;/Rule&gt;
&lt;/Style&gt;
</code></pre>
<p>There is a tantalizing hint at <a href="http://effbot.org/elementtree/elementtree-xmlparser.htm">http://effbot.org/elementtree/elementtree-xmlparser.htm</a> that XMLParser has limited entity support, but I can't find the methods mentioned, everything gives errors:</p>
<pre><code>    #!/usr/bin/python
    ##
    ## Where's the entity support as documented at:
    ## http://effbot.org/elementtree/elementtree-xmlparser.htm
    ## In Python 2.7.1+ ?
    ##
    from pprint     import pprint
    from xml.etree  import ElementTree
    from cStringIO  import StringIO

    parser = ElementTree.ElementTree()
   #parser.entity["maxscale_zoom11"] = unichr(160)
    testf = StringIO('&lt;foo&gt;&amp;maxscale_zoom11;&lt;/foo&gt;')
    tree = parser.parse(testf)
   #tree = parser.parse(testf,"XMLParser")
    for node in tree.iter('foo'):
        print node.text
</code></pre>
<p>Which depending on how you adjust the comments gives:</p>
<pre><code>xml.etree.ElementTree.ParseError: undefined entity: line 1, column 5
</code></pre>
<p>or</p>
<pre><code>AttributeError: 'ElementTree' object has no attribute 'entity'
</code></pre>
<p>or</p>
<pre><code>AttributeError: 'str' object has no attribute 'feed'           
</code></pre>
<p>For those curious the XML is from the <a href="http://www.openstreetmap.org/">OpenStreetMap</a>'s mapnik project.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if this is a bug in ElementTree or what, but you need to call UseForeignDTD(True) on the expat parser to behave the way it did in the past.</p>
<p>It's a bit hacky, but you can do this by creating your own instance of ElementTree.Parser, calling the method on it's instance of xml.parsers.expat, and then passing it to ElementTree.parse():</p>
<pre><code>from xml.etree  import ElementTree
from cStringIO  import StringIO


testf = StringIO('&lt;foo&gt;&amp;moo_1;&lt;/foo&gt;')

parser = ElementTree.XMLParser()
parser.parser.UseForeignDTD(True)
parser.entity['moo_1'] = 'MOOOOO'

etree = ElementTree.ElementTree()

tree = etree.parse(testf, parser=parser)

for node in tree.iter('foo'):
    print node.text
</code></pre>
<p>This outputs "MOOOOO"</p>
<p>Or using a mapping interface:</p>
<pre><code>from xml.etree  import ElementTree
from cStringIO  import StringIO

class AllEntities:
    def __getitem__(self, key):
        #key is your entity, you can do whatever you want with it here
        return key

testf = StringIO('&lt;foo&gt;&amp;moo_1;&lt;/foo&gt;')

parser = ElementTree.XMLParser()
parser.parser.UseForeignDTD(True)
parser.entity = AllEntities()

etree = ElementTree.ElementTree()

tree = etree.parse(testf, parser=parser)

for node in tree.iter('foo'):
    print node.text
</code></pre>
<p>This outputs "moo_1"</p>
<p>A more complex fix would be to subclass ElementTree.XMLParser and fix it there.</p>
</div>
<div class="post-text" itemprop="text">
<p>As @cnelson already pointed out in a comment, the chosen solution here won't work in Python 3.</p>
<p>I finally got it working. Quoted from this <a href="https://stackoverflow.com/questions/35591478/how-to-parse-html-with-entities-such-as-nbsp-using-builtin-library-elementtree">Q&amp;A</a>.</p>
<p>Inspired by <a href="http://forums.devshed.com/xml-programming-19/xml-parsing-error-undefined-entity-564981.html" rel="noreferrer">this post</a>, we can just prepend some XML definition to the incoming raw HTML content, and then ElementTree would work out of box.</p>
<p>This works for both Python 2.6, 2.7, 3.3, 3.4.</p>
<pre><code>import xml.etree.ElementTree as ET

html = '''&lt;html&gt;
    &lt;div&gt;Some reasonably well-formed HTML content.&lt;/div&gt;
    &lt;form action="login"&gt;
    &lt;input name="foo" value="bar"/&gt;
    &lt;input name="username"/&gt;&lt;input name="password"/&gt;

    &lt;div&gt;It is not unusual to see &amp;nbsp; in an HTML page.&lt;/div&gt;

    &lt;/form&gt;&lt;/html&gt;'''

magic = '''&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" [
            &lt;!ENTITY nbsp ' '&gt;
            ]&gt;'''  # You can define more entities here, if needed

et = ET.fromstring(magic + html)
</code></pre>
</div>
<span class="comment-copy">Possibly related question: <a href="http://stackoverflow.com/questions/2524299/entity-references-and-lxml" title="entity references and lxml">stackoverflow.com/questions/2524299/entity-references-and-lxml</a></span>
<span class="comment-copy">Not related, because in that case the entity is actually defined.  Remove the entity definition and you're back to my question.</span>
<span class="comment-copy">fyi - someone may want to fix the /usr/bin/python to /usr/bin/env python as the shebang line is wrong for most systems.</span>
<span class="comment-copy">A bit icky as as you say, but thanks.  Is there any way to avoid having to predefine the entities (e.g. &amp;moo_2).</span>
<span class="comment-copy">@Bryce: being predefined is the point of entities, no? Nevertheless: you could set <code>parser.entity</code> to your own dictionary-like object. As a simple example, you could do <code>parser.entity = collections.defaultdict(str)</code> to have all undefined entities replaced by an empty string.</span>
<span class="comment-copy">To follow up @Steven's comment, you could also implement a mapping interface and do whatever you want with the keys.  I edited my answer to show a simple example of that.</span>
<span class="comment-copy">The code works with Python 2.7 (in earlier versions <code>parse()</code> does not accept a <code>parser</code> keyword argument).</span>
<span class="comment-copy">I'm not sure if this is possible at all in Python 3 currently. Looking at the the <a href="http://docs.python.org/3/library/xml.etree.elementtree.html#xmlparser-objects" rel="nofollow noreferrer">docs</a> I see the following method signature <b>xml.etree.ElementTree.XMLParser(html=0, target=None, encoding=None)</b>  but the docs say <i>Element structure builder for XML source data, based on the expat parser. html are predefined HTML entities. This flag is not supported by the current implementation.</i>   It looks like element tree is getting more strict and if your entities aren't defined, then it's not valid and won't be parsed.</span>
<span class="comment-copy">Pretty sure this should be the accepted answer.</span>
