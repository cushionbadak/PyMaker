<div class="post-text" itemprop="text">
<p>I'm trying to match a Django URL bit that can contain:</p>
<p><code>_</code>, <code>%</code>, <code>&amp;</code>, <code>+</code>, <code>0-9</code>, <code>a-z</code>, <code>A-Z</code>, <code></code>(space)</p>
<p>How can I do it so it is picked up by Django's URL matcher, in form of a parameter?</p>
<pre><code>(r'^(?P&lt;chararg&gt;\w+)/IT_NEEDS_TO_BE_HERE/(?P&lt;intarg&gt;\d+)', 'dest')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I played a bit and got this - <code>[\w\+%_&amp; ]+</code>.</p>
<p>So <code>(r'^(?P&lt;chararg&gt;\w+)/IT_NEEDS_TO_BE_HERE/(?P&lt;intarg&gt;\d+)', 'dest')</code> would become </p>
<pre><code>(r'^(?P&lt;chararg&gt;\w+)/(?P&lt;arg&gt;[\w\+%_&amp; ]+)/(?P&lt;intarg&gt;\d+)', 'dest')
</code></pre>
<p><code>\w</code> matches any word characters and digits.
<code>\+</code> mathces +</p>
<p>EDIT: \d is not necessary.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not so sure about % char, but regex would be <code>[_%&amp;+0-9a-zA-Z ]+</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As <code>\w</code> means <code>[a-zA-Z0-9_]</code>, you could use :</p>
<pre><code>[%&amp;+ \w]+
</code></pre>
</div>
<span class="comment-copy">The <code>_</code> here is unnecessary in Python 3 as the \w will match "most characters that can be part of a word in any language, as well as numbers and the underscore." Or so say the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs</a> (EDIT: Corrected formatting)</span>
<span class="comment-copy">+1 for clarity and readability.</span>
