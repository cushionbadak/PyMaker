<div class="post-text" itemprop="text">
<p>I'm implementing a custom <code>tf.keras.layers.Layer</code> that needs to support masking.</p>
<p>Consider the following scenario</p>
<pre class="lang-py prettyprint-override"><code>embedded = tf.keras.layer.Embedding(input_dim=vocab_size + 1, 
                                    output_dim=n_dims, 
                                    mask_zero=True)
x = MyCustomKerasLayers(embedded)
</code></pre>
<p>Now per the documentation</p>
<blockquote>
<p><code>mask_zero</code>: Whether or not the input value 0 is a special "padding" value that should be masked out. This is useful when using recurrent layers which may take variable length input. <strong>If this is True then all subsequent layers in the model need to support masking or an exception will be raised</strong>. If mask_zero is set to True, as a consequence, index 0 cannot be used in the vocabulary (input_dim should equal size of vocabulary + 1).</p>
</blockquote>
<p>I wonder, what does that mean? Looking through <a href="https://www.tensorflow.org/tutorials/eager/custom_layers" rel="nofollow noreferrer">TensorFlow's custom layers guide</a> and the <a href="https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer" rel="nofollow noreferrer">tf.keras.layer.Layer</a> documentation it is not clear what should be done to support masking</p>
<ol>
<li><p>How do I support masking?</p></li>
<li><p>How do I access the mask from the past layer? </p></li>
<li><p>Assuming input of <code>(batch, time, channels)</code> or `(batch, time) would the masks look different? What will be their shapes?</p></li>
<li><p>How do I pass it on to the next layer? </p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>To support masking one should implement the <code>compute_mask</code> method inside the custom layer</p></li>
<li><p>To access the mask, simply add as the second positional argument in the <code>call</code> method the argument <code>mask</code>, and it will be accessible (ex. <code>call(self, inputs, mask=None)</code>)</p></li>
<li><p>This cannot be guessed, it is the layer's before responsible to calculate the mask </p></li>
<li><p>Once you implemented the <code>compute_mask</code> passing the mask to the next layer happens automatically</p></li>
</ol>
<p>Example:</p>
<pre class="lang-py prettyprint-override"><code>class MyCustomKerasLayers(tf.keras.layers.Layer):
    def __init__(self, .......):
        ...

    def compute_mask(self, inputs, mask=None):
        # Just pass the received mask from previous layer, to the next layer
        return mask

    def call(self, input, mask=None):
        # using 'mask' you can access the mask passed from the previous layer
</code></pre>
<p>Notice that this example just passes on the mask, if the layer will output a shape different than the one received, you should change the mask accordingly in <code>compute_mask</code> to pass on the correct one</p>
</div>
