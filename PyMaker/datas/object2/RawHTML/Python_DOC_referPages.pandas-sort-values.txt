<div class="post-text" itemprop="text">
<p>While doing data analysis on SF Salaries dataset from Kaggle ( <a href="https://www.kaggle.com/kaggle/sf-salaries" rel="nofollow noreferrer">https://www.kaggle.com/kaggle/sf-salaries</a>),
I would like to know the ranking of overtime pay based on Year and JobTitle.</p>
<p><a href="https://i.stack.imgur.com/v2uMM.png" rel="nofollow noreferrer">What I decided to get</a></p>
<p>My solution was:</p>
<pre><code>df = df[['Year','JobTitle','OvertimePay']].copy()
df2 = df.sort_values('OvertimePay', ascending= False)
</code></pre>
<p><a href="https://i.stack.imgur.com/J29GP.png" rel="nofollow noreferrer">which turned out to be like this</a>.
Obviously, it didn't turn out as I expected. 
Besides index, it seems sorted inappropriately since 173547.73 should be followed by 163477.81, etc.
Please help. Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure you've realized that each line corresponds to a different Employee. So when you do <code>df = df[['Year','JobTitle','OvertimePay']].copy()</code>, there are multiple occurrences of "Deputy Sheriff" in the same year, one for each employee. This can happen several times, because there are different employees with the same "JobTitle". </p>
<p>In order to achieve what you want, you could <code>drop_duplicates</code> and get only the high paid employees for each "Job Title" in a "Year". However, I advise you to analyze if this is really what you are looking for.</p>
<p>Here is the code I would use:</p>
<pre><code>import numpy as np
import pandas as pd

df = pd.read_csv('Salaries.csv')
df['OvertimePay'] = df['OvertimePay'].replace("Not Provided",np.nan).astype(float)
df = df[['Year','JobTitle','OvertimePay']].copy()
df.drop_duplicates(subset=['Year','JobTitle'])
df2 = df.sort_values('OvertimePay', ascending= False)
</code></pre>
<p><strong>EDIT :</strong> To change the format I would use something like:</p>
<pre><code>print(df2.iloc[0:20,].to_string(header=['Year','JobTitle',''],index=False,justify='left',
                                formatters={'JobTitle':'{{:&lt;{}s}}'.format(df2['JobTitle'].str.len().max()).format}))
</code></pre>
</div>
<span class="comment-copy">What was the actual outcome? Superficially, this looks like it should work, providing the column has the correct type.</span>
<span class="comment-copy">It might the problem with OvertimePay type? Is it string? If so changing it to float before sorting,</span>
<span class="comment-copy">@ChristophBurschka Thanks for answering. I added the link to the output I got.</span>
<span class="comment-copy">@RyanNi It is float. so there's something wrong with my original code I guess.</span>
<span class="comment-copy">Thank you so much!!!!!! However, the output format is still slightly different from the expected one. To be more specific, I hope 'JobTitle' to be left aligned while not showing the index and the column name 'OvertimePay'. Can you help with this? Thanks.</span>
<span class="comment-copy">I am sorry. I didn't realize that the text format was that relevant to you. I edited my answer to include a suggestion. Please tag it as the correct answer, if it helps you.</span>
<span class="comment-copy">Thanks a lot for putting effort into the text format. However, it appears to me that the output datatype is Series instead of Dataframe. Is there any way to transform dataframe to series?</span>
<span class="comment-copy">Actually, the output is a string as 'to_string' suggests. I am not sure how to do this keeping it as a Dataframe. Maybe you should open a new question to address it.</span>
