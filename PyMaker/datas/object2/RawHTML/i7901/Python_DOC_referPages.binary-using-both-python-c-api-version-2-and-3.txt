<div class="post-text" itemprop="text">
<p>In an open source project<a href="http://www.sagemath.org" rel="nofollow noreferrer">1</a> we have Python/Cython and C/C++ modules mixed with one C++ library using the Python C API. The API changed only a few function's names from 2 to 3. Assume the library is written without those functions. Will it link to Python3 if compiled with Python2, and vice versa? Is this prevented by macros in the API headers?</p>
<p>Having a library binary that may link to both would spare us major packaging hassles.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, it wouldn't work. Don't try it.</p>
<p>Binary modules are not guaranteed to be binary-portable even say from 3.5 to 3.6. If you're <em>lucky</em>, then there is some mechanism that will <strong>prohibit you from doing this insanity</strong>. If however you manage to link the library somehow, there will be some subtle differences that will cause serious bugs, such as the layout of <code>PyObject</code> changing and so forth.</p>
<p>The Python interface must be recompiled for the exact Python version. Source compatibility between Python 2 and 3 is a different thing and is relatively easy to achieve.</p>
</div>
<span class="comment-copy">The names of some pretty fundamental functions have changed (e.g. module initialization I think) mostly for the purpose of preventing you from doing this.</span>
<span class="comment-copy">The API is relatively stable, the A<i>B</i>I is not. So you would need to recompile per Python version. Edit: See the link in @DavidW comment to Antti Haapala's answer below for more explanation on this.</span>
<span class="comment-copy">For Python &gt;=3.2, there is <a href="https://docs.python.org/3/c-api/stable.html" rel="nofollow noreferrer">a stable API</a> that can be used (but is a bit more restricted that the full API). Obviously that doesn't help with OPs problem, but it would allow you to do 3.5 and 3.6 in one binary module.</span>
<span class="comment-copy">Thanks for the definite answer and @DavidW for the link.</span>
