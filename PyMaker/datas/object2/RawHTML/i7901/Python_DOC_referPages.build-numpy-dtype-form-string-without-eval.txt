<div class="post-text" itemprop="text">
<p>I would like to build/parse a numpy dtype string e.g.</p>
<pre><code>dtype_string = "[('a', '&lt;i4', (100,)), ('b', '&gt;i4')]"
</code></pre>
<p>and use it like </p>
<pre><code>np.frombuffer(buffer, dtype=get_me_my_dtype(dtype_string))
</code></pre>
<p>I know that eval() works (as get_me_my_dtype()), but i do not want to use it here due to the security implications. Any suggestions about a secure alternative?</p>
<p>Cheers, Marius</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> should <em>safely</em> do the trick:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; dtype_string = "[('a', '&lt;i4', (100,)), ('b', '&gt;i4')]"
&gt;&gt;&gt; ast.literal_eval(dtype_string)
[('a', '&lt;i4', (100,)), ('b', '&gt;i4')]
</code></pre>
</div>
<span class="comment-copy">This sounds like an <a href="https://meta.stackexchange.com/a/66378/247805">XY problem</a> to me. <i>Why</i> are you constructing the dtype from a string?</span>
<span class="comment-copy">@ali_m I would like to implement a custom (de)serializer for numpy arrays. Therefore i would also like to (de)serialize the dtype of a numpy array without using a full blown eval() for this.</span>
<span class="comment-copy">Why not just serialize and deserialize the list of tuples?</span>
<span class="comment-copy"><code>'uint8'</code>    is also a valid dtype. The logic to catch all cases would be considerable and i was wondering if there is a <i>cheaper</i> alternative.</span>
<span class="comment-copy">Any numpy dtype can be expressed as a list of tuples, e.g. <code>np.dtype('uint8').descr</code> will give you <code>[('', '|u1')]</code>.</span>
