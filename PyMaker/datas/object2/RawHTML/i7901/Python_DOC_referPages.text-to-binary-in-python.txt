<div class="post-text" itemprop="text">
<p>I'm trying to write a binary translator - with a <em>string</em> as an input and its <em>binary representation</em> as output.</p>
<p>And I'm having some difficulties, I wrote in variable the translation for each letter, but they are variables, not strings, so I want to take an input from that matches with the name of the variable and prints the result:</p>
<pre><code>a = "01000001"
b = "01000010"
c = "01000011"
d = "01000100"
# all the way to z


word = input("enter here: ")
print (word)
</code></pre>
<p>When I run this I enter a word and it just returns the same word to me but when I write <code>print(a)</code> it returns <code>01000010</code> but I can't get it to work with the input.</p>
<p>Can someone tell me where I'm doing something wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Following the comments of the users, is a better practice of programming using a dictionary for these cases, you just only have to fill in the dictionary <code>letterToBin</code> as you can see in the example</p>
<p>This is a dictionary, wich means it will have a key, and a value, like a cell phone, you have the key as a name (your mother) and the value (his cellphone):</p>
<pre><code>letterToBin = {}

letterToBin = {
  "a" : "01000001", #Here, the key is the "a" letter, and the value, his bin transformation, the 01000001
  "b" : "01000010",
  "c" : "01000011",
  "d" : "01000100"
  #so you need to add all the other keys you need, for example the "e"
  "e" : "01000101" #for example
}




binToLetter = {} # here I create a second dictionary, and it invert the values of the first, it meas, now the keys will be the bins, and the value the latters
binToLetter = dict(zip(letterToBin.values(), letterToBin.keys())) #this code do the magic, you must understand, that only needs to feel the first dictionary, and for free, you will have the second dictionary

wordOrBin = input("enter here: ")

if wordOrBin in letterToBin:
  print(letterToBin[wordOrBin]) #here I has if you write a latter (a) or a bin(11001101) and it choose where to look the correct value
else:
  print(binToLetter[wordOrBin])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably the more correct solution is to use a <em>dictionary</em> instead of <em>names of letters</em> as <em>names of variables</em>:</p>
<pre><code>transDict = {
    "a": "01100001",
    "b": "01100010",
    "c": "01100011",
    "d": "01100100",
    # etc., etc.
    }

text   = input( "Enter your message: " )

result = "".join( [transDict[letter] for letter in text] )

print(result)
</code></pre>
<p>(I also corrected the <code>ASCII</code> codes - yours were for <em>capital</em> letters.)</p>
<hr/>
<p><strong>The explanation</strong><br/>
(for the longest statement):</p>
<p>"Use <code>""</code> as delimiter (i.e. <code>no delimiter</code>) to <em>join</em> all items in the <em>list of translated letters</em> where letters are gotten one after other from the <code>text</code>".</p>
<p>So the result will be the same as if you used these commands:</p>
<pre><code>listOfCodes = []                     # Starting with an empty list
for letter in text:                  # For letter by letter in text perform 2 actions:
    code = transDict[letter]         #   - translate the letter
    listOfCodes.append( code )       #   - append the translation to the list

result = "".join( listOfCodes )      # Then join items of the list without a delimiter 
                                     # (as "" is an empty string) (" " would be nicer)
</code></pre>
</div>
<span class="comment-copy">you are printing "word" which is your input.</span>
<span class="comment-copy">You don't describe your difficulties and you didn't ask a question. This is a Q&amp;A site, so a questionmark somewhere in your text would be helpful to locate what you are actually asking. (E.g. If I switch to using Java will this magically work without coding?)</span>
<span class="comment-copy">If I understood well, she wants to print the value of the variable, matching the input with the name of the variable, so if you input the "a" char, you get not the a result, but the 01000001, In my answer I think it works</span>
<span class="comment-copy"><code>a = "01000001"</code> etc. - if you mean ASCII codes, yours are for <i>capital</i> letters (<code>A</code>, <code>B</code>, etc.)</span>
<span class="comment-copy">thank you so much it finally worked ive been trying for hours thank you</span>
<span class="comment-copy">@ErenBiçer  I have always loved to help, don't forget accept the answer, with the (✓)</span>
<span class="comment-copy">Nice hack, but not a good approach. Using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> for the translation table would be the canonical way.</span>
<span class="comment-copy">@Matthias Yes endeed! hahaha, but see, she is new in this programming world, so she would to rewrite all her code again, and there are a lot of keys from a-z... don't you think?</span>
<span class="comment-copy">Nice - but you used the name <code>x</code> for the user's input and she used the same name in her "coding table" (<code>a</code> thru <code>z</code>).</span>
<span class="comment-copy">MarianD! Nice one, ;) I really like it! +1</span>
<span class="comment-copy">@DamianLattenero - thanks (I am not so fast as you are). Whereas your solution remember me things which I already forgot and more respected the OP original code.</span>
<span class="comment-copy">Yeah, and really good explained</span>
<span class="comment-copy">@DamianLattenero - thanks - I realized that OP is probably not very experienced one, so I added some explanation to my original answer.</span>
