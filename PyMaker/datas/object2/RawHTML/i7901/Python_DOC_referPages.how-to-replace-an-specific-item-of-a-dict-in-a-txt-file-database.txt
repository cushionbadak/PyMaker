<div class="post-text" itemprop="text">
<p>I want to use a .txt file to store API tokens for an application, but I got stuck trying to find a way to Replace the API key/token if it's found in the file. This is the code tried <strong>(Python 3.5)</strong>:</p>
<pre><code>data_to_save = {}
data_to_save['savetime'] = str(datetime.datetime.now())[:19]
data_to_save['api_key'] = key_submitted
data_to_save['user'] = uniqueid
api_exists = False
user_exists = False
with open("databases/api_keys.txt", 'r+') as f:
    database = json.loads(f.read())
    for i in database:
        if i['api_key'] == key_submitted:
            send_text_to_user(userid, "[b]Error: That API key is already in use.[/b]", "red")
            api_exists = True
        if i['user'] == uniqueid:
            user_exists = True
    if user_exists == True:
        if api_exists = True:
            send_text_to_user(userid, "[b]Error: Your API key was already saved at another time.[/b]", "red")
        else:
            f.write(json.dumps(data_to_save)) #Here, StackOverflow
            send_text_to_user(userid, "[b]Okay, I replaced your API key.[/b]", "green")
    f.close()
if user_exists == False:
    writing = open("databases/api_keys.txt", 'a')
    writing.write(json.dumps(data_to_save))
    writing.close()
</code></pre>
<p>I also want to know if this is the best way to do it or the code could be optimized and how.</p>
<p><strong>Thank you, it has been done. Final code:</strong></p>
<pre><code>data_to_save = {'savetime': str(datetime.datetime.now())[:19], 'api_key': key_submitted, 'user': uniqueid}
with open("databases/api_keys.txt", 'r') as f:
    database = json.loads(f.read())
    for i in database:
        if i['user'] == uniqueid:
            database.remove(i)
        if i['api_key'] == key_submitted:
            send_text_to_user(userid, "[b]Error: That API key is already in use.[/b]", "red")
            api_exists = True
            break
    if not api_exists:
        database.append(data_to_save)
        f.write(json.dumps(database)
    send_text_to_user(userid, "[b]Okay, your API key was succesfully stored.[/b]")
</code></pre>
<p>With this approach we don't even need to write different saves just in case the user exists or doesn't exists because it deletes it if it's found, so it never exists when the code runs and it just need to save a "new" record every single time, except if the API key already belongs to another user.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are many issues with given code, so let's start from the beginning:</p>
<ol>
<li><p>We don't need to create empty <a href="https://docs.python.org/2.7/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><code>dict</code></a> object to fill it on the next lines</p>
<pre><code>data_to_save = {}
data_to_save['savetime'] = str(datetime.datetime.now())[:19]
data_to_save['api_key'] = key_submitted
data_to_save['user'] = uniqueid
</code></pre>
<p>when we can just create it filled like</p>
<pre><code>data_to_save = {'savetime': str(datetime.datetime.now())[:19],
                'api_key': key_submitted,
                'user': uniqueid}
</code></pre></li>
<li><p>Assignments are not allowed in <a href="https://docs.python.org/2/tutorial/controlflow.html#if-statements" rel="nofollow noreferrer"><code>if</code></a> statements (more at <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-conditions" rel="nofollow noreferrer">docs</a>)</p>
<pre><code>if api_exists = True:
</code></pre>
<p>so this line will cause <a href="https://docs.python.org/2/library/exceptions.html#exceptions.SyntaxError" rel="nofollow noreferrer"><code>SyntaxError</code></a> (i guess this is a typo).</p></li>
<li><p>Checks like</p>
<pre><code>if user_exists == True:
    ...
</code></pre>
<p><a href="https://stackoverflow.com/a/2021257/5997596">are redundant</a>, we can just write</p>
<pre><code>if user_exists:
    ...
</code></pre>
<p>and have the same effect.</p></li>
<li><p>We don't need to explicitly close file when use <a href="https://docs.python.org/2/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code></a> statement, this is what <a href="https://docs.python.org/2/glossary.html#term-context-manager" rel="nofollow noreferrer">context managers</a> for: cleanup after exiting <code>with</code> statement block.</p></li>
<li><p>Your <code>databases/api_key.txt</code> file after first iteration will have invalid <code>JSON</code> object, because you are simply writing new serialized <code>data_to_save</code> object at the end of the file, while you should modify <code>database</code> object (which seems to be a list of dictionaries) and write serialized new version of it, so we don't need <code>r+</code> mode as well.</p></li>
</ol>
<p>Let's define utility function which saves new API key data like</p>
<pre><code>def save_database(database,
                  api_keys_file_path="databases/api_keys.txt"):
    with open(api_keys_file_path, 'w') as api_keys_file:
        api_keys_file.write(json.dumps(database))
</code></pre>
<p>then we can have something like</p>
<pre><code>data_to_save = {'savetime': str(datetime.datetime.now())[:19],
                'api_key': key_submitted,
                'user': uniqueid}
api_exists = False
user_exists = False
with open("databases/api_keys.txt", 'r') as api_keys_file:
    database = json.loads(api_keys_file.read())
    # database object should be iterable,
    # containing dictionaries as elements,
    # so only possible solution -- it is a list of dictionaries
    for i in database:
        if i['api_key'] == key_submitted:
            send_text_to_user(userid, "[b]Error: That API key is already in use.[/b]", "red")
            api_exists = True
        if i['user'] == uniqueid:
            user_exists = True

    if user_exists:
        if api_exists:
            send_text_to_user(userid, "[b]Error: Your API key was already saved at another time.[/b]", "red")
        else:
            # looking for user record in database
            user_record = next(record for record in database
                               if record['user'] == uniqueid)
            # setting new API key
            user_record['api_key'] = key_submitted
            save_database(database)
            send_text_to_user(userid, "[b]Okay, I replaced your API key.[/b]", "green")

if not user_exists:
    database.append(data_to_save)
    save_database(database)
</code></pre>
<h1>Example</h1>
<p>I've created directory <code>databases</code> with <code>api_keys.txt</code> file which contains single line</p>
<pre><code>[]
</code></pre>
<p>because at the beginning we have no API keys.</p>
<p>Let's assume our missed objects are defined like</p>
<pre><code>key_submitted = '699aa2c2f9fc41f880d6ec79a9d55f29'
uniqueid = 3
userid = 42


def send_text_to_user(userid, msg, color):
    print(msg)
</code></pre>
<p>so with above code it gives me at first script execution empty output, and on the second one:</p>
<pre><code>[b]Error: That API key is already in use.[/b]
[b]Error: Your API key was already saved at another time.[/b]
</code></pre>
<h1>Further improvements</h1>
<ul>
<li>Should we <a href="https://docs.python.org/2/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer"><code>break</code></a> from <a href="https://docs.python.org/2/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer"><code>for</code></a>-loop if one of conditions (API key or user has been already registered in database) is satisfied?</li>
<li>Maybe it will be better to use already written database instead of reinventing the wheel? If you need <code>JSON</code> objects you should take a look at <a href="https://tinydb.readthedocs.io/en/latest/" rel="nofollow noreferrer"><strong>TinyDB</strong></a>.</li>
</ul>
</div>
<span class="comment-copy"><code>if api_exists = True</code> â€“ assignments are not allowed in <code>if</code> statements</span>
<span class="comment-copy">I am pretty much learning python without tutorials with just trial and error, so that's why my code is so random sometimes. That said... <b>1:</b> You are right, and I knew about this one, but I guess I am too tired to see. <b>2:</b> Yeah, point 2 was totally a typo. <b>3:</b> Oh, that is nice. <b>4:</b> Hm, didn't know this one, but in essence I guess it gives the same result. <b>5:</b> That's clever. I just recreate the entire file and write it instead of trying to keep most of the file untouched and just overwrite the desired data.</span>
<span class="comment-copy">On your suggested improvements: I wouldn't want to break the for loop because I want to make sure that different users don't share the same api key (it must be unique). Also the same for users, I don't want 2 different entries for each user, so I tried the for loop in order to flag that user or api key (or both) exists, and then do a different thing for each case.</span>
<span class="comment-copy">@Saelyth: btw why you don't use <a href="https://www.sqlite.org/" rel="nofollow noreferrer"><code>sqlite</code></a> or any other, already written, well-supported and stable database?</span>
<span class="comment-copy">So your code so far helps me, but is not finished. It's missing the case "if an user already have an api key saved but it wants to replace it with a new api key". That's where I did put that comment <code>#Here, stackoverflow</code> and it was the very reason of me asking for help.</span>
<span class="comment-copy">The person that asked me to do this doesn't want to use a proper database and refuses to install any software (which is why I didn't even tried sqlite or TinyDB, and I choose to use .txt files).</span>
