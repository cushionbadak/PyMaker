<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5036700/how-can-you-dynamically-create-variables-via-a-while-loop">How can you dynamically create variables via a while loop? [duplicate]</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I have variables <code>text1</code>, <code>text2</code>, <code>text3</code>. I want to print them.</p>
<pre><code>for i in range(1, 4):
    text = 'text' + str(i)
    print(text)
</code></pre>
<p>This code prints strings
text1
text2
text3
, not the content of them.</p>
</div>
<div class="post-text" itemprop="text">
<p>While I concur with the other comments, there is a way.
But please try to find a better way to do this.</p>
<pre><code>for i in range(1,4):
    text = 'text' + str(i)
    print(eval(text))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The correct way to do this is python is to use dictionaries. At the moment you are taking a string object, referenced by the variable text which contains the string 'text' and concatenating it with string object 'i' to make a new string object 'texti' and making the text variable reference that. Ie all you do is make a new string object and reference it with the same variable.</p>
<p>What you want to do is make a dictionary where the keys are the variables and the values contain your referenced objects.</p>
<pre><code>variables = {'var1':'Hello', 'var2':'World'}
</code></pre>
<p>now if you want to get 'Hello' you would </p>
<pre><code>print(variables['var1'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't want to do this, try using a list or a dictionary instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>If for some reason you need to do this, you can use the function <code>eval</code> to parse a string as a python expression. Just replace your <code>print(text)</code> line with</p>
<pre><code>print(eval(text))
</code></pre>
<p>But as James Lingham said, this is not a good idea. It's confusing to read and prone to error, and much simpler solutions exist. For example, you could just create a list <code>[text1, text2, text3]</code>, and then loop through them.</p>
<pre><code>text = [text1, text2, text3]
for i in text:
    print(i)
</code></pre>
</div>
<span class="comment-copy">Don't try to dynamically create variables. That's the wrong way. Use a <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">dictionary</a> instead.</span>
<span class="comment-copy">It would work but please avoid using eval in code op, unless you want huge security holes.</span>
