<div class="post-text" itemprop="text">
<p>I'm using module <a href="https://docs.python.org/2/library/configparser.html" rel="nofollow noreferrer">configparser</a> in Python 2.7.</p>
<p>In my config file, I want the section <em>log</em> to be optional; my parsing module will provide default values if the section does not exist.</p>
<p>My config file looks like this:</p>
<pre><code>[log]
filename = C:/tmp/myapp.log
</code></pre>
<p>Is there a method to read values from a section that may be absent from the config file? Method <a href="https://docs.python.org/2/library/configparser.html#ConfigParser.ConfigParser.items" rel="nofollow noreferrer">items</a> reads the values, but assumes the section exists and throws an exception if not.</p>
</div>
<div class="post-text" itemprop="text">
<p>ConfigParser has method <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.has_section" rel="nofollow noreferrer">has_section</a></p>
</div>
<div class="post-text" itemprop="text">
<p>ConfigParser is all about parsing files. As the name suggests. If people start using it for config management they will run into all kinds of weird limitations. You can't have defaults for a section without some wrapping code in ConfigParser. The defaults that ConfigParser mentions are shared across all sections!</p>
<p>I am actively working on a library called configmanager now that solves some of these issues. I believe that one has to declare all the available configs first and provide defaults if possible. configmanager allows to do that. And you can still use configparser for persistence.</p>
<p>To solve your problem with configmanager:</p>
<pre><code>config = Config({
    'log': {
        'filename': 'C:/tmp/myapp.log'
    }
})
config.configparser.load('config.ini')
print(config.log.filename.value)
</code></pre>
</div>
<span class="comment-copy">Have a look at the Examples section of the docs you linked.</span>
<span class="comment-copy">have you tried <code>ConfigParser.NoSectionError</code> ?</span>
