<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19249201/how-to-create-a-number-of-empty-nested-lists-in-python">How to create a number of empty nested lists in python [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>i'm trying to create an empty nested list in python. I have searched for information regarding nested list and most are usually nested lists that already has values in it. </p>
<p>The reason I needed a nested list is because I have a set of items: Apple, Pears and Oranges. However, Each item has another list that consists of: ID, price, quantity. </p>
<p>So what I'm planning is to:
1. Put all items into index 0,1,2 respectively. 
So, apple = [0], pears =[1], oranges =[2]
2. Create another nested list to put ID,price and quantity.
So using apple as an example, I would do:
apple[0][0].append(ID), apple[0][1].append(price), apple[0][2].append(quantity)</p>
<p>Is it possible for nested list to work these way? Or is there any other way to create an empty nested list? By the way, the apple, pears and orange all have their own python code file, so I have to import the pears and orange python file into the apple python file. I would appreciate any help given. Thank You.</p>
<p>Codes from apple.py:</p>
<pre><code>fruits = [],[]

fruits[0],[0].append("ID")
fruits[0],[1].append("price")
fruits[0],[2].append("quantity")
</code></pre>
<p>Codes from pears.py:</p>
<pre><code>fruits = [],[]

fruits[1],[0].append("ID")
fruits[1],[1].append("price")
fruits[1],[2].append("quantity")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can do this, however be aware that your <code>fruits</code> object is a tuple, not a list. This means you can't append new types of fruit to it.</p>
<pre><code>&gt;&gt;&gt; fruits = [],[]
&gt;&gt;&gt; type(fruits)
&lt;type 'tuple'&gt;

&gt;&gt;&gt; fruits.append([])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'tuple' object has no attribute 'append'
</code></pre>
<p>Use additional square brackets to make it a list of lists:</p>
<pre><code>&gt;&gt;&gt; fruits = [[],[]]
&gt;&gt;&gt; type(fruits)
&lt;type 'list'&gt;
&gt;&gt;&gt; fruits.append([])
&gt;&gt;&gt; fruits
[[], [], []]
</code></pre>
<p>Then you can populate the inner lists as you expect, only you need to omit that extra index and comma, which were not valid Python:</p>
<pre><code>&gt;&gt;&gt; fruits[0].append("ID")
&gt;&gt;&gt; fruits[0].append("price")
&gt;&gt;&gt; fruits[0].append("quantity")
&gt;&gt;&gt; fruits
[['ID', 'price', 'quantity'], [], []]
</code></pre>
<p>And then you would repeat with <code>fruit[1]</code>, <code>fruit[2]</code>.</p>
<p>Or you can do them all in a loop:</p>
<pre><code>fruits = []
for n in range(3):
    fruits[n].append("ID")
    fruits[n].append("price")
    fruits[n].append("quantity")
</code></pre>
<p>But really, this sounds like something you should be using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dict</a> for:</p>
<pre><code>fruits = {}
for id, fruit in enumerate(["apples", "pears", "oranges"]):
    fruits[fruit] = { "ID": id, "price": None, "quantity": 0 }
</code></pre>
<p>Then you can use them like this:</p>
<pre><code>fruits["apples"]["price"] = 2.99
fruits["apples"]["quantity"] = 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use python dictionary and do it this way:</p>
<pre><code>fruits={}
one_fruit={'ID':0,'price':0,'quantity':0}
fruits['apple']=one_fruit
</code></pre>
<p>or you can do it with lists in this way:</p>
<pre><code>fruits = [],[]    
fruits[0].append("ID")
fruits[0].append("price")
fruits[0].append("quantity")
</code></pre>
<p>I would choose the first method, with dictionaries, but depends of what you are going to do </p>
</div>
<span class="comment-copy">there is no nested list in your code....actually your code doesn't make any sense</span>
<span class="comment-copy">perhaps, you can show how empty nested list is created instead?</span>
<span class="comment-copy">this is not a make me software service. Try your homework first and study hard. This code spits no effort at all.</span>
<span class="comment-copy">cool, your comment actually made no relevance considering you just outright claimed my codes doesn't make any sense even though the people who answered below has actually used the same method that I did. Fyi, these ain't my whole codes. Ever heard of constructive criticism? Your comment is not a example of one.</span>
<span class="comment-copy">hello, thanks for the reply. Is it possible to create database using the dict method??</span>
<span class="comment-copy">If you want to persist data, the <a href="https://docs.python.org/3/library/shelve.html" rel="nofollow noreferrer">shelve</a> module provides lightweight persistence of dictionaries.</span>
<span class="comment-copy">hello, thanks for the reply. For the 'one_fruit={'ID':0,'price':0,'quantity':0}', is it possible if i use a variable instead of hard coding the values? This is because the ID is randomly generated and added to the list in a while loop</span>
<span class="comment-copy">Yes, of course it is possible to use a variable like 'one_fruit={'ID':variableID,'price':variable_price , 'quantity':variable_quantity}. You even can do something like 'fruits['apple']['ID']=variable_ID'</span>
<span class="comment-copy">@JasonSmith And you could vote the answer and the help, so next time wiÂ´ll be glad to do it</span>
