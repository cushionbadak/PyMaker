<div class="post-text" itemprop="text">
<p>The output of this code continues to be 4. However, the output should be 3. The set intersection is present because I believe that is the key towards the answer. The reasoning for the answer being 4 instead of 3 comes from the number of 2 qs and 1 r that match s2 in s1.</p>
<pre><code>s2 = "qsrqq"
s1 = "qqtrr"
counts1=0
counts2=0
letters= set.intersection(set(s1), set(s2))
for letter1 in set(s1):
    counts1 += s2.count(letter1)
for letter2 in set(s2):
    counts2 += s1.count(letter2)


counts = min(counts1, counts2)
print (counts)
</code></pre>
<p>Any help is much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to maintain a count of the number of characters in common, you should use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="noreferrer">collections.Counter</a> instead of <code>set</code>. </p>
<pre><code>from collections import Counter

s2 = 'qsrqq' 
s1 = 'qqtrr'

common_letters = Counter(s1) &amp; Counter(s2)  # =&gt; {'q': 2, 'r': 1}
print(sum(common_letters.values()))         # =&gt; 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I replaced your original chunk of code </p>
<pre><code>for letter1 in set(s1):
    counts1 += s2.count(letter1)
</code></pre>
<p>to:</p>
<pre><code>for letter1 in set(s1):
    v = s2.count(letter1)
    print("{0}:{1}".format(letter1, v))
    counts1 += v
</code></pre>
<p>It outputs, it is the letter with occurrence counts:</p>
<pre><code>r:1
q:3
t:0
</code></pre>
<p>It is correct, string <code>s2</code> is qsrqq and you check set(s1) which is set contains <code>r</code> and <code>q</code>
The counts are correct. Similarly, If check the 2nd for-loop, the outputs are:</p>
<pre><code>q:3
r:1
s:1
</code></pre>
<p>therefore the minimum count is 4.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution that doesn't involve sets:</p>
<pre><code>s2 = sorted("qsrqq")
s1 = sorted("qqtrr")

count = 0
while len(s1)&gt;0 and len(s2)&gt;0:
    if s1[0] == s2[0]:
        count += 1
        s1 = s1[1:]
        s2 = s2[1:]
    elif s1[0] &lt; s2[0]:
        s1 = s1[1:]
    else:
        s2 = s2[1:]

print(count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is another way to do it using no modules.</p>
<pre><code>sum(1 for i in zip(sorted(list(s1)), sorted(list(s2))) if len(set(i)) &lt; 2)

3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>#!/usr/bin/python
s2 = "qsrqq"
s1 = "qqtrr"
counts1=0
counts2=0
letters= set.intersection(set(s1), set(s2))
print ("letters: "+str(letters) + " intersection count: "+str(len(letters)))
for letter1 in set(s1):
    print ("letter1 " + str(letter1))
    counts1 += 1
for letter2 in set(s2):
    print ("letter2 " + str(letter2) )
    counts2 += 1

print ("counts1 " + str(counts1) + " counts2 " + str(counts2) )
counts = min(counts1, counts2)
print (counts)
</code></pre>
<p>This results in;</p>
<pre><code>[~]$ python /tmp/test.py
letters: set(
['q', 'r']) intersection count: 2
letter1 q
letter1 r
letter1 t
letter2 q
letter2 s
letter2 r
counts1 3 counts2 3
3
</code></pre>
<p>Analysis, 2 is the correct answer (q and r are the only letters common to both), 3 is the lower number of either sets unique values.</p>
</div>
<div class="post-text" itemprop="text">
<p>Do a count for each letter, and take the minimum to find out how many of that letter are common to both strings. Then sum that up, and that's your answer.</p>
<pre><code>for letter in letters:
    counts1 += s1.count(letter)
    counts2 += s2.count(letter)
    counts += min(counts1, counts2)
    counts1 = 0
    counts2 = 0
print(counts)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def commonCharacterCount(s1, s2):
    s=0
    for i in list(set(s1)):
        count1=0
        count2=0
        if i in s2:
            count1 = s1.count(i)
            count2=  s2.count(i)
            s=s+min(count1,count2)

    return(s)
</code></pre>
</div>
<span class="comment-copy">what is it you're trying to achieve?</span>
<span class="comment-copy">Can you explain why 3 is the correct answer?</span>
<span class="comment-copy">In s1 there are 2 qs and 1 r that match s2. I just want the answer to output this.</span>
<span class="comment-copy">see : <a href="https://stackoverflow.com/questions/9732515/occurence-of-characters-in-common-in-two-strings" title="occurence of characters in common in two strings">stackoverflow.com/questions/9732515/â€¦</a></span>
<span class="comment-copy">I saw that and this is how I built my code. However, this does not give the answer I need.</span>
<span class="comment-copy">Your answer is correct. However, I like the simplicity of the top answer.</span>
<span class="comment-copy">gosh I love print statements</span>
<span class="comment-copy">Thank you for contributing. Maybe you could add a short explanation to the code to help other readers and also explain why OP's code is wrong to help them improve.</span>
