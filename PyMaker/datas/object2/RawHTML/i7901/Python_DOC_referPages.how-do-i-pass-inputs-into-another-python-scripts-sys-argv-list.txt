<div class="post-text" itemprop="text">
<p>I have a Python script I wrote to be called from the command line.  I am writing a GUI wrapper but do not want to change the main function.  In the GUI code, I am calling the script using <code>subprocess.run(['./executable.py', input])</code> but the input is not visible in <code>executable.py</code>'s <code>sys.argv</code> list.  How do I pass the input such that it would be visible to <code>sys.argv</code>?</p>
<p>Here is a test script I have saved as <code>test.py</code> (made it executable <code>chmod +x test.py</code>):</p>
<pre><code>#!/usr/bin/env python
# script to test using sys.argv with subprocess

import sys

print(sys.argv)
</code></pre>
<p>Here is what I get when calling this from the command line:</p>
<pre><code>$&gt; ./test.py input.txt
['./test.py', 'input.txt']
</code></pre>
<p>Here is what I get when calling this from within a python shell:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; output = subprocess.run(['./test.py', 'input.txt'], shell=True, stdout=subprocess.PIPE)
&gt;&gt;&gt; &gt;&gt;&gt; print(output.stdout)
b"['./test.py']\n"
</code></pre>
<p>How do I get <code>input.txt</code> to show up in <code>sys.argv</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The safest way to do this is to simply remove <code>shell=True</code>:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; output = subprocess.run(['./test.py', 'input.txt'], stdout=subprocess.PIPE)
&gt;&gt;&gt; print(output.stdout)
b"['./test.py', 'input.txt']\n"
</code></pre>
<p>The other option is to combine the list of inputs into a single string:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; output = subprocess.run('./test.py input.txt', shell=True, stdout=subprocess.PIPE)
&gt;&gt;&gt; print(output.stdout)
b"['./test.py', 'input.txt']\n"
</code></pre>
<p>I am not completely sure why the original method (with a list of inputs and <code>shell=True</code> fails) fails.  Regardless, to avoid <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">running unintended commands/code</a> it is best to avoid using <code>shell=True</code> (<a href="https://stackoverflow.com/a/30831028/3585557">note on when you should use <code>shell=True</code></a>).</p>
</div>
<span class="comment-copy">You shouldn't use <code>shell=True</code> unless you absolutely know you need to.</span>
<span class="comment-copy">It's better to remove the <code>shell=True</code> instead.</span>
<span class="comment-copy">@StevenC.Howell <code>shell=True</code> is quite risky, for details have a look at the documentation: <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
