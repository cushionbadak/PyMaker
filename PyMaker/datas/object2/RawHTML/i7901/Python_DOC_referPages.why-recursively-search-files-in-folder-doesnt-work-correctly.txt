<div class="post-text" itemprop="text">
<p>I need help to understand why this piece of code didn't work as expect.</p>
<p>My directory structure looks like this:</p>
<pre><code>|- tryWalkDir.py

   TryCPP/
   TryCPP/tryHashMap/
   TryCPP/tryHashMap/tryHashMap.cpp
   TryCPP/tryHashMap/tryHashMap.o*
</code></pre>
<p>The script - tryWalkDir.py is intented to search all the .cpp files. I don't know why </p>
<p>[TryCPP/tryHashMap/tryHashMap.cpp,TryCPP/tryHashMap/tryHashMap.cpp] collect 2 times?</p>
<pre><code>Enter into depth:0, folder:TryCPP
folder:TryCPP, cur:TryCPP, sub:['tryHashMap'], files:[], depth:0
recresively call - s:tryHashMap
Enter into depth:1, folder:TryCPP/tryHashMap
folder:TryCPP/tryHashMap, cur:TryCPP/tryHashMap, sub:[], files:
['tryHashMap.cpp', 'tryHashMap.o'], depth:1
process tryHashMap.cpp
append tryHashMap.cpp
process tryHashMap.o
Exit on depth:1, folder:TryCPP/tryHashMap
folder:TryCPP, cur:TryCPP/tryHashMap, sub:[], files:['tryHashMap.cpp', 'tryHashMap.o'], depth:0
process tryHashMap.cpp
append tryHashMap.cpp
process tryHashMap.o
Exit on depth:0, folder:TryCPP
['TryCPP/tryHashMap/tryHashMap.cpp', 'TryCPP/tryHashMap/tryHashMap.cpp']
</code></pre>
<h2>tryWalkDir.py</h2>
<pre><code>class Cell(object):
    def __init__(self, fn, ext):    
       self.fn = fn
       self.ext = ext
       self.fl = [] #list all the files

    def collect_files(self, folder, depth=0):
    ''' collect all the folders containing corresponding extension scripts '''
        print 'Enter into depth:%d, folder:%s' % (depth,folder)

        # level one folder name should start with 'Try' or 'try'
        if depth == 1:
            filename = os.path.basename(folder)[:3]
            if filename in ['Try','try']:
                pass
            else:
                print 'L1 Dir - {0} must start with [Try,try], depth:{1}'.format(filename,depth)
            return

        for cur, sub, files in os.walk(folder):
            print 'folder:{}, cur:{}, sub:{}, files:{}, depth:{}'.format(folder,cur,sub,files,depth)

            #filter out all the files
            #[ self.fl.append(cur+'/'+f) for f in files if os.path.splitext(f)[1][1:] == self.ext ]
            for f in files:
                print 'process %s' % f
                if os.path.splitext(f)[1][1:] == self.ext:
                    print 'append %s' % f
                    self.fl.append(cur+'/'+f)

            #if sub:
            for s in sub:
                print 'recresively call - s:{}'.format(s)
                self.collect_files(cur+'/'+s,depth+1)

        print 'Exit on depth:%d, folder:%s' % (depth,folder)


    def start(self):
        self.collect_files(self.fn,0)
        #print self.fl


def main():
    cell = Cell('TryCPP','cpp')
    cell.start()
    print cell.fl

if __name__ == '__main__': main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error is happening because you are calling <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> multiple times without realizing it. <code>os.walk</code> recurses for you into subdirectories. However, you then call <code>self.collect_files(cur+'/'+s,depth+1)</code> for each subdirectory in your current directory. This will actually cause a file at depth <code>N</code> to appear <code>N</code> times in your output array.</p>
<p>To fix your code, simply remove the loop</p>
<pre><code>for s in sub:
    print 'recresively call - s:{}'.format(s)
    self.collect_files(cur+'/'+s,depth+1)
</code></pre>
<p>As an aside, you should probably use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join</code></a> instead of manually concatenating slashes throughout your code. For example, <code>self.fl.append(cur+'/'+f)</code> could read <code>self.fl.append(join(cur, f))</code>. This is the way suggested by the <code>os.walk</code> documentation:</p>
<blockquote>
<p>To get a full path (which begins with top) to a file or directory in dirpath, do <code>os.path.join(dirpath, name)</code>.</p>
</blockquote>
</div>
<span class="comment-copy">Fix your indentation please. I find it hard to believe that you have a <code>for</code> loop in the middle of your class body, especially since it references <code>self</code>.</span>
<span class="comment-copy">Thanks, Mad. I fix the indentation.</span>
<span class="comment-copy"><code>if filename in ['Try','try']: pass, else: ...</code> can be <code>if filename not in ['Try','try']: ...</code></span>
<span class="comment-copy">When I run your code as-is with the example file structure you've provided above, I get <code>['TryCPP/tryHashMap/tryHashMap.cpp']</code>. Are you sure it isn't working?</span>
<span class="comment-copy">@mwm314. There is definitely a mistake. The call is doubly recursive. Are you sure you have two layers of directories?</span>
