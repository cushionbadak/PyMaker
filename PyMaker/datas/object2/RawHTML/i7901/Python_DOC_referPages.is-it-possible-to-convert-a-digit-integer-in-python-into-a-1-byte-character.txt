<div class="post-text" itemprop="text">
<p>I have a variable <code>x</code> in my code that takes only three values <code>x = {1, 2, 3}</code>. When use the <a href="https://docs.python.org/2/library/sys.html" rel="nofollow noreferrer"> sys.getsizeof()</a> I get <code>24</code> which is the size of an object in bytes. </p>
<hr/>
<h1>Question</h1>
<p>I was wondering if it's possible in python to convert <code>x</code> to char with <code>1 byte</code> size. I used the <code>str(x)</code> but <code>sys.getsizeof(str(x))</code> printed <code>38 bytes</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is not possible for a single byte, since python objects always include the overhead of the Python implementation.</p>
<p>Your use case is only relevant in practice, if you have larger amounts of such values (thousands or millions, e.g. an image). In that case you would use for example the <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer"><code>array</code></a> or <a href="https://docs.python.org/3/library/functions.html#func-bytearray" rel="nofollow noreferrer"><code>bytearray</code></a> objects as containers. Another approach would be using <a href="https://docs.scipy.org/doc/numpy/" rel="nofollow noreferrer"><code>numpy</code></a> arrays.</p>
</div>
<span class="comment-copy">Seriously, why do you want to do this? Are you trying to run Python on a 1980s home computer with 16K of memory? Just use the classes that Python gives you, and stop worrying about micro-optimisations like this.</span>
<span class="comment-copy">Don't know why you would want to do this, but numpy seems to be able to convert integers to [8bit format ](<a href="https://docs.scipy.org/doc/numpy/user/basics.types.html" rel="nofollow noreferrer">docs.scipy.org/doc/numpy/user/basics.types.html</a>). Although I tested <code>np.uint8</code> using <code>sys.getsizeof()</code> and it returns, I guess there is something else going on</span>
<span class="comment-copy">Objects are not the underlying value, values are boxed. But if you need interoperability with low-level languages and want to pass byte - no problem: use <code>array</code>, <code>struct</code> or <code>ctype</code> modules. Pointer/reference are absolutely correct in this case (as well as size)</span>
