<div class="post-text" itemprop="text">
<p>I declared a integer variable <code>x</code> with value <code>0</code>.</p>
<pre><code>&gt;&gt;&gt; x = 0
</code></pre>
<p>When i run this line:</p>
<pre><code>&gt;&gt;&gt; x += 3
&gt;&gt;&gt; x
3
</code></pre>
<p>Everything goes well. But when i run this line:</p>
<pre><code>&gt;&gt;&gt; x.__iadd__(3)
</code></pre>
<p>Python raises an exception:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'int' object has no attribute '__iadd__'
</code></pre>
<p>Why python throws this exception while in <a href="https://docs.python.org/3/library/operator.html#operator.__iadd__" rel="nofollow noreferrer">official python documentation</a> for <code>operator</code> module said <code>+=</code> operator calls <code>__iadd__</code> method?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>in official python documentation for <code>operator</code> module said <code>+=</code> operator calls <code>__iadd__</code> method?</p>
</blockquote>
<p>No, it says that <code>a += b</code> is equivalent to <code>a = operator.iadd(a, b)</code>, not <code>a.__iadd__(b)</code>.</p>
<p><code>operator.iadd(a, b)</code> is not equivalent to <code>a.__iadd__(b)</code>. <code>operator.iadd</code> falls back to <code>__add__</code> and <code>__radd__</code> if <code>__iadd__</code> is not present or returns <code>NotImplemented</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It does not say that; what you're linking to in the documentation is the <code>operator</code> module:</p>
<blockquote>
<p><code>operator.iadd(a, b)</code><br/>
<code>operator.__iadd__(a, b)</code> </p>
<p><code>a = iadd(a, b)</code> is equivalent to <code>a += b</code>.</p>
</blockquote>
<p>The <code>operator</code> module contains function equivalents for operators and similar things, it doesn't define standard Python operators. It doesn't say anything about <code>x.__iadd__</code>.</p>
<hr/>
<p>The relevant documentation is rather <a href="https://docs.python.org/3/reference/datamodel.html#object.__iadd__" rel="nofollow noreferrer">this</a>:</p>
<blockquote>
<p><code>object.__iadd__(self, other)</code> </p>
<p>These methods are called to implement the augmented arithmetic assignments (<code>+=</code>, ...). These methods should attempt to do the operation in-place (modifying <em>self</em>) and return the result (which could be, but does not have to be, <em>self</em>). <strong>If a specific method is not defined, the augmented assignment falls back to the normal methods.</strong> ...</p>
</blockquote>
<p>So, an object <em>can</em> define <code>__iadd__</code> to override the behaviour of a <code>+=</code> operation, but if such a method is not defined, it falls back to the default <code>a = a + b</code> behaviour.</p>
</div>
<span class="comment-copy">Because <code>x += y</code> falls back to <code>x = x + y</code> if <code>__iadd__</code> isn't defined. See <a href="https://docs.python.org/3/reference/datamodel.html#object.__iadd__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__iadd__</a></span>
