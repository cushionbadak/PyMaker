<div class="post-text" itemprop="text">
<p>So I have a huge structure in MATLAB containing every single player in the english premier league (688 of them). Inside the section on a single player there are more arrays containing various statistics (tackles, crosses, goals etc) for every single game played in the season.</p>
<p>So to clarify, I have a 688 length struct, containing around 40 elements. Each element is an array with 38 entries.</p>
<p>What data structure would you use to store this data? I've been reading about relational databases and think I should start learning about PostgreSQL.. I just wanted to ask on here what you would use?</p>
</div>
<div class="post-text" itemprop="text">
<p>You definitely could use an SQL database, but if you wanted to stick with strictly python, you could take advantage of Python's object oriented programming style. 
I would define an object class as so:</p>
<pre><code>class Player:
    def __init__(self, optional_paramater1, opt_param2):
        #Stuff you want to happen when object is initialized

    def read_in_matlab_structure(self, matlab_info_as_text):
        self.tackles = #Wheverever you get this info from
        self.crosses = #...
        self.goals = #...
</code></pre>
<p>Then, when you make the object, you can access each of the values below a self defined name.</p>
<pre><code>players = [] #This would be a list. Depending on your use, you could also
             #Use a dictionary that links name to the object
             #That way you can call up a person by name. 
             #eg. players["Babe Ruth"]
             #There are also sets in Python that might be applicable to
             #Your situation.
for entry in matlab_structure:
    temp_player = Player(name)
    temp_player.read_in_matlab_structure(entry)
    players.append(temp_player)
#then, when you want to access player information, 
#  lets say you want to see all the players who had more than 8 goals in a season:
for person in players:
    if person.goals &gt;= 8:
        print(person.name)
</code></pre>
<p>Hope this gives you an idea. More info on Python data structures:</p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">Python 3 Data Structures</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In terms of built in data structures a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> sounds like your best bet.
You can export it with the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json module</a> if that's necessary.</p>
<p>For an external databases, SQLite is probably your best choice. It requires a lot less setup than other SQL databases. As in you can just make a .db file and start sending data to it without any administrative work.</p>
</div>
<span class="comment-copy">amazing! Thanks, this is perfect</span>
