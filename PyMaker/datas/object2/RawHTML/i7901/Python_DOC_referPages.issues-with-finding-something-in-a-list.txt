<div class="post-text" itemprop="text">
<p>I have a program that retrieves messages from my email (via POP) and I want to retrieve the subject of the emails, I'm using this:</p>
<pre><code>import poplib
from email import parser
pop_srvr = poplib.POP3_SSL('pop.gmail.com')
pop_srvr.user('username')
pop_srvr.pass_('password')
messages = [pop_srvr.retr(i) for i in range(1, len(pop_srvr.list()[1]) + 1)]
messages = [b"\n".join(mssg[1]) for mssg in messages]
messages = [parser.Parser().parsestr(mssg) for mssg in messages]
for message in messages:
  print (message['subject'])
  print (message['body'])
pop_srvr.quit()
</code></pre>
<p>but when I run it I get this</p>
<pre><code>Traceback (most recent call last):
File "C:/Users/Yousef/Desktop/parser proto.py", line 11, in &lt;module&gt;
messages = [parser.Parser().parsestr(mssg) for mssg in messages]
File "C:/Users/Yousef/Desktop/parser proto.py", line 11, in &lt;listcomp&gt;
messages = [parser.Parser().parsestr(mssg) for mssg in messages]
File "C:\Users\Yousef\AppData\Local\Programs\Python\Python36-
32\lib\email\parser.py", line 68, in parsestr
return self.parse(StringIO(text), headersonly=headersonly)
TypeError: initial_value must be str or None, not bytes
</code></pre>
<p>someone plz tell me what I'm doing wrong...</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried casting it to a string?</p>
<p><code>messages = [parser.Parser().parsestr(str(mssg)) for mssg in messages]</code></p>
<p>It may result in an incorrect string, but this way you can check if <code>mssg</code> is indeed a bytes-like. If the error disappears, you can cast it in a way that works for your program.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>It seems linke  poplib.POP3_SSL module returns bytes object.

You probably need to change following :


    ["\n".join(mssg[1]) for mssg in messages]

 to

    [b"\n".join(mssg[1]) for mssg in messages]
</code></pre>
<p>I found that <code>email</code> module has <code>message_from_bytes</code> function. Have you tried using it? I may be misunderstood in below code. Please verify at your side : </p>
<pre><code>import email

messages = [pop_srvr.retr(i) for i in range(1, len(pop_srvr.list()[1]) + 1)]
messages = [b"\n".join(mssg[1]) for mssg in messages]
messages = [email.message_from_bytes(mssg) for mssg in messages]
for message in messages:
  print (message['subject'])
  print (message['body'])
pop_srvr.quit()
</code></pre>
<p>More on : <a href="https://stackoverflow.com/questions/35679338/parsing-email-contents-from-poplib-with-email-module-python">parsing email contents from poplib with email module (PYTHON)</a></p>
</div>
<span class="comment-copy">When I used this, No errors occur, I just get a bunch of Nones on my console.</span>
<span class="comment-copy">My guess is that <code>mssg</code> is a Nonetype. Casting it to a string results in "None". Can you print the type and value of <code>mssg</code> before this line? <code>print(type(mssg)); print(mssg)</code> ( in two seperate lines so that if the second print errors, you can still see the type).</span>
<span class="comment-copy">I can't print mssg because it's just a temporary variable in the loop, it just tells me 'mssg' is not defined</span>
<span class="comment-copy">You can access it outside of the loop by referring to the first element of the list <code>print(type(messages[0]))</code></span>
<span class="comment-copy">now I have a different error in</span>
<span class="comment-copy">What was error. Can you please edit post error above?</span>
<span class="comment-copy">messages = [parser.Parser().parsestr(mssg) for mssg in messages], it says return self.parse(StringIO(text), headersonly=headersonly) TypeError: initial_value must be str or None, not bytes</span>
<span class="comment-copy">I just updated it above</span>
<span class="comment-copy">I have updated the code with <code>message_from_bytes</code> method. Have you tried that? More on : <a href="https://docs.python.org/3/library/email.parser.html#email.message_from_bytes" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
