<div class="post-text" itemprop="text">
<p>I'm working on a project where I need to change numerical values into alphabetical characters, currently, I have this:</p>
<pre><code>if finposb == "2":
    finposb = "a"
if finposb == "3":
    finposb = "b"
if finposb == "4":
    finposb = "c"
if finposb == "5":
    finposb = "d"
if finposb == "6":
    finposb = "e"
if finposb == "7":
    finposb = "f"
if finposb == "8":
    finposb = "g"
if finposb == "9":
    finposb = "h"
</code></pre>
<p>I would like to know if there's a way to reduce that to a shorter code line, thanks!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>letters='abcdefghijklmnopqrstuvwxyz'
finposb=letters[int(finposb)-2]
</code></pre>
<p>This should work, no dictionaries needed. If you want it even shorter:</p>
<pre><code>finposb='abcdefghijklmnopqrstuvwxyz'[int(finposb)-2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need <em>any</em> intermediate data structures; use the ASCII value (or Unicode code point in Python 3) of <code>finposb</code>.</p>
<pre><code># ord("a") - ord("2") == 47
finposb = chr(ord(finposb) + 47)
</code></pre>
<p>If you didn't have a nice, implicit rule like this, you can use <code>string.maketrans</code> to make a translation table, and <code>string.translate</code> to apply that table to your input.</p>
<pre><code>&gt;&gt;&gt; tbl = string.maketrans("23456789", "abcdefgh")
&gt;&gt;&gt; string.translate("2", tbl)
'a'
</code></pre>
<p><code>translate</code> acts as an identity function if the first argument does not appear in the translation table:</p>
<pre><code>&gt;&gt;&gt; string.translate("z", tbl)
'z'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary:</p>
<pre><code>DIGIT2LETTER = {
    "2": "a", "3": "b", "4": "c", "5": "d", "6": "e", "7": "f", "8": "g", "9": "h"
}
finposb = DIGIT2LETTER[finposb]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this case, a <a href="https://docs.python.org/2/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> is probably what you're looking for.</p>
<pre><code>finposb = {
    "2": "a",
    ...
    "9": "h"
}

&gt;&gt;&gt; print(finposb["2"])
a
</code></pre>
<p>An advantage of a dictionary is that you may map several keys to the same value, for example if you wanted both <code>"2"</code> and <code>2</code> to map to <code>"a"</code>, you could say</p>
<pre><code>finposb["2"] = "a"  # string
finposb[2] = "a"    # numeric
</code></pre>
<p>Further, there are two reasonable ways of acquiring your value from a key (such as "2" to "a").</p>
<pre><code>finposb[key]  # raise KeyError if key is not in the dictionary
finposb.get(key, None)  # default to None if the key is missing
</code></pre>
<p>The first is convenient because it throws a useful error and can be certain that the key is not in your dictionary, while the second has many other conveniences, such as being able to return itself if the key is missing.</p>
<pre><code>finposb.get(key, key)  # returns key if key does not map to a value
</code></pre>
<hr/>
<p>Classically, this type of table is used to look up a character set, such as <a href="http://www.asciitable.com/" rel="nofollow noreferrer">ASCII</a> where many characters may be stored in a compact way (how else would you express a letter to a computer than as a number?) and later interpreted by a program.</p>
<p>A more modern form of this is called <a href="https://en.wikipedia.org/wiki/Unicode" rel="nofollow noreferrer">unicode</a>, which can be used to describe a very great number of different characters beyond the "normal" Latin Alphabet.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; pool = {"2": "a", "3": "b", "4": "c", "5": "d", "6": "e", "7": "f", "8": "g", "9": "h"}
&gt;&gt;&gt; finposb = '2'  # get any digit here
&gt;&gt;&gt; if str(finposb) in pool.keys():
    finposb = pool[str(finposb)]


&gt;&gt;&gt; finposb
'a'
</code></pre>
<p>if you use digits as string in dictionary then represent it as string in whole snippet.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can abuse of <strong><a href="https://docs.python.org/3/library/functions.html#chr" rel="nofollow noreferrer"><code>chr()</code></a></strong> built-in and get:</p>
<pre><code>finposb = chr(int(finposb)+95)
</code></pre>
<p>Without hard-coding a list for it.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import string
finposb = string.ascii_lowercase[int(finposb)-2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use this</p>
<pre><code>import string
finposb.translate(string.maketrans("".join([str(i) for i in range(2,10)]), "abcdefgh"))
</code></pre>
<p>or simpler</p>
<pre><code>import string
finposb.translate(string.maketrans("23456789", "abcdefgh"))
</code></pre>
</div>
<span class="comment-copy">make a dictionary for this</span>
<span class="comment-copy">You can index a string; no list is necessary.</span>
<span class="comment-copy">good point chepner</span>
<span class="comment-copy">You don't need to keep calling <code>str</code>; all the values are already strings.</span>
<span class="comment-copy">I have used str() method for digit to be check in case if it is in integer format then program execution don't break.</span>
<span class="comment-copy">removed characters hardcoding</span>
<span class="comment-copy"><code>string.ascii_lowercase[...]</code> is legal; no need to build a list first.</span>
