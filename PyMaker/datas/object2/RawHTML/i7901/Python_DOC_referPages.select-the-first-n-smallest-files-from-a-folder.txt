<div class="post-text" itemprop="text">
<p>I have a directory with many files, roughly 50k. I would like to select the <strong>n</strong> smallest files.</p>
<pre><code>import os

def main():
listfile = os.listdir("../../folder")
for singlefile in listfile:
    print singlefile
</code></pre>
<p>with this code, unfortunatly, I will select them all.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/library/os.path.html#os.path.getsize" rel="nofollow noreferrer"><code>os.path.getsize</code></a> to get the filesize and then just <code>sort</code> your files by it. (<code>heapq.nsmallest</code> is generally preffered but already covered in another anser, so I'll show an alternative):</p>
<pre><code>import os

directory = "../../folder"
n = 10

files = os.listdir(directory)
files_sorted_by_size = sorted(files, key=lambda filename: os.path.getsize(os.path.join(directory, filename)))  
nsmallest_files = files_sorted_by_size[:n] 
print(nsmallest_files)  
</code></pre>
<p>In one line:</p>
<pre><code>sorted(os.listdir(directory), key=lambda filename: os.path.getsize(os.path.join(directory, filename)))[:n]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def main():
 # The folder containing files.
 directory = ""../../folder""

 # Get all files.
 list = os.listdir(directory)

 # Loop and add files to list.
 pairs = []
 for file in list:

   # Use join to get full file path.
   location = os.path.join(directory, file)

   # Get size and add to list of tuples.
   size = os.path.getsize(location)
   pairs.append((size, file))

   # Sort list of tuples by the first element, size.
   pairs.sort(key=lambda s: s[0])

 # Display pairs.
 for pair in pairs:
  print(pair[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/os.html#os.stat" rel="nofollow noreferrer"><code>os.stat</code></a> to get a file's size. In conjuction with <a href="https://docs.python.org/3/library/heapq.html#heapq.nsmallest" rel="nofollow noreferrer"><code>heapq.nsmallest</code></a>, you can easily find the smallest files:</p>
<pre><code>from os import listdir
from os import stat
from heapq import nsmallest

n = 10
listfile = listdir("../../folder")
smallest = nsmallest(n, listfile, lambda x : stat(x).st_size)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Apart from the above good solutions, here's my 25 cents. you may use <code>os.walk, os.stat &amp; sorted</code> functions to get n smallest files from the directory. It can also be extended to recursive directories. </p>
<pre><code>import os


def get_n_smallest_files(directory, n):
    file_map = {}
    for root, subdirs, files in os.walk(directory):
       for file_path in [root + file for file in files]:
           file_map[file_path] = os.stat(file_path).st_size
    return sorted(file_map.items(), key=lambda x: x[1])[:n]


if __name__ == "__main__":
    directory = "/path/to/directory/"
    small_files_limit = 10
    print get_n_smallest_files(directory, small_files_limit)
</code></pre>
</div>
<span class="comment-copy">what do you mean by "smaller dimension"?</span>
<span class="comment-copy">smaller size of file. @MSeifert</span>
<span class="comment-copy">Thanks for the clarification - I already thought so but wanted to make sure.</span>
<span class="comment-copy">Does this code select the first 10 files with size, in KB, less?</span>
<span class="comment-copy">This will indeed select first 10 files. Do you also want to sort by file size? In the question you did not specify.</span>
<span class="comment-copy">Yes,it work. But i need only the name of file in list.</span>
<span class="comment-copy">@hackkato - cool then only display index of name. Updated code.</span>
<span class="comment-copy">Yes, now work good.</span>
<span class="comment-copy">If i print smallest i got a error .</span>
<span class="comment-copy">@hackkato This works fine for me. Care to share what error you're getting?</span>
<span class="comment-copy">Traceback (most recent call last):   File "prova.py", line 12, in &lt;module&gt;     main()   File "prova.py", line 8, in main     smallest = nsmallest(n, listfile, lambda x : stat(x).st_size)   File "/usr/lib/python2.7/heapq.py", line 432, in nsmallest     result = _nsmallest(n, it)   File "prova.py", line 8, in &lt;lambda&gt;     smallest = nsmallest(n, listfile, lambda x : stat(x).st_size) OSError: [Errno 2] No such file or directory: 'classes.apk.txt'</span>
<span class="comment-copy">No need for the <code>lambda</code> here anyway... just pass it <code>os.path.getsize</code>...</span>
