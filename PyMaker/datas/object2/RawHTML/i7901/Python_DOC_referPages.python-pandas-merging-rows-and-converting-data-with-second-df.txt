<div class="post-text" itemprop="text">
<p>I have two dfs, one with data and the other with "keys" to replace. I want to go on the "keys" df, and if the key exists in the data df, then in the data df, change to the key's value and do some merging on the rows.</p>
<p>so for example, this is the data df:</p>
<pre><code>    col1 col2 col3  total total_col1 total_col2
bbb    V    V    X      2        DF1        DF2
ccc    V    X    X      1        DF1           
zzz    X    V    V      2                   DF2
qqq    X    V    X      1                      
rrr    X    V    V      2       DF1, DF2    
</code></pre>
<p>and this is the "keys" df:</p>
<pre><code>key      value
bbb       b value
zzz       z value
qqq       ----
rrr       b value
</code></pre>
<p>so the output value will merge rows with same value (bbb and rrr same value), if the value is '----' then the data will be the same, and if there is no key then also the data will be the same. so the output is:</p>
<pre><code>         col1 col2 col3  total    total_col1      total_col2
b value    V    V    V      3        DF1, DF2        DF2
ccc        V    X    X      1        DF1           
z value    X    V    V      2                        DF2
qqq        X    V    X      1                      
</code></pre>
<p>is this possible with pandas?</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is yes. Supposed you have the following <code>dataframe</code> as your <code>df1</code>:</p>
<pre><code>&gt;&gt;&gt; df1 = pd.DataFrame({'key':['aaa','bbb','ccc','ddd']})
&gt;&gt;&gt; df1
   key
0  aaa
1  bbb
2  ccc
3  ddd
</code></pre>
<p>Then you have the other <code>dataframe</code> which is the reference table called <code>df2</code>.</p>
<pre><code>&gt;&gt;&gt; df2
   key  value
0  aaa  value a
1  ccc  value c
</code></pre>
<p>In order to get the following results,</p>
<pre><code>&gt;&gt;&gt; result
   key
0  value a
1  bbb
2  value c
3  ddd
</code></pre>
<p>You just have to <code>merge</code> then <code>fillna</code> the <code>NaN</code>.</p>
<pre><code>&gt;&gt;&gt; df1['key'] = df1.merge(df2, on=['key'], how='left')['value'].fillna(value=df1.key, axis=0)
&gt;&gt;&gt; df1
   key
0  value a
1  bbb
2  value c
3  ddd
</code></pre>
<p><strong>ADDITIONAL</strong></p>
<p>If your <code>key</code> in the <code>df1</code> is in the index, then you can use <code>reset_index</code> to convert the <code>index</code> to a <code>column</code>. Example,</p>
<pre><code>&gt;&gt;&gt; df = pd.DataFrame(data={'col1':['val1','val2','val3']}, index=['aaa','bbb','ccc'])
&gt;&gt;&gt; df
    col1
aaa val1
bbb val2
ccc val3
&gt;&gt;&gt; df.reset_index().rename(columns={'index':'key'})
    key  col1
0   aaa  val1
1   bbb  val2
2   ccc  val3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use pandas Dataframe function called update . The documentation for which can be found <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.update.html" rel="nofollow noreferrer">here</a>.</p>
<p>You can go about updating dataframe df with keys in the following way</p>
<pre><code>df.update(keys_df)
</code></pre>
<p>But before this , make sure that the keys column is the index of the keys_df datafrane and only then shall this work.</p>
<p>Hope this helps. Happy Coding. 
Cheers!</p>
</div>
<div class="post-text" itemprop="text">
<p>Below may work for you.</p>
<pre><code># getting the row index of df
df_index = df.index

# getting the row index of keys
keys_index = keys.index

# for those indices existing in keys, we rename the coresponding ones in df
for i in keys_index:
    if i in df_index and keys[i]:
            df.rename(index={i: keys[i]})
</code></pre>
</div>
<span class="comment-copy">And how do you explain the rest of the merge on the other columns?</span>
<span class="comment-copy">my <code>df1</code> index column has no name, so I can't access it like <code>df1['key'] = ...</code>, so how can I access it? <code>df1[level=0]</code> doesn't work</span>
<span class="comment-copy">you can use <code>reset_index</code> to convert the <code>index</code> into <code>column</code>. Please see the edited answer.</span>
<span class="comment-copy">I am having trouble using merge, since the <code>keys</code> in the <code>df_keys</code> are from type of long, and for some reason the values in the <code>df</code> are from type unicode. I am trying to encode it also but it gives another error of <code>ascii can't read codec...</code>. is there a way doing so with <code>==</code> operator or something with merge that would work?</span>
<span class="comment-copy">@TheDaJon I think <code>encode</code> will solve your problem. Sorry I cannot provide an example for this time. However, I believe that <code>encode</code> both <code>key</code> columns in both <code>df</code>s might be able to solve your merging issue. You can convert it by simply <code>df1['key'] = df1['key'].str.encode('encoding-that-you-wish-to-be-passed')</code>. Same way for <code>df2</code>. Then you can try to merge them altogther afteeward. Link for <code>encode</code>, <a href="http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.Series.str.encode.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/version/0.17.0/generated/…</a></span>
<span class="comment-copy">@TheDaJon here is link for standard encoding in Python: <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html#standard-encodings</a> and here is the link for another way, which is passing the encoding when you are reading the database (assuming the data comes from csv format) <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/…</a></span>
