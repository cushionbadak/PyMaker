<div class="post-text" itemprop="text">
<p>In codefight, there is a question:</p>
<blockquote>
<p>Which of the given string definitions are incorrect?</p>
<ol>
<li><p>s = 'abacaba'</p></li>
<li><p>s = "abacaba"</p></li>
<li><p>s = ' 'abacaba' '</p></li>
<li><p>s = ""abacaba""</p></li>
<li><p>s = ' ' 'abacaba' ' '</p></li>
<li><p>s = """abacaba"""</p></li>
</ol>
</blockquote>
<p>The definitions in 3 and 4 are wrong.</p>
<p>My question is if 3 and 4 are wrong way of defining string, shouldn't 5 and 6 be wrong for similar reasoning?</p>
</div>
<div class="post-text" itemprop="text">
<p>To Answer your question </p>
<p>When you use 3 single quotes or 3 double quotes you can have a string that spans <code>multiple lines</code>. That is the reason why you have it for your doc strings. Please see the below example.</p>
<pre><code>&gt;&gt;&gt; s ="""Hello
... whats going on
... thats it"""
&gt;&gt;&gt; s
'Hello\nwhats going on\nthats it'
&gt;&gt;&gt;
</code></pre>
<p>However when 2 single quotes(<code>''</code>) are used or 2 double quotes (<code>""</code>) are used and if you need the string to be encapsulated inside they quotation it should be like below.</p>
<pre><code>"'Hello'" or '\'Hello\''
'"Hello'" or "\"Hello\""
</code></pre>
<p>If you don't do this python interpreter expects a value for 'Hello' instead of considering it as a string.</p>
</div>
<div class="post-text" itemprop="text">
<p>3 and 4 are wrong because '' is empty string and abacaba will be treated as variable so you need to write it as <code>'' + str(abacaba) + ''</code> which will concate your string and also you have to assign value of abacaba before use.</p>
<p>Now your answer when you use <code>"""abacaba"""</code> python will find three different strings <code>""</code>, <code>"abacaba"</code> and <code>""</code> and your result will be <code>'abacaba'</code>.
this happen because you need <code>+</code> sign to concate string stored in variable but for string like <code>"abc"</code> and <code>"xyz"</code> if you write <code>s="abc" "xyz"</code> or <code>s="abc""xyz"</code> you will get result <code>'abcxyz'</code></p>
<p>Here is few examples for you:</p>
<pre><code>&gt;&gt;&gt; s="abc" "xyz"
&gt;&gt;&gt; s
'abcxyz'
&gt;&gt;&gt; s="1""abc""1"
&gt;&gt;&gt; s
'1abc1'
&gt;&gt;&gt; s="1"  "abc"  "1"
&gt;&gt;&gt; s
'1abc1'
&gt;&gt;&gt; s="1"abc"1"
SyntaxError: invalid syntax
&gt;&gt;&gt; abc="2"
&gt;&gt;&gt; s="1"abc"1"
SyntaxError: invalid syntax
&gt;&gt;&gt; s="1"+abc+"1"
&gt;&gt;&gt; s
'121'
&gt;&gt;&gt; s=r"""abc"""  # raw string which will treat all content/special character between "" as your string
&gt;&gt;&gt; s
'abc'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Triple quotes are used most commonly for method descriptions in python.  These method descriptions are called <code>docstrings</code> and are represented as multi-line string literals <code>""" """</code></p>
<p>Here is a sample in python.</p>
<pre><code>def testdocstring():
    """
    this is a test docstring method
    :return: None
    """
    pass

print testdocstring.__doc__
</code></pre>
<p>The output of this <code>print</code> statement will be:</p>
<pre><code>  this is a test docstring method
  :return: None
</code></pre>
<p><strong>EDIT :</strong> As @Varad and @abccd have mentioned, it is also used for multi- line string literals.</p>
</div>
<span class="comment-copy">no. threee double/single quotations are valid. have a look up to string documentation.</span>
<span class="comment-copy">triple quotes are used for <code>docstrings</code> in python just like javadoc.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#strings</a></span>
<span class="comment-copy">Look here at <a href="https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring" rel="nofollow noreferrer">PEP257: What is docstring</a> ?</span>
<span class="comment-copy">@DineshKumar And multi-line string literals</span>
<span class="comment-copy">It's not really to do with javadoc. Docstrings are a specific application of multiline string literals, not the other way around.</span>
<span class="comment-copy">@PeterWood Hmmm..maybe..but what I meant was where it is commonly used.</span>
<span class="comment-copy"><i>"Why do we need them? The same reason we need javadoc"</i> is a really wrong explanation of why we need multi-line string literals.</span>
<span class="comment-copy">Agreed. Updated my answer.</span>
