<div class="post-text" itemprop="text">
<p>I'm attempting to create an autonomous RC car and my Python program is supposed to query the live stream on a given interval and add it to a training dataset. The data I want to collect is the array of the current image from OpenCV and the current speed and angle of the car. I would then like it to be loaded into Keras for processing.</p>
<p>I found out that <code>numpy.save()</code> just saves one array to a file. What is the best/most efficient way of saving data for my needs? </p>
</div>
<div class="post-text" itemprop="text">
<p>As with anything regarding performance or efficiency, test it yourself. The problem with recommendations for the "best" of anything is that they might change from year to year.</p>
<p>First, you should determine if this is even an issue you should be tackling. If you're not experiencing performance issues or storage issues, then don't bother optimizing until it becomes a problem. What ever you do, don't waste your time on premature optimizations.</p>
<p>Next, assuming it actually is an issue, try out every method for saving to see which one yields the smallest results in the shortest amount of time. Maybe compression is the answer, but that might slow things down? Maybe pickling objects would be faster? Who knows until you've tried.</p>
<p>Finally, weigh the trade-offs and decide which method you can compromise on; You'll almost never have one silver bullet solution. While your at it, determine if just adding more CPU, RAM or disk space at the problem would solve it. Cloud computing affords you a lot of headroom in those areas.</p>
</div>
<div class="post-text" itemprop="text">
<p>The most simple way is <code>np.savez_compressed()</code>.  This saves any number of arrays using the same format as <code>np.save()</code> but encapsulated in a standard Zip file.</p>
<p>If you need to be able to add more arrays to an existing file, you can do that easily, because after all the NumPy ".npz" format is just a Zip file.  So open or create a Zip file using <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer"><code>zipfile</code></a>, and then write arrays into it using <code>np.save()</code>.  The APIs aren't perfectly matched for this, so you can first construct a <code>StringIO</code> "file", write into it with <code>np.save()</code>, then use <code>writestr()</code> in <code>zipfile</code>.</p>
</div>
<span class="comment-copy">Use a Database (a lot of choices) or maybe HDF5. Numpy can store multiple arrays (i think it's called savez), but updating in real-time is not it's purpose (and HDF5 might also be limited).</span>
<span class="comment-copy">If I use HDF5, will I be able to append new information to the dataset or do I load it all into memory and save it in one go?</span>
<span class="comment-copy"><a href="https://support.hdfgroup.org/HDF5/Tutor/extend.html" rel="nofollow noreferrer">Extendible Dataset</a>. Yes it might work and maybe is not as much work as a DB and it's also one of the common keras-inputs, but i really think the DB-approach is more powerful (and i trust HDF5 way less than DBs).</span>
