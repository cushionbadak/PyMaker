<div class="post-text" itemprop="text">
<p>I have two lists which are: </p>
<pre><code>&gt;&gt;&gt; list1 = ['gain','archive','win','success']
&gt;&gt;&gt; list2 = ['i','win','game','i','am','success','cool']
</code></pre>
<p>and also I found the same values of both list by comparing the lists.</p>
<pre><code>&gt;&gt;&gt; result= set(list1) &amp; set(list2)
</code></pre>
<p>Output is</p>
<pre><code>set(['win', 'success'])
</code></pre>
<p>Now I want to find the <strong>next</strong> element value of the <code>result</code>. Here it would be: <code>'game'</code> and <code>'cool'</code>.</p>
<p>How can I do this (using python 2.7)?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do a pairwise iteration over your <code>list2</code> and do the "intersection" manually:</p>
<pre><code>list1 = ['gain','archive','win','success']
list2 = ['i','win','game','i','am','success','cool']

set1 = set(list1)

result = []
for item, nextitem in zip(list2, list2[1:]):  # pairwise iteration
    if item in set1:
        result.append(nextitem)   # append the next item if the current item is in the intersection

print(result)  # ['game', 'cool']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given that you have the intersection words</p>
<pre><code>result = { 'win', 'success' }
</code></pre>
<p>You could find the next words in <code>list2</code> like this:</p>
<pre><code>next_words = [list2[list2.index(word)+1] for word in result]
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="noreferrer"><code>index</code></a> gets you the index of the given element in the list. You can add 1 to it to get the next element.</p>
<p>If your element is at the <em>end</em> of the list, it will throw an exception, because there is no "next" element to get.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>index</code> function and add 1. Be careful though, if your common element is the last one of your list, it will generate an error</p>
<pre><code>list1 = ['gain','archive','win','success']
list2 = ['i','win','game','i','am','success','cool']
result= set(list1) &amp; set(list2)

list3 = [list2[list2.index(e)+1] for e in result]
</code></pre>
<p><strong>edit</strong> For the case where you last element is a common element:</p>
<pre><code>result= set(list1) &amp; set(list2)
list4 = []
for e in result:
    try:
        list4.append(list2[list2.index(e)+1])
    except:
        pass
</code></pre>
<p>Output: <code>['game', 'cool']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This does the trick for the next element in list2:</p>
<pre><code>next_result = [list2[list2.index(el)+1] for el in result if list2.index(el)+1&lt;len(list2)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>list2.index</code>, but that's doing a full search just for finding back an index, and artificially increasing complexity from <code>O(n)</code> to <code>O(n*n)</code>.</p>
<p>Just keep track of the indexes of each words.  There are several ways to do that.</p>
<ul>
<li><p>Create your own function that search for common words, and return them as the index of those words in <code>list2</code>.  This probably the least pythonic but the fastest.</p></li>
<li><p>Create a dictionary from the words of <code>list2</code> to their index, then after computing the set intersection, lookup on the dict to find the index and increase by one.  You need to build a full dictionary the size of list2, this might be expensive (but still better than <code>O(n*n)</code>).</p></li>
<li><p>Create a dictionary from the words of <code>list2</code> to their next word or <code>None</code> if there aren't and do a lookup on the dict to find the index.  You need to build a full dictionary the size of list2, this might be expensive.</p></li>
<li><p>If you know how to use <code>itertools</code>, you could do an iterator on <code>list2</code> that yield the index and the word, and filter the result if the word is in <code>list1</code>, then pick only the indexes.</p></li>
</ul>
</div>
<span class="comment-copy">Nice, how can I avoid from  throw an exception when there is no "next" element.</span>
<span class="comment-copy">Depends what you want to happen in that situation. You didn't specify.</span>
