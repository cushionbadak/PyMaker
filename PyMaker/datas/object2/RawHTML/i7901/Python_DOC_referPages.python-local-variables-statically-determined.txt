<div class="post-text" itemprop="text">
<p>Python tutorial says that (<a href="https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces</a>)</p>
<blockquote>
<p>In fact, local variables are already determined statically.</p>
</blockquote>
<p>How to understand this? Based on what I knew <em>static</em> means that the type of a variable is determined at compile time. But it is not true considering for example</p>
<pre><code>x = 1
x = 'str'
</code></pre>
<p>where the variable x is dynamically bound to objects of type int or string at runtime. </p>
<p>Reference: <a href="https://stackoverflow.com/questions/11328920/is-python-strongly-typed">Is Python strongly typed?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to the other answer, consider the error produced by the following code.</p>
<pre><code>x = 1

def function():
    y = x + 1
    x = 3

function()
</code></pre>
<p>This will produce an error like "UnboundLocalError: local variable 'x' referenced before assignment" because it is determined that <code>x</code> is a local variable in <code>function</code> so it should be found in the local scope, negating the global definition.</p>
</div>
<div class="post-text" itemprop="text">
<p>Their <em>existence</em>, and whether a variable lookup is local or global, is determined at compile time.</p>
</div>
<span class="comment-copy">there is no variables in <code>Python</code>: just names and objects</span>
<span class="comment-copy"><a href="https://nedbatchelder.com/text/names.html" rel="nofollow noreferrer">this great post</a> can give you an explanation of what is going on</span>
<span class="comment-copy">@AzatIbrakov: From that post: "Myth: Python has no variables." Variables don't have to work like C variables to use the name. You might prefer the "name" name, but saying Python doesn't have variables is wrong.</span>
<span class="comment-copy">@user2357112: ok, <code>Python</code> has no variables like most people used to think of them</span>
<span class="comment-copy">@AzatIbrakov: thx for the link, I've just read it through, but apart from what user2357112 has pointed out (Python does have variables) there seems nothing new in there, and I think I offer a much clearer description in my question (from the aspect of variable and object).</span>
<span class="comment-copy">Interesting code snippet. I think the error arises from name collision in the same scope. In <code>x = x + 1</code>, the lhs x causes a new local variable x to be created in this local scope. And as a result, the rls x would refer to this local x, instead of searching all the way to the global scope.</span>
<span class="comment-copy">@swang try it with just <code>x + 1</code> without assignment then</span>
