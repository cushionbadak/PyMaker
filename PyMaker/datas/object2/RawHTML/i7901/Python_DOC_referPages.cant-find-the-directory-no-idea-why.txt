<div class="post-text" itemprop="text">
<pre><code>import requests
test = requests.get("https://www.hipstercode.com/")
outfile = open("./settings.txt", "w")
test.encoding = 'ISO-8859-1'
outfile.write(str(test.text))
</code></pre>
<p>The error that i'm getting is:</p>
<pre><code>File "C:/Users/Bamba/PycharmProjects/Requests/Requests/Requests.py", line 8, in &lt;module&gt;
    outfile.write(str(test.text))
File "C:\Users\Bamba\AppData\Local\Programs\Python\Python35\lib\encodings\cp1255.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\xef' in position 0: character maps to &lt;undefined&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, looks like response contains smth you can't encode in cp1251.</p>
<p>If utf-8 is ok for you, try</p>
<pre><code>import requests
test = requests.get("https://www.hipstercode.com/")
outfile = open("./settings.txt", "wb")
outfile.write(test.text.encode('ISO-8859-1'))
</code></pre>
<p>If you're getting error while encoding, you simply cannot encode lossless. Options you have described in <code>encode</code> docs: <a href="https://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.encode</a></p>
<p>I.e., you can</p>
<pre><code>outfile.write(test.text.encode('ISO-8859-1', 'replace'))
</code></pre>
<p>to handle errors without losing most sense of text written in smth that doesn't fit ISO-8859-1</p>
</div>
<span class="comment-copy">try adding <code>encoding="utf-8"</code> to open</span>
<span class="comment-copy">The point is, I wanna use ISO-8859-1</span>
<span class="comment-copy">I've edited answer. You can't do this in simple way, if your encoding table cant handle received data. So you can escape ignore or replace it. Which means that you go lossy in most cases.</span>
<span class="comment-copy">Wait so it's something with the specific website?</span>
<span class="comment-copy">Yup. You can inspect your <code>repr(test.text)</code> directly in python, you'll see that this data doesn't fit to latin-1. But its not like smth is broken. Any webpage with non-latin symbols will end up with exactly the same issue.</span>
