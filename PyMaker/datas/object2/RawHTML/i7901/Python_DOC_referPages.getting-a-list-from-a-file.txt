<div class="post-text" itemprop="text">
<p>In a hangman game I am making, I have a text file containing this:</p>
<pre class="lang-none prettyprint-override"><code>[
[
['microsoft windows','common operating system',1],
['apple ios,a useless operating system',1],
['chromeos','a very simple OS developed by chrome',1],
["linux","the most accesable and custimizable OS",1]
],
[
["photoshop", "the most popular image editting program",2],
["adobe flash","basic animating and programming program",2],
["pineapple","a spikey sweet fruit",2],
["chrome", "a web browser",2]
],
[
["gpu","a computers _____ proccesing unit", 3],
["tree", "a large plant found every where",3],
["kangaroo","a marsupial found in the outback",3],
["hawiian pizza","a very disputed type of triangular food",3]
],
[
["negev","a light machine gun, from csgo", 4],
["revolver","a high caliber hand canon", 4],
["desert eagle", "a infamous hand canon, highly praised in the USA", 4],
["karambit knife","a blade shaped like a claw, know as very deadly", 4]
]
]
</code></pre>
<p>So using file io, I wrote this:</p>
<pre><code>f = open('words.py')
lines = f.readlines()
for line in lines:
   cat1.append(line)
print(cat1)
</code></pre>
<p>But all I get is:</p>
<pre><code>['[\n', '[\n', "['microsoft windows','common operating system',1],\n", "['apple ios,a useless operating system',1],\n", "['chromeos','a very simple OS developed by chrome',1],\n", '["linux","the most accesable and custimizable OS",1]\n', '],\n', '[\n', '["photoshop", "the most popular image editting program",2],\n', '["adobe flash","basic animating and programming program",2],\n', '["pineapple","a spikey sweet fruit",2],\n', '["chrome", "a web browser",2]\n', '],\n', '[\n', '["gpu","a computers _____ proccesing unit", 3],\n', '["tree", "a large plant found every where",3],\n', '["kangaroo","a marsupial found in the outback",3],\n', '["hawiian pizza","a very disputed type of triangular food",3]\n', '],\n', '[\n', '["negev","a light machine gun, from csgo", 4],\n', '["revolver","a high caliber hand canon", 4],\n', '["desert eagle", "a infamous hand canon, highly praised in the USA", 4],\n', '["karambit knife","a blade shaped like a claw, know as very deadly", 4]\n', ']\n', ']\n']
</code></pre>
<p>How can I make it a list divided into the 4 subgroups, which are also in 4 sublists, and lastly how I remove the <code>'\n'</code>s?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you change the single quotes to double quotes on lines 3, 4, and 5, then your file would be valid json, in which case you can easily parse the whole thing with the <code>json</code> module:</p>
<p>data.json:</p>
<pre><code>        [
        [
        ["microsoft windows","common operating system",1],
        ["apple ios,a useless operating system",1],
        ["chromeos","a very simple OS developed by chrome",1],
        ["linux","the most accesable and custimizable OS",1]
        ],
        [
        ["photoshop", "the most popular image editting program",2],
        ["adobe flash","basic animating and programming program",2],
        ["pineapple","a spikey sweet fruit",2],
        ["chrome", "a web browser",2]
        ],
        [
        ["gpu","a computers _____ proccesing unit", 3],
        ["tree", "a large plant found every where",3],
        ["kangaroo","a marsupial found in the outback",3],
        ["hawiian pizza","a very disputed type of triangular food",3]
        ],
        [
        ["negev","a light machine gun, from csgo", 4],
        ["revolver","a high caliber hand canon", 4],
        ["desert eagle", "a infamous hand canon, highly praised in the USA", 4],
        ["karambit knife","a blade shaped like a claw, know as very deadly", 4]
        ]
        ]
</code></pre>
<p>Your script:</p>
<pre><code>import json
with open("data.json") as file:
    seq = json.load(file)
print(seq)
</code></pre>
<p>Result:</p>
<pre><code>[[['microsoft windows', 'common operating system', 1], ['apple ios,a useless operating system', 1], ['chromeos', 'a very simple OS developed by chrome', 1], ['linux', 'the most accesable and custimizable OS', 1]], [['photoshop', 'the most popular image editting program', 2], ['adobe flash', 'basic animating and programming program', 2], ['pineapple', 'a spikey sweet fruit', 2], ['chrome', 'a web browser', 2]], [['gpu', 'a computers _____ proccesing unit', 3], ['tree', 'a large plant found every where', 3], ['kangaroo', 'a marsupial found in the outback', 3], ['hawiian pizza', 'a very disputed type of triangular food', 3]], [['negev', 'a light machine gun, from csgo', 4], ['revolver', 'a high caliber hand canon', 4], ['desert eagle', 'a infamous hand canon, highly praised in the USA', 4], ['karambit knife', 'a blade shaped like a claw, know as very deadly', 4]]]
</code></pre>
<hr/>
<p>If you're absolutely committed to not changing a single thing in your file, including quote marks, then I suppose you could also use <code>ast.literal_eval</code>. But this is not the idiomatic solution.</p>
<pre><code>import ast
with open("data.dat") as file:
    seq = ast.literal_eval(file.read())
print(seq)
</code></pre>
<hr/>
<p>Incidentally, <code>['apple ios,a useless operating system',1]</code> is valid syntax, but if you want this element to have a length of three like its siblings, you probably meant to write <code>['apple ios','a useless operating system',1]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The file contains a valid Python literal, so you can use the <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast..literal_eval()</code></a> function to parse it directly into a <code>list</code>:</p>
<pre><code>import ast

with open('words.py') as file:
    cat1 = ast.literal_eval(file.read())

print(cat1)
</code></pre>
<p>You could also change the first line of the file to <code>cat1 = [</code> and then use a</p>
<pre><code>from words import cat1
</code></pre>
<p>statement instead of doing all that.</p>
</div>
