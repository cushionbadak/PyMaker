<div class="post-text" itemprop="text">
<p>I am new to this so please help me. I am using <code>urllib.request</code> to open and reading webpages. Can someone tell me how can my code handle redirects, timeouts, badly formed URLs? 
I have sort of found a way for timeouts, I am not sure if it is correct though. Is it? All opinions are welcomed! Here it is:</p>
<pre><code>from socket import timeout
import urllib.request
try:
            text = urllib.request.urlopen(url, timeout=10).read().decode('utf-8')
except (HTTPError, URLError) as error:
            logging.error('Data of %s not retrieved because %s\nURL: %s', name, error, url)
except timeout:
            logging.error('socket timed out - URL %s', url)
</code></pre>
<p>Please help me as I am new to this. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the <a href="https://docs.python.org/3/library/urllib.error.html#module-urllib.error" rel="nofollow noreferrer">urllib error page</a>.</p>
<p>So for following behaviours:</p>
<ul>
<li>Redirect: HTTP code 302, so that's a HTTPError with a code. You could also use the <a href="https://docs.python.org/3.0/library/urllib.request.html#httpredirecthandler-objects" rel="nofollow noreferrer">HTTPRedirectHandler</a> instead of failing.</li>
<li>Timeouts: You have that correct.</li>
<li>Badly formed URLs: That's a URLError.</li>
</ul>
<p>Here's the code I would use:</p>
<pre><code>from socket import timeout
import urllib.request
try:
    text = urllib.request.urlopen("http://www.google.com", timeout=0.1).read()
except urllib.error.HTTPError as error:
    print(error)
except urllib.error.URLError as error:
    print(error)
except timeout as error:
    print(error)
</code></pre>
<p>I can't finding a redirecting URL, so I'm not exactly sure how to check the HTTPError is a redirect. </p>
<p>You might find the <a href="http://docs.python-requests.org/en/master/" rel="nofollow noreferrer"><code>requests</code></a> package is a bit easier to use (it's suggested on the urllib page).</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>requests</code> package I was able to find a better solution. With the only exception you need to handle are:</p>
<pre><code> try:
        r = requests.get(url, timeout =5)

except requests.exceptions.Timeout:
# Maybe set up for a retry, or continue in a retry loop

except requests.exceptions.TooManyRedirects as error:
# Tell the user their URL was bad and try a different one

except requests.exceptions.ConnectionError:
# Connection could not be completed

except requests.exceptions.RequestException as e:
# catastrophic error. bail.
</code></pre>
<p>And to get the text of that page, all you need to do is:
<code>r.text</code></p>
</div>
<span class="comment-copy">Thank you for the response. I had a question about your code. Why did you not have a decode() methord in the end? Wouldn't read() return bytes. So I tried running that code it works but when just add a decode('utf-8') at the end of your code, it crashes saying: UnicodeDecodeError. How do you decide when to use decode and when not to</span>
<span class="comment-copy">If you print out <code>text</code> you'll see it's plaintext (it was for me).</span>
<span class="comment-copy">But if you try doing any string operations like comparing it will say that cannot perform string operations on byte characters</span>
<span class="comment-copy">That wrapping of text worked! Thanks</span>
<span class="comment-copy">I added another except clause for value error. I just tried entering a gibberish URL like "ejknrvkjnew" and it throws ValueError. So I thought might as well add that</span>
