<div class="post-text" itemprop="text">
<p>I get the error - <em>TypeError: 'list' does not support the buffer interface</em>   -when trying to run the following code using Cython :</p>
<pre><code>cdef int[:] lista = range(1000)
</code></pre>
<p>I'm new with Cython. It seems rather simple to me but I don't know why it is not working...</p>
</div>
<div class="post-text" itemprop="text">
<p>Lists aren't guaranteed to have all their entries being of the same type, therefore their memory isn't arranged as an array of C integers, which is what your memoryview expects.</p>
<p>The <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">Python array library</a> should be compatible:</p>
<pre><code>cdef int[:] lista = array.array('i',range(1000))
</code></pre>
<p>The easiest option though is probably to use a numpy array. The <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.arange.html" rel="nofollow noreferrer"><code>arange</code> function</a> gives you an integer range:</p>
<pre><code>cdef int[:] lista = numpy.arange(1000,dtype=numpy.int32)
</code></pre>
<hr/>
<p>A few notes on data types: the type of the array and the type specified in Cython need to match. On my PC the <code>array</code> code works as written and the <code>numpy</code> code needs <code>int32</code> to match with <code>cdef int[:]</code> and <code>int64</code> (or unspecified_ to match with <code>cdef long[:]</code>. The best thing is to specify the data type exactly for both parts.</p>
</div>
<span class="comment-copy">Hello, unfortunately it does not work. It returns me the following error :  TypeError: 'array.array' does not have the buffer interface</span>
<span class="comment-copy">That code is working but only for long type ; cdef long[:] lista = numpy.arange(1000). So I guess that the problem is indeed the list structure. Thanks for your help !</span>
<span class="comment-copy">I think it's a bit platform dependent which types match (slightly unfortunately). You could probably also do <code>numpy.arange(1000,dtype=numpy.int32)</code> and I think it would match <code>int</code>. Anyway - glad you got it working...</span>
