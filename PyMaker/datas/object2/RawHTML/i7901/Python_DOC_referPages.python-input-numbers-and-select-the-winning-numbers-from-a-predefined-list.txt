<div class="post-text" itemprop="text">
<p>I just started learning Python yesterday, it's my first contact with a programming language and I've noticed that I learn better by doing something than by only reading so I'm giving myself different tasks and bash my head until I manage to complete them.
Regarding my problem, I'm sure that there's a chance that this question has been asked before, but I can't seem to find it...sorry.
So, I want to make a little program that does the following: 
I have a predefined set of winning lottery numbers.
I want the user to input 6 numbers. If all six are winners, the user receives a message like: "You Won!", if only 2 numbers are correct, the message is: "You guessed two numbers", if 3 numbers are correct...etc, you get the point.</p>
<p>Here is what i have so far:</p>
<pre><code>winning_numbers = ("6", "8", "12", "21", "33", "47")
input_numbers = input("Input your lottery numbers ")

for i in winning_numbers: #I've added i in here because I wanted tot try a loop, but i am stuck...
    if input_numbers == winning_numbers:
        print("You guessed all six numbers!")
    elif input_numbers in (winning_numbers[0], winning_numbers[1], winning_numbers[2], winning_numbers[3], winning_numbers[4], winning_numbers[5]): #I am sure that this can be shorter but I don't know how
        print("You guessed one number!")
    elif input_numbers in winning_numbers #I'm stuck here also, where 2 numbers from the input are correct:
        print("You guessed two numbers!")
    else:
        print("You are a looser!")
</code></pre>
<p>I know it can be done MUCH more simpler than this but I have no idea how. Maybe if someone gives me a hint, I'll be able to understand the concept behind this. Thank you in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to try a more "complex" approach:</p>
<pre><code>winning_numbers = ("6", "8", "12", "21", "33", "47")
input_numbers = input("Input your lottery numbers ").split(",")

correct_guesses = sum(1 for inp_num in input_numbers if inp_num in winning_numbers)

print("You guessed {} numbers".format(correct_guesses))
</code></pre>
<p><strong>How does it work?</strong></p>
<ol>
<li><p>You need to call <code>.split</code> on <code>input_numbers</code> because user will presumably input comma-separated numbers, but it will be one long string(for example <code>"1,2,3"</code>). <code>split(",")</code> will turn this comma-separated string to a list (for example <code>["1", "2", "3"]</code>).</p></li>
<li><p><code>1 for inp_num in input_numbers if inp_num in winning_numbers</code> returns a generator containing the integer <code>1</code> for every number in <code>input_numbers</code> that is also in <code>winning_numbers</code>.</p></li>
<li><p><code>sum</code> will simply sum these <code>1</code>s.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<pre><code>winning_numbers = ["6", "8", "12", "21", "33", "47"]
c = 0
for i in xrange(len(winning_numbers)):
    n = raw_input('enter your number')
    if n in winning_numbers:
        c+=1
print 'You guessed %s numbers correctly!'%c
</code></pre>
<p>this is python 2.7   </p>
<p>The <code>%s</code> means I'm inserting an external string in to the string. % is called string formatting and you can add external variables in to a string by using the percentage sign. %s just means i'm inserting a string, for instance: <code>'hello %s'%'world!'</code> will be the string <code>'hello world!'</code>.</p>
<p>For more information about string formatting look at <a href="https://docs.python.org/2/library/stdtypes.html#string-formatting-operations" rel="nofollow noreferrer">the documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try counting the correct numbers using a variable.</p>
<pre><code>winning_numbers = ('6', '8', '12', '21', '33', '47')
input_numbers = input('Input your lottery numbers ')

correct = 0
for i in winning_numbers:
    if i in input_numbers:
        correct += 1

if correct == 6:
    print('You guessed all six numbers!')
elif correct &gt;= 2:
    print('You guessed at least two numbers!')
elif correct == 1:
    print('You guessed one number!')
else:
    print('You are a looser!')
</code></pre>
<p>You can also use <code>%</code> to simplify your printing</p>
<pre><code>if correct &gt; 0:
    print('You guessed %d number(s)!' % (correct))
else:
    print('You are a looser!')
</code></pre>
<p>The <code>%</code> will replace the corresponding part of the string with the value in the following brackets. See <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">this link</a> for more detail.</p>
<p>Or if you are a one-liner</p>
<pre><code>winning_numbers = ('6', '8', '12', '21', '33', '47')
correct = len([x for x in input('Input your lottery numbers ').split() if x in winning_numbers])
print('You guessed %d number(s)!' % (correct))
</code></pre>
<p><code>[x for x in input('Input your lottery numbers ').split()]</code> will create a list containing the user input. The following <code>if x in winning_numbers</code> will make sure that the list will only contain the elements which are in the <code>winning_numbers</code>. If you remove the <code>if</code> part, then the string will contain all the elements in the user input. Then we use <code>len()</code> to calculate the length of the list, that is the number of correct guess.</p>
<p>The above trick is called "list comprehension". Check <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow noreferrer">this link</a> for more detail.</p>
</div>
<div class="post-text" itemprop="text">
<p>I only started learning Python 2 weeks ago so I am new as well. Good luck with your learning. Here is my solution!</p>
<pre><code>correct_numbers = ("1", "2", "3", "4", "5", "6")
input_numbers = input("Input your 6 numbers")
count = 0

for i in correct_numbers:
    if i in input_numbers.split():
    count += 1

if count == 6:
   print("You guessed all numbers")
else:
   print("You guessed {} numbers correctly".format(count))
</code></pre>
<p>The two curly brackets in my last piece of code is one of the many ways to input a variable into a string (my personal favourite way to do it). The way it works is that the two curly brackets show where the variable has to be inserted, and once you finish the string you put to call in the function and put the variables you want to input in a set of brackets after the .format... Make sure to put the variables in order</p>
<p>One example:</p>
<pre><code>var1 = two
print("one {}".format(var1))
# the output of this will be "one two"
</code></pre>
<p>Second example:</p>
<pre><code>var1 = two
var2 = four
print("one {} three {}".format(var1, var2))
# the output of this would be "one two three four"
</code></pre>
<p>HOPE THIS HELPS :)</p>
</div>
<span class="comment-copy">input you want should be list of guessed numbers for i in range(len(winning_numbers)) ; when you have list of guesses use some goodguess var - initialize to 0 and increment for each guess in winning_numbers</span>
<span class="comment-copy">Thank you for the explanation, indeed it is a little "complex" for me. Not really sure about 'inp_num'.</span>
<span class="comment-copy">@DanielTom just like you used <code>i</code> to iterate over the numbers in <code>winning_numbers</code>, I used <code>inp_num</code> to iterate over the numbers in <code>input_numbers</code>.</span>
<span class="comment-copy">Thank you. Can you also explain what is the '{}' and how it takes the value from count? I understood other ways to do this like "%" but I don't actually understand "{}". An explanation or a link to a documentation would be apreciated.</span>
<span class="comment-copy">@DanielTom <a href="https://docs.python.org/3.4/library/stdtypes.html#str.format" rel="nofollow noreferrer">docs.python.org/3.4/library/stdtypes.html#str.format</a></span>
<span class="comment-copy">just prefer range(len(winning_numbers)) so it's more flexible</span>
<span class="comment-copy">@Drako Thank you</span>
<span class="comment-copy">Thank you, I understand how this works except '%s' and '%c'.</span>
<span class="comment-copy">I edited the answer with an explanation. If this answered your question please accept my answer.</span>
<span class="comment-copy">@IsaacDj I understand the '%' now, thank you.I've also seen '%d', i guess it stands for an integer. As in: print("I have %d apples" %3) will result in: "I have 3 apples"</span>
<span class="comment-copy">I really like the "one-liner" solution. I will try to understand it's logic. What does the '[ 'brackets do exactly and also %d" and '%'? Sorry if these are basic questions, I will also try to google the answers but I think I'll understand better if explained on the example.</span>
<span class="comment-copy">@Daniel Tom I've edited my post and add some explanations.</span>
<span class="comment-copy">Got it now, thank you!</span>
<span class="comment-copy">Thx for your solution. Can you explain what is the '{}' and how it takes the value from count? (I'm trying to understand how your solution works and got stuck there)</span>
<span class="comment-copy">Hey Daniel, just edited my answer to explain this to you! Hope that helps</span>
<span class="comment-copy">Awesome, thank you very much. Makes sense now.</span>
