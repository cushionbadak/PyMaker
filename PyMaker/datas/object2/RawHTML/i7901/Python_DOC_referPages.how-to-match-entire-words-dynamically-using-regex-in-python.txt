<div class="post-text" itemprop="text">
<p>Using Regex, I want to match a sequence of words entirely in Python.
Statically it is possible, but I am unaware about the dynamic way of matching.</p>
<p>Static method</p>
<pre><code>import re
print(re.search(r'\bsmaller than or equal\b', 'When the loan amount is smaller than or equal to 50000'))
</code></pre>
<p>I am trying to do the same thing dynamically, by matching the entire sequence with a list.<br/>
Here is the code snippet below:</p>
<pre><code>import re
list_less_than_or_equal = ['less than or equal', 'lesser than or equal', 'lower than or equal', 'smaller than or equal','less than or equals', 'lesser than or equals', 'lower than or equals', 'smaller than or equals', 'less than equal', 'lesser than equal', 'higher than equal','less than equals', 'lesser than equals', 'higher than equals']

for word in list_less_than_or_equal:
    print(re.search(r'\b'+word+'\b', 'When the loan amount is smaller than or equal to 50000'))
</code></pre>
<p>It prints <code>None</code> as the output.</p>
<p><strong>How to match the entire sequence of words dynamically?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You forgot an <code>r</code> in your second <code>'\b'</code>. </p>
<pre><code>re.search(r'\b' + re.escape(word) + r'\b', ...)
#                                   ^
</code></pre>
<p>The <a href="https://docs.python.org/3/reference/lexical_analysis.html#index-18" rel="nofollow noreferrer">escape sequence <code>\b</code></a> has special meaning in Python and will become <code>\x08</code> (U+0008). The regex engine seeing <code>\x08</code> will try to match this literal character and fail.</p>
<p>Also, I used <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>re.escape(word)</code></a> to escape special regex characters, so e.g. if a word is <code>"etc. and more"</code> the dot will be matched literally, instead of matching any character.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using concatenation, you can <a href="https://docs.python.org/3.4/library/string.html#string-formatting" rel="nofollow noreferrer">format</a> your string. </p>
<pre><code>re.search(r'\b{0}\b'.format(word), ....)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If alternative methods are options, you could compare list with list:</p>
<pre><code>list_less_than_or_equal = ['less than or equal', 'lesser than or equal', 'lower than or equal', 'smaller than or equal','less than or equals', 'lesser than or equals', 'lower than or equals', 'smaller than or equals', 'less than equal', 'lesser than equal', 'higher than equal','less than equals', 'lesser than equals', 'higher than equals']

if any(word in 'When the loan amount is smaller than or equal to 50000' for word in list_less_than_or_equal):
  print("yep");
else:
  print("nope");
</code></pre>
<p>Or regex:</p>
<pre><code>import re

list_less_than_or_equal = ['less than or equal', 'lesser than or equal', 'lower than or equal', 'smaller than or equal','less than or equals', 'lesser than or equals', 'lower than or equals', 'smaller than or equals', 'less than equal', 'lesser than equal', 'higher than equal','less than equals', 'lesser than equals', 'higher than equals']

if any(re.findall(r'|'.join(list_less_than_or_equal), 'When the loan amount is smaller than or equal to 50000', re.IGNORECASE)):
    print ('yep')
else:
    print ('nope')
</code></pre>
</div>
<span class="comment-copy">Your methodology is right, but re.quote gives an attribute error.</span>
<span class="comment-copy">Sorry, should be <code>re.escape</code>. Updated.</span>
<span class="comment-copy">It's proper now.</span>
<span class="comment-copy">Your method works fine.</span>
<span class="comment-copy">It works, but I wanted Regex.</span>
<span class="comment-copy">@User456898 I made an edit, maybe it helps. Thanks</span>
<span class="comment-copy">Your answer is very good, but unfortunately only 1 answer can be chosen for the tick mark.</span>
