<div class="post-text" itemprop="text">
<p>Hi I have two times in slightly different formats and I need to work out the difference. The first was parsed from a ISO 8601 date using dateutil.parser</p>
<p>I'm not sure what I need to do to parse them into the same format, but my two dates are:</p>
<pre><code>2017-05-24 15:40:00+00:00
2017-05-24 14:23:44.995015
</code></pre>
<p>If they were both in datetime format I could just subtract one from the other, so I need to chop the milliseconds off both (coz that's not relevant to me), and tell python the new strings are both datetimes?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you're already using dateutil, what's wrong with just removing the timezone (or adding it to the other) and subtracting them?</p>
<pre><code>import dateutil.parser

date1 = dateutil.parser.parse("2017-05-24 15:40:00+00:00").replace(tzinfo=None)
date2 = dateutil.parser.parse("2017-05-24 14:23:44.995015")

date_delta = date1 - date2  # 1:16:15.004985
</code></pre>
<p>You can call <code>replace(microsecond=0)</code> on your dates to remove the microseconds.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could transform the second datetime (that is a timestamp) into the first one with this code:</p>
<pre><code>def convert_to_timestamp(string_date):
    the_datetime = datetime.strptime(string_date.decode("utf-8"), "%Y%m%d.%H%M%S.%f")
    return time.mktime(the_datetime.timetuple()) * 1e6 + the_datetime.microsecond
</code></pre>
<p>or:</p>
<pre><code>def transformTimestamps(timestamp_):
year = timestamp_[:4]
month = timestamp_[4:6]
day = timestamp_[6:8]
hour = timestamp_[9:11]
minute = timestamp_[11:13]
second = timestamp_[13:15]
microsecond = timestamp_[16:22]
myformat = year+"-"+month+"-"+day+" +hour+":"+minute+":"+second+":"+microsecond
return datetime.strptime(myformat, '%Y-%m-%d %H:%M:%S:%f')
</code></pre>
<p>Then, you can calculate the difference between them.</p>
<p>I hope this help. Greetings!</p>
</div>
<div class="post-text" itemprop="text">
<p>Probably you want to use this method</p>
<blockquote>
<p>datetime.strptime(date_string, format)</p>
</blockquote>
<p>Also remember you can get rid of elements you do not want in your date (Like milliseconds) when you declare the specified date, as in</p>
<blockquote>
<p>class datetime.datetime(year, month, day, hour=0, minute=0, second=0,
  microsecond=0, tzinfo=None, *, fold=0)</p>
</blockquote>
<p>For more on this topic you can always read the python docs, you can find the same information I just gave you and more here:
<a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html</a></p>
<p>Hope it helped.</p>
</div>
