<div class="post-text" itemprop="text">
<p>The following code works just fine in python 2, but spits out the following error in python 3.6.1</p>
<pre><code>model="XD4-170"
ssh.send("more off\n")
if ssh.recv_ready():
    output = ssh.recv(1000)
ssh.send("show system-info\n")
sleep(5)
output = ssh.recv(5000)
ll=output.split() # Python V3

for item in ll:
    if 'Model:' in item:
    mm=item.split()
    if mm[1]==model+',':
        print("Test Case 1.1 - PASS - Model is an " + model)
    else:
        print("Test Case 1.1 - FAIL - Model is not an " + model)
</code></pre>
<p><strong>Error Output:</strong></p>
<pre><code>if "Model:" in item:
TypeError: a bytes-like object is required, not 'str'
</code></pre>
<p>A little guidance would be most appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>One of the major differences between Python 2.x and Python 3.x is that the latter makes a strict distinction between <a href="http://www.diveintopython3.net/strings.html" rel="nofollow noreferrer">strings and bytes</a>.  The 
<a href="https://docs.python.org/3/library/socket.html#socket.socket.recv" rel="nofollow noreferrer"><code>recv</code></a> method on a socket (I'm <em>assuming</em> that's what <code>ssh</code> is, because your code doesn't show it being assigned) returns a <code>bytes</code> object, not a <code>str</code>.  And when you <code>split()</code> a <code>bytes</code> object, you get a <code>list</code> of <code>bytes</code>, so each <code>item</code> in your loop is also a <code>bytes</code> object.</p>
<p>So, when your code gets to the line <code>if 'Model:' in item:</code>, it's trying to find a <code>str</code> within a <code>bytes</code> object, which isn't valid.</p>
<p>There are two ways you can fix this:</p>
<ul>
<li>Change the substring to a <code>bytes</code> object: <code>if b'Model:' in item:</code>.</li>
<li>Decode the <code>bytes</code> read from the socket to a string: <code>output = ssh.recv(5000).decode('UTF-8')</code>.</li>
</ul>
</div>
<span class="comment-copy">try <code>if 'Model:' in item.decode():</code></span>
<span class="comment-copy">Actually I need the entire for loop converted to python 3 - Any help for this simple code snippet would be appreciated.  @RafaelCardoso, why are you adding a decode()?</span>
