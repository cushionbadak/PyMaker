<div class="post-text" itemprop="text">
<p>I am trying to run a sort of application that utilises both Python and powershell scripts. I already wrote the Python script and powershell script, which are meant to work simultaneously but separate from each other. What I want to do is create a Python program that launches them both, is there a way? Thanks!
What  I have right now, as part of a larger script, is:</p>
<pre><code>import subprocess
autom = r"C:\Users\mrmostacho\Desktop\Robot\Autom.ps1","-ExecutionPolicy","Unrestricted"
powershell = r"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"
subprocess.Popen("%s %s" % (powershell, autom,))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you don't want <code>"-ExecutionPolicy","Unrestricted"</code> as script arguments but instead want to set powershells execution policy to allow the execution of your script. Therefore you should pass those parameters before the actual Script.</p>
<p>Second: It's not enough, to pass the script as argument to powershell.exe (this way the script name is interpreted as Powershell command and one has to escape the name according to powershells quoting rules). Instead the Script name should be given after the <code>-File</code> parameter. From <a href="https://docs.microsoft.com/de-de/powershell/module/microsoft.powershell.core/about/about_powershell_exe?view=powershell-5.1#-file-filepath-parameters" rel="nofollow noreferrer">online documentation</a>:</p>
<blockquote>
<p>-File []   </p>
<p>Runs the specified script in the local scope ("dot-sourced"), so that the functions and variables that the script creates are
  available in the current session. Enter the script file path and any
  parameters. File must be the last parameter in the command, because
  all characters typed after the File parameter name are interpreted as
  the script file path followed by the script parameters.</p>
<p>You can include the parameters of a script, and parameter values, in
  the value of the File parameter. For example: <code>-File .\Get-Script.ps1 -Domain Central</code></p>
<p>Typically, the switch parameters of a script are either included or
  omitted. For example, the following command uses the All parameter of
  the Get-Script.ps1 script file: <code>-File .\Get-Script.ps1 -All</code></p>
<p>In rare cases, you might need to provide a Boolean value for a switch
  parameter. To provide a Boolean value for a switch parameter in the
  value of the File parameter, enclose the parameter name and value in
  curly braces, such as the following: <code>-File .\Get-Script.ps1 {-All:$False}</code>.</p>
</blockquote>
<p>Third: As <a href="https://stackoverflow.com/users/736308/cdarke">cdarke</a> already commented, it's better to use a list instead of a string as argument to Popen. This way one doesn't need to worry about the <a href="https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/" rel="nofollow noreferrer">CommandLine parsing</a> on Windows.</p>
<p>Altogether, this should be the way to go. (Tested with small test script.)</p>
<pre><code>import subprocess
autom = r"C:\Users\mrmostacho\Desktop\Robot\Autom.ps1"
powershell = r"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"
subprocess.Popen([powershell,"-ExecutionPolicy","Unrestricted","-File", autom])
</code></pre>
<p>If you need to pass arguments to the script, do it like this:</p>
<pre><code>subprocess.Popen([powershell,"-ExecutionPolicy","Unrestricted","-File", autom, 'arg 1', 'arg 2'])
</code></pre>
</div>
<span class="comment-copy">What have you tried so far?  Hint:  <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a></span>
<span class="comment-copy">I've tried using a subprocess.Popen that runs the file and PoweSshell.exe, however, what that does is rename the Python window into PowerShell, but the written PowerShell program does not launch</span>
<span class="comment-copy">If that is your problem then show your code and someone might be able to help you with it.</span>
<span class="comment-copy">Try passing <code>Popen</code> just the path to PowerShell script by itself.</span>
<span class="comment-copy">Try using the <code>start</code> shell command (possibly you'll need <code>shell=True</code> in the <code>Popen</code> constructor as well). That should detach the launched process from the Python proces.</span>
