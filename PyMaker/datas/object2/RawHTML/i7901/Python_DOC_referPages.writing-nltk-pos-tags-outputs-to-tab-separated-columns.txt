<div class="post-text" itemprop="text">
<p>I have to copy information from a pre existing text file and add pos tags on the same line and write it to a new file, but I have no clue how to get the correct output, thanks in advance.</p>
<p>My current output:</p>
<pre class="lang-none prettyprint-override"><code>0 5 1001 China
5 7 1002 's
8 17 1003 state-run
18 23 1004 media
24 27 1005 say
28 29 1006 a
NNP POS JJ NNS VBP DT
</code></pre>
<p>Code:</p>
<pre><code>import sys
import nltk

def main():
    list1 = []
    read = open("en.tok.off", "r")
    data = read.read()
    result = ''.join([i for i in data if not i.isdigit()])

    result = result.split()

    data3 = nltk.pos_tag(result)

    words, tags = zip(*data3)
    tags = " ".join(tags)

    print(tags)
    outfile = open("en.tok.off.pos", "w")

    outfile.write(data)
    outfile.write(tags)
    outfile.close()

main()
</code></pre>
<p>I want NNP on the fifth column in <code>0 5 1001 China</code> and <code>POS</code> on the same line after <code>5 7 1002 's</code>, etc.</p>
<p>Desired output:</p>
<pre class="lang-none prettyprint-override"><code>0 5 1001 China NNP
5 7 1002 's POS
8 17 1003 state-run JJ
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of throwing away the numbers (which will also discard numbers in your text!), collect everything and extract the fourth column for tagging.</p>
<pre><code>data = read.read()
rows = [ line.split() for line in data.splitlines() ]
words = [ row[3] for row in rows ]
tagged = nltk.pos_tag(words)
</code></pre>
<p>You can then put the pieces back together like this.</p>
<pre><code>tagged_rows = [ row + [ tw[1] ] for row, tw in zip(rows, tagged) ]
</code></pre>
<p>(In relatively new versions of Python, you can compact the above even more). An alternative would be to use a library like <code>numpy</code> or <code>pandas</code>, which let you add a column to your data. But I think this approach is simpler and therefore preferable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using the latest <code>nltk</code> release (v3.2.4), there's an <a href="http://www.nltk.org/api/nltk.tokenize.html#nltk.tokenize.util.align_tokens" rel="nofollow noreferrer"><code>align_tokens</code></a> function that might be helpful for tokens offsets (your first two columns).</p>
<p>As for printing the POS as the last column, simply putting the elements you want per word into a list and use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a> function would do, e.g. :</p>
<pre><code>&gt;&gt;&gt; x = ['a', 'b', 'c']
&gt;&gt;&gt; print ('\t'.join(x))
a   b   c
&gt;&gt;&gt; x.append('d')
&gt;&gt;&gt; print ('\t'.join(x))
a   b   c   d
</code></pre>
<p>Specific to your code:</p>
<p>[in]:</p>
<pre><code>$ cat test.txt
China's state-run media say a 
</code></pre>
<p>[code]:</p>
<pre><code>from nltk.tokenize.treebank import TreebankWordTokenizer
from nltk.tokenize.util import align_tokens
from nltk import pos_tag

tb = TreebankWordTokenizer()

with open('test.txt') as fin:
    for line in fin:
        text = line.strip()
        tokens = tb.tokenize(text)
        tagged_tokens = pos_tag(tokens)
        offsets = align_tokens(tokens, text)
        for (start, end), (tok, tag) in zip(offsets, tagged_tokens):
            print ('\t'.join([str(start), str(end), tok, tag]))
</code></pre>
<p>[out]:</p>
<pre><code>0   5   China   NNP
5   7   's  POS
8   17  state-run   JJ
18  23  media   NNS
24  27  say VBP
28  29  a   DT
</code></pre>
</div>
<span class="comment-copy">Please format this with indentation.</span>
