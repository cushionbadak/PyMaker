<div class="post-text" itemprop="text">
<p>I have the following dataframe</p>
<pre><code>Column1         Column2
tomato fruit    tomatoes are not a fruit
potato la best  potatoe are some sort of fruit
apple           there are great benefits to appel
pear            peer
</code></pre>
<p>and I would like to look up the word/sentence on the left with the sentences on the right and if there is a match on the max first two words (e.g. 'potato la' and leave out 'best') then it would give a score. </p>
<p>I have already used two different methods:</p>
<pre><code>for i in range(0, len(Column1)):
     store_it = SM(None, Column1[i], Column2[i]).get_matching_blocks()
     print(store_it)
</code></pre>
<p>And </p>
<pre><code>df['diff'] = df.apply(lambda x: diff.SequenceMatcher(None, x[0].strip(), x[1].strip()).ratio(), axis=1) 
</code></pre>
<p>which I found on the internet.</p>
<p>The second one works fine, except that it tries to match the entire phrase. How can I match the words in the first column with the sentences in the second column so that it ultimately gives me a 'Yes' they are in the sentence (or partially) or 'No' they aren't.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the best success using FuzzyWuzzy's partial ratio on this one. It will give you the ratio of partial % match between Column1 "tomato fruit" and Column2 "tomatos are not a fruit" and the rest of the way down the columns. See results:</p>
<pre><code>from fuzzywuzzy import fuzz
import difflib

df['fuzz_partial_ratio'] = df.apply(lambda x: fuzz.partial_ratio(x['Column1'], x['Column2']), axis=1)

df['sequence_ratio'] = df.apply(lambda x: difflib.SequenceMatcher(None, x['Column1'], x['Column2']).ratio(), axis=1)
</code></pre>
<p>You can consider any FuzzyWuzzy score &gt; 60 to be a good partial match, i.e. yes the words in Column1 are most likely in the sentence in Column2.</p>
<p>row 1- score 67, row 2- score 71, row 3- score 80, row 4- score 75</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>set()</code>:  </p>
<blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">Python Â» Documentation</a><br/>
<code>issubset(other)</code><br/>
  set &lt;= other<br/>
      Test whether every element in the set is in other.</p>
</blockquote>
<p>For instance:</p>
<pre><code>c_set1 = set(Column1[i])
c_set2 = set(Column2[i])
if  c_set1.issubset(c_set2):
    # every in  c_set1 is in  c_set2
</code></pre>
</div>
