<div class="post-text" itemprop="text">
<p>I've attempted through the code below, to add Gaussian noise to an RGB or a GRAYSCALE image, but until now I have the same problem, the result is always as follows:</p>
<p><a href="https://i.stack.imgur.com/0DDpS.png" rel="nofollow noreferrer"><img alt="current results" src="https://i.stack.imgur.com/0DDpS.png"/></a></p>
<p>So is there a problem with the code I've written?</p>
<pre><code>def gauss(mean,sigma):
     from random import uniform
     from math import sqrt,log,pi,cos
     a=uniform(0,1)
     b=uniform(0,1)
     x=sqrt(-2*log(a))*cos(2*pi*b)
     return(x)

def bruiter(image):
     from matplotlib.pyplot import imread
     if len(image.shape)==3 :
       a,b,c=image.shape
          for i in range(a):
             for j in range(b):
                 image[i][j] += [gauss(0.5,0.01),gauss(0.5,0.01),gauss(0.5,0.01)]

     elif len(image.shape)==2 :
       a,b= image.shape
          for i in range(a):
             for j in range(b):
                 image[i][j] +=  gauss(0.01)*(1/255)

return(image)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My thanks are due to Mr Martineau for pointing out that I should be answering about noise and not blur. I will answer in terms of Pillow again because I think it makes like simpler.</p>
<p>I open a picture of a muskrat's paw and display the image size and the value of the pixel at position (50,50). This is a RGB image and we can be fairly sure that each colour can range from 0 to 255. </p>
<p>I think you want <em>additive</em> Gaussian noise. To save myself the bother of writing and debugging a generator I'm using one that's readily available, <code>normalvariate</code>. You will want to vary the level and spread of the noise; I've therefore made the mean and scale parameters. Since there are limits on the ranges of the colour values I use <code>max</code> and <code>min</code>. As a convenience I package three calls to <code>add_noise</code> in <code>add_noise_one_pixel</code> so that this latter routine can be called once for each pixel in the image.</p>
<p>You will already have noticed that all pixels in the image can be addressed in a using knowledge of the size of the image and the <code>getpixel</code> method.</p>
<p>I have NOT checked this code. It's meant more as an illustration of principle.</p>
<pre><code>&gt;&gt;&gt; from PIL import Image, ImageFilter
&gt;&gt;&gt; im = Image.open('muskrat.png')
&gt;&gt;&gt; im.size
(100, 117)
&gt;&gt;&gt; im.getpixel((50,50))
(121, 130, 116)
&gt;&gt;&gt; import random
&gt;&gt;&gt; def add_noise(x, mean, stddev):
...     return min(max(0, x+random.normalvariate(mean,stddev)), 255)
... 
&gt;&gt;&gt; def add_noise_one_pixel(im, x, y, mean=10, stddev=5):
...     x, y, z = im.getpixel((x,y))
...     im.putpixel((x,y), add_noise(x, mean, stddev), add_noise(y, mean, stddev), add_noise(z, mean, stddev))
...     
</code></pre>
<p>Old answer:</p>
<p>If you just want to <strong>do it</strong> rather than concern yourself about the details about doing it then have a look at Pillow. It's this easy.</p>
<pre><code>&gt;&gt;&gt; from PIL import Image, ImageFilter
&gt;&gt;&gt; im = Image.open('GENES.png')
&gt;&gt;&gt; im2 = im.filter(ImageFilter.GaussianBlur(5))
&gt;&gt;&gt; im2.show()
</code></pre>
</div>
<span class="comment-copy">what is the expected result? this would also be far more concise with numpy vector adds</span>
<span class="comment-copy">Your code doesn't <i>add</i> noise to the image, it effectively <i>replaces</i> it with noise. You need to make the result for each <code>image[i][j]</code> be a function of the value which is already at the location and <code>gauss()</code>, rather than being completely independent of it as shown. I also suspect that the <code>elif len(image.shape)==2:</code> should be <code>elif len(image.shape)==1:</code> for grayscale images.</span>
<span class="comment-copy">P.S. Python includes <a href="https://docs.python.org/3/library/random.html#random.gauss" rel="nofollow noreferrer"><code>random.gauss()</code></a> Gaussian distribution random number function.</span>
<span class="comment-copy">I hope I've given you a more suitable answer now.</span>
<span class="comment-copy">Possible dup of <a href="https://stackoverflow.com/questions/26701604/how-to-add-and-remove-noise-from-an-image"><b><i>How to add and remove noise from an image</i></b></a>.</span>
<span class="comment-copy"><a href="https://en.wikipedia.org/wiki/Gaussian_blur" rel="nofollow noreferrer">Gaussian blurring</a> is <b>not</b> the same thing as adding <a href="https://en.wikipedia.org/wiki/Gaussian_noise" rel="nofollow noreferrer">Gaussian noise</a> to an image.</span>
<span class="comment-copy">Good to know (assuming I remember).</span>
<span class="comment-copy">In fact, the blurring has the opposite effect and it's often used to <i>remove</i> (or a least somewhat hide the) noise already in an image.</span>
<span class="comment-copy">Oddly enough, I've used it for that but not in code, only in picture editors, and the name didn't mean anything to me in this context.</span>
