<div class="post-text" itemprop="text">
<p>I have a CSV file that contains string cells, and I want to import it into python. My file is like :</p>
<pre><code>header1  header2 header3
abc       1.12    abc 
str1      5.00     str2
</code></pre>
<p>I want to see the same  format in python as array. How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>To convert your (assuming tab delimited) CSV file into a list of lists:</p>
<pre><code>import csv

with open('input.csv', 'rb') as f_input:
    csv_input = csv.reader(f_input, delimiter='\t')
    header = next(csv_input)
    data = list(csv_input)

print data
print data[1][2]        # row 2, column 3
</code></pre>
<p>This would give you <code>data</code> holding:</p>
<pre><code>[['abc', '1.12', 'abc', ''], ['str1', '5.00', 'str2']]

str2
</code></pre>
<p>If you want to include the header in <code>data</code>, comment out the header line.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the csv library: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">CSV File Reading and Writing</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Example with tab seperated csv file:</p>
<pre><code>import csv
with open('yourfile.csv', 'rb') as file:
    reader = csv.reader(file, delimiter='\t')
    for row in reader:
        print ', '.join(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm going to assume your data are delimited by <code>'\t'</code> characters, because it sort-of looks like it.</p>
<p>With builtin Python only:</p>
<pre><code>with open(filename, 'rt') as f:
    table = [line.rstrip('\r\n').split('\t') for line in f]
</code></pre>
<p>With the standard <code>csv</code> module:</p>
<pre><code>import csv
with open(filename, 'rt') as f:
     table = csv.reader(f, delimiter='\t')
     # you could then iterate over `table` or convert it to a static list by saying table=list(table)
</code></pre>
<p>Either solution gets you a nested sequence where the individual items are all strings, like:</p>
<pre><code>[['header1', 'header2', 'header3'],  ['abc', '1.12', 'abc'], ['str1', '5.00', 'str2']]
</code></pre>
<p>You might also consider installing the popular third-party package <code>pandas</code> which lets you slice the table vertically or horizontally and do various types of magic with it:</p>
<pre><code>import pandas
table = pandas.read_csv(filename, sep='\t')
</code></pre>
<p>which gets you this:</p>
<pre><code>&gt;&gt;&gt; table
  header1  header2 header3
0     abc     1.12     abc
1    str1     5.00    str2

[2 rows x 3 columns]

&gt;&gt;&gt; table['header1'][0]
'abc'
</code></pre>
</div>
<span class="comment-copy">Perfect , Thanks .Now I could be able to convert the format of str2 in int !</span>
