<div class="post-text" itemprop="text">
<p>In my Flask web app I have a login system. When user logged, in the table of my database I want to update the datetime when user made the last login.
I'm using this code:</p>
<pre><code> @app.route('/login', methods=['POST'])
 def do_admin_login():
     POST_CODICE_FISCALE = str(request.form['codice_fiscale'])
     POST_PASSWORD = str(request.form['password'])
     pwd_enc=base64.b64encode(POST_PASSWORD)

     Session = sessionmaker(bind=engine)
     s = Session()
     query = s.query(User).filter(User.codice_fiscale.in_([POST_CODICE_FISCALE]), User.password.in_([pwd_enc]))
     result = query.first()
     if result:
        session['logged_in'] = True
        query = s.query(User).filter(User.codice_fiscale.in_([POST_CODICE_FISCALE]).update(User.data_ora_ultimo_accesso=datetime.now()))  
        query.first()
        db.session.commit()
    else:
        flash('wrong password!')
    return home()
</code></pre>
<p>but I receive the error:</p>
<pre><code> query = s.query(User).filter(User.codice_fiscale.in_([POST_CODICE_FISCALE]).update(User.
 data_ora_ultimo_accesso=datetime.now())) 
 SyntaxError: keyword can't be an expression
</code></pre>
<p>what it is wrong?
thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>As the error says, a keyword in a function call argument list cannot be an expression, such as <code>User.data_ora_ultimo_accesso</code>, but an <a href="https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-identifier" rel="nofollow noreferrer">identifier</a>. Instead you should pass <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.update" rel="nofollow noreferrer"><code>Query.update()</code></a> a dictionary of column, expression pairs:</p>
<pre><code>    query = s.query(User).\
        filter(User.codice_fiscale.in_([POST_CODICE_FISCALE]).\
        update({ User.data_ora_ultimo_accesso: datetime.now() },
               synchronize_session=False))
</code></pre>
<p>Note that since you commit right away, there's no need to synchronize the session, since all state will be expired anyway.</p>
<p>You could also make some changes that'd improve your code's readability. For example instead of</p>
<pre><code>filter(User.codice_fiscale.in_([POST_CODICE_FISCALE]),
       User.password.in_([pwd_enc]))
</code></pre>
<p>just</p>
<pre><code>filter(User.codice_fiscale == POST_CODICE_FISCALE,
       User.password == pwd_enc)
</code></pre>
<p>No point in checking if a list of 1 item contains something, compared to just testing equality.</p>
<p>Finally, you create a new <code>Session</code> class and an instance <code>s</code> of it, but you commit a different session: <code>db.session</code>, which you should've probably been using all along. What this means is that your updates will not take place, as that session's transaction is not actually committed.</p>
</div>
<span class="comment-copy">Thanks. it works without errors but it seems in database data_ora_ultimo_accesso isn't update.</span>
<span class="comment-copy">Did you fix your session handling? Don't create separate session, but use the <code>db.session</code> consistently. Btw you could also use the ORM to perform the update: <code>result.codice_fiscale = datetime.now()</code> and then commit.</span>
<span class="comment-copy">Do you mean to use the same session: Session = sessionmaker(bind=engine)     s = Session() How can I use db.session consistently?</span>
<span class="comment-copy">In other words don't create sessions, but use the one provided to you by flask-sqlalchemy: <code>db.session</code>.</span>
