<div class="post-text" itemprop="text">
<p>As input, I have a .csv file like:</p>
<pre><code>user, withdraw, date
50D8BF0DA22D6C914777D8F59DAAB4D8, -125, 01-02-2015
674BCF0CD236621E5680073334A73C32, -5, 01-02-2015
E17E1691D35FB2FB675E3B787B8BEDF1, -845, 01-02-2015
50D8BF0DA22D6C914777D8F59DAAB4D8, -250, 01-02-2015
674BCF0CD236621E5680073334A73C32, -98, 01-02-2015
50D8BF0DA22D6C914777D8F59DAAB4D8, -17, 01-02-2015
</code></pre>
<p>I would like to identify all similar 'hash' codes and change them for labels such as 'user1', 'user2', 'user3'...and so on.</p>
<p>I have been trying to do that without success with <strong>pandas</strong>. Any idea what I could do?</p>
</div>
<div class="post-text" itemprop="text">
<p>first read CSV into Pandas DF:</p>
<pre><code>df = pd.read_csv('/path/to/file.csv', skipinitialspace=True)
</code></pre>
<p>yields:</p>
<pre><code>In [84]: df
Out[84]:
                               user  withdraw        date
0  50D8BF0DA22D6C914777D8F59DAAB4D8      -125  01-02-2015
1  674BCF0CD236621E5680073334A73C32        -5  01-02-2015
2  E17E1691D35FB2FB675E3B787B8BEDF1      -845  01-02-2015
3  50D8BF0DA22D6C914777D8F59DAAB4D8      -250  01-02-2015
4  674BCF0CD236621E5680073334A73C32       -98  01-02-2015
5  50D8BF0DA22D6C914777D8F59DAAB4D8       -17  01-02-2015
</code></pre>
<p>now we can factorize <code>user</code> column:</p>
<pre><code>In [85]: df['user'] = 'user' + pd.Series((pd.factorize(df.user)[0]+1).astype(str))

In [86]: df
Out[86]:
    user  withdraw        date
0  user1      -125  01-02-2015
1  user2        -5  01-02-2015
2  user3      -845  01-02-2015
3  user1      -250  01-02-2015
4  user2       -98  01-02-2015
5  user1       -17  01-02-2015
</code></pre>
<p>and write DF back to csv:</p>
<pre><code>df.to_csv('/path/to/file_new.csv', index=False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to first build a dictionary of users as follows:</p>
<pre><code>import csv

hashes = {}
user_number = 1
entries = []

with open('input.csv', 'rb') as f_input:
    csv_input = csv.reader(f_input, skipinitialspace=True)
    header = next(csv_input)

    for row in csv_input:
        user = row[0]

        if user not in hashes:
            hashes[user] = "user{}".format(user_number)
            user_number += 1

        row[0] = hashes[user]
        entries.append(row)

with open('output.csv', 'wb') as f_output:
    csv_output = csv.writer(f_output)
    csv_output.writerow(header)
    csv_output.writerows(entries)
</code></pre>
<p>Giving you an <code>output.csv</code> containing:</p>
<pre><code>user,withdraw,date
user1,-125,01-02-2015
user2,-5,01-02-2015
user3,-845,01-02-2015
user1,-250,01-02-2015
user2,-98,01-02-2015
user1,-17,01-02-2015
</code></pre>
</div>
<span class="comment-copy">Do you want to read that information into your program to be processed or are you trying to change the original .csv file? What have to already tried to do this? And a note to the 6 people voting down the question, please mention why you vote down a question so that the asker can know why you believe that this is not a good question and do better next time.</span>
<span class="comment-copy">I don't believe you can update. Instead, read, modify, and replace. ://docs.python.org/3/library/csv.html  and  https ://stackoverflow.com/questions/16020858/inline-csv-file-editing-with-python</span>
<span class="comment-copy">Thanks for the support @DavyM, I have no clue why people down voted it. Anyhow, answering your question, I would like to change the .csv, or to generate a new one.</span>
<span class="comment-copy">Seriously, any clue why people just hated my post? =/. I really would like to know what I did wrong. Also, should I delete it?</span>
<span class="comment-copy">Thanks a lot!! Works beautifully.</span>
<span class="comment-copy">@RogerAlmeidaLeite, glad I could help :)</span>
