<div class="post-text" itemprop="text">
<p>I have problem when i try to select data in mongodb with pymongo, this is my code :</p>
<pre><code>import pymongo
from pymongo import MongoClient
import sys
from datetime import datetime

try:
    conn=pymongo.MongoClient('10.33.109.228',27017)
    db=conn.mnemosyne
    data_ip=db.session.aggregate({'$match':{'timestamp':{'$gte': ISODate('2016-11-11T00:00:00.000Z'),'$lte': ISODate('2016-11-11T23:59:59.000Z')}}},{'$group':{'_id':'$source_ip'}})
    for f in data_ip:
        print f['_id']

except pymongo.errors.ConnectionFailure, e:
    print "Could not connect to MongoDB: %s" % e
</code></pre>
<p>and when i execute it i have some error like this:</p>
<pre><code>Traceback (most recent call last):
  File "test.py", line 9, in &lt;module&gt;
    data_ip=db.session.aggregate({'$match':{'timestamp':{'$gte': ISODate('2016-11-11T00:00:00.000Z'),'$lte': ISODate('2016-11-11T23:59:59.000Z')}}},{'$group':{'_id':'$source_ip'}})
NameError: name 'ISODate' is not defined
</code></pre>
<p>I want the result like this: </p>
<pre><code>{ "_id" : "60.18.133.207" }
{ "_id" : "178.254.52.96" }
{ "_id" : "42.229.218.192" }
{ "_id" : "92.82.171.117" }
{ "_id" : "103.208.120.205" }
{ "_id" : "185.153.208.142" }
</code></pre>
<p>this is example structure of mydatabase:</p>
<pre><code>&gt; db.session.findOne()

    {
            "_id" : ObjectId("5786398d1f50070f31f27f7c"),
            "protocol" : "epmapper",
            "hpfeed_id" : ObjectId("5786398d1f50070f31f27f7b"),
            "timestamp" : ISODate("2016-07-13T12:52:29.112Z"),
            "source_ip" : "23.251.55.182",
            "source_port" : 2713,
            "destination_port" : 135,
            "identifier" : "d3374f14-48f7-11e6-9e19-0050569163b4",
            "honeypot" : "dionaea"
    }
</code></pre>
<p>Please help me to fix the error</p>
</div>
<div class="post-text" itemprop="text">
<p><code>ISODate</code> is a function in the Mongo shell, which is a javascript environment, it's not available within Python.</p>
<p>You can use <a href="https://labix.org/python-dateutil" rel="nofollow noreferrer">dateutil</a> for converting a string to datetime object in Python, </p>
<pre><code>import dateutil.parser
dateStr = "2016-11-11T00:00:00.000Z"
dateutil.parser.parse(dateStr)  # returns a datetime.datetime(2016, 11, 11, 00, 0, tzinfo=tzutc())
</code></pre>
<p>Using <code>PyMongo</code>, if you want to insert datetime in <code>MongoDB</code> you can simply do the following:</p>
<pre><code>import pymongo
import dateutil
dateStr = '2016-11-11T00:00:00.000Z'
myDatetime = dateutil.parser.parse(dateStr)
client = pymongo.MongoClient()
client.db.collection.insert({'date': myDatetime})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>ISODate</em> is a JavaScript Date object. To query range of date using PyMongo, you need to use a <a href="https://docs.python.org/3/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><code>datetime.datetime</code></a> instance which mongod will convert to the appropriate BSON type. You don't need any third party library.</p>
<p>Also you shouldn't be using the Aggregation Framework to do this because the <code>_id</code> field is unique within the collection which makes this a perfect job for the <a href="http://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.distinct" rel="nofollow noreferrer"><code>distinct()</code></a> method.</p>
<pre><code>import datetime


start = start = datetime.datetime(2016, 11, 11)
end = datetime(2016, 11, 11, 23, 59, 59)

db.session.distinct('_id', {'timestamp': {'$gte': start, '$lte': end}})
</code></pre>
<p>If you really need to use the <code>aggregate()</code> method, your <code>$match</code> stage must look like this:</p>
<pre><code>{'$match': {'timestamp': {'$gte': start, '$lte': end}}}
</code></pre>
</div>
<span class="comment-copy">its work, thank you so much for help</span>
