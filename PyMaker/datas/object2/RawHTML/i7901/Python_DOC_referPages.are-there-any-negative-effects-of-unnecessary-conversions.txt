<div class="post-text" itemprop="text">
<pre><code>SubStrings = []
s = input().strip()
k, b, m = input().strip().split(' ')
k, b, m = [int(k), int(b), int(m)]
def Check():
    for i in range(len(SubStrings)):
        if len(str(SubStrings[i])) != k:
            SubStrings.pop(i)
            Check()
for i in range(len(s)-1):
    subs = str(s[i:(k+i)])
    SubStrings.append(subs)
    Check()
</code></pre>
<p>The code starts with the <code>for</code> loop which appends strings to the list. I modified it while I was creating it and accidentally left the line in the function which converts the elements of the list into strings, even though they already are strings. Can this unnecessary conversion cause problems?</p>
</div>
<div class="post-text" itemprop="text">
<p>No it won't cause any "problems", i.e. fatal or non-fatal errors won't occur because of it. The logic should execute as intended and only a negligible performance hit might occur due to the fact you are performing a function call to <code>str</code> - but this is so minor that it is irrelevant.</p>
<p><strong>TLDR;</strong> program should execute as intended; cause insignificant decrease in performance; makes it less readable / understandable.</p>
</div>
<div class="post-text" itemprop="text">
<p>No. <code>str(s)</code> equals <code>s</code> for any string <code>s</code> (<a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">ref</a>). Any loss of performance will be insignificant.</p>
<p>That being said, unexpected conversion could could make things work when they're supposed to fail, or cause slightly different bahaviour.</p>
</div>
<span class="comment-copy">The most significant negative impact is to your reputation as a coder when someone reads it. :)</span>
