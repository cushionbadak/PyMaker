<div class="post-text" itemprop="text">
<p>I have a problem with dealing with class variables in Python. I have a code as the following.</p>
<pre><code>class TempClass:
    resource = xlwings.Book() # xlwings is a library manipulating Excel file.

    #...
</code></pre>
<p>Here, to clear 'resource', I need to execute</p>
<pre><code>resource.close()
</code></pre>
<p>Is there any built-in function called when a class (not object) is cleared, so that I can write the above code in that function? Or is there any way to clear 'resource'?</p>
<p>My Python version is 3.6</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use a class variable. A class variable is alive as long as the class exists probably as long as your python interpreter isn't shutdown.</p>
<p>Normally with ressources that need to be closed you can simply use a contextmanager (for example <a href="https://docs.python.org/3/library/contextlib.html#contextlib.closing" rel="nofollow noreferrer"><code>contextlib.closing</code></a>):</p>
<pre><code>import contextlib

# I don't have xlwings so I create some class that acts like it:
class Book(object):
    def __init__(self):
        print('init')

    def close(self):
        print('close')
</code></pre>
<p>The actual "context" can be created and used like this. Inside the block the resource is alive and it's closed after the block ends. I use <code>print</code>s to show where each method is called:</p>
<pre><code>print('before the context')
with contextlib.closing(Book()):
    print('inside the context')
print('after the context')
</code></pre>
<p>Which prints:</p>
<pre><code>before the context
init
inside the context
close
after the context
</code></pre>
</div>
<span class="comment-copy">What do you mean, when a class is "cleared"?</span>
<span class="comment-copy">My guess is you are talking about when you override the data of (an object of?) tempclass. What you could do is create a method in temp class that first does resource.close() and then sets the object to whatever the input method is, and use this instead of then normal obj = (new thing).</span>
<span class="comment-copy">Is there a reason you're using a class instead of an instance? You could more easily use a context manager with an instance. See <a href="https://docs.python.org/3/library/contextlib.html#contextlib.closing" rel="nofollow noreferrer"><b><code>closing</code></b></a> for example</span>
<span class="comment-copy">@OwenCummings So you mean making an instance which is not used by user? I think it is great idea!</span>
<span class="comment-copy">Hmm...but if I use "contextlib", I need to write all the code that using "Book" inside "with" scope. Actually, in my code, all the 'TempClass' instances use 'resource' until my program is shut down.</span>
<span class="comment-copy">Personally I wouldn't leave file handles open until the program shuts down. Most of the time you only need it in very few parts and these can be easily put into a context manager.</span>
<span class="comment-copy">@YounghoonJeong yes, everything would happen within the <code>with</code> scope. Put the block in a function and pass the <code>Book</code> as a parameter.</span>
