<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3480184/unpack-a-list-in-python">Unpack a list in Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>In Python, how do I convert a list to <code>*args</code>?</p>
<p>I need to know because the function</p>
<pre><code>scikits.timeseries.lib.reportlib.Report.__init__(*args)
</code></pre>
<p>wants several time_series objects passed as <code>*args</code>, whereas I have a list of timeseries objects.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>*</code> operator before an iterable to expand it within the function call. For example:</p>
<pre><code>timeseries_list = [timeseries1 timeseries2 ...]
r = scikits.timeseries.lib.reportlib.Report(*timeseries_list)
</code></pre>
<p>(notice the <code>*</code> before <code>timeseries_list</code>)</p>
<p>From the <a href="https://docs.python.org/2/reference/expressions.html#calls" rel="noreferrer">python documentation</a>:</p>
<blockquote>
<p>If the syntax *expression appears in the function call, expression
  must evaluate to an iterable. Elements from this iterable are treated
  as if they were additional positional arguments; if there are
  positional arguments x1, ..., xN, and expression evaluates to a
  sequence y1, ..., yM, this is equivalent to a call with M+N positional
  arguments x1, ..., xN, y1, ..., yM.</p>
</blockquote>
<p>This is also covered in the python tutorial, in a section titled <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="noreferrer">Unpacking argument lists</a>, where it also shows how to do a similar thing with dictionaries for keyword arguments with the <code>**</code> operator. </p>
</div>
<div class="post-text" itemprop="text">
<p>yes, using *arg passing args to a function will make python unpack the values in arg and pass it to the function.</p>
<p>so:</p>
<pre><code>&gt;&gt;&gt; def printer(*args):
 print args


&gt;&gt;&gt; printer(2,3,4)
(2, 3, 4)
&gt;&gt;&gt; printer(*range(2, 5))
(2, 3, 4)
&gt;&gt;&gt; printer(range(2, 5))
([2, 3, 4],)
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>*args</code> just means that the function takes a number of arguments, generally of the same type.</p>
<p>Check out <a href="http://docs.python.org/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">this section</a> in the Python tutorial for more info.</p>
</div>
<span class="comment-copy">Forgot this: <a href="http://docs.python.org/reference/expressions.html#calls" rel="nofollow noreferrer">docs.python.org/reference/expressions.html#calls</a></span>
<span class="comment-copy">I think the OP already knows this. The function takes multiple args but they have a single list they want to pass in as multiple args.</span>
<span class="comment-copy">@Bryan Oakley: The docs I linked to explain how to do that.</span>
<span class="comment-copy">while that's true, the way you worded your answer it sounds like the link points to somewhere else. I think your answer will be more useful if you reword it to address unpacking rather than what *args means.</span>
<span class="comment-copy">Could you provide a qualitative citation for the "generally of the same type" part?</span>
