<div class="post-text" itemprop="text">
<p>If I have:</p>
<pre><code>map = { 'stack':'overflow' }

try:
  map['experts-exchange']
except:                       &lt;--- What is the Exception type that's thrown here?
  print( 'is not free' )
</code></pre>
<p>Couldn't find it on the web. =(</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>KeyError
</code></pre>
<p>if you do it on the console without the try block will tell it to you</p>
<pre><code>&gt;&gt;&gt; a = {}
&gt;&gt;&gt; a['invalid']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'invalid'
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>KeyError</code>. </p>
<pre><code>&gt;&gt;&gt; x = {'try': 1, 'it': 2}
&gt;&gt;&gt; x['wow']

Traceback (most recent call last):
  File "&lt;pyshell#3&gt;", line 1, in &lt;module&gt;
    x['wow']
KeyError: 'wow'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Its called <strong>KeyError</strong></p>
<pre><code>&gt;&gt;d={1:2}

&gt;&gt;d[2]

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in ?
KeyError: 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>Python 2.6.6 (r266:84292, Sep 15 2010, 16:22:56) 
[GCC 4.4.5] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; map = { 'a' : 'b' }
&gt;&gt;&gt; print map['c']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'c'
&gt;&gt;&gt; 
</code></pre>
<p>So a wild guess might be...a <code>KeyError</code> ?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't know the specific exception to handle, you can simply do this kind of thing,</p>
<pre><code>map = {'stack': 'overflow'}

try:
    map['experts-exchange']
except Exception as inst:
    print(type(inst))       # the exception instance
    print(inst.args)        # arguments stored in .args
    print(inst)             # __str__ allows args to be printed directly,
                            # but may be overridden in exception subclasses
</code></pre>
<p>The out put of the above code is,</p>
<pre><code>&lt;class 'KeyError'&gt;
('experts-exchange',)
'experts-exchange'
</code></pre>
<p>When an exception occurs, it may have an associated value, also known as the exceptionâ€™s argument. The presence and type of the argument depend on the exception type.</p>
<p>The except clause may specify a variable after the exception name. The variable is bound to an exception instance with the arguments stored in instance.args. For convenience, the exception instance defines <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer">__str __()</a> so the arguments can be printed directly without having to reference .args. One may also instantiate an exception first before raising it and add any attributes to it as desired.</p>
</div>
<span class="comment-copy">Where did you look? The page at <a href="http://docs.python.org/library/stdtypes.html" rel="nofollow noreferrer">docs.python.org/library/stdtypes.html</a> says "d[key] -- Return the item of d with key key. Raises a KeyError if key is not in the map."</span>
<span class="comment-copy">I basically typed "Python dictionary exception" into Bing and gave up after the first 3 links. Thought I could get a faster answer on SO. =p But thank you for including the reference link here.</span>
<span class="comment-copy">You should use the interactive console to view results like this.</span>
<span class="comment-copy">I think the question isn't too bad because when someone searches for it, it will show up on the search engine instead of having to search for it, right?</span>
<span class="comment-copy">It's kind of ironic because this is the top Google result if you search for what Python throws if you look for a nonexistent key... Thank you ShaChris23</span>
<span class="comment-copy">Thank you. I tried it on the console before posting, but I didn't know the "KeyError" was the actual Exception type! Noob-ness. Lol.</span>
<span class="comment-copy">Chose your answer because your console suggestion made me realize KeyError was the Exception name.</span>
<span class="comment-copy">+1.  Try it!  Wow!</span>
