<div class="post-text" itemprop="text">
<p>Just made a http server handling only file uploading.
Want to add a feature to the http server sharing the file on Get request by a http client.</p>
<p>I have no idea how to show the file to clients. So a client can see it using <a href="http://127.0.0.1/filename.avi" rel="nofollow">http://127.0.0.1/filename.avi</a></p>
<p>In summary</p>
<p>A http client is uploading a file to a http server.</p>
<p>A http client is watching the file through the http server</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 2:
<a href="http://docs.python.org/2/library/simplehttpserver.html#module-SimpleHTTPServer" rel="nofollow noreferrer">SimpleHTTPServer</a>.</p>
<p><code>python2 -m SimpleHTTPServer 80</code></p>
<p>Python 3:
<a href="https://docs.python.org/3/library/http.server.html" rel="nofollow noreferrer">http.server</a>.</p>
<p><code>python -m http.server 80</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can look at Flask.  It is very lightweight and probably does most of what you're looking for.</p>
</div>
<div class="post-text" itemprop="text">
<p>new python would be
python -m http.server [port number]
in the command prompt</p>
</div>
<span class="comment-copy">Should have told that I used HTTPServer and BaseHTTPRequest classes in my project. So want to keep them as it is and add the feature.</span>
<span class="comment-copy">If you already implemented an http server that supports POST, then it should be trivial to implement get, check SimpleHTTPServer's code. check : /usr/lib/python2.6/SimpleHTTPServer.py</span>
<span class="comment-copy">@user518978 if you can upload a file you are almost there. Your server will need to keep track of the uploaded files somehow (presumably you are saving these files somewhere on the filesystem). You could implement a method that when the client requests the root ("GET /") you return a list of files. Then the client can request the particular file you want to stream to it.</span>
