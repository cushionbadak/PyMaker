<div class="post-text" itemprop="text">
<p>Is there any way to customize the border color of a <code>Tkinter/ttk</code> widgets or frames?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can create your own <em>style</em> and apply it to the widget or configure the attributes of an existing style. </p>
<p>Some documentation and examples are in the official docs, specifically the section about <a href="https://docs.python.org/3/library/tkinter.ttk.html?highlight=ttk%20style#tkinter.ttk.Style" rel="nofollow noreferrer">ttk.Style</a>.</p>
<p>Additional information on using styles (for several languages) can be found at <a href="http://www.tkdocs.com/tutorial/styles.html" rel="nofollow noreferrer">tkdocs.com</a>. </p>
</div>
<span class="comment-copy">I can see many ways to change the properties of a widget, but none of them refer to a widget's border color. I'm wondering if you're thinking of a specific Tcl/Tix feature that isn't supported by the Python Tkinter/ttk wrappers?</span>
<span class="comment-copy">@Malcolm: I think the whole tcl/tk/ttk interface is exposed to Tkinter. Unfortunately, showing how to configure a style can't be done in just a couple lines of code, it's a bit too complex for that. For inspiration, however, take a look at this code which shows how to create a frame with rounded corners: <a href="http://svn.python.org/projects/python/branches/py3k/Demo/tkinter/ttk/roundframe.py" rel="nofollow noreferrer">svn.python.org/projects/python/branches/py3k/Demo/tkinter/ttk/â€¦</a>. You'll need to tweak the imports if you want to run it with python 2.7.</span>
<span class="comment-copy">Thank you! Your demo really opened my eyes as to the power of TKinter/ttk. For those following this thread, here are the changes required to run Bryan's example with Python 2.7 - change the first 2 import statements to this: import Tkinter as tkinter; import ttk</span>
<span class="comment-copy">@Malcolm: there are probably very few people who realize just how powerful tk is, especially with the themed widgets. Unfortunately there's not a lot of documentation for doing such creative things as rounded corners with custom highlights based on widget state, but it's possible. You can certainly make a Tkinter based app that <i>nobody</i> would know was based on Tkinter if you put a little effort into it. Pundits would be very surprised.</span>
<span class="comment-copy">I'm blown away by the power that's hidden beneath the surface of Tkinter. Quote: "You can certainly make a Tkinter based app that nobody would know was based on Tkinter if you put a little effort into it." ... I agree. And that's exactly what we're trying to do :) Thank you for all your help!</span>
