<div class="post-text" itemprop="text">
<p>I'm a novice programmer (if that!)
im working on a simple project at work that will swallow a HP network switch config file and spit out a png image of the switch, with coloured ports that match the colour of the vlan associated with those ports</p>
<p>currently i have this working just fine in a manual fashion.</p>
<p>I import a blank switch png file
then i specify the current colour of the switch ports for interfaces 1&amp;2
i then specify the colour of the vlan i want to assign to them.
i run a command that says "if any pixels in the image match x,x,x colour then change them to the value of trunkport"
then spit out that new image file with the colour changes</p>
<p>here's an example:</p>
<pre><code>import cv2
import numpy as np

SwitchImage = cv2.imread("BlankSwitchXX.png",1)

interface1 = [0,0,1]
interface2 = [0,0,2]

trunkport = [0,165,255]

SwitchImage[np.where((SwitchImage == interface1).all(axis = 2))] = trunkport
SwitchImage[np.where((SwitchImage == interface2).all(axis = 2))] = trunkport

cv2.imwrite("SwitchXX.png",SwitchImage) 
</code></pre>
<p>this is works just fine however the end goal is to use a switch config file to make this assignments.</p>
<p>these cfg files are full of useless text but there is one group of lines that im interested in</p>
<p>they look like this </p>
<pre><code>trunk 1,2 Trk1 LACP
</code></pre>
<p>i wanted to ask if there was a way to search this .txt file for the string "trunk" then if it gets a hit on trunk, look at the next numbers that follow it. it sees </p>
<pre><code>1,2
</code></pre>
<p>and interprets those to be the same as </p>
<pre><code>interface1
interface2
</code></pre>
<p>then assign the value of "trunkport" to those variables.</p>
<p>i hope that makes sense, please let me know if not. the idea behind this is that a large number of switches will share this same format of config and this program can be used to visually map out the vlan colours using just the cfg file.</p>
<p>any help would be really appreciated!!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can match the lines you are interested in by using the <code>re</code> module. If your data is in a file called <code>data.txt</code> you can get it like:</p>
<pre><code>import re
with open('test.txt', 'r') as f:
    lines = f.readlines()
p = re.compile('^trunk')
matches = [l for l in lines if p.match(l)]
#output: ['trunk 1,2 Trk1 LACP\n']
</code></pre>
<p>Now you have a list of lines that start with 'trunk'. See <a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#module-re</a> for details of how to do regex in Python. </p>
<p>Now you can get the numbers if they are immediately after 'trunk' like this:</p>
<pre><code>numbers = [m.split(' ')[1].split(',') for m in matches]
#output: [['1', '2']]
</code></pre>
<p>(This could also be done with a regex as Idlehands suggests).</p>
<p>Finally, you can add those numbers to a dict to access them </p>
<pre><code>{'interface' + x:'trunkport' for interfaces in numbers for x in interfaces}
#output: {'interface1': 'trunkport', 'interface2': 'trunkport'}
</code></pre>
</div>
<span class="comment-copy">A text file is mostly a large string (if you read it at once) or a sequence of smaller strings (if you read it line by line), so if you can extract those infos from a string you can extract them from a file. Strings have a lot of useful methods (searching, splitting etc), and there's the <code>re</code> module too if you have more complex needs.  As for the last part - "assign to those variables" - you may want to use a list or a dict instead (hint: when you have variables named like "foo1", "foo2", "fooXXX" you certainly want a list or dict instead).</span>
<span class="comment-copy">hi! thanks for the info, while what youre saying makes some sense, im not sure how i would implement that. are you saying to have a list or dictionary instead of a long list of variables named     interface1     interface2     interface3 etc?</span>
<span class="comment-copy">Is <code>trunk</code> a unique word in the cfg always? If so it'll make your life much easier.  You can use <code>re</code> module as @brunodesthuilliers suggested and search for pattern <code>'trunk (\d+),(\d+) Trk'</code> and use the group 1 (<code>1</code>) and 2 (<code>2</code>) returned to match your interface values.  If they are a match then proceed with the assignment of <code>trunkport</code>.  If that's not the case it would help if you provide some sample.</span>
<span class="comment-copy">trunk is a unique word yes, but there may be multiple instances of it. even so every instance will have the format trunk 1,2 Trk1 LACP</span>
<span class="comment-copy">files are iterable so you don't need to read them all in memory at once</span>
