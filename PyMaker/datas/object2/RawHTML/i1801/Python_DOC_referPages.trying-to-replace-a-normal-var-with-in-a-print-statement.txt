<div class="post-text" itemprop="text">
<p>Basically I'm learning some python basics and without issues executed the below:</p>
<p><code>print(var1 + ' ' + (input('Enter a number to print')))</code></p>
<p>Now I'm trying to print the output of the variable along with the string stating "You have entered" using the % method.</p>
<p>Have tried this apart from other code:
<code>print(%s + ' ' + (input('Enter a number to print')) %(var))</code> but gives a syntax error on the %s</p>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps you mean something like this:</p>
<pre><code>print('%s %s'%(var1, input('Enter a number to print')))
</code></pre>
<p>The <code>%s</code> goes inside the quotes, and indicates the position of the elements you want to insert in the string. </p>
</div>
<div class="post-text" itemprop="text">
<p>Don't. This way of formatting strings is from python 2.x and there are far batter ways to deal with string formatting in python 3.x:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">string.format()</a> and <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">format mini language</a> </li>
<li><a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">pep 498 [3.6+]</a> or <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a> and also <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">format mini language</a></li>
</ul>
<hr/>
<h2>Your code has 2 problems:</h2>
<pre><code>print(var1 + ' ' + (input('Enter a number to print')))
</code></pre>
<p>is, if <code>var1</code> is a string it works - if not it crashes:</p>
<pre><code>var1 = 8
print(var1 + ' ' + (input('Enter a number to print')))

Traceback (most recent call last):
  File "main.py", line 2, in &lt;module&gt;
    print(var1 + ' ' + (input('Enter a number to print')))
TypeError: unsupported operand type(s) for +: 'int' and 'str'
</code></pre>
<p>You could do </p>
<pre><code>var1 = 8
print(var1 , ' ' + (input('Enter a number to print')))
</code></pre>
<p>but then you lost the ability to format <code>var1</code>. Also: the <code>input</code> is evaluated <em>before</em> the <code>print</code>, so its text is on one line, followed by the <code>print</code>-statements output - why put them into the same line then?</p>
<h2>Better:</h2>
<pre><code>var1 = 8

# this will anyhow be printed in its own line before anyway
inp = input('Enter a number to print')

# named formatting (you provide the data to format as tuples that you reference
# in the {reference:formattingparams}
print("{myvar:&gt;08n} *{myInp:^12s}*".format(myvar=var1,myInp=inp))

# positional formatting - {} are filled in same order as given to .format()
print("{:&gt;08n} *{:^12s}*".format(var1,inp))

# f-string 
print(f"{var1:&gt;08n} *{inp:^12s}*")

# showcase right align w/o leading 0 that make it obsolete
print(f"{var1:&gt;8n} *{inp:^12s}*")
</code></pre>
<p>Output:</p>
<pre><code>00000008 *   'cool'   *
00000008 *   'cool'   *
00000008 *   'cool'   *
       8 *   'cool'   *
</code></pre>
<p>The mini-format parameters mean:</p>
<pre><code>:&gt;08n    right align, fill with 0 to 8 digits (which makes the &gt; kinda obsolete)
         and n its a number to format

:^12s    center in 12 characters, its a string
</code></pre>
<hr/>
<p>Have a look at <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)</a> as well. It has several options to control the output - f.e. what to use as seperator if multiple things are given:</p>
<pre><code>print(1,2,3,4,sep="--=--") 
print(  *[1,2,3,4], sep="\n")  # *[...] provides the list elemes as single params to print
</code></pre>
<p>Output:</p>
<pre><code>1--=--2--=--3--=--4

1
2
3
4
</code></pre>
</div>
<span class="comment-copy">This is more basic for me to comprehend. Small question, I see that print('%s'%(var1, input('Enter a number to print'))) fails to compile with error "TypeError: not all arguments converted during string formatting". What is the effect of using %s %s instead of only one %s. Thanks in advance!</span>
<span class="comment-copy">With <code>%s %s</code> you're trying to insert two elements in your string. <code>var1</code> goes into the position of the first <code>%s</code>, and the result of your <code>input</code> goes in the position of your second <code>%s</code>.</span>
<span class="comment-copy">Works nicely, a bit advanced but will get there soon :D Many thanks for your time!</span>
