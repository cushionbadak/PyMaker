<div class="post-text" itemprop="text">
<p>I've written a script in python to scrape some data from a website and store them in mysql. My script successfully do the job if I opt for the two options to insert the data:</p>
<pre><code>mycursor.execute("INSERT INTO webdata (name,bubble,review) VALUES ('{}','{}','{}')".format(name,bubble,review))
mycursor.execute("INSERT INTO webdata (name,bubble,review) VALUES (%s,%s,%s)",(name,bubble,review))
</code></pre>
<p>However, It throws an error when I try to do the same using <strong><em><a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer">python's new string formatting</a></em></strong> like below:</p>
<pre><code>mycursor.execute("INSERT INTO webdata (name,bubble,review) VALUES (f'{name},{bubble},{review}')")
</code></pre>
<p>Error It throws:</p>
<pre><code>line 429, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''{name},{bubble},{review}')' at line 1
</code></pre>
<p>Where I'm going wrong and how to fix it as I'm very willing to stick to the last formatting style?</p>
</div>
<div class="post-text" itemprop="text">
<p>Better to let the MySQL Connector bind the variables, by using %s's.  This avoids SQL injection.  Here a working example.</p>
<pre><code>import MySQLdb

# set up db connection
dbApi = MySQLdb
connection = MySQLdb.connect(
    host    = &lt;hostname&gt;,
    user    = &lt;databasename&gt;,
    passwd  = password,
    db      = &lt;dbname&gt;,
    port    = 3306,
    charset = "utf8")
cursor = connection.cursor(dbApi.cursors.DictCursor)

# insert records
records = [['George', 'Ten', 'Good'],
           ['Ringo', 'Ten', 'Good'],
           ['Paul', 'Ten', 'Good'],
           ['John', 'Ten', 'Good']]
insert_sql = 'insert into webdata (name, bubble, review) values (%s, %s, %s)'

for record in records:
    cursor.execute(insert_sql, record)

# list record
sql = 'select * from webdata'
cursor.execute(sql)
data = cursor.fetchall()
print 'data:', data

connection.commit()
cursor.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't use f-strings with databases, simple as that, if you want to write code not vulnerable to SQL injection vulnerabilities.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are always alternatives. Although <strong><em><code>f-strings</code></em></strong> with databases are not recommended or safe to use but still it is possible to do so. Check it out:</p>
<pre><code>mycursor.execute(f"INSERT INTO webdata (name,bubble,review) VALUES ('{name}','{bubble}','{review}')")
</code></pre>
</div>
<span class="comment-copy">use the 2nd option with parametrized query: <a href="http://bobby-tables.com/" rel="nofollow noreferrer">bobby-tables.com</a> don`t do string interpolation</span>
