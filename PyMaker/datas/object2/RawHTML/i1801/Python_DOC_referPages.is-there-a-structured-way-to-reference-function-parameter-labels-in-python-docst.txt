<div class="post-text" itemprop="text">
<p>I am using the tool <a href="https://docs.python.org/3/library/pydoc.html" rel="nofollow noreferrer">pydoc</a> to automatically generate documentation. Given the function:</p>
<pre><code>def sum(a, b):
  """Returns the sum of a and b."""
  return a + b
</code></pre>
<p>I am curious if there is a structured way to use markdown to highlight references to function parameter labels? For example:</p>
<pre><code>"""Returns the sum of 'a' and 'b'."""
"""Returns the sum of `a` and `b."""
"""Returns the sum of *a* and *b*."""
"""Returns the sum of **a** and **b**."""
</code></pre>
<p>Similar to this question <a href="https://stackoverflow.com/questions/13879717/referencing-parameters-in-a-python-docstring">Referencing parameters in a Python docstring</a> which is about using Sphinx instead of pydoc.</p>
<p>Also note, that I am curious about referencing the labels (not the types) of the function parameters.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no markdown support in Pydoc.</p>
<p>Formatting in docstrings is limited to <a href="https://github.com/python/cpython/blob/1bf9cc509326bc42cd8cb1650eb9bf64550d817e/Lib/pydoc.py#L588-L627" rel="nofollow noreferrer">recognising PEP and RFC references, <code>self.</code> attribute references and links for existing names (for other classes, methods, and functions) when rendering to HTML</a>, so in in that mode, some names are already going to be marked up. This doesn't extend to argument names however.</p>
<p>Pydoc does use <a href="https://docs.python.org/3/library/inspect.html#inspect.signature" rel="nofollow noreferrer"><code>inspect.signature()</code> output</a> as the basis for formatting the function, so if you make sure you have <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">informative type hints</a>, then you'll at least get to document the types of the arguments and return value.</p>
<p>So a (rather contrived) definition using a generic <code>TypeVar</code> definition instead of sticking to <code>float</code>, like:</p>
<pre><code>from typing import TypeVar

Number = TypeVar('Number', int, float)

def sum(a: Number, b: Number) -&gt; Number:
    """Produce the sum of the two numbers, a and b"""
    return a + b
</code></pre>
<p>comes out in pydoc as</p>
<pre class="lang-none prettyprint-override"><code>sum(a: ~Number, b: ~Number) -&gt; ~Number
    Produce the sum of the two numbers, a and b
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/7690220/how-to-document-python-function-parameter-types" title="how to document python function parameter types">stackoverflow.com/questions/7690220/â€¦</a>, check this url.</span>
<span class="comment-copy">@LavanyaPant, thanks. The question you linked discusses how to annotate the type of the parameter, which I'm not really interested in. I'm more curious about a standard way to reference the label of the parameter.</span>
<span class="comment-copy">Cool, that makes a lot of sense. Now I'm trying to remember why I thought Pydoc supported markdown, weird.</span>
