<div class="post-text" itemprop="text">
<p>Below is my code:</p>
<pre><code>import re

class Example:
    def __init__(self):
        self.regex_list = ['omg', '\bwow']

    def print_regex(self):
        print('|'.join(self.regex_list))

e = Example()
e.print_regex()
</code></pre>
<p>Output:</p>
<pre><code>omgwow
</code></pre>
<p>Expected Output:</p>
<pre><code>omg|\bwow
</code></pre>
<p>So, I have a list of regexps that I want to join using OR operator. I do so expecting output to be OR joined string. </p>
<p>To my surprise it didn't join and it removed the \b too. This happens only inside the class while accessing self. </p>
<p>I tried directly joining outside of class which worked but I can't understand why this is not working. Could someone help me in understanding this?</p>
<p>EDIT:</p>
<pre><code>regex_list = ['omg', r'\bwow']
print('|'.join(regex_list)) # Works outside the class
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>\b</code> is backspace character which is causing your pipe to be removed (just like when you press backspace). You need to bypass backspace.</p>
<p>you can bypass it by replacing <code>\bwow</code> with <code>\\bwow</code>.</p>
<pre><code>#output
omg|\bwow
</code></pre>
</div>
<span class="comment-copy">I understood that.</span>
<span class="comment-copy">I understand that, but why does it work when used directly rather than inside the class?  Please see my edit.</span>
<span class="comment-copy">it doesn't work in that case either. Can you try running it again?</span>
<span class="comment-copy">I already know that converting '\bwow' to r'\bwow' works</span>
<span class="comment-copy">Oh cool. Got it, so \b is being treated as backspace somehow. Thanks for the help.</span>
<span class="comment-copy">It works using raw strings, prefixed with <code>r</code>, because those do treat backslashes as a literal character. See [the doc ](<a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a>) for details.</span>
