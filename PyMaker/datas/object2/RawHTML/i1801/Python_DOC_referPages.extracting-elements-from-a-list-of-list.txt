<div class="post-text" itemprop="text">
<p>I have a dataset which is a list and its elements are again a list. 
For example, myList = [[1,2,3],[4,5,6],.......,[7,8,9],[11,12,14]]. I want to randomly pick a bunch of elements from this list - say,[4,5,6] and [11,12,14]. How to achieve this? </p>
<p>I tried the following:</p>
<pre><code># Suppose List_1 has 1000 elements(lists) and I want 100 elements
indices = np.random.choice(myList, size = 100, replace = None )
new_list = myList[indices]
</code></pre>
<p>Apparently, the above code does not work. The error message is: "list indices must be integers or slices, not list"</p>
<p>Can anyone help me with this? My actual intention is to sample data points(lists) from the original dataset(list) to create a batch of data for training an ML algorithm. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample</code></a> which takes an additional parameter to specify the number of random items to select from population:</p>
<pre><code>import random

myList = [[1,2,3],[4,5,6],[7,8,9],[11,12,14]]
print(random.sample(myList, 2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have an error in last line but still I think it's closest to what you intended ( using numpy )</p>
<pre><code>indices = np.random.choice(range(len(myList)), size = 100, replace = None )
new_list = myList[indices]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You Can consider random - Random variable generators, Where as if you are looking  to pick any number of list element then as @Austin suggested use <code>sample</code> with random but the fair choice is random.</p>
<p><strong>Using <code>random.sample</code> would be ...</strong></p>
<pre><code>&gt;&gt;&gt; lst
[['15', '48', '698'], ['10', '32', '66'], ['78', '501', '23']]

&gt;&gt;&gt; random.sample(population=lst, k=2)
[['78', '501', '23'], ['15', '48', '698']]
</code></pre>
<p><strong>While using</strong> <code>random.choices</code> </p>
<pre><code>&gt;&gt;&gt; random.choices(population=lst, k=2)
[['15', '48', '698'], ['15', '48', '698']]
</code></pre>
<p><strong>Note</strong> </p>
<p>Look at <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">The random Doc</a>  here</p>
<blockquote>
<p>random.sample(population, k) Return a k length list of unique elements
  chosen from the population sequence or set. Used for random sampling
  without replacement.</p>
<p>random.choices(population, weights=None, *, cum_weights=None, k=1)
  Return a k sized list of elements chosen from the population with
  replacement. If the population is empty, raises IndexError.</p>
</blockquote>
</div>
<span class="comment-copy">Is there a reason you're trying to use numpy for this? You can just use <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer">random.choice</a></span>
<span class="comment-copy">Question has nothing to do with <code>machine-learning</code> - kindly do not spam the tag (removed).</span>
<span class="comment-copy">Suppose I have two lists: myList1 (Ex: input data) and myList2 (Ex: output data) each having the same number of elements (which are lists) and with a 1-1 correspondence. Is there a way I can sample the elements randomly from these two lists so that the extracted elements have the same index?</span>
<span class="comment-copy">Yes, I made an error while posting it here. I have edited the post now. Thanks</span>
<span class="comment-copy">but still extracting indices of chosen elements using this syntax is alternative without using sample</span>
