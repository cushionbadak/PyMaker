<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/519633/lazy-method-for-reading-big-file-in-python">Lazy Method for Reading Big File in Python?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to work with a (very) large 45gb .txt file that cannot be opened using normal text editors. </p>
<p>Data within each row is separated by a spacing, although there are also spaces within each parameter. For example, 1 row looks somewhat like this:</p>
<blockquote>
<p>University of Cambridge CB2 1TQ 0001234567 2011-01-25 12345 11.12345
  12.12345 13.12345 14.1234 16.2716)</p>
</blockquote>
<p>What I would want to is essentially to clean it up, filter some data, sum up some cells/parameters, append some additional data to each row, and perform clustering analysis (probably with python or C# since I'm starting to pick it up).</p>
</div>
<div class="post-text" itemprop="text">
<p>Well having it in a database sounds like a good start, rather than trying to do all your data munging from a text file. If you know you can filter the data <em>right now</em> then that might make life easier too.</p>
<pre><code>with open("file.txt", "r") as file:
    for line in file:
        # Filter
        # If filter passes, add to batch
        # At a batch size n, insert to db and restart batch
</code></pre>
<p>Now your data is in a database and you can execute arbitrary SQL queries against it in a more performant way, get aggregate stats like sums, and append values. You can extract samples from it for your ML ops or use <code>fit generator</code> methods that do queries. I've used the clustering implementations in Python scikit-learn and I enjoyed working with them, but I don't recall there being any out-of-memory implementations. (I can't speak to c# libraries since I haven't used them.)</p>
<p>Python has DB APIs in stdlib like <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">https://docs.python.org/3/library/sqlite3.html</a></p>
<p>Python has ORM with <a href="https://www.sqlalchemy.org/" rel="nofollow noreferrer">https://www.sqlalchemy.org/</a></p>
<p>Python also has public cloud database SDKs like </p>
<blockquote>
<p><a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html" rel="nofollow noreferrer">https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html</a></p>
</blockquote>
<p>and </p>
<blockquote>
<p><a href="https://cloud.google.com/python/getting-started/using-cloud-sql" rel="nofollow noreferrer">https://cloud.google.com/python/getting-started/using-cloud-sql</a></p>
</blockquote>
</div>
<span class="comment-copy">If you use the <code>vim</code> editor, it can open very large files easily.</span>
<span class="comment-copy">This data can be parsed easily - so as long as you start from the right.  Once 10 fields have been found, the rest is the title.</span>
