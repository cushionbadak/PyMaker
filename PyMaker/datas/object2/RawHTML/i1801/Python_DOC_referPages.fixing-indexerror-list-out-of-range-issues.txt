<div class="post-text" itemprop="text">
<p>I am working with a .csv file, I wrote this code to count number of times each value in the <em>year</em> column occurs in a csv dataset.</p>
<p>I keep getting a <code>IndexError: list out of range</code> in line 10 at <code>row_year = suspension[5]</code> whenever I run the code on my personal system but the code runs fine when I run it on dataquest site. </p>
<p>The csv dataset has 7 columns, the 5th column represents <em>years</em>.</p>
<pre><code>import csv

file  = open("nfl_suspensions_data.csv")
nfl_suspensions = list(csv.reader(file))
nfl_suspensions = nfl_suspensions[1:]

years = {}

for suspension in nfl_suspensions:
    row_year = suspension[5]
    if row_year in years:
        years[row_year] = years[row_year] + 1
    else:
        years[row_year] = 1

print(years)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have data that is too short - you index into the list behind it. If you really have <code>year</code> as 5th column you should use <code>column[4]</code> to access it - python indexes are 0 based. </p>
<p>Use <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">error handling</a>:</p>
<blockquote>
<pre><code>import csv

file  = open("nfl_suspensions_data.csv")
nfl_suspensions = list(csv.reader(file))
nfl_suspensions = nfl_suspensions[1:]

years = {}
</code></pre>
</blockquote>
<pre><code> for line_nr, suspension in enumerate(nfl_suspensions):
    try:
        row_year = suspension[5]
    except IndexError:
        # 0 based line_nr, line_nr + 1 due to removed header line  
        print("Data corrupt: less then 6 entries. Line:", line_nr+1)
        print(suspension)

        # skip this data
        continue
</code></pre>
<blockquote>
<pre><code>    if row_year in years:
        years[row_year] = years[row_year] + 1
    else:
        years[row_year] = 1

print(years)
</code></pre>
</blockquote>
<p>This follows pythons <a href="https://stackoverflow.com/questions/12265451/ask-forgiveness-not-permission">Ask forgiveness not permission</a> philosophy.</p>
<hr/>
<p>You should also switch to </p>
<pre><code>with open("nfl_suspensions_data.csv") as file:
    nfl_suspensions = list(csv.reader(file))[1:]
</code></pre>
<p>which is the prefered wa of reading files. See <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">python.org - reading and writing files</a> (see 2nd code example block)</p>
<p>You could leverage <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> as well:</p>
<pre><code>years = defaultdict(int) # above 
</code></pre>
<p>and remove the if checks around </p>
<pre><code># if row_year in years:
    years[row_year] += 1  # this should work using a defaultdict(int)
# else:
#    years[row_year] = 1
</code></pre>
<p>or use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> </p>
<hr/>
<p>Shorter code including file generation (with year at row[5] == 6th column) that accomplishes your task:</p>
<pre><code>import csv
from collections import Counter


# Create a demo data file with errors:    
with open("nfl_suspensions_data.csv","w") as f:
    for inter in range(1,10):
        for y in range(1980,2001,inter):
            f.write(f"na,na,na,na,na,{y},na,na\n")
        # corrupt line
        f.write(f"na,na,na,na\n")


# process and count the years:
with open("nfl_suspensions_data.csv") as file:
    nfl_suspensions = list(csv.reader(file))[1:]

as_columns = list(zip(*[l for l in nfl_suspensions if len(l) &gt; 6]))
print(Counter(as_columns[5]))
</code></pre>
<p>Output:</p>
<pre><code>Counter({'1980': 8, '1992': 5, '1998': 5, '1986': 4, '1988': 4, '1996': 4,
         '2000': 4, '1984': 3, '1989': 3, '1990': 3, '1994': 3, '1995': 3, 
         '1982': 2, '1983': 2, '1985': 2, '1987': 2, '1981': 1, '1991': 1, 
         '1993': 1, '1997': 1, '1999': 1})
</code></pre>
<hr/>
<p>Your logic fixed, applied to the data generated above:</p>
<pre><code>def your_code_fixed(sus):
    years = {}
    for line_nr, suspension in enumerate(sus):
        try:
            row_year = suspension[5]
        except IndexError:
            # 0 based line_nr, line_nr + 1 due to removed header line  
            print("Data corrupt: less then 6 entries. Line:", line_nr+1)
            print(suspension)

            # skip this data
            continue
        if row_year in years:
            years[row_year] = years[row_year] + 1
        else:
            years[row_year] = 1
    print(years)    

with open("nfl_suspensions_data.csv") as file:
    nfl_suspensions = list(csv.reader(file))[1:]

your_code_fixed(nfl_suspensions)
</code></pre>
<p>Output with above data file:</p>
<pre><code>Data corrupt: less then 6 entries. Line: 21
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 33
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 41
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 48
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 54
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 59
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 63
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 67
['na', 'na', 'na', 'na']
Data corrupt: less then 6 entries. Line: 71
['na', 'na', 'na', 'na']

{'1981': 1, '1982': 2, '1983': 2, '1984': 3, '1985': 2, '1986': 4, '1987': 2,
 '1988': 4, '1989': 3, '1990': 3, '1991': 1, '1992': 5, '1993': 1, '1994': 3, 
 '1995': 3, '1996': 4, '1997': 1, '1998': 5, '1999': 1, '2000': 4, '1980': 8}
</code></pre>
</div>
<span class="comment-copy">This is useful!, but it still baffles me that it works on a tutorial site but spits IndexError on my computer</span>
<span class="comment-copy">@AkanoBenjamin see the working example for a file with errors in it. You demo file probably has a trailing newline or somthing like that - check it. The file on the site has correct data</span>
<span class="comment-copy">@AkanoBenjamin edited again.</span>
