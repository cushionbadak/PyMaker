<div class="post-text" itemprop="text">
<p>I have a text to be parsed, this is a concise form of the text.</p>
<pre><code>apple {
    type=fruit
    varieties {
        color=red
        origin=usa
    }
}
</code></pre>
<p>the output should be as shown below</p>
<pre><code>apple.type=fruit
apple.varieties.color=red
apple.varieties.origin=usa
</code></pre>
<p>So far the only thing I have come up with is a sort of breadth-first approach in python. But I cant figure out how to get all the children within.</p>
<pre><code>progInput = """apple {
    type=fruit
    varieties {
        color=red
        origin=usa
    }
}
"""
progInputSplitToLines = progInput.split('\n')
childrenList = []
root = ""

def hasChildren():
    if "{" in progInputSplitToLines[0]:
        global root
        root = progInputSplitToLines[0].split(" ")[0]
    for e in progInputSplitToLines[1:]:
        if "=" in e:
            childrenList.append({e.split("=")[0].replace("    ", ""),e.split("=")[1].replace("    ", "")})
hasChildren()
</code></pre>
<p>PS: I looked into tree structures in Python and came across anytree (<a href="https://anytree.readthedocs.io/en/latest/" rel="nofollow noreferrer">https://anytree.readthedocs.io/en/latest/</a>), do you think it would help in my case?</p>
<p>Would you please be able to help me out ? I'm not very good at parsing text. thanks a bunch in advance. :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your file is in HOCON format, you can try using the <a href="https://github.com/chimpler/pyhocon" rel="nofollow noreferrer"><code>pyhocon</code></a> HOCON parser module to solve your problem.  </p>
<p><strong>Install:</strong> Either run <code>pip install pyhocon</code>, or download the github repo and perform a manual install with <code>python setup.py install</code>. </p>
<p><strong>Basic usage:</strong></p>
<pre><code>from pyhocon import ConfigFactory

conf = ConfigFactory.parse_file('text.conf')

print(conf)
</code></pre>
<p>Which gives the following nested structure:</p>
<pre><code>ConfigTree([('apple', ConfigTree([('type', 'fruit'), ('varieties', ConfigTree([('color', 'red'), ('origin', 'usa')]))]))])
</code></pre>
<p><a href="https://configtree.readthedocs.io/en/latest/" rel="nofollow noreferrer"><code>ConfigTree</code></a> is just a <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict()</code></a>, as seen in the <a href="https://pythonhosted.org/pyhocon/_modules/pyhocon/config_tree.html" rel="nofollow noreferrer">source code</a>.</p>
<p><strong>UPDATE:</strong></p>
<p>To get your desired output, you can make your own recursive function to collect all paths:</p>
<pre><code>from pyhocon import ConfigFactory
from pyhocon.config_tree import ConfigTree

def config_paths(config):
    for k, v in config.items():
        if isinstance(v, ConfigTree):
            for k1, v1 in config_paths(v):
                yield (k,) + k1, v1
        else:
            yield (k,), v

config = ConfigFactory.parse_file('text.conf')
for k, v in config_paths(config):
    print('%s=%s' % ('.'.join(k), v))
</code></pre>
<p>Which Outputs:</p>
<pre><code>apple.type=fruit
apple.varieties.color=red
apple.varieties.origin=usa
</code></pre>
</div>
<span class="comment-copy">Why not store your data in JSON? That would be nice and easy to parse.</span>
<span class="comment-copy">I'm supposed use this format, I'm not sure why its not being stored as JSON, the closest format to this as I checked is HOCON</span>
<span class="comment-copy">Thanks a bunch! really helped me out a great deal.</span>
<span class="comment-copy">@MohamedAyoob No problem. Make sure to give the answer a tick if if it solved your problem.</span>
<span class="comment-copy">I'm sorry I'm new to programming and stackover flow, been a math guy my whole life. Peace.</span>
