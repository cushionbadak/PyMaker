<div class="post-text" itemprop="text">
<p>I have the mathematical expression in string format. Which contains only '+' or '-' operators. I have to split the string on the basis of operators.</p>
<pre><code>expr = '1234 + 896 - 1207 + 1567 - 345'
words = word.split('-\|+')
print(words)
</code></pre>
<p>I have tried this but it gives original string as it is.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>re.split</code> to split on multiple delimiters:</p>
<pre><code>import re

word = '1234 + 896 - 1207 + 1567 - 345'
words = re.split(r' - | \+ ', word)
print(words)

# ['1234 ', '896', '1207', '1567', '345']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use group parenthesis if you want to preserve the operators:</p>
<pre><code>re.split(r"\s*([+-])\s*",expr)
Out: ['1234', '+', '896', '-', '1207', '+', '1567', '-', '345']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your title suggest using regex, your own solution uses <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">string.split()</a> which is also the reason you get the same string back:</p>
<blockquote>
<pre><code>expr = '1234 + 896 - 1207 + 1567 - 345'
words = word.split('-\|+')  # splits only if ALL given characters are there 
print(words)
</code></pre>
</blockquote>
<p>Fixed (but not what you want):</p>
<pre><code>expr = '1234 -\|+ 896 -\|+ 1207 -\|+ 1567 -\|+ 345'
words = expr.split('-\|+')  
print(words)
</code></pre>
<p>Output:</p>
<pre><code>['1234 ', ' 896 ', ' 1207 ', ' 1567 ', ' 345']
</code></pre>
<hr/>
<p>Here is an alternate solution w/o using regex:</p>
<p>Iterate over all characters in the string, if its a number (no space and no +-) add it to a temporary list. If it is a + or - join all numbers from the temporary list and add it to the result list:</p>
<pre><code>ops = set( "+-" )
expr = '1234 + 896 - 1207 / 1567 - 345'

# result list
numbers = []

# temporary list  
num = []

for c in expr:
    if c in ops:
        numbers.append( ''.join(num))
        numbers.append( c )  # comment this line if you want to loose operators
        num = []
    elif c != " ":
        num.append(c)

if num:
    numbers.append( ''.join(num))

print(numbers) 
</code></pre>
<p>Output:</p>
<pre><code>['1234', '+', '896', '-', '1207/1567', '-', '345']

['1234', '896', '1207', '1567', '345'] # without numbers.append( c ) for c in ops
</code></pre>
</div>
<span class="comment-copy">if you do need to use regex - why are you using the <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">string.split()</a> function?</span>
