<div class="post-text" itemprop="text">
<p>I have a str which is the result of hdfs command to show, for a given path, if it is a folder, or a file, or doesn't exist, here are examples:</p>
<p>str_file:</p>
<pre><code>-rw-rw----+  3 jdoe clouderausersdev   12267543 2018-02-05 16:41 hdfs://nameservice1/client/abc/part-00000-994917013a6a-c000.snappy.parquet
</code></pre>
<p>str_folder:</p>
<pre><code>Found 3 items
-rw-rw----+  3 jdoe clouderausersdev          0 2018-02-05 16:41 hdfs://nameservice1/client/abc/_SUCCESS
-rw-rw----+  3 jdoe clouderausersdev   12267543 2018-02-05 16:41 hdfs://nameservice1/client/abc/part-00000-994917013a6a-c000.snappy.parquet
-rw-rw----+  3 jdoe clouderausersdev   12267543 2018-02-05 16:41 hdfs://nameservice1/client/abc/part-00001-994917013a6a-c000.snappy.parquet
-rw-rw----+  3 jdoe clouderausersdev   12267543 2018-02-05 16:41 hdfs://nameservice1/client/abc/part-00002-994917013a6a-c000.snappy.parquet
</code></pre>
<p>str_nonexist:</p>
<pre><code>ls: `hdfs://nameservice1/client/abc/part-00000.parqu': No such file or directory
</code></pre>
<p>Now that I want to know the result with regex check, here is the problem:</p>
<pre><code>import re

regex_folder = "Found [1-9]\d items"
regex_file = ".parquet"
regex_error = "No such file"
</code></pre>
<p>Testing result is as below:</p>
<p><a href="https://i.stack.imgur.com/4Pgpf.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/4Pgpf.png"/></a></p>
<p>So, how do I tell the difference between m and m1? apparently m means no finding while m1 means there is match.</p>
<p>Eventually I need to tell the three scenarios: folder, file, nonexist</p>
<p>Thank you very much.</p>
<p>Update (as per Филип Димитровски):</p>
<p>Still now working:m1 should show a match and m should not.</p>
<p><a href="https://i.stack.imgur.com/boBVp.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/boBVp.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your regex <code>Found [1-9]\d items</code> means you want to search for <code>Found xy items</code> where <code>x</code> is a digit between 1 and 9, and <code>y</code> is a digit between 0 and 9. This is problematic, and I assume it is not what you want. If you want to match one or more digits, just use <code>\d+</code>. You may use <a href="https://regex101.com/" rel="nofollow noreferrer">online regex testers</a> to debug such issues.</p>
<p>The second problem is the misuse of string literals. When working with regular expressions in Python, you should always use raw string literals, which start with the letter 'r'.</p>
<ul>
<li>This is <strong>good</strong>: <code>re.search(r'regex \d here', ..</code></li>
<li>This is <strong>bad</strong>: <code>re.search('regex \d here', ..</code>.</li>
</ul>
<p>Once you fix those, <code>result = re.search(r'Found \d+ items', some_string)</code> will work. To check if you have don't have any matches, you can compare the result with <code>None</code>.  If the result is not <code>None</code>, it will be a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a>. Note: <em>when an expression evaluates to None its result is blank and it is not displayed in the interpreter.</em></p>
<p>Here's a working demo:</p>
<pre><code>import re

str1 = 'ffff'
str2 = 'Found 3 items ffff'
reg_folder = r'Found ([1-9]\d*) items'
if re.search(reg_folder, str1) is None:
    print('Nothing found in str1')

result = re.search(reg_folder, str2)
if result is not None:
    num = result[1]
    print('Found the number: {}'.format(num))
else:
    print('Nothing found in str2')
</code></pre>
<p>Also, keep in mind that regular expressions are not good at parsing human-friendly messages and there may be libraries for HDFS instead of parsing raw output.</p>
</div>
<span class="comment-copy">Thank you but still same, updated to the original post</span>
<span class="comment-copy">@mdivk Use <code>reg_folder=r'Found \d+ items'</code></span>
<span class="comment-copy">The reason of 'Found [1-9]\d items' is the number would always starts with non-0 number</span>
<span class="comment-copy">ok, so now m==m1 returns false, how do I write the python code to check if there is a match? Thanks.</span>
<span class="comment-copy">@mdivk Then, use <code>reg_folder = r'Found [1-9]\d* items'</code></span>
