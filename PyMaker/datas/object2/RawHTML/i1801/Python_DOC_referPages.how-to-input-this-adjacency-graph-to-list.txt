<div class="post-text" itemprop="text">
<p>I have a data file with entries that look like this:</p>
<pre><code>6-&gt;26:32
10-&gt;39:30
26-&gt;28:24
3-&gt;16:19
10-&gt;35:35
10-&gt;37:19
10-&gt;31:36
10-&gt;33:32
</code></pre>
<p>This is how I was trying to read them into a list, but it doesn't work for double-digit numbers. </p>
<pre><code>import sys, re

data = []
for line in sys.stdin.readlines():
    data.append(line.strip())

for i in range(len(data)):
    cleandata = re.findall(r"[\w']", data[i])
    print(cleandata)
</code></pre>
<p>The output I get is this:</p>
<pre><code>['6', '2', '6', '3', '2']
['1', '0', '3', '9', '3', '0']
['2', '6', '2', '8', '2', '4']
['3', '1', '6', '1', '9']
['1', '0', '3', '5', '3', '5']
['1', '0', '3', '7', '1', '9']
['1', '0', '3', '1', '3', '6']
['1', '0', '3', '3', '3', '2']
</code></pre>
<p>What I want is:</p>
<pre><code>[6, 26, 32]
[10, 39, 30]
[26, 28, 24]...etc
</code></pre>
<p>Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following regex instead:</p>
<pre><code>cleandata = re.findall(r"\d+", data[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a basic approach using <a href="https://docs.python.org/3.7/library/stdtypes.html?highlight=str%20replace#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a>:</p>
<pre><code>with open('data.txt') as file:
    for line in file:
        line = line.replace('-&gt;', ' ').replace(':', ' ')
        print(list(map(int, line.split())))
</code></pre>
<p>Which Outputs:</p>
<pre><code>[6, 26, 32]
[10, 39, 30]
[26, 28, 24]
[3, 16, 19]
[10, 35, 35]
[10, 37, 19]
[10, 31, 36]
[10, 33, 32]
</code></pre>
<p>You can also use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split()</code></a>:</p>
<pre><code>from re import split

with open('data.txt') as file:
    for line in file:
        print(list(map(int, split('-&gt;|:', line.strip()))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Additionally to @blhsing's answer, you can use <code>[0-9]</code> too:</p>
<pre><code>cleandata = re.findall(r"[0-9]", data[i]) 
</code></pre>
<p>If care about them as strings:</p>
<pre><code>print(list(map(int,cleandata)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assume that the variable data that you get is a list of string:</p>
<pre><code>data = ["6-&gt;26:32","10-&gt;39:30","26-&gt;28:24","3-&gt;16:19","10-&gt;35:35","10-&gt;37:19","10-&gt;31:36","10-&gt;33:32"]
</code></pre>
<p>If all entries are positive integers, this code may help:</p>
<pre><code>for line in data:
    entries =re.split("[^0-9]+",line)
    print(entries)
</code></pre>
<p>[^0-9]+ is regex pattern that matches all non-digit characters. Using re.split helps us remove "-&gt;" and ":". The output that I get is:</p>
<pre><code>['6', '26', '32']
['10', '39', '30']
... etc
</code></pre>
</div>
<span class="comment-copy">This works great, thank you!</span>
