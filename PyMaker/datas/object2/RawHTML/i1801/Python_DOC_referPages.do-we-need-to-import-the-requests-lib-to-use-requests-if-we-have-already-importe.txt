<div class="post-text" itemprop="text">
<p>I need to use 'requests' and a function from <code>urllib3</code>. In the code<br/>
<a href="https://i.stack.imgur.com/HUEXk.png" rel="nofollow noreferrer"><img alt="code importing requests and printing dir(urllib3)" src="https://i.stack.imgur.com/HUEXk.png"/></a><br/>
you can see the <code>requests</code> library is being imported, but at the same time it is a module/package inside <code>urllib3</code>, which has already been imported too. </p>
<p>Doing some research I've found that Python comes with the <code>urllib</code> package, that comes with the <code>request</code> module. On the other hand, <code>requests</code> is a module inside <code>urllib3</code>, but it is a library on its own.</p>
<p><code>urllib</code> and <code>urllib2</code> are standard Python librares, but <code>urllib3</code> is a completely separated library with a confusing name. A portion of it has been included in the standard library and <code>requests</code> depends on it, but it is not a newer version of <code>urllib</code>/<code>urllib2</code>; the library that actually wants to improve is <code>httplib</code> (ref: <a href="https://github.com/urllib3/urllib3/issues/1065" rel="nofollow noreferrer">Github</a>). <blockquote>"Under the hood, <em>requests</em> uses <em>urllib3</em> to do most of the http heavy lifting. When used properly, it should be mostly the same unless you need more advanced configuration" </blockquote> (ref: <a href="https://stackoverflow.com/questions/36937110/what-is-the-practical-difference-between-these-two-ways-of-making-web-connection">Stackexchange</a>):</p>
<p>I got to these conclusions but I'm still confused: if I have already imported <code>urllib</code>, do I still need to import <code>requests</code>? What if I had imported <code>urllib3</code>?  </p>
<p>Also, should <code>requests</code> be imported separately, as in the depicted code, or should it be import imported from one of the mentioned libraries?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using the <code>requests</code> module, then that's the only thing you need to import. The rest is taken care of for you by Python. That <code>urllib3</code> is used by <code>requests</code> is an <em>implementation detail</em>, unless you need to access specific objects defined by the <code>urllib3</code> library you don't need to import that into your codebase.</p>
<p><code>requests</code> is <strong>not</strong> a module inside <code>urllib3</code>. The <code>urllib3</code> module defines a <code>urllib3.request</code> (singular!) module, which is something completely different from the <code>requests</code> package:</p>
<pre><code>&gt;&gt;&gt; import urllib3
&gt;&gt;&gt; import requests
&gt;&gt;&gt; urllib3.request
&lt;module 'urllib3.request' from '/Users/mj/Development/venvs/stackoverflow-latest/lib/python3.7/site-packages/urllib3/request.py'&gt;
&gt;&gt;&gt; requests
&lt;module 'requests' from '/Users/mj/Development/venvs/stackoverflow-latest/lib/python3.7/site-packages/requests/__init__.py'&gt;
&gt;&gt;&gt; requests is urllib3.request
False
</code></pre>
<p>Note that <code>urllib3.request</code> is a module inside the <code>urllib3</code> package <em>namespace</em>. <code>import request</code> (no <code>s</code>) would not import it, as that requests a top-level name. Neither would <code>import somethingelse.request</code>, as that would be a different namespace from <code>urllib3</code>. And just because the names <code>requests</code> and <code>request</code> are similar does not mean that they are the same thing. The HTTP standard deals with the abstract concept of a <em>request</em> sent to a server and the server giving back a <em>response</em>, so names in different projects dealing with HTTP will often reflect the concepts that they represent in code.</p>
<p>The same applies to the names <code>urllib</code> and <code>urllib2</code>. Python, once upon a time, started with a <code>urllib</code> package that was limited, and later on a <code>urllib2</code> package was added to that extended the first and added more functionality. Python 3 consolidated the two packages and reorganised the functionality into a <a href="https://docs.python.org/3/library/urllib.html" rel="nofollow noreferrer">series of new modules under the <code>urllib</code> namespace</a>. The <code>urllib3</code> package is an <a href="https://urllib3.readthedocs.io/en/latest/" rel="nofollow noreferrer"><em>independent</em> project</a> to build a better library for the same functionality. No parts of that project are incorporated into the Python standard library.</p>
<p><code>requests</code> is an project that gives you a clean, straightforward, easy to use API to make HTTP requests and handle the resulting responses. Use it for that API, don't worry about the implementation details.</p>
</div>
<span class="comment-copy"><code>urllib3</code> is an independent project; no portions of it have been included in the standard library. <code>requests</code> is an independent project that builds on top of <code>urllib3</code>. If you are using <code>requests</code>, you need to import <code>requests</code>. How it implements its functionality should not really be of significance to you, the user of the <code>requests</code> API.</span>
<span class="comment-copy">@Martec: It is possible to use it, but <i>you don't need to or need to worry about it</i>. It's a different, more advanced and so more complicated API to handle HTTP requests. The <code>requests</code> project <i>wraps</i> <code>urllib3</code> to give you a simpler API.</span>
<span class="comment-copy">@Martec you have it backwards. <code>requests</code> uses <code>urllib3</code>: not the other way around. So you can't use <code>requests</code> from <code>urllib3</code>: and you'd not want to do that even if it <i>did</i> use <code>requests</code>. Python is not like C/C++ where there is some translation unit and includes are more or less global, it's just not how the import statement works in Python. If you want to use <i>anything</i> in <code>requests</code>, then import <code>requests</code>. Otherwise don't. You can import it many times in multiple modules, or once in a single module, or not at all: it doesn't matter.</span>
<span class="comment-copy">@Martec <code>requests</code> is <i>not</i> listed from <code>dir(urllib3)</code>. Some name called <code>request</code> is, though (no s on the end). Read Martjin's answer, it's enlightening in this regard</span>
<span class="comment-copy">@Martec yep, you've got it right, that's what the <code>dir</code> function does. I think you're confusion might be stemming around how importing works, not <code>dir</code>.</span>
<span class="comment-copy">Awesome, thanks. I actually didn't realize it was singular in <code>urllib3</code>. Also, more than worrying about implementation it was that I also had to import the urlllib3 for a <code>urllib3.connection_from_url(url)</code> instruction that now I'm finding it is probably unneeded, and thought my code would duplicate instructions or sth...</span>
