<div class="post-text" itemprop="text">
<p>I have a list <code>l=[2,3,4,5,6,99,7,8,9,10,11,12,100,13,14,15,16,17,18,101]</code> and I will like to split <code>l</code> into sublists <code>[2,3,4,5,6], [7,8,9,10,11,12],[13,14,15,16,17,18]</code>, meaning that I use 'separator' digits 99,100,101 that belong to <code>separators = [99,100,101]</code> as a flag to indicate where I should go on to the next list. </p>
<p>In particular, these sublists may not have the same number of elements, but are different in size of only 1 (5 or 6). Note: There may be more than 3 separators.</p>
<p>Is there an efficient way to do this in Python 3? I thought of first extracting the indices of the separator elements and then slice the list accordingly but it seems far too complex and computationally intensive..</p>
<p>Some insight will be great!</p>
<p>Add on (suggestion from @Netwave): My attempt (which clearly does not work):</p>
<pre><code>g = []
for i in l:
    if i in separators:
        g += [l[:l.index(i)]]
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; g
[[2, 3, 4, 5, 6], [2, 3, 4, 5, 6, 99, 7, 8, 9, 10, 11, 12], [2, 3, 4, 5, 6, 99, 7, 8, 9, 10, 11, 12, 100, 13, 14, 15, 16, 17, 18]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">groupby</a>:</p>
<pre><code>from itertools import groupby

separators = [99, 100, 101]
l = [2, 3, 4, 5, 6, 99, 7, 8, 9, 10, 11, 12, 100, 13, 14, 15, 16, 17, 18, 101]

splits = [list(values) for key, values in groupby(l, key=lambda x: x not in separators) if key]

print(splits)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[[2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I hope you are looking for something similar to the below code. You need to iterate over your list and keep checking if the element is present in the separator list. This can be done other way around, as you said by iterating over the separator list and finding the index of the elements in the main list. For the sake of simplicity I took the former approach. (Make a note of the use of endindex variable):</p>
<pre><code>l=[2,3,4,5,6,99,7,8,9,10,11,12,100,13,14,15,16,17,18,101]
seperator = [99,100,101]

list_of_list = []
endindex = 0
for i in range(0,len(l),1):
    if l[i] in seperator:
        list_of_list.append(l[endindex:i])
        endindex = i + 1

print(list_of_list)
</code></pre>
<p>Ouput:</p>
<pre><code>[[2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Easier for use in a function:</p>
<pre><code>import itertools
def split(l,l2):
    return [list(v) for k,v in itertools.groupby(l,lambda x: x in l2) if not k]
l = [2, 3, 4, 5, 6, 99, 7, 8, 9, 10, 11, 12, 100, 13, 14, 15, 16, 17, 18, 101]
print(split(l,[99, 100, 101]))
</code></pre>
<p>Output:</p>
<pre><code>[[2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]]
</code></pre>
<p>Realized a duplicate of <a href="https://stackoverflow.com/questions/4322705/split-a-list-into-nested-lists-on-a-value">Split a list into nested lists on a value</a></p>
</div>
<span class="comment-copy">What did you try already? It is always easier to answer with an example code.</span>
<span class="comment-copy">Are there always those 3 separators??</span>
<span class="comment-copy">@Netwave Thank for your suggestion, I have added my attempt thus far, which doesn't work for obvious reasons due to the slicing :(</span>
<span class="comment-copy">@EoinS No, there may be more. I'll update my question accordingly. Thanks!</span>
<span class="comment-copy">Thanks for your clear and easy to follow solution! It works on my end just fine :)</span>
<span class="comment-copy">Thanks for your answer! I have chosen to accept another answer as it is probably less computationally expensive, but yours grants insight on a more fundamental level, which I really appreciate! :)</span>
<span class="comment-copy">You are most welcome. Helping others is the main motive :)</span>
<span class="comment-copy">I took your second approach but it may not work if the separators do not occur in the same order in both lists. Your solution iterating over <code>l</code> does not have that problem. The separator values do not have to be in the order that they occur in list <code>l</code></span>
<span class="comment-copy">Thanks for the notification. I did chance upon that similar question but I wasn't able to interpret it on my end.. :( Nevertheless, thanks for your insightful answer! Will be accepting @Daniel Mesejo's answer as he answered slightly earlier</span>
