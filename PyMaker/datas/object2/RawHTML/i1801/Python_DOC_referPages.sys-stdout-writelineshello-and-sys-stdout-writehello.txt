<div class="post-text" itemprop="text">
<p>What is the difference between the following two commands?</p>
<pre><code>In [57]: sys.stdout.writelines("hello")                                                                           
hello
In [58]: sys.stdout.write("hello")                                                                                
Out[58]: hello5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/io.html#io.IOBase.writelines" rel="nofollow noreferrer"><code>sys.stdout.writelines</code></a> accepts an iterable of strings and writes them to <code>stdout</code> one string at a time. Since it does not append newline characters, elements of the iterable will appear to be concatenated if they don't already contain newlines. The return value is <code>None</code>.</p>
<p><a href="https://docs.python.org/3/library/io.html#io.TextIOBase.write" rel="nofollow noreferrer"><code>sys.stdout.write</code></a> accepts a single string, and writes it to <code>stdout</code>. It returns the number of characters written.</p>
<p>The first example (<code>writelines</code>) works because a string is an iterable of strings. Each character in the input is written separately. Notice that there is no <code>Out[57]</code> because the return value is <code>None</code>, but the characters are all printed. They are written individually, but you can't tell because they don't have newlines between them.</p>
<p>The second example (<code>write</code>) prints the whole string all at once. Since <code>write</code> doesn't append newline characters either, the return value (<code>5</code>) is printed immediately after. <code>Out[58]</code> is printed because there is a non-<code>None</code> return value in this case.</p>
<p>In general, <code>writelines</code> was meant to mimic/invert <a href="https://docs.python.org/3/library/io.html#io.IOBase.readlines" rel="nofollow noreferrer"><code>readlines</code></a>, so normally you could see the difference much better. You would normally call <code>writelines</code> with a list or similar iterable, but <code>write</code> only accepts a single string (and returns a value):</p>
<pre><code>&gt;&gt;&gt; sys.stdout.writelines(['hello\n', 'world\n'])
hello
world

&gt;&gt;&gt; sys.stdout.write('hello\n world\n')
hello
world
5
</code></pre>
<p>Barring the return value, for a single string, the result of <code>writelines</code> and <code>write</code> are indistinguishable. <code>writelines</code> is much less efficient though, since it effectively applies <code>write</code> to each character individually.</p>
</div>
<span class="comment-copy">A useful Google search phrase might be <code>python 3.6 stdout.writelines</code>, which might turn up <a href="https://docs.python.org/3/library/io.html?highlight=stdout%20writelines" rel="nofollow noreferrer">this page at Python.org</a></span>
