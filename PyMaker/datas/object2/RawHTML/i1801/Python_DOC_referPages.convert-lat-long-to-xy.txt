<div class="post-text" itemprop="text">
<p>I want to convert lat/long to XY coordinates. I picked up this equation but can't get the desired output:</p>
<pre><code>x = r λ cos(φ0)
y = r φ
</code></pre>
<p>The measurements of the two points are:</p>
<pre><code>point1 = (-37.8206195, 144.9837765)
point2 = (-37.8193712, 144.9837765) 
</code></pre>
<p>Attempt:</p>
<pre><code>import math

avg = (-37.8206195 + -37.8193712)/2
rad_avg = math.pi / 180

point1 = (-37.8206195, 144.9837765)
point2 = (-37.8193712, 144.9837765) 

dist = rad_avg * math.cos(avg)

print(dist)
</code></pre>
<p>Out:</p>
<pre><code>0.01732592680044846
</code></pre>
<p>The output should be around 160m</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all <a href="https://docs.python.org/3/library/math.html#math.cos" rel="noreferrer">math.cos</a> expects angle argument in radians. To convert from degrees to radians you need to do:</p>
<pre><code>rad_avg = avg * math.pi / 180
</code></pre>
<p>Or even:</p>
<pre><code>math.radians(&lt;angle_in_degrees&gt;)
</code></pre>
<p>Basically it means you're mapping 180º with <code>pi</code> and taking the portion for your angle.</p>
<p>I assume then that you want to compute distance between both points by converting it first to "xy" coordinates (according to your <a href="https://stackoverflow.com/questions/16266809/convert-from-latitude-longitude-to-x-y">reference</a>).</p>
<p>You need to get first both points in the same coordinate system. As the link states, for small areas, they can be estimated by:</p>
<ul>
<li>x = r λ cos(φ0)</li>
<li>y = r φ</li>
</ul>
<p>So you need to do:</p>
<pre><code>import math

point1 = (-37.8206195, 144.9837765) # Lat/Long (lambda/phi)
point2 = (-37.8193712, 144.9837765) # Lat/Long (lambda/phi)

r = 6371000 # meters
phi_0 = point1[1]
cos_phi_0 = math.cos(math.radians(phi_0))

def to_xy(point, r, cos_phi_0):
    lam = point[0]
    phi = point[1]
    return (r * math.radians(lam) * cos_phi_0, r * math.radians(phi))

point1_xy = to_xy(point1, r, cos_phi_0)
point2_xy = to_xy(point2, r, cos_phi_0)
</code></pre>
<p>Finally, to compute distance in cartesian coordinates you need to use the <a href="http://mathsfirst.massey.ac.nz/Algebra/PythagorasTheorem/pythapp.htm" rel="noreferrer">Pitagoras Theorem</a> <code>d = sqrt(delta_x^2 + delta_y^2)</code></p>
<p>In your example:</p>
<pre><code>dist = math.sqrt((point1_xy[0] - point2_xy[0])**2 + (point1_xy[1] - point2_xy[1])**2)
</code></pre>
<p>Which results: <code>113.67954606562853</code>. Closer to what you're looking for.</p>
<p>Plus, there's a shortcut to get it right to the distance formula: </p>
<ul>
<li><code>d = r * sqrt(x² + y²)</code> where <code>x = (λ2 - λ1) * math.cos(φ0)</code> and <code>y = (φ2 - φ1)</code></li>
</ul>
</div>
<span class="comment-copy">Are you aware of the difference between degrees and radians, and that the Python functions expect radians but latitude and longitude are in degrees?</span>
<span class="comment-copy">@JohnColeman, so you're saying the functions aren't consistent</span>
<span class="comment-copy">As @JohnColeman says, <a href="https://docs.python.org/3/library/math.html#math.cos" rel="nofollow noreferrer">math.cos</a> expects angles in radians. Do: <code>r_avg = avg * math.pi / 180</code></span>
<span class="comment-copy">The functions are perfectly consistent, but they have to be used with input in the units that they expect, which are not the same units as used in latitude and longitude.</span>
<span class="comment-copy">@Cheche, Thankyou. Do you want to put it in the form of an answer so I can accept it?</span>
<span class="comment-copy">I've updated the equation in the question but am getting the wrong answer. Have I got it right?</span>
<span class="comment-copy">The point is that your lat/long coordinates are basically angles. Each point consists in two angles: lat and long. Then, any trigonometric function you use <code>as is</code> requires radian angles. Then you need to convert both values to radians.</span>
<span class="comment-copy">@JeremyAlexander I've added some extra detail on my answer. Let me know if it helps you now. Are you trying to measure a cricket ground size?</span>
<span class="comment-copy">Thanks for this. Yeh, it's essentially the size of a cricket oval. So I know roughly one end to the other should be approx 160m. Maybe a bit more.</span>
