<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/252703/difference-between-append-vs-extend-list-methods-in-python">Difference between append vs. extend list methods in Python</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2347265/why-does-behave-unexpectedly-on-lists">Why does += behave unexpectedly on lists?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>For Python list, is <code>append()</code> the same as <code>+=</code>?
I know that <code>+</code> will lead to the creation of a new list, while <code>append()</code> just append new stuff to the old list.
But will <code>+=</code> be optimized to be more similar to <code>append()</code>? since they do the same thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's an <code>__iadd__</code> operator. <a href="https://docs.python.org/3/reference/datamodel.html#object.__iadd__" rel="nofollow noreferrer">Docs.</a></p>
<p>Importantly, this means that it only <em>tries</em> to append. "For instance, if x is an instance of a class with an <code>__iadd__()</code> method, <code>x += y</code> is equivalent to <code>x = x.__iadd__(y)</code> . Otherwise, <code>x.__add__(y)</code> and <code>y.__radd__(x)</code> are considered, as with the evaluation of <code>x + y</code>."</p>
<p><a href="https://stackoverflow.com/questions/9766387/different-behaviour-for-list-iadd-and-list-add">This thread specifically deals with lists and their iadd behavior</a></p>
</div>
<span class="comment-copy">They don't do the same thing. <code>+=</code> concatenates, is more like <code>extend()</code> rather than <code>append()</code>.</span>
<span class="comment-copy">they are not the same, see duplicates for details.</span>
<span class="comment-copy">the <code>+=</code> operator acts <i>in-place</i> on the left-hand operand. The <code>+</code> operator creates a <i>new list</i> from both operands, and neither is modified in place. <code>.append</code> accepts a <i>single element</i> which it appends to the end of the list. So, <code>+=</code> acts like <code>.extend</code> (and probably calls the same function under the hood)</span>
