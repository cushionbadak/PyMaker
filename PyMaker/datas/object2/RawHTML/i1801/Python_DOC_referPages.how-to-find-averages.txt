<div class="post-text" itemprop="text">
<p>I'm trying to make a program to find the Mean average with a set of numbers. It works at the moment but I was wondering if there is any way to make it easier or cleaner. It is pretty messy and bad. Is there anyway I can use loops or anything to make it easier?</p>
<pre><code>NON = raw_input("How many numbers are there? ")
NON = int(NON)

if NON == 2:
    n1 = raw_input("First Number: ")
    n1 = int(n1)
    n2 = raw_input("Second Number: ")
    n2 = int(n2)
    mean = (n1 + n2)/2
    print mean
    print mean
</code></pre>
<p>It keeps going after this, all the way up to 15. I just made it manually.</p>
</div>
<div class="post-text" itemprop="text">
<p>A common way of handling this is with a <code>for()</code> loop</p>
<pre><code>NON = raw_input("How many numbers are there? ")
NON = int(NON)
sum = 0
for i in range(NON):
    number = raw_input("Enter Number #"+str(i)+": ")
    number = int(number)
    sum += number
average = sum / NON
print("Average is: "+str(average))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just write it so that the user can just indefinitely input numbers:</p>
<pre><code>numbers = []
while True:
    numbers.append(int(raw_input("What is the next number?")))
    done = raw_input("Are you done? (Y/N) ")
    if done.lower() == "y":
        break
print("The average is {}".format(sum(numbers)/len(numbers)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try a function. Function will group the codes and can be used to call multiple of times. </p>
<p>An example</p>
<pre><code>def average(number1, number2):
    return (int(number1) + int(number2)) / 2


NON = raw_input("How many numbers are there? ")
NON = int(NON)

    if NON == 2:
        n1 = raw_input("First Number: ")
        n2 = raw_input("Second Number: ")
        print average(n1,n2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try to store the user's input in an array then perform the following:</p>
<pre><code>sum = 0
list = [11,22,33,44,55,66,77]
for num in list:
    sum = sum +num
average  = sum / len(list)
print ("Average of list element is ", average )
</code></pre>
</div>
<span class="comment-copy">Welcome to StackOverflow! We are not a code reviewing service. If you don't have a problem you can ask your question over here â†’ <a href="https://codereview.stackexchange.com">codereview.stackexchange.com</a></span>
<span class="comment-copy">You seem to know what loops are, perhaps doing a quick Google search will help? We aren't here to write code for you, you know...<a href="https://docs.python.org/3/" rel="nofollow noreferrer">docs.python.org/3</a></span>
<span class="comment-copy">Easier in what sense? Shorter? Your code could be done in fewer lines by combining some operations that are now being done in multiple lines, but everything your code does must get done in order to get the right answer.</span>
<span class="comment-copy">most elegant solution here, but there is a small typo with the <code>format</code> and <code>append</code> parenthesis</span>
<span class="comment-copy">Thank you. "Are you done? (Y/N)" didn't feel elegant when I wrote it anyhow.</span>
<span class="comment-copy">ok yes, maybe a <code>for</code> loop would be a better idea :x</span>
<span class="comment-copy">You still need a user input to break the loop in that case, or the script won't support an indefinite number of inputs</span>
<span class="comment-copy">Take a look at Kingsleys answer; actually a better approach, but didn't look so appealing at first glance :D</span>
<span class="comment-copy">Except the function you wrote doesn't compose to averaging larger numbers of values...</span>
<span class="comment-copy">@ShadowRanger Thanks for pointing it out. Didn't really understand the question. thought he only wants to make it cleaner and easier.  He's asking for 'sets' and everyone is giving him a 'list'. Sets doesnt allow repeat while list does.</span>
