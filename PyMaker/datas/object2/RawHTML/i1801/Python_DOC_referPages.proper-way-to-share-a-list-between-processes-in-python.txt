<div class="post-text" itemprop="text">
<p><strong>Question</strong></p>
<p>I wanted to set up two subprocesses in which subprocess1 keeps generating data(in type of 'list'),and the subprocess2 is in charge of processing the data sent from subprocess1.</p>
<p>I used multiprocessing.Manager().list() to create a shared list.But this is the error it reports:</p>
<blockquote>
<p>FileNotFoundError: [WinError 2]</p>
</blockquote>
<p><strong>Code</strong></p>
<p>I simplified the code as below:
ps: need to run it in terminal.</p>
<pre><code>import multiprocessing as mp
import random
import time

def generator(a,b,tick):#simulating data collection,and a list will be generated at random and passed to another shared list.
    counter=0
    while True:
        time.sleep(1)
        a.append([random.uniform(1,5),random.uniform(1,5),random.uniform(1,5),random.uniform(1,5)])
        counter+=1
        print('generate says',a[:])
        if counter%5==0:
            b.append(a[:])
            tick.value=1#Telling 'printer' func to print.
            for _ in a:
                a.remove(_)

def printer(b,tick):#simulating data processing, and only printing data received from the 'generator' func here.
    while True:
        time.sleep(1)
        if tick.value==1:
            time.sleep(1)
            print('printer says',b[:])
            tick.value=0 
            for _ in b:
                b.remove(_)

if __name__=='__main__':
    tick=mp.Value('i',0)
    a=mp.Manager().list()
    b=mp.Manager().list()
    p1=mp.Process(target=generator,args=(a,b,tick))
    p2=mp.Process(target=printer,args=(b,tick))
    p1.start()
    p2.start()
</code></pre>
<p><strong>Error</strong></p>
<pre><code>Traceback (most recent call last):
  File "d:\miniconda\lib\multiprocessing\process.py", line 297, in _bootstrap
    self.run()
  File "d:\miniconda\lib\multiprocessing\process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "D:\Program Files (x86)\onedrive\nilm\pi\redd\niubi.py", line 9, in generater
    a.append([random.uniform(1,5),random.uniform(1,5),random.uniform(1,5),random.uniform(1,5)])
  File "&lt;string&gt;", line 2, in append
  File "d:\miniconda\lib\multiprocessing\managers.py", line 792, in _callmethod
    self._connect()
  File "d:\miniconda\lib\multiprocessing\managers.py", line 779, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
  File "d:\miniconda\lib\multiprocessing\connection.py", line 490, in Client
    c = PipeClient(address)
  File "d:\miniconda\lib\multiprocessing\connection.py", line 691, in PipeClient
    _winapi.WaitNamedPipe(address, 1000)
FileNotFoundError: [WinError 2] The system cannot find the file specified.
</code></pre>
<p>Thanks for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>There were a few things to fix, but the primary issue is that you should include <code>Process.join</code>, as seen below:</p>
<pre><code>import multiprocessing as mp
import random
import time

...  # generator and printer definitions are unchanged

if __name__=='__main__':
    manager = mp.Manager()  # Create an instance of the manager
    a = manager.list()
    b = manager.list()
    tick = mp.Value('i', 0)
    p1 = mp.Process(target=generator, args=(tick, a, b))
    p2 = mp.Process(target=printer, args=(tick, b))
    p1.start()
    p2.start()
    p1.join()  # Join, to ensure p1 and p2 end
    p2.join()
</code></pre>
</div>
<span class="comment-copy">Possible duplicate: <a href="https://stackoverflow.com/questions/40630428/share-a-list-between-different-processes-in-python#40682175">Share a list between different processes in python</a></span>
<span class="comment-copy">Using Queue, the example at the bottom of <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue" rel="nofollow noreferrer">the documentation</a> may prove useful.</span>
<span class="comment-copy">Thanks for your quick reply, I tried your code but it still reports the error like I posted in the question. It seems the subprocess1 could not find the shared list as the shared list is being appended to.</span>
<span class="comment-copy">Here it is. <a href="https://textuploader.com/dw84v" rel="nofollow noreferrer">textuploader.com/dw84v</a>  .Thanks for your patience..I'm a pure starter for python.</span>
<span class="comment-copy">okay,i'll try pool.TY.</span>
<span class="comment-copy">I've made some major updates - ignore my earlier comments about using pool, it's not needed!</span>
<span class="comment-copy">It worked!! I read in the books that .join() would wait for the target process to finish and continue to execute the remnant subprocesses.. Since I used a loop in the first process, i thought it would never end.. But Obviously i misunderstood the whole thing.. Much obliged! Thanks for offering your patience!</span>
