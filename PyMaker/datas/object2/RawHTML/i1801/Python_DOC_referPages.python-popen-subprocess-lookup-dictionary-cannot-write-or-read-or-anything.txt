<div class="post-text" itemprop="text">
<p>so I'm putting together this discord bot which executes commands to a server to host some games. </p>
<p>I have a dictionary in the form { 'Game Name' : subprocess.Popen() }</p>
<pre><code>subprocess_LOOKUP = {}
</code></pre>
<p>we need to store to later inject commands for changing game modes and such on the fly.</p>
<p>I have simplified the code to two small functions to show the issues clearly.</p>
<pre><code>import subprocess
from subprocess import PIPE, STDOUT

subprocess_LOOKUP = {}

def gamestart(game, startcmd):

    #Open pipe with all parameters to read, write and communicate
    p = subprocess.Popen(startcmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=PIPE, shell=True)

    subprocess_LOOKUP.update({ game : p }) #Store into dictionary here


def gameinput(game, cmd):

    p = subprocess_LOOKUP[game]     #Retrieve from dictionary

    print(cmd)                      #Prints the command I want to input into the shell
    print(p.stdout.readline())      #Does Nothing (prints no errors)

    p.stdin.write(str.encode(cmd))  #Does Nothing (prints no errors)
    p.communicate()[0]              #Does Nothing (prints no errors)
    p.stdin.close()                 #Does Nothing (prints no errors)
</code></pre>
<p>Later on when I access the dictionary, the reference to the subprocess.Popen() appears to not be there? Trying to write, read or communicate with the process does nothing as does not print any errors either!</p>
<p>I have tried many ways to write or read from stdin or stdout respectively by looking at other similar questions here, and yet still nothing happens. Have I missed something entirely or is there something I need to do?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are under the impression that the global variable is shared among processes. <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow noreferrer">It is not</a>. Your options are:</p>
<ol>
<li>Use either <code>multiprocessing.Array</code> or <code>multiprocessing.Value</code> to share state.</li>
<li>Use <code>multiprocessing.Manager</code>.</li>
<li>Use some kind of IPC.</li>
</ol>
<p>Manager seems to be better suited for your problem because it allows you to use dictionaries.</p>
</div>
<span class="comment-copy">just tried with p = subprocess_LOOKUP.get(game) still didn't work.</span>
<span class="comment-copy">Completely overlooked that, damn, Thank you very much! And for suggesting which one you think, thanks :)</span>
<span class="comment-copy">I would use multiprocessing.Manager, unless performance is somehow an issue (it creates another process, so, you know, resources and stuff)</span>
