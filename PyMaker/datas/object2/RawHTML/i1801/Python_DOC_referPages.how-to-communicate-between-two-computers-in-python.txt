<div class="post-text" itemprop="text">
<p>I am attempting to make a python a "buzzer" application which will function like the buzzers in jeopardy. It will (hopefully) work by linking several computers to a main computer. When a user taps the screen of their computer, if they are the first, it will change the color of their screen and alert the main computer. Now for my question: when module would be best to like together these two computer. I would need to send the name of the computer and a timestamp and the main computer would need to respond. I was reading that something like <em>socket</em> might work, but i am unsure. Also, could you please give me a link to documentation on whatever module you suggest. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You mentioned <code>socket</code> in your question.</p>
<p><a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">https://docs.python.org/3/library/socket.html</a></p>
<p>This might be appropriate for your needs, however with multiple clients it can get quite complicated. </p>
<p>Also, you may want to try using email for easier connections (if you don't mind the send time of a few seconds). I know it sounds stupid, but it has worked for me in the past, with significantly less difficulty than a multi-threaded socket connection.</p>
<p><a href="https://docs.python.org/3/library/email.html" rel="nofollow noreferrer">https://docs.python.org/3/library/email.html</a></p>
<p><a href="https://docs.python.org/3/library/smtplib.html" rel="nofollow noreferrer">https://docs.python.org/3/library/smtplib.html</a></p>
</div>
<span class="comment-copy">Welcome to SO! While SO is for helping those need, it requires some conformity to help you with ease. Please have a read and post your issue here. <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a>. We would be happy to help you.</span>
<span class="comment-copy">Email probably isn't an ideal solution in this case, due to the time sensitive nature of a 'buzzer' program.</span>
<span class="comment-copy">I chose to use sockets, and now the functionality of my program works perfectly. (I still need to work on the front end).</span>
<span class="comment-copy">Eventually, I ended up using pyBluez so it could work independently of WiFi.</span>
