<div class="post-text" itemprop="text">
<p>I know that Python's short-circuiting behavior works with functions. Is there any reason it wouldn't work when two functions are baked together into one? I.e., why does this short-circuit,</p>
<pre><code>&gt;&gt;&gt; menu = ['spam']
&gt;&gt;&gt; def test_a(x):
...     return x[0] == 'eggs'  # False.
...
&gt;&gt;&gt; def test_b(x):
...     return x[1] == 'eggs'  # Raises IndexError.
...
&gt;&gt;&gt; test_a(menu) and test_b(menu)
False
</code></pre>
<p>whereas this doesn't?</p>
<pre><code>&gt;&gt;&gt; condition = test_a and test_b
&gt;&gt;&gt; condition(menu)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 2, in test_b
IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What actually happens here</p>
<pre><code>&gt;&gt;&gt; condition = test_a and test_b
</code></pre>
<p>is the <a href="https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer">evaluation of a Boolean expression</a>:</p>
<blockquote>
<p><code>x and y</code>: if x is false, then x, else y</p>
</blockquote>
<p>Since the <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">truth value</a> of both these functions is <code>True</code>, <code>condition</code> is set to <code>test_b</code>.</p>
<p>To combine the two functions, just do</p>
<pre><code>&gt;&gt;&gt; def condition(x):
...     return test_a(x) and test_b(x)
...
</code></pre>
</div>
