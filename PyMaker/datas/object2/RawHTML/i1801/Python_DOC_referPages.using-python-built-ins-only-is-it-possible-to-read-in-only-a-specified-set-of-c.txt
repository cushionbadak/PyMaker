<div class="post-text" itemprop="text">
<p>I have the header name of a column from a series of massive csv files with 50+ fields. Across the files, the index of the column I need is not always the same. </p>
<p>I have written code that finds the index number of the column in each file. Now I'd like to add only this column as the key in a dictionary where the value counts the number of unique strings in this column.</p>
<p>Because these csv files are massive and I'm trying to use best-practices for efficient data engineering, I'm looking for a solution that uses minimal memory. Every solution I find for writing a csv to a dictionary involves writing all of the data in the csv to the dictionary and I don't think this is necessary. It seems that the best solution involves only reading in the data from this one column and adding this column to the dictionary key.</p>
<p>So, let's take this as sample data:</p>
<pre><code>FOODS;CALS
"PIZZA";600
"PIZZA";600
"BURGERS";500
"PIZZA";600
"PASTA";400
"PIZZA";600
"SALAD";100
"CHICKEN WINGS";300
"PIZZA";600
"PIZZA";600
</code></pre>
<p>The result I want:</p>
<pre><code>food_dict = {'PIZZA': 6, 'PASTA': 1, 'BURGERS': 1, 'SALAD': 1, 'CHICKEN WINGS': 1}
</code></pre>
<p>Now let's say that I want the data from only the FOODS column and in this case, I have set the index value as the variable food_index.</p>
<p>Here's what I have tried, the problem being that the columns are not always in the same index location across the different files, so this solution won't work:</p>
<pre><code>from itertools import islice


with open(input_data_txt, "r") as file:
    # This enables skipping the header line.
    skipped = islice(file, 1, None)
    for i, line in enumerate(skipped, 2):

        try:
            food, cals = line.split(";")

        except ValueError:
            pass

food_dict = {}

if food not in food_dict:
    food_dict[food] = 1

else:
    food_dict[food] += 1
</code></pre>
<p>This solution works for only this sample -- but only if I know the location of the columns ahead of time -- and again, a reminder that I have upwards of 50 columns and the index position of the column I need is different across files.</p>
<p>Is it possible to do this? Again, built-ins only -- no Pandas or Numpy or other such packages.</p>
</div>
<div class="post-text" itemprop="text">
<p>The important part here is that you do <em>not</em> skip the header line!  You need to <code>split</code> that line and find the indices of the columns you need!  Since you know the column headers for the information you need, put those into a reference list:</p>
<pre><code>wanted_headers = ["FOODS", "RECYCLING"]

with open(input_data_txt, "r") as infile:
    header = infile.read().split(';')
    wanted_cols = [header.index(label) for label in wanted_headers if label in header]
    # wanted_cols is now a list of column numbers you want

    for line in infile.readlines():    # Iterate through remaining file
        fields = line.split(';')
        data = [fields[col] for col in wanted_cols]
</code></pre>
<p>You now have the data in the same order as your existing headers; you can match it up or rearrange as needed.</p>
<p>Does that solve your blocking point?  I've left plenty of implementation for you ...</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><strong><code>Counter</code></strong></a> and <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><strong><code>csv</code></strong></a>:</p>
<pre><code>from collections import Counter
import csv

with open(filename) as f:
    reader = csv.reader(f)
    next(reader, None)  # skips header
    histogram = Counter(line[0] for line in reader)
</code></pre>
</div>
<span class="comment-copy">Thanks, but this does not solve my blocking point. As I wrote in my original question, I already have written code that finds the column value of my columns from the header name. What I'm looking for help on is the next step: adding the csv data to the dictionary from the csv column value I've identified.</span>
