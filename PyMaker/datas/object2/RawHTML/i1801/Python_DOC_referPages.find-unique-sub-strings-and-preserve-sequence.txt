<div class="post-text" itemprop="text">
<p>I'm trying to write a method that takes a string, for example a DNA string and outputs the number with the sub string and preserves the sequence.</p>
<p>For example:</p>
<pre><code>&gt;&gt;dna = AABBBGGGKKDDDD
&gt;&gt;substring(dna) #some method
&gt;&gt;2A3B3G2K4D
</code></pre>
<p>I'm guessing I can have an empty array, and then create a for loop that iterates through each and every letter and if it's the same letter, it does a count and then adds the letter in the end. I'm just not sure how to syntactically write it out. Any help would be appreciated :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a quick example.</p>
<pre><code>dna = 'AABBBGGGKKDDDD'


def get_sequence(dna):
    sequence = ''
    previous_c = ''
    count = 0
    for c in dna:
        if c == previous_c:
            count += 1
        else:
            if len(previous_c) &gt; 0:
                sequence += '{}{}'.format(count, previous_c)
            count = 1
            previous_c = c
    if count &gt; 0:
        sequence += '{}{}'.format(count, previous_c)
    return sequence


print(get_sequence('A'))
print(get_sequence(''))
print(get_sequence(dna))
</code></pre>
<p>Output:</p>
<pre><code>1A

2A3B3G2K4D
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a> works perfectly for this task:</p>
<pre><code>from itertools import groupby

def get_sequence(dna):
    return ''.join(str(len(tuple(g))) + k for k, g in groupby(dna))

print(get_sequence('AABBBGGGKKDDDD'))
# 2A3B3G2K4D
</code></pre>
</div>
<span class="comment-copy">I would recommend that you give that idea a shot and see where it leads :)</span>
<span class="comment-copy">Thanks! This was exactly what I had in mind, I wasn't thinking of creating a separate variable for the previous character</span>
<span class="comment-copy">Thanks! This is also a good alternative solution!</span>
