<div class="post-text" itemprop="text">
<p>I'm running the same code; the following works in Windows, but will run correctly on Ubuntu (16.04).</p>
<pre><code>import websocket
import json

class WhatEver(object):
    def __init__(self):
        self.ws = websocket.WebSocketApp(
            'wss://beijing.51nebula.com/',
            on_message=self.on_ws_message,
            on_open=self.on_open
        )

    def rin_forever(self):
        print("start run forever")
        self.ws.run_forever()


    def on_ws_message(self, ws,message):
        print (message)
        self.ws.close()

    def _send_msg(self, params):
        call = {"id": 1, "method": "call",
                "params": params}
        self.ws.send(json.dumps(call))

    def on_open(self, ws):
        print("start open function")
        self._send_msg([1, "login", ["",""]])


if __name__ == '__main__':
    ws=WhatEver()
    print("start")
    ws.rin_forever()
    print("close")
</code></pre>
<p>I've tried to reinstalled all modules (including the same version of Python and <code>websocket</code> between both Windows and Ubuntu), the print of this code is correct on the Windows system:</p>
<pre><code>start
start run forever
start open function
{"id":1,"jsonrpc":"2.0","result":true}
close
</code></pre>
<p>But when it run in Ubuntu, while it does print, it misses some print statements:</p>
<pre><code>start
start run forever
close
</code></pre>
<p>When I debug the code in Ubuntu, I found that the main thread stops in the <code>self.ws.run_forever()</code> call and never jumps to the <code>on_open</code> function. Then it breaks out.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using two different versions of the library, with the version on Windows being older than version 0.53. As of version 0.53, the <code>websocket</code> project differentiates callback behaviour between <em>bound methods</em> and <em>regular functions</em>.</p>
<p>You are passing in bound methods (<code>self.on_open</code> and <code>self.on_ws_message</code>), at which point the <code>ws</code> argument is <strong>not passed in</strong>. Those methods are apparently expected to have access to the websocket already via their instance, probably because the expected use-case is to <a href="https://github.com/websocket-client/websocket-client/pull/442/files" rel="nofollow noreferrer">create a subclass from the socket class</a>.</p>
<p>This is unfortunately not documented by the project, and the change <a href="https://github.com/websocket-client/websocket-client/commit/efcf31b30122e05701fb3f696b029baf8faa6d8e#commitcomment-30457750" rel="nofollow noreferrer">appears to have been causing problems for more people</a>.</p>
<p>So for version 0.53 and newer, drop the <code>ws</code> argument from your callbacks:</p>
<pre><code>class WhatEver(object):
    def __init__(self):
        self.ws = websocket.WebSocketApp(
            'wss://beijing.51nebula.com/',
            on_message=self.on_ws_message,
            on_open=self.on_open
        )


    # ...

    def on_ws_message(self, message):
        print(message)
        self.ws.close()

    # ...

    def on_open(self):
        print("start open function")
        self._send_msg([1, "login", ["", ""]])
</code></pre>
<p>And you can discover issues like these by enabling logging; the <code>websocket</code> module logs exceptions it encounters in callbacks to the <code>logger.getLogger('websocket')</code> logger. A quick way to see these issues is to enable tracing:</p>
<pre><code>websocket.enableTrace(True)
</code></pre>
<p>which adds a logging handler just to that logging object, turns on <code>logging.DEBUG</code> level reporting for that object and in addition enables full socket data echoing.</p>
<p>Or you can configure logging to output messages in general with the <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="nofollow noreferrer"><code>logging.basicConfig()</code> function</a>:</p>
<pre><code>import logging

logging.basicConfig()
</code></pre>
<p>which lets you see <code>logging.ERROR</code> level messages and up.</p>
<p>With using the latter option, the uncorrected version of the code prints out:</p>
<pre><code>start
start run forever
ERROR:websocket:error from callback &lt;bound method WhatEver.on_open of &lt;__main__.WhatEver object at 0x1119ec668&gt;&gt;: on_open() missing 1 required positional argument: 'ws'
close
</code></pre>
<p>You can verify the version of <code>websocket-client</code> you have installed by printing <code>websocket.__version__</code>:</p>
<pre><code>&gt;&gt;&gt; import websocket
&gt;&gt;&gt; websocket.__version__
'0.54.0'
</code></pre>
</div>
<span class="comment-copy">Also, what library are you using? <a href="https://pypi.org/project/websocket-client/" rel="nofollow noreferrer"><code>websocket-client</code></a>?</span>
<span class="comment-copy">Thank you! This problem trobule me for a week...Just cause the version of websocket.</span>
