<div class="post-text" itemprop="text">
<p>Suppose I have a dataframe like this</p>
<pre><code>column1   column2
   1        8
   2        9
   20       1 
   4        2
   56
   6
   2
</code></pre>
<p>I want a result like this :</p>
<pre><code>column1   column2   column3
   1        8          1
   2        9          2
   20       1 
   4        2
   56
   6
   2
</code></pre>
<p>So I want a result in the column 3 </p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.intersection" rel="nofollow noreferrer"><code>set.intersection</code></a> with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.loc.html" rel="nofollow noreferrer"><code>pd.DataFrame.loc</code></a>:</p>
<pre><code>L = list(set(df['column1']) &amp; set(df['column2']))
df.loc[np.arange(len(L)), 'column3'] = L

print(df)

   column1  column2  column3
0        1      8.0      1.0
1        2      9.0      2.0
2       20      1.0      NaN
3        4      2.0      NaN
4       56      NaN      NaN
5        6      NaN      NaN
6        2      NaN      NaN
</code></pre>
<p>You should be aware this isn't vectorised and somewhat against the grain with Pandas / NumPy, hence a solution which uses regular Python objects.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>column = [1, 2, 20, 4, 56, 6, 2]
column = [8, 9, 1, 2]
list_1 = []

for item1 in column1:
    for item2 in column2:
        if item1 == item2:
            list_1.append(item1)
        else:
            print("NO MATCH")
z = list(set(list_1))
print(z)
</code></pre>
</div>
<span class="comment-copy">Yes this solution works I am amazed that why did I not got this logic of using set in the code thanks!</span>
<span class="comment-copy">something like this?</span>
<span class="comment-copy">This answer has no relation to <a href="https://stackoverflow.com/questions/tagged/pandas">pandas</a>.</span>
<span class="comment-copy">But it does the job, let's decide him wich answer fits his problem most</span>
