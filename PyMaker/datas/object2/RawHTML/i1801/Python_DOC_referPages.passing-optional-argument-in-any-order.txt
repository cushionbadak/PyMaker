<div class="post-text" itemprop="text">
<p>I am trying to learn some new trick with my python code using *args and **kwargs.
When calling my program, I want to pass or not two optional parameters which can come in any order. Obviously if no argument are given during the call, the variable should get some default value.</p>
<p>in my usual code I would have something like this if i know the exact place of each parameters and that all parameters must be given:</p>
<pre><code>import sys
var1 = 10 if len(sys.argv) == 1 else (sys.argv[1])
debug= False if len(sys.argv) &lt; 3 else (sys.argv[2])
</code></pre>
<p>but this time, since i want to be able to give any of the two parameters and in any order, i am getting stuck at how i should write it.
When doing:</p>
<ul>
<li><code>python mycode.py</code> i want to have <code>var1 = 10</code> and <code>debug=False</code> </li>
<li><code>python mycode.py var1=4.3</code> i want to have <code>var1 = 4.3</code> and <code>debug=False</code> </li>
<li><code>python mycode.py debug='True'</code> i want to have <code>var1 = 10</code> and <code>debug=True</code> </li>
<li><code>python mycode.py var1=-5 debug='True'</code> i want to have <code>var1 = -5</code> and <code>debug=True</code> </li>
<li><code>python mycode.py debug='True' var1=-5</code> i want to have <code>var1 = -5</code> and <code>debug=True</code></li>
</ul>
<p>last thing, is there also a way that user can call using <code>debug=true</code> with all small letter and not triggering an error message?</p>
<p>Thanks in advance for the help</p>
</div>
<div class="post-text" itemprop="text">
<p><code>*args</code> and <code>**kwargs</code> refer to arguments for functions. Read about it in the docs: <a href="https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions" rel="nofollow noreferrer">More on Defining Functions</a></p>
<p>For <strong>command-line arguments</strong>, have a look at the Python <a href="https://docs.python.org/3/tutorial/stdlib.html#command-line-arguments" rel="nofollow noreferrer">docs</a> again:</p>
<blockquote>
<p>Common utility scripts often need to process command line arguments.
  These arguments are stored in the <code>sys</code> moduleâ€™s <em>argv</em> attribute as a list. For instance the following output results from running <code>python demo.py one two three</code> at the command line:</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; print(sys.argv)
['demo.py', 'one', 'two', 'three']
</code></pre>
<blockquote>
<p>[...] More powerful and flexible command line processing is provided by the <code>argparse</code> module.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/argparse.html#module-argparse" rel="nofollow noreferrer">Docs</a> for <code>argparse</code></p>
<p><a href="https://docs.python.org/3/howto/argparse.html#id1" rel="nofollow noreferrer">Tutorial</a> for <code>argparse</code></p>
</div>
<span class="comment-copy">Not sure exactly how your code works, but you could make a variable called <code>true</code> whose value is <code>True</code></span>
<span class="comment-copy">You need to parse command-line arguments being passed to your script. You can do it manually from <code>sys.args</code> or by using the <code>argparse</code> module.</span>
<span class="comment-copy">var1 = kwargs["var1"] if "var1" in kwargs else 10</span>
<span class="comment-copy">Great, i think with this argparse, i'll probably manage to do what i want this time.</span>
