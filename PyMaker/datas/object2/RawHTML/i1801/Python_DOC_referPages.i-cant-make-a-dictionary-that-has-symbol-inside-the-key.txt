<div class="post-text" itemprop="text">
<p>I wanted to make a dictionary that looks like this:</p>
<pre><code>example = dict(C# = "o.ooo.")
</code></pre>
<p>Because there is '#' symbol, the rest greys out.</p>
<p>I know I can fix this problem by doing this:</p>
<pre><code>test = [("C#"), ("o.ooo.")]
example = dict(test)
</code></pre>
<p>I was wondering if there was something that could fix my problem such as: </p>
<pre><code>example = dict(r(C#) = "o.ooo.") - which obviously doesn't work.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Like in other programming language Python has some ways of reusing the same code in different position of the program. One of them is function concept (called procedure in same languages) that we can classify by type of arguments/parameters in:</p>
<h2>Positional Function Parameters</h2>
<p>In this category a value for the parameter is assigned by position. So if we have the following function definition</p>
<pre><code>def newLengths(bridge1,bridge2,bridge3):
    #updating lengths
</code></pre>
<p>and we call it like this <code>newLenghts(1200,1001,1110)</code> the parameter <strong>bridge2</strong> will take for value <strong>1001</strong> meters because it was in the second position.</p>
<h2>Named/Keyword Python Functional Parameters</h2>
<p>In this case we are explicitly telling to python which variable we want to assign a value and not let's implicitly determine by position.
So now for the previous function we can do <code>newLenghts(1200,bridge2 = 1001, 1110)</code>. This way of using named parameters is useful in different situations, especially for default values of parameters when not indicated.
The important part of keyword parameters is the fact the the keyword need to be a valid variable identifier in Python to be used like so, otherwise python will think it's something else, like a number and so one. In your case you try using <strong>#</strong> that have the specializing of line comment and can't be combined to create an identifier.
So I can say that there is no way of using the hashtag unless you modify Python syntax so it's a valid character for variable's name. </p>
<p>However there are some ways to create "C#" key:</p>
<ul>
<li>Use the string directly like key in the dictionary <code>{"C#":"O.OOO."}</code></li>
<li>Create an <a href="https://docs.python.org/3.4/glossary.html#term-iterable" rel="nofollow noreferrer">iterable</a> object and pass it when calling <a href="https://docs.python.org/3.4/library/stdtypes.html#dict" rel="nofollow noreferrer">dict()</a></li>
</ul>
<p>The simplest way to make an iterable for this is to use the function zip() that take two lists and combine them one element of the first list with the one in the same position of the second list.</p>
<pre><code>keys = ["C#","Java","Python"]
values = ["Book1","Book1","Book0"]
example = dict(zip(keys,values))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Passing keywords to the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><code>dict()</code></a> built-in function is problematic here, because the <code>#</code> in your key is being 
misinterpreted as the beginning of a comment.</p>
<p>Instead, use the literal syntax:</p>
<pre><code>example = {"C#": "o.ooo."}
</code></pre>
</div>
<span class="comment-copy">Also, <code>'C#'.isidentifier()</code> -&gt; <code>False</code>. So it double-does-not-work.</span>
<span class="comment-copy">(not a serious suggestion): <code>dict(**{'C#': 'o.ooo.'})</code></span>
<span class="comment-copy">Anthony, why not? That is what I was kinda looking for.</span>
