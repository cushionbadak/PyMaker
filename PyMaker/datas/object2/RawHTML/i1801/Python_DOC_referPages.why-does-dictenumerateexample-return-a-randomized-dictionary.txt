<div class="post-text" itemprop="text">
<p>When I run this simple program:</p>
<pre><code>example: {'left', 'right', 'up', 'down'}
new_dict = dict(enumerate(example))
print(new_dict)
</code></pre>
<p>each run results in a different (index, value) pair. For example:</p>
<pre><code>MacBook-Air:Desktop mymac$ python3 example.py
{0: 'right', 1: 'down', 2: 'left', 3: 'up'}
MacBook-Air:Desktop mymac$ python3 example.py
{0: 'left', 1: 'up', 2: 'down', 3: 'right'}
MacBook-Air:Desktop mymac$ python3 example.py
{0: 'down', 1: 'left', 2: 'right', 3: 'up'}
</code></pre>
<p>Why is that?</p>
</div>
<div class="post-text" itemprop="text">
<p>from the docs <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html#object.<strong>hash</strong></a></p>
<blockquote>
<p>Note By default, the <code>__hash__()</code> values of <code>str</code>, <code>bytes</code> and <code>datetime</code> objects are “salted” with an unpredictable random value. Although they remain constant within an individual Python process, they are not predictable between repeated invocations of Python.</p>
<p>Changing hash values affects the iteration order of dicts, sets and other mappings. </p>
<p><em>Changed in version 3.3:</em> Hash randomization is enabled by default.</p>
</blockquote>
</div>
<span class="comment-copy">Your <code>example</code> is a set. Did you mean to use a list?</span>
<span class="comment-copy">@user2357112 <code>example</code> is a set, yes. But I'm using <code>dict(enumerate(example))</code> to convert it into an enumerate object first and then a dictionary object.</span>
<span class="comment-copy">But sets are unordered...</span>
<span class="comment-copy">Gotcha. Thanks!</span>
<span class="comment-copy"><code>dict</code> objects are unordered in Python &lt; 3.7. And <code>set</code> objects are always unordered</span>
