<div class="post-text" itemprop="text">
<p>I'm trying to find the text between the parenthesis , but I want something like this </p>
<pre><code> s="( abc (def) kkk ( mno) sdd ( xyz ) )"
 p=re.findall(r"\(.*?\)",s)
    for i in p:
        print(i)
</code></pre>
<p>Output:</p>
<pre><code>( abc (def) ,
( mno),
( xyz )
</code></pre>
<p>Expected:</p>
<pre><code>( abc (def) ,
( abc (def) kkk ( mno) ,
( abc (def) kkk ( mno) sdd ( xyz ) ,
( abc (def) kkk ( mno) sdd ( xyz ) ) ,
(def) ,
(def) kkk ( mno)  ,
(def) kkk ( mno) sdd ( xyz ) ,
(def) kkk ( mno) sdd ( xyz ) ) ,
( mno) ,
( mno) sdd ( xyz ) ,
( mno) sdd ( xyz ) ) ,
( xyz ) ,
( xyz ) ) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The python regex module does not handle overlapping matches. It is easier to get by finding the positions of <code>(</code> and <code>)</code> in your text, creating sensible tuples for start/end values and slice your string:</p>
<p>Using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate(iterable)</a>, <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict()</a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">itertools.product()</a>:</p>
<pre><code>s="( abc (def) kkk ( mno) sdd ( xyz ) )"

# get positions of all opening and closing ()
from collections import defaultdict
d = defaultdict(list)
print(d)

for idx,c in enumerate(s):
    if c in "()":
        d[c].append(idx)

# combine all positions 
from itertools import product
pos = list(product (d["("],d[")"]))
print(pos)

# slice the text if start &lt; stop+1 else skip
for start,stop in pos:
    if start &lt; stop+1:
        print(s[start:stop+1])
</code></pre>
<p>Output:</p>
<pre><code># d
defaultdict(&lt;class 'list'&gt;, {'(': [0, 6, 16, 27], ')': [10, 21, 33, 35]})

# pos
[(0, 10), (0, 21), (0, 33), (0, 35), (6, 10), (6, 21), (6, 33), (6, 35), 
 (16, 10), (16, 21), (16, 33), (16, 35), (27, 10), (27, 21), (27, 33), (27, 35)]

# texts from pos
( abc (def)
( abc (def) kkk ( mno)
( abc (def) kkk ( mno) sdd ( xyz )
( abc (def) kkk ( mno) sdd ( xyz ) )
(def)
(def) kkk ( mno)
(def) kkk ( mno) sdd ( xyz )
(def) kkk ( mno) sdd ( xyz ) )
( mno)
( mno) sdd ( xyz )
( mno) sdd ( xyz ) )
( xyz )
( xyz ) )
</code></pre>
</div>
<span class="comment-copy">the python regex module doesn't handle overlapping results -you would need to concat multiple regexsearches-results</span>
<span class="comment-copy">Thank you..How to get overlapping matches in python?</span>
<span class="comment-copy">Thank you very much for excellent solution... Learnt somethg today.. :)</span>
