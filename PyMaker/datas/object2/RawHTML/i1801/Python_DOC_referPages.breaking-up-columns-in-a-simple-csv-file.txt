<div class="post-text" itemprop="text">
<p>My csv file looks like this: </p>
<pre><code>Test Number,Score 
1,100 2,40 3,80 4,90. 
</code></pre>
<p>I have been trying to figure out how to write a code that ignores the header + first column and focuses on scores because the assignment was to find the averages of the test scores and print out a float(for those particular numbers the output should be 77.5). I've looked online and found pieces that I think would work but I'm getting errors every time. Were learning about read, realines, split, rstrip and \n if that helps! I'm sure the answer is so simple, but I'm new to coding and I have no idea what I'm doing. Thank you!</p>
<p>def calculateTestAverage(fileName):
    myFile = open(fileName, "r")
    column = myFile.readline().rstrip("\n")
    for column in myFile:
        scoreColumn = column.split(",")
        (scoreColumn[1])</p>
<p>This is my code so far my professor wanted us to define a function and go from there using the stuff we learned in lecture. I'm stuck because it's printing out all the scores I need on separate returned lines, yet I am not able to sum those without getting an error. Thanks for all your help, I don't think I would be able to use any of the suggestions because we never went over them. If anyone has an idea of how to take those test scores that printed out vertically as a column and sum them that would help me a ton! </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use csv library. This code should do the work:</p>
<pre><code>import csv
reader = csv.reader(open('csvfile.txt','r'), delimiter=' ')
reader.next() # this line lets you skip the header line


for row_number, row in enumerate(reader):
   total_score = 0
   for element in row:
      test_number, score = element.split(',')
      total_score += score
   average_score = total_score/float(len(row))
   print("Average score for row #%d is: %.1f" % (row_number, average_score))
</code></pre>
<p>The output should look like this:</p>
<blockquote>
<p>Average score for row #1 is: 77.5</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I always approach this with a pandas data frame.  Specifically the <code>read_csv()</code> function. You don’t need to ignore the header, just state that it is in row 0 (for example) and then also the same with the row labels.
So for example:</p>
<pre><code>import pandas as pd
import numpy as np
df=read_csv(“filename”,header=0,index_col=0)
scores=df.values 
print(np.average(scores))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I will break it down for you. </p>
<p>Since you're dealing with <code>.csv</code> files, I recommend using the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> library. You can import it with:</p>
<pre><code>import csv
</code></pre>
<p>Now we need to <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open()</code></a> the file. One common way is to use <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code></a>:</p>
<pre><code>with open('test.csv') as file:
</code></pre>
<p>Which is a context manager that avoids having to close the file at the end. The other option is to open and close normally:</p>
<pre><code>file = open('test.csv')
# Do your stuff here
file.close()
</code></pre>
<p>Now you need to wrap the opened file with <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer"><code>csv.reader()</code></a>, which allows you to read <code>.csv</code> files and do things with them:</p>
<pre><code>csv_reader = csv.reader(file)
</code></pre>
<p>To skip the headers, you can use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a>:</p>
<pre><code>next(csv_reader)
</code></pre>
<p>Now for the average calculation part. One simple way is to have two variables, <code>score_sum</code> and <code>total</code>. The aim is to increment the scores and totals to these two variables respectively. Here is an example snippet :</p>
<pre><code>score_sum = 0
total = 0
for number, score in csv_reader:
    score_sum += int(score)
    total += 1
</code></pre>
<p>Here's how to do it with indexing also:</p>
<pre><code>score_sum = 0
total = 0
for line in csv_reader:
    score_sum += int(line[1])
    total += 1
</code></pre>
<p>Now that we have our score and totals calculated, getting the average is simply:</p>
<pre><code>score_sum / total
</code></pre>
<p>The above code combined will then result in an average of <code>77.5</code>. </p>
<p>Off course, this all assumes that your <code>.csv</code> file is actually in this format:</p>
<pre><code>Test Number,Score 
1,100 
2,40 
3,80 
4,90
</code></pre>
</div>
<span class="comment-copy">What have you gotten so far? You need to post your attempt/solution here first.</span>
