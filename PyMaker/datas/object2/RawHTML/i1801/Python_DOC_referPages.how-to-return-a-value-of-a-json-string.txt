<div class="post-text" itemprop="text">
<p>Write a function named "get" that takes a JSON formatted string as a parameter in the format of an object with keys "x" and "y" each mapping to an array of integers. Return the y-value at x == 11.</p>
<p>Input: <code>['{"x": [-5, 4, 3, 19, 11], "y": [-5, 7, -11, 6, -3]}']</code></p>
<p>Expected Output: <code>-3</code></p>
<pre><code>import json
def get(lista):
    load = json.loads(lista)
    if load['x'] == 11:
        return load['y']
</code></pre>
<p>I am returning a value of 0. What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>load['x']</code> is a list; it can never be equal to <code>11</code>. You need to loop over its elements and check if an <em>element</em> is <code>11</code>. You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> to gain access to the index as you loop:</p>
<pre><code>def get(lista):
    load = json.loads(lista)
    for index, element in enumerate(load['x']):
        if element == 11:
            return load['y'][index]

print(get('{"x": [-5, 4, 3, 19, 11], "y": [-5, 7, -11, 6, -3]}'))
# -3
</code></pre>
</div>
<span class="comment-copy">Look into the enumerate function and iterate over your load object.</span>
<span class="comment-copy">Why did you expect an output of -3? I'd expect a TypeError or, if <code>lista</code> is the actual JSON string (which makes that a bad name for the parameter), <code>[-5, 7, -11, 6, -3]</code>.</span>
<span class="comment-copy">JSON decoding aside, it looks like you need to iterate over two lists in parallel, returning the element in the <code>y</code> list when you reach the element <code>11</code> in the <code>x</code> list. It's not clear, though what <code>lista</code> actually is; it looks like it is actually a list that contains a single string that happens to be a JSON object.</span>
<span class="comment-copy">What is the purpose of the keyword 'enumerate'?</span>
<span class="comment-copy">@Anonymous it gives you access to the index of the element in the list as you're iterating.</span>
