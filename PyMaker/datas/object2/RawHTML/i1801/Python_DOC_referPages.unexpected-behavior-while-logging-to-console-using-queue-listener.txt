<div class="post-text" itemprop="text">
<p>I've encountered some logging voodoos in my project.</p>
<p>After reading the followings:
<a href="https://docs.python.org/3.7/library/logging.handlers.html#queuehandler" rel="nofollow noreferrer">QueueHandler</a>
<a href="https://docs.python.org/3.7/library/logging.handlers.html#queuelistener" rel="nofollow noreferrer">QueueListener</a></p>
<p>I designed the logging in my program as follows: in the main process -
root logger assigned with a QueueHandler. That queue is listened by a QueueListener which its target is a plain StreamHandler.
My program at some point of execution, sends an analyzes task to a pool of processes.
Each pool process is assigned with the queue created in main process's QueueHandler, so it can send log records to the console as well.</p>
<p>Note about my program - it's python 2 program that I backported the QueueHandler's and QueueListener's code from python 3 manually.</p>
<p>An inconsistent problem appears in my program execution (but mostly in its tests):
The program gets stuck, no messages are printed to the console.
If the StreamHandler is swapped with FileHandler - tests pass consistently.</p>
<p>Here is the env I used for testing:</p>
<p>interpreter: PyPy 5.6.0 with GCC 4.8.4</p>
<p>pytest version: '3.2.3'</p>
<p>logging version: '0.5.1.2'</p>
<p>uname -a: Linux ip-172-31-36-72 3.13.0-74-generic #118-Ubuntu SMP Thu Dec 17 22:52:10 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</p>
<p>I reckon it's not common to share a github repo - but I extracted my program into a very small project which the problem reproduces (sometimes). Feel free to check it out:
<a href="https://github.com/gshefer/log_wtf" rel="nofollow noreferrer">log_voodoo</a></p>
<p>Why does this happen? Are there any solutions to overcome this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could have used the <a href="https://pypi.org/project/logutils/" rel="nofollow noreferrer">logutils</a> project, which backports the QueueHandler and QueueListener to Python 2.x.</p>
<p>You should set up with:</p>
<ul>
<li>Main process - configure QueueListener and StreamHandler only</li>
<li>Workers - QueueHandler only</li>
</ul>
<p>Ideally, the workers should create and add the QueueHandler themselves rather than relying on inheriting it from the main process (if they're forked from it). The logging cookbook has an <a href="https://docs.python.org/3/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes" rel="nofollow noreferrer">example setup</a> (working code, AFAIK).</p>
</div>
<div class="post-text" itemprop="text">
<p>Without diving into the code, you might want to try with PyPY 6.0, there were some issues that were fixed between those two version.</p>
</div>
