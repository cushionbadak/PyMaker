<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>I want to make a1=0, a2=0,...  aN=0.
I thought using "for"</p>
<p>For example N=10</p>
<pre><code>for i in range(0, 10):

   print('a%d'%i)
</code></pre>
<p>but it isn't not zeros(just print).
So, I did 'a%d'%i=0. but It didn't work</p>
<p>How can I make that?</p>
</div>
<div class="post-text" itemprop="text">
<p>For printing use <a href="https://docs.python.org/3/library/string.html#string-formatting" rel="nofollow noreferrer"><code>.format()</code> (or f-strings on python 3.6+</a> :</p>
<pre><code>for i in range(0, 10):
    print('a{} = {}'.format(i,i))  # the 1st i is put into the 1. {}, the 2nd i is put ...
</code></pre>
<p>If you want to calculate with those as names, store them into a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> and use the values to calculate with them:</p>
<pre><code>d = {}
for i in range(0, 10):
    d["a{}".format(i)] = i # the nth i is put instead nth {}

print("sum a4 to a7:  {} + {} + {} + {} = {}".format(   # use the values stored in dict to 
    d["a4"], ["a5"], ["a6"], ["a7"],                    # calculate and print the single 
    d["a4"]+d["a5"]+d["a6"]+d["a7"]))                   # values where needed 
</code></pre>
<p>Output:</p>
<pre><code># for loop 
a0 = 0
a1 = 1
a2 = 2
a3 = 3
a4 = 4
a5 = 5
a6 = 6
a7 = 7
a8 = 8
a9 = 9

# calculation
sum a4 to a7:  4 + ['a5'] + ['a6'] + ['a7'] = 22
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dictionary for that.</p>
<pre><code>var_name = 'a'

for i in range(0, 10):   
    key = var_name + str(i) # an
    new_values[key] = 0 # assign 0 to the new name
</code></pre>
<p>For accessing them individually,</p>
<pre><code>new_values['a1']
&gt;&gt;&gt; 0
</code></pre>
<p>or you can access them all together like this,</p>
<pre><code>for k,v in new_values.items():
    print(k,'=',v)
</code></pre>
<p>outputs:</p>
<pre><code>a0 = 0
a1 = 0
a2 = 0
a3 = 0
a4 = 0
a5 = 0
a6 = 0
a7 = 0
a8 = 0
a9 = 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple solution, using const value <code>x=0</code>, and counter <code>i</code>:</p>
<pre><code>x = 0
for i in range(0,10):
    print(f"a{i} = {x}")
</code></pre>
<p>output:</p>
<pre><code>a0 = 0
a1 = 0
a2 = 0
a3 = 0
a4 = 0
a5 = 0
a6 = 0
a7 = 0
a8 = 0
a9 = 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also make use of <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer">globals</a> and <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer">locals</a> built-in functions.</p>
<pre><code>In [1269]: for i in range(0, 10):
      ...:     globals()['a'+ str(i)] = 0
      ...:     

In [1270]: a1
Out[1270]: 0

In [1271]: a2
Out[1271]: 0

In [1272]: a3
Out[1272]: 0

In [1273]: a4
Out[1273]: 0

In [1274]: a5
Out[1274]: 0

In [1275]: a6
Out[1275]: 0

In [1276]: a7
Out[1276]: 0

In [1277]: a8
Out[1277]: 0

In [1278]: a9
Out[1278]: 0
</code></pre>
</div>
<span class="comment-copy">Do you want to print them or use them for calculation purposes?</span>
<span class="comment-copy">I'm just curious stuyding python. :) thx everybody replied my question.</span>
