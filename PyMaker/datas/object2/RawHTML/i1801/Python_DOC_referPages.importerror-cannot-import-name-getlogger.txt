<div class="post-text" itemprop="text">
<p>This question already has an answer here:
<a href="https://stackoverflow.com/questions/6252660/python-suds-importerror-cannot-import-name-getlogger">python &amp; suds “ImportError: cannot import name getLogger”</a></p>
<p>But it seems that i encountered a situation which cannot be explained by the answer.</p>
<p>Here is the detail:</p>
<p>I have a file named logging.py . Codes are below:</p>
<pre><code>import sys
print(sys.path)
from logging import getLogger
</code></pre>
<p>I knew if i run python3 logging.py ,it won't work. Because python will try to search directories in sys.path to find logging module. In this way, sys.path[0] will be the directory of the script so that python will load the module logging from the directory of the script directly instead of searching python standard lib.</p>
<p>Here is output:</p>
<pre><code># chuck @ LAPTOP-RN92LIAI in ~/editable_package/test_py [12:01:43]
$ python3 logging.py
['/home/chuck/editable_package/test_py', '/usr/lib/python36.zip', 
'/usr/lib/python3.6', '/usr/lib/python3.6/lib-dynload', 
'/home/chuck/.local/lib/python3.6/site-packages', 
'/usr/local/lib/python3.6/dist-packages', '/usr/lib/python3/dist-packages']
.....
ImportError: cannot import name 'getLogger'
</code></pre>
<p>So i tried to run the file as python3 -m logging , i expected sys.path didn't have the directory of the module , so that python will search the directories of standard lib in sys.path. </p>
<p>However, The result turned out that sys.path is expected but the module that python searched was not:</p>
<pre><code>:!python3 -m logging
['', '/usr/lib/python36.zip', '/usr/lib/python3.6', '/usr/lib/python3.6/lib- 
dynload', '/home/chuck/.local/lib/python3.6/site-packages', 
'/usr/local/lib/python3.6/dist-packages', '/usr/lib/python3/dist-packages']
...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
  "__main__", mod_spec)
 File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
 File "/home/chuck/editable_package/test_py/logging.py", line 3, in &lt;module&gt;
    from logging import getLogger
  File "/home/chuck/editable_package/test_py/logging.py", line 3, in 
  &lt;module&gt;
   from logging import getLogger
 ImportError: cannot import name 'getLogger'
</code></pre>
<p>I'm confused by this. Just don't know why. Any suggestions will be appreciate.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you've named your file 'logging.py' which makes it look like the Python native 'logging' module.  When you run the file, it tries to import getLogger from itself which doesn't work because it's not defined there.  Rename your file and it will work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>log = logging.getLogger(name)
log.info("this is info log")
</code></pre>
<p>This how we have to initialize a variable to be able to log in our application. 'name' usually refers to the module.</p>
</div>
<div class="post-text" itemprop="text">
<p>when you write <code>python3 -m module_name</code> python search the module_name in folder with standart libraries and finds there a not yours <code>logging</code> module, but other - from standart library.</p>
<p>Run it simple:</p>
<pre><code>cd /to/folder/with/your/logging.py
python3 logging.py
</code></pre>
<p>or</p>
<pre><code>python3 /path/to/your/logging.py
</code></pre>
<p>and rename your file to avoid conflicts with standart library.</p>
</div>
<div class="post-text" itemprop="text">
<p>python looking logger.py in folder with file 
with variable <code>__name__ == 'main'</code>
it always file which was run directly, but flask do not run loggin.py directly,
it import them,
and they interpretator run in root of project where it file not placed understand the command <code>from logging import getLogger</code> like - </p>
<p>"import getLogger from current_dir (with <code>__naim__ == 'main'</code> file) </p>
<p>if file is not <em>here</em>, then =&gt; from PYTHONPATH"</p>
<p>to ensure with that you can add <code>getLogger</code> in your file and error will disappear:</p>
<pre><code>import sys
print(sys.path)

class getLogger(object):
    """"""

from logging import getLogger    # tryin to import from self
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I finally understood what happened , thanks for @Cory Nezin  and @Andrey Suglobov.</p>
<p>When python tries to search module, it will search directories in order in sys.path . If sys.path[0] is '' , it doesn't mean python will jump that  and search another directories . Instead, it will try to search the current directory.</p>
<p>Here is <a href="https://docs.python.org/2/library/sys.html#sys.path" rel="nofollow noreferrer">docs</a> :</p>
<blockquote>
<p>As initialized upon program startup, the first item of this list, path[0], is the directory containing the script that was used to invoke the Python interpreter. If the script directory is not available (e.g. if the interpreter is invoked interactively or if the script is read from standard input), path[0] is the empty string, which directs Python to search modules in the current directory first.</p>
</blockquote>
<p>Hence ,for example ,if you are in /home which contains a file named logging.py and run :python3 -m logging ,the current directory is /home , and python will search all modules in /home first. That's why i get such an error: ImportError: cannot import name 'getLogger'.</p>
<p>However , if you are in /home and run the following command Line:</p>
<pre><code>mkdir test
touch test/__init__.py
</code></pre>
<p>and put logging.py into the test dir ,then run : python3 -m test.logging,
the current directory will be /home (Make sure no file named logging in /home),and python can't find logging module in that dir. Therefore, python will import standard lib. And it will finally work fine.</p>
</div>
<span class="comment-copy">I read Flask source code. It also has the logging.py in its version 0.5. And its codes is similar to mine.from <b>future</b> import absolute_import  from logging import getLogger, StreamHandler, Formatter, Logger,  DEBUG But it works.</span>
<span class="comment-copy">Can you run that file directly?  If it is imported from another folder it will work because it will not be on the top level path.  For instance, make a file, test.py which contains 'import test.logging' then make a directory test and put logging.py in it.  test.py will run with no errors - IF you're in python3.  If you're in python2 you will have to do the same as flask and run from future import absolute_import in your logging.py</span>
<span class="comment-copy">What does the  on the top level path mean? Any docs or links expain that will be appreciated.</span>
<span class="comment-copy">There's some more info here <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs.python.org/3/reference/import.html</a> but it's a little sparse.  Basically, a top level module is any .py IN your sys.path.  When you run a file directly, e.g. python logging.py, sys.path automatically includes the path of the file (that's what the empty string showing in your output is).  That's why it tries to import itself.  Anything else will be a submodule.  Sorry I forgot to mention in the last comment, you'd have to include a file, <b>init</b>.py in the test folder so that python can find the files.</span>
<span class="comment-copy">I just confused how the import statement search the module. I expected it search the standard library so that from logging import getLogger should work fine. But instead ,it seems that it searched the module in the current directory .</span>
<span class="comment-copy">Ideally instead of importing the getLogger module, you can initiate getLogger() with current module name so that logging is more readable</span>
<span class="comment-copy">Maybe i didnt make it clear. I'm not confused about how to make logging more readable. In fact, i'm confused about absolute import and relative import.</span>
<span class="comment-copy">No I understood the real issue is with how you are importing the module. I am just giving a suggestion.</span>
<span class="comment-copy">Thanks anywhere.</span>
<span class="comment-copy">If i just simply run python3 /path/to/your/logging.py and don't rename my file ,it won't work.</span>
<span class="comment-copy">if file that import your module will be in another dir it will works</span>
