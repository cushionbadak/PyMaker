<div class="post-text" itemprop="text">
<p><strong>Scenario:-</strong></p>
<p>I have a Dataframe as follows </p>
<p>full_sentence</p>
<p>Baggage<br/>
age     </p>
<p>a list of key words </p>
<p>key_words = [ 'age' ,'man' ] </p>
<p><strong>Objective:-</strong> </p>
<p>I need to see if the word "age" [ individually ] exists in this column and if it exists make that as a separate column </p>
<p><strong>Desired output :-</strong> </p>
<p>full_sentence  |   found_word</p>
<p>Baggage        |    NaN
age            |    age </p>
<p><strong>Command Used:-</strong></p>
<p>Dataframe.str.extract('({})'.format('|'.join(key_words)),flags=re.IGNORECASE,expand=False).astype(str)</p>
<p><strong>Output with Mismatch</strong></p>
<p>full_sentence  |   found_word</p>
<p>Baggage        |    age
age            |    age </p>
<p><strong>Clarification:-</strong>
It seems, extract is doing a partial match of the string as well. Can it be made to extract only if the whole word matches. </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Change the regex match to <code>r'^({})$'.format(r'|'.join(key_words))</code>. <code>^</code> in regex means start of line/string and <code>$</code> means end of line/string. You should also change to raw strings with <code>r''</code> as above for regex patterns.</p>
<p>See <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">the Python3</a> or <a href="https://docs.python.org/2/howto/regex.html" rel="nofollow noreferrer">the Python2 regex docs</a> for more info.</p>
</div>
<span class="comment-copy">Thanks a lot mVChr. Appreciate your quick response</span>
<span class="comment-copy">This actually does not extract the exact word and does not find a match. I think the regex is considering the values appended as a full pattern to search or it looks for the beginning of a line . Is there a suggestion</span>
<span class="comment-copy">The below has solved my problem. Posting it for the befit of all .                                   ----------------------------------------------- Dataframe['full_sentence'] = Dataframe.tran_desc.str.extract(r'\b({})\b'.format('|'.join(key_words)),flags=re.IGNORECASE,expand=False).astype(str) ---------------------------------------------------                                                                        " \b"  applies a boundary for the  search word that is substituted by the format function.</span>
