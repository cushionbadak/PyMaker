<div class="post-text" itemprop="text">
<p>I have two list</p>
<pre><code>List1 = ['hello','welcome','india','nation']
List2 = ['ind', 'nat','hellooo','welcomeeee']
</code></pre>
<p>i want to compare elements and print as below -</p>
<p>Output : </p>
<pre><code>['india','nation','hello','welcome']
</code></pre>
<p>please suggest some optimized way. </p>
<p>I am having list with unspecified size in each, but it has one list elements matches another list elements, as random, i don't know the size of highest / longest possible match in any of the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://en.wikipedia.org/wiki/Levenshtein_distance" rel="nofollow noreferrer">Levenshtein distance</a> to determine the closest match, so here is one implementation of Levenshtein:</p>
<pre><code>def levenshteinDistance(s1, s2):
    if len(s1) &gt; len(s2):
        s1, s2 = s2, s1

    distances = range(len(s1) + 1)
    for i2, c2 in enumerate(s2):
        distances_ = [i2+1]
        for i1, c1 in enumerate(s1):
            if c1 == c2:
                distances_.append(distances[i1])
            else:
                distances_.append(1 + min((distances[i1], distances[i1 + 1], distances_[-1])))
        distances = distances_
    return distances[-1]


List1 = ['hello', 'welcome', 'india', 'nation']
List2 = ['ind', 'nat', 'helloooo', 'welcomeeeeee']

[min(zip(List1, [levenshteinDistance(j, i) for j in List1]), key=lambda x: x[1])[0] for i in List2]
#['india', 'nation', 'hello', 'welcome']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Similar to <a href="https://stackoverflow.com/a/53082372/9209546">@AndreiDurnea's solution</a>, you can also use a generator:</p>
<pre><code>def comparer(L1, L2):
    for i in L2:
        for j in L1:
            if (i in j) or (j in i):
                yield j

List1 = ['hello','welcome','india','nation']
List2 = ['ind', 'nat','helloooo','welcomeeeeee']

res = list(comparer(List1, List2))

['india', 'nation', 'hello', 'welcome']
</code></pre>
<p>As per @pault's comment, <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> with a list comprehension may be more efficient than a generator:</p>
<pre><code>from itertools import product

res = [j for i, j in product(List2, List1) if (i in j) or (j in i)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>List comprehension,</p>
<pre><code>In [14]: [j for i in List2 for j in List1 if i in j or j in i]
Out[14]: ['india', 'nation', 'hello', 'welcome']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>List1 = ['hello','welcome','india','nation']
List2 = ['ind', 'nat','helloooo','welcomeeeeee']

Rezult = []

for firstItem in List1:
    for secondItem in List2: 
        if firstItem in secondItem or secondItem in firstItem:
            Rezult.append(firstItem)
            continue

print(Rezult)
</code></pre>
<p>the output for this is: </p>
<pre><code>['hello', 'welcome', 'india', 'nation']
</code></pre>
<p>I would suggest to rename the variables:</p>
<pre><code>list_1 = ['hello','welcome','india','nation']
list_2 = ['ind', 'nat','helloooo','welcomeeeeee']

rezult = []

for firstItem in list_1:
    for secondItem in list_2: 
        if firstItem in secondItem or secondItem in firstItem:
            rezult.append(firstItem)            

print(rezult)
</code></pre>
</div>
<span class="comment-copy">How exactly do you want to compare the elements?</span>
<span class="comment-copy">I suppose the output should be with "nat" and not "nation", also with "ind" and not "india"</span>
<span class="comment-copy">"An optimzed way?" Do you have some code that inplements this in a not optimized way that you can share? Any limit on complexity? There's a pretty straightforward quadratic time solution here.</span>
<span class="comment-copy">@pault I have tried splitting list by indexes but its not accurate. As I don't know the max limit of any of the list element (size)</span>
<span class="comment-copy">Probably overkill to implement your own Levenshtein function, but at least this gets the correct output. <b>Edit</b>: I am not the downvoter</span>
<span class="comment-copy">@pault Thanks for not downvoting :) Well, I like Levenshtein and use every chance to promote it :)</span>
<span class="comment-copy">I still have some confusion in this. I am not getting output as require.</span>
<span class="comment-copy">@pault, You're right, generators are slow :(</span>
<span class="comment-copy">I like this [i for i in List1 for j in List2 if i in j or j in i].  Can you please point me where I can explore more of this sintax sugar?</span>
<span class="comment-copy">Can you please explain in more details.?</span>
<span class="comment-copy">@pault Updated my answer. Btw that's for the mention</span>
<span class="comment-copy">This output is wrong. @naitik_chandak</span>
<span class="comment-copy">@pault Can you please explain in more details.?</span>
<span class="comment-copy">Look at the order of the output.</span>
<span class="comment-copy">Oh that means It's printing only first list, Any other alternate solution for this.?</span>
<span class="comment-copy">@naitik_chandakna use jpp's answer</span>
