<div class="post-text" itemprop="text">
<p>I'm trying to build a scraper which puts all swedish parliament members into a .csv file with several columns.</p>
<p>I've managed to get the list of names as seen below. I'm having problems with splitting the strings into last names, first names and party, and then writing a .csv file with these three columns, how do I do that?</p>
<p>Code:</p>
<pre><code>source = urllib.request.urlopen("https://www.riksdagen.se/sv/ledamoter- 
partier/").read()
soup = bs.BeautifulSoup(source, "lxml")

names = soup.find_all("span", {"class": "fellow-name"})

for span in soup.find_all("span", {"class": "fellow-name"}):
    cleanednames = span.text.strip()
    print(cleanednames)
</code></pre>
<p>Output:</p>
<pre><code>Acketoft, Tina (L)
Adaktusson, Lars (KD)
Ahlberg, Ann-Christin (S)
Akhondi, Alireza (C)
Ali-Elmi, Leila (MP)
Alm Ericson, Janine (MP)
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a code snippet using the pandas library to write a csv. From each fellow-name span we extract the last name, first name, and party, and append the 3 strings as a list to a list. Then we cast that list of lists to a pandas dataframe and write it to csv.</p>
<pre><code>import urllib
import bs4 as bs 
import pandas as pd
source = urllib.request.urlopen("https://www.riksdagen.se/sv/ledamoter-partier/").read()
soup = bs.BeautifulSoup(source, "lxml")

names = soup.find_all("span", {"class": "fellow-name"})

list_of_mps = []

for span in soup.find_all("span", {"class": "fellow-name"}):
    cleanednames = span.text.strip()
    split_name = cleanednames.split(',')
    last_name = split_name[0]
    first_name_and_party=split_name[1].strip()
    first_name=' '.join(first_name_and_party.split(' ')[:-1])
    party=first_name_and_party.split(' ')[-1]
    list_of_mps.append([last_name,first_name,party])
pd.DataFrame(list_of_mps,columns = ['last_name','first_name','party']).to_csv('names_parties')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the output that you have shown, you can add this to a csv file in a loop.</p>
<p>take a empty list and append the fields to it rather printing. see below example.</p>
<pre><code>data = []

for span in soup.find_all("span", {"class": "fellow-name"}):
    cleanednames = span.text.strip()
    data.append(cleanednames)  #fields are appended to list rather printing
</code></pre>
<p>Now with the list you can extract the <code>last_name</code> , <code>first_name</code> , <code>party</code> and write it to a csv file. see below example to write to csv.</p>
<pre><code>with open("result.csv", "w") as stream:
    feildnames = ["Last_Name","First_Name","Party"]
    var = csv.DictWriter(stream, fieldnames=feildnames)
    var.writeheader()
    for item in data:
        last_name, First_name, party = item.split()  #splitting data in 3 fields
        last_name = last_name.replace(",","")  #removing ',' from last name
        party = party.replace("(","").replace(")","")  #removing "()" from party
        var.writerow({"Last_Name": last_name,"First_Name": First_name, "Party": party})  #writing to csv row
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in the comment of the previous, pandas is overkill. Using csv instead, we have:</p>
<pre><code>import urllib.request
import bs4 as bs
import csv

source = urllib.request.urlopen("https://www.riksdagen.se/sv/ledamoter-partier/").read()
soup = bs.BeautifulSoup(source, "lxml")

names = soup.find_all("span", {"class": "fellow-name"})
with open("csv-name.csv", 'w') as csv_file:
    writer = csv.writer(csv_file)
    for span in soup.find_all("span", {"class": "fellow-name"}):
        cleanednames = span.text.strip()
        lname, rest = cleanednames.split(", ")
        rest = rest.split(" ")
        party = rest[-1]
        fname = " ".join(rest[:-1])
        writer.writerow([lname, fname, party])
</code></pre>
<p>What's going on in the code: we first split by comma; everything before the comma is a last name. We then split by space, and we know the last thing will be the party. Finally, what's left over is the first name.</p>
</div>
<span class="comment-copy">"Having a little trouble" is not a problem specification.  <i>What</i> trouble are you having?  You've apparently separated the three fields quite well.  From here, it <i>should</i> be a simple matter of using the <code>csv</code> package to write your file, no?</span>
<span class="comment-copy">Try <code>cleanednames.replace(',', '').split()</code>.</span>
<span class="comment-copy">Pandas is overkill for this. The <code>csv</code> module should be more than enough <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">docs.python.org/3/library/csv.html#csv.writer</a>.</span>
