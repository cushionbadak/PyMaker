<div class="post-text" itemprop="text">
<p>I have a function with the <code>async</code> keyword in a separate script, which is this:</p>
<pre><code>async def search_gifs(self, query:str, limit:int = 25, offset:int = 0, rating: rating = rating.G, lang:language = None):
    if language == None:
        lang_to_use = self.lang
    result = await requests.get(self.end_point + "gifs/search", api_key = self.key, q = query, limit=limit, offset=offset, rating=rating.value, lang=lang_to_use.value)
    print(result.json())
</code></pre>
<p>However, when I try calling it with an <code>await</code>, it raises a <code>SintaxError</code>.</p>
<pre><code>await client.search_gifs("lol")

&gt;&gt;&gt; await client.search_gifs("lol")
               ^
    SyntaxError: invalid syntax
</code></pre>
<p>(<code>search_gifs</code> is a function inside the <code>Client</code> class)</p>
<p>Am I doing something wrong? I'm using Python 3.6</p>
</div>
<div class="post-text" itemprop="text">
<p><code>await</code> is only valid inside an <code>async def</code>, so it doesn't work at top-level. This is because the contract of <code>await</code> is that it must be able to <em>suspend</em> the current coroutine, and at top-level there is no coroutine to suspend.</p>
<p>To test a coroutine from the interpreter, use <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.run" rel="nofollow noreferrer"><code>asyncio.run</code></a> or, in Python 3.6, <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_until_complete" rel="nofollow noreferrer"><code>run_until_complete</code></a>:</p>
<pre><code>&gt;&gt;&gt; asyncio.get_event_loop().run_until_complete(client.search_gifs("lol"))
</code></pre>
<p>The other problem with your code is that <code>await requests.get(...)</code> won't work, since <code>requests</code> is not an async library. Instead, use an asyncio-aware library such as <a href="https://github.com/aio-libs/aiohttp" rel="nofollow noreferrer"><code>aiohttp</code></a>.</p>
</div>
