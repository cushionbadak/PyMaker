<div class="post-text" itemprop="text">
<p>This is for an exercise we are doing in uni. I am trying to get all k1-9 and p1-9 strings in the txt file and change them so that each k(n) = 1*n and each p(n) = 0*n (i.e p5= 00000, k3= 111, p2= 00). I have managed to gather the k1-9 and p1-9 in a list called codes but I dont know how to proceed. </p>
<pre><code>import re

with open("suspicious_knitting.txt") as file:
    string = file.read()
    codes = re.findall("k[1-9]|p[1-9]" ,string)
</code></pre>
<p>Printing codes is like this.:</p>
<pre><code>['k1', 'p1', 'k1', 'p1', 'k1', 'p2', 'k1', 'p2', 'k1', 'p3', 'k1', 'p3', 'k1', 'p1', 'k2', 'p1', 'k2', 'p3', 'k1', 'p2', 'k2', 'p1', 'k2', 'p1', 'k1', 'p1', 'k1', 'p1', 'k2', 'p2', 'k3', 'p1', 'k1', 'p2', 'k1', 'p2', 'k2', 'p1', 'k1', 'p1', 'k1', 'p2', 'k1', 'p2', 'k1', 'p2', 'k2', 'p2', 'k5', 'p2', 'k3', 'p1', 'k1', 'p1', 'k1', 'p2', 'k3', 'p1', 'k2', 'p3']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">sub</a>:</p>
<pre><code>import re

text = ' '.join(
    ['k1', 'p1', 'k1', 'p1', 'k1', 'p2', 'k1', 'p2', 'k1', 'p3', 'k1', 'p3', 'k1', 'p1', 'k2', 'p1', 'k2', 'p3',
     'k1', 'p2', 'k2', 'p1', 'k2', 'p1', 'k1', 'p1', 'k1', 'p1', 'k2', 'p2', 'k3', 'p1', 'k1', 'p2', 'k1', 'p2',
     'k2', 'p1', 'k1', 'p1', 'k1', 'p2', 'k1', 'p2', 'k1', 'p2', 'k2', 'p2', 'k5', 'p2', 'k3', 'p1', 'k1', 'p1',
     'k1', 'p2', 'k3', 'p1', 'k2', 'p3'])


def repl(match):
    return int(match.group(2)) * match.group(1)


result = re.sub('([kp])([1-9])', repl, text)
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>k p k p k pp k pp k ppp k ppp k p kk p kk ppp k pp kk p kk p k p k p kk pp kkk p k pp k pp kk p k p k pp k pp k pp kk pp kkkkk pp kkk p k p k pp kkk p kk ppp
</code></pre>
<p><strong>Explanation</strong></p>
<p>The pattern <code>([kp])([1-9])</code> matches a <code>k</code> or a <code>p</code> followed by any digit between <code>1</code> and <code>9</code>. For the sub part let's look at the documentation:</p>
<blockquote>
<p>Return the string obtained by replacing the leftmost non-overlapping
  occurrences of pattern in string by the replacement repl.</p>
</blockquote>
<p>It turns out that <code>repl</code> can be a function, that receives a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a>. In this case the <code>repl</code> takes the second matching group (number of repetitions) cast it to int an multiplies for the first matching group, the letter k or p. </p>
<p><em>Note that I used as input the example in your question joined by space.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a more classic approach. I continued based on your code, and just replaced values as described in code comments.</p>
<pre><code>    import re

    with open("suspicious_knitting.txt") as file:
        string = file.read()
        codes = re.findall("k[1-9]|p[1-9]" ,string)

        for i in range(len(codes) - 1):
            letter = codes[i][0] # this will be k or p
            number = codes[i][1] # this is number after k/p
            if letter == 'k':
                codes[i] = letter + ('1' * int(number)) # for example, if variable number is 5, 1 will be repeated 5 times
            else:
                codes[i] = letter + ('0' * int(number))

        # now array codes contains desireable values :)
</code></pre>
</div>
<span class="comment-copy">I think you need <code>re.sub("([kp])([1-9])", lambda x: "0" * int(x.group(2)) if x.group(1) == 'p' else "1" * int(x.group(2)),s)</code>, see <a href="https://ideone.com/gqp2o3" rel="nofollow noreferrer">demo</a></span>
<span class="comment-copy">Does my solution work for you? Let me know, if it does, I will post with explanations.</span>
