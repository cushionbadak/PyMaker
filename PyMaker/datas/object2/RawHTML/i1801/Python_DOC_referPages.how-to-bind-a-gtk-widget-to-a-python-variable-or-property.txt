<div class="post-text" itemprop="text">
<p>I would like to separate my model (property) from the view (gtk widget).</p>
<p>For example: my model has a "level" property.
I would like to bind the "level" to  <code>GtkScrollbar</code> and to a <code>GtkLabel</code> so that a change to the variable e.g. <code>self.level=5</code> will be reflected in the widgets and a change in the widgets will set the property.</p>
<p>This is common practice in many frameworks (WPF).</p>
<p>How to do this with python+gtk ?
or is there a library for doing this binding?</p>
</div>
<div class="post-text" itemprop="text">
<p>Official <a href="https://developer.gnome.org/gobject/stable/GBinding.html" rel="nofollow noreferrer">documentation</a> provides exhaustive answer on bindings.</p>
<p>What you need exactly is <a href="http://lazka.github.io/pgi-docs/index.html#GObject-2.0/classes/Object.html#GObject.Object.bind_property_full" rel="nofollow noreferrer">bind_property_full</a> method with custom function for transformation from GtkScrollbar's value (which is a number) to GtkLabel's string.</p>
</div>
<span class="comment-copy">Please provide some minimal mock code to illustrate what you want.</span>
<span class="comment-copy">So the suggestion is to make my model out of GObjects and then bind as needed..</span>
<span class="comment-copy">@user1656671 Not really. There is another approach, which involves more code. As a <code>GtkRange</code>'s subclass <code>GtkScrollbar</code> emits <code>"value-changed"</code> signal when user moves the slider. You can connect to this signal and update your label value. Moreover, you can use the power of <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">property</a> to update both scrollbar and label when somebody updates <code>self.level</code>. However, you must understand, that GTK functions should only be called from main loop.</span>
<span class="comment-copy">Damn, looks like I should've read the question more careful. Well, if your model <i>knows</i> about Label and Scrollbar, just update your setter and connect to said signal.</span>
<span class="comment-copy">The idea is that my model would not know abut the controls, or at least would not have to know.. The best would be to define a model in terms of data types and bind as simply as possible. For example binding by looking up keys in glade files - as can be done with events.</span>
