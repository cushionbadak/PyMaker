<div class="post-text" itemprop="text">
<p>According to my understanding：return is the meaning of returning a value.</p>
<p>One example, the python1 script: </p>
<pre><code>def func():  
    try:  
       print 98  
       return 'ok' 
    finally: 
       print 98  

print fun()  
</code></pre>
<p>The output of the script is :</p>
<p>98</p>
<p>98</p>
<p>ok</p>
<p>So my question is why the output of the script is not:</p>
<p>98</p>
<p>OK</p>
<p>98</p>
<p>Why is the output of the OK line at the end?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because when you use </p>
<pre><code>try:
  #some code
finally:
  #some other code
</code></pre>
<p>the <code>finally</code> block is guaranteed to be executed after the <code>try</code> block no matter what happens in the <code>try</code> block. Even if no exception was raised.</p>
<p><code>finally</code> is generally used to release resources, clean up of variables etc.</p>
</div>
<span class="comment-copy">Because the <code>finally</code> block is executed before the function exits and returns.</span>
<span class="comment-copy">did you read   <a href="https://docs.python.org/2/tutorial/errors.html#defining-clean-up-actions" rel="nofollow noreferrer">about cleanup actions when handling errors</a> ?</span>
<span class="comment-copy">From docs: <i>A finally clause is always executed before leaving the try statement, whether an exception has occurred or not.</i></span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#defining-clean-up-actions" rel="nofollow noreferrer">The finally clause is also executed “on the way out” when any other clause of the try statement is left via a break, continue or return statement.</a></span>
<span class="comment-copy">Please edit your question so the Title has any resemblence to what you ask in the description of your post - currently based on the tile no one will ever be able to find this</span>
