<div class="post-text" itemprop="text">
<pre><code>SplitTypes=[]
for file in os.listdir(os.curdir):
    SplitTypes.append(file.split('.')[-1])
collections.Counter(SplitTypes)
</code></pre>
<p>This gives me:</p>
<pre><code>Counter({'txt': 2,
     'ipynb': 38,
     'Practical_Statistics': 1,
     'DS_Store': 1,
     'xlsx': 10,
     'xls': 2,
     'json': 9,
     'csv': 3,
     'workspace 2': 1,
     'py': 2,
     'templates': 1,
     'ipynb_checkpoints': 1,
     'log': 1,
     'exec -l ': 1})
</code></pre>
<p>but I would like to add, minumum, average, and max file size for each type of extension to that, as a list or dictionary doesnt matter. I know how to get each individual file size in my directory using:</p>
<pre><code>for file in os.listdir(os.curdir):
    print(file, os.path.getsize(file))
</code></pre>
<p>but not sure how to aggregate based on extension type</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code></a> will only give you back the counts, perhaps a file grouping approach might be more straightforward. </p>
<p>What you can do:</p>
<p><strong>1.</strong> Group file sizes by extension, perhaps with a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a>.</p>
<p><strong>2.</strong> Perform statistics on each group of file sizes.</p>
<p><strong>Demo:</strong></p>
<pre><code>from os import curdir
from os import listdir

from os.path import getsize
from os.path import splitext

from collections import defaultdict

# 1
d = defaultdict(list)
for file in listdir(curdir):
    _, extension = splitext(file)
    d[extension].append(getsize(file))

# 2
for extension, file_sizes in d.items():
    print('extension:', extension)
    print('count:', len(file_sizes))
    print('min file size:', min(file_sizes))
    print('max file size:', max(file_sizes))
    print('average file size:', sum(file_sizes) / len(file_sizes))
</code></pre>
</div>
<span class="comment-copy">um.. use a <code>for</code> loop? You already had a <code>Counter</code> object with all the keys.</span>
