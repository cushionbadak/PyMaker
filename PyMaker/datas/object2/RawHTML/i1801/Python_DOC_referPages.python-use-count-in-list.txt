<div class="post-text" itemprop="text">
<p>I want to make a list of all of my saved wifi files, with a number in front of each file but my output is not what I what from my code.</p>
<pre><code>import os,
path = '/etc/NetworkManager/system-connections/'
dirs = os.listdir(path)
count = sum([len(files) for r, d, files in os.walk(path)])

for file in dirs:
   for item in range(count):
   print(item, file)
</code></pre>
<p><strong>Expected output:</strong> </p>
<blockquote>
<p>1 wifi-test</p>
<p>2 androidAP</p>
<p>3 androidAPtest</p>
</blockquote>
<p><strong>output now:</strong></p>
<blockquote>
<p>0 wifi-test</p>
<p>1 androidAP</p>
<p>2 androidAPtest</p>
<p>0 wifi-test</p>
<p>1 androidAP</p>
<p>2 androidAPtest</p>
</blockquote>
<p>and then it starts over </p>
</div>
<div class="post-text" itemprop="text">
<h2>How a Loop inside a Loop works</h2>
<p>I think there you have a misunderstanding in what happens when you put a loop inside a loop, so let me explain that first. </p>
<p>If you have, for example</p>
<pre><code>for item_a in ['a', 'b']:
  for item_b in ['1', '2']:
    print(item_a + item_b)
</code></pre>
<p>then your output would be:</p>
<blockquote>
<p>a1</p>
<p>a2</p>
<p>b1</p>
<p>b2</p>
</blockquote>
<p>The code would start in the <code>a</code> loop first, and then it would go over both items in the inner loop. Once finished, the next item in the outer loop is <code>b</code>, and then it will go over both items in the inner loop again.</p>
<p>If you want to keep track of how many items you've gone over in your loop, you could do so with this type of pattern:</p>
<pre><code>count = 0
for item_a in ['a', 'b']:
  count = count + 1
  print( str(count) + item_a)
</code></pre>
<p>This results in</p>
<blockquote>
<p>1a</p>
<p>2a</p>
</blockquote>
<p>But there is a shortcut. You can use a nifty function called <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> to get the count of each item in the for loop.</p>
<pre><code>for count, item_a in enumerate(['a', 'b']):
  print( str(count) + item_a)
</code></pre>
<p>Which will also give you</p>
<blockquote>
<p>1a</p>
<p>2a</p>
</blockquote>
<hr/>
<h2>Solution to your problem</h2>
<p>With all this said, you can create your list of files like so</p>
<pre><code># First we loop over os.walk to get the files in the current directory and all sub-directories
for root, dirs, files in os.walk(path):

   # And then using enumerate, we can consolidate those two for loops into one loop that properly counts everything
   for item, file in enumerate(files):
      print(item, os.path.join(root, file))
</code></pre>
<p>And if you don't care about sub-directories, you can just do</p>
<pre><code>for item, file in enumerate(os.listdir(path)):
  print(item, file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not quite clear what you want with your code. What's that <code>count</code> for?</p>
<p>Maybe this is what you want:</p>
<pre><code>import os

path = '/etc/NetworkManager/system-connections/'
dirs = os.listdir(path)

for num, file in enumerate(dirs):
  print(num+1, file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what count is supposed to do here, but if you want the files in the directory (not subdirectories) you just need os.listdir. </p>
<pre><code>import os
path = '/etc/NetworkManager/system-connections/'
dirs = os.listdir(path)

for i in range(len(dirs)):
    print(i + 1, dirs[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is exactly what a nested loop will do.</p>
<p>Check the outputs of the loops independently:</p>
<p>It says you have 2 files the directory.</p>
<p>So this is the first thing you want to look at. Because if the output is supposed to be one, it's counting another thing inside dirs. What is it counting? Debug it by printing the loops separately.</p>
<p>Also, for the next problem you can solve it by hardcoding an innocent <code>+1</code></p>
<pre><code>print(item + 1, file)
</code></pre>
</div>
<span class="comment-copy">That is what nested loops do. You will want to look up <code>enumerate</code>.</span>
<span class="comment-copy">Wauw, thanks for all of that, made my day alot easier</span>
<span class="comment-copy">Exactly what I was looking for! thanks!</span>
