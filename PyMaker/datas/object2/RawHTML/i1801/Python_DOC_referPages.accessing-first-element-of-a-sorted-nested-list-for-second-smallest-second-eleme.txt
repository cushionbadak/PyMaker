<div class="post-text" itemprop="text">
<p>I have a nested linked list: </p>
<pre><code>list_a = [[A, 12.1], [B, 15.6], [C, 9.8], [D, 12.1], [F, 96.3]]
</code></pre>
<p>I have sorted the list successfully using <code>sorted(list_a)</code>, according to the second elements of the sub-lists. How do I get output A and D(first-elements of the list with second-smallest second-elements)?</p>
</div>
<div class="post-text" itemprop="text">
<p>A full sort is unnecessary here. You can use <a href="https://docs.python.org/3.6/library/heapq.html#heapq.nsmallest" rel="nofollow noreferrer"><code>heap.nsmallest</code></a> followed by a list comprehension:</p>
<pre><code>from heapq import nsmallest
from operator import itemgetter

list_a = [['A', 12.1], ['B', 15.6], ['C', 9.8], ['D', 12.1], ['F', 96.3]]

second_largest_val = nsmallest(2, map(itemgetter(1), list_a))[1]
res = [key for key, val in list_a if val == second_largest_val]

# ['A', 'D']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following conditional <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>list_a = [['A', 12.1], ['B', 15.6], ['C', 9.8], ['D', 12.1], ['F', 96.3]]
sorted_a = sorted(list_a, key=lambda x: x[1])
[x for x, y in sorted_a if y == sorted_a[1][1]]
# ['A', 'D']
</code></pre>
<p>This does however check <code>float</code> objects for equality which <a href="https://stackoverflow.com/questions/5595425/what-is-the-best-way-to-compare-floats-for-almost-equality-in-python">is not ideal</a>. So you might want to resort to using <a href="https://docs.python.org/3/library/math.html#math.isclose" rel="nofollow noreferrer"><code>math.isclose</code></a> which is available in Python &gt;= 3.5:</p>
<pre><code>from math import isclose
[x for x, y in sorted_a if isclose(y, sorted_a[1][1])]
# ['A', 'D']
</code></pre>
</div>
<span class="comment-copy">Could you please explain what does isclose(y, sorted_a[1][1]) do? More specifically, does sorted_a[1][1] refer to the second element of second sub_list specifically? If so, how do we encounter more than one least second-elements..</span>
<span class="comment-copy">I linked the docs to <code>isclose</code> in the answer. Since floats suffer from precision issues, this function allows you to assert approximate equality. <code>sorted_a[1][1] </code> does refer to the second element of second sub_list (<code>12.1</code>) and the comprehension collects all first elements that this very second element.</span>
