<div class="post-text" itemprop="text">
<p><strong>For example - a left shift:</strong></p>
<p>Here is a <code>grid</code> of letters for example</p>
<pre><code>tiwxz          
shshq          
avidy          
bsvsc          
</code></pre>
<p>This is the effect I want to have. The <code>X</code> symbol fills in the space created by the movement. </p>
<pre><code>XXXtiwxz         # no shift
XXshshqX         # one shift left
XavidyXX         # two shift left
bsvscXXX         # three shift left
</code></pre>
<ul>
<li>The grid of letters would be a list where each row is an item</li>
<li>I do not know how long the list is going to be</li>
<li>Solution should be pure python</li>
</ul>
<p>How would I do a left shift and a right shift for <code>grid</code>?</p>
<p><strong>This is all I have got:</strong></p>
<pre><code>def diags(grid, rev=False):
    n = len(grid)
    _grid = [list(row) + [None]*(n-1) for row in grid]  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can pad the left and right sides with <code>X</code>s (or <code>None</code>s) based on the row's index which you can get with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>:</p>
<pre><code>grid = [list(s) for s in 'tiwxz shshq avidy bsvsc'.split()]
new_grid = [(['X'] * (len(grid) - 1) + lst)[i:] + ['X'] * i for i, lst in enumerate(grid)]
</code></pre>
<p><strong>Output</strong></p>
<pre><code>for l in new_grid:
    print(l)

# ['X', 'X', 'X', 't', 'i', 'w', 'x', 'z']
# ['X', 'X', 's', 'h', 's', 'h', 'q', 'X']
# ['X', 'a', 'v', 'i', 'd', 'y', 'X', 'X']
# ['b', 's', 'v', 's', 'c', 'X', 'X', 'X']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This function will do the job. To confirm backside spaces you can print the length of the string. input_grid is the list of a row as an element.</p>
<pre><code>def formater_fn(input_grid):
    right_len = len(input_grid) + len(input_grid[0])
    left_len = len(input_grid) + len(input_grid[0])
    for item in input_grid:
        right_item = item.rjust(right_len)
        new_item = right_item.ljust(left_len)
        right_len = right_len-1
        print new_item
</code></pre>
</div>
<span class="comment-copy">Can you share your initial attempt? As written, this sounds like youâ€™re asking a community of volunteers to write your python function.</span>
<span class="comment-copy">stealththeninja I've added it</span>
<span class="comment-copy">Seems these X's are appearing out of nowhere.</span>
<span class="comment-copy">Jaba i said it in the question?</span>
<span class="comment-copy">Yes, but just 3 of them or what amount are you trying to move them?</span>
<span class="comment-copy">a solution for shifting from <b>slider</b> - hilarious :) but a good one. I removed all the trailing spaces to get rid of the scrollbars on your code.</span>
<span class="comment-copy">@PatrickArtner Lol. Thank you :)</span>
<span class="comment-copy">Excellent worked for me, thank you</span>
