<div class="post-text" itemprop="text">
<p>I have an XML in string format that looks more or less like this:</p>
<pre><code>&lt;item&gt;  
    &lt;property 1&gt; value &lt;/property 1&gt;
    &lt;property 2&gt; value &lt;/property 2&gt;
    &lt;property 3&gt; value &lt;/property 3&gt;
&lt;/item&gt;

&lt;item&gt;  
    &lt;property 1&gt; value &lt;/property 1&gt;
    &lt;property 2&gt; value &lt;/property 2&gt;
    &lt;property 3&gt; value &lt;/property 3&gt;
    &lt;property 4&gt; value &lt;/property 4&gt;
&lt;/item&gt;
</code></pre>
<p>As you can see in this example, the first <code>item</code> is missing <code>property 4</code>. What I would like to do is to find every <code>item</code> that is missing this <code>property 4</code> and add it manually.</p>
<p>This is part of a bigger Python script, and I've tried using regex methods re.findall and re.search to find all missing substrings and then using re.sub to add said substring, but I couldn't make it work at all.</p>
<p>Any help would be appreciated :)
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't even bother with a regex solution. Since XML is a non-regular language, a regular expression solution is bound to fail (if not today then tomorrow, as soon as the XML string changes).</p>
<p>Use a proper XML tool and search for the required tag. If it is missing, add it.
You just need to make sure your input string is in a valid XML form (which means a root element and no spaces in tag names).</p>
<pre><code>from xml.etree import ElementTree as ET

xml_str = '''&lt;root&gt;
                &lt;item&gt;
                    &lt;property_1&gt; value &lt;/property_1&gt;
                    &lt;property_2&gt; value &lt;/property_2&gt;
                    &lt;property_3&gt; value &lt;/property_3&gt;
                &lt;/item&gt;
                &lt;item&gt;
                    &lt;property_1&gt; value &lt;/property_1&gt;
                    &lt;property_2&gt; value &lt;/property_2&gt;
                    &lt;property_3&gt; value &lt;/property_3&gt;
                    &lt;property_4&gt; value &lt;/property_4&gt;
                &lt;/item&gt;
             &lt;/root&gt;'''

xml = ET.fromstring(xml_str)
for item in xml.iter('item'):
    prop_4 = item.find('property_4')
    if prop_4 is None:
        prop_4 = ET.Element('property_4')
        prop_4.text = ' value '
        item.append(prop_4)
print(ET.tostring(xml).decode())

#  &lt;root&gt;
#      &lt;item&gt;
#          &lt;property_1&gt; value &lt;/property_1&gt;
#          &lt;property_2&gt; value &lt;/property_2&gt;
#          &lt;property_3&gt; value &lt;/property_3&gt;
#          &lt;property_4&gt; value &lt;/property_4&gt;
#      &lt;/item&gt;
#      &lt;item&gt;
#          &lt;property_1&gt; value &lt;/property_1&gt;
#          &lt;property_2&gt; value &lt;/property_2&gt;
#          &lt;property_3&gt; value &lt;/property_3&gt;
#          &lt;property_4&gt; value &lt;/property_4&gt;
#      &lt;/item&gt;
#  &lt;/root&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It can be done without regex. Use Python <a href="https://docs.python.org/2/library/xml.etree.elementtree.html" rel="nofollow noreferrer">XML</a> libray.</p>
<p>Fisrt load xml from string and then look if each child element has "property4":</p>
<pre><code>import xml.etree.ElementTree as ET


xml_str = """&lt;?xml version="1.0"?&gt;
&lt;data&gt;
&lt;item&gt;
  &lt;property1&gt; value &lt;/property1&gt;
  &lt;property2&gt; value &lt;/property2&gt;
  &lt;property3&gt; value &lt;/property3&gt;
  &lt;property4&gt; value &lt;/property4&gt;
&lt;/item&gt;

&lt;item&gt;
  &lt;property1&gt; value &lt;/property1&gt;
  &lt;property2&gt; value &lt;/property2&gt;
  &lt;property3&gt; value &lt;/property3&gt;
&lt;/item&gt;
&lt;/data&gt;
"""
root = ET.fromstring(xml_str.encode("utf-8"))
for child in root:
    try:
        print(child.find('property4').text)
    except AttributeError:
        print("Property4 is missing")
</code></pre>
<p>Please note that in order to load xml from string you need valid, and well formated xml.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What I would like to do is to find every "item" that is missing this "property 4" and add it manually.<br/>
  I've tried using regex methods re.findall and re.search to find all missing substrings and then using re.sub to add said substring, but I couldn't make it work at all.</p>
</blockquote>
<p>A fit regex for your string format is <code>&lt;item(?:(?!&lt;property 4).)*?(?=&lt;/item&gt;)</code> â€” it essentially matches an <code>item</code> from its start up to (not including) its end tag, but only if nowhere in it the <code>property 4</code> appears. This can be incorporated in a single <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> call:</p>
<pre><code>def repl(m): return m.group(0)+'  &lt;property 4&gt; value &lt;/property 4&gt;\n'
xml_str = re.sub('&lt;item(?:(?!&lt;property 4).)*?(?=&lt;/item&gt;)', repl, xml_str, 0, re.S)
</code></pre>
</div>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/library/difflib.html" rel="nofollow noreferrer">docs.python.org/3/library/difflib.html</a>.</span>
