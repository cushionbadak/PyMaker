<div class="post-text" itemprop="text">
<p>I am trying to figure out the best way possible to align my dataset which contains "Company Names". My dataset is about 300k rows and 3 columns. I tried many methods so far including Fuzzywuzzy using </p>
<pre><code>choices = ["Atlanta Falcons", "New York Jets", "New York Giants", "Dallas Cowboys"]
&gt;&gt;&gt; process.extract("new york jets", choices, limit=2)
    [('New York Jets', 100), ('New York Giants', 78)]
</code></pre>
<p>Now this code has two data sets and when I convert df[Name] into two and match with the above method the first one by default becomes 100% since the list is duplicate. </p>
<p>My exact code is </p>
<pre><code>import pandas as pd
df = pd.DataFrame({"Name" : ["Google","google.inc", "ddood"]})
df2 = pd.DataFrame({"Name" : ["google","google"]})

from fuzzywuzzy import fuzz
from fuzzywuzzy import process

get_match = []
for row in df.index:
    name1 = []
    name1.append(df.get_value(row,"Name"))
    for columns in df2.index:
        name2 = []
        name2.append(df2.get_value(columns,"Name") )
        matched_token=[process.extract(x, name2, limit = 2)[0][1] for x in name1]
        get_match.append([matched_token, name1[0], name2[0]])
df_maneet = pd.DataFrame({'name1': [i[1] for i in get_match], 'name2':[i[2] for i in get_match], 'Ratio': [i[0][0] for i in get_match]})

new_df = df_maneet[df_maneet.Ratio&gt;95]
</code></pre>
<p>I am in doubt if the above is the best way to approach my problem. My end result should be all similar like companies making a group.</p>
<p>The below answer did not help as well
<a href="https://stackoverflow.com/questions/23543022/finding-similar-contact-names-within-table">finding-similar-contact-names-within-table</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.meshgrid.html" rel="nofollow noreferrer"><code>np.meshgrid</code></a> to create a list of values &amp; get ratio for each value pair with <code>fuzz.ratio</code> then select rows greater than your threshold ratio.</p>
<pre><code>import pandas as pd
import numpy as np
from fuzzywuzzy import fuzz

df = pd.DataFrame({"Name" : ["Google","google.inc", "ddood"]})
df2 = pd.DataFrame({"Name" : ["google","Grrgle"]})

x = np.array(np.meshgrid(df.Name.values, df2.Name.values)).T.reshape(-1,2)
df3 = pd.DataFrame(x)

df3.columns = ['Name1', 'Name2']

df3['Ratio'] = [fuzz.ratio(*i) for i in map(tuple, x)]


print (df3[df3.Ratio &gt; 75])

    Name1   Name2  Ratio
0  Google  google     83
</code></pre>
<hr/>
<p>Edit: Use <a href="https://docs.python.org/2/library/difflib.html#difflib.get_close_matches" rel="nofollow noreferrer"><code>difflib.get_close_matches</code></a> to get close matches for your values.</p>
<pre><code>from difflib import get_close_matches

df = pd.DataFrame({'company_name': ['Alarm.com','Analytics inc.','Adaptiv',
                                   'AllState Insurance','Alarm co', 'Analytics', 
                                    'Adaptive', 'AllState Insurance Group']})

df1 = df['company_name'].map(lambda x: get_close_matches(x, df.company_name, n=2,
                                       cutoff=0.8)).apply(pd.Series).dropna()

print (df1)
                          0                         1
0                 Alarm.com                  Alarm co
2                   Adaptiv                  Adaptive
3        AllState Insurance  AllState Insurance Group
4                  Alarm co                 Alarm.com
6                  Adaptive                   Adaptiv
7  AllState Insurance Group        AllState Insurance
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also try exploring libraries like <a href="https://docs.python.org/3/library/difflib.html#sequencematcher-objects" rel="nofollow noreferrer">difflib</a> and <a href="https://pypi.org/project/fuzzyset/" rel="nofollow noreferrer">fuzzyset</a></p>
<p>You can try using it like below with your dataframes <code>df</code> and <code>df2</code>:</p>
<pre><code>In [1070]: from difflib import SequenceMatcher as SM
In [1076]: SM(None, df['Name'].iloc[0], df2['Name'].iloc[0]).ratio()
Out[1076]: 0.8333333333333334
</code></pre>
<p>Please explore <a href="https://stackoverflow.com/questions/10383044/fuzzy-string-comparison">fuzzy-string-comparison</a> for more info.</p>
<p>Let me know if this helps.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/49507193/fuzzy-logic-for-excel-data-pandas">Fuzzy logic for excel data -Pandas</a></span>
<span class="comment-copy">but my problem remained the same. Since the dataset is too big. 300,000 rows. It will take forever to get the possible matches and then filtering out with above 60% match.</span>
<span class="comment-copy">@ManeetGiri You can try the numpy approach. It's faster.</span>
<span class="comment-copy">MemoryError                               Traceback (most recent call last) &lt;ipython-input-64-1dedf6a15668&gt; in &lt;module&gt;()       6 #df2 = pd.DataFrame({"Name" : ["google","Grrgle"]})       7  ----&gt; 8 x = np.array(np.meshgrid(df['Global Customer Name'].values, df2['Global Customer Name'].values)).T.reshape(-1,2)       9 df3 = pd.DataFrame(x)      10   MemoryError:</span>
<span class="comment-copy">Memory error for only first 10k rows. I got a dataset of 300k</span>
<span class="comment-copy">@ManeetGiri Maybe you should try <a href="https://dask.org/" rel="nofollow noreferrer"><code>Dask</code></a>.</span>
