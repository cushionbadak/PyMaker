<div class="post-text" itemprop="text">
<p>I'm having trouble trying to figure out the code for a program I'm writing. I'm given a file with the format:</p>
<pre><code>student_firstname
student_lastname
student_number
assignment_mark
midterm_mark
exam_grade
final_mark
</code></pre>
<p>Here is a sample:  </p>
<pre><code>Marilyn
Malone    
136238
88
72
70
Esther
Mulcahy
194563
25
45
91
William
Gray
110031
33
38
62
</code></pre>
<p>I'm trying to find a way to return the highest and lowest final_mark from all students. What I've done so far is:</p>
<pre><code>infile = open(fileName, "r")
myList = []
name = infile.readline().strip()

passingGrades = 0
failingGrades = 0
avGrade = 0    

while name != '':
    highestGrade = [0, 'studentName']
    lowestGrade = [99, 'studentName']
    lastName = infile.readline().strip()
    studentNum = infile.readline().strip()
    assignGrade = infile.readline().strip()
    midGrade = infile.readline().strip()
    examGrade = infile.readline().strip()
    averageGrade = ((int(assignGrade) * 0.25) + (int(midGrade) * 0.25) +
                    (int(examGrade) * 0.50)) 

    def lowGrade(x):
        if x &lt; lowestGrade[0]:
            lowestGrade.pop(0)
            lowestGrade.pop(0)
            lowestGrade.append(x)
            lowestGrade.append(name)
            lowestGrade.append(lastName)
        return lowestGrade   

    if averageGrade &gt;= 50 and int(examGrade) &gt;= 50:
        #print(name)
        passingGrades += 1
        avGrade += averageGrade

        if averageGrade &gt; highestGrade[0]:
            highestGrade.pop(0)
            highestGrade.pop(0)
            highestGrade.append(averageGrade)
            highestGrade.append(name)
            highestGrade.append(lastName)
        else:
            pass

    else:
        failingGrades += 1
        avGrade += averageGrade

    lowGrade(averageGrade)

    name = infile.readline().strip()

finalAverage = avGrade / (passingGrades + failingGrades)

highFinal = ' '.join(str(x) for x in highestGrade)
lowFinal = ' '.join(str(x) for x in lowestGrade)
</code></pre>
<p>When the program is run using one of the text files, I get:</p>
<pre><code>Number of passes: 9
Number of fails: 1
Average final grade: 64.55
The Highest Grade: 79.5 Patty Marshall
The Lowest Grade: 79.5 Patty Marshall
</code></pre>
<p>Any help is much appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Every time you read a new student, you 'reset' the <code>highestGrade</code> and <code>lowestGrade</code> to their initial values (<code>0</code> and <code>99</code>, respectively).</p>
<pre><code>while name != '':
     # stuff that happens for each 'name'
    highestGrade = [0, 'studentName']
    lowestGrade = [99, 'studentName']

    # ... do stuff ...

    # read new name
    name = infile.readline().strip()
</code></pre>
<p>Fix this easily by initializing those values <em>outside</em> of your loop.</p>
<pre><code>highestGrade = [0, 'studentName']
lowestGrade = [99, 'studentName']

while name != '':
     # stuff that happens for each 'name'
</code></pre>
<hr/>
<p>In addition, your <code>lowGrade</code> method is unnecessarily complex and redundant. Instead of removing items from the list and then adding new items, just create a new list. And in fact, a <a href="https://docs.python.org/3/library/stdtypes.html#tuples" rel="nofollow noreferrer"><code>tuple</code></a> would be more appropriate than a <a href="https://docs.python.org/3/library/stdtypes.html#lists" rel="nofollow noreferrer"><code>list</code></a>, although both will work.</p>
<pre><code>lowestGrade = (99, 'studentName')

def lowGrade(x):
    if x &lt; lowestGrade[0]:
        lowestGrade = (x, name, lastName)
</code></pre>
<p>You don't need to return the <code>tuple</code>/<code>list</code> from this method, as you don't use the returned value at all.</p>
</div>
<div class="post-text" itemprop="text">
<p>Everytime you find a lowest grade you are removing 2 values from the list and adding 3. This means that the first value is never removed. Can you check if this works for you?</p>
<pre><code>def lowGrade(x):
    if x &lt; lowestGrade[0]:
        lowestGrade.pop(0)
        lowestGrade.pop(0)
        lowestGrade.append(x)
        lowestGrade.append(' '.join(name, lastName))
    return lowestGrade   
</code></pre>
</div>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem. We should be able to paste your posted code into a text file and reproduce the problem you described.</span>
<span class="comment-copy">Hi Galen, welcome to StackOverflow. I'm reading the question and finding it hard to understand what you're solving. What are you <code>pop</code>ping off the list, and then why are you appending other things to the list? What are <code>averageGrade</code> and <code>name</code> - they aren't defined?</span>
<span class="comment-copy">@KirkBroadhurst my bad, Iâ€™ve posted the full project code to put it into context a little better</span>
<span class="comment-copy">Is there a file for each student, or if in a single file, how is each student entry separated (if at all)?</span>
<span class="comment-copy">Cool. So what's the specific problem? You might want to add some <code>print</code> statements so you can debug more easily. Couple of notes: [1] you are resetting the <code>highestGrade</code> and <code>lowestGrade</code> variables every time you run through your while loop; [2] the <code>lowestGrade</code> variable is kind of emptied and then populated - probably simpler to just assign a new value to it; [3] the <code>lowGrade</code> function both changes the variable value <i>and</i> returns that value, which is confusing.</span>
<span class="comment-copy">thank you! ended up refactoring highest grade into a function using a tuple as well!</span>
<span class="comment-copy">Feel free to upvote and accept. Glad I could help.</span>
<span class="comment-copy">The same applies to the highestGrade btw</span>
<span class="comment-copy">tried this but I'm getting a typerror, join() only takes one argument</span>
<span class="comment-copy">yeah, it should be .join((name, lastName)). Anyhow, Kirk got the right answer</span>
