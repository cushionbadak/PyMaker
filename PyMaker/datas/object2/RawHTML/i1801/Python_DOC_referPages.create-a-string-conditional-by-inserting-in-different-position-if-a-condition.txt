<div class="post-text" itemprop="text">
<p>I'm trying to create a string conditional, by inserting in different position if a condition.</p>
<p>Pseudo Example:</p>
<pre><code>is_active=True
is_ready=True

    str = 'aquire {} lorem ipsum {} another {} lorem2 {}'.format((if is_active:'activated' else ''), (if is_ready:'ready' else ''), (if is_active:'activated occurred' else ''), (if is_ready:'set to go' else ''))
</code></pre>
<p>In reality are up to 7 variables, so I try to avoid using a lot of ifs.</p>
<p>Result:</p>
<pre><code>'aquire activated lorem ipsum ready another activated occurred lorem2 set to go'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Put the rule in a function:</p>
<pre><code>def pattern(active,ready):
        rule=[ (active,'activated',''),(ready,'ready',''),(active,'activated occurred',''),(ready,'set to go','') ]
        return [ t[1] if t[0] else t[2] for t in rule ]

str= 'aquire {} lorem ipsum {} another {} lorem2 {}'
print( str.format(*pattern(True,True)) )

Out: "aquire activated lorem ipsum ready another activated occurred lorem2 set to go"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could create a mapper function and a dictionary that holds what to print based on position and truthy-value:</p>
<pre><code>is_active=True
is_ready=True

d ={ (0,True)  : "activated",
     (1,True)  : "ready",
     (2,True)  : "activated occured",
     (3,True)  : "set to go",
     (4,False) : "enough said"
   }

# use a better name - gt for shortness here so line does not need to break
def gt(pos, value): 
    # if not in dict, default to empty string
    return d.get((pos,value),"")

t = 'aquire {} lorem ipsum {} another {} lorem2 {}'

# str is a built in - dont name variables like that
text = t.format(gt(0,is_active), gt(1,is_ready), gt(2,is_active), gt(3,is_ready))
print(text)

is_active=False
text = t.format(gt(0,is_active), gt(1,is_ready), gt(2,is_active), gt(3,is_ready))
print(text)
print(gt(99,False))
print(gt(4,False))
</code></pre>
<p>Output:</p>
<pre><code># True,True
aquire activated lorem ipsum ready another activated occured lorem2 set to go
# False,True
aquire  lorem ipsum ready another  lorem2 set to go
# gt(99,False) which is not in dict

# gt(4,False)
enough said
</code></pre>
<p>Doku: <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">dict.get(key[, defaultvalue])</a></p>
</div>
<span class="comment-copy">Calculate the values of variables using if else statements before formatting them into the final string.</span>
