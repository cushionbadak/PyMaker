<div class="post-text" itemprop="text">
<p><strong>Original(2018.11.01)</strong></p>
<p>I have 3 numpy：x、y、z,created by my laser scanner(40 degree / 1 step).
I want to used them to build a 3D model.</p>
<p>I think it must should be use  <a href="https://matplotlib.org/api/tri_api.html" rel="nofollow noreferrer">matplotlib.tri</a><br/>
But I have no idea to decide triangulated data</p>
<p>Here is my data ：<a href="https://www.dropbox.com/s/d9p62kv9jcq9bwh/xyz.zip?dl=0" rel="nofollow noreferrer">https://www.dropbox.com/s/d9p62kv9jcq9bwh/xyz.zip?dl=0</a></p>
<p>And Original model：<a href="https://i.imgur.com/XSyONff.jpg" rel="nofollow noreferrer">https://i.imgur.com/XSyONff.jpg</a></p>
<p>Code：</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.tri as mtri    

x_all=np.load("x.npy")
y_all=np.load("y.npy")
z_all=np.load("z.npy")

tri = #I have no idea...

fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_trisurf(x_all,y_all,z_all,triangles=tri.triangles)
</code></pre>
<p>Thank so much.</p>
<p><strong>Update(2018.11.02)</strong></p>
<p>I try this way to decide triangulated data
<a href="https://stackoverflow.com/questions/29800749/delaunay-triangulation-of-points-from-2d-surface-in-3d-with-python">Delaunay Triangulation of points from 2D surface in 3D with python?</a></p>
<p>code:</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.tri as mtri
from stl import mesh

x_all=np.load("x.npy")
y_all=np.load("y.npy")
z_all=np.load("z.npy")

model=np.vstack((x_all,y_all,z_all))
model=np.transpose(model)
model -= model.mean(axis=0)
rad = np.linalg.norm(model, axis=1)
zen = np.arccos(model[:,-1] / rad)
azi = np.arctan2(model[:,1], model[:,0])

tris = mtri.Triangulation(zen, azi)

plt.show()
</code></pre>
<p>And my model looks like:</p>
<p><a href="https://i.stack.imgur.com/KVPHP.png" rel="nofollow noreferrer">https://i.stack.imgur.com/KVPHP.png</a></p>
<p><a href="https://i.stack.imgur.com/LLQsQ.png" rel="nofollow noreferrer">https://i.stack.imgur.com/LLQsQ.png</a></p>
<p><a href="https://i.stack.imgur.com/HdzFm.png" rel="nofollow noreferrer">https://i.stack.imgur.com/HdzFm.png</a></p>
<p>Even though it has better surface on it,but there is a big hole over my model.Any idea to fixs it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want to reduce the complexity, i.e find triangles in your files to reduce the complexity. You may look into fitting a convex hull to your points, see <a href="https://docs.scipy.org/doc/scipy/reference/spatial.html" rel="nofollow noreferrer">here</a> fore more info </p>
<p>Based on the file you provided this produces a surf plot of the object.</p>
<pre><code>from numpy import load, stack
from matplotlib.pyplot import subplots
from mpl_toolkits.mplot3d import Axes3D
from scipy import spatial


x = load("x.npy")
y = load("y.npy")
z = load("z.npy")
points = stack((x,y,z), axis = -1)

v = spatial.ConvexHull(points)
fig, ax = subplots(subplot_kw = dict(projection = '3d'))
ax.plot_trisurf(*v.points.T, triangles = v.simplices.T)
fig.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/qnBS5.png" rel="nofollow noreferrer"><img alt="output" src="https://i.stack.imgur.com/qnBS5.png"/></a></p>
</div>
<span class="comment-copy">Possibly start with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> or <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.dstack.html#numpy-dstack" rel="nofollow noreferrer"><code>dstack</code></a> to get the coords into a single array?</span>
<span class="comment-copy">Thank you for your answer , But your model has to many hole. My purpose is that  without any hole so that could transfer a stl file for 3D printer.</span>
<span class="comment-copy">What do you mean exactly with holes? Is the object supposed to not be hollow? It seems like a cap based on the raw data. If the data shouldn't be hollow you can triangulate the x,y plane for every z.</span>
<span class="comment-copy">Actually , my original model is a cylinder ( <a href="https://i.imgur.com/XSyONff.jpg" rel="nofollow noreferrer">i.imgur.com/XSyONff.jpg</a> ) .My purpose that its surface could like it.</span>
