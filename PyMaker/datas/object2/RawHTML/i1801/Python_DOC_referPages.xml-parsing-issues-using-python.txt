<div class="post-text" itemprop="text">
<p>I'm pretty new, so I'm gonna try to be explicit and pertinent enough with my question.</p>
<p>I'm trying to parse my xml file with Python, and I would like to get the "PlayerRef", the "Position" of the player, and the "Statistic". </p>
<p>When I run my code, there is no error returned into the Python Shell, but nothing happened, when (I think) I should get the parsing of my code (with the ID, the Position and the Stat of the player)</p>
<p>Here is my code :</p>
<pre><code>import os
from xml.etree import ElementTree

file_name="xml_file"
full_file=os.path.abspath(os.path.join('BYG',file_name))
dom=ElementTree.parse(full_file)

Stats=dom.findall('SoccerFeed/SoccerDocument/TeamData/PlayerLineUp/MatchPlayer')

for s in Stats:
    ID=s.find('PlayerRef').text
    Position=s.find('Position').text
    Stat=s.find('Stat').text
    print(' * {} [{}] {}'.format(ID,Position,Stat))
</code></pre>
<p>I tried a lot of differents codes, and I got the same thing, no error into the shell but, no results as well.</p>
<p>Here my xml: </p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
-&lt;SoccerFeed TimeStamp="20180518T155346+0100"&gt;
 -&lt;SoccerDocument uID="f920535" detail_id="1" Type="Result"&gt;
  +&lt;Competition uID="c24"&gt;
  -&lt;MatchData&gt;
   +&lt;MatchInfo TimeStamp="20170805T180614+0100" Period="FullTime" 
    MatchType="Regular"&gt;
   -&lt;MatchOfficial uID="o41564"&gt;
    +&lt;OfficialData&gt;
    +&lt;OfficialName&gt;
    &lt;/MatchOfficial&gt;
   +&lt;AssistantOfficials&gt;
    &lt;Stat Type="match_time"&gt;95&lt;/Stat&gt;
    &lt;Stat Type="first_half_start"&gt;20170805T161515+0100&lt;/Stat&gt;
    &lt;Stat Type="first_half_time"&gt;46&lt;/Stat&gt;
    &lt;Stat Type="first_half_stop"&gt;20170805T170023+0100&lt;/Stat&gt;
    &lt;Stat Type="second_half_start"&gt;20170805T171702+0100&lt;/Stat&gt;
    &lt;Stat Type="second_half_time"&gt;50&lt;/Stat&gt;
    &lt;Stat Type="second_half_stop"&gt;20170805T180614+0100&lt;/Stat&gt;
   -&lt;TeamData TeamRef="t149" Side="Home" Score="2"&gt;
     -&lt;Goal TimeStamp="20170805T165633+0100" uID="g149-1" Type="Goal" 
  Period="FirstHalf" Time="42" Sec="18" PlayerRef="p40720" Min="41" 
  EventNumber="1421" EventID="1618948311"&gt;
         &lt;Assist PlayerRef="p15780"&gt;p15780&lt;/Assist&gt;
      &lt;/Goal&gt;
     +&lt;Goal TimeStamp="20170805T175201+0100" uID="g149-2" Type="Goal" 
     Period="SecondHalf" Time="80" Sec="58" PlayerRef="p54782" Min="79" 
     EventNumber="2802" EventID="1632402633"&gt;
     -&lt;PlayerLineUp&gt;
       -&lt;MatchPlayer PlayerRef="p84182" Status="Start" ShirtNumber="16" 
     Position="Goalkeeper"&gt;
        &lt;Stat Type="leftside_pass"&gt;7&lt;/Stat&gt;
        &lt;Stat Type="accurate_keeper_sweeper"&gt;1&lt;/Stat&gt;
        &lt;Stat Type="accurate_pass"&gt;30&lt;/Stat&gt;
        &lt;Stat Type="rightside_pass"&gt;11&lt;/Stat&gt;
        &lt;Stat Type="attempts_conceded_ibox"&gt;3&lt;/Stat&gt;
        &lt;Stat Type="touches"&gt;44&lt;/Stat&gt;
        &lt;Stat Type="total_fwd_zone_pass"&gt;2&lt;/Stat&gt;
        &lt;Stat Type="keeper_pick_up"&gt;6&lt;/Stat&gt;
</code></pre>
<p>I have probably done something wrong inside my "for" code
how to solve this issue?
Thanks in advance for your time ad your answer</p>
</div>
<div class="post-text" itemprop="text">
<p>The '+' and '-' preceding each tag appears to be an artifact of copying from some interactive XML browsing tool. They look like common expand/collapse UI components.  It would be more helpful to have just the actual XML that is in your file.</p>
<p>The sample you posted can not be parsed, as-is, without making assumptions about the actual structure of your document.  So I assumed that the start tags shown with a preceding '+' are in fact incomplete and converted them to self-closing tags.  I then added in the necessary close tags at the end in order to be able to try your code.</p>
<p>I will show you how I approached your problem and solved it, rather than simply giving a working result.  First I reduced your program to the simplest piece that should produce expected results:</p>
<pre><code>dom=ElementTree.parse(full_file)

print( "Root", dom.getroot() )
print( dom.findall('SoccerFeed') )
</code></pre>
<p>This showed me that the file was parsed, and the root is an element named <code>SoccerFeed</code>.  It also shows that the <code>findall()</code> returned no elements.</p>
<p>Then I tried this:</p>
<pre><code>print( dom.findall('SoccerDocument') )
</code></pre>
<p>This printed a list of <code>SoccerDocument</code> elements.  Reading <a href="https://docs.python.org/3/library/xml.etree.elementtree.html?highlight=elementtree#xml.etree.ElementTree.ElementTree.findall" rel="nofollow noreferrer">the documentation for <code>findall()</code></a> confirms that it starts at the root element and searches for subelements.  Since <code>SoccerFeed</code> is not a subelement of <code>SoccerFeed</code>, it is not found.</p>
<p>Then I proceeded:</p>
<pre><code>print( dom.findall('SoccerDocument/TeamData') )
</code></pre>
<p>This didn't match anything, so I looked more carefully at the XML document.  Unless the assumptions I made (noted earlier) to make the XMl well-formed are incorrect, <code>SoccerDocument</code> contains <code>MatchData</code>, not <code>TeamData</code>.</p>
<pre><code>print( dom.findall('SoccerDocument/MatchData') )
print( dom.findall('SoccerDocument/MatchData/TeamData') )
</code></pre>
<p>The correct path to find the <code>MatchPlayer</code> elements is this:</p>
<pre><code>Stats=dom.findall('SoccerDocument/MatchData/TeamData/PlayerLineUp/MatchPlayer')
</code></pre>
<p>Then the program crashed trying to process the <code>MatchPlayer</code> elements because <code>PlayerRef</code> (and <code>Position</code>) are <em>attributes</em>, not <em>subelements</em>, of <code>MatchPlayer</code>.  According to <a href="https://docs.python.org/3/library/xml.etree.elementtree.html?highlight=elementtree#xml.etree.ElementTree.Element.get" rel="nofollow noreferrer">the documentation for <code>Element</code> objects</a>, you want to call <code>get()</code> to get the value of an attribute.</p>
<p>The solution, then is:</p>
<pre><code>Stats=dom.findall('SoccerDocument/MatchData/TeamData/PlayerLineUp/MatchPlayer')

for s in Stats:
    ID=s.get('PlayerRef')
    Position=s.get('Position')
    Stat=s.find('Stat').text
    print(' * {} [{}] {}'.format(ID,Position,Stat))
</code></pre>
</div>
<span class="comment-copy">What happens when you just remove the hyphens?</span>
<span class="comment-copy">We cannot really test anything without at least a working snippet of your XML. But perhaps you should know that (a) <code>find</code> only searches for <i>tags</i> and not <i>attributes</i>; and (b) the <code>.text</code> contents of <code>MatchPlayer</code> is all of the text inside its children; and (c) <code>s.find('Stat')</code> will return only the first item of <code>Stat</code>s.</span>
<span class="comment-copy">We need a fuller XML sample for a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> especially one with the root as namespaces can be involved which affects parsing. Right now your snippet is somewhere in middle of document which is unhelpful for us to help you.</span>
<span class="comment-copy">@usr2564301, thanks for the answer, I modified the question with a fuller XML example.</span>
<span class="comment-copy">thanks a lot, it resolved my problem and you made me  understood my mistakes and how to parse a Xml file</span>
<span class="comment-copy">You're welcome.  It would be useful to click the checkmark next to my answer to indicate that it answers your question.</span>
