<div class="post-text" itemprop="text">
<p>I wonder how to execute a complicated external command from within python?</p>
<p>It works well in linux bash command line:<br/>
$ mysqldump --single-transaction -u myusername -pmypassword mydb mytable &gt; mytable.sql</p>
<p>But it doesn't work from within python code:<br/>
subprocess.call(['mysqldump' '--single-transaction' '-u myusername' '-pmypasword' 'mydb' 'mytable' '&gt;' 'mytable.sql'])</p>
<p>What's wrong with my python code?</p>
<p>Or I have to use os.system() ??</p>
<p>Please tell me how it can work from within python code, thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>&gt;</code> isn't a command-line argument to the program. <code>&gt;</code>, in this context, is actually a shell output redirection operator. It gets processed by the shell itself, not by the <code>mysqldump</code> program.</p>
<p>Python's <code>subprocess</code> knows nothing about the shell, so it can't understand shell operators such as <code>&gt;</code>. It just tries to give <code>&gt;</code> and <code>mytable.sql</code> to <code>mysqldump</code> as arguments, which <code>mysqldump</code> also does not understand, causing an error.</p>
<p>What you need to do is set up your subprocess to redirect its output. The way to do that in Python is:</p>
<pre><code>with open('mytable.sql', 'w') as f:
  subprocess.call(['mysqldump',
                   '--single-transaction', 
                   '-u',
                   'myusername',
                   '-pmypasword', 
                   'mydb',
                   'mytable'], stdout=f)
</code></pre>
<p>The <code>stdout</code> argument to <code>subprocess.call</code> allows you to direct your subprocess's output wherever you like, just as the <code>&gt;</code> shell operator does.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks to be a syntax error,</p>
<pre><code>subprocess.call(['mysqldump' '--single-transaction' '-u' 'myusername' '-pmypasword' 'mydb' 'mytable' '&gt;' 'mytable.sql'])
</code></pre>
<p>Missing the <code>'-u' 'myusername'</code> quote separation.</p>
<p>Also, <code>subprocess.run</code> replaces <code>subprocess.call</code> in version &gt;= 3.5.  Check <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess#call-function-trio" rel="nofollow noreferrer">python subprocess.call API deprecation</a>
This should work for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an example of executing complicated external command from within python:</p>
<p><a href="https://github.com/yokawasa/azure-shell" rel="nofollow noreferrer">https://github.com/yokawasa/azure-shell</a></p>
<p>Azure-shell is an iteractive Azure CLI 2.0 commandline interface that it internally us subprocess</p>
<pre><code>import subprocess
full_cmd = "external command"
p = subprocess.Popen(full_cmd, shell=True, env=self._env)
p.communicate()
</code></pre>
<p>An external command here is az command (azure-cli 2.0) which has lots of commands options and parameters, which thus can be very complicated. Therefore, azure-shell support auto-completion of both command options and parameters for the azure-cli that helps its users to save time for checking azure cli command reference or typing 'az  -h'. To achieve the auto-completion capabilities, it leverage python prompt toolkit</p>
<p><a href="https://github.com/jonathanslenders/python-prompt-toolkit" rel="nofollow noreferrer">https://github.com/jonathanslenders/python-prompt-toolkit</a></p>
<p>Hope it would help</p>
</div>
<span class="comment-copy">Sir, your solution is totally correct, thank you from heart!</span>
<span class="comment-copy">I'm glad to help! If my answer has been helpful, please upvote and accept it :)</span>
<span class="comment-copy">Hi Pedro, I tried upvoting quite a few times, but always ended up with failures, weird! Did I do something wrong?</span>
<span class="comment-copy">Gotcha, stackoverflow says that my vote will be recorded but not displayed publicly because I am a newbie here, my reputation value is less than 15 points. INTERESTING!</span>
<span class="comment-copy">No, after correcting this typo, it still doesn't work</span>
<span class="comment-copy">You are right, it doesn't work, my error.  Pedro is correct with the redirect to <code>stdout</code>.  The deprecated <code>subprocess.call</code> and typo still applies.</span>
<span class="comment-copy">I don't want to import more complicated thing for this simple requirement, os.system() is much easier and it's a built-in function. Thanks anyway.</span>
