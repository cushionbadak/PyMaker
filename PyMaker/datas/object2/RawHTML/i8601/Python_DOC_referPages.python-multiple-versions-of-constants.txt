<div class="post-text" itemprop="text">
<p>I am writing a program in Python 3 to work with several devices. And I have to store constants for each device. Some constants are general for all devices and permanently fixed, but some other ones are different from version to version depending on the firmware version of the devices. I have to store constants for all versions, not only for the last one. Tell me please the Pythonic way to define constants for different devices and multiple versions of them.</p>
<p>My current solution looks like this:</p>
<pre><code>general = {
    'GENERAL_CONST_1': 1,
    'GENERAL_CONST_2': 2,
    ...
    'GENERAL_CONST_N': N
}


device_1 = dict()
device_1[FIRMWARE_VERSION_1] = {
    'DEVICE_1_CONST_1': 1,
    'DEVICE_1_CONST_2': 2,
    ...
    'DEVICE_1_CONST_N': N
}
device_1[FIRMWARE_VERSION_1].update(general)

device_1[FIRMWARE_VERSION_2] = {
    'DEVICE_1_CONST_1': 1,
    'DEVICE_1_CONST_2': 2,
    ...
    'DEVICE_1_CONST_N': N
}
device_1[FIRMWARE_VERSION_2].update(general)


device_2 = dict()
device_2[FIRMWARE_VERSION_1] = {
    'DEVICE_2_CONST_1': 1,
    'DEVICE_2_CONST_2': 2,
    ...
    'DEVICE_2_CONST_N': N
}
device_2[FIRMWARE_VERSION_1].update(general)

device_2[FIRMWARE_VERSION_2] = {
    'DEVICE_2_CONST_1': 1,
    'DEVICE_2_CONST_2': 2,
    ...
    'DEVICE_2_CONST_N': N
}
device_2[FIRMWARE_VERSION_2].update(general)
</code></pre>
<p>Thank you in advance! Or, if you could point me in the direction where I can read about the above, I will be grateful for this too.</p>
<p><strong>UPD1:</strong></p>
<p>Thanks to @languitar I decided to use one of INI/JSON/YAML/TSON... format. For example, formats supported in library <a href="https://github.com/ssato/python-anyconfig" rel="nofollow noreferrer">python-anyconfig</a>. Format INI (proposed by @languitar <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">configparser</a>) looks good for my purposes (also TSON seemed interesting), but, unfortunately, both of them don't support hex value. I was very surprised. But all my constants should have hex format. And then I decided try YAML format. Now file with constants look like this:</p>
<pre><code># General consts for all devices and all versions
general: &amp;general
    GENERAL_CONST_1: 1
    GENERAL_CONST_2: 2
    ...
    GENERAL_CONST_N: N

# Particular consts for device_1 for different firmware version
device_1: &amp;device_1
    &lt;&lt;: *general
    # General consts for device_1 and all firmware versions
    DEVICE_1_CONST_1: 1
device_1:
    FIRMWARE_VERSION_1:
        &lt;&lt;: *device_1
        DEVICE_1_CONST_2: 2
        ...
        DEVICE_1_CONST_N: N
    FIRMWARE_VERSION_2:
        &lt;&lt;: *device_1
        DEVICE_1_CONST_2: 2
        ...
        DEVICE_1_CONST_N: N

# Particular consts for device_2 for different firmware version
device_2: &amp;device_2
    &lt;&lt;: *general
    # General consts for device_2 and all firmware versions
    DEVICE_1_CONST_1: 1
device_2:
    FIRMWARE_VERSION_1:
        &lt;&lt;: *device_2
        DEVICE_1_CONST_2: 2
        ...
        DEVICE_1_CONST_N: N
    FIRMWARE_VERSION_2:
        &lt;&lt;: *device_2
        DEVICE_1_CONST_2: 2
        ...
        DEVICE_1_CONST_N: N
</code></pre>
<p>But I am not sure, whether this is the right way to store constants for devices and all their firmware versions</p>
</div>
<div class="post-text" itemprop="text">
<p>Just change your names to all capital letters</p>
<p>like <code>GENERAL, DEVICE_1, etc</code></p>
</div>
<span class="comment-copy">Maybe your constants are not constant at all and what you really need is a device-specific configuration, e.g. using the <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer"><code>configparser</code></a> module.</span>
<span class="comment-copy">@languitar, many thanks for your answer! It seems like an interesting solution for me. I will try to implement it now.</span>
<span class="comment-copy">@languitar, I haven't mentioned, but I should store constants in hexadecimal format. Unfortunately, <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">configparser</a> doesn't support it, as I understand. But I tried similar way (YAML format) and I accordingly updated my question.</span>
<span class="comment-copy">You could just put the hex values into the config as strings and then parse them afterwards to numbers. Not the nicest things, but maybe it works. Another alternative could be <a href="http://www.voidspace.org.uk/python/configobj.html" rel="nofollow noreferrer">ConfigObj</a>.</span>
<span class="comment-copy">Thank you, but it's not what I need. If I had to store several common consts I chose this way, but the difficulty is in different consts for different devices and different firmware.</span>
