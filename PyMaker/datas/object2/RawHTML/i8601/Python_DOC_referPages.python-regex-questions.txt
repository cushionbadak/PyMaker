<div class="post-text" itemprop="text">
<p>I have a regular expression that gets some numbers after some text</p>
<pre><code>num_output = re.compile(r'only_numbers=([0-9]*)')
print(get_numbers.findall(f1))
</code></pre>
<p>The output I get is correct.  The string I am reading has something like </p>
<pre><code>only_numbers = 123456789
</code></pre>
<p>I capture the <code>123456789</code>, but when I output to the screen I get the following:</p>
<pre><code>['123456789']
</code></pre>
<p>Is there anyway to remove "['" and "']" from my output.  </p>
<pre><code>with open(filetoread) as f1:
f2 = f1.read()
num_output = re.compile(r'only_numbers=([0-9]*)')
</code></pre>
<p>Thanks for any guidance.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>re.findall</code> keeps reapplying <code>re.search</code> though the string and returns a list of the matches found. To get one, do the search yourself. Notice the case where nothing was matched.</p>
<pre><code>num_output = re.compile(r'only_numbers=([0-9]*)', flags=re.MULTILINE)
try:
    num = num_output.search(f1).group(1)
except AttributeError:
    num = 'not found'
print(num)
</code></pre>
<p>In your file example, if the file is large you may benefit from checking it line by line so that you don't put all of it in memory at once. We can use <code>itertools.dropwhile</code> to drop lines until the regex matches and using the first match object that comes back.</p>
<pre><code>import re
import itertools

num_output = re.compile(r'only_numbers=(\d*)')

with open('test.txt') as f1:
    try:
        num = next(itertools.dropwhile(lambda m: not m,
            map(num_output.search, f1))).group(1)
    except StopIteration:
        num = 'not found'

print(num)
</code></pre>
</div>
<span class="comment-copy">Because that is <i>exactly</i> what <code>findall</code> returns. Per the <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">documentation</a>: "Return all non-overlapping matches of pattern in string, <i>as a list of strings.</i>". So you just have to handle the result as a list and go from there.</span>
<span class="comment-copy">As idjaw said it returns a string list, so if you're expecting <code>findall</code> to return all the numbers in the file, then you'd have to iterate through the list probably with a for each loop and print each element.</span>
<span class="comment-copy">I have added the following f = get_numbers.findall(f1) print(f[0]) Is there a better way to write what I am trying to achieve? I am only wanting to bring back the numbers as plain text.  Thanks</span>
<span class="comment-copy">Your regex doesn't match your example string... note the whitespace surrounding the equal sign. Can you tidy that up?</span>
