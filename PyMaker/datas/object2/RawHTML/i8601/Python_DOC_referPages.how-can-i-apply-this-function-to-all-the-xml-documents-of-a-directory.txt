<div class="post-text" itemprop="text">
<p>I have this function:</p>
<pre><code>def parse(filename):
    tweets=[]
    with open(filename,'r') as filename:
        tree = ET.parse(filename)
        root = tree.getroot()
        for document in root.iter('document'):
            txt=document.text
            txt=txt.replace("![CDATA[",'')
            txt=txt.replace("]]",'')
            txt=txt.strip()
            tweets.append(document.text)
    return ' '.join(tweets)
</code></pre>
<p>Which parse the content of an xml document. How can I apply it to all the xml documents inside a directory and return them into a nested list:</p>
<p><code>[[content xml doc 1], [content xml doc 2],...,[content xml doc n]]</code></p>
<p>I tried this:</p>
<pre><code>for pathname in glob.glob(os.path.join('../dir', '*.xml')):
    with open(pathname, 'r') as xmlfile:
        filename = os.path.basename(pathname)
</code></pre>
<p>However, it is not returning anything. Could anybody explain how to do this correctly?.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> which yields <code>(dirpath, dirnames, filenames)</code> tuples recursively walking the directory:</p>
<pre><code>for parent, directories, files in os.walk('dir'):
    for filename in files:
        if not filename.endswith('.xml'):
            continue
        pathname = os.path.join(parent, filename)
        try:
            parse(pathanme)
        except ET.ParseError:
            # Skip invalid xml
            pass
</code></pre>
</div>
<span class="comment-copy">Are you sure you got the directory right? That looks like it should work.</span>
<span class="comment-copy">Yes, its the right one</span>
<span class="comment-copy">@alonsopg, You can use <code>str.endswith</code> to check filename extension. I added <code>if ...: continue</code> to the code.</span>
<span class="comment-copy">@alonsopg, Change <code>dir</code> in <code>os.walk('dir')</code> according to your directory structure. <code>os.walkdir('.')</code> if you want to traverse current directory.</span>
<span class="comment-copy">@alonsopg, <code>try ... except ...</code> to filter out malformed xml files.</span>
<span class="comment-copy">@alonsopg, Which part? <code>try .. except ..</code> ? I don't know which exception <code>parse</code> raise. So I can't. (Of course, I can use <code>except:</code>. But it's not a good style)</span>
<span class="comment-copy">@alonsopg, Do you mean <code>lxml.etree.ParseError</code>.? or <code>xml.etree.ElementTree.ParseError</code> or another?</span>
