<div class="post-text" itemprop="text">
<p>I am trying change a Label in a Class with a function.</p>
<pre><code>class Fenster2(tk.Frame):
    def __init__(self, parent,controller):
        tk.Frame.__init__(self,parent)
        label_fluss1 = tk.Label(self, width=9)
        label_fluss1.grid(row=3,column=2)
        label_fluss2 = tk.Label(self, width=9)
        label_fluss2.grid(row=4,column=2)

        GPIO.add_event_detect(27,GPIO.RISING,callback=hochzaehlen1)
        GPIO.add_event_detect(22,GPIO.RISING,callback=hochzaehlen2)
        GPIO.add_event_detect(23,GPIO.FALLING,callback=interrupt)         

    def hochzaehlen1(callback):
        global ticks1
        ticks1 +=1
        return ticks1

    def hochzaehlen2(callback):
        global ticks2
        ticks2 +=1
        return ticks2

    def interrupt(callback):
        global ticks1
        global ticks2
        global fluss1    
        fluss1=ticks1/582.0 # liter/min
        fluss2=ticks2/354.0 # liter/min
        ticks1=0
        ticks2=0
        Fenster2.label_fluss1.config(text=str(fluss1))                     
        pb_fluss1.config(value=fluss1)
        label_fluss2.config(text=str(fluss2))                    
        pb_fluss2.config(value=fluss2)
</code></pre>
<p>Now, when <code>interrupt</code> tries to configure <code>label_fluss1</code> it says <code>Fenster2</code> has no instance <code>label_fluss1</code>. Anyone knows how to make this work?
I know that I will get the same problem with <code>label_fluss2</code> and both progressbars.
Any advice is much appreciated.
Greetings Sebastian</p>
</div>
<div class="post-text" itemprop="text">
<p>Believe you need to use self on those variables when creating a class. That could be the issue causing this. so in your <strong>init</strong>() you would have:</p>
<pre><code>self.label_fluss1 = tk.Label()
</code></pre>
<p>You would do this for all the variables in init being defined and your methods.
As for the class itself goes, why are you making all your methods children of callback that doesnt exist? </p>
<p>I would read up on creating classes more on <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html</a> to get a better understanding of instance variables, global, and local. The scope in which these reside are very important for being used. If the class is created correctly, there is no reason that when you create the object that it should not have the fluss1 attribute. As it stands now though, you need to define self before these variables. Then go from there structuring your class properly to call these attributes as needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing a basic understanding of how classes work. You need to make the variable you want to update an instance variable, and then call it the same way: </p>
<pre><code>class Fenster2(tk.Frame):
    def __init__(self, parent,controller):
        tk.Frame.__init__(self,parent)
        self.label_fluss1 = tk.Label(self, width=9)
        self.label_fluss1.grid(row=3,column=2)
        # etc... 

    def interrupt(self):
        #etc ...
        self.label_fluss1.config(text=str(fluss1))
</code></pre>
<p>I recommend you find a basic tutorial on classes before you continue, since GUIs rely heavily on them. </p>
</div>
<span class="comment-copy">Are you familiar with the distinction between global variables, local variables, and instance variables?</span>
<span class="comment-copy">Try to understand how to use a class first</span>
