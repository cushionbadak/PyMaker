<div class="post-text" itemprop="text">
<p>So, currently I'm writing a "Member Database" program for a client. The program needs to be able to put all inputted info into a text file that can be read at any time. Currently, I'm working on a prototype-type thing, that currently is not indicative of the final product. </p>
<pre><code>import os

def add_member():
    f = open("memberdatabase.txt","a+")
    member_name = input('Input Member Name\n')
    member_age = int(input('Input Member Age\n'))
    member_ID = int(input('Input Member ID\n'))
    member_job = input('Input Member Job\n')

    dicto = {member_name:{'Age':member_age,
                          'ID':member_ID,
                          'Job':member_job}}
    strdicto = str(dicto)
    f.write(strdicto)
    menu()

def read_data():
    f = open("memberdatabase.txt","r")
    contents = f.read()
    print(contents)
    input('Press enter to return to menu')
    menu()

def menu():
    seperator()
    x = int(input('Enter an option\n'
                  '[1] Add a member\n'
                  '[2] Read Data\n'))
    if x == 1:
        add_member()
    elif x == 2:
        read_data()
    else:
        print('Not an option, retry!')
        menu()

menu()
</code></pre>
<p>After the user has finished inputting the information, it needs to be written and then return to the menu. Currently, it just won't write into the text file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You never <code>f.close()</code> the file. You could use auto-closing with the <code>with</code> statement:</p>
<pre><code>with open('...', 'a+') as f:
    ...
    # f.close() is called automatically at the end of this block.
</code></pre>
<p>By the way: same with reading it: Put the reading in a <code>with open() as f</code> block.</p>
</div>
<div class="post-text" itemprop="text">
<p>When I run your code with a file named memberdatabase.txt in the same folder as the py script it has no issues saving the text to the file. You just have to make sure to close the file when you are done. This is what it should look like:</p>
<pre><code>f = open("memberdatabase.txt","a+")
member_name = input('Input Member Name\n')
member_age = int(input('Input Member Age\n'))
member_ID = int(input('Input Member ID\n'))
member_job = input('Input Member Job\n')

dicto = {member_name:{'Age':member_age,
                          'ID':member_ID,
                          'Job':member_job}}
strdicto = str(dicto)
f.write(strdicto)
f.close()
</code></pre>
<p>This is the output I get in the file after adding two members:;</p>
<pre><code>{'Peter': {'Age': 26, 'ID': 21, 'Job': 'Manager'}}{'Bob': {'Age': 34, 'ID': 1209, 'Job': 'Manager'}}
</code></pre>
<p>I was able to have the file closed and then opened again and the text was still there. Hope this helps so you can implement it in your code now.</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Use <strong><code>f.flush()</code></strong> when you want to force your program to write into the
file.</li>
<li>Always use <strong><code>f.close()</code></strong> when you are done with reading / writing
your file.</li>
</ul>
</div>
<span class="comment-copy">Maybe you'd like to be a bit more precise about which part of the code is not working, instead of dumping the whole program and let us figure it out.</span>
<span class="comment-copy">You didn't close the file. When you are writing into files, the changes will not be saved until you close <code>f.close()</code>. Better way to work with files is to use <code>with</code>. Check out the docs: <a href="https://docs.python.org/3/whatsnew/2.6.html#pep-343-the-with-statement" rel="nofollow noreferrer">docs.python.org/3/whatsnew/2.6.html#pep-343-the-with-statement</a></span>
<span class="comment-copy">You should add an option <code>[3] Quit program</code> ;-)</span>
<span class="comment-copy">Thank you! I didn't realize the file had to be closed at the end in order for it to work.</span>
