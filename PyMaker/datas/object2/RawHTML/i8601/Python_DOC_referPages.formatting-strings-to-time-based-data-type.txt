<div class="post-text" itemprop="text">
<p>I have a list of strings that represent different timed race results of varying time intervals (ss:SS, mm:ss.SS, hh:mm:ss). </p>
<p>I would like to standardize the time intervals in a common format that supports all of these formats, and is able to be handled across languages.</p>
<p>I will want to do calculations on these times, store them in a database, as well as convert them back to the original string to be displayed</p>
<p>My current thoughts are the following </p>
<p><code>myTimespans = [ "12.04", "1:00.42", "4:19:27" ]</code> </p>
<p>produces something like </p>
<pre><code>myOutput = [ (0,0,12,04),(0,1,0,42),(4,19,27,0) ]

 # or in datetime

myOutput = [ 00:00:12.04, 00:01:00.42, 4:19:27.00 ]

 # or in milliseconds

 myOutput = [ 12040, 60042, 15582000 ]
</code></pre>
<p>Not sure which is the most practical to implement, and how I should write a python script to convert the strings.</p>
<p>Any tips / suggestions appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>datetime</code> or <code>dateutil</code> library to parse them into datetime format. I just use regular expression to clean string first.</p>
<pre><code>import re
from dateutil import parser

d = ["12.04", "1:00.42", "4:19:27"]
d_sub = [re.sub('\.', ':', d_) for d_ in d]
print([parser.parse(d_) for d_ in d_sub]) # list in datetime format
</code></pre>
<p>As mentioned in the comment, question should be more specific.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>import datetime</code></a>!</p>
<p>Specifically, </p>
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.datetime.strptime()</code></a></p>
<p><a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">strftime() and strptime() Behavior</a></p>
</div>
<span class="comment-copy">I have a tip:  Be specific in your requirements.</span>
<span class="comment-copy">ok thanks @titipat</span>
<span class="comment-copy">No problem @Zach. Hope it helps a bit.</span>
<span class="comment-copy">Thanks Charlie! My previous question was a little unclear would you still recommend datetime.datetime.strptime()?</span>
<span class="comment-copy">I'm still a little confused. You'd have to define different <code>strptime</code> formats conforming to each item's format in <code>myTimespans</code>, but yes, I'd still recommend it. Be sure to save the <code>strptime</code> formats you used so you can reuse them in <code>strftime</code></span>
<span class="comment-copy">It'd be a good way to standardize your calculations you have to do. (Also an upvote never hurt nobody :) )</span>
