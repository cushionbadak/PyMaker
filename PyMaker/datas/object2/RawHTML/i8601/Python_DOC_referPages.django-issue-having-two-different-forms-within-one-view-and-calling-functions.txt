<div class="post-text" itemprop="text">
<p>I have two different forms which I want to display in one view. When I have something like the following then the form will go through and the information will successfully be updated...</p>
<pre><code>form1 = Form1(request.POST, request.FILES, instance=profile)
form2 = Form2(request.POST, instance=list)
if form1.is_valid():
    form1.save()
    return redirect('/dashboard/')
else:
    return render(request, 'detail-edit.html', {'form1':form1,'form2':form2})
</code></pre>
<p>However when I change the if statement to include the second form:</p>
<pre><code>if form1.is_valid() and form2.is_valid():
    form1.save() and form2.save()
    return redirect('/dashboard/')
</code></pre>
<p>then this doesn't update any of the information for the models.</p>
<p>Is it possible to call is_valid() / save() with two forms at the same time? 
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.djangoproject.com/en/1.10/ref/models/instances/#django.db.models.Model.save" rel="nofollow noreferrer"><code>Model.save</code></a> returns nothing; <code>None</code>. The None is falsy value when used as a predicate.</p>
<p>So, <code>form2.save()</code> is not called because of short-circuit. See <a href="https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer"><code>and</code>, <code>or</code> operator documentation</a>.</p>
<pre><code>&gt;&gt;&gt; def save_a():
...     print('a')
...     # return None
... 
&gt;&gt;&gt; def save_b():
...     print('b')
...     # return None
... 
&gt;&gt;&gt; save_a() and save_b()    # with `and`
a

&gt;&gt;&gt; save_a()    # without `and`
a
&gt;&gt;&gt; save_b()
b
</code></pre>
<p>You need to replace the following line:</p>
<pre><code>form1.save() and form2.save()
</code></pre>
<p>with:</p>
<pre><code>form1.save()
form2.save()
</code></pre>
</div>
