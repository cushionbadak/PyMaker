<div class="post-text" itemprop="text">
<p>link = <a href="http://fortune.com/worlds-most-admired-companies/2016/" rel="nofollow noreferrer">http://fortune.com/worlds-most-admired-companies/2016/</a></p>
<p>So, I want all the 'href' that are inside a div with a known 'class name'
I could not get away with this:</p>
<pre><code>import bs4 as bs
import urllib.request

raw = urllib.request.urlopen('http://fortune.com/worlds-most-admired-companies/2016/')
soup = bs.BeautifulSoup(raw, 'lxml')

listdiv = soup.find('div', clsss_="company-franchise-result-content current")

for url in listdiv.find_all('a'):
    print(url.get('href'))ï»¿
</code></pre>
<p>I have previously used:</p>
<pre><code>for a in soup.find_all('a'):
    print(a.get('href'))
</code></pre>
<p>It <strong>works</strong> but only returns 10 items, from apple to general electric. even when I feed it the link I get when I click the "View the Full list" button.
I have 0 idea of how JSON works but it looks this is heading that way.</p>
</div>
<div class="post-text" itemprop="text">
<p><em>The complete data is actually there, in the HTML</em>. It is just inside a JavaScript object inside a <code>script</code> tag. You can locate this <code>script</code> tag, get it's text, extract the JSON string, load it into a Python data structure with <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads()</code></a> and get the desired data:</p>
<pre><code>In [1]: from bs4 import BeautifulSoup

In [2]: import json

In [3]: import re

In [4]: url = "http://fortune.com/worlds-most-admired-companies/2016/"

In [5]: response = requests.get(url)

In [6]: soup = BeautifulSoup(response.content, "lxml")   

In [7]: pattern = re.compile(r"var fortune_wp_vars = ({.*?});", re.DOTALL | re.MULTILINE)

In [8]: script = soup.find("script", text=pattern)   

In [9]: data = json.loads(pattern.search(script.get_text()).group(1))  

In [10]: companies = data["bootstrap"]["franchise"]["filtered_sorted_data"]

In [11]: for company in companies:
    ...:     print(company["title"])
    ...:     
Apple
Alphabet
...
Yum Brands
ZF Friedrichshafen
Zurich Insurance Group
</code></pre>
</div>
<span class="comment-copy">Nice, what documentation can I see to instead of getting the title get the link for each company</span>
<span class="comment-copy">@Trotus just explore what other keys the <code>company</code> dictionary has.</span>
