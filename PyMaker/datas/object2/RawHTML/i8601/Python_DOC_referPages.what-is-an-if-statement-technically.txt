<div class="post-text" itemprop="text">
<p>Is an if statement an expression or simply a statement? And can someone define the two? I've heard it as a conditional expression, but that just confuses me as to why it's generally called an if statement rather than an expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are confusing two different things. Python code is made up of statements. Statements <em>can</em> contain expressions, and expressions produce a result. Expressions can be composed out of more expressions, expressions can't contain statements.</p>
<p>There is such a thing as an <a href="https://docs.python.org/3/reference/compound_stmts.html#the-if-statement" rel="nofollow noreferrer"><code>if</code> statement</a>. An <code>if</code> statement controls the flow of the program (different suites are executed based on the outcome of a test expression):</p>
<pre><code>if sometest:
    # execute if sometest is true
elif someothertest:
    # execute if sometest was false and someothertest is true
else:
    # execut if both sometest and someothertest are false
</code></pre>
<p>There is also such a thing as a <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="nofollow noreferrer">conditional expression</a>; this produces a result, based on the constituent components (one of two expressions contained within is evaluated and its result returned, based on the condition expression in the middle):</p>
<pre><code># will produce either the outcome of true_expression or false_expression
true_expression if sometest else false_expression
</code></pre>
<p>These two concepts are distinct; one is a statement (a top-level component of the language), the other an expression (so produces a result). They have closely related syntax (both use <code>if</code> as a keyword, the keyword <code>else</code> is required in a conditional expression, optional in an <code>if</code> statement), both evaluate a condition (<code>if</code> statements can evaluate more), but that's where their relationship ends.</p>
<p>Or, to emphasise the differences some more:</p>
<ul>
<li>The suites in an <code>if</code> statement can hold more statements. You can use an <code>if</code> statement to pick between two function definitions, or two classes, or choosing what to import. You can't do that in an expression, because an expression can't contain a statement.</li>
<li>A conditional expression can be part of a larger expression, while you can't put statements in an expression. So you can use a conditional expression to fine-tune an expression.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Example of an if statement</p>
<pre><code>if x &gt; 6:
    a = 3
else:
    a = 4
</code></pre>
<p>Example of a conditional expression: the part right from the =</p>
<pre><code>a = 3 if x &gt; 6 else 4
</code></pre>
<p>These are two completely different language constructs, but here they achieve the same.</p>
<p>The conditional expression here is more compact than the if-statement.
But if conditional expressions get more complicated, they tend to become hard to read and debug, e.g.:</p>
<pre><code>    x = (
            self.intervalWidthNode.old + self.parent.phaseModule.deltaXyNode.new [0] / self.parent.phaseModule.pixelsPerUnitXyNode.new [0]
        if (
            isinstance (self.imageFactoryNode.new, mk.AllColorsImageFactory) and
            self.parent.phaseModule.deltaXyNode.triggered and
            self.parent.phaseModule.inTransferAreaXyNode.new == (False, False)
        ) else
            self.imageFactoryNode.new.intervalWidth
        if (
            isinstance (self.imageFactoryNode.new, mk.AllColorsImageFactory) and
            self.imageFactoryNode.touched
        ) else
            self.intervalWidthNode.old
    )
</code></pre>
</div>
<span class="comment-copy">An if statement <i>is a statement</i>. A conditional expression (which is not the same thing) is an <i>expression</i>. Hence the names...</span>
<span class="comment-copy">An <code>if statement</code> is used with a <code>conditional expression</code></span>
<span class="comment-copy">@byxor No, that is wrong.</span>
<span class="comment-copy">@byxor It is still wrong. An if-statement doesn't evaluate to anything, it controls the flow of the program. A conditional expression <i>evaluates to something</i>, that is why it is an <i>expression</i>.</span>
<span class="comment-copy"><a href="https://www.quora.com/Whats-the-difference-between-a-statement-and-an-expression-in-Python/answer/Anders-Kaseorg?srid=p3SU" rel="nofollow noreferrer">quora.com/â€¦</a> hope this help.</span>
<span class="comment-copy">No, they don't achieve the same. They both test a condition, but a statement alters program flow, an expression produces a value. That's a big difference! Statements don't produce values, expressions don't alter flow.</span>
<span class="comment-copy">I meant that in this particular example, functionally they achieve the same. But indeed the difference you mention is the crux of the matter.</span>
<span class="comment-copy">@MartijnPieters while I agree that could come across more clearly in this answer, I believe what was being said is that both examples have the same effect <i>on <code>a</code></i>.</span>
<span class="comment-copy">@juanpa.arrivillaga But you can't use a conditional expression to pick between statements to be executed, for example, nor can you use an <code>if</code> statement inside an expression. That Jacques added an assignment statement to both examples in my mind muddies the waters more.</span>
<span class="comment-copy">@MartijnPieters Well, I hoped this would be clear: "Example of a conditional expression: the part right from the =". It seems somewhat artificial to me to use an expression without assigning the result to anything, or e.g. use it as a parameter.</span>
