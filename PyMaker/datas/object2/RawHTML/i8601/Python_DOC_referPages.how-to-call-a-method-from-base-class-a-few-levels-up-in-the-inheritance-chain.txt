<div class="post-text" itemprop="text">
<p>Assume we have following inheritance chain:</p>
<pre><code>class Base:
    def method(self):
        # …

class Derived1(Base):
    def method(self):
        # …

class Derived2(Derived1):
    pass

class Derived3(Derived2):
    def method(self):
        # …
</code></pre>
<p>The problem: I would like to somehow define <code>method</code> in <code>Derived3</code> so that it calls itself from <code>Base</code>.</p>
<p>Normally I would just write:</p>
<pre><code>class Derived3(Derived2):
    super().method()
</code></pre>
<p>But this would call <code>method</code> from <code>Derived1</code>, which is exactly what I want to avoid. I want to call <code>method</code> from <code>Base</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest approach is to call the <code>Base</code> method directly, passing <code>self</code> explicitly:</p>
<pre><code>Base.method(self)
</code></pre>
<p>If the goal is to skip to "whatever is after some known bad super class in the MRO" though, you can use <code>super</code> with explicit arguments to act as if it was called from the "bad super class" so it moves to "whatever comes next":</p>
<pre><code>class Derived3(Derived2):
    def method(self):
        # Call method from next class after Derived1 in MRO, which happens to be Base
        # Using super means the method is bound, so self passed implicitly to method
        super(Derived1, self).method()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can explicitly call a member of the superclass, simply passing <code>self</code> as the first argument:</p>
<pre><code>Base.method(self)
</code></pre>
<p>Complete example:</p>
<pre><code>class Derived3(Derived2):
    def method(self):
        Base.method(self)
</code></pre>
<p>This will execute <code>Base.method</code> on the instance specified by <code>self</code>, which is passed to <code>Derived3.method</code> automatically when it is accessed <a href="https://docs.python.org/3/library/stdtypes.html#methods" rel="nofollow noreferrer">through an instance</a>.</p>
</div>
