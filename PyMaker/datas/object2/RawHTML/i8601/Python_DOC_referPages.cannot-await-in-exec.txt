<div class="post-text" itemprop="text">
<p>hi im trying to make my discord bot do what im typing im my discord client and i want to use exec() + this is just to test and experiment so it doesnt matter if it may be unsecure.</p>
<p>part of my code:</p>
<pre><code>import discord

client = discord.Client()

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith('2B: '):
        exec(message.content[4:])   # &lt;--- here is the exec()
    .
    .
    .
</code></pre>
<p>but this is the error when i type,</p>
<pre><code>2B: await client.send_message(message.channel, 'please stay quiet -.-')
</code></pre>
<p>error:</p>
<pre><code>Ignoring exception in on_message
Traceback (most recent call last):
  File "C:\Users\Shiyon\AppData\Local\Programs\Python\Python36\lib\site-packages\discord\client.py", line 307, in _run_event
    yield from getattr(self, event)(*args, **kwargs)
  File "C:\Users\Shiyon\Desktop\dm_1.py", line 12, in on_message
    exec(message.content[4:])
  File "&lt;string&gt;", line 1
    await client.send_message(message.channel, 'please stay quiet -.-')
               ^
SyntaxError: invalid syntax
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe this may be your problem:</p>
<blockquote>
<p>Be aware that the return and yield statements may not be used outside of function definitions even within the context of code passed to the exec() function</p>
</blockquote>
<p>from <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html</a></p>
<p>This should work better:</p>
<pre><code>await eval(input)
</code></pre>
<p>If you want to be able to use non coroutines too you could check before awaiting the return of the eval.</p>
<p>Here is a snippet from <a href="https://github.com/Rapptz/RoboDanny/blob/master/cogs/admin.py#L53" rel="nofollow noreferrer">Rapptz's bot</a> which seems to do something like what you wanted:</p>
<pre><code>@commands.command(pass_context=True, hidden=True)
@checks.is_owner()
async def debug(self, ctx, *, code : str):
    """Evaluates code."""
    code = code.strip('` ')
    python = '```py\n{}\n```'
    result = None

    env = {
        'bot': self.bot,
        'ctx': ctx,
        'message': ctx.message,
        'server': ctx.message.server,
        'channel': ctx.message.channel,
        'author': ctx.message.author
    }

    env.update(globals())

    try:
        result = eval(code, env)
        if inspect.isawaitable(result):
            result = await result
    except Exception as e:
        await self.bot.say(python.format(type(e).__name__ + ': ' + str(e)))
        return

    await self.bot.say(python.format(result))
</code></pre>
<p>Explanation edit:</p>
<p>The <code>await</code> keyword only works in context because it does some magic with suspending execution in the loop.</p>
<p>The <code>exec</code> function always returns <code>None</code> and loses the return value of whatever statement it executed. By contrast the <code>eval</code> function returns the return value of its statement.</p>
<p><code>client.send_message(...)</code> returns an awaitable object which needs to be awaited in context. By using <code>await</code> on the return of the <code>eval</code>, we can do this easily and by checking if it's awaitable first we can also execute non coroutines.</p>
</div>
<span class="comment-copy">no. in this case the error will change to: <code>TypeError: object NoneType can't be used in 'await' expression</code> @Blimmo</span>
<span class="comment-copy">@shiyonsufa you should probably use <code>eval</code> rather than <code>exec</code>. Since everything in python returns something, it isn't really much different but allows you to deal with the return value for things like await.</span>
<span class="comment-copy">now this is complicated... but okay @Blimmo</span>
<span class="comment-copy">and eval result --&gt; <code>await client.send_message(message.channel, '... yes, whats the matter?')                ^ SyntaxError: invalid syntax</code></span>
<span class="comment-copy">@shiyonsufa don't type await when you use the command. Have a read of the explanation I added to the answer if you're still confused. The try block of the snippet is all you really need btw, the rest is for error handling and the like</span>
