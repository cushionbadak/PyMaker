<div class="post-text" itemprop="text">
<p>I am running an executable using Popen, once the executable is running and the cmd is open I would then like to pipe two key strokes (numbers) sequentially. As the cmd prompts the user as seen in this screenshot:</p>
<p><a href="https://i.stack.imgur.com/89gfj.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/89gfj.jpg"/></a></p>
<p>How do I pipe these keystrokes (numbers) to my process using the subprocess module? My code is below, do I need to use process.communicate()?</p>
<pre><code># Run executable and pass an argument to that executable.

process = subprocess.Popen('CalcSoilSurfTemp.exe C:\Users\szilasia\Desktop\epws\USA_TX_Lubbock.Intl.AP.722670_TMY3.epw',stdin=subprocess.PIPE)

process.communicate() # How do I pipe keystrokes(numbers) into the process?
</code></pre>
<p>Many thanks!,</p>
<p>EDIT:</p>
<p>I used to the code - 
<code>process.communicate(input = '1\n2')</code> to enter 1 and 2 sequentially, there was no need to convert to bytes as I am using Python 2.7 and this conversion is implict</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">communicate doc</a> says to use <code>input=b'&lt;chars&gt;'</code>.  The input must be bytes because input goes through a pipe, which carries binary data.  Precisely what you send depends on what the program requires.  To select the first alternative, a python program using <code>input()</code> would require <code>b'1\n'</code> whereas a program using a different input function might require just <code>b'1'</code>.  To send two choices, concatenate the two required bytes objects into one.  Be prepared to experiment.  I believe that process.communicate() can be called only once, so you must send one predetermined input stream and get two output streams after the subprocess ends.</p>
<p>Please let me know if this answer works on your system (Windows, it appears).</p>
</div>
<span class="comment-copy">thank you it worked I simply used the code below process.communicate(input = '1\n2') I am using Python 2.7 so there is no need to convert to from string to bytes as this is automatic</span>
<span class="comment-copy">In 2.7, <code>str is bytes</code>, so <code>b</code> prefix would future-proof your code.  But the need might be years away for you.</span>
