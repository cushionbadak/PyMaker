<div class="post-text" itemprop="text">
<p>I am trying to create a function which generates a random password using random.choice function,but i also want the choices to be random,i am trying to use a dict for this purpose,but not getting the desired result..
My code is:</p>
<pre><code>def makepassword():
    letter1=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
    letter2=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    symbol1=["@","#","$","%","&amp;","*","&lt;","&gt;"]
    symbol2=["@","#","$","%","&amp;","*","&lt;","&gt;"]
    number1=["0","1","2","3","4","5","6","7","8","9"]
    dict1={0:"letter1",1:"letter2",2:"symbol1",3:"symbol2",4:"number1"}
    k=dict1.get(randint(0,4))
    l=dict1.get(randint(0,4))
    m=dict1.get(randint(0,4))
    print(k,l,m)
    password=(choice(k)+choice(l)+choice(m))
    print(password)
</code></pre>
<p>If i print and check the values of <code>k,l,m</code>
am getting values such as <code>letter1/letter2/symbol1/symbol2/number1</code> so trying to use those values in choice function.</p>
<p>where as when i directly use: <code>password=(choice(letter1)+choice(symbol1)+choice(number1))</code> it works fine.</p>
<p>So how the above Choice function can be implemented using Dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dict1={0:letter1,1:letter2,2:symbol1,3:symbol2,4:number1}
</code></pre>
<p>You want to store the actual list in the dictionary, instead of the name of the lists. This will allow you to do what you want to do; to use the lists when you access the dictionary.</p>
<p>Note that <code>random</code>'s module warns about using it for security:</p>
<blockquote>
<p>Warning The pseudo-random generators of this module should not be used for security purposes. For security or cryptographic uses, see the secrets module.</p>
</blockquote>
<p>It recommends <a href="https://docs.python.org/3/library/secrets.html#module-secrets" rel="nofollow noreferrer"><code>secrets</code></a> module. It also has a <a href="https://docs.python.org/3/library/secrets.html#secrets.choice" rel="nofollow noreferrer"><code>choice()</code></a> method too. </p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative approach (working example on <a href="https://repl.it/GbVn/1" rel="nofollow noreferrer">repl.it</a>):</p>
<p><code>weights</code> specifies how many of each type is required. The rest are randomly chosen.</p>
<p><code>length</code> is the total length of the resulting password</p>
<pre><code>from random import randint, choice, shuffle
import string

def makepassword(length=8, weights=[1,1,1,1]):
    password_builder= []
    for index, weight in enumerate(weights):
      for _ in range(weight):
        password_builder.append(index)
    while len(password_builder) &lt; length:
      password_builder.append(randint(0, len(weights) - 1))
    shuffle(password_builder)
    lowercase=string.ascii_lowercase
    uppercase=string.ascii_uppercase
    symbols=["@","#","$","%","&amp;","*","&lt;","&gt;"]
    numbers=string.digits
    types=[lowercase,uppercase,symbols,numbers]
    print(password_builder)

    password = []

    for char_type in password_builder:
      password.append(choice(types[char_type]))

    print(''.join(password))

makepassword()
</code></pre>
<p>Examples:</p>
<pre><code>re9Bf6s#
qV7GCn0#
51zt7N&gt;Z
&amp;u7sYQ&amp;0
5ZOF@m&amp;u
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't think you need a <code>dict</code>, also use the <a href="https://docs.python.org/2/library/string.html" rel="nofollow noreferrer">string</a> module:</p>
<pre><code>import random
import string

symbols = ("@","#","$","%","&amp;","*","&lt;","&gt;")
choices = (
    string.ascii_lowercase,
    string.ascii_uppercase,
    symbols,
    symbols,
    string.digits
)

def make_password(length):
    return ''.join(
        map(
            str,
            (
                random.choice(random.choice(choices))
                for _ in xrange(length)
            )
        )
    )

print(make_password(4))
print(make_password(10))
print(make_password(6))
</code></pre>
<h3>Output:</h3>
<pre><code>J&amp;@0
g8*o3$I4O*
@#$FQ&lt;
</code></pre>
</div>
<span class="comment-copy">Well, you can simply remove the quotes around the values of the dictionary, but I don't think this'll bring more randomness. You could just concatenate these lists and make random choices from the concatenated version.</span>
<span class="comment-copy">"I am trying to create a function which generates a random password using random.choice function,but i also want the choices to be random" - what, were you under the impression that <code>random.choice</code> always made the same choice? It's not called <code>deterministic.choice</code>.</span>
<span class="comment-copy">Upvote for adding weights and also using the string module</span>
