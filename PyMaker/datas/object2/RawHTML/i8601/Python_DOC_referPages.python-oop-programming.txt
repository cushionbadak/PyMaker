<div class="post-text" itemprop="text">
<p>I am new to python OOP programming. I was doing this tutorial on overloading operators from <a href="https://www.tutorialspoint.com/python/python_classes_objects.htm" rel="nofollow noreferrer">here</a>(Scroll down to operator Overloading). I couldn't quite understand this piece of code. I hope somebody will explain this in detail. To be precise I didn't understand the how are 2 objects being added here and what are the lines</p>
<pre><code>def __str__(self):
          return 'Vector (%d, %d)' % (self.a, self.b)           
def __add__(self,other):
          return Vector(self.a + other.a, self.b + other.b) 
</code></pre>
<p>doing here?</p>
<p><br/></p>
<pre><code>#!/usr/bin/python

class Vector:
   def __init__(self, a, b):
      self.a = a
      self.b = b

   def __str__(self):
      return 'Vector (%d, %d)' % (self.a, self.b)

   def __add__(self,other):
      return Vector(self.a + other.a, self.b + other.b)

v1 = Vector(2,10)
v2 = Vector(5,-2)
print v1 + v2
</code></pre>
<p>This generates an output Vector(7,8). How are the objects v1 and v2 being added here?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>v1 + v2</code> is treated as a call to <code>v1.__add__(v2)</code>, with <code>self == v1</code> and <code>other == v2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the Python data model and your question is answered <a href="https://docs.python.org/3.5/reference/datamodel.html#object.__add__" rel="nofollow noreferrer">here</a></p>
<p>Basically when <code>v1 + v2</code> is performed python internally performs <code>v1.__add__(v2)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This code is performing vector addition, the same way you would add two vectors on paper, it combines the corresponding components using scalar addition.  You are overriding the <code>__add__</code> method to tell the interpreter 
how addition should be performed for your class.</p>
<p>The code:</p>
<pre><code>self.a + other.a
</code></pre>
<p>combines the a component of your vector class.  The code:</p>
<pre><code>self.b + other.b
</code></pre>
<p>combines the b component of your vector class using the appropriate addition function for the type of b.</p>
<p>Those new component values are passed to the constructor of the Vector class to return a new Vector.</p>
<p>The <code>+</code> operator will invoke the <code>__add__</code> method on your class to perform the addition.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">Special Method Names</a></span>
<span class="comment-copy">In situations like these, it's always good to step through code, line by line, in the debugger. It brings to light so much more information than you thought. It basically will walk you through what each operation is doing.</span>
