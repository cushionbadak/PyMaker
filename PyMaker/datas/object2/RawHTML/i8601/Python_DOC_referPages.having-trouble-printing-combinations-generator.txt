<div class="post-text" itemprop="text">
<p>So I am exploring the code behind itertools.combinations. In the documentation it gives an "equivelent" as follows:</p>
<pre><code>def combinations(iterable, r):
    # combinations('ABCD', 2) --&gt; AB AC AD BC BD CD
    # combinations(range(4), 3) --&gt; 012 013 023 123
    pool = tuple(iterable)
    n = len(pool)
    if r &gt; n:
        return
    indices = range(r)
    yield tuple(pool[i] for i in indices)
    while True:
        for i in reversed(range(r)):
            if indices[i] != i + n - r:
                break
        else:
            return
        indices[i] += 1
        for j in range(i+1, r):
            indices[j] = indices[j-1] + 1
        yield tuple(pool[i] for i in indices)
</code></pre>
<p>So let's say I have a list:</p>
<pre><code>sequence = [1,2,3,4,5,6,7,8,9,10] 
</code></pre>
<p>and:</p>
<pre><code>r=3
</code></pre>
<p>I tried to convert the generator to the list and then print it but I'm getting:</p>
<pre><code>print(list(combinations(sequence,3)))
...
---&gt; 16         indices[i] += 1
 17         for j in range(i+1, r):
 18             indices[j] = indices[j-1] + 1
TypeError: 'range' object does not support item assignment
</code></pre>
<p>I am having trouble modifying this to work without causing even more errors. 
If someone could offer me some guidance on figuring out how to resolve this TypeError I would really appreciate it. </p>
<p>In short I want to know why doing this works but the previous code doesn't:</p>
<pre><code>print(list(itertools.combinations(sequence,3)))
[(1, 2, 3), (1, 2, 4), (1, 2, 5), (1, 2, 6), (1, 2, 7) ...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By modifying the line:</p>
<pre><code>indices = range(r)
</code></pre>
<p>to:</p>
<pre><code>indices = list(range(r))
</code></pre>
<p>Answered my question. Thank you comments.</p>
</div>
<span class="comment-copy">You should look at <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">the 3.x documentation</a>, the version you're trying is for 2.x. Or, as you should have done before asking, search for the error message: <a href="http://stackoverflow.com/q/9091044/3001761">stackoverflow.com/q/9091044/3001761</a>, <a href="http://stackoverflow.com/q/20484195/3001761">stackoverflow.com/q/20484195/3001761</a>, <a href="http://stackoverflow.com/q/16435607/3001761">stackoverflow.com/q/16435607/3001761</a></span>
<span class="comment-copy">Specifically, in 3.x, <code>range</code> returns a generator rather than a list (as it did in 2.x). The 3.x equivalent forces it into a list first: <code>indices = list(range(r))</code>. <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.combinations</a></span>
<span class="comment-copy">@PeterDeGlopper: Python 3 <code>range</code> does not return a generator. It returns a lazy sequence object. In particular, it's a real sequence, supporting indexing and slicing, and you can iterate over a single <code>range</code> object repeatedly.</span>
<span class="comment-copy">Thanks, I was sloppy with that comment.</span>
