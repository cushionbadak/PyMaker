<div class="post-text" itemprop="text">
<pre><code>inp[0][0] = shadow[3][0]
inp[0][3] = shadow[0][0]
inp[3][3] = shadow[0][3]
inp[3][0] = shadow[3][3]
</code></pre>
<p>I want to turn this code into a for loop, because this is disgusting! I can't figure out how though.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are basically picking two sets of coordinates from the series <code>(0, 0), (0, 3), (3, 3), (3, 0)</code>, in a ring fashion. You can do so by iteration over that series with an index to use for the second point:</p>
<pre><code>points = [(0, 0), (0, 3), (3, 3), (3, 0)]
for index, (x, y) in enumerate(points, -1):
    shadow_x, shadow_y = points[index]
    inp[x][y] = shadow[shadow_x][shadow_y]
</code></pre>
<p>By giving the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code> function</a> a starting point of <code>-1</code> we create an offset that'll find the right matching point in <code>points</code>.</p>
<p>You could also use the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code> function</a>:</p>
<pre><code>points = [(0, 0), (0, 3), (3, 3), (3, 0)]
for (x, y), (shadow_x, shadow_y) in zip(points, [points[-1]] + points):
    inp[x][y] = shadow[shadow_x][shadow_y]
</code></pre>
<p>Pick whichever you feel fits your usecase best.</p>
<p>Demo (replacing the actual assignment with a <code>print()</code> statement to show what would be executed):</p>
<pre><code>&gt;&gt;&gt; points = [(0, 0), (0, 3), (3, 3), (3, 0)]
&gt;&gt;&gt; for index, (x, y) in enumerate(points, -1):
...     shadow_x, shadow_y = points[index]
...     print(f"inp[{x}][{y}] = shadow[{shadow_x}][{shadow_y}]")
...
inp[0][0] = shadow[3][0]
inp[0][3] = shadow[0][0]
inp[3][3] = shadow[0][3]
inp[3][0] = shadow[3][3]
&gt;&gt;&gt; for (x, y), (shadow_x, shadow_y) in zip(points, [points[-1]] + points):
...     print(f"inp[{x}][{y}] = shadow[{shadow_x}][{shadow_y}]")
...
inp[0][0] = shadow[3][0]
inp[0][3] = shadow[0][0]
inp[3][3] = shadow[0][3]
inp[3][0] = shadow[3][3]
</code></pre>
</div>
<span class="comment-copy">We need more details on what needs to be mapped. Why is [0][3] assigned from [0][0]?</span>
<span class="comment-copy">please add some more details to your question. explain why you are selecting inp[0][0] = shadow[3][0] not inp[0][0] = shadow[0][0]</span>
