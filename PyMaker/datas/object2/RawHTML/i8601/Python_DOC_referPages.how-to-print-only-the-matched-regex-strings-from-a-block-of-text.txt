<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31915018/re-findall-behaves-weird">re.findall behaves weird</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>The end goal I have is to input a block of text (multiple lines) which contains domains and output just a list of domains. </p>
<p>Example input:</p>
<pre><code>2017-03-02:  173.254.221.115 port 80 - www.hlowdolax.top - GET /usp?f=1if
2017-03-02:  173.254.221.115 port 80 - www.hjaoopoa.top - GET /uf=1if
2017-03-04:  173.254.221.115 port 80 - www.foolalexas.top - GET /userif
2017-03-04:  54.202.16.39 port 80 - pentsshoperqunity.top - 
</code></pre>
<p>The output I want in this case:</p>
<pre><code>www.hlowdolax.top
www.hjaoopoa.top
www.foolalexas.top
pentsshoperqunity.top
</code></pre>
<p>Eventually I found out that the best tool for this purpose is <code>re.findall()</code> and tried to do it this way:</p>
<pre><code>matchedDomains=re.findall(myRegex, fileWithMessyText.read())
print matchedDomains
</code></pre>
<p>And in the output I see that it matched all the domains but the result looks like this:</p>
<pre><code>[('www', 'hlowdolax', 'to', 'p'), ('user', 'p', 'h', 'p'), ('1', 'g', 'i', 'f'), ('www', 'hjaoopoa', 'to', 'p'), ('user', 'p', 'h', 'p'), ('1', 'g', 'i', 'f'), ('www', 'foolalexas', 'to', 'p'), ('user', 'p', 'h', 'p'), ('1', 'g', 'i', 'f'), ('pentsshoperqunity', 't', 'o', 'p'), ('search', 'p', 'h', 'p'), ('nikesportweardewvv', 't', 'o', 'p'), ('search', 'p', 'h', 'p'), ('www', 'dpooldoopl', 'a', 'top'), ('user', 'p', 'h', 'p'), ('1', 'g', 'i', 'f'), ('fordfocuscommunoityesz', 't', 'o', 'p'), ('www', 'sosgenerga', 'lz', 'top'), ('user', 'p', 'h', 'p'), ('1', 'g', 'i', 'f'), ('fordfocuscommunoityesz', 't', 'o', 'p'), ('search', 'p', 'h', 'p')]
</code></pre>
<p>If that's relevant, here is the regex I use:</p>
<pre><code>([A-Za-z0-9]{1,})\.([A-Za-z0-9]{1,10})\.?([A-Za-z]{1,})\.?([A-Za-z]{1,})
</code></pre>
<p>I googled a variety of keywords, tested my regex with pythex.org and learned about a term "match captures" and that it has to do something with "capture groups", but all the advice I found here with using <code>group</code> appears to not be compatible with <code>findall</code>, but if I try to use <code>search</code> or <code>match</code> it only works for the first line and prints the whole line instead of just the match (looks like rambling but I didn't document my wanderings so I don't remember what exactly I've tried). Also intuitively it seems like a workaround to use cycles and match line by line when there is a tool that matches the whole block. Problem is, I don't know how to use it.</p>
<p>I'm not looking for someone to write the code for me but I'm really lost at this point. Is there a way to use <code>findall</code> and output just nicely formatted matches?</p>
</div>
<div class="post-text" itemprop="text">
<p>The parenthesis you have in your regex create capturing groups, just remove them:</p>
<pre><code>[A-Za-z0-9]{1,}\.[A-Za-z0-9]{1,10}\.?[A-Za-z]{1,}\.?[A-Za-z]{1,}
</code></pre>
<p><a href="https://regex101.com/r/GVFUV4/1" rel="nofollow noreferrer">Here</a> is a demonstration.</p>
<pre><code>&gt;&gt;&gt; re.findall(r'[A-Za-z0-9]{1,}\.[A-Za-z0-9]{1,10}\.?[A-Za-z]{1,}\.?[A-Za-z]{1,}', s)
['www.hlowdolax.top', 'www.hjaoopoa.top', 'www.foolalexas.top', 
 'pentsshoperqunity.top']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just don't capture the groups:</p>
<pre><code>myRegex = '(?:[A-Za-z0-9]{1,})\.(?:[A-Za-z0-9]{1,10})\.?(?:[A-Za-z]{1,})\.?(?:[A-Za-z]{1,})'
</code></pre>
<p>The <code>?:</code> at the beginning of the group says "don't capture me".</p>
<p>And as per <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">the docs</a> if there are no capturing groups it returns a list of strings which matched the pattern.</p>
</div>
<div class="post-text" itemprop="text">
<p>The solution using <code>str.split()</code> and <code>re.split()</code> functions:</p>
<pre><code>import re

s = '''
2017-03-02:  173.254.221.115 port 80 - www.hlowdolax.top - GET /usp?f=1if
2017-03-02:  173.254.221.115 port 80 - www.hjaoopoa.top - GET /uf=1if
2017-03-04:  173.254.221.115 port 80 - www.foolalexas.top - GET /userif
2017-03-04:  54.202.16.39 port 80 - pentsshoperqunity.top -
'''

result = [re.split(r'\s+', l)[5] for l in s.strip().split('\n')]

print(result)
</code></pre>
<p>The output:</p>
<pre><code>['www.hlowdolax.top', 'www.hjaoopoa.top', 'www.foolalexas.top', 'pentsshoperqunity.top']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to use <code>regex</code> for this, instead use <code>split()</code> :</p>
<pre><code>&gt;&gt;&gt; data = '''2017-03-02:  173.254.221.115 port 80 - www.hlowdolax.top - GET /usp?f=1if'''
&gt;&gt;&gt; print(" ".join(data.split()).split()[-4])
www.hlowdolax.top
</code></pre>
<p>Explanation:</p>
<p>First you can remove extra spaces from the string and then split it with single <code>space</code> and provide the desired index <code>-4</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you still want to use that regex, you should retrieve every 'entire match'. It can be done with <code>regex.search()</code>. <a href="https://docs.python.org/3.6/library/re.html#re.regex.search" rel="nofollow noreferrer">This documentation</a> will help you. It returns a <code>match</code> object for the first match and its <code>group(0)</code> is entire match. <a href="https://docs.python.org/3.6/library/re.html#re.match.group" rel="nofollow noreferrer">Documentation here</a>. So below is full code based on your regex.</p>
<pre><code>import re

number = """2017-03-02:  173.254.221.115 port 80 - www.hlowdolax.top - GET /usp?f=1if
2017-03-02:  173.254.221.115 port 80 - www.hjaoopoa.top - GET /uf=1if
2017-03-04:  173.254.221.115 port 80 - www.foolalexas.top - GET /userif
2017-03-04:  54.202.16.39 port 80 - pentsshoperqunity.top -"""

whole = re.compile("([A-Za-z0-9]{1,})\.([A-Za-z0-9]{1,10})\.?([A-Za-z]{1,})\.?([A-Za-z]{1,})")

m = whole.search(number)
output = []
while m:
    t = m.group(0)
    output.append(t)
    m = whole.search(number, number.find(t)+len(t))

print(output)
# ['www.hlowdolax.top', 'www.hjaoopoa.top', 'www.foolalexas.top', 'pentsshoperqunity.top']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your case, all websites were wrapped by '-', so try this:</p>
<pre><code>number = """2017-03-02:  173.254.221.115 port 80 - www.hlowdolax.top - GET /usp?f=1if
2017-03-02:  173.254.221.115 port 80 - www.hjaoopoa.top - GET /uf=1if
2017-03-04:  173.254.221.115 port 80 - www.foolalexas.top - GET /userif
2017-03-04:  54.202.16.39 port 80 - pentsshoperqunity.top -"""

re.findall(r'.*-(.*)-.*',number)
</code></pre>
</div>
<span class="comment-copy">if in file all entries has format as in example, why you simply don;t read files to list, and from each line print only host. Just split each line and print 5th element of list, which was created by spliting line</span>
<span class="comment-copy">Remove all capturing groups.</span>
<span class="comment-copy">You may use <code>re.findall(r' - (\S+) - ', s)</code></span>
<span class="comment-copy">Thank you, this really makes sense now! As I understood, removing the parentheses is the same as the solution suggested by @daphtdazz i.e. adding ?: at the beginning of each capture group?</span>
<span class="comment-copy">@aistesk, in your case, yes, but if you are not interested in capturing the groups separately and only on the complete domain, then, IMHO, it looks useless and makes regex looks more complicated.</span>
<span class="comment-copy">What if the <code>-</code> was part of the domain name itself !?</span>
<span class="comment-copy">this code works with <code>-</code> as well :) , try it</span>
