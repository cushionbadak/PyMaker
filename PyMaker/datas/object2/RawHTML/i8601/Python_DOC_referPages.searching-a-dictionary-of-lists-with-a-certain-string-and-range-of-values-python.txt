<div class="post-text" itemprop="text">
<p>I want to search a dictionary by specifying </p>
<ol>
<li>a string</li>
<li>a range of values</li>
</ol>
<p>Currently my code is:</p>
<pre><code>propid = ['001', '002', '003', '004'],
owner = ['bob', 'jim', 'rosie', 'anna'],
housenumber = ['1', '12', '31', '44'],
postcode = ['CF10 1AN', 'CF24 4AN', 'CF33 3AA', 'CF10 1AN'],
price = ['100000', '200000', '300000', '400000']

prop_dict = {propid[i]:[owner[i], housenumber[i], postcode[i], price[i]] for i in range(len(propid))
</code></pre>
<p>I want to search this dictionary for:</p>
<ol>
<li>postcode: if postcode = 'CF10 1AN' then print that whole property specification of all of those who contain that post code i.e. ['001': 'bob', '1', 'CF10 1AN', '100000'] AND ['004': ...]</li>
</ol>
<p>which I have managed by doing the following:</p>
<pre><code>def searchPC(values, searchFor):
    for k in values:
        for v in values[k]:
            if searchFor in v:
                print(k,":", prop_dict[k])
    return None
</code></pre>
<ol start="2">
<li>price range: if price range = 100000 to 200000 then print the properties that fall into that spec i.e. ['001': 'bob', '1', 'CF10 1AN', '100000'] and ['002': ....]</li>
</ol>
<p>I want to convert the price from the dictionary list to an integer but obviously only the price part and then want to do a similar search as i composed in part 1 but with a min and a max.</p>
<p>How do I go about doing this? Integer part in particular</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Before I answer your question note you have a few errors in your code:</p>
<pre><code>owner = ['bob', 'jim', 'rosie', 'anna'],
</code></pre>
<p>returns a tuple not a list because of the trailing <code>,</code> see:</p>
<pre><code>owner = ['bob', 'jim', 'rosie', 'anna'],
print(type(owner))
#prints &lt;class 'tuple'&gt;
</code></pre>
<p>Also you are missing a closing <code>}</code> in your dictionary comprehension. </p>
<p>The answer to your question:</p>
<pre><code>propid = ['001', '002', '003', '004']
owner = ['bob', 'jim', 'rosie', 'anna']
housenumber = ['1', '12', '31', '44']
postcode = ['CF10 1AN', 'CF24 4AN', 'CF33 3AA', 'CF10 1AN']
price = ['100000', '200000', '300000', '400000']

prop_dict = {propid[i]:[owner[i], housenumber[i], postcode[i], price[i]] for i in range(len(propid))}

look = 'CF24 4AN' 
price_range = range(50000,150000)

for k,v in prop_dict.items():
    if look in v:
        print('{} has {}'.format(k,v))
    if int(v[3]) in price_range:
        print('{} with {} is in range'.format(k,v))
</code></pre>
<p>Use <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow noreferrer"><code>dict.items()</code></a> to get the key and the value out of the dictionary while iterating through it. </p>
<p>Then compare if the item you are looking for is in the list of values, if it is then print it or do something. </p>
<p>You can use a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=range#ranges" rel="nofollow noreferrer"><code>range</code></a> object to find if your price is in the range. Just make sure you convert the price from the dictionary to an int before comparing. Change range to whatever range you are looking for </p>
<p>Note this answer is for Python 3 since making use of <code>range()</code>. Also if you care about type error checking use the below method of checking in range. Or if you are on an older version, use </p>
<pre><code>low_value = 50000
high_value = 150000
if low_value &lt;= int(v[3]) &lt;= high_value:
</code></pre>
</div>
<span class="comment-copy">What have you tried, StackOverflow isn't a coding service.</span>
<span class="comment-copy">Updated my Q with progress</span>
