<div class="post-text" itemprop="text">
<p>Here is the lesson i am trying to do: "Create a program that reads all of the numbers stored in a file and calculates the total (sum) then displays the value as total points to screen.  Next, have the program calculate the average score then display the value as percent score to screen.  Next, make sure the program handles IOError and ValueError exceptions. I have tried about a dozen different ways using loops but cannot get anything to work. The only way i can make it work is by doing it like this: </p>
<pre><code>def main ():
infile = open('numdata.txt', 'r')
num1 = int(infile.readline())
num2 = int(infile.readline())
num3 = int(infile.readline())
num4 = int(infile.readline())
num5 = int(infile.readline())
num6 = int(infile.readline())
num7 = int(infile.readline())
num8 = int(infile.readline())
infile.close()
total = num1+num2+num3+num4+num5+num6+num7+num8
average = total/8
print('the total: ', total)
print('the average: ', average)

main()
</code></pre>
<p>Here's the best I could come up with:</p>
<pre><code>def main():
    total = 0

    try:
        NumberFile = open('numdata.txt', 'r')

        for line in NumberFile:
            amount = float(line)
            total += amount
            print(format(total, ',.2f'))

        print('Total: ', format (total, ',.2f'))

    except ValueError:
        print('Non-numeric data found in the file.')

    except IOError:
        print('An error occured trying to read the file.')

    except:
        print('An error has occured.')

    finally:
        NumberFile.close()                      

main()
</code></pre>
<p>This is what i get for the output:
    78.00,
    171.00,
    256.00,
    356.00,
    437.00,
    513.00,
    607.00,
    684.00,
    Non-numeric data found in the file.</p>
<p>If anyone wants to show me an example of how to use a loop to do the addition i'd be very grateful. The numbers from the file are: 
78
93
85
100
81
76
94
77 
However, using 1-8 will do the trick. Any and all help is appreciated. I'm very new to this so I'm sure there is a much easier way to do it then what I've been trying. I've tried going off examples fROm the book I'm using and none work even though I'm copying them word for word. I've tried video examples as well and even though I copy everything exactly I still could not get loops to work. Super frustrating. 
Here's an example i tried to use but didn't work: the numbers will just be 1,2,3 for simplicity. These are in a .txt file called 06_tips</p>
<pre><code>tipfile = open('06_tipfile.txt', 'r')
strRead = tipfile.readline()
ftTotalTips = float(strRead)
while strRead != '':
strRead = tipfile.readline()
if strRead != '':
    ftTotalTips = float(ftTotalTips) + float(strRead)
print('Total tips are: ', format(ftTotalTips,'.2f'))
</code></pre>
<p>so that should work right? It doesn't for me.</p>
<p>There were a bunch of similar of examples I tried but zero worked, so if anyone wants to provide me with the answer to my problem that'd be awesome, thanks :)    </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a basic example to get you started. Instead of hard-coding how many numbers will be read from the file, you could read all the lines in the file with <a href="https://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">file.readlines()</a> which returns a list, and lists have the <a href="https://docs.python.org/2/library/functions.html#len" rel="nofollow noreferrer">length</a> method:</p>
<pre><code>import sys

def main ():
    nums = []
    with open('numdata.txt', 'r') as data:
        for d in data.readlines():
            try:
                nums.append(int(d.strip('\n')))
            except IOError:
                print("got IOError")
                sys.exit()
            except ValueError:
                print("got ValueError")
                sys.exit()

    total = sum(nums)
    average = total/len(nums)
    print('the total: ', total)
    print('the average: ', average)

main()
</code></pre>
<p>The <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">exception handling</a> may need to be much more verbose, especially if the numbers in the file end up being various datatypes like <code>float</code>, but as for the numbers in your example, <code>int()</code> will work.</p>
</div>
<div class="post-text" itemprop="text">
<p>I do not know how your file looks like but if your numbers are separated by new lines(\n) then you can use this</p>
<pre><code>with open("numdata.txt") as t:
     print sum(map(int, filter(None, t.read().split("\n"))))
</code></pre>
<p>sum - sums up the list </p>
<p>map - changes the numbers from string to int</p>
<p>filter - takes out any empty strings (I was getting quite a few)</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this snippet:</p>
<pre><code>def is_float(s):
    try:
        float(s)
        return True
    except ValueError:
        return False

def get_nums(infile):
    with open(infile, 'r') as f:
        return [float (x) for x in f.read().splitlines() if is_float(x)]

def main():

    nums = get_nums('numdata.txt')
    if nums:
        total = sum(nums)
        avg   = total / len(nums)

        print('The total: ', total)
        print('The average: ', avg)
    else:
        print('No numbers found in the textfile')

if __name__ == '__main__':
    main()
</code></pre>
<p>Hope it helps!</p>
</div>
<span class="comment-copy">sure, glad to hear you got it working and that it helped. by the way, if all or any of the answers helped, you don't have to immediately accept one, and you can upvote as a way of giving "thanks", too :)</span>
<span class="comment-copy">im new to the site so thanks for pointing that out :)</span>
<span class="comment-copy">yeah empty string was the culprit, thank you so much for helping</span>
<span class="comment-copy">@hppylttletrees Happy to help :)</span>
<span class="comment-copy">Thank you for the help, it works now :)</span>
<span class="comment-copy">@hppylttletrees Glad to help!</span>
