<div class="post-text" itemprop="text">
<p>I was looking for a way to find the nth occurrence in a list when I found <a href="https://stackoverflow.com/questions/8337069/find-the-index-of-the-nth-item-in-a-list">this post</a> :</p>
<blockquote>
<p>I can't say for certain that this is the fastest way, but I imagine it'd be &gt;pretty good:</p>
<pre><code>i = -1
for j in xrange(n):
    i = x.index(True, i + 1)
</code></pre>
<p>The answer is i.</p>
</blockquote>
<p><code>x</code> : list of Booleans here</p>
<p><code>n</code> : number of occurrences</p>
<p><code>True</code> : element searched</p>
<p>Although I understand the general behaviour of this code, what does <code>i = x.index(True, i + 1)</code> do exactly? Precisely, what is the role of the second parameter here? I couldn't find any example with multiple parameters on <code>index()</code>.</p>
<p><strong>Edit:</strong> I'm working with Python 2.7</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list.index(x[, start[, end]])
</code></pre>
<p>Return zero-based index in the list of the first item whose value is x. Raises a ValueError if there is no such item.</p>
<p>The optional arguments start and end are interpreted as in the slice notation and are used to limit the search to a particular subsequence of the list. The returned index is computed relative to the beginning of the full sequence rather than the start argument.</p>
<p>Visit <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">this documentation link</a> for more info</p>
<pre><code>fruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'apple', 'banana']

fruits.index('banana')
</code></pre>
<blockquote>
<blockquote>
<blockquote>
<p>3</p>
</blockquote>
</blockquote>
</blockquote>
<pre><code>fruits.index('banana', 4)  # Find next banana starting a position 4
</code></pre>
<blockquote>
<blockquote>
<blockquote>
<p>6</p>
</blockquote>
</blockquote>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>As can be found in <a href="https://docs.python.org/3.6/tutorial/datastructures.html" rel="nofollow noreferrer">the documentation for Python 3.6</a>, the second parameter is used to indicate a starting index.</p>
<p>The example used in the documentation shows the difference between using the second parameter and omitting it:</p>
<pre><code>&gt;&gt;&gt; fruits.index('banana')
3
&gt;&gt;&gt; fruits.index('banana', 4)  # Find next banana starting a position 4
6
</code></pre>
<p>A third parameter is also available, indicating an end index.</p>
</div>
<div class="post-text" itemprop="text">
<p>The second parameter limits the search to items <strong>at or after that position</strong> in the given list. There is also a 3rd parameter to avoid searching the list until it's end.</p>
<pre><code>s.index(x[, i[, j]])

index of the first occurrence of x in s (at or after index i and before index j)
</code></pre>
<p>From: <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#common-sequence-operations</a></p>
</div>
<span class="comment-copy">index(...) method of builtins.list instance     L.index(value, [start, [stop]]) -&gt; integer -- return first index of value.     Raises ValueError if the value is not present.</span>
<span class="comment-copy">Python's documentation is very good.  If you read the <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer">docs</a>, you'll find that the <code>i + 1</code> is the starting place to search for the element.</span>
<span class="comment-copy">I'm voting to close this question as off-topic because it's asking about something that is inherently easier to find, and more likely to stay accurate, in Python's official documentation.</span>
<span class="comment-copy">I'm using Python 2.7, so I didn't look in the Python 3.x doc. My bad.</span>
<span class="comment-copy">This information is also available in the Python 2 docs: <a href="https://docs.python.org/2/library/stdtypes.html#mutable-sequence-types" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#mutable-sequence-types</a> FWIW, here are the relevant Python <i>2.1</i> docs <a href="https://docs.python.org/release/2.1/lib/typesseq-mutable.html" rel="nofollow noreferrer">docs.python.org/release/2.1/lib/typesseq-mutable.html</a> And of course there's always <code>help(list.index)</code>, although I guess that is a little terse if you don't already know what <code>start</code> and <code>stop</code> are.</span>
