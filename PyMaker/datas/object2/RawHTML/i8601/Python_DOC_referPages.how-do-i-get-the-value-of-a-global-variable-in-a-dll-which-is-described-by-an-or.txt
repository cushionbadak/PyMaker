<div class="post-text" itemprop="text">
<p>I am accessing a dll from Python using the ctypes library. The functions in the dll are accessible by ordinal, rather than name. I can inspect the dll using Dependency Walker and relate the ordinals to function names. There is a global error number variable in the dll which I wish to access. Dependency Walker shows that it has an ordinal value of 13.</p>
<p>There seems to be no way of accessing a global variable by ordinal using ctypes.</p>
<p>If the global variable were named then it seems I would be able to do something like:</p>
<p>error_value = c_int.in_dll(my_dll_handle, "my_error_value")
(<a href="https://docs.python.org/3/library/ctypes.html#accessing-values-exported-from-dlls" rel="nofollow noreferrer">https://docs.python.org/3/library/ctypes.html#accessing-values-exported-from-dlls</a>)</p>
<p>Any ideas as to how I access the global variable given only an ordinal?</p>
</div>
<div class="post-text" itemprop="text">
<p>I didn't see anything explicit in the documentation, other than the syntax for <em>functions</em> accessed by ordinal.  Through experimentation, the following worked:</p>
<p>Test code:</p>
<pre><code>int x = 5;
int func(int a) { return a*2; }
</code></pre>
<p>.DEF file exporting by ordinal:</p>
<pre><code>EXPORTS
  x @1 NONAME DATA
  func @2 NONAME
</code></pre>
<p>Python code:</p>
<pre><code>&gt;&gt;&gt; from ctypes import *
&gt;&gt;&gt; test = CDLL('test')
&gt;&gt;&gt; test[2](5)           # Call ordinal 2 function.
10
&gt;&gt;&gt; test[1]              # Ordinal 1 thinks it is a function pointer.
&lt;_FuncPtr object at 0x0000000002FEA048&gt;
&gt;&gt;&gt; cast(test[1],POINTER(c_int)).contents        # cast?
c_long(5)                                        # Worked!
&gt;&gt;&gt; cast(test[1],POINTER(c_int)).contents.value
5
</code></pre>
</div>
<span class="comment-copy">I've never used this but there is a section on the page you linked that appears to discuss this. I just searched for ordinal. See if that works.</span>
<span class="comment-copy">The page linked shows how to use ordinals for functions, not variables</span>
<span class="comment-copy">Thanks - this works!</span>
