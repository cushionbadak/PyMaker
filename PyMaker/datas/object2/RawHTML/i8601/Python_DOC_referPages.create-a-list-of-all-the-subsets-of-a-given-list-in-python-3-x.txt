<div class="post-text" itemprop="text">
<p>how can I create a list of all the subsets of a given list in python 3.x?
the list given be like <code>[1,2,3]</code> and i want an output like</p>
<pre><code>[[1],[2],[3],[1,2],[2,3],[1,3],[1,2,3],[]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> to get the combinations:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; xs = [1, 2, 3]

&gt;&gt;&gt; itertools.combinations(xs, 2)  # returns an iterator
&lt;itertools.combinations object at 0x7f88f838ff48&gt;
&gt;&gt;&gt; list(itertools.combinations(xs, 2))  # yields 2-length subsequences
[(1, 2), (1, 3), (2, 3)]


&gt;&gt;&gt; for i in range(0, len(xs) + 1):  # to get all lengths: 0 to 3
...     for subset in itertools.combinations(xs, i):
...         print(list(subset))
... 
[]
[1]
[2]
[3]
[1, 2]
[1, 3]
[2, 3]
[1, 2, 3]
</code></pre>
<p>combining with list comprehension, you will get what you want:</p>
<pre><code>&gt;&gt;&gt; [list(subset) for i in range(0, len(xs) + 1)
                  for subset in itertools.combinations(xs, i)]
[[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I tried this. without recursion. which worked out successfully.</p>
<p>A is list , K is length of every subset </p>
<pre><code>    def subsets(A,K):
       sets = []
       for j in range(len(A)-K+1):
           mySet = []
           for i in range(j,K+j):  
               mySet.append(A[i])
           sets.append(mySet)
    return sets
</code></pre>
</div>
<span class="comment-copy">Without using the combinations, is there any other alternative</span>
<span class="comment-copy">@RISHABHBANSAL, As far as I know, using <code>itertools.combinations</code> is simplest. Without it, you need to make a recursive function.</span>
