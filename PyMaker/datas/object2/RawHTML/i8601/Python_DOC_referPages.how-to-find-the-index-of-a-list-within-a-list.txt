<div class="post-text" itemprop="text">
<p>Basically I have a txt file thats an ouput from a fortran model. The output looks a little like this:</p>
<pre><code>Title:Model

Temp(K)    Ionic str    Rho    Phi    H2O    Ice ...
273.15     4            1.003  1.21   1000   0.00

Species    Ini Conc    Final Conc     Act ....
H          0.0         0.12032        0.59
NH4        3.0         3.00           0.43
Cl         1.0         1.00           0.47
...

Title:Model

Temp(K)    Ionic str    Rho    Phi    H2O    Ice ...
273.15     4            1.003  1.21   1000   0.00

Species    Ini Conc    Final Conc     Act ....
H          0.0         0.12032        0.59
NH4        3.0         3.00           0.43
Cl         1.0         1.00           0.47
...
</code></pre>
<p>Each step adds another set  like the above so eventually I have a txt file with 3000+ steps.</p>
<p>So I want to recall all the temperatures at each step. I'm trying to write something to index all the points where 'Temp(K)' appears and then add 1 to that index to get the location of the actual temperature.</p>
<p>My code looks like this: </p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
main=[]
main2=[]
count=0
with open('FrOut.txt', 'r') as f:
    data=f.readlines()
    for line in data:
        main.append(line.split(','))
for value in main:
    for x in value:
        main2.append(x.split())
for value in main2:
    for x in value:
            if x=='Temp(K)':count+=1
</code></pre>
<p>So obviously this isn't the most elegant way but I'm very much in the deep end with python. So how do I find the index of a list within list(main2) if the first value of that list=='Temp(K)'?</p>
<p>Nb. I'm using np and matplot to plot the data after this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Read the file into a list.</p>
<pre><code>with open('FrOut.txt', 'r') as f:
    data=f.readlines()
</code></pre>
<p>Get the numbers of the lines that start a temperature (using a list comprehension because it is fast):</p>
<pre><code>idx = [n+1 for n, ln in enumerate(data) is ln.startswith('Temp(K)']
</code></pre>
<p>Get the temperatures, again with a list comprehension.</p>
<pre><code>temps = [float(data[n].split()[0]) for n in idx]
</code></pre>
<p>If desired, you could even combine this into one list comprehension:</p>
<pre><code>temps = [float(data[n+1].split()[0]) for n, ln in enumerate(data) if ln.startswith('Temp(K)')]
</code></pre>
<p>An example in <a href="https://ipython.org/" rel="nofollow noreferrer">IPython</a>:</p>
<pre><code>In [1]: text = '''Title:Model
   ...: 
   ...: Temp(K)    Ionic str    Rho    Phi    H2O    Ice ...
   ...: 273.15     4            1.003  1.21   1000   0.00
   ...: 
   ...: Species    Ini Conc    Final Conc     Act ....
   ...: H          0.0         0.12032        0.59
   ...: NH4        3.0         3.00           0.43
   ...: Cl         1.0         1.00           0.47
   ...: ...
   ...: 
   ...: Title:Model
   ...: 
   ...: Temp(K)    Ionic str    Rho    Phi    H2O    Ice ...
   ...: 273.15     4            1.003  1.21   1000   0.00
   ...: 
   ...: Species    Ini Conc    Final Conc     Act ....
   ...: H          0.0         0.12032        0.59
   ...: NH4        3.0         3.00           0.43
   ...: Cl         1.0         1.00           0.47
   ...: ...
   ...: '''

In [2]: data = text.splitlines()

In [3]: idx = [n+1 for n, ln in enumerate(data) if ln.startswith('Temp(K)')]

In [4]: idx
Out[4]: [3, 14]

In [5]: [float(data[n].split()[0]) for n in idx]
Out[5]: [273.15, 273.15]

In [6]: [float(data[n+1].split()[0]) for n, ln in enumerate(data) if ln.startswith('Temp(K)')]
Out[6]: [273.15, 273.15]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This can be done using python's <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> function.</p>
<p>Here's an example of extracting the indexes. (And, just for fun, the temperatures Too!)</p>
<pre><code>idxs = []
tempature_values = []
for idx, value in enumerate(main2):
    # Check if value is not empty &amp; the first element is 'Temp(K)'
    if value and value[0] == 'Temp(K)':
        idxs.append(idx)
        temp_values.append(main2[idx+1][0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre><code>temp_rows = []

with open(f, 'rb') as fin:
    reader = csv.reader(fin)
    for index, row in enumerate(reader):
        if 'Temp(K)' in [word for words in row for word in words.split()]:
            temp_rows.append(index)
</code></pre>
</div>
<span class="comment-copy">You're looping over the text twice, accounting for the index lookup in the second list. You could just use <code>enumerate()</code> instead, and loop only once</span>
<span class="comment-copy">In the second comprehension, I'm looping over the <i>indices</i>, not over the whole list of lines. I could indeed have done it in a single comprehension. In this case I choose to split it for clarity.</span>
<span class="comment-copy">As I said, the index lookup. <code>enumerate()</code> once is more clear than two list comprehensions utilizing <code>enumerate()</code> as-is.</span>
<span class="comment-copy">Thanks this is what I'm after!</span>
<span class="comment-copy">Thanks, this works well.</span>
