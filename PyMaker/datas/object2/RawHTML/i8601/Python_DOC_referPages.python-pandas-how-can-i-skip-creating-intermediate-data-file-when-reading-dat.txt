<div class="post-text" itemprop="text">
<p>I have data files looks like this:</p>
<pre><code>ABE200501.dat
ABE200502.dat
ABE200503.dat
...
</code></pre>
<p>So I first combine these files into <code>all.dat</code>, and do a little bit clean up </p>
<pre><code>fout=open("all.dat","w")
for year in range(2000,2017):
    for month in range(1,13):
        try: 
            for line in open("ABE"+ str(year) +"%02d"%(month)+".dat"):
                fout.write(line.replace("[", " ").replace("]", " ").replace('"', " ").replace('`', " "))
        except: 
            pass
fout.close()
</code></pre>
<p>And I later on read the final file in pandas </p>
<pre><code>df = pd.read_csv("all.dat", skipinitialspace=True, error_bad_lines=False, sep=' ',
                    names = ['stationID','time','vis','day_type','vis2','day_type2','dir','speed','dir_max','speed_max','visual_range', 'unknown'])
</code></pre>
<p>I want to know, if it is possible to save combine files in directly in RAM instead in my hard disk? This can save me a lot of unnecessary space.</p>
<p>Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/stringio.html" rel="nofollow noreferrer"><code>StringIO</code></a> module lets you treat strings as files.</p>
<p>Example from the docs:</p>
<pre><code>import StringIO

output = StringIO.StringIO()
output.write('First line.\n')
print &gt;&gt;output, 'Second line.'

# Retrieve file contents -- this will be
# 'First line.\nSecond line.\n'
contents = output.getvalue()

# Close object and discard memory buffer --
# .getvalue() will now raise an exception.
output.close()
</code></pre>
<p>For your own code:</p>
<pre><code>fout = StringIO.StringIO()
# treat fout as a file handle like usual
# parse input files, writing to fout

file = fout.getvalue() # file is kind of a virtual file now 
                       # and can be "opened" by StringIO
fout.close()

# ...

using StringIO.StringIO(file) as fin:
    df = pd.read_csv(fin, skipinitialspace=True, error_bad_lines=False, sep=' ', names = ['stationID','time','vis','day_type','vis2','day_type2','dir','speed','dir_max','speed_max','visual_range', 'unknown'])
</code></pre>
<p>pandas accepts both pathname strings and file handles as input.</p>
</div>
<span class="comment-copy">This is cool! One question, it seems like it's in Python 2, is there anything I need to care about?</span>
<span class="comment-copy">@cqcn1991 Python3 uses <code>io</code> instead, as in: <code>io.StringIO</code>. In-memory streams are talked about <a href="https://docs.python.org/3/library/io.html#in-memory-streams" rel="nofollow noreferrer">here</a>.</span>
