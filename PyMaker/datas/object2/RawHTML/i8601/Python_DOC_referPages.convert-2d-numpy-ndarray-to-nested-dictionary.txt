<div class="post-text" itemprop="text">
<p>Suppose I have the following <code>numpy.ndarray</code>:</p>
<pre><code>array([[50,  0,  0],
      [ 0,  3, 47],
      [ 0, 36, 14]])
</code></pre>
<p>How is is possible to convert it to a dictionary of this form:</p>
<pre><code>{0: {0: 50}, 1: {1: 3, 2: 47}, 2: {1: 36, 2: 14}}
</code></pre>
<p>The question is similar to <a href="https://stackoverflow.com/questions/9545139/python-2d-array-to-dict">python 2d array to dict</a> but I cannot work out a solution similar to the answer there no matter how hard I've tried.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assumed <code>a</code> as your array,</p>
<p>Try this,</p>
<pre><code>{index:{i:j for i,j in enumerate(k) if j} for index,k in enumerate(a)}
</code></pre>
<p><strong>Result</strong> </p>
<pre><code>{0: {0: 50}, 1: {1: 3, 2: 47}, 2: {1: 36, 2: 14}}
</code></pre>
<p>Dictionary created with the concept:</p>
<pre><code>In [18]: dict([[1,'a'],[2,'b']])
Out[18]: {1: 'a', 2: 'b'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do that with a pair of nested <code>for</code> loops.</p>
<p>The built-in <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> function steps through a list or other iterable, giving us both the item and its index.</p>
<pre><code>import numpy as np

a = np.array(
    [[50,  0,  0],
    [ 0,  3, 47],
    [ 0, 36, 14]]
)

d = {}
for i, row in enumerate(a):
    temp = {}
    for j, v in enumerate(row):
        if v:
            temp[j] = v
    d[i] = temp

print(d)
</code></pre>
<p><strong>output</strong></p>
<pre><code>{0: {0: 50}, 1: {1: 3, 2: 47}, 2: {1: 36, 2: 14}}
</code></pre>
<p>That can be condensed considerably by using a nested pair of dictionary comprehensions:</p>
<pre><code>d = {i: {j: v for j, v in enumerate(row) if v}
    for i, row in enumerate(a)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just loop through and build your nested <code>dicts</code>:</p>
<pre><code>import numpy as np

arr = np.array([[50,  0,  0],
               [ 0,  3, 47],
               [ 0, 36, 14]])

d = {}
for i, row in enumerate(arr):  
    d[i] = {}
    for j, cell in enumerate(row):
        if cell != 0:
            d[i][j] = cell
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This function should work for a 2-D array and 1-D array as well. Additionally you can make it work for list with int/float just by commenting the first line of the function.</p>
<pre><code>def arrtodict(your_array):
    your_array = your_array.tolist()
    dict_data = {key: value for key, value in enumerate(your_array)}

    if type(dict_data[0]) is list: 
        for key, value in dict_data.items():
            dict_data[key] = {k: v for k, v in enumerate(value)}
    elif type(dict_data[0]) is (float or int):
        pass
    else:
        print ('Check Your data')
    return dict_data
</code></pre>
</div>
<span class="comment-copy">This is called <b>converting a sparse 2D array to a nested dict of COO (coordinate) format: <code>{i: {j: value}}</code></b></span>
<span class="comment-copy">Would be more readable with dict comprehensions IMO: <code>{index:{i:j for i,j in enumerate(k) if j} for index,k in enumerate(a)}</code></span>
