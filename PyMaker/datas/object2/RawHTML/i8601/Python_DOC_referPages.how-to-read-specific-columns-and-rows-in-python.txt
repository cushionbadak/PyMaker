<div class="post-text" itemprop="text">
<blockquote>
<p>Timestamp         SP  DP<br/>
  20-03-2017 10:00:01 50  60.5<br/>
  20-03-2017 10:10:00 60  70<br/>
  20-03-2017 10:40:01 75  80<br/>
  20-03-2017 11:05:00 44  65<br/>
  20-03-2017 11:25:01 98  42<br/>
  20-03-2017 11:50:01 12  99<br/>
  20-03-2017 12:00:05 13  54<br/>
  20-03-2017 12:05:01 78  78<br/>
  20-03-2017 12:59:01 15  89<br/>
  20-03-2017 13:00:00 46  99<br/>
  20-03-2017 13:23:01 44  45<br/>
  20-03-2017 13:45:08 80  39</p>
</blockquote>
<pre><code>import csv    

output = []

f = open( 'test.csv', 'r' ) #open the file in read universal mode
for line in f:
    cells = line.split( "," )
    output.append( ( cells[ 0 ], cells[ 1 ] ) ) #since we want the first, second column
print (output)
</code></pre>
<p>how to read specific columns and specific rows?</p>
<p>Desired Output:</p>
<p>i want only first column and 2 rows;</p>
<blockquote>
<p>Timestamp         SP<br/>
  20-03-2017 10:00:01 50<br/>
  20-03-2017 10:10:00 60    </p>
</blockquote>
<p>How to do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use your <code>csv</code> module, and either count your rows (using the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code> function</a> or use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice()</code></a> to limit how much is read:</p>
<pre><code>import csv

output = []

with open( 'test.csv', 'r', newline='') as f:
    reader = csv.reader(f)
    for counter, row in enumerate(reader):
        if counter &gt; 2:
            # read only the header and first two rows
            break
        output.append(row[:2])
</code></pre>
<p>or using <code>islice()</code>:</p>
<pre><code>import csv
from itertools import islice

with open( 'test.csv', 'r', newline='') as f:
    reader = csv.reader(f)
    output = list(islice((row[:2] for row in reader), 3))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use index slicing. Just read csv from the source.</p>
<pre><code>from pandas import *

df = read_csv("Name of csv file.")

df2 = df.ix[:1, 0:2]

print df2
</code></pre>
<p>Try it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You to use pandas to read it.</p>
<pre><code>import pandas
df = pandas.read_csv("filepath", index_col = 0)
</code></pre>
<p>Then you can call first column and 2 rows by</p>
<pre><code>df.SP.head(2)
</code></pre>
<p>or</p>
<pre><code>df.ix[:1, 0:2] # first row and column first two column
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5757743/how-can-i-get-a-specific-field-of-a-csv-file">How can I get a specific field of a csv file?</a></span>
<span class="comment-copy">@TB.M, check this out.</span>
<span class="comment-copy">Thankyou..its really work.</span>
