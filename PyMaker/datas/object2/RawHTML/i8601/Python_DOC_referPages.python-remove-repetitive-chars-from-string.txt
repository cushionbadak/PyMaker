<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1207406/how-to-remove-items-from-a-list-while-iterating">How to remove items from a list while iterating?</a>
<span class="question-originals-answer-count">
                    23 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/3939361/remove-specific-characters-from-a-string-in-python">Remove specific characters from a string in Python</a>
<span class="question-originals-answer-count">
                    25 answers
                </span>
</li>
</ul>
</div>
<p>I have a string name = "Aaron" and would like to remove all the vowels. I am using remove() but if the char is repetive like letter 'a' in this case it stays in the string. Any suggestions ? Here is my code  :</p>
<pre><code>def disemvowel(word):
    word_as_list = list(word.lower())
    print(word_as_list)
    vowels = ["a", "e", "i", "o", "u"]
    for char in word_as_list:
        for v in vowels : 
            if char == v : 
                word_as_list.remove(v)
    return "".join(word_as_list)

print(disemvowel("Aaaron"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As other people have said, list comprehension is the way to go:</p>
<pre><code>def disemvowel(word):
    word = word.lower()
    vowels = ["a" , "e", "i", "o", "u"]
    return "".join([char for char in word if char not in vowels])  
print disemvowel("Aaaallbag")
</code></pre>
</div>
<span class="comment-copy"><code>word = "".join([c for c in word if c.lower() not in "aeiou"])</code></span>
<span class="comment-copy">This is not the case.</span>
<span class="comment-copy">You can efficiently remove (or modify) multiple characters in a <i>string</i> with the <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>translate</code></a> method. Eg, <code>novowels = {ord(c): None for c in 'AEIOUaeiou'}; my_string.translate(novowels)</code></span>
<span class="comment-copy">BTW, I <i>love</i> your function name. :)</span>
<span class="comment-copy">FWIW, another way to make the translation table is <code>novowels = str.maketrans('','','AEIOUaeiou')</code>. See the second linked question above for more details.</span>
<span class="comment-copy">Thank you , Keef.</span>
<span class="comment-copy">This technique is great for a general list, but to delete or replace characters in a string the <code>.translate</code> method is <i>much</i> faster because it does the looping and processing with compiled code, so it runs at C speed. FWIW, an alternate list comp approach is <code>d = dict.fromkeys('AEIOUaeiou', ''); newdata = ''.join([d.get(c, c) for c in data])</code>.</span>
<span class="comment-copy">@IvanIvanov If this answer has helped you, please consider <a href="http://meta.stackexchange.com/a/5235">accepting</a> it. But please take a look at the linked questions above. The best tool for this particular job is <code>str.translate</code>.</span>
<span class="comment-copy">This answer will lowercase any consonant that may have been uppercase. That may not be what you want.</span>
<span class="comment-copy">Yep. It's what the OP was doing, so I followed suit with what he wanted.</span>
