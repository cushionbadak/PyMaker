<div class="post-text" itemprop="text">
<p>Regex help.  I am searching a string and looking to find and remove text.
What I have so far is not working.</p>
<pre><code>thisstring = "some text here
more text
findme=words15515.1515
"
a = re.compile(r'^findme=\.*')
a = a.search(thisstring)
</code></pre>
<p>I want to find and copy the entire line.</p>
<p>When I print a I get none.<br/>
What I am looking for help with is how do I find the line findme= and remove the entire line from the string and save the line to a variable to be used later.  As well as removing the line from the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to import re this is one way:</p>
<pre><code>import re

thisstring = '''some text here
more text
findme=words15515.1515
'''
a = [t[0] for t in [re.findall(r'^findme=.*',r) for r in thisstring.split('\n')] if t]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need regex:</p>
<pre><code>thisstring = """some text here
more text
findme=words15515.1515
"""

not_matching, matching = [], []
for line in thisstring.split("\n"):
    if line.startswith("findme="):
        matching.append(line)
    else:
        not_matching.append(line)
new_string = '\n'.join(not_matching)
</code></pre>
<p>This results in:</p>
<pre><code>&gt;&gt;&gt; new_string
'some text here\nmore text\n'
&gt;&gt;&gt; matching
['findme=words15515.1515']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your regex needs to search for a group that starts with <code>findme=</code> and the any character or number.</p>
<pre><code>&gt;&gt;&gt; a = re.compile(r'.*(findme=.*\n?)')
&gt;&gt;&gt; a = a.findall(thisstring)
&gt;&gt;&gt; print a
['findme=words15515.1515']
</code></pre>
<p>I suggest you to use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re.sub</a> if you want to find and replace string(<code>change_to</code>) from your <code>thistring</code></p>
<pre><code>&gt;&gt;&gt; change_to =''
&gt;&gt;&gt; thisstring
'some text here\nmore text\nfindme=words15515.1515'
&gt;&gt;&gt; re.sub(r'findme=.*\n?',change_to,thisstring)
'some text here\nmore text\n'
</code></pre>
</div>
<span class="comment-copy">First of all, your code needs triple-quoted strings. Secondly, why did you escape the dot in your regex?</span>
<span class="comment-copy"><code>^</code> doesn't match arbitrary line beginnings unless you specify <code>MULTILINE</code> mode.</span>
<span class="comment-copy">regex seems overcomplicated for your case. I would simply split by <code>'\n'</code> and use python's <code>in</code> operator to test for <code>'findme='</code> in each line. Also if you want multiline string literal you do need triple quotes</span>
<span class="comment-copy"><code>for line in thisstring.split('\n'): if 'findme=' in line: dostuff()</code></span>
<span class="comment-copy">@bvmcode: That's a backslash.</span>
<span class="comment-copy">I was getting the string from a text file that I am already using the .read().  So I do not want to loop over the string.  But that would have worked also.</span>
<span class="comment-copy">I am reading from a text file using .read().  I did not want to loop over the data.  The regex I came up with works.  But I want to know if there is a way to combine them? I have the correct regex.      a = re.compile(r'findme=(.?)*')      a = a.search(f1).group(0)      removes the line from the string     f1 = re.sub(r'findme=(.?)*', '', f1) The a variable contains findme=data after But how do I remove the line from the string, using regex?</span>
<span class="comment-copy">Why do you not want to loop over the data and why do you want to use regex?</span>
<span class="comment-copy">I have the correct regex.      a = re.compile(r'findme=(.?)*')      a = a.search(f1).group(0)  The a variable contains findme=data after But how do I remove the line from the string, using regex? Without doing a separate re.sub.  I guess is there anyway to combine both into one?  Thanks for everyone's help.  f1 = re.sub(r'findme=(.?)*', '', f1)</span>
<span class="comment-copy"><code>thisstring=thisstring.replace(a, change_to)</code> should do right?</span>
