<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10279712/python-how-to-print-dict-in-separate-line">Python: how to print dict in separate line?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm very new to Python and I need to make the code that counts the number of times each number appears in a list associated with a specific key. The program should then print out those counts on separate line</p>
<p>I was able to print out the count, but I have trouble printing them on separate lines. Here is what I was able to do so far:</p>
<pre><code>import json

#####

def read_json(filename):
    dt = {}

    fh = open(filename, "r")
    dt = json.load(fh)

    return dt

##### 

def num_counter(dt):

    numbers = dt["daily_stock_prices"]


    counter = {}

    for number in numbers:
        counter[number] = 0

    for number in numbers:
         counter[number] += 1

    print counter

#####

filename = raw_input('Please enter the file name: ')

#####

r = read_json(filename)
num_counter(r)
</code></pre>
<p>I have tried to work on printing the counter on separate lines as seen below, but I remain unsuccessful. Any advice? I'm also not sure where to include it in my code.</p>
<pre><code>def print_per_line(number_counts):

    for number in number_counts.key():

            count = word_counts[word]       

            print word,count
</code></pre>
<p>Here is the list if needed:</p>
<pre><code>{
    "ticker": "MSFT",
    "daily_stock_prices": [0,1,5,10,12,15,11,9,9,5,15,20]
}
</code></pre>
<p>The final output should be:</p>
<pre><code>item: count
item: count
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>def num_counter(dt):
    numbers = dt["daily_stock_prices"]
    counter = {}
    for number in numbers:
        counter[number]= counter.get(number, 0) + 1
    return counter

def print_per_line(num_count):
    for k,v in counter.iteritems():
       print str(k) + ":  " + str(v)

# You call them like this
r = read_json(filename)
num_count = num_counter(r)
print_per_line(num_count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is how to do it both with and without the <code>collections</code> module.</p>
<pre><code>import collections
import json

# Here is the sample data
data = """{
    "ticker": "MSFT",
    "daily_stock_prices": [0,1,5,10,12,15,11,9,9,5,15,20]
}"""

# It's easiest to parses it with as JSON.
d = json.loads(data)

# You can use the collections module to count.
counts = collections.Counter(d['daily_stock_prices'])

# Or you can create a dictionary of the prices.
pricedict = {}
for price in d['daily_stock_prices']:
    if pricedict.has_key(price):
        pricedict[price] += 1
    else:
        pricedict[price] = 1

# Print output - you could substitute counts for pricedict. 
for k,v in pricedict.iteritems():
    print("{} - {}".format(k, v))
</code></pre>
<p>OUTPUT</p>
<pre><code>0 - 1
1 - 1
5 - 2
9 - 2
10 - 1
11 - 1
12 - 1
15 - 2
20 - 1
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">What about showing us example of the file content and example output?</span>
<span class="comment-copy">Try using <a href="https://docs.python.org/3/library/pprint.html#pprint.pprint" rel="nofollow noreferrer">pprint</a></span>
<span class="comment-copy">done editing...</span>
<span class="comment-copy">is it possible to continue the code from what I started please</span>
<span class="comment-copy">@J.Doe updated the answer, is that what you looking for ?</span>
<span class="comment-copy">I'm not allowed to add a function call. Sorry forgot to mention</span>
<span class="comment-copy">Is there a way without using collections. I haven't learned that command yet</span>
<span class="comment-copy">@J.Doe Have given the answer without that below</span>
<span class="comment-copy">Yes there is -- I'll post an update. The collections module just makes it easier. Just saw that chinmay showed how to do that. I'll post something different so you can get a handle on Python's dictionary container.</span>
<span class="comment-copy">Chinmay added another function call when I'm not suppose to</span>
<span class="comment-copy">Just to make sure pricedict is your counter</span>
