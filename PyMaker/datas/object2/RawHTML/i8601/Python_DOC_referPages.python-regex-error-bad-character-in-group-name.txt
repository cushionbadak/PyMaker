<div class="post-text" itemprop="text">
<p>Can someone tell me why this regex works fine on oneline regex websites but not while using re.compile() in python.</p>
<p>I have used this website:
<a href="https://regex101.com/" rel="nofollow noreferrer">https://regex101.com/</a> and tested string is:</p>
<pre><code>"test": "value"
</code></pre>
<p>Python code</p>
<pre><code>x = r'((?(?=")(?:"(?(?&lt;=\\)(?:.)|(?:[^")]))+")|(?:\w+)))(:|~)\s+((?(?=")(?:"(?(?&lt;=\\)(?:.)|(?:[^"]))+")|(?:\w+)))'
re.compile(x)
</code></pre>
<p>Error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\Python27\lib\re.py", line 190, in compile
    return _compile(pattern, flags)
  File "C:\Python27\lib\re.py", line 245, in _compile
    raise error, v # invalid expression
sre_constants.error: bad character in group name
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want abilities beyond standard re, try this one:
<a href="https://bitbucket.org/mrabarnett/mrab-regex" rel="nofollow noreferrer">https://bitbucket.org/mrabarnett/mrab-regex</a></p>
<p>It is a drop-in replacement of re, but supports many more new features, including conditional pattern. </p>
</div>
<div class="post-text" itemprop="text">
<p>From your example string and the regex101 output, it looks like you are trying to match a Python string with the general form:</p>
<pre><code>"word": "word"
</code></pre>
<p>That is to say, a groups 1 and 3 are words that can either be in double quotes, or not quoted, but <strong>no</strong> hanging quotes, group 2 is a colon or tilde and can be followed by a whitespace character. So:</p>
<pre><code>goodString = "\"test\": value"
badString = "test\": value"
</code></pre>
<p>The problem with your regex compile string actually hints towards the solution! <a href="https://stackoverflow.com/questions/12330519/why-am-i-getting-sre-constants-error-bad-character-in-group-name-with-ascii-g">This question</a> sheds light on the returned error and the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Python documentation</a> gives information on named groups. </p>
<p>By using named groups, you can make your expression shorter and more Pythonic!</p>
<pre><code>x = r'((?P&lt;a&gt;\"?)\w+(?P=a))(:|~)\s+((?P&lt;b&gt;\"?)\w+(?P=b))'
</code></pre>
<p>For clarity:</p>
<pre><code>group 1 = ((?P&lt;a&gt;\"?)\w+(?P=a))
group 2 = (:|~)\s+
group 3 = ((?P&lt;b&gt;\"?)\w+(?P=b))
</code></pre>
<p>Groups 1 and 3 capture the presence or absence of the quotation mark in a subgroup (a and b, respectively), then check for that subgroup at the end of the word.</p>
<p>You do not need to name the groups either! You could simply reference their number:</p>
<pre><code>x = r'((\"?)\w+(\2))(:|~)\s+((\"?)\w+(\6))'
</code></pre>
<p>As a final test:</p>
<pre><code>x = r'((\"?)\w+(\2))(:|~)\s+((\"?)\w+(\6))'
goodString = "\"test\": value"
badString = "test\": value"
print(re.match(x,goodString))
print(re.match(x,badString))
</code></pre>
<p>Output:</p>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 13), match='"test": value'&gt;
None
</code></pre>
</div>
<span class="comment-copy">You are using conditionals in your regex, they are not supported by python re syntax. You should switch to python in regex101 when you are testing your patterns.</span>
<span class="comment-copy">If you switch regex101 to Python mode it will also tell you it's broken.</span>
<span class="comment-copy">@SebastianProske Thanks, got it.</span>
<span class="comment-copy">I would be thankful if you provide an explanation</span>
<span class="comment-copy">Thanks, anyone knows why is it not implemented in python's re module</span>
