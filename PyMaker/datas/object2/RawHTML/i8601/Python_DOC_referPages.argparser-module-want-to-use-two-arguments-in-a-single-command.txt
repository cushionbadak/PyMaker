<div class="post-text" itemprop="text">
<p>I'm trying to use the argparse module in python for a script I am writing, I want to be able to use multiple flags in my command and store those variables. Here is what I have so far.</p>
<pre><code>parser = argparse.ArgumentParser(
                 description='This program allows for you to create a User in AD and add that User to a specific AD Group',
                 epilog='Note: In order to run this script you must have login credentials of an AD admin. \
                 You must also know the username, if you intend to search for users, or the group name if intending to search for group. \
                 The logging level is set to info by default.')

parser.add_argument('--listuser', nargs=?, default='None', type=str,help='Lists attributes for a given user. Example: "--listuser --username &lt;AD username(s)&gt; "')
    parser.add_argument('--listusergroups', nargs=?, default='None', type=str, help='Lists the groups a user is associated with attributes for a given user. Example: "--listusergroups &lt; AD username(s)&gt;"')
    parser.add_argument('--listgroupmembers', nargs=?, default='None', type=str,help='Lists the members of a given group. Example: "--listgroupmembers --groups &lt;group(s)&gt;"')
    parser.add_argument('--addgroupmembers', nargs=?, default='None', type=str, help='Adds members to a specific AD group. Example: "./AD_Utility --addgroupmembers &lt;group(s)&gt; --username &lt;username(s)&gt;"')
    parser.add_argument('--renamegroup', nargs=?, default='None', type=str, help='Renames the AD group"./AD_Utility --rename &lt;group(s)&gt; &lt;new_group_name&gt;"')
    parser.add_argument('--disableuser', nargs=?, default='None', type=str, help='Disables user from AD. Example: "./AD_Utility --disableusers --username &lt;username(s)&gt;"')
    parser.add_argument('--removeuserfromgroup', nargs=?, default='None', type=str, help='Disables user from AD. Example: "./AD_Utility --removeuserfromgroup &lt;username&gt; --group &lt;groupname&gt;"')
    parser.add_argument('--creategroups', nargs=?, default='None', type=str, help='Enter the name of the group you want to search for. Example: "aws')
    parser.add_argument('--username', nargs=?, default='None', type=str, help='Username of the account you intend to gain information on. Example: "amazing')
    parser.add_argument('--scope', nargs=?, default='None', type=str, help='Scope of the search for which you are executing. Example: "aws')
args = parser.parse_args()

function_mapping = {
 "listuser": attributes_of_a_user, # or optionally: {"function": attributes_of_a_user, "nargs": "?", "default":..}
 "listusergroups": find_users_groups,
 "listgroupmembers": get_users_associated_with_groups,
 "addgroupmembers": add_users_to_group,
# "renamegroup": 
 "disableuser": disable_user,
 "creategroups": create_group,
 "createuser": create_user_in_ad,
 # "username"
 # "scope"
}

for function_name, function in function_mapping.iteritems():
      if args[function_name]:
        function(*args[function_name])

service = args.serviceaccount
group = args.groups
listuser = args.listuser
listusergroups = args.listusergroups
addgroupmembers = args.addgroupmembers
disableuser = args.disableuser
group_name, new_group_name = args.renamegroup
scope = args.scope
username = args.username
new_users = get_users()
</code></pre>
<p>How I get invalid syntax when I run any of the commands:</p>
<pre><code>./&lt;script_name&gt;.py --create test123
</code></pre>
<p>Can anyone see where in my add arguments I'm making an error?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly you want to specify the number of command line arguments to be consumed by a flag?<br/>
Have a look at <a href="https://docs.python.org/3/library/argparse.html#the-add-argument-method" rel="nofollow noreferrer">this</a>. Specifically: <code>nargs - The number of command-line arguments that should be consumed.</code> For example for the flag --renamegroup you need <code>nargs=2</code> so that you can put <code>--renamegroup oldname newname</code>  "Oldname" and "newname" being the two arguments that follow the renamegroup flag.
Basically what that line should look like:  </p>
<pre><code>parser.add_argument('--renamegroup', nargs=2, default='None', type=str, help='Renames the AD group"./AD_Utility --rename &lt;group(s)&gt; &lt;new_group_name&gt;"')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using</p>
<pre><code>parser.add_argument('--renamegroup', nargs=2, default='None', type=str, help='Renames the AD group"./AD_Utility --rename &lt;group(s)&gt; &lt;new_group_name&gt;"')
</code></pre>
<p>so this flag expects exactly two arguments.</p>
</div>
<span class="comment-copy">So that does answer the question that I asked but I don't think I asked it very well. On top of the fact that it takes two arguments, I want to know how I can store those two arguments as variables. Am I on the right track with this? How would I store those results as variables in this specific example:    <code>group_name = args.groups listuser = args.listuser listusergroups = args.listusergroups addgroupmembers = args.addgroupmembers disableuser = args.disableuser renamegroup = args.renamegroup</code></span>
<span class="comment-copy">I believe you can do this by setting the action parameter to "store" as explained <a href="https://docs.python.org/2.7/library/argparse.html#action" rel="nofollow noreferrer">in the official docs</a>.</span>
<span class="comment-copy">For my function map, when I try to execute this script to <code>--listuser</code> for example I keep getting an error saying <code>attributes_of_a_user</code> not defined. Do you know what might be causing that issue?</span>
<span class="comment-copy">So that does answer the question that I asked but I don't think I asked it very well. On top of the fact that it takes two arguments, I want to know how I can store those two arguments as variables. Am I on the right track with this? How would I store those results as variables in this specific example: <code>group_name = args.groups listuser = args.listuser listusergroups = args.listusergroups addgroupmembers = args.addgroupmembers disableuser = args.disableuser renamegroup = args.renamegroup</code></span>
<span class="comment-copy">You could use <code>group_name, new_group_name = args.renamegroup</code></span>
<span class="comment-copy">So that will store the responses as two variables group_name and new_group_name great! So how does the function map I created look? I'm curious about how to pass in args to my functions if I'm storing them as objects in the function map?</span>
<span class="comment-copy">I'm not quite sure what you want to achieve with the function map. Could you explain?</span>
<span class="comment-copy">I have a whole bunch of functions written to Manage an Active Directory instance (no need to worry about the specific functions themselves and whats in them). Each function takes in a set of arguments, and I want those argument values to be based on what the user has input into the command they are running with the script. So what I'm confused about how I've been advised to build out the function map, is how will each function know what values to input for it's parameters? Does that make sense? If not, I apologize, I'll try and think of how to ask it better.</span>
