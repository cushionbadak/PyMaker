<div class="post-text" itemprop="text">
<p>I'm trying to read a jsonl file with Python's pandas but don't know how to deal with a key that's a json.</p>
<p>What I'm doing is:</p>
<pre><code>pd.read_json('jsonfile', lines=True)
</code></pre>
<p>And I'm getting something like:</p>
<pre><code>ID  COL1    COL2    COL3
0   12047   93947   {'A': '001', 'B': '"002"'}
1   83621   24013   {'H': '101', 'J': 'TTA', 'K': 'TTB'}
</code></pre>
<p>Namely, the entries in <code>COL3</code> are jsons that can have different keys.</p>
<p>How to transform the keys in <code>COL3</code> in columns? Since some rows will not have values for the new generated columns, I'd ideally prefer to have it like:</p>
<pre><code>ID  COL1    COL2    A      B       H    J      K
0   12047   93947  '001'  '"002"'  NA   NA     NA
1   83621   24013   NA     NA     '101' 'TTA' 'TTB'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use:</p>
<pre><code>df=df.join(df.pop('COL3').apply(pd.Series))
print(df)
</code></pre>
<p>Or:</p>
<pre><code>#i think this should be faster
df=df.join(pd.DataFrame(df.pop('COL3').values.tolist(), index=df.index))
print(df)

  ID   COL1   COL2    A      B    H    J    K
0  0   12047  93947  001  "002"  NaN  NaN  NaN
1  1   83621  24013  NaN  NaN    101  TTA  TTB
</code></pre>
<p>Just in case the <code>COL3</code> is not an actual dict, you should first turn it to a dict by:</p>
<pre><code>df.COL3=df.COL3.apply(ast.literal_eval)
</code></pre>
</div>
