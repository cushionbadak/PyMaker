<div class="post-text" itemprop="text">
<p>I have this python script, I now open an image from a given path in the script itself, what I need is a dynamical way to pass the image to the script.</p>
<p>For example: <code>python pixel.py 9tiff</code>, I will be running this from php with shell exec and I will need to pass different images each time, so I can't hard code the image name in to a script itself</p>
<pre><code>import os, sys
import Image

im = Image.open('/www/test/tiffFiles/9.tiff')
rgb_im = im.convert('RGB')
r0, g0, b0 = rgb_im.getpixel((20, 20))
r1, g1, b1 = rgb_im.getpixel((40, 40))
r2, g2, b2 = rgb_im.getpixel((60, 60))
print(r0, g0, b0)
print(r1, g1, b1)
print(r2, g2, b2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Parsing command line arguments in python are fairly simple. you can change the your script to as follows:</p>
<pre><code>import sys
import Image

if __name__ =='__main__':
    im = Image.open(str(sys.argv[1]))
    rgb_im = im.convert('RGB')
    r0, g0, b0 = rgb_im.getpixel((20, 20))
    r1, g1, b1 = rgb_im.getpixel((40, 40))
    r2, g2, b2 = rgb_im.getpixel((60, 60))
    print(r0, g0, b0)
    print(r1, g1, b1)
    print(r2, g2, b2)
</code></pre>
<p>In Python argv[0] variable is always reserved for the name of the python script. <code>python myScript.py 9tiff</code> here <code>argv[0]</code> is held by <strong>myScript.py</strong> and <code>argv[1]</code> is used by <strong>9tiff</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>There are tons of similar questions out there, but if you want an easy solution, use <a href="http://www.pythonforbeginners.com/system/python-sys-argv" rel="nofollow noreferrer"><code>sys.argv</code></a></p>
<pre><code>import sys
print "This is the name of the script: ", sys.argv[0]
print "Number of arguments: ", len(sys.argv)
print "The arguments are: " , str(sys.argv)
</code></pre>
<p>But the best is always <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a></p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('integers', metavar='N', type=int, nargs='+',
                    help='an integer for the accumulator')
parser.add_argument('--sum', dest='accumulate', action='store_const',
                    const=sum, default=max,
                    help='sum the integers (default: find the max)')

args = parser.parse_args()
print(args.accumulate(args.integers))
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1009860/how-to-read-process-command-line-arguments">How to read/process command line arguments?</a></span>
<span class="comment-copy"><code>Sys.argv</code>. Have a look here: <a href="https://stackoverflow.com/questions/1009860/how-to-read-process-command-line-arguments" title="how to read process command line arguments">stackoverflow.com/questions/1009860/â€¦</a></span>
<span class="comment-copy">upvote for argparse</span>
