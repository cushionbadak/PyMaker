<div class="post-text" itemprop="text">
<p>How can I parse text on python using regex to extract a valid passage from stuff like</p>
<blockquote>
<p>near accomodation\n\nNear accomodation is one case of accomodation. By changing the shape of the lens, accomodation adjusts the refractory power to the distance of an object under observation. The issue is</p>
</blockquote>
<p>I want to extract </p>
<blockquote>
<p>Near accomodation is one case of accomodation. By changing the shape of the lens, accomodation adjusts the refractory power to the distance of an object under observation.</p>
</blockquote>
<p>That means the valid text should end on a period and get rid of stuff like "The issue is" which is an unfinished sentence as well as anything that comes before characters like \n.</p>
<p>Another example would be</p>
<blockquote>
<p><code>&lt;p&gt;</code>The level of dopamine available in nerve terminals is controlled by the enzyme monoamineoxidase, which inactivates the neurotransmitter in the presynapse. <code>&lt;/p&gt;</code>\n\n<code>&lt;/body&gt;&lt;/html&gt;</code></p>
</blockquote>
<p>Which should extract</p>
<blockquote>
<p>The level of dopamine available in nerve terminals is controlled by the enzyme monoamineoxidase, which inactivates the neurotransmitter in the presynapse. </p>
</blockquote>
<p>So get also rid of any html tags </p>
<p>So I need clean passages that end up in a period. Without any newline characters or html tags that could come after or before the relevant passage. All passages are more or less like the examples I provided.</p>
</div>
<div class="post-text" itemprop="text">
<p>I propose seperating the removal of HTML tags (which you should <a href="https://stackoverflow.com/a/1732454/1016216">not do with regex</a>) from the main task, for example <a href="https://stackoverflow.com/a/925630/1016216">with this solution.</a></p>
<p>The rest of the task can then be solved with the following regex:</p>
<pre><code>(?:^|\n|\.)(.*\.)
</code></pre>
<p>We first match either the beginning of the text (<code>^</code>), a new line or a literal dot. The <code>?:</code> is just to make this group non-capturing. Then we collect everything until a dot, in a greedy fashion (meaning we get the biggest possible match).</p>
<p>You could use it like this:</p>
<pre><code>import re
m = re.findall(r"(?:^|\n|\.)(.*\.)", your_string)
if m:
    print(m[0].strip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The key is to be able to precisely state the conditions that:</p>
<ul>
<li>Start the match</li>
<li>Continue the match</li>
<li>End the match</li>
</ul>
<p>In your case, these seem to be</p>
<ul>
<li>An upper-case letter. <strong>[A-Z]</strong></li>
<li>Not any char from '\n', '&lt;' and so on, repeated. <strong>[^\n&lt;&gt;]+</strong></li>
<li>A full stop. <strong>\.</strong></li>
</ul>
<p>Since regexs are <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">greedy</a> by default, the ending condition will apply on a longest match and so get multiple sentences that don't contain the continuation condition. This gives the regex <strong>[A-Z][^\n&lt;&gt;]+\.</strong>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; matcher = re.compile('[A-Z][^\n&lt;&gt;]+\.')
</code></pre>
<p>Using what you provided:</p>
<pre><code>&gt;&gt;&gt; matcher.findall('''&lt;p&gt;The level of dopamine available in nerve terminals is controlled by the enzyme monoamineoxidase, which inactivates the neurotransmitter in the presynapse. &lt;/p&gt;\n\n&lt;/body&gt;&lt;/html&gt;''')[0]
'The level of dopamine available in nerve terminals is controlled by the enzyme monoamineoxidase, which inactivates the neurotransmitter in the presynapse.'
&gt;&gt;&gt; matcher.findall('''near accomodation\n\nNear accomodation is one case of accomodation. By changing the shape of the lens, accomodation adjusts the refractory power to the distance of an object under observation. The issue is''')[0]
'Near accomodation is one case of accomodation. By changing the shape of the lens, accomodation adjusts the refractory power to the distance of an object under observation.'
</code></pre>
<p>Feel free to adapt as needed.</p>
</div>
<span class="comment-copy">you need to create regex expressions for the different cases you find. Then you need to apply them. Start with reading <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a> then move your text over to <a href="http://www.regex101.com" rel="nofollow noreferrer">regex101.com</a> and try out your regexxes. Iterate until you are statisfied.</span>
<span class="comment-copy">By the by - your first example captures 2 sentences - it does not stop at the first <code>.</code>. Your second example: you should probably get rid of html <i>first</i> then extract. Html is too complex to be easily handled with regex - some will even tell you to use a html parser instead (which is a good idea). Your first example will also have more text after it - regex is a pattern analasys, no text comprehension thingy, so it will find patterns, not understand which text belongs together.</span>
<span class="comment-copy">@PatrickArtner Thanks for the explanations. Yeah the period shouldn't be the first, you're correct. But the fact that regex is greedy like the answers explained make it perfect for getting the longest passage. Also I already applied a text comprehension procedure before this so the first example already is accurate enough but "The issue is" should be left out. That's why I need everything to stop on a period to make sure it at least finishes on a complete sentence.</span>
<span class="comment-copy">Worked great! Thanks</span>
<span class="comment-copy">I just found a new example that starts like "are small brain cells with a life-long division. The types of glial cells are astrocytes,". The above re takes everything but it would be better if it takes only the beginning of a new sentence so from "The types of glial cells are astrocytes," on. How could I modify the above expression to tell it to look for patterns that start with capital letter?</span>
<span class="comment-copy">Change the regex to <code>(?:^|\n|\. )(?=[A-Z])(.*\.)</code> in that case, see <a href="https://regex101.com/r/VmW2oY/1" rel="nofollow noreferrer">this demo</a>.</span>
