<div class="post-text" itemprop="text">
<p>I have array like this:</p>
<pre><code>array = [['page', 'pageviews'],
         ['page1', '65'],
         ['page2', '44'],
         ['page1', '40']]
</code></pre>
<p>How can I make the script to go through rows and make one row with 'page1' and sum two values '65' and '40' together.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution using <code>pandas</code>:</p>
<pre><code>import pandas as pd

# read list of lists into pandas dataframe
df = pd.DataFrame(array[1:], columns=array[0])

# convert views from string to integer
df['pageviews'] = df['pageviews'].astype(int)

# group by page, sum pageviews, create list from results
lst = df.groupby('page')['pageviews'].sum()\
        .reset_index().values.tolist()

# add headers
res = [array[0]] + lst

print(res)

[['page', 'pageviews'],
 ['page1', 105],
 ['page2', 44]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using pandas (you say you're open to using this in the comments), this becomes pretty straightforward:</p>
<pre><code>import pandas as pd

df = pd.DataFrame(array[1:], columns=array[0])
df['pageviews'] = pd.to_numeric(df.pageviews)
summed = df.groupby('page').pageviews.sum()
</code></pre>
<p>This produces the following Pandas Series:</p>
<pre><code>page
page1    105
page2     44
</code></pre>
<p>Which you can easily index using the page name:</p>
<pre><code>summed['page1']
# 105
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At its core, this is a grouping problem. Grouping is easy with a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a>:</p>
<pre><code>from collections import defaultdict

sums = defaultdict(int)
for page, views in array[1:]:
    sums[page] += int(views)

# result: defaultdict(&lt;class 'int'&gt;, {'page1': 105, 'page2': 44})
</code></pre>
<p>If you want the result to be in the same format as you input (a list of lists), convert the dict to a list with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer"><code>list comprehension</code></a>:</p>
<pre><code>result = [[page, views] for page, views in sums.items()]
# result: [['page1', 105], ['page2', 44]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to sort it, afterwards you could use <code>itertools.groupby</code>:</p>
<pre><code>from itertools import groupby

array = [ 
    ['page', 'pageviews'],
    ['page1', '65'],
    ['page2', '44'],
    ['page1', '40']
]

# sort it on the first element of each item
array = sorted(array, key = lambda x: x[0])

# keys of interest
keys = ['page1', 'page2']

for k, v in groupby(array, key = lambda x: x[0]):
    if k in keys:
        s = sum([int(x[1]) for x in v])
        print("Key: {}, Sum: {}".format(k, s))
</code></pre>
<p>This would yield</p>
<pre><code>Key: page1, Sum: 105
Key: page2, Sum: 44
</code></pre>
</div>
<span class="comment-copy">Are you open to using <code>pandas</code>?</span>
<span class="comment-copy">Yes I am open to using Pandas, I have it installed but didn't dig into it yet.</span>
<span class="comment-copy">Thank you for your answer. I applied it and it worked. I needed to sum and then sort so I did 'new_data = df.groupby(0).sum().sort_values(by=[1], ascending=False)'</span>
