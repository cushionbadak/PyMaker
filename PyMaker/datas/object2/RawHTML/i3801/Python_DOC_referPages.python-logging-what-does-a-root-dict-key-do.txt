<div class="post-text" itemprop="text">
<p>I am integrating Sentry into my Django project for logging errors, and the starter <a href="https://docs.sentry.io/clients/python/integrations/django/" rel="nofollow noreferrer">logging config they recommend</a> starts like this:</p>
<pre><code>LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'root': {
        'level': 'WARNING',
        'handlers': ['sentry'],
    },
    ...
}
</code></pre>
<p>now, I am used to listing my loggers and assigning handlers in the "logging" key like this:</p>
<pre><code>'loggers': {
    '': {
        'handlers': ['console', 'mail_admins'],
        'level': 'INFO',
    },
}
</code></pre>
<p>This way I capture output from all loggers (the name <code>''</code> captures all) and control my handlers.</p>
<p>But what does putting the <code>root</code> key in do to the logging hierarchy? I couldn't find the answer in the python docs.</p>
<p>From what I've seen it just disables all my tuned loggers with the single <code>sentry</code> logger. I stop seeing my errors in the console, etc.</p>
<p>However if I ignore the sentry <code>root</code> advice and just add the logger over here</p>
<pre><code>'loggers': {
    '': {
        'handlers': ['console', 'mail_admins', 'sentry'],
        'level': 'INFO',
    },
}
</code></pre>
<p>All my three loggers start working together in harmony.</p>
<p>So I don't get the <code>root</code> thing. What does it do?</p>
</div>
<div class="post-text" itemprop="text">
<p>root - this will be the configuration for the root logger. Processing of the configuration will be as for any logger, except that the propagate setting will not be applicable.</p>
<p><a href="https://docs.python.org/3/library/logging.config.html#dictionary-schema-details" rel="nofollow noreferrer">docs</a></p>
<p><a href="https://stackoverflow.com/questions/20258986/root-logger-in-dictconfig">some more info also stackoverflow</a></p>
</div>
