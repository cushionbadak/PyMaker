<div class="post-text" itemprop="text">
<p>I have the user <em>input strings</em> until they are finished at which point they input <strong>Done</strong>. I then check each string to see if it is a <em>palindrome or not</em>. If the string is a palindrome then, I then insert it into a list. I have my palindrome checking code working for strings like "swap paws" but it does not work for strings like "<em>taco cat</em>". I can't include libraries to help me with this so I'm unsure as to how I can go about ignoring spaces and case. This isn't the same as other questions asked here because the ones that do talk about ignoring space and case use libraries and the others just talk about checking if a basic string with no spaces or anything special is a palindrome. Here is my code:</p>
<pre><code>plist={}
val=1
print("Enter the strings: ")

inp = raw_input()       # Get the input
if(inp==inp[::-1]):
    plist[inp] = val

while inp != "Done":        # Loop until Done is entered
    if(inp==inp[::-1]):    #  inp==inp[::-1]
        plist[inp] = val
    inp = raw_input()   # Get the input again

print("The palindromes are: ")
print(plist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This seems to be about filtering out whitespace characters, the palindrome stuff you have already figured out.</p>
<p>To filter out a space character you can do this:</p>
<pre><code>&gt;&gt;&gt; "".join([c for c in "taco cat" if c != " "])
'tacocat'
</code></pre>
<p>For other whitespace characters you can change the if filter:</p>
<pre><code>... c not in [" ", "\t", "\n", ...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here you have the answer you may be looking for:</p>
<p><strong>(this program runs on Python 3 - maybe some functions are different in Python 2 or lower)</strong></p>
<pre><code># Reverse of a string
def reverse(input_string: str):
    return input_string[::-1]

# Main function
def is_palindrome(input_string: str):
    # type: () -&gt; bool
    reverse_string = reverse(input_string)
    return reverse_string == input_string

# Now your program
palindrome_words = []
is_program_finished = False
do:
    input_text = input("Put your palindrome here or type \"Done\" for finish: ")
    if input_text != "Done":
        if is_palindrome(input_text):
            palindrome_words.append(input_text)
    else:
        is_program_finished = True
while not is_program_finished
# I recommend you to use "pprint" for displaying list
from pprint import pprint
pprint(palindrome_words)
# Else:
print(palindrome_words)
</code></pre>
<p>Hope it helps ^^</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/17331290/how-to-check-for-palindrome-using-python-logic">How to check for palindrome using Python logic</a></span>
<span class="comment-copy">you should check the standard library for <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow noreferrer"><code>str</code></a> you'll find there how to remove spaces and change case</span>
<span class="comment-copy">Objectively, words with whitespaces <b>ARE NOT PALINDROMES</b> so it is OK that the program says they are not</span>
