<div class="post-text" itemprop="text">
<p>I'm trying to get the adidas shoe <a href="https://www.tennisexpress.com/search.cfm?searchKeyword=BB6892" rel="nofollow noreferrer">link</a> from a search page, can't figure it out what I'm doing wrong. </p>
<p><strong>I tried</strong> <code>tags = soup.find("section", {"class": "productList"}).findAll("a")</code>
Doesnt work :(</p>
<p>I also tried to print all <code>href</code> and the desired link is not in there :(</p>
<p><strong>So I'm expecting to print this :</strong></p>
<pre><code>https://www.tennisexpress.com/adidas-mens-adizero-ubersonic-50-yrs-ltd-tennis-shoes-off-white-and-signal-blue-62138


from bs4 import BeautifulSoup
import requests

url = "https://www.tennisexpress.com/search.cfm?searchKeyword=BB6892"

# Getting the webpage, creating a Response object.
response = requests.get(url)

# Extracting the source code of the page.
data = response.text

# Passing the source code to BeautifulSoup to create a BeautifulSoup object for it.
soup = BeautifulSoup(data, 'lxml')

# Extracting all the &lt;a&gt; tags into a list.
tags = soup.find("section", {"class": "productList"}).findAll("a")

# Extracting URLs from the attribute href in the &lt;a&gt; tags.
for tag in tags:
    print(tag.get('href'))
</code></pre>
<p><strong>Here's the html code for that link</strong> </p>
<pre><code>&lt;section class="productList"&gt; &lt;article class="productListing"&gt; &lt;a class="product" href="//www.tennisexpress.com/adidas-mens-adizero-ubersonic-50-yrs-ltd-tennis-shoes-off-white-and-signal-blue-62138" title="Men`s Adizero Ubersonic 50 Yrs LTD Tennis Shoes Off White and Signal Blue" onmousedown="return nxt_repo.product_x('38698770','1');"&gt; &lt;span class="sale"&gt;SALE&lt;/span&gt; &lt;span class="image"&gt; &lt;img src="//www.tennisexpress.com/prodimages/78091-DEFAULT-m.jpg" alt="Men`s Adizero Ubersonic 50 Yrs LTD Tennis Shoes Off White and Signal Blue"&gt; &lt;/span&gt; &lt;span class="brand"&gt; Adidas &lt;/span&gt; &lt;span class="name"&gt; Men`s Adizero Ubersonic 50 Yrs LTD Tennis Shoes Off White and Signal Blue &lt;/span&gt; &lt;span class="pricing"&gt; &lt;strong class="listPrice"&gt;$140.00&lt;/strong&gt; &lt;strong class="percentOff"&gt;0% OFF&lt;/strong&gt; &lt;strong class="salePrice"&gt;$139.95&lt;/strong&gt; &lt;/span&gt; &lt;br&gt; &lt;/a&gt; &lt;/article&gt; &lt;/section&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By inspecting Network tab in Chrome DevTools you can notice that the products you search are fetched after making a request to <code>https://tennisexpress-com.ecomm-nav.com/search.js</code>. You can see example response <a href="https://tennisexpress-com.ecomm-nav.com/search.js?initial_url=https%3A%2F%2Fwww.tennisexpress.com%2Fsearch.cfm%3FsearchKeyword%3Dadidas&amp;search_return=all&amp;keywords=adidas&amp;callback=jQuery33103156303818514996_1527592433524&amp;_=1527592433525" rel="nofollow noreferrer">here</a>. As you can see, it's a mess, so I wouldn't follow this approach.</p>
<p>In your code, you couldn't see the products because the request is made by JavaScript (running in your browser) after the initial page load. Neither standalone <a href="https://docs.python.org/3/library/urllib.html" rel="nofollow noreferrer"><code>urllib</code></a> nor <a href="http://docs.python-requests.org/en/master/" rel="nofollow noreferrer"><code>requests</code></a> can render that content. However you can do that with <a href="https://html.python-requests.org/index.html" rel="nofollow noreferrer"><code>Requests-HTML</code></a> that has JavaScript support (it uses Chromium behind the scenes).</p>
<p><strong>Code:</strong></p>
<pre><code>from itertools import chain
from requests_html import HTMLSession

session = HTMLSession()
url = 'https://www.tennisexpress.com/search.cfm?searchKeyword=adidas+boost'
r = session.get(url)
r.html.render()

links = list(chain(*[prod.absolute_links for prod in r.html.find('.product')]))
</code></pre>
<p>I used <a href="https://docs.python.org/3.6/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>chain</code></a> to join all the sets with absolute links together and I created a list out of it.</p>
<pre><code>&gt;&gt;&gt; links
['https://www.tennisexpress.com/adidas-mens-barricade-2018-boost-tennis-shoes-black-and-night-metallic-62110',
 'https://www.tennisexpress.com/adidas-mens-barricade-2018-boost-tennis-shoes-white-and-matte-silver-62109',
 ...
 'https://www.tennisexpress.com/adidas-mens-supernova-glide-7-running-shoes-black-and-white-41636',
 'https://www.tennisexpress.com/adidas-womens-adizero-boston-6-running-shoes-solar-yellow-and-midnight-gray-45268']
</code></pre>
<p>Don't forget to install Requests-HTML with <code>pip install requests-html</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>soup = BeautifulSoup(data, "html.parser")    
markup = soup.find_all("section", class_=["productList"])
markupContent = markup.get_text()
</code></pre>
<p>So your code goes like</p>
<pre><code>import urllib
from bs4 import BeautifulSoup
import requests

url = "https://www.tennisexpress.com/search.cfm?searchKeyword=BB6892"

r = urllib.urlopen(url).read()
soup = BeautifulSoup(r, "html.parser")
productMarkup = soup.find_all("section", class_=["productList"])
product = productMarkup.get_text()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Right here's the solution:</p>
<pre><code>import requests
import bs4.BeautifulSoup as bs
url="https://www.tennisexpress.com/mens-adidas-tennis-shoes"
req = requests.get(url)
soup = bs(req.text,'lxml') # lxml because page is more xml than html
arts = soup.findAll("a",class_="product")
</code></pre>
<p>and that gives you a list of links to all the adidas tennis shoes! I'm sure you can manage from there.</p>
</div>
<span class="comment-copy">your answer was really clearing a lot of things ! I tried to run your code an got an error : <code>ModuleNotFoundError: No module named 'requests_html</code></span>
<span class="comment-copy">Sorry, forgot to mention you need to install this package. I updated my answer.</span>
<span class="comment-copy">hmmm....having issues to install <code>pip install requests-html</code> on mac siera 10.12.6 / using python 3.6   .... saying <code>Failed building wheel for websockets</code></span>
<span class="comment-copy">I guess you install packages globally and there are some conflicts. You can take a look at <a href="https://github.com/pypa/pipenv" rel="nofollow noreferrer"><code>pipenv</code></a> to manage packages independently in each of your projects.</span>
<span class="comment-copy">probably you forgot about <code>print()</code></span>
<span class="comment-copy">can I have the whole code ? Or at least guide me please where to feed it in my code above ? Thank you !</span>
<span class="comment-copy">Have you tested this?</span>
<span class="comment-copy">@PaulaThomas I did. No luck. Maybe I'm not feeding it corectly, that's why I asked for a full code, or a guide where to place it inside my code. Thank you Paula</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/urllib.html" rel="nofollow noreferrer">docs.python.org/3/library/urllib.html</a>  Also, check the tag identifier as I mentioned.</span>
<span class="comment-copy">@AnotherUser31 I couldn't get it working either. I suspect the page uses AJAX or similar.</span>
<span class="comment-copy">so you're saying I can't get the shoe from that search page ? because for me would be easier to find the products that I only need, instead of going and trying to look for the one I need. I'm sure we can figure out something. I'll be back in 30 minutes, maybe we can chat. No idea how to start a chat room though. Please help me with this.</span>
<span class="comment-copy">I can't get it to give me a list of shoes :(  confused</span>
<span class="comment-copy">Just do <code>links = [art['href'] for art in arts]</code> to get a "list of shoes", but still that solution doesn't answer your question and does a completely different thing.</span>
