<div class="post-text" itemprop="text">
<p>I have a list that consists of both words and digits. Lets say:</p>
<pre><code>list1 = ['1','100', 'Stack', 'over','flow']
</code></pre>
<p>From this list I would like to filter all the digits and keep the words. I have imported re and found the re code for it, namely:</p>
<pre><code>[^0-9] 
</code></pre>
<p>However, I am not sure how to implement this so that I get a list like below.</p>
<pre><code>result = ['Stack', 'over', 'flow']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No need to regex, use <a href="https://www.tutorialspoint.com/python/string_isdigit.htm" rel="nofollow noreferrer"><code>isdigit()</code></a> :</p>
<pre><code>list1 = ['1','100', 'Stack', 'over','flow']
print([i for i in list1 if not i.isdigit()])
</code></pre>
<p>returns :</p>
<pre><code>['Stack', 'over', 'flow']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <code>list-comprehension</code> and string method <code>isdigit</code>:</p>
<pre><code>[elem for elem in list1 if not elem.isdigit()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this quite nicely with list comprehension:</p>
<pre><code>list1 = ['1','100', 'Stack', 'over','flow']
list2 = [i for i in list1 if not i.isdigit()]
</code></pre>
<p>If, for whatever reason, you did want to use regex to do this (maybe you have more complex filtering criteria), you could do it using something like this:</p>
<pre><code>import re

list1 = ['1','100', 'Stack', 'over','flow']
list2 = [i for i in list1 if re.fullmatch('[^0-9]+', i)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>filter</code> + <code>lambda</code>:</p>
<pre><code>list(filter(lambda x: not x.isdigit(), list1))
# ['Stack', 'over', 'flow']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Like other answers suggested, you don't really need Regexes, but they can be more flexible if your requirements change in the future. For example.</p>
<pre><code>from re import match
list1 = ['1','100', 'Stack', 'over','flow']
result = list(filter(lambda el: match(r'^[^0-9]*$', el), list1))
</code></pre>
<ul>
<li><code>^</code>: start of the string</li>
<li><code>[...]</code>: character group</li>
<li><code>^</code>: negates the character group</li>
<li><code>0-9</code>: digits 0-9 (you could use <code>\d</code> as well)</li>
<li><code>*</code>: zero or more times</li>
<li><code>$</code>: end of the string</li>
</ul>
<p>If you want all elements that don't start with a number, use <code>^[^0-9].*</code> where <code>.</code> is any character.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know exact pattern of your list element but this code should work for given example</p>
<pre><code>import re

pattern = re.compile("([A-Za-z])")

list1 = ['1','100', 'Stack', 'over','flow']
result = []

for x in list1: 
    check = pattern.match(x)
    if check is not None:
        result.append(x)
print (result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>#python 3
olist = list(filter(lambda s: s.isalpha() , list1))
&lt;br&gt;print(olist) # ['Stack', 'over', 'flow']

#python2
olist = filter(lambda s:s.isalpha(), list1) 
&lt;br&gt;print olist # ['Stack', 'over', 'flow']
</code></pre>
</div>
<span class="comment-copy">Why does it have to be regex? Why not <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer"><code>str.isdigit</code></a>?</span>
<span class="comment-copy">Did you try anything? List comprehension? <code>filter</code>?</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/41280990/python-remove-all-numbers-from-a-list">Python remove all numbers from a list</a> and <a href="https://stackoverflow.com/questions/3159155/how-to-remove-all-integer-values-from-a-list-in-python">How to remove all integer values from a list in python</a>.</span>
<span class="comment-copy">This is what I was looking for; thank you very much!</span>
