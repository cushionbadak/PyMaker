<div class="post-text" itemprop="text">
<p>I have a problem with me file csv. It's saving with spaces in middle of each row. I don't know why. How do I solve this problem? I'm asking because I don't find any answer and solutions to this.</p>
<p>Here is the code: </p>
<pre><code>import csv
import random

def dict_ID_aeropuertos():
  with open('AeropuertosArg.csv') as archivo_csv:
    leer = csv.reader(archivo_csv)
    dic_ID = {}
    for linea in leer:
      dic_ID.setdefault(linea[0],linea[1])
  archivo_csv.close()
  return dic_ID

def ruteoAleatorio():
  dic_ID = dict_ID_aeropuertos()
  lista_ID = list(dic_ID.keys())
  cont = 0
  lista_rutas = []
  while (cont &lt; 50):
    r1 = random.choice(lista_ID)
    r2 = random.choice(lista_ID)
    if (r1 != r2):
      t = (r1,r2)
      if (t not in lista_rutas):
        lista_rutas.append(t)
        cont += 1

  with open('rutasAeropuertos.csv', 'w') as archivo_rutas:
    escribir = csv.writer(archivo_rutas)
    escribir.writerows(lista_rutas)

  archivo_rutas.close()

ruteoAleatorio()
</code></pre>
<p>Here is the file csv AeropuertosArg.cvs: </p>
<pre><code>1,Aeroparque Jorge Newbery,Ciudad Autonoma de Buenos Aires,Ciudad Autonoma de Buenos Aires,-34.55803,-58.417009
2,Aeropuerto Internacional Ministro Pistarini,Ezeiza,Buenos Aires,-34.815004,-58.5348284
3,Aeropuerto Internacional Ingeniero Ambrosio Taravella,Cordoba,Cordoba,-31.315437,-64.21232
4,Aeropuerto Internacional Gobernador Francisco Gabrielli,Ciudad de Mendoza,Mendoza,-32.827864,-68.79849
5,Aeropuerto Internacional Teniente Luis Candelaria,San Carlos de Bariloche,Rio Negro,-41.146714,-71.16203
6,Aeropuerto Internacional de Salta Martin Miguel de Guemes,Ciudad de Salta,Salta,-24.84423,-65.478412
7,Aeropuerto Internacional de Puerto Iguazu,Puerto Iguazu,Misiones,-25.731778,-54.476181
8,Aeropuerto Internacional Presidente Peron,Ciudad de Neuquen,Neuquen,-38.952137,-68.140484
9,Aeropuerto Internacional Malvinas Argentinas,Ushuaia,Tierra del Fuego,-54.842237,-68.309701
10,Aeropuerto Internacional Rosario Islas Malvinas,Rosario,Santa Fe,-32.916887,-60.780391
11,Aeropuerto Internacional Comandante Armando Tola,El Calafate,Santa Cruz,-50.283977,-72.053641
12,Aeropuerto Internacional General Enrique Mosconi,Comodoro Rivadavia,Chubut,-45.789435,-67.467498
13,Aeropuerto Internacional Teniente General Benjamin Matienzo,San Miguel de Tucuman,Tucuman,-26.835888,-65.108361
14,Aeropuerto Comandante Espora,Bahia Blanca,Buenos Aires,-38.716152,-62.164955
15,Aeropuerto Almirante Marcos A. Zar,Trelew,Chubut,-43.209957,-65.273405
16,Aeropuerto Internacional de Resistencia,Resistencia,Chaco,-27.444926,-59.048739
17,Aeropuerto Internacional Astor Piazolla,Mar del Plata,Buenos Aires,-37.933205,-57.581518
18,Aeropuerto Internacional Gobernador Horacio Guzman,San Salvador de Jujuy,Jujuy,-24.385987,-65.093755
19,Aeropuerto Internacional Piloto Civil Norberto Fernandez,Rio Gallegos,Santa Cruz,-51.611788,-69.306315
20,Aeropuerto Domingo Faustino Sarmiento,San Juan,San Juan,-31.571814,-68.422568
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is, that the csv-module <code>writerows</code> has its own "newline"-logic. It interferes with the default newline behaviour of <code>open()</code>:</p>
<p>Fix like this:</p>
<pre><code>with open('rutasAeropuertos.csv', 'w', newline='' ) as archivo_rutas:
#                                      ^^^^^^^^^^
</code></pre>
<p>This is also documented in the example in the documentation: <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">csv.writer(csvfile, dialect='excel', **fmtparams)</a>:</p>
<blockquote>
<p>If <em>csvfile</em> is a file object, it should be opened with <code>newline=''</code> [1]</p>
</blockquote>
<p>with a link to a footnote telling you:</p>
<blockquote>
<p><strong>[1]</strong>   If newline='' is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use <code>\r\n</code> linendings on write an extra <code>\r</code> will be added. It should always be safe to specify newline='', since the csv module does its own (universal) newline handling.</p>
</blockquote>
<p>You are using windows which does use <code>\r\n</code> which adds another \r which leads to your "wrong" output.</p>
<hr/>
<p>Full code with some optimizations:</p>
<pre><code>import csv
import random

def dict_ID_aeropuertos():
  with open('AeropuertosArg.csv') as archivo_csv:
    leer = csv.reader(archivo_csv)
    dic_ID = {}
    for linea in leer:
      dic_ID.setdefault(linea[0],linea[1]) 
  return dic_ID

def ruteoAleatorio():
  dic_ID = dict_ID_aeropuertos()
  lista_ID = list(dic_ID.keys())
  lista_rutas = set()            # a set only holds unique values 
  while (len(lista_rutas) &lt; 50): # simply check the length of the set
    r1,r2 = random.sample(lista_ID, k=2)  # draw 2 different ones
    lista_rutas.add( (r1,r2) )            # you can not add duplicates, no need to check    
  with open('rutasAeropuertos.csv', 'w', newline='' ) as archivo_rutas:
    escribir = csv.writer(archivo_rutas)
    escribir.writerows(lista_rutas)

ruteoAleatorio()
</code></pre>
<p>Output:</p>
<pre><code>9,3
16,10
15,6
[snipp lots of values]
13,14
13,7
20,4
</code></pre>
</div>
<span class="comment-copy">Can you add a few lines of the content of <code>AeropuertosArg.csv</code> to the question?</span>
<span class="comment-copy">@DavisYoshida Yes of course!</span>
<span class="comment-copy">this is moot: <code>archivo_csv.close()</code>  the with statement autocloses...</span>
<span class="comment-copy">You may have extra spaces in the initial csv. <code>dic_ID.setdefault(linea[0],linea[1])</code> could be <code>dic_ID.setdefault(linea[0].strip(), linea[1].strip())</code>. But that's just a strange way to do <code>dic_ID[linea[0].strip()] = linea[1].strip()</code>. But you only end up using the key (row 0) so why even bother with a <code>dict</code> when a set would do?</span>
<span class="comment-copy"><code>r1 = random.choice(lista_ID)</code> and <code>r2 = random.choice(lista_ID)</code> is bettter written as <code>r1,r2 = random.sample(lista_ID,k=2)</code> - and they will never be the same unless there are duplicate values inside <code>lista_ID</code> to begin with ... <code>sample</code> takes values without replacing them back into a list.</span>
<span class="comment-copy">Thank you very much for your help. I learned a lot of with your answers. Evidently this is the solutions to problem.</span>
