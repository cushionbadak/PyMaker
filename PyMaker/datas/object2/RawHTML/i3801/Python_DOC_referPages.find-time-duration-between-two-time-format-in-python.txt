<div class="post-text" itemprop="text">
<p>I have two times like this
08:00:00 - 10:00:00
want to calculate duration for this two times in mintues?
need answer like
120 mintues</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do a program such as this: </p>
<pre><code>import datetime

time_1 = datetime.datetime(2018, 5, 5, 12, 5, 1)
time_2 = datetime.datetime(2018, 5, 5, 14, 5, 1)

new_time = time_2 - time_1
seconds = new_time.total_seconds()
time = seconds / 60
print(int(time))
</code></pre>
<p>The time difference is two hours just, similar to what you're asking for. A timedelta object in python 2.7 or higher has a total seconds method. So after subtracting the two times you are left with a timedelta object. You can perform the total_seconds() method on it, and then divide by 60 obviously to get minutes. You can then print that result, and you will find the total minutes between two times:</p>
<pre><code>120
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
time1 = '08:00:00'
time2 = '10:00:00' 
format = '%H:%M:%S'
tdelta = datetime.strptime(time2, format) - datetime.strptime(time1, format)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For date time variables, you should use <code>pendulum</code>. Install <code>pendulum</code> and import it. Then your code goes like</p>
<pre><code>import pendulum
duration = '08:00:00 - 10:00:00'
duration = duration.split("-")
start = pendulum.parse(duration[0].strip())
finish = pendulum.parse(duration[1].strip())
minutes = (finish - start).in_minutes()
print(minutes)
</code></pre>
<p>Output:</p>
<pre><code>120
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime

time_local = datetime.now()
time_utc = datetime.utcnow()

print(time_local) # 2018-05-31 08:15:18.303388
print(time_utc)   # 2018-05-31 06:15:18.303388

time_delta = time_utc - time_local
print(repr(time_delta)) # datetime.timedelta(-1, 79200)

time_delta_in_hours = int(time_delta.total_seconds() / 3600)
print(time_delta_in_hours)  # -2
</code></pre>
<p>If you wonder how to transform a string like "08:00:00" to a datetime object, see <a href="https://stackoverflow.com/a/50617693/4350517">Suhas Bachhav post above</a></p>
<p>for more information on timedelta objects see the <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">official documentation</a></p>
</div>
<span class="comment-copy">Try <code>library(lubridate);period_to_seconds(hms(time2) - hms(time1))/60</code> in <code>R</code></span>
<span class="comment-copy">Or <code>as.numeric(hms(time2) - hms(time1), unit = "minutes")</code></span>
