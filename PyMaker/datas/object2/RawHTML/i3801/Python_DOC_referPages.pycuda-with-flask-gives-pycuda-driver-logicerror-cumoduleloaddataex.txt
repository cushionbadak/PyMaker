<div class="post-text" itemprop="text">
<p>I want to run a pyCUDA code on a <code>flask</code> server. The file runs correctly directly using <code>python3</code> but fails when the corresponding function is called using <code>flask</code>.</p>
<p>Here is the relevant code:</p>
<p>cudaFlask.py:</p>
<pre><code>import pycuda.autoinit
import pycuda.driver as drv
import numpy

from pycuda.compiler import SourceModule

def cudaTest():
    mod = SourceModule("""
        int x = 4;
    """)

    print ("done")
    return

if __name__ == "__main__":
    cudaTest()
</code></pre>
<p>server.py (only the part which calls the function):</p>
<pre><code>@app.route('/bundle', methods=['POST'])
def bundle_edges():
    cudaTest()
    return "success"
</code></pre>
<p>On running <code>python cudaFlask.py</code> I get the output <code>done</code> as expected but on starting the server and doing <code>POST</code> request at <code>website/bundle</code> I get the following error on the flask console:</p>
<pre><code>pycuda._driver.LogicError: cuModuleLoadDataEx failed: invalid device context - 
</code></pre>
<p>on the line <code>mod = SourceModule...</code></p>
<p>Where am I going wrong?
There is a <a href="https://stackoverflow.com/q/49595175/7116413">similar question</a> out there but it has not been answered yet.</p>
</div>
<div class="post-text" itemprop="text">
<p>Solved the issue with lazy loading in <code>flask</code> and making the <code>context</code> manually (i.e. without <code>pycuda.autoinit</code> in <code>PyCUDA</code>.</p>
<p>Refer <a href="http://flask.pocoo.org/docs/1.0/patterns/lazyloading/" rel="nofollow noreferrer">this</a> for lazy loading in <code>flask</code>.</p>
<p>My <code>views.py</code> file:</p>
<pre><code>import numpy as np
import pycuda.driver as cuda
from pycuda.compiler import SourceModule

def index():
    cuda.init()
    device = cuda.Device(0) # enter your gpu id here
    ctx = device.make_context()

    mod = SourceModule("""
        int x = 4;
    """)

    ctx.pop() # very important

    print ("done")
    return "success"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>PyCUDA may not be compatible with WSGI web server contexts.
You could possibly make it work if you use some kind of message queue like Celery, where the HTTP request places a job on the queue and the worker on the other side of the queue runs the CUDA program.</p>
<p>Edit: A quick and easy way would be to use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer">Python Subprocess check_output function</a></p>
<p>In the web request:</p>
<p><code>subprocess.check_output(['python', 'cudaFlask.py'])</code></p>
</div>
<span class="comment-copy">It may be a compatibility issue. Because now will run under a server mode and the module may be having issues with that</span>
<span class="comment-copy">I will check it out. Though, could there be a simpler solution?</span>
<span class="comment-copy">You could launch it using a python subprocess? Then block for the result and return that in your response?</span>
