<div class="post-text" itemprop="text">
<p>this is a method that I made chained DB query calls.</p>
<pre class="lang-py prettyprint-override"><code>import math
def get_all_keys():
    db_session = DBSession()
    keys = db_session.query(SomeClass).all()
</code></pre>
<p>I should mock <code>DBSession().query(SomeClass).all()</code>. I tried some but nothing worked. Here are my trials.</p>
<pre class="lang-py prettyprint-override"><code>@patch('app.modules.somemodule.DBSession')
def test_asd(self, DBSession):
    DBSession.execute.query.execute.all.return_value = [1, 2, 3]
    self.assertListEqual(DBSession.query('qwe').all(), [1, 2, 3])
</code></pre>
<p>In this attempt if I try to print <code>DBSession()</code> I get a <code>MagicMock</code> object which seems fine. But when I run <code>pytest</code> I got following error.</p>
<pre><code>    self = &lt;test_some_module.SomeModuleTests testMethod=test_asd&gt;, DBSession = &lt;MagicMock name='DBSession' id='140028663111976'&gt;

    @patch('app.modules.somemodule.DBSession')
    def test_asd(self, DBSession):
        DBSession.execute.query.execute.all.return_value = [1, 2, 3]
        print(DBSession().query('qwe').all())
&gt;       self.assertListEqual(DBSession.query('qwe').all(), [1, 2, 3])
E       AssertionError: First sequence is not a list: &lt;MagicMock name='DBSession.query().all()' id='140028662649184'&gt;

tests/test_some_module.py:21: AssertionError
</code></pre>
<p>Seems like I did something wrong while mocking. What is my mistake? I checked the documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're simply mocking the wrong thing, and asserting that the chain of calls should return an actual list with given items, not a magic mock object. Instead of <code>execute</code>, which would simply mock access to the attribute of the same name, you should be using the <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.return_value" rel="nofollow noreferrer"><code>return_value</code></a>, as you've done in the final step. Given the chain</p>
<pre><code>DBSession().query(...).all()
</code></pre>
<p>you should be mocking</p>
<pre><code>DBSession.return_value.query.return_value.all.return_value = [1, 2, 3]
</code></pre>
<p>On the other hand in <code>test_asd()</code> in the assertion you're doing</p>
<pre><code>DBSession.query(...).all()
</code></pre>
<p>so</p>
<pre><code>DBSession.query.return_value.all.return_value = [1, 2, 3]
</code></pre>
</div>
