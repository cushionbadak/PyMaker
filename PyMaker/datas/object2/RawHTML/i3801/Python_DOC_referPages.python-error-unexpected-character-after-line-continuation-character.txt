<div class="post-text" itemprop="text">
<p>I am trying to create a dataframe to store reddit data:</p>
<pre><code>topics_dict = { "title":[],\
            "score":[],\
            "id":[], "url":[],\ -&gt; Error 
            "comms_num": [],\
            "created": [],\
            "body":[]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not just use:</p>
<pre><code>topics_dict = { "title":[],
            "score":[],
            "id":[],
            "url":[], 
            "comms_num": [],
            "created": [],
            "body":[]}
</code></pre>
<p>and remove the <code>\</code> it does exactly the same thing.</p>
<p>This is perfectly valid for a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> and is not affected by new lines like strings are (as long as indentation is correct).</p>
</div>
<div class="post-text" itemprop="text">
<p>It is illegal to have anything between the line-continuation backslash and the newline.<sup>1</sup> (See <a href="https://docs.python.org/3/reference/lexical_analysis.html#explicit-line-joining" rel="nofollow noreferrer">Explicit line joining</a> for details.)</p>
<p>Usually, this problem is pretty obvious:</p>
<pre><code>&gt;&gt;&gt; 'abc' \stuff
    'abc' \stuff
                ^
SyntaxError: unexpected character after line continuation character
</code></pre>
<p>… but it's a lot harder to see, even though just as illegal, if all you have is whitespace:</p>
<pre><code>&gt;&gt;&gt; 'abc' \ 
    'abc' \
            ^
SyntaxError: unexpected character after line continuation character
</code></pre>
<p>It can be even worse if you're mixing Windows <code>\r\n</code> and Unix <code>\n</code> newlines in the same source. Then, you can have a backslash followed immediately by a <code>\r\n</code>, which looks perfectly fine—but the <code>\r</code> is treated as illegal whitespace, not part of the newline, because it's treating your script as <code>\n</code>-terminated.<sup>2</sup></p>
<p>A decent editor will make these problems either hard to create, easy to spot, or both. Pretty much any editor besides Notepad and TextEdit counts as "decent" for these purposes, including lots of free ones for every platform.</p>
<hr/>
<p>The solution is to remove whatever whitespace you have after the <code>\</code>.</p>
<p>Or, better still, to avoid using backslash continuation when you don't need it—as you don't here, because any expression inside <code>{}</code>, <code>[]</code>, or <code>()</code> is automatically continued, without needing a backslash. (See <a href="https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining" rel="nofollow noreferrer">Implicit line joining</a> for details, but it almost always just works as you'd expect.)</p>
<hr/>
<p><sub>1. Technically, I don't think a backslash followed by something other than a newline is a line continuation at all. So the actual error is just that a backslash on its own is an invalid token. But if so, the tokenizer is being nice by providing a more comprehensible error message here, so let's not complain…</sub></p>
<p><sub>2. I believe this one may no longer be true as of… somewhere around 2.6, or maybe 3.0? See <a href="https://docs.python.org/3/reference/lexical_analysis.html#physical-lines" rel="nofollow noreferrer">Physical lines</a>. But still, better to use consistent endings than to hope that Python guesses correctly what you were trying to do…</sub></p>
</div>
<span class="comment-copy">You don't need the <code>\</code>. And this is a dict, not a dataframe.</span>
<span class="comment-copy">Remove all the \.</span>
