<div class="post-text" itemprop="text">
<p>I'm unable to understand the logic behind python returning <code>False</code> for the following condition:</p>
<pre><code>3 &gt; 5 in range(10)
</code></pre>
<p>while returning <code>True</code> for:</p>
<pre><code>False in range(10)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Although the comment by @jonrsharpe is the right answer, it wasn't trivial to me, and maybe also to you, so I'll break it down:</p>
<p>The expression is evaluated like this:</p>
<ol>
<li><code>3 &gt; 5 in range(10)</code> </li>
<li><code>3 &gt; 5 and 5 in range(10)</code></li>
<li><code>False and 5 in range(10) == False</code> (<code>False and ...</code> <a href="https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer">short circuits</a> to <code>False</code>)</li>
</ol>
<p>The reason for <code>1 -&gt; 2</code> is explained in the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">documentation</a>. To sum it up, it's like <code>x &lt; y &lt; z</code> means <code>x &lt; y</code> <strong>and</strong> <code>y &lt; z</code>.</p>
<p>Trying something like <code>(3 &gt; 5) in range(10)</code> would be evaluated like this:</p>
<ol>
<li><code>(3 &gt; 5) in range(10)</code> </li>
<li><code>False in range(10)</code> </li>
<li><code>0 in range(10)</code> </li>
<li><code>True</code> </li>
</ol>
<p>The reason for <code>3 -&gt; 4</code> is that <code>0</code> resides inside the <code>range(0,10)</code> and the expression <code>0 in range(10)</code> is evaluated to a Boolean result (i.e. <code>True</code> or <code>False</code>) depends on whether the left side (<code>0</code>) is indeed <strong>in</strong> the right side (<code>range(0,10)</code>)</p>
</div>
<span class="comment-copy">Because it's evaluated as <code>3 &gt; 5 and 5 in range(10)</code>, per <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#comparisons</a>, and 3 is smaller than 5. Try <code>(3 &gt; 5) in range(10)</code>, instead.</span>
<span class="comment-copy">Why would anyone write <code>3 &gt; 5 in range(10)</code> though? and what would they mean by it?</span>
<span class="comment-copy">Maybe add a link to the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">documentation</a>. In particular, while the concept of comparison chaining may be understood, it might not be clear that <code>in</code> also counts as a comparison.</span>
