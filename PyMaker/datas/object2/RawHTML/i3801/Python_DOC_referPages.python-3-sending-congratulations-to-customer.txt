<div class="post-text" itemprop="text">
<p>How I may send birthday congratulations with attached jpg file to our cutomers by email?
I write script, he show notifications:</p>
<pre><code>import time
import os

birthdayFile = 'birthdays.csv'

def checkTodaysBirthdays():
    fileName = open(birthdayFile, 'r')
    today = time.strftime('%m%d')
    flag = 0
    for line in fileName:
        if today in line:
            line = line.split(' ')
            flag =1

            os.system('notify-send "Birthdays Today: ' + line[1]
            + ' ' + line[2] + '"')
    if flag == 0:
            os.system('notify-send "No Birthdays Today!')
</code></pre>
<p>But I dont know, how send congrats by email.
File <code>birthdays.csv</code> contain next row: <code>date, name, email</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>smtplib</code>. Below is an implementation of the simple notification system using a class, to utilize clean context-manager behavor:</p>
<pre><code>import datetime
import smtplib, csv
from email.MIMEMultipart import MIMEMultipart
from email.MIMEBase import MIMEBase
from email.MIMEText import MIMEText
from email import Encoders

class SendEmail:
  def __init__(self, _to, _from = 'youremail@domaim.com', subject = 'Happy Birthday!', attachment = 'birthday.jpg'):
    self._to = _to
    self._from = _from
    self._subject = subject
    self.attachment = attachment
  def __enter__(self):
    msg = MIMEMultipart()
    for part in ['Subject', 'From', 'To']:
       msg[part] = getattr(self, f'_{i.lower()}')
    part = MIMEBase('application', "octet-stream")
    part.set_payload(open(self.attachment, "rb").read())
    Encoders.encode_base64(part)
    part.add_header('Content-Disposition', f'attachment; filename="{self.attachment}"')
    msg.attach(part)
    server = smtplib.SMTP(self.EMAIL_SERVER)
    server.sendmail(self.EMAIL_FROM, self.EMAIL_TO, msg.as_string())
    return self
  def __exit__(self, *args):
    pass
  @classmethod
  def send_bulk(cls, users:list):
    for date, name, email in users:
      _d = datetime.datetime.now()
      if _d.month in date and _d.day in date:
        with cls(email, subject = f'Happy Birthday, {name}!') as f:
          pass

with open('filename.csv') as f:
  SendEmail.send_bulk(csv.reader(f))
</code></pre>
</div>
<span class="comment-copy">Firstly, you really shouldn't be using string concatenation with <code>os.system</code>. Imagine if someone set their birthday to <code>;rm -rf /;#</code>! Secondly, check out Python's included smtplib: <a href="https://docs.python.org/3/library/smtplib.html" rel="nofollow noreferrer">docs.python.org/3/library/smtplib.html</a>.</span>
