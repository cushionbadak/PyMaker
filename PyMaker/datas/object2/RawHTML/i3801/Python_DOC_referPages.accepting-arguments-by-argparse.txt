<div class="post-text" itemprop="text">
<p>What is the Difference between <code>nargs='*'</code> and <code>nargs='+'</code>?</p>
<p>As they both accept one or more arguments.</p>
<pre><code>parser.add_argument('nums',narg='*')
</code></pre>
<p>And </p>
<pre><code>parser.add_argument('nums',narg='+')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>argparse</code> is following the common usage in <code>re</code> syntax. quoting from <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></p>
<blockquote>
<p>*
  Causes the resulting RE to match 0 or more repetitions of the preceding RE, as many repetitions as are possible. ab* will match ‘a’, ‘ab’, or ‘a’ followed by any number of ‘b’s.</p>
<p>+
  Causes the resulting RE to match 1 or more repetitions of the preceding RE. ab+ will match ‘a’ followed by any non-zero number of ‘b’s; it will not match just ‘a’.</p>
<p>?
  Causes the resulting RE to match 0 or 1 repetitions of the preceding RE. ab? will match either ‘a’ or ‘ab’.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html#nargs</a></p>
<p>You can also use <code>argparse</code> constants, which have the same string values</p>
<pre><code>argparse.ONE_OR_MORE
argparse.ZERO_OR_MORE
argparse.OPTIONAL
</code></pre>
</div>
<span class="comment-copy">From <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">python docs for argparse</a>: <code>'+'. Just like '*', all command-line args present are gathered into a list. Additionally, an error message will be generated if there wasn’t at least one command-line argument present.</code> Take note of the last sentence - that is the difference.</span>
