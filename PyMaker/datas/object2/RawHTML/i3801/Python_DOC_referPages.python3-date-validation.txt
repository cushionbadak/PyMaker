<div class="post-text" itemprop="text">
<p>How can I validate this date time in python 3 - <code>2018-05-30-16-54-00</code> ?</p>
<p>When I pass this date text to below method , an error is returned.</p>
<pre><code>def validate(date_text):
    try:
        datetime.datetime.strptime(date_text, '%d-%b-%Y-%H-%M-%S')
    except ValueError:
        raise ValueError("Incorrect data format, should be YYYY-MM-DD-HH-MI-SS")     
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Fix the datetime string - it must match exactly. Read <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">the documentation</a>.</p>
<pre><code>"%Y-%m-%d-%H-%M-%S"
</code></pre>
<p>Your string <code>'%d-%b-%Y-%H-%M-%S'</code> is parsing day, month name abreviated (locale aware), year, H-M-S.</p>
<p>If you need to validate to 0 before the months/days etc, combine your parsing with a regex check:</p>
<pre><code>import re
import datetime

def validate(date_text):
    """Validates the overall structure with regex and parses the datetime using 
    strptime to test for "existing" months and times. """
    try:
        dt = datetime.datetime.strptime(date_text, '%Y-%m-%d-%H-%M-%S')
        if re.match(r"\d{4}-\d{2}-\d{2}-\d{2}-\d{2}-\d{2}", date_text) is None:
            raise ValueError()
    except ValueError:
        raise ValueError("Incorrect data format, should be YYYY-MM-DD-HH-MI-SS")    

v = ["2018-06-01-10-20-30", "2018-6-01-10-20-30", "2018-21-01-10-20-30"]
for k in v:
    try:
        print("Validating: ", k)
        validate(k)
        print("ok")
    except ValueError as e:
        print(e)
</code></pre>
<p>Output:</p>
<pre><code>Validating:  2018-06-01-10-20-30
ok
Validating:  2018-6-01-10-20-30       # missing 0
Incorrect data format, should be YYYY-MM-DD-HH-MI-SS
Validating:  2018-21-01-10-20-30      # no 21 month possible
Incorrect data format, should be YYYY-MM-DD-HH-MI-SS
</code></pre>
</div>
<span class="comment-copy">You mean your <code>ValueError</code> is raised?</span>
<span class="comment-copy">Cannot replicate your issue. You ask Python to raise an error when unsuccessful, and this is the error you get.</span>
<span class="comment-copy">Yes , my ValueError is raised. got it to work after I used Patrick's solution</span>
<span class="comment-copy">You’re explicitly asking it to validate times in DD-MMM-YYYY format when you want YYYY-MM-DD.</span>
<span class="comment-copy">Also, it’s worth noting that even if you get this right, it isn’t validating what you think it is, because <code>strptime</code> is lenient—e.g., if you pass it a single-digit month, it will parse it correctly instead of complaining. Is that acceptable?</span>
<span class="comment-copy">Thanks , it works! just saw the documentation as well.</span>
