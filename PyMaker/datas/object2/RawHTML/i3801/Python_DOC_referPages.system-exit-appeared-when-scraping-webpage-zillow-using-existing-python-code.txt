<div class="post-text" itemprop="text">
<p>Full disclosure: Python rookie. Trying to use code shared by other people to scrape the internet page (real estate listing) by tweaking the arguments. My questions are probably very rudimentary, so if you can provide some links for further reading and study, that will be great too. I just can't seem to figure out how to proceed from this step. Thanks for your time in advance.</p>
<pre><code>from lxml import html
import requests
import unicodecsv as csv
import argparse

def parse(zipcode,filter=None):

if filter=="newest":
    url = "https://www.zillow.com/homes/for_sale/{0}/0_singlestory/days_sort".format(zipcode)
elif filter == "cheapest":
    url = "https://www.zillow.com/homes/for_sale/{0}/0_singlestory/pricea_sort/".format(zipcode)
else:
    url = "https://www.zillow.com/homes/for_sale/{0}_rb/?fromHomePage=true&amp;shouldFireSellPageImplicitClaimGA=false&amp;fromHomePageTab=buy".format(zipcode)

for i in range(5):
    # try:
    headers= {
                'accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                'accept-encoding':'gzip, deflate, sdch, br',
                'accept-language':'en-GB,en;q=0.8,en-US;q=0.6,ml;q=0.4',
                'cache-control':'max-age=0',
                'upgrade-insecure-requests':'1',
                'user-agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'
    }
    response = requests.get(url,headers=headers)
    print(response.status_code)
    parser = html.fromstring(response.text)
    search_results = parser.xpath("//div[@id='search-results']//article")
    properties_list = []

    for properties in search_results:
        raw_address = properties.xpath(".//span[@itemprop='address']//span[@itemprop='streetAddress']//text()")
        raw_city = properties.xpath(".//span[@itemprop='address']//span[@itemprop='addressLocality']//text()")
        raw_state= properties.xpath(".//span[@itemprop='address']//span[@itemprop='addressRegion']//text()")
        raw_postal_code= properties.xpath(".//span[@itemprop='address']//span[@itemprop='postalCode']//text()")
        raw_price = properties.xpath(".//span[@class='zsg-photo-card-price']//text()")
        raw_info = properties.xpath(".//span[@class='zsg-photo-card-info']//text()")
        raw_broker_name = properties.xpath(".//span[@class='zsg-photo-card-broker-name']//text()")
        url = properties.xpath(".//a[contains(@class,'overlay-link')]/@href")
        raw_title = properties.xpath(".//h4//text()")

        address = ' '.join(' '.join(raw_address).split()) if raw_address else None
        city = ''.join(raw_city).strip() if raw_city else None
        state = ''.join(raw_state).strip() if raw_state else None
        postal_code = ''.join(raw_postal_code).strip() if raw_postal_code else None
        price = ''.join(raw_price).strip() if raw_price else None
        info = ' '.join(' '.join(raw_info).split()).replace(u"\xb7",',')
        broker = ''.join(raw_broker_name).strip() if raw_broker_name else None
        title = ''.join(raw_title) if raw_title else None
        property_url = "https://www.zillow.com"+url[0] if url else None 
        is_forsale = properties.xpath('.//span[@class="zsg-icon-for-sale"]')
        properties = {
                        'address':address,
                        'city':city,
                        'state':state,
                        'postal_code':postal_code,
                        'price':price,
                        'facts and features':info,
                        'real estate provider':broker,
                        'url':property_url,
                        'title':title
        }
        if is_forsale:
            properties_list.append(properties)
    return properties_list
    # except:
    #   print ("Failed to process the page",url)

if __name__=="__main__":
    argparser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter)
    argparser.add_argument('zipcode',help = '')
    sortorder_help = """
    available sort orders are :
    newest : Latest property details,
    cheapest : Properties with cheapest price
    """
argparser.add_argument('sort',nargs='?',help = sortorder_help,default ='Homes For You')
    args = argparser.parse_args()
    zipcode = args.zipcode
    sort = args.sort
    print ("Fetching data for %s"%(zipcode))
    scraped_data = parse(zipcode,sort)
    print ("Writing data to output file")
    with open("properties-%s.csv"%(zipcode),'wb')as csvfile:
        fieldnames = ['title','address','city','state','postal_code','price','facts and features','real estate provider','url']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for row in  scraped_data:
            writer.writerow(row)
</code></pre>
<p>I usually don't expect the code to work from the get go and was ready to quick. After I ran it, the error appears:
<a href="https://i.stack.imgur.com/t2vHC.png" rel="nofollow noreferrer"><img alt="System Exit" src="https://i.stack.imgur.com/t2vHC.png"/></a></p>
<p>I know the first one was to make me run "%tb" but I don't know how to deal with the second one, where shall I run 'exit' or 'quit'?</p>
<p>After I ran "%tb", following messages appear:</p>
<pre><code>SystemExit                                Traceback (most recent call last)
&lt;ipython-input-29-dcd1916da548&gt; in &lt;module&gt;()
     76     """
     77         argparser.add_argument('sort',nargs='?',help = sortorder_help,default ='Homes For You')
---&gt; 78         args = argparser.parse_args()
     79         zipcode = args.zipcode
     80         sort = args.sort

C:\Users\AppData\Local\Continuum\Anaconda3\lib\argparse.py in parse_args(self, args, namespace)
   1731         if argv:
   1732             msg = _('unrecognized arguments: %s')
-&gt; 1733             self.error(msg % ' '.join(argv))
   1734         return args
   1735 

C:\Users\AppData\Local\Continuum\Anaconda3\lib\argparse.py in error(self, message)
   2387         self.print_usage(_sys.stderr)
   2388         args = {'prog': self.prog, 'message': message}
-&gt; 2389         self.exit(2, _('%(prog)s: error: %(message)s\n') % args)

C:\Users\AppData\Local\Continuum\Anaconda3\lib\argparse.py in exit(self, status, message)
   2374         if message:
   2375             self._print_message(message, _sys.stderr)
-&gt; 2376         _sys.exit(status)
   2377 
   2378     def error(self, message):

SystemExit: 2
</code></pre>
<p>What shall I do with this? Is there something that I shall do in the command line to fix it?</p>
<p>Thanks again</p>
</div>
<div class="post-text" itemprop="text">
<p>I had some issues with the tabbing which I had to fix but I'm going to assume those were from copying it over or from Stack Overflow.</p>
<p>Other than that, everything seems to be working. </p>
<p><strong>Just run the program from the command line with the command:</strong><br/>
<code>python YourFileName.py 12345</code> </p>
<p>where 12345 is the zip code you want to query.</p>
<p>Make sure you are using Python3 not ipython as mentioned in the comments.</p>
</div>
<span class="comment-copy">Zillow has <a href="https://www.zillow.com/howto/api/APIOverview.htm" rel="nofollow noreferrer">an API</a>, so you don't need to scrape their website. And, while I haven't checked, most sites with an API have a ToS that forbids using their data in any way except through the API. And many of them auto-detect scrapers and try to block them from working. So, are you sure you even want to try to get this working, when it may well be violating their rules, and when you may be stuck in an arms race with their anti-scraper tech when you don't even understand your own code?</span>
<span class="comment-copy">Anyway, that <code>SystemExit: 2</code> has nothing to do with your scraping code in the first place. You wrote an <code>argparse</code> spec, and then tried to run the code with arguments that don't match that spec. It's hard to show you how to fix it without showing us what command line you actually ran it with, and what you want that command line to do. (Also, why are you running this with <code>ipython</code>?)</span>
<span class="comment-copy">Please post the error as text, rather than an unreadable screenshot, and include the command you used to run the program instead of cutting off right after that command, especially since that command is the part you need us to debug. And if that command isn’t obvious, explain what you wanted it to do (since it looks like you tried to pass a <code>-f</code>, but you didn’t define a <code>f</code> flag in <code>argparse</code>, so… what is it supposed to be for?).</span>
<span class="comment-copy">Thanks for the info. Honestly didn't know that. In that case I will cease my action, but from a pure knowledge point of view, I still want to get to the bottom of this. I am running it with Ipython because I'm a pure rookie who has merely used IPython. This looks like Python code so I just put it in an IDE. What shall I use instead?</span>
<span class="comment-copy">Thanks a lot. And you are totally right. I just copied and pasted it into Ipython and wanted to see if it works as I want to tweak the arguments to make sure it works. And forgive my ignorance, as for the command line, is it the windows command line (cmd.exe?) Sorry for the silly question, but my online courses haven't touched any command line content yet.</span>
<span class="comment-copy">Please see <a href="https://docs.python.org/3/faq/windows.html" rel="nofollow noreferrer">docs.python.org/3/faq/windows.html</a> for some hints getting set up but yes, cmd.exe. I use Linux for all my python stuff so I'm not the best person to ask for more details.</span>
<span class="comment-copy">Thanks a lot! Not sure if I can ask a separate question, but I will try: why Linux? What's the advantage of that over Windows?</span>
<span class="comment-copy">Often the installation of a needed package or library designed by and built for progammers is one line on Ubuntu or other OS's that have a bash command prompt (including Macs) but many difficult steps on Windows. Coders are drawn to an Open Source Operating system and make tools for it which attracts more coders. Windows is making progress and you can make it work, but it wasn't worth the extra effort for me. See <a href="https://askubuntu.com/questions/360161/what-advantages-does-ubuntu-have-over-windows-as-an-environment-for-programming" title="what advantages does ubuntu have over windows as an environment for programming">askubuntu.com/questions/360161/…</a>. Also, if my answer works for you please remember to accept it.</span>
