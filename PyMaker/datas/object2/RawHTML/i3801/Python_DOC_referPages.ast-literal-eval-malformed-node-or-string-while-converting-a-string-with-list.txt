<div class="post-text" itemprop="text">
<p>I have a string, which is a list of numpy arrays.
The string looks like</p>
<pre><code>k = '[array([  0, 269, 175, 377]), array([  0,  56, 149, 163])]'
</code></pre>
<p>When I do </p>
<pre><code>ast.literal_eval(k)
</code></pre>
<p>I get an error saying malformed node or string.</p>
<p>What is the problem here? Is there any better way to convert it back to a list?</p>
<p>Thanks for help!!</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code> doc</a>:</p>
<blockquote>
<p>The string or node provided may only consist of the following Python literal structures: strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None.</p>
</blockquote>
<p>It is not possible to use literal eval here. Find where these strings are generated in the first place, and implement a proper serialization there - for example using <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html" rel="nofollow noreferrer"><code>numpy.save</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure if this is a good approach.</p>
<pre><code>from numpy import array
import ast
import re
k = '[array([  0, 269, 175, 377]), array([  0,  56, 149, 163])]'
val = re.findall(r"\((.*?)\)", k)
val = list(map(ast.literal_eval, val))
val = list(map(array, val))
print(val)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[array([  0, 269, 175, 377]), array([  0,  56, 149, 163])]
</code></pre>
<ul>
<li>Using Regex to extract content between <code>()</code></li>
<li>Apply <code>ast.literal_eval</code></li>
<li>Apply <code>np.array</code></li>
</ul>
</div>
<span class="comment-copy"><code>array(…)</code> is a call, not a literal anything. You’ll need to create the string with only regular lists or use something before/other than <code>ast.literal_eval</code>.</span>
<span class="comment-copy">You should probably avoid doing this in the first place. Why are you getting these strings?</span>
<span class="comment-copy">Is there a reason these are serialized as arrays, not as lists?</span>
<span class="comment-copy">Clever. Works as long as the shape of the OP's data never changes -- I wouldn't go with this as a long-term approach, but could see it as a temporary/interim workaround until whatever is generating the strings in question gets fixed.</span>
<span class="comment-copy">@CharlesDuffy. I agree, it is not a proper solution. Best is to fix at the source of OP's input.</span>
