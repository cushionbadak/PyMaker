<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8369219/how-to-read-a-text-file-into-a-string-variable-and-strip-newlines">How to read a text file into a string variable and strip newlines?</a>
<span class="question-originals-answer-count">
                    20 answers
                </span>
</li>
</ul>
</div>
<p>I have a names and numbers in my file (name of the file 'phone_book') and I tried to read all data using this code: </p>
<pre><code>def read_phonebook():
    read = open("phone_book.txt", 'r')
    i = 0
    for i in (len(read)):
        print(i + '\t')

    read.close()

while True:
if menu == 2:
    read_phonebook()
</code></pre>
<p>but it gives Error: read_phonebook file has no len()</p>
<p>If I don't use len it keeps printing data because I'm using While loop.
Could someone explain me how can I make this function to read list's whole data? with using While Loop?  </p>
</div>
<div class="post-text" itemprop="text">
<p>Read the tutorials first. </p>
<ul>
<li>if you are reading file defining a function isn't necessary.</li>
<li>learn basics first </li>
<li>if you are just reading file and you are a beginner in programming, you are taking a complicated approach.</li>
<li>take a simple approach and that  helps you comprehend the input, output and ultimate goal.</li>
</ul>
<p><strong>Here is a quick tips for beginner</strong> and the simplest way of reading a file in python.</p>
<pre><code>with open("phone_book.txt") as mytxt:
    for line in mytxt:
        print (line)

        Or do something with line

        # if you want to split the line
        # assuming data is tab separated
        newline = line.rstrip("\n").split("\t")

        # if you want conditional printing
        if len(line) &gt; 0:
            print(line)
</code></pre>
<p><strong>Lessons:</strong></p>
<ul>
<li>when you <code>with open ...</code> file will auto close at the end when it comes out of that scope.</li>
<li>using <code>for line</code> with out doing <code>.read()</code> prevents you from loading all the data on the memory.</li>
<li>fix your indentation issues</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Here, each line can be iterated on <code>read</code>.</p>
<pre><code>def read_phonebook():
    read = open("phone_book.txt", 'r')
    i = 0
    for line in read:
        print(line)

    read.close() 
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a> tells you all you need - it even comes with code examples...</span>
<span class="comment-copy">Why are you using a while loop to read a file? What is <code>menu</code>? Why do you set <code>i = 0</code> if the next command overwrites it? Why are you expecting <code>len</code> to give you an iterable? It would help you to make a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">If you wanted to loop over the length of anything, it would be <code>for i in range(len(read)):</code>... But <code>read</code> here is an iterable object, so using <code>len()</code> would actually iterate the entire thing before you printed each line, and you're left with a fully consumed iterable, meaning nothing can be printed after</span>
<span class="comment-copy">Actually your indentation seems to be misaligned as well. :-P</span>
<span class="comment-copy">Hmmmm, Good catch !</span>
