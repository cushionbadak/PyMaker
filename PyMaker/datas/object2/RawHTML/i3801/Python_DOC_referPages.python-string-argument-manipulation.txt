<div class="post-text" itemprop="text">
<p>I have a function that has a <code>name1</code> value obtained through user input via <code>sys.argv.pop()</code> that dictates which parameter within <code>myconfig.py</code> to use. As someone relatively new to python I was wondering what the proper way to go about doing this was, so that I would be given access to the desired data properly.</p>
<p>when completed I'd like the argument to function as : <code>myconfig.Oink['lower_bound']</code> or <code>myconfig.Woof['lower_bound']</code></p>
<pre><code>&gt; self.do_x(id, myconfig."name1".format(name1)['lower_bound'],
&gt; myconfig."name1".format(name1)['upper_bound'])
&gt;                                                  ^ SyntaxError: invalid syntax
__________________________________________________________________

&gt; myconfig.py
&gt; 
&gt; Oink = dict(lower_bound = 874,upper_bound = 1983,) 

&gt; Woof = dict(lower_bound = 1,upper_bound = 984,)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve this by using <a href="https://docs.python.org/2/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr</code></a>:</p>
<pre><code>name1 = sys.argv.pop()

# ...

values = getattr(myconfig, name1)
self.do_x(values['lower_bound'], values['upper_bound'])
</code></pre>
<p>Please note that <code>getattr</code> is case sensitive, this means that while <code>getattr(myconfig, 'Oink')</code> will yield the correct value, <code>getattr(myconfig, 'oink')</code> will raise an <code>AttributeError</code></p>
<hr/>
<p>If you want to handle invalid values, you can use <a href="https://docs.python.org/2/library/functions.html#hasattr" rel="nofollow noreferrer"><code>hasattr</code></a>:</p>
<pre><code>if not hasattr(myconfig, name1):
    raise ValueError('Invalid value {}'.format(name1))

values = getattr(myconfig, name1)
self.do_x(values['lower_bound'], values['upper_bound'])
</code></pre>
<hr/>
<p>If instead of raising a <code>ValueError</code> you want to use a default value, you can use the <code>default</code> keyword argument for <code>getattr</code>:</p>
<pre><code>default = dict(lower_bound=20, upper_bound=50)
values = getattr(myconfig, name1, default=default)
self.do_x(values['lower_bound'], values['upper_bound'])
</code></pre>
</div>
<span class="comment-copy">Ideally, you should change <code>myconfig</code> to be a dict rather than an object, because dicts are made for looking up values by name: <code>myconfig[name1]['lower_bound']</code>. If you can't do that for some reason, you <i>can</i> use the <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr</code></a> function, like <code>getattr(myconfig, name1)['lower_bound']</code>. But, as you can see, this is a lot clunkierâ€”when you need <code>getattr</code>, that's a good sign that you probably wanted a dict.</span>
