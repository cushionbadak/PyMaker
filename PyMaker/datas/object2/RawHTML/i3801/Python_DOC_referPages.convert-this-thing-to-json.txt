<div class="post-text" itemprop="text">
<p>I am using this wrapper here:</p>
<p><a href="https://github.com/mondeja/bittrex_v2" rel="nofollow noreferrer">https://github.com/mondeja/bittrex_v2</a></p>
<p>and I use this code here:</p>
<pre><code>b = Bittrex(api_key="myapikey", api_secret="mysecretkey")
ba = b.get_balance()

print (ba)
</code></pre>
<p>The print (ba) puts out this:
<a href="https://pastebin.com/x5AVLDXH" rel="nofollow noreferrer">https://pastebin.com/x5AVLDXH</a> (it's very long)</p>
<p>how do i convert that into JSON? I know it needs double quote instead of single quote and the Decimal('#') is not right...</p>
<p>Or how would I edit the wrapper to make it print it in to JSON?</p>
<p>Thanks !</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you printed out a dict, not a string. If so, you definitely don't want to convert it that dict to its string representation, and then try to convert that string representation to a JSON string. You just want to encode the dict to JSON directly.</p>
<p>The only obvious tricky bit is converting <code>Decimal</code> values to something JSON can handle. You have to decide what you wantâ€”maybe just convert to <code>float</code>, maybe convert to <code>float</code> but also verify that you're not losing any precision in doing so, maybe convert to string, or maybe even convert to some special pickle-ish thing like <code>{'type': 'decimal.Decimal', 'args': ['0E-8']}</code>. Which one you want depends entirely on how you're planning to use the JSON later.</p>
<p>Once you've decided what you want to do, it's pretty easy. The docs for <a href="https://docs.python.org/3/library/json.html#json.JSONEncoder.default" rel="nofollow noreferrer"><code>json.Encoder</code></a> have an example showing how to support arbitrary iterators by converting them to <code>list</code>s, which is pretty easy to adapt to, say, support <code>Decimal</code>s by converting them to <code>float</code>s:</p>
<pre><code>class DecimalEncoder(json.Encoder):
    def default(self, o):
        if isinstance(o, decimal.Decimal):
            return float(o)
        return super().default(o)

enc = DecimalEncoder()
json_string = enc.encode(big_dict_with_decimals)
</code></pre>
<p>I haven't tested against your dict, or laboriously scanned through to see if there are any other weird types. But if there are, you handle them the same way as <code>Decimal</code>.</p>
</div>
<span class="comment-copy">What have you tried so far? Have you found any similar questions? Where is your attempt in your question?  Check out how to create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, as well as read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a></span>
<span class="comment-copy">what is the type of (ba)?</span>
<span class="comment-copy">If you spend a few minutes and learn the default format of json, you will know at least how to format a string so that it's "json".  You can go from there.</span>
