<div class="post-text" itemprop="text">
<p>I am trying to download a CSV file (in-memory) from SFTP using Paramiko and import it into a pandas dataframe.</p>
<pre><code>transport = paramiko.Transport((server, 22))
transport.connect(username=username, password=password)
sftp = paramiko.SFTPClient.from_transport(transport)

with open(file_name, 'wb') as fl:
    sftp.getfo(file_name, fl, callback=printTotals)
    df = pd.read_csv(fl, sep=' ')
</code></pre>
<p>The code below fails, telling me: </p>
<blockquote>
<p>OSError: File is not open for reading</p>
</blockquote>
<p>I assume that I need some kind of buffer or file like object for <code>fl</code> instead, since open needs a file. I am relatively new to all of this, so I would be happy it if someone could help.</p>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution that still allows you to use progress callback is:</p>
<ul>
<li>Use <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer"><code>BytesIO</code> file-like object</a> to store a downloaded file to memory;</li>
<li>You have to seek file pointer back to file start after downloading it, before you start reading it.</li>
</ul>
<pre><code>with io.BytesIO() as fl:
    sftp.getfo(file_name, fl, callback=printTotals)
    fl.seek(0)
    df = pd.read_csv(fl, sep=' ')
</code></pre>
<p>Though with this solution, you will end up having the file loaded to memory twice.</p>
<hr/>
<p>Better solution is to implement a file-like object. It will even allow you to download and parse the file at the same time.</p>
<pre><code>class FileWithProgress:

    def __init__(self, fl):
        self.fl = fl
        self.size = fl.stat().st_size
        self.p = 0

    def read(self, blocksize):
        r = self.fl.read(blocksize)
        self.p += len(r)
        print(str(self.p) + " of " + str(self.size)) 
        return r
</code></pre>
<p>And use it like:</p>
<pre><code>with sftp.open(file_name, "rb") as fl:
    fl.prefetch()
    df = pd.read_csv(FileWithProgress(fl), sep=' ') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What I ended up doing was a simple version of that, unfortunately without a callback for the progress, I also needed <code>rb</code> for reading:</p>
<pre><code>with sftp.open(file_name, 'rb') as fl:
        df = pd.read_csv(fl, sep=' ')
</code></pre>
<p>Anyway, Martin's answer is what I was looking for!</p>
</div>
<span class="comment-copy">that's exactly what I was looking for! I have found another solution in the mean time, which is not as good as I can't have a callback for reporting back the progress (see Answer below). Thank you!</span>
<span class="comment-copy">I have added yet another solution.</span>
