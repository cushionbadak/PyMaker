<div class="post-text" itemprop="text">
<pre><code>items = [ "Abby","Brenda","Cindy","Diddy" ]

for item in items:
    print(item)
</code></pre>
<p>I use to write this statement for output items.</p>
<p>Is there a way to merge both print and loops. Something like:</p>
<pre><code>print(item for item in items)
</code></pre>
<p>Correct me if I am wrong!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">argument unpacking operator <code>*</code></a> (also called the "splat" operator):</p>
<pre><code>&gt;&gt;&gt; items = [ "Abby","Brenda","Cindy","Diddy" ]
&gt;&gt;&gt; print(*items, sep='\n')
Abby
Brenda
Cindy
Diddy
&gt;&gt;&gt; 
</code></pre>
<p>You need to set <code>sep='\n'</code> too because <code>print</code> defaults to separating arguments with spaces.</p>
<hr/>
<p>Just for completeness, when you do:</p>
<pre><code>print(item for item in items)
</code></pre>
<p>It will create a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator</a> over the items in <code>items</code> and then print that:</p>
<pre><code>&gt;&gt;&gt; items = [ "Abby","Brenda","Cindy","Diddy" ]
&gt;&gt;&gt; print(item for item in items)
&lt;generator object &lt;genexpr&gt; at 0x5ffffe02ee08&gt;
&gt;&gt;&gt;
</code></pre>
<hr/>
<p>If you want to use this in Python 2.x, you will need to import <code>print_function</code> from the <a href="https://docs.python.org/2/library/__future__.html" rel="nofollow noreferrer"><code>__future__</code> module</a> first:</p>
<pre><code>&gt;&gt;&gt; from __future__ import print_function
&gt;&gt;&gt; 
&gt;&gt;&gt; items = [ "Abby","Brenda","Cindy","Diddy" ]
&gt;&gt;&gt; print(*items, sep='\n')
Abby
Brenda
Cindy
Diddy
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension:</p>
<pre><code>items = ["Abby", "Brenda", "Cindy", "Daddy"]
[print(item) for item in items]
</code></pre>
<p>And. . . you only need to add two characters to your code!</p>
<p>There is a good discussion about list comprehension versus generator expressions here:</p>
<p><a href="https://stackoverflow.com/questions/47789/generator-expressions-vs-list-comprehension">Generator Expressions vs. List Comprehension</a></p>
<p>I think either is valid.  A genexp may be more efficient in this case, but the listcomp more clearly documents what you are doing.</p>
</div>
<span class="comment-copy">I know this is tagged for python 3.x but should also add a comment that this does not work in python 2.x</span>
<span class="comment-copy">@BrianM.Sheldon I added an update for Python 2.x.</span>
