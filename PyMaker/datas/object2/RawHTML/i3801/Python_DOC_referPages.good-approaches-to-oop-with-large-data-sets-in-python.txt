<div class="post-text" itemprop="text">
<p>This might be a soft question, but here it goes. I have a large data set that has a particular structure and I want to move to Python to start using <code>sklearn</code> package (previously I was using MATLAB). I am no Python expert, for most purposes you can consider me a beginner. The background is the following:</p>
<hr/>
<p>The structure of the data is as follows. The raw data are a 33 x 300 matrices (say I have about 500 such samples) which are time-series. Each row comes from one <em>generating</em> variable, and these are collected over 300 seconds. These data points are labelled with tags (corresponding to their classes/types, its actually a multi-label problem), names corresponding to who the sample was collected from, but also with attributes depending on <em>when</em> the data points were collected. Points collected in order are labelled <code>run1</code>, <code>run2</code> if collected in a single sitting; called a <code>session</code>. Samples collected one or more days apart belong to different sessions; and I have multiple sessions.  </p>
<p>How I analyzed the data in MATLAB was to make a class of my own, which held an array of <code>struct</code>s and then I defined methods and functions so that I can add or remove specific samples, add or remove <code>runs</code> from the data set, add or remove <code>sessions</code>, add or remove rows from the time-series across the whole data-set, consider classes of samples seperately etc. Each instance of the MATLAB class held the covariance matrix for PCA dimension reduction; other generated features like correlation matrices, etc. for the <code>struct</code> of <em>that</em> instance. All together it is about 2k lines in MATLAB. The primary purpose is just to load the data once into <code>MATLAB</code>, indeed into an instance of the class, and then chain together a list of instructions/calls to the class methods, so that I could prune and edit the data-set as I wanted. </p>
<hr/>
<p>So now for the questions:</p>
<ol>
<li><p>What would be the most pythonic was to approach this situation? I started with a <code>list</code> of <code>dicts</code> approach and some parts of the code felt very un-pythonic. Here is an example of removing sample from <em>a</em> study or instance of the class, </p>
<pre><code>def mod_samples(self, op, idxs):
     if not type(idxs) == list:
          print('Error: mod_samples must be called with a list of sample names!')
     if op == 'rem':
         for idx in idxs:
             for sample in self.samples:
                 if sample['Name'] == idx:
                     self.removed_samples.append(sample)
                     self.samples.remove(sample)
     if op == 'add':
         for idx in idxs:
             for sample in self.removed_samples:
                 if sample['Name'] == idx:
                     self.samples.append(sample)
                     self.removed_samples.remove(sample)
     self.recompute()
</code></pre></li>
</ol>
<p>Surely there must be a more elegant way than the double for loop with string comparison? <code>recompute</code> here just does the dimension reduction etc. again for the 'new' data-set. Also enforcing that the <code>idxs</code> is a list seemed odd to me. But on the other hand the <code>for item in itemList</code> doesn't differentiate between strings or lists. :/</p>
<ol start="2">
<li><p>Is there a better approach? Some other data type from a utility package or something? Because <code>name</code> is a key and I am removing samples based on the value instead of the key, the efficiency of <code>dicts</code> seem lost to me. </p></li>
<li><p>My MATLAB implementation was <em>poor</em> in the sense that implementing a deep copy was notoriously laborious; I side-stepped the issue by having a second constructor that created a new instance of the class from a <em>reduced</em> <code>struct</code> instead of the disk/data-files. For example, assuming the set had samples tagged as being from <code>run1</code>, calling</p>
<pre><code> dataSet.removeRun('run1') 
</code></pre>
<p>would result in a struct object that I could then use as, </p>
<pre><code> modifiedDataSet = clusterClass('isPoor', true, 'poorStruct', dataSet.removeRun('run1'))
</code></pre>
<p>Question here is what are Python's deep copy abilities? I am very new to OOP in Python. Would I have to override the default copy constructor bit for bit, variable for variable, attribute for attribute? Sometimes it <em>is</em> necessary to have two different (internally) instances because it is for comparative purposes. </p></li>
<li><p>Finally, speed considerations: my data set is not huge. I reckon the .MAT file I save to disk at times is usually about 12-15 Mb at the end of a day. But MATLAB has had decades of honing its internals, whereas <code>NumPy</code>/<code>SciPy</code> I think are comparatively new (yes OOP in MATLAB can be considered even newer, but I didn't find it too bad). Most of my data is <strong>not</strong> sparse. Are their any tips with regards to performance in this regard? Mostly what I do is large matrix multiplications, numerical integration, differentiation etc. </p></li>
</ol>
<hr/>
<p>As stackexchange is reminding me, yes the preference is for questions that can be answered; that being said I am not looking for <em>a/the</em> answer. I am new to OOP in Python so I would just like to overlay of the land, people's favorite approaches to such problems, pointers to packages I don't know for this kind of stuff etc. (and oh ... I <em>do know</em> <code>pandas</code>; but I don't like it, it abstracts away too much of the internals for me, or rather ... makes them hard to get at in a pinch for my liking.) </p>
</div>
<div class="post-text" itemprop="text">
<p>There are too many things asked in one question, I think that what makes it an <a href="https://stackoverflow.com/help/on-topic">off-topic</a>. I think you could be better off by splitting the question and cutting off the subjective part. Part 3  is especially demotivating to answer.   </p>
<p>A quick tour though:</p>
<ul>
<li><p>python/pandas is not MATLAB and never will be, you should not expect the session functionality from them or complain it is not there. it is by design, not flaw.</p></li>
<li><p>moving from MATLAB is a chance to review your datamodel and the way you handle it, one path is replicating functionality you had using the classes, the other is changing the data model, forgetting about the sessions and treating your project more as a pipeline. both are valid paths.</p></li>
<li><p>is there new data being added to your dataset or is it fixed? if there is some new data coming, you probably want to change your data pipline, perhaps consider flatten it to a SQL database, or use NoSQL database, which effectively the same as storing dicts/json's, other options below. </p></li>
</ul>
<blockquote>
<p>33 x 300 matrices (say I have about 500 such samples) which are time-series. Each row comes from one generating variable, and these are collected over 300 seconds.  </p>
</blockquote>
<p>So there are 33 variables, which span 300 sec and there are 500 such observations, annotated with some extra attributes? This is a list of dicts, if you want a single data structure. If that has to stay in class, as you are doing it now, you can <a href="https://docs.python.org/3/library/pickle.html#pickling-class-instances" rel="nofollow noreferrer">persist a class instance</a>. </p>
<p>You can also write a little file manager that stores individual observation in own folder, each folder containing a csv file and a json. </p>
<ul>
<li>for some good ideas about data pipeline I think <a href="https://drivendata.github.io/cookiecutter-data-science/" rel="nofollow noreferrer">Data Science Cookiecutter</a> is great. </li>
</ul>
<p>Hope it's not too didactic! </p>
</div>
<span class="comment-copy">Acknowledging that your question is off-topic doesn't make it less off-topic.</span>
<span class="comment-copy">Point me to where I must ask it then. :)</span>
<span class="comment-copy">And seriously guys, stackexchange didn't tell me my question was "off-topic", I was just referring to this yellow box: <a href="https://ibb.co/b6gcYJ" rel="nofollow noreferrer">ibb.co/b6gcYJ</a>  But I believe the fear was warranted.</span>
<span class="comment-copy">If this question is off-topic, then the only questions you can ask here are “please debug my code for me”? What else is left? IMO this is a way more interesting question than most.</span>
<span class="comment-copy">@Cris Luengo - the post would have made a good series of on-topic specific questions, it just happes to be big. Also some parts of it are subjective, which risks beign flagged on SO, I think.</span>
<span class="comment-copy">Thanks @Evgeny. I had not known about:  "The default behaviour first creates an uninitialized instance and then restores the saved attributes."  Thanks for that, needs some thinking on my part. As for b1, I don't like Pandas (yes I may not get their Philosophy, but consider me backing the CiC on this one - don't need to), b2: Yes, &amp; that was exactly point of this question. bullet3: Yes new data is regular, but I only get sporadic access (it goes through lot of pre-processing). Cookiecutter is inviting but also reminds me of: <a href="https://legacy.gitbook.com/book/svkucheryavski/mdatoolsm/details" rel="nofollow noreferrer">legacy.gitbook.com/book/svkucheryavski/mdatoolsm/details</a></span>
<span class="comment-copy">i.e it needs to be current and regularly updated.</span>
<span class="comment-copy">Also, why is the deep copy question demotivating to answer? Is the answer too long, or is the answer in the negative? i.e. yes I have to override every single attribute? :/</span>
<span class="comment-copy">deep copy part is fine, but I do not have an opinion about it. it is just overwhelming to read an invitation about your code as poor - then it shoud go to <a href="https://codereview.stackexchange.com">codereview.stackexchange.com</a></span>
<span class="comment-copy">what is a CiC ?</span>
