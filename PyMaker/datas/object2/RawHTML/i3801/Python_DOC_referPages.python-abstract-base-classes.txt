<div class="post-text" itemprop="text">
<p>As I dig further into Python internals, I start to see abc's more often in the documentation. Unfortunately the docs don't explain how they can be used. I haven't even been able to use the "concrete implementations" of these abstract base classes. </p>
<p>For example, reading about class importlib.abc.SourceLoader, one learns that "is_package" is a concrete implementation of InspectLoader.is_package(). But what if I'd like to use that in my code? Is it possible? I've tried many ways but the method can't be imported. </p>
<p>ExtensionFileLoader is documented as a concrete implementation of importlib.abc.ExecutionLoader, but if I try to use it (such as: from importlib import machinery.ExecutionLoader), once again it can't be found. </p>
<p>If these methods can't be imported, why are they documented? is there any sample code to show how they can be used?   Example:  </p>
<pre><code>import importlib.abc.SourceLoader     # doesn't work

class try_pkg_check():

    def main(self, source_file_name):   
        possible_pkgs = ['math', 'numpy']           
        for posbl_pkg in possible_pkgs:         
            answer = SourceLoader.is_package(posbl_pkg)            
            print("For {}, the answer is: {}".format(posbl_pkg, answer))                
        return None         

if __name__ == "__main__":    
    instantiated_obj = try_pkg_check()      
    instantiated_obj.main()
</code></pre>
<p>People might comment that I shouldn't try to import an abstract class. But "is_package" is documented as concrete, so I should be able to use it somehow, which is my question.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import importlib.abc.SourceLoader
</code></pre>
<p>The error message that this line produces should give you a hint where you've gone wrong:</p>
<pre><code>ModuleNotFoundError: No module named 'importlib.abc.SourceLoader'; 'importlib.abc' is not a package
</code></pre>
<p>"<code>import foo</code>" requires that <code>foo</code> be a module, but <code>SourceLoader</code> is a class inside a module.  You need to instead write:</p>
<pre><code>from importlib.abc import SourceLoader
</code></pre>
<p>However, there are further problems with this line:</p>
<pre><code>answer = SourceLoader.is_package(posbl_pkg)
</code></pre>
<p>First of all, <a href="https://docs.python.org/3/library/importlib.html#importlib.abc.SourceLoader.is_package" rel="nofollow noreferrer"><code>SourceLoader.is_package</code></a> is an instance method, not a class or static method; it has to be called on an instance of <code>SourceLoader</code>, not on the class itself.  However, <code>SourceLoader</code> is an abstract class, so it can't be directly instantiated; you need to use a concrete subclass like <a href="https://docs.python.org/3/library/importlib.html#importlib.machinery.SourceFileLoader" rel="nofollow noreferrer"><code>SourceFileLoader</code></a> instead.  (When the docs call <code>SourceLoader.is_package</code> a "concrete implementation" of <code>InspectLoader.is_package</code>, I believe what they mean is that <code>SourceLoader</code> provides a default implementation for <code>is_package</code> so that its subclasses don't need to override it in order to be non-abstract.)</p>
<p>Hence, you need to write:</p>
<pre><code>from importlib.machinery import SourceFileLoader

...

answer = SourceFileLoader(fullname, path).is_package(fullname)
</code></pre>
<p>where <code>fullname</code> is "a fully resolved name of the module the loader is to handle" and <code>path</code> is "the path to the file for the module."</p>
</div>
<span class="comment-copy"><code>importlib.abc.ExecutionLoader</code> is in <code>importlib.abc</code>, but <code>from importlib import machinery.ExecutionLoader</code> assumes it's in <code>importlib.machinery</code>.</span>
<span class="comment-copy">Actually, <code>from importlib import machinery.ExecutionLoader</code> is invalid syntax, so you'd get a different error than "it can't be found".  Can you please show us some actual code you're trying to run that doesn't do what you expect?</span>
<span class="comment-copy">Is your question about abc and ExecutionLoader as example or do you know about abc and want more details on ExecutionLoader6</span>
<span class="comment-copy">As soon as I learn how to prevent line breaks being removed when I post code, I'll post code. Reading the help docs but do not see it mentioned, which is odd, because it should be the first topic covered.</span>
<span class="comment-copy">Awesome help, right on target, thanks!</span>
