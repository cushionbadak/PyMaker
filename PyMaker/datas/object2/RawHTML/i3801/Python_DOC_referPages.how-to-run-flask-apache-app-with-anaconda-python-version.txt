<div class="post-text" itemprop="text">
<p>I have in my server two Python versions: the Python default, already present in Ubuntu Server 16.04 and Anaconda Python.
When I run the Flask application with Apache, because this is running in user www-data, the application runs in Python default, but I have to run in Anaconda installation.
How to configure to use the Anaconda Python version and how to install new modules in this version?
The path of Anaconda installed is /home/wandre/anaconda2</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way that worked for me to let Apache run the python module in Anaconda environment so that Flask app can run. </p>
<p>First is installation. Install Apache with the command <code>sudo apt-get install apache2 apache2-bin apache2-dev</code>. Then, install Anaconda under the directory /opt as sudo. After having Anaconda installed on /opt/anaconda2, install conda packages as below:</p>
<pre><code>sudo su  # Login as superuser
export PATH=/opt/anaconda2/bin:$PATH # Add conda to your path
conda install -c anaconda flask
pip install mod_wsgi 
mod_wsgi-express install-module # the outputs to this is used for Apache configuration in the next step
</code></pre>
<p>Now you need to update the Apache configurations. This involves updating three files:</p>
<ol>
<li><p>wsgi.load</p>
<p>Open the file /etc/apache2/mods-available/wsgi.load and add the following (this is the output from <code>mod_wsgi-express install-module</code> so yours could be different)</p>
<pre><code>LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi-py27.so 
</code></pre>
<p>If the <code>LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so</code> was originally included in this file, comment it out. Otherwise (at least from what I checked), the apache server will run the default python instead of the one in Anaconda. Next, enable the wsgi mod:</p>
<pre><code>sudo a2enmod wsgi 
</code></pre></li>
<li><p>wsgi.conf</p>
<p>Open the file /etc/apache2/mods-available/wsgi.conf and add the following</p>
<pre><code>&lt;IfModule mod_wsgi.c&gt;
    WSGIPythonHome /opt/anaconda2
&lt;/IfModule&gt;
</code></pre></li>
<li><p>000-default.conf (your filename may be different)</p>
<p>Open the file /etc/apache2/sites-available/000-default.conf and add the following</p>
<pre><code>WSGIDaemonProcess flaskapp python-home=/opt/anaconda2 python-path=/var/www/flask
WSGIScriptAlias / /var/www/flask/flaskapp.wsgi
&lt;Directory /var/www/flask&gt;
    WSGIProcessGroup flaskapp
    WSGIApplicationGroup %{GLOBAL}
    Require all granted
&lt;/Directory&gt;
</code></pre></li>
</ol>
<p>You are all set.</p>
<p>Please note that I was not able to find tutorial for setting 'Anaconda + Flask + Apache' so I referred to a post on '<a href="https://ostrokach.gitlab.io/post/apache-django-anaconda/" rel="nofollow noreferrer">Anaconda + Django + Apache</a>'.</p>
</div>
<span class="comment-copy">perhaps, use <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">virtual environments</a>?</span>
<span class="comment-copy">But, how to set the Apache to use some environment?</span>
<span class="comment-copy">Now you have a Windows user googling that for you:<a href="https://www.thecodeship.com/deployment/deploy-django-apache-virtualenv-and-mod_wsgi/" rel="nofollow noreferrer">thecodeship.com/deployment/â€¦</a> ;))</span>
<span class="comment-copy">Remove your system packaged mod_wsgi. Recompile mod_wsgi from source code against Anaconda. Best to use the <code>pip install</code> method as described in <a href="https://pypi.org/project/mod_wsgi/" rel="nofollow noreferrer">pypi.org/project/mod_wsgi</a> It is necessary to recompile as mod_wsgi has to be compiled for Python version/distro you want to use.</span>
<span class="comment-copy">You should not need <code>WSGIPythonPath /opt/anaconda2/lib/python2.7/site-packages</code>. You also don't need <code>WSGIScriptReloading On</code> as that is the default anyway. For Apache 2.4, use <code>Require all granted</code>. You don't need <code>Order</code> and <code>Allow</code>.</span>
<span class="comment-copy">@GrahamDumpleton Your suggestions worked perfect. Thanks! My post is now updated.</span>
