<div class="post-text" itemprop="text">
<p>Given the following code  </p>
<pre><code>import time
from multiprocessing import Pool
from threading import Lock
import multiprocessing

PROCESSES = 2
WORKER_CALLS = 2
lock = Lock()

def run(num):
    lock.acquire()
    print("enter"+str(num))
    time.sleep(2)
    print("exit" + str(num))
    lock.release()


if __name__ == "__main__":
    pool = multiprocessing.Pool(processes=PROCESSES)
    pool_outputs = pool.map(run, range(WORKER_CALLS))
    pool.close()
    pool.join()
    print('Pool:', pool_outputs)
</code></pre>
<p>Expected output is, since assume the lock part only one process can be in:</p>
<pre><code>enter0
exit0
enter1
exit1
Pool: [None, None]
</code></pre>
<p>but actual output is:</p>
<pre><code>enter0
enter1
exit0
exit1
Pool: [None, None]
</code></pre>
<p>What's the problem and how to resolve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot lock processes like this, you have tu use <a href="https://docs.python.org/3/library/multiprocessing.html#managers" rel="nofollow noreferrer"><code>multiprocessing.Manager</code></a>:</p>
<blockquote>
<p>Managers provide a way to create data which can be shared between
  different processes, including sharing over a network between
  processes running on different machines. A manager object controls a
  server process which manages shared objects. Other processes can
  access the shared objects by using proxies.</p>
</blockquote>
<hr/>
<pre><code>manager = multiprocessing.Manager()
lock = manager.Lock()
</code></pre>
<p>Instead of</p>
<pre><code>lock = Lock()
</code></pre>
</div>
<span class="comment-copy">I know nothing about Python but my first guess would be that <code>Lock</code> only works across threads, not across processes (and so every process has its own <code>lock</code>).</span>
<span class="comment-copy">@melpomene is correct: locks are generally used for protecting access to shared data. Since different processes have no shared data (unless you do something specific), there should be no need in locks as well.</span>
