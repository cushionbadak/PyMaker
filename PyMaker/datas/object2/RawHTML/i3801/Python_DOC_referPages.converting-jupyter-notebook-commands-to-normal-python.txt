<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10361206/how-to-run-an-ipython-magic-from-a-script-or-timing-a-python-script">How to run an IPython magic from a script (or timing a Python script)</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I am currently following the <a href="http://holoviews.org/user_guide/Network_Graphs.html" rel="nofollow noreferrer">Holoviews tutorial</a>. Everything in there is done in notebooks, and makes use of the '%' syntax. I've never used notebooks (and don't particularly want to either). How can I write these lines in a normal .py file? Here's an example:</p>
<pre><code> %opts Graph [width=400 height=400]
</code></pre>
<p>I've tried a few things, such as:</p>
<pre><code>graph=hv.Graph.opts(width=400, height=400)
graph=hv.Graph.opts(width=[400], height=[400])
hv.Graph(width=400, height=400)
</code></pre>
<p>These all throw errors. How does that % syntax actually work? How are there no commas in that list? I just want to set the width and height of my graph normally. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Tl;dr: If your real interest is to use <code>holoviews</code> outside the jupyter notebook environment (like the OP does), see the section <a href="http://holoviews.org/getting_started/Customization.html#Outside-the-notebook" rel="nofollow noreferrer">Outside the notebook</a> in the holoviews documentation. Briefly, the magic <code>%%opts Graph [width=400 height=400]</code> corresponds to calling the method <code>g.options(width=400, height=400)</code> on some <code>Graph</code> object <code>g</code>.</p>
<p>If you are reading this because you are curious about <code>jupyter</code>'s  % "magics", read on. </p>
<p>The "%" commands that you can use in notebooks are the so-called ipython "magics". You'll find a list of the standard ones <a href="http://ipython.readthedocs.io/en/stable/interactive/magics.html" rel="nofollow noreferrer">here</a>. So they are not available in ordinary Python, but ipython understands the <code>%</code> syntax and translates it to calls to the particular library. So the simplest way to get access to them, and with the same <code>%</code> syntax to boot, is to run <code>ipython</code> instead of <code>python</code>.</p>
<p>You also ask how the % syntax works. A third-party package can "register" some of its functions as custom ipython magics by using a simple decorator:</p>
<pre><code>@line_magic
def lmagic(self, line):
    "my line magic"
    print("Full access to the main IPython object:", self.shell)
    print("Variables in the user namespace:", list(self.shell.user_ns.keys()))
    return line
</code></pre>
<p>See more in the documentation on <a href="https://ipython.org/ipython-doc/3/config/custommagics.html" rel="nofollow noreferrer">defining custom magics</a>.</p>
<p>Finally, you are of course more interested in going from the <code>hv</code> magics to the corresponding Python code. It seems that the <code>%%opts</code> magic that's been stumping you is a method of this class: <a href="http://holoviews.org/Reference_Manual/holoviews.ipython.html#holoviews.ipython.magics.OptsMagic" rel="nofollow noreferrer"><code>holoviews.ipython.magics.OptsMagic</code></a>. I don't use holoviews, but it seems that something like this <em>might</em> be equivalent to the magic in your question:</p>
<pre><code>from holoviews.ipython.magics import OptsMagic
om = OptsMagic()
om.opts("Graph [width=400 height=400]") 
</code></pre>
<p>Note that you may also need to select a graphics backend, e.g. with the <code>backend</code> keyword option. </p>
</div>
<span class="comment-copy">Are you asking about this particular iPython magic method or in general? Because in general, you'll have to recreate the functionality in different ways. They abstract away all sorts of code for convenience.</span>
<span class="comment-copy">Hm. Well this is my current concern but there are a few examples in this tutorial. Is there a general strategy? Here are some other examples:</span>
<span class="comment-copy">%%output size=150 %%opts Curve  [height=100 width=600 xaxis=None tools=['hover']]    %%opts Curve (color='red' line_width=1.5)  %%opts Spikes [height=100 width=600 yaxis=None] (color='grey' line_width=0.25)</span>
<span class="comment-copy">I'm afraid I'm not familiar with <code>%opts</code> so I'm not sure I can help with this one. For the general strategy, you'll have to Google around to see what they actually do. For example <code>%timeit</code> can be replaced by the <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer"><code>timeit</code></a>  module, but using it is more involved.</span>
<span class="comment-copy">I dont think opts is actually a 'built it' special method. From a quick search it looks like it's grabbing parameters and passing them to something. Opts is a method of Graph in the holoviews library</span>
