<div class="post-text" itemprop="text">
<p>Updated question &amp; code:</p>
<p>I have a PDF - Excel comparison programme which reads in approx 4 tables, then reads in an excel page and compares the elements within it.</p>
<p>I would like this output (in Ipython console using spyder) to save to a file.
I'm quite happy for this to print to a .txt file</p>
<p>The file has the comparison messages however the 'now comparing page..' 'now comparing part..' messages aren't being printed. (yesterday all the 'now comparing' messages were printed prior to the data matching messages but for some reason that's not happening anymore...) </p>
<p>I would like it to be of the format:</p>
<p>Now comparing page..</p>
<p>Now comparing part..</p>
<p>All data matches...</p>
<p>All data matches...</p>
<p>Now comparing part.. etc.</p>
<p>This is PART of a function which is in a different file which I call in my programme</p>
<pre><code>def compare_pdf_with_excel(pdf_data, excel_data):
...
...
...    
f = open('testoutput.txt','a')
for n, col in enumerate(comparison.columns):
    if all(comparison[col]):
        f = open('testoutput.txt','a')
        s = 'Data matches for CDID {}!'.format(col)
        f.write(str(s))
        for row in comparison.index:
            if not comparison.loc[row][col]:
                f = open('testoutput.txt','a')
                s = 'Error - there is a mismatch for CDID "{}" in period "{}"!'\
                .format(col,row)
                f.write(str(s))
</code></pre>
<p>This is part of the code from my programme</p>
<pre><code>f = open('testoutput.txt','a')
s = 'Now comparing PAGE ' + str(page_code) + ' page number ' + str(page_to_read)
f.write(str(s))
part_count = 0
for pdf, exc in zip([part_a1_1,part_a1_2,part_a1_3,part_a1_4], excel_chunks_a1_dropped):
    part_count += 1
    s = 'Now comparing part {}'.format(part_count)
    f.write(str(s))
    compare_pdf_with_excel(pdf, exc)   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Accumulate all of the comparison result strings in a list then return the list when the function ends and write the results to a file all at once.</p>
<pre><code>def compare_pdf_with_excel(pdf_data, excel_data):
    ....
    comparison.columns = columns
    results = []
    for n, col in enumerate(comparison.columns):
        if all(comparison[col]):
            s = 'Data matches for CDID {}!'.format(col)
            #print(s)
            results.append(s)
        for row in comparison.index:
            if not comparison.loc[row][col]:
                s = 'Error - there is a mismatch for CDID "{}" in period "{}"!'.format(col,row)
                #print(s)
                results.append(s)
    return results

for pdf, exc in zip([part_a1_1,part_a1_2,part_a1_3,part_a1_4],excel_chunks_a1_dropped):
    part_count += 1
    comparison_msg = 'Now comparing part {}'.format(part_count)
    print(comparison_msg)
    results = compare_pdf_with_excel(pdf, exc)
    results = ('\n'.join(results))
    print(results)
    with open(filepath, 'a') as f:
        f.write(comparison_msg = '\n')
        f.write(results)
</code></pre>
<hr/>
<p><code>with open(filepath, 'a') as f:</code> will <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">open the file for appending</a> which means each time the function is called, it will append to a file if it already exists.  Adding a filepath parameter to your function gives you a bit more control.</p>
</div>
<span class="comment-copy">Post your code. If you are using <code>print()</code>, it has the <code>file</code> argument that will allow you to write to file, example: <code>print('Data matches...', file=open('out.txt', 'a'))</code></span>
<span class="comment-copy">My print() for the data matches/doesn't is within a function I have defined in a file which I call upon. My print() for the page number and part is in the actual program itself. Would this be a problem?</span>
<span class="comment-copy">Welcome to SO. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.</span>
<span class="comment-copy">A single file for <b>all</b> pdf/exc comparisons or one file for each?</span>
<span class="comment-copy">A single file with the whole list for every page, every part, every match/mismatch</span>
<span class="comment-copy">Should note that if the function is called more than one (and the file is not deleted beforehand) the results of each run will continue to be appended to the file.</span>
<span class="comment-copy">This is a great idea for the data messages but I also require it to capture the page / part messages (as in example in question) Could I open the same file and write to that for the page/part messages?</span>
<span class="comment-copy">@Laura - see edit.</span>
<span class="comment-copy">Great thank you</span>
<span class="comment-copy">Is there something instead of join?  It comes up with TypeError: can only join an iterable</span>
