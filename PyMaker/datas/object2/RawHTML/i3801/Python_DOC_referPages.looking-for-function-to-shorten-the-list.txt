<div class="post-text" itemprop="text">
<p>Some widgets in wxPython has a method like "GetSelections()" which returns a list of indexes of selected items.
Having this list of index I can get a list of items. This way, for example:</p>
<pre><code>&gt;&gt;&gt; list_of_items = ['zero', 'one', 'two', 'three', 'four', 'five']
&gt;&gt;&gt; list_of_indexes = [1,3,5]
&gt;&gt;&gt; [list_of_items[e] for e in list_of_indexes]
['one', 'three', 'five']
</code></pre>
<p>So the question is: is there a shortcut for last string? Something like:</p>
<pre><code>list_of_items.getitems(list_of_indexes)
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>There are few approaches you can use.</p>
<h3>List slicing</h3>
<p>Replace <code>[1, 3, 5]</code> with an equivalent <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> object:</p>
<pre><code>list_of_items = ['zero', 'one', 'two', 'three', 'four', 'five']
list_of_indexes = slice(1, 6, 2)

res = list_of_items[list_of_indexes]
</code></pre>
<h3>Itemgetter</h3>
<p>If you need to supply a list which cannot be represented by <code>slice</code>, you can use <code>operator.itemgetter</code>:</p>
<pre><code>from operator import itemgetter

list_of_items = ['zero', 'one', 'two', 'three', 'four', 'five']
list_of_indexes = [1, 3, 5]

res = itemgetter(*list_of_indexes)(list_of_items)

print(res)

('one', 'three', 'five')
</code></pre>
<h3>Numpy</h3>
<p>3rd party library <code>numpy</code> supports your desired indexing syntax directly:</p>
<pre><code>import numpy as np

list_of_items = ['zero', 'one', 'two', 'three', 'four', 'five']
list_of_indexes = [1,3,5]

res = np.array(list_of_items)[list_of_indexes].tolist()
</code></pre>
</div>
<span class="comment-copy">Excellent! Thanks! "Slice" will be the new word in my python lexicon.</span>
<span class="comment-copy">But... sorry that way:      list_of_indexes = slice(1, 6, 2) is not suitable for me, because I've got list of indexes from outside. I can't replace it with slice.  Using Numpy is possible, but this is too much.</span>
<span class="comment-copy">@DamirX, See update, you can use itemgetter.</span>
