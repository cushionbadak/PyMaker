<div class="post-text" itemprop="text">
<p>have this problem that when i try connecting to an API it keeps sending me wrong signature and I realised that it is because when I read from the file, python 3 has these square brackets on it. When I hard code the API key and secret inside the program it works.</p>
<pre><code>import requests
import base64
import hmac
import hashlib
from hashlib import sha384
from io import BytesIO
import time
import json

def connect():
    f=open("Test-API.txt", "r")
    if f.mode == 'r':

        api_key =f.readline().splitlines()
        print(repr(api_key))
        api_secret =f.readline().splitlines()
        print(repr(api_secret))
        f.close()
    api_key = 'Your API Key'
    api_secret = 'Your API Secret'
    print(repr(api_key))
    print(repr(api_secret))
connect()
</code></pre>
<p>I realised the problem might be because of the square brackets cause when I used REPR i see the square brackets being printed. Is there a way to remove it?</p>
<p>['Your API Key']
['Your API Secret']
'Your API Key'
'Your API Secret'</p>
</div>
<div class="post-text" itemprop="text">
<p>You are creating the "single element lists" you see yourself, by using <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer">splitlines()</a> on the result of <code>readline()</code>. What you probably ment to do, was removing the newline at the end. Thats what <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer"><code>rstrip(chars)</code></a> is for.</p>
<p><code>splitline(..)</code> returns a list of split lines (doh). Just don't do that:</p>
<pre><code>def connect():
    with open("Test-API.txt", "r") as f: 
        api_key = f.readline().rstrip('\n')   # rstrip the newline
        api_secret = f.readline().rstrip("\n") # no splitlines() here either

    print(type(api_key), api_key, sep = "\n")
    print(type(api_secret), api_secret, sep ="\n"

connect()
</code></pre>
<p>Also, use the <code>using ...</code> approach with <code>open(..)</code> - its more robust if encountering errors and autocloses your filehandle for you.</p>
</div>
<span class="comment-copy">Thanks man this worked,</span>
