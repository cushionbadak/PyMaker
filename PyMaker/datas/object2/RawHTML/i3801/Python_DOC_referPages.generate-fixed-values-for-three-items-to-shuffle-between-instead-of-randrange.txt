<div class="post-text" itemprop="text">
<p>This previous code worked, however, now I want to generate fixed orientations at 35, 155, and 215 degrees and also try to generate pseudo-random orientations that are 60 plus degrees apart. The problem with the current code is that the values can duplicate or be too close together. </p>
<pre><code>from psychopy import visual, event, misc, core, sound, gui, data
from sys import argv
from math import sin, cos
import numpy as np
import numpy.random as rand
import sys,os, datetime as dt
import random
import csv
from psychopy.tools.filetools import fromFile

all_ori=[]#create distractor variable for storing distractor orientations. want to save all orientations
for s,this_stim in enumerate(stims): #loop over stimuli
    this_stim.setFillColor(-1) #make sure that all stimuli fill color are black (when they are cued, they are white)
    if vis == 'left':
        current_x,current_y  = eccen * np.cos(left_polar[s]),eccen * np.sin(left_polar[s]) #convert polar positions to x,y
    elif vis == 'right':
        current_x,current_y  = eccen * np.cos(right_polar[s]),eccen * np.sin(right_polar[s])
    this_stim.setPos([current_x,current_y]) #set position of current stimulus to current_x, current_y
    this_orient = random.randrange(0, 179) #randomly choose orientation and set stimulus to this orientation (previous)
    all_ori.append(this_orient)
    this_stim.setOri(this_orient)
    print all_ori #--- how you can determine if code is working
    this_stim.draw() #draw stimulus
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html" rel="nofollow noreferrer">Numpy Random Choice can pick from a list</a><br/>
<strong>Try this:</strong><br/>
    rand.choice([35, 155, 215])</p>
</div>
<span class="comment-copy">I'm not sure what you're asking for in your first paragraph (some examples might help), but from your title, it sounds like you're asking for either <code>random.choices(list_of_items, k=3)</code> or <code>random.sample(list_of_items, k=3)</code>, depending on whether you want duplicates or not. Or maybe you want to <code>random.shuffle(list_of_stuff)</code>? At any rate, whatever you want, if you read the <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer"><code>random</code></a> docs, either it'll be there, or you'll be better able to explain why what you want is different from anything there.</span>
