<div class="post-text" itemprop="text">
<p>i have multiple threads doing the same job : to calculate a distance and put it in a list than each thread needs to compare it to the other threads and do a certain task.
how do i make a thread wait for the others to finish the task ( and having others task to follow up joins won't work in this case) </p>
</div>
<div class="post-text" itemprop="text">
<p>There's a name for what you want, it's called a <code>Barrier</code>.  I don't know enough about the Python ecosystem to know whether there's a ready-made one that you can just use, but here's what it is:</p>
<p>It's an object that contains a count (initially greater than zero), and a condition variable.  It has a method, <code>await()</code>.</p>
<p>The <code>await()</code> method decrements the count, and then;</p>
<ul>
<li>It signals the condition variable and returns if the count became zero, or</li>
<li>It waits on the condition variable until the count equals zero, and <em>then</em> it returns.</li>
</ul>
<p>If you initialize a Barrier with count = N, and then N threads <code>await()</code> it, none of the threads will "get past the barrier" (i.e., return from <code>await()</code>) until all of the threads have "arrived at the barrier" (i.e., called <code>await()</code>).</p>
<p><code>Barrier</code> often is implemented as <code>CyclicBarrier</code>, which is the same thing with the additional feature that it automatically resets the count to its original value when the barrier opens.</p>
<hr/>
<p>Update:  There is a <code>threading.Barrier</code> class in the standard library for Python3 (v. 3.2 and later).</p>
<p><a href="https://docs.python.org/3/library/threading.html#barrier-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/threading.html#barrier-objects</a></p>
</div>
<span class="comment-copy">Why not kill the thread when it's done? Then you could wait for all workers to complete and open new threads to process the results. I don't know if that's good for you since you gave us no explanation on what is the task or what's your code for doing it</span>
<span class="comment-copy">i need the same thread to continue other task for a simulation.</span>
<span class="comment-copy">Re, "I need the same thread to..." In a program that uses multiple threads for computation, it's often a smart idea to design the program so that it does not matter which thread does the work when there's work to be done, but...</span>
<span class="comment-copy">...If you're using the standard Python implementation, then there is no performance benefit from using multiple threads for computation because of the <a href="https://wiki.python.org/moin/GlobalInterpreterLock" rel="nofollow noreferrer">Global Interpreter Lock (a.k.a., "the GIL")</a>.</span>
<span class="comment-copy">as i said @jameslarge it's for a simulation i need each thread to represent a sensor that calculate distance.</span>
<span class="comment-copy">Thanks , i think this is exactly what i'm looking for  it's better than what i'm using ( waiting for the Queue to be full )</span>
