<div class="post-text" itemprop="text">
<p>I got temperature, pressure, and altitude readings on my <code>PI</code> using a sensor:</p>
<ol>
<li>The problem is, to see the results, I have to execute the <code>code.py</code> every time by myself. I am trying to automate it somehow so it will keep running itself for the time I want. </li>
<li>Once that is automated, would like to save the results and analyze the output after some time.</li>
</ol>
<p>Is there a way I can write code for both the tasks?</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two things required here. First a script i.e <code>code.py</code> to log the functional behavior like <code>temperature, pressure, and altitude</code> readings along with error/response during the process. Another is the script executions logs i.e a success or failure during the scheduled time and other system logs.</p>
<p>For first job, you have to do by your self but ensure to have a <code>logger</code> module in place to log the process flow.</p>
<p>For Second job, you can use OS provided scheduler <code>crontab</code> for <code>Linux</code> based os. For example to execute script every minutes</p>
<pre><code>* * * * * python /home/script/code.py &gt; /home/script/code.log 2&gt;&amp;1
</code></pre>
<p>For more about scheduler jobs, you can refer <a href="https://code.tutsplus.com/tutorials/scheduling-tasks-with-cron-jobs--net-8800" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The time module is your friend here. You can set up an infinite loop with <code>while True:</code> and use <code>time.sleep(secs)</code> at the end of the loop (after output).</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use additional controller script like this:</p>
<pre><code>import subprocess;
import time;
import sys;

x = True;
while x:
    while exit_code!=0:
        try:
            exit_code = subprocess.check_call(['python', 'collect_data.py', '-cli_args_if_needed']);
        except:
            print(sys.exec_info()[1]);
            print('Relaunching in 5 seconds');
            time.sleep(5)
</code></pre>
</div>
<span class="comment-copy">1. If you're running Raspbian, you can use the <code>crontab</code> to run any program at intervals. Or <code>time.sleep()</code> in Python to pause.</span>
<span class="comment-copy">2. You can save the results to a file (typically <code>csv</code>, see <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">here</a>). Then you read the file later on.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/26774186/looping-at-a-constant-rate-with-high-precision-for-signal-sampling">Looping at a constant rate with high precision for signal sampling</a></span>
