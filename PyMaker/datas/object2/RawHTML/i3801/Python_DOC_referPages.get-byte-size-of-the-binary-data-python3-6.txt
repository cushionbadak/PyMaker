<div class="post-text" itemprop="text">
<p>I have a string which I converted to binary representation using <code>str.encode('utf-8')</code>.
After that I expect <code>getsizeof()</code> and <code>len()</code> return the same value, but it appears that <code>sys.getsizeof()</code> always return a bigger value.</p>
<p>I then send this binary data over socket to node.js server and store them in Buffer. Both <code>Buffer.length</code> and <code>Buffer.byteLength</code> return the same value, which is equal to <code>len()</code> value in Python.</p>
<p>I can't figure out what is going on there and why <code>Buffer.byteLength</code> is not the same as <code>sys.getsizeof()</code>.</p>
<p>My data is not always strings or may have different encoding, so I want to make sure that I know the size in bytes, not in characters.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/sys.html#sys.getsizeof" rel="nofollow noreferrer"><code>sys.getsizeof</code></a> returns the size that the object takes in memory. That includes all additional data which Python needs in order to work with the object (e.g. the information that this is a string in the first place and not an integer).</p>
<p>For example, see that it has a certain size for an empty string:</p>
<pre><code>&gt;&gt;&gt; sys.getsizeof('')
49
</code></pre>
<p>and even for <code>None</code>:</p>
<pre><code>&gt;&gt;&gt; sys.getsizeof(None)
16
</code></pre>
</div>
<span class="comment-copy">This is a shot in the dark, but maybe in the binary format it has some sort of string terminator encoded together with the string or some other additional data, which might cause the difference... UPDATE: Looking at the answer below it seems I wasn't far off. :D</span>
