<div class="post-text" itemprop="text">
<p>I am new to python so apologies for the newness of the question.  </p>
<p>A description of what I want to do:
I have this folder structure:
c:\PythonScripts\SharedFunctions
C:\PythonScripts\Test\RebuildSpatialIndex\RebuildIndexes.py
C:\PythonScripts\Prod\RebuildSpatialIndex\RebuildIndexes.py</p>
<p>I would like the RebuildIndexes.py to be able to use the function in c:\PythonScripts\SharedFunctions.  </p>
<p>How do I do that properly in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, if you want to import a module, the module's parent directory must be in your <code>PYTHONPATH</code> environment variable.</p>
<p>So, in your case, you would add <code>c:\PythonScripts\SharedFunctions</code> to your <code>PYTHONPATH</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't use Windows, so I don't know how to set your PYTHONPATH there (which will enable you to have any Python scripts find your local libraries). The documentation for using Python on Windows <a href="https://docs.python.org/2/using/windows.html" rel="nofollow noreferrer">(Python 2)</a> <a href="https://docs.python.org/3/using/windows.html" rel="nofollow noreferrer">(Python 3)</a> will help.</p>
<p>To add to the path from within a program, use</p>
<pre><code>import sys
sys.path.append(path_to_local_libraries) 
</code></pre>
</div>
<span class="comment-copy">You will have to drop an empty <code>__init__.py</code> inside the shared_functions folder to make it into a package. Then either put it in site_packages inside python installtion or add the folder to sys.path. Btw, in python we use underscored names for modules(scripts, packages) rather than camelcase</span>
<span class="comment-copy">Gotcha.  Thanks.</span>
