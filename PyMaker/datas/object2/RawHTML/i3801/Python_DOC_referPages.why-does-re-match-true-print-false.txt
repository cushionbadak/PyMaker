<div class="post-text" itemprop="text">
<pre><code>import re
print(re.match(r'[a-zA-Z0-9]{6,}', '4fdg5Fj3') == True)
</code></pre>
<p>it is printing <code>False</code> but the string given is fullfilling all the conditions of the regular expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>Neither a match object nor <code>None</code>, the two types of objects that <code>re.match()</code> can return, is ever equal to True:</p>
<pre><code>&gt;&gt;&gt; importe re
&gt;&gt;&gt; None == True
False
&gt;&gt;&gt; re.match(r'[a-zA-Z0-9]{6,}', '4fdg5Fj3')
&lt;_sre.SRE_Match object; span=(0, 8), match='4fdg5Fj3'&gt;
&gt;&gt;&gt; re.match(r'[a-zA-Z0-9]{6,}', '4fdg5Fj3') == True
False
</code></pre>
<p>Don't use <code>== True</code>. If you need to see if the match succeeded, test for <code>is not None</code>:</p>
<pre><code>&gt;&gt;&gt; re.match(r'[a-zA-Z0-9]{6,}', '4fdg5Fj3') is not None
True
&gt;&gt;&gt; re.match(r'No such pattern', 'will not match') is not None
False
</code></pre>
<p>You should almost <em>never</em> use <code>== True</code> or <code>== False</code>. In a boolean context like an <code>if</code> statement, just drop <code>== True</code>; it is the job of the statement to test for the boolean truth. For <code>== False</code>, put <code>not</code> in front instead. Moreover, as seen above, most objects are not equal to <code>True</code> or <code>False</code>; to test for the <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">truth value</a>, just pass in the object itself, or convert the truth value too a boolean using the <code>bool()</code> function.</p>
</div>
<span class="comment-copy">Because the result of <code>re.match</code> is not equal to <code>True</code>.</span>
<span class="comment-copy">This isn't a bad question, given that Python's documentation states, "Match objects always have a boolean value of True." It's not obvious to me the difference between (a) being equal to True and (b) having a boolean value of True. It seems, as highlighted in the accepted answer by @martin-pieters, that <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">truth-value-testing as True in an if or a while statement</a> is a special use case for Boolean values, distinct from being equal to True.</span>
<span class="comment-copy">thanks for the help it's working in my terminal but in this given link <a href="https://www.codewars.com/kata/regex-password-validation/train/python/5b0bce166e8f28c1ef000081" rel="nofollow noreferrer">codewars.com/kata/regex-password-validation/train/python/â€¦</a> if i write above expression it will fails some test don't know why</span>
<span class="comment-copy">That's a different problem from the one in your question. If you have further questions, create a new post.</span>
<span class="comment-copy">And your regex will pass for a password without numbers or uppercase letters, like <code>fdgfjdoy</code>, but the requirements are that there should be <i>at least one</i> of each of the categories.</span>
<span class="comment-copy">how is it happening why regex is returning true in case of         fdgfjdoy</span>
<span class="comment-copy">@vipinyadav: I already told you: <i>post a new question</i>. Comments are not for new questions.</span>
