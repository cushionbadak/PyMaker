<div class="post-text" itemprop="text">
<p>when replacing all spaces with commas in a row using `fileout.write(x) .replace (' '. ',') . but how do I change the spaces only in the first column? I want to break the date and time below into 2 columns separated by commas</p>
<pre><code>2017/06/07 10:40:02,Rule VWIRE 02,web browsing
2017/06/07 10:40:02,Rule VWIRE 02,web browsing
2017/06/07 10:40:02,Rule VWIRE 02,web browsing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Given this is likely CSV, you could just use <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">the <code>csv</code> module</a> to get the columns as elements in a <code>list</code> (representing a given row), then work with only the first column</li>
<li>If you know for a fact that every column needs this replacement exactly once, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace</code>'s optional third parameter</a> to limit replacement</li>
</ol>
<p>Solving via #2 is trivial:</p>
<pre><code>with open(infilename) as inf, open(outfilename, 'w') as outf:
    for line in inf:
        outf.write(line.replace(' ', ',', 1)
</code></pre>
<p>Approach #1 is only slightly more involved (and likely more correct):</p>
<pre><code>import csv
with open(infilename, newline='') as inf, open(outfilename, 'w', newline='') as outf:
    csvout = csv.writer(outf)
    for row in csv.reader(inf):
        # Only splits first whitespace in first column
        csvout.writerow(row[0].split(None, 1) + row[1:])
</code></pre>
<p>In the latter case, you may want to perform checks to confirm that <code>row[0].split(None, 1)</code> actually produced two results, so you don't silently muck up some rows and not others.</p>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you need?</p>
<pre><code>s = '2017/06/07 10:40:02,Rule VWIRE 02,web browsing'
s = s.split(' ')
s[0] += ','
s = ''.join(s)
</code></pre>
<p>outputs:
2017/06/07,10:40:02,RuleVWIRE02,webbrowsing</p>
</div>
<span class="comment-copy"><code>replace(' ', ',', max=1)</code> ??</span>
<span class="comment-copy">@WoodyPride: The third parameter is named <code>count</code> in the docs, but it's positional only, so it hardly matters; can't pass it by a meaningful name.</span>
<span class="comment-copy">careful when creating <code>csv</code>: <code>open(outfilename, 'w',newline="") as outf</code> as doc states. Some versions of python (windows) tend to leave an extra blank line after every line.</span>
<span class="comment-copy">@Jean-FrançoisFabre: Thanks for the reminder. I blame the local heatwave for the brain malfunction. :-)</span>
<span class="comment-copy">you're welcome :) note that I never had a problem with the read mode without <code>newline</code></span>
<span class="comment-copy">also: <code>csvout.writerows(row[0].split(None, 1) + row[1:] for row in csv.reader(inf))</code> is faster &amp; more compact.</span>
<span class="comment-copy">@Jean-FrançoisFabre: I believe it can be a problem for read mode, depending on format, if there are newlines embedded in fields, but I'll admit to never personally encountering it. Using <code>writerows</code> with a genexpr <i>is</i> more succinct (and possibly slightly faster), but it does also makes it a bit more cryptic, which may be a problem for someone who clearly didn't know the <code>csv</code> module even existed (and makes it harder to expand the code to check stuff like whether the split happened, handle single row errors, etc.).</span>
