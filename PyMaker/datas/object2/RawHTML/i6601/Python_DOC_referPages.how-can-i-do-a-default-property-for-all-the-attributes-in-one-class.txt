<div class="post-text" itemprop="text">
<p>I've been a reader only user for a long time now, and i'm thankful for all the questions answered by this big community.</p>
<p>I have 2 related questions, one is about programming and the other one is about translating process.</p>
<p>I want to develop a multilanguage application and with my little knowledge I've done the following in <code>dialog.py</code>:</p>
<pre><code>LANGUAGE = 'es-Es' # Get this variable from a conf file if defined

class Dialog:
    SUPPORTED_LANGUAGES = ['es-ES', 'en-GB']
    def __init__(self, lan):
        if lan in SUPPORTED_LANGUAGES:
            self.lan = lan
        else:
            self.lan = 'es-ES' # Use a default conf here

    _OPEN_MENU={
        'es-ES': 'Abrir...',
        'en-GB': 'Open...',
    }


    _CLOSE_MENU={
        'es-ES': 'Cerrar',
        'en-GB': 'Close',
    }

    _QUIT_APP_MENU={
        'es-ES': 'Salir',
        'en-GB': 'Quit',
    }

            .
            .
            .

    @property
    def OPEN_MENU(self):
        return self._OPEN_MENU[self.lan]

    @property
    def CLOSE_MENU(self):
        return self._CLOSE_MENU[self.lan]

    @property
    def QUIT_APP_MENU(self):
        return self._QUIT_APP_MENU[self.lan]

            .
            .
            .

dialog = Dialog(LANGUAGE)
</code></pre>
<p>So lets say in <code>main.py</code> I can use:</p>
<pre><code>from dialog import dialog

dialog.OPEN_MENU # With actual conf this returns 'Abrir...'
dialog.CLOSE_MENU # 'Cerrar'
dialog.QUIT_APP_MENU # 'Salir'
</code></pre>
<p>The first question, is there a way to do something like this without decorating and repeating the code for each one of the strings (this is not very pythonic)? The final goal is to have such a nice code in the main file, so it doesnt get messy.</p>
<p>The second, I know little about app development, is this how I am supposed to work or there is a better way that I didnt find out? How do developers handle this situation?</p>
<p>Thank you very much!</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be trying very hard to create a class to hold data.  It's okay to just create a data structure to hold data.</p>
<p>You could create key-value pairs for each language.  Save these in json files and use the language-key to read in the correct json file.  Deference the text with the key of a dictionary rather than the property of an object.</p>
</div>
<span class="comment-copy">Sorry, but your question isn't really obvious to me - "The first question, is there a way to do something like this without decorating and repeating the code for each one of the strings (this is not very pythonic)?" decorating and repeating the code? What code? For what strings? Can you <i>show us what you mean</i>?</span>
<span class="comment-copy">Yes, give me a few minutes to edit the question. The problem basically is that I have multiple strings which i want to be multilanguage, so I have to repeat the property definition for all of them.</span>
<span class="comment-copy">You are re-inventing the wheel. The gettext module provides internationalization (I18N) and localization (L10N) services for your Python modules and applications. <a href="https://docs.python.org/3/library/gettext.html" rel="nofollow noreferrer">docs.python.org/3/library/gettext.html</a> <a href="http://zetcode.com/wxpython/in18/" rel="nofollow noreferrer">zetcode.com/wxpython/in18</a></span>
<span class="comment-copy">Thanks, I want to avoid things like DIALOGS[OPEN_MENU][LANGUAGE], but its easier to do, you are right. Edit: I missreaded, you mean having different files for different languages, that is also fine.</span>
