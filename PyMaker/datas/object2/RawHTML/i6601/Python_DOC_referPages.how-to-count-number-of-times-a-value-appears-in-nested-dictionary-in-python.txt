<div class="post-text" itemprop="text">
<p>I have a dictionary of dictionary for example:</p>
<pre><code>d={'object1':{'time1':['value1','value2'],'time2':['value1','value4']},
</code></pre>
<p>'object2':{'time1':['value1','value6'],'time2':['value7','value8']}}</p>
<p>How can I iterate over the dictionary such that I can find value1 appears 3 times in total? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate over the values &amp; count like this:</p>
<pre><code>n = 0

for list_data in d.values():
    if 'value1' in list_data:
        n = n + 1

print(n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use the combination of <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><strong><code>collections.Counter</code></strong></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><strong><code>itertools.chain</code></strong></a> to achieve this as:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain
&gt;&gt;&gt; from collections import Counter

&gt;&gt;&gt; d={'time1':['value1','value2'],'time2':['value1','value4'],'time3':['value1','value5']}

&gt;&gt;&gt; counter_dict = Counter(chain(*d.values()))
#    ^ dict holding the count of each value
</code></pre>
<p>In order to fetch the count of 'value1' in your <code>counter_dict</code>, you need to just access the value of this key as:</p>
<pre><code>&gt;&gt;&gt; counter_dict['value1']
3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well the tricky way is:</p>
<pre><code>print(str(d).count('value1'))
</code></pre>
<p>but you can always just do a nested loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>This may not be the most elegant solution but it works for your nested dictionary problem:</p>
<pre><code>lst = d.values()
sub_val = [temp.values() for temp in lst]
d_val = [item for sublist in sub_val for item in sublist]
d_val = [item for sublist in d_val for item in sublist]
count = d_val.count('value1')
</code></pre>
<p><code>lst</code> is a list of nested dictionaries. <code>sub_val</code> creates a nested list of values for each nested dictionary. This results in a list of double nested list hence <code>d_val</code> flattening appears twice. Finally, <code>count</code> returns number of occurrences of <code>value1</code> in the flattened list <code>d_val</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try with <a href="https://docs.python.org/3.6/tutorial/datastructures.html" rel="nofollow noreferrer">list.count(x)</a>:</p>
<pre><code>d={'object1':{'time1':['value1','value1','value2'],'time2':['value1','value4']},'object2':{'time1':['value1','value6'],'time2':['value7','value8']}}
cnt =[item for l in [v2 for v1 in d.values() for v2 in v1.values()] for item in l].count('value1')
print(cnt) # print 4
</code></pre>
</div>
<span class="comment-copy">This is not dictionary of dictionary. This is single dictionary.</span>
<span class="comment-copy">Oh, you've just changed the question!!</span>
<span class="comment-copy">thanks !  edited the question @Harsha</span>
<span class="comment-copy">What if it appears as a key. Does that also count? If yes, then you can use <code>print len(str(d).split("'value1'"))-1</code>.</span>
