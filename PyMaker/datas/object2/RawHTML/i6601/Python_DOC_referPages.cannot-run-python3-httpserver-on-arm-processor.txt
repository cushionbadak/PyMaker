<div class="post-text" itemprop="text">
<p>I recently bought <a href="https://en.wikipedia.org/wiki/ODROID" rel="nofollow noreferrer">Odroid</a> <a href="http://www.hardkernel.com/main/products/prdt_info.php?g_code=G143452239825" rel="nofollow noreferrer">XU4</a>, a single-board computer with an <a href="https://en.wikipedia.org/wiki/ARM_architecture" rel="nofollow noreferrer">ARM</a> CPU. I try to run a simple web server using <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow noreferrer">HTTTPServer</a> on Python3.</p>
<pre><code>import http.server
import socketserver

PORT = 8000

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("", PORT), Handler) as httpd:
    print("serving at port", PORT)
    httpd.serve_forever()
</code></pre>
<p>This code runs well on my Mac machine. But when I try to run this on Odroid XU4, I got this error message.</p>
<pre><code>$ python3 webserver.py
Traceback (most recent call last):
  File "test.py", line 8, in &lt;module&gt;
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
AttributeError: __exit__
</code></pre>
<p>Can anyone explain why I got this error? For your information, Iâ€™ve attached the information about the OS and Python interpreter.</p>
<pre><code>$ uname -a
Linux odroid 4.9.44-54 #1 SMP PREEMPT Sun Aug 20 20:24:08 UTC 2017 armv7l armv7l armv7l GNU/Linu

$ python 
Python 3.5.2 (default, Aug 18 2017, 17:48:00)
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/socketserver.html" rel="nofollow noreferrer">the documentation</a> it would seem that the contextmanager protocol (<code>with ...</code>) form for <code>TCPServer</code>'s base class (and therefore <code>TCPServer</code> was added in python3.6.  This is not available in python3.5</p>
<blockquote>
<p>Changed in version 3.6: Support for the context manager protocol was added. Exiting the context manager is equivalent to calling <code>server_close()</code>.</p>
</blockquote>
<p>Fortunately, you can use the previous approach.  This roughly means taking your with statement and turning it into a plain assignment:</p>
<pre><code>httpd = socketserver.TCPServer(("", PORT), Handler)
print("serving at port", PORT)
httpd.serve_forever()
</code></pre>
</div>
