<div class="post-text" itemprop="text">
<p>I create a process pool with multiprocessing pool. I have many task to deal with, but it is not easy to get the qps of the task. So I want to get the active process number of the pool so i can set a appropriate pool size. This is the whole code:</p>
<pre><code>import time
from multiprocessing import Pool

def do_work(msg):
    # do some work


if __name__ == '__main__':
    consumer = KafkaConsumer(
    group_id=worker_config.kafka_group_id,
    bootstrap_servers=kafka_url,
    auto_offset_reset=worker_config.kafka_reset,
    enable_auto_commit=True)
    consumer.subscribe(topics=worker_config.kafka_topics)

    for message in consumer:
        logging.info('topic=%s, partition=%d, msg=%s' % (message.topic, message.partition, msg))
        pool.apply_async(do_work, (message,))
        process_count = number_of_active_process_of_pool
        logging.info("number_of_active_process_number is %d", process_count)


    pool.close()
    pool.join()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>apply_async gives you a AsyncResult:
<a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.AsyncResult" rel="nofollow noreferrer">https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.AsyncResult</a></p>
<p>Which you can use <code>.ready()</code>on to find out if it's done. This way you get the amount of tasks done and by extension the amount of tasks left to be done.
As long as this number exceeds the poolsize, you can assume that poolsize many processes are running, if it does not, then the remaining amount of tasks would be the amount of running processes.</p>
<p>Alternatives:</p>
<p>If you don't use apply_async but instead a Queue, such as this one:
<a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue" rel="nofollow noreferrer">https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue</a></p>
<p>You can then get the approximate queue size with <code>.qsize()</code> </p>
<p>there is also <code>multiprocessing.active_children</code>, but that only works if those processes end, a pool however does not; unless you order it to <code>.join()</code>
So in your case it would work.</p>
</div>
<span class="comment-copy">thanks for the answer. The whole code are listed below. I get messages from Kafka. The pool size is  8. When the number of message is more than 8, the number of process is still 8 and message is stored in the process pool.  But when the number of message is less than 8 such as 6, the number of active process in the pool is 6. I just want to know the number of active process in the pool which is 6. Because when i get a message from kafka, i will throw it into the pool, so i don't care the result of the process.</span>
<span class="comment-copy">Because i don't know the number of all messages, so use <code>.ready()</code> to <code>get the amount of tasks done and by extension the amount of tasks left to be done</code> is not suit for my case.</span>
<span class="comment-copy">Whenever you add a task via apply_async you put the returned task object into a list. Whenever you need to amount of tasks left, you go through the list and take out every result which's ready() reports done. You can then len(thelist) and get the remaining tasks still needing to be done.</span>
<span class="comment-copy">ok, that is a great idea, thanks</span>
