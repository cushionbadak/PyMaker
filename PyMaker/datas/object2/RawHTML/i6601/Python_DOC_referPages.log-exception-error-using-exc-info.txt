<div class="post-text" itemprop="text">
<p>How to patch logging at runtime for support <code>exc_info</code> key?</p>
<p>Example:</p>
<pre><code>log.exception(e, exc_info = 1)
</code></pre>
<p>Return error:</p>
<pre><code>TypeError: exception() got an unexpected keyword argument 'exc_info' 
</code></pre>
<p>This is in Python 2.6.6</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>exception</code> method is the single method which doesn't accept <code>exc_info</code> because it is meant to be called from exception clauses where logging of the exception is wanted (i.e. <code>exc_info</code> is implicitly set). If you want the same effect as setting <code>exc_info</code> to <code>False</code>, use the <code>error</code> method of a logger rather than the <code>exception</code> method. From <a href="https://docs.python.org/3/library/logging.html#logging.Logger.error" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p>Logger.error(msg, *args, **kwargs)</p>
<p>Logs a message with level ERROR on this logger. The arguments are interpreted as for debug().</p>
<p>...</p>
<p>Logger.exception(msg, *args, **kwargs)</p>
<p>Logs a message with level ERROR on this logger. The arguments are interpreted as for debug(). Exception info is added to the logging message. This method should only be called from an exception handler.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use traceback
<a href="https://docs.python.org/2/library/traceback.html" rel="nofollow noreferrer">https://docs.python.org/2/library/traceback.html</a></p>
<p>Traceback will print the exception and the stack trace showing the code caused the exception</p>
<pre><code>import traceback
_traceback = traceback.format_exc()
print _traceback
log.exception(_traceback)
</code></pre>
</div>
