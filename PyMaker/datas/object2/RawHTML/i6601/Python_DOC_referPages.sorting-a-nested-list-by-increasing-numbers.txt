<div class="post-text" itemprop="text">
<p>How do you sort all the values within the nested list structure, so that the sublists are both the same length as in the original list and so that the values shift to the appropriate sublist so that they are sorted overall, not just within each sublist individually. How does one go about this??</p>
<p>for instance:</p>
<pre><code>list1=[[0.10, 0.90, 0,20], [0.15, 0.80], [0.68, 0.08, 0.30]]
</code></pre>
<p>Becomes:</p>
<pre><code>list1=[[0.08, 0.10, 0.15], [0.20, 0.30], [0.68, 0.80, 0.90]]
</code></pre>
<p>Any help is appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>This works.</p>
<pre><code>list1=[[0.10, 0.90, 0.20], [0.15, 0.80], [0.68, 0.08, 0.30]]

list_lengths = [len(x) for x in list1]
flattened = [item for items in list1 for item in items]
items_sorted = sorted(flattened)

loc = 0
lists2 = []
for length in list_lengths:
    lists2.append(items_sorted[loc:loc+length])
    loc += length

print(lists2)
</code></pre>
<p>You need to get list lengths at some point to build the final lists2. To get your ordered values properly, you flatten and sort the list, then you add lists to list2 by slicing your sorted items.</p>
<p>Note that this will work for arbitrary length lists and tuples.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a> to chain the lists, sort them and create an iterator. Then you can just iterate over the original lists and create a result using <a href="https://docs.python.org/3.6/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain
&gt;&gt;&gt; l = [[0.10, 0.90, 0.20], [0.15, 0.80], [0.68, 0.08, 0.30]]
&gt;&gt;&gt; it = iter(sorted(chain.from_iterable(l)))
&gt;&gt;&gt; [[next(it) for _ in l2] for l2 in l]
[[0.08, 0.1, 0.15], [0.2, 0.3], [0.68, 0.8, 0.9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use <code>itertools</code> for this and confine the whole thing inside one function:</p>
<pre><code>import itertools


def join_sort_slice(iterable):
    it = iter(sorted(itertools.chain(*iterable)))
    output = []
    for i in map(len, iterable):
        output.append(list(itertools.islice(it, i)))
    return output
</code></pre>
<p>Use it:</p>
<pre><code>lst = [[0.10, 0.90, 0.20], [0.15, 0.80], [0.68, 0.08, 0.30]]
join_sort_slice(lst)
# [[0.08, 0.1, 0.15], [0.2, 0.3], [0.68, 0.8, 0.9]]
</code></pre>
<p>The idea is to <code>chain</code> all sublists together and then sort the outcome. This sorted output is then sliced based on the lengths of the original list of lists.</p>
<p>I hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Similar to @Evan's answer</p>
<pre><code>import itertools
import numpy as np

def pairwise(iterable):
    "s -&gt; (s0,s1), (s1,s2), (s2, s3), ..."
    a, b = itertools.tee(iterable)
    next(b, None)
    return zip(a, b)

list1=[[0.10, 0.90, 0.20], [0.15, 0.80], [0.68, 0.08, 0.30]]

# get the sizes of each of the sublists and where they start
sizes = [len(l) for l in list1]
sizes.insert(0,0)
offsets = np.cumsum(sizes)

# flatten and sort
flat_list = sorted(itertools.chain(*list1))

nested = [flat_list[begin:end] for begin, end in pairwise(offsets)]
print(nested)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another variation with <code>itertools</code>:</p>
<pre><code>import itertools

list1=[[0.10, 0.90, 0.20], [0.15, 0.80], [0.68, 0.08, 0.30]]
sorted_l = sorted(itertools.chain.from_iterable(list1))
result = []
k=0
for i in (len(i) for i in list1):
    result.append(sorted_l[k:k+i])
    k=k+i

print(result)
</code></pre>
<p>The output:</p>
<pre><code>[[0.08, 0.1, 0.15], [0.2, 0.3], [0.68, 0.8, 0.9]]
</code></pre>
</div>
<span class="comment-copy">What have you tried so far? Do you know about the <code>key</code> parameter to the <code>.sort</code> method and <code>sorted</code> functions?</span>
<span class="comment-copy">You join them, you sort them, and you split them.</span>
<span class="comment-copy">Also, are you <i>sure</i> that you want that output? That doesn't make very much sense at all.</span>
<span class="comment-copy">Hi, thanks for input. This is just part of a problem. I have made a loop that writes out random nested list like this (with random numbers). I want to write them to a file in increasing order</span>
<span class="comment-copy">all issues should be described in the question</span>
