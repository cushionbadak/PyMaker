<div class="post-text" itemprop="text">
<p>I am trying to use ftplib to count the number of lines in a file. This is what I have come up with so far. </p>
<pre><code>ftp = FTP('ftp2.xxx.yyy')
ftp.login(user='xxx', passwd='yyy')
count = 0
def countLines(s):
    nonlocal count
    count += 1
    x=str(s).split('\\r')
    count += len(x)

ftp.retrbinary('RETR file_name'], countLines)
</code></pre>
<p>But the line count is off by a few ( I get about 20 more ), How can I fix it / Is there a better simpler solution</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to use <a href="https://docs.python.org/3/library/ftplib.html#ftplib.FTP.retrlines" rel="nofollow noreferrer"><code>FTP.retrlines</code></a>, not <code>FTP.retrbinary</code>.</p>
<pre><code>count = 0
def countLines(s):
    global count
    count += 1

ftp.retrlines('RETR file_name', countLines)
</code></pre>
<hr/>
<p>For <code>FTP.retrbinary</code>:</p>
<blockquote>
<p>The <code>callback</code> function is called for each <strong>block of data</strong> received</p>
</blockquote>
<p>While for <code>FTP.retrlines</code>:</p>
<blockquote>
<p>The <code>callback</code> function is called for each <strong>line</strong> with a string argument containing the line with the trailing CRLF stripped.</p>
</blockquote>
<hr/>
<p>With <code>FTP.retrbinary</code> you get more, because if a block ends in a middle of a line, that line is counted twice.</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested, use <code>FTP.retrlines</code>, but if you must use <code>FTP.retrbinary</code>, you will need to count on <em>only</em> each "\n", and not with each callback as well.</p>
<pre><code>import ftplib

class FTPLineCounter(object):

    def __init__(self):
        self.count = 0

    def __call__(self, file_text):
        """Count the lines as the file is received"""
        self.count += file_text.count(b"\n")



ftp = ftplib.FTP("localhost")
ftp.login()

counter = FTPLineCounter()

ftp.retrbinary("RETR file_name", counter)

print(counter.count)
</code></pre>
</div>
<span class="comment-copy">If your countLines comes up short, then you could try splitting by '\n'</span>
<span class="comment-copy">Awesome, I cant believe I missed it.</span>
<span class="comment-copy">You need something like <code>self.count += file_text.count("\n")</code> - Though you will still miss the last line, if it is not terminated with CRLF.</span>
