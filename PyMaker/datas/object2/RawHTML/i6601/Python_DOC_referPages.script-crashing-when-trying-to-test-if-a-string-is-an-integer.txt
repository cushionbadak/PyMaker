<div class="post-text" itemprop="text">
<p>I'm making a python script for a twitch bot which basically acts as a slot machine. Disclaimer- I'm totally new to python, so please don't kill me.</p>
<p>At the start of the script, I have this code to check if the correct command was typed, check if the first argument is an integer, and check if the user has enough points. The idea is to let them choose an amount to gamble, so the cost line will be changed once i get it working.</p>
<pre><code>if data.IsChatMessage():
    if (data.GetParam(0).lower() == settings["command"]
                    and isinstance((int(data.GetParam(1).lower())), int)
                    and settings["costs"] &lt;= Parent.GetPoints(data.User)):
</code></pre>
<p>The input from the chat is always in a string form, even if it's only a number. I'm able to convert that to an int with int(), but if there's nothing or if there's something there other than numbers it crashes the script entirely. How can I keep the script from crashing and instead alert the user they need to input an integer? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You write:</p>
<pre><code>isinstance(
    (int(data.GetParam(1).lower())),
    int
)
</code></pre>
<p>There are two problems with this fragment:</p>
<ul>
<li>you call the <code>int(..)</code> constructor, and that <strong>can fail</strong> (error) if you provide it a non-integer (like <code>"foobar18"</code>); and</li>
<li>in case the constructor succeeds, then it is guaranteed that the outcome is an <code>int</code>, so the <strong>check is useless</strong>.</li>
</ul>
<p>So now the question is what to do. We can construct an advanced check to inspect if a string is indeed an integer, but the problem is that we have to cover multiple cases, and it is easy to forget one.</p>
<p>Python is a language with the idea: <strong>EAFP</strong>: <strong>E</strong>asier to <strong>A</strong>sk for <strong>F</strong>orgiveness than <strong>P</strong>ermission. It means that the philosophy of Python is to encourage trying something, and in exceptional cases, handle it, than first check if something is an integer.</p>
<p>So wen can write it as:</p>
<pre><code>if data.IsChatMessage():
    <b>try:</b>
        int(data.GetParam(1).lower())  # we try it
        <b>isint</b> = True  # it worked!
    <b>except ValueError:</b>
        # that did not worked out very well, did it?
        <b>isint</b> = False
    if (data.GetParam(0).lower() == settings["command"]
                    and <b>isint</b>
                    and settings["costs"] &lt;= Parent.GetPoints(data.User):
        pass</code></pre>
<p>You better always specify the error you expect to see (<code>ValueError</code>) since if for instance <code>data.GetParam(1)</code> raises another error, you do not per se want to handle it there: it does not mean that <code>data.GetParam(1).lower()</code> is not an integer, it means that <code>data.GetParam(1)</code> has made some (other) error.</p>
</div>
<div class="post-text" itemprop="text">
<p>The line <code>isinstance((int(data.GetParam(1).lower())), int)</code> will raise a ValueError exception if <code>data.GetParam(1)</code> is not an integer.</p>
<p>As user8153 suggested, wrap the conversion with try, except block:</p>
<pre><code>try:
    int(data.GetParam(1))
    print(data.GetParam(1) + 'is an integer')
except ValueError:
    print(data.GetParam(1) + 'is not an integer')
</code></pre>
<p>Alternatively, you may use <code>data.GetParam(1).isdigit()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>After doing a bit of research I think you can use a try/except block to make sure the value given by the user is actually a number.  </p>
<pre><code>try:
    i = int(string)
    # normal execution
except ValueError:
    # error msg
</code></pre>
<p>I got the answer here: 
<a href="https://stackoverflow.com/questions/8075877/converting-string-to-int-using-try-except-in-python">Converting String to Int using try/except in Python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To check if a string can be casted to an int, simply use:</p>
<pre><code>mystr = 'xx12'
if mystr.isnumeric():
    print('YES!')
else:
    print('NO')
</code></pre>
</div>
<span class="comment-copy">Can you explain in words why you think <code>isinstance((int(data.GetParam(1).lower())), int)</code> would work?</span>
<span class="comment-copy">What exactly do you mean by crash? Do you get an exception? What is it?</span>
<span class="comment-copy">Wrap the integer conversion code in a <code>try ... except</code> block, and catch the <code>ValueError</code> exception that occurs if the string does not represent a valid integer. See <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">Welcome to SO: you may want to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. As for your question, you may want to read on exception use in Python (e.g., www.pythonforbeginners.com/error-handling/exception-handling-in-python).</span>
<span class="comment-copy">That might not work well with Unicode. Documentation states that "Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH". <code>int(u"\u2155")</code> throws an exception.</span>
