<div class="post-text" itemprop="text">
<p>In <a href="https://docs.python.org/2/library/sys.html" rel="nofollow noreferrer">the latest Python 2 documentation</a>:</p>
<blockquote>
<p><strong>sys.maxsize</strong></p>
<p>The largest positive integer supported by the platform’s
  Py_ssize_t type, and thus the maximum size lists, strings, dicts, and
  many other containers can have.</p>
</blockquote>
<p>In <a href="https://docs.python.org/3/library/sys.html" rel="nofollow noreferrer">the latest Python 3 documentation</a>:</p>
<blockquote>
<p><strong>sys.maxsize</strong></p>
<p>An integer giving the maximum value a variable of type
  Py_ssize_t can take. It’s usually 2**31 - 1 on a 32-bit platform and
  2**63 - 1 on a 64-bit platform.</p>
</blockquote>
<p>The value <code>sys.maxsize</code> is <a href="https://github.com/xflux-gui/xflux-gui/blob/master/download-xflux.py" rel="nofollow noreferrer">in this file</a> used on Python 2 with the values specified in the Python 3 documentation:</p>
<ul>
<li>2**31 - 1 = 2147483647;</li>
<li>2**63 - 1 = 9223372036854775807.</li>
</ul>
<p>My question is: what are the possible values <code>sys.maxsize</code> can take in Python 2? Are these two part of the possible values or not? Are there any other possible values (on other platforms or operating systems, for example)? It would be interesting to find the possible values that it can take in Python 3 too.</p>
<p>Related questions:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/39716228/confused-about-pythons-sys-maxsize">Confused About Python's sys.maxsize</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<ul>
<li><code>sys.maxsize</code> is telling you something about the C compiler used to compile CPython, so there's no difference between Python 2 and Python 3.  It has to do with the C compiler and options that were used, not with the version of Python being compiled.</li>
<li>It's the largest positive integer that fits in the platform C compiler's <code>ssize_t</code> type.  Which is a 32-bit or 64-bit signed 2's-complement integer on all platforms I've ever seen ;-)  Which correspond exactly to the two specific values you already found.</li>
<li>It's called <code>type Py_ssize_t</code> in the docs because Python had to create its own typedefs (at the C level) for newer C concepts waiting for all the world's C compilers to implement them.  Those Python-specific typedefs typically stick around in the source code even after all known C compilers catch up ("not broke, don't fix").</li>
</ul>
</div>
<span class="comment-copy"><a href="https://github.com/python/cpython/blob/288d1daadaddf6ae35cf666138ba4b5d07449657/Include/pyport.h#L108-L111" rel="nofollow noreferrer">Here's where they're defined</a></span>
