<div class="post-text" itemprop="text">
<p>I was looking for a while now all over the Internet but I cant seem to find a unique way for Linux and Windows that allows to catch a arrow up, down etc. event.</p>
<p>With the <code>msvcrt</code> package on windows i found this solution:</p>
<pre><code>from msvcrt import getch

while True:
    print ('Distance from zero: ' + str(pos))
    key = ord(getch())
    if key == 224: #Special keys (arrows, f keys, ins, del, etc.)
        key = ord(getch())
        if key == 80: #Down arrow
</code></pre>
<p>For Linux I used the <code>termios</code> package:</p>
<pre><code>import sys,tty,termios
class _Getch:
    def __call__(self):
            fd = sys.stdin.fileno()
            old_settings = termios.tcgetattr(fd)
            try:
                tty.setraw(sys.stdin.fileno())
                ch = sys.stdin.read(3)
            finally:
                termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
            return ch

def get():
        inkey = _Getch()
        while(1):
                k=inkey()
                if k!='':break
        if k=='\x1b[A':
                print ("up")

def main():
        for i in range(0,20):
                get()

if __name__=='__main__':
        main()
</code></pre>
<p>I also found a Package that is supported by Linux and Windows: <code>keyboard</code></p>
<pre><code>import keyboard #Using module keyboard
while True:#making a loop
    try: #used try so that if user pressed other than the given key error will not be shown
        if keyboard.is_pressed(keyboard.KEY_DOWN):#if arrow down is pressed 
            print('You Pressed down Key!')
</code></pre>
<p>This seems to work great on Windows but not on Linux.</p>
<p>(I found all those implementations on Stack overflow.)</p>
<p>My goal is it to move my arrow up and down on different selections. Alternative methods to complete this task are welcome as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>I suppose your question is with respect to catching arrow key events solely on the <strong>terminal</strong> or the <strong>command prompt</strong>. If that is the case, then using getch() for windows and termios+tty in Linux is the way to go, as you mentioned.</p>
<p>Alternate Cross Platform Methods Include:</p>
<ol>
<li>On Linux the <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer">curses</a> module is recommended in general, and you can also find the unofficial binaries for this module for windows support <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses" rel="nofollow noreferrer">here</a>, or also by running:</li>
</ol>
<p><code>pip install http://www.lfd.uci.edu/~gohlke/pythonlibs/xugyqnq9/curses-2.2-cp27-none-win32.whl</code></p>
<ol start="2">
<li>The keyboard module mentioned in the question works on linux only with sudo permissions, as mentioned <a href="https://pypi.python.org/pypi/keyboard/" rel="nofollow noreferrer">here</a>. You could also try <a href="https://pypi.python.org/pypi/PyUserInput" rel="nofollow noreferrer">PyUserInput</a>, which seems to work on my Linux machine.</li>
</ol>
<p>In general though you are better off implementing your own solution in msvcrt/ttty+termios, or using a GUI Libraries like Pygame or Tkinter (If the application does not specifically require to run on a terminal), which provide facilities for catching keyboard events. </p>
</div>
