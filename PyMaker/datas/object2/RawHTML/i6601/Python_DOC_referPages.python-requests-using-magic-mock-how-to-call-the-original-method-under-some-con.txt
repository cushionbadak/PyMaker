<div class="post-text" itemprop="text">
<p>here the code to mock only a certain type of url</p>
<pre><code>def mocked_requests_patch(*args, **kwargs):
    url = args[0]
    if url.find('additional_address') != -1:
        return 'mocked response'

    return requests.patch(*args, **kwargs)

requests.patch = MagicMock(side_effect=mocked_requests_patch)
</code></pre>
<p>but of course I'm getting a <code>maximum recursion depth exceeded while calling a Python object</code></p>
<p>saw some questions like this but didn't find any using <code>MagicMock</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You may not find an explicit question for this since it is relatively simple to save your own reference to a mocked method before installing a mock and in typical use a <a href="https://docs.python.org/3/library/unittest.mock.html#patch-methods-start-and-stop" rel="nofollow noreferrer">patcher</a> is used to handle installing and un-installing the mock in a systematic manner via <code>start()</code> and <code>stop()</code>.</p>
<p>In this particular case since you're mocking <code>requests.patch</code> you may want to consider using the <a href="https://requests-mock.readthedocs.io/en/latest/mocker.html" rel="nofollow noreferrer">requests_mock</a> package as it provides a mechanism to allow some requests to be sent to the real http method.  In fact you can see by inspecting the source how its <code>start()</code> <a href="https://github.com/openstack/requests-mock/blob/master/requests_mock/mocker.py#L81" rel="nofollow noreferrer">saves a reference</a> to the send function which is <a href="https://github.com/openstack/requests-mock/blob/master/requests_mock/mocker.py#L122" rel="nofollow noreferrer">later restored</a> by <code>stop()</code></p>
</div>
<span class="comment-copy">why don't you first store <code>requests.patch</code> like <code>original_patch = requests.patch</code>?</span>
<span class="comment-copy">worked . @Sraw write it as an answer and i'll accept. thanks.</span>
