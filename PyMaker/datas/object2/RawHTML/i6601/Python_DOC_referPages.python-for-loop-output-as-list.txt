<div class="post-text" itemprop="text">
<p>I need to get some calculations for a range of elements at an array.</p>
<p>So, at my views.py my code is:</p>
<pre><code>(...)
for f in enumerate(array)
    calc1 = value_x
    calc2 = value y
(...)
</code></pre>
<p>and, when I print calc1, for example, my output returns </p>
<pre><code>1
1
1
1
1
0.98
1
1
1
1
1
1
</code></pre>
<p>and,  my output has to be like this</p>
<pre><code>['1', '1', '1', '1', '1', '0.98', '1', '1', '1', '1', '1', '1']
</code></pre>
<p>I've already tried to do something like</p>
<pre><code>testLi = []
for f in enumerate(array):
    testLi.append(str(TPR_class))
print 'testLI {}'.format(testLi)
</code></pre>
<p>but it gives me </p>
<pre><code>testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98', '0.98']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
testLI ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
</code></pre>
<p>Somebody could help me, please? </p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you need your values output as a list, I would recommend using a list comprehension rather than a for loop, if possible. It is faster and easier to read, and it should produce the results you want. For example, if the values you need printed are stored in <em>array</em>, I would use the following code:</p>
<p>[str(x) for x in array]</p>
<p>By using hard brackets around your code, each value is compiled into a list following evaluation as a string value.</p>
<p>Hope this proves helpful for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> returns tuples that contain indexes into the array along with their values (0,'item1') (1,'item2') etc. But given your interest in 'x', I'm going to assume that your input is actually a dictionary and you are interested in a list of keys ('key1','item1') ('key2','item2') etc.</p>
<p>If you're in Python3, use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=items#dict.items" rel="nofollow noreferrer">items()</a> on the dictionary to get an iterator over the sequence. And use a looping shortcut for key,value to immediately extract the key and a value for each item as the loop progresses.</p>
<p>Then using <a href="https://docs.python.org/3.5/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a> you can build the final list in one line:</p>
<pre><code>mydict = {'a':'b','c':'d','f':'g'}
print([str(x) for x,y in mydict.items()])
</code></pre>
<p>If you don't need the value parts and just the keys, you can simplify to</p>
<pre><code>print([str(key) for key in mydict])
</code></pre>
</div>
<span class="comment-copy">what's TPR_class?</span>
<span class="comment-copy">and what is your array? is it a list, dict?</span>
<span class="comment-copy">TPR_class is the name of my variable</span>
<span class="comment-copy">and my array a list of subcategories that i'm diving my csv column so that i can make filters to and obtain my calculations. I don't know if I'm being explicit</span>
<span class="comment-copy">I load a csv and filter the data as a result of a particular column. Then for each of these filters I have to count the different corresponding records and do some additional calculations. Since the array has always invariant size, I did the calculations through a for loop so that I could get the results dynamically</span>
