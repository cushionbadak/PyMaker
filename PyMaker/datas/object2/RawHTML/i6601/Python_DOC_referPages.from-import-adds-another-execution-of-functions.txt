<div class="post-text" itemprop="text">
<p>Created a python 'library' module which contains functions that I use a lot. Importing this module into a script which does a test using</p>
<pre><code>from 'library name' import *
</code></pre>
<p>However whenever I import the test script using</p>
<pre><code>from 'script name' import *
</code></pre>
<p>All the function calls in the test script execute twice.</p>
<p>I'm pretty sure this is an import issue, but I don't know enough about python to fix it.</p>
<p>Example:
Library.py</p>
<pre><code>doSomething()
    print "Library"
</code></pre>
<p>Test.py</p>
<pre><code>from Library import *
doSomething()
</code></pre>
<p>This will output:
  "Library"
  "Library"</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to add the following at the button of your module to eliminate running your module as a script</p>
<pre><code>if __name__ == '__main__':
    execution code here
</code></pre>
<p>This will tell Python what code to run <strong>when you are executing</strong> your module as a script. Otherwise, it will just load the module namespace</p>
<p><a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">Python's <strong>main</strong> docs</a></p>
<blockquote>
<p>'<strong>main</strong>' is the name of the scope in which top-level code executes. A moduleâ€™s <strong>name</strong> is set equal to '<strong>main</strong>' when read from standard input, a script, or from an interactive prompt.</p>
<p>A module can discover whether or not it is running in the main scope by checking its own <strong>name</strong>, which allows a common idiom for conditionally executing code in a module when it is run as a script or with python -m but not when it is imported.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It was an issue related to python's logging function. logger.getLogger(<strong>name</strong>)</p>
</div>
<span class="comment-copy">unreproducible - perhaps we're missing something.</span>
<span class="comment-copy">I want it to load the namespace. The problem is that it seems to be loading the namespace twice</span>
<span class="comment-copy">Thinking on it now I want to be able to from import the test so I can run it as part of test group</span>
<span class="comment-copy">So add <code>if __name__ == '__main__': pass</code> in your library module, and for the test script add the same statement but insert instructions instead of the <code>pass</code> statement</span>
<span class="comment-copy">I don't think that will help, cause all the modules that I don't want run as scripts only contain functions and 'constant' variable declarations</span>
<span class="comment-copy">Since you <code>from library import *</code> to your script modules, it is loaded to the script namespace and executed. Try my suggestion</span>
