<div class="post-text" itemprop="text">
<p>I'm creating a code that calculates some values for buying a house. It'll be asking the user for a lot of input and I want to make sure the program asks them for integers if they input non-integers.</p>
<p>I made a function that will check if an input is an integer or not, but the interpreter only returns a value error if I input a string. Is it possible to get it to run the string through the integer check function after it's inputted?</p>
<pre><code>var=True

print('Welcome to the interest calculator program.')

def integer_check(input):
    try:
        return True
    except ValueError:
        return False

while var==True:
    num=int(input('Enter the price of your dream house: \n'))
    if integer_check(num)==True:
        if num&gt;=0:
            print('yay')
        elif num&lt;=0:
            print('House price must be a positive number only. Please try again.')
    elif integer_check(num)==False:
        print("Sorry, that's not a number. Please try again.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Surround <code>try .. except ..</code> around <code>int(..)</code> call; Checking against the return value of the <code>int()</code> call has no meaning once the exception raised, because control flow will not reach there if the input string was not an integer string.</p>
<pre><code>try:
    num = int(input('Enter the price of your dream house: \n'))
except ValueError:
    # Non-integer
else:
    # Integer
</code></pre>
<p>Pass the string to the function, and the function should try to convert to int:</p>
<pre><code>print('Welcome to the interest calculator program.')

def integer_check(s):
    try:
        int(s)
        return True
    except ValueError:
        return False
    return True

while True:
    num = input('Enter the price of your dream house: \n')
    if integer_check(num):
        num = int(num)
        if num &gt;= 0:
            print('yay')
            break
        else:  # Use else
            print('House price must be a positive number only. Please try again.')
    else:  # No need to call integer_check(..) again
        print("Sorry, that's not a number. Please try again.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can type cast:</p>
<pre><code>def integer_check(i):
    try:
        int(i) # will successfully execute if of type integer
        return True
    except ValueError: # otherwise return False
        return False
</code></pre>
<p>Further, since you only have a pass/fail condition in your main program, change:</p>
<pre><code>if integer_check(num)==True:
    ...
elif integer_check(num)==False:
    ...
</code></pre>
<p>to:</p>
<pre><code>if integer_check(num):
    ...
else:
    ...
</code></pre>
</div>
<span class="comment-copy">Are you sure you included the right version of <code>integer_check</code>? This version looks like it should always return <code>True</code>.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Handling Exceptions</a></span>
