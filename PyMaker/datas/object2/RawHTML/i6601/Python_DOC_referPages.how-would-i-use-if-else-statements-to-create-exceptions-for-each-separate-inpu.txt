<div class="post-text" itemprop="text">
<pre><code>print("----------Paint Mmatching Pricer Program!----------")
everydaypaint = 19.99
selectpaint = 24.99
premiumpaint = 32.99
matchingprice = 4.99

quality = str(input("What quality of paint do you need [Everyday, Select, or Premium]?"))
colormatch = str(input("Will you need colormatching [y/n]?"))
if quality == 'everyday' or quality == 'Everyday':
    if colormatch == 'y' or colormatch == 'Y':
        total = everydaypaint + matchingprice
        print("Total price of %s paint with color matching is $%.2f per gallon" % (quality, total))
    elif colormatch == 'n' or colormatch =='N':
        total = everydaypaint
        print("Total price of %s paint with out color matching is $%.2f per gallon" % (quality, total))
elif quality == 'select' or quality == 'Select':
    if colormatch == 'y' or colormatch == 'Y':
        total = selectpaint + matchingprice
        print("Total price of %s paint with color matching is $%.2f per gallon" % (quality, total))
    elif colormatch == 'n' or colormatch =='N':
        total = selectpaint
        print("Total price of %s paint with out color matching is $%.2f per gallon" % (quality, total))
elif quality == 'premium' or quality == 'Premiumy':
    if colormatch == 'y' or colormatch == 'Y':
        total = premiumpaint + matchingprice
        print("Total price of %s paint with color matching is $%.2f per gallon" % (quality, total))
    elif colormatch == 'n' or colormatch =='N':
        total = premiumpaint
        print("Total price of %s paint with out color matching is $%.2f per gallon" % (quality, total))
</code></pre>
<p>I need to use else statements to create exceptions for both the quality and colormatch variables!  For example, each one needs to return an exception when an invalid input is entered by the user when prompted. Quality else statement should return " must enter everyday, select, or premium" and the colormatch variable should return "must enter y or n".</p>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps instead of using "else", consider using a "while" loop to keep asking the same question until they provide an expected answer. Here's an example for quality that you can extrapolate to also make one for colormatch. This will keep the user in the loop until they provide a correct answer:</p>
<pre><code>quality_question = "What quality of paint do you need [Everyday, Select, or Premium]?"

selected_quality = input(quality_question)

while selected_quality.lower() not in ['everyday', 'select', 'premium']:

        selected_quality = input(quality_question)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Pythons documentation</a> you can write programs that handle selected exceptions. For example:</p>
<pre><code>while True:
    try:
        inp = input('Enter value: ')
        if inp == 'fooBar': break

    except Exception as exp:
        print(exp) #shows Error
        print('Invalid input')
</code></pre>
<p>Typically, when you ask for user input, you want to nest it within a 
"while" loop and try/except statements. Just as Maksim noted, you want to provide the user input until they give the expected results. If the user doesn't enter the expected result, then the exception is thrown, thus letting the user know that is not what you enter to get to the end result of your script. </p>
</div>
<span class="comment-copy">Did they say that using "else" statements was required by your assignment? Can you use something else if you want?</span>
