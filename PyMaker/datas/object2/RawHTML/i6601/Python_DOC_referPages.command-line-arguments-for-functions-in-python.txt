<div class="post-text" itemprop="text">
<p>I have a python file which holds multiple functions. Each function will have its own parameters.</p>
<p>The first argument is the function to run. But I am unable to find how can i define arguments for my functions so that it will appear in <code>argsparse</code> help and also can validate.</p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description='Index related commands')
parser.add_argument('command', type=str)
arguments = parser.parse_args()

es = Es('myproject_elasticsearch')


def create(name):
    """

    :param name: Name of index
    :return: None
    """
    mapping = index_factory(name).get_mapping()
    es.create_index(name, mapping)


def index_factory(name):
    try:
        if name == 'catalog':
            index = Catalog()
            return index
        else:
            raise ValueError('Cannot find mapping for %s' % name)
    except ValueError as e:
        print (e)
        traceback.print_exc()
        exit(1)
</code></pre>
<p>Here the first postional argument will be the name of the command, in this case <code>create</code>. </p>
<p>What i want is the user can pass additional arguments which will be different on different functions.</p>
<p>example: 
<code>$ python app.py create --catalog</code> so this <code>catalog</code> will come as a argument to <code>create</code> function and can be viewed in the <code>help</code> also</p>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>Try OptionParser:</p>
<pre><code>from optparse import OptionParser

def create(name):
    ...

def index_factory(name):
    ...


if __name__ == "__main__":

    usage = "usage: %prog [options] arg1"
    parser = OptionParser(usage=usage)

    parser.add_option("-i", "--index", dest="index",
                          help="the index to create")
    parser.add_option("-c", "--catalog", dest="catalog",
                          help="catalog name", default="my_catalog")

    (options, args) = parser.parse_args()

    if args[0] == 'create':
        create(options.index)
    elif args[0] == 'index_factory':
        index_factory(options.index)
</code></pre>
<p>Add as many options as you want. You can then call it like this</p>
<pre><code>python app.py create -i my_index
</code></pre>
<p>or use help to see your options</p>
<pre><code>python app.py -h
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="http://click.pocoo.org/5/" rel="nofollow noreferrer"><code>click</code></a>.</span>
<span class="comment-copy">You have to use <a href="https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_subparsers" rel="nofollow noreferrer">subparsers</a>.</span>
