<div class="post-text" itemprop="text">
<p>I have a XML file that previously I commented some elements, and now I want to uncomment them..</p>
<p>I have this structure</p>
<pre><code>&lt;parent parId="22" attr="Alpha"&gt;
 &lt;!--&lt;reg regId="1"&gt;
  &lt;cont&gt;There is some content&lt;/cont&gt;&lt;cont2 attr1="val"&gt;Another content&lt;/cont2&gt;
 &lt;/reg&gt;
--&gt;&lt;/parent&gt;
&lt;parent parId="23" attr="Alpha"&gt;
 &lt;reg regId="1"&gt;
  &lt;cont&gt;There is more content&lt;/cont&gt;&lt;cont2 attr1="noval"&gt;Morecont&lt;/cont2&gt;
 &lt;/reg&gt;
&lt;/parent&gt;
&lt;parent parId="24" attr="Alpha"&gt;
 &lt;!--&lt;reg regId="1"&gt;
  &lt;cont&gt;There is some content&lt;/cont&gt;&lt;cont2 attr1="val"&gt;Another content&lt;/cont2&gt;
 &lt;/reg&gt;
--&gt;&lt;/parent&gt;
</code></pre>
<p>I would like to uncomment all the comments of the file. That consequentially, also are the commented  element and I would to uncomment them.</p>
<p>I am able to find the elements that are comment using xpath. Here is my snippet of code.</p>
<pre><code>def unhide_element():
    path = r'path_to_file\file.xml'
    xml_parser = et.parse(path)
    comments = root.xpath('//comment')
    for c in comments:
       print('Comment: ', c)
       parent_comment = c.getparent()
       parent_comment.replace(c,'')
       tree = et.ElementTree(root)
       tree.write(new_file)
</code></pre>
<p>However, the replace is not working as it expects another element.</p>
<p>How can I fix this? </p>
</div>
<div class="post-text" itemprop="text">
<p>Your code is missing a crucial bit of creating the new XML element from comment text. There are a few other bugs related to the incorrect XPath query, and to saving the output file multiple times inside the loop.</p>
<p>Also, it appears that you are mixing <code>xml.etree</code> with <code>lxml.etree</code>. As per <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">documentation</a>, the former ignores comments when the XML file is parsed, so the best way to go is to use <a href="http://lxml.de" rel="nofollow noreferrer"><code>lxml</code></a>.</p>
<p>After fixing all of the above we get something like this. </p>
<pre><code>import lxml.etree as ET


def unhide_element():
    path = r'test.xml'
    root = ET.parse(path)
    comments = root.xpath('//comment()')
    for c in comments:
        print('Comment: ', c)
        parent_comment = c.getparent()
        parent_comment.remove(c)  # skip this if you want to retain the comment
        new_elem = ET.XML(c.text)  # this bit creates the new element from comment text
        parent_comment.addnext(new_elem)

    root.write(r'new_file.xml')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well, since you want to uncomment everything, all you really need to do is remove each "&lt; !--" and "--&gt;":</p>
<pre><code>import re

new_xml = ''.join(re.split('&lt;!--|--&gt;', xml))
</code></pre>
<p>Or:</p>
<pre><code>new_xml = xml.replace('&lt;!--', '').replace('--&gt;', '')
</code></pre>
</div>
<span class="comment-copy">Great, this worked. However, I don't know why my lxml version does not work without using the getroot() first. I cannot work directly in the ElementTree with parse.</span>
