<div class="post-text" itemprop="text">
<p>Hello i'm trying to simply copy a directory to another directory on the same windows machine. This code runs without any errors but I got to the directory and it never copied it. Here is my code. Any ideas?</p>
<pre><code>import File
from distutils.dir_util import copy_tree


if __name__ == "__main__":

    sourceFolder = File.File
    targetFolder = File.File

    sourceFolder.filePath = 'C:\\Workspace\\PythonAutomation\\1-DEV\\PythonAutomation'
    targetFolder.filePath = 'C:\\Workspace\\PythonAutomation\\2-QA'


    copy_tree(sourceFolder.filePath, targetFolder.filePath)
</code></pre>
<p><strong>Edit:</strong>
 note that the content in the dir is python scripts and a Visual studio Solution. Could that be the issue? Is there only certain file types that the copy_tree can copy?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's basically what's going on. Because you gave a single, mutable object (I'm guessing it's a class definition, but it doesn't have to be) multiple names, changing it via one name changes it via all names.</p>
<pre><code>class File:
    class File:
        pass

spam = File.File
eggs = File.File

# spam and eggs refer to the *exact same thing*
assert spam is eggs

# we can lazily create a "cheese" attribute inside it
spam.cheese = 'leicester'
# but because spam and eggs are identical, this overwrites it
eggs.cheese = 'stilton'

assert spam.cheese == eggs.cheese
assert spam.cheese is eggs.cheese
</code></pre>
<p>This is functionally identical to the simple case:</p>
<pre><code>spam = {'a': 1}
eggs = spam
eggs['a'] = 2
assert spam['a'] != 2 # fails
</code></pre>
</div>
<span class="comment-copy">...what the heck are you doing with that <code>File.File</code> stuff? Why are you not just doing <code>copy_tree('C:\\Workspace\\PythonAutomation\\1-DEV\\PythonAutomation', 'C:\\Workspace\\PythonAutomation\\2-QA')</code>?</span>
<span class="comment-copy">What is <code>File.File</code>? You're probably overwriting <code>File.File.filePath</code>, so <code>sourceFolder.filePath</code> and <code>targetFolder.filePath</code> are identical. Don't be clever. Just use strings.</span>
<span class="comment-copy">its an object I created for other projects. It doesn't make sense in this example but it does in other parts. Sorry for the confusion</span>
<span class="comment-copy">And why are you pulling this function out of <code>distutils.dir_util</code>? Are you sure you don't want <a href="https://docs.python.org/3/library/shutil.html#shutil.copytree" rel="nofollow noreferrer"><code>shutil.copytree</code></a>?</span>
<span class="comment-copy"><code>distutils</code> is a tool for distributing Python modules. You don't seem to be doing that, and direct use of <code>distutils</code> is no longer recommended even for its designed use case. <code>shutil</code> is a collection of general-purpose operations on files and collections of files, and <code>shutil.copytree</code> is the usual tool for a recursive directory copy in Python.</span>
<span class="comment-copy">you are the bomb. Sorry if I look like a noob, I completely spaced that logic error. Creating the objects correctly ex: File.File(attributes and stuff) fixed the error also switching to shutil.copytree. thanks everyone!</span>
