<div class="post-text" itemprop="text">
<p>I have a python script at /home/pi/update_rrd_data.py that's supposed to store logs in the folder /home/pi/logs_rrd.</p>
<p>This is how I've implemented it:</p>
<pre><code>current_folder = os.path.dirname(os.path.abspath(inspect.stack()[0][1]))
log_folder = os.path.join(current_folder, 'logs_rrd')
if not os.path.exists(log_folder): os.makedirs(log_folder)

file_name = __file__[:-3]  + '_' + datetime.strftime(datetime.now(), '%Y%m%d%H%M') + '.log'
log_file = os.path.join(log_folder, file_name)

logging.basicConfig(filename=log_file, level=logging.DEBUG, format='%(asctime)s:%(levelname)s:%(filename)s-&gt;%(funcName)s:%(message)s', datefmt='%m/%d/%Y_%I:%M:%S_%p')
logging.info('\nCurrent Folder: {}\nLog Folder: {}\nLog File: {}'.format(current_folder, log_folder, log_file))
</code></pre>
<p>When I run the script manually, it works fine and this is what I get in the log file at /home/pi/logs_rrd/update_rrd_data_201709271426.log:<br/>
Current Folder: /home/pi<br/>
Log Folder:     /home/pi/logs_rrd<br/>
Log File:       /home/pi/logs_rrd/update_rrd_data_201709271426.log</p>
<p>However, when I run it as a cron job, the log files are created in the same folder as the script instead of the logs_rrd folder. This is what I get in the log file at /home/pi/update_rrd_data_201709271445.log:<br/>
Current Folder: /home/pi<br/>
Log Folder:     /home/pi/logs_rrd<br/>
Log File:       /home/pi/update_rrd_data_201709271445.log  </p>
<p>I can't figure out why the log folder value is ok but then the log file removes the logs_rrd part of log folder.</p>
<p>This is how I run the cron:</p>
<pre><code>*/5 * * * * /usr/bin/python /home/pi/update_rrd_data.py
</code></pre>
<p>All the folders and files are owned by root so there shouldn't be any write permission issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>in the case where it doesn't work, <code>__file__</code> is probably an absolute path, so </p>
<pre><code>log_file = os.path.join(log_folder, file_name)
</code></pre>
<p>has no effect, (it retuns <code>file_name</code>) and the original script directory is kept.</p>
<p>Instead of <code>__file__[:-3]</code>, just do:</p>
<pre><code>os.path.basename(os.path.splitext(__file__)[0])
</code></pre>
<p>to get rid of the extension (which may not be <code>.py</code> in some cases BTW) <em>and</em> of the script file path in all cases, so the next <code>os.path.join</code> command works properly.</p>
<p>Alternate solution using <code>pathlib</code> and a <code>Path</code> object (requires Python 3):</p>
<pre><code>pathlib.Path(__file__).with_suffix('').name
</code></pre>
<p>that removes the directory &amp; the file extension amounting to the same result.</p>
</div>
<span class="comment-copy">Did you try to use <code>__file__</code> instead <code>inspect.stack()[0][1]</code>?</span>
<span class="comment-copy">@AndMar Yes I did but then the Current Folder becomes /root. Also, the values of current folder and log folder are correct either way. It's when I try to combine the file name to the log folder that it acts weird and removes the "logs_rrd" part.</span>
<span class="comment-copy">I've become partial to <code>pathlib.Path</code>, so <code>p = pathlib.Path(__file__)</code> then simply <code>p.with_suffix('').name</code> <i>So</i> much more readable than <code>os.path.blahblahblah(os.path.bloop(path)[0])</code></span>
<span class="comment-copy">I always used <code>os.path</code>, but okay.</span>
<span class="comment-copy">Same, it wasn't until recently that I started, but it has lots of wonderful features. Instead of <code>os.join</code>, <i>it overloads the <code>/</code> operator</i>  (as well as making it available as a method)!!! Well worth checking out: <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">docs.python.org/3/library/pathlib.html</a></span>
<span class="comment-copy">had a quick look and it's really good. thanks for pointing this out. The <code>/</code> operator is a nice addition.</span>
<span class="comment-copy">pathlib sounds cool but I should have mentioned I'm using python 2.7 so I can't use that..</span>
