<div class="post-text" itemprop="text">
<p>Couldn't find any question related to this issue. I'm probably doing it the wrong way because I'm sure there must be an easier way to achieve this, but I couldn't figure it out yet.</p>
<p>--&gt; I'm trying to get a Python object from Jinja2 back to Python, so I can access its values back in Python.</p>
<p>So I'm passing an array of users from Python(Flask) to a drop-down in HTML which looks like this:</p>
<pre><code>&lt;div class="form-group"&gt;
    &lt;label&gt;User:&lt;/label&gt;
    &lt;select class="form-control" name="user"&gt;
        {% for user in users %}
            &lt;option value="{{ user }}"&gt;{{ user.firstname }} {{ user.lastname }} 
            ({{ user.birthdate }})&lt;/option&gt;
        {% endfor %}
    &lt;/select&gt;
&lt;/div&gt;
</code></pre>
<p>This works perfectly and I can select a user in the dropdown. Now I want to access the users user.address attributes back in Python. (of course these attributes are already defined in the user class).</p>
<p>So I have a function like this in Python (Flask) which gets triggered when pressing a button:</p>
<pre><code>@app.route("/display_user", methods=["POST"])
def display_user():

    user = request.form["user"] 
    address = user.address
    return render_template("show.html", address=address)
</code></pre>
<p>Now I'm getting the following error:</p>
<blockquote>
<p>"AttributeError: 'str' object has no attribute 'address'".</p>
</blockquote>
<p>I'm getting back the json as a string which looks like this:</p>
<pre><code>{'firstname': 'test','lastname': 'test','birthday': 'test','address': 'test'}
</code></pre>
<p>I should now probably create a dict out of this string/json and then access these values with ['address'], but somehow I couldn't figure out how. I tried it with json.dumps() which did not work, still the same error message. Also I figured there must be an easier/better way to achieve this. </p>
<p>Any suggestions? (using Python 3.6.2)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you get back json as a string you can use json.loads.</p>
<pre><code>import json
values = json.loads('{"firstname": "test","lastname": "test","birthday": "test","address": "test"}')
print(values["firstname"])
</code></pre>
<p>This will output test. Please note that the string you posted is not Json. JSON strings must use double quotes.</p>
</div>
<div class="post-text" itemprop="text">
<p>ok, so I ended up with this solution:</p>
<p>I only returned the ._id and not the whole instance of the user as follows:</p>
<p><strong>Jinja2/HTML:</strong></p>
<pre><code>&lt;option value="{{ user._id }}"&gt;{{ user.firstname }} {{ user.lastname}} ({{ user.birthdate }})&lt;/option&gt;
</code></pre>
<p>Then I just did a new query for the user in my database (I'm using MongoDB) using  its _id.</p>
<p><strong>Python 3.6:</strong></p>
<pre><code>user_id = request.form["user"]
user = User.get_by_id(user_id)
</code></pre>
<p>And then I could access it's attributes with <code>user.address</code> and so on. Works fine, but I'm not quite happy with the solution since I need to query the database again.</p>
<p>So if anyone has a different approach, I'm glad to hear it :-)</p>
</div>
<span class="comment-copy">that's not json by the way, that's a python <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr</code></a></span>
<span class="comment-copy">okay, I see now. thanks! is there a way to go from a repr back to an instance of that class? or make Jinja2 return the instace/json of the user?</span>
<span class="comment-copy">okay, that explains why it doesn't work. looks like I'm not getting back a json but the repr of the object. i could replace all ' with " but that doesn't seem like the best solution..</span>
<span class="comment-copy">This is probably the best situation, otherwise someone could just forge the object clientside.</span>
<span class="comment-copy">ok thanks for your input :) I will stick with this solution for now.</span>
