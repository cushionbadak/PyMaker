<div class="post-text" itemprop="text">
<p>I would like to know if there is an easy way to create 'custom' types in Python.</p>
<p>I created a function that takes a parameter which is currently a MAC address. I would like to change it so it would be either an IP address or a MAC address then check the 'type' inside the function for further processing.</p>
<p>In order to do so I can check with regexes but I wonder if I could define two types, ip_add and mac_add, and check my parameter's type before processing it.</p>
<p>I read something about defining new types <a href="https://docs.python.org/3/extending/newtypes.html" rel="nofollow noreferrer">here</a> but it's not straightforward at all. Maybe there's a particular package existing ?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/extending/newtypes.html" rel="nofollow noreferrer">The doc you link to in your question</a> is for creating new types in C in the CPython runtime (the "interpreter") for C-coded extensions. Python has a much more straightforward way to create new types in Python module: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">classes</a>.</p>
<p>Defining a new class is as simple as:</p>
<pre><code>class Person(object):
    def __init__(self, firstname, lastname, dob):
        self.firstname = firstname
        self.lastname = lastname
        self.dob = dob
    def say_hello(self):
       return "Hello, my name is {self.firstname} {self.lastname} and I was born on {self.dob}".format(self=self)

p = Person("bruno", "desthuilliers", "May 1st, 1967")
p.say_hello()
</code></pre>
<p>This being said, as AK47 rightly mentions, <a href="http://netaddr.readthedocs.io/en/latest/introduction.html" rel="nofollow noreferrer">the netaddr package</a> seems to already provide the features you're looking for. </p>
</div>
<span class="comment-copy">Why not simply construct two classes <code>IPAdd</code> and <code>MACAdd</code> and let these classes validate the content?</span>
<span class="comment-copy">Have a look at <a href="http://netaddr.readthedocs.io/en/latest/introduction.html" rel="nofollow noreferrer">this</a> module - why reinvent the wheel?</span>
<span class="comment-copy">Not sure why you're talking about types here, classes are what you want.</span>
<span class="comment-copy">I think the OP referenced to the wrong chapter. That chapter is to construct new types at <i>interpreter</i> level.</span>
<span class="comment-copy">Just use class for your own type</span>
