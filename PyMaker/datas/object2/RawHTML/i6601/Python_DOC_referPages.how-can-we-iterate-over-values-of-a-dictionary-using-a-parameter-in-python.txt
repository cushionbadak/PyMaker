<div class="post-text" itemprop="text">
<p>I have <strong>dictionary</strong> tuple as follows(for <strong>value</strong>, I have many parameters defined)</p>
<pre><code> [('keyA', {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 04:52:48.357235', 'date_accessed': '2017-09-27 04:52:48.357242'})]
</code></pre>
<p>When I pick a value from the dictionary (I have number of Tuples) I do not know the key. I want to pick an item, Using  the <code>"**state**"</code> parameter defined in <code>**Value**</code> field.</p>
<p>For example, I want to pick one item which contains <code>**state**</code> as <code>'**unprocessed**'</code>, 
After picking that item, I'll update that <code>**state**</code> parameter.( eg: unprocessed --&gt; processed)
How can I do this in Python?</p>
<p>p.s: I want to first iterate the dictionary(please note i'm talking about python Dictionary data structure) for the tuples which contains a "state" parameter.</p>
<p>My Sample dictionary:</p>
<pre><code>self.cacheDictionary = {}
print self.cacheDictionary.items(); print

[('key4', {'site': 'Site4', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451829', 'date_accessed': '2017-09-27 05:58:08.451832'}), ('key3', {'site': 'Site3', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451522', 'date_accessed': '2017-09-27 05:58:08.451527'}), ('key2', {'site': 'Site2', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451294', 'date_accessed': '2017-09-27 05:58:08.451297'}), ('key1', {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451139', 'date_accessed': '2017-09-27 05:58:08.451145'})]

print self.cacheDictionary  
</code></pre>
<p>gives the output:</p>
<pre><code>{'key4': {'site': 'Site4', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 06:09:33.485721', 'date_accessed': '2017-09-27 06:09:33.485724'}, 'key3': {'site': 'Site3', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 06:09:33.485425', 'date_accessed': '2017-09-27 06:09:33.485427'}, 'key2': {'site': 'Site2', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 06:09:33.485260', 'date_accessed': '2017-09-27 06:09:33.485264'}, 'key1': {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 06:09:33.485124', 'date_accessed': '2017-09-27 06:09:33.485131'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @puspendra suggested the solution, that is efficient indeed i was also going to suggest same solution, you can also try this solution if you want :</p>
<pre><code>data=[('keyA', {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 04:52:48.357235', 'date_accessed': '2017-09-27 04:52:48.357242'})]

retrive=data[0][1]

for i in retrive.keys():
    if retrive[i]=="unprocessed":
        retrive[i] = "processed"


print(retrive)
</code></pre>
<blockquote>
<p>Update</p>
</blockquote>
<p>after you pasted new list with update , here is my code for your new list :</p>
<pre><code>data=[('key4', {'site': 'Site4', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451829', 'date_accessed': '2017-09-27 05:58:08.451832'}), ('key3', {'site': 'Site3', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451522', 'date_accessed': '2017-09-27 05:58:08.451527'}), ('key2', {'site': 'Site2', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451294', 'date_accessed': '2017-09-27 05:58:08.451297'}), ('key1', {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 05:58:08.451139', 'date_accessed': '2017-09-27 05:58:08.451145'})]

for tuple_a in data:
    for dic_a in tuple_a:
        if isinstance(dic_a,dict):
            for keys in dic_a.keys():
                if dic_a[keys]=='unprocessed':
                    dic_a[keys]="processed"



            print(dic_a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this</p>
<pre><code>a=[('keyA', {'site': 'Site1', 'machine': 'null', 'state': 'unprocessed', 'date_populated': '2017-09-27 04:52:48.357235', 'date_accessed': '2017-09-27 04:52:48.357242'})]
</code></pre>
<p>first, extract the dictionary from the list which contains tuple</p>
<pre><code>data_dict=a[0][1]

print data_dict

for key,value in data_dict.items():
    if key=='state' and value=='unprocessed':
        data_dict[key]='processed' # changing the state


print data_dict
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I have many Tuples in my dictionary, some tuples contains 'state': 'unprocessed' and some contain 'state': 'processed' . I want to iterate that dictionary using state parameter and pick the very first tuple which contains 'state' as 'unprocessed' </p>
</blockquote>
<p>Edit, based on your comment, if you only need to change the first dict, then use <a href="https://docs.python.org/3.6/library/functions.html#next" rel="nofollow noreferrer">next</a> to get the first item:</p>
<p><strong>Use operator</strong></p>
<pre><code>import operator

list_of_items = [('keyA',
  {'date_accessed': '2017-09-27 04:52:48.357242',
   'date_populated': '2017-09-27 04:52:48.357235',
   'machine': 'null',
   'site': 'Site1',
   'state': 'unprocessed'})]

# get first item in list that has the `state` == `unprocessed`
# raises StopIteration if item is not found, use a default value if you don't want this.

first_item = next(
    i for i in map(operator.itemgetter(1), list_of_items)
    if i.get('state') == 'unprocessed'
)

first_item['state'] = 'processed'
</code></pre>
<p><strong>That should just change the first item that matches:</strong></p>
<pre><code>print(list_of_items)

[('keyA',
  {'date_accessed': '2017-09-27 04:52:48.357242',
   'date_populated': '2017-09-27 04:52:48.357235',
   'machine': 'null',
   'site': 'Site1',
   'state': 'processed'})]
</code></pre>
<p><strong>If you want to change all the items in the list:</strong></p>
<pre><code>for items in map(operator.itemgetter(1), list_of_items):
    item = items.get('state')
    if item == 'unprocessed':
        items['state'] = 'processed'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the given expression is assigned to variable a then 'state' would be updated as follows: </p>
<pre><code>a[0][1].update({'state': 'processed'})
</code></pre>
<p>Updated code after getting your full response.</p>
<pre><code>for key, value in a.items(): 
    if value.has_key('state') and value['state'] == 'unprocessed': 
        temp = {key: value} 
        break
</code></pre>
</div>
<span class="comment-copy">Why do you not know the key? Unpack the tuple as you iterate through the list, that will give you the "key" and the dictionary. Then you just access the dictionary key/value pairs as normal.</span>
<span class="comment-copy">so you have a list of tuples, with each tuple having two items and the second item is a dictionary?</span>
<span class="comment-copy">@salparadise 	 I have many Tuples in my dictionary, some tuples contains 'state': 'unprocessed' and some contain 'state': 'processed' . I want to iterate that dictionary using state parameter and pick the very first tuple which contains 'state' as 'unprocessed'</span>
<span class="comment-copy">this is not <code>dictionary</code>, we know never a dict use an <code>index</code> , mean tree methods don't use indexes. Fast-call only work <code>where put data with an key</code>, <b>no key ? Happy searching !</b></span>
<span class="comment-copy">That is not a dictionary, that is a list of tuples with two items, one string and a dictonary, if this is really the data you are working with, then my answer should work for you.</span>
<span class="comment-copy">I want to first iterate the dictionary for the tuples which contains a "state" parameter.All answers here talking about single tuple. Im talking about dictionary</span>
<span class="comment-copy">There is no tuple <code>in</code> the dictionary , there is dictionary in the tuple , please check.</span>
<span class="comment-copy">Thanks that is what I wanted.</span>
<span class="comment-copy">I have many Tuples in my dictionary, some tuples contains 'state': 'unprocessed' and some contain 'state': 'processed' . I want to iterate that dictionary using state parameter and pick the very first tuple which contains 'state' as 'unprocessed'</span>
<span class="comment-copy">I want to first iterate the dictionary for the tuples which contains a "state" parameter.All answers here talking about single tuple. Im talking about dictionary</span>
<span class="comment-copy">@Ratha because you posted a list, fix your question with the proper structure you are working with.</span>
<span class="comment-copy">I have edited my question .please check</span>
<span class="comment-copy">@Ratha I answered it, it still not a dictionary. <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">Python data structures</a></span>
<span class="comment-copy">I have many Tuples in my dictionary, some tuples contains 'state': 'unprocessed' and some contain 'state': 'processed' . I want to iterate that dictionary using state parameter and pick the very first tuple which contains 'state' as 'unprocessed'</span>
<span class="comment-copy">Share the proper response.</span>
