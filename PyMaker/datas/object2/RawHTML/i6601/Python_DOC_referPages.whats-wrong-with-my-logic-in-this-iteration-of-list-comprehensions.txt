<div class="post-text" itemprop="text">
<p>I was expecting <code>['jelly%s'% x*x for x in range(1,11)]</code> would give me a list of jellyx*x, but it returned the following value.</p>
<pre><code>['jelly1', 'jelly2jelly2', 'jelly3jelly3jelly3', 'jelly4jelly4jelly4jelly4', 'jelly5jelly5jelly5jelly5jelly5', 'jelly6jelly6jelly6jelly6jelly6jelly6', 'jelly7jelly7jelly7jelly7jelly7jelly7jelly7', 'jelly8jelly8jelly8jelly8jelly8jelly8jelly8jelly8', 'jelly9jelly9jelly9jelly9jelly9jelly9jelly9jelly9jelly9', 'jelly10jelly10jelly10jelly10jelly10jelly10jelly10jelly10jelly10jelly10']
</code></pre>
<p>What's wrong with the code?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is in the expression:</p>
<pre><code>'jelly%s'% x*x
</code></pre>
<p>This is equivalent to:</p>
<pre><code>('jelly%s'%x)*x
</code></pre>
<p>Because the <code>%</code> and <code>*</code> operators have the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">same precedence</a>.</p>
<p>Precedence just means which operators get evaluated first in an expression. Operators with higher precedence "bind" before operators with lower precedence, operators with equal precedence get evaluated left-to-right. This is similar to mathematics, so:</p>
<pre><code>&gt;&gt;&gt; 1 + 10 * 10 # * has higher precedence
101
&gt;&gt;&gt; (1 + 10) * 10 # we can force + to happen first
110
</code></pre>
<p>Note, the arithmetic operators have the precedence that is typical for arithmetic operators from mathematics.</p>
<p>And finally, you might not know, but with sequence-types (which includes <code>str</code>, <code>list</code>, <code>tuple</code>, the <code>*</code> operator causes a "repitition operation", so:</p>
<pre><code>&gt;&gt;&gt; 'juan'*1
'juan'
&gt;&gt;&gt; 'juan'*2
'juanjuan'
&gt;&gt;&gt; 'juan'*3
'juanjuanjuan'
</code></pre>
<p>So, to get what you want, try:</p>
<pre><code>['jelly%s'% (x*x) for x in range(1,11)]
</code></pre>
<p>Alternatively, you could use the <code>.format</code> method on strings:</p>
<pre><code>&gt;&gt;&gt; ['jelly{}'.format(x*x) for x in range(1,11)]
['jelly1', 'jelly4', 'jelly9', 'jelly16', 'jelly25', 'jelly36', 'jelly49', 'jelly64', 'jelly81', 'jelly100']
</code></pre>
<p>Or better even, use f-strings in Python 3.6:</p>
<pre><code>&gt;&gt;&gt; [f'jelly{x*x}' for x in range(1,11)]
['jelly1', 'jelly4', 'jelly9', 'jelly16', 'jelly25', 'jelly36', 'jelly49', 'jelly64', 'jelly81', 'jelly100']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do :</p>
<pre><code>['jelly%s' % num for num in [x*x for x in range(1,11)]]
</code></pre>
<p>Will give :</p>
<pre><code>OUT : ['jelly1', 'jelly4', 'jelly9', 'jelly16', 'jelly25', 'jelly36', 'jelly49', 'jelly64', 'jelly81', 'jelly100']
</code></pre>
<p>Here, the <code>[x*x for x in range(1,11)]]</code> will give <code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code> which you then use in your string.</p>
<p>For more explanation on the behaviour of the OP's code (due to <code>precedence</code> of operators <code>*</code> and <code>%</code>) , have a look at <a href="https://stackoverflow.com/a/46509568/7550472">Juanpa's answer</a>.</p>
</div>
<span class="comment-copy">hey that's true! but still i don't understand what do you mean by 'have the same precedence'. i understand the logic order went wrong in my expression but why it resulted like that? thx a lot!</span>
<span class="comment-copy">@XYlaven ah yes, I'll add further explanation</span>
<span class="comment-copy">@XYlaven i've added more details</span>
<span class="comment-copy">thx dude, that helps a lot ;)</span>
<span class="comment-copy">thx a lot, but could you plz explain why my code works like that?</span>
<span class="comment-copy">That is as <a href="https://stackoverflow.com/a/46509568/7550472">Juanpa</a> explained. Due to <code>precedence</code></span>
<span class="comment-copy">ok i'll check this concept, thx ;)</span>
<span class="comment-copy">Sure, glad to help.</span>
