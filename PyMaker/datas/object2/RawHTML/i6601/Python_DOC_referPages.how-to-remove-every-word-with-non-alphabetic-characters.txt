<div class="post-text" itemprop="text">
<p>I need to write a python script that removes every word in a text file with non alphabetical characters, in order to test Zipf's law.
For example:</p>
<pre><code>asdf@gmail.com said: I've taken 2 reports to the boss
</code></pre>
<p>to</p>
<pre><code>taken reports to the boss
</code></pre>
<p>How should I proceed?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using regular expressions to match only letters (and underscores), you can do this:</p>
<pre><code>import re

s = "asdf@gmail.com said: I've taken 2 reports to the boss"
# s = open('text.txt').read()

tokens = s.strip().split()
clean_tokens = [t for t in tokens if re.match(r'[^\W\d]*$', t)]
# ['taken', 'reports', 'to', 'the', 'boss']
clean_s = ' '.join(clean_tokens)
# 'taken reports to the boss'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://ttps://docs.python.org/3/library/string.html#string.split" rel="nofollow noreferrer"><strong>split()</strong></a> and is <strong><a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer">isalpha()</a></strong> to get a list of words who only have alphabetic characters AND there is at least one character.</p>
<pre><code>&gt;&gt;&gt; sentence = "asdf@gmail.com said: I've taken 2 reports to the boss"
&gt;&gt;&gt; alpha_words = [word for word in sentence.split() if word.isalpha()]
&gt;&gt;&gt; print(alpha_words)
['taken', 'reports', 'to', 'the', 'boss']
</code></pre>
<p>You can then use <a href="https://docs.python.org/3/library/string.html#string.join" rel="nofollow noreferrer"><strong>join()</strong></a> to make the list into one string:</p>
<pre><code>&gt;&gt;&gt; alpha_only_string = " ".join(alpha_words)
&gt;&gt;&gt; print(alpha_only_string)
taken reports to the boss
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>sentence = "asdf@gmail.com said: I've taken 2 reports to the boss"
words = [word for word in sentence.split() if word.isalpha()]
# ['taken', 'reports', 'to', 'the', 'boss']

result = ' '.join(words)
# taken reports to the boss
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>nltk</code> package is specialised in handling text and has various functions you can use to 'tokenize' text into words.</p>
<p>You can either use the <code>RegexpTokenizer</code>, or the <code>word_tokenize</code> with a slight adaptation.</p>
<p>The easiest and simplest is the <code>RegexpTokenizer</code>:</p>
<pre><code>import nltk

text = "asdf@gmail.com said: I've taken 2 reports to the boss. I didn't do the other things."

result = nltk.RegexpTokenizer(r'\w+').tokenize(text)
</code></pre>
<p>Which returns:</p>
<pre><code>`['asdf', 'gmail', 'com', 'said', 'I', 've', 'taken', '2', 'reports', 'to', 'the', 'boss', 'I', 'didn', 't', 'do', 'the', 'other', 'things']`
</code></pre>
<p>Or you can use the slightly smarter <code>word_tokenize</code> which is able to split most contractions like <code>didn't</code> into <code>did</code> and <code>n't</code>.</p>
<pre><code>import re
import nltk
nltk.download('punkt')  # You only have to do this once

def contains_letters(phrase):
    return bool(re.search('[a-zA-Z]', phrase))

text = "asdf@gmail.com said: I've taken 2 reports to the boss. I didn't do the other things."

result = [word for word in nltk.word_tokenize(text) if contains_letters(word)]
</code></pre>
<p>which returns:</p>
<pre><code>['asdf', 'gmail.com', 'said', 'I', "'ve", 'taken', 'reports', 'to', 'the', 'boss', 'I', 'did', "n't", 'do', 'the', 'other', 'things']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>may this will help</h1>
<pre><code>array = string.split(' ')
result = []
for word in array
 if word.isalpha()
  result.append(word)
string = ' '.join(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can either use regex or can use python in build function such as isalpha()</p>
<p>Example using isalpha()</p>
<pre><code>result = ''
with open('file path') as f:
line = f.readline()
a = line.split()
for i in a:
    if i.isalpha():
        print(i+' ',end='')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>str.join()</code> + comprehension will give you a one line solution:</p>
<pre><code>sentence = "asdf@gmail.com said: I've taken 2 reports to the boss"
' '.join([i for i in sentence.split() if i.isalpha()])
#'taken reports to the boss'
</code></pre>
</div>
<span class="comment-copy">Look like a job for regex.</span>
