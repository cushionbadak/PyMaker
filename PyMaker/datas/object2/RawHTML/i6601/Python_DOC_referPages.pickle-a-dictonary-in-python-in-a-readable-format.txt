<div class="post-text" itemprop="text">
<p>I have a python dictionary in a file in a format like this:</p>
<p>(dp0
   S'Test'
   p1
   S'Test1'
   p2
   sS'Test2'
   p3
   S'Test2'
   p4
   sS'Starspy'
   p5
   S'SHSN4N'
   p6
   s.</p>
<p>see:
<a href="https://stackoverflow.com/questions/4893689/save-a-dictionary-to-a-file-alternative-to-pickle-in-python">Save a dictionary to a file (alternative to pickle) in Python?</a></p>
<p>and I want to read it back.</p>
<p>According to the question in the link, this has been created saving it with pickle. But, when I try to save a dictionary with pickle the format that I obtain does not correspond.</p>
<p>For example, the code:</p>
<pre><code>import pickle
mydict = {'a': 1, 'b': 2, 'c': 3}
output = open('myfile.dict', 'wb')
pickle.dump(mydict, output)
output.close()
</code></pre>
<p>produces a file with the content</p>
<p>€}q (X   aqKX   bqKX   cqKu.</p>
<p>I can read it back OK, but it has not the format of my file (that correspond to a nested dictionary). So, I have two questions:</p>
<p>First, how can I write a file with the format ... (dp0
S'Test'
p1
S'Test1'
p2
sS'Test2'
p3
S'Test2'
p4
sS'Starspy'
p5
S'SHSN4N'
p6
s.
?</p>
<p>Second, how can I read a file with that format? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you want readable dictionaries then go with <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> it built into python and the output is pretty much like a dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>The question is answered in the <code>pickle</code> module documentation: <a href="https://docs.python.org/2/library/pickle.html#data-stream-format" rel="nofollow noreferrer">https://docs.python.org/2/library/pickle.html#data-stream-format</a></p>
<blockquote>
<p>There are currently 3 different protocols which can be used for
  pickling.</p>
<p>Protocol version 0 is the original ASCII protocol and is backwards
  compatible with earlier versions of Python.</p>
<p>Protocol version 1 is the
  old binary format which is also compatible with earlier versions of
  Python. </p>
<p>Protocol version 2 was introduced in Python 2.3. It provides
  much more efficient pickling of new-style classes.</p>
</blockquote>
<p>Whatever you show in the beginning, it the protocol version 0, and is the default. In the end — the binary protocol versions 1 or 2.</p>
<p>Just specify the protocol version number:</p>
<pre><code>&gt;&gt;&gt; pickle.dump({'hello': 'world'}, file('f.txt', 'wt'))
&gt;&gt;&gt; file('f.txt', 'rt').read()
"(dp0\nS'hello'\np1\nS'world'\np2\ns."

&gt;&gt;&gt; pickle.dump({'hello': 'world'}, file('f.txt', 'wt'), 2)
&gt;&gt;&gt; file('f.txt', 'rt').read()
'\x80\x02}q\x00U\x05helloq\x01U\x05worldq\x02s.'

&gt;&gt;&gt; pickle.dump({'hello': 'world'}, file('f.txt', 'wt'), 1)
&gt;&gt;&gt; file('f.txt', 'rt').read()
'}q\x00U\x05helloq\x01U\x05worldq\x02s.'
</code></pre>
<p>PS: Why not just use a readable format, e.g. json?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue I have was a problem of version. I was using version 3 and it works with version 2. In thar case I can create a file with the format I have in the file I want to read, and I can now read it. Thank you very much!!!</p>
</div>
<span class="comment-copy">If you want a human-readable version, why not use JSON instead?</span>
<span class="comment-copy">I am sorry, your code does not work in my computer. It gives me an error. My problem is that I have a large file with a nested dictionary with many layers that someone pass to me (so I cannot save the data in a different format) and the file is in the format  (dp0 S'Test' p1 S'Test1' p2 sS'Test2' p3 S'Test2' p4 sS'Starspy' p5 S'SHSN4N' p6 s. That is the reason I want to: 1) to learn how I can save a file with that kind of format and 2) mainly to be able to open the file I have.</span>
<span class="comment-copy">Your code does not work for me.</span>
