<div class="post-text" itemprop="text">
<p>I'm a college student and a newbie to python. Suppose if I have data about the subway system in my country:</p>
<pre><code>    data -&gt; (('NS1', 'Jurong East', 'North South Line'), ('NS7', 'Kranji', 
    'North South Line'), ('NS13', 'Yishun', 'North South Line'), ('EW5', 
    'Bedok', 'East West Line'), ('EW10', 'Kallang', 'East West Line'), 
    ('EW15', 'Tanjong Pagar', 'East West Line'), ('NE5', 'Clarke Quay','North 
    East Line'), ('NE10', 'Potong Pasir', 'North East Line'), 
    ('NE15','Buangkok', 'North East Line'))
</code></pre>
<p>I want to create a function parse_lines that can return a tuple of lines:</p>
<pre><code>    output -&gt; (('North South Line',('NS1', 'Jurong East'), ('NS7', 'Kranji'), 
    ('NS13', 'Yishun')), ('East West Line',('EW5','Bedok'), 
    ('EW10','Kallang'), ('EW15', 'Tanjong Pagar')), ('North East 
    Line',('NE5', 'Clarke Quay'), ('NE10', 'Potong Pasir'),
    ('NE15','Buangkok')))
</code></pre>
<p>This is the code that I've come up with but it didn't work:</p>
<pre><code>    def parse_lines(data_file):
        rows = data_file
        lines = ()
        curr_line_name = rows[0][2]
        curr_line_stations = ()
        for row in rows:
            code, station_name, line_name = row
            if line_name == curr_line_name:
                curr_line_stations += (tuple(row[:2]),)
                lines = (line_name,tuple(curr_line_stations))
            else:
                curr_line_name = line_name
        return lines
</code></pre>
<p>I would really appreciate suggestions that I can make to my code that will make it work. Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dictionary along with unpacking for Python3:</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
data = (('NS1', 'Jurong East', 'North South Line'), ('NS7', 'Kranji', 
'North South Line'), ('NS13', 'Yishun', 'North South Line'), ('EW5', 
'Bedok', 'East West Line'), ('EW10', 'Kallang', 'East West Line'), 
('EW15', 'Tanjong Pagar', 'East West Line'), ('NE5', 'Clarke Quay','North East Line'), ('NE10', 'Potong Pasir', 'North East Line'), 
('NE15','Buangkok', 'North East Line'))
for name, location, direction in data:
   d[direction].append((name, location))

final_output = tuple(((a), *b) for a, b in d.items())
</code></pre>
<p>Output:</p>
<pre><code>(('North South Line', ('NS1', 'Jurong East'), ('NS7', 'Kranji'), ('NS13', 'Yishun')), ('North East Line', ('NE5', 'Clarke Quay'), ('NE10', 'Potong Pasir'), ('NE15', 'Buangkok')), ('East West Line', ('EW5', 'Bedok'), ('EW10', 'Kallang'), ('EW15', 'Tanjong Pagar')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think that a <code>dict</code> or a <code>defaultdict</code> is a better data structure for your problem</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; lines = defaultdict(list)
&gt;&gt;&gt; for row in data:
    code, station, line = row
    lines[line].append((code, station))
&gt;&gt;&gt; lines
defaultdict(&lt;type 'list'&gt;, {'North South Line': [('NS1', 'Jurong East'), ('NS7', 'Kranji'), ('NS13', 'Yishun')], 
    'East West Line': [('EW5', 'Bedok'), ('EW10', 'Kallang'), ('EW15', 'Tanjong Pagar')], 
    'North East Line': [('NE5', 'Clarke Quay'), ('NE10', 'Potong Pasir'), ('NE15', 'Buangkok')]})
</code></pre>
<p>If you really want a tuple-of-tuples, you can do:</p>
<pre><code>&gt;&gt;&gt; tuple((line, stations) for line, stations in lines.items())
(('North South Line', [('NS1', 'Jurong East'), ('NS7', 'Kranji'), ('NS13', 'Yishun')]), 
('East West Line', [('EW5', 'Bedok'), ('EW10', 'Kallang'), ('EW15', 'Tanjong Pagar')]), 
('North East Line', [('NE5', 'Clarke Quay'), ('NE10', 'Potong Pasir'), ('NE15', 'Buangkok')]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've used list comperhension to do it in two steps:
1) Extract lines out of your tuple data
2) Create dictionary that for each line get rest of tuple as list </p>
<p>It can be converted back to tuple if needed.</p>
<pre><code>lines = {tuple[2] for tuple in data}
out = {line: [(a,b) for a,b,c in data if c == line] for line in lines}
</code></pre>
<p>Result:</p>
<pre><code>{'North South Line': [('NS1', 'Jurong East'), ('NS7', 'Kranji'), 
('NS13', 'Yishun')], 'East West Line': [('EW5', 'Bedok'), ('EW10', 
'Kallang'), ('EW15', 'Tanjong Pagar')], 'North East Line': [('NE5', 
'Clarke Quay'), ('NE10', 'Potong Pasir'), ('NE15', 'Buangkok')]}
</code></pre>
</div>
<span class="comment-copy">Can you describe the problem you're seeing beyond that it doesn't work? What output or error message are you seeing?</span>
<span class="comment-copy">The operation that will solve this for you is called <code>groupby</code> <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.groupby</a> You would need to do a little transformation, but the code there might give you some insight into how to solve the problem.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3749512/python-group-by">Python group by</a></span>
