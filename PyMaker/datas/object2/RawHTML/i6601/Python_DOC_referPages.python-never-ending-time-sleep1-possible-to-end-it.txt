<div class="post-text" itemprop="text">
<p>So I have been playing around with schedule and finally got it to work. I was too excited to relized that there came ANOTHER problem haha. However the issue is now that it doesn't end whenever the main is finished and I can't really find the solution. I know the issue sits on the row <strong>Time.sleep(1)</strong> because whenever I keyboardInterrput then there comes a error saying Time.sleep(1) was the <em>"Issue"</em> and I can't really find a soulution to end it. </p>
<p>Im using a schedule from a github : <a href="https://github.com/dbader/schedule" rel="nofollow noreferrer">Github schedule</a></p>
<pre><code>while True:
    UserInput = input('To run Schedule task - Press y\nTo run directly - Press n\n')

    if(UserInput == 'y' or UserInput == 'Y'):
        print(Fore.RESET + space)
        TimeUser = input('What time to start script? Format - HH:MM\n')

        schedule.every().day.at(TimeUser).do(main)
        wipe()
        print('Schedule starts at: ''' + TimeUser + ' - Waiting for time...')
        idle = int(round(schedule.idle_seconds()))



        while True:
            schedule.run_pending()
            time.sleep(1)
            idle = int(round(schedule.idle_seconds()))
            if(idle &lt; 6.0) and (idle &gt;= 0.0):
                print('Starting in: ' + str(idle))

    elif(UserInput == 'n' or UserInput == 'N'):
        main()


    print("Wrong input - Try again")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You code is encapsulated in <code>while</code> loops with <code>true</code> as the argument. Either you did this by mistake or this is poor structure. This is the problem.</p>
<p>If you don't want to remove the <code>while</code> loops then atleast add a <code>break</code> somewhere.</p>
<p>If you need help structuring your code, go to <a href="https://codereview.stackexchange.com/">Code Review.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <code>for</code> keyword. The for statement can define your iterations and the halting conditions. Or using the <code>range()</code> function to iterate over your numerical sequence. </p>
<p>Being used to traditional if-then-else statements, the <code>break</code> statement will break you out of your while loop. It needs to be with your innermost <code>for</code> or <code>while</code> loop.  Your <code>else</code> clause needs to belong to your <code>for</code> loop and not part of the <code>if</code> statement.  And the <code>continue</code> statement will move your loop forward. </p>
<p>There are examples here:   <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/controlflow.html</a></p>
</div>
<span class="comment-copy"><code>while True:</code> means repeat forever - so that's what it's doing. you can escape it by using <code>break</code></span>
<span class="comment-copy">Very true. I tried to put a break after the if statemet inside the While but then the print wouldn't go on. Also I tried after the While statement and something.. So something is off by my strcture.</span>
<span class="comment-copy">@Stael the schedule library needs that busy loop. The real question here is how the OP can run that busy loop without blocking, and the answer in that library docs is: <a href="https://schedule.readthedocs.io/en/stable/faq.html#how-to-continuously-run-the-scheduler-without-blocking-the-main-thread" rel="nofollow noreferrer">run it in another thread</a>. If he breaks, the scheduled tasks will not complete.</span>
<span class="comment-copy">Oh damn. You found something really nice @PauloScardine Do you maybe have a solution for me?</span>
<span class="comment-copy">I do, but I lack the time to post a complete answer right now. If nobody post a decent answer first I will take a look this night after tucking in my boy...</span>
<span class="comment-copy">Oh thank you! I will check Code Review. I think thats the spot I should be right now haha. Thank you Lars!</span>
<span class="comment-copy">@WeInThis No problem.</span>
<span class="comment-copy">Everything in this answer is true, but it could fit a comment as well.</span>
<span class="comment-copy">@PauloScardine What do you mean?</span>
<span class="comment-copy">I'm mistaken all the time, so lets check the facts: the schedule library the OP is using <b>need</b> that busy loop. If you break, you will never complete the scheduled tasks. A good answer is one where the busy loop runs in another thread so the program does not block.</span>
