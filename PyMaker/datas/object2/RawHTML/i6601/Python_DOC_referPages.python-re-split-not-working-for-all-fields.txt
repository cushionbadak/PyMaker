<div class="post-text" itemprop="text">
<pre><code>import re
string = "some text \n\n\nError on the field: more\n text and lines\n\n\nError on the field: some more\n lines \n\n\nError on the field: final lines"
pieces = re.split(r'(Error on the field:)', string, re.IGNORECASE)
pieces
['some text \n\n\n', 'Error on the field:', ' more\n text and lines\n\n\n', 'Error on the field:', ' some more\n lines \n\n\nError on the field: final lines']
pieces2 = re.split(r'(Error on the field:)', pieces[4], re.IGNORECASE)
pieces2
[' some more\n lines \n\n\n', 'Error on the field:', ' final lines']
</code></pre>
<p>Why is the third split of <code>'Error on the field:'</code> not being picked up in the initial split of <code>pieces</code>, but is picked up when you split <code>pieces[4]</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>positional arguments of <code>re.split</code> are:</p>
<ul>
<li>regex</li>
<li>string</li>
<li>maxsplit (default value: unlimited)</li>
<li><p>flags (default value: no flags)</p>
<p><code>split(pattern, string, maxsplit=0, flags=0)</code></p></li>
</ul>
<p>you're passing <code>re.IGNORECASE</code> (the value of the flag is <code>2</code>) as <code>maxsplit</code> argument (as <em>postional</em>) which explains the strange effect. It works to some point then it stops the splits as instructed after 2 splits.</p>
<p>Just do <code>flags=re.IGNORECASE</code> (keyword, not positional) instead and it works.</p>
<p>In <code>re.compile</code> you can pass that flag as positional safely: <code>compile(pattern, flags=0)</code>, and that's true for <code>re.match</code> and <code>re.search</code> as well, but not for <code>re.split</code> &amp; <code>re.sub</code>, so it's an easy trap to fall into. When in doubt, always use pass-by-keyword for optional arguments.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to state to use flags explicitly by using <code>flags=</code> when using <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><strong>re.split</strong></a>:</p>
<pre><code>import re
string = "some text \n\n\nError on the field: more\n text and lines\n\n\nError on the field: some more\n lines \n\n\nError on the field: final lines"
pieces = re.split(r'(Error on the field:)', string, flags=re.I)

print(pieces)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['some text \n\n\n', 'Error on the field:', ' more\n text and lines\n\n\n', 'Error on the field:', ' some more\n lines \n\n\n', 'Error on the field:', ' final lines']
</code></pre>
<p><strong>N.B.</strong> <code>re.I</code> is the same as <code>re.IGNORECASE</code></p>
</div>
<span class="comment-copy">Just use <code>re.split(r'(?i)(Error on the field:)', string)</code></span>
