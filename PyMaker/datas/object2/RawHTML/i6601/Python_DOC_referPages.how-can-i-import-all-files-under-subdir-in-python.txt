<div class="post-text" itemprop="text">
<p>I have dir structure like this:</p>
<pre><code>Proj/
    run.py
    Util/
        __init__.py
        x.py
        y.py
</code></pre>
<p>In x.py, I define a function:</p>
<pre><code>def p():
    return 1
</code></pre>
<p>In y.py, I define:</p>
<pre><code>def q():
    return 2
</code></pre>
<p>Currently in run.py, I'll use</p>
<pre><code>from Util import *
</code></pre>
<p>But I have to call them using</p>
<pre><code>x.p()
y.q()
</code></pre>
<p>But I want to call them using</p>
<pre><code>p()
q()
</code></pre>
<p>Is there a way that I can do that? Like (as I imagine)</p>
<pre><code>from Util.* import *
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Bring the names up into the package namespace, by using star imports in the <code>__init__.py</code>:</p>
<pre><code># in util/__init__.py
from util.x import *
from util.y import *
</code></pre>
<p>In each submodule, define the names which you want to export by using the <code>__all__</code> name:</p>
<pre><code># in x.py
__all__ = ['p']
</code></pre>
<p>And:</p>
<pre><code># in y.py
__all__ = ['q']
</code></pre>
<p>This is a pretty standard usage of the <code>__init__.py</code> module within a package, documented <a href="https://docs.python.org/3/tutorial/modules.html#importing-from-a-package" rel="nofollow noreferrer">here</a>.  </p>
</div>
