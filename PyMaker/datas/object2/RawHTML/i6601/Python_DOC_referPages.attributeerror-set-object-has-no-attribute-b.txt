<div class="post-text" itemprop="text">
<p>I have the following code:</p>
<pre><code>N1 = int(input())
a = set(list(map(int, input().split())))
N2 = int(input())
for i in range(N2):
    b = input().split()
    c = set(list(map(int, input().split())))
    a.b[0](c)
print(sum(a))
</code></pre>
<p>With typical input, the list <code>b</code> looks like this:</p>
<pre><code>b = ['intersection_update', '10']
</code></pre>
<p>What is the issue with <code>a.b[0](c)</code>? Apparently I am not evaluating it correctly. </p>
<p>The concept seems fine, but it seems like set <code>a</code> is not able to take an attribute which is actually an element of a list.</p>
<p>what I want to evaluate is:</p>
<pre><code>a.intersection_update(c)
</code></pre>
<p>Here's the error I get:</p>
<pre><code>Traceback (most recent call last):
  File "solution.py", line 7, in 
    a.b[0](c)
AttributeError: 'set' object has no attribute 'b'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't do that kind of indirect attribute access using the dot operator in Python. Use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code></a> instead:</p>
<pre><code>&gt;&gt;&gt; a = {1, 2, 3, 4, 5}
&gt;&gt;&gt; c = {3, 4, 5, 6, 7}
&gt;&gt;&gt; b = ['intersection_update', '10']
&gt;&gt;&gt; getattr(a, b[0])(c)
&gt;&gt;&gt; a
{3, 4, 5}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you want to use <code>getattr</code>, to get an attribute who's name stored as a string in another variable:</p>
<pre><code>getattr(a, b[0])(c)
</code></pre>
<p>Your current code is looking for an attribute named <code>b</code> on the <code>a</code> set.</p>
</div>
<span class="comment-copy">thanks, it worked. I learned something new today :)</span>
