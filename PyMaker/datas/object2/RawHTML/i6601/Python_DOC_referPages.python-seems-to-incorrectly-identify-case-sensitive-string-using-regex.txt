<div class="post-text" itemprop="text">
<p>I'm checking for a case-sensitive string pattern using Python 2.7 and it seems to return an incorrect match. I've run the following tests:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; rex_str = "^((BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?.(?i)pdf$)"
&gt;&gt;&gt; not re.match(rex_str, 'BOA_1988-148.pdf')
&gt;&gt;&gt; False
&gt;&gt;&gt; not re.match(rex_str, 'BOA_1988-148.PDF')
&gt;&gt;&gt; False
&gt;&gt;&gt; not re.match(rex_str, 'BOA1988-148.pdf')
&gt;&gt;&gt; True
&gt;&gt;&gt; not re.match(rex_str, 'boa_1988-148.pdf')
&gt;&gt;&gt; False
</code></pre>
<p>The first three tests are correct, but the final test, 'boa_1988-148.pdf' should return True because the pattern is supposed to treat the first 3 characters (BOA) as case-sensitive.</p>
<p>I checked the expression with an online tester (<a href="https://regex101.com/" rel="nofollow noreferrer">https://regex101.com/</a>) and the pattern was correct, flagging the final as a no match because the 'boa' was lower case. Am I missing something or do you have to explicitly declare a group as case-sensitive using a case-sensitive mode like (?c)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Flags do not apply to portions of a regex. You told the regex engine to match case insensitively:</p>
<pre><code>(?i)
</code></pre>
<p>From the the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">syntax documentation</a>:</p>
<blockquote>
<pre><code>(?aiLmsux)  
</code></pre>
<p>(One or more letters from the set <code>'a'</code>, <code>'i'</code>, <code>'L'</code>, <code>'m'</code>, <code>'s'</code>, <code>'u'</code>, <code>'x'</code>.) The group matches the empty string; the letters set the corresponding flags: <code>re.A</code> (ASCII-only matching), <code>re.I</code> (ignore case), <code>re.L</code> (locale dependent), <code>re.M</code> (multi-line), <code>re.S</code> (dot matches all), and <code>re.X</code> (verbose), <strong><em>for the entire regular expression</em></strong>. (The flags are described in Module Contents.) This is useful if you wish to include the flags as part of the regular expression, instead of passing a flag argument to the <code>re.compile()</code> function. Flags should be used first in the expression string.</p>
</blockquote>
<p>Emphasis mine, the flag applies to the <strong>whole pattern</strong>, not just a substring. If you need to match just <code>pdf</code> or <code>PDF</code>, use that in your pattern directly:</p>
<pre><code>r"^((BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?.(?:pdf|PDF)$)"
</code></pre>
<p>This matches either <code>.pdf</code> or <code>.PDF</code>. If you need to match any mix of uppercase and lowercase, use:</p>
<pre><code>r"^((BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?.[pP][dD][fF]$)"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>(?i)</code> doesn’t only apply after itself or to the group that contains it. From <a href="https://docs.python.org/2/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">the Python 2 <code>re</code> documentation</a>:</p>
<blockquote>
<h3><code>(?iLmsux)</code></h3>
<p>(One or more letters from the set <code>'i'</code>, <code>'L'</code>, <code>'m'</code>, <code>'s'</code>, <code>'u'</code>, <code>'x'</code>.) The group matches the empty string; the letters set the corresponding flags […] <strong>for the entire regular expression</strong>.</p>
</blockquote>
<p>One option is to do it manually:</p>
<pre><code>r"^(BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?\.[Pp][Dd][Ff]\Z"
</code></pre>
<p>Another is to use a separate case-sensitive check:</p>
<pre><code> rex_str = r"(?i)^(BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?\.pdf\Z"
 match = re.match(rex_str, s) if s.startswith("BOA_") else None
</code></pre>
<p>or separate case-insensitive one:</p>
<pre><code> rex_str = r"^(BOA_[0-9]{4}-[0-9]{1,3})(?:CO)?\..{3}\Z"
 match = re.match(rex_str, s) if s.lower().endswith(".pdf") else None
</code></pre>
</div>
<span class="comment-copy">You should switch to Python 3.6+ while you are still learning.</span>
