<div class="post-text" itemprop="text">
<p>The order of dictionary is varied each time although using OrderedDict.
I wrote in views.py </p>
<pre><code>from collections import OrderedDict

from django.shortcuts import render
import json

def index(request):
    with open('./data/data.json', 'r') as f:
        json_dict = json.loads(f.read())
        json_data = OrderedDict()
        json_data = json_dict
    return render(request, 'index.html', {'json_data': json_data})
</code></pre>
<p>and I wrote in index.html</p>
<pre><code>&lt;html&gt;
　&lt;head&gt;
　&lt;script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"&gt;&lt;/script&gt;
  &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/chosen/1.8.2/chosen.jquery.min.js"&gt;&lt;/script&gt;
  &lt;script src="//cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.jquery.js"&gt;&lt;/script&gt;
　&lt;link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.css"&gt;
　&lt;/head&gt;
　&lt;body&gt;
    &lt;select id="mainDD" data-placeholder="Choose" class="chzn-select" style="width:600px;"&gt;
    {% for i in json_data.items.values %}
            &lt;option&gt;{{ i }}&lt;/option&gt;
    {% endfor %}
    &lt;/select&gt;
    &lt;select name="type" id="type1"&gt;
    {% for j in json_data.type1.values %}
            &lt;option&gt;{{ j }}&lt;/option&gt;
    {% endfor %}
    &lt;/select&gt;
    &lt;select name="type" id="type2"&gt;
    {% for k in json_data.type2.values %}
            &lt;option&gt;{{ k }}&lt;/option&gt;
    {% endfor %}
    &lt;/select&gt;
    &lt;select name="type" id="type3"&gt;
    {% for l in json_data.type3.values %}
            &lt;option&gt;{{ l }}&lt;/option&gt;
    {% endfor %}
    &lt;/select&gt;
    &lt;select name="type" id="type4"&gt;
    {% for m in json_data.type4.values %}
            &lt;option&gt;{{ m }}&lt;/option&gt;
    {% endfor %}
    &lt;/select&gt;

  &lt;/script&gt;

  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>Variable of i&amp;j&amp;k&amp;l&amp;m has result of json_data,but this dictionary of json_data is not the order.For example <code>i</code> has <code>{'items': [{'---': '---', ‘A’: ‘a’, ‘B’: ‘b’, ‘C: ‘c’, ‘D’: ‘d’}]}</code> but the order of drill down is b=&gt;c=&gt;d=&gt;a.I want to show a =&gt;b=&gt;c=&gt;d .I think this can be done by using OrderedDict() but it is wrong.How should i fix this?What should I write it?</p>
</div>
<div class="post-text" itemprop="text">
<p>All you've done is overwrite your parsed JSON with an OrderedDict object; that doesn't do anything useful at all.</p>
<p>Instead, as <a href="https://docs.python.org/3/library/json.html#json.load" rel="noreferrer">the documentation shows</a>, you can pass that class as the <code>object_pairs_hook</code> parameter:</p>
<pre><code>json_dict = json.loads(f.read(), object_pairs_hook=OrderedDict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your idea is correct. Using <code>OrderedDict</code> will preserve the order of the items in the dictionary. However there is an error in your code:</p>
<pre><code>json_data = OrderedDict()
json_data = json_dict
</code></pre>
<p>First you initialize <code>json_data</code> as <code>OrderedDict</code>, but in the second statement you override the variable and assign it the value of <code>json_dict</code>.</p>
<p>Daniel Roseman was faster than me and gave you better answer, I'd just naively done this:</p>
<pre><code>json_data = OrderedDict(json_dict)
</code></pre>
</div>
