<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22937618/reference-what-does-this-regex-mean">Reference - What does this regex mean?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/3512471/what-is-a-non-capturing-group-what-does-do">What is a non-capturing group? What does (?:) do?</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to create a function to capture phone numbers written in a canonical form (XXX)XXX-XXX or XXX-XXX-XXXX with additional conditions. This is my approach</p>
<pre><code>def parse_phone2(s):

    phone_number = re.compile(r'''^\s*\(?       # Begining of string, Ignore leading spaces
                                  ([0-9]{3})    # Area code
                                  \)?\s*|-?     # Match 0 or 1 ')' followed by 0 or more spaces or match a single hyphen
                                  ([0-9]{3})    # Three digit
                                  -?            # hyphen
                                  ([0-9]{4})    # four digits
                                  \s*$          # End of string. ignore trailing spaces''', re.VERBOSE)
    try:
        return (phone_number.match(s).groups())
    except AttributeError as e:
        raise ValueError
</code></pre>
<p>I was failing this test case <code>'  (404)   555-1212  '</code> but another question of <a href="https://stackoverflow.com/questions/8609597/python-regular-expressions-or">SO</a> suggest me to replace <code>\)?\s*|-?</code> by <code>(?:\)?\s*|-?)</code> and it works. The problem is that I don't understand the difference between both nor the purpose of <code>(?:...)</code> further than create non-capturing groups. The docs aren't clear enough for me as well.</p>
<p><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Consider a simpler example:</p>
<pre><code>re.compile(r'(?:a|b)*')
</code></pre>
<p>which simply matches a (possibly empty) string of <code>a</code>s and <code>b</code>s. The only difference between this and</p>
<pre><code>re.compile(r'(a|b)*')
</code></pre>
<p>is that the matching engine will capture the first character matched for retrieval with the <code>group</code> method. Using a non-capture group is just an optimization to speed up the match (or at least save memory) when a capture group isn't needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have an alternate token in the part you replaced. Alternate will match either what's before the token, or what's after. And since separating a regex into lines like you've done here isn't considered grouping, it would try to match not just what's before or after on the same line, but on the lines before and after as well.</p>
<p>Grouping should instead be done by surrounding the group in parentheses, BUT by default this will also "capture" the group, meaning it will return the match as one of the groups when you call <code>groups()</code>. To specify that  it should not, you need to add <code>?:</code>.</p>
</div>
<span class="comment-copy"><code>(?:...)</code> can be used to structure your regular expression but unlike the normal parenthesis it will not create a capture group.</span>
<span class="comment-copy">The question mark character, ?, matches either once or zero times; you can think of it as marking something as being optional. For example, home-?brew matches either homebrew or home-brew.</span>
<span class="comment-copy">@FadySaad That's not my question. I'm asking why my function passes when I use  <code>(?:\)?\s*|-?)</code> instead <code>\)?\s*|-?</code></span>
