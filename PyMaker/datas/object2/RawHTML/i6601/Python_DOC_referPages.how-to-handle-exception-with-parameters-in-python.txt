<div class="post-text" itemprop="text">
<p>In Python 3.x, what is the correct syntax to handle exceptions that have parameters.
I'm specifically trying to handle <strong>WriteError</strong> documented on <a href="http://api.mongodb.com/python/current/api/pymongo/errors.html" rel="nofollow noreferrer">this page</a>.</p>
<p>I'm writing the code to handle it as:</p>
<pre><code>   except pymongo.errors.WriteError(err, code, dtls):
       logging.error("DB Write Error. err={}; code={}; dtls={}".format(err, code, dtls))
</code></pre>
<p>This is not working.</p>
<p>I even had a look at the <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">Erros and Exceptions</a> documentation. But could not find it there.</p>
<p>Can you please tell me the correct way to handle these sort of exceptions?</p>
</div>
<div class="post-text" itemprop="text">
<p>You catch the error first, then examine its attributes (reraising the exception if it isn't one you want to handle). There is no pattern matching on the contents of the exception.</p>
<pre><code>except pymongo.errors.WriteError as exc:
    logging.error("DB WriteError. err={}; code={}; dtls={}".format(exc.err, exc.code, exc.dtls))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>except</code> block just needs the exception's type. Within the block you could, of course, use its attributes if you wish:</p>
<pre><code>except pymongo.errors.WriteError as e:
   logging.error("DB Write Error. err={}; code={}; dtls={}".format(e.err, e.code, e.dtls))
</code></pre>
</div>
<span class="comment-copy">How silly of me. You are right. I was trying to pattern match and didn't think about assigning it to a variable. Thanks.</span>
