<div class="post-text" itemprop="text">
<p>I am using pillow to edit image, after editing I use method save and next count md5 on saved file. Saving file takes 0.012s, for me is too long. Is any way to count md5 on Image object with out saving to file?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a quick demo of using a BytesIO object to get the MD5 checksum of the file data without having to save the file to disk.</p>
<pre><code>from hashlib import md5
from io import BytesIO
from PIL import Image

size = 128
filetype = 'png'

# Make a simple test image
img = Image.new('RGB', (size, size), color='red')
#img.show()

# Save it to a fake file in RAM
img_bytes = BytesIO()
img.save(img_bytes, filetype)

# Get the MD5 checksum of the fake file
md5sum = md5(img_bytes.getbuffer())
print(md5sum.hexdigest())

#If we save the data to a real file, we get the same MD5 sum on that file
#img.save('red.png')
</code></pre>
<p><strong>output</strong></p>
<pre><code>af521c7a78abb978fb22ddcdfb04420d
</code></pre>
<p>If we un-comment <code>img.save('red.png')</code> and then pass <code>'red.png'</code> to a standard MD5sum program, we get the same result.</p>
</div>
<span class="comment-copy">Sort of. Save the PIL Image to a <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer">BytesIO</a> object. This is very fast.</span>
<span class="comment-copy">Use the hashlib module which is part of the standard distribution.</span>
<span class="comment-copy">If hashing to uniquely identify the image is all that is needed I would avoid png and use something simpler like pbm, given that no IO is actually done compressing the image would probably just slow down the hashing.</span>
<span class="comment-copy">@MatteoItalia Good point, but I suspect that the OP wants the MD5 hash of the full file data. Otherwise, he could just pass the raw image data from <code>Image.tobytes</code> (or maybe <code>Image.getdata</code>) to <code>hashlib.md5</code>.</span>
