<div class="post-text" itemprop="text">
<p>I found these example with TCP client and server on asyncio: <a href="https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-server-protocol" rel="nofollow noreferrer">tcp server example</a>. But how to connect them to get TCP proxy server which will be receive data and send it to other adress?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can combine both <a href="http://asyncio.readthedocs.io/en/latest/tcp_echo.html" rel="noreferrer">the TCP client and server examples</a> from the <a href="http://asyncio.readthedocs.io" rel="noreferrer">user documentation</a>. </p>
<p>You then need to connect the streams together using this kind of helper:</p>
<pre><code>async def pipe(reader, writer):
    try:
        while not reader.at_eof():
            writer.write(await reader.read(2048))
    finally:
        writer.close()
</code></pre>
<p>Here's a possible client handler:</p>
<pre><code>async def handle_client(local_reader, local_writer):
    try:
        remote_reader, remote_writer = await asyncio.open_connection(
            '127.0.0.1', 8889)
        pipe1 = pipe(local_reader, remote_writer)
        pipe2 = pipe(remote_reader, local_writer)
        await asyncio.gather(pipe1, pipe2)
    finally:
        local_writer.close()
</code></pre>
<p>And the server code:</p>
<pre><code># Create the server
loop = asyncio.get_event_loop()
coro = asyncio.start_server(handle_client, '127.0.0.1', 8888)
server = loop.run_until_complete(coro)

# Serve requests until Ctrl+C is pressed
print('Serving on {}'.format(server.sockets[0].getsockname()))
try:
    loop.run_forever()
except KeyboardInterrupt:
    pass

# Close the server
server.close()
loop.run_until_complete(server.wait_closed())
loop.close()
</code></pre>
</div>
<span class="comment-copy">And how to create this proxy with transports and create_server/create_connection?</span>
<span class="comment-copy">Would it be possible to read the <code>local_reader</code> to get a specific header value form the actual request before opening the connection to <code>127.0.0.1:8889</code></span>
<span class="comment-copy">@SreenadhTC Definitely, it's up to the client handler to perform any kind of operation before forwarding the traffic.</span>
<span class="comment-copy">@Vincent, Hey, Ya that is what I was trying to do, and I came up with an issue. I posted the same on SO <a href="https://stackoverflow.com/questions/49106456/how-to-safely-read-readerstream-from-asyncio-without-breaking-the-stream">here</a></span>
