<div class="post-text" itemprop="text">
<p>I'm new to python and was looking around for a code for a function where the user inputs and integer and the function adds and returns the sum of the digits of the number.</p>
<p>The code looked like this:</p>
<pre><code>def sum_digits(n):
    s = 0
    while n:
        s += n % 10
        n //= 10
    return s
</code></pre>
<p>So I know how a while loop works, but I can't wrap my head around (nor am able to find anything on Google) about how this works. I thought While loops always have a condition such as 'while n&lt;10' or the sort. </p>
<p>What exactly is 'while n:' saying? How does this code work exactly? How does the code know how to stop running, and how exactly does it even return the sum of the digits (all I see it doing is returning the remainder of s/n). </p>
<p>Thanks for the help and sorry for any stupid questions.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>while</code> implicitly calls <code>bool</code> on the argument. So as long as <code>bool(n)</code> in your example is <code>True</code> the <code>while</code> loop continues.</p>
<p>And <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">Pythons documentation for builtin types</a> states that any number except zero is considered True:</p>
<blockquote>
<p>By default, an object is considered true unless its class defines either a <code>__bool__()</code> method that returns <code>False</code> or a <code>__len__()</code> method that returns zero, when called with the object. Here are most of the built-in objects considered false:</p>
<ul>
<li>constants defined to be false: None and False.</li>
<li>zero of any numeric type: 0, 0.0, 0j, Decimal(0), Fraction(0, 1)</li>
<li>empty sequences and collections: '', (), [], {}, set(), range(0)</li>
</ul>
</blockquote>
<p>So basically the <code>while n</code> loop will continue until <code>n</code> becomes zero (or you <code>break</code> or <code>return</code> or <code>raise</code>...)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>while n:</code> is equivalent to <code>while n!=0:</code> (in this case, when you're dealing with numbers). Since each value in python has a Boolean value, for any number that is different from zero, <code>bool(n) == True</code>, if n equals zero, <code>bool(n) == False</code>.</p>
<p>That function can be written like (Thanks to @Jean-FrançoisFabre for suggesting the use of <code>divmod</code>):</p>
<pre><code>def sum_digits(n):
    s = 0
    while n != 0:
        n, t = divmod(n, 10)  # to not use division and modulo separately
        # n has the value of n//10, t has the value of n%10
        s += t
    return s

print(sum_digits(154)) # =&gt; 10
print(sum_digits(134)) # =&gt; 8
print(sum_digits(987)) # =&gt; 24
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#boolean-operations</a></span>
<span class="comment-copy">See <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">the docs</a>. Objects can be "truthy" or "falsey". For example, non-zero <code>float</code> objects are "truthy", empty containers (<code>[], (), {})</code> are <i>falsey</i></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/18491777/truth-value-of-a-string-in-python">Truth value of a string in python</a> . From the answer to that question: <code>A numerical value of 0 is considered false (although a string value of '0' is considered true).  All other expressions are considered True. </code></span>
<span class="comment-copy">or <code>n,s = divmod(n,10)</code> to replace modulo + division</span>
<span class="comment-copy">@Jean-FrançoisFabre Thanks, you're right about <code>divmod</code>, but he's incremeting <code>s</code>, not setting it, so the div part needs to be set to a temporary variable.</span>
