<div class="post-text" itemprop="text">
<p>all I have a list of list of tuple here</p>
<pre><code>A =[[(1, 52), (1, 12), (-1, -1)],[(-1, 23), (1, 42), (-1, -1)],[(1, -1), (-1, -1), (1, 42)]]
</code></pre>
<p>I wanted get the tuples containing the max values in second element of the tuple, column-wise. </p>
<p>I tried accessing columns like this </p>
<p><code>A[:,2]</code></p>
<p>But I get the error</p>
<blockquote>
<p>TypeError: list indices must be integers, not tuple</p>
</blockquote>
<p>Thanks in advance, Please let me know if you need any other information</p>
<p>Edit 1:</p>
<p>Desired output:</p>
<pre><code>[(1, 52),(1, 42),(1, 42)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>[max(a,key=lambda x:x[1]) for a in zip(*A)]
</code></pre>
<p>output:</p>
<pre><code>[(1, 52), (1, 42), (1, 42)]
</code></pre>
<p>Let me know if this works for you I will explain the answer.</p>
<p>You can access columns like this..</p>
<pre><code>&gt;&gt;&gt; list(zip(*A)[0])
[(1, 52), (-1, 23), (1, -1)]
&gt;&gt;&gt; list(zip(*A)[1])
[(1, 12), (1, 42), (-1, -1)]
</code></pre>
<hr/>
<p><strong>Explanation</strong><br/>
<strong>zip</strong> <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#zip</a><br/></p>
<pre><code>&gt;&gt;&gt; x=[1,2,3]
&gt;&gt;&gt; y=['a','b','c']
&gt;&gt;&gt; z=['first','second','third']
&gt;&gt;&gt; zip(x,y,z)
[(1, 'a', 'first'), (2, 'b', 'second'), (3, 'c', 'third')]
</code></pre>
<p>Now imagine x,y,z being the rows you had in <code>A</code>. By zip(rows) it returns 1st elements, 2nd elements, 3rd elements etc... There by returning us columns of the rows we passed.
Note: zip acts on multiple arguments passed in so we need to send multiple rows like x,y,z separately, not like [x,y,z] as a list. That is done by *A which separates the rows and passes to zip.</p>
<p>Now we got different columns</p>
<p><strong>max</strong><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#max</a><br/></p>
<pre><code>max(1,2)                      #Will return 2
max(cars,lambda x:x.speed)    #Will give you the fastest car
max(cars,lambda x:x.capacity) #Will give you the biggest passenger car
max(tups,lambda x:x[1])       #Will give you the tuple with biggest 2nd element
</code></pre>
<p><strong>List Comprehension</strong><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a><br/></p>
<pre><code>A=[1,2,3]
[x**2 for x in A]     #Will give you [1,4,9]
[x**3 for x in A]     #Will give you [1,8,27]
</code></pre>
<p>Finally</p>
<pre><code>[max(a,key=lambda x:x[1]) for a in zip(*A)]
</code></pre>
<p>Will give you max for each column!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>A =[[(1, 52), (1, 12), (-1, -1)],[(-1, 23), (1, 42), (-1, -1)],[(1, -1), (-1, -1), (1, 42)]]

new_A = [max(a, key=lambda x: x[-1]) for a in zip(*A)] 
</code></pre>
<p>Output:</p>
<pre><code>[(1, 52), (1, 42), (1, 42)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>A</code> is a list is lists of tuples. Basic Python does not recognised multiple-element subscripting, although Numpy and similar modules extend it. Your subscript expression <code>:,2</code> is therefore interpreted as a tuple whose first element is a lice and whose second element is an integer, which (as the message explains) is not acceptable as a list index.</p>
<p>Unfortunately, "the tuples containing the max values in second element of the tuple, column-wise" isn't a terribly good description of the actual desired result.</p>
<p>I presume the answer you would like is <code>[(1, 52), (1, 42), (1, 42)]</code>.</p>
<p>One relatively simple way to achieve this is to sort each of the sub-lists separately, taking the last element of each. this could be spelled as</p>
<pre><code>result = [sorted(x, key=lambda z: z[1])[-1] for x in A]
</code></pre>
<p>The <code>key</code> argument to the <code>sorted</code> function ensures that each list is sorted on its second element, the 
<code>[-1]</code> subscript takes the last (and therefore highest) element of the sorted list, and the <code>for x in A</code> ensure that each element of the output corresponds to an element (<em>i.e.</em>, a list of three tuples) of the input.</p>
</div>
<span class="comment-copy">Please post your desired output.</span>
<span class="comment-copy">Thanks a lot!.It works. Can you please provide a brief explanation of all your methods. I am curious to know.</span>
<span class="comment-copy">Thanks a ton !!</span>
<span class="comment-copy">Hi thank you for your answer I have added expected output to my question :)</span>
