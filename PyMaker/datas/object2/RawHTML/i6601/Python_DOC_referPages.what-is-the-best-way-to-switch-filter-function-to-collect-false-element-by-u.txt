<div class="post-text" itemprop="text">
<p>What is the best way to switch <code>filter</code> function to collect <code>False</code> element by using my <code>switch_var</code>?</p>
<p>I want to</p>
<p>if <code>switch_var</code> is <code>False</code>, collect tuple first element is <code>True</code>.</p>
<p>if <code>switch_var</code> is <code>True</code>, collect tuple first element is <code>False</code>.</p>
<p>Currently I implemented like this.</p>
<pre><code>switch_var = False
lst = [(True, "A"), (False, "B")]
if not switch_var:
    filter(lambda x: x[0], lst)
else:
    filter(lambda x: not x[0], lst)
</code></pre>
<p>but I want the way something like</p>
<pre><code>switch_var = True
filter(lambda b: switch_var b, lst)
</code></pre>
<p>Is there any way like this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You were very close. Simply add the <code>switch_var</code> boolean in your filter function.</p>
<p><code>filter(lambda x: x[0] == not switch_var, lst)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Alternative <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.filterfalse" rel="nofollow noreferrer"><strong><em>itertools.filterfalse()</em></strong></a> approach:</p>
<pre><code>import itertools

switch_var = False
lst = [(True, "A"), (False, "B")]
result = list(itertools.filterfalse(lambda x: x[0] == switch_var, lst))    
</code></pre>
</div>
