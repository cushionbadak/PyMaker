<div class="post-text" itemprop="text">
<p>I have done some simple python programing, but I'm no expert, what I need to do is to comunicate a Raspberry Pi with 12 windows PC's, all of the PC's are connected to UPS do to  frequent power shutdowns that I have in my country, the Pi will act as a "server" and it will be monitoring the power source and in the case of a shutdown it will send a command to execute a script on each PC so that they can perform a correct shutdown sequence.</p>
<p>I know how to work with the Pi's GPIO on python, but I have no clue how to communicate then over the LAN.</p>
<p>Any help will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the easiest way to achieve this is by forking off a process using the subprocess module, and calling the command:</p>
<pre><code>net rpc shutdown -f -t 0 -C 'message' -U userName%password -I xxx.yyy.zzz.ttt
</code></pre>
<p>source: <a href="https://stackoverflow.com/questions/9936986/shutdown-windows-machine-from-linux-terminal">Shutdown Windows machine from linux terminal</a></p>
<p>As far as I can tell, there are no python modules that offer a nice implementation of the 'net rpc' tools, so calling them using subprocess is the easiest way. To handle the feedback from the command, I suggest you pipe stdout and stderr back to python and then capture and raising exceptions by scraping the output for keywords.</p>
<p>By no means is this the most Pythonic way, I would be interested to see if anyone else has a more Pythonic way of doing it!</p>
</div>
<span class="comment-copy">You can use TCP socket. Just read <a href="https://docs.python.org/3/howto/sockets.html" rel="nofollow noreferrer">Socket Programming HOWTO</a>, and you will get the idea.</span>
<span class="comment-copy"><a href="https://lifehacker.com/5275652/shut-down-your-windows-pc-remotely-from-linux" rel="nofollow noreferrer">lifehacker.com/5275652/â€¦</a></span>
<span class="comment-copy">Did this work for you? Can you accept the answer if it did?</span>
