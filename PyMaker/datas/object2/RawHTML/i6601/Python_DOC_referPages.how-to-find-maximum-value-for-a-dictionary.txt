<div class="post-text" itemprop="text">
<p>Suppose I have a dictionary here:</p>
<pre><code>stock_price = { 'AAPL' : [100,200,100.3,100.55,200.33],
                'GOOGL': [100.03,200.11,230.33,100.20],
                'SSNLF': [100.22,150.22,300,200,100.23],
                'MSFT' : [100.89,200,100,500,200.11,600]}
</code></pre>
<p>and each value on the list is from a specific period of time. (i.e. 100 for AAPL stock, 100.03 for GOOGL stock is the value for period 1, 100.3 for AAPL stock, 150.22 for SSNLF stock is period 2 and so on).</p>
<p>So here I am creating a function that will help me find the maximum stock price at a certain period of time.</p>
<pre><code>def maximum(periods):
    """
    Determine the max stock price at a time of the day  

    Parameters
    ----------
    times: a list of the times of the day we need to calculate max stock for 

    Returns
    ----------
    A list

result = []

#code here

return result
</code></pre>
<p>My goal is to input periods such that the function looks maximum([periods]) in order to find the maximum stock price at that period of time. </p>
<p>Expected result example should look like:</p>
<blockquote>
<blockquote>
<blockquote>
<p>maximum([0, 1])</p>
<p>[100.89, 200.11]</p>
</blockquote>
</blockquote>
</blockquote>
<p>this shows 100.89 is the highest price in period 1 among all stocks and 200.11 is the highest price in period 2. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>dict.values</code> to iterate dictionary values. Get period values of out of the value using list comprehension / generator expression; Use <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> to get maximum value:</p>
<pre><code># 1st period (0) prices
&gt;&gt;&gt; [prices[0] for prices in stock_price.values()]
[100, 100.03, 100.89, 100.22]

# To get multiple periods prices
&gt;&gt;&gt; [[prices[0] for prices in stock_price.values()],
     [prices[1] for prices in stock_price.values()]]
[[100, 100.03, 100.89, 100.22], [200, 200.11, 200, 150.22]]
&gt;&gt;&gt; [[prices[0] for prices in stock_price.values()] for period in [0, 1]]
[[100, 100.03, 100.89, 100.22], [100, 100.03, 100.89, 100.22]]

&gt;&gt;&gt; max([100, 100.03, 100.22, 100.89])
100.89
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; stock_price = { 'AAPL' : [100,200,100.3,100.55,200.33],
...                 'GOOGL': [100.03,200.11,230.33,100.20],
...                 'SSNLF': [100.22,150.22,300,200,100.23],
...                 'MSFT' : [100.89,200,100,500,200.11,600]}
&gt;&gt;&gt; 
&gt;&gt;&gt; def maximum(periods):
...     return [max(prices[period] for prices in stock_price.values())
...             for period in periods]
... 
&gt;&gt;&gt; maximum([0, 1])
[100.89, 200.11]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe you are looking for something like this:</p>
<pre><code>stock_price = { 'AAPL' : [100,200,100.3,100.55,200.33],
            'GOOGL': [100.03,200.11,230.33,100.20],
            'SSNLF': [100.22,150.22,300,200,100.23],
            'MSFT' : [100.89,200,100,500,200.11,600]}

def maximum(*args):
   for column in args:
       yield max(list(zip(*stock_price.values()))[column])
print(list(maximum(0, 1)))
</code></pre>
<p>Output:</p>
<pre><code>[100.89, 200.11]
</code></pre>
<p>By using <code>*args</code>, you can specify as many columns as you want:</p>
<pre><code>print(list(maximum(0, 1, 2, 3)))
</code></pre>
<p>Output:</p>
<pre><code>[100.89, 200.11, 300, 500]
</code></pre>
</div>
<span class="comment-copy">liked this answer! why do you need to conv to <code>list(</code> in <code>yield max(list(zip(*stock_price.values()))[column])</code></span>
