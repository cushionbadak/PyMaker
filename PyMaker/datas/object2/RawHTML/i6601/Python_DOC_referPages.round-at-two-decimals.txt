<div class="post-text" itemprop="text">
<pre><code>In [86]: array.std()
Out[86]: 100.70953143681199

In [87]: array.std().round()
Out[87]: 101.0

In [88]: array.std().round(2)
Out[88]: 100.70999999999999

In [89]: array.std().round(decimals=2)
Out[89]: 100.70999999999999

In [90]: np.round(array.std(), decimals=2)
Out[90]: 100.70999999999999
</code></pre>
<p>I would like to standard deviation to be round at 2 decimals, but it didn't work so far. How could I fix it? How to make that works with <code>numpy</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a builtin function called <a href="https://docs.python.org/3/library/functions.html?highlight=round#round" rel="nofollow noreferrer"><code>round()</code></a>; but to get it how you want, you'll want to cast the <code>std</code> to a float. Something like <code>std_dev = round(float(array.std()), 2)</code> should get you what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Numpy is properly rounding the numbers in the cases you show, but you are seeing the results of <a href="https://en.wikipedia.org/wiki/Floating-point_arithmetic" rel="nofollow noreferrer">floating point precision</a> when the numbers are displayed on screen.  If this loss of precision will truly cause a problem for you then you should consider using the <code>decimal</code> package.</p>
<pre><code>import decimal
s = decimal.Decimal(100.70953143681199)
s = round(s, 2)
print(s)
# 100.71
</code></pre>
</div>
<span class="comment-copy">surround it with <code>int()</code></span>
<span class="comment-copy">If you want to stay in <code>numpy</code> you can just add <code>astype()</code>, e.g. <code>array.mean().round().astype(np.int)</code></span>
<span class="comment-copy">Why do you want to round the std. dev? Is this purely for display / reporting purposes? If so, you want to use string formatting, not numeric rounding. (And if you want to use the <i>rounded</i> value in further computations, you should be asking yourself why you want to needlessly throw away accuracy for those computations.)</span>
<span class="comment-copy">It works, but I would like to make all my computation with numpy. Why it didn't work with numpy?</span>
<span class="comment-copy">It looks like this question comes up every now and again on SO. <a href="https://stackoverflow.com/questions/22261843/python-np-round-with-decimal-option-larger-than-2#comment33813850_22261843">This comment</a>, and the subsequent answer, note that the number to which you are trying to round don't have exact binary equivalents.</span>
