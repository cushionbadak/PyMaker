<div class="post-text" itemprop="text">
<p>I'm trying to remove "(Lyrics _ Lyric Video) " from the my album of 60 songs. </p>
<pre><code>import os

toBeRemoved="(Lyrics _ Lyric Video) "
path=r'E:\Users\Dylan\Desktop\MediaHuman2'
directory = os.listdir(os.fsencode(path))

for file in directory:
    filename = os.fsdecode(file)
    if toBeRemoved in filename:
        newname=filename.replace(toBeRemoved, "")
        os.rename(path+filename, path+newname)
    else:
        continue
</code></pre>
<p>but I keep getting this:</p>
<pre><code>    Traceback (most recent call last):
  File "E:\Users\Dylan\Desktop\filerenamer.py", line 11, in &lt;module&gt;
    os.rename(path+filename, path+newname)
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'E:\\Users\\Dylan\\Desktop\\MediaHuman202 - NOTD - Summer of Love (Lyrics _ Lyric Video) Ft. Dagny.mp3' -&gt; 'E:\\Users\\Dylan\\Desktop\\MediaHuman202 - NOTD - Summer of Love Ft. Dagny.mp3'
</code></pre>
<p>EDIT: the file does exist</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join(path, filename)</code></a> to join filenames in a way that uses the correct separators.</p>
<pre><code>for file in directory:
    filename = os.fsdecode(file)
    if toBeRemoved in filename:
        newname=filename.replace(toBeRemoved, "")
        os.rename(os.path.join(path, filename), os.path.join(path, newname))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try with </p>
<pre><code>path=r'E:\Users\Dylan\Desktop\MediaHuman2''\\'
</code></pre>
<p>instead of</p>
<pre><code>path=r'E:\Users\Dylan\Desktop\MediaHuman2'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this code. It's not the best solution but it will work.
Please let me know if it fits your needs.</p>
<p>Use function:</p>
<pre><code>path =  r'E:\NN_Music\mask rename\testing - Copy\input'
MaskRename(path, "Lyrics")
</code></pre>
<p>input:</p>
<ol>
<li>tmp1.txt</li>
<li>tmp2.txt</li>
<li>tmp3.txt</li>
</ol>
<p>output:</p>
<ol>
<li>Lyric_0.txt</li>
<li>Lyric_1.txt</li>
<li>Lyric_3.txt</li>
</ol>
<p>code:</p>
<pre><code>import os
import shutil
import operator

def diff(first, second):
        second = set(second)
        return [item for item in first if item not in second]

def MaskRename(target_path, mask):
    namesOfFiles = os.listdir(target_path)
    i = 1
    l = list()
    #removing extension
    for item in namesOfFiles:
        l.append(os.path.splitext(item)[0])

    futureNamesOfFiles = list()
    #applying new mask 
    for q in range(0, len(l),1):
        futureNamesOfFiles.append(mask + "_" + str(q))  

    listOfDiff = diff(l, futureNamesOfFiles)

    fileAfterRename = [ x for x in namesOfFiles if x.startswith(tuple(listOfDiff)) ]

    iterator = 0
    shift = 1
    for newItem in fileAfterRename:
        filename, file_extension = os.path.splitext(newItem)
        old_file = os.path.join(target_path, newItem)
        new_file = os.path.join(target_path, futureNamesOfFiles[iterator] + file_extension)
        try:
            os.rename(old_file, new_file)
            iterator = iterator + 1
        except Exception:
            new_file = os.path.join(target_path, futureNamesOfFiles[iterator + 1] + file_extension)
            os.rename(old_file, new_file)
            iterator = iterator + 2
            pass
</code></pre>
</div>
<span class="comment-copy">Seems like you forgot to put a slash between the directory and the file name: <code>\\MediaHuman202 - NOTD - Summer</code></span>
<span class="comment-copy">Use <code>os.path.join(path, filename)</code> instead of building the strings with <code>path + filename</code>.</span>
<span class="comment-copy">@Mark That was it. just added a slash at the end of my path variable. Wanna make this an answer so I can solve with it?</span>
<span class="comment-copy">Just accept Craig's answer - no need to be redundant. It's the proper way to do it.</span>
<span class="comment-copy">@DylanGrove yes Craig's answer is better than mine, even if it seems less pratical or 'easy', It's the proper way to do it and will be more pratical in the long run..</span>
<span class="comment-copy">Have you tried this? It raises a SyntaxError because you can't end raw strings with a `\` character.</span>
<span class="comment-copy">Yeah quite sleepy so didn't thought about it, I edited the answer, but I think yours should be the one to be accepted..</span>
<span class="comment-copy">This is way overkill haha, the fix was literally adding a \ to the file path. But I appreciate your effort!</span>
<span class="comment-copy">Thank you Dylan, I used this code in Keras for a while, so provided a ready solution that i remembered while looking at your post.</span>
