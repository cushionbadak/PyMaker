<div class="post-text" itemprop="text">
<p>I am writing something similar to an array, but with some tweaks. Of course, it should be iterable. But I do not really want to make another object as an iterator, and 'for I in myObject.generator()' seems too clunky for me. Is there any way to make a generator function that would work for 'for I in myObject'?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use a generator function for the <a href="https://docs.python.org/2/reference/datamodel.html#object.__iter__"><code>__iter__</code> method</a>:</p>
<pre><code>def __iter__(self):
    for value in self._values:
        yield value
</code></pre>
<p>This produces a new generator iterator object each time  <a href="https://docs.python.org/2/library/functions.html#iter"><code>iter()</code></a> is called on the object (which is what <code>for</code> does <em>for you</em> when you use your object in a loop).</p>
</div>
<span class="comment-copy">Look into the <code>__iter__</code> magic method <a href="https://docs.python.org/3/library/stdtypes.html#iterator-types" rel="nofollow noreferrer"><b>iter</b></a></span>
