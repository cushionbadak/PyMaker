<div class="post-text" itemprop="text">
<p>I have 2 questions about Python3 and PySerial (serial module).</p>
<p>I must send data over USB port to my IC's stand-alone ATMega32. A possible snippet code:</p>
<pre><code>import serial
data=serial.Serial(port, speed)

first_data=99.7 # Float point data.
second_data=100 # Only int data like 10, 345, 2341 and so on.
third_data=56.7 # Float data

ValueToWrite=????? # How to convert it?

send=data.write(ValueToWrite)
</code></pre>
<p>Now if I try to send "first_data" with "ValueToWrite=firts_data" I have this error:</p>
<pre><code>TypeError: 'float' object is not iterable
</code></pre>
<p>Well. Reading documentation about method <strong>write</strong> (class <strong>serial.Serial</strong> - <a href="http://pyserial.readthedocs.io/en/latest/pyserial_api.html" rel="nofollow">http://pyserial.readthedocs.io/en/latest/pyserial_api.html</a>) I see:</p>
<blockquote>
<p>Write the bytes data to the port. This should be of type bytes (or compatible such as bytearray or memoryview). Unicode strings must be encoded (e.g. 'hello'.encode('utf-8').</p>
</blockquote>
<ol>
<li>My first question: I don't understand how to send my float and int data. How to convert them into string?</li>
<li><p>My second question: I'd like to send data all together, a unique value like this:</p>
<p>99.7F100S56.7T</p></li>
</ol>
<p>In this case, using ATMega's Firmware, I can split and update data in the corresponding variables, when encountered "F" character for the first data, "S" character for the second data and so on.</p>
<p>How to do this in Python3 using pyserial?</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>converting float, int or most other non-strings to strings by using the <a href="https://docs.python.org/3/library/functions.html#func-str" rel="nofollow">string function</a>, e.g. in your case </li>
</ol>
<p><code>str(first_data)</code></p>
<p>would output '99.7' (a string).</p>
<ol start="2">
<li>by using the <a href="https://docs.python.org/3.1/library/string.html#string-formatting" rel="nofollow">string format method</a>, e.g. </li>
</ol>
<p><code>'{0}F{1}S{2}T'.format(first_data, second_data, third_data)</code></p>
<p>would output '99.7F100S56.7T'</p>
<p>These strings you can use as parameters to serial.send</p>
</div>
<span class="comment-copy">you can probably simply send <code>data.write("99.7F100S56.7T")</code></span>
<span class="comment-copy">Thanks @njzk2 :  sorry for my poor explanation, but variables change in "quasi real time", every 0.5 seconds. My snippet code would be just a very simple example</span>
<span class="comment-copy">Yes, it works like a treat.  I used your suggestion then I used "strtok(char *str, const char delim)-like C" function in the firmware to separate every field.</span>
