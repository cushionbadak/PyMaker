<div class="post-text" itemprop="text">
<p>I had created simple server in terminal</p>
<pre><code>python -m SimpleHTTPServer 8000
</code></pre>
<p>when I send command <code>curl -I http://localhost:8000</code></p>
<p>and command result was a request:</p>
<p><code>127.0.0.1 - - [07/Aug/2016 14:53:22] "GET / HTTP/1.1" 200 -</code></p>
<p>but response was a <code>HTTP/1.0</code></p>
<pre><code>HTTP/1.0 200 OK
Server: SimpleHTTP/0.6 Python/2.7.12
Date: Sun, 07 Aug 2016 10:02:08 GMT
Content-type: text/html; charset=utf-8
Content-Length: 9747
</code></pre>
<p><code>curl -v http://localhost:8000</code></p>
<pre><code>* Rebuilt URL to: http://localhost:8000/
*   Trying ::1...
* connect to ::1 port 8000 failed: Connection refused
*   Trying 127.0.0.1...
* Connected to localhost (127.0.0.1) port 8000 (#0)
&gt; GET / HTTP/1.1
&gt; Host: localhost:8000
&gt; User-Agent: curl/7.43.0
&gt; Accept: */*
&gt;
* HTTP 1.0, assume close after body
&lt; HTTP/1.0 200 OK
&lt; Server: SimpleHTTP/0.6 Python/2.7.12
&lt; Date: Sun, 07 Aug 2016 10:02:23 GMT
&lt; Content-type: text/html; charset=utf-8
&lt; Content-Length: 9747
&lt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&gt;&lt;html&gt;
...
&lt;/html&gt;
* Closing connection 0
</code></pre>
<p>How we can explain this? Why server response was not a <code>HTTP/1.1</code></p>
</div>
<div class="post-text" itemprop="text">
<p><code>curl</code> uses HTTP/1.1 by default from version 7.33.0 (yours is 7.43.0). In <code>man curl</code>:</p>
<pre><code>--http1.1
              (HTTP) Tells curl to use HTTP version 1.1. This is the internal default version. (Added in 7.33.0)
</code></pre>
<p>So <code>curl</code> will make a request with <code>HTTP/1.1</code> to your server. </p>
<p>This line
<code>
127.0.0.1 - - [07/Aug/2016 14:53:22] "GET / HTTP/1.1" 200 -
</code></p>
<p>is just a log entry which tells you that there is a request made with expected to get <code>HTTP/1.1</code> BUT it doesn't mean server must response with <code>HTTP/1.1</code>, see the link of Karoly Horvath for detail.</p>
<p>Looking at source code of <code>SimpleHTTPServer</code>, you can see there is a <a href="https://hg.python.org/cpython/file/2.7/Lib/BaseHTTPServer.py#l230" rel="nofollow">default request version</a> which is <code>HTTP/0.9</code>.</p>
<p>This <code>default_request_version</code> variable is then assigned to <code>self.request_version</code> in line 244.</p>
<p>The function which does the response is <code>send_response</code> and at line 402 there is a comparison with <code>HTTP/0.9</code>, this leads to the protocol version is <code>protocol_version</code> is <code>HTTP/1.0</code> in <a href="https://hg.python.org/cpython/file/2.7/Lib/BaseHTTPServer.py#l515" rel="nofollow">line 515</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It's just a version number, the server supports the older 1.0 protocol.</p>
<p>See <a href="https://stackoverflow.com/questions/246859/http-1-0-vs-1-1">HTTP 1.0 vs 1.1</a></p>
</div>
<span class="comment-copy">I've not used anything like this before in Python so I might be completely out of the ball park but from a Google search I found something that might explain it: <a href="https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.protocol_version" rel="nofollow noreferrer">BaseHTTPRequestHandler.protocol_version</a>: "This specifies the HTTP protocol version used in responses." Perhaps there's a <code>protocol_version</code> property you can set for <code>SimpleHTTPServer</code> before you launch it.</span>
<span class="comment-copy">Thank you, cuongnv!</span>
<span class="comment-copy">Actually, curl has used HTTP/1.1 since a lot longer than so, like basically forever.</span>
<span class="comment-copy">Thank you, Karoly!</span>
