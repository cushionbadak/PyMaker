<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/85451/pythons-time-clock-vs-time-time-accuracy">Python's time.clock() vs. time.time() accuracy?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>I thought both measure the amount of time? But they return very different numbers and I don't understand what the documentation is saying. Can anyone elaborate?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>time.clock()</code> gives you an <em>elapsed amount of time</em>. <code>time.time()</code> gives you the <em>wall clock time</em>.</p>
<p>You can use <code>time.time()</code> to communicate with others (including humans) about when something happened. <code>time.clock()</code> only lets you measure how <em>long</em> something takes.</p>
<p>Generally speaking, you'd use <code>time.clock()</code> when you want to measure timings, <code>time.time()</code> to schedule something. To that end <code>time.time()</code> has to be set correctly on your computer (to agree with the rest of your region as to what time it is now), but <code>time.clock()</code> doesn't, it just counts seconds from an arbitrary point in time (usually when your computer started or when your process first used the function).</p>
<p>The exact behaviour of <code>time.clock()</code> depends on your OS (it could just measure process time, excluding time sleeping, or it could measure time elapsed even when the process is inactive, it could go <em>backwards</em> if your system time is adjusted, etc).</p>
<p>For some use-cases this variability in exact behaviour isn't good enough, and as such it is deprecated in Python 3. There better options are available for either measuring performance or process time, see <a href="https://docs.python.org/3/library/time.html#time.perf_counter" rel="nofollow"><code>time.perf_counter()</code></a> and <a href="https://docs.python.org/3/library/time.html#time.process_time" rel="nofollow"><code>time.process_time()</code></a>.</p>
</div>
<span class="comment-copy">also <code>time.clock()</code> is machine dependent and is currently deprecated.</span>
<span class="comment-copy">@warownia1: Python 3 has better options, yes.</span>
<span class="comment-copy">@MartijnPieters In that case why does the following return complete different answers? <code>s = time.time()  time.sleep(10) print((time.time()-s))</code> and <code>s = time.clock()  time.sleep(10) print((time.clock()-s)) </code>  @warownia1 what are the python 3 options? I just need to measure how long a function took to execute.</span>
<span class="comment-copy">if you want to measure performance, use <code>timeit</code> module</span>
<span class="comment-copy">@JRR: you used <code>time.sleep(10)</code>. It depends on your OS if <code>time.clock()</code> includes that time at all. I did include that info in my answer already.</span>
