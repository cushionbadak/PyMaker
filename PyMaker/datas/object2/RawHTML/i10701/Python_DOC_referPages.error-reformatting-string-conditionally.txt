<div class="post-text" itemprop="text">
<p>I had this subsection of my application working yesterday, and I can't seem to find out why it's not working now.</p>
<p>Here's what it should do:</p>
<p>Input: <code>10th ave 501</code></p>
<p>Output: <code>501 10th ave</code></p>
<p>This block of code is supposed to search for one of the target words in a list called <code>patterns</code>, and if there is a number with <code>len &lt;= 4</code> after it, move it to the front of the string. <code>patterns</code> contains words such as <code>ave, street, road, place</code>.</p>
<p>Here is my code:</p>
<pre><code>address = address.split(' ')
for pattern in patterns:
    try:
        if address[0].isdigit():
            continue
        location = address.index(pattern) + 1
        number_location = address[location]
        if 'th' in address[location + 1] or 'floor' in address[location + 1] or '#' in address[location]:
            continue
    except (ValueError, IndexError):
        continue
    if number_location.isdigit() and len(number_location) &lt;= 4:
        address = [number_location] + address[:location] + address[location+1:]
        break
address = ' '.join(address)

print address
</code></pre>
<p>Currently the output is just the exact same as what I inputted. i.e <code>10th ave 501</code> is returning <code>10th ave 501</code>. I feel like it's something relatively obvious that i'm glancing over.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>'10th'.isdigit()</code> is <code>False</code> since:</p>
<blockquote>
<p>Return true if <strong>all</strong> characters in the string are digits (<a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow">source</a>)</p>
</blockquote>
<p>If you wish, you can check only the first character:</p>
<pre><code>if number_location[0].isdigit() and len(number_location) &lt;= 4:
</code></pre>
</div>
<span class="comment-copy">One tip for easier understanding of your code: only put one type of data in a single variable name.  Eg you have <code>address</code> as a string and also as a list (<code>address = address.split(' ')</code>).</span>
<span class="comment-copy">How is the length of 501 not less than or equal to 4?</span>
<span class="comment-copy">@Harrison If this is not homework and you want to deal with the problem of normalizing streets maybe this <a href="https://github.com/openvenues/pypostal" rel="nofollow noreferrer">package</a> could help you out</span>
<span class="comment-copy">oh nevermind, I always mix up with less than / greater than.</span>
<span class="comment-copy">@BPL This is not homework. And i've looked at address validation/normalizing packages however they can't benefit me. The address quality that i'm getting is so poor that it has to be cleaned/formatted a lot prior to me being able to geocode them (the goal).</span>
<span class="comment-copy">Makes sense. This is supposed to handle cases where correct addresses also pass through the application, such as <code>501 10th ave</code>. What can I do to handle all cases? By this I mean if an address already starts with a # then it passes through, but anything else will get tested.</span>
<span class="comment-copy">I'm not sure what are all the cases. You need to define yourself all the options and then work it out.</span>
