<div class="post-text" itemprop="text">
<p>In my xml file, I have nodes like this:</p>
<pre><code>&lt;waitingJobs idList="J03ac2db8 J03ac2fb0"/&gt;
</code></pre>
<p>I know how to use <code>.findall</code> to search for attributes but now, it looks like I would need to use regular expressions because <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#supported-xpath-syntax" rel="nofollow">I can't just use</a> </p>
<pre><code>root.findall('./[@attrib='value']')
</code></pre>
<p>I'd have to use</p>
<pre><code>root.findall('./[@attrib='*value*']')
</code></pre>
<p><strong>QUESTION</strong></p>
<ol>
<li>Is this possible with <code>xml.etree</code>?</li>
<li>How do you do this with <code>lxml</code>?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Unfortunately, things like <code>contains()</code> and <code>starts-with()</code> are not supported by <code>xml.etree.ElementTree</code> built-in library. You can manually check the attribute, finding all <code>waitingJobs</code> and using <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.attrib" rel="nofollow"><code>.attrib</code></a> to get to the <code>idList</code> value:</p>
<pre><code>import xml.etree.ElementTree as ET

data = """&lt;jobs&gt;
    &lt;waitingJobs idList="J03ac2db8 J03ac2fb0"/&gt;
&lt;/jobs&gt;
"""

root = ET.fromstring(data)
value = 'J03ac2db8'
print([elm for elm in root.findall(".//waitingJobs[@idList]") 
       if value in elm.attrib["idList"]])
</code></pre>
<p>With <code>lxml.etree</code>, you can use <code>xpath()</code> method and <code>contains()</code> function:</p>
<pre><code>import lxml.etree as ET

data = """&lt;jobs&gt;
    &lt;waitingJobs idList="J03ac2db8 J03ac2fb0"/&gt;
&lt;/jobs&gt;
"""

root = ET.fromstring(data)

value = 'J03ac2db8'
print(root.xpath(".//waitingJobs[contains(@idList, '%s')]" % value))
</code></pre>
</div>
<span class="comment-copy">sigh. I guess it's finally time to move to <code>lxml</code>. For how sucky <code>xml.etree</code> is, why is it still included in Python? Why isn't <code>lxml</code> the default????</span>
<span class="comment-copy">@Adrian well, this is definitely sad, but the beauty of Python is also that huge variety of the third-parties available on the PyPI. A little about why the xpath support is limited: <a href="http://stackoverflow.com/questions/10982557/the-limit-of-element-tree-on-xpath" title="the limit of element tree on xpath">stackoverflow.com/questions/10982557/â€¦</a>. Thanks.</span>
