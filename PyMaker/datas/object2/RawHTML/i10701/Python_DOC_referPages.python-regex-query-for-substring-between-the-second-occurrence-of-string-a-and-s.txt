<div class="post-text" itemprop="text">
<p>I'm trying to parse some values from a raw output and having difficulties with the regex expression. The raw string contains two or more values with the same 'start' keyword. This is what I have so far, which gives me the first instance:</p>
<pre><code>def parser(s, start, end):
    try:
        result = re.search('%s(.*)%s' % (start, end), s).group(1).strip()
    except:
        result = ""
    print(result)
    return result
</code></pre>
<p>How do I get the second instance between the same 'start' and 'end'? Thanks in advance!</p>
<p>Example:</p>
<pre><code>s = "verylongstring\n   Name Server: IDNS1.NETSOL.COM\n   Name Server: IDNS2.NETSOL.COM\n   Status: clientTransferProhibited...."
start = "Name Server: "
end = "\n"
</code></pre>
<p>Desired output:</p>
<pre><code>server1 = IDNS1.NETSOL.COM
server2 = IDNS2.NETSOL.COM
</code></pre>
<p>I can get server1, but not 2.</p>
<pre><code>server1 = parser(s, start, end)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = "verylongstring\n   Name Server: IDNS1.NETSOL.COM\n   Name Server: IDNS2.NETSOL.COM\n   Status: clientTransferProhibited...."
start = "Name Server: "
end = "\n"
import re
re.findall(start + "(.*?)" + end, s)
</code></pre>
<p>The output is:</p>
<pre><code>['IDNS1.NETSOL.COM', 'IDNS2.NETSOL.COM']
</code></pre>
<p>and the function can be like this:</p>
<pre><code>def parser(s, start, end):
    result = [l.strip() for l in re.findall(start + "(.*?)" + end, s)]
    return result
</code></pre>
<p>for the same <code>s</code> <code>start</code> <code>end</code>:</p>
<pre><code>&gt;&gt;&gt;parser(s, start, end)
&gt;&gt;&gt;['IDNS1.NETSOL.COM', 'IDNS2.NETSOL.COM']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works on the given example.</p>
<pre><code>def parser(s, start, end):
    arr = [x.split(start)[1] for x in s.split('\n') if start in x]
    return arr
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also make use of <a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow"><code>re.finditer</code></a> which will create an iterator that will be exhausted until the end of your string:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pat = re.compile(r'Name Server:(?P&lt;Server_Name&gt;.*?)\n')
&gt;&gt;&gt; 
&gt;&gt;&gt; s
'verylongstring\n   Name Server: IDNS1.NETSOL.COM\n   Name Server: IDNS2.NETSOL.COM\n   Status: clientTransferProhibited....'
&gt;&gt;&gt; 
&gt;&gt;&gt; 
&gt;&gt;&gt; for match in pat.finditer(s):
        print(match.group('Server_Name').strip())


IDNS1.NETSOL.COM
IDNS2.NETSOL.COM
&gt;&gt;&gt; 
&gt;&gt;&gt; [match.group('Server_Name').strip() for match in pat.finditer(s)]
['IDNS1.NETSOL.COM', 'IDNS2.NETSOL.COM']
</code></pre>
</div>
<span class="comment-copy">can you provide an example?</span>
<span class="comment-copy">If possible, please post input and expected output</span>
