<div class="post-text" itemprop="text">
<p>I want to skip blank line (no value entered by user). I get this error.</p>
<pre><code> Traceback (most recent call last):
  File "candy3.py", line 16, in &lt;module&gt;
    main()
  File "candy3.py", line 5, in main
    num=input()
  File "&lt;string&gt;", line 0

    ^
SyntaxError: unexpected EOF while parsing
</code></pre>
<p>My code is:</p>
<pre><code>def main():
    tc=input()
    d=0
    while(tc!=0):
        num=input()
        i=0
        count=0
        for i in range (0, num):
            a=input()
            count=count+a
        if (count%num==0):
            print 'YES'
        else:
            print 'NO'
        tc=tc-1     
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use raw_input, and convert manually. This is also more save. For a full explaination, see <a href="https://en.wikibooks.org/wiki/Python_Programming/Input_and_Output#input.28.29" rel="nofollow">here</a>.
For example, you could use the code below to skip anything which is not an integer.</p>
<pre><code>x = None
while not x:
try:
    x = int(raw_input())
except ValueError:
    print 'Invalid Number'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The behaviour you're getting is expected, read the <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow">input</a> docs.</p>
<blockquote>
<p>input([prompt])</p>
<p>If the prompt argument is present, it is written to standard output without a trailing newline. The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that. When EOF is read, EOFError is raised</p>
</blockquote>
<p>Try something like this and the code will be capturing the possible exceptions produced by input function:</p>
<pre><code>if __name__ == "__main__":
    tc = input("How many numbers you want:")
    d = 0
    while(tc != 0):
        try:
            num = input("Insert number:")
        except Exception, e:
            print "Error (try again),", str(e)
            continue

        i = 0
        count = 0
        for i in range(0, num):
            try:
                a = input("Insert number to add to your count:")
                count = count + a
            except Exception, e:
                print "Error (count won't be increased),", str(e)

        if (count % num == 0):
            print 'YES'
        else:
            print 'NO'
        tc = tc - 1
</code></pre>
</div>
<span class="comment-copy">which version of python are you running?</span>
<span class="comment-copy">Thanks a lot... it helped.</span>
