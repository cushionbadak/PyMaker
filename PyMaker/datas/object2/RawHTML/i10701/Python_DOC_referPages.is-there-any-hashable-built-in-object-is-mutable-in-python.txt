<div class="post-text" itemprop="text">
<p>Curious about whether we can use hash() to check if an object is mutable or not?</p>
</div>
<div class="post-text" itemprop="text">
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; from collections.abc import Hashable
&gt;&gt;&gt; mutable = [list, bytearray, set, dict]
&gt;&gt;&gt; immutable = [int, float, complex, str, tuple, frozenset, bytes]
&gt;&gt;&gt; all(isinstance(x(), Hashable) for x in immutable)
True
&gt;&gt;&gt; any(isinstance(x(), Hashable) for x in mutable)
False
</code></pre>
<p>all mutable objects are unhashable.</p>
</div>
<span class="comment-copy">What is the problem you're <i>actually</i> trying to solve?</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer"><code>__hash__</code></a>. Strictly speaking, it's possible. The requirement is that <b>any properties involved in equality are immutable</b>. Properties not involved in equality could be mutable. This is, however, <i>extremely</i> ill-advised. Why do you need to know if a particular object is mutable?</span>
<span class="comment-copy">To what end? Why does it matter to you whether a given thing is mutable? That's not the problem you're trying to solve, that's how you're trying to solve it.</span>
<span class="comment-copy">@jonrsharpe I think how to satisfy his curiosity is the problem he wants to solve. Is it reasonable?</span>
<span class="comment-copy">@HaochenWu it's not unreasonable, but it's <i>useful to mention</i>, and more or less completely pointless to speculate on.</span>
