<div class="post-text" itemprop="text">
<p>I have a list of string:
How to return strings end with 'Low' or end with 'High'  or start with 'NQ_'?</p>
<pre><code>list=[
 'ES_Low',
 'NQ_High',
 'NQ_Low',
 'NQ_Close',
 'NQ_Volume',
 'GC_Open',
 'GC_High',
 'GC_Volume']

AnswerDesired=[
     'ES_Low',
     'NQ_High',
     'NQ_Low',
     'NQ_Close',
     'NQ_Volume',
     'GC_High']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As said in the comments: not really a need for regular expressions here.</p>
<pre><code>lst=[
 'ES_Low',
 'NQ_High',
 'NQ_Low',
 'NQ_Close',
 'NQ_Volume',
 'GC_Open',
 'GC_High',
 'GC_Volume']

def cleanse(item):
    if item.endswith('Low') \
    or item.endswith('High') \
    or item.startswith('NQ_'):
        return True

desired = list(filter(cleanse, lst))
print(desired)
# ['ES_Low', 'NQ_High', 'NQ_Low', 'NQ_Close', 'NQ_Volume', 'GC_High']
</code></pre>
<p>See <a href="http://ideone.com/PJFVI2" rel="nofollow"><strong>a demo on ideone.com</strong></a> additionally.
<hr/>
Of course, the same can be achieved with regular expression as well:</p>
<pre><code>import re
rx = re.compile(r'(?:^NQ_)|(?:(?:Low|High)$)')
desired = [item for item in lst if rx.search(item)]
print(desired)
# ['ES_Low', 'NQ_High', 'NQ_Low', 'NQ_Close', 'NQ_Volume', 'GC_High']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hope this code will do that,</p>
<pre><code>import re
list=['ES_Low','NQ_High','NQ_Low','NQ_Close','NQ_Volume','GC_Open','GC_High','GC_Volume']
for i in list:
    if (re.search("^NQ_|Low$|High$", i)):
        print i
</code></pre>
<p>Output:</p>
<pre><code>ES_Low
NQ_High
NQ_Low
NQ_Close
NQ_Volume
GC_High
</code></pre>
</div>
<span class="comment-copy">Start by reading the "<a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">Regular Expression HOWTO</a>"; the alternation metacharacter (<code>|</code>) is the first in the "<a href="https://docs.python.org/3/howto/regex.html#more-metacharacters" rel="nofollow noreferrer">More Metacharacters</a>" section.  Refer to the <a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow noreferrer"><code>re</code> module's docs</a> as needed.  Or, if you <i>only</i> need to worry about starts and endings, check out the string <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith" rel="nofollow noreferrer"><code>endswith</code></a> methods.</span>
<span class="comment-copy">No need for regular expressions here. Use a list comprehension with <code>startswith()</code> and <code>endswith()</code>.</span>
<span class="comment-copy">@Jan:  Touche...  Got me while I was editing.</span>
<span class="comment-copy">@KevinJ.Chase: Provided an example, but OP does not seem to respond anymore ;-)</span>
<span class="comment-copy">You do not need the <code>.+</code> before the <code>$</code> if you'd use <code>re.search()</code>.</span>
<span class="comment-copy">Hey thanx <a href="http://stackoverflow.com/users/1231450/jan">Jan</a>. I updated the code.</span>
