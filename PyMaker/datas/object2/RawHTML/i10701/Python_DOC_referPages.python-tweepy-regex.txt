<div class="post-text" itemprop="text">
<p>I'm using Tweepy streamer to collect some tweets for certain tags, in this case #python.  The streamer part of the script works fine but where I'm struggling is extracting the information from the output. </p>
<p>Tweepy sample:
{"created_at":"Fri Aug 05 17:27:00 +0000 2016","id":761614496666361857,"id_str":"761614496666361857","text":<strong>"Use different Python version with virtualenv #py                                                                                thon #virtualenv #virtualenvwrapper https://t.co/ecedKrCX0L"</strong>,"source":</p>
<p>From the sample, I want to extract and print the bold text however I can't seem to get this to work properly.  So far I've come up with:</p>
<pre><code>class MyListener(StreamListener):
        def on_data(self, data):
                try:
                        pattern = re.compile(r'"text":"(.*?)","')
                        for line in data:
                                        x = pattern.search(data)
                                        f = open('tmp', 'a')
                                        f.write(data)
                                        f.close
                                        return True
                        else:
                                pass

                except BaseException as e:
                        print("Error on_data: %s" % str(e))
                        return True
</code></pre>
<p>However this doesn't extract the specifics I'm after and continues to print a full tweepy output. </p>
<p>Any assistance would be appreciated! </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The easisest way if you want to extract the text is with json module.</p>
<pre><code>import json
class MyListener(StreamListener):

    def on_data(self, data):
            try:
                    json.loads(data)
                    f = open('tmp', 'a')
                    f.write(data["text"])
                    f.close()
            except BaseException as e:
                    print("Error on_data: %s" % str(e))
                    return True
</code></pre>
<p>But if you want to use a regular expression this will be the code:</p>
<pre><code>class MyListener(StreamListener):
    def on_data(self, data):
            try:
                    pattern = re.compile(r'"text":"([^",]*)","')
                    for line in data:
                                    x = pattern.search(data)
                                    f = open('tmp', 'a')
                                    f.write(data)
                                    f.close
                                    return True
                    else:
                            pass

            except BaseException as e:
                    print("Error on_data: %s" % str(e))
                    return True
</code></pre>
</div>
<span class="comment-copy">Smells like JSON. Have you tried the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON Module</a> yet?</span>
<span class="comment-copy">Not yet, that's probably next on the list.  Did try the CSV module without any luck but i'm not 100% if its JSON.  Will investigate further!</span>
<span class="comment-copy">It's 100% JSON, based on the example you gave.</span>
