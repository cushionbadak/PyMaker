<div class="post-text" itemprop="text">
<p>I need a structure in Python which maps an integer index to a vector of floating point numbers. My data is like:</p>
<pre><code>[0] = {1.0, 1.0, 1.0, 1.0}
[1] = {0.5, 1.0}
</code></pre>
<p>If I were to write this in C++ I would use the following code for define / add / access as follows:</p>
<pre><code>std::unordered_map&lt;int, std::vector&lt;float&gt;&gt; VertexWeights;
VertexWeights[0].push_back(0.0f);
vertexWeights[0].push_back(1.0f);
vertexWeights[13].push_back(0.5f);
std::cout &lt;&lt;vertexWeights[0][0];
</code></pre>
<p>What is the equivalent structure of this in Python? </p>
</div>
<div class="post-text" itemprop="text">
<p>A <strong><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionary</a></strong> of this format -&gt; <code>{ (int) key : (list) value  }</code></p>
<pre><code>d = {}  # Initialize empty dictionary.
d[0] = [1.0, 1.0, 1.0, 1.0] # Place key 0 in d, and map this array to it.
print d[0]
d[1] = [0.5, 1.0]
print d[1]
&gt;&gt;&gt; [1.0, 1.0, 1.0, 1.0]
&gt;&gt;&gt; [0.5, 1.0]
print d[0][0]  # std::cout &lt;&lt;vertexWeights[0][0];
&gt;&gt;&gt; 1.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about dictionary and lists like this:</p>
<pre><code>&gt;&gt;&gt; d = {0: [1.0, 1.0, 1.0, 1.0], 1: [0.5, 1.0]}
&gt;&gt;&gt; d[0]
[1.0, 1.0, 1.0, 1.0]
&gt;&gt;&gt; d[1]
[0.5, 1.0]
&gt;&gt;&gt; 
</code></pre>
<p>The key can be integers and associated values can be stored as a list. Dictionary in Python is a hash map and the complexity is amortized <code>O(1)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would go for a <code>dict</code> with integers as keys and <code>list</code> as items, e.g.</p>
<pre><code>m = dict()
m[0] = list()
m[0].append(1.0)
m[0].append(0.5)
m[13] = list()
m[13].append(13.0)
</code></pre>
<p>if it is not too much data</p>
</div>
<span class="comment-copy">in c++ if there isn't a key lets say d[15], then it is automatically created. But in Pyhton I get key error. Is there a way to overcome this ?</span>
<span class="comment-copy">Yep, C++ and python work in the same way in this regard. Updated my answer. Python's dictionary literal is essentially an unordered map. @Cihan</span>
<span class="comment-copy">@Cihan try <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict(list)</code></a>.</span>
<span class="comment-copy">There should be <code>m[13] = list()</code> before <code>m[13].append(13.0)</code>.</span>
<span class="comment-copy">of course you are right</span>
