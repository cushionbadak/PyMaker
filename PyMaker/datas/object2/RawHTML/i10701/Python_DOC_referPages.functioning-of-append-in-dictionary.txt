<div class="post-text" itemprop="text">
<p>Please explain the use of <code>append</code> function in the following example:</p>
<p>Example 1:</p>
<pre><code>new = {}
for (key, value) in data:
    if key in new:
        new[key].append( value )
    else:
        new[key] = [value]
</code></pre>
<p>and in example 2:</p>
<pre><code>new = {}
for (key, value) in data:
    group = new.setdefault(key, []) 
    group.append( value )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>new</code> is a dictionary, but the dictionary’s value are lists, which have the <a href="https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types" rel="nofollow"><code>list.append()</code></a> method.</p>
<p>In the loop, the dictionary is being filled with the values from <code>data</code>. Apparently, it is possible that there are multiple values for a single <code>key</code>. So in order to save that within a dictionary, the dictionary needs to be able to store multiple values for a key; so a list is being used which then holds all the values.</p>
<p>The two examples show two different ways of making sure that the dictionary value is a list when the key is new.</p>
<p>The first example explicitly checks if the key is already in the dictionary using <code>key in new</code>. If that’s the case, you can just append to the already existing list. Otherwise, you need to add a new list to the dictionary.</p>
<p>The second example uses <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow"><code>dict.setdefault</code></a> which sets a value <em>if</em> the key does not exist yet. So this is a special way of making sure that there’s always a list you can append the value to.</p>
</div>
<span class="comment-copy">The <code>append</code> function is not part of the dictionary. It's a method on the list that is stored as a value in the dictionary</span>
