<div class="post-text" itemprop="text">
<p>I have a sensor value which can be read using the C++ only because it was implemented using it , I want to pass location value (two float variable) of one sensor to Python. I have been reading a lot and I found shared memory , piping and more any idea what is the best way to do it ?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not clear from your question whether this is a standalone C++ program or a library.</p>
<p>If it's a standalone program, use the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">subprocess</a> module to invoke it and read its output.</p>
<p>If it's a library, use <a href="http://cython.org/" rel="nofollow">Cython</a> to construct a Python extension module that wraps the library.  (It is not <em>necessary</em> to use Cython; Python extensions <em>can</em> be written by hand.   But it will make the task significantly easier.)</p>
</div>
<div class="post-text" itemprop="text">
<p>@ramtha Z28 with the limited information you provided... do you have access to the C++ code itself or are you calling a DLL?  You can wrap a function in Cython easily to communicate between Python and C++ if you have the source code.  Wrap all the C++ blocks in <code>cpdef</code> statements which are accessible from Python and C++.  Example files are here which show you how to include a C program in Cython and interact with Python: <a href="https://github.com/cythonbook/examples/tree/master/07-wrapping-c/01-wrapping-c-functions-mt-random" rel="nofollow">https://github.com/cythonbook/examples/tree/master/07-wrapping-c/01-wrapping-c-functions-mt-random</a></p>
<p>If it is a DLL you have to declare all the constants, functions, return values.  Actually this example may be something like what you're using already: <a href="http://people.seas.harvard.edu/~krussell/html-tutorial/wrap_dll.html" rel="nofollow">http://people.seas.harvard.edu/~krussell/html-tutorial/wrap_dll.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not familiar with python however, a simple approach is to use some communication protocols such as serial ports or udp which is a network protocol. For real-time applications, UDP protocol is a preferable choice. </p>
</div>
<span class="comment-copy">What device are you working with? Maybe there's a python lib somewhere that will do the task just like the C++ one does?</span>
