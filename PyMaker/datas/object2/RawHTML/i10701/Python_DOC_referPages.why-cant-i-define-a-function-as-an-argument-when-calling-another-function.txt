<div class="post-text" itemprop="text">
<p>I know functions can be passed around as arguments in Python, but I don't get why I can't do this: </p>
<pre><code>&gt;&gt;&gt; def foo(bar): return bar()
... 
&gt;&gt;&gt; foo(def a(): return 'hello')
  File "&lt;stdin&gt;", line 1
    foo(def a(): return 'hello')
          ^
SyntaxError: invalid syntax
</code></pre>
<p>when this is perfectly valid:</p>
<pre><code>&gt;&gt;&gt; def foo(bar): return bar()
... 
&gt;&gt;&gt; def a(): return 'hello'
... 
&gt;&gt;&gt; foo(a)
'hello'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>def</code> is a statement. If you want an anonymous function then use a <code>lambda</code> expression.</p>
<pre><code>foo(lambda: 'hello')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't use <code>def</code> for that. For the object representation of a function, you can use a <code>lambda</code>.</p>
<pre><code>foo(lambda a: 'hello')
</code></pre>
<p>Or you can use the name of a function as your second example shows.</p>
</div>
<span class="comment-copy">Because that's what the language syntax says. A <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow noreferrer">function definition</a> is a compound statement, it can't be a function argument.</span>
<span class="comment-copy">To anticipate further curiosity from the OP, it's worth noting that the range of functions you can create in a lambda is limited.  It's a feature that you can't shove complicated multi-line code into an expression.</span>
