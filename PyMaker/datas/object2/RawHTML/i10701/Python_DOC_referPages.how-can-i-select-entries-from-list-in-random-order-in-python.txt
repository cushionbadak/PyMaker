<div class="post-text" itemprop="text">
<p>Question is simple. I have a list of say 10 entries, I am running a loop over it. What i want here is getting each entry exactly once but in random order.</p>
<p>What is the best and most pythonic way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow"><code>random.sample</code></a>, it returns random elements preventing duplicates:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; data = range(10)
&gt;&gt;&gt; print(random.sample(data, len(data)))
[2, 4, 8, 7, 0, 5, 6, 3, 1, 9]
</code></pre>
<p>The original list remains unchanged.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/random.html" rel="nofollow"><code>random.shuffle</code></a>:</p>
<pre><code>In [1]: import random

In [3]: a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

In [4]: random.shuffle(a)

In [5]: a
Out[5]: [3, 6, 9, 1, 8, 0, 4, 7, 5, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Shuffle the list first by importing the <code>random</code> module and using the <code>shuffle</code> function:</p>
<pre><code>import random
x = ... # A list
random.shuffle(x)
</code></pre>
<p>Then loop over your list. Note that <code>shuffle</code> mutates the original list and does not return the shuffled version. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use shuffle:</p>
<pre><code>import random

random.shuffle(yourlist)

# loop as you would normally
for item in yourlist:
.....
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could use <a href="https://docs.python.org/3.5/library/random.html#random.shuffle" rel="nofollow"><code>random.shuffle()</code></a>:</p>
<pre><code>import random

original = range(10)
# Make a copy of the original list, as shuffling will be in-place
shuffled = list(original)
random.shuffle(shuffled)
</code></pre>
<p>Valid remark from Jean-François Fabre: if you were to use the <code>original</code> variable and pass it directly to <code>random.shuffle</code>, Python would return an error, stating <code>'range' object does not support item assignment</code>, as <code>range</code> returns a generator. </p>
<p>To solve this, simply replace the assignment with <code>list(range(10))</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random
s=set(range(10))

while len(s)&gt;0:
  s.remove(random.choice(yourlist(s)))
  print(s)
</code></pre>
</div>
<span class="comment-copy"><code>random.shuffle()</code></span>
<span class="comment-copy">Small typo: the <code>)</code> after <code>data</code> should be at the end of the statement.</span>
<span class="comment-copy">@Kristof thanks, fixed.</span>
<span class="comment-copy">It took me a moment to realize the essential difference between <code>sample</code> and <code>shuffle</code>, but your comment at the end makes it clear.</span>
<span class="comment-copy">Does not work with python 3 since <code>range</code> is an iterator. Apart from that, fine.</span>
<span class="comment-copy">@Jean-FrançoisFabre Thanks for the comment! Corrected.</span>
<span class="comment-copy">nice and portable way to correct it :) I was just telling that so you don't get downvotes from the mysterious downvoter here because it didn't work! Anyway, shuffling a range can be an operational case.</span>
<span class="comment-copy">Please explain if <code>a</code> is the data or the  indices.</span>
<span class="comment-copy">@OhadEytan <code>b = a[:]</code>, now perform it on <code>b</code>.</span>
<span class="comment-copy">what's the difference between upvoted question and this one (apart from the downvoting and the extra hint about the in-place thing)?</span>
<span class="comment-copy">It would be nice (and mature) for whomever is downvoting to explain <i>why</i>.</span>
<span class="comment-copy">I'm not the one who downvoted, however small suggestion: in python 3 you NEED to convert range to list because range is a generator (that's the particular case where you use range)</span>
<span class="comment-copy">Spot on, thanks for that. I've updated my answer to include your remark.</span>
<span class="comment-copy">This may return duplicate items.</span>
<span class="comment-copy">you are right, i need to use a set. Didnt test the code..fixing.</span>
<span class="comment-copy">Sets don't support <code>choice</code>.</span>
