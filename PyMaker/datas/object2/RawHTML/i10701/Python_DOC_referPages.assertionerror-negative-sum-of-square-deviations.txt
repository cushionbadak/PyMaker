<div class="post-text" itemprop="text">
<p>As part of a larger project, I am writing a function that takes in a dict of dicts of ints and returns a dict with each "outer" key linked to a tuple of the mean and standard deviation of that sub dictionary (i.e.  <code>(mean(dict[key1]), stdev(dict[key1]))</code> ). I am operating on a large dataset (the source file is a 2.8 GB csv file) and am getting an Assertion Error while calculating the standard deviation of one of the sub dicts. </p>
<p>While I will (and currently am) tracking down the sub dict that caused the error below, I'm curious about what general situation could cause it so I can try to avoid it if it happens further into my dataset.</p>
<p>The error message I receive is: </p>
<p><code>AssertionError: negative sum of square deviations: -3734262324235.697754</code> </p>
<p>from the code:</p>
<pre><code>import statistics as stat

try: #Check for single value error
    std = stat.stdev(val)
except stat.StatisticsError:
    std = 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The code in <code>statiscs.py</code> is pure Python - you seem to be a victim of a weird overflow error in the Fraction class, when processing the internal "sum of quares) <code>statistics._ss</code>  function. </p>
<p>I think the best thing you can do now is to isntrument the<code>_ss</code> function in the <code>statistics.py</code> file itself with an "if" and a call to <code>pdb.set_trace</code> to find interactively which data is causing the errors (there is a comment in the code that this part is subject to rounding errors). It calculates a fraction that shuld be zero - but for rounding errors, and squares that fraction. But upon squaring, the already large denominator is squared itself - which is probably triggering a bug inside Python's Fraction, and returning an extremely large value when it should be just close to zero.</p>
<p>Such an "if" clause can allow you to (1) bypass the error condition and run your code to the end, forcing the value to zero when the error is found; (2) note down the values that cause the error, and report that as  a bug to the Python language itself.</p>
</div>
<span class="comment-copy">I've assumed you are using Python Å› 3 statistics module (and edited your question) - please correct it back if it is not the case.</span>
<span class="comment-copy">That's correct, my bad for forgetting to specify</span>
<span class="comment-copy">The function def is on line 608 here: <a href="https://hg.python.org/cpython/file/3.5/Lib/statistics.py" rel="nofollow noreferrer">hg.python.org/cpython/file/3.5/Lib/statistics.py</a> - and the error is from the <code>_ss</code> function at line 493.  I'd say that looks like a check for erroneous data or an incorrect mean.</span>
<span class="comment-copy">From the size of that value, maybe you are running into precision or <i>overflow(?)</i> issues (that is an uneducated guess).  If you track down the offending dataset maybe convert the data to <a href="https://docs.python.org/3/library/decimal.html#module-decimal" rel="nofollow noreferrer"><code>decimal</code></a> objects and see if it behaves.</span>
