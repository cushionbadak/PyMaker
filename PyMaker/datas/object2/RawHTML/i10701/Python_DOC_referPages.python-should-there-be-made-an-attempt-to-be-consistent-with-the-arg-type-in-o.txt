<div class="post-text" itemprop="text">
<p>My doubt is simple. Should I do an effort to be consistent with argument types when using optional arguments?</p>
<p>An example:</p>
<pre><code>def example_method(str_arg_1=None):
    if str_arg_1 is not None:
        # do something
</code></pre>
<p>My <code>arg</code> is allways a <code>str</code>,except when it is not passed in the method call, so I'm not sure if is a good practice to use <code>None</code>in this case.</p>
<p>I came to this doubt because I don't know how to write my docstrings, is the <code>str_arg_1</code>consider <code>str</code> even if sometimes is <code>None</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Names don't have types; only the values they refer to have types. In this case, it is perfectly normal to document that <code>str_arg_1</code> will refer to a <code>str</code> object or <code>None</code>, with an explanation of what each means. As far as a docstring is concerned, it's safe to say everyone will understand what you mean if you state that an argument that <em>should</em> be a <code>str</code> may also take <code>None</code>.</p>
<hr/>
<p>In PEP-484, which deals with providing statically checkable type usage, this notion of using <code>None</code> is not just acceptable, but catered to.</p>
<p>If <code>str_arg_1</code> should <em>always</em> be a string, you would hint it as</p>
<pre><code>def example_method(str_arg_1: str):
</code></pre>
<p>If it is allowed be <code>None</code> as well, you would indicate that with a <em>union</em> type</p>
<pre><code>def example_method(str_arg_1: Union[str, None]):
</code></pre>
<p>As this is a very common case, there is a shortcut for indicating this:</p>
<pre><code>def example_method(str_arg_1: Optional[str]):
</code></pre>
<p>In fact, if the default value is <code>None</code>, the static checker that uses these type annotations assumes the use of <code>Optional</code>, so the following are equivalent:</p>
<pre><code>def example_method(str_arg_1: Optional[str] = None):
def example_method(str_arg_1: str = None):
</code></pre>
</div>
<span class="comment-copy">You could use  (str_arg_1 = '') and then test: if str_arg_1:</span>
<span class="comment-copy">If str_arg_1 is None it will be of None type. Not str type.You may verify this with type(str_arg_1).</span>
<span class="comment-copy">Looks like you're looking for <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">type hinting</a>?</span>
<span class="comment-copy">@lonewaft thank you, i wasn't aware that existed. Any way I'm not using python3.5 so I'm using docstrings for hints in the IDE</span>
<span class="comment-copy">@JacquesdeHooge Which may be wrong or problematic because then you can't distinguish the case of a caller not giving the optional argument and giving explicitly the empty string as argument.</span>
<span class="comment-copy">Well done. Much better than my answer was.</span>
