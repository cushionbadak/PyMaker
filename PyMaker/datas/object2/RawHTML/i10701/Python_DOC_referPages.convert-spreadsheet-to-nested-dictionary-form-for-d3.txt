<div class="post-text" itemprop="text">
<p>Having trouble with this one.  Feel as though I've whipped through similar transformations of data, but this one is throwing me for a <em>loop</em>.</p>
<p>Looking to convert a spreadsheet data into a nested JSON that will be used for a D3 visualization, seen it referred to as "<a href="https://gist.github.com/mbostock/1093025" rel="nofollow">flare.json</a>".</p>
<p>The target JSON would look something like this (where, obviously, a dictionary would be just as good):</p>
<pre><code>{
  "name": "root",
  "children": [
    { 
      "name": "A1",
      "children": [
        { 
          "name": "A2",
          "children": [
            { 
              "name": "A3",
              "children": [
                { 
                  "name": "A4",
                  "children": [
                  ] 
                }
              ]
            }
          ] 
        }
      ]
    },
    { 
      "name": "B1",
      "children": [
        { 
          "name": "B2",
          "children": [
            { 
              "name": "B3",
              "children": [
                { 
                  "name": "B4",
                  "children": [
                  ] 
                }
              ]
            }
          ] 
        }
      ]
    }  
  ]
}
</code></pre>
<p>I'm pulling data from a spreadsheet with <a href="https://openpyxl.readthedocs.io/en/default/" rel="nofollow">openpyxl</a> that provides a root tuple that contains tuples of each column value.</p>
<p>e.g.</p>
<pre><code>(
  ('A1','A2','A3','A4'),
  ('B1','B2','B3','B4'),
)
</code></pre>
<p>I know there are 101 different ways to do this, considered using dataframes from <a href="http://pandas.pydata.org/" rel="nofollow">pandas</a>, and I'm sure <a href="https://openpyxl.readthedocs.io/en/default/" rel="nofollow">openpyxl</a> has a myriad of methods and conversions for this kind of thing.  But for whatever reason, having a hard time envisioning this process today.  Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should do it:</p>
<pre><code>def convert_data(data):                                     
    out = {'name': 'root', 'children': []}           

    for row in data:                                 
        out['children'].append({})                   
        current = out['children']                    
        for value in row:                            
            current[-1]['name'] = value              
            current[-1]['children'] = [{}]           

            current = current[-1]['children']        

    return out                                       

data = (('A1','A2','A3','A4'), ('B1','B2','B3','B4'))

new_structure = convert_data(data)
</code></pre>
<p>You can obviously use something like <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow"><code>json.dumps</code></a> to output it as a JSON string.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/19798112/convert-pandas-dataframe-to-a-nested-dict">Convert pandas DataFrame to a nested dict</a></span>
<span class="comment-copy">THANK YOU.  This is awesome, and works perfectly.  For my own sanity, it's nice to know I was close, but clearly not quite there.  Much appreciated.</span>
