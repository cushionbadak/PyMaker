<div class="post-text" itemprop="text">
<p>Imagine my old list is:</p>
<pre><code>old = [[card, towel, bus], [mouse, eraser, laptop], [pad, pen, bar]]
</code></pre>
<p>goal:</p>
<pre><code>new = [[card, mouse, pad], [towel, eraser, pen], [bus, laptop, bar]]
</code></pre>
<p>Things I've tried:</p>
<pre><code>new = dict(zip(old[i] for i in range(len(old))))

new = [old[i][0] for i in old] #trying just to get a list of first indices, and then go from there
</code></pre>
<p>I feel like this is a trivial problem, but I'm having trouble. Thanks in advance for pointing me in the right direction!</p>
<p>Also:
Imagine I have another list:</p>
<pre><code>list_names = ['list1', 'list2', 'list3']
</code></pre>
<p>I would like to set the elements of this list to each one of the new lists:</p>
<pre><code>list1 = [card, mouse, pad] 
</code></pre>
<p>and so on.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>For your first question, this is the basic usage of <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>:</p>
<pre><code>&gt;&gt;&gt; old = [['card', 'towel', 'bus'], ['mouse', 'eraser', 'laptop'], ['pad', 'pen', 'bar']]
&gt;&gt;&gt; zip(*old)
[('card', 'mouse', 'pad'), ('towel', 'eraser', 'pen'), ('bus', 'laptop', 'bar')]
</code></pre>
<p>I can't understand your second question.  </p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Method 1:</strong> If you want reach your first goal in one line and want to use list comprehensions try:</p>
<pre><code>old = [[1,2,3],[4,5,6],[7,8,9]]
new = [[sublist[i] for sublist in old ] for i in (0,1,2)]
</code></pre>
<p>leads to <code>new = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]</code>.</p>
<p><strong>Method 2:</strong> However you can also use the <code>zip</code>-function like this:</p>
<pre><code>new = [list for list in zip(*old)]
</code></pre>
<p>will lead to <code>new = [(1, 4, 7), (2, 5, 8), (3, 6, 9)]</code>. Note that this is a list of tuples as opposed to the first example.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks so much for the input everyone!
zip(*old) worked like a charm, though I'm not entirely sure how...</p>
<p>For the second problem, I used this: (I know this is not a good solution, but it worked)</p>
<pre><code>for name in range(input_num):
    exec(list_names[name] + ' = arranged_list[name]')
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/17037566/transpose-a-matrix-in-python">Transpose a matrix in Python</a></span>
<span class="comment-copy">new = zip(*old)</span>
<span class="comment-copy">For your second question, this would be doing dynamic variable lookup, which is probably not a good idea. Could be achieved with <code>lists = [locals()[name] for name in list_names]</code>.</span>
