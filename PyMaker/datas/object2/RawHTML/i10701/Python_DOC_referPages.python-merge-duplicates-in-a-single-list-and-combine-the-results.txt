<div class="post-text" itemprop="text">
<p>ive got a list in python that looks like </p>
<pre><code>['Nickey, 20', 'John, 50', 'Nickey, 30']
</code></pre>
<p>i simply want it to remove the duplicates however, combine the numbers so the result is </p>
<pre><code>['Nickey, 50', 'John, 50']
</code></pre>
<p>i've tried the following </p>
<pre><code>A = {'a':1, 'b':2, 'c':3}
B = {'b':3, 'c':4, 'd':5}
c = {x: A.get(x, 0) + B.get(x, 0) for x in set(A).union(B)}
print c
</code></pre>
<p>but as you can see the list is differently formatted, i pulled mine from a txt file...</p>
<p>Is there a way to use get, set, union but with my formatting of a list - and can i do it with one list instead of merging 2</p>
</div>
<div class="post-text" itemprop="text">
<p>One approach is to create a dictionary to store the total count per name:</p>
<pre><code>from collections import defaultdict

people = ['Nickey, 20', 'John, 50', 'Nickey, 30']
people_map = defaultdict(int)
for person in people:
    name, number_str = person.split(', ')
    people_map[name] += int(number_str)

print ['{}, {}'.format(person, total) for person, total in people_map.iteritems()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We should use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow"><code>reduce</code></a> here.</p>
<pre><code>from collections import defaultdict
# below required for Python 3
# from functools import reduce

data = ['Nickey, 20', 'John, 50', 'Nickey, 30']

def accum(sums, p):
  sums[p[0]] += int(p[1])
  return sums

cum = reduce(accum, [s.split(', ') for s in data], defaultdict(int))
print(cum)
</code></pre>
<p>Alternatively, we can use <a href="https://docs.python.org/3/library/collections.html?highlight=counter#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter
import operator

cum = reduce(operator.iadd,
          (Counter({k: int(v)}) for k, v in (s.split(', ') for s in data)), Counter())
print(cum)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [ 'Nickey, 20', 'John, 50', 'Nickey, 30' ]
d = dict()
t = list()

for i in a:
    t = i.split( ", " )
    d[t[0]] = d.get( t[0], 0 ) + int(t[1])

print( [ ", ".join([k,str(v)]) for k,v in d.items() ] )
</code></pre>
<p>This will give following result</p>
<p><code>['Nickey, 50', 'John, 50']</code></p>
</div>
