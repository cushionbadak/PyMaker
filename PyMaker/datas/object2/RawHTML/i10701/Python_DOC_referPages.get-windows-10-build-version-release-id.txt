<div class="post-text" itemprop="text">
<p>I want to get Windows build <em>version</em>. I have searched everywhere for this, but to no avail.</p>
<p>No, I don't want to know if it's 7, 8, 10, or whatever. I don't want the Windows build number. I want to know the Windows build <strong>version</strong> (1507, 1511, 1607, etc.)</p>
<p>I am not sure what the official name of this would be, but here is an image of what I'm asking for:</p>
<p><a href="https://i.stack.imgur.com/UlRfu.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/UlRfu.png"/></a></p>
<p>I tried using the <code>sys</code>, <code>os</code> and <code>platform</code> modules, but I can't seem to find anything built-in that can do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems you are looking for the <code>ReleaseID</code> which is different from the build number.</p>
<p>You can find it by query the value of <code>ReleaseID</code> in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion</code> registry key. </p>
<p>You can query the value using <a href="https://docs.python.org/3/library/winreg.html" rel="nofollow noreferrer"><code>winreg</code></a> module:</p>
<pre><code>import winreg

def getReleaseId():    
    key = r"SOFTWARE\Microsoft\Windows NT\CurrentVersion"
    val = r"ReleaseID"

    with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, key) as key:
        releaseId = int(winreg.QueryValueEx(key,val)[0])

    return releaseId
</code></pre>
<p>or <a href="https://technet.microsoft.com/en-us/library/cc742028(v=ws.11).aspx" rel="nofollow noreferrer">REG command</a>:</p>
<pre><code>import os

def getReleaseId():
    key = r"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion"
    val = r"ReleaseID"

    output = os.popen( 'REG QUERY "{0}" /V "{1}"'.format( key , val)  ).read()
    releaseId = int( output.strip().split(' ')[-1] )

    return releaseId
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The build number is sufficient and can be found with:</p>
<pre><code>sys.getwindowsversion().build
</code></pre>
<p>or the platform module. Match the build with the table at this link to determine the <code>ReleaseId</code> you'd like to target:</p>
<ul>
<li><a href="https://en.m.wikipedia.org/wiki/Windows_10_version_history" rel="nofollow noreferrer">https://en.m.wikipedia.org/wiki/Windows_10_version_history</a></li>
</ul>
<p>In this case <code>1511</code> corresponds to TH2 and build <code>10586</code>:</p>
<pre><code># 1511  Threshold 2     November 10, 2015   10586 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.5/library/ctypes.html?highlight=ctypes#module-ctypes" rel="nofollow">ctypes</a> and <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724451(v=vs.85).aspx" rel="nofollow">GetVersionEx</a> from <code>Kernel32.dll</code> to find the build number.</p>
<pre><code>import ctypes
def getWindowsBuild():   
    class OSVersionInfo(ctypes.Structure):
        _fields_ = [
            ("dwOSVersionInfoSize" , ctypes.c_int),
            ("dwMajorVersion"      , ctypes.c_int),
            ("dwMinorVersion"      , ctypes.c_int),
            ("dwBuildNumber"       , ctypes.c_int),
            ("dwPlatformId"        , ctypes.c_int),
            ("szCSDVersion"        , ctypes.c_char*128)];
    GetVersionEx = getattr( ctypes.windll.kernel32 , "GetVersionExA")
    version  = OSVersionInfo()
    version.dwOSVersionInfoSize = ctypes.sizeof(OSVersionInfo)
    GetVersionEx( ctypes.byref(version) )    
    return version.dwBuildNumber
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know of any libraries that will give you this value directly, but you can parse the command window output when you open a new command window via <code>os.popen()</code>.</p>
<pre><code>print(os.popen('cmd').read())
</code></pre>
<p>The boot screen for the command window has the version/build data on the first line.  I'm running version 6.1, build 7601, according to the following output from <code>os.popen()</code>:</p>
<pre><code>Microsoft Windows [Version 6.1.7601] 
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\...&gt;
</code></pre>
<p>And when I run <code>winver</code>, I see that I'm running Windows 7, Version 6.1, Build 7601: SP1:</p>
<p><img alt="Winver output screencap" src="https://i.stack.imgur.com/SVWbW.png"/></p>
<p>Which ties to the interpretation of the first line in the output from <code>os.popen()</code>.</p>
</div>
<span class="comment-copy">Out of curiosity, why do you need it?</span>
<span class="comment-copy">Well, I am creating a <a href="https://en.wikipedia.org/wiki/Text-based_user_interface" rel="nofollow noreferrer">TUI</a> and need support of ANSI cmd. Since Windows 10 supports it since 1511, I want to check this number, before using other tests to see if ANSI cmd is enabled.</span>
<span class="comment-copy">This is exactly what I'm looking for. Thanks!</span>
<span class="comment-copy">C'mon, you may use <a href="https://docs.python.org/3/library/winreg.html" rel="nofollow noreferrer"><code>winreg</code></a> and avoid that ugly additional shell process and manipulating output string.</span>
<span class="comment-copy">Nice module ...</span>
<span class="comment-copy">Careful, <code>FileNotFoundError</code> on older versions of Windows, actually key doesn't exist.</span>
<span class="comment-copy"><code>OpenKey</code> implements the context manager protocol, so it's best to use <code>with OpenKey(HKEY_LOCAL_MACHINE, r'SOFTWARE\Microsoft\Windows NT\CurrentVersion') as key:</code>and hence without <code>CloseKey</code>.</span>
<span class="comment-copy">While correct, it is still nice to know how to get the release ID without using a version table.</span>
<span class="comment-copy">Yep, yet sometimes it is preferable to check without digging in the registry or resorting to C code, depends on the goal.</span>
<span class="comment-copy">That's why I said your answer was correct and upvoted it too :)</span>
<span class="comment-copy">In: <code>&gt;&gt;&gt; getWindowsBuild()</code> Out: <code>9200</code>, it doesn't give <code>1511</code></span>
<span class="comment-copy">Can't the build number be compared to the corresponding release in the image above?</span>
<span class="comment-copy">No - the build number and release id are different properties. However, I believe  there is correlation between them.</span>
<span class="comment-copy">Indeed there is, <a href="https://en.m.wikipedia.org/wiki/Windows_10_version_history" rel="nofollow noreferrer">en.m.wikipedia.org/wiki/Windows_10_version_history</a> will add to another question.  Also found this API: GetVersionEx is deprecated.</span>
<span class="comment-copy">This gives me version <code>10.0.10586</code> which is the OS build and not the release ID.</span>
<span class="comment-copy"><code>winver</code> contains the needed info, but how do I extract <code>6.1</code>, or in my case <code>1511</code> from it?</span>
