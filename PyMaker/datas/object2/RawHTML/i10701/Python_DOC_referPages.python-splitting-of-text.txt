<div class="post-text" itemprop="text">
<p>I have a text file (.txt) with different lines of words
For example: </p>
<pre><code>1,2,3,4,5
11,12,13,14,15
</code></pre>
<p>How can I use the <code>file.read().split()</code> command to just get the 2nd column...so 2 and 12 for example of the text?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming no spaces around <code>,</code>:</p>
<pre><code>with open('file.txt') as f:
    for line in f:
        print(line.split(',')[1])
</code></pre>
<p>If there could be whitespaces, use <code>re.split()</code>:</p>
<pre><code>with open('file.txt') as f:
    for line in f:
        print(re.split(r'\s?,\s?', line)[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First you have to split the file into lines (easily done simply by iterating over it), than you have to extract the 2nd column from each line.</p>
<p>Simple example:</p>
<pre><code>with open("myfile.txt") as myfile:
    for line in myfile:
        print(line.split(",")[1]) # indexing starts at 0
</code></pre>
<p>To accumulate a list of the values:</p>
<pre><code>with open("myfile.txt") as myfile:
    mylist = [line.split(",")[1] for line in myfile]
</code></pre>
</div>
<span class="comment-copy">If you're parsing a CSV have you considered actually using <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer">csv.reader</a></span>
<span class="comment-copy">I would use <code>strip()</code> before resorting to <code>re</code> in this case.</span>
<span class="comment-copy">@DeepSpace Hmmm..that would be more efficient..</span>
<span class="comment-copy">I am new to python...what is the re.split line do?</span>
<span class="comment-copy">@AlexWeinstein Please see <a href="https://docs.python.org/2/library/re.html#re.split" rel="nofollow noreferrer">docs.python.org/2/library/re.html#re.split</a></span>
<span class="comment-copy">Maybe also pass a maxsplit arg to avoid doing extra work.</span>
<span class="comment-copy">Yes, <code>line.split(",", 2)[1]</code> would probably be an improvement: good eye!</span>
