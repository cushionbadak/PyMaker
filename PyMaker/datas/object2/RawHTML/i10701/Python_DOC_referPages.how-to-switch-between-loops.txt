<div class="post-text" itemprop="text">
<p>I have a program that generates two lists. I want to print an item from list1 then switch to printing an item from list 2 and then go back to printing from list1 ..etc. However whenever I try it it just prints list1 then list2. </p>
<p>Please help.</p>
<p><strong>Code:</strong></p>
<pre><code>List1 = ['a', 'b' , 'c', 'd', 'e', 'f']

List2 = ['1', '2', '3', '4', '5', '6']

continue = True

while continue == True:
    for i in List1:
        print i
        print '/n'
        continue = False

while continue == False:
     for i in List2:
          print i
          print '/n'
          continue = True
</code></pre>
<p><strong>Output:</strong> </p>
<pre><code>a
b
c
d
e
f
1
2
3
4
5
6
</code></pre>
<p><strong>Desired output:</strong></p>
<pre><code>a
1
b
2
c
3
d
4
e
5
f
6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My answer is based around the code for your question. If this is the format you are wanting then use my answer. Otherwise, the other answers are more Pythonic as stated.</p>
<p>Please note that I've renamed "continue" to "switch" as continue is a reserved Python word, producing a syntax error.</p>
<pre><code>List1 = ['a', 'b' , 'c', 'd', 'e', 'f']

List2 = ['1', '2', '3', '4', '5', '6']

switch = True
while True:
    while switch == True:
        for i in List1:
            print(i)
            List1.pop(0)
            switch = False
            break

    while switch == False:
        for i in List2:
            print(i)
            List2.pop(0)
            switch = True
            break
</code></pre>
<p>If you set the state of the variable <code>switch</code> then break the loop it will do exactly as you desire.</p>
<p>Due to this loop break I <code>.pop()</code> the 0th index value to ensure the correct output is received.</p>
<p><em>This code is very inefficient and I am sure you can find other methods of producing your desired output.</em></p>
<p>Edit: To do this with unequal list lengths you must add <code>switch = False</code> at the end of the <code>while switch == True:</code> loop and vice versa for <code>while switch == False:</code></p>
<p>Edit 2: This also gives you a solution for switching between loops :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip function</a> provides a very concise way of achieving that goal.</p>
<pre><code>for x,y in zip(List1,List2):
    print(x)
    print(y)

# Out:
a
1
b
2
c
3
d
4
e
5
f
6
</code></pre>
<p>This is a much more Pythonic solution. You don't need two different loops, you need one loop that prints them in the order you desire. The "zip" function will put the list into pairs, then put each pair into x,y as the loop progresses. Thus, you'll be able to print a value from each list at each iteration of the list.</p>
<p>Sometimes when asking questions people can have the <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">xy problem</a>, in which they ask about their solution to a problem rather than asking about the problem itself. It's always good to take a step back and ask whether your approach seems like the best one, and if you're having problems with it, what other approaches might be possible. It seems like you're thinking about your problem as a problem of jumping back and forth between two lists, which led you to think of two loops, one for each list. But a better solution involves a single loop that keeps track of both lists at the same time. </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>continue = False</code> does not prevent the <code>for</code> loop from running to completion. The <code>while</code> condition is only evaluated <em>after</em> the <code>for</code> loop completes. This causes all element of <code>List1</code> to be printed and then all elements of <code>List2</code>.</p>
<p>There are a number of ways to loop through two lists</p>
<pre><code># One option
for k in range(len(List1)):
    print List1[k]
    print List2[k]

# Another option
for a, b in zip(List1, List2);
    print a
    print b
</code></pre>
</div>
<span class="comment-copy">Will both lists always be the same size?</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/12040989/printing-all-the-values-from-multiple-lists-at-the-same-time">Printing all the values from multiple lists at the same time</a></span>
<span class="comment-copy">Note that <code>continue</code> is a keyword and this code doesn't even run on Python 2.7 because of that (it might on different versions). I'd recommend not using it as a variable name.</span>
<span class="comment-copy">Also, if you have one list longer than the other, you can make use of <a href="https://docs.python.org/2.7/library/itertools.html#itertools.izip_longest" rel="nofollow noreferrer"><code>izip_longest</code></a> to keep iterating through the remainder of the items, and filter out <code>x</code> or <code>y</code> if their value is <code>None</code>.</span>
