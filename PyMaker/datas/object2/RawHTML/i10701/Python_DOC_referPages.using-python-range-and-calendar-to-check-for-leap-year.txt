<div class="post-text" itemprop="text">
<p>Noob question. Is there a more ideal way to express a range using both range and calendar. Looking to set up a print True if any of the years in my range are leap years </p>
<pre><code>year =  calendar.isleap(range(2016,2036))



Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
File "/usr/lib/python2.7/calendar.py", line 99, in isleap
return year % 4 == 0 and (year % 100 != 0 or year % 400 == 0)
TypeError: unsupported operand type(s) for %: 'list' and 'int'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>List comprehensions are good for this</p>
<pre><code>leap_years = [year for year in range(2016, 2036) if calendar.isleap(year)]
</code></pre>
<p>As are filters, if you prefer the map/reduce/filter way of doing things</p>
<pre><code>leap_years = filter(calendar.isleap, range(2016, 2036))
</code></pre>
<p>The former should be preferred unless you have good reason to use <code>filter</code> (hint: you probably don't)</p>
<p>N.B. that this gives you which years are leap years (if any), rather than a boolean "There are leap years" or "There aren't leap years." See fuglede's <a href="https://stackoverflow.com/a/38877754/3058609">excellent answer using <code>any</code></a> for a boolean response.</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want to make use of the Python <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> built-in;</p>
<pre><code>In [1]: import calendar

In [2]: test1 = any(calendar.isleap(y) for y in range(2016, 2036))

In [3]: test2 = any(calendar.isleap(y) for y in range(2097, 2103))

In [4]: print(test1)
True

In [5]: print(test2)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A pythonic way</p>
<pre><code>&gt;&gt;&gt; import calendar
&gt;&gt;&gt; any(map(calendar.isleap, range(2016, 2036)))
True
</code></pre>
</div>
<span class="comment-copy">this would also be interesting: <code>leap_years = any(calendar.isleap(year) for year in range(2016, 2036))</code> since it returns <code>True</code> as the OP mentions</span>
<span class="comment-copy">you can also get the <code>bool(leap_years)</code> for a boolean answer since empty lists return False while lists with elements return True.</span>
