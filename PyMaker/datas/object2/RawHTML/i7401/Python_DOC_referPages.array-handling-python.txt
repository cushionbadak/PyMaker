<div class="post-text" itemprop="text">
<p>I am a beginner in Python. I try to store the max value of two array in an another array. The length of array is known so I used <code>c=[]*len(a)</code></p>
<pre><code> a=[3,4,6,8]
 b=[9,4,5,10]
 c=[]*len(a)
 for i in range(len(a)):
    if (a[i]&gt;b[i]):
      c.append(a[i])
    else:
      c.append(b[i])
</code></pre>
<p>I got the following output, which is correct.</p>
<pre><code> c=[9,4,6,10]
</code></pre>
<p>If I have arrays like</p>
<pre><code> a=[[2,4],[6,8]]
 b=[[1,7],[5,9]]
</code></pre>
<p>How should I proceed this to store the max value of each elements in an another array? Thank for your help in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> to zip together each list and each sublist to compare them element-wise:</p>
<blockquote>
<p>Make an iterator that aggregates elements from each of the iterables.</p>
<p>Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables. [...].</p>
</blockquote>
<pre><code>&gt;&gt;&gt; def max_value(lst1, lst2):
        for subl1, subl2 in zip(lst1, lst2):
            for el1, el2 in zip(subl1, subl2):
                yield max(el1, el2)


&gt;&gt;&gt; 
&gt;&gt;&gt; a=[[2,4],[6,8]]
&gt;&gt;&gt; b=[[1,7],[5,9]]
&gt;&gt;&gt; 
&gt;&gt;&gt; list(max_value(a, b))
[2, 7, 6, 9]
</code></pre>
<p>If using NumPy, you can use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.maximum.html#numpy-maximum" rel="nofollow noreferrer"><code>numpy.maximum()</code></a>:</p>
<blockquote>
<p>Element-wise maximum of array elements.</p>
<p>Compare two arrays and returns a new array containing the element-wise maxima. [...].</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; 
&gt;&gt;&gt; a = np.array([[2,4],[6,8]])
&gt;&gt;&gt; b = np.array([[1,7],[5,9]])
&gt;&gt;&gt; 
&gt;&gt;&gt; np.maximum(a, b)
array([[2, 7],
       [6, 9]])
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In single line solution you can use map and lambda. For Example in this case the solution can be</p>
<pre><code>a=[[2,4],[6,8]]
b=[[1,7],[5,9]]
map(lambda x,y : map(lambda p,q : max(p,q),x,y),a,b)
[[2, 7], [6, 9]]
</code></pre>
<p>Since a and b both are array of arrays the first lambda input are arrays and then next map takes the maximum of the individual element.</p>
</div>
<div class="post-text" itemprop="text">
<p>To handle multi-dimensional arrays you can use two variables <code>i</code> and <code>j</code> which represents your rows and columns. </p>
<pre><code>a=[[2,4],[6,8]]
b=[[1,7],[5,9]]
c=[]*len(a)
for i in range(len(a)):
    for j in range(len(a)):
        if (a[i][j]&gt;b[i][j]):
          c.append(a[i][j])
        else:
          c.append(b[i][j])
print(c)
</code></pre>
<p>Output:</p>
<pre><code>[2, 7, 6, 9]
</code></pre>
<p>I have assumed <code>c</code> is a 1 dimensional array. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[[2,4],[6,8]]
b=[[1,7],[5,9]]
c=[]*len(a)
for i in range(len(a)): #loop through the elements
    for each in zip(a[i],b[i]): #for each number in a &amp; b, zipped forming (2,1),(4,7) ...
        c.append(max(each)) #append max number of each zipped pair to c
print(c) #print c
</code></pre>
</div>
<span class="comment-copy">How do you define a max value in the second example? What is the expected output?</span>
<span class="comment-copy">What is the expected output?</span>
<span class="comment-copy">I haven't seen an answer explain why you don't need <code>c=[]*len(a)</code> yet so I'll explain it here. Using <code>[] * len(a)</code> will just give you <code>[]</code> for any <code>a</code> since in Python, arrays/lists don't need to have a length declared before using them. So you can actually just do <code>c = []</code> and start appending things on to <code>c</code>. Hope I could help.</span>
<span class="comment-copy">Please provide some explanation about your answer. Code alone does not suffice.</span>
<span class="comment-copy">Thank you for this code snippet, which may provide some immediate help. A proper explanation would <a href="https://meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers">greatly improve</a> its educational value by showing why this is a good solution to the problem, and would make it more useful to future readers with similar, but not identical, questions. Please edit your answer to add explanation, and give an indication of what limitations and assumptions apply.</span>
<span class="comment-copy">@K. K Both the solutions throw an error message "SyntaxError: invalid syntax" on print(c) statement</span>
<span class="comment-copy">@SeshadriR working perfect here, are you using python version 3?</span>
<span class="comment-copy">Yes. I am using Python 3.6</span>
