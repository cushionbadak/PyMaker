<div class="post-text" itemprop="text">
<p>I'm using a Windows10 system.</p>
<p>I have a Tkinter canvas which has an image drawn on it. Is there any way to slow down mouse pointer speed when it is hovering over the canvas? 
I've checked out <a href="https://stackoverflow.com/questions/24068725/how-to-control-mouse-cursor-pointer-speed-using-python">this link</a> and <a href="http://pyautogui.readthedocs.io/en/latest/mouse.html" rel="nofollow noreferrer">this link</a> but the answer seems unstable.. </p>
<p>To be more specific, is it possible to slow down mouse pointer speed in plain Python/Tkinter?</p>
</div>
<div class="post-text" itemprop="text">
<p>On windows system you can use native <a href="http://allapi.mentalis.org/apilist/SystemParametersInfo.shtml" rel="nofollow noreferrer"><code>SystemParametersInfo</code></a> to change speed of the mouse pointer. It's possible to implement via <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow noreferrer"><code>ctype</code></a>, which is part of Python's standard library (is it counts as a "plain" solution?).</p>
<p>Take a look at this snippet:</p>
<pre><code>import ctypes

try:
    import tkinter as tk
except ImportError:
    import Tkinter as tk


def change_speed(speed=10):
    #   1 - slow
    #   10 - standard
    #   20 - fast
    set_mouse_speed = 113   # 0x0071 for SPI_SETMOUSESPEED
    ctypes.windll.user32.SystemParametersInfoA(set_mouse_speed, 0, speed, 0)


def proper_close():
    change_speed()
    root.destroy()

root = tk.Tk()
root.protocol('WM_DELETE_WINDOW', proper_close)
tk.Button(root, text='Slow', command=lambda: change_speed(1)).pack(expand=True, fill='x')
tk.Button(root, text='Standard', command=change_speed).pack(expand=True, fill='x')
tk.Button(root, text='Fast', command=lambda: change_speed(20)).pack(expand=True, fill='x')
root.mainloop()
</code></pre>
<p>But what if that our "standard" speed isn't equal <code>10</code>? No problem! Take a look at this snippet:</p>
<pre><code>import ctypes

try:
    import tkinter as tk
except ImportError:
    import Tkinter as tk


def change_speed(speed):
    #   1 - slow
    #   10 - standard
    #   20 - fast
    set_mouse_speed = 113   # 0x0071 for SPI_SETMOUSESPEED
    ctypes.windll.user32.SystemParametersInfoA(set_mouse_speed, 0, speed, 0)


def get_current_speed():
    get_mouse_speed = 112   # 0x0070 for SPI_GETMOUSESPEED
    speed = ctypes.c_int()
    ctypes.windll.user32.SystemParametersInfoA(get_mouse_speed, 0, ctypes.byref(speed), 0)

    return speed.value


def proper_close():
    change_speed(standard_speed)
    root.destroy()


root = tk.Tk()
root.protocol('WM_DELETE_WINDOW', proper_close)
root.minsize(width=640, height=480)

standard_speed = get_current_speed()

safe_zone = tk.LabelFrame(root, text='Safe Zone', bg='green')
slow_zone = tk.LabelFrame(root, text='Slow Zone', bg='red')

safe_zone.pack(side='left', expand=True, fill='both')
slow_zone.pack(side='left', expand=True, fill='both')

slow_zone.bind('&lt;Enter&gt;', lambda event: change_speed(1))
slow_zone.bind('&lt;Leave&gt;', lambda event: change_speed(standard_speed))

root.mainloop()
</code></pre>
<p>In other words - it's not a hard task at all. We are free at getting/setting mouse speed  without crawling at registry and without rocket science computations!</p>
<p>More about <code>SystemParametersInfo</code> you can find on <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947(v=vs.85).aspx" rel="nofollow noreferrer">MSDN</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is "yes", but there's risk. You <em>could</em> slow down or speed up the mouse by writing an algorithm to control position. This approach would be a kluge and prone to error most likely. This method would leverage the event_generate function of tkinter.</p>
<pre><code>root.event_generate('&lt;Motion&gt;', warp=True, x=xptr, y=yptr)
</code></pre>
<p><em>where root is the root (or any tk) window, and xptr, yptr are screen coordinates that force the mouse cursor to a specific screen location.</em></p>
<p>The second option is also a kluge and prone to error, but it comes at <strong>greater risk</strong>. This method has to do with editing the Windows registry. The registry entries are easy enough to find: <code>HKEY_CURRENT_USER\Control Panel\Mouse</code>. But be warned: <strong>ANY CHANGES TO THESE REGISTRY ENTRIES EFFECT ALL PROGRAMS</strong>. You can <a href="https://msdn.microsoft.com/en-us/library/aa227574(v=vs.60).aspx" rel="nofollow noreferrer">read this MSDN article for some recommended settings</a>. Use the python registry module to change registry entries. But be sure to apply good error handling and exit control for your program, because you need to restore anything you change in the registry back to what it was. And if your program crashes before it can reset the registry entries, well you have to reset them manually unless you write a program that will set them to some default values.</p>
<p>Good luck!</p>
</div>
<span class="comment-copy">That is true. This indeed does work. But as @Ron Norris pointed out there is a greater risk on changing mouse speed without good error handling. But nevertheless, thanks a lot!</span>
<span class="comment-copy">This is indeed very true! But for now, I have done maximum error handling as possible :)</span>
