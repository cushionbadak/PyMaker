<div class="post-text" itemprop="text">
<p>I'm fairly new to python and currently attempting to write a unit test for a class, but am having some problems with mocking out dependencies. I have 2 classes, one of which (ClassB) is a dependency of the other (ClassC). The goal is to mock out ClassB and the ArgumentParser classes in the test case for ClassC. ClassB looks as follows:</p>
<pre><code># defined in a.b.b
class ClassB:
    def doStuff(self) -&gt; None:
        # do stuff
        pass

    def doSomethingElse(self) -&gt; None:
        # do something else
        pass
</code></pre>
<p>ClassC:</p>
<pre><code># defined in a.b.c
from .b import ClassB
from argparse import ArgumentParser

class ClassC:

    b

    def __init__(self) -&gt; None:
        arguments = self.parseArguments()
        self.b = ClassB()
        self.b.doStuff()

    def close(self) -&gt; None:
        self.b.doSomethingElse()

    def parseArguments(self) -&gt; dict:
        c = ArgumentParser()
        return return parser.parse_args()
</code></pre>
<p>And finally, the test case for ClassC:</p>
<pre><code># inside a.b.test
from unittest import TestCase
from unittest.mock import patch, MagicMock
from a.b.c import ClassC

class ClassCTest(TestCase):
    @patch('a.b.c.ClassB')
    @patch('a.b.c.ArgumentParser')
    def test__init__(self, mock_ArgumentParser, mock_ClassB):
        c = ClassC()
        print(isinstance(c.b, MagicMock))           # outputs False
        # for reference
        print(isinstance(mock_ClassB, MagicMock))   # outputs True
</code></pre>
<p>I read in the patch <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow noreferrer">docs</a> that it's important to mock the class in the namespace it is used not where it is defined. So that's what I did, I mocked: <strong>a.b.c</strong>.classB instead of a.b.b.classB, have tried both though. I also tried importing ClassC inside the test__init__ method body, but this also didn't work. 
I prefer not mocking methods of ClassB but rather the entire class to keep the test as isolated as possible.</p>
<p>Environment info:
Python 3.6.1</p>
<p>Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Since i'm new to python i didn't know about <a href="https://docs.python.org/3.6/tutorial/classes.html#class-and-instance-variables" rel="nofollow noreferrer">class attributes</a>. I had a class attribute in ClassC that held ClassB and an instance attribute in <strong>init</strong> that shadowed the class attribute. </p>
</div>
<span class="comment-copy">what object is  <code>print(c.b)</code> in your test? Is it instance of <code>ClassB</code>?</span>
<span class="comment-copy">it was None, but your question made me realize i had a class attribute with the same name as the instance attribute! fixed now</span>
