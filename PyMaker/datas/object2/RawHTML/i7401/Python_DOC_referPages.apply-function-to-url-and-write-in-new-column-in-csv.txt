<div class="post-text" itemprop="text">
<p>I'm a newbie and surprised there's already not a clear answer similar to what I'm asking, apologies if this is a duplicate.</p>
<p>I have a list of URLs in a CSV file I'm trying to shorten, I want to loop through my CSV file and then write a new column with the shortened URL right next to the original URL.</p>
<pre><code>from pyshorteners import Shortener
import csv

def generate_short(url):
    x = shortener.short(url)
    return x
with open('Links_Test.csv') as csvfile:
    my_date = csv.reader(csvfile, dialect = 'excel')
    for row in my_data: 
        x = shortener.short(row)
        print(X)
</code></pre>
<p>EDIT:
I keep getting the error "ValueError: Please enter a valid url" and don't know how to proceed from here.....I'm sure I'm the problem.</p>
<p>Here's what my input data looks like:</p>
<pre><code>URL
http://www.google.com
http://www.facebook.com
http://www.twitter.com
http://www.linkedin.com
</code></pre>
<p>and here's what I want my output to look like:</p>
<pre><code>URL                        Short_URL
http://www.google.com      http://goo.gle
http://www.facebook.com    http://goo.g3c
http://www.twitter.com     http://goo.g3a
http://www.linkedin.com    http://goo.g2q
</code></pre>
<p>Thank you for your help.  I was very surprised there's not already a clear answer posted (at least I couldn't find it) so I'm sorry if this is a duplicate.</p>
</div>
<div class="post-text" itemprop="text">
<p>Apply the function on <code>row[0]</code> or <code>row['URL']</code>
Also you have to apply it on <code>my_data.iterrows()</code>and not on <code>my_data</code></p>
<pre><code>from pyshorteners import Shortener
import pandas as pd

def generate_short(url):
    x = shortener.short(url)
    return x
    my_date = pd.read_csv( 'Link-Tests.csv', sep = "\t") #seperator argument is optional. It can be a semi colon, a tab. Check your CSV file for knowing what the separator is.
    for index,row in my_data.iterrows(): 
        x = shortener.short(row[0])
        print(X)
</code></pre>
<p>If you can always store the shortened URL into a separate list, convert it into a DataFrame and then merge with the original dataframe based on index.</p>
<pre><code>lst = []
my_date = pd.read_csv( 'Link-Tests.csv', sep = "\t")
    for index,row in my_data.iterrows(): 
        x = shortener.short(row[0])
        lst.append(X)
df = pd.DataFrame(lst, columns=["Short-Url"])  
my_data = my_data.join(df, how= 'outer')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First try doing this:</p>
<pre><code>from pyshorteners import Shortener
import csv

def generate_short(url):
    x = shortener.short(url)
    return x
with open('Links_Test.csv') as csvfile:
    my_data = csv.reader(csvfile, dialect = 'excel')
    for row in my_data: 
        print(row) # output: ['URL'], ['google.com']...
</code></pre>
<p>You probably want to use <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">next()</a> or maybe look at <a href="https://stackoverflow.com/questions/11349333/when-processing-csv-data-how-do-i-ignore-the-first-line-of-data">this thread</a>  to ignore the header. Also, you probably want to use <code>row[0]</code> to get the first item in the list. So your final code might be</p>
<pre><code>from pyshorteners import Shortener
import csv

def generate_short(url):
    x = shortener.short(url)
    return x
with open('Links_Test.csv') as csvfile:
    next(csvfile) # skip the header row
    my_data = csv.reader(csvfile, dialect = 'excel')
    for row in my_data: 
        print(row[0]) # output: 'google.com' ....
        # do the link shortener stuff here
</code></pre>
</div>
<span class="comment-copy">The <code>row</code> is a list, with a value for every column. If your file has only 1 column, it's a 1-element list, <code>row[0]</code> being the url.</span>
<span class="comment-copy">@9000, thanks for the tip, I updated my code but still having problems.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/posts/45155856/edit">Edit</a> your Question and show <code>print(row)</code>.</span>
<span class="comment-copy">I tried your code and changed 'my_date' to 'my_data', but keep getting the error: " AttributeError: '_csv.reader' object has no attributre 'iterrows' " - perhaps I'm doing something wrong?  I like the idea of joining it back up in Pandas where I can write to CSV.  Is important that I keep the original order for this.  Thank you, Me</span>
<span class="comment-copy">@SDS you made another mistake. Instead of csv_reader use pd.read_csv(file_name)</span>
<span class="comment-copy">@SDS you can now check the latest edit to the answer. Alternatively you can use <code>pd.read_excel</code> instead of <code>pd.read_csv</code></span>
