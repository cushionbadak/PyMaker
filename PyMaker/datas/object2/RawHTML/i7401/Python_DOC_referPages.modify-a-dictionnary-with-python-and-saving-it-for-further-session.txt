<div class="post-text" itemprop="text">
<p>I got a programm that let's you choose color in the HSV space (for OpenCV). The first part, is about the creation of a dictionnary that contain some predefined colors :</p>
<pre><code># -*-coding:Utf-8 -*

# Initialisation du conteneur des couleurs, ici un dictionnaire
Color_Available = dict()

# Couleurs prédéfinies :
# Pour en rajouter, utiliser la même syntaxe.
# Green
greenLower = (29, 86, 6)
greenUpper = (64, 255, 255)
Color_Available["Green"] = (greenLower, greenUpper)

# Red
redLower = (46, 57, 90)
redUpper = (179, 255, 255)
Color_Available["Red"] = (redLower, redUpper)
</code></pre>
<p>Some line under it, a function is defined :</p>
<pre><code>def Color_choice(parameters):
    # My code
</code></pre>
<p>My question is, how could I make a programm that ask the users a color name and 6 different HSV parameters (Low and High), and that add this new color to the dictionnary permanently.
The goal is that if I close the programm, and open it 10 days later, I still got this new color that was added last time.</p>
<p>In fact, I don't really know how I should save the color data, and how I can access it.</p>
<p>Anyhelp would be priceless,</p>
<p>Thanks !</p>
</div>
<div class="post-text" itemprop="text">
<p>I would just use pandas to create a .csv file for that dictionary so something like:</p>
<pre><code>import pandas as pd

colr = input ('Enter color name: ')
hsv1 = input ('Enter first HSV: ')
# do the same for the other inputs
dict = {'Color': clr, 'HSV1': hsv1, ...  }

# make dataframe and store as .csv
df = pd.DataFrame(dict)
df.to_csv('Directory for storing')
</code></pre>
<p>Then to read the csv it's as simple as </p>
<pre><code>df = pd.read_csv('Diretcory and file name')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need some way to preserve the data once the program exits. The easiest way to do this is to save the dictionary as a json file, and read it if the file exists.</p>
<p>At the top of your program, you would check if this file exists, and read it.</p>
<pre><code>import json, atexit
from pathlib import Path

data_file = 'color_data.json'
if Path(data_file).is_file():
   with open(data_file, 'r') as fp:
       color_data = json.load(fp)
else:
   # No file exists, load some defaults
   color_data = {'Green': ((29, 86, 6), (64, 255, 255))}

def write_file_on_exit():
   with open(data_file, 'w') as f:
       json.dump(color_data, f)

atexit(write_file_on_exit)

# Your normal logic here
</code></pre>
<p>The <code>atexit</code> makes sure that when your program exits, the new data is written to the file and saved for the next time.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a>  Check out dictwriter.  It's all in the documentation</span>
<span class="comment-copy">If you are able to store your data in a reasonable Python Data Structure, like <code>dict</code>, <code>list</code>, etc., then you may serialize the data using <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow noreferrer">pickle</a></span>
<span class="comment-copy">Thanks, I'll look into it. I'm new to python (and coding in general), and I've never seen this yet.</span>
<span class="comment-copy">Thanks, I'll look into it. I'm new to python (and coding in general), and I've never seen this yet.</span>
<span class="comment-copy">Thanks, I'll look into it. I'm new to python (and coding in general), and I've never seen this yet.</span>
