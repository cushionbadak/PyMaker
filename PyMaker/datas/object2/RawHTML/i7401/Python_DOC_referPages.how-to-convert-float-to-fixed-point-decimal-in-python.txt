<div class="post-text" itemprop="text">
<p>I have some library function <code>foo</code>, that returns a floating point value with two decimal places (representing a price). I have to pass to to other function <code>bar</code> which expects a Decimal with fixed point for two decimal places.</p>
<pre><code>value = foo() # say value is 50.15
decimal_value = decimal.Decimal(value) # Not expected. decimal_value contains Decimal('50.14999999999999857891452847979962825775146484375')
bar(decimal_value) # Will not work as expected

# One possible solution
value = foo() # say value is 50.15
decimal_value = decimal.Decimal(str(round(value,2))) # Now decimal_value contains Decimal('50.15') as expected
bar(decimal_value) # Will work as expected
</code></pre>
<h3>Question:</h3>
<p>How to convert arbitrary float to fixed Decimal point with 2 decimal places? And without intermediate string conversion using <code>str</code>.</p>
<p>I am not worried about the performance. Just want to confirm if intermediate str conversion is the pythonic way.</p>
<h3>Update: Other Possible Solutions</h3>
<pre><code># From selected answer
v = 50.15
d = Decimal(v).quantize(Decimal('1.00'))

# Using round (Does not work in python2)
d = round(Decimal(v), 2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/decimal.html#decimal.Decimal.quantize" rel="nofollow noreferrer"><code>Decimal.quantize</code></a>:</p>
<blockquote>
<p>Return a value equal to the first operand after rounding and having the exponent of the second operand.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; from decimal import Decimal
&gt;&gt;&gt; Decimal(50.15)
Decimal('50.14999999999999857891452847979962825775146484375')
&gt;&gt;&gt; Decimal(50.15).quantize(Decimal('1.00'))
Decimal('50.15')
</code></pre>
<p>Unlike the bad <code>str</code> approach, this works for any number:</p>
<pre><code>&gt;&gt;&gt; decimal.Decimal(str(50.0))
Decimal('50.0')
&gt;&gt;&gt; decimal.Decimal(50.0).quantize(decimal.Decimal('1.00'))
Decimal('50.00')
</code></pre>
</div>
<span class="comment-copy">I like the <code>round</code> solution, as its easier to read and write than the <code>quantize</code>-base solution. But bear in mind it only works on Python 3: on Python 2, <code>round</code>ing a <code>Decimal</code> instance gives a <code>float</code> back.</span>
<span class="comment-copy">Thanks! Edited to make a note.</span>
<span class="comment-copy">But why not just <code>str</code>? Is there a compelling reason to user <code>Decimal.quantize</code> over <code>str</code>?</span>
<span class="comment-copy">@ChristianDean because <code>str</code> is not guaranteed to give 2 decimal places.</span>
<span class="comment-copy">Ah, I see. I didn't know that.</span>
