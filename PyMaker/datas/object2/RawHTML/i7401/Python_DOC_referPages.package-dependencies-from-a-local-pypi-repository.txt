<div class="post-text" itemprop="text">
<p>i have googled for an answer but i did not find anything really matching my needs (but i might be wrong).</p>
<p>We have a local Pypi repository that we need to use for our dependencies.</p>
<p>I am trying to use <code>dependency_links</code>, but apparently that's deprecated, plus, this is not working.</p>
<p>I have found lots of confusing posts about github.com repositories, which are not what i need to achieve (that's pretty easy); my problem is using another pypi index-url for our packages.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The correct way to make pip install packages from a private repository is to pass the <a href="https://pip.pypa.io/en/stable/reference/pip_install/#extra-index-url" rel="nofollow noreferrer"><code>--extra-index-url</code></a> option (or, if you don't even want anything from pypi.python.org installed, <a href="https://pip.pypa.io/en/stable/reference/pip_install/#index-url" rel="nofollow noreferrer"><code>--index-url</code></a>) to the <code>pip install</code> command, e.g.:</p>
<pre><code>pip install --extra-index-url https://local-pypi.example.com/simple private-pkg
</code></pre>
</div>
<span class="comment-copy">So you want <i>only</i> to use the local repo? Have you updated your <code>.pypirc</code>? See e.g. <a href="https://docs.python.org/3/distutils/packageindex.html#the-pypirc-file" rel="nofollow noreferrer">docs.python.org/3/distutils/packageindex.html#the-pypirc-file</a></span>
<span class="comment-copy">Do you have any requirement for what version of <code>pip</code>?</span>
<span class="comment-copy">Thanks for the reply. No, i don't want to use only my local repo, and i need to adopt a solution that will make the package install. I will be installing this package on servers, so having an account-related pypirc file is not a thing. I might maybe use a setup.cfg ? Or can i use pypirc file in package as well ?</span>
<span class="comment-copy">@Grimmy no, no specific requirement.</span>
<span class="comment-copy">Think I understand now. You want to reference the custom dependencies in setup.py. dependency_links is not deprecated, but it only supports URLs so you are limited to sdist (no wheels).</span>
<span class="comment-copy">Hi, i understand. But what if the private-pkg has a dependency which is on the private repository itself ? Will this work ?</span>
<span class="comment-copy">@BrunoRipa: I believe so.  Try it and see.</span>
<span class="comment-copy"><code>pip install -f repository_url --trusted-host repository_domain package</code> does the trick. Thanks</span>
