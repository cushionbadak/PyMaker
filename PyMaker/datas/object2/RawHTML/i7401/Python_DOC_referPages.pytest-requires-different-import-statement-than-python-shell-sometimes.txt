<div class="post-text" itemprop="text">
<p>I am somewhat new to programming, and so far most of my programs have been single directory affairs, but now I want to try something bigger, and I am having trouble making my imports work. I use pytest to create my unit tests, and I have been putting stand alone test script after the unit test definitions in my test_foo.py files. This works fine, until I add an __init__.py file.</p>
<p>File arrangement 1</p>
<pre><code>StackOverflow
 | card.py
 | test_card.py
</code></pre>
<p>Where test_card.py imports card using <code>import card as crd</code>.</p>
<p>Result: Neither of the following commands suffer an ImportError</p>
<pre><code>$ python3 test_card.py
$ pytest
</code></pre>
<p>File arrangement 2</p>
<pre><code>StackOverflow
 | __init__.py
 | card.py
 | test_card.py
</code></pre>
<p>Result: If I leave the import statement the same, <code>$ python3 test_card.py</code> still works, but <code>$ pytest</code> suffers an ImportError.</p>
<p>If I instead use <code>import StackOverflow.card as crd</code> pytest starts working again, but I can't run it as a script because of an ImportError.</p>
<p>I realize that I don't need the <code>__init__.py</code> file in this example, however it is just a part of a larger program. It has also been pointed out that the second import statement is just plain wrong. So how can I get pytest to work with the original import statement?</p>
<p>full text of card.py:</p>
<pre><code>#Created by Patrick Cunfer
#2017-07-15


class Card(object):
    def __init__(self, value, suit):
        '''
        Sets the card's value and suit
        param value: An integer from 1 to 13
        param suit: A character representing a suit
        '''
        self.value = value
        self.suit = suit


    def __str__(self):
        return str(self.value) + " of " + str(self.suit)
</code></pre>
<p>full text of test_card.py</p>
<pre><code>#Created by Patrick Cunfer
#2017-07-15


# First one breaks pytest, second one breaks shell
# import card as crd
# import StackOverflow.card as crd


def test_Card():
    test = crd.Card(5, 'S')
    assert test.value == 5
    assert test.suit == 'S'
    assert str(test) == "5 of S"
    del test


if __name__ == "__main__":
    #Unit test found a bug? Lets isolate it!

    print("Test 1")
    test = crd.Card(5, 'S')

    print(test.suit)
    print("Expect 'S'")
    print()

    #etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you would like to use <code>__init__.py</code> in your case you have to append the parent directory's path of <code>StackOverflow</code> to the sys, as following:</p>
<pre><code>import sys
project_dir = 'path to the parent dir of StackOverflow'
sys.path.append(project_dir)
</code></pre>
<p>Then you will be able to use <code>import StackOverflow.card as crd</code></p>
<hr/>
<p>Your current <code>import StackOverflow.card as crd</code> statement means that you have another directory named <code>StackOverflow</code> inside the <code>StackOverflow</code> directory itself; the import statement is assuming the structure of your directory looks like this (which is not your case):</p>
<pre><code>StackOverflow
    | test_card.py
    | StackOverflow
        | __init__.py
        | card.py
</code></pre>
<p>Anyway, in your case you don't need to use the <code>__init__.py</code>, since you are importing another script inside the same directory you are importing from. The <code>__init__.py</code> is usually used for importing scripts outside the directory.</p>
<p>In this <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">link</a> you will find documentation about how to use the <code>__init__.py</code> file.</p>
</div>
<span class="comment-copy">I know that I don't need the init file for this example, but for my real program, I do.</span>
<span class="comment-copy">Did my answer address your question or error?</span>
<span class="comment-copy">Partially, it cleared up a confusion I had about how the import statement is supposed to be used, but it did not address the fact that pytest does not work when it is used in that way. My file structure does not look like your answer describes (I rechecked).</span>
<span class="comment-copy">I didn't mean that your file structure looks that way, I meant that your import statement assumes that there is another <code>StackOverflow</code> directory, which is not the case and the reason behind the error.</span>
<span class="comment-copy">Would you like me to add an example of how to use <code>__init__.py</code> in your case?</span>
