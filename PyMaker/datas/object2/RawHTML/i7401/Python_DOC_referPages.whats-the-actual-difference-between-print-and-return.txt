<div class="post-text" itemprop="text">
<p>Here is my code. I would like to the the value for each key from python dict. So when I use <code>print</code> in function it's working fine but when I use <code>return</code> in function it's just return any one value not all. So, how can I get all values using <code>return()</code>?</p>
<pre><code>def tech(arg):
    for te in arg.values():
        return(te)
print(tech({'Andrew Chalkley': ['jQuery Basics', 'Node.js Basics'],
  'Kenneth Love': ['Python Basics', 'Python Collections']}))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> is a <em><strong>statement</strong></em></p></div>
<div class="post-text" itemprop="text">
<p>If you call the function from somewhere else, like another function or just from the terminal, a return statement would let you store the return value in a variable. Print simply displays the input given in the print function to the terminal where you call your tech-function</p>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> terminates (ends) the function it's in, and wherever it was called from receives the value that it returned.</p>
<p>So in your code: The loop starts, it hits the <code>return</code> statement, so it ends the function (and ends the loop) and just returns the first element it was at. Then the <code>print</code> statement, in which you called your function, will just print that one element, and that's it.</p>
<p>On the other hand, if you replace your <code>return</code> with <code>print</code>, then the function doesn't get terminated prematurely, so the loop runs over all the values and prints them.</p>
<hr/>
<p>What you seem to have in mind, somewhat, is turning your function into an iterator. Try replacing <code>return</code> with <code>yield</code> and see what happens, then read up on iterators and <code>yield</code> in the python documentation!</p>
</div>
<div class="post-text" itemprop="text">
<p>Because when reached, <code>return</code> statement will terminate the function. To get the behavior you want, just rewrite it as</p>
<pre><code>def tech(arg):
  return arg.values():
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code consist of two main blocks:
1. define a function 'tech'
2. print the result of a call to function 'tech'</p>
<p>Inside function tech there is a 'for te in arg.values()' loop. The loop gets initialized with the first value and the loop encounters the 'return' statement which forces the current value to be returned from function 'tech'. The loop is aborted</p>
<p>The print function receives the result of function tech and prints it (containing only the first argument)</p>
</div>
<span class="comment-copy">You can return a list or tuple.</span>
<span class="comment-copy">In 3.x return is a statement and print is a function. Also a return statement ends the current function, a print call doesn't.</span>
<span class="comment-copy"><code>return</code> returns control and an optional value to the function caller while <code>print()</code> simply writes it's arguments to standard <code>output</code> (by default, that is). You're comparing apples to oranges.</span>
<span class="comment-copy">You might want to look into <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generators</a> if you want to write a function that returns multiple things.</span>
<span class="comment-copy">Hi! Your answer is quite helpful clear the main things to me. But by using <code>yeld</code> function I'm getting the value as a list. In my code value is list. So, with yeld list in list. But I just want the list, not list in list. hope that clear</span>
<span class="comment-copy">@AshikurRahman That is simply a side effect of wanting to return multiple values from a function. But, since you appear to be using Python 3.3 &lt;, you can use the yield from syntax. See my most recent edit.</span>
<span class="comment-copy">Hi! It's worked find. could you please help me a bit more. actually I'm completely new in programming and python too. yield function combining two value in a single list. But how can I get two value in a separate list as it is in dict. thanks in advance</span>
<span class="comment-copy">Sorry @AshikurRahman, I'm afraid I cannot. If you have another question, I suggest creating a new post. But I encourage you to experiment for yourself. You'll learn much more if <i>you</i> figure out how to solve your problem. Read over <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the docs</a>, and try to see if you can come up with something. If you stuck, then feel free to post a new question.</span>
<span class="comment-copy">Your answer is helpful and now I'm clear about print and return function. Just one thing still needs to be clear that how can I get values using return. I'm checking <code>yield</code> though</span>
<span class="comment-copy">No it's returning the value as a list. But I just want value as it is. List, string or whatever</span>
<span class="comment-copy">Sorry, I am confused. what do you expect it to return if the input is <code>{'Andrew Chalkley': ['jQuery Basics', 'Node.js Basics'],   'Kenneth Love': ['Python Basics', 'Python Collections']}</code>?</span>
<span class="comment-copy">I just want to get values as a single list as it is. not in another list. hope that clear</span>
