<div class="post-text" itemprop="text">
<p>Python's <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve" rel="nofollow noreferrer">urllib.request.urlretrieve()</a> accepts a function that will be called when each chunk is fetched from the network.</p>
<p>The function is called with three arguments: a progressive identifier of the chunk, its size and the total size of the download.</p>
<p>Given those three information can I compute the number of bytes already fetched? This will be used to compute the progress of the download.</p>
<p>I'm tempted to do <code>chunk_number * chunk_size / download_size</code>, but I'm not sure the chunk size is constant for all the chunks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can keep a running total of all the sizes you've seen so far.</p>
<p>Try this:</p>
<pre><code>import urllib.request


def my_downloader(url, filename = None):
    running_total = 0
    def my_reporthook(count, size, total):
        nonlocal running_total
        running_total += size
        print ("{}%".format(100*running_total//total))
    return urllib.request.urlretrieve(url, filename, my_reporthook)

print (my_downloader('https://www.gutenberg.org/files/55146/55146-h.zip'))
</code></pre>
</div>
<span class="comment-copy">There's unfortunately no reason to assume chunks will all be the same size! If you want to give an accurate download percentage you may have to keep a running sum (e.g. <code>total_bytes += most_recent_chunk.size</code>)</span>
