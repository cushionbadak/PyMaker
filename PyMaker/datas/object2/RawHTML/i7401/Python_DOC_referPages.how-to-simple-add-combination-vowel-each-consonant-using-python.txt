<div class="post-text" itemprop="text">
<p>I want to get combination from addition vowel in each consonant in a string</p>
<p>for example</p>
<pre><code>string = "wrld"
</code></pre>
<p>and the results like :</p>
<pre><code>{ "warld","wirld,"wurld","werld","world","warald","warild",.....,"worolode","worolodo"}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We'll set up our vowels, including the empty string to represent neighboring consonants.  Then we'll use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> to get all the vowel combinations of the right size.  Then we use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest</code></a> to interweave the vowels and consonants.  Finally, we use <code>''.join()</code> to combine them back into words. </p>
<pre><code>import itertools

vowels = ['', 'a', 'e', 'i', 'o', 'u', 'y']

def word_gen(word):
    vowel_gen = itertools.product(vowels, repeat=len(word)+1)
    for v in vowel_gen:
            yield ''.join(c for x in itertools.zip_longest(v, word, fillvalue='') for c in x)
</code></pre>
<p>An example: </p>
<pre><code>&gt;&gt;&gt; list(word_gen('bb'))
['bb', 'bba', 'bbe', 'bbi', 'bbo', 'bbu', 'bby', 'bab', 'baba', 'babe', 'babi', 'babo', 'babu', 'baby', 'beb', 'beba', 'bebe', 'bebi', 'bebo', 'bebu', 'beby', 'bib', 'biba', 'bibe', 'bibi', 'bibo', 'bibu', 'biby', 'bob', 'boba', 'bobe', 'bobi', 'bobo', 'bobu', 'boby', 'bub', 'buba', 'bube', 'bubi', 'bubo', 'bubu', 'buby', 'byb', 'byba', 'bybe', 'bybi', 'bybo', 'bybu', 'byby', 'abb', 'abba', 'abbe', 'abbi', 'abbo', 'abbu', 'abby', 'abab', 'ababa', 'ababe', 'ababi', 'ababo', 'ababu', 'ababy', 'abeb', 'abeba', 'abebe', 'abebi', 'abebo', 'abebu', 'abeby', 'abib', 'abiba', 'abibe', 'abibi', 'abibo', 'abibu', 'abiby', 'abob', 'aboba', 'abobe', 'abobi', 'abobo', 'abobu', 'aboby', 'abub', 'abuba', 'abube', 'abubi', 'abubo', 'abubu', 'abuby', 'abyb', 'abyba', 'abybe', 'abybi', 'abybo', 'abybu', 'abyby', 'ebb', 'ebba', 'ebbe', 'ebbi', 'ebbo', 'ebbu', 'ebby', 'ebab', 'ebaba', 'ebabe', 'ebabi', 'ebabo', 'ebabu', 'ebaby', 'ebeb', 'ebeba', 'ebebe', 'ebebi', 'ebebo', 'ebebu', 'ebeby', 'ebib', 'ebiba', 'ebibe', 'ebibi', 'ebibo', 'ebibu', 'ebiby', 'ebob', 'eboba', 'ebobe', 'ebobi', 'ebobo', 'ebobu', 'eboby', 'ebub', 'ebuba', 'ebube', 'ebubi', 'ebubo', 'ebubu', 'ebuby', 'ebyb', 'ebyba', 'ebybe', 'ebybi', 'ebybo', 'ebybu', 'ebyby', 'ibb', 'ibba', 'ibbe', 'ibbi', 'ibbo', 'ibbu', 'ibby', 'ibab', 'ibaba', 'ibabe', 'ibabi', 'ibabo', 'ibabu', 'ibaby', 'ibeb', 'ibeba', 'ibebe', 'ibebi', 'ibebo', 'ibebu', 'ibeby', 'ibib', 'ibiba', 'ibibe', 'ibibi', 'ibibo', 'ibibu', 'ibiby', 'ibob', 'iboba', 'ibobe', 'ibobi', 'ibobo', 'ibobu', 'iboby', 'ibub', 'ibuba', 'ibube', 'ibubi', 'ibubo', 'ibubu', 'ibuby', 'ibyb', 'ibyba', 'ibybe', 'ibybi', 'ibybo', 'ibybu', 'ibyby', 'obb', 'obba', 'obbe', 'obbi', 'obbo', 'obbu', 'obby', 'obab', 'obaba', 'obabe', 'obabi', 'obabo', 'obabu', 'obaby', 'obeb', 'obeba', 'obebe', 'obebi', 'obebo', 'obebu', 'obeby', 'obib', 'obiba', 'obibe', 'obibi', 'obibo', 'obibu', 'obiby', 'obob', 'oboba', 'obobe', 'obobi', 'obobo', 'obobu', 'oboby', 'obub', 'obuba', 'obube', 'obubi', 'obubo', 'obubu', 'obuby', 'obyb', 'obyba', 'obybe', 'obybi', 'obybo', 'obybu', 'obyby', 'ubb', 'ubba', 'ubbe', 'ubbi', 'ubbo', 'ubbu', 'ubby', 'ubab', 'ubaba', 'ubabe', 'ubabi', 'ubabo', 'ubabu', 'ubaby', 'ubeb', 'ubeba', 'ubebe', 'ubebi', 'ubebo', 'ubebu', 'ubeby', 'ubib', 'ubiba', 'ubibe', 'ubibi', 'ubibo', 'ubibu', 'ubiby', 'ubob', 'uboba', 'ubobe', 'ubobi', 'ubobo', 'ubobu', 'uboby', 'ubub', 'ububa', 'ubube', 'ububi', 'ububo', 'ububu', 'ububy', 'ubyb', 'ubyba', 'ubybe', 'ubybi', 'ubybo', 'ubybu', 'ubyby', 'ybb', 'ybba', 'ybbe', 'ybbi', 'ybbo', 'ybbu', 'ybby', 'ybab', 'ybaba', 'ybabe', 'ybabi', 'ybabo', 'ybabu', 'ybaby', 'ybeb', 'ybeba', 'ybebe', 'ybebi', 'ybebo', 'ybebu', 'ybeby', 'ybib', 'ybiba', 'ybibe', 'ybibi', 'ybibo', 'ybibu', 'ybiby', 'ybob', 'yboba', 'ybobe', 'ybobi', 'ybobo', 'ybobu', 'yboby', 'ybub', 'ybuba', 'ybube', 'ybubi', 'ybubo', 'ybubu', 'ybuby', 'ybyb', 'ybyba', 'ybybe', 'ybybi', 'ybybo', 'ybybu', 'ybyby']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This may do what you want:</p>
<pre><code>from itertools import product
s = 'wrld'
words = ['{}'.join(s).format(*v) for v in product(list('aeiou') + [''], repeat=len(s)-1)]
</code></pre>
</div>
<span class="comment-copy">And what have you tried?</span>
