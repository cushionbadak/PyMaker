<div class="post-text" itemprop="text">
<p>I have this formatting expression:</p>
<pre><code>def __str__(self): 

        result = "\n".join({("{}: {}").format(key, self.__dict__[key]) for key, value in sorted(self.__dict__.items())}) 

        return result
</code></pre>
<p>The code runs but it is not sorted. I don't see why it is not being sorted. It returns the code below and every time it is in a different order.</p>
<pre><code>currentPL: -438.627395715
portfolio: Balance: 10101
Transactions: 10
exitPrice: 1.14686
exitTime: 2017-07-12 06:0
entryTime: 2017-07-12 06:
currentlyOpen: True
entryPrice: 1.14686
direction: Long
currentPrice: 1.14188
transactionPL: 627.994644
currentPL100: -0.00434229
units: 88077.79030439684

portfolio: Balance: 10101
Transactions: 10
currentPrice: 1.14228
exitTime: 2017-07-12 06:0
entryTime: 2017-07-12 06:
currentlyOpen: True
entryPrice: 1.14686
direction: Long
transactionPL: 627.994644
currentPL100: -0.00399351
currentPL: -403.396279594
exitPrice: 1.14686
units: 88077.79030439684

...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're calling <code>'\n'.join</code> on a set (an unordered type) which defeats the initial purpose of ordering in the first place:</p>
<p>You could use a list (a sequence):</p>
<pre><code>"\n".join([...])
</code></pre>
<p>Or remove those and use the generator expression directly. Here's a quite readable vesion that uses <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="nofollow noreferrer"><code>itertools.starmap</code></a>:</p>
<pre><code>from itertools import starmap

result = "\n".join(starmap("{}: {}".format, sorted(self.__dict__.items())) 
</code></pre>
</div>
<span class="comment-copy">Because the "list" in  your format expression is a set. Use <code>[...]</code> instead of <code>{...}</code></span>
