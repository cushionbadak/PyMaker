<div class="post-text" itemprop="text">
<p>Say I have a csv file, each entry is with a unique ID and a category name. Entries of each category will appear at least k times as specified in the title. Now I want to select the first k entries of each category (I don't know how many categories there are)</p>
<p><strong>Example</strong></p>
<p><strong>original table</strong></p>
<pre><code> ID.   category
 1.     apple
 2.     apple
 3.     apple
 4.     apple
 5.     orange
 6.     orange
 7.     orange
 8.     banana
 9.     banana
 10.    banana     
</code></pre>
<p><strong>if k = 2</strong></p>
<p><strong>expected output table</strong></p>
<pre><code> ID.   category
 1.     apple
 2.     apple
 5.     orange
 6.     orange
 8.     banana
 9.     banana 
</code></pre>
<p>Is there a way to do this in Python (like using pandas, etc.)? Currently I haven't came up with an idea to achieve this ... And I didn't find the solution after bunches of search. Only found these using SQL in database and that's not what I want. Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>Oh just found this, use pandas, it works!</p>
<pre><code>import pandas as pd

df = pd.read_csv(f_dir)
fd = df.groupby('category').head(2)
print fd
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary to keep track of the categories and how often they've been seen: </p>
<pre><code>catsSeen = {}
returnList = []
for row in table:
    if row[1] not in catsSeen:
        catsSeen[row[1]] = 1
        returnList.append(row)
    else:
        if catsSeen[row[1]] &lt; 2:
            returnList.append(row)
            catsSeen[row[1]] += 1

print(returnList)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if your input files is sorted by those categories you could use <a href="https://docs.python.org/3/library/itertools.html?highlight=groupby#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from io import StringIO
from csv import DictReader, DictWriter
from itertools import groupby

txt = '''ID.   category
 1.     apple
 2.     apple
 3.     apple
 4.     apple
 5.     orange
 6.     orange
 7.     orange
 8.     banana
 9.     banana
 10.    banana'''

k = 2

with StringIO(txt) as in_file, StringIO() as out_file:

    data = DictReader(in_file, delimiter=' ', skipinitialspace=True)
    out = DictWriter(out_file, delimiter=' ', fieldnames=data.fieldnames)
    out.writeheader()

    for key, items in groupby(data, key=lambda x: x['category']):
        for item, _ in zip(items, range(k)):
            out.writerow(item)

    print(out_file.getvalue())  # this is just to print the result...
</code></pre>
<p>this results in </p>
<pre><code>ID. category
1. apple
2. apple
5. orange
6. orange
8. banana
9. banana
</code></pre>
<p>(you probably have to replace <code>StringIO</code> with your input/output files)</p>
<p><code>zip(items, range(k))</code> stops after <code>k</code> <code>items</code> have been reached or <code>items</code> is exhausted - whichever comes first.</p>
</div>
<span class="comment-copy">is the input file sorted by those categories?</span>
<span class="comment-copy">Yes it is sorted.</span>
<span class="comment-copy">ok, that is shorter than my standard libary version!</span>
<span class="comment-copy">Thanks for your idea anyway!</span>
<span class="comment-copy">Thanks for your answer! Though I just found there's a neat method by using pandas.</span>
<span class="comment-copy">Thanks for your answer! Though I just found there's a neat method by using pandas</span>
<span class="comment-copy">yup, saw that. commented and upvoted.</span>
<span class="comment-copy">Oh, thank you !</span>
