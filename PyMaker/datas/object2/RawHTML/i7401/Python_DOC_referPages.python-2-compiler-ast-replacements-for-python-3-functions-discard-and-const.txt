<div class="post-text" itemprop="text">
<p>I am trying to convert an older library that maps dependencies called snakefood over to Python 3.  I have 2 parts I can't figure out what to substitute as I can't find documentation on what either function does - <code>from compiler.ast import Discard, Const</code>  I can't seem to find an equivalent in Python 3 in the  <code>ast</code> library.  Here are the function calls from Python 2, see both here being used in <code>isinstance()</code> calls:</p>
<pre><code>    def default(self, node):
        pragma = None
        if self.recent:
            if isinstance(node, Discard):
                children = node.getChildren()
                if len(children) == 1 and isinstance(children[0], Const):
                    const_node = children[0]
                    pragma = const_node.value

        self.accept_imports(pragma)
</code></pre>
<p>Apologies for not understanding this stuff, I just learned about AST calls trying to use this library.  Much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Discard</code> (took me a while to figure out what it does) is now <code>Expr</code> (though this includes more things than previously)</p>
<p>I got this hint from the source of compiler/codegen.py:</p>
<pre><code>    def visitDiscard(self, node):
        # XXX Discard means it's an expression.  Perhaps this is a bad
        # name.
</code></pre>
<p><code>Const</code> has been replaced with several different types which represent various constants, notably <code>Num</code>, <code>Str</code>, <code>JoinedStr</code>, and a few others.  The documentation for all the ast types <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">can be found here</a>.</p>
</div>
<span class="comment-copy">So a <code>Discard</code> node that contains only a <code>Const</code> child would be something like a docstring.</span>
<span class="comment-copy">@jasonharper I also see it for numbers: <code>&gt;&gt;&gt; compiler.parse('2') Module(None, Stmt([Discard(Const(2))]))</code></span>
