<div class="post-text" itemprop="text">
<p>Given the following lists:</p>
<pre><code>list1 = [[1, 2],
         [3, 4],
         [5, 6],
         [7, 8]]
list2 = [10, 11, 12, 13]
</code></pre>
<p>What is the best way to change <code>list1</code> so it becomes the following list in python?</p>
<pre><code>[[1, 2, 10],
 [3, 4, 11],
 [5, 6, 12],
 [7, 8, 13]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip</code>:</p>
<pre><code>[x + [y] for x, y in zip(list1, list2)]
# [[1, 2, 10], [3, 4, 11], [5, 6, 12], [7, 8, 13]]
</code></pre>
<p>To modify <code>list1</code> in place, you could do:</p>
<pre><code>for x, y in zip(list1, list2):
    x.append(y)

list1
# [[1, 2, 10], [3, 4, 11], [5, 6, 12], [7, 8, 13]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or, a comprehension with unpacking, after <code>zip</code>ing, if you're using Python &gt;= 3.5:</p>
<pre><code>&gt;&gt;&gt; l = [[*i, j] for i,j in zip(list1, list2)]
&gt;&gt;&gt; print(l)
[[1, 2, 10], [3, 4, 11], [5, 6, 12], [7, 8, 13]]
</code></pre>
<p>Of course, if the list sizes might differ, you'd be better off using <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="noreferrer"><code>zip_longest</code> from <code>itertools</code></a> to gracefully handle the extra elements. </p>
</div>
<div class="post-text" itemprop="text">
<h1>You can make it this way:</h1>
<pre><code>for i in range(len(list1)):
    list1[i] += [list2[i]]

print(list1)
</code></pre>
<blockquote>
<p>Output</p>
</blockquote>
<pre><code>[[1, 2, 10], [3, 4, 11], [5, 6, 12], [7, 8, 13]]
</code></pre>
</div>
