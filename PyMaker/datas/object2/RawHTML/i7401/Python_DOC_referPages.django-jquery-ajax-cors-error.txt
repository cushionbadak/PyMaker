<div class="post-text" itemprop="text">
<p>I get this error in the console when I try to post data with ajax. This data is supposed to be confirmed at this url and then I should get a response from it containing more data.</p>
<pre><code>Cross-Origin Request Blocked: The Same Origin Policy disallows 
reading the remote resource at https://secure.paygate.co.za/payweb3/process.trans. 
(Reason: CORS header 'Access-Control-Allow-Origin'  missing).
</code></pre>
<p>I am using django-cors-headers as middleware to add the headers. I followed all the config instructions. </p>
<p>My settings.py:</p>
<pre><code>INSTALLED_APPS = [
    # ...
    'corsheaders',
    # ...
]

MIDDLEWARE = [
    # ...
    'corsheaders.middleware.CorsMiddleware',
    # ...
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'OPTIONS',
)
</code></pre>
<p>The ajax call:</p>
<pre><code>$.ajax({
        type: "POST",
        url: url,
        dataType: "json",
        data: data,
        success: function(data){
            alert('success');
        },
        error: function(data){
            alert('error');
        }
    });
</code></pre>
<p>The data and url is declared above this and that part is fine. 
I only get the error alert everytime I submit it.</p>
<p>My packages:</p>
<pre><code>Django==1.11.3
django-cors-headers==2.1.0
pytz==2017.2
</code></pre>
<p>I am on Windows 10.</p>
<p>EDIT: I added the csrfSafeMethod for ajax. I don't know if this might have something to do with it?. This code is provided by djangoproject here docs.djangoproject.com/en/1.11/ref/csrf</p>
<p>EDIT2: I ended up sending an ajax call internally so then I did the cross domain stuff with django using <strong>urllib</strong>. <a href="https://docs.python.org/3/howto/urllib2.html" rel="nofollow noreferrer">This</a> helped me a lot with posting data cross domain.</p>
</div>
<div class="post-text" itemprop="text">
<p>As per the documentation: </p>
<blockquote>
<p>CorsMiddleware should be placed as high as possible, especially before
  any middleware that can generate responses such as Django's
  CommonMiddleware or Whitenoise's WhiteNoiseMiddleware. If it is not
  before, it will not be able to add the CORS headers to these
  responses.</p>
</blockquote>
<p>I would recommend you to put it as the first middleware (highest) among all the present middlewares.</p>
<p>Reference: <a href="https://github.com/ottoyiu/django-cors-headers" rel="nofollow noreferrer">https://github.com/ottoyiu/django-cors-headers</a></p>
</div>
<span class="comment-copy"><code>CorsMiddleware</code> was added in the right order?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/6506897/csrf-token-missing-or-incorrect-while-post-parameter-via-ajax-in-django">this</a> will probably help you.</span>
<span class="comment-copy">@hanzTheFranz nah thats not the problem,</span>
<span class="comment-copy">your url is <code>https://secure.paygate.co.za/payweb3/process.trans</code>ï¼Ÿ</span>
<span class="comment-copy">@Ykh yes that's the endpoint</span>
<span class="comment-copy">Tried that, same error, however I used a different approach. See more info at the end of the question under EDIT2.</span>
