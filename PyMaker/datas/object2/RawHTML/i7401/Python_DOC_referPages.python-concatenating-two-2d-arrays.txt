<div class="post-text" itemprop="text">
<p>There is a lot about concatenating/appending arrays but I found nothing inbuild for my problem: Input:</p>
<pre><code>A = [[0,0],
     [0,1],
     [1,0],
     [1,1]]
B = [[0],
     [1],
     [1],
     [0]]
</code></pre>
<p>Output:</p>
<pre><code>C = [
     [[0,0],[0]],
     [[0,1],[1]],
     [[1,0],[1]],
     [[1,1],[0]]
    ]
</code></pre>
<p>I dont know how to solve this efficient ( inbuild? )</p>
</div>
<div class="post-text" itemprop="text">
<p>In vanilla python, this is easily done with a <code>map</code> and <code>zip</code>:</p>
<pre><code>In [127]: C = list(map(list, zip(A, B)))

In [128]: C
Out[128]: [[[0, 0], [0]], 
           [[0, 1], [1]], 
           [[1, 0], [1]], 
           [[1, 1], [0]]]
</code></pre>
<p>The <code>zip</code> combines the two lists element-wise. The <code>map</code> is needed to convert each zipped element to a list.</p>
<p>With numpy.... you <em>could've</em> used <code>np.hstack</code> but they've not got the same dimensions, so, to my knowledge this cannot be done efficiently with numpy.</p>
</div>
<div class="post-text" itemprop="text">
<p>One big advantage of Python is its support for <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a>.</p>
<p>This is basically a one line loop which produces an array. </p>
<p>For your problem - and assuming you safeguarded that A and B always have the same length, you could easily write a single line of code like that:</p>
<pre><code>[[A[i], B[i]] for i in range(len(A))]
</code></pre>
<p>which produces your desired output.</p>
</div>
<span class="comment-copy">In numpy? Or as Python lists?</span>
<span class="comment-copy">Or, as a simpler alternative, <code>[[x, y] for x, y in zip(A, B)]</code>.</span>
<span class="comment-copy">Yes, that's simpler, but maybe more difficult when just starting with list comprehensions.</span>
<span class="comment-copy">If the OP is talking numpy, one can only hope and pray they've got the basics down par.</span>
