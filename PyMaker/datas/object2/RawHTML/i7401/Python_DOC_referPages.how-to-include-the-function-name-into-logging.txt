<div class="post-text" itemprop="text">
<p>Running the code below prints out two messages:</p>
<pre><code>[INFO] 2017-07-14 21:42:07, printed by func A
[INFO] 2017-07-14 21:42:07, printed by func B
</code></pre>
<p>We know that the <code>logging</code> module's <code>formatter</code> method can be used to customize the format of the messages. We can configure it to start the logging messages with the current time or the verbosity level or with the date and etc. I wonder if there is a way to include the function name from where the log is being created. So, every time the <code>log.info()</code> method is used there is a name of the function and possibly even a code line number too. </p>
<pre><code>import logging
formatter = logging.Formatter("[%(levelname)s] %(asctime)s, %(message)s", "%Y-%m-%d %H:%M:%S")
handler = logging.StreamHandler()
handler.setFormatter(formatter)
log = logging.getLogger(__name__)
log.addHandler(handler)
log.setLevel(logging.DEBUG)


def funct_A():
    log.info('printed by func A')

def funct_B():
    log.info('printed by func B')


funct_A()
funct_B()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>%(funcName)s</code>, as documented <a href="https://docs.python.org/3/library/logging.html#logrecord-attributes" rel="noreferrer">here</a>.</p>
</div>
