<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18272160/access-multiple-elements-of-list-knowing-their-index">Access multiple elements of list knowing their index</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>It's fairly simple to articulate problem, but I'm not 100% sure that I have my lingo right. Nonetheless, conceptually "cherry picking" is suitable to describe the slice I have in mind. This is because I simply want to access (cherry pick from all elements) two distant elements of a list. I tried this:</p>
<pre><code>my_list[2,7]
</code></pre>
<p>So I was expecting it to return only 2 elements, but instead I got the error: </p>
<blockquote>
<p>list indices must be integers, not tuples. </p>
</blockquote>
<p>I searched this error, but I found it was actually a very general error and none of the problems that instigated this error were actually for my type of problem. </p>
<p>I suppose I could extract the elements 1 at a time and then merge them, but my gut tells me there is a more "<em>pythonic</em>" way about this.</p>
<p>Also a slightly more complicated form of this problem I ran into was building a new list from an existing list of lists:</p>
<pre><code>new_list = []
for i in range(len(my_list)):
    new_list.append(my_list[i][2,7])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Normally I would just use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a> for this:</p>
<pre><code>&gt;&gt;&gt; my_list = list(range(10))
&gt;&gt;&gt; import operator
&gt;&gt;&gt; list(operator.itemgetter(2, 7)(my_list))
[2, 7]
</code></pre>
<p>It also allows getting an arbitrary amount of list elements by their indices.</p>
<hr/>
<p>However you can always use NumPy (that's an external package) and it's integer slicing for this (but it won't work for normal Python <code>list</code>s, just for NumPy arrays):</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; my_arr = np.array(my_list)
&gt;&gt;&gt; my_arr[[2, 7]]
array([2, 7])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [1]: myList = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
In [2]: myList[2:8:5]
Out[2]: [2, 7]
</code></pre>
<p><code>myList[start:end:stride]</code></p>
<p>Hope this helps. </p>
</div>
<span class="comment-copy">extract the elements one at a time. no need to complicate such a simple and fast operation.</span>
<span class="comment-copy">@JimFasarakisHilliard True maybe in hindsight that example was too simple. I have included another example of the same problem I ran into.</span>
<span class="comment-copy">use slicing with steps if I am understanding? <code>my_list[2,8,5]</code></span>
<span class="comment-copy">@aws_apprentice That's what I thought I should do too, but I'm puzzled why I got the list indices error.</span>
