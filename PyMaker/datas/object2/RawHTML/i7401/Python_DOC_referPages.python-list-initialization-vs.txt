<div class="post-text" itemprop="text">
<p>I came across following snippet (and could trace its origin to <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools.product</a>):</p>
<pre><code>def cartesian_product(pools):
    result = [[]]
    for pool in pools:
        result = [x+[y] for x in result for y in pool]
    return result

a_list=[1, 2, 3]
b_list=[4, 5]
all_list=[a_list, b_list]

print (cartesian_product(all_list)) # [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]
</code></pre>
<p>If we change the following line:</p>
<pre><code>result = [[]]
</code></pre>
<p>to this:</p>
<pre><code>result = []
</code></pre>
<p>then code doesn't work.</p>
<p>Now consider the following piece of code where the variable <code>my_list</code> in initialized as <code>my_list=[]</code> and not <code>my_list=[[]]</code> but still we get the expected results:</p>
<pre><code>my_list=[]
my_list.append([1,2])
my_list.append([3,4])
print (my_list) # [[1, 2], [3, 4]]    
</code></pre>
<p>So in the function <code>cartesian_product</code> I mentioned above, what is the significance of having <code>result=[[]]</code> and not <code>result=[]</code> ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The list comprehension inside the loop is:</p>
<pre><code>[x+[y] for x in result for y in pool]
</code></pre>
<p>This contains the expression <code>x+[y]</code>, where <code>x</code> is an element of <code>result</code>.  This tries to add an element of <code>result</code> to a list.  So each element of result needs to be a list.  That is why <code>result</code> is initialized to <code>[[]]</code>, which a list with one element, which is a list (an empty list).  If you do <code>result = []</code>, there are no elements in <code>result</code>, so the loop will end immediately and do nothing.</p>
<p>Your second example is different because you don't do anything with the elements of <code>my_list</code>.  You just add new elements.  Also, you don't iterate over the list, so there's no requirement that it contain anything.</p>
<p>There's nothing special about <code>[[]]</code>.  It's just that the particular operations that <code>cartesian_product</code> is doing require it to operate on a list of lists.  Similarly if you were to write a function that takes, say, the mean of the elements in a list, you'd need to ensure the list has numbers in it (so it makes sense to add them) and is nonempty (since otherwise you'd be dividing by zero when trying to find the mean).</p>
</div>
<span class="comment-copy">You did notice that it iterates over <code>result</code>, right?</span>
<span class="comment-copy"><code>for x in result</code> does nothing if <code>result</code> is empty. <code>[[]]</code> is not an empty list, hence it does something different.</span>
