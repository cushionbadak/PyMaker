<div class="post-text" itemprop="text">
<p>I am new to Python and wanted to explore it's pseudo-code like syntax to solve the following problem:</p>
<pre><code># x is 0, 1 or 2
arr = [0, 1, 2]
</code></pre>
<p>I want to return any element in <code>arr</code> that is not equal to <code>x</code></p>
<p>My intuition:</p>
<pre><code>return x if x != element for element in arr
</code></pre>
<p>I have tried to complete the conditional with an <code>else</code> clause. Still, the syntax is invalid</p>
<p>What is my mistake? What is a correct one-line solution (if any exists)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>return [element for element in arr if element != x]</code></p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to return one element from your list matching a certain condition (in this case the condition is <code>!=x</code>), you can use <a href="https://docs.python.org/2/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>.</p>
<pre><code>return next(item for item in arr if item!=x)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're pretty close. Just put the <code>if</code> last. This will return a generator:</p>
<pre><code>def f(ls, e):
    return (x for x in ls if x != e)
</code></pre>
<p>You can also return a list instead:</p>
<pre><code>def f(ls, e):
    return [x for x in ls if x != e]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use ternary if statement as given below:</p>
<pre><code>def f(x,arr):
    return x if x in arr else None
</code></pre>
<p>Or you can use list comprehension if you want return all elements contains in <code>arr</code>, as you can see below:</p>
<pre><code>def f(x,arr):
    return [y for y in arr if y in x] #here x is a list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use a list comprehension:</p>
<pre><code>return [a for a in arr if a != x]
</code></pre>
</div>
<span class="comment-copy"><code>return [i for i in arr if i != x]</code></span>
<span class="comment-copy">Do you want to return <i>any</i> element that meets your criteria or <i>every</i> element that meets it?</span>
<span class="comment-copy">Thank you patrick! The return type is a array, how can I return just the first  (or any single) <code>i</code> that satisfies the condition?</span>
