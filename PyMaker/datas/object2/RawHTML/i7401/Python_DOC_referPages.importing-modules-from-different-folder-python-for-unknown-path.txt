<div class="post-text" itemprop="text">
<p>I have been working on a python project and I am new to it.
I have made a small library for my project in which I have several different modules doing different tasks.</p>
<p>For example: I have 5 modules namely add, subtract, multiply, divide and root.
I call all these <code>.pyc</code> files into my <code>main.py</code> file and my code runs properly <strong>if all of them are in the same folder</strong>.</p>
<p>Now, I want to store my <code>main.py</code> at: <code>D:\project\main.py</code>
and these 5 <code>.pyc</code> files at : <code>D:\project\Lib\</code> (In the Lib folder)</p>
<p>I found a solution as to mention the path of the folder Lib into the code but I can not do so as I need to submit the code somewhere and if they try to run this on their PC, it might not import these files.</p>
<p>What would be the possible solution to this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Inside <code>D:\project\Lib</code> create an <code>__init__.py</code> file. and put all your modules in <code>D:\project\Lib</code> now <code>lib</code> works as a python package.you dir structure should now look like this:</p>
<pre><code>D:\project\Lib
           |
           +--- __init__.py
           +--- add.py
           +--- sub.py
           +--- multiply.py
</code></pre>
<p>Now from any file inside (say for ex main.py)  <code>D:\project</code> call any module you want like this.<br/></p>
<p><code>from Lib.add import something</code>.</p>
<p>final dir structure will roughly look like this.</p>
<pre><code>D:\project
        |
        +-- main.py
        +-- Lib
              |
              +--- __init__.py
              +--- add.py
              +--- sub.py
              +--- multiply.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try creating a package.</p>
<p>Use a directory structure like this:</p>
<pre><code>.
+-- main.py
+-- lib
    +-- __init__.py
    +-- add.pyc
    +-- substract.pyc
    +-- ...
</code></pre>
<p>Then, in your <code>main.py</code> file, you can import them like this:</p>
<pre><code>from lib import add
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">More on packages on Python docs</a></p>
</div>
<span class="comment-copy">see about python packages. you need to convert a directory into a package by creating a file <code>__init__.py</code> in it. and then store all your modules and call it like <code>from package.module import something</code></span>
<span class="comment-copy">@anekix I found it thank you so much! :)</span>
<span class="comment-copy">refer my answer below</span>
<span class="comment-copy">also make sure you work with  <code>.py</code> files instead of <code>.pyc</code> files. <code>.pyc</code> files will be generated by interprer for its internal purpose</span>
<span class="comment-copy">someone downvoted this anwer .any reasons?</span>
<span class="comment-copy">Thanks it works!</span>
<span class="comment-copy">@BrightOne. its not good idea to use <code>.pyc</code> fils directly rather they are generated by the python interpreter</span>
<span class="comment-copy">@anekix OP used <code>.pyc</code> in the examples, it's not my own decision. Nonetheless, you are right.</span>
