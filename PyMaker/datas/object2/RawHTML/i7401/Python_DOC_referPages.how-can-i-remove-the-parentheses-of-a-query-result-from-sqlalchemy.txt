<div class="post-text" itemprop="text">
<p>I know this is something really simple to do but i'm not recalling how should i do it.</p>
<p>Basically, I want the result returned from the function <code>select_data</code>  to be 
like:</p>
<pre><code>['something','something_a','something_b']
</code></pre>
<p>and not like, what is currently being returned:</p>
<pre><code>[(u'something',), (u'something_a',)(u'something_b',)]
</code></pre>
<p>Following, the block of the code that i'm using:</p>
<pre><code>import sqlalchemy
from sqlalchemy import Table, exc, and_
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

from configurations import config_loader

hostname = config_loader.get('db_config', 'hostname')
db_name = config_loader.get('db_config', 'db_name')
db_port = config_loader.get('db_config', 'db_port')
login = config_loader.get('db_config', 'db_login')
pwd = config_loader.get('db_config', 'db_pwd')
sample_table = config_loader.get('db_tables', 'some_table')


con_string = 'mysql+mysqlconnector://{login}:{passwd}@{hostname}:{port}/{db}'

engine_str = con_string.format(
    login=login, passwd=pwd, hostname=hostname, port=db_port, db=db_name
)

try:
    engine = sqlalchemy.create_engine(engine_str, echo=False)
    session = sessionmaker(bind=engine)
    connection = engine.connect()
    session = session(bind=connection)
    Base = declarative_base()
except exc.SQLAlchemyError:
    raise


def select_data(server):
    t = Table(some_table, Base.metadata, autoload_with=engine)
    stm = session.query(t.c.data_name).filter(
        t.c.server == server
    )
    return stm.all()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code returns <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">list</a> of <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">tuples</a>. You should extract tuples adding the following code:</p>
<pre><code>raw_data = select_data(server)
data = [item[0] for item in raw_data]
</code></pre>
<p>One more way to the extracting:</p>
<pre><code>import operator

raw_data = select_data(server)
data = map(operator.itemgetter(0), raw_data)
</code></pre>
<p>More information about <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html" rel="nofollow noreferrer">SQLAlchemy</a>.</p>
</div>
<span class="comment-copy">Solved. it's good practice to force str(item[0]) ? in order to avoid the u' ?</span>
<span class="comment-copy">SQLAlchemy returned <code>unicode</code> objects and <code>str</code> function converts them to string type. The difference is comprehensively explained on the HOWTO: <a href="https://docs.python.org/2/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/2/howto/unicode.html</a></span>
