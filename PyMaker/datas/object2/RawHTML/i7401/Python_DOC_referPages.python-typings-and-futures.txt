<div class="post-text" itemprop="text">
<p>I'm very glad to use <a href="https://docs.python.org/3/library/typing.html#module-typing" rel="nofollow noreferrer">typing</a> module in Python 3. Also, I'm very glad to use <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer">asyncio</a> instead of <code>twisted</code>, <code>tornado</code> and alternatives.</p>
<p>My question is how to define result of a coroutine properly?</p>
<p>Should we tell it's just a coroutine? Example 1:</p>
<pre><code>async def request() -&gt; asyncio.Future:
    pass
</code></pre>
<p>Or should we define type of result of coroutine as type of returning value? Example 2:</p>
<pre><code>async def request() -&gt; int:
    pass
</code></pre>
<p>If yes, then how to be with plain functions, which return futures? Example 3:</p>
<pre><code>def request() -&gt; asyncio.Future:
    f = asyncio.Future()
    # Do something with the future
    return f
</code></pre>
<p>Is it a right way? How then we can tell what is expected to be a result of the future?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, you should regular return value (such as <code>int</code>, <code>float</code>, <code>bool</code>, <code>None</code> and etc), but if you use it as a callable it should look like this:</p>
<pre><code>async def bar(x: int) -&gt; str:
    return str(x)

cbar: Callable[[int], Awaitable[str]] = bar
</code></pre>
<p>For more information: <a href="https://github.com/python/typing/issues/424" rel="nofollow noreferrer">here</a>.</p>
<p>You can look at this <a href="https://github.com/python/mypy/issues/3576" rel="nofollow noreferrer">issue</a> also for <code>mypy</code> support.</p>
</div>
<div class="post-text" itemprop="text">
<p>As @jonrsharpe said, <a href="https://docs.python.org/3/library/typing.html#typing.Awaitable" rel="nofollow noreferrer">typing.Awaitable</a> perfectly suits the task.</p>
</div>
<span class="comment-copy">Use the generic versions, e.g. <a href="https://docs.python.org/3/library/typing.html#typing.Awaitable" rel="nofollow noreferrer">docs.python.org/3/library/typing.html#typing.Awaitable</a></span>
<span class="comment-copy">Thanks, that's perfect</span>
<span class="comment-copy">As for a type of the function, yes, that's true. But question was only about function's return type. Anyway, thank you</span>
