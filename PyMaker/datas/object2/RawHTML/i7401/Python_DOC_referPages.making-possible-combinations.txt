<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17910359/how-to-generate-list-combinations">How to generate list combinations?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to make possible combinations of <code>'AB'</code>, like:</p>
<pre><code>[('A', 'A'), ('A', 'B'), ('B', 'A'), ('B', 'B')]. 
</code></pre>
<p>I'm using <code>itertools.permutations</code>, but its just returning, <code>[('A', 'B'), ('B', 'A')]</code></p>
<p>What would be the procedure to have both <code>('A','A')</code> and <code>('B','B')</code> too.</p>
<p>Also, here I am talking with input <code>'AB'</code>. What would be the procedure if I had to make combinations of input <code>'AB'</code>, <code>'BA'</code> such that the output is <code>[('AB','AB'), ('AB, 'BA'), ('BA', 'BA'), ('BA','BA'])</code>.</p>
<p>Also, I don't worry about the order.   </p>
</div>
<div class="post-text" itemprop="text">
<p>The tool from itertools you are looking for is <code>product</code>.</p>
<pre><code>&gt;&gt;&gt; list(itertools.product('AB', repeat=2))
[('A', 'A'), ('A', 'B'), ('B', 'A'), ('B', 'B')]
</code></pre>
<p>This will give all possible arrangements of the specified elements that are of length 2 (specified by the <code>repeat</code> keyword).
Both <code>permutations</code> and <code>combinations</code> <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">explicitly state</a> that they do not repeat elements.
The function <code>itertools.combinations_with_replacement</code> is close to what you want, which allows repeated elements, but only gives distinct combinations, rather than all permutations.  The function <code>itertools.permutations_with_replacement</code> doesn't exist, because this is exactly what <code>itertools.product</code> gives you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Apart from what Nielson added, you can also obtain the required result without using <code>itertools</code>,</p>
<pre><code>x = 'AB'
l = [(a, b) for a in x for b in x]
</code></pre>
<p>This will produce the desired output.</p>
</div>
<span class="comment-copy">Thanks K. Nielson for the kind guidance.  itertools.product worked fine for the input, 'AB'</span>
<span class="comment-copy">Thanks Pawan for the help. Yes, it works the same as itertools.</span>
