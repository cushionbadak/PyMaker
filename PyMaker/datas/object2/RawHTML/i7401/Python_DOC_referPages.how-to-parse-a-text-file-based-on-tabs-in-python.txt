<div class="post-text" itemprop="text">
<p>How to parse this text file:</p>
<pre><code>mapping apple
    v1: v1a : v1b
mapping ball
    v2: v2a : v2b
</code></pre>
<p>to get </p>
<p><code>{'apple':['v1','v1a','v1b'], 'ball':['v2','v2a','v2b']}</code></p>
<p>There can be multiple V's under a single mapping like:</p>
<p><code>mapping apple</code></p>
<p><code>v1: v1a : v1b</code></p>
<p><code>v2: v2a : v2b</code> </p>
<p><code>v3: v3a : v3b</code></p>
<p><code>mapping ball</code> </p>
<p><code>v1: v1a : v1b</code> </p>
<p><code>v2: v2a : v2b</code></p>
<p>This is what I have tried so far:</p>
<pre><code>copy=False
for line in fh:
    if line.strip()=="mapping_start":
        copy=True
    elif line.strip()=="mapping_end":
        copy=False
    elif copy:
        if line.find('#')==-1 and len(line.strip())&gt;0:
            #make a dictionary here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a>, that doesn't make it necessary to identify starts and ends. You just need to identify 'mapping' lines and all other lines holding the values:</p>
<pre><code>from collections import defaultdict

fH = """mapping apple
    v1: v1a : v1b
mapping ball
    v2: v2a : v2b"""

result = defaultdict(list)
for line in fH.splitlines():
  if 'mapping' in line:
    key = line.split()[1]
  else:
    for values in line.split(':'):
      result[key].append(values.strip())

print(result)
</code></pre>
<p>Returns:</p>
<pre><code>defaultdict(&lt;class 'list'&gt;, {'apple': ['v1', 'v1a', 'v1b'], 'ball': ['v2', 'v2a', 'v2b']})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open("lol.txt", 'r') as config:
    adict = {}
    for line in config.readlines():
        if 'mapping' in line:
            key = line.strip().split()[-1]
        else:
            line = line.replace(' ', '').strip()
            adict[key] = line.split(':')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> and combination of <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter()</code></a> and <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> functions to escape unnecessary checks:</p>
<pre><code>import re

input_data = '''
mapping apple
        v1: v1a : v1b
mapping ball
        v2: v2a : v2b
'''

#   convert input to list
input_data = input_data.strip().split('\n')
#   create iterator
iterate_over = iter(input_data)
#   declare output dictionary
output = {}

#   start iteration
for line in iterate_over:
    match = re.findall(r'(?&lt;=^mapping\s)\w+$', line)
    if match:
        try:
            output.update({match[0]: re.sub(r'\s+', '', next(iterate_over)).split(':')})
        except StopIteration:
            break

print(output)
</code></pre>
</div>
<span class="comment-copy">I was trying something of this sort but I need a mapping_start and mapping_end everytime. <code>copy=False             for line in fh:                 if line.strip()=="mapping_start":                     copy=True                 elif line.strip()=="mapping_end":                     copy=False                 elif copy:                         #make a dictionary here</code></span>
<span class="comment-copy">Where are these <code>"alias_start"</code> and <code>"alias_end"</code> that you are looking for in the text file?</span>
<span class="comment-copy">@SunalMittal Please add the code to your question, not in a comment, since it belongs to the actual question. Comments should not contain vital information.</span>
<span class="comment-copy">@Evert he edited the comment. It is better if you do it Sunal..</span>
<span class="comment-copy">Why <code>mapping_start</code> instead of <code>mapping start</code>? Your code seems out of touch with the example data.</span>
<span class="comment-copy">This would work just in the case when there is just one set of values for <code>line.split(':')</code> but the first answer provides a solution to multiple set of values under apple or ball by using defaultdict(list) and append function.</span>
<span class="comment-copy">this would work with any number of values</span>
<span class="comment-copy"><code>mapping apple         v1: v1a : v1b         v3: v3a : v3b mapping ball         v2: v2a : v2b</code></span>
<span class="comment-copy">my solution is almost the same as the first answer, just slightly different</span>
<span class="comment-copy">In this case, v1 and v3 are in separate lines so wouldn't the value be overwritten by v3?</span>
