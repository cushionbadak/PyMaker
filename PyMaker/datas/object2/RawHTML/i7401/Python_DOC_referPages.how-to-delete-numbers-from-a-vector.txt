<div class="post-text" itemprop="text">
<p>I have this vector </p>
<pre><code>v = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20)
</code></pre>
<p>I want to remove the multiples of 2 and 3. How would I do this? </p>
<p>I tried to do this but I doesn't work:</p>
<pre><code>import numpy as np
V = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20)
Mul3 = np.arange(1,21,3)
Mul2 = np.arange(1,21,2)
V1 = V [-mul2]
V2 = V1 [-mul3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given that you use NumPy already you can use <a href="https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#boolean-array-indexing" rel="nofollow noreferrer">boolean array indexing</a> to remove the multiples of <code>2</code> and <code>3</code>:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; v = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20)  # that's a tuple
&gt;&gt;&gt; arr = np.array(v)  # convert the tuple to a numpy array
&gt;&gt;&gt; arr[(arr % 2 != 0) &amp; (arr % 3 != 0)]
array([ 1,  5,  7, 11, 13, 19])
</code></pre>
<p>The <code>(arr % 2 != 0)</code> creates a boolean mask where multiples of <code>2</code> are <code>False</code> and everything else <code>True</code> and likewise the <code>(arr % 3 != 0)</code> works for multiples of <code>3</code>. These two masks are combined using <code>&amp;</code> (and) and then used as mask for your <code>arr</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I assume by <code>vector</code> you refer to the tuple you set up with the <code>()</code>. </p>
<p>You can use a <a href="http://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="noreferrer">list comprehension</a> with two conditions, using the <code>modulo</code> oprerator you can read up on <a href="https://docs.python.org/3/reference/expressions.html" rel="noreferrer">here</a>:</p>
<pre><code>res = [i for i in v if not any([i % 2 == 0, i % 3 == 0])]
</code></pre>
<p>Returns </p>
<blockquote>
<p>[1, 5, 7, 11, 13, 19]</p>
</blockquote>
<p>This returns a standard Python list; if you want np arrays or sth, just update your question. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the outcome of the modulos 2 and 3 directly for filtering in a <em>list comprehension</em>. This keeps items whose <code>mod 2</code> and <code>mod 3</code> values gives a number other than a <em>falsy</em> 0:</p>
<pre><code>&gt;&gt;&gt; [i for i in v if i%2 and i%3]
[1, 5, 7, 11, 13, 19]
</code></pre>
<p>You can make it more verbose if the above is not intuitive enough by making the conditionals explicitly test for non zero outcomes:</p>
<pre><code>&gt;&gt;&gt; [i for i in v if not i%2==0 and not i%3==0]
[1, 5, 7, 11, 13, 19]
</code></pre>
</div>
