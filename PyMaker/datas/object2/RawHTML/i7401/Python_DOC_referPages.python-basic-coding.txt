<div class="post-text" itemprop="text">
<p>I am new to coding in Python. I am trying to make my code so that if I enter the age a series of text will be printed. However, my code only works if i follow it line by line. For example, when i input the age 2000+ immediately nothing will happen. I need to first input an integer less than 12, followed by an integer over 2000. </p>
<pre><code>print('Please input name')
if input() == 'Alice':
    print('Hi, Alice.Please input age')

if int(input()) &lt; 12:
    print('You are not Alice, kiddo.')
elif int(input()) &gt; 2000:
    print('Unlike you, Alice is not an undead, immortal vampire.')
elif int(input()) == 100:
    print('You are not Alice, grannie.')
elif 12 &lt; int(input()) &lt; 99:
    print('You are Alice!.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>var = input('Please input name ')
if var == 'Alice':
    var = int(input('Hi, Alice.Please input age '))
    if var &lt; 12:
        print('You are not Alice, kiddo.')
    elif var &gt; 2000:
        print('Unlike you, Alice is not an undead, immortal vampire.')
    elif var == 100:
        print('You are not Alice, grannie.')
    elif 12 &lt; var &lt; 99:
        print('You are Alice!.')
else:
    print ("Invalid Name")
</code></pre>
<p>This code works because it asks one time and tries to see if some conditions are true, instead of asking each time. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here I wrote code for your understanding purpose. Take new variable, so that no need to repeat input() method several times. Also, Age validation code keeps inside the first condition and it will be executed when the 1st condition will be true.</p>
<pre><code>print('Please input name')
var = input()
if var == 'Alice':
    print('Hi, Alice.Please input age')
    var = input()
    try:
       if int(var) &lt; 12:
           print('You are not Alice, kiddo.')
       elif int(var) &gt; 2000:
           print('Unlike you, Alice is not an undead, immortal vampire.')
       elif int(var) == 100:
           print('You are not Alice, grannie.')
       elif 12 &lt; int(var) &lt; 99:
           print('You are Alice!.')
    except Exception as ex:
       print('Invalid Data: Error: ' + ex)
else:
    print ("Invalid Name")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Every time you go to another branch in you <code>if</code> you are asking user to enter <strong>another</strong> age! Instead do the following:</p>
<pre><code>age = int(input())
if age &lt; 12:
    print('You are not Alice, kiddo.')
elif age &gt; 2000:
    print('Unlike you, Alice is not an undead, immortal vampire.')
elif age == 100:
    print('You are not Alice, grannie.')
elif 12 &lt; age &lt; 99:
    print('You are Alice!.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>print('Please input name')
if input() == 'Alice':
    print('Hi, Alice.Please input age')

age = int(input()) # take input and assign it on a variable

if age &lt; 12:
    print('You are not Alice, kiddo.')
elif age &gt; 2000:
    print('Unlike you, Alice is not an undead, immortal vampire.')
elif age == 100:
    print('You are not Alice, grannie.')
elif 12 &lt; age &lt; 99:
    print('You are Alice!.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>input</code> is invoked every time when followed by <code>()</code>. So the multiple <code>input()</code>'s in the <code>if</code> <code>elif</code>'s are not necessary.</p>
<p>store the result of <code>input()</code> like <code>age = int(input())</code>, then use <code>age</code> in the <code>if</code> and <code>elif</code> parts instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>input()</code> function returns a string. Quoting <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">the docs</a> (emphasis mine):</p>
<blockquote>
<p>The function then reads a line from input, converts it to a string (stripping a trailing newline), and <strong>returns that</strong>.</p>
</blockquote>
<p>So, in each <code>if</code> when you call <code>input()</code>, you have to enter a new string. Thus, you have to first enter an integer below 12.</p>
<p>To fix this problem, you need to store the original input in a variable. Now, as the docs say, <code>input()</code> returns a string. So, either you can cast (using <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int()</code></a>) the integer in each case, by doing:</p>
<pre><code>if int(age) &lt; 12:
</code></pre>
<p>and storing the variable as a string.</p>
<p>Though, unless you do not have any specific reason to keep the age as a string, I'd recommend you to convert the string while storing the age in the variable in the first place:</p>
<pre><code>age = int (input())
</code></pre>
<p>In this case, <code>age</code> will have an int.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hopefully, this is what you are looking for:</p>
<pre><code>while True:
name = input("Please ENTER your name: ")
if name == "Alice":
   print("Hi Alice!")
   break
print("Sorry, your name isn't correct. Please re-enter.")

age = False
while age != True:
      age = int(input("Please ENTER your age: ")
      age = True
      if age &lt; 12:
           print("You're not Alice, kiddo.")
           age = False
      elif age &gt; 2000:
           print("Unlike you, Alice is not an undead, immortal vampire.")
           age = False
      elif age == 100:
           print("You're not Alice, Granny!")
           age = False
      else:
           print("You are Alice!")
           age = True
</code></pre>
</div>
<span class="comment-copy">don't repeat input each time, assign it to a variable, and compare the variable</span>
<span class="comment-copy">If you got your answer then close it.</span>
<span class="comment-copy">I think we can assume the OP is using Python 3 based on the <code>print</code> function. Therefore, it is likely that <code>raw_input</code> is not available and <code>input</code> is in fact correct.</span>
<span class="comment-copy">oh yes, above query related on P3 but defining of logic is right so just use input() method instead of raw_input() and rest of all are same.</span>
<span class="comment-copy">If I am a beginner, and I see your answer and decide to copy/paste it into my code and run it to better understand what is going on, I will get a <code>SyntaxError</code> where you call <code>print</code> with no parenthesis, and a <code>NameError</code> on <code>raw_input</code>.  I will end up being more confused than before I saw this answer.  Rather than leaving your answer as-is and just saying what needs to be fixed in a comment, you should edit the answer so that is correct.</span>
<span class="comment-copy">Now, I think all should be right. I tested all scenarios on Python 3 shell. Actually, I have Python 2.7 so I suggested according to that way.</span>
