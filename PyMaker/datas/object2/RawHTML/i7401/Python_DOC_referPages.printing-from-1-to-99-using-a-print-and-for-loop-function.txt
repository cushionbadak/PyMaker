<div class="post-text" itemprop="text">
<p>I tried the following in the IDLE of Python 3.6</p>
<pre><code>print(value for value in range(1,100))
</code></pre>
<p>A message is produced in the IDLE which says </p>
<p><code>&lt;generator object &lt;genexpr&gt; at 0x101b73a40&gt;</code></p>
<p>I'm confused what this means. Have I done anything wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>(value for value in range(1,100))</code> produces <code>generator</code> object, if you want to print <code>list</code>, just wrap it in <code>[]</code></p>
<pre><code>print([value for value in range(1,100)])
</code></pre>
<p>or you can simply</p>
<pre><code>print(list(range(1,100)))
</code></pre>
<p>You can read what generators are <a href="https://docs.python.org/3/glossary.html#term-generator" rel="noreferrer">HERE</a></p>
<blockquote>
<p>A function which returns a generator iterator. It looks like a normal function except that it contains yield expressions for producing a series of values usable in a for-loop or that can be retrieved one at a time with the next() function.</p>
<p>Usually refers to a generator function, but may refer to a generator iterator in some contexts. In cases where the intended meaning isnâ€™t clear, using the full terms avoids ambiguity.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>print([value for value in range(1,100)])
</code></pre>
<p>You should include it inside a list <code>[]</code> to generate the values</p>
</div>
<div class="post-text" itemprop="text">
<p>All you wanted is to use list comprehension here but you are not using list.<br/>
Simply it should be   </p>
<pre><code>for i in range(1,100):
    print(i)
</code></pre>
<p>If you want to still use list comprehension it will be like this </p>
<pre><code>[print(x) for x in range(1,100)]
</code></pre>
<p>this will give the output like </p>
<pre><code>1
2
3
....
99
100
[None, None, None, ...97 times more]
</code></pre>
</div>
<span class="comment-copy">Alternatively, just wrap your statement with <code>list(..)</code>. <code>print(list(value for value in range(1,100)))</code>. I should mention vanilla list comprehensions are actually faster than calling <code>list(..)</code>.</span>
<span class="comment-copy">Maybe you meant <code>(print value) for value in range(1, 100)</code>?</span>
