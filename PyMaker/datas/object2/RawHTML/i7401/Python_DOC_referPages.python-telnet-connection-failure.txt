<div class="post-text" itemprop="text">
<p>I have device that accepts telnet connection to use it with AT commands</p>
<p>This is my code, should be simple I believe but it won't work for some reason I'm fairly new to telnet lib so I don't understand what I am missing here</p>
<pre><code>def connect(self, host, port):
    try:
        Telnet.open(host, port)
        Telnet.write('AT'+"\r")
        if Telnet.read_until("OK"):
            print("You are connected")
    except:
        print("Connection cannot be established")
</code></pre>
<p>it always hits the except.</p>
<p>I am also getting the following error when I just try and import telnetlib and run it just with an IP with no port.</p>
<pre><code>Traceback (most recent call last):
File "&lt;pyshell#9&gt;", line 1, in &lt;module&gt;
Telnet.open('192.168.0.1')
TypeError: unbound method open() must be called with Telnet instance as 
first argument (got str instance instead)
</code></pre>
<p>I am having problems understanding what does it want me to do.</p>
</div>
<div class="post-text" itemprop="text">
<p>The constructor for the <code>Telnet</code> class needs to be called:</p>
<pre><code>import traceback

def connect(self, host, port):
    try:
        telnet_obj = Telnet(host, port) # Use the constructor instead of the open() method.
    except Exception as e: # Should explicitly list exceptions to be caught. Also, only include the minimum code where you can handle the error.
        print("Connection cannot be established")
        traceback.print_exc() # Get a traceback of the error.
        # Do further error handling here and return/reraise.

    # This code is unrelated to opening a connection, so your error
    # handler for establishing a connection should not be run if
    # write() or read_until() raise an error.
    telnet_obj.write('AT'+"\r") # then use the returned object's methods.
    if telnet_obj.read_until("OK"):
        print("You are connected")
</code></pre>
<p>Related: <a href="https://stackoverflow.com/questions/2232740/python-newbie-having-a-problem-using-classes">Python newbie having a problem using classes</a></p>
</div>
<span class="comment-copy">The error is clear, it is necessary that you indicate the port.</span>
<span class="comment-copy">Shouldn't the port default to 23?</span>
<span class="comment-copy">telnet = Telnet() , telnet.open(host, port) . Its evident from the error that open is not a static method</span>
<span class="comment-copy">I think I see. Both problems stem from <code>Telnet.open(...)</code>. You need to make an instance first, then call <code>open</code> and <code>write</code> on the instance. See answer by lungj</span>
<span class="comment-copy">@eyllanesc What quamrana said: <a href="https://docs.python.org/3/library/telnetlib.html#telnetlib.Telnet.open" rel="nofollow noreferrer">the port number defaults to the standard Telnet port (23)</a>. But it's better to avoid using the <code>.open</code> method, and just use the <code>telnetlib.Telnet</code> constructor to open the connection.</span>
<span class="comment-copy">It's not a good idea to use a bare <code>except</code> clause. Explicitly name the exception(s) you want to catch!</span>
<span class="comment-copy">@PM2Ring true; I just modified the code from OP to address the issue being faced. I'll at least slightly improve the code in an edit.</span>
<span class="comment-copy">Did you see "Connection cannot be established"? If there was a connection error, <code>telnet_obj</code> will not be defined and you'll get that particular error. As such, you must return from the function or reraise the exception if you encounter a connection error.</span>
<span class="comment-copy">@Mike.G lungj 's code isn't a complete solution: it <i>ignores</i> errors. You can put a <code>raise</code> statement after the <code>print("Connection cannot be established")</code> so that the code will abort (with an error message) after it executes that <code>print</code> call. But if you're getting that "Connection cannot be established" message, you need to verify that the host string &amp; port number are correct.</span>
<span class="comment-copy">What @PM2Ring said :) Also, I've slightly updated the answer to print an exception trace to help with your troubleshooting.</span>
