<div class="post-text" itemprop="text">
<p>The following is from the <a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer">P3 documentation</a>:</p>
<p>"The [traceback] module provides a standard interface to extract, format and print stack traces of Python programs. It exactly <strong>mimics</strong> the behavior of the Python <strong>interpreter</strong> when it prints a stack trace. This is useful when you want to print stack traces <strong>under program control</strong>, such as in a “wrapper” around the interpreter."</p>
<p>1) Why does the traceback module "mimic" the interpreter?</p>
<p>2) Why is this useful "under program control" (what does this phrase mean)?</p>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand, by mimic the interpreter, it is meant that the formatting and wording on exception reporting is exactly similar to that performed by the interpreter. That is, this:</p>
<pre><code>import traceback
try:
    raise AttributeError("Foo")
except:
    traceback.print_exc()
</code></pre>
<p>Displays the same message as this would:</p>
<pre><code>raise AttributeError("Foo")
</code></pre>
<p>which is:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 2, in &lt;module&gt;
AttributeError: Foo
</code></pre>
<p>As for your second question, you can see an example of that in the <a href="https://docs.python.org/3/library/traceback.html#traceback-examples" rel="nofollow noreferrer">examples section</a> of the module documentation. The first example illustrates simple "wrapping" of the interpreter (with help from <code>input</code> and <code>exec</code>) and reporting by using <code>print_exc</code> (which mimics the interpreter). </p>
</div>
<span class="comment-copy">So the exception report looks the same whether we catch the exception or not? but it is actually generated by different mechanisms depending on whether we caught it or not (either the interpreter its self or the tracebacks module)</span>
