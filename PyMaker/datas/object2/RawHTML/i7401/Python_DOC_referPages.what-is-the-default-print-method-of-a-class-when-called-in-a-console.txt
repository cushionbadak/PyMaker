<div class="post-text" itemprop="text">
<p>In a Python interactive console (IDLE, IPython, etc), if I enter a variable name by itself, I will get back the equivalent of printing that variable.</p>
<pre><code>In [1]: foo = {'a':1, 'b':2}
In [2]: foo
Out [2]: {'a':1, 'b':2}
In [3]: print(foo)
Out [3]: {'a':1, 'b':2}
</code></pre>
<p>I'd like to incorporate this functionality into a container class, like:</p>
<pre><code>class Foo():
    def __init__(self, bar):
        self.bar = bar
    def __mysteryfunction__(self)
        print(self.bar)
</code></pre>
<p>I'd like the class to print as before, but instead I get:</p>
<pre><code>In [1]: foo = Foo({'a':1, 'b':2})
In [2]: foo
Out [2]: &lt;__main__.foo at 0x1835c093128&gt;
</code></pre>
<p>I've searched for nearly every permutation I can think of for what this might be called, and haven't found the same question. Is this a class method like I'm hoping, or something built into the console interpreter? If the latter, can it be modified?</p>
</div>
<div class="post-text" itemprop="text">
<p>For <code>print x</code>, <code>x.__str__</code> is called.
For output in a REPL when an object is returned, <code>x.__repr__</code> is called.</p>
<p>Read about <a href="https://docs.python.org/2/library/functions.html#str" rel="nofollow noreferrer"><code>str</code></a> and <a href="https://docs.python.org/2/library/functions.html#repr" rel="nofollow noreferrer"><code>repr</code></a> functions.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the <code>__str__</code> method of a class.</p>
<p>From the <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p><code>object.__str__(self)</code></p>
<p>Called by str(object) and the built-in functions format() and print() to compute the “informal” or nicely printable string representation of an object. The return value must be a string object.</p>
</blockquote>
<p>For example:</p>
<pre><code>class Foo:
    def __init__(self, bar):
        self.bar = bar

    def __str__(self):
        return 'My name is foo and my bar is ' + self.bar

foobar = Foo('high')

print(foobar)  # My name is foo and my bar is high
</code></pre>
</div>
<span class="comment-copy">Use the magic methods <code>__str__</code> and <code>__repr__</code> for <code>print</code> and REPL respectively.</span>
<span class="comment-copy">I should also note I'm aware of the <b>call</b> function, but wonder if there's a way to just use <code>foo</code> instead of <code>foo()</code>.</span>
<span class="comment-copy">Perfect, <b>repr</b> is what I was looking for. Added a complete answer to the end of the question based on yours. Thanks!</span>
