<div class="post-text" itemprop="text">
<p>I am working with RC-522 RFID Reader for my project. I want to use it for paying transportation fee. I am using python and used the code in: <a href="https://github.com/mxgxw/MFRC522-python.git" rel="nofollow noreferrer">https://github.com/mxgxw/MFRC522-python.git</a></p>
<p>On python script Read.py, Sector 8 was read with the use of this code:</p>
<pre><code># Check if authenticated
    if status == MIFAREReader.MI_OK:
        MIFAREReader.MFRC522_Read(8) &lt;---- prints the sector 8
        MIFAREReader.MFRC522_StopCrypto1()
    else:
        print "Authentication error"
</code></pre>
<p>The output of this was:</p>
<pre><code>Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
</code></pre>
<p>So that last part(Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), I convert it to string. I want that to be a list but I can't. Tried to put it on a variable x and use x.split() but the output when I execute print(x) is "None".</p>
<pre><code>x = str(MIFAREReader.MFRC22_READ(8))
x = x.split()
print x #PRINTS ['NONE']
</code></pre>
<p>I want it to be like this: </p>
<blockquote>
<p>DATA = [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</p>
</blockquote>
<p>so that I can use the sum(DATA) to check for balance, and I can access it using indexes like DATA[0]</p>
<p>Thanks a lot!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Follow these steps: </p>
<ol>
<li><p>Open <code>MFRC522.py</code> &gt;&gt; header file for RFID Reader </p>
<p>vi MFRC522.py</p>
<p>look for function</p></li>
</ol>
<blockquote>
<p>def MFRC522_Read(self, blockAddr)</p>
</blockquote>
<p>add this line <code>return backData</code> at the end of function.</p>
<p>Save it. </p>
<ol start="2">
<li>In read() program, call it like </li>
</ol>
<p><code>DATA=(MIFAREReader.MFRC522_Read(8)) 
 print 'DATA :',DATA</code></p>
<p>I hope this solves the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use .split(",") to specify the delimiter ",".</p>
<p>Something like that:</p>
<pre><code>input_string = "[100, 234, 0, 0, 567, 0, 0, 0, 3, 0, 235, 0, 0, 12, 0, 0]"

listed_string = input_string[1:-1].split(",")
sum = 0

for item in listed_string:
    sum += int(item)

print(sum)
</code></pre>
<p>prints </p>
<pre><code>1151
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In line with Moutch answer, using list comprehension:</p>
<pre><code>input='[100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]'
DATA = [int(item) for item in input[1:-1].split(',')]
print(sum(DATA))
</code></pre>
<p>If data string is entire output of Read.Py</p>
<pre><code>input="""Card read UID: 67,149,225,43
Size: 8
Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"""
#find index position of 'Sector' text and select from this using slices.
inputn = input[input.index('Sector')+9:] 
DATA = [int(item) for item in inputn[1:-1].split(',')]
print(DATA) 
print(sum(DATA))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have some guarantee about the source and nature of the data in that list (and you know the format will always be the same), <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">Python's <code>eval</code></a> would work. For example:</p>
<pre><code>original_string = 'Sector 8 [100, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]'
data_start_index = original_string.index('[') # find '['
data_string = original_string[data_start_index:] # extract the list
data = eval(data_string)
print(type(data)) # &lt;class 'list'&gt;
print(sum(data)) # 101
</code></pre>
<p>If you don't have these guarantees, you'll have to use the <code>split</code> method as suggested by Moutch, due to the fragility and exploitability of <code>eval</code> - it blindly executes whatever (potentially malicious) code is passed to it.</p>
<p><strong>Edit</strong>: Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> instead of plain old <code>eval</code> for safety guarantees. This still requires that the formatting of the string be consistent (e.g., that it always have square brackets) in order to properly evaluate to a Python list.</p>
</div>
<span class="comment-copy">Where do those values (<i>100,0, etc</i>) come from?</span>
<span class="comment-copy">The values can be written and edited. It is a sector from RFID card.</span>
<span class="comment-copy">what happens when you don't split it and just <code>print(x)</code> ?</span>
<span class="comment-copy">The string initial value is: "Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]". How can I remove that "Sector 8"? If I use split(), and print that string, it will print '[None]'</span>
<span class="comment-copy">ValueError: substring not found</span>
<span class="comment-copy">inputn = Input[Input.index('Sector')+9:] ValueError: substring not found. (I capitalized the first letter of input because i think it's a command. it turns purple when typed.</span>
<span class="comment-copy">input is referred to input var, which stores output of Read.py. Seems that you environment recognize this with other meaning (i test this in pure python 3.5). You can substitute this variable name with some other, so: <code>rfidout="""Card read UID: 67,149,225,43 Size: 8 Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]""" #find index position of 'Sector' text and select from this using slices. inputn = rfidout[rfidout.index('Sector')+9:]  DATA = [int(item) for item in inputn[1:-1].split(',')] print(DATA)  print(sum(DATA))</code></span>
<span class="comment-copy"><b>Note triple quotes in rfidout multiline string</b></span>
<span class="comment-copy">If string initial value is: "Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" the following code removes "Sector 8" substring and return due result: <code>rfidout="Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" DATA = [int(item) for item in rfidout[10:-1].split(',')] print(DATA)  print(sum(DATA))</code>  it remove "Sector 8" substring by list slicing</span>
<span class="comment-copy">The string initial value is: "Sector 8 [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]". How can I remove that "Sector 8"? If I use split(), and print that string, it will print '[None]'. I have to figure out first how will it become " [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" only</span>
<span class="comment-copy">You can use the Python string <code>index()</code> method, which returns the index of the first instance of a given character in a string. For example, <code>'abcdefgh'.index('c')</code> returns 2. So use <code>index()</code> to find the index of <code>[</code> and just take the rest of the string starting at that index. I edited my answer to reflect this.</span>
