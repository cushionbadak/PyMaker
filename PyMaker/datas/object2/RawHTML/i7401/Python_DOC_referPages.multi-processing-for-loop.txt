<div class="post-text" itemprop="text">
<p>I am trying to create a script that clones repositories and then removes write access from the local repos. I have a list that stores a repo object and I iterate over this list to clone and lock the repo.</p>
<p>I tried using <code>multiprocessing</code> to speed up this task but it seems to have actually slowed it down...</p>
<pre><code>def install():
    os.chdir(ROOT_DIR)
    if os.path.isdir("./repos"):
        for repo in getRepos():
            os.chdir(ROOT_DIR)
            #Process(target=repo.clone()).start()
            #Process(target=lock, args=(repo,)).start()
            repo.clone()
            lock(repo)
    else:
        os.mkdir("./repos")
        install()
</code></pre>
<p>The two commented lines are the subproccesses that I tried to create. Am I using this wrong?</p>
<p>With subprocessing my average execution time was: 5.8 seconds
Without subprocessing my average execution time was: 4.5 seconds.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try something like:</p>
<pre><code>from multiprocessing import Pool

def processRepo(repo):
    repo.clone()
    lock(repo)


def install():
    os.chdir(ROOT_DIR)
    if os.path.isdir("./repos"):
        pool = Pool()
        pool.map(processRepo, getRepos())
        pool.close()
        pool.join()
    else:
        os.mkdir("./repos")
        install()
</code></pre>
</div>
<span class="comment-copy">You're creating processes at each loop iteration, each process will work on one repo only. You want to ideally delegate a group to work on a chunk of them. The answer below solves that for you but does not explain what it does.</span>
<span class="comment-copy">This is good and probably works. But an explanation of what you're doing would certainly help OP and future readers. Also, include <code>from multiprocessing import Pool</code></span>
<span class="comment-copy">Perfect! This brought execution to around 3.4 seconds, why is that I don't have to pass a repo argument to processRepo?</span>
<span class="comment-copy">@APorter1031: Because <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map" rel="nofollow noreferrer"><code>pool.map()</code></a>.</span>
