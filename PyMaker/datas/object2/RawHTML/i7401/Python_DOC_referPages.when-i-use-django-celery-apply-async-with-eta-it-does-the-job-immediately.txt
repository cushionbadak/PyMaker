<div class="post-text" itemprop="text">
<p>i looked at celery documentation and trying something from it but it not work like the example. maybe i'm wrong at some point, please give me some pointer if i'm wrong about the following code</p>
<p>in views.py i have something like this:</p>
<pre><code>class Something(CreateView):
  model = something

  def form_valid(self, form):
    obj = form.save(commit=False)
    number = 5
    test_limit = datetime.now() + timedelta(minutes=5)
    testing_something.apply_async((obj, number), eta=test_limit)
    obj.save()
</code></pre>
<p>and in celery tasks i wrote something like this:</p>
<pre><code>@shared_task()
def add_number(obj, number):
    base = Base.objects.get(id=1)
    base.add = base.number + number
    base.save()
return obj
</code></pre>
<p>my condition with this code is the celery runs immediately after CreateView runs, my goal is to run the task add_number once in 5 minutes after running Something CreateView. Thank You so much</p>
<p><strong>Edit:</strong> </p>
<ol>
<li>i've tried change the <code>eta</code> into <code>countdown=180</code> but it still running function <code>add_number</code> immediately. i also tried longer countdown but still running immediately</li>
<li>i've tried @johnmoustafis answer but still the same, the task run immediately</li>
<li>i've also tried @dana answer but it still the same, the task run immediately</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Celery by default uses UTC time.<br/>
If your timezone is "behind" the UTC (UTC - HH:MM) the <code>datetime.now()</code> call will return a timestamp which is "behind" UTC, thus causing your task to be executed immediately.</p>
<p>You can use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.utcnow" rel="nofollow noreferrer"><code>datetime.utcnow()</code></a> instead:</p>
<pre><code>test_limit = datetime.utcnow() + timedelta(minutes=5)
</code></pre>
<hr/>
<p>Since you are using django, there exist another option:</p>
<p>If you have set the <code>USE_TZ = True</code> in your <code>setting.py</code>, you have enabled the <a href="https://docs.djangoproject.com/en/1.11/topics/i18n/timezones/" rel="nofollow noreferrer">django timezone settings</a> and you can use <code>timezone.now()</code> instead of <code>datetime.utcnow()</code>:</p>
<pre><code>from django.utils import timezone

...

test_limit = timezone.now() + timedelta(minutes=5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You might have the <code>CELERY_ALWAYS_EAGER=True</code> setting. </p>
<p>Could you also post your configuration and the Celery version you are using? </p>
<p><a href="http://docs.celeryproject.org/en/3.1/configuration.html" rel="nofollow noreferrer">Here</a> you might find some useful information.</p>
</div>
<div class="post-text" itemprop="text">
<p>'test_limit' variable hasn't got timezone information. So Celery will understand eta param as UTC time.</p>
<p>Please use modified code:</p>
<pre><code>class Something(CreateView):
    model = something

    def form_valid(self, form):
        obj = form.save(commit=False)
        number = 5

        test_limit = datetime.now()
        test_limit = test_limit.replace(tzinfo=tz.tzlocal())
        test_limit = test_limit + timedelta(minutes=5)

        testing_something.apply_async((obj, number), eta=test_limit)
        obj.save()
</code></pre>
</div>
<span class="comment-copy">i've tried the timezone.now() and datetime.utcnow() even i tried using my_date = datetime.now(pytz.timezone('US/Pacific')) just now but still the same</span>
<span class="comment-copy">@knightzoid Have you set the appropriate timezone in <code>django.settings</code>? <a href="https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-TIME_ZONE" rel="nofollow noreferrer">docs.djangoproject.com/en/1.11/ref/settings/â€¦</a></span>
<span class="comment-copy">yes i set the timezone in settings.py  <code>TIME_ZONE = 'US/Pacific'</code></span>
<span class="comment-copy">i've done some debugging on terminal using <code>pdb</code> so i can see when exactly the <code>time_limit</code> are, but it's show the correct time for me</span>
<span class="comment-copy">@knightzoid try replacing <code>eta</code> with <code>countdown=time_in_seconds</code> to check if this is working with the expected delay or the problem is elsewhere. Also try to set <code>CELERY_ALWAYS_EAGER=False</code> and retry with <code>timezone.now()</code> etc.</span>
<span class="comment-copy">i change <code>CELERY_ALWAYS_EAGER</code> to <code>False</code> but still did the same. i use  <code>celery==3.1.19</code> and here's my celery settings on settings.py <code>CELERY_IMPORTS = ("somewhere.utils.tasks", )  CELERYBEAT_SCHEDULE = {     'send-post-office-mails': {         'task': 'somewhere.utils.tasks.send_post_office_mails',         'schedule': crontab(),     },     'rebuild-index': {         'task': 'somewhere.utils.tasks.rebuild_search_index',         'schedule': crontab(minute=0, hour='*'),     }, }  CELERY_ALWAYS_EAGER = False</code></span>
<span class="comment-copy">Some issues I see with your settings is that you don't define a <code>BROKER_URL</code> and that might be the problem. Following <a href="http://docs.celeryproject.org/en/3.1/getting-started/first-steps-with-celery.html" rel="nofollow noreferrer">this guide</a> might help you.</span>
<span class="comment-copy">i'm using redis as my broker and i put this also in my settings.py <code>BROKER_URL = env("DJANGO_BROKER_URL", default='redis://localhost:6379/0')</code></span>
