<div class="post-text" itemprop="text">
<p>So for example if I want to know the number of times hello occurs in this word: <code>hellohellothere</code>, my code will give me <code>2</code> which is correct. But if I were to have <code>hellotherehello</code>, my code does not give me <code>2</code>, which means I think there is something wrong with my second for loop.</p>
<p>My code counts the number of letters in the string, and then I divide it by the length of the string to give how many times the string actually occurs, I don't think that really is the problem though. </p>
<p>here is the code. </p>
<pre><code>word = input("Enter a word: ")
find = input("Enter string to find")
count = int(0)

for x in range(0, len(word)-len(find)):
    if word[x] == find[0]:
        for i in range(0, len(find)):
            if word[x+i] == find[i]:
                count += 1
            else:  break

    count = count/len(find)

    print("Number of times it occurs is: ", count) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The other answers recommend the string.count function, and that is how an experienced Python programmer with knowledge of the standard library would do it.  If I look at your approach, however, I see logic errors.</p>
<p>Your main loop has an off-by-one error.  The function <code>range(0, n)</code> iterates from 0 to n-1.  In the string 'hellotherehello' this will end the iteration one character before you get to the second occurrence of hello.  What you want is:</p>
<pre><code>for x in range(0, len(word)-len(find) + 1):
</code></pre>
<p>You are trying to use the variable <code>count</code> for two different purposes: to count the number of successful matches, and to count characters one by one as you search for a match.  When you've already found one match and you begin to look for a second one, your <code>count</code> variable holds the value 1; until you find the first match it's 0.  Much better is to test the characters one at a time for FAILURE rather than SUCCESS, and use Python's <code>for:else:</code> construct.  Inside the loop you will have this:</p>
<pre><code>if word[x] == find[0]:
    for i in range(0, len(find)):
        if word[x+i] != find[i]:
            break
    else:
        count += 1
</code></pre>
<p>Good luck with learning Python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem here is that it thinks 'he' in the word 'there' is the beginning of hello and counts towards count. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a built-in function for this: <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="nofollow noreferrer">count</a></p>
<pre><code>print("Number of times it occurs is: ", word.count(find)) 
</code></pre>
</div>
<span class="comment-copy"><code>word.count(find)</code>...</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/42765930/better-way-in-python-to-count-string-in-another-string">Better way in Python to count string in another string</a></span>
<span class="comment-copy">thanks so much!!</span>
