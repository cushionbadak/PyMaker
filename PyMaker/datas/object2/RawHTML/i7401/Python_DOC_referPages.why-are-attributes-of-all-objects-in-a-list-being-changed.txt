<div class="post-text" itemprop="text">
<p>I want to create array of objects in python.</p>
<pre><code>class user:
    j = [0, 0]

AllUsers = []
AllUsers.append(user)
AllUsers.append(user)

AllUsers[0].j[0] = 1

for i in AllUsers:
    print(i.j)
</code></pre>
<p>And I expect output:</p>
<pre class="lang-none prettyprint-override"><code>[1, 0]
[0, 0]
</code></pre>
<p>but am getting:</p>
<pre class="lang-none prettyprint-override"><code>[1, 0]
[1, 0]
</code></pre>
<p>Where is the mistake?</p>
<p>So, I have seen a similar problems with "array of arrays", but I can't use their solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are confusing instances and classes. Here is a working example:</p>
<pre><code>class user:
    def __init__(self):
        self.j = [0, 0]


AllUsers = []
AllUsers.append(user())  # note the extra () which creates a new instance
AllUsers.append(user())

AllUsers[0].j[0] = 1

for i in AllUsers:
    print(i.j)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this is the code you tried to paste in?</p>
<pre><code>class user:
    j = [0, 0]

AllUsers = []
AllUsers.append(user)
AllUsers.append(user)

AllUsers[0].j[0] = 1

for i in AllUsers:
    print(i.j)
</code></pre>
<p>There are two main problems.  First, <code>AllUsers</code> is a list, not an array.  Second, you're appending a class to the list, not an instance of that class.  To achieve what you're aiming for, you need to create an instance of the user class that you append.  That would look something more like</p>
<pre><code>AllUsers.append(user())
</code></pre>
<p>For the sake of formatting, generally it's good to use uppercase first letters for your classes so that they're easy to tell apart from variables and class instances.</p>
</div>
<span class="comment-copy">I don't see any arrays. And your indentation is off.</span>
<span class="comment-copy">The answer to your question lies in class vs instance attributes. Consider reading <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">a python tutorial</a>.</span>
<span class="comment-copy">You aren't putting different instances of class <code>user</code> in the <code>AllUsers</code> list, you're putting multiple references to the class itself in it. However even if you put different instances in (by creating them with <code>user()</code>), you would still have the problem because <code>j</code> has been defined as a class-level attribute, meaning it's shared by all instances of the class. The result—either way—is that changing the value of <code>j</code> through any of them effectively changes it in all the existing members of the list.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/207000/python-difference-between-class-and-instance-attributes">Python: Difference between class and instance attributes</a></span>
<span class="comment-copy">Thank you a lot!</span>
