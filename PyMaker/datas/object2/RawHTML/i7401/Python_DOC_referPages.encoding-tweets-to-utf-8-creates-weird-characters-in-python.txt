<div class="post-text" itemprop="text">
<p>I am downloading all of a user's tweets, using the twitter API.</p>
<p>When I download the tweets, I encode them in utf-8, before placing them in a CSV file.</p>
<pre><code>tweet.text.encode("utf-8")
</code></pre>
<p>I'm using python 3</p>
<p>The issue is that this creates really weird characters in my files.
For example, the tweet which reads</p>
<pre><code>"But I’ve been talkin' to God for so long that if you look at my life, I guess he talkin' back." 
</code></pre>
<p>Gets turned into</p>
<pre><code>"b""But I\xe2\x80\x99ve been talkin' to God for so long that if you look at my life, I guess he talkin' back. """
</code></pre>
<p>(I see this when I open the CSV file that I wrote this encoded text to).</p>
<p>So my question is, how can I stop these weird characters from being created.</p>
<p>Also, if someone can explain what the <code>b'</code> which starts every line, means, that would be super helpful.</p>
<p>Here is the full code:</p>
<pre><code>    outtweets = [ [tweet.text.encode('utf-8')] for tweet in alltweets]

#write the csv  
with open('%s_tweets.csv' % screen_name, 'wt') as f:
    writer = csv.writer(f)
    writer.writerow(["text"])
    writer.writerows(outtweets)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is not a strange character, that is a <a href="https://en.wikipedia.org/wiki/Quotation_mark" rel="nofollow noreferrer">RIGHT SINGLE QUOTATION MARK</a> (U+2019). You can often see that character in submits done from OSX based browsers.</p>
<p>If you need ASCII for everything you can try:</p>
<pre><code>import unicodedata
unicodedata.normalize('NFKD', tweet.text).encode('ascii','ignore')
</code></pre>
<p>If you encode a string in to bytes sequence, and then output that bytes sequence, you should expect the <code>b"..."</code> that indicates a byte sequence and not a normal string.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using <code>str.encode()</code>, which turns the string in to a bytes object, hence the b at the beginning of the string.</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.encode</a></p>
<p>EDIT: I could not reproduce the <code>UnicodeError</code> from the code you provided. The following works fine for me:</p>
<pre><code>import csv

class Tweet:
    def __init__(self, text):
        self.text = text

alltweets = [Tweet("But I’ve been talkin' to God for so long that if you look at my life, I guess he talkin' back.")]

outtweets = [ [tweet.text] for tweet in alltweets]

#write the csv
with open('test.csv', 'wt') as f:
    writer = csv.writer(f)
    writer.writerow(["text"])
    writer.writerows(outtweets)
</code></pre>
<p>resulting in </p>
<pre><code>text
"But I’ve been talkin' to God for so long that if you look at my life, I guess he talkin' back."
</code></pre>
<p>Where exactly does the error get raised and for which string?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to give the correct output encoding when writing your csv-file:</p>
<pre><code>with open("tweets.csv", 'wt', encoding="utf8") as output:
    writer = csv.writer(output)
    writer.writerows([tweet.text] for tweet in alltweets)
</code></pre>
</div>
<span class="comment-copy">You don't have to encode the text explicitly. This is done by file output encoding.</span>
<span class="comment-copy">But if I don't encode it explicitly, I get the following error: 'UnicodeEncodeError: 'ascii' codec can't encode character '\u201c' in position 1: ordinal not in range(128)'</span>
<span class="comment-copy">It's okay for them to remain encoded. When reading into a program, you can open it and specify an encoding scheme: <code>with open('test.csv', encoding='utf-8') as f:</code></span>
<span class="comment-copy">Show the code you use.</span>
<span class="comment-copy">I added the full code now</span>
<span class="comment-copy">Is there a way for me to convert all those into their proper symbols?</span>
<span class="comment-copy">Why do you think it is not a proper symbol. I hope you're not restricting properness to the ASCII characters set, do you?</span>
<span class="comment-copy">In case anyone else read this answer and wondered what the <code>'NFKD'</code> option does, see <a href="https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms" rel="nofollow noreferrer">wiki page</a> - via <a href="https://stackoverflow.com/a/14682498">stackoverflow.com/a/14682498</a></span>
<span class="comment-copy">Thanks a lot. Is there a way to remove the b?</span>
<span class="comment-copy">Well, not encoding it in the first place would be the way to go. Could you share an example of your code so that we can see what exactly causes your error? It should suffice just saving the (by default UTF-8 encoded) string to the csv.</span>
<span class="comment-copy">I added the full code now</span>
