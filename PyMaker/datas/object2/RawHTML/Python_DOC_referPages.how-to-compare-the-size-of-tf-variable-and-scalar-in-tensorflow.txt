<div class="post-text" itemprop="text">
<p>I use <code>Tensorflow</code> to build my model, and I want to judge the training step and if the step is larger than <code>10000</code>, my loss will change. The follows is part of my code.</p>
<pre><code>self.global_step = tf.Variable(0, name="global_step", trainable=False)
change = tf.cond(tf.greater(self.step,10000), lambda: True, lambda: False)

if change:
   self.loss = 
</code></pre>
<p>But it meets error as follows:</p>
<pre><code>TypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. 
Use `if t is not None:` instead of `if t:` to test if a tensor is defined, 
and use TensorFlow ops such as tf.cond to execute subgraphs conditioned 
on the value of a tensor.
</code></pre>
<p>Hopefully for help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You just need to evaluate this tensor first</p>
<pre><code>step = tf.Variable(0, name="global_step", trainable=False)
change = tf.cond(tf.greater(step,10000), lambda: True, lambda: False)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    if sess.run(change):   
        print('Ok')
</code></pre>
<p>If you substitute <code>if sess.run(change)</code> with <code>if change</code> you will get the error you mentioned</p>
</div>
<div class="post-text" itemprop="text">
<p>If it is tensorflow 2.0 then according to the <a href="https://www.tensorflow.org/alpha/guide/autograph" rel="nofollow noreferrer">doc.</a> the distinction is handled for us. </p>
<p>That is what it seems to do.</p>
<pre><code>@tf.function
def check(x,y):
  return tf.cond(tf.greater(x,y), lambda: True, lambda: False)


print(check(tf.constant(2),2))
</code></pre>
</div>
