<div class="post-text" itemprop="text">
<p>I'm trying to learn how to do python regular expressions. I want the following program to search for the string 'N\S\A' in the input string.  I read (<a href="https://developers.google.com/edu/python/regular-expressions?csw=1" rel="nofollow">here</a>) that you have to make strings raw strings if you want to deal with '\' characters. But I put the r in front of the match string and it's still not working. (Whether inword is 'NSA' or 'N\S\A'...)</p>
<pre><code>import re
inword = input('Enter in text that may or may not be suspicious: ')
print("Inword is:", inword)
mword  = re.search(r'N\S\A',inword)
if mword :
    print('Matched',mword .group())
    #deployDrones();
else:
    print('Not matched')
</code></pre>
<p>Why isn't this working? What can I do to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need regular expression.</p>
<p>Use <code>in</code> operator:</p>
<pre><code>&gt;&gt;&gt; inword = 'Hello N\S\A!'
&gt;&gt;&gt; r'N\S\A' in inword
True
</code></pre>
<p>If you really need regular expression, you need to escape <code>\</code> itself, because <code>\S</code> match non-space character (<code>\A</code> also has special meaning):</p>
<pre><code>&gt;&gt;&gt; inword = 'Hello N\S\A!'
&gt;&gt;&gt; re.search(r'N\S\A', inword)
&gt;&gt;&gt; re.search(r'N\\S\\A', inword)
&lt;_sre.SRE_Match object at 0x7f804ea33370&gt;
</code></pre>
<blockquote>
<p>\S</p>
<p>When the UNICODE flags is not specified, matches any non-whitespace
  character; this is equivalent to the set [^ \t\n\r\f\v] The LOCALE
  flag has no extra effect on non-whitespace match. If UNICODE is set,
  then any character not marked as space in the Unicode character
  properties database is matched.</p>
<p>\A</p>
<p>Matches only at the start of the string.</p>
</blockquote>
<p>from <a href="http://docs.python.org/2/library/re.html#regular-expression-syntax" rel="nofollow">Regular expression syntax</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To include a backslash as a character without any special meaning in a regular expression, you have to escape it with another backslash.</p>
<p>In your case, you should use:</p>
<pre><code>mword  = re.search(r'N\\S\\A',inword)
</code></pre>
<p>Raw strings make python treat backslash as an ordinary character, but it still has a special meaning in regular expression.</p>
</div>
<span class="comment-copy">Fair enough...but what would I do if I HAD to use regular expresion?</span>
<span class="comment-copy">@Thornshadow17432, I updated the answer. Check it out.</span>
<span class="comment-copy">Oh, ok thank you, that was exactly what I needed. I'll accept your answer as soon as I can.</span>
<span class="comment-copy">but why do you think putting an <code>r</code> before the regex not do the same job? Isn't it asking python to consider the elements in regex as literal characters?</span>
<span class="comment-copy">@user1993, Using raw string is to make the escape <code>\ </code> in Python string. Regular expression itself also require escaping. Please read <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code> module documentation</a> (the second paragraph mentions it.)</span>
