<div class="post-text" itemprop="text">
<p>I'm writing a state machine based python program that currently prints to the console the state of the machines. This is useful as a log, but not the most user friendly interface.</p>
<p>I'm interested to know if there are good examples of using ncurses in Python, preferably something in OOP that presents changing information (eg: state information) in a table.</p>
<p>The have already tried the <code>curses</code> package in python, however it is not as OO as I want.</p>
<p>This is what the stream currently looks like:</p>
<pre><code>manager:    st_machine_01    state INITIALISE
manager:    st_machine_01    state GET_LIST_PAGES
manager:    st_machine_02    state EXIT
manager:    st_machine_03    state INITIALISE
manager:    st_machine_03    state GET_LIST_PAGES
manager:    st_machine_04    state EXIT
manager:    st_machine_05    state INITIALISE
manager:    st_machine_05    state GET_LIST_PAGES
manager:    st_machine_01    state GET_LIST_PAGES
manager:    st_machine_05    state GET_LIST_PAGES
manager:    st_machine_05    state EXIT
manager:    st_machine_01    state GET_LIST_PAGES
manager:    st_machine_06    state INITIALISE
manager:    st_machine_06    state GET_LIST_PAGES
manager:    st_machine_01    state GET_LIST_PAGES
manager:    st_machine_06    state GET_LIST_PAGES
manager:    st_machine_01    state EXIT
manager:    st_machine_06    state GET_LIST_PAGES
manager:    st_machine_07    state INITIALISE
manager:    st_machine_07    state GET_LIST_PAGES
manager:    st_machine_06    state GET_LIST_PAGES
manager:    st_machine_06    state EXIT
</code></pre>
<p>Whereas a ncurses "table" rendered at the last point of the above stream would look something like:</p>
<pre><code>manager:    st_machine_01    state EXIT
manager:    st_machine_02    state EXIT
manager:    st_machine_03    state GET_LIST_PAGES
manager:    st_machine_04    state EXIT
manager:    st_machine_05    state EXIT
manager:    st_machine_06    state EXIT
manager:    st_machine_07    state GET_LIST_PAGES
</code></pre>
<p>I'm seeking to do this on Python 2.7 64bit, Windows 7 64bit.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the standard <code>curses</code> module.  You can find its documentation <a href="http://docs.python.org/3/library/curses.html" rel="nofollow">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>curses</code> is not enough (for some undescribed reason), <a href="http://pycdk.sourceforge.net" rel="nofollow">pycdk</a> or <a href="http://excess.org/urwid/" rel="nofollow">urwid</a> could be better suited to your needs.</p>
</div>
<div class="post-text" itemprop="text">
<p>.</p>
<p>The ncurses package is not very OO but, you will definitely benefit from using an OO approach to using it. </p>
<pre><code>class screen {
  class rectangle {
    class line { 
      string default_text="please enter a command (press 'e' to list available events) &gt;&gt; ";
    }
  }
}

sm_window = new screen("sc1").new rectangle( "log_rect", lines=7 );
log_rect.line[7] = "st_machine_05 changed to Get_List_Pages from state Exit";
</code></pre>
<p>If you keep all your accesses to the ncurses package in these few classes you'll be farther along than if you pepper ncurses calls all over your existing app.</p>
<p>If you haven't made all your fields private for some reason, you can access all the required program data right from the screen class.</p>
</div>
<span class="comment-copy">that looks pretty good when the machines are in order. If you limit the display to just 7 lines and a status or cmd line, you can flash the screen brifly when ever a state changes. If you reprint the new states quickly it will look pretty cool. you could add a log entry to the last line, <code>st_machine_05 changed to Get_List_Pages from state Exit</code>...</span>
<span class="comment-copy">The curses package is not as complete as I wanted.</span>
<span class="comment-copy">Can you add that extra condition to your question?  Thanks.</span>
<span class="comment-copy">I have used ncurses in Python previously, and as you say, it was "peppered" with ncurses calls everywhere, hence why I want to go OO and hopefully get something that is event-driven (like a GUI framework).</span>
<span class="comment-copy">I was thinking of learning some python and thought I would offer you some help,</span>
