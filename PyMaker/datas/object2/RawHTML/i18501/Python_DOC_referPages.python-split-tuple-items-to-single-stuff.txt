<div class="post-text" itemprop="text">
<p>I have tuple in Python that looks like this:</p>
<pre><code>tuple = ('sparkbrowser.com', 0, 'http://facebook.com/sparkbrowser', 'Facebook')
</code></pre>
<p>and I wanna split it out so I could get every item from tuple independent so I could do something like this:</p>
<pre><code>domain = "sparkbrowser.com"
level = 0
url = "http://facebook.com/sparkbrowser"
text = "Facebook"
</code></pre>
<p>or something similar to that, My need is to have every item separated. I tried with <code>.split(",")</code> on tuple but I've gotten error which says that tuple doesn't have split option</p>
<p>Any help or advice is welcome</p>
</div>
<div class="post-text" itemprop="text">
<p>Python can unpack sequences naturally.</p>
<pre><code>domain, level, url, text = ('sparkbrowser.com', 0, 'http://facebook.com/sparkbrowser', 'Facebook')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Best not to use <code>tuple</code> as a variable name.</p>
<p>You might use <code>split(',')</code> if you had a string like <code>'sparkbrowser.com,0,http://facebook.com/sparkbrowser,Facebook'</code>, that you needed to convert to a list. However you already have a tuple, so there is no need here.</p>
<p>If you know you have exactly the right number of components, you can unpack it directly</p>
<pre><code>the_tuple = ('sparkbrowser.com', 0, 'http://facebook.com/sparkbrowser', 'Facebook')
domain, level, url, text = the_tuple
</code></pre>
<p>Python3 has powerful unpacking syntax. To get just the <code>domain</code> and the <code>text</code> you could use</p>
<pre><code>domain, *rest, text = the_tuple
</code></pre>
<p><code>rest</code> will contain <code>[0, 'http://facebook.com/sparkbrowser']</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; domain, level, url, text = ('sparkbrowser.com', 0, 'http://facebook.com/sparkbrowser', 'Facebook')
&gt;&gt;&gt; domain
'sparkbrowser.com'
&gt;&gt;&gt; level
0
&gt;&gt;&gt; url
'http://facebook.com/sparkbrowser'
&gt;&gt;&gt; text
'Facebook'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An alternative for this, is to use <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><strong><code>collections.namedtuple</code></strong></a>. It makes accessing the elements of tuples easier.</p>
<p><strong>Demo:</strong></p>
<pre><code>&gt;&gt;&gt; from collections import namedtuple
&gt;&gt;&gt; Website = namedtuple('Website', 'domain level url text')
&gt;&gt;&gt; site1 = Website('sparkbrowser.com', 0, 'http://facebook.com/sparkbrowser', 'Facebook')
&gt;&gt;&gt; site2 = Website('foo.com', 4, 'http://bar.com/sparkbrowser', 'Bar')
&gt;&gt;&gt; site1
Website(domain='sparkbrowser.com', level=0, url='http://facebook.com/sparkbrowser', text='Facebook')
&gt;&gt;&gt; site2
Website(domain='foo.com', level=4, url='http://bar.com/sparkbrowser', text='Bar')
&gt;&gt;&gt; site1.domain
'sparkbrowser.com'
&gt;&gt;&gt; site1.url
'http://facebook.com/sparkbrowser'
&gt;&gt;&gt; site2.level
4
</code></pre>
</div>
<span class="comment-copy">it's called <a href="https://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer"><i>sequence unpacking</i></a> (see last paragraph) or just <i>unpacking</i>.</span>
<span class="comment-copy">++ve for nice answer.</span>
