<div class="post-text" itemprop="text">
<p>I'm not able to remove the spacing in a <code>for</code>-loop as numbers are not coming in the same for making the pattern.</p>
<p>My code:</p>
<pre><code>for i in range(1,5):
    for j in range(1,i):
       print(j)
</code></pre>
<p>But my desired output is:</p>
<pre><code>1
12
123
1234
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>print(j, end='')
</code></pre>
<p><code>end</code> by default is <code>\n</code> (see <a href="http://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>print()</code></a>). Also, be sure to print a newline at the end of each outer loop iteration:</p>
<pre><code>for i in range(1,6):  # notice that I changed this to 6
    for j in range(1,i):
        print(j, end='')  # added end=''
    print()  # printing newline here
</code></pre>
<pre>
1
12
123
1234
</pre>
<hr/>
<p><strong>EDIT</strong> I just noticed you were using Python 2.7. Since that's the case, you can use <code>print j,</code> instead of <code>print(j, end='')</code> and <code>print</code> instead of <code>print()</code>. Note that <code>print j,</code> will leave spaces between the <code>j</code>s. If you don't want this, you can <code>import sys</code> and use <code>sys.stdout.write(j)</code> instead (see <a href="http://docs.python.org/2/library/sys.html" rel="nofollow"><code>sys</code></a>).</p>
<p>Furthermore, if you want to use the Python 3 print function as shown above, you can always</p>
<pre><code>from __future__ import print_function
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One line solution, if you're interested:</p>
<pre><code>print('\n'.join([''.join(['{}'.format(i) for i in range(1,j)]) for j in range(2,6)]))

1
12
123
1234
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for r in range(1,5):
    for c in range (1,r+1):
        print c,
    print
</code></pre>
<p>here, the print without argument causes printing in the next line</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to get all of the numbers on one line, you'll have to use one print statement per line you want.  One way you could do this is:</p>
<pre><code>for i in range(1, 5):
    print(''.join([str(n) for i in range(1, i)]))
</code></pre>
<p>Keeping the nested <code>for</code> loops you could do:</p>
<pre><code>for i in range(1, 5):
    temp = ''
    for j in range(1, i):
        temp += str(j)
    print(temp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>def RTN():
    x = 1
    num = int(input('Type any integer besides 0: '))
    if num == 0:
        return 'Try again!'
    while x &lt; num + 2:
        print('')
        for y in range(1, x):
            print(str(y) + ' ', end = '')
        x += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def pentagon(num):

    j = num
    for i in range(0, num + 1):
        print('{}{}'.format(' ' * j, ' *' * i))
        j -= 1

pentagon(2)
</code></pre>
<p>output</p>
<pre><code> *  
* *
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>x=input('enter some numerical value')</p>
<p>s=''</p>
<p>for i in range(0,x):</p>
<pre><code>     for j in range(0,i+1):

              s=s+str(j+1)
     print s
     s=''
</code></pre>
</div>
<span class="comment-copy">Won't <code>print j,</code> put spaces between the numbers? EG <code>1 2 3 4</code> instead of <code>1234</code>.</span>
<span class="comment-copy">@mr2ert Yes it will. I explained what to do if the OP doesn't want those spaces.</span>
<span class="comment-copy">Thank you so much..:)</span>
<span class="comment-copy">@user2558422 Glad I could help. Don't forget to <a href="http://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work/5235#5235">accept an answer</a>.</span>
