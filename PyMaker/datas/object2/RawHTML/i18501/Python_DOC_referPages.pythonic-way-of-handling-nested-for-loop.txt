<div class="post-text" itemprop="text">
<p>I have the following code and for the sake of learning would like to see a more pythonic way of achieving this:</p>
<pre><code>for value in response.values():
    for encod in encodings:
        if encod.lower() in value.lower():
            return(encod)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're looking for a <em>different</em> way, you can use this:</p>
<pre><code>return next(encod for value in response.values() 
                      for encod in encodings 
                          if encod.lower() in value.lower())
</code></pre>
<p>The portion within <code>next(...)</code> is a <a href="http://docs.python.org/2/tutorial/classes.html#generator-expressions" rel="nofollow">generator expression</a> that yields each <code>encod</code> in <code>encodings</code> <em>for each</em> <code>value</code> in <code>response.values()</code> <em>if</em> the condition <code>encod.lower() in value.lower()</code> is satisfied. The first element of this generator is what we return (see <a href="http://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next()</code></a>).</p>
<p><strong>Although,</strong> in practice, I would generally go with what you already have. It's the simplest and clearest way to do what you are trying to do, and is by no means <i>un</i>pythonic.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that you actually intend to return only the first match you find (which is what your code does), there's nothing unpythonic about your code except the unnecessary parentheses in the last line, which you can replace with:</p>
<pre><code>            return encod
</code></pre>
<p><em>Pythonic</em> does <strong>not</strong> mean 'write a one-liner' or 'use a particular feature of Python for the sake of it'. It means, among other things, 'write your code in the most easily-understood and expressive way that you can'.</p>
<p>See also: <a href="http://www.python.org/dev/peps/pep-0020/" rel="noreferrer">the Zen of Python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your code will only return the first matching instance, but you could still use a list comprehension or better, a generator expression.</p>
<pre><code>return next(v for v in response.values() if v.lower in map(lower, encodings))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you OK with outputting it as a list? A list comprehension would make it more Pythonic.</p>
<pre><code>return [encod for value in response.values() for encod in encodings if encod.lower() in value.lower()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to offer another approach using a Cartesian product.  I like this because it matches the way I would think: "check every pair of values."</p>
<pre><code>    import itertools
    for (encoding, value) in itertools.product(encodings, response.values()):
        if encoding.lower() in value.lower():
            return encoding
</code></pre>
</div>
<span class="comment-copy"><code>NameError: global name 'encod' is not defined</code></span>
<span class="comment-copy">I think you reversed the order of the loops, which should be fine since we only want the first one, but it's worth clarifying because the syntax of the double comprehensions is so confusing.</span>
<span class="comment-copy">@user1991424 Are you sure that's happening on the return line?</span>
<span class="comment-copy">ahhhh, thank you. I have been trying to learn when/how to use the next() function. Thank you! +1 for not scolding me and teaching me.</span>
<span class="comment-copy">-1 This is hardly more idiomatic - it has no benefits in terms of readability or efficiency.</span>
<span class="comment-copy">If you didn't see it, here it is again: 'for the sake of learning'. I agree with you, but would like to learn how to achieve this if in other ways.</span>
<span class="comment-copy">@user1991424 I did see it, yes. I also saw that you asked for 'a more pythonic way' of writing your code. Part of learning that is learning what the word <i>pythonic</i> means.</span>
<span class="comment-copy">@user1991424: you also said you'd "like to see a more pythonic way of achieving this".  That's very different from "in other ways", if the other ways are less Pythonic.</span>
<span class="comment-copy">getting <code>AttributeError: 'generator' object has no attribute 'next'</code></span>
<span class="comment-copy">Sorry, not super familiar with python 3.  Shamelessly aping other answer...</span>
<span class="comment-copy">It would have to be a str, I could use loop through the list after returning it but ideally, just astring</span>
<span class="comment-copy">What exactly do you mean @user1991424? This would add each <code>encod</code> that matches your criteria to a list that you could then <code>.join()</code> if you'd like?</span>
<span class="comment-copy">In my response.values(), I know that there can only be at most one encod to be matched in encodings. I would need to only return the first match.</span>
