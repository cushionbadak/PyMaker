<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question is an exact duplicate of:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18220838/function-inside-function-in-python">Function inside function in Python? [closed]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Is there any way to add a function inside a function? I am currently making a game, and it would make my script much more organized!</p>
<p>An example of my current script:</p>
<pre><code>def LVL1_TUTORIAL_07__C_USERS_MRX():
    print
    choice = raw_input('C:\Users\Mr. X&gt;')
    if choice.lower() == 'help':
        print
        print ' dir - Allows you to see the available files and directories in the current directory.'
        print ' cd - (Change Directory) is a command used to switch directories in MS-DOS and the Windows command line.'
        print ' search - Searching'
        print ' connect - connect + name of the server you want to connect'
        LVL1_TUTORIAL_07__C_USERS_MRX()

    if choice.lower() == 'cls':
        os.system('cls')
        LVL1_TUTORIAL_07__C_USERS_MRX()

    if choice.lower() == 'cd':
        print 'C:\Users\Mr. X'
        LVL1_TUTORIAL_07__C_USERS_MRX()

    if choice.lower() == 'cd.':
        print
        LVL1_TUTORIAL_07__C_USERS_MRX()

    if choice.lower() == 'cd..':
        print

    if choice.lower() == 'cd contacts':
        LVL1_TUTORIAL_07__C_USERS_MRX_CONTACTS()

    if choice.lower() == 'cd desktop':
        LVL1_TUTORIAL_07__C_USERS_MRX_DESKTOP()

    if choice.lower() == 'cd documents':
        LVL1_TUTORIAL_07__C_USERS_MRX_DOCUMENTS()

    if choice.lower() == 'cd downloads':
        LVL1_TUTORIAL_07__C_USERS_MRX_DOWNLOADS()

    if choice.lower() == 'cd favorites':
        LVL1_TUTORIAL_07__C_USERS_MRX_FAVORITES()

    if choice.lower() == 'cd links':
        LVL1_TUTORIAL_07__C_USERS_MRX_LINKS()

    if choice.lower() == 'cd music':
        LVL1_TUTORIAL_07__C_USERS_MRX_MUSIC()

    if choice.lower() == 'cd pictures':
        LVL1_TUTORIAL_07__C_USERS_MRX_PICTURES()

    if choice.lower() == 'cd videos':
        print
        print 'test'
        time.sleep(2)
        LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS()

        def LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS():
            print

            choice = raw_input('C:\Users\Mr. X\Videos&gt;')
            if choice.lower() == 'help':
                print 'help'
            if choice.lower() == 'cls':
                os.system('cls')
                LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS()
            if choice.lower() == 'cd folder 1':
                LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS_FOLDER1()

            def LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS_FOLDER1():
                print
                choice = raw_input('C:\Users\Mr. X\Videos&gt;')
                if choice.lower() == 'help':
                    print 'help'
                if choice.lower() == 'cd..':
                    LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS()
                if choice.lower() == 'cd..':
                    LVL1_TUTORIAL_07__C_USERS_MRX()

            return LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS_FOLDER1()

        return LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS()    


    if choice.lower() == 'dir':
        print
        print ' Volume in drive C has no label.'
        print ' Volume Serial Number is 57GE-4AFB'
        print
        print ' Directory of C:\Users\Mr. X'
        print
        print '01.01.2013  00:00    &lt;DIR&gt;          .'
        print '01.01.2013  00:00    &lt;DIR&gt;          ..'
        print '01.01.2013  00:00    &lt;DIR&gt;          Contacts'
        print '01.01.2013  00:00    &lt;DIR&gt;          Desktop'
        print '01.01.2013  00:00    &lt;DIR&gt;          Documents'
        print '01.01.2013  00:00    &lt;DIR&gt;          Downloads'
        print '01.01.2013  00:00    &lt;DIR&gt;          Favorites'
        print '01.01.2013  00:00    &lt;DIR&gt;          Links'
        print '01.01.2013  00:00    &lt;DIR&gt;          Music'
        print '01.01.2013  00:00    &lt;DIR&gt;          Pictures'
        print '28.07.2013  15:57                 0 telnet'
        print '01.01.2013  00:00    &lt;DIR&gt;          Videos'
        print '               1 File(s)              0 bytes'
        print '              11 Dir(s)  53 687 091 200 bytes free'
        print
        LVL1_TUTORIAL_07__C_USERS_MRX()

    else:
        print
        print 'wrong'
        time.sleep(2)

    return LVL1_TUTORIAL_07__C_USERS_MRX()



LVL1_TUTORIAL_07__C_USERS_MRX()
</code></pre>
<p>Then I got this error message:</p>
<pre><code>UnboundLocalError: local variable 'LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS' referenced before assignment
File "C:\Users\Stig Arne\Desktop\HACKER\HACKER.py", line 3715, in &lt;module&gt;
  LVL1_TUTORIAL_07__C_USERS_MRX()
File "C:\Users\Stig Arne\Desktop\HACKER\HACKER.py", line 3656, in LVL1_TUTORIAL_07__C_USERS_MRX
  LVL1_TUTORIAL_07__C_USERS_MRX_VIDEOS()  
</code></pre>
<p>I am not quite sure what's wrong. I really hoped this worked, as it would make the work much easier for me. For all I know, it could just be a small typo that caused the problem.</p>
<p>I really hope someone here can see the error!</p>
<p>Thanks!      </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, but you have to define the function <em>before</em> you use it.</p>
</div>
<div class="post-text" itemprop="text">
<p>as @mipadi points out, it's easy to embed defs inside other defs:</p>
<pre><code>def outer():
   def inner():
      return "A"
   return inner()
</code></pre>
<p>This is helpful for cleaning up the organization of long code sections. You can't call a function until after it's defined - while the above example works, this <strong>won't</strong>:</p>
<pre><code>def outer():   # this version FAILS
   return inner()
   def inner():
      return "A"
</code></pre>
<p>To make effective use of this strategy, read up on closures as @Basile points out - they are a powerful tool in this context and also potentially a source of bugs (since you can accidentally get information from a scope you didn't intend - especially in long blocks of if-else conditions which tend to be build up by cutting and pasting :)</p>
<p>You should definitely look into <a href="http://my.safaribooksonline.com/book/programming/python/0596007973/python-shortcuts/pythoncook2-chp-4-sect-16" rel="nofollow">using dictionaries instead of if statements</a> for these kinds of long if/else blocks. It's easier to build them up in code, and gets rid of a lot of repetition. </p>
</div>
<span class="comment-copy">Read about <a href="http://en.wikipedia.org/wiki/Closure_%28computer_science%29" rel="nofollow noreferrer">closures</a> and <a href="http://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow noreferrer">Python's <code>lambda</code> forms</a></span>
<span class="comment-copy">You just asked this exact same question less than an hour ago. Did you not like the answers there?</span>
<span class="comment-copy">@BasileStarynkevitch: Why read about lambda? Whether you use lambda or def makes no difference; you can define local functions, and the function ends up the same either way, and can be called the same way.</span>
<span class="comment-copy">Change <code>choice = raw_input('C:\Users\Mr. X&gt;')</code> to <code>choice = raw_input('C:\Users\Mr. X&gt;').lower()</code>.  This way, you don't have to do <code>.lower()</code> in EVERY if statement.  Also, it is better to use <code>elif</code> instead of repeatedly using <code>if</code>, if for no other reason than clarity.</span>
<span class="comment-copy">Thank you very much! Unfortunately it didn't work. I still get the same error message. I have updated the post here, so you are able to see my new code. @theodox</span>
