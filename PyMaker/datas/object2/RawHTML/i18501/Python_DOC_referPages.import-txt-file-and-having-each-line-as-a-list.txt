<div class="post-text" itemprop="text">
<p>I'm a new Python user.</p>
<p>I have a txt file that will be something like: </p>
<pre><code>3,1,3,2,3
3,2,2,3,2
2,1,3,3,2,2
1,2,2,3,3,1
3,2,1,2,2,3
</code></pre>
<p>but may be less or more lines.</p>
<p>I want to import each line as a list.</p>
<p>I know you can do it as such:</p>
<pre><code>filename = 'MyFile.txt' 
fin=open(filename,'r')
L1list = fin.readline()
L2list = fin.readline()
L3list = fin.readline()
</code></pre>
<p>but since I don't know how many lines I will have, is there another way to create individual lists?</p>
</div>
<div class="post-text" itemprop="text">
<p>Do not create separate lists; create a list of lists:</p>
<pre><code>results = []
with open('inputfile.txt') as inputfile:
    for line in inputfile:
        results.append(line.strip().split(','))
</code></pre>
<p>or better still, use the <a href="http://docs.python.org/3/library/csv.html" rel="noreferrer"><code>csv</code> module</a>:</p>
<pre><code>import csv

results = []
with open('inputfile.txt', newline='') as inputfile:
    for row in csv.reader(inputfile):
        results.append(row)
</code></pre>
<p>Lists or dictionaries are <em>far</em> superiour structures to keep track of an arbitrary number of things read from a file.</p>
<p>Note that either loop also lets you address the rows of data individually without having to read all the contents of the file into memory either; instead of using <code>results.append()</code> just process that line right there.</p>
<p>Just for completeness sake, here's the one-liner compact version to read in a CSV file into a list in one go:</p>
<pre><code>import csv

with open('inputfile.txt', newline='') as inputfile:
    results = list(csv.reader(inputfile))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create a list of lists:</p>
<pre><code>with open("/path/to/file") as file:
    lines = []
    for line in file:
        # The rstrip method gets rid of the "\n" at the end of each line
        lines.append(line.rstrip().split(","))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('path/to/file') as infile: # try open('...', 'rb') as well
    answer = [line.strip().split(',') for line in infile]
</code></pre>
<p>If you want the numbers as <code>int</code>s:</p>
<pre><code>with open('path/to/file') as infile:
    answer = [[int(i) for i in line.strip().split(',')] for line in infile]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>lines=[]
with open('file') as file:
   lines.append(file.readline())
</code></pre>
</div>
<span class="comment-copy"><code>csv.reader(open(filename))</code> ease!</span>
<span class="comment-copy">Great, thanks so much, that makes a lot of sense.</span>
<span class="comment-copy">Hi iCodez- I'm actually trying to use this and while it is making a list of lists, the list actually only has one item within it- the input file that I'm using right now (as referenced in the original question) has three lines, so there should be three lists. Using your approach I'm just getting [['3', '2', '1', '2', '3', '1', '2', '3', '1', '2', '3', '1\r1', '1', '1', '1', '3', '3', '1', '1', '2', '2', '1', '3']]. Any thoughts? Thanks so much.</span>
<span class="comment-copy">@John - I can't reproduce your problem.  I tested my code on the 5 line example you gave and it worked just as it should have.  It made a list of 5 lists, one for each line.  Are you sure the file has 3 lines and not just one long line?</span>
<span class="comment-copy">@John - Also, I would look at the comment on Pieters answer explaining the <code>open</code> built-in.  Maybe that can fix your problem.</span>
<span class="comment-copy">Thanks iCodez- it was indeed an issue on my end. I had two versions of the test .txt file I had been working with, and had been pointing to the wrong one....thanks for your patience and assistance!</span>
<span class="comment-copy">Thanks! One follow up question-0 I'm getting the error                   File "seventeen_v2.3.py", line 7, in &lt;module&gt;     answer = [[int(i) for i in line.strip().split(',')] for line in infile] ValueError: invalid literal for int() with base 10: '1\r1' The txt file only has digits in it- any idea why python is adding this "\r1" to the input?</span>
<span class="comment-copy">Check out the edit</span>
<span class="comment-copy">You will need to give a more complete answer.  As it currently stands, this doesn't do what the OP wants.</span>
