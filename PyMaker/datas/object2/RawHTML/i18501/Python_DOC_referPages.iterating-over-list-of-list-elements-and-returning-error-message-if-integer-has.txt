<div class="post-text" itemprop="text">
<p>I have a list of lists like this:</p>
<p>breadsticks = [["name1", 45, 140]["name2", 85, 95]]</p>
<p>The third (or no[2]) element in each list inside the big list is a result of a calculation with variables given by the user and can't be higher than 80. If it is higher than 80 I need to return an error message instead of printing the results of a calculation. </p>
<p>What I've tried so far:</p>
<pre><code>i = 0
while i &lt;= len(breadsticks):
     if breadsticks[i][2] &gt; 80:
         print("you have entered too many breadcrums")
     elif i == len(breadsticks):
         for bread in breadsticks:
              print(breadsticks[bread][2])
     i += 1
</code></pre>
<p>My attempt to do this not only does not work, it is also clumsy. Are there any other, smooth, ways to give error messages retarding things like this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code> function</a> with a generator expression testing each nested list:</p>
<pre><code>if any(bread[2] &gt; 80 for bread in breadsticks):
    print("You have entered too many breadcrumbs")
</code></pre>
<p>This will only test as many nested lists as needed to find any for which the test is <code>True</code>.</p>
<p>Note that it is simpler to just loop <em>directly</em> over <code>breadsticks</code> in loops:</p>
<pre><code>for bread in breadsticks:
    print(bread[2])
</code></pre>
</div>
<span class="comment-copy">You almost never want to loop with <code>i = 0; while i &lt;= spam: eggs … i += 1</code>. Just do <code>for i in range(spam): eggs …</code>. However, even that is rarely useful, because you can just do <code>for breadstick in breadsticks:</code> and not even worry about the indices.</span>
<span class="comment-copy">Thank you. Perfect answer, exactly what I was looking for.</span>
