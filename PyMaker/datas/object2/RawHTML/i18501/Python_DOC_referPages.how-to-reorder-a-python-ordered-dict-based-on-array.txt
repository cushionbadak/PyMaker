<div class="post-text" itemprop="text">
<p>Say I have an Ordered Dict with the following items:</p>
<pre><code>mydict = {'Rust': {'definition':'rusts definition'}, 'Iron': {'definition:'iron definition'}, 'Pyrite': {'definition':'pyrite definition'}}
</code></pre>
<p>If I have an array:</p>
<pre><code>myorder = ['Pyrite', 'Rust', 'Iron']
</code></pre>
<p>How can I reorder the Ordered Dict such that the items in mydict are ordered based on myorder?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>mydict = {'Rust': {'definition':'rusts definition'},
          'Iron': {'definition':'iron definition'},
          'Pyrite': {'definition':'pyrite definition'}}

myorder = ['Pyrite', 'Rust', 'Iron']

from collections import OrderedDict

ordered = OrderedDict()
for k in myorder:
    ordered[k] = mydict[k]
</code></pre>
<p>Or even shorter:</p>
<pre><code>ordered = OrderedDict((k, mydict[k]) for k in myorder)
</code></pre>
<p>Using the above snippet, <code>ordered</code> will contain the same keys/values as <code>mydict</code>, but they'll be inserted in the same order specified by <code>myorder</code>. That's the advantage of <code>OrderedDict</code>: when iterating over it, it'll preserve the insertion order.</p>
<p>There's no way to sort the existing dictionary in-place (well, you <em>could</em> extract all the key-value pairs, eliminate them and add them again in the correct order, but that's not the idea, is it?), it's necessary to create a new one ... or simply iterate over the existing dictionary in the specified order:</p>
<pre><code>for k in myorder:
    x = mydict[k] # do something with x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you would like to use them in that order, you can do this, for example.</p>
<pre><code>for key in myorder:
    value = mydict[key]
    print value
</code></pre>
<p>Outputs:</p>
<blockquote>
<pre><code>{'definition': 'pyrite definition'}
{'definition': 'rusts definition'}
{'definition': 'iron definiti
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Why do you want to do that? You can simply request the keys in the order that is in <code>myorder</code>.</span>
<span class="comment-copy">Dicts don't have order.  Do you mean extract them into an array with that order?  (Basically it's not safe to rely on the order of the dict, because no effort is made to keep dicts in the same order.)</span>
<span class="comment-copy">@FakeRainBrigand Python3 added the <a href="http://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a> - I assume that's what he means.</span>
<span class="comment-copy">Except if <code>mydict</code> was an OrderedDict is would look like: <code>OrderedDict([('Rust', {'definition': 'rusts definition'}), ('Iron', {'definition': 'iron definition'}), ('Pyrite', {'definition': 'pyrite definition'})])</code>. What is shown in the question is just a regular (unordered) <code>dict</code>.</span>
<span class="comment-copy">You can shorten this to <code>ordered = OrderedDict((k, mydict[k]) for k in myorder)</code>.</span>
<span class="comment-copy">@filmor nice! I updated my answer with your suggestion. Thanks!</span>
