<div class="post-text" itemprop="text">
<p>Is there any built-in or straightforward way to match paths recursively with double asterisk, e.g. like <a href="http://lorenzod8n.wordpress.com/2007/05/10/recursive-globbing-in-zsh/" rel="nofollow">zsh</a> does?</p>
<p>For example, with </p>
<pre><code>path = 'foo/bar/ham/spam/eggs.py'
</code></pre>
<p>I can use <a href="http://docs.python.org/2/library/fnmatch.html#fnmatch.fnmatch" rel="nofollow">fnmatch</a> to test it with</p>
<pre><code>fnmatch(path, 'foo/bar/ham/*/*.py'
</code></pre>
<p>Although, I would like to be able to do:</p>
<pre><code>fnmatch(path, 'foo/**/*.py')
</code></pre>
<p>I know that fnmatch <a href="https://github.com/python-git/python/blob/master/Lib/fnmatch.py" rel="nofollow">maps its pattern to regex</a>, so in the words case I can roll my own fnmatch with additional <code>**</code> pattern, but maybe there is an easier way</p>
</div>
<div class="post-text" itemprop="text">
<p>If you look into fnmatch source code closely, it maps <code>*</code> into <code>.*</code> and thus does not care anything for directory separators <code>/</code> - unlike UNIX shells:</p>
<pre><code>while i &lt; n:
    c = pat[i]
    i = i+1
    if c == '*':
        res = res + '.*'
    elif c == '?':
        res = res + '.'
    elif c == '[':
        ...
</code></pre>
<p>Thus </p>
<pre><code>&gt;&gt;&gt; fnmatch.fnmatch('a/b/d/c', 'a/*/c')
True
&gt;&gt;&gt; fnmatch.fnmatch('a/b/d/c', 'a/*************c')
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can live without using an os.walk loop, try:</p>
<p><a href="https://pypi.python.org/pypi/glob2" rel="nofollow noreferrer">glob2</a></p>
<p><a href="https://pypi.python.org/pypi/formic" rel="nofollow noreferrer">formic</a></p>
<p>I personally use glob2:</p>
<pre><code>import glob2
files = glob2.glob(r'C:\Users\**\iTunes\**\*.mp4')
</code></pre>
<h1>Addendum:</h1>
<p>As of Python 3.5, the native <a href="https://docs.python.org/3/library/glob.html#glob.iglob" rel="nofollow noreferrer">glob</a> module supports recursive pattern matching:</p>
<pre><code>import glob
files = glob.iglob(r'C:\Users\**\iTunes\**\*.mp4', recursive=True) 
</code></pre>
</div>
<span class="comment-copy">Something like <code>glob.glob</code>?</span>
<span class="comment-copy">Here's a fork that allows fnmatch * and ** <a href="https://pypi.python.org/pypi/pywildcard" rel="nofollow noreferrer">pypi.python.org/pypi/pywildcard</a></span>
