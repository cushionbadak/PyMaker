<div class="post-text" itemprop="text">
<p>I'm looking how I can take hex values, and turn them into a string or an integer.
Examples:</p>
<pre><code>&gt;&gt;&gt; a = b'\x91\x44\x77\x65\x92'
&gt;&gt;&gt; b = b'\x44\x45\x41\x44\x42\x45\x45\x46'
&gt;&gt;&gt; a
&gt;&gt;&gt; �Dwe�
&gt;&gt;&gt; b
&gt;&gt;&gt; 'DEADBEEF'
</code></pre>
<p>Desired results for <strong>a</strong> and <strong>b</strong>:</p>
<pre><code>&gt;&gt;&gt; 9144776592
&gt;&gt;&gt; '4445414442454546'
</code></pre>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; a = b'\x91\x44\x77\x65\x92'
&gt;&gt;&gt; a.encode("hex")
'9144776592'
&gt;&gt;&gt; b.encode('hex')
'4445414442454546'
</code></pre>
<p>Note, that it's not nice to use <code>encode('hex')</code> - here's an <a href="https://stackoverflow.com/questions/13435922/python-encode">explanation</a> why:</p>
<blockquote>
<p>The way you use the hex codec worked in Python 2 because you can call
  encode() on 8-bit strings in Python 2, ie you can encode something
  that is already encoded. That doesn't make sense. encode() is for
  encoding Unicode strings into 8-bit strings, not for encoding 8-bit
  strings as 8-bit strings.</p>
<p>In Python 3 you can't call encode() on 8-bit strings anymore, so the
  hex codec became pointless and was removed.</p>
</blockquote>
<p>Using <a href="http://docs.python.org/2/library/binascii.html" rel="nofollow noreferrer">binascii</a> is easier and nicer, it is designed for conversions between binary and ascii, it'll work for both python 2 and 3:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; binascii.hexlify(b'\x91\x44\x77\x65\x92')
b'9144776592'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/binascii#binascii.hexlify" rel="nofollow"><code>binascii.hexlify</code></a>:</p>
<pre><code>In [1]: from binascii import hexlify

In [2]: a = b'\x91\x44\x77\x65\x92'

In [3]: hexlify(a)
Out[3]: b'9144776592'

In [4]: b = b'\x44\x45\x41\x44\x42\x45\x45\x46'

In [5]: hexlify(b)
Out[5]: b'4445414442454546'
</code></pre>
<p>If you want <code>str</code> instead of bytes:</p>
<pre><code>In [7]: hexlify(a).decode('ascii')
Out[7]: '9144776592'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/library/binascii#binascii.hexlify" rel="nofollow">binascii.hexlify</a>:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; a = b'\x91\x44\x77\x65\x92'
&gt;&gt;&gt; b = b'\x44\x45\x41\x44\x42\x45\x45\x46'
&gt;&gt;&gt; binascii.hexlify(a)
b'9144776592'
&gt;&gt;&gt; binascii.hexlify(b)
b'4445414442454546'
</code></pre>
</div>
<span class="comment-copy">Many thanks! Exactly what I wanted.</span>
<span class="comment-copy">Thank you for your answer.</span>
