<div class="post-text" itemprop="text">
<p>for example , i have several kind of handlers , they both handler the <a href="http://docs.python.org/3/library/socket.html#socket-objects" rel="nofollow">socket object</a> as request,but i have to decide the request should go which handler,thus i must analyse the request's data,but since i have read the data,the data in the request would be incomplete.</p>
<p>the code can be described in this:</p>
<pre><code>def handle_request(request,client_address,server):
    request_type = getType(request)
    if request_type == 'typeA':
       TypeAHandler(request,client_address,server)
    elif request_type == 'typeB':
       TypeBHandler(request,client_address,server)
    elif request_type == 'typeC':
       TypeCHandler(request,client_address,server)
...
</code></pre>
<p>is there a way to rollback the data of the request, or clone the request , so i can make this task simply done?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python uses duck typing. If something <em>looks like</em> a socket, it can be used as a socket.</p>
<p>You can write a custom socket object which first serves the data which was already read, then serves the rest from the real socket. For the handlers the whole thing is going to be transparent, so no code change is needed there.</p>
</div>
<span class="comment-copy">You've already read some fraction of the data, why not just pass it into the handler as another argument?</span>
<span class="comment-copy">because there is no such argument to pass that data,or you have to rewrite all of them and some of them can't be modified</span>
<span class="comment-copy">Do all the handlers just call <code>recv</code> and <code>recv_into</code> to get data from the socket objects?</span>
<span class="comment-copy">You have the option <code>socket.MSG_PEEK</code> when using <code>recv()</code>, it returns the data but does not remove it, next <code>recv()</code> will return that data, at least, could return more data.</span>
<span class="comment-copy">i think this is the common solution for such problems,but write every API to mock an socket object is too heavy IMO,any lazy method to reach that goal?</span>
<span class="comment-copy">@user2003548 You need to mock out two methods out of an entire object. That's almost no work.</span>
