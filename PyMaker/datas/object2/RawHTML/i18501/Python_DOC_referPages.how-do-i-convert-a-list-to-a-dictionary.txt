<div class="post-text" itemprop="text">
<p>I have a list like this:</p>
<pre><code>listedd = ['AAA', 'K', 'AAC', 'N', 'AAG', 'K',]
</code></pre>
<p>and I want to convert it to a dictionary like this:</p>
<pre><code>{'AAA':'K', 'AAC': 'N', 'AAG':'K'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Step through the list by twos, zip the results together, giving a list of tuples that will be your key/value pairs and then convert that list of tuples into a dictionary:</p>
<pre><code>&gt;&gt;&gt; dict(zip(l[::2],l[1::2]))
{'AAG': 'K', 'AAA': 'K', 'AAC': 'N'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try something like this:</p>
<pre><code>&gt;&gt;&gt; l = ['AAA', 'K', 'AAC', 'N', 'AAG', 'K']
&gt;&gt;&gt;
&gt;&gt;&gt; v = iter(l)
&gt;&gt;&gt; {s: next(v) for s in v}
{'AAG': 'K', 'AAA': 'K', 'AAC': 'N'}
</code></pre>
<hr/>
<p>Here's a small time comparison in Python 3.3.2:</p>
<pre><code>&gt;&gt;&gt; from timeit import timeit
&gt;&gt;&gt; setup = "l = ['AAA', 'K', 'AAC', 'N', 'AAG', 'K']"
&gt;&gt;&gt; 
&gt;&gt;&gt; timeit("v = iter(l); {s: next(v) for s in v}", setup)
0.7127587589984614
&gt;&gt;&gt; 
&gt;&gt;&gt; timeit("dict(zip(l[::2],l[1::2]))", setup)
1.4540460520001943
&gt;&gt;&gt; 
&gt;&gt;&gt; timeit("dict(zip(*[iter(l)]*2))", setup)
1.395266197001547
&gt;&gt;&gt; 
&gt;&gt;&gt; timeit("{k: l[i+1] for i,k in enumerate(l) if not i%2}", setup)
1.4753028479990462
</code></pre>
<hr/>
<p><strong>Reference:</strong></p>
<ul>
<li><a href="http://www.python.org/dev/peps/pep-0274/" rel="nofollow">Dict Comprehensions (PEP 274)</a></li>
<li><a href="http://docs.python.org/3/library/functions.html#iter" rel="nofollow"><code>iter()</code></a></li>
<li><a href="http://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next()</code></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Just some flavor:</p>
<pre><code>d = { k : listedd[i+1] for i, k in enumerate(listedd) if not i % 2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the shortest way is to use slices:</p>
<pre><code>&gt;&gt;&gt; listedd = ['AAA', 'K', 'AAC', 'N', 'AAG', 'K',]
&gt;&gt;&gt; result = dict(zip(listedd[::2], listedd[1::2]))
{'AAA': 'K', 'AAC': 'N', 'AAG': 'K'}
</code></pre>
<p>This code really maps all even elements of list to it's odd elements.</p>
<p>Update: I've missed previous post, sorry))</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way to use <code>iter</code> and <code>zip</code>:</p>
<pre><code>dict(zip(*[iter(listedd)]*2))
</code></pre>
<p>Or, if you prefer longer programs to shorter ones:</p>
<pre><code>&gt;&gt;&gt; listedd = ['AAA', 'K', 'AAC', 'N', 'AAG', 'K',]
&gt;&gt;&gt; it = iter(listedd)
&gt;&gt;&gt; z = zip(it,it)
&gt;&gt;&gt; d = dict(z)
&gt;&gt;&gt; print d
{'AAG': 'K', 'AAA': 'K', 'AAC': 'N'}
</code></pre>
</div>
<span class="comment-copy">... or <code>dict((s, next(v)) for s in v)</code> for older versions.</span>
