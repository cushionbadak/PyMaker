<div class="post-text" itemprop="text">
<p>The problem I am having is when I try to load the <strong><a href="http://docs.python.org/3/library/pickle.html" rel="noreferrer">pickled</a></strong> object. I have tried using both <code>pickle.loads</code> and <code>pickle.load</code> Here are the results:</p>
<p>pickle.loads  - <code>TypeError: 'str' does not support the buffer interface</code></p>
<p>pickle.load - <code>TypeError: file must have 'read' and 'readline' attributes</code></p>
<p>Can someone please tell me what I am doing wrong in this process? Thanks, and here is my code:</p>
<pre><code>elif str(parser) == 'SwissWithdrawn_Parser':
       # swissprot name changes
       print('Gathering SwissProt update info...')
       cache_hits = 0
       cache_misses = 0
       files = set()

       for f in os.listdir('out/cache/'):
           if os.path.isfile('out/cache/'+f):
               files.add(f)

       for name in sp_lost_names:

           cached = False
           url = 'http://www.uniprot.org/uniprot/?query=mnemonic%3a'+name+ \
               '+active%3ayes&amp;format=tab&amp;columns=entry%20name'
           hashed_url = str(hash(url))

           ################### For Testing Only - use cache ##################
           if hashed_url in files:
               cached = True
               cache_hits += 1
               content = pickle.loads('out/cache/' +hashed_url)  # &lt;-- problematic line
           else:
               cache_misses += 1
               content = urllib.request.urlopen(url)

           # get the contents returned from the HTTPResponse object
           content_list = [x.decode().strip() for x in content.readlines()]
           if not cached:
               with open('out/cache/'+hashed_url, 'wb') as fp:
                   pickle.dump(content_list, fp)
           ####################################################################

           # no replacement
           if len(content_list) is 0:
               change_log['swiss-names'] = 
                  { name : 'withdrawn' }
           # get the new name
           else:
               new_name = content_list[1]
               change_log['swiss-names'] =
                  { name : new_name }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to either <em>read</em> the file first (as binary <code>bytes</code>) and use <code>pickle.loads()</code>, or pass an open file object to the <code>pickle.load()</code> command. The latter is preferable:</p>
<pre><code>with open('out/cache/' +hashed_url, 'rb') as pickle_file:
    content = pickle.load(pickle_file)
</code></pre>
<p>Neither method supports loading a pickle from a filename.</p>
</div>
<span class="comment-copy">Thank you, thanks to your answer I was able to finally get my first implementation of a cache working! :)</span>
