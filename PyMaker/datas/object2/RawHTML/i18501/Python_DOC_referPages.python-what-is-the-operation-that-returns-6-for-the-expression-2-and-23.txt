<div class="post-text" itemprop="text">
<p>My first question is what is the more abstract question for the question: 'what is the operation that returns 6 for the expression  <code>(2 and 2*3)</code>? Please feel free to retitle my question appropriately.</p>
<p>My second question is what is it that is going on in python that returns 6 for <code>(2 and 2*3)</code>. There seems something elegant going on here, and I'd like to read up on this operation.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="http://docs.python.org/3/reference/expressions.html#boolean-operations">Python language reference</a>:</p>
<blockquote>
<p>Note that neither <code>and</code> nor <code>or</code> restrict the value and type they return to False and True, but rather return the last evaluated argument.</p>
</blockquote>
<p>As such, <code>2 and 2*3</code> means it first evaluates <code>bool(2)</code>, which evaluates to <code>True</code>, and then it evaluates <code>bool(2*3)</code> which evaluates to <code>True</code>. Therefore it'll return the last evaluated argument, which is <code>2*3</code> (<code>6</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="http://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow">python docs</a><br/><br/>
x and y : if x is false, then x, else y</p>
</div>
<div class="post-text" itemprop="text">
<p>First you have to read <a href="http://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow">this</a> and then you have to read <a href="http://docs.python.org/2/reference/expressions.html#boolean-operations" rel="nofollow">this</a>. :)</p>
<p>After that you will know that <code>and</code> is a boolean operator, that tries to convert it's first operand to boolean. So if you read the first thing you will see that <code>2</code> is converted to <code>True</code>.</p>
<p>The third thing you need to know is that the <code>and</code> operand will return it's first argument if it is converted to <code>False</code> and it's second argument if it evaluates to <code>True</code>.</p>
<p>So basically</p>
<pre><code>z = x and y
</code></pre>
<p>Can be translated to:</p>
<pre><code>if x:
    z = y
else:
    z = x
</code></pre>
<p>And now you understand everything. :)</p>
<p><code>2</code> is evaluated to <code>True</code> and then <code>and</code> operator returns the value of it's second argument which is <code>6</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Applying lazy evaluation, python return for <code>a and b</code> a if a evaluates to False and b if a evaluates to True.</p>
<p>Hence 2 evaluates to True, <code>2 and 2*3</code> return <code>2*3</code> which equals 6.</p>
</div>
<div class="post-text" itemprop="text">
<p>Basically it's same as <code>2 and 6</code>. </p>
<p>How it works? <code>and</code> returns first element if it's considered False (<code>False</code>, <code>0</code>, <code>[]</code> ...) and return second otherwise</p>
</div>
<div class="post-text" itemprop="text">
<p>This is to do with how Python evaluates the expression <code>x and y</code>. It returns <code>y</code> if <code>x</code> is <code>True</code>, and <code>x</code> if <code>x</code> if <code>False</code>.</p>
<p>So, in case of <code>2 and 2 * 3</code>, since <code>2</code> is evaluated to <code>True</code>, it would return the value <code>2 * 3</code>, which is <code>6</code>.</p>
<p>In case of <code>and</code> operation between multiple operands, it returns the 1<sup>st</sup> non-<code>True</code> value, and if all the values are <code>True</code>, it returns the last value.<br/>
Similarly, for <code>or</code> operator, the expression say, <code>A or B or C</code>, returns the 1<sup>st</sup> <code>True</code> value. And if all the values are <code>False</code>, it returns the last value.</p>
</div>
<span class="comment-copy">Assuming you understand the multiplication operator. The two other things you need to understand are <a href="http://docs.python.org/2/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">boolean operations</a> and <a href="http://docs.python.org/2/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a>.</span>
