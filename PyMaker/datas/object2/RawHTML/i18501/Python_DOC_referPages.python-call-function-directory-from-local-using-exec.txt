<div class="post-text" itemprop="text">
<p>Currently I do something like this:</p>
<pre><code>pyfd = open("some_python_script.py", "r")
src = pyfd.read()
pyfd.close()

exec(src) #Note, also tried eval and execfile, I use read as I do something with it.
locals()["some_function"]("foo", "bar")
</code></pre>
<p>It works great, however when I leave the function I notice that both Globals and Locals don't have the  "some_function" function anymore. (I expect its the Garbage Collection)</p>
<p>My question is, how can I append my code read from some python file to my other code?</p>
<p>I know this is bad practice and insecure etc etc. But I want to make it in a way that I "py2exe" my main part and that my user can append Python code. He can destroy the entire app by overwriting functions and what not but I can 100% trust the user.</p>
<p>Thanks, Stolas</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>... when I leave the function ...</p>
</blockquote>
<p>If you wrap an <code>exec</code> call in a function, then it's executed in the functions scope. If you want it executed in a different scope, just supply the corresponding dict as argument to <a href="http://docs.python.org/2/reference/simple_stmts.html?highlight=exec#the-exec-statement" rel="nofollow">exec</a>*:</p>
<pre><code>def load_some_script():
    pyfd = open("some_python_script.py", "r")
    src = pyfd.read()
    pyfd.close()

    exec(src, globals())  # execute the code in the global scope


load_some_script()
some_function('foo', 'bare')  # should now be available at module level.
</code></pre>
<p>*edit:</p>
<p>actually in python2 it's not an argument, it's the second element of a tuple, only in python3 it's an argument as <a href="http://docs.python.org/3/library/functions.html?highlight=exec#exec" rel="nofollow">exec</a> has become a function instead of a statement, but for compatibility the tuple form has been introduced in python2.</p>
</div>
<span class="comment-copy">Thank you, I noticed this in the documents before, so I read it. Tried it and it didn't work. but it seems like the answer as now it works (so I must have done something else wrong as well)  Thank You :)</span>
