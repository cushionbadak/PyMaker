<div class="post-text" itemprop="text">
<p>I have a column with the customers name which is duplicated when the customers have 2 products. I have to create a new status to group the customers status in ONE depending on the situation. So I have to compare the customer X to the another X to generate a new status as one.</p>
<pre><code>Customer|Status  |Cancaled_at|new status
X       |Active  |-          |
X       |Canceled|2019-xx-xx |
Y       |Active  |-          |
Z       |Active  |-          |
A       |Canceled|-          |
</code></pre>
<p><strong>desired output:</strong></p>
<pre><code>Customer|Status  |Cancaled_at|new status
X       |Active  |-          |Canceled
X       |Canceled|2019-xx-xx |Canceled
Y       |Active  |-          |
Z       |Active  |-          |
A       |Canceled|-          |
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is an easy way to find all duplicated values in pandas:</p>
<pre><code>df['new_status'][(df.duplicated('Customer', False))] = 'Canceled'
</code></pre>
<p>This makes <code>new_status</code> column <code>Canceled</code> where dataframe's Customer column has duplicated values.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you need:</p>
<pre><code>df = pd.DataFrame({'Customer':['X','X','Y','Z','A'], 'status':['active','canceled','active','active','canceled'],
    'Canceled_at':[None, '2019-01-01', None, None,None]})


df['new_status'] = np.where((df['status']=='canceled') &amp; (~df['Canceled_at'].isnull()), 'canceled', None)
df['new_status'] = df.groupby('Customer')['new_status'].bfill()

print(df)
</code></pre>
<p>Output:</p>
<pre><code> Canceled_at   Customer    status new_status                                                                                           
0        None        X    active   canceled                                                                                           
1  2019-01-01        X  canceled   canceled                                                                                           
2        None        Y    active       None                                                                                           
3        None        Z    active       None                                                                                           
4        None        A  canceled       None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This code uses the <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html" rel="nofollow noreferrer">sort_values()</a>, <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html" rel="nofollow noreferrer">fillna()</a> and <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.shift.html" rel="nofollow noreferrer">shift()</a>:</p>
<pre><code>df = df.sort_values(by=['Customer', 'Status'])
df['new_status'] = df[df.Status == 'Canceled']['Status']
df.loc[((df['Customer'] != df['Customer'].shift(-1)) &amp; (df['new_status'].isnull())), 'new_status'] = ''
df['new_status'].fillna(method = 'backfill', limit = 1, inplace = True)
df.sort_index(inplace = True)
</code></pre>
<p>Produces the following output:</p>
<pre><code>    Customer    Status      Cancaled_at new_status
0   X           Active      -           Canceled
1   X           Canceled    2019-xx-xx  Canceled
2   Y           Active      -   
3   Z           Active      -   
4   A           Canceled    -           Canceled
</code></pre>
</div>
<span class="comment-copy">Please share the expected output</span>
<span class="comment-copy">in this case, if I have a canceled product from the customer X, the output would be a new status with a canceled in both X. I'll edit</span>
<span class="comment-copy">Op doesn't want <code>Canceled</code> in the last row.</span>
