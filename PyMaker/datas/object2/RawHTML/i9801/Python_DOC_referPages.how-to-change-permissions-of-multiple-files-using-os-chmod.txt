<div class="post-text" itemprop="text">
<p>I have a directory which contains multiple files (some shell ending with .sh, some text files and some python files ending with .py extension).</p>
<p>I want to add execute permission to all shell files (ending with .sh) using os.chmod command. Basically I want to do this:</p>
<pre><code>chmod +x *.sh
</code></pre>
<p>I tried checking for permissions first by doing this:</p>
<pre><code>&gt;&gt;&gt; s = os.stat('*.ksh')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
OSError: [Errno 2] No such file or directory: '*.ksh'
</code></pre>
<p>But it won't work.
How can I do this in pythonic way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob</code> module</a> to get a list of files, and then loop over them:</p>
<pre><code>import glob, os, stat

for name in glob.glob('*.sh'):
    print(name, os.stat(name))
</code></pre>
<p>And you can use <code>os.chmod()</code> as per <a href="https://stackoverflow.com/questions/12791997/how-do-you-do-a-simple-chmod-x-from-within-python">this question</a> to actually add the executable mode bit:</p>
<pre><code>for name in glob.glob('*.sh'):
    st = os.stat(name)
    os.chmod(name, st.st_mode | stat.S_IEXEC)
</code></pre>
</div>
<span class="comment-copy">Forgot about glob. Thanks Ben !</span>
