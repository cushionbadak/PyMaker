<div class="post-text" itemprop="text">
<p>I am trying to create a script that scrapes a webpage and downloads any image files found.</p>
<p>My first function is a wget function that reads the webpage and assigns it to a variable.
My second function is a RegEx that searches for the 'ssrc=' in a webpages html, below is the function:</p>
<pre><code>def find_image(text):
    '''Find .gif, .jpg and .bmp files'''
    documents = re.findall(r'\ssrc="([^"]+)"', text) 
    count = len(documents)
    print "[+] Total number of file's found: %s" % count
    return '\n'.join([str(x) for x in documents])
</code></pre>
<p>The output from this is something like this:</p>
<pre><code>example.jpg
image.gif
http://www.webpage.com/example/file01.bmp
</code></pre>
<p>I am trying to write a third function that downloads these files using urllib.urlretrieve(url, filename) but I am not sure how to go about this, mainly because some of the output is absolute paths where as others are relative. I am also unsure how to download these all at same time and download without me having to specify a name and location every time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Path-Agnostic fetching of resources (Can handle absolute/relative paths) - </p>
<pre><code>from bs4 import BeautifulSoup as bs
import urlparse
from urllib2 import urlopen
from urllib import urlretrieve
import os

def fetch_url(url, out_folder="test/"):
    """Downloads all the images at 'url' to /test/"""
    soup = bs(urlopen(url))
    parsed = list(urlparse.urlparse(url))

    for image in soup.findAll("img"):
        print "Image: %(src)s" % image
        filename = image["src"].split("/")[-1]
        parsed[2] = image["src"]
        outpath = os.path.join(out_folder, filename)
        if image["src"].lower().startswith("http"):
            urlretrieve(image["src"], outpath)
        else:
            urlretrieve(urlparse.urlunparse(parsed), outpath)

fetch_url('http://www.w3schools.com/html/')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I can't write you the complete code and I'm sure that's not what you would want as well, but here are some hints:</p>
<p>1) Do <strong>not</strong> parse random HTML pages with regex, there are quite a few parsers made for that. I suggest <a href="http://www.pythonforbeginners.com/beautifulsoup/beautifulsoup-4-python" rel="nofollow noreferrer">BeautifulSoup</a>. You will filter all <code>img</code> elements and get their <code>src</code> values.</p>
<p>2) With the <code>src</code> values at hand, you download your files the way you are already doing. About the relative/absolute problem, use the <code>urlparse</code> module, as per <a href="https://stackoverflow.com/questions/8357098/how-can-i-check-if-a-url-is-absolute-using-python">this SO answer</a>. The idea is to join the <code>src</code> of the image with the URL from which you downloaded the HTML. If the <code>src</code> is already absolute, it will remain that way.</p>
<p>3) As for downloading them all, simply iterate over a list of the webpages you want to download images from and do steps 1 and 2 for each image in each page. When you say "at the same time", you probably mean to download them asynchronously. In that case, I suggest downloading each webpage <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">in one thread</a>.</p>
</div>
<span class="comment-copy">don't parse html with regexes <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454" title="regex match open tags except xhtml self contained tags">stackoverflow.com/questions/1732348/â€¦</a></span>
