<div class="post-text" itemprop="text">
<p>I've been struggling with this for two days now and I can't seem to find any help. I need to search the file for a student ID (1001 is my test ID being used) and then add the numbers in each line that takes place below each occurrence of the student ID together in order to get an average. </p>
<pre><code>filename = input("Enter file name: \n"
                 "Example: Grade Data.txt \n")
myFile = open(filename, "r")    
selectSID = input("Enter SID: \n")
gradesNum = myFile.read().count(selectSID)
grades = myFile.read()
gradetotal = sum()
average = (gradetotal/gradesNum)
print(average)
</code></pre>
<p>The text file that is being opened looks like this:</p>
<pre><code>1001
95
1002
99
1001
96
1002
0
1001
84
1002
25
1001
65
1002
19
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This looks like homework so I don't want to write the code for you but here is a pseudo code (there are multiple ways to achieve what you want, this is just a simple beginner level code):</p>
<pre><code>Open file to read
get two lines from the file
    is the line1 interesting to me?
        yes -&gt; store value from line2 in an array
        no -&gt; ignore line2
close file

get average
</code></pre>
<p>Some useful references:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">Python I/O</a></li>
<li><a href="https://docs.python.org/3.5/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer">Powerful things in python to help with I/O</a></li>
<li><a href="https://docs.python.org/3.5/library/functions.html" rel="nofollow noreferrer">Built-in functions to help with basic operations like sum</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import defaultdict
# with open('filename') as f:
#     file = [for i in f]
# in this case, it's the list below
file = [1001,95,1002,99,1001,96,1002,0,1001,84,1002,25,1001,65,1002,19]
infos = defaultdict(list)
sids = file[::2]    # select sid info
grades = file[1::2] # select grade info 

for sid,grade in zip(sids,grades):
    infos[sid].append(grade)

print(infos[1001])
print(infos[1002])
</code></pre>
<p>out:</p>
<pre><code>[95, 96, 84, 65]
[99, 0, 25, 19]
</code></pre>
<p>in this point, you can sum, average, max or min whatever you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please don't use this code for your homework (use @Aditya's method); you need to learn the basics before using fancy libraries. However, I just learned about <code>collections.defaultdict</code> and I wanted to use it. Watch <a href="https://youtu.be/lyDLAutA88s" rel="nofollow noreferrer">this video</a> for a great demo on <code>defaultdict</code>.</p>
<pre><code>import collections
import statistics

# This little guy will hold all of our grades
# https://youtu.be/lyDLAutA88s is a great video using it
grades = collections.defaultdict(list)

def get_next_num(file):
    """get the next line of a file,
    remove any whitespace surrounding it,
    and turn it into an integer"""
    return int(next(file).strip())

with open('tmp.txt') as myfile:
    while True:
        try:
            # seriously, watch the video
            grades[get_next_num(myfile)].append(get_next_num(myfile))
        except StopIteration: # end of file
            break
student_id = int(input('Enter student ID. Choices: {} : '.format(list(grades.keys()))))
print(statistics.mean(grades[student_id]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Updated Answer:</p>
<p>Okay, so I think I understand your question now... Same thing, except I suggest using a list, and as long as the file stays in the same format (SID, Score, so on...), this should work, and requires minimal understanding of Python (i.e No weird libraries like <em>glob</em>):</p>
<pre><code>filename = input("Enter file name: \n"
             "Example: Grade Data.txt \n")
myFile = open(filename, "r")    
selectSID = input("Enter SID: \n")
raw = myFile.read()   ## Raw contents of file.
val = raw.count( selectSID )  ## Returns number of occurences
print( "Occurrences: ", val )  ## Or do something else...

lines = raw.split("\n")   ## Create a list containing each new line
scores = []   ## A list that will contain all your scores
while selectSID in lines:
    val = lines.index( selectSID )   ## Returns where it is in the list,
    score = lines[ val+1 ]   ## Gets the item at that position (index) Because the score is one line after the SID
    scores.append( int(score) ) ## Adds the score to the list. --Suggest you look into how to safely capturing "int"s (try, except, etc) so the program doesn't crash if the score isn't a number (Advance)
    lines.remove( selectSID )   ## automatically removes first occurrence of the SID (cause that's the one we just used)
avg = sum(scores) / len(scores)  ## sum() function is self explanatory (takes a list or tuple [a sequence] and adds all values (must be all numbers), THEN len() is just length. 
</code></pre>
<p>This will return an integer, or with your file, will print:</p>
<pre><code>Occurrences: 4
</code></pre>
<hr/>
<hr/>
<p>Regardless if this answered your question, my tip for learning basics is understanding file types and what they can do.
In your case, you will mainly need to focus on strings (text) and integers (whole numbers). Using Pythons IDLE, declare a variable, and type the name and a dot, and use tab to scroll through each functions available. 
Example:</p>
<pre><code>&gt;&gt;&gt; myString = "Hello World"
&gt;&gt;&gt; myString.[TAB]  #--&gt; [Context Menu Here]
</code></pre>
<p>Once you pick one form the list, enter an opening parenthesis "(", and it will give a brief description of what it does.</p>
<hr/>
<hr/>
<p>Hope that helps, and sorry for the lengthy reply (I was trying to explain and give pointers (tips) since you said you were a noob)</p>
</div>
<span class="comment-copy">You didn't give an argument to <code>sum()</code>, what is it suppose to get the sum of?</span>
<span class="comment-copy">If your instructor didn't teach it, maybe it's in the textbook? I can't believe he gives homework for something that hasn't been taught.</span>
<span class="comment-copy">in particular, check out <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer">statistics.mean</a>.</span>
<span class="comment-copy">Where do you calculate the average of the grades?</span>
<span class="comment-copy">@Barmar Sorry, I just figured out what the other numbers were. Answer updated. Very basic. Lengthy, but it's the way I suggest you do your programs till you understand more core concepts before tackling functions, modules/libraries like "import glob", or some other random crap (like those listed in the other answers). ;)</span>
