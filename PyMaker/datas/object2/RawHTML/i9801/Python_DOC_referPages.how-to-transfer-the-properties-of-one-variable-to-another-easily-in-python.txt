<div class="post-text" itemprop="text">
<p>Here I have 2 <code>classes A</code> and <code>B</code>,</p>
<pre><code>class A(object):
  def __init__(self):
    self.a1=0
    self.a2=0
    self.a3=0
class B(object):
  def GenerateA(self):
    self.a=A()
    #some codes go here
    return self.a
a=A()
a.a1=1
a.a2=2
a.a3=3
b=B()
ainb=b.GenerateA()
print(ainb)
ainb.a1=a.a1
ainb.a2=a.a2
ainb.a3=a.a3
print(ainb)
</code></pre>
<p><code>class B</code> has a function of <code>GenerateA()</code>, which can return a empty instance of <code>class A</code>(but I don't know what it exactly did since they are from vendor). <code>class A</code> is an interface class, which let <code>B</code> knowing some values for further calculations. here I need to setup <code>ainb</code> of its every property. I can do like this directly:</p>
<pre><code>ainb.a1=1
ainb.a2=2
ainb.a3=3
</code></pre>
<p>or I can setup by doing</p>
<pre><code>a=A()
a.a1=1
a.a2=2
a.a3=3
ainb.a1=a.a1
ainb.a2=a.a2
ainb.a3=a.a3
</code></pre>
<p>I hope to setup <code>ainb</code> in a easy way, so that I can keep its address unchanged, I suppose the <code>copy.deepcopy()</code> method will totally replace the address, which I don't want to.
Do you have any suggestions?
Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>To copy/transfer the value for all attributes from <code>a</code> to <code>ainb</code>.</p>
<p>Probably should filter out all of <code>a</code>'s methods and double-underscore attributes</p>
<pre><code>attrs = [attr for attr in dir(a) if not attr.startswith('__') and not callable(attr)]
</code></pre>
<p>Then iterate through the remaining attributes and use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">getattr</a> and <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">setattr</a>:</p>
<pre><code>for attr in attrs:
    try:
        setattr(ainb, attr, getattr(a, attr))
    except AttributeError:
        print 'ainb does not have', attr
</code></pre>
<hr/>
<p>Similarly, if you have a container with attribute/value pairs:</p>
<pre><code>setup = [('a1', 1), ('a2', 2), ('a3', 3)]
for attr, value in setup:
    try:
        setattr(ainb, attr, value)
    except AttributeError:
        print 'ainb does not have', attr
</code></pre>
</div>
<span class="comment-copy"><code>deepcopy() method will totally replace the address</code> what address?</span>
<span class="comment-copy">is it allowed for you to change the structure of the classes A and B ?</span>
<span class="comment-copy">sorry, maybe I am totally wrong, I think deepcopy() will deeply new a instance from the original one, so it will generate a totally different address of a new instance of class A, correct?</span>
<span class="comment-copy">If you want two different copies, they will have different address. If you want it to have same address, they will be two variables pointing to the same reference. What is the issue? Based on what I got, your statements contradicts it. <i>As you want copy with same address</i></span>
<span class="comment-copy">@Moinuddin Quadri, no, the class A and B are from vendor, I only know some of the properties and functions. I have print(ainb) to show their address, it will not change if use my codes above. This is the address GenerateA() gave me, which I don't want to change. But maybe my understanding is wrong.</span>
<span class="comment-copy">thank you for your detailed explanations.</span>
