<div class="post-text" itemprop="text">
<p>Is there a way to suppress the pytest's internal deprecation warnings?</p>
<p>Context: I'm looking to evaluate the difficulty of porting a test suite from <code>nose</code> to <code>pytest</code>. The suite is fairly large and heavily uses <code>nose</code>-style <code>yield</code> based test generators.</p>
<p>I'd like to first make sure the <em>existing</em> tests pass with pytest, and then maybe change test generators to <code>parameterized</code>.</p>
<p>Just running <code>$ pytest path-to-test-folder</code> with pytest 3.0.4 is completely dominated by pages and pages of</p>
<pre><code>WC1 ~repos/numpy/numpy/lib/tests/test_twodim_base.py yield tests are deprecated, and scheduled to be removed in pytest 4.0
</code></pre>
<p>Is there a way of turning these warnings off?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <code>pytest --help</code>:</p>
<pre><code>--disable-pytest-warnings
                      disable warnings summary, overrides -r w flag
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>pytest -p no:warnings</code></p>
<p>or add the following to your pytest.ini or tox.ini:</p>
<pre><code>[pytest]
addopts = -p no:warnings
</code></pre>
<p>The result will be green without any indication of warnings (unless tests fail of course).</p>
<p>See <a href="https://docs.pytest.org/en/latest/warnings.html#disabling-warning-capture" rel="noreferrer">https://docs.pytest.org/en/latest/warnings.html#disabling-warning-capture</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think you do not want to hide all warnings, but just the ones that are not relevant. And in this case, deprectation warnings from imported python modules.</p>
<p>Having a read on pytest documentation about <a href="https://docs.pytest.org/en/latest/warnings.html" rel="nofollow noreferrer">Warnings Capture</a>: </p>
<blockquote>
<p>Both -W command-line option and filterwarnings ini option are based on Pythonâ€™s own <a href="https://docs.python.org/3/using/cmdline.html?highlight=#cmdoption-W" rel="nofollow noreferrer">-W option</a> and <a href="https://docs.python.org/3/library/warnings.html#warnings.simplefilter" rel="nofollow noreferrer">warnings.simplefilter</a>, so please refer to those sections in the Python documentation for other examples and advanced usage.</p>
</blockquote>
<p>So you can filter warnings with python's <code>-W</code> option!</p>
<p>It seems that <code>pytest</code> completely removes filters, because it shows all those <code>DeprecationWarning</code> when running, and Python's documentation about <a href="https://docs.python.org/3/library/warnings.html#default-warning-filter" rel="nofollow noreferrer">Default Warning Filters</a> clearly says: </p>
<blockquote>
<p>In regular release builds, the default warning filter has the
  following entries (in order of precedence):</p>
<pre><code>default::DeprecationWarning:__main__
ignore::DeprecationWarning
ignore::PendingDeprecationWarning
ignore::ImportWarning
ignore::ResourceWarning
</code></pre>
</blockquote>
<p>So in your case, if you want let say to filter types of warning you want to ignore, such as those <code>DeprecationWarning</code>, just run the pytest command with <code>-W</code> option :</p>
<pre><code>$ pytest path-to-test-folder -W ignore::DeprecationWarning
</code></pre>
<p><strong>EDIT</strong>: From colini's comment, it is possible to filter by module.  Example to ignore deprecation warnings from all sqlalchemy :</p>
<pre><code>ignore::DeprecationWarning:sqlalchemy.*:
</code></pre>
<p>You can then list your installed modules that creates too much noise in the output of <code>pytest</code></p>
<p><strong>Use with file rather than in command line:</strong></p>
<p>You may prefer list those filters in pytest.ini file : </p>
<pre><code>[pytest]
filterwarnings =
    ignore::DeprecationWarning
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't want to hide all warning, so I put this in <code>pytest.ini</code></p>
<pre><code>[pytest]
filterwarnings =
    ignore::DeprecationWarning
</code></pre>
</div>
<span class="comment-copy">As the help text says, this will only omit the textual summary. The result will still be yellow and show that there are warnings.</span>
<span class="comment-copy">Love this one best.</span>
<span class="comment-copy">To filter on the module you use a regex.  Example to ignore deprecation warnings from all sqlalchemy modules:<code>ignore::DeprecationWarning:sqlalchemy.*:</code></span>
<span class="comment-copy">Didn't work for me on 2.7</span>
