<div class="post-text" itemprop="text">
<p>In <a href="https://docs.python.org/3/reference/datamodel.html#customization" rel="noreferrer">Basic customisation</a>, the python docs state about comparison methods:</p>
<blockquote>
<p>[no swapped-argument versions of these methods]; 
  rather, <code>__lt__()</code> and <code>__gt__()</code> are each other’s reflection, <code>__le__()</code> and <code>__ge__()</code> are each other’s reflection, and <code>__eq__()</code> and <code>__ne__()</code> are their own reflection.</p>
</blockquote>
<p>I'd be less surprised by <code>__lt__()</code> and <code>__ge__()</code> being each other’s reflection(, as well as <code>__le__()</code> and <code>__gt__()</code>).</p>
<p>While the docs also state:</p>
<blockquote>
<p>… no other implied relationships among the comparison operators, for example, the truth of <code>(x&lt;y or x==y)</code> does not imply <code>x&lt;=y</code>,  </p>
</blockquote>
<p>what, if anything, is <em>the</em> or would be a rationale for the reflection relations chosen?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>a &lt; b</code> and <code>b &gt; a</code> are equivalent, as are <code>a &lt;= b</code> and <code>b &gt;= a</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Reflection means swapping the operands, not applying "not" to the operator.</p>
<pre><code>__lt__(a,b)
    # if we don't know what to do, call
    return __gt__(b,a)
</code></pre>
<p>You were thinking the following</p>
<pre><code>__lt__(a,b)
    # if we don't know what to do 
    return not __ge__(a,b)
</code></pre>
<p>But that's not what reflection means.</p>
</div>
<span class="comment-copy">related: <code>@functools.total_ordering</code>, <a href="http://stackoverflow.com/q/13799386/3789665">python bug with <b>le</b>, <b>ge</b>?</a>.</span>
<span class="comment-copy">I seem to have misread <i>reflection</i> for (logical) <i>complement</i>.</span>
