<div class="post-text" itemprop="text">
<p>I have a list of lists and I should find the sublist whose second element has the max value.</p>
<p>I implemented it as follows, but I would say it's a bit 'suboptimal' :-)</p>
<pre><code>def max_value(inputlist):
    return max([sublist[-1] for sublist in inputlist])
</code></pre>
<p>and then</p>
<pre><code>maxvalue = max_value(listofcounties)    
for result in listofcounties:
    if result[1] == maxvalue:
        return result[0]
</code></pre>
<p>There's a way to accomplish that in a more coincise form?</p>
<p>Thank you very much for any hint!
Bye
Fabio</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="noreferrer"><code>max</code></a> accepts an optional <code>key</code> parameter; <code>max</code> compares the return value of the <code>key</code> function to determine which one is larger.</p>
<pre><code>maxvalue = max(listofcounties, key=lambda x: x[-1])
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; listofcounties = [['county1', 10], ['county2', 20], ['county3', 5]]
&gt;&gt;&gt; max(listofcounties, key=lambda x: x[-1])  # by using `key`, max compares 10, 20, 5
['county2', 20]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another simple approach using <code>sorted</code> function:</p>
<pre><code># the exemplary list was borrowed from @falsetru answer
listofcounties = [['county1', 10], ['county2', 20], ['county3', 5]]
max_sequence = sorted(listofcounties, key=lambda l: l[1], reverse=True)[0]

print(max_sequence)
</code></pre>
<p>The output:</p>
<pre><code>['county2', 20]
</code></pre>
<p><a href="https://docs.python.org/3.5/library/functions.html#sorted" rel="nofollow noreferrer">https://docs.python.org/3.5/library/functions.html#sorted</a></p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Here is another option (though not a very efficient one):</strong></p>
<p>Find all the sub-lists whose second element has the maximum value:</p>
<p><code>[n for n in listofcounties if n[1] == max([k[1] for k in listofcounties])]</code></p>
<p>Find the first sub-list whose second element has the maximum value:</p>
<p><code>[n for n in listofcounties if n[1] == max([k[1] for k in listofcounties])][0]</code></p>
<hr/>
<p><strong>Split it into two statements in order to improve efficiency:</strong></p>
<p>Find all the sub-lists whose second element has the maximum value:</p>
<p><code>maxvalue = max([k[1] for k in listofcounties])</code></p>
<p><code>[n for n in listofcounties if n[1] == maxvalue]</code></p>
<p>Find the first sub-list whose second element has the maximum value:</p>
<p><code>maxvalue = max([k[1] for k in listofcounties])</code></p>
<p><code>[n for n in listofcounties if n[1] == maxvalue][0]</code></p>
</div>
<span class="comment-copy"><code>result[0]</code> will return the first element from the needed sublist, not the whole sublist</span>
<span class="comment-copy">second element is <code>sublist[1]</code> not <code>sublist[-1]</code></span>
<span class="comment-copy">Nice, but why <code>[-1]</code>, it's the second element (<code>[1]</code>), not the one before last, and if the sublists have 3 items?</span>
<span class="comment-copy">@Miguel, <code>[-1]</code> comes from OP's code.</span>
<span class="comment-copy">Yeh sorry, i noticed now that i commented there too.</span>
<span class="comment-copy">@Miguel, No problem.</span>
