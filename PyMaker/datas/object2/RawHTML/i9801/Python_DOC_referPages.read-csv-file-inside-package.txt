<div class="post-text" itemprop="text">
<p>Sorry if this question is stupid, but I'm kind of a python newbie.</p>
<p>I'm trying to port a python 2.7 code base to python 3.4...<br/>
I found this code snippet which should iterate over a csv file inside the packed application.<br/>
Although PyDev is telling me, that pkg_resources.respource_stream is undefined the first line seems to work, causing the 3rd line to throw this error: <code>_csv.Error: iterator should return strings, not bytes (did you open the file in text mode?)</code></p>
<pre><code>io = pkg_resources.resource_stream(__name__, "data.csv")
c = csv.reader(io)
for record in c:
    #doStuff
</code></pre>
<p>I tried switching the method to resource_string, ResourceManager.resourceStream etc. but all I got was different errors.<br/></p>
</div>
<div class="post-text" itemprop="text">
<p><code>pkg_resources.resource_stream</code> returns a stream that reads in binary mode; it just returns the bytes read, and doesn't try to decode them using a particular encoding.</p>
<p>Most tools for encoding and decoding text are found in the <a href="https://docs.python.org/3/library/codecs.html" rel="nofollow noreferrer"><code>codecs</code> module</a>. To convert a binary reader into a text reader given a particular encoding, use <a href="https://docs.python.org/3/library/codecs.html#codecs.getreader" rel="nofollow noreferrer"><code>codecs.getreader</code></a>. Since you are bundling this file yourself, you should know the encoding, which should probably be UTF-8. So you would write:</p>
<pre><code>io = pkg_resources.resource_stream(__name__, "data.csv")
utf8_reader = codecs.getreader("utf-8")
c = csv.reader(utf8_reader(io))
for record in c:
    # doStuff
</code></pre>
</div>
<span class="comment-copy">The problem is that you get a file object opened in binary mode not text mode (as documented), so it returns bytes not strings. I leave it to someone else to come up with a good solution or show me a builtin function which does what is needed in an efficient manner.</span>
