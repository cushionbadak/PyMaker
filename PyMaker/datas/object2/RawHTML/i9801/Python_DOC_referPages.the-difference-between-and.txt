<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16819023/whats-the-purpose-of-the-pos-unary-operator-in-python">What's the purpose of the + (pos) unary operator in Python?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>So I have a simple piece of code that prints out the integers 1-10:</p>
<pre><code>i = 0
while i &lt; 10:
        i += 1
        print(i)
</code></pre>
<p>Then if you just change one operator around on line 3, it prints out an infinite amount of 1 integers(which i understand why it does that). Why isn't a syntax error occurring when running this second program? Wouldn't it call a syntax error in the event of an assignment operator being followed by an addition operator??</p>
<pre><code>i = 0
while i &lt; 10:
        i =+ 1
        print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>i+=1</code> is the same as <code>i=i+1</code>, whereas
<code>i=+1</code> just means <code>i=(+1)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Tokenizers don't typically require spaces unless it's necessary to disambiguate (e.g. you need a space, or punctuation of some form between a variable name and a language keyword so the keyword can be recognized).</p>
<p>Thus, <code>x=+y</code>, <code>x =+ y</code> and <code>x = +y</code> are all equivalent, in all cases invoking the unary <code>+</code> operator on <code>y</code> and assigning to <code>x</code>. The unary plus operator isn't commonly used, but just because it's uncommon doesn't mean it's not recognized and accepted.</p>
<p>For comparison, the <code>--&gt;</code> "operator" in C/C++ etc. is <a href="https://stackoverflow.com/questions/1642028/what-is-the-name-of-the-operator-in-c">another example where humans looking for spaces and tokenizers ignoring them causes confusion</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>i =+ 1</code> is the same as <code>i = +1</code>, or <code>i = 1</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>x=+1</code> is treated as:  <code>x=(+1)</code> <br/>
while <code>x+=1</code> is treated as: <code>x=x+1</code></p>
<p>There are binary operators which operates on their left-handside operand and their right-hand side operand (e.g. * multiplication).
<br/>And there are unary operators which takes only right-hand side operand (e.g. ~/! negation).
There are operators which can be unary and binary.</p>
<p>The plus sign in python can be used also as right-hand side operator just as minus.</p>
<p>Python Docs:</p>
<blockquote>
<p>The unary - (minus) operator yields the negation of its numeric
  argument.</p>
<p>The unary + (plus) operator yields its numeric argument unchanged.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>There is no syntax error because the expression <code>i =+ 1</code> is the same as <code>i = (+1)</code> and <code>+1</code> is perfectly legitimate. It is a unary operator, not the addition operator. </p>
</div>
<span class="comment-copy"><code>i =+ 1</code> is the same thing as <code>i = 1</code>. <code>+</code> is the unary operator here.</span>
<span class="comment-copy">See the <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-u_expr" rel="nofollow noreferrer">language reference on unary expressions</a></span>
<span class="comment-copy">OP seems to understand that. The question was, why <code>+1</code> is not illegal syntax.</span>
<span class="comment-copy"><code>!--</code> has also been the source of some confusion in <a href="http://stackoverflow.com/q/34323527/1547004">javascript</a></span>
