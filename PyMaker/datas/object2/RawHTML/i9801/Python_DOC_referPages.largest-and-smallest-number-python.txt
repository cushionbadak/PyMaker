<div class="post-text" itemprop="text">
<p>I know it's pretty simple but im having a hard time finding the largest and smallest number out of three numbers in python.
Here is my code:
<strong>* im not allowed to use the built in functions min and max so i have to use if and else...)*</strong></p>
<pre><code>def largest_and_smallest(number1, number2, number3):
    if number1 &gt;= number2:
        maxn=number1
        minn=number2
        if number1 &gt;= number3:
           maxn=number1
            if number3&gt;=number2:
                minn=number2
            else:
                minn=number3
        else:
            maxn=number3
            minn=number2
    else:
        maxn=number2
        minn=number1
        if number2 &gt;= number3:
             maxn=number2
             if number3 &gt;= number2:
                 minn=number2
             else:
                 minn=number3
         else:
             maxn=number3
             minn=number1
    print(maxn,minn)
</code></pre>
<p>i get several of error messages such as: local variable maxn and minn are not used and also shadow name minn and maxn from outer scope. im pretty new to this so i would love to get some help. 
Thanks a lot in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Other than minor indentation problems which I'm sure were introduced when you pasted the code into your question, your code <em>works</em>. The "errors" you're getting aren't errors; they're warnings from your IDE and you can safely ignore them.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with a simple <a href="https://en.wikipedia.org/wiki/Sorting_network" rel="nofollow noreferrer">sorting network</a>.</p>
<pre><code>def sort3(a, b, c):
    if c &lt; b: b, c = c, b
    if b &lt; a: a, b = b, a
    if c &lt; b: b, c = c, b
    return a, b, c

# demo

data = [
    (1, 2, 3),
    (1, 3, 2),
    (2, 1, 3),
    (2, 3, 1),
    (3, 1, 2),
    (3, 2, 1),
]

for row in data:
    print(sort3(*row))
</code></pre>
<p><strong>output</strong></p>
<pre><code>(1, 2, 3)
(1, 2, 3)
(1, 2, 3)
(1, 2, 3)
(1, 2, 3)
(1, 2, 3)
</code></pre>
<hr/>
<p>As Simon mentions in the comments, my <code>sort3</code> function isn't written in the usual Python style. Here it is in PEP-0008 compliant form.</p>
<pre><code>def sort3(a, b, c):
    """ Sort (a, b, c) using a Sorting Network """
    if c &lt; b: 
        b, c = c, b
    if b &lt; a: 
        a, b = b, a
    if c &lt; b: 
        b, c = c, b
    return a, b, c
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Option 1:</p>
<pre><code>def largest_and_smallest(number1, number2, number3):
    print(max([number1, number2, number3]))
    print(min([number1, number2, number3]))

largest_and_smallest(1, 3, 2)
</code></pre>
<p>Option 2: WIth list:</p>
<pre><code>def largest_and_smallest(lst):
    print(max(lst))
    print(min(lst))


largest_and_smallest([1, 2, 3, 4])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def largest_and_smallest(number1, number2, number3):
    if number1 &gt; number2 and number1 &gt; number3:
        maxn=number1
    elif number2 &gt; number1 and number2 &gt; number3:
        maxn=number2
    else:
        maxn=number3
    if number1 &lt; number2 and number1 &lt; number3:
        minn=number1
    elif number2 &lt; number1 and number2 &lt; number3:
        minn=number2
    else:
        minn=number3
    print maxn,minn


largest_and_smallest(1,2,3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Store them in list to make it easier on yourself and then use the built in Python functions to extract the min and max.</p>
<pre><code>nums = [1,3,2]

print(max(nums))
print(min(nums))

&gt; 3
&gt; 1
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">Built in functions</a></p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">List, Arrays, and Other Data Structures</a></p>
<p>Edit: I saw that you're not allows to use built in functions, this will return a tuple of (min, max) based on an array of values.</p>
<pre><code>nums = range(1,100)

def min_max(vals):
  min_val = vals[0]
  max_val = vals[0]

  for v in vals:
    if v &gt; max_val:
      max_val = v
    if v &lt; min_val:
      min_val = v

  return (min_val, max_val)

print(min_max(nums))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If there is always 3 integers being submitted then I just sort a list and use the first and last index. <strong>Since you are not allowed to use min and max</strong> I'm using <strong>sorted</strong></p>
<pre><code>def largest_and_smallest(number1, number2, number3):
    arr = sorted([number1, number2, number3])
    n_min, n_mid, n_max = arr[0], arr[1], arr[2]
    return n_min, n_max
</code></pre>
<p>modding my answer to meed conditional requirements</p>
<pre><code>def largest_and_smallest(number1, number2, number3):
    high = 0
    low = 0
    if (number1 &gt; number2) and (number1 &gt; number3):
        high = number1
    elif (number2 &gt; number1) and (number2 &gt; number3):
       high = number2
    else:
       high = number3

    if (number1 &lt; number2) and (number1 &lt; number3):
        low = number1
    elif (number2 &lt; number1) and (number2 &lt; number3):
       low = number2
    else:
       low = number3

    print(low, high)

largest_and_smallest(10, 100, 1)
largest_and_smallest(1, 2, 3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could make it more dense as well, increasing readability and still following usual python conventions, and way not expand it to allow for arbitrary many integers..  </p>
<pre><code>def min_and_max(numbers):
    min_num, max_num, *_ = numbers
    for num in numbers:
        max_num = num if num &gt; max_num else max_num
        min_num = num if num &lt; min_num else min_num
    return min_num, max_num


def main():
    data = (
        (1, 2, 3),
        (-20, 5, 100),
        (4, 23, 2, 3, 1),
        (123, -200, 3, 232),
        (123, 123, 123),
        (13, 21, 31, 1, 1, 1, 0)
    )
    for nums in data:
        print(min_and_max(nums))


if __name__ == '__main__':
    main()
</code></pre>
<p>gives:</p>
<pre><code>(1, 3)
(-20, 100)
(1, 23)
(-200, 232)
(123, 123)
(0, 31)
</code></pre>
<hr/>
<p>If you are not allowed to use list or such, well then, use the why python handles arguments, surely your teachers don't what you to change python. </p>
<p>You can simply tell python to not unpack the arguments you summit, and instead keep them in form that was inputed.</p>
<pre><code>def min_and_max(*args):
    min_num, max_num, *_ = args
    for num in args:
        max_num = num if num &gt; max_num else max_num
        min_num = num if num &lt; min_num else min_num
    return min_num, max_num


def main():
    data = (
        (1, 2, 3),
        (-20, 5, 100),
        (4, 23, 2, 3, 1),
        (123, -200, 3, 232),
        (123, 123, 123),
        (13, 21, 31, 1, 1, 1, 0)
    )
    for nums in data:
        print(min_and_max(*nums))


if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An issue is the maxn and minn are not defined in the scope, try inserting these lines I your code to initialize the maxn and minn variables:</p>
<pre><code>maxn=0
minn=0
</code></pre>
<p>So now you code looks like this:</p>
<pre><code>def largest_and_smallest(number1, number2, number3): 

    #initializing vars to zero
    maxn=0
    minn=0

    if number1 &gt;= number2: 
         maxn=number1
         #rest of you code...
</code></pre>
<p>That should fix the local variable warning, for more information on scope consult the <a href="https://docs.python.org/3/reference/executionmodel.html" rel="nofollow">Python Docs</a></p>
</div>
<span class="comment-copy">Are you unable to just use the built-in min() and max() functions? You could put the 3 number in a list and then use those. E.g. max([number1,number2,number3])</span>
<span class="comment-copy">Please, specify what problems / errors you are observing. Don't ask people to solve homeworks for you.</span>
<span class="comment-copy">Your code runs well for me. Those messages are actually warnings, not errors.</span>
<span class="comment-copy">I have written which error messages python gave me. I didnt ask you to solve my homework,i wanted to know what was my mistake because to me the code seems fine</span>
<span class="comment-copy">Mentioning just error messages without the information where they're actually thrown is useless. Add to your question exact errors including the positions where they're thrown, please.</span>
<span class="comment-copy">Thanks! It finally  worked..</span>
<span class="comment-copy">Impressive, but why do you put the content of the if statement on the same line as the statement?</span>
<span class="comment-copy">@Simon Mostly to make it more compact. I don't normally do that, but I think it's actually more readable in this situation (and I wrote that code a few years ago). But I guess I ought to do it properly so as to not teach people bad habits. :)</span>
<span class="comment-copy">Well still a very good answer, well played sir!</span>
<span class="comment-copy">The OP is not supposed to use built-ins, and you haven't said anything about his code.</span>
<span class="comment-copy">thanks. im not allowed to use them...</span>
<span class="comment-copy">I edited the ans. do check it.</span>
<span class="comment-copy">Thanks Karan. Thats obviously a shorter and probably better way to solve this but i still would like to know what was wrong with my code... It was longer than yours but i still used the same principles...</span>
<span class="comment-copy">there is nothing wrong with your code. its working just fine on my machine. there were just some indentation problems.</span>
<span class="comment-copy">thank you so much!</span>
<span class="comment-copy">The OP is not supposed to use built-ins, and you haven't said anything about his code.</span>
<span class="comment-copy">@TigerhawkT3 that wasn't apart of the initial requirements, I have updated the answer</span>
<span class="comment-copy">thanks. we haven't learned arrays yet so im only allowed to use if and else in my code...</span>
<span class="comment-copy">Curious, why all the solutions just a minus 1?  If it was the OP that's not a great why to get the community to help you. So i'm going to plus 1 everything, because all the answers were valid, if not to your professors requirements.  So instead of asking us to do HW for you, provide an error message.</span>
<span class="comment-copy">Courtesy returned ;-)</span>
<span class="comment-copy">@honza_p thanks</span>
<span class="comment-copy">i didnt mark the answers as minus...</span>
<span class="comment-copy">Those errors are not errors.</span>
<span class="comment-copy">My bad, they are <b>warnings</b>, I updated my post</span>
