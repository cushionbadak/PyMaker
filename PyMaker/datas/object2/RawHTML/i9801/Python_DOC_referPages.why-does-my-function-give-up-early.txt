<div class="post-text" itemprop="text">
<p>I have a mini program that is supposed to be a basic model of a cell's life cycle from birth to meiosis to death. Whereas the majority of it I have gotten figured out, I'm stuck at the following:</p>
<pre><code>class cell:
    def __init__(self):
        self.name = random.randint(1,1000) 
        self.type = [random.choice(b)] 
        self.age = 0
        self.evos = random.randint(1,5) #&lt;-- need to access this attr

def displayEvolutions(pop): # one of many methods, this one is a problem
    p = []
    for i in pop:
        p.append(i.evos)
        return p

community = [#a bunch of class instances]
cells_that_evolved = displayEvolutions(community)  
</code></pre>
<p>It's supposed to loop through the list of class instances <code>community</code>, access their <code>evo</code> attribute, populate <code>cells_that_evolved</code> with that data, and then display that list to the user.</p>
<p>It should look like this:</p>
<pre><code>cells_that_evolved = displayEvolutions(community)
print(cells_that_evolved)

[3, 4, 5, 6, 7, 8, 3, 1, 5] #&lt;--- 9 instances, 9 values = instance.evos
</code></pre>
<p>However, no matter what I try, it only appends the first value to the list so that list looks like this:</p>
<pre><code>[3]
</code></pre>
<p>Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have an indentation problem:</p>
<pre><code>def displayEvolutions(pop):
    p = []
    for i in pop:
        p.append(i.evos)
        return p
</code></pre>
<p>The first time through your loop, when <code>return p</code> is encountered, the current value of <code>p</code> is returned and the function terminates. Instead, you should return <code>p</code> after the loop completes, by unindenting that line:</p>
<pre><code>def displayEvolutions(pop):
    p = []
    for i in pop:
        p.append(i.evos)
    return p
</code></pre>
<p>A more elegant way to write the function would be using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>def displayEvolutions(pop):
    return [i.evos for i in pop]
</code></pre>
</div>
<span class="comment-copy">And of course, a more concise way would be to use a list comprehension: <code>def displayEvolutions(pop): return [i.evos for i in pop]</code>. This has the added benefit of not allowing the possibility of indentation problems.</span>
<span class="comment-copy">@SethMMorton you're right, of course - in this answer I decided to supply the simplest possible fix to a <a href="http://stackoverflow.com/revisions/40713367/1">self-described</a> beginner.</span>
<span class="comment-copy">Yeah, I know.  I just figured since the list comprehension was created for precisely this purpose I thought it was worth it to introduce the concept to the OP.</span>
<span class="comment-copy">@SethMMorton ok, you've twisted my arm ;-)</span>
<span class="comment-copy">ha! damn, its always the simplest things. Lol thanks guys</span>
