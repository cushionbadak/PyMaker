<div class="post-text" itemprop="text">
<p>I am trying to count the number of python files and non-python files in a path recursively. </p>
<pre><code>import os
def main():
    #path = input('Enter an existing path to a file or directory: ')
    path ='/Users/ziyuanhan/PycharmProjects/lab6/'
    print(count_file(path, counter={'py':0, 'non_py':0}))

def count_file(path,counter):
    if os.path.isfile(path):
        if path.endswith('.py') :
            counter['py']+=1
            return path, counter
        else:
            counter['non_py']+=1
            return path, counter
    elif os.path.isdir(path):
        for files in os.listdir(path):
            print(files)
            path = os.path.abspath(files)
            print(path)
            count_file(path, counter)
        return path, counter

main()
</code></pre>
<p>The few problems I have is</p>
<ol>
<li>I had trouble in keeping multiple counters in one recursion function.</li>
<li>Also the return I want is a dictionary format, but I can only do it this way because I have to return it with path.</li>
<li>I use <code>print(files)</code> to check if the function is working alright, but it shows a lot more files(the top 7 files) I never seen in my folder, why is this happening?</li>
</ol>
<p>When <code>print(files)</code></p>
<pre><code>/Library/Frameworks/Python.framework/Versions/3.5/bin/python3.5 

/Users/ziyuanhan/PycharmProjects/lab7/recursive_dir_traversal.py
.DS_Store
/Users/ziyuanhan/PycharmProjects/lab7/.DS_Store
.idea
/Users/ziyuanhan/PycharmProjects/lab7/.idea
lab7.iml
/Users/ziyuanhan/PycharmProjects/lab7/lab7.iml
misc.xml
/Users/ziyuanhan/PycharmProjects/lab7/misc.xml
modules.xml
/Users/ziyuanhan/PycharmProjects/lab7/modules.xml
workspace.xml
/Users/ziyuanhan/PycharmProjects/lab7/workspace.xml
km_mi_table.py
/Users/ziyuanhan/PycharmProjects/lab7/km_mi_table.py
km_to_miles.py
/Users/ziyuanhan/PycharmProjects/lab7/km_to_miles.py
wordfrequency.py
/Users/ziyuanhan/PycharmProjects/lab7/wordfrequency.py
('/Users/ziyuanhan/PycharmProjects/lab7/wordfrequency.py', {'non_py': 0, 'py': 0})
</code></pre>
<p>BTW we have to use recursive function, it is mandatory as the Prof requested.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to iterate directory recursively yourself. You can use <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> which yields directories, files for you:</p>
<p>You cannot change local variable / argument of caller. How about returns <code>total_python</code>, <code>total_non_python</code> and use in caller like below?</p>
<pre><code>def count_file(path):
    total_python, total_non_python = 0, 0
    for parent, directories, files in os.walk(path):
        for filename in files:
            if filename.lower().endswith('.py'):
                total_python += 1
            else:
                total_non_python += 1
    return total_python, total_non_python

def main():
    path = input('Enter a path to a file or directory: ')
    total_python, total_non_python = count_file(path)
    print(path, total_python, total_non_python)
</code></pre>
<p>Alternatively, <a href="https://docs.python.org/3/library/os.html#os.scandir" rel="nofollow noreferrer"><code>os.scandir</code></a> is also available since Python 3.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can pass a dictionary as an argument to the function and change the values of the items in the dictionary. </p>
<p>First intialize the dictionary:</p>
<pre><code>counters = {'py': 0, 'other': 0}
</code></pre>
<p>Then modify it inside the recursive function:</p>
<pre><code>counters['py'] += 1
</code></pre>
<p>This will work because dictionaries are <a href="https://stackoverflow.com/questions/8056130/immutable-vs-mutable-types">mutable</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This function takes a pathname and returns <code>(total_python, total_not_python)</code>. It calls itself on each entries in directories. This is meant to be as close to the given code as reasonable.</p>
<pre><code>def count_file(path):
    if os.path.isfile(path):
        if path.endswith('.py') :
            return 1, 0
        else:
            return 0, 1
    elif os.path.isdir(path):
        total_python, total_not_python = 0, 0
        for files in os.listdir(path):
            print(files)
            path = os.path.join(path, files)
            subtotal_python, subtotal_python = count_file(path)
            total_python += subtotal_python
            total_not_python += subtotal_not_python
        return total_python, total_not_python
</code></pre>
</div>
<span class="comment-copy">How does this function know when to stop?</span>
<span class="comment-copy">It stops when it has run through all the files and directories for the path I provided</span>
<span class="comment-copy">I don't quite understand what you mean by 'stop'?</span>
<span class="comment-copy">Thanks, os.walk does make the task easier but our prof force us to use recursive function</span>
<span class="comment-copy">@Byron, Do you mean this is homework?</span>
<span class="comment-copy">so the function has to have a base case and a recursive case</span>
<span class="comment-copy">Not quite, it's a pproject</span>
<span class="comment-copy">@Byron, Okay, then I will give you home hints instead of giving you direct code. (1) You need to call <code>count_file</code> recursively if the file is directory; current it ignore if the file is directory.  (2) <code>total_python += 1</code> does not affect caller's variable. In changes only in the caller. You'd better return the value and make it used outside the caller.</span>
<span class="comment-copy">Thanks! The dictionary counter works, but I don't know why the counter keeps giving me 0,0 if I input a path to a directory. Can you have a look please?</span>
<span class="comment-copy">Have a look at what? Where is your code?</span>
<span class="comment-copy">Hi sorry I forgot to update my question, it is in the question now, I changed some code according to your suggestion. There are multiple files in the input path to the directory, but the output is still (0,0)</span>
<span class="comment-copy">The first error is that <code>path = os.path.abspath(files)</code> assumes that <code>files</code> is in the current folder, not the folder you are scanning. I think you meant to use <code>path = os.path.join(path, files)</code>. Even if you do that it doesn't work, because you are reusing the variable <code>path</code>. You could use another variable <code>path2</code> on that line and the following 2 and it works well.</span>
<span class="comment-copy">You should never delete or edit parts of your question that already have an answer. You could add an <b>EDIT</b> at the bottom of the question and explain that you are adding that part to the question in reference to an answer or to a comment. Otherwise future readers will not understand why certain answers or comments were given</span>
<span class="comment-copy">Thanks! But I don't know why the counter keeps giving me 0,0 if I input a path to a directory.</span>
