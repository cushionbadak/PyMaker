<div class="post-text" itemprop="text">
<p>I am trying to test the following method:</p>
<pre><code>def my_method(self, request, context):
    context.set_details('Already exists')
    context.set_code(grpc.StatusCode.ALREADY_EXISTS)
</code></pre>
<p>To test it, I must pass in a request and a context (which is a <code>grpc.ServicerContext</code> object), like so:</p>
<pre><code>import grcp

def test_my_method(self):
    request = {"something": "something-else"}
    context = grpc.ServicerContext()

    my_method(request, context)

    # Assert something here
</code></pre>
<p>The problem is, I get the following error when I run my tests: </p>
<p><code>TypeError: Can't instantiate abstract class ServicerContext with abstract methods add_callback, cancel, invocation_metadata, is_active, peer, send_initial_metadata, set_code, set_details, set_trailing_metadata, time_remaining</code></p>
<p>How can I get a <code>grpc.ServicerContext</code> object? If I can't, how do I test the method?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>grpc.ServicerContext</code> is an abstract class defined with the <a href="https://docs.python.org/3/library/abc.html" rel="nofollow noreferrer"><code>abc</code> module</a>. In your test you need to write your own concrete subclass of it and pass an instance of that to the method you are testing.</p>
</div>
