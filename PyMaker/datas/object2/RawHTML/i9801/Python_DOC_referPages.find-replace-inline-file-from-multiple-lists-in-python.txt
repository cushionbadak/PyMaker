<div class="post-text" itemprop="text">
<p>I have three python lists:</p>
<ol>
<li>filePaths</li>
<li>textToFind</li>
<li>textToReplace</li>
</ol>
<p>The lists are always equal lengths and in the correct order.</p>
<p>I need to open each file in filePaths, find the line in textToFind, and replace the line with textToReplace.  I have all the code that populates the lists.  I am stuck on making the replacements.  I have tried:</p>
<pre><code> for line in fileinput.input(filePath[i], inplace=1):
     sys.stdout.write(line.replace(find[i], replace[i]))
</code></pre>
<p>How do I iterate over each file to make the text replacements on each line that matches find?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you need to use the indices of the items in a sequence while iterating over that sequence, use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>.</p>
<pre><code>for i, path in enumerate(filePath):
    for line in fileinput.input(path, inplace=1):
        sys.stdout.write(line.replace(find[i], replace[i]))
</code></pre>
<hr/>
<p>Another option would be to use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a>, which will give you one item from each sequence in order.</p>
<pre><code>for path, find_text, replace_text in zip(filePath, textToFind, textToReplace):
    for line in fileinput.input(path, inplace=1):
        sys.stdout.write(line.replace(find_text, replace_text)) 
</code></pre>
<p>Note that for Python 2.x <code>zip</code> will produce a new list that can be iterated - so if the sequences you are zipping are huge it will consume memory.  Python 3.x <code>zip</code> produces an iterator so it doesn't have that feature.</p>
<hr/>
<p>With a normal file object you could read the entire file <em>into</em> a variable and perform the string replacement on the whole file at once.</p>
<hr/>
</div>
<div class="post-text" itemprop="text">
<p>I might do something like this without more information</p>
<pre><code>for my_file in file_paths:
    with open(my_file, 'r') as cin, open(my_file, 'w') as cout:
        lines = cin.readlines() #store the file in mem so i can overwrite it.
        for line in lines:
            line = line.replace(find, replace) # change as needed
            cout.write(line)
</code></pre>
<p>Iterate over all the file paths, open the file up for reading and a separate one for writing. Store the files lines in a variable as in this code i will be overwriting the original file.  Do your replace, remember if there is nothing to replace python just leaves the line alone. Write the line back to file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can read file to some temporary variable, make changes, and then write it back:</p>
<pre><code>with open('file', 'r') as f:
    text = f.read()
with open('file', 'w') as f:
    f.write(text.replace('aaa', 'bbb'))
</code></pre>
</div>
<span class="comment-copy">You are only replacing one textToFind  in each filePath?  ---&gt;  Find <code>textToFind[0]</code> in <code>filePaths[0]</code> then replace with <code>textToReplace[0]</code> ; and  Find <code>textToFind[1]</code> in <code>filePaths[1]</code> then replace with <code>textToReplace[1]</code>; ,,,, ?</span>
<span class="comment-copy">Correct.  If a file has more than one textToReplace, the file is in the list x amount of times so the three lists are always in sync.</span>
<span class="comment-copy">Why did you choose to use <code>fileinput</code> for your solution?</span>
<span class="comment-copy">Say there are 4 items in each list, the filePath for item 1 and 2 is the same because there are two different lines that need to be replaced in that file.  When I use zip, it does the correct replacements in the first file but in the second file, it replaces the third item twice.</span>
<span class="comment-copy">@quietgrit, I don't know how that could happen and without all the details I cannot debug.  If you print <code>path, find_text, replace_text</code> in the outer loop it may give a clue.  I have never used <code>fileinput</code> and after looking over the docs I'm not sure we are using it as it was intended.</span>
<span class="comment-copy">I see now that it's doing that because the textToFind is exactly the same twice in the same file so its replacing both lines.  So I guess I need to expand the textToFind to make sure it's always unique.</span>
