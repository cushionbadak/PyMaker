<div class="post-text" itemprop="text">
<p>I'm trying to create a rank system for my gaming group, similar in nature to Supercell's Trophy System in their Clash of Clans and Clash Royale games for android/iOS systems.</p>
<p>I have the layout of the ranks all figured out, and we already have a point system in place that works ... I just need to now program in the actual ranks.</p>
<p>The ranks work very simply: The individual's point balance falls within specific values, and the rank corresponding to that value is the person's rank. I created a simple table to show what I mean ... here's an excerpt of what it looks like:</p>
<pre><code>Rank: Balance Range
Private: 0-500
Private I: 501-1000
Private II: 1001-1500
Private III: 1501-2500
Corporal: 2501-3000
...
</code></pre>
<p>So here's the simple rank system layout, it goes all the way up to Commander at 42,000 points. My question is this: How do I associate the Rank with the point value, without having to type out all the lines of code like this? </p>
<pre><code>0 &lt;= Private &lt;= 500
501 &lt;= PrivateI &lt;= 1000
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer">bisect</a> for this.</p>
<pre><code>from bisect import bisect
def get_rank(score):
    points = [500, 1000, 1500, 2500, 3000]
    ranks = ["Private", "Private I", "Private II", "Private III", "Corporal"]
    div = bisect(points, score)
    return ranks[div]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A slight improvement to Daniel Roseman's <code>bisect</code> solution to would be to use a single list of 2-tuples:</p>
<pre><code>from bisect import bisect_right

RANKS = [
    # max balance, rank
    (500, 'Private'),
    (1000, 'Private I'),
    (1500, 'Private II'),
    (2500, 'Private III'),
    (3000, 'Corporal'),
    # ...
    (42000, 'Commander')
]

def get_rank(balance):
    index = bisect_right(RANKS, (balance, ''))
    try:
        return RANKS[index][1]
    except IndexError:
        return RANKS[-1][1]
</code></pre>
<p>The advantages here are that it's easier to read at a glance, and less prone to mistakes when editing your code to introduce new ranks, tweak limits, etc.</p>
<p>It also returns the highest rank when supplied a points balance higher than any accounted for in <code>RANKS</code> (as specified in your comment), rather than raising an exception.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; for n in range(0,42001,500):
...     print("%5d  %s" % (n, get_rank(n)))
...     print("%5d  %s" % (n + 1, get_rank(n + 1)))
... 
    0  Private
    1  Private
  500  Private
  501  Private I
 1000  Private I
 1001  Private II
 1500  Private II
 1501  Private III
 2000  Private III
 2001  Private III
 2500  Private III
 2501  Corporal
 3000  Corporal
 # ...
 42000  Commander
 42001  Commander
</code></pre>
</div>
<span class="comment-copy">Wouldn't it be more useful to add this as an answer to the duplicate question you undid?</span>
<span class="comment-copy">Sorry, I didn't mean to do that; but now I can't find the dupe you used...</span>
<span class="comment-copy">You can find it in the list of linked questions in the sidebar to the right (above "Related"), or in <a href="http://stackoverflow.com/posts/40774655/revisions">this question's revisions page</a>.</span>
<span class="comment-copy">here's my next question: our rank system doesn't have a peak points balance; it tops out in rank at Commander, but Commander is actually set at <code>Commander &lt;= 42,000</code>. So does that effect the exception handler that you set in that last bit of code?</span>
<span class="comment-copy">@PhoenixDeFalco you can do whatever you like in the <code>except</code> clause; I've updated my answer to return the highest rank rather than raise an exception.</span>
<span class="comment-copy">i tried your code that you typed, and i get: <code>Traceback (most recent call last):   File "&lt;pyshell#4&gt;", line 2, in &lt;module&gt;     print("%5d %s" % (n, get_rank(n))) NameError: name 'get_rank' is not defined</code>  how do i fix this?</span>
<span class="comment-copy">You need to define the function! Paste the complete block starting 'from bisect import bisect_right ...` into your interpreter. Learning to read tracebacks is an important skill: <code>name 'get_rank' is not defined</code> means that you didn't define <code>get_rank</code>, so obviously it won't be able to run.</span>
<span class="comment-copy">sorry...thank you for the help, and I will try my best to figure it out...thanks again! Happy thanksgiving!</span>
