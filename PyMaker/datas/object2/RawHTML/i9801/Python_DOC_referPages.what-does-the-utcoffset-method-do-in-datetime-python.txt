<div class="post-text" itemprop="text">
<p>I know this questions answer is usually "go to <a href="https://docs.python.org/2/library/datetime.html?highlight=utcoffset#datetime.datetime.utcoffset" rel="nofollow noreferrer">Python's documentation</a>". I have read it and am still not a 100% sure what the uctcoffset method does.</p>
<p>I assume that it takes the timezone - utc and gives the difference but I need to be 100% sure.</p>
</div>
<div class="post-text" itemprop="text">
<p>yes, it is doing exactly what you think it does. <a href="https://docs.python.org/2/library/datetime.html?highlight=utcoffset#datetime.tzinfo.utcoffset" rel="nofollow noreferrer">Here</a> are the official docs.</p>
<p>Edit:
To be precise, it does not take a timezone, it takes 0 paramters. You  invoke it on a datimeobject, that object has a timezone associated to it, if it is timezone aware. In that case the method wil return a timedelta object, which represents the differenc between the timezone of the datetime object and utc</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>utcoffset</code> method of a <code>datetime</code> gives you the difference between the "wall clock" time of the datetime and the "wall clock" time of the same point in time in UTC, so, exactly as you expect (<code>dt - dt_as_utc</code>). The reason it is a function is that for many time zones (such as those with daylight savings), the offset changes over the course of a year. As an example:</p>
<pre><code>from datetime import datetime, timedelta
from dateutil import tz

NYC = tz.gettz('America/New_York')  # Note: ambiguous time support
                                    # requires version &gt;= 2.6.0, be aware.

dt1 = datetime(2015, 5, 21, 12, 0, tzinfo=NYC)    # EST
dt2 = datetime(2015, 12, 21, 12, 0, tzinfo=NYC)   # EDT

print(dt1.utcoffset() / timedelta(hours=1))
# -4
print(dt1.tzname())
# EDT


print(dt2.utcoffset() / timedelta(hours=1))
# -5
print(dt2.tzname())
# EST
</code></pre>
<p>As you can see, the same applies to the <code>tzname()</code> function.  For naive datetimes (those with no datetime), <code>utcoffset()</code> and <code>tzname()</code> should both return <code>None</code>.</p>
<p>As a note, I would generally advise <em>not</em> using this function to <em>calculate</em> a UTC timestamp, rather, you should use <code>astimezone()</code> with either <a href="https://dateutil.readthedocs.io/en/stable/tz.html#dateutil.tz.tzutc" rel="nofollow noreferrer"><code>dateutil.tz.tzutc</code></a> or <code>pytz.UTC</code> or, if you are using Python version &gt;= 3.2, you can use the <a href="https://docs.python.org/3/library/datetime.html#datetime.timezone" rel="nofollow noreferrer"><code>datetime.timezone.utc</code></a> object.</p>
</div>
<span class="comment-copy">Maybe also add the link to <a href="https://docs.python.org/2/library/datetime.html?highlight=utcoffset#datetime.tzinfo.utcoffset" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a>. This makes it very clear, at least to me.</span>
<span class="comment-copy">agreed, was just skipping that since the thread opener allready provided that link</span>
