<div class="post-text" itemprop="text">
<p>I have a python package which has several data files in a <code>data</code> folder which have to be read when the package is used; these are not python scripts. However when I install my package to test it with <code>python setup.py install --user</code> only an <code>~/.local/lib/python2.7/site-package/mypackage-1.0.0-py2.7.egg</code> is installed and so the code can't read the <code>data</code> directory.</p>
<p>I see other packages like <code>numpy</code> install with a <code>*.dist-info</code> and a <code>numpy</code> folder.</p>
<p>How do I make my package install like that?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>python setup.py sdist
pip install dist/*.tar.gz --user
</code></pre>
<p><code>sdist</code> creates a Source Archine as a tar.gz inside <code>dist/</code>. <code>pip</code> then installs it to the users site-packages directory.</p>
<p><a href="https://packaging.python.org/glossary/#term-source-distribution-or-sdist" rel="nofollow noreferrer">More info here.</a></p>
</div>
<span class="comment-copy">Isn't the whole idea of subfolders that they are not installed directly but need to be imported like <code>import mypackage.data.whatever</code>? Here is a question about this <a href="http://stackoverflow.com/questions/8953844/import-module-from-subfolder" title="import module from subfolder">stackoverflow.com/questions/8953844/â€¦</a> or you can refer to the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer"><code>module documentation</code></a></span>
<span class="comment-copy">That has nothing to do with 'How do I make my package install like that?' And what is the point of <code>MANIFEST.in</code> or a <code>include_package_data</code> in <code>setuptools.setup</code> if I'm meant to just use the method you described?</span>
<span class="comment-copy">As I understand it, <code>include_package_data</code> is meant to be used for non-python files like readme, docs, raw data, images etc. This is at least what I get from the <a href="https://python-packaging.readthedocs.io/en/latest/non-code-files.html" rel="nofollow noreferrer">python-packaging docs</a>.</span>
<span class="comment-copy">Exactly. When did I say I wanted to execute a script? I'll update my question for clarity.</span>
<span class="comment-copy">Ok, that was a missing piece of information, maybe it was my mistake. Anyways, so did you try to use a <code>MANIFEST.in</code>, specify your data files in it, like <code>include data/*.*</code> and finally <code>include_package_data=True</code> in setuptools? What do you actually mean by "and so the code can't read the data directory."? Why shouldn't it read the data directory? Doesn't that depend on the code and not on the installation?</span>
