<div class="post-text" itemprop="text">
<p>I'm having some problems with an exercise about strings in python.</p>
<p>I have 2 different lists:</p>
<pre><code>list1= "ABCDEFABCDEF"
</code></pre>
<p>and </p>
<pre><code>list2= "AZBYCXDWEVFABCDEF"
</code></pre>
<p>I need to compare those 2 lists according to their position so the 1 letter together, then the 2...using the min length (so here length of list1) and store the letters in a new variable according to if they are different or the same.</p>
<pre><code>identicals=[]
different=[]
</code></pre>
<p>I tried to code something and it seems to find the same ones, but doesn't work on the different ones since it copies them multiple times.</p>
<pre><code>for x in list1:
   for y in list2:
       if list1&gt;list2:
           if x==y:
               identicals.append(x)
           if x!=y :
               different.append(x)          
       if list2&gt;list1:
           if y==x:
               identicals.append(y)
           if y!=x:
               different.append(y)
</code></pre>
<p>I would appreciate some help. </p>
<p>Thanks.</p>
<p><strong>EDIT</strong>: Output result should be something like this:</p>
<pre><code>identicals=['A']
different=["Z","B","Y","C","X","D","W","E","V",F","A"]
</code></pre>
<p>The thing is that the letter A is only shown on identicals but not in different even if F!=A.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting unwanted duplicates because you have a nested pair of <code>for</code> loops, so each item in <code>list2</code> get tested for <em>every</em> item in <code>list1</code>. </p>
<p>The key idea is to iterate over the two strings in <em>parallel</em>. You can do that with the built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code> function</a>, which yields a tuple of the corresponding items from each iterable you feed it, stopping as soon as one of the iterables runs out of items.</p>
<p>From your example code, it looks like you want to take the items for the <code>different</code> list from the longer string. To do that efficiently, figure out which string is the longer <em>before</em> you start looping.</p>
<p>I've renamed your strings because it's confusing to give strings a name starting with "list".</p>
<pre><code>s1 = "ABCDEFABCDEF"
s2 = "AZBYCXDWEVFABCDEF"

identicals = [] 
different = []

small, large = (s1, s2) if len(s1) &lt;= len(s2) else (s2, s1)

for x, y in zip(small, large):
    if x == y:
        identicals.append(y)
    else:
        different.append(y)

print(identicals)
print(different)
</code></pre>
<p><strong>output</strong></p>
<pre><code>['A']
['Z', 'B', 'Y', 'C', 'X', 'D', 'W', 'E', 'V', 'F', 'A']
</code></pre>
<p>We can make the <code>for</code> loop more compact at the expense of readability. We put our destination lists into a tuple and then use the equality test to select which list in that tuple to append to. This works because <code>False</code> has a numeric value of 0, and <code>True</code> has a numeric value of 1.</p>
<pre><code>for x, y in zip(small, large):
    (different, identicals)[x == y].append(y)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is the inner loop. You are comparing each of the letters in list1 with all the letters of list2.</p>
<p>Instead you should have a single loop:</p>
<pre><code>identicals=[] 
different=[]
short_list = list1 if len(list1)&lt;= len(list2) else list2
for i in range(len(short_list):
    if list1[i] == list2[i]:
        identicals.append(list1[i])
    else:
        different.append(short_list[i])  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>a = "ABCDEFABCDEF"
b = "AZBYCXDWEVFABCDEF"


import numpy
A = numpy.array(list(a))
B = numpy.array(list(b))
common = A[:len(B)] [ (A[:len(B)] == B[:len(A)]) ]
different = A[:len(B)] [ - (A[:len(B)] == B[:len(A)]) ]

&gt;&gt;&gt; list(common)
['A']

&gt;&gt;&gt; list(different)
['B', 'C', 'D', 'E', 'F', 'A', 'B', 'C', 'D', 'E', 'F']
</code></pre>
</div>
<span class="comment-copy">What's your expected output for that sample data? They only match at the start, so <code>identicals</code> would get 'A' and all the other chars would go in to <code>different</code>. Is that what you want? BTW, it's confusing to call two strings <code>list1</code> and <code>list2</code>.</span>
<span class="comment-copy">Welcome to SO!  I see that you've got the answer you needed.  Rather than edit your question, please consider upvoting good answers and accepting the most helpful one.  See <a href="http://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a> for more advice.</span>
<span class="comment-copy">btw, don't name string variables with the name "listX"</span>
