<div class="post-text" itemprop="text">
<p>Now that SHA-1 will be banned next year by major browsers, I want to detect which sites are still using it. Is there a way to get this information using Python (such as <a href="https://docs.python.org/3/library/ssl.html" rel="nofollow noreferrer">Python's ssl library</a>)? I can use <code>openssl s_client</code> but I'd prefer a Pythonic solution (that is compatible with my async framework). </p>
<p>s_client example:</p>
<pre><code>$ openssl s_client -connect winkel.vpro.nl:443 &lt; /dev/null 2&gt;/dev/null | openssl x509 -text -in /dev/stdin | grep -i sha
Signature Algorithm: sha1WithRSAEncryption
</code></pre>
<p>I dug through the ssl docs but couldn't find hash algo references. And I don't know how to get this info from the ssl context. TIA!</p>
</div>
<div class="post-text" itemprop="text">
<p>The signature hash algorithm is not a property of the SSL connection but a property of the certificate. Once you have the certificate you can get the algorithm using <a href="http://www.pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.X509.get_signature_algorithm" rel="nofollow noreferrer">get_signature_algorithm</a> from OpenSSL.crypto:</p>
<pre><code>import ssl, socket, OpenSSL

# connect to server and get certificate as binary (DER)
sock = socket.socket()
sock.connect(('www.google.com',443))
sslsock = ssl.wrap_socket(sock)
cert_der = sslsock.getpeercert(True)

# load binary certificate and get signature hash algorithm
cert = OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_ASN1, cert_der)
print cert.get_signature_algorithm()
# -&gt; 'sha256WithRSAEncryption'
</code></pre>
<p>With Python3 one can also use <a href="https://cryptography.io/en/latest/x509/reference/#cryptography.x509.Certificate.signature_hash_algorithm" rel="nofollow noreferrer">signature_hash_algorithm</a> from the cryptography package:</p>
<pre><code>from cryptography import x509
from cryptography.hazmat.backends import default_backend

... get cert_der the same way as before ...
cert = x509.load_der_x509_certificate(cert_der, default_backend())
print(cert.signature_hash_algorithm.name)
#  -&gt; 'sha256'
</code></pre>
</div>
