<div class="post-text" itemprop="text">
<p>I want to get an after and before match in a string. </p>
<p>For example, using the following string:</p>
<pre><code>"Hello I am Jim!"
</code></pre>
<p>with the search string being: <code>"I am"</code>, the match before the search string should be: <code>"Hello"</code> and the match after should be: <code>"Jim!"</code>.</p>
<p>How can I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a></p>
<pre><code>&gt;&gt;&gt; before, after = "Hello I am Jim!".split("I am")
&gt;&gt;&gt; before
'Hello '
&gt;&gt;&gt; after
' Jim!'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow noreferrer"><code>str.partition</code></a> which does exactly this:</p>
<blockquote>
<p><code>S.rpartition(sep) -&gt; (head, sep, tail)</code></p>
<p>Search for the separator <code>sep</code> in <code>S</code>, starting at the end of <code>S</code>, and return the part before it, the separator itself, and the part after it. </p>
</blockquote>
<p>So, using your example string:</p>
<pre><code>before, search_str, after = "Hello I am Jim!".partition("I am ")
</code></pre>
<p>Now <code>before</code>, <code>search_str</code> and <code>after</code> are:</p>
<pre><code>&gt;&gt;&gt; print(before)
Hello 
&gt;&gt;&gt; print(search_str)
I am
&gt;&gt;&gt; print(after)
Jim!
</code></pre>
<p><code>str.partition</code> also grabs the <em>separator</em> for you as the middle element in the returned tuple. If you don't require that, <code>str.split(separator)</code> suffices.</p>
</div>
<div class="post-text" itemprop="text">
<p>Answer is a good way to appeal, but you can also use the python string operation find the most basic operation to get the same point.</p>
<pre><code>s = "Hello I am Jim!"
print s.find('I am')
for i in range(s.find('I am')):
    print s[i],
for i in range(s.find('I am')+len('I am'),len(s)):
    print s[i],
</code></pre>
<hr/>
<pre><code>python team.py 
6
H e l l o     J i m !
</code></pre>
<p>In a variety of ways to achieve, then choose the most simple approach</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the another way:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; str1 = "Hello I am Jim!"
&gt;&gt;&gt; before, after = re.split(" I am ", str1)
&gt;&gt;&gt; before
'Hello'
&gt;&gt;&gt; after
'Jim!'
</code></pre>
</div>
