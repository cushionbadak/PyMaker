<div class="post-text" itemprop="text">
<p>I'm importing a JSON file and using it as a template over which I modify some of the properties.</p>
<pre><code>with open('example.json') as data_file:
    j = json.load(data_file)
... # and within a loop:
    with open('output.json', 'w') as outfile:
        activejson = j # I would like this to reset or pull fresh from j
        ... # modify properties here
        json.dump(activejson, outfile, indent=4)
</code></pre>
<p><code>activejson</code> isn't pulling the template <code>j</code> fresh through each iteration of the loop. (I'm able to pull old, modified values from previous iterations in <code>activejson</code> in the "modify properties here" area.) My understanding is that <code>activejson</code> points to <code>j</code> rather than serving as a copy but <code>activejson = j.copy()</code> doesn't appear to do the trick either, nor does <code>activejson = {}</code>. What is the correct command/way to empty this variable and pull the template fresh after each iteration? What is the most efficient way to handle this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since JSON is usually structured as nested objects, you would need to use <code>copy.deepcopy</code>.</p>
<pre><code>activejson = copy.deepcopy(j)
</code></pre>
</div>
<span class="comment-copy"><code>j.copy()</code> only does a shallow copy, so you still get problems with nested objects. See <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow noreferrer">copy.deepcopy</a></span>
