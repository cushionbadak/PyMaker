<div class="post-text" itemprop="text">
<p>I am using a tkk.Combobox themed widget in Python 3.5.2.  I want an action to happen when a value is selected.</p>
<p>In the Python <a href="https://docs.python.org/3/library/tkinter.ttk.html#virtual-events" rel="nofollow noreferrer">docs</a>, it says:</p>
<blockquote>
<p>The combobox widgets generates a <code>&lt;&lt;ComboboxSelected&gt;&gt;</code> virtual event when the user selects an element from the list of values.</p>
</blockquote>
<p>Here on the Stack, there are a number of answers (<a href="https://stackoverflow.com/a/17757533/3380131">1</a>, <a href="https://stackoverflow.com/q/5235998/3380131">2</a>, etc) that show how to bind the event:</p>
<pre><code>cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", function)
</code></pre>
<p>However, I can't make it work.  Here's a very simple example demonstrating my non-functioning attempt:</p>
<pre><code>import tkinter as tk
from tkinter import ttk

tkwindow = tk.Tk()

cbox = ttk.Combobox(tkwindow, values=[1,2,3], state='readonly')
cbox.grid(column=0, row=0)

cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", print("Selected!"))

tkwindow.mainloop()
</code></pre>
<p>I get one instance of "Selected!" immediately when I run this code, even without clicking anything.  But nothing happens when I actually select something in the combobox.</p>
<p>I'm using IDLE in Windows 7, in case it makes a difference.</p>
<p>What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is not with the event <code>&lt;&lt;ComboboxSelected&gt;&gt;</code>, but the fact that <code>bind</code> function requires a callback as second argument. </p>
<p>When you do:</p>
<pre><code>cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", print("Selected!"))
</code></pre>
<p>you're basically assigning the result of the call to <code>print("Selected!")</code> as callback. </p>
<p>To solve your problem, you can either simply assign a function object to call whenever the event occurs (option 1, which is the advisable one) or use <em>lambda</em> functions (option 2).</p>
<p>Here's the option 1:</p>
<pre><code>import tkinter as tk
from tkinter import ttk

tkwindow = tk.Tk()

cbox = ttk.Combobox(tkwindow, values=[1,2,3], state='readonly')
cbox.grid(column=0, row=0)


def callback(eventObject):
    print(eventObject)

cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", callback)

tkwindow.mainloop()
</code></pre>
<p>Note the absence of <code>()</code> after <code>callback</code> in: <code>cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", callback)</code>.</p>
<p>Here's option 2:</p>
<pre><code>import tkinter as tk
from tkinter import ttk

tkwindow = tk.Tk()

cbox = ttk.Combobox(tkwindow, values=[1,2,3], state='readonly')
cbox.grid(column=0, row=0)

cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", lambda _ : print("Selected!"))

tkwindow.mainloop()
</code></pre>
<p>Check what are lambda functions and how to use them!</p>
<p>Check this article to know more about events and bindings: </p>
<blockquote>
<p><a href="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" rel="noreferrer">http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm</a></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Thanks you for the posts. I tried *args and it workes with bind and button as well:</p>
<pre><code>import tkinter as tk
from tkinter import ttk
tkwindow = tk.Tk()
cbox = ttk.Combobox(tkwindow, values=[1,2,3], state='readonly')

def callback(*args):
    print(eventObject)

cbox.bind("&lt;&lt;ComboboxSelected&gt;&gt;", callback)
btn = ttk.Button(tkwindow, text="Call Callback", command=callback);

tkwindow.mainloop()
</code></pre>
</div>
