<div class="post-text" itemprop="text">
<p>I am walking through a directory (dir1) using os.walk. When I'm in certain directories, I move files into a different directory (dir2) where a parser program is located. I am trying to run the parser program in dir2 without disrupting the walk through the other directories.</p>
<p>I am currently trying this:</p>
<pre><code>subprocess.call("python3 parser_program", cwd=parser_location)
</code></pre>
<p>at the appropriate place in my walk-through function. However, I am receiving the following error:</p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'python3 parserprogram.py' 
</code></pre>
<p>Ultimately, running parser program will be require a series of commands to call a Java program; I am just using a simplified python program as a stand-in while I troubleshoot. I think my problem is that I'm not calling arguments correctly from the subprocess.call function, but I can't make heads or tails of the documentation. Originally I was using os.chdir to move from one directory to the other and back, and that was working fine until it disrupted the os.walk through to the next directory. How do I run a series of commands to call a file in another directory without disrupting my os.walk through my original directory? thx</p>
</div>
<div class="post-text" itemprop="text">
<p>As the examples in the <a href="https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module" rel="nofollow noreferrer"><code>subprocess.run()</code> documentation</a> show, the arguments to <code>run()</code> or <code>call()</code> need to be in a list:</p>
<pre><code>subprocess.call(['python3', 'parser_program'], cwd=parser_location)
</code></pre>
<p>However, if you're using <code>shell=True</code>, i.e., passing it through the shell, you can pass the arguments as a single string like you're doing:</p>
<pre><code>subprocess.call("python3 parser_program", shell=True, cwd=parser_location)
</code></pre>
<p>Using <code>shell=True</code> isn't recommended unless you really need shell features, though.</p>
<p>Also, if you're using Python 3.5+, <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run()</code></a> is the better function to use for most calls.</p>
</div>
<span class="comment-copy">Thank you - I had also tried running the commands in a list, but misinterpreted how the list was to be organized and was receiving the same error as above. Your syntax addressed the issue. And thanks for the tip about subprocess.run(), i'll look into it</span>
