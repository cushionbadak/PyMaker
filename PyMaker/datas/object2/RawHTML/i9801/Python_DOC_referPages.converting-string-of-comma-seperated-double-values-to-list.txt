<div class="post-text" itemprop="text">
<p>An external method returns me the following string,
<code>[875.5599999999476,-223155.0180000058,766.8799999999985,1830.867499999997]\n</code>.</p>
<p>I have to convert it to a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like a task for <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>literal_eval</code>.</a>.</p>
<pre><code>from ast import literal_eval
data = literal_eval('[875.5599999999476,-223155.0180000058,766.8799999999985,1830.867499999997]')
</code></pre>
<p>This will give you the list <code>[875.5599999999476, -223155.0180000058, 766.8799999999985, 1830.867499999997]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Is it valid JSON? If so, you could use <code>json.loads()</code>. Otherwise:</p>
<pre><code>s = '[875.5599999999476,-223155.0180000058,766.8799999999985,1830.867499999997]'
lst = [float(item) for item in s[1:-1].split(',')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>probably a more elegant way of doing it but maybe something like:</p>
<pre><code>x.strip("[").strip("]").split(",")
</code></pre>
<p>EDIT:</p>
<p>As noted in the comments below, the above code will not convert the numbers in the string to floats. To do this, see below:</p>
<pre><code>[float(i) for i in x.strip("[").strip("]").split(",")]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>IS this what you want:</p>
<pre><code>l = [875.5599999999476,-223155.0180000058,766.8799999999985,1830.867499999997]
print (l)
</code></pre>
<p>Output:</p>
<pre><code>[875.5599999999476, -223155.0180000058, 766.8799999999985, 1830.867499999997]
</code></pre>
<p>or split each item in a list? </p>
<pre><code>l = [875.5599999999476,-223155.0180000058,766.8799999999985,1830.867499999997]
for x in l:
    print(x)
</code></pre>
<p>Output:</p>
<pre><code>875.5599999999476
-223155.0180000058
766.8799999999985
1830.867499999997
</code></pre>
</div>
<span class="comment-copy">It's a;ready a list</span>
<span class="comment-copy">Note that <code>literal_eval</code> will also accept a lot of other data types (though that may be okay).</span>
<span class="comment-copy">Yes it will, but it's not dangerous as <code>eval</code>.</span>
<span class="comment-copy">What about <code>x[1:-1].split(',')</code>?</span>
<span class="comment-copy">ah nice one! Should have thought of that!</span>
<span class="comment-copy">Will it also convert numbers in that string to the appropriate Python type?</span>
<span class="comment-copy">good point! I'll edit my answer</span>
