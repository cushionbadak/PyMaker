<div class="post-text" itemprop="text">
<p>I will like the function to return a comment if the parameter given to a not a list. If it's a list, I'll like to perform some operation.</p>
<p>below is the code:</p>
<pre><code>def manipulate_data(*num):
  if type(num) is not list:
    return "Only lists allowed"
  else:
    positive = 0
    for n in num:
        if n &gt;= 0:
            positive = positive + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By using the *nums argument you are packaging all the arguments into a list. The <a href="https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists" rel="nofollow noreferrer">official documentation</a> may be useful.</p>
<p><code>manipulate_data(1, 2, 3, 4, 5)</code> will result in <code>num = (1, 2, 3, 4, 5)</code> while <code>manipulate_data([1, 2, 3, 4, 5])</code>will result in <code>num = ([1, 2, 3, 4, 5],)</code> that is a tuple with only one element. Remove the * or if needing to process multiple lists as arguments use a loop to do the check on every tuple element.</p>
<pre><code>def manipulate_data(num):
  if type(num) is not list:
    return "Only lists allowed"
  else:
    positive = 0
    for n in num:
        if n &gt;= 0:
            positive += 1
    return positive
def manipulate_multiple(*nums):
  for num in nums:
    manipulate_data(num)
</code></pre>
<p>Remember this function is not returning anything yet</p>
</div>
<div class="post-text" itemprop="text">
<p>ok, make it more clean, except a, b ,all left positional parameter will be pass to c</p>
<pre><code>&gt;&gt;&gt; def func(a, b, *c):
...     print a
...     print b
...     print c
</code></pre>
<p>... </p>
<pre><code>&gt;&gt;&gt; func(1, 2, 3, 4, 5)

1
2
(3, 4, 5)
</code></pre>
</div>
<span class="comment-copy">And <i>what</i> is your problem?</span>
<span class="comment-copy">The type of <code>num</code> is always <code>tuple</code>. Remove the <code>*</code> and the code will work.</span>
<span class="comment-copy"><code>if not isinstance(num, list):</code></span>
<span class="comment-copy">@ettanany positive is already outside the for, no need to move it outside the if scope</span>
<span class="comment-copy">use isinstance() in python.</span>
<span class="comment-copy">your answer has pointed me to the right direction, however, what I want to do is perform an operation with the list supplied. for example, if the list supplied is    [1, 3, 2, 3], I want to be able to return the sum of the elements in the list, the example should return    9. The code is returning 1</span>
<span class="comment-copy">@Weirdsourcer the function was not returning everything as I mentioned, edited it to return the number of positives as it was counting them. For adding all the elements try <code>sum(num)</code></span>
<span class="comment-copy">The answer does not explain the user why this happens or where to find documentation on this. At least giving some keywords for googling should have been done</span>
