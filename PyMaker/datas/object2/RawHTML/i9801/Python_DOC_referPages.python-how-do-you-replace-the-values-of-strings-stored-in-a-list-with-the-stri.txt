<div class="post-text" itemprop="text">
<p>I have search stack overflow and googled a solution to this problem unfortunately I haven't been able to find a solution.</p>
<p>I would like to replace the values of strings stored in a list with the string values from another list.</p>
<p>For example I have two lists:</p>
<pre><code>list_a = ['file_x', 'file_x', 'file_x', 'file_x']
list_b = ['1', '2', '3', '4']
</code></pre>
<p>I want the result to return:</p>
<pre><code>list_c =['file_1', 'file_2', 'file_3', 'file_4']
</code></pre>
<p>I am new to python and I am struggling to do this, i have tried using a for loop and str.replace() but I do not know how to match up the key values for each array and replace the 'x' each element of list_a with the string value from the elements of list_b.</p>
<p>Any help with this would be greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to couple corresponding <code>a</code>s and <code>b</code>s.</p>
<pre><code>&gt;&gt;&gt; list(zip(list_a, list_b))
[('file_x', '1'), ('file_x', '2'), ('file_x', '3'), ('file_x', '4')]
</code></pre>
<p>We can use this <em><code>zip</code> object</em> easily in a for loop, unpacking the pairs into separate variables <code>a</code> and <code>b</code>, then doing the <code>a.replace('x', b)</code> and appending the resulting value to our result list:</p>
<pre><code>&gt;&gt;&gt; list_c = []
&gt;&gt;&gt; for a, b in zip(list_a, list_b):
...    list_c.append(a.replace('x', b))
...
&gt;&gt;&gt; list_c
['file_1', 'file_2', 'file_3', 'file_4']
</code></pre>
<p>This can also be written as a short list comprehension:</p>
<pre><code>&gt;&gt;&gt; [a.replace('x', b) for a, b in zip(list_a, list_b)]
['file_1', 'file_2', 'file_3', 'file_4']
</code></pre>
<p>And as Moinuddin points out, using a <em>format string</em> here is a better option if you defined the contents of <code>list_a</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are the one creating the format of <code>list_a</code>. Better way will be to use <code>{}</code> instead of <code>x</code> and format the string using <a href="https://docs.python.org/2/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format()</code></a>. For example:</p>
<pre><code>&gt;&gt;&gt; list_a = ['file_{}', 'file_{}', 'file_{}', 'file_{}']
&gt;&gt;&gt; list_b = ['1', '2', '3', '4']
&gt;&gt;&gt; [a.format(b) for a, b in zip(list_a, list_b)]
['file_1', 'file_2', 'file_3', 'file_4']
</code></pre>
</div>
<span class="comment-copy">Thanks! This really helped not only solve the issue but also teach me a new way of processing arrays.</span>
<span class="comment-copy">@Lewis909 they're lists :D</span>
<span class="comment-copy">Ahh thanks because Python doesn't have arrays, it has lists instead.</span>
<span class="comment-copy">I will take a look at str.format(). How is this different to str.replace()?</span>
<span class="comment-copy"><code>str.replace('x')</code> will replace all the occurence of <code>x</code> even if it was part of string. Where as <code>{}</code> will put your value in place of <code>{}</code>.</span>
<span class="comment-copy">@Lewis909 notice that your string can also contain literal <code>{</code> and <code>}</code> (you just need to double them in format string; <code>'The string can contain {{ and }}, and only this {} here will be substituted'.format(value)</code></span>
