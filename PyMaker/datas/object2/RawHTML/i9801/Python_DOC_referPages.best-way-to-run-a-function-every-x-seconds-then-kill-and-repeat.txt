<div class="post-text" itemprop="text">
<p>Say i want to do</p>
<pre><code>import subprocess
subprocess.call(["foo"])
</code></pre>
<p>My question is, how could i run subprocess.call(["foo"]) every x seconds, then kill the process, then repeat x seconds later?</p>
</div>
<div class="post-text" itemprop="text">
<p>To run a command every x seconds you can use a infinite loop and <code>time</code></p>
<pre><code>import os
import signal
import subprocess
import time

cmd = "python -m SimpleHTTPServer"

while True: 
    server = subprocess.Popen(cmd , stdout=subprocess.PIPE, shell=True,
                       preexec_fn=os.setsid)

    time.sleep(10)
    os.killpg(os.getpgid(server.pid), signal.SIGTERM)
    time.sleep(5)
</code></pre>
<p>If you don't know how to stop the process I recommend  you to check <a href="https://stackoverflow.com/a/4791612/2588566">https://stackoverflow.com/a/4791612/2588566</a></p>
<p>If you just want the process to run x time sleeping use a <code>for</code> loop instead.</p>
<p>I don't know what command you want to run. In this example you run a python server serving files in the current dir. It start the process, keep it running for 10 seconds, then kill the process and waits 5 seconds (So you can check it has been stopped). So you have a server running 10 seconds and a gap of 5 seconds between each execution.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow noreferrer"><code>subprocess.call</code></a> does not return until the process <code>foo</code> finishes.</p>
<blockquote>
<p>Run the command described by args. Wait for command to complete, then return the returncode attribute.</p>
</blockquote>
<p>Use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer"><code>Popen</code></a> instead.</p>
<pre><code>import subprocess
import time

while True:
    # The process will take 10 seconds to finish, but ...
    p = subprocess.Popen(["sleep", "10"])

    # ... we kill it after 5 seconds.
    time.sleep(5)
    p.kill()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a system of instructions can be done. Code does not need to set the cycle, starting from the main function, the implementation of the output and rest, and then restart the process</p>
<pre><code>import time
import sys 
import os

def restart_program():
    python = sys.executable
    os.execl(python, python, * sys.argv)

if __name__ == "__main__":
    print 'start...'
    print "sleep 3s..."
    time.sleep(3)
    restart_program()
</code></pre>
</div>
<span class="comment-copy">You can do an infinite while loop and sleep at the end of it</span>
<span class="comment-copy">Not an answer in python, but you could use <code>bash</code>'s  <code>timeout</code></span>
<span class="comment-copy">'then kill the proces' When do you want to kill the process? How long shall it run?</span>
<span class="comment-copy">Please fill the <code>Here goes your command</code> part. How would you start <i>and kill</i> a process?</span>
<span class="comment-copy">@LutzHorn I have added an example</span>
