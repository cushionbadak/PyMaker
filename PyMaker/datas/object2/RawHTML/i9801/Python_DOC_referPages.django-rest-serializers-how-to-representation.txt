<div class="post-text" itemprop="text">
<p>in django models  </p>
<pre><code>class TableFriend(models.Model):
     user = models.ForeignKey(User, related_name="main_user", default="newbie")
     friend = models.ForeignKey(User, related_name="friend_for_user", default="newbie")
     date = models.DateTimeField(auto_now=True)

     def __str__(self):
         return '%s %s %s'  % (self.user, self.friend, self.date)
</code></pre>
<p>django rest code</p>
<pre><code>class FriendSerializer(serializers.ModelSerializer):
    class Meta:
        model = TableFriend
        fields = ('user', 'friend', 'date')
</code></pre>
<p>output:</p>
<pre><code>[{"user":1,"friend":3,"date":"2016-11-10T15:12:33.189570Z"},{"user":1,"friend":2,"date":"2016-11-10T15:11:56.936230Z"}]
</code></pre>
<p>But I need the name of friends.
I want see <code>"friend":username</code>.
I want to see also <code>__str__</code> from django model.
How can I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, in your <code>__str__</code> in <code>TableFriend</code>, you would need to actually pass a string like:</p>
<pre><code>def __str__(self):
    return '%s %s %s' % (self.user.name, self.friend.name, self.date)
</code></pre>
<p>I'm assuming you have a <code>name</code> field in the <code>User</code> model.</p>
<p>To display the friend username, you would do:</p>
<pre><code>class FriendSerializer(serializers.ModelSerializer):
    friend_username = serializers.ReadOnlyField(source='friend.username')

    class Meta:
        model = TableFriend
        fields = ('user', 'friend', 'date')
</code></pre>
<p>Ref: <a href="http://www.django-rest-framework.org/api-guide/serializers/#specifying-fields-explicitly" rel="nofollow noreferrer">Specifying read only fields</a></p>
<p>The output will now be something like:</p>
<pre><code>[{"user":1,"friend":3,"friend_username":"&lt;the_username&gt;","date":"2016-11-10T15:12:33.189570Z"}...]
</code></pre>
<p>The <code>__str__</code> is a string representation of the object.
To see it, you would do something like: <code>TableFriend.objects.first()</code>.
This would give an output like <code>&lt;TableFriend: my_name friend_name 2016-11-21 23:54:57.060029&gt;</code></p>
<p>Ref: <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer">object.<strong>str</strong>(self)</a></p>
</div>
<span class="comment-copy">thanks, fields true for work&gt;&gt;  fields = ('user','friend','friend_username', 'date')</span>
