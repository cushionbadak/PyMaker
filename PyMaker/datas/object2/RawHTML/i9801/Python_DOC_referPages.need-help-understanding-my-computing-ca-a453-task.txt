<div class="post-text" itemprop="text">
<p>For my assessment in my computing class I have completed the first two tasks but need help understanding what the third one is asking me. it states "Develop a program that builds upon the technique from Task 2 to compress a text file with several sentences, including punctuation. The program should be able to compress a file into a list of words and list of positions to recreate the original file. It should also be able to take a compressed file and recreate the full text, including punctuation and capitalisation, of the original file".</p>
<p>some of this i understand but i don't really understand what it actually wants me to do. Also as it says i have to build on the technique from task two so the description and solution for task two is below(solution isn't finished because i don't have access to my finished one)</p>
<p>"Develop a program that identifies individual words in a sentence, stores these in a list and replaces each word in the original sentence with the position of that word in the list.
For example, the sentence ASK NOT WHAT YOUR COUNTRY CAN DO FOR YOU ASK WHAT YOU CAN DO FOR YOUR COUNTRY
contains the words ASK, NOT, WHAT, YOUR, COUNTRY, CAN, DO, FOR, YOU
The sentence can be recreated from the positions of these words in this list using the sequence
1,2,3,4,5,6,7,8,9,1,3,9,6,7,8,4,5
Save the list of words and the positions of these words in the sentence as separate files or as a single file."</p>
<p>And the code for task 2:</p>
<pre><code>restart = 'y'
while (True):
    sentence = input("What is your sentence?: ")
    sentence_split = sentence.split() 
    sentence2 = [0]
    print(sentence)
    for count, i in enumerate(sentence_split): 
        if sentence_split.count(i) &lt; 2:
            sentence2.append(max(sentence2) + 1)
        else:
            sentence2.append(sentence_split.index(i) +1)
    sentence2.remove(0)
    print(sentence2)
    restart = input("would you like restart the programme y/n?").lower()
    if (restart == "n"):
            print ("programme terminated")
            break
    elif (restart == "y"):
        pass
    else:
        print ("Please enter y or n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As your solution for the second task shows, you have already compressed on sentence with the technique described in the task.</p>
<p>You should now provide a program, that has two functionalities.</p>
<ol>
<li>read a file and use your technique to create a list of all containing words and a sequence of of all this words, writing this into a file (or stdout)</li>
<li>read the output created by the first function to produce the file before.</li>
</ol>
<p>Your program <strong>may</strong> have this command line interface - maybe this makes the task more clear for you.</p>
<p><code>python task3.py compress /path/to/inputtext.txt /path/to/outputfile</code></p>
<p><code>python task3.py extract /path/to/outputfile /path/to/inputtext.txt</code></p>
<p>This is a very simple way to compress a text file. On top you need to deal with pythons file api. nice task!</p>
</div>
<div class="post-text" itemprop="text">
<p>I am doing the same task as you for my GCSE and I was confused as well.</p>
<p>However , task 3 is asking you to alter your code so that when you split your sentence, is should be case sensitive now. eg hello and Hello must be treated as separate entities. so they must have different numbers when regenerating.</p>
<p>Also, your code must be compatible for multiple sentences rather than just one sentence.
Finally, you must split the punctuation marks into separate entities also.</p>
<p>use regex values to strip out punctuation.
remove .lower() to make your sentences case sensitive.
allow the code to take "." mark as an entity.</p>
<p>hope that helped.</p>
</div>
<span class="comment-copy">Thanks, this is quite helpful, but i have already done the first part of your answer where i have to read and write from a file but it isn't in the code as i can't access it. The part i don't is the reading the output file. I haven't got a clue where to even start</span>
<span class="comment-copy">You might start thinking on how to serialize and deserialize your data. JSON might be an option - in python there is also <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a></span>
