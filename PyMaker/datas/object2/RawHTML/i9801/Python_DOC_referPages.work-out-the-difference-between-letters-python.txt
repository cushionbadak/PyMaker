<div class="post-text" itemprop="text">
<p>been given an assignment and it's nearly finished. Just struggling with the last bit. The program is given a caesar cipher text, it then works out what the most frequent letter is and prints this back to the terminal. (Where I am up to.)
It will then suggest a key shift based on the most frequent letter and the user can then manually input this key shift, or their own key shift and the text is the deciphered.</p>
<p>I need the program to take the most frequent letter in the caesar text and compare this to the letter 'E' which is the most frequent letter in the english language and then work out how many key shifts it is away...</p>
<p>e.g. if the most common caesar text letter is n then n-e = 9.</p>
<p>Code so far:</p>
<pre><code>    import sys 

def decrypt(plain, key):
"returns a Caesar cipher text given plain text and a key"
   cipher = ""
for index in range(len(plain)):
 if plain[index].isalpha():    
   if plain[index].islower():
    cipher = cipher + chr((ord(plain[index]) -101- key+26) % 26+ 101)
   else:
    cipher = cipher + chr((ord(plain[index]) -65- key+26) % 26+ 65)
 else:
   cipher = cipher + plain[index]


  return cipher            #do nothing here 

  #main program 

key = int(sys.argv[4])
action = sys.argv[2]

try:
   in_file = open(sys.argv[1], "r")
except:
sys.exit("There was an error opening the file: {}".format(sys.argv[1]))

 try:
  out_file = open(sys.argv[3], "w")

except:
sys.exit("There was an error opening the file: {}".format(sys.argv[3]))

line = in_file.readline()

freq_dict = { }#letter : 0 for letter in LETTERS }



while len(line) != 0:
for letter in line.replace(" ",""):
    if letter in freq_dict:
        freq_dict[letter] += 1
    else:
        freq_dict[letter] = 1 
line = in_file.readline()


cipher = decrypt(line, key)
out_file.write(cipher)



in_file.close()
out_file.close()

for letter in freq_dict:
print(letter, "times", freq_dict[letter])
</code></pre>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>So it seems your <code>decrypt</code> function essentially generates an output that is the input text string shifted by the key right now.</p>
<p>From what I understand, what you then want to do is find the most frequently occurring letter in this string.</p>
<p>You can use the <code>collections</code> module to do this</p>
<pre><code>import collections
most_freq = collections.Counter(cipher).most_common(1)[0]
</code></pre>
<p>Now all you are left with is to find the shift between your <code>most_freq</code> letter and <code>e</code>.</p>
<p>Perhaps the simplest way is just to enumerate the alphabet in a list and then find the index differences between the two.</p>
<pre><code>alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

shift = alphabet.index(most_freq) - alphabet.index('e')
</code></pre>
<p>Remember this shift gets you from <code>e</code> to your <code>most_freq</code> letter so when you apply the shift to your text you need to apply the opposite ( <code>-1 * shift</code> ) to get the right result.</p>
<p>Hope this helps.</p>
</div>
<span class="comment-copy">What are you using for you base (zero-shift) reference?  A string, list, dictionary of all the letters? <a href="https://docs.python.org/3/library/string.html#string.ascii_letters" rel="nofollow noreferrer">string.ascii_letters</a> might be convenient - then you could use <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">str.find</a>.</span>
<span class="comment-copy">Hi, thanks for your reply. I am going to use E as my base reference and then I would like to work out how many letter shifts the most frequent caesar text letter is. Thanks again</span>
<span class="comment-copy">Are you solving this problem from edx course by MIT ?</span>
<span class="comment-copy">Hi, I don't know what that is John so no. thanks</span>
