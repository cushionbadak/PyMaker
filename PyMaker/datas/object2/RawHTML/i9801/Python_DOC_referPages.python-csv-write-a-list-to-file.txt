<div class="post-text" itemprop="text">
<p>I am writing a script to write a list with tab separated  as below to a csv file. But i am not getting proper output on this.</p>
<pre><code>out_l = ['host\tuptime\tnfsserver\tnfs status\n', 'node1\t2\tnfs_host\tok\n', 'node2\t100\tnfs_host\tna\n', 'node3\t59\tnfs_host\tok\n']
</code></pre>
<p>code:</p>
<pre><code>out_f = open('test.csv', 'w')
w = csv.writer(out_f)

for l in out_l:
    w.writerow(l)
out_f.close()
</code></pre>
<p>The output csv file reads as below.</p>
<pre><code>h,o,s,t,    ,s,s,h, , , , , ,s,u,d,o,_,h,o,s,t, , , , , , , ,n,f,s,"
"1,9,2,.,1,6,8,.,1,2,2,.,2,0,1, ,o,k,   ,n,f,s,h,o,s,t, ,o,k,"
"1,9,2,.,1,6,8,.,1,2,2,.,2,0,2, ,f,a,i,l,e,d,   ,n,a,   ,n,a,"
"1,9,2,.,1,6,8,.,1,2,2,.,2,0,3, ,o,k,   ,n,f,s,h,o,s,t, ,s,h,o,w,m,o,u,n,t, ,f,a,i,l,e,d,"
</code></pre>
<p>"</p>
<p>Also I have checked the csv.writer option like delimiter, dialect=excel, but no luck.
Can some one help to format the output?</p>
</div>
<div class="post-text" itemprop="text">
<p>With the formatting you have in <code>out_l</code>, you can just write it to a file:</p>
<pre><code>out_l = ['host\tuptime\tnfsserver\tnfs status\n', 'node1\t2\tnfs_host\tok\n', 'node2\t100\tnfs_host\tna\n', 'node3\t59\tnfs_host\tok\n']

with open('test.csv', 'w') as out_f:
    for l in out_l:
        out_f.write(l)
</code></pre>
<p>To properly use <code>csv</code>, <code>out_l</code> should just be lists of the columns and let the <code>csv</code> module do the formatting with tabs and newlines:</p>
<pre><code>import csv

out_l = [['host','uptime','nfsserver','nfs status'],
         ['node1','2','nfs_host','ok'],
         ['node2','100','nfs_host','na'],
         ['node3','59','nfs_host','ok']]

#with open('test.csv', 'wb') as out_f:           # Python 2
with open('test.csv', 'w', newline='') as out_f: # Python 3
    w = csv.writer(out_f, delimiter='\t')        # override for tab delimiter
    w.writerows(out_l)                           # writerows (plural) doesn't need for loop
</code></pre>
<p>Note that <code>with</code> will automatically close the file.</p>
<p>See the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv documentation</a> for the correct way to open a file for use with <code>csv.reader</code> or <code>csv.writer</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>csv.Writer.writerow</code> method takes an iterable and writes the values said iterable produces into the csv fields separated by the specified delimeter:</p>
<pre><code>out_f = open('test.csv', 'w')
w = csv.writer(out_f, delimiter='\t')  # set tab as delimiter

for l in out_l:  # l is string (iterable of chars!)
    w.writerow(l.split('\t'))  # split to get the correct tokens
out_f.close()
</code></pre>
<p>As the strings in your list already contain the necessary tabs, you could just write them directly to the file, no csv tools needed. If you have built/joined the strings in <code>out_l</code> manually, you can omit that step and just pass the original data structure to <code>writerow</code>.</p>
</div>
<div class="post-text" itemprop="text">
<h1>The <code>delimiter</code> parameter</h1>
<p>The <code>delimiter</code> parameter controls the delimiter in the <strong>output</strong>. It has nothing to do with the input <code>out_l</code>.</p>
<h1>Why your output is garbled</h1>
<p><code>csv.writer.writerow</code> iterates the input. In your case you are giving it a string (<code>host\tuptime\tnfsserver\tnfs status\n'</code>, etc.), therefore the function iterates the string, giving you a sequence of chars.</p>
<h1>How to produce the correct output</h1>
<p>Give it a list of fields instead of the full string by using <code>str.split()</code>. In your case the string ends with <code>\n</code>, so use <code>str.strip()</code> as well:</p>
<pre><code>import csv

out_l = ['host\tuptime\tnfsserver\tnfs status\n',
         'node1\t2\tnfs_host\tok\n',
         'node2\t100\tnfs_host\tna\n',
         'node3\t59\tnfs_host\tok\n']
out_f = open('test.csv', 'w')
w = csv.writer(out_f)
for l in out_l:
    w.writerow(l.strip().split('\t'))
out_f.close()
</code></pre>
<p>This should be what you want:</p>
<pre><code>host,uptime,nfsserver,nfs status
node1,2,nfs_host,ok
node2,100,nfs_host,na
node3,59,nfs_host,ok
</code></pre>
<p>Reference: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html</a></p>
</div>
<span class="comment-copy">If commas are a must, you can search and replace the tabs with commas in your list, then use shwobaseggl's method, setting the comma as the delimiter instead.</span>
<span class="comment-copy">It Worked. Thank you for the help.</span>
