<div class="post-text" itemprop="text">
<p>I have a an XML file that I have parse out the data with ElementTree.  However, I want to parse the data and set it equal to a variable so then I can output it to .csv file. </p>
<p>Here is a snipet of the XML file:</p>
<pre><code>&lt;Item ID="productID" TableID="itemvp"&gt;
&lt;ItemField TableFieldID="name" Value="totally awesome product"/&gt;
&lt;ItemField TableFieldID="code" Value="product code"/&gt;
&lt;ItemField TableFieldID="dimensions" Value="34&amp;quot;W x 65&amp;quot;D x 39&amp;quot;H"/&gt;
&lt;ItemField TableFieldID="caption" Value="description"/&gt;
&lt;ItemField TableFieldID="upc" Value="upc code"/&gt;
&lt;ItemField TableFieldID="sale-price" Value="2599.95"/&gt;
&lt;/Item&gt;
</code></pre>
<p>Here is what I have so far:</p>
<pre><code>root = tree.getroot()
for child in root.iter('ItemField'):
    print child.attrib
</code></pre>
<p>This prints out the data in the following format:</p>
<pre><code>{'TableFieldID': 'name', 'Value': 'totally awesome product'}
</code></pre>
<p>Which is basically a dictionary.  What I can't figure out is how to parse it so that I can set the value of "name" (totally awesome product) to a variable called "productName".  Any ideas on how to do this?  The end result is to export this data in .csv.</p>
</div>
<div class="post-text" itemprop="text">
<p>Inside your loop, check if the <code>TableFieldID</code> is <code>name</code>, then set the <code>productName</code> variable to the <code>Value</code>:</p>
<pre><code>for child in root.iter('ItemField'):
    if child.attrib['TableFieldID'] == 'name':
        productName = child.attrib['Value']
</code></pre>
</div>
<span class="comment-copy">if I wanted to set several different values to variables would I have to run them all through an if statement? like so:       root = tree.getroot()     for child in root.iter('ItemField'):         if child.attrib['TableFieldID'] == 'code':             productCode = child.attrib['Value']                  if child.attrib['TableFieldID'] == 'name':             productName = child.attrib['Value']'</span>
<span class="comment-copy">You can also use XPath syntax to locate a desired element: <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xpath-support" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Great! thanks for showing me that.</span>
