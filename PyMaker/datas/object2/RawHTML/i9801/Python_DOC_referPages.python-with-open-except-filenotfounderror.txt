<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/713794/catching-an-exception-while-using-a-python-with-statement">Catching an exception while using a Python 'with' statement</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>It seems strange to me that</p>
<pre><code>with open(file, 'r')
</code></pre>
<p>can report </p>
<pre><code>FileNotFoundError: [Errno 2]
</code></pre>
<p>but I can't catch that in some way and continue on.  Am I missing something here or is it really expected that you use isfile() or similar before a with open() ?</p>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">try/except</a> to handle exception</p>
<pre><code> try:
     with open( "a.txt" ) as f :
         print(f.readlines())
 except Exception:
     print('not found')
     #continue if file not found
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from __future__ import with_statement

try:
    with open(file) as f :
        print f.readlines()
except EnvironmentError: # parent of IOError, OSError *and* WindowsError where available
    print('oops')
</code></pre>
<p>If you want different handling for errors from the open call vs the working code you could do:</p>
<pre><code>try:
    f = open(file)
except IOError:
    print('error')
else:
    with f:
        print(f.readlines())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're getting a FileNotFound error, the problem is most likely that the file name or the path to the file is incorrect. If you're trying to read AND write to a file that doesn't exist yet, change the mode from <code>'r'</code> to <code>'w+'</code>. It may also help to write out the full path before the file, for Unix users as:</p>
<pre><code>'/Users/paths/file'
</code></pre>
<p>Or better yet, us os.path so that your path can be run on other operating systems.</p>
<pre><code>import os
with open(os.path.join('/', 'Users', 'paths', 'file'), 'w+)
</code></pre>
</div>
<span class="comment-copy">Unfortunately, this will catch any exception, not just File Not Found, and will disguise any program bugs that you may be unaware of. You can instead catch <code>FileNotFoundError</code> or <code>IOError</code>, depending on your version of Python.</span>
