<div class="post-text" itemprop="text">
<p>I have search high and low on he net for answers to this question. Perhaps it is simply a bit too specific, but here goes.</p>
<p>I am working through a crash course text on Python, and probably would be considered either an advanced beginner or a beginning intermediate practitioner at this point.</p>
<p>I am trying to use a try-catch block to display a message about a missing file, using an exception with the FileNotFoundError exception type, as follows:</p>
<pre><code>filename_1 = 'cats.txt'
filename_2 = 'dogs.txt'

    try:
        with open(filename_1) as file_obj:
        contents = file_obj.read()
        contents = contents.split('\n')
        print('\n\tContents of File \'cats.txt\':\n')

        for line in contents:
            print('\t', line)

        print('\n')


        with open(filename_2) as file_obj:
            contents = file_obj.read()
            contents = contents.split('\n')
            print('\n\tContents of File \'dogs.txt\':\n')

            for line in contents:
            print('\t', line)

            print('\n')
    except FileNotFoundError:
        print('\n\tSorry, \'', FileNotFoundError.__filename__, '\' not found.\n')
</code></pre>
<p>I tried using an attribute name of <strong>filename</strong>, which obviously does not exist. But I have been able to find no appropriate attributes from which to extract this vital data for the error. As there are two different filenames specified, it could be either of those files that are not present.</p>
<p>Does Python provide this kind of functionality in its built-in exceptions? It would seem that it should.</p>
<p>Any help is greatly appreciated. Thanks.</p>
<p>Sincerely,</p>
<p>Robert Hieger</p>
</div>
<div class="post-text" itemprop="text">
<p>You can find the <em>filename</em> from the exception instance (not from the class).</p>
<pre><code>try:
    # your code opening files, etc.
    # ...
except FileNotFoundError as not_found:
    print(not_found.filename)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your real problem is that you are duplicating code. Make a function so that you don't repeat yourself, and then you already know the filename:</p>
<pre><code>def inspect_file(filename):
    try:
        with open(filename) as file_obj:
            contents = file_obj.read()
            contents = contents.split('\n')
            print("\n\tContents of File '%s':\n" % filename)

            for line in contents:
                print('\t', line)

            print('\n')
    except FileNotFoundError:
        print("\n\tSorry, '%s' not found.\n" % filename)

inspect_file('cats.txt')
inspect_file('dogs.txt')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another approach would be to try and catch either error, using the else clause after the first try:</p>
<pre><code>filename_1 = 'cats.txt'
filename_2 = 'dogs.txt'

try:
    with open(filename_1) as file_obj:
        # do your thing

except FileNotFoundError:
    print('\n\tSorry, \'', filename_1, '\' not found.\n')

else:
    try:
        with open(filename_2) as file_obj:
            # do your thing

    except FileNotFoundError:
        print('\n\tSorry, \'', filename_2, '\' not found.\n')
</code></pre>
</div>
<span class="comment-copy">Your indentation is incorrect at 'try' and in the first 'with open'.</span>
<span class="comment-copy">Did you find documentation for the existence of <code>.filename</code>?</span>
<span class="comment-copy">Found it: <a href="https://docs.python.org/3/library/exceptions.html#OSError" rel="nofollow noreferrer">docs.python.org/3/library/exceptions.html#OSError</a></span>
<span class="comment-copy">I would usually do a <code>pdb.set_trace()</code> and then <code>dir(not_found)</code> to have a list of all attributes/methods for an object.</span>
