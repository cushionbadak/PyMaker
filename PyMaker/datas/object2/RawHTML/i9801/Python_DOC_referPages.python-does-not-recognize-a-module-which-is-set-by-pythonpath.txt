<div class="post-text" itemprop="text">
<p>I've searched for some time to find a solution to this problem but have come up dry. I'm hoping I can find some help here. As the title suggests, python is not recognizing a module that has been set in my <code>PYTHONPATH</code>.</p>
<p>I'm currently working on a project that has the following overall structure:</p>
<pre><code>base
├── util
│   └── logging_utility.py
└── project
    └── app
        ├── config.py
        └── runner.py
</code></pre>
<p>This is executed in python 3.5 via a virtual environment called <code>venv_1</code>. I use a Mac running El Capitan.</p>
<p>My <code>runner.py</code> script calls the <code>logging_utility</code> using the following import statement:</p>
<p><code>from util.logging_utility import method</code>.</p>
<p>When executing, I receive this error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ImportError: No module named 'util.logging_utility'
</code></pre>
<p>I am running this in the terminal from the <code>base</code> level of the directory. I'm using the following command to call the script:</p>
<pre><code>PYTHONPATH=$HOME/base VIRTUAL_ENV=$HOME/.virtualenvs/venv_1 PATH=$VIRTUAL_ENV/bin:$PATH $HOME/.virtualenvs/venv_1/bin/python -- project/app/runner.py
</code></pre>
<p>Now, I've tried to debug this by printing out my <code>env</code> as well as <code>sys.path</code>. In both cases, the <code>base</code> directory appears in the path. So why on earth am I receiving this error?</p>
<p>I've also tried to update the import statement to <code>from base.util.logging_utility import method</code> which gives me the following error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ImportError: No module named 'base'
</code></pre>
<p>Any idea why this is happening and how I can correct this?</p>
<p>Thanks!</p>
<p><strong>UPDATE</strong></p>
<p>Thanks to <a href="https://stackoverflow.com/users/7007605/billy">Billy</a> and <a href="https://stackoverflow.com/users/2063361/moinuddin-quadri">Moinuddin Quadri</a> whose suggestions solved the issue. For some reason I still needed to add the <code>__init__.py</code> files. Even though python 3.3+ supports implicit imports, looks like it was still needed. This solved the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might not be having the path to package in your <code>PYTHONPATH</code>. In order to add that, do:</p>
<pre><code> import sys
 sys.path.append('/absolute/path/to/base')
</code></pre>
<hr/>
<p>Since from Python 3.3, you do not need the <code>__init__.py</code>. </p>
<p>For the older version, the other possible reason is missing <code>__init__.py</code>. If you do not have a <code>__init__.py</code> file present in the directory, you can not import files of that directory.</p>
<p>As is mentioned in the <a href="https://docs.python.org/2/tutorial/modules.html#packages" rel="nofollow noreferrer">Packages Document</a>:</p>
<blockquote>
<p>The <code>__init__.py</code> files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as string, from unintentionally hiding valid modules that occur later on the module search path. In the simplest case, <code>__init__.py</code> can just be an empty file, but it can also execute initialization code for the package or set the <code>__all__</code> variable, described later.</p>
</blockquote>
</div>
<span class="comment-copy">How was Python installed? Through the Python desktop installer or Anaconda?</span>
<span class="comment-copy">Put an empty <code>__init__.py</code> file in your <code>util</code>, <code>project</code> and <code>app</code> directories to make them Python packages.</span>
<span class="comment-copy">@ÉbeIsaac it was installed using Homebrew.</span>
<span class="comment-copy">...although I don't think that will fully solve your problem, since in python 3.5 it should implicitly treat your <code>util</code> directory as a <code>namespace package</code>:  <a href="https://docs.python.org/3/reference/import.html?highlight=namespace%20package#namespace-packages" rel="nofollow noreferrer">docs.python.org/3/reference/…</a>...</span>
<span class="comment-copy">Now that would be a slight problem. You see, Homebrew and MacPorts have their own PYTHONPATH preset.</span>
<span class="comment-copy">I thought <code>__init__.py</code> is <a href="http://stackoverflow.com/a/37140173/4942372">no longer needed</a> in python 3.3+.</span>
<span class="comment-copy">Yes you are right. I was not knowing that. Thanks for information. Other possible reason is missing entry in <code>sys.path</code>. Try to append it into the path.</span>
<span class="comment-copy">you were correct. for some reason I still needed to add the <code>__init__.py</code> files. This solved the problem.</span>
