<div class="post-text" itemprop="text">
<p>So I'm trying to write a code that simulates a predator and prey situation where it starts off with a low population of predators and high population of prey. Over time the predator population grows while the prey population shrinks until the prey population is too little to sustain the predator population. The predator population dies off and then the prey population is able to repopulate. The simulation is supposed to stop whenever one of the two populations reach 0, in this case the predator population will and plot two populations over time of the simulation until it stopped. This is my code so far:</p>
<pre><code>import matplotlib.pyplot as plt

def simulate(initialPred, initialPrey, preyGrowth, predationRate, predShrink, predFedBirthRate):
    preyCounts = []
    predatorCounts = []
    predatorI = initialPred
    preyI = initialPrey
    predator = predatorI
    prey = preyI



    while predator &gt; 0 and prey &gt; 0:

            predator = predatorI * (1 - predShrink + predFedBirthRate * preyI)
            prey = preyI * (1 + preyGrowth - predationRate * predatorI)
            predatorCounts.append(predator)
            preyCounts.append(prey)
            predatorI = predator
            preyI = prey


    plt.plot(predatorCounts, 'r', preyCounts, 'b')
    plt.show()      

    return preyCounts, predatorCounts

simulate(50,1000,0.25,0.01,0.05,0.00002)
</code></pre>
<p>Its output is this 
:<a href="https://i.stack.imgur.com/SHaJO.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/SHaJO.png"/></a></p>
<p>But it's supposed to come out like this:
<a href="https://i.stack.imgur.com/AmIvs.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/AmIvs.png"/></a></p>
<p>Can someone help me please?</p>
<p>*Also aside from this whenever I put my plotting code outside of the function after the function line with values inside like this: </p>
<pre><code>simulate(50,1000,0.25,0.01,0.05,0.00002) 
plt.plot(predatorCounts, 'r', preyCounts, 'b')
plt.show() 
</code></pre>
<p>It doesn't plot the values from the function and says <code>predatorCounts</code> and <code>preyCounts</code> are undefined.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I initialize your plot data with the starting populations <strong><em>and</em></strong> use <code>int()</code> truncation for the populations, I get the plot you say you're supposed to see:</p>
<pre><code>import matplotlib.pyplot as plt

def simulate(initialPred, initialPrey, preyGrowth, predationRate, predShrink, predFedBirthRate):
    preyCounts = [initialPrey]
    predatorCounts = [initialPred]
    predator = initialPred
    prey = initialPrey

    while predator &gt; 0 and prey &gt; 0:
        predatorScaleFactor = 1.0 - predShrink + predFedBirthRate * prey
        preyScaleFactor = 1.0 + preyGrowth - predationRate * predator
        predator = int(predator * predatorScaleFactor)
        prey = int(prey * preyScaleFactor)
        predatorCounts.append(predator)
        preyCounts.append(prey)

    plt.plot(predatorCounts, 'r', preyCounts, 'b')
    plt.show()

    return preyCounts, predatorCounts

simulate(50, 1000, 0.25, 0.01, 0.05, 0.00002)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So you looked at your process/calcs and it seems correct but you look at your result and it's funny.  One thing you notice when you print the counts...</p>
<pre><code>print predatorI, preyI
</code></pre>
<p>is that there are fractions of predators and prey which, in the real world, doesn't make sense.  You are trying to simulate the real world. All your <em>rate</em> parameters are probably based on whole things, not fractional things.  So you decide that there can't be any fractional beings in your simulation and you only deal with whole beings (ints) after the population growth calculations ...
<a href="https://i.stack.imgur.com/mNOw0.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/mNOw0.png"/></a></p>
<hr/>
<p>Your function returns the count vectors.  If you want to move the plotting statements outside of the function you need to assign the function's return value(s) to a name and then use them for plotting.</p>
<pre><code>prey, predator, = simulate(50,1000,0.25,0.01,0.05,0.00002) 
plt.plot(predator, 'r', prey, 'b')
plt.show() 
</code></pre>
<p>Here are some things to read from the docs concerning names, scope, namespaces
<a href="https://docs.python.org/3/tutorial/classes.html#a-word-about-names-and-objects" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html#a-word-about-names-and-objects</a>
<a href="https://docs.python.org/3/reference/executionmodel.html#naming-and-binding" rel="nofollow noreferrer">https://docs.python.org/3/reference/executionmodel.html#naming-and-binding</a></p>
<p>You might need to read them periodically as you use the language more.</p>
</div>
<span class="comment-copy">I don't see code to update value of <code>prey</code> in while loop? Is that desired behavior? PS: I know nothing about <code>matplotlib</code></span>
<span class="comment-copy">You can put a print statement at the top of the while loop to see what is happening to <code>predatorI</code> and <code>preyI</code> - that might give you a clue.</span>
<span class="comment-copy">One problem is that your while condition isn't working.  Sometimes your while condition treats 0.4 prey as valid but I imagine four-tenths of a rabbit is pretty much dead.</span>
<span class="comment-copy">@MoinuddinQuadri its right under the equation for predator</span>
<span class="comment-copy">Another, related, problem, your calculations are being made on fractional things (floats) but in the real world there is no such thing as a 1.3 coyotes.,</span>
<span class="comment-copy">I just had 1 question how come you did <code>preyCounts = [initialPrey]</code> and <code>predatorCounts = [initialPred]</code></span>
<span class="comment-copy">Oh actually never mind I see why its there, thank you for your help though.</span>
<span class="comment-copy">So am I supposed to round the current predators and prey values right after their calculations to integers? Also of moving the plotting statements outside the function I thought I already returned the names of the variables to use for plotting.</span>
<span class="comment-copy">@Langfao, 1.6 tigers would round to two tigers, I'd still say that if you have  1.6 beings after a calc that you really only have 1.</span>
<span class="comment-copy">so would this be a problem with the criteria set by the while loop instead now?</span>
<span class="comment-copy">@Langfao I think the while condition problem is related to the fractional beast issue.</span>
