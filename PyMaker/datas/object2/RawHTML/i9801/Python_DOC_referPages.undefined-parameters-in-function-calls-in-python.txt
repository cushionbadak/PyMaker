<div class="post-text" itemprop="text">
<p>Whenever I program something in python with <code>Tkinter</code>, the code looks like this:</p>
<pre><code>    from Tkinter import *

    class GUI():

        def __init__(self, master):

            self.master = master # master is an instance of Tk
            self.master.title("") # set the name of the window

            self.frame = Frame(self.master, width=800, height=500, bg="#eeeeee")
            # 800, 500 and "#eeeeee" are examples of course
            self.frame.pack()

            self.canvas = Canvas(self.frame, width=800, height=500, bg="ffffff")
            self.canvas.place(x=0, y=0)
            #mostly there are some other widgets

        # here are obviously other methods

    def main():

        root = Tk()
        app = GUI(root) # root and app.master are synonyms now
        app.master.mainloop()

    if __name__ == '__main__':

        main()
</code></pre>
<p>My problem is, I don't really understand why <code>Frame(width=800, height=500)</code> or <code>place(x=0, y=0)</code> is working: I didn't define the parameters <code>height</code>, <code>width</code>, <code>x</code> and <code>y</code>. Looking at the code in the <code>Tkinter</code> - module, the functions expect a paramter called <code>*args</code> or <code>**kw</code>. I know how to use them (at least well enough to develop some small applications), but I don't know how to define a function which uses this parameters. I feel like I don't know really much about this part of python, though I can work with it.
<br/><br/>
So my Question is:
<br/>
how can I define a function, what is called with the following Syntax:</p>
<pre><code>functionName(parameterName1 = value, paramterName2 = value, ...)
</code></pre>
<p>I don't need to know how to make a function what accepts a varying amount of parameters (combined with my problem), but it would be fine too.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you are referring to are called <em>keyword arguments</em>. </p>
<p>Arguably one of the best ways to define a function with specific keyword arguments is to provide defaults. It's common for the default to be <code>None</code> if you don't have the need for any other default:</p>
<pre><code>def functionName(parameterName1=None, parameterName2=None):
    print("parameter one is: %s" % str(parameterName1))
    print("parameter two is: %s" % str(parameterName2))
</code></pre>
<p>You can then call this function like so:</p>
<pre><code>foo = functionName(parameterName1="hello", parameterName2="world")
</code></pre>
<p>You can also do what tkinter functions do, and accept <code>**kwargs</code> as a parameter. This gathers up all named arguments into a dictionary that you can then iterate over:</p>
<pre><code>def functionName(**kwargs):
    print("the arguments are:", kwargs)
</code></pre>
<p>Note: you don't have to use the name <code>kwargs</code> -- you can use any name you want (<code>**kw</code>, <code>**kwargs</code>, <code>**whatever</code>), but <code>kwargs</code> seems to be the most common. </p>
</div>
<span class="comment-copy">Any basic python tutorial shows you how to do this. Here is <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">Defining Functions</a> in the standard tutorial.</span>
<span class="comment-copy">Thanks, I already knew how to set a default value, I just didn't know that I can type the arguments name in the function call.</span>
