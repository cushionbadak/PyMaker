<div class="post-text" itemprop="text">
<p>Let's suppose I have the following code in python 3: </p>
<pre><code>print("Hello, world!")
</code></pre>
<p>This will definitely run without any issues, with the output being</p>
<pre><code>&gt;Hello, world!
</code></pre>
<p>If I change my code as follows: </p>
<pre><code>print("Hello, world!")
thisIsMyError
</code></pre>
<p>The program will print the following: </p>
<pre><code>&gt;Hello, world!
&gt;Traceback (most recent call last):
  File "main.py", line 2, in &lt;module&gt;
    thisIsMyError
NameError: name 'thisIsMyError' is not defined
</code></pre>
<p>Meaning that the first line of code is executed, and then the second line is not recognized when it tried to execute it. </p>
<p>However, if my code is this: </p>
<pre><code>print("Hello, world!")
print("What a great day!"
thisIsMyError
</code></pre>
<p>the output is this: </p>
<pre><code>&gt;File "main.py", line 3
    thisIsMyError
                ^
SyntaxError: invalid syntax
</code></pre>
<p>meaning that even though the first line was still valid, it did not run at all. </p>
<p>My question is: what is the difference in the way python is compiled between these errors that in one it is able to execute at least the first line of code successfully (Hello, world!) even though there is an error in subsequent lines but in the second error it won't execute the first line of code due to subsequent errors?</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason you're seeing different outputs with the two exceptions is because one is a <em><strong>run-time exception</strong></em> and the other is a <em><strong>parsing exception</strong></em>.</p>
<p>Before Python can run your script, it has to parse your code and translate it into Python bytecode. Python parses you're code by verifying it has valid syntax. If Python finds your script contains invalid syntax, it raises a <code>SyntaxError</code> and stops. The important point to note here is that <strong>no code has been run</strong>. As I stated, Python's parsing of a script occurs <strong>before</strong> it attempts to run the script. That's why in your second example, the first line is not run. Python's still in the stage of parsing your script.</p>
<p>In your first example, however, Python has already parsed you're code and verified it has valid syntax. Now Python attempts to execute your code. The Python interpreter will continue to run <em>until</em> it encounters an error, at which point it stops. The important point to note here is that Python is in the execution stage when it raises a <code>NameError</code>. As I said above, Python will execute code in a script as long as it can. That's why in your first example, the first statement is run, and then the Python interpreter stops.</p>
<p>Basically, <code>SyntaxError</code> and <code>NameError</code> are two different exception types. <code>SyntaxError's</code> are raised during Python's parsing stage, while <code>NameError</code>s are raised during Python's execution (a.k.a run-time) stage. The output the exceptions produce is different because the exceptions are raised during different stages and for different purposes.</p>
</div>
<div class="post-text" itemprop="text">
<p>You get a <code>SyntaxError</code> from your second example:</p>
<pre><code>print("Hello, world!")
print("What a great day!"
thisIsMyError
</code></pre>
<p>because there is <em>no closing bracket</em> for the <code>print</code> function call on the second line.</p>
<p>If you add the bracket you will get a <code>NameError</code>.</p>
<p>As others have pointed out, you get the <code>SyntaxError</code> at parse time because Python cannot parse the invalid code.  The <code>NameError</code> occurs at run time when the code has been parsed, but contains an undefined variable name.</p>
</div>
<span class="comment-copy">One is a runtime error the other is a parsing error.</span>
<span class="comment-copy">Not every error is a <i>syntax</i> error.</span>
<span class="comment-copy">Too many <i>important point to note here</i> :p. I have quickie, why doesn't the parsing error occurs in the first example?</span>
<span class="comment-copy">Because there's no parsing error @DirtyBit. <code>SyntaxError</code>s are raised when there is a problem with a <i>syntax</i> of a script. There is a problem with the <i>semantics</i> of the first example, but that's not the job of the parser to figure that out.</span>
