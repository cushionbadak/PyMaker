<div class="post-text" itemprop="text">
<p>I am trying to use Python 3.7 + Selenium + Geckodriver + Firefox v65.0 for scrapping.
New window is opening, but Firefox does not sent correct respond about session to Python and crashes after 30 seconds with an error: </p>
<pre><code>WebDriverException: Message: newSession
</code></pre>
<p>In case if I downgrade Firefox to version 60.0.2 - all works correctly with all versions Geckodriver v0.22, 0.23 and 0.24.</p>
<p>Firefox version 63.0, 65.0 and 66beta does not work, even if I try different geckodrivers from 0.22 to 0.24.</p>
<p><strong>System</strong>: Windowns 7 x64+ Firefox 65.0 64bit, newest selenium, geckodriver v0.24.0.</p>
<p>My code:</p>
<pre><code>from selenium import webdriver 
from selenium.common.exceptions import NoSuchElementException

with webdriver.Firefox() as driver:
    driver.get("http://google.com")
</code></pre>
<p>Error description:</p>
<pre><code>WebDriverException                        Traceback (most recent call last)
&lt;ipython-input-10-5240f957d3b7&gt; in &lt;module&gt;
----&gt; 1 with webdriver.Firefox() as driver:
      2     driver.get("http://google.com")

C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\firefox\webdriver.py in __init__(self, firefox_profile, firefox_binary, timeout, capabilities, proxy, executable_path, options, service_log_path, firefox_options, service_args, desired_capabilities, log_path, keep_alive)
    172                 command_executor=executor,
    173                 desired_capabilities=capabilities,
--&gt; 174                 keep_alive=True)
    175 
    176         # Selenium remote

C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector, options)
    155             warnings.warn("Please use FirefoxOptions to set browser profile",
    156                           DeprecationWarning, stacklevel=2)
--&gt; 157         self.start_session(capabilities, browser_profile)
    158         self._switch_to = SwitchTo(self)
    159         self._mobile = Mobile(self)

C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py in start_session(self, capabilities, browser_profile)
    250         parameters = {"capabilities": w3c_caps,
    251                       "desiredCapabilities": capabilities}
--&gt; 252         response = self.execute(Command.NEW_SESSION, parameters)
    253         if 'sessionId' not in response:
    254             response = response['value']

C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py in execute(self, driver_command, params)
    319         response = self.command_executor.execute(driver_command, params)
    320         if response:
--&gt; 321             self.error_handler.check_response(response)
    322             response['value'] = self._unwrap_value(
    323                 response.get('value', None))

C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py in check_response(self, response)
    240                 alert_text = value['alert'].get('text')
    241             raise exception_class(message, screen, stacktrace, alert_text)
--&gt; 242         raise exception_class(message, screen, stacktrace)
    243 
    244     def _value_or_default(self, obj, key, default):

WebDriverException: Message: newSession
</code></pre>
<p><strong>Queston:</strong>
How it is possible to make Firefox 65 work with Selenium?
Maybe in newer versions of Firefox (61.0+) I should specify some options during connection?</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure where things are going wrong but there seems to be a mixup with multiple binary versions. However I am using the following configuration:</p>
<ul>
<li><p>Python: 3.6.1</p>
<pre><code>C:\Users\user_name&gt;python
Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt;
</code></pre></li>
<li><p>Selenium: 3.141.0</p>
<pre><code>C:\Users\user_name&gt;pip show -V selenium
Name: selenium
Version: 3.141.0
Summary: Python bindings for Selenium
Home-page: https://github.com/SeleniumHQ/selenium/
Author: UNKNOWN
Author-email: UNKNOWN
License: Apache 2.0
Location: c:\python\lib\site-packages
Requires: urllib3
Required-by:
</code></pre></li>
<li><p>GeckoDriver: 0.24.0</p>
<pre><code>C:\Utility\BrowserDrivers&gt;geckodriver.exe -V
geckodriver 0.24.0 ( 2019-01-28)

The source code of this program is available from
testing/geckodriver in https://hg.mozilla.org/mozilla-central.

This program is subject to the terms of the Mozilla Public License 2.0.
You can obtain a copy of the license at https://mozilla.org/MPL/2.0/.
</code></pre></li>
<li><p>Firefox: Mozilla Firefox 65.0</p>
<pre><code>C:\Program Files\Mozilla Firefox&gt;firefox -v |more
Mozilla Firefox 65.0
</code></pre></li>
</ul>
<p>I have taken your own code and executed it adding the <em>argument</em> <strong><code>executable_path</code></strong> as follows:</p>
<ul>
<li><p>Code Block:</p>
<pre><code>from selenium import webdriver

with webdriver.Firefox(executable_path=r'C:\Utility\BrowserDrivers\geckodriver.exe') as driver:
    driver.get("http://google.com")
    print("Page Title is : %s" %driver.title)
    driver.quit()
</code></pre></li>
<li><p>Console Output:</p>
<pre><code>Page Title is : Google
</code></pre></li>
</ul>
<hr/>
<h2>As a thumb rule always follow the configuration matrix from the <a href="https://firefox-source-docs.mozilla.org/testing/geckodriver/geckodriver/Support.html" rel="nofollow noreferrer"><em>GeckoDriver</em>, <em>Selenium</em> and <em>Firefox Browser</em> compatibility chart</a></h2>
<p><img alt="supported_platforms_geckodriver_24" src="https://i.stack.imgur.com/vRK7K.png"/></p>
</div>
<span class="comment-copy">You are right. Putting the path to geckodriver as here: "webdriver.Firefox(executable_path=r'C:\Utility\BrowserDrivers\geckodriver.exe')" solves the problem.  Thank you!</span>
