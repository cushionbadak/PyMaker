<div class="post-text" itemprop="text">
<p>I am trying to type into a field using a wildcard. I have 5 pages which all collect the same information but the fields are incremented 1 through 5. My idea was to find the element by grabbing the common name such as "first_name" or "last_name" but I keep getting the "element not found" error in my attempts. Below is what the input looks like.    </p>
<pre><code>&lt;input class="a-field" id="textfield_123" type="text" name="person_1_first_name" value=""&gt;
</code></pre>
<p>I have tried the following but it returns "unable to locate element".</p>
<pre><code>driver.find_element_by_name('//input[contains(@name, "middle_Name")]').clear()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def wildcard = “string”

driver.find_element_by_name(f”//input[contains(@name, ‘{wildcard}’]”).clear()
</code></pre>
<p>I have no clue where they got this from but having the “f” before the first quote in the xpath makes it accept variables . Let me know if that helps</p>
</div>
<span class="comment-copy">If you know what the string will be, why use a wildcard? Why not <code>"the_part_you_know{}".format(number)</code>?</span>
<span class="comment-copy">@reedinator I would like to write using a wildcard so I can run the same code on each page instead of re-writing the procedure five times.</span>
<span class="comment-copy">Isn't the purpose of a function to avoid rewriting the procedure n times??</span>
<span class="comment-copy">xpath <code>//input[contains(@name,'middle_name')]</code> looks good. But what I predict is there might be some frames/windows in your application. Which is causing issue to identify the element. Hope you waited enough time to load the page completely before checking the element.</span>
<span class="comment-copy">@supputri Using <code>driver.find_element_by_name('person_1_first_name')</code> works so it's not a rendering issue.</span>
