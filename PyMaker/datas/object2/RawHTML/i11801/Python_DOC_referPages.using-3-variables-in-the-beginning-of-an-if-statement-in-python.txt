<div class="post-text" itemprop="text">
<p>I have a web page that displays all of the accounts. Underneath it, I have the option where they can have the table highlight certain rows depending on the Balance column. My question is if I can create an <code>if</code> statement where the first line contains only variables (including the greater than, equal to, etc option).
My original set up is that they would select from a drop down menu if they want <code>&gt;</code>, <code>&gt;=</code>, <code>=</code>, <code>&lt;=</code>, or <code>&lt;</code> and then the second part is they would put in the amount. I am guessing the <code>if</code> statement doesn't like that I have an option for them to select the operator.</p>
<p>Here is the code for the form part of my web page:</p>
<pre><code>#form
print("&lt;form action='http://localhost:8000/cgi-bin/Bank_ViewAll.py'&gt;")
print("&lt;center&gt;Highlight rows based on balance amounts!&lt;/center&gt;")
print("&lt;BR&gt;&lt;BR&gt;")
print("&lt;center&gt;Balance:&amp;nbsp;")
print("&lt;select name='option' style=background:#eef9a0&gt; &amp;nbsp; $")
print("&lt;option value='""' style=background:#eef9a0&gt;Choose an  Option&lt;/option&gt;")
print("&lt;option value='&gt;' style=background:purple&gt;Greater Than (&gt;)&lt;/option&gt;")
print("&lt;option value='&gt;=' style=background:blue&gt;Greater Than or Equal To (&gt;=)&lt;/option&gt;")
print("&lt;option value='=' style=background:yellow&gt;Equal To (=)&lt;/option&gt;")
print("&lt;option value='&lt;' style=background:orange&gt;Less Than (&lt;)&lt;/option&gt;")
print("&lt;option value='&lt;=' style=background:red&gt;Less Than or Equal To (&lt;=)&lt;/option&gt;")
print("&lt;/select&gt;")
print("&lt;input type='text' size='15' name='bal' style=background-color:#eef9a0&gt;")
print("&lt;br&gt;&lt;BR&gt;")
print("&lt;center&gt;")
print("&lt;input type='submit' class='buttonStyle' value='Submit'&gt;&amp;nbsp;&amp;nbsp;")
print("&lt;input type='reset' class='buttonStyle' value='Clear fields'&gt;")
print("&lt;/center&gt;")
print("&lt;/form&gt;")
#end form
</code></pre>
<p>And here is the code for my function:</p>
<pre><code>import cgi, cgitb, sqlite3
cgitb.enable()
sqlite_file="C:\\Users\\U49228\\Desktop\\Class exercises\\Banking.sqlite"
connect=sqlite3.connect(sqlite_file)
cursor=connect.cursor()

form=cgi.FieldStorage()
bal=int(form.getvalue('bal'))
opt=form.getvalue('option')

print("Content-type:text/html\r\n\r")
print()

print("&lt;html&gt;")
#Header
print("&lt;head&gt;")
print("&lt;title&gt;View Accounts Functions&lt;/title&gt;")
print("&lt;/head&gt;")
#body
print("&lt;body bgcolor=#d4f4b0&gt;")
#table
print("&lt;center&gt;")
print("&lt;table border=2&gt;")
print("&lt;th&gt;Acct_No&lt;/th&gt;")
print("&lt;th&gt;Name&lt;/th&gt;")
print("&lt;th&gt;Balance&lt;/th&gt;")
def high_bal():
    cursor.execute("Select * from Banking_Accounts")
    all_rows=cursor.fetchall()
    for row in all_rows:
        accno=row[0]
        cname=row[1]
        amt=int(row[2])
        if amt opt bal:
            print("&lt;tr bgcolor='cornsilk'&gt;")
        else:
            print("&lt;tr&gt;")
        print("&lt;td&gt;"+str(accno)+"&lt;/td&gt;")
        print("&lt;td&gt;"+cname+"&lt;/td&gt;")
        print("&lt;td&gt;"+str(amt)+"&lt;/td&gt;")
        print("&lt;/tr&gt;")
    print("&lt;/table&gt;")
    print("&lt;/center&gt;")
    #end table
    print("&lt;br&gt;&lt;BR&gt;")
    print("&lt;center&gt;")
    print("&lt;a href='http://localhost:8000/cgi-bin/Bank_Menu.py' style=color:black&gt;Return to Main Menu&lt;/a&gt;")
    print("&lt;/center&gt;")
    print("&lt;/body&gt;")
    print("&lt;/html&gt;")
</code></pre>
<p>I planned on importing my function page. I have tried adding the variables inside the function (<code>def high_bal(opt,bal)</code>) as well as trying <code>onClick</code> on the submit button and <code>onSubmit</code> on the form. I've also tried just making the form redirect to the function page and removing the function name so it is redirecting to a page that will go ahead and do the function without it being called.</p>
<p>Screen shot of my web page design:</p>
<p><a href="https://i.stack.imgur.com/vDUEL.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/vDUEL.png"/></a>
Thank you for your time and help!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/operator.html" rel="nofollow"><code>operator</code> module</a>:</p>
<pre><code>from operator import gt, ge, eq, le, lt

ops = {'&gt;': gt, '&gt;=':  ge, '=': eq, '&lt;=': le, '&lt;': lt}
</code></pre>
<p>Now you can do:</p>
<pre><code>if ops[opt](amt, bal):
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; opt = '&gt;'
&gt;&gt;&gt; ops[opt](3, 1)
True
&gt;&gt;&gt; ops[opt](3, 10)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if amt opt bal:
</code></pre>
<p>is not a valid python syntax, you can either create a functions for each of the operators like for example</p>
<pre><code>operators = {
  '=': lambda x, y : x == y,
  '&lt;': lambda x, y : x &lt; y,
  '&gt;': lambda x, y : x &gt; y,
}

if operators[opt](amt, bal):
</code></pre>
<p>the other way around (dangerous) is to evaluate the expression:</p>
<pre><code>if eval("amt %s bal" % opt):
</code></pre>
</div>
<span class="comment-copy">Spectacular! This worked for me! Thank you so much!</span>
