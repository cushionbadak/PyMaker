<div class="post-text" itemprop="text">
<p>I have a dataset with two Boolean arrays. </p>
<p>The first boolean array indicates which data points have an error attached to them and is used to specify whether or not to turn on the error in an MCMC routine. The second array indicates whether or not each data point has a measured length. </p>
<p>How can I index the <code>Boolean_error</code> array by the <code>Has_length</code> array, so that I will have a list comprised of objects with <code>Has_length == True</code> with either <code>Boolean_error == True</code> or <code>Boolean_error == False</code>?</p>
<p>Here's an example of what I'm trying to do:</p>
<pre><code>Boolean_error = [False True False True True False True False False False False False]
Has_length = [True True True True False True True True True True True False]

print Boolean_error[Has_length]

&gt;&gt;&gt; [False True False True False True False False False False]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here you go. That does exactly what you need.</p>
<pre><code>errors_with_length = [b for b, l in zip(Boolean_error, Has_length) if l]
</code></pre>
<p>The <a href="https://docs.python.org/3.5/library/functions.html#zip" rel="nofollow"><code>zip()</code></a> function takes 1 value from each iterable every time, and the list comprehension filters out the false <code>Has_length</code>, and takes the <code>Boolean_error</code> for those that are <code>True</code>.</p>
<hr/>
<p>Another, more efficient approach would be to use <a href="https://docs.python.org/3/library/itertools.html#itertools.compress" rel="nofollow"><code>itertools.compress()</code></a> like so:</p>
<pre><code>&gt;&gt;&gt; list(itertools.compress(Boolean_error, Has_length))
[False, True, False, True, False, True, False, False, False, False]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could just write a function to do this.</p>
<pre><code>def return_list_with_only_known_length(error, length):
    output = []
    for i, b in enumerate(length):
        if b:
            output.append(error[i])
    return output
</code></pre>
</div>
<span class="comment-copy">What is exactly do you need ? i dont understand</span>
<span class="comment-copy">Are you missing the commas?</span>
<span class="comment-copy">note that python has <code>list</code>s and not <code>array</code>s (well, it does have arrays, but they're uncommon). Also, this is not valid Python</span>
<span class="comment-copy">You'll want to use numpy arrays; they have this behaviour.</span>
<span class="comment-copy">Thank you for the edit, Bharel! I'm a python student, so I'm still learning how to properly phrase things.</span>
<span class="comment-copy">This works perfectly for what I need. Thank you!</span>
<span class="comment-copy">Long and complicated mate. Edited your answer so it will be a bit more tidy but there's still an easier answer.</span>
