<div class="post-text" itemprop="text">
<p>I am trying to simplify this code that calculates total weight lost and average weight lost per month:</p>
<pre><code>months = input("How many months have you been trying to lose weight?: ")

def weeks():
    week1 = input("How many lbs did you lose in your first week?: ")
    week2 = input("How many lbs did you lose in your second week?: ")
    week3 = input("How many lbs did you lose in your third week?: ")
    total_weight_lost = (week1)+(week2)+(week3)
    return total_weight_lost,
</code></pre>
<p>Can I do this using a dictionary or list? Something like this:</p>
<pre><code>def weeks():
    d = {"week1": 0, "week2": 0, "week3": 0}
    for k in d:
        total_weight_lost = input(" How much weight did you lose in", d, "?:")
    return total_weight_lost,
</code></pre>
<p>I know this is completely wrong but I am thinking there might be some way to do something like this. So that I can iterate through the Keys in the dictionary and get the user to provide the value without having to write the same line of code for 'week1' 'week2' and 'week3'. But not only that I want to repeat the function for every month the user says they were trying to lose weight and then calculate the totals.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need a dictionary if you're not using the values.  In this case, you could just use a tuple or list like so:</p>
<pre><code>def weeks():
    d = ["week1", "week2", "week3"]
    total_weight_lost = 0
    for k in d:
        total_weight_lost += int(input(" How much weight did you lose in", d, "?:"))
    return total_weight_lost,
</code></pre>
<p>Even simpler might be something like this:</p>
<pre><code>def weeks():
    total_weight_lost = 0
    for week in xrange(1, 4):
        total_weight_lost += int(input("How much weight did you lose in week {}?".format(week)))
    return total_weight_lost
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Considering that you want to ask about three weeks, then you can simply create a loop that will ask the user that many times. With a slight modification to your string, you can make this very simple without even needing a dictionary, by doing something like this: </p>
<pre><code>def weeks():
    total_weight_lost = 0
    for i in range(1, 4):
        total_weight_lost += int(input("How many lbs did you lose in week {}?: ".format(i)))
    return total_weight_lost
</code></pre>
<p>So what we are doing in that method now is iterating starting from 1, and asking the user to enter a number for each week. The string was changed slightly, so now we are going to use each number from the iterator of the loop to output which week number we need an entry for. For each entry, we just keep the running sum going. Then return the final result.</p>
<p>From the above solution, the things that were used can be read about below: </p>
<ol>
<li><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">range</a> </li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">format</a></li>
</ol>
<p>After reading the comments in the question, I wanted to add a small variant of the answer to help clarify the <a href="https://stackoverflow.com/questions/36417058/how-to-get-user-inputted-values-for-keys-in-dictionary-with-for-loop/36417148#comment60450765_36417058">comment</a> made by Blckknght that takes a fixed number as a parameter to the method, and will ask the user that many times.</p>
<p>So, if the user stated they wanted to enter how much weight they lost for 10 weeks, for example, then we are going to loop 10 times to get the entries, and we can do that, my changing the method around a bit to make it give it more context, and take an argument. So <code>weeks()</code> can now be defined as: </p>
<pre><code>total_weightloss(weeks):
</code></pre>
<p>Now, the method will take a parameter called <code>weeks</code> and we loop over that number:</p>
<pre><code>def total_weightloss(weeks):
    total_weight_lost = 0
    for i in range(1, weeks + 1):
        total_weight_lost += int(input("How many lbs did you lose in week {}?: ".format(i)))
    return total_weight_lost
</code></pre>
<p>Demo: </p>
<pre><code>How many lbs did you lose in week 1?: 1
How many lbs did you lose in week 2?: 2
How many lbs did you lose in week 3?: 2
How many lbs did you lose in week 4?: 2
How many lbs did you lose in week 5?: 1
How many lbs did you lose in week 6?: 2
How many lbs did you lose in week 7?: 1
How many lbs did you lose in week 8?: 1
How many lbs did you lose in week 9?: 2
How many lbs did you lose in week 10?: 1
15
</code></pre>
<p>The next modification you can make for this is error handling. You can look to see how you can modify this method to make sure it only takes an integer, and what will happen if it takes a non integer value. Look at <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">exception handling</a> too, to understand how to handle these errors that could come up. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you need to use the dictionary to keep track of the weight per week (i.e. maybe you need the values later to perform some other calculations) you can do something like this</p>
<pre><code>weeks = {"week1": 0, "week2": 0, "week3": 0}

for key in weeks:
    total_weight_lost = input(" How much weight did you lose in {}".format(key))
    weeks[key] = float(total_weight_lost)

#total weight lost over all weeks
print sum(weeks.values())
</code></pre>
<p>however if you just need a sum of the total weight lost then you can use one of the other answers.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def weeks():
    d = {"week1": 0, "week2": 0, "week3": 0}
    for i in sorted(d.keys()): 
        total_weight_lost = input(" How much weight did you lose in"+ i+ "?:")
        d[i] = total_weight_lost
    return d
</code></pre>
<p>You can use this ..</p>
<pre><code>print sum(weeks.values())
</code></pre>
</div>
<span class="comment-copy">I don't really understand how the months question ties in to the three weeks you're asking about in your function. If you're tracking weight lost per-week, why ask about months? And if you're calling the function once per month, you probably want at least four weeks (if not more sophisticated code that sometimes asks for five weeks based on where the days of the week fall that calendar month). If you stuck with a single time unit (weeks or months) it would be much easier.</span>
<span class="comment-copy">Is the order of weeks important?</span>
<span class="comment-copy">@Blckknght I'm trying to calculate the average amount of weight lost per month as well as total weight lost so I am trying to figure out a way to make the function run as many times as the user inputs for months exercised but I can't figure out how to store the total amount of weight lost per month in separate variables each time it runs through to then use later in another function which will add up all the totals for each month and calculate an average as well as total weight lost. Any ideas?</span>
<span class="comment-copy">@PeterWood I would like to ask the user how much they lost per week in the order of week1, week2, week3 if thats what you mean.</span>
<span class="comment-copy">But why is the function asking about exactly three weeks when the larger program is asking about months?</span>
<span class="comment-copy">Thankyou so much the second way works perfectly. However when I try your first suggestion it returns this error:  total_weight_lost += int(input("How many lbs did you lose in", d, "?:")) TypeError: input expected at most 1 arguments, got 3.Do you know why this might be?</span>
<span class="comment-copy">@Doc_Apes <code>input</code> only expects one argument and you are passing it three.</span>
<span class="comment-copy">Thanks! @PeterWood</span>
<span class="comment-copy">Thanks this is exactly what I was looking for!</span>
<span class="comment-copy">@Doc_Apes You are very welcome.</span>
<span class="comment-copy">Thanks this is really helpful!</span>
<span class="comment-copy">What order are the weeks in?</span>
<span class="comment-copy">&gt;&gt;&gt; import operator &gt;&gt;&gt; sorted(d.keys()) ['week1', 'week2', 'week3'] &gt;&gt;&gt;</span>
<span class="comment-copy">Thanks @DarkMatter I really appreciate you taking the time to help me!</span>
