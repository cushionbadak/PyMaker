<div class="post-text" itemprop="text">
<p><em>EDIT</em> The code is to show the position of the second input variable in the original sentence/list and it always returns 13 if you input to on the second input</p>
<p>Well my code needs to have a user input that is then converted into a list. I'm done with that part. I need help with the taking a second user input and then finding if that second user input is in the sentence that is provided from the first. My code I'm working on is below: </p>
<pre><code>  sent = str(input("Sentence:"))
  sent.split()
  lkupwrd = str(input("What word do you want to look up?"))
  print (sent.index(lkupwrd))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>in</code>:</p>
<pre><code>sent = input("Sentence:").split()
lkupwrd = str(input("What word do you want to look up?")).lower()

wordList = [word.lower() for word in sent]

if lkupwrd in wordList:
    print([i for i,j in enumerate(wordList) if j == lkupwrd])
</code></pre>
<p>You don't need to use <code>str</code> on <code>sent</code> because <code>input()</code> converts to <code>str</code> anyway.</p>
<p>More on: <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehensions</a>, <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input()</code></a>,  <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.lower" rel="nofollow"><code>lower()</code></a></p>
<p><strong>Edit:</strong></p>
<p>This is a simple example of <code>enumerate()</code>:</p>
<pre><code>myList = ["a","b","c","d","e"]

myListEnumerated = enumerate(myList)

print(list(myListEnumerated))
</code></pre>
<p>Output:</p>
<pre><code>[(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd'), (4, 'e')]
</code></pre>
<p>As you can see, you can use <code>enumerate()</code> to find the index of each element. The <code>i</code> and <code>j</code> in the code above corresponds to the index and value of each element in the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the output of the split function. To get a list of all occurrences of the lookupword you can use list comprehension. More on that can be found here: <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions</a></p>
<pre><code>sent = str(input("Sentence:"))
sent = sent.split(' ')
lkupwrd = str(input("What word do you want to look up?"))
if lkupwrd in sent:
    print 'The word is in the sentence'
    print [i for i in range(len(sent)) if sent[i] == lkupwrd]
else:
    print 'The word is not in the sentence
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<pre><code>sent.split()
</code></pre>
</blockquote>
<p>The <code>split()</code> method <em>returns</em> a list.  You need to assign the return value to a variable to use it.  The method does not modify the string object.</p>
<pre><code>sent = sent.split()
</code></pre>
<p>However, I recommend using a different variable name for the str object and the list object.  I find it makes it easier to keep track of what the names mean and what operations are valid on them.</p>
</div>
<div class="post-text" itemprop="text">
<p>How does this work for you:</p>
<pre><code>s = input("Sentence: ")
l = input("What word do you want to look up? ")
w = s.split()
if l in w:
    print "found @ {}".format(s.index(l))
else:
    print "not found"
</code></pre>
<p><strong>UPDATE</strong></p>
<p>If you want it case insensitive then change two lines to:</p>
<pre><code>w = s.lower().split()
</code></pre>
<p>and</p>
<pre><code>if l.lower() in w:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are some redundant steps in your code. See if the following works,</p>
<pre><code>sentence = input("Sentence: ")
word = input("Word: ")
if word in sentence:
    print(sentence.index(word))
</code></pre>
<p><em>No need to <code>split()</code> into a list. But the code will still work if you do it.</em></p>
</div>
<span class="comment-copy">Dude you are an absolute legend!</span>
<span class="comment-copy">@AshleyThomas no problem :)</span>
<span class="comment-copy">Dude would you please explain the code to me further I'm struggling to make sense of the i and j @Farhan.K</span>
<span class="comment-copy">@AshleyThomas edited. Does that make sense?</span>
<span class="comment-copy">Yeah I kind of understand now, would it have to be i and j or could it be a and b etc.</span>
<span class="comment-copy">.split() with no argument will split on spaces, but you need to actually use  the list it returns</span>
<span class="comment-copy">Note - <code>split()</code> will by default split by whitespaces</span>
<span class="comment-copy">Dude that's great thanks. But It has to show the position of the word in the list, how would I do that?</span>
<span class="comment-copy">Credits go to dsh and Juxhin, I made a stupid mistake</span>
<span class="comment-copy">But how would I show the positions of the word that is input, as in "To be or not to be" being input one, input two being "To" and then the output being 0 and 4</span>
<span class="comment-copy">I don't understand why but it returns 13 when I input To be or not to be for the first input and to for the second</span>
<span class="comment-copy">because that's the first index of "to" in the string.  "To" is not "to" if you want a case insensitive search you should say..</span>
