<div class="post-text" itemprop="text">
<p>I am wondering if python has an in-build method to reverse the str() method.</p>
<p>Example: MyList contains a dictionary, a string and an integer.</p>
<pre><code>MyList = [{1: 'one'}, 'blarg', 964]
</code></pre>
<p>Let's say i want to arrange these items in order of size(length).
here is my function</p>
<pre><code>def sort_by_length(mylist):
    newlist = []
    final = []
    for i in mylist:
        newlist.append(str(i))
    final = list(reversed(sorted(newlist, key=len)))
    for n,i in enumerate(final):
        if i.isdigit() == True:
            final[n]=int(i)
        else:
            pass
    return final
</code></pre>
<p>If I run this Function on MyList</p>
<pre><code>sort_by_length(MyList)
</code></pre>
<p>The current output is:</p>
<pre><code>["{1: 'one'}", 'blarg', 964]
</code></pre>
<p>Expected output:</p>
<pre><code>[{'1': 'one'}, 'blarg', 964]
</code></pre>
<p>I was able to change the Integer back from a string but the dictionary remains a string in Quotation Marks(obviously because i only reversed the str() only for the Integers and not the dictionaries).</p>
<p>How would I be able to reverse this element back to a Dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the  key parameter to <code>sorted</code> to specify a function to be called. Here a <code>lambda</code> expression will work fine.</p>
<pre><code>&gt;&gt;&gt; MyList = [{1: 'one'}, 'blarg', 964]
&gt;&gt;&gt; sorted(MyList, key=lambda x: len(str(x)), reverse=True)
[{1: 'one'}, 'blarg', 964]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generally <code>str()</code> is not meant to give something that you can decode back into a python object. It is meant to give a human readable string. If you want to encode into a string that is machine readable use something like <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json</a>.</p>
</div>
<span class="comment-copy">By size do you really mean the length of their string representation, or are you after something like <a href="https://docs.python.org/3/library/sys.html#sys.getsizeof" rel="nofollow noreferrer"><code>sys.getsizeof</code></a>.</span>
<span class="comment-copy">You shouldn't cast your dict into a string. Keep it as it was. You should therefore rewrite the <i>key</i> function instead of using the <code>len</code> builtin.</span>
<span class="comment-copy">And the short answer to "reversing <code>str()</code>" is: no.</span>
<span class="comment-copy">How did you end up with such a different types in your list? Also is the number considered a length of 1 or 3?</span>
<span class="comment-copy">Actually, the Answer from user3100115 did the trick.</span>
<span class="comment-copy">Another alternative is <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code></a> and <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a>.</span>
<span class="comment-copy">@MagnusHoff The documentation on <code>repr()</code> reads as following: <code>For many types, this function makes an attempt to return a string that would yield an object with the same value when passed to eval()</code> so while <code>repr</code> might work there are no guarantees and most of the time you are better off using something that is designed for that.</span>
