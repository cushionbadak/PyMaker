<div class="post-text" itemprop="text">
<p>Can we use standard multiprocessing.Queue class for communicating between independent Python3 scripts like</p>
<pre><code>bash% ./aaa.py &amp;
bash% ./bbb.py &amp;
</code></pre>
<p>If no, Is there another library like standard multiprocessing module for communicating with independent scripts.</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the section on <a href="https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.connection" rel="nofollow">"Listeners and Clients" in the <code>multiprocessing</code> docs</a>; unlike the higher level simpler APIs, these APIs allow you to establish connections by address and authenticate the paired process, which allows two Python scripts to cooperate without having a parent/child relationship.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's a self answer. My minimum example is below.</p>
<p>aaa.py</p>
<pre><code>from multiprocessing.managers import BaseManager
import queue

queue_a = queue.Queue()
queue_b = queue.Queue()
BaseManager.register('queue_a', callable=lambda: queue_a)
BaseManager.register('queue_b', callable=lambda: queue_b)
m = BaseManager(address=('', 50000), authkey=b'qwerty')
m.start()

shared_queue_a = m.queue_a()
shared_queue_b = m.queue_b()

shared_queue_a.put("How are you?")
msg = shared_queue_b.get()
print("%s: %s" % (__file__, msg))

m.shutdown()
</code></pre>
<p>bbb.py</p>
<pre><code>from multiprocessing.managers import BaseManager


BaseManager.register('queue_a')
BaseManager.register('queue_b')
m = BaseManager(address=('localhost', 50000), authkey=b'qwerty')
m.connect()

queue_a = m.queue_a()
queue_b = m.queue_b()

msg = queue_a.get()
print("%s: %s" % (__file__, msg))
queue_b.put("I'm fine.")
</code></pre>
<p>Run these scripts.</p>
<pre><code>./aaa.py &amp;; sleep 1; ./bbb.py
</code></pre>
<p>Prints</p>
<pre><code>./bbb.py: How are you?
./aaa.py: I'm fine.
</code></pre>
</div>
<span class="comment-copy">I chose multiprocessing.managers module, its sample code url is <a href="https://docs.python.org/3.5/library/multiprocessing.html#using-a-remote-manager" rel="nofollow noreferrer">docs.python.org/3.5/library/â€¦</a></span>
<span class="comment-copy">I know multiprocessing.connection module. Sorry for not explaining enough.  I'm seeking the higher level simpler APIs.</span>
<span class="comment-copy">@shiina: The simpler APIs don't handle named addresses. I'd look at <code>subprocess</code> and/or <code>multiprocessing</code>'s source code (the high level stuff is all in Python anyway) to get an idea of what they do and the proper way to solve your specific problem.</span>
<span class="comment-copy">But, I didn't know multiprocessing.managers module. Your answer led me to the module. Thanks.</span>
