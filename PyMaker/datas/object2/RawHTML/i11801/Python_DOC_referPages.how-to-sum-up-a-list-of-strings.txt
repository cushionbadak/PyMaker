<div class="post-text" itemprop="text">
<p>Given a list of strings as such, </p>
<pre><code>xs = ['1\n','2\n','3\n','4\n','5\n']
</code></pre>
<p>sum up the integers to return the sum as a string and append the sum to the list so that the returned list </p>
<pre><code>xs = ['1\n','2\n','3\n','4\n','5\n','Sum:15\n']
</code></pre>
<p>I understand the process of going through the list and iterating this, I just don't understand how to get rid of the <code>\n</code> character so that I can only use the integer to find the sum? </p>
</div>
<div class="post-text" itemprop="text">
<p>To answer your question a bit more directly (leaving out the iteration since you said that's not the problem):</p>
<p>Believe it or not, <code>int</code> actually ignores the trailing newline when you use it to parse:</p>
<pre><code>&gt;&gt;&gt; int('1\n')
1
</code></pre>
<p>Once you have an <code>int</code>, you can do arithmetic as normal.</p>
<p>This is a documented feature in Python 2 and 3:</p>
<blockquote>
<p>Optionally, the literal can be preceded by + or - (with no space in between) and <strong>surrounded by whitespace</strong>.</p>
</blockquote>
<p>-<a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">Python <code>int</code> documentation</a> (emphasis mine)</p>
<p>If you're interested in more streamlined ways of doing the iteration, you can see <a href="https://stackoverflow.com/a/36510641/1394393">Joran's answer</a> and the comments on it, but if this is some kind of assignment, I wouldn't use them if I were you. It benefits you more to work through the problems yourself. You of course want to use the more advanced features for professional work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def my_fun(x):
    return x+["Sum: %s\n"%sum(map(int,x)),]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This uses a generator:</p>
<pre><code>&gt;&gt;&gt; xs + ['Sum:{0}\n'.format(str(sum(int(s) for s in xs)))]
['1\n', '2\n', '3\n', '4\n', '5\n', 'Sum:15\n']
</code></pre>
</div>
<span class="comment-copy">Did Regular expression not work?</span>
<span class="comment-copy">What is up with this weird list and the way you are storing the sum at the end and all the newlines?</span>
<span class="comment-copy">@Two-BitAlchemist Educated guess: reading lines from a file and wanting to append the sum to the end, maybe. Obviously not the best way to do it if that's the case, but I give credit to the OP for trying to come up with <i>something</i> on their own.</span>
<span class="comment-copy">@jpmc26 Maybe that's why OP did it but doing that hardly requires this funky construction. Could just sum normally and open the file with the <code>'a'</code> option.</span>
<span class="comment-copy">@Two-BitAlchemist See my edited comment. ;D</span>
<span class="comment-copy">I had no idea Python would ignore whitespace when parsing an <code>int</code>. The sum can also be written using a comprehension or generator, if preferred: <code>sum(int(i) for i in xs)</code>.</span>
<span class="comment-copy">At first I was like, "Eww, why did you do that", then I saw who it was, looked up, and wow. What a required expected output.</span>
