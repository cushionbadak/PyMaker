<div class="post-text" itemprop="text">
<p>I need to output these deposits in order based on the club number. take a look at the first item in deposits (0434512). The first two digits represent the club number(in this case it is club number 04). The remaining digits represent the deposit made to the account(34512). This needs to be rounded so it should be outputted as 4 $345.12</p>
<pre><code>deposits = ["0434512", "03145234", "012341347", "0511112345", "0475746","03654534", "02112"]
deposits.sort()

for i in deposits:
    print i[1],
    print int(i[2:])/100.

1 23413.47
2 1.12
3 1452.34
3 6545.34
4 345.12
4 757.46
5 111123.45
</code></pre>
<p>I thought i had this completed but turns out that i need to add the deposits made to the same club. so i would need to add 1452.34 and 6545.34 together and same with club 4.</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dictionary:</p>
<pre><code>deposits = ["0434512", "03145234", "012341347", "0511112345", "0475746","03654534", "02112"]
deposits.sort()

from collections import OrderedDict

mydict = OrderedDict()

for i in deposits:
    mydict[i[:2]] = 0

for i in deposits:
    mydict[i[:2]] += float(i[2:])/100
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; for i,j in mydict.items():
    print(i,j)


01 23413.47
02 1.12
03 7997.68
04 1102.58
05 111123.45
</code></pre>
<p>Python 2:</p>
<pre><code>&gt;&gt;&gt; for i,j in mydict.iteritems():
    print i,j


01 23413.47
02 1.12
03 7997.68
04 1102.58
05 111123.45
</code></pre>
<p><code>OrderedDict</code> is used to keep the clubs in number order.</p>
<p>Here are some links you might be interested in: <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">Dictionaries</a>, <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow">OrderedDict</a></p>
<p><code>mydict = OrderedDict</code> creates an ordered dictionary called <code>mydict</code>.</p>
<pre><code>for i in deposits:
    mydict[i[:2]] = 0
</code></pre>
<p>This <code>for</code> loop then creates a key using the first 2 characters in each entry in <code>deposits</code>. I.e. The club number. It gives every club a value of <code>0</code> to start with.</p>
<pre><code>for i in deposits:
    mydict[i[:2]] += float(i[2:])/100
</code></pre>
<p>This second <code>for</code> loop goes through <code>deposits</code> and adds everything after the 2nd character to the corresponding key's value in <code>mydict</code>. This only works because a dictionary can't have 2 keys with the same name.</p>
<p>I hope this helps you understand. It is relatively simple once you understand how dictionaries work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Never use a list to do a dictionary's job:</p>
<pre><code>dictionary_repr = {}
for item in deposits:
    if item in dictionary_repr:
        # clump the clubs earnings to gain total earnings
        dictionary_repr[int(item[1])] += int(item[2:]/100.00)
    else:
        # create the first instance of earnings 
        dictionary_repr[int(item[1])] = int(item[2:]/100.00)
</code></pre>
<p>Now you can just iterate through the dictionary and print your results:</p>
<pre><code>for club, amount in dictionary_repr.items(): # or iteritems in Py 2.7
    print(club, amount) # or print club, amount in Py 2.7 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you should convert your club numbers to int, but solution based on your code can be like this</p>
<pre><code>from collections import defaultdict

deposits = ["0434512", "03145234", "012341347", "0511112345", "0475746", "03654534", "02112"]

summary = defaultdict(float)

for i in deposits:
    summary[i[:2]] += int(i[2:])/100.

#sort by club number
sorted_summary = sorted(summary.items(), key=lambda item: item[0])

for key, value in sorted_summary:
    print key, value

#1 23413.47
#2 1.12
#3 7997.68
#4 1102.58
#5 111123.45
</code></pre>
</div>
<span class="comment-copy">@BillBEGUERADJ I just edited my post elaborating more.</span>
<span class="comment-copy">I'm not understanding how they're getting added. Could you help me understand this a bit more? I'll check mark if you elaborate a little bit :)</span>
<span class="comment-copy">@avbirm Edited my answer :)</span>
<span class="comment-copy">I appreciate it. I check marked as answer because this was descriptive and the code was short. The other answers were good as well. could you di me a favor and upvote my post? It helps me be able to post more questions and gain a rep. Thank you -Allen</span>
<span class="comment-copy">You might consider using <code>item[:2]</code> for the club number in case the club number is greater than 9 - this agrees with the OPs spec.</span>
<span class="comment-copy">so if i were to use new_lst = [int(i[2:])/100. for i in deposits] I would have a list of the deposits list coverted to ints in the new_lst. What would i do from there? since you said i should convert to ints</span>
<span class="comment-copy">@avbirm I said about club_id because string usage causes lexicographical sorting and you can get wrong ordering e.g. "1,11,12,2,20"</span>
