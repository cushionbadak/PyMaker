<div class="post-text" itemprop="text">
<p>I'm reading various logs from a Windows Server and current am grabbing the most recent log in a folder.</p>
<p>I then want to scan that log and only print the last line where it contains a particular string.</p>
<p>The following will print all lines containing the string - </p>
<pre><code>def read_logfile(master_log):
    for line in master_log:
        if line.contains('[76:Health]:'):
            print line
</code></pre>
<p>How do I get it to print only the last match that it's found?</p>
</div>
<div class="post-text" itemprop="text">
<p>Easy way to do this is just store every time you get a hit, and print outside the loop:</p>
<pre><code>def read_logfile(master_log):
    lastmatch = None
    for line in master_log:
        if '[76:Health]:' in line:
            lastmatch = line
    if lastmatch is not None:
        print lastmatch
</code></pre>
<p>You can generalize to the last <code>n</code> matches using a <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow"><code>collections.deque</code></a> with an appropriate <code>maxlen</code>, so you just <code>append</code> all matches as you go, pushing out the oldest once you exceed the limit. The following works identically to the code above, but allows a second argument that prints more lines:</p>
<pre><code>from collections import deque

def read_logfile(master_log, linecount=1):
    lastmatches = deque(maxlen=linecount)
    for line in master_log:
        if '[76:Health]:' in line:
            lastmatches.append(line)
    for line in lastmatches:
        print line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Store it in an array and then print the last item in the array. Can use <code>pop</code> to return the line as a <code>str</code>.</p>
<pre><code> def read_logfile(master_log):
        last_line_holder = []
        for line in master_log:
            if line.contains('[76:Health]:'):
                last_line_holder.append(line)
        print(last_line_holder[-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could iterate over your file in reversed order.</p>
<pre><code>for line in reversed(master_log.readlines()):
    if '[76:Health]:' in line:
        print(line)
        break
</code></pre>
<p>If your file is small, reading it in won't be a problem. If it is large, choose another solution.</p>
</div>
<span class="comment-copy">The first option works perfectly I should have realized though that python does not have a string.contains() I actually had to do <code>if '[76:Health]:' in line:</code></span>
<span class="comment-copy">@whoisearth: Oops, I should have caught that myself. :-) I'll fix in the answer for future readers.</span>
