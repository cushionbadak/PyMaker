<div class="post-text" itemprop="text">
<p>I need to find a method on a <code>super()</code> object by name. This works when using the "dot operator" notation: <code>super(self.__class__,self).p</code>. However, I need to do that dynamically, something like <code>super(self.__class__,self)["p"]</code>, which does not work.</p>
<p>I tried to use <code>__getattr__</code>, but super object does not have that method. And <code>super(self.__class__,self).__getattribute__("p")</code> returns <code>self.p</code> instead <code>super().p</code>. </p>
<p>How to do that correctly and elegantly?</p>
<p>For instance:</p>
<pre><code>class A(object):
    def p (self):
        skip

class B(object):
    def p (self):
        skip

class AB (A,B):
    def p (self):
        skip

ab = AB()
o = super(ab.__class__, ab)

print dir(o)
print o.__getattribute__("p").__code__
print o.p.__code__
</code></pre>
<p>This code outputs:</p>
<pre><code>['__class__', '__delattr__', '__doc__', '__format__', '__get__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__
', '__self__', '__self_class__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__thisclass__']
&lt;code object p at 000000000205f2b0, file "b.py", line 10&gt;  # AB.p
&lt;code object p at 0000000000361cb0, file "b.py", line 2&gt;   # A.p
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>getattr()</code></a>. This works:</p>
<pre><code>&gt;&gt;&gt; getattr(o, "p")
&lt;bound method A.p of &lt;__main__.AB object at 0x0000000000AA8160&gt;&gt;
</code></pre>
<p>By using <code>__getattribute__()</code> directly, you lose the wrapping <code>super()</code> does to the object. You should always use <code>getattr()</code> for getting methods or other attributes. Generally, going directly to <code>__dunder__</code> methods is discouraged if there are other options.</p>
</div>
<span class="comment-copy">...what? Could you give a less abstract example of what you're trying to achieve? Also, passing <code>self.__class__</code> to <code>super</code> is a bad idea (see e.g. <a href="http://stackoverflow.com/q/4235078/3001761">stackoverflow.com/q/4235078/3001761</a>).</span>
<span class="comment-copy">@jonrsharpe He's not using self.__class__ inside the class. It will not cause any problem.</span>
<span class="comment-copy">@Bharel actually we can't see whether or not they are, because of the oh-so-helpful <code>snip</code>. But it seems odd to use <code>ab.__class__</code> instead of <code>AB</code>.</span>
<span class="comment-copy">Exactly, thanks a lot. I've spend a lot of time by figuring out how to do that, but without success.</span>
