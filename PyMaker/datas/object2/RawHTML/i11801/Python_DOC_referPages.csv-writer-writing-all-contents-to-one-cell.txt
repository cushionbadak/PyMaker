<div class="post-text" itemprop="text">
<p><strong>EDIT</strong>: Solved thanks to @ayhan. If you are from Poland use semicolon instead of comma as a separator.</p>
<p>I have a list of lists that looks like this:</p>
<pre><code>list = [['edytor poranka PN', '1/04/2016', '15:00'], ['edytor PN 2', '2/04/2016', '08:30'], ['edytor PN noc', '3/04/2016', '22:00']]
</code></pre>
<p><code>csv.writer</code> writes each list into one cell instead to 3 separate ones.</p>
<p>My code looks like this:</p>
<pre><code>with open('file.csv', 'w') as f:
    writer = csv.writer(f, delimiter=',', quoting=csv.QUOTE_MINIMAL)
    writer.writerows(list)
</code></pre>
<p>I've also tried this method:</p>
<pre><code>for i in list:
    writer.writerow(i)
</code></pre>
<p>And it also doesn't  work. My other issue is that each row is separated by an extra empty row and I don't know how to get rid of it. I know there has been similar questions but no solution is working for me.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to specify the newline to prevent the extra row from being added on each iteration. Also naming your variable <code>list</code> is a bad idea, since it's a built in type.</p>
<pre><code>with open('file.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    for a_list in lists:
        writer.writerow(a_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Slayer's code worked for me here is the US, but if I changed my Windows Region and Language settings to Poland it doesn't and I <em>was</em> finally able to reproduce your problem.</p>
<p>According to @ayhan this is because of a bug in Excel where it expects <code>;</code> to be the delimiter when reading and saving csv files in locales where <code>,</code> is used as the decimal separator (decimal mark) such as it is in Poland (and most of the rest of the world).</p>
<p>Probably the easiest work-around is just specify the delimiter Excel expects in your region when you create the <code>csv.writer</code> object, as shown below:</p>
<pre><code>#!/usr/bin/env python3

import csv

list_of_lists = [['edytor poranka PN', '1/04/2016', '15:00'],
                 ['edytor PN 2', '2/04/2016', '08:30'],
                 ['edytor PN noc', '3/04/2016', '22:00']]

with open('file.csv', 'w', newline='') as f:
    writer = csv.writer(f, delimiter=';')
    for sublist in list_of_lists:
        writer.writerow(sublist)
</code></pre>
<p>Contents of <code>file.csv</code> after running the script:</p>
<pre class="lang-none prettyprint-override"><code>edytor poranka PN;1/04/2016;15:00
edytor PN 2;2/04/2016;08:30
edytor PN noc;3/04/2016;22:00
</code></pre>
<p>Afterwards, if I open it in Microsoft Excel 2013, with my Windows Format and Location set to "Poland" in the Windows Region and Language control panel, I see the following (which is now correct):</p>
<p><img alt="screenshot of file after opening it in excel 2013" src="https://i.stack.imgur.com/1bBNo.png"/></p>
<p><strong>Update</strong></p>
<p>A way of doing it dynamically would be to have the script determine what delimiter to use based on the current locale settings and pick something different if there's a conflict — although hardcoding <code>;</code> should work any place that doesn't use it as the decimal mark (and I'm not aware of one that does).</p>
<p>Since we now know what was causing the issue, I would also take out the <code>for</code> loop Slayer introduced and go back to the version of your code that used <code>writerows()</code>.</p>
<pre><code>import csv
import locale

# Chose an Excel compatible csv delimiter.
locale.setlocale(locale.LC_ALL, '')
DELIMITER = ';' if locale.localeconv()['decimal_point'] == ',' else ','

list_of_lists = [['edytor poranka PN', '1/04/2016', '15:00'],
                 ['edytor PN 2', '2/04/2016', '08:30'],
                 ['edytor PN noc', '3/04/2016', '22:00']]

with open('file.csv', 'w', newline='') as f:
    writer = csv.writer(f, delimiter=DELIMITER)
    writer.writerows(list_of_lists)
</code></pre>
</div>
<span class="comment-copy">Good suggestions, but the OP said they already tried <code>for i in list:</code>, <code>writer.writerow(i)</code>.</span>
<span class="comment-copy">The OP said they had tried this but each row was seperated by a blank row. Which is why it wasn't working. The new rows are added because of not setting the <code>newline</code> parameter</span>
<span class="comment-copy">@Bolesław: I think you should add a few lines  to your question showing some or all of the actual contents of the variable named <code>list</code>.</span>
<span class="comment-copy">FWIW, the code in this answer works for me with your sample data.</span>
<span class="comment-copy">The contents of the output .csv file after running this code with the sample data: <code>edytor poranka PN,1/04/2016,15:00</code>, <code>edytor PN 2,2/04/2016,08:30</code>, <code>edytor PN noc,3/04/2016,22:00</code></span>
<span class="comment-copy">doesn't work for me. I am using excel 2010. Could this be an issue?</span>
<span class="comment-copy">Regional settings of your operating system may be an issue. If the default delimiter is not comma, Excel will show all of them in the same cell.</span>
<span class="comment-copy">I suppose that you using Excel 2010 could be the reason (but doubt it). The default delimiter for csv files is always commas according to the <a href="https://docs.python.org/3/library/csv.html#dialects-and-formatting-parameters" rel="nofollow noreferrer">documentation</a> (see <code>Dialect.delimiter</code>) and isn't affected by your operating system's regional settings.</span>
<span class="comment-copy">@ayhan: That must be it. I just changed both my Format and Location settings in the Windows Region and Language control panel to "Polish (Poland)" and "Poland" respectively and then the OP's problem occurs (in Excel 2013).</span>
<span class="comment-copy">@ayhan You are the Man (or Woman). This was actually the case. Works as intended when i separete them with semicolon.</span>
