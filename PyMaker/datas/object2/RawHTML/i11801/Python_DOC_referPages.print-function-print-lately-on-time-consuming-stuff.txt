<div class="post-text" itemprop="text">
<p>i am trying to understand, why <strong><em>start...</em></strong> is not print first. but got nothing...</p>
<pre><code>from __future__ import print_function
# from time import sleep

def sleeping():
    # sleep(2)
    for i in range(60000000):  # or xrange(60000000)
        pass

print('start...', end='')
sleeping()
print('stop.')
</code></pre>
<p>same thing happen in this</p>
<pre><code>from __future__ import print_function
from time import sleep

print('this will print lately')

sleep(2)

print('and this one')
</code></pre>
<p>i have tried this on both python 3 and 2. on python 2 it works fine.but causes problem on python 3.</p>
<p><strong>EDIT</strong>:</p>
<p>different output on sublime text and terminal (may be configuration problem on sublime). on terminal, second one works well in both version and first one causes problem in both version.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.stdout</code> (which <code>print</code> prints to by default) is <a href="http://www.gnu.org/software/libc/manual/html_node/Buffering-Concepts.html" rel="nofollow">line-buffered</a> when running interactively.</p>
<p>Since <code>print('start...', end='')</code> makes the line not end, the output isn't automatically flushed out.</p>
<p>To force the buffer to be flushed, you can specify <code>flush=True</code> when calling <code>print</code>. </p>
<p>In your case: <code>print('start...', end='', flush=True)</code></p>
<p>Another option is to flush the stream manually by using <code>sys.stdout.flush()</code>.</p>
<h2>Further reading:</h2>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow">Documentation of <code>print</code></a></li>
<li><a href="https://docs.python.org/3/library/sys.html#sys.stdout" rel="nofollow">Documentation of <code>sys.stdout</code></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The <code>print</code> statements are in most of the cases buffered. In order to force print to stdout you have to flush the buffer (using sys):</p>
<pre><code>from __future__ import print_function
# from time import sleep
import sys


def sleeping():
    # sleep(2)
    for i in range(60000000):  # or xrange(60000000)
        pass

print('start...', end='')
sys.stdout.flush()
sleeping()
print('stop.')
</code></pre>
</div>
<span class="comment-copy">Your second example works for me for both python versions. The first one shows the problem, yes?</span>
<span class="comment-copy">@urban may be i haven't configure my sublimetext well for python3.</span>
<span class="comment-copy">Better than mine! I did not know about <code>flush=True</code></span>
