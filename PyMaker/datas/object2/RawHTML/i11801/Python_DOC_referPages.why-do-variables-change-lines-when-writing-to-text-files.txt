<div class="post-text" itemprop="text">
<p>I have a text file which I read information off of as variables, as a saving system in my game. The problem is I need my document to read and write to a certain line, it works fine the first write and read, but the second time the line before it has moved up one and I get "Index out of range" Because line I'm trying to write/read is blank. </p>
<p><a href="https://i.stack.imgur.com/coIsi.png" rel="nofollow noreferrer"><img alt="First Read Write" src="https://i.stack.imgur.com/coIsi.png"/></a></p>
<p><a href="https://i.stack.imgur.com/aNaHU.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/aNaHU.png"/></a></p>
<p>I've looked through my code and can't seem to find the problem..</p>
<pre><code>gold=(60)
goldtxt=(str(gold) + 'gp')
inventory=['empty','empty','empty','empty','empty','empty','empty','empty','empty','empty',]

def ItemAdd(event):
   gamestatus = linecache.getline('C:Location', 2).rstrip() 
   if gamestatus == 'gamestatus1':       
      gameinfo1[7] = (inventory[(-1)]).strip('empty') + ' '
      gameinfo1[9] = goldtxt + '             '
      with open('C:Location', 'w') as active:
         active.writelines(gameinfo1) 
         RefreshTexts() 

def RefreshTexts():
    with open('C:Location', 'r') as file: 
        datatemplate = file.readlines() 
    with open('C:Location', 'r') as file: 
        gameinfo1 = file.readlines() 
    with open('C:Location', 'r') as file: 
        gameinfo2 = file.readlines() 
    with open('C:Location', 'r') as file: 
        gameinfo3 = file.readlines() 
    with open('C:Location', 'r') as file: 
        activeinfo = file.readlines()
</code></pre>
<p>I have a little over a thousand lines, but I think this is where the problem would lie should there be one.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the error occurs either because you're using <code>rstrip</code> somewhere which strips the newline characters at the end of lines; or it could be that you're <strong>ab</strong>using <code>linecache</code>; even though Python 2 documentation says something about general linewise random access, in Python 3 the documentation clearly states that:</p>
<blockquote>
<p>The linecache module allows one to get any line <strong>from a Python source file</strong>, while attempting to optimize internally, <strong>using a cache</strong>, the common case where many lines are read from a single file. This is used by the traceback module to retrieve source lines for inclusion in the formatted traceback.</p>
</blockquote>
<p>In any case using <code>linecache</code> is a very poor match for your use case, because <code>linecache</code> assumes that the files do not change, but your savefiles do change; and you're refreshing them after save. I'd recommend that you'd save and load your game state data to and from a single dictionary using the <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow"><code>json.load</code></a> and <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow"><code>json.dump</code></a></p>
<p>Something like:</p>
<pre><code>import json

def save_game(game_data):
    with open('mysavedgame', 'w') as save_file:
        json.dump(game_data, save_file)

def load_game():
    with open('mysavedgame', 'r') as save_file:
        return json.load(save_file)

def new_game():
    return {
        'items': [],
        'money': 0
    }

# when starting a new game
game_data = new_game()

# adding items, money:
game_data['items'].append('Crystal sword')
game_data['money'] += 60

# when saving a game, use
save_game(game_data)

# and load the data with
game_data = load_game()
print(game_data)
</code></pre>
<p>Running the program prints</p>
<pre><code>{'money': 60, 'items': ['Crystal sword']}
</code></pre>
<p>and the contents of <code>mysavegame</code> are</p>
<pre><code>{"money": 60, "items": ["Crystal sword"]}
</code></pre>
</div>
<span class="comment-copy">Why couldn't you save your datastructure say as a <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>JSON</code></a> file instead</span>
<span class="comment-copy">You are either adding or removing newlines incorrectly</span>
<span class="comment-copy">@AnttiHaapala I'm relatively new to python, so I have no experience working with .JSON files.</span>
<span class="comment-copy">What is the logic behind all the <code>gameinfo...=</code>?</span>
<span class="comment-copy">agreed that json is the right solution here. The strange behavior of these text files is just a symptom of the bad solution.</span>
