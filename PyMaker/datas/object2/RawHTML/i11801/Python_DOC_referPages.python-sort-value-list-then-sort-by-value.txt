<div class="post-text" itemprop="text">
<p>I have a dictionary, with a name as a key and a list containing scores as the value.</p>
<p>I'm trying to sort the lists in the values and then sort the whole dictionary by the values - making it so it's sorted by the highest score.</p>
<p>Here's the dictionary:</p>
<pre><code>{'Dave_Wright': [10], 'Clara_Johnson': [9, 7], 'Amy_Kukri': [9, 8, 9], 'Eden_Jia': [10]}
</code></pre>
<p>I'm trying to use code I'v found from other places of stackoverflow, but I've not found a question specific to this yet.</p>
<pre><code>print(d2)
d2 = sorted(d2.items(), key = itemgetter(1))
for key in d2:
    print(key, d2[key])
</code></pre>
<p>I'm probably making a mountain out of a molehill with this, but I am genuinely stumped.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just <code>itemgetter(1)</code> will not do the sorting.  You need to write your own key for this:</p>
<pre><code>def get_return(key_value):
    return list(sorted(key_value[1])), key_value[0]

d2 = sorted(d2.items(), key=get_return, reverse=True)

for key, value in d2:
    print(key, value)
</code></pre>
<p><a href="http://pythoncentral.io/how-to-sort-python-dictionaries-by-key-or-value/" rel="nofollow">Here</a> is a helpful tutorial for sorting dictionaries by keys/values that was recommended by <a href="https://stackoverflow.com/users/5986225/spectre-d">spectre-d</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This will print the dictionary in the order you've specified (assuming that you meant highest-score first):</p>
<pre><code>d = {'Dave_Wright': [10], 'Clara_Johnson': [9, 7], 'Amy_Kukri': [9, 8, 9], 'Eden_Jia': [10]}

print ('\n'.join(
    '{}, {}'.format(key, sorted(value, reverse=True))
    for key, value in sorted(d.items(), key=lambda x:x[1], reverse=True)))
</code></pre>
<p>Result:</p>
<pre><code>Dave_Wright, [10]
Eden_Jia, [10]
Amy_Kukri, [9, 9, 8]
Clara_Johnson, [9, 7]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dictionaries aren't usually sortable; though you can sort the key-value pairs in the dictionary.</p>
<pre><code>for name, scores in sorted(d2.items(), key=lambda x: max(x[1]), reverse=True):
    print name, sorted(scores)  # reverse=True?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for l in d.values():
    l.sort(reverse=True) # this will sort the values in place(mutate the dict)
result = sorted(d.items(), key=lambda x: x[1], reverse=True)
Out[518]:
[('Eden_Jia', [10]),
 ('Dave_Wright', [10]),
 ('Amy_Kukri', [9, 9, 8]),
 ('Clara_Johnson', [9, 7])]
</code></pre>
<p>Is this the output you expected?</p>
</div>
<span class="comment-copy">Please post your expected output.</span>
<span class="comment-copy">what is <code>itemgetter</code>?</span>
<span class="comment-copy">@Finwood: <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a></span>
<span class="comment-copy">nice, didn't know about that one :)</span>
<span class="comment-copy">Thank you so much! This is really helpful.</span>
