<div class="post-text" itemprop="text">
<p>Given the example below:</p>
<pre><code>import datetime
import pprint
import time

now_unaware = datetime.datetime.now()
print "Time gotten from the OS: " 
pprint.pprint now_unaware                   
     #OUTPUT: datetime.datetime(2016, 4, 7, 17, 4, 54, 689054)
     #COMMENT: The time is correct for the zone, but now_unaware doesn't explicitly know what zone is this. 
print "My timezone:"
pprint.pprint(time.tzname[time.daylight])   
     ##OUTPUT: 'CEST'
</code></pre>
<p>Please confirm or disprove my assumptions.</p>
<p><strong><em>Assumptions</em></strong> </p>
<p>Given the above information above I should have enough information to:</p>
<ul>
<li>Make <code>now_unaware</code> aware of the timezone without any timezone hard coding because 'CEST' unambiguously defines a relation to UTC</li>
<li>Be able to convert <code>now_unaware</code> to UTC without importing any additional libraries </li>
<li>Not being able to do this given the above information is either a python design flaw or a wrong mindset on approaching the problem </li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Your first assumption is correct. It sounds like you want to <em>localize</em> your unaware time object.</p>
<p>Your second assumption is somewhat correct. In Python 3 it's easier to work with timezones with only the standard library thanks to <a href="https://docs.python.org/3/library/datetime.html#datetime.timezone" rel="nofollow">datetime.timezone</a>.</p>
<p>But in Python 2, it cannot be done easily with only the standard library. You will need to subclass <a href="https://docs.python.org/2/library/datetime.html#tzinfo-objects" rel="nofollow">tzinfo</a>. Look at the "Example tzinfo classes" in the tzinfo link.</p>
<p>Finally, you've got the right mindset about approaching the problem. It would indeed be nice to do this only using the standard library. I think Python 3 addresses that, and that's why Python 2 users tend to add the <a href="http://pytz.sourceforge.net/" rel="nofollow">pytz</a> package to their projects.</p>
<p>If you're interested, there is a lengthy discussion about it <a href="http://bugs.python.org/issue9527" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">Do you have a reference of pytz working with 'CEST'?</span>
<span class="comment-copy">@Alan Sorry, I haven't worked with CEST and pytz before. This <a href="http://stackoverflow.com/q/10913986/245915">question</a> might help.</span>
