<div class="post-text" itemprop="text">
<p>In the below class hierarchy,</p>
<p><a href="https://i.stack.imgur.com/RBGvJ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/RBGvJ.png"/></a>
<a href="https://i.stack.imgur.com/v4K02.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/v4K02.png"/></a></p>
<p>Does class <code>NoneType</code> inherits class <code>object</code>?</p>
<p><em>Note : python 3.5</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, in both Python2 and Python3:</p>
<pre><code>&gt;&gt;&gt; type(None)
&lt;class 'NoneType'&gt;
&gt;&gt;&gt; type(None).mro()
[&lt;class 'NoneType'&gt;, &lt;class 'object'&gt;]
&gt;&gt;&gt; issubclass(type(None), object)
True
&gt;&gt;&gt; isinstance(None, object)
True
</code></pre>
<p>Note that in Python2, the <em>only</em> classes that are not subclasses of <code>object</code> are old-style classes. However, instances of such classes are still instances of <code>object</code>:</p>
<pre><code>&gt;&gt;&gt; class Foo:
...     pass
... 
&gt;&gt;&gt; foo = Foo()
&gt;&gt;&gt; foo
&lt;__main__.Foo instance at 0x7f2a33474bd8&gt;
&gt;&gt;&gt; type(foo)
&lt;type 'instance'&gt;
&gt;&gt;&gt; foo.__class__
&lt;class __main__.Foo at 0x7f2a33468668&gt;
&gt;&gt;&gt; Foo.mro()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: class Foo has no attribute 'mro'
&gt;&gt;&gt; issubclass(Foo, object)
False
&gt;&gt;&gt; isinstance(foo, object)
True
&gt;&gt;&gt; type(foo).mro()
[&lt;type 'instance'&gt;, &lt;type 'object'&gt;]
&gt;&gt;&gt; issubclass(type(foo), object)
True
</code></pre>
<p>Edit: I suspect some things might be different for Python &lt; 2.6 and possibly for types implemented in C.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes.</p>
<p>The <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow"><code>isinstance</code></a> function can tell you this.</p>
<pre><code>&gt;&gt;&gt; isinstance(None, object)
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, though I can only test with version 3.4</p>
<pre><code>Python 3.4.3 (default, May  5 2015, 17:58:45)
[GCC 4.9.2] on cygwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; None.__class__
&lt;class 'NoneType'&gt;
&gt;&gt;&gt; issubclass(None.__class__, object)
True
</code></pre>
</div>
<span class="comment-copy">Technically, instance checking is not the same thing as subclass checking, which is also not the same thing as mro checking.</span>
<span class="comment-copy">@o11c  <code>str.__bases__</code> gives <code>object</code>. But <code>NoneType.__bases__</code> does not give <code>object</code>. Is <code>__bases__</code> property relevant to check subclass?</span>
<span class="comment-copy">@overexchange <code>type(None).__bases__ == (object,)</code> for me on python2.7 and python3.5</span>
