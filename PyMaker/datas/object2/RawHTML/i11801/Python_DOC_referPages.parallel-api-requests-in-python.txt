<div class="post-text" itemprop="text">
<p>I am looking to implement the threading solution suggested here: <a href="https://stackoverflow.com/questions/2632520/what-is-the-fastest-way-to-send-100-000-http-requests-in-python">What is the fastest way to send 100,000 HTTP requests in Python?</a></p>
<p>My question is, if my "do something" after making the URL call is going to be appending a new row to a list (using data.append) - will this cause any issues?</p>
<p>Also, I will also be Python 2 and using urllib2 -- would the recommended solution change at all if it was urllib2 instead of httplib?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you are trying to implement IO bound operation,I would suggets you to use <a href="http://www.gevent.org/" rel="nofollow noreferrer">gevent</a>. Here is the <a href="http://www.gevent.org/intro.html#example" rel="nofollow noreferrer">example</a>.</p>
<p>Or use <a href="https://stackoverflow.com/a/24731721/4390959">this</a> answer. Gevent support not only Python 2 and Python 3, also PyPy which also can speed up your program. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://en.wikipedia.org/wiki/Asynchronous_I/O" rel="nofollow">Asynchronous IO</a> is the solution to this exact problem. Since your problem is completely IO bound there is no reason for using multiple threads. If you are using python 3.4 using <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">asyncio</a> otherwise you can use tulips. You can also use <a href="http://trollius.readthedocs.org/" rel="nofollow">Trollius</a> library which provides asyncio likes syntax in Python 2x.</p>
</div>
<span class="comment-copy">do you have an example using tulips that you would recommend? I am not using python 3 so I am interested in seeing how I can apply this.</span>
<span class="comment-copy">I have added the link for documentation to trollius. As an afterthought using trollius would be easier than tulips</span>
