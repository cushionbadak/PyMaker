<div class="post-text" itemprop="text">
<p>In certain styles of python, everything is a generator, e.g. uses <code>yield</code> rather than constructing and <code>return</code>ing a list. If you need to use it as a list, you can just call <code>list(gen)</code>.</p>
<p>If I have a list already, what is the cost of calling <code>list(my_list)</code>?</p>
<p>Use: I have a variable that I know has an iterator and <em>might</em> be a list, but I need to use it as a list. Is it better/more pythonic to do <code>my_list = list(my_list)</code> or some other way of checking its list-ness?</p>
<p>If it matters I'm using Python 3.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you call <code>list(x)</code> you are certainly creating a new list, even if <code>x</code> is already a list. If you want to avoid it, you can use <code>isinstance(x, list)</code> to check if <code>x</code> is a list or not.</p>
<pre><code>if not isinstance(x, list):
    x = list(x)
</code></pre>
</div>
<span class="comment-copy">If you call <code>list(x)</code> you are certainly creating a new list (even if <code>x</code> is a list). You can easily check <code>if isinstance(x, list)</code> to see if it is already a list or not.</span>
<span class="comment-copy">please give an example of input &amp; output</span>
<span class="comment-copy">@khelwood I'd consider this comment an answer; format and post it as such and I'll gladly accept it.</span>
<span class="comment-copy">You can use <code>timeit</code> to see how expensive it is. On my low power notebook, <code>list(my_list)</code> on a 10000 member list was 0.000187 seconds. Calling <code>isinstance</code> was way faster at 0.000000277. But its still trivial unless you are doing it a lot.</span>
<span class="comment-copy">Definitely the right answer! Could alternatively do <code>x = list(x) if not isinstance(x, list) else x</code> if that's your jam</span>
<span class="comment-copy">alternatively you can do a <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence" rel="nofollow noreferrer">ABC</a> check if can accept similar list-like object like tuple/str (immutable) or <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer">deque</a></span>
<span class="comment-copy">@Copperfield This probably is the most complete, doing <code>x = list(x) if not isinstance(x, Sequence) else x</code>, as most likely if you need a list not a generator, what you really want is the <code>Sequence</code>-ness, not necessarily the <code>list</code>-ness.</span>
<span class="comment-copy">@CAD97 yes, and if you do some change in <code>x</code>, then use instead <code>isinstance(x,MutableSequence)</code></span>
