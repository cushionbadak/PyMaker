<div class="post-text" itemprop="text">
<p>I am having some trouble in extracting data from a list of dicts based on the position defined in my configuration. 
Scenario:
I am getting a list of dict from the vertica table (thru some method call) and I need to write those data (key as header and value as the data content) in the file, so that I can upload that file to sftp for some other purpose. </p>
<p>Example</p>
<pre><code># data received in a list of dict
new_list = [{'Table':'A', 'Column':'C1', 'DataType':'int'},
            {'Table':'A', 'Column':'C2', 'DataType':'varchar'},
            {'Table': 'B', 'Column': 'C3', 'DataType': 'int'}
           ]
</code></pre>
<p>My configuration defined in such a way that "Table" data will start from 0 to 10, "Column" will start from 11 to 25 and then "DataType" will start from 25 to 35 in the file. Also if there is not enough data to fill the defined range then need to pad with space after the data till it reaches the specified field length. So I expect output like below. Here the list is dynamic in nature. I know I have to use <code>seek()</code>, but bit confused. </p>
<pre><code>Table          Column                    DataType
A              C1                        int
A              C2                        varchar
B              C3                        int
</code></pre>
<p>Any Suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think this is what you want, using <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow">string formatting</a>:</p>
<pre><code>&gt;&gt;&gt; def f(lst):
        print('{:&lt;10s}{:&lt;15s}{:&lt;10s}'.format(*['Column','Table','DataType']))
        for row in new_list:
            s = '{d[Column]:&lt;10s}{d[Table]:&lt;15s}{d[DataType]:&lt;10s}'.format(d=row)
            print(s)


&gt;&gt;&gt; f(new_list)
Column    Table          DataType  
C1        A              int       
C2        A              varchar   
C3        B              int 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm partly guessing but maybe this is what you want:</p>
<pre><code>new_list = [{'Table':'A', 'Column':'C1', 'DataType':'int'},
            {'Table':'A', 'Column':'C2', 'DataType':'varchar'},
            {'Table': 'B', 'Column': 'C3', 'DataType': 'int'}
           ]
# print in terminal
print "\t".join(new_list[0].keys())
for d in new_list:
    print "{}\t{}\t{}".format(d["Table"], d["Column"],d["DataType"])

# write to file
with open("outfile", "w") as f:
    f.write("\t".join(new_list[0].keys()) + "\n")
    for d in new_list:
        f.write("{}\t{}\t{}\n".format(d["Table"], d["Column"],d["DataType"]))
</code></pre>
<p>Result:</p>
<pre><code>$ cat outfile 
Column  Table   DataType
A       C1      int
A       C2      varchar
B       C3      int
</code></pre>
</div>
<span class="comment-copy">Relying on list indices to find your data is brittle and wasteful. I'd use another data format than lists; what about a dictionary of dictionaries? json? Anyway, I'm nore sure I understand the question exactly. Where's your file writing code?</span>
<span class="comment-copy">My recommendation would be using <code>struct</code> module but would be a long answer</span>
<span class="comment-copy">Open the file for writing and updating with <code>w+</code> mode.  Call <code>seek()</code> to move to the desired location, then use <code>write()</code> to write the desired data.</span>
<span class="comment-copy">@Pradeep The question is where you should be explaining what you are tying to do, not the comments.</span>
<span class="comment-copy">Are you updating an existing file, or creating a new one?  <code>seek</code> is typically only used for updating an existing file.  If you're creating a new file you shouldn't need it.</span>
<span class="comment-copy">Thanks. seems like the data is formatted correctly. need to do the same for the headers too. @Iron Fist</span>
<span class="comment-copy">@Pradeep .. You could do that yourself as a practice, but nevertheless, code updated.</span>
<span class="comment-copy">@Pradeep...If you feel this answer provided the right solution for you, then feel free to accept it or anyone else, otherwise, if your issue is still not solved, <i>do</i> edit your question with an update.</span>
<span class="comment-copy">how can I make the above snippet dynamic means if I have another list of dict which has different key value pair and also the position could vary too. @Iron Fist</span>
<span class="comment-copy">but no where you mentioned the position where the data will start and end. I need to follow the positions for each header otherwise the some other process will read wrong data. @jDo</span>
<span class="comment-copy">@Pradeep Well, then do <code>for d in new_list[0:9]:</code>, <code>for d in new_list[10:24]:</code>, etc. If the columns are always 10 indices apart, you can probably use modulus 9 or 10</span>
