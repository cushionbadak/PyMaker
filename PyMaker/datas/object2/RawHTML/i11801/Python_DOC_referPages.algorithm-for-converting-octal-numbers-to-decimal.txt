<div class="post-text" itemprop="text">
<p>I have a list of octal numbers that I want to be converted to decimal. Here's my class with what I've done so far:</p>
<pre><code>class Octal:

    #Reads in the file into numberList, converting each line into an int.
    def __init__(self):
        list = []
        file = open("Number Lists/random_numbers3.txt")
        for line in file:
            list.append(int(line))
        self.numberList = list
        file.close()

    #Convert numberList to decimal
    def dec_convert(self):
        decimal = 0
        decimalList = []
        for line in self.numberList:
            temp = str(line)
            i = 0
            while i &lt; len(temp):
                digit = int(temp[i])
                item = (digit * (8 ** (len(temp) - i)))
                decimal = decimal + item
                i += 1

            decimalList.append(decimal)
        return decimalList



    def get_list(self):
        return self.numberList
</code></pre>
<p>I read in the numbers from a file, that works fine. But I don't think that my dec_convert() function actually works. It just keeps running and doesn't finish. </p>
<p>It looks completely terrible and hard to read, so I was wondering if there was a simpler way of converting each octal number in the list to a decimal number?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an easy solution that uses the built-in <code>int()</code> constructor rather your <code>dec_convert()</code> function.</p>
<pre><code>class Octal:
    def __init__(self):
        with open("Number Lists/random_numbers3.txt") as fp:
            self.numberList = map(lambda x:int(x,8), fp)
    def get_list(self):
        return self.numberList

if __name__=="__main__":
    o = Octal()
    print(o.get_list())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you could use <em>list comprehension</em>:</p>
<pre><code>def dec_convert(self):
    decimalList = [self._convert_to_dec(line) for line in self.numberList]
</code></pre>
<p>and with:</p>
<pre><code>def _convert_to_dec(self,dec) :
    n = len(temp)-1
    return sum(int(x)*(8**(n-i)) for i,x in enumerate(dec))
</code></pre>
<p>The first code fragment is a simple list comprehension that calls <code>self._convert_to_dec</code> on <em>all elements in `self.numberList</em>. Not much magic there.</p>
<p>The <code>_convert_to_dec</code> is more complicated: we first calculate the amount of digits and store it in <code>n</code>. Next we define a generator that <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>s over the characters and binds <code>i</code> to the corresponding index. The generator multiplies each element with the corresponding power of <code>8</code> and the digit. This is a generator, so no real list is constructed.</p>
<p>By running this through <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum</code></a> we obtain the sum which is the requested result.</p>
<p>Or as <a href="https://stackoverflow.com/questions/36394609/algorithm-for-converting-octal-numbers-to-decimal/36394668#comment60405789_36394609">@TomKarzes</a> says, you can use <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int</code></a> with a given base (in this case <code>8</code>.</p>
</div>
<span class="comment-copy">Can't you just use <code>int(num_str, base)</code> to do the conversion?  For instance, <code>int("23", 8)</code> returns 19, which is the string "23" interpreted as octal.</span>
<span class="comment-copy">Where do you increment <code>i</code> inside the <code>while</code> loop??? No wonder "it keeps running".</span>
<span class="comment-copy">@TomKarzes, doesn't that convert from decimal to octal? I need octal to decimal.</span>
<span class="comment-copy">@ScottieJoe: no it <i>parses</i> the string to an int with the given base, as the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">specs</a> say.</span>
<span class="comment-copy">To be clear, your <code>dec_convert</code> doesn't conver to decimal either. It converts from an octal <code>str</code> to an <code>int</code>, precisely what <code>int(line,8)</code> would do.</span>
<span class="comment-copy">But doesn't that "int(x,8)" convert it to octal? I need it FROM octal TO decimal.</span>
<span class="comment-copy">No, that <code>int(x,8)</code> converts FROM octal TO <code>int</code>. Try this experiment to see how it works: <code>print(int('20',8))</code>. You should see that the octal string <code>'20'</code> is converted to an int with a value of 16.</span>
<span class="comment-copy">I see, so would that convert something like (octal)7777 to (dec)4095?</span>
<span class="comment-copy">No, it would convert (octal)'7777' to an int, the value of which is (decimal)4095. If you want to convert to the decimal string representation, you need one more step: <code>str(int('7777',8))</code> would convert (octal)'7777' to (decimal)'4095'.</span>
<span class="comment-copy">Thank you very much! I understand now.</span>
