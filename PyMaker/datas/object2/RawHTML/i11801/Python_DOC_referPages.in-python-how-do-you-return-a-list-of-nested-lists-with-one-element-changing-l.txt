<div class="post-text" itemprop="text">
<p>For example, say I have a list of lists such as this:</p>
<pre><code>ls = [['','a','b'],
      ['d','',''],
      ['','','c']]
</code></pre>
<p>Can I add another item, say 'x' into the empty slots one at a time and create a list of all outcomes?</p>
<p>To clarify, since there are 5 empty spaces, I would want 5 new copies of ls, each with only one added 'x', just in a different spot each time.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a generator function to find each position where there is an empty string then <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow">deepcopy</a> as you iterate over the positions yielding a new copy with the next pos set to x:</p>
<pre><code>def yield_pos(ls):
    for ind, sub in enumerate(ls):
        for ind2, ele in enumerate(sub):
            if not ele:
                 yield ind, ind2

from copy import deepcopy
def step(ls):
    ls_cp = deepcopy(ls)
    for i,j in yield_pos(ls):
        ls_cp[i][j] = "x"
        yield ls_cp
        ls_cp = deepcopy(ls_cp)

for cop in step(ls):
    print(cop)
</code></pre>
<p>Output:</p>
<pre><code>[['x', 'a', 'b'], ['d', '', ''], ['', '', 'c']]
[['x', 'a', 'b'], ['d', 'x', ''], ['', '', 'c']]
[['x', 'a', 'b'], ['d', 'x', 'x'], ['', '', 'c']]
[['x', 'a', 'b'], ['d', 'x', 'x'], ['x', '', 'c']]
[['x', 'a', 'b'], ['d', 'x', 'x'], ['x', 'x', 'c']]
</code></pre>
<p>If you want just one each time not keeping the previous updated x's then we just need the first logic:</p>
<pre><code>from copy import deepcopy

def yield_copy_x(ls):
    for ind, sub in enumerate(ls):
        for ind2, ele in enumerate(sub):
            if not ele:
                new = deepcopy(ls)
                new[ind][ind2] = "x"
                yield new



for cop in yield_copy_x(ls):
    print(cop)
</code></pre>
<p>Which gives you:</p>
<pre><code>[['x', 'a', 'b'], ['d', '', ''], ['', '', 'c']]
[['', 'a', 'b'], ['d', 'x', ''], ['', '', 'c']]
[['', 'a', 'b'], ['d', '', 'x'], ['', '', 'c']]
[['', 'a', 'b'], ['d', '', ''], ['x', '', 'c']]
[['', 'a', 'b'], ['d', '', ''], ['', 'x', 'c']]
</code></pre>
<p>If you want a list of lists you can just call list:</p>
<pre><code> print(list(yield_copy_x(ls)))
</code></pre>
<p>Which will give you:</p>
<pre><code>[[['x', 'a', 'b'], ['d', '', ''], ['', '', 'c']], [['', 'a', 'b'], ['d', 'x', ''], ['', '', 'c']], [['', 'a', 'b'], ['d', '', 'x'], ['', '', 'c']], [['', 'a', 'b'], ['d', '', ''], ['x', '', 'c']], [['', 'a', 'b'], ['d', '', ''], ['', 'x', 'c']]]
</code></pre>
<p>But unless you really need a list at once, you can just iterate over the generator function as in the firs example.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import copy

ls = [['','a','b'],
      ['d','',''],
      ['','','c']]

def get_index():
    # Function to get the index which match the criteria.
    for index0, list0 in enumerate(ls):
        for index1, item in enumerate(list0):
            if item == '':
                # The criteria matches, yield the indexes.
                yield index0, index1

def edit_ls():
    final_list = []
    for index0, index1 in get_index():
        # Copy the original list.
        new_ls = copy.deepcopy(ls)
        # at the index set value.
        new_ls[index0][index1] = 'x'
        # Append the list to final result.
        final_list.append(new_ls)
    return final_list
</code></pre>
</div>
<span class="comment-copy">Hello and welcome to StackOverflow. Please take some time to read the help page, especially the sections named <a href="http://stackoverflow.com/help/on-topic">"What topics can I ask about here?"</a> and <a href="http://stackoverflow.com/help/dont-ask">"What types of questions should I avoid asking?"</a>. And more importantly, please read <a href="http://meta.stackexchange.com/q/156810/204922">the Stack Overflow question checklist</a>. You might also want to learn about <a href="http://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable Examples</a>.</span>
<span class="comment-copy">The question is really unclear, can you give an example of desired output</span>
<span class="comment-copy">Question says: "I would want 5 new copies of ls, each with <code>only one</code> added 'x', just in a different spot each time."</span>
<span class="comment-copy">@HEADLESS_0NE, then just the first part is needed.</span>
<span class="comment-copy">Thank you so much</span>
<span class="comment-copy">No worries, unless you really need a list you can just iterate getting a copy at a time. using a  generator function lets you yield one value at a time without need to store all data in memory at once which for large data is very useful</span>
<span class="comment-copy">@PadraicCunningham...the link to <code>deepcopy</code> is for Python2...shouldn't be <a href="https://docs.python.org/3.4/library/copy.html#copy.deepcopy" rel="nofollow noreferrer">Python3</a>'s version instead?</span>
<span class="comment-copy">Thank you so much</span>
<span class="comment-copy">If you like the answer, can you upvote it or mark it correct? Thanks</span>
