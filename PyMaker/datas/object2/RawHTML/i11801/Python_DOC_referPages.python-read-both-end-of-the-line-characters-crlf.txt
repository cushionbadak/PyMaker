<div class="post-text" itemprop="text">
<p>For python in windows environment <br/>
I have a log file that uses [CR][LF] as end of the line indication.</p>
<p>But python will only read the [LF] char (\x0A) as '\n' <br/>
[CR] or'\x0d' is somehow ignored. Len() of the read string is reduced by 1 due to this.</p>
<p>Is there a universal/local setting somewhere I can tell python to avoid doing that?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, <code>open</code> the file in binary mode to avoid line ending translation:</p>
<pre><code>with open(filename, 'rb') as f:
</code></pre>
<p>In Python 3, binary mode does a lot more than just disable line ending translation (it also means reading <code>bytes</code> instead of <code>str</code>), so instead you use <a href="https://docs.python.org/3/library/io.html#io.TextIOWrapper" rel="nofollow">the <code>newline</code> keyword argument</a> to disable line ending translation (by passing the empty string):</p>
<pre><code>with open(filename, newline='') as f:
</code></pre>
</div>
<span class="comment-copy">Do these options disable reading line by line altogether?</span>
<span class="comment-copy">@MarkRansom: No, they just disable the line ending translation. I believe binary mode on Python 2 considers <code>\n</code> to be the only line break character, while on Python 3, <code>newline=''</code> means that universal newlines mode is used to <i>recognize</i> line breaks (so any of the common line break standards counts as a line break), but leaves them untranslated (you get back the original characters, whatever they were).</span>
