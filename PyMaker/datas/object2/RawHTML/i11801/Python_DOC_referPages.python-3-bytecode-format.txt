<div class="post-text" itemprop="text">
<p>I want to read a <code>.pyc</code> file. However, I cannot find any documentation on the format.</p>
<p>The <a href="http://nedbatchelder.com/blog/200804/the_structure_of_pyc_files.html" rel="nofollow">only one I found</a> does not work for Python 3 (although it does for Python 2):</p>
<pre><code>&gt;&gt;&gt; f = open('__pycache__/foo.cpython-34.pyc', 'rb')
&gt;&gt;&gt; f.read(4)
b'\xee\x0c\r\n'
&gt;&gt;&gt; f.read(4)
b'\xf8\x17\x08W'
&gt;&gt;&gt; marshal.load(f)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: bad marshal data (unknown type code)
</code></pre>
<p>marshal only consumes one byte: <code>\x00</code>, which indeed is not a valid first character for marshall (as a comparison, the first byte of Python 2 bytecode for the same empty module is <code>c</code>)</p>
<p>So, how can I decode what comes after the header?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this. It worked a while back. They added another int32 in v3.</p>
<pre><code>def load_file(self, source):
    if isinstance(source, str):
        import os.path
        if not os.path.exists(source):
            raise IOError("Cannot load_file('"
                + source
                + "'): does not exist")
        with open(source, "rb") as fh:
            header_bytes = fh.read(12)
            # ignore header
            self.code = marshal.load(fh)

        return self.code
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you looked at the dissembler?
<a href="https://docs.python.org/3/library/dis.html" rel="nofollow">https://docs.python.org/3/library/dis.html</a></p>
</div>
<span class="comment-copy">From version Pytho3.3+ you need read not 8 first bytes, but 12. Read my answer here <a href="http://stackoverflow.com/a/42720524/6003870">stackoverflow.com/a/42720524/6003870</a></span>
<span class="comment-copy">This seems as if it should be a normal function (without <code>self</code>).</span>
<span class="comment-copy">The disassembler takes a code object, which must be decoded (the resource I linked uses marshal for that)</span>
