<div class="post-text" itemprop="text">
<pre><code>loops = 25

a = range(1, loops)

def f(x):
    return 3 * log(x) + cos(x) ** 2
</code></pre>
<p>What's the best way to use the timeit for this?
I've tried several times, but constantly getting errors. I'd like to run <code>f</code> times equal to loops.</p>
<p>so far I've got <code>print(timeit.timeit(lambda: f(5)))</code>, and a half of dozen error filled tries with toying with parameters of the timeit constructor.</p>
<p>continuing further. I have another similar example. </p>
<pre><code>a = np.arange(1, loops)

r = 3 * np.log(a) + np.cos(a) ** 2
#Using 2 instead of a
print(timeit.timeit("3 * np.log(2) + np.cos(2) ** 2", setup="import numpy as np"))
</code></pre>
<p>How can I incorporate the range <code>a</code> into the stmt string of timeit ? </p>
</div>
<div class="post-text" itemprop="text">
<h2>Python &gt;= 3.5</h2>
<blockquote>
<p>The optional globals argument specifies a namespace in which to execute the code.</p>
<p>Changed in version 3.5: The optional globals parameter was added.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/timeit.html#timeit.timeit" rel="nofollow">https://docs.python.org/3/library/timeit.html#timeit.timeit</a></p>
<pre><code>&gt;&gt;&gt; import timeit
&gt;&gt;&gt; a = range(1, 1000)
&gt;&gt;&gt; timeit.timeit("sum(a)", globals=globals())
10.732978596999601
</code></pre>
<h2>Python &lt; 3.5</h2>
<p>Build your namespace in the setup statement (the old way).</p>
<blockquote>
<p>stmt and setup may also contain multiple statements separated by ; or newlines, as long as they donâ€™t contain multi-line string literals.</p>
</blockquote>
<pre><code>In [2]: setup = """
   ...: a = range(1, 1000)
   ...: """

In [3]: timeit.timeit("sum(a)", setup=setup)
Out[3]: 10.133886003999578
</code></pre>
<p>This also seems to work just fine even though it contains a multi-line string literal...</p>
<pre><code>In [11]: setup = """
a = '''heh
hoh
hih
'''
def f(x):
    #print(x)
    return len(x)
"""

In [12]: timeit.timeit("f(a)", setup)
Out[12]: 0.08516639499976009
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, you could go with the following:</p>
<pre><code>stmt = "results = list(map(f, a))"

stp = """
import math

def f(x):
    return 3 * math.log(x) + math.cos(x) ** 2

loops = 25
a = xrange(1, loops)
"""

# will apply f to each elmnt of a once
print(timeit.timeit(stmt=stmt, setup=stp, number=1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>How can I incorporate the range <code>a</code> into the stmt string of timeit ? </p>
</blockquote>
<p>Use string formatting:</p>
<pre><code>loops = 25
setup = "import numpy as np"
statement = "3 * np.log(2) + np.cos(2) ** np.arange(1, %d)" % loops
timeit.timeit(statement, setup=setup)
</code></pre>
</div>
<span class="comment-copy">Thanks alot, were not away that I could use the setup like so</span>
