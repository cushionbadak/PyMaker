<div class="post-text" itemprop="text">
<p>I have a class Coordinate, which holds 2 integer values, x and y.</p>
<p>I have a method to compare 2 Coordinates to see if they are equal, but I get a NameError when I attempt to define the parameter of this function as a Coordinate.</p>
<p>Here is my code:</p>
<pre><code>def equals(self, other:Coordinate):
    try:
        return (self.x==other.getX()) and (self.y==other.getY())
    except AttributeError:
        return False
</code></pre>
<p>However, when I run the class file, I get the error</p>
<pre><code>NameError: name 'Coordinate' is not defined
</code></pre>
<p>for the first line.</p>
<p>The program works when I remove ":Coordinate" from the parameter but I would like to know if there is a way for it to work while still keeping it there.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, the type hints introduced in <a href="https://www.python.org/dev/peps/pep-0484/" rel="nofollow noreferrer">PEP 484</a> do not have any runtime effect. So just because you do <code>other: Coordinate</code> that does not give you type validation for that function. You would still have to check that yourself or just expect it to be of that type (according to the <a href="https://stackoverflow.com/q/11360858/216074">EAFP principle</a>).</p>
<p>That being said, while type annotations are not evaluated for type safety, they are still an actual meta data syntax which is part of Python. So everything you do there must be completely valid.</p>
<p>In your case, the name <code>Coordinate</code> is not defined. This basically just means that there is no variable <code>Coordinate</code> which value can be assigned to that argumentâ€™s annotation meta data.</p>
<p>So if <code>Coordinate</code> is a different type than the one you are defining, then you likely just missed an import from somewhere.</p>
<p>Otherwise, if you are definining <code>Coordinate</code> right now, then you obviously cannot reference it directly since it does not exist yet. In this case, you will have to use a <a href="https://www.python.org/dev/peps/pep-0484/#forward-references" rel="nofollow noreferrer">forward reference</a>:</p>
<blockquote>
<p>When a type hint contains names that have not been defined yet, that definition may be expressed as a string literal, to be resolved later.</p>
</blockquote>
<p>So you just use a string <code>'Coordinate'</code> here.</p>
</div>
<span class="comment-copy">What kind of syntax this is? <code>other:Coordinate</code> doesn't seem valid.</span>
<span class="comment-copy">@ForceBru: It's <a href="https://docs.python.org/3/tutorial/controlflow.html#function-annotations" rel="nofollow noreferrer">function annotation</a>.</span>
<span class="comment-copy">If <code>Coordinate</code> is the name of the class, use a string instead: <code>other: "Coordinate"</code>.  The string will be evaluated after the class is done being defined.</span>
