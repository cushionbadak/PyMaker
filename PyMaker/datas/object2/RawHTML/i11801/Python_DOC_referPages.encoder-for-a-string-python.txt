<div class="post-text" itemprop="text">
<p>I've been playing around with encoding random sets of strings using a dictionary. I've gotten my code to replace the letters I want, but in some cases it will replace a character more than once, when I truly only want it to replace the letter in the string once. This is what I have:</p>
<pre><code>def encode(msg,code):
    for i in msg:
        for i in code:
            msg = msg.replace(i, code[i])
        return msg
</code></pre>
<p>for testing purposes I used the function calls:
initial:</p>
<pre><code>encode("blagh", {"a":"e","h":"r"})
</code></pre>
<p>and a more complex string:</p>
<pre><code>encode("once upon a time",{'a':'ae','e':'ei','i':'io','o':'ou','u':'ua'})
</code></pre>
<p>for the second one right above, I'm looking for the output of : 
'ouncei uapoun ae tiomei'</p>
<p>but instead am finding myself with :</p>
<p>"ounceio uapoun aeio tiomeio"</p>
<p>How can I limit my loop to only replacing each character once?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3's <a href="https://docs.python.org/3.3/library/stdtypes.html?highlight=translate#str.translate" rel="nofollow"><code>str.translate</code></a> function does what you want.  Note that the translation dictionary must use Unicode ordinals for keys, so the function uses a dictionary comprehension to convert it to the right format:</p>
<pre><code>def encode(msg,code):
    code = {ord(k):v for k,v in code.items()}
    return msg.translate(code)

print(encode("blagh", {"a":"e","h":"r"}))
print(encode("once upon a time",{'a':'ae','e':'ei','i':'io','o':'ou','u':'ua'}))
</code></pre>
<p>Output:</p>
<pre><code>blegr
ouncei uapoun ae tiomei
</code></pre>
<p>It works in Python 2 as well if you use Unicode strings or add the following to the top of the file to make strings Unicode by default:</p>
<pre><code>from __future__ import unicode_literals
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using <code>str.replace</code>, replace character by character:</p>
<pre><code>def encode(msg, code):
    result = ''
    for ch in msg:
        result += code.get(ch, ch)
    return result
</code></pre>
<p>Using <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow">generator expression</a>:</p>
<pre><code>def encode(msg, code):
    return ''.join(code.get(ch, ch) for ch in msg)
</code></pre>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/21038891/what-does-table-the-string-translate-function-mean" title="what does table the string translate function mean">stackoverflow.com/questions/21038891/â€¦</a></span>
