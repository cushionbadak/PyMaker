<div class="post-text" itemprop="text">
<p>Given a list of length n, I need to find the index of the biggest number in the list in a time complexity of O(log(n)) without using python's inbuilt max method. Below is my attempt, however I get the error</p>
<pre><code>ValueError: 0 is not in list
</code></pre>
<p>on the line</p>
<pre><code>return n.index(find_max_number(n))
</code></pre>
<p>when I run my code. Feedback on my code and alternative solutions would be appreciated.</p>
<pre><code>  def find_maximum(n):
         b = find_max_number(n)
         return n.index(b)

    def find_max_number(n):
            middle = len(n)//2
            if len(n) == 1 :
                return (n[0])
            if len(n)&gt;2:
               if n[middle] &gt; n[middle-1] and n[middle] &gt; n[middle+1] :
                return (n[middle])
            if (n[middle-1] &lt; n[middle]):
              return find_maximum(n[middle:])
            else :
              return find_maximum(n[:middle])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simplify your function <code>find_max_number</code> a bit:</p>
<pre><code>def find_max_number(numbers):
    max_ = float('-inf')
    for number in numbers:
        if number &gt; max_:
            max_ = number
    return max_
</code></pre>
<p>Alternatively, you can go for the index directly:</p>
<pre><code>def find_maximum(numbers):
    max_ = float('-inf')
    max_index = None
    for index, number in enumerate(numbers):
        if number &gt; max_:
            max_ = number
            max_index = index
    return max_index
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use Python's <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> instead to find the greatest number in the list, then use <code>.index()</code> like you were to get the index.</p>
<p><strong>Code</strong></p>
<pre><code>n = [2, 3, 4, 5]

def greatest_num_index(n):
    return n.index(max(n))

print(greatest_num_index(n))
</code></pre>
<p><strong>Out</strong></p>
<pre><code>3
</code></pre>
<p><strong>If your not allowed to use max:</strong></p>
<p>Initialize <code>greatest_num</code> to <code>n[0]</code> to cases where max &lt; 0. </p>
<pre><code>def max_num(n):
    greatest_num = n[0]
    for item in n:
        if item &gt; greatest_num:
            greatest_num = item
    return greatest_num
</code></pre>
<p>This works by going through each element in the <code>list</code>, testing if it greater than the current greatest number, and if it is it sets the greatest number to the current number.</p>
</div>
<span class="comment-copy">Share with us how it goes wrong and why it goes wrong. In addition, are you interested in an alternative solution, or is the goal to fix your existing code?</span>
<span class="comment-copy">What error do you get? Please add more details.</span>
<span class="comment-copy">Any reason for not using <code>max()</code>?</span>
<span class="comment-copy">i get error      return n.index(find_max_number(n)) ValueError: 0 is not in list   And we can't use max method, we need to write func.   And i would like to get feedback about my code, but also happy to see any other solutions!</span>
<span class="comment-copy">look like you are trying binary search, but that only work when the list is ordered, and if that is the case then there is no need to search at all, just get the last element like <code>my_list[-1]</code></span>
<span class="comment-copy">we need to write a func without using max method</span>
<span class="comment-copy">Put that in your question then :)</span>
<span class="comment-copy">@asdf please don't add additional requirements after asking your question. If you have a new/different question, ask a new question. Changing the rules after somebody tried to help you and gave a correct answer in the context of your original question is very annoying.</span>
<span class="comment-copy">@timgeb Sorry, i didnt knew it, ill edit my post</span>
<span class="comment-copy">@asdf Updated..</span>
