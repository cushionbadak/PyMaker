<div class="post-text" itemprop="text">
<p>I would like to see if there is a Python equivalent to the mathematical concept of "for all" (cf <a href="https://en.wikipedia.org/wiki/List_of_mathematical_symbols" rel="nofollow">https://en.wikipedia.org/wiki/List_of_mathematical_symbols</a>), for example to check if some condition is True for all instances being evaluated.</p>
<p><strong>For example</strong> </p>
<p>Assuming:</p>
<pre><code>word1 = 'pizza' 
word2 = 'piza'
</code></pre>
<p>I would like to check if each letter in 'piza' is in 'pizza', and conversely if each letter in 'pizza' is in 'piza'.</p>
<p>Is there a way of achieving this with something such as a <code>for loop</code>?</p>
<p>e.g. <code>for letter in word1:</code></p>
</div>
<div class="post-text" itemprop="text">
<p>In the example problem you provided I'd just use <code>set</code> to check if a string contains each letter from another string:</p>
<pre><code>print set('pizza') == set('piza') # True, both strings have same set of letters
print set('pia') &lt;= set('pizza') # True, 'pizza' contains all letters found in 'pia'
print set('pizza') &lt;= set('pia') # False, 'pia' doesn't contain all letters found in 'pizza'
</code></pre>
<p>In a general case I'd use <a href="https://docs.python.org/2/library/functions.html#all" rel="nofollow"><code>all</code></a> as others suggested.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Using a generator</strong></p>
<p>We can use a generator coupled with Python's <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all</code></a> to achieve this easily.</p>
<pre><code>word1 = 'piza'
word2 = 'pizza'

print(all(letter in word1 for letter in word2))
print(all(letter in word2 for letter in word1))
</code></pre>
<p><strong>Or Expanded</strong></p>
<p>Expanding the one-liner makes it a little bit easier to see what is going on. The function continues until it has gone through all of the letters in <code>word1</code> and checked to see if they are in <code>word2</code>. If the function finishes the <code>for loop</code>, it means that all of the letters in <code>word1</code> are in <code>word2</code>, so it returns <code>True</code>. If one letter of <code>word1</code> is not in <code>word2</code>, it returns <code>False</code>.</p>
<pre><code>word1 = 'pizza'
word2 = 'piza'

def if_letters_in(word1, word2):
    for letter in word1:
        if letter not in word2:
            return False
    return True

print(if_letters_in(word1, word2))
print(if_letters_in(word2, word1))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>True
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Non matching elements will be added to the generator making it non empty, so the condition fails</p>
<pre><code>a="pizza"
b="izap"    
if not { x for x in b if not x in a } :
    #your code here
</code></pre>
</div>
<span class="comment-copy">Check out <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a>.</span>
<span class="comment-copy"><code>all(letter in word1 for letter in word2)</code></span>
<span class="comment-copy">Your particular example can be implemented as <code>set(word1) == set(word2)</code></span>
