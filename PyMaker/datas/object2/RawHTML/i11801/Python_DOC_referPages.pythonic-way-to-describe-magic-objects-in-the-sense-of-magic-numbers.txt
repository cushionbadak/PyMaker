<div class="post-text" itemprop="text">
<p>I have objects of class <code>Node</code>, they get compared by an id. Now I also have nodes with a special meaning, <code>SpecialNodeA</code> and <code>SpecialNodeB</code>. They do not have any properties, they just transport their special meaning by being that type/that object. It would call them "magic objects" since they have a similiar function as "magic numbers".</p>
<p>As was said in a comment below: I'm looking for something like a singleton that is only equal to itself. It will be compared to other types and should not throw an Exception, just give false.</p>
<p>I currently do it the following way:</p>
<pre><code>class Node:
  def __eq_(self, other)
    return (self.id == other.id)

class SpecialNodeA:
  pass;

class SpecialNodeB:
  pass;

spNoA = SpecialNodeA() # 
spNoB = SpecialNodeB()

n1 = Node(id = 1)
specialNodeA1 = spNoA
specialNodeA2 = spNoA
specialNodeB1 = spNoB
specialNodeB2 = spNoB

print(n1 == specialNode1) # should return false
print(specialNodeA1 == specialNodeA2) # should return true
print(specialNodeA1 == specialNodeB2) # should return false
</code></pre>
<p><strong>It works fine, but is there a "more pythonic" way to implement such "magic objects"?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>I would probably use an <a href="https://docs.python.org/3/library/enum.html" rel="nofollow">enum</a>:</p>
<pre><code>from enum import Enum
class SpecialNodes(Enum):
    A = 1
    B = 2
</code></pre>
<p>Or if you want actual nodes:</p>
<pre><code>class SpecialNodes(Enum):
    A = Node()
    B = Node()
</code></pre>
<p>Sample:</p>
<pre><code>&gt;&gt;&gt; class Node:
...     pass
... 
&gt;&gt;&gt; class SpecialNodes(Enum):
...     B=Node()
...     A=Node()
... 
&gt;&gt;&gt; A1 = SpecialNodes.A
&gt;&gt;&gt; A2 = SpecialNodes.A
&gt;&gt;&gt; B1 = SpecialNodes.B
&gt;&gt;&gt; A1 == A2
True
&gt;&gt;&gt; A1 == B1
False
</code></pre>
</div>
<span class="comment-copy">It's unclear what you asking for. It smells like you want to <code>SpecialNodeA</code> and <code>SpecialNodeB</code> be singletons equal only to themselves, and multiple <code>Node</code> instances (with different ids), but I'm not really sure. May it be an <a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY Problem</a>?</span>
<span class="comment-copy">I added this in the question, but I think it should be pretty clear considering the code example.</span>
