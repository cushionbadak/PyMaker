<div class="post-text" itemprop="text">
<p>I am making a program that determines what period in school you are in; the schedules differ on certain days so you can just run the program instead of finding out what schedule you are on. </p>
<p>I am using the 'DateTime' import; but the problem is certain classes may start at let's say 7:45 and end at 9:50. The way I am programming the two times contradict each-other so the text wont be displayed.</p>
<p>here is the snippet of code:</p>
<pre><code>if sch == "A":
    if hour &gt;= 7 and min &gt;= 45:
        if hour &lt;= 9 and min &lt;= 50:
            print("It is period 1; Class ends at 9:50AM")
</code></pre>
<p>It was determined previously in the program that we are on schedule 'A' which starts at 7:45AM and ends at 9:50AM. In short I want it to display the message whilst in between those two times. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/datetime.html" rel="nofollow">datetime</a> for this task:</p>
<pre><code>from datetime import datetime

begin = '07:45:00'
end = '09:50:00' # for example
current_time = '10:32:13'

FMT = '%H:%M:%S' # format time

if sch == "A":
    if datetime.strptime(begin, FMT) &lt; \
            datetime.strptime(current_time, FMT) &lt; \
            datetime.strptime(end, FMT):
        print("It is period 1; Class ends at 9:50AM")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can try this:</p>
<pre><code>from datetime import time

if sch == "A":
    if time(hour=7, minute=45) &lt;= time(hour=hour, minute=minute) &lt;=  time(hour=9, minute=45):
        print("It is period 1; Class ends at 9:50AM")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I commented your logic is off because you don't allow for minutes other than anything in the 45-50 range, your are using datetimes so stick to comparing <a href="https://docs.python.org/3/library/datetime.html#datetime.time" rel="nofollow"><em>datetimes.time's</em></a> seeing if the hour and minute are within the range <code>7:45-9:50</code>.</p>
<pre><code>from datetime import time

# cretate a start and end time 
start, end = time(7, 45, 0), time(9, 50, 0)

# pass whatever hour and min are in your code to time
hour_min = time(7, 46)

# check the times falls in the range 7:45-9:50
if  start  &lt;= hour_min &lt;= end:
    print("It is period 1; Class ends at 9:50AM")
</code></pre>
</div>
<span class="comment-copy">post some expected and actual output so we can help you some more</span>
<span class="comment-copy">Your tow if's can become  <code>if 9 &gt;= hour &gt;= 7 and 50 &gt;= min &gt;= 45:</code>but your logic is wrong, the time can between 7:45 and 9:500 while the minute is not betwenn 45 and 50, if you are using datetimes then just compare datetimes</span>
<span class="comment-copy">This solution gave no errors although nothing was outputted (assumingly because it is not that time)... I was wondering if there is any way to "mimic" the time for testing purposes.</span>
<span class="comment-copy">@iw0542,  just use a range, <code>for hr in range(24): for mn in range(60)</code>...</span>
<span class="comment-copy">Ok. Could you please annotate your code so I can understand it a bit more? I'm not quite familiar with this use of datetime. EDIT: Also "It is period 1; Class ends at 9:50AM" appears to always show up. I think I am misunderstanding something sorry.</span>
<span class="comment-copy">@iw0542, done, it is pretty straight forward, we just just use a start and end time for the range you want to allow and check that the user  time falls in that range, the code works exactly as required, no time outside the range will mean your print is reached</span>
