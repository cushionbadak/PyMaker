<div class="post-text" itemprop="text">
<p>I'd like to know if there is a way to shorten what must be written on the <code>cmd.exe</code> command line to run Python programs. As it is, I have a program called <code>Calculator.py</code> and if I wanted to run that I would have to write:</p>
<pre><code>python.exe C:\Users\user_name\restofdirectory\Calculator.py
</code></pre>
<p>Basically I want to know if I could make the 'Python' folder on my computer default so I could just type <code>python.exe Calculator.py</code> or some other similarly short way of doing it so I didn't have to type the whole directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a cmd.exe shortcut somewhere handy (Desktop or whatever). Right Click, select properties. Under the Shortcut tab you'll have a "Start In" field. It'll be default to wherever your cmd.exe normally opens. But you can change it to any path you want (So set it to your python development folder)-- then opening that shortcut will always start cmd.exe in the python folder.</p>
<p>You don't need to type <strong>python.exe file.py</strong> -- 
Just type: <strong>python file.py</strong></p>
<p>So in short, you'd click that shortcut and type <strong>python file.py</strong> and you are done.</p>
<p>If you have specific scripts you want to run frequently, you can create a cmd.exe shortcut for each one. Set the Start In path to their folder. Then update the link to cmd.exe like this:</p>
<pre><code>c:\path\to\cmd.exe /k python file.py
</code></pre>
<p>That will open a cmd prompt and automatically run that specific script</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can cd into the folder first.</p>
</div>
<div class="post-text" itemprop="text">
<p>If python is in your default path you can create a folder and put all your python scripts in it. Then <code>cd</code> into that folder and type <code>python Calculator.py</code>. To test if python is in your path simply open up a cmd and type <code>cd \</code> (which in your case should change your working directory to <code>C:\</code>) then type python. If you get an error saying the command python cannot be found then you have to add python to your path. Other wise you should be able to run <code>cd C:\Users\user_name\restofdirectory\</code> and then execute the script <code>python Calculator.py</code></p>
</div>
<div class="post-text" itemprop="text">
<p>create an environment variable, say, PyPath = C:\Users\user_name\restofdirectory</p>
<p>then your line would be:</p>
<pre><code>python.exe %PyPath%\Calculator.py
</code></pre>
<p>or you just cd to C:\Users\user_name\restofdirectory, and run</p>
<pre><code>python.exe Calculator.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add Python to your path:</p>
<pre><code>SET PATH=%PATH%;C:\Python27\bin
</code></pre>
<p>then you can call python like this:</p>
<pre><code>python myapp.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have the <a href="https://docs.python.org/3/using/windows.html" rel="nofollow">Python Launcher for Windows</a> (comes with Python 3.3+) installed, then it gets even easier. You just need to put shebang in your code:</p>
<pre><code>#! python
</code></pre>
<p>The first time you run your code, Windows will pop up a dialog and ask you what program to use to run the script. The Python Launcher should be listed. Just choose that and away you go.  Here's a fun little script from the page I linked earlier:</p>
<pre><code>#! python
import sys
sys.stdout.write("hello from Python %s\n" % (sys.version,))
</code></pre>
<p>Once my Windows 7 box had the launcher installed and I told it what program to run, I could just call my script from cmd.exe like this:</p>
<pre><code>my_script.py
</code></pre>
<p>Note: If you have a version of Python older than 3.3, you can download the installer <a href="https://bitbucket.org/vinay.sajip/pylauncher/downloads" rel="nofollow">here</a></p>
</div>
<span class="comment-copy">If you go into the directory where the script is, you should be able to just type the command: python Calculator.py</span>
<span class="comment-copy">Thanks! But how do I open files with multiple word names -- for example, Prime Generator.py?</span>
<span class="comment-copy">You are much better off making single word names such as prime_generator.py -- If you REALLY must use a two word name, do it this way: python 'Prime Generator.py' with single quotes.</span>
<span class="comment-copy">On Windows you can probably just type <b>file.py</b></span>
<span class="comment-copy">martineau may be correct, I'm on a Linux machine at the moment and can't test. On that note, my single quotes comment was based on BASH. In windows you might have to do double quotes around the file name</span>
<span class="comment-copy">Add <code>C:\Users\user_name\restofdirectory</code> to the <code>PATH</code> environment variable, and you can run <code>file.py</code>. If you add <code>.PY</code> to the <code>PATHEXT</code> environment variable, then you can simply run <code>file</code>. In PowerShell adding the extension to <code>PATHEXT</code> is also required to even run <code>file.py</code> since, unlike the cmd shell, it only searches <code>PATH</code> for files that have an extension that's listed in <code>PATHEXT</code>. (It's really arrogant of PowerShell to not preserve the semantics of an environment variable that's been in use for over 20 years.)</span>
