<div class="post-text" itemprop="text">
<p>I'm new to Python and in the process of rewriting an old Python script, I came across these lines:</p>
<pre><code>value1 = 'some val 1'
value2 = 'some val 2'
some_list = #list of values

if (value1, value2) in some_list:
</code></pre>
<p>Does this check if <code>value1</code> and <code>value2</code> are in the list?</p>
<p>I googled how to do that and the answers show different approaches, and I didn't see any suggesting using the above code. </p>
<p>Is this doing something else? Should I keep it or change it?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>(value1, value2)</code> is a <a href="https://docs.python.org/3/library/stdtypes.html#tuple" rel="noreferrer">tuple</a>.  Your check is seeing if that tuple is in the list.  For example:</p>
<pre><code>mylist = [4, 5, (4, 5), 6]
(4, 5) in mylist
&gt;True #because the tuple (4, 5) is in the list
(5, 6)
&gt;False #because although 5 and 6 are both in the list, the tuple is not.
</code></pre>
<p>If you want to see if every item in the tuple is in the list, use <a href="https://docs.python.org/3/library/functions.html?highlight=all#all" rel="noreferrer"><code>all()</code></a> as mentioned by @apero:</p>
<pre><code>mylist = [4, 5, 6, 7]
all(x in mylist for x in (4, 5, 6))
&gt;True
all(x in mylist for x in (4, 5, 8))
&gt;False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>all</code>:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4, 5]
&gt;&gt;&gt; values = (1, 3)
&gt;&gt;&gt; all(value in lst for value in values)
True
&gt;&gt;&gt; values1 = (1, 6)
&gt;&gt;&gt; all(value in lst for value in values1)
False
</code></pre>
<p><code>all</code> evaluates to <code>True</code> <strong>only when all the values match the condition</strong>, in this case "being in the list". This is a really useful <a href="https://docs.python.org/2/library/functions.html#all" rel="nofollow">builtin</a> method because it will stop evaluating as soon as 1 of the values does not match the condition. This technique is called <strong><a href="https://en.wikipedia.org/wiki/Short-circuit_evaluation" rel="nofollow">short-circuit evaluation</a></strong>.</p>
<p>It behaves like <code>if &lt;test&gt; and &lt;test1&gt; and &lt;test2&gt; .... :</code> which evaluates each test one by one, from left to right and returns False as soon as one of the test doesn't pass.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another one, using sets:</p>
<pre><code>&gt;&gt;&gt; to_find = {4, 5, 6}
&gt;&gt;&gt; mylist = [4, 5, 6, 7]
&gt;&gt;&gt; to_find.intersection(mylist) == to_find
True
&gt;&gt;&gt; mylist = [5, 6, 7, 8]
&gt;&gt;&gt; to_find.intersection(mylist) == to_find
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you want to check if any of the values are in the list:</p>
<pre><code>&gt;&gt;&gt; all(x in some_list for x in [value1, value2])
</code></pre>
<p>what you are doing now is checking if the tuple is in the list</p>
</div>
<span class="comment-copy">No, this checks to see whether the tuple <code>(value1, value2)</code> is present in the list. Not the individual values themselves.</span>
