<div class="post-text" itemprop="text">
<p>This is not what I want from enumerate:</p>
<pre><code>&gt;&gt;&gt; seasons = ['Spring', 'summer', 'fall', 'winter']

&gt;&gt;&gt; list(enumerate(seasons, start =2))

[(2, 'Spring'), (3, 'summer'), (4, 'fall'), (5, 'winter')]
</code></pre>
<p>This IS the functionality I want from enumerate:</p>
<pre><code> &gt;&gt;&gt; list(enumerate(seasons, start =2))
[(2, 'fall'), (3, 'winter')]
</code></pre>
<p><strong>See the difference?</strong>
The first one just says, "fine I'll call your 0th element 2 if you really want me to"</p>
<p>The second one says, "I understand that you just want to begin the loop at the second index, much like range(2, len(seasons)) would do"</p>
<p><strong>Is there no way to do this simply with enumerate?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Why not just slice the first two elements? </p>
<pre><code>print(list(enumerate(seasons[2:], start=2)))
</code></pre>
<p>Output:</p>
<pre><code>[(2, 'fall'), (3, 'winter')]
</code></pre>
<p>To understand what is going on with enumerate and the start. Try iterating over it to see what it outputs: </p>
<pre><code>for i, v in enumerate(seasons, start=2):
    print(i, v)
</code></pre>
<p>As you can see your <code>i</code>, which simply increments along iterating through your <code>seasons</code> list is what starts at 2. But each value in the list is actually from the start of your list. This just further proves that <code>start</code> does not have anything to do with the actual starting point of your list iteration.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>itertools.islice</code></a> in order to take a slice of an iterable:</p>
<pre><code>In [9]: from itertools import islice

In [10]: list(islice(enumerate(seasons), 2, None))
Out[10]: [(2, 'fall'), (3, 'winter')]
</code></pre>
</div>
<span class="comment-copy">No, not with enumerate, enumerate always yields something for each item in the iterable you give it.</span>
<span class="comment-copy">I'll accept that</span>
