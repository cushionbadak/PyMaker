<div class="post-text" itemprop="text">
<p>I want to test a http post method, this method will call some service, but the service cannot work in local test machine, so I want to mock it.</p>
<p><strong>test.py:</strong></p>
<pre><code>@route(bp, '/count', methods=['POST'])
def count():
   from module import service
   ...
   total, ids = service(id, page, count) // total is a integer, ids is a list.
   ...
   return {'total': total, 'ids': ids}
</code></pre>
<p><strong>test case:</strong></p>
<pre><code>@mock.patch("module.service")
def test_search_user(self, mock_service):
    mock_service.return_value=(1, [])

    url = url_for('users.count')
    params = { .... }

    response = self._test_app.post_json(
        url, params, headers=self.request_headers, expect_errors=True)

    self.assertEqual(response.status_code, 200)
</code></pre>
<p>but test case is always failed, it tried to call <code>service</code> method, but it cannot work on my machine. I just want to mock it, but doesn't work. </p>
<p>Anyone can help me! Thanks in advance!</p>
<p>According to @syntonym answer, my test case should be wrote like this:</p>
<pre><code>@mock.patch("test.service")
def test_search_user(self, mock_service):
    mock_service.return_value=(1, [])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>@mock.patch</code> actually takes the lookup name - not the place where the object you want to patch acutally resides. <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow">The documentation reads</a>: </p>
<blockquote>
<p>patch() works by (temporarily) changing the object that a name points to with another one. [...]
  The basic principle is that you patch where an object is looked up,
  which is not necessarily the same place as where it is defined.</p>
</blockquote>
</div>
<span class="comment-copy">So <code>service</code> in your first snippet should be replaced by a magickmock? Where does <code>service</code> come from? <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow noreferrer">Read this about where to patch</a></span>
<span class="comment-copy">look my update. I defined the <code>service</code> in a module.</span>
<span class="comment-copy">patches work upon names, not on actual classes. So if you want that <code>service</code> in <code>testmodule</code> refers to the mock, you need to patch <code>@mock.patch("testmodule.service")</code>, not <code>module.service</code>. For more information read <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow noreferrer">this</a>.</span>
<span class="comment-copy">@syntonym yes, you are right, my patch() is wrong. thanks a lot! please post your answer,I will accept it.</span>
