<div class="post-text" itemprop="text">
<pre><code>pets = ['boa', 'cat', 'dog']
for pet in pets:
    print(pet)

boa
cat
dog
&gt;&gt;&gt; for pet in pets:
        print(pet, end=', ')

boa, cat, dog, 
&gt;&gt;&gt; for pet in pets:
        print(pet, end='!!! ')

boa!!! cat!!! dog!!! 
</code></pre>
<p>but what about sep? i tried to replace end by sep but nothing happened but i know that sep is used to separete while printing, how and when can i use sep? what are the differences between sep and end?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#print" rel="noreferrer">print function</a> uses <code>sep</code> to separate the arguments, and <code>end</code> after the last argument. Your example was confusing because you only gave it one argument. This example might be clearer:</p>
<pre><code>&gt;&gt;&gt; print('boa', 'cat', 'dog', sep=', ', end='!!!\n')
boa, cat, dog!!!
</code></pre>
<p>Of course, <code>sep</code> and <code>end</code> only work in Python 3's print function. For Python 2, the following is equivalent.</p>
<pre><code>&gt;&gt;&gt; print ', '.join(['boa', 'cat', 'dog']) + '!!!'
boa, cat, dog!!!
</code></pre>
<p>You can also use a backported version of the print function in Python 2:</p>
<pre><code>&gt;&gt;&gt; from __future__ import print_function
&gt;&gt;&gt; print('boa', 'cat', 'dog', sep=', ', end='!!!\n')
boa, cat, dog!!!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following two are equivalent:</p>
<pre><code>print(*array, sep='abc')
print('abc'.join(str(x) for x in array))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>sep='' and end='' are two different thing. ignore space and make variable as a single string.. like: <code>a b</code>--&gt;ab
But <code>end=''</code> make <code>a b</code> --&gt;a b 
see the below example.
for sep=' '</p>
<pre><code>from itertools import permutations
s,k = input().split()
for i in list(permutations(sorted(s), int(k))):
    print(*i,sep='')

    ''' output for sep='': 
    HACK 2
    AC
    AH
    AK
    CA
    CH
    CK
    HA
    HC
    HK
    KA
    KC
    KH
    '''
</code></pre>
<p>for end=' '</p>
<pre><code>    from itertools import permutations

    s, k = input().split()
    for i in list(permutations(sorted(s), int(k))):
        print(*i, end='')
    '''
HACK 2
A CA HA KC AC HC KH AH CH KK AK CK H
Process finished with exit code 0
'''
</code></pre>
</div>
<span class="comment-copy"><code>sep</code> is used to separate arguments passed as <code>*args</code>. Try running <code>print('a', 'b', 'c', sep=', ')</code></span>
<span class="comment-copy">yea i got it, thanks, its all that sep wasn't working because i placed it in a for loop... only end works in for loop..</span>
<span class="comment-copy">It's possible to use <code>print</code> function in Python 2 <a href="http://stackoverflow.com/q/12162629/2301450">stackoverflow.com/q/12162629/2301450</a></span>
<span class="comment-copy">Python 2 has a <a href="https://docs.python.org/2/reference/simple_stmts.html#grammar-token-print_stmt" rel="nofollow noreferrer">print statement</a>, @vaultah, that has important differences. For one thing, it doesn't support <code>sep</code> and <code>end</code>.</span>
<span class="comment-copy">I'm just saying that your claim that it only works in Python 3 is incorrect.</span>
<span class="comment-copy">My claim was that only <code>sep</code> and <code>end</code> work in Python 3, @vaultah. I've clarified the answer.</span>
<span class="comment-copy">Actually, Python 2's print function <a href="https://docs.python.org/2/library/functions.html#print" rel="nofollow noreferrer">supports <code>sep</code> and <code>end</code></a>.</span>
