<div class="post-text" itemprop="text">
<p>I'm new to Python and I'm trying to sort a dictionary by key. The keys are datetime objects. It works for 1 April, 2 April, 3 April, but it puts 4 april between 1 and 2. I've tried Ordereddict like described <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer" title="here">here.</a></p>
<p>I'm just don't getting it. Any help appreciated...</p>
<p>My code:</p>
<pre><code>for part in msg.walk():
        if partNum == 0:
            rawDate = part['Date']
            date = parse_date(rawDate)

        if part.get_content_type() == 'text/plain':
            content = part.get_payload()
            splitted_content = content.split('\r\n')
            pending_tb = str(splitted_content[8])[70:].strip()

        if partNum == 2:
            values[date] = pending_tb
            #TODO sort by date


        partNum += 1


write_file(OrderedDict(sorted(values.items(), key=lambda t: t[0])))
</code></pre>
<p>The parse_date function:</p>
<pre><code>def parse_date(rawdate):
    date_tuple = email.utils.parsedate_tz(rawdate)
    if date_tuple:
        date =  datetime.datetime.fromtimestamp(email.utils.mktime_tz(date_tuple))
        formatted_date = date.strftime("%a, %d %b %Y %H:%M:%S")
        return formatted_date
else:
    print("ERROR: kon datum niet parsen.")
    exit(-1)
</code></pre>
<p>And the write_file function:</p>
<pre><code>def write_file(values):
    filepath = "temp.csv"
    file = open(filepath, "a+")

    for k,v in sorted(values.items()):
        if len(k) &gt; 0:
            file.write(k + "\t\t" + v + "\n")
</code></pre>
<p>Printscreen of output: <a href="http://prntscr.com/ao6qst" rel="nofollow noreferrer">http://prntscr.com/ao6qst</a></p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just like said in the comments, the dictionary sorted strings instead of datetime objects. So the solution is to return date, and format the date in the write file function.</p>
<p>Thanks for the fast answers!</p>
</div>
<span class="comment-copy">From your output, it looks like to me that the output isn't sorted by date (as in the number) but it is sorted in lexicographical order. Namely, <code>F</code> comes before <code>M</code> which comes before <code>S</code></span>
<span class="comment-copy">very simple, keep the <code>datetime</code> objects as keys instead of formatting them.  so comment out the line <code>formatted_date = date.strftime("%a, %d %b %Y %H:%M:%S")</code> and just <code>return date</code>.</span>
<span class="comment-copy">That makes sense... I didn't notice that until now.. Thank you very much!</span>
<span class="comment-copy">You should accept your answer so that this question doesn't remain in the unanswered list.  To do that, click the greyed-out check mark below the vote count on your answer.</span>
<span class="comment-copy">Keep the dates as <code>datetime</code> and <code>sorted(dict)</code> sorts by key.</span>
