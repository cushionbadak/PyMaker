<div class="post-text" itemprop="text">
<p>I need to block some IPs from some countries but I'm only given the starting IP and the ending IP like this:</p>
<pre><code>11.22.33.44 - 11.22.35.200
</code></pre>
<p>I'd like to calculate the subnet to have it like this:</p>
<pre><code>(not accurate)

11.22.33.44/14
</code></pre>
<p>How can I determine the subnet given an IP address range in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>I haven't spent much time networking recently, but here's how I think you can do this most efficiently.</p>
<p>First of all, it's important to recognize that not all IP ranges can be represented as a single subnet. Let's take a look at a common subnet like</p>
<pre class="lang-none prettyprint-override"><code>192.168.0.0/24
</code></pre>
<p>The <code>/24</code> indicates that the first 24 bits of <code>192.168.0.0</code> give the network prefix, in this case <code>192.168.0</code> and the remaining bits are used for host addressing. You get a range from <code>192.168.0.0</code> to <code>192.168.0.255</code>.</p>
<p><a href="http://jodies.de/ipcalc" rel="nofollow noreferrer"><code>ipcalc</code></a> can help us out here. Let's see if it agrees:</p>
<pre class="lang-none prettyprint-override"><code>$ ipcalc 192.168.0.0 - 192.168.0.255
deaggregate 192.168.0.0 - 192.168.0.255
192.168.0.0/24
</code></pre>
<p>So far so good. But what if you want to exclude the <code>.0</code> or the <code>.255</code>, which is used for broadcast? There isn't a single subnet that represents that range:</p>
<pre class="lang-none prettyprint-override"><code>$ ipcalc 192.168.0.0 - 192.168.0.254
deaggregate 192.168.0.0 - 192.168.0.254
192.168.0.0/25
192.168.0.128/26
192.168.0.192/27
192.168.0.224/28
192.168.0.240/29
192.168.0.248/30
192.168.0.252/31
192.168.0.254/32
</code></pre>
<p>Subnets grow by powers of two and when our range doesn't slot into that framework cleanly we end up with things like this.</p>
<p>The example you gave, incidentally, doesn't give a single subnet:</p>
<pre class="lang-none prettyprint-override"><code>$ ipcalc 11.22.33.44 - 11.22.35.200
deaggregate 11.22.33.44 - 11.22.35.200
11.22.33.44/30
11.22.33.48/28
11.22.33.64/26
11.22.33.128/25
11.22.34.0/24
11.22.35.0/25
11.22.35.128/26
11.22.35.192/29
11.22.35.200/32
</code></pre>
<p>Python has an <code>ipaddress</code> module. Let's see if <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.summarize_address_range" rel="nofollow noreferrer">its <code>summarize_address_range()</code> function</a> agrees with <code>ipcalc</code> (formatted for readability):</p>
<pre><code>&gt;&gt;&gt; import ipaddress

&gt;&gt;&gt; list(ipaddress.summarize_address_range(
        ipaddress.IPv4Address('192.168.0.0'),
        ipaddress.IPv4Address('192.168.0.255')))

[IPv4Network('192.168.0.0/24')]
</code></pre>
<p>So far so good. How about the second example?</p>
<pre><code>&gt;&gt;&gt; list(ipaddress.summarize_address_range(
        ipaddress.IPv4Address('11.22.33.44'),
        ipaddress.IPv4Address('11.22.35.200')))

[IPv4Network('11.22.33.44/30'),
 IPv4Network('11.22.33.48/28'),
 IPv4Network('11.22.33.64/26'),
 IPv4Network('11.22.33.128/25'),
 IPv4Network('11.22.34.0/24'),
 IPv4Network('11.22.35.0/25'),
 IPv4Network('11.22.35.128/26'),
 IPv4Network('11.22.35.192/29'),
 IPv4Network('11.22.35.200/32')]
</code></pre>
<p>Looks like a match to me.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>convert IP addresses to unsigned long</li>
<li>xor both addresses</li>
<li>count zero bits from start - that's your prefix length</li>
</ol>
</div>
<span class="comment-copy">I was going to vote to close this as an off-topic networking question, but I see that you've included the Python tag. Are you trying to do this <i>in Python code</i>?</span>
<span class="comment-copy">Yes, I'm trying to do it in python, but I am comfortable with a pseudo code too</span>
<span class="comment-copy">how about using the built-in <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.subnets" rel="nofollow noreferrer">ipaddress</a> module?</span>
<span class="comment-copy">Thank you very very much, this is wonderful</span>
