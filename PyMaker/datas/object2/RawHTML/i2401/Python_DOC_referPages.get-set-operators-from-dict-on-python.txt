<div class="post-text" itemprop="text">
<p>If I have two or more sets, and a string that describe de operation that must be done between them, like 'and', 'or', 'xor', it can be obviously get done like this:</p>
<pre><code>if string == 'and': 
    return set1.intersection(set2)
elif string == 'or'
    return set1 | set2
</code></pre>
<p>and so on. What if I want to do it with a dictionary?
I have something like this:</p>
<pre><code>dictionary = {'and': set.intersection, 'or': set.union}
return set1.dictionary[string](set2)
</code></pre>
<p>And also tried</p>
<pre><code>operation = dictionary.get(string)
return set1.operation(set2)
</code></pre>
<p>But none worked. How can I achieve the same result that I get through ifs but with a dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>set.itersection()</code>, <code>set.union()</code>, etc. as <em>static methods</em>, passing multiple sets to them:</p>
<pre><code>&gt;&gt;&gt; ops = {'and': set.intersection, 'or': set.union}
&gt;&gt;&gt; set1 = {1, 2, 3}
&gt;&gt;&gt; set2 = {3, 4, 5}
&gt;&gt;&gt; ops['and'](set1, set2)
{3}
&gt;&gt;&gt; ops['or'](set1, set2)
{1, 2, 3, 4, 5}
</code></pre>
<p>Alternatively, you could map operations to method names and use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code></a>:</p>
<pre><code>&gt;&gt;&gt; ops = {'and': 'intersection', 'or': 'union'}
&gt;&gt;&gt; getattr(set1, ops['and'])(set2)
{3}
&gt;&gt;&gt; getattr(set1, ops['or'])(set2)
{1, 2, 3, 4, 5}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try <code>attrgetter</code></p>
<pre><code>from operator import attrgetter

set_methods = {"and": attrgetter("intersection"), 'or': attrgetter("union")}
</code></pre>
<p>Call it like: <code>set_methods[method_string](set1)(set2)</code>.</p>
</div>
<span class="comment-copy">that's right. What if I must also have the set.difference operator? then it needs two arguments but they won't be interchangeable.</span>
<span class="comment-copy">Can you clarify? If you pass the sets in the same order, then  <code>set.difference</code> should work as well. You can also use <code>gettatr()</code> on a set object (see the update).</span>
<span class="comment-copy">You are right. I was confused since, implemented directly, the method is written <code>set1.difference(set2)</code>0 so I thought <code>set.difference(set1, set2)</code> would be like <code>set() - set1 - set2</code></span>
