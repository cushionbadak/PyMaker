<div class="post-text" itemprop="text">
<p>I am trying to scrape a webpage to collect Image Names &amp; their respective asset URLs and write them to a CSV in two seperate columns. I have not been able to separate attrs out of the  tags.</p>
<p>In BS4, I am able to run:</p>
<pre><code>soup.find_all('a')
</code></pre>
<p>It successfully returns the below html (multiplied by the photo count on the page)</p>
<pre><code>&lt;a aria-label="SomeImageName" data-asset-id="10101010101" 
href="SomeWebsite"&gt;
&lt;img alt="SomeImageName" 
src="https://SomeImageUrl"/&gt;
&lt;/a&gt;
</code></pre>
<p>I have tried running the following (and many other variations)</p>
<pre><code>soup.find_all('a', attrs{"aria-label", "src"})
</code></pre>
<p>and they return</p>
<pre><code>[]
</code></pre>
<p>Anyone know how to extract this data from the  tag and write to a CSV?</p>
<p>Cheers!</p>
</div>
<div class="post-text" itemprop="text">
<p>Welcome to StackOverflow! 
You are having your requirements in two different elements i.e. <code>aria-label</code> in <code>a</code> and <code>src</code> in <code>img</code>. But luckily you have got <code>img</code> nested inside the <code>a</code> tag. So iterating will be simple. </p>
<p>Store the names and links in a list of dictionaries and with <code>DictWriter()</code> you can easily write them into a csv file. </p>
<pre><code>import csv
img_data = []
for a_tag in soup.find_all('a'):
    data_dict = dict()
    data_dict['image_name'] = a_tag['aria-label']
    data_dict['url'] = a_tag.img['src']
    img_data.append(data_dict)

with open('urls.csv', 'w') as csvfile:
    fieldnames = ['image_name', 'url']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    for data in img_data:    
        writer.writerow(data)
</code></pre>
<p>Hope this helps! Cheers! </p>
</div>
<div class="post-text" itemprop="text">
<p>Try the code below, it extracts the value of src attribute of <code>&lt;img&gt;</code> tag which is inside the <code>&lt;a&gt;</code> tag that has an attribute <code>aria-label</code> and write those links to a csv file </p>
<pre><code>## To get the value of src attribute in the &lt;img&gt; tag
tags = soup.find_all('a')
src=[]
for tag in tags:
    if tag.has_attr('aria-label'):
        src.append(tag.img['src'])

##writing to a csv file
with open('csvfile.csv','w') as file:
    for line in src:
        file.write(line)
        file.write('\n')
</code></pre>
<p>Or you can use the <code>csv</code> module to write the data</p>
<pre><code>import csv
with open('csvfile1.csv', "w",newline='') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(src)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you everyone for the input! I still wasn't able to pull <code>aria-label</code> and I read on some other forums this is a BS4 issue when parsing HTML.</p>
<p>I was, however, able to solve this quite easily using @SmashGuy solution, and pulling the alt text description versus <code>aria-label</code>. </p>
<pre><code>img_data = []
for img_tag in soup.find_all('img'):
    data_dict = dict()
    data_dict['image_name'] = img_tag['alt']
    data_dict['image_url'] = img_tag['src']
    img_data.append(data_dict)
</code></pre>
<p>And to write to CSV...</p>
<pre><code>with open('BCDS1.csv', 'w', newline='') as birddata:
    fieldnames = ['image_name', 'image_url']
    writer = csv.DictWriter(birddata, fieldnames=fieldnames)
    writer.writeheader()
    for data in img_data:
        writer.writerow(data)
</code></pre>
<p>Thanks again for everyone's help! Cheers!</p>
</div>
<div class="post-text" itemprop="text">
<p>for images you need to find the <code>&lt;img&gt;</code> tag, <code>&lt;a&gt;</code> is markup for links.</p>
<pre><code>&lt;a aria-label="SomeImageName" data-asset-id="10101010101" href="SomeWebsite"&gt;
    &lt;img alt="SomeImageName" src="https://SomeImageUrl"/&gt;
&lt;/a&gt;
</code></pre>
<p>you found that image because as you can see, the link tag wraps  the image tag.</p>
<p>and that's not how dictionary syntax works, use <code>:</code> in <code>attrs={}</code> (see <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#the-keyword-arguments" rel="nofollow noreferrer">https://www.crummy.com/software/BeautifulSoup/bs4/doc/#the-keyword-arguments</a>) </p>
<p>so it's <code>soup.find_all('a', attrs={'css': 'value'})</code> instead of <code>soup.find_all('a', attrs{"aria-label" "SomeImageName"})</code></p>
</div>
<span class="comment-copy">thanks for the reply! Still having an issue though- Seems its not picking up <code>aria-label</code>. Heres the error I am getting on line 4  <code>KeyError: 'aria-label'</code> Thoughts?</span>
<span class="comment-copy">Seems some of your tags does not have <code>aria-label</code> attribute. you can handle by either <code>try except</code> or with the following code <code>data_dict['image_name'] = a_tag['aria-label'] if 'aria-label' in str(a_tag) else ''</code>. The later will add an empty string if the attribute is missing and the first will skip the blocks which doesn't have the attribute. P.S.: the <code>if else</code> is a one liner and you can add it just like that.</span>
<span class="comment-copy">Awesome it looks like that fixed part of it, now getting the same error as in Hari's example- <code>TypeError: 'NoneType' object is not subscriptable</code> on line containing <code>data_dict['url'] = a_tag.img['src']</code> -- I'll do some research on this error now. Do you know of a fix? ((it seems like these are some pretty common issues with BS. It's my first time using. Thanks a billion for the help!))</span>
<span class="comment-copy">Just add similar if else there. But the condition must check the presence of the <code>img</code> tag there. Something like <code>if a_tag.img else ''</code>. And instead of thanking do an upvote to my answer which will motivate me to share knowledge more.</span>
<span class="comment-copy">Thanks @SmashGuy I got it working. I posted an answer if you'd like to see what I ended up doing!</span>
<span class="comment-copy"><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#method-names" rel="nofollow noreferrer"><code>find_all</code></a> and why not use the <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer"><code>csv</code></a> module?</span>
<span class="comment-copy">@G_M, what is the difference between <code>find_all()</code> and <code>findAll()</code>?</span>
<span class="comment-copy">@SmashGuy Link was provided... BeautifulSoup 3 vs 4</span>
<span class="comment-copy">@G_M, Thanks for the information! :)</span>
<span class="comment-copy">Thanks for the reply @Hari! I did however run into this error:  <code>TypeError                                 Traceback (most recent call last) &lt;ipython-input-199-9ab36d053c0c&gt; in &lt;module&gt;()       3 for tag in tags:       4     if tag.has_attr('aria-label'): ----&gt; 5         src.append(tag.img['src'])  TypeError: 'NoneType' object is not subscriptable</code>   Thoughts?</span>
<span class="comment-copy">Downvoted as the answer did not provide the appropriate solution for the question. Try understanding the questions and give answers.</span>
<span class="comment-copy">i pointed out that he targeted tag &lt;a&gt; when he asked how to captured attribute &lt;img&gt;, which in means he would have missed <b>any other images</b> outside of &lt;a&gt; tags. There is no right appropriate solution unless targetting &lt;a&gt; was exactly his intention, for instance because <b>all</b> the images in the HTML file, <i>which was not included</i>, are wrapped in the &lt;a&gt; tag.  I understood the question properly to know that he didn't know enough BS4 &amp; HTML.</span>
