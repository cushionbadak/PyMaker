<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12184846/where-should-virtualenvs-be-created">Where should virtualenvs be created?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm relatively new to the world of python, so I apologize if this is a stupid question.</p>
<p>I'm having some trouble discerning at what level I should be creating my virtual environment. Using a trivial example:</p>
<pre><code>project
    │   README.txt
    │   setup.py     
    |   venv ** should this go here **
    │
    └───package1Name
    |   |   venv ** or here **
    │   ...    
    └───package2Name
    |   |   venv ** and here **
        ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Think about it like this - Your whole project is a single environment, well because you would want it to be separated from other things in your system. Now within your environment, things(modules) must be interacting with each other and therefore each of the modules can't really be in different environments.</p>
<p>In conclusion, the <code>venv</code> goes at the top</p>
<pre><code>project
    │   README.txt
    │   setup.py     
    |   venv ** goes here **
    │
    └───module1Name
    |   |  
    │   ...    
    └───module2Name
    |   |   
        ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python, modules don't work quite this way, normally is <strong>one virtualenv per project</strong>, (but is not a fixed rule).</p>
<p>From the python <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">documentation</a> about modules:</p>
<blockquote>
<p>A module is a file containing Python definitions and statements. The file name is the module name with the suffix .py appended. Within a module, the module’s name (as a string) is available as the value of the global variable <strong>name</strong>.</p>
</blockquote>
</div>
<span class="comment-copy">Do I have the semantics correct? The top-level directory would be the project, and immediate subdirs are modules?</span>
<span class="comment-copy">I think I answered my own question from the python docs, "A module is a file containing Python definitions and statements. " -- to that effect I would say that a collection of modules is a package?</span>
<span class="comment-copy">Your structure is perfectly okay</span>
<span class="comment-copy">Yes, you can say so. Modules are just python files which can be imported from other pieces of code.</span>
