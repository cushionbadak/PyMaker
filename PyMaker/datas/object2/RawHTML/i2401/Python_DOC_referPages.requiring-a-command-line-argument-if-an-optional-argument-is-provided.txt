<div class="post-text" itemprop="text">
<p>I'm trying to write a script in which a user can choose from three different options: </p>
<pre><code>python foo.py 
python foo.py -a
python foo.py -b address_arg data_arg
</code></pre>
<p>If the user chooses the last option I need them to provide two additional arguments for address and data.</p>
<p>I currently have it working so that it requires one argument, say for the address here:</p>
<pre><code>parser.add_argument('-b', '--boo', dest='address', type=str, help="Help message")
</code></pre>
<p>Which works if I run </p>
<pre><code>python foo.py -b 0x00
</code></pre>
<p>But how do I require the user provide the second argument for data?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can set the number of expected args with <code>nargs=2</code>. </p>
<p><a href="https://docs.python.org/3/library/argparse.html#the-add-argument-method" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html#the-add-argument-method</a></p>
<pre><code>&gt;&gt;&gt; import argparse
&gt;&gt;&gt; parser = argparse.ArgumentParser()
&gt;&gt;&gt; parser.add_argument('-b', '--bar', nargs=2)
_StoreAction(option_strings=['-b', '--bar'], dest='bar', nargs=2, const=None, default=None, type=None, choices=None, help=None, metavar=None)
&gt;&gt;&gt; args = parser.parse_args(['--bar', 'arg1', 'arg2'])
&gt;&gt;&gt; args.bar
['arg1', 'arg2']
&gt;&gt;&gt; args = parser.parse_args(['--bar', 'arg1'])
usage: [-h] [-b BAR BAR]
: error: argument -b/--bar: expected 2 arguments
</code></pre>
<p>Note that here the displayed help shows <code>-b BAR BAR</code>, which is kind of annoying (it duplicates the argument name by default). You can set <code>metavar</code> to a tuple to display better help messages for the two arguments you need to pass.</p>
<pre><code>&gt;&gt;&gt; parser.add_argument('-f', '--foo', nargs=2, metavar=('desc1', 'desc2'))
_StoreAction(option_strings=['-f', '--foo'], dest='foo', nargs=2, const=None, default=None, type=None, choices=None, help=None, metavar=('desc1', 'desc2'))
&gt;&gt;&gt; parser.print_help()
usage: [-h] [-b BAR BAR] [-f desc1 desc2]

optional arguments:
  -h, --help            show this help message and exit
  -b BAR BAR, --bar BAR BAR
  -f desc1 desc2, --foo desc1 desc2
</code></pre>
<p>For more on that, see here: <a href="https://docs.python.org/3/library/argparse.html#metavar" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html#metavar</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You enforce the extra argument in the <code>action</code> routine for <code>-b</code>.</p>
<p>In there, you check for the existence and validity of the <code>data_arg</code> you expect.
For existence alone, a simple check for quantity of arguments will do the job.</p>
</div>
<span class="comment-copy">Thank you! What if I need to require arg1 but allow arg2 to be optional?</span>
<span class="comment-copy">@gravytrain You can use <code>nargs='+'</code> and it will error if at least one argument was not provided, and it lets you provide multiple arguments and packs all of them into a list. More here: <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#nargs</a>. You can do further customization with the <code>action</code> that the other answerer suggested, which I'd recommend if you're doing complicated command line parsing.</span>
