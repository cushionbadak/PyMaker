<div class="post-text" itemprop="text">
<p>I have a .txt file:</p>
<pre><code>My
name is
Richard
</code></pre>
<p>And I want to get something like <code>['My', 'name is', 'Richard']</code>
I tried</p>
<pre><code>file = open("Text.txt")
strings = file.read()
strings = strings.split()
print(strings)
</code></pre>
<p>But it gives me <code>['My', 'name', 'is', 'Richard']</code> 
So how can I get it line by line?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>split()</code> splits by any whitespace. Use this:</p>
<pre><code>file = open("text.txt")
strings = [line.strip() for line in file]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's an integrated function for this called <code>readlines()</code>. There is a <a href="https://www.tutorialspoint.com/python/file_readlines.htm" rel="nofollow noreferrer">tutorialspoint article</a> about it, and it's in the <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">python docs</a> as well</p>
<p>You would use it like so. </p>
<pre><code>with open('path/to/my/file') as myFile:
    for line in myFile.readlines():
        print line
</code></pre>
<p>And straight from the <a href="https://docs.python.org/3.5/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">docs themselves</a>, from at least Python 3.5 to 3.7, </p>
<blockquote>
<p>If you want to read all the lines of a file in a list you can also use <code>list(f)</code> or <code>f.readlines()</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Just use </p>
<pre><code>strings = strings.splitlines()
</code></pre>
<p>instead of</p>
<pre><code>strings = strings.split()
</code></pre>
<p><code>splitlines</code> method splits a string by newline characters</p>
</div>
<span class="comment-copy"><code>file.readlines()</code> reads file line by line, and do not use <code>file</code> as a variable name, its a predefined name.</span>
<span class="comment-copy">@ᴀʀᴍᴀɴ<code>file</code> was a built-in type name in Python 2, but it no longer exists in Python 3.</span>
<span class="comment-copy">@PM2Ring , it would still be good programming practice to avoid reserved words, current and deprecated.</span>
<span class="comment-copy">@DavidCulbreth I tend to agree, although I know several coders who only use Python 3 these days who like to use <code>file</code> for their own variables. BTW, it was never a reserved word like <code>for</code>, <code>while</code>, etc; it's a syntax error to use a reserved word as a variable name.</span>
<span class="comment-copy">That's exactly what I was looking for. Thank you!</span>
