<div class="post-text" itemprop="text">
<p>I have two cycles:</p>
<p>First cycle </p>
<pre><code>import json

tickets = json.loads(response_body)

for airport, flights in tickets['data'].items():
    print('airport:', airport)
</code></pre>
<p>refers to one json (this is part)</p>
<pre><code>{"success":true,"data":{"AAE":{"2":{"price":48973,"airline":"AF","flight_number":1745,"departure_at":"2018-09-04T18:45:00Z","return_at":"2018-09-14T07:15:00Z","expires_at":"2018-09-02T06:57:21Z"},"3":{"price":67240,"airline":"TP","flight_number":1235,"departure_at":"2018-09-04T07:15:00Z","return_at":"2018-09-14T07:15:00Z","expires_at":"2018-09-02T06:57:21Z"}},"AAH":{"1":{"price":34049,"airline":"LH","flight_number":1453,"departure_at":"2018-09-30T09:05:00Z","return_at":"2018-10-02T07:40:00Z","expires_at":"2018-09-03T11:37:06Z"},"2":{"price":35838,"airline":"LH","flight_number":1453,"departure_at":"2018-09-30T09:05:00Z","return_at":"2018-10-02T11:39:00Z","expires_at":"2018-09-03T11:37:06Z"}},"AAL":{"1":{"price":23258,"airline":"KL","flight_number":904,"departure_at":"2018-12-08T18:00:00Z","return_at":"2018-12-15T06:00:00Z","expires_at":"2018-09-03T13:27:58Z"},"2":{"price":21867,"airline":"AF","flight_number":1745,"departure_at":"2018-12-08T20:00:00Z","return_at":"2018-12-15T18:15:00Z","expires_at":"2018-09-03T13:27:58Z"},"3":{"price":30639,"airline":"AF","flight_number":1145,"departure_at":"2018-12-08T09:45:00Z","return_at":"2018-12-15T06:00:00Z","expires_at":"2018-09-03T13:27:58Z"}},"AAQ":{"0":{"price":5354,"airline":"FV","flight_number":5515,"departure_at":"2018-09-16T04:20:00Z","return_at":"2018-10-04T12:40:00Z","expires_at":"2018-08-31T20:53:40Z"},"1":{"price":8590,"airline":"FV","flight_number":5515,"departure_at":"2018-09-16T04:20:00Z","return_at":"2018-10-04T15:05:00Z","expires_at":"2018-08-31T20:53:40Z"},"2":{"price":13702,"airline":"U6","flight_number":79,"departure_at":"2018-10-04T11:20:00Z","return_at":"2018-10-10T12:40:00Z","expires_at":"2018-09-03T06:47:01Z"}},"AAR":{"1":{"price":24418,"airline":"OK","flight_number":905,"departure_at":"2018-09-19T22:10:00Z","return_at":"2018-09-25T09:35:00Z","expires_at":"2018-09-02T21:16:33Z"},"2":{"price":20805,"airline":"AY","flight_number":712,"departure_at":"2018-09-19T11:50:00Z","return_at":"2018-09-25T16:55:00Z","expires_at":"2018-09-02T21:16:33Z"},"3":{"price":36316,"airline":"BT","flight_number":425,"departure_at":"2018-09-19T09:45:00Z","return_at":"2018-09-25T09:35:00Z","expires_at":"2018-09-02T21:16:33Z"}}
</code></pre>
<p>and from there get codes airports (ААЕ, ААН, etc.).</p>
<p>The second cycle </p>
<pre><code>citys = json.loads(responce)

for h in citys:
    print(h['code'])
    print(h['name'])
</code></pre>
<p>refers to another json </p>
<pre><code>[{"code":"AAA","name":"Анаа","coordinates":{"lon":-145.41667,"lat":-17.05},"cases":{"ro":"","da":"","vi":"","tv":"","pr":""},"time_zone":"Pacific/Tahiti","name_translations":{"en":"Anaa"},"country_code":"PF"},{"code":"AAB","name":"Аррабури","coordinates":{"lon":141.04167,"lat":-26.7},"cases":{"ro":"","da":"","vi":"","tv":"","pr":""},"time_zone":"Australia/Brisbane","name_translations":{"en":"Arrabury"},"country_code":"AU"},{"code":"AAC","name":"Эль-Ариш","coordinates":{"lon":33.75,"lat":31.133333},"cases":{"ro":"Аль-Ариш","da":"Аль-Ариш","vi":"в Аль-Ариш","tv":"Аль-Ариш","pr":"Аль-Ариш"},"time_zone":"Africa/Cairo","name_translations":{"en":"El Arish"},"country_code":"EG"},{"code":"AAE","name":"Аннаба","coordinates":{"lon":7.811857,"lat":36.821392},"cases":{"ro":"Аннабы","da":"Аннабе","vi":"в Аннабу","tv":"Аннабой","pr":"Аннабе"},"time_zone":"Africa/Algiers","name_translations":{"en":"Annaba"},"country_code":"DZ"},
</code></pre>
<p>that stores codes of airports and city names.</p>
<p>I can not understand how can I compare the airport codes received so that, in case of a coincidence, I get the name of the city</p>
</div>
<div class="post-text" itemprop="text">
<p>You can save the values in a dictonary, indexed by city/airport codes.
my_dic ={}</p>
<p>Then, on the first loop,
my_dic[airport_code] = airport</p>
<p>And un second loop, you can look for an element in your dic with the code you have: </p>
<p>my_dic[city_code]</p>
<p>That raises an exception if the key does not exist. You can use my_dic.get(city_code) which returns None if the key doesn't exist</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understood correctly, you need to use the <a href="https://docs.python.org/3/library/difflib.html" rel="nofollow noreferrer">difflib</a> library. I might be wrong. But let me try suggesting anyway.</p>
<p>Right now I am also trying to figure out how to compare two text files, but for all I know, comparing a line of text could be done using the following:</p>
<p>See <code>Differ()</code>, but I haven't quite figured how to properly use that one yet. It compares lines and displays: removed lines, new lines and modified lines. Could be exported into a separate file.</p>
<p>I'd probably try using <code>difflib.Differ()</code> in your case.</p>
<p>EDIT: But looking at your jsons to compare, there's a lot of different lines, so you'll receive a lot of unneeded lines.</p>
</div>
<span class="comment-copy">Thanks. I'll try, but so far something does not work</span>
<span class="comment-copy">Thank you. I'll see</span>
