<div class="post-text" itemprop="text">
<p>Just in case I missed something and before I implement a own solution for the problem.</p>
<p>In our build system, I always have to work with relative paths to keep all projects moveable. Therefore the build scripts should generate relative paths to files.</p>
<p>Yet it seems there is no function in the python library, which can handle parent path steps as shown in the following example:</p>
<pre><code>from pathlib import Path
dir_a = Path("/home/example/solution/project")
file_b = Path("/home/example/solution/config.h")
</code></pre>
<p>I would like to get a path to <code>file_b</code>, relative to <code>dir_a</code>. Therefore if I start in <code>dir_a</code>, the relative path would point to <code>file_b</code>.</p>
<p>The best result would be:</p>
<pre><code>&gt;&gt;&gt; file_b.relative_to(dir_a)
Path("../config.h")
</code></pre>
<p>Take this slightly more complex example:</p>
<pre><code>from pathlib import Path
dir_a = Path("/home/example/solution/project_a")
file_b = Path("/home/example/solution/project_b/config.h")
</code></pre>
<p>The best result would be:</p>
<pre><code>&gt;&gt;&gt; file_b.relative_to(dir_a)
Path("../project_b/config.h")
</code></pre>
<p>Both examples using the <code>.relative_to</code> methods do not work and raise an exception:</p>
<pre><code>ValueError: '/home/example/solution/project_b/config.h' does not start with '/home/example/solution/project_a'
</code></pre>
<p>The <code>os.path.relpath</code> method works as expected, but returns a string instead of a <code>Path</code> object:</p>
<pre><code>&gt;&gt;&gt; os.path.relpath(file_b, dir_a)
'../project_b/config.h'
</code></pre>
<p>So I wonder if I missed something here...</p>
<p><strong>How to I get a relative path with parent directories using Path objects?</strong></p>
<p>Why is the <code>relative_to</code> implementation of the <code>Path</code> object not working?</p>
</div>
<div class="post-text" itemprop="text">
<p>Some path x needs to be inside some base path. You're getting the <code>ValueError</code> exception, because project_b is not relative to project_a, but relative to solution folder.</p>
<p>For example, to better understand, you should have:</p>
<pre><code>base = Path("/home/example/solution")
b_file = Path("/home/example/solution/project_b/config.h")
b_file.relative_to(base) # output &gt;&gt;&gt; WindowsPath('project_b/config.h')
</code></pre>
<p><strong>EDIT:</strong>
You can get relative directories in the current folder with <code>Path</code> objects using either <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob" rel="nofollow noreferrer"><code>Path.glob()</code></a> or <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir" rel="nofollow noreferrer"><code>Path.iterdir()</code></a>.</p>
<p>You're going to find out which one fits better your case.</p>
<p>Basically, you can do is:</p>
<pre><code>base = Path('/home/example/solution') 
g = base.glob('/*') # grabs all files and dirs relative to the current folder as Path objects
try:
    while g:
        i = next(g)
        if i.match('project_b'):
            # if here is my folder then work with it
            b_file = i.joinpath('config.h')
        else:
            # work on a better look up maybe
            pass
except StopIteration:
    pass
</code></pre>
</div>
<span class="comment-copy">Can't you create <code>Path</code> object with the return value from <code>os.path.relpath</code>?</span>
<span class="comment-copy">@yogkm Yes indeed, I can do this and probably, finally will do this. But I wonder, why I actually have to do this. Seems strange to me, if the Path object does everything else in a great way.</span>
<span class="comment-copy">Yes indeed, you are right! I fully understand the error message, but this was not my question. My question was: How do I get a relative path with parent directories using Path objects?</span>
<span class="comment-copy">@Flovdis, I edited my answer, maybe it helps.</span>
<span class="comment-copy">Your additions still do not answer my question. Please look at my examples and explanation. It seems you did not understand my question. I already explained, that <code>os.path.relpath(file_b, dir_a)</code> works as expected - but returns a string, not a <code>Path</code> object. The question is, if there is method to get the same result for <code>Path</code> objects. To be frank with you: You code example looks random in relation to the question and also outdated (<code>for i in base.glob('/*'):</code>?).</span>
