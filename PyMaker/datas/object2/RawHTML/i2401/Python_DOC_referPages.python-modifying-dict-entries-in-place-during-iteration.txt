<div class="post-text" itemprop="text">
<p>I know that in the general case, itâ€™s unsafe to mutate a dict while iterating over it:</p>
<pre><code>d = {1: 2, 3: 4}
for k in d.keys():
    d[k + 1] = d[k] + 1
</code></pre>
<p>This yields a <code>RuntimeError</code> as expected. However, while reading the <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">documentation for <code>dict</code></a>, I found the following (emphasis mine):</p>
<blockquote>
<p>Iterating views while <strong>adding or deleting</strong> entries in the dictionary may raise a <code>RuntimeError</code> or fail to iterate over all entries.</p>
</blockquote>
<p>So I tried the following code:</p>
<pre><code>d = {1: 2, 3: 4}
for k in d.keys():
    d[k] = d[k] + 1
</code></pre>
<p>Note: I did not add or remove any entries during the iteration; I only updated existing entries. I've tried it with a few examples and so far have not received a <code>RuntimeError</code>, and the loop works as expected.</p>
<p>Is this guaranteed to work by the language? Or have I just been lucky so far?</p>
<p>Note: I am using Python 3, so <code>d.keys()</code> returns a dynamic view rather than a <code>list</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>The internal structure of the dictionary is determined by the keys, and not the values. At least currently. This means that you can modify the value associated with a key, but adding or removing keys (which the first example's <code>d[k + 1] = d[k] + 1</code> does) will cause problems.</p>
</div>
<span class="comment-copy">Alex Martelli says <a href="https://stackoverflow.com/questions/2315520/in-python-how-do-i-loop-through-the-dictionary-and-change-the-value-if-it-equal/2315529#2315529">here</a> that <i>assigning a different value at a given existing index does not incur any problem</i>, so I believe it should be fine ;)</span>
<span class="comment-copy">As far as I know that's perfectly fine (and indeed something you see quite often). The key point is that you're not actually altering the content of <code>d.keys()</code>, which you are when you add or delete a key - and this is almost certainly what the warning in the docs is about.</span>
<span class="comment-copy">As an aside,  <code>d.keys()</code> is redundant to iterate over the keys, just use <code>for k in d</code>.</span>
<span class="comment-copy">@TomKarzes This is not true in Python. Python does not know if the value is immutable or not, and so has to load the value, and then unconditionally store the result of the addition.</span>
<span class="comment-copy">@Dunes - I wouldn't call the left-hand-side a "value", but OK. It doesn't matter whether it's immutable or not. With the <code>d[k] += 1</code>, Python only has to evaluate <code>d[k]</code> once. With <code>d[k] = d[k] + 1</code>, Python has to evaluate <code>d[k]</code> twice.</span>
