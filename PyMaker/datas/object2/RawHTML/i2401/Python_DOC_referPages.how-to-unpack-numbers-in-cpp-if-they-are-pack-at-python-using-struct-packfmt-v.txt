<div class="post-text" itemprop="text">
<p>In python, I encoded numbers using <code>struct</code></p>
<pre><code>struct.pack("&lt;2q", 456, 123)
</code></pre>
<p>It returns </p>
<pre><code>'\xc8\x01\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00'
</code></pre>
<p>In cpp, how could I decode such string into a tuple of integers? </p>
</div>
<div class="post-text" itemprop="text">
<p>It should be fairly simple to unpack that string, you can just copy the bytes out into the appropriate sized integer:</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;

int main()
{
  std::string input = std::string("\xc8\x01\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00", 16);
  for ( size_t i = 0; i &lt; input.size() / 8; i++ )
  {
      int64_t value;
      memcpy(&amp;value, &amp;input[i*8], 8);
      std::cout &lt;&lt; value &lt;&lt; "\n";
  }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>q</code> is long long so 64 bit signed integers. From <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">https://docs.python.org/3/library/struct.html</a>:</p>
<pre><code>Format  C Type      Python type     Standard size
q      long long    integer         8
</code></pre>
<p>You could read this buffer and copy into an array of 2 long long (64 bit using <code>stdint.h</code> define)</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;strings.h&gt;
#include &lt;stdint.h&gt;

int main()
{
 // you're supposed to get that when reading the buffer from a file for instance:
 const unsigned char buffer[] = {0xc8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,'{',0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 int64_t array[2];
 memcpy(array,buffer,sizeof(array));
 std::cout &lt;&lt; array[0] &lt;&lt; "," &lt;&lt; array[1] &lt;&lt; '\n';
}
</code></pre>
<p>prints:</p>
<pre><code>456,123
</code></pre>
<p>I didn't handle endianness here. Just assumed they were the same. But if you want that, just swap the bytes using the size of the type and you're good to go.</p>
</div>
<span class="comment-copy">Just to check, in C++ they arrive as <code>"\xc8\x01\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00"</code> ? I.e. a 16 byte string? Because it looks like a <code>char[8][2]</code></span>
