<div class="post-text" itemprop="text">
<p>I have an h-by-w-by-3 numpy array <code>A</code> and another h-by-w-by-2 numpy array <code>B</code> that tells me where to grab the value from in <code>A</code> at each (h, w) location. Denote the result matrix by <code>C</code> (h-by-w-by-3).</p>
<p>Naively, I can do</p>
<pre><code>C = np.zeros(A.shape)
for i in range(B.shape[0]):
    for j in range(B.shape[1]):
        C[i, j, :] = A[B[i, j, 0], B[i, j, 1], :]
</code></pre>
<p>But I'm sure there's more efficient, more pythonic, and faster way!</p>
</div>
<div class="post-text" itemprop="text">
<p>There is indeed:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; 
&gt;&gt;&gt; h, w = 4, 6
&gt;&gt;&gt; 
&gt;&gt;&gt; A = np.random.randint(0, 100, (h, w, 3))
&gt;&gt;&gt; B = np.random.randint(0, h*w, (h, w, 2)) % [h, w]
&gt;&gt;&gt; 
&gt;&gt;&gt; C = np.zeros(A.shape)
&gt;&gt;&gt; for i in range(B.shape[0]):
...     for j in range(B.shape[1]):
...         C[i, j, :] = A[B[i, j, 0], B[i, j, 1], :]
... 
&gt;&gt;&gt; 
&gt;&gt;&gt; C2 = A[(*np.moveaxis(B, 2, 0),)]
&gt;&gt;&gt; np.all(C == C2)
True
</code></pre>
</div>
<span class="comment-copy"><code>C = A[B[:, :, 0], B[:, :, 1]]</code> ?</span>
<span class="comment-copy">Amazing. Seems that <code>*</code> is doing the magic here. Wonder how one actually tries the <code>*</code> operator? It's hard as it is usually inside the argument field...</span>
<span class="comment-copy">@SibbsGambling In this particular case <code>(*np.moveaxis(B, 2, 0),)</code> is actually just a fancy way of writing <code>tuple(np.moveaxis(B, 2, 0))</code>. See for example <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" rel="nofollow noreferrer">here</a>.</span>
