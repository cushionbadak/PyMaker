<div class="post-text" itemprop="text">
<p>I am new to python, so in need of help. I am having a three lists in which the values correspond to each other. As in an excel like below</p>
<pre><code>ID           Name         Height 
1             u              5
2             s              7
3             d              9
4             u              7
5             k              7
6             z              5
</code></pre>
<p>and so on.</p>
<p>Now from this table I want to combine the ID which are having same height.
names as in not so important.. How do I do that using python.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get better answers, check out the formatting tools to make things easier to read.</p>
<pre><code>ID Name Height 
1  u    5 
2  s    7
3  d    9
...
</code></pre>
<p>The easiest way to do what you're looking for would be to check out 'groupby' from the 'itertools' package.
<a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html</a></p>
<p>First, assuming all lists are of equal length, put them together into a merged list.</p>
<pre><code>newList = [(a,b,c) for a,b,c in zip(list1, list2, list3)]
</code></pre>
<p>newList would look something like this:</p>
<pre><code>[(1,u,5),(2,s,7),(3,d,9),(4,u,7),...]
</code></pre>
<p>Now you can use groupby to group everything by height.</p>
<pre><code>from itertools import groupby

data = sorted(newlist, key=lambda x: x[2])  # Sort "newlist" by height values
for k,g in groupby(data, lambda x: x[2])
    # k is now the height value
    group = list(g)  # group will now have all of the matching list elements with the same height
    ids = [x[1] for x in group]  # This would be the list of ids with the height from k...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, welcome to StackOverflow!</p>
<p>I believe what you're trying to ask is a method to extract the contents of an Excel spreadsheet and use that content to find and combine the ID numbers which have the same height.</p>
<p>To do this, you'll need a way to read an Excel spreadsheet in Python.
You can do this in two methods:</p>
<ol>
<li>Convert the spreadsheet to a CSV (comma-separated-values) file which can be easily used by Python using the <b>csv</b> module.</li>
<li>Use an external library that helps you read from and write to Excel spreadsheets directly, like <b>xlrd</b> and <b>xlwt</b>. As the name suggests, <b>xlrd</b> is a module that lets you read data from the Excel spreadsheet and <b>xlwt</b> lets you write to the Excel spreadsheet.</li>
</ol>
<p>Assuming that you only need to read data from the spreadsheet, I'll share my method which would use the xlrd module.</p>
<p>First, install the xlrd module by using the command:</p>
<pre><code>pip install xlrd
</code></pre>
<p>Then, in your Python program, import the xlrd module and open the spreadsheet like so:</p>
<pre><code>workbook = xlrd.open_workbook('spreadsheet_file.xls')
</code></pre>
<p>If you have a large file, use the ondemand option along with the above statement, like this:</p>
<pre><code>workbook = xlrd.open_workbook('spreadsheet_file.xls', on_demand = True)
</code></pre>
<p>Assuming that the spreadsheet is the first in the Excel workbook, open it like so:</p>
<pre><code>worksheet = workbook.sheet_by_index(0) 
</code></pre>
<p>This will open the first spreadsheet in the Excel workbook.</p>
<p>Now, to access data from the spreadsheet, you'll need to do this:</p>
<pre><code>value = worksheet.cell(row_index, column_index).value
</code></pre>
<p>So, in theory, your solution would be roughly similar to this:</p>
<pre><code>import xlrd

book = xlrd.open_workbook('your_spreadsheet_file.xls')
sheet = workbook.sheet_by_index(0)
list_values = list()

row_ind = 0
while sheet.cell(row_ind, 0).value != xlrd.empty_cell.value:
    list_values.append((
      sheet.cell(row_ind, 0).value,
      sheet.cell(row_ind, 1).value,
      sheet.cell(row_ind, 2).value))
    row_ind += 1
</code></pre>
<p>Now you'll have a list of tuples that can be used to do whatever you like.
After this, if you do want to group them by height, referring to user1209675's answer should do well.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this with pandas module from python and using groupby function. see below example.</p>
<pre><code>import pandas as pd

id1 = [1203,1204,1205,1206,1207,1208]    #list of id's
name = ['john','mike','henry','cart','rob','sam']    #list of names
height = [5,4,5,7,2,4]    #list of heights

df = pd.DataFrame({'id':id1, 'name':name, 'height':height})    #creating a dataframe from id, name and height lists

df2 = df.groupby('height').apply(lambda x: x['id'].unique())    #grouping the id's having same height

print(df2)
</code></pre>
<p>Output:</p>
<pre><code>height
2          [1207]
4    [1204, 1208]
5    [1203, 1205]
7          [1206]
dtype: object
</code></pre>
<p>Also if you not bothered about the names column you can simply do that using defaultdict with only id and height column. see below example.</p>
<pre><code>from collections import defaultdict

id1 = [1203,1204,1205,1206,1207,1208]  #list of id's
height = [5,4,5,7,2,4]  #list of heights

data = dict(zip(id1,height))  #creating a normal dictionary with id's and height

result = defaultdict()  #creating a default dictionary

for key,value in data.items():
    if value in result.keys():
        result[value].append(key)
    else:
        result[value] = [key]

print(result)
</code></pre>
</div>
<span class="comment-copy">Help us help you - Please share the code you have so far, and the result you're trying to get.</span>
