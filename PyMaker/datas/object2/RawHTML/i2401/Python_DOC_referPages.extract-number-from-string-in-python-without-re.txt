<div class="post-text" itemprop="text">
<p>How can I extract a number from a string in python without having to use regex? I have seen <code>isinstance</code> but the number could change to almost anything. Any ideas?</p>
<p><code>https://www.investopedia.com/articles/retirement/?page=6</code> </p>
</div>
<div class="post-text" itemprop="text">
<p>This assumes that there isn't multiple blocks of integers (e.g. <code>www.something212.com/page=?13</code>)</p>
<p>You could try using list comprehensions and <code>str.isdigit()</code></p>
<pre><code>url = 'https://www.investopedia.com/articles/retirement/?page=6'

digits = [d for d in url if d.isdigit()]

digit = ''.join(digits)

digit
&gt;&gt;&gt; 6
</code></pre>
<p>Edited: now works with digits above 9</p>
</div>
<div class="post-text" itemprop="text">
<p>It's a bit verbose, but I would use url parsing for this.  The advantage overy regex is that you would get some input validation for free, and more readable code.</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse, parse_qs
&gt;&gt;&gt; url = 'https://www.investopedia.com/articles/retirement/?page=6'
&gt;&gt;&gt; parsed = urlparse(url)
&gt;&gt;&gt; query = parse_qs(parsed.query)
&gt;&gt;&gt; [page] = query['page']
&gt;&gt;&gt; int(page)
6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the <code>url</code> always has that format with only digits at the end you could do this: </p>
<pre><code>s = 'https://www.investopedia.com/articles/retirement/?page=25'
new = []
k = list(s)
[new.append(i) for i in k if i.isdigit()]
print(''.join(new))
</code></pre>
<blockquote>
<pre><code>(xenial)vash@localhost:~/python/stack_overflow$ python3.7 isdigit.py
25
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can extract continuous groups of digits, anywhere on the string, using the following:</p>
<pre><code>from itertools import groupby

url = 'https://www.investopedia.com/articles/retirement/?page=6&amp;limit=10&amp;offset=15'
print([int(''.join(group)) for key, group in groupby(iterable=url, key=lambda e: e.isdigit()) if key])
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[6, 10, 15]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I know you do not need <code>re</code>, but it is actually very powerful.  Under the hood, most libraries make use of <code>re</code>. Here is my solution to handle this situation:</p>
<pre><code>import re

url = "www.fake888.com/article/?article=123&amp;page=9&amp;group=8"

numbers = re.findall(r'(?&lt;==)(\d+)', url)
print(f'Found: {" ".join(numbers)}')

varval = re.findall(r'(\w+)=(\d+)', url)
urldict = {}
for var in varval:
  urldict[var[0]] = var[1]

print(urldict)
</code></pre>
<p>The output is</p>
<pre><code>Found: 123 9 8
{'article': '123', 'page': '9', 'group': '8'}
</code></pre>
</div>
<span class="comment-copy">Well, you're just reading from a query string in that case... parse it out and read the <code>page</code> parameter...</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer">urlparse</a> documentation for parsing url</span>
<span class="comment-copy">what happens if that 6 is 12?</span>
<span class="comment-copy">digits would produce <code>[6,12]</code>. You could join the answer by using <code>number = ''.join(map(int, digits))</code></span>
<span class="comment-copy">I know, I'm saying why not address that in your answer?</span>
<span class="comment-copy">you could just <code>''.join(digits)</code> since you already know whats in there</span>
<span class="comment-copy">@vash_the_stampede Iâ€™m gonna have to agree with you. This is a pretty good bit of code.</span>
<span class="comment-copy">Do you have any good resources to help learn re?</span>
<span class="comment-copy">I have learnt quite a lot from <a href="https://rexegg.com/" rel="nofollow noreferrer">rexegg.com</a></span>
<span class="comment-copy">Iâ€™m gonna have to check that out! Thanks for the link. I really have wanted to learn regex for a while because of its power. ðŸ’ª</span>
