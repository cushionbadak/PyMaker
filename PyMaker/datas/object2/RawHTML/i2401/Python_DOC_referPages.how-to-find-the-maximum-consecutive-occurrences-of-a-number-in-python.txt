<div class="post-text" itemprop="text">
<p>I want to find out the maximum number of consecutive occurrences of a number in python.
I am using the following code from stack overflow.</p>
<pre><code>from itertools import groupby
b= [1,2,45,55,5,4,3,2,5,5,6,5456,5456,5456,7,67,6,6]

print(b)

def occurrence():
    occurrence, num_times = 0, 0
    for key, values in groupby(b, lambda x : x):
        val = len(list(values))
        if val &gt;= occurrence:
            occurrence, num_times =  key, val
    return occurrence, num_times

occurrence, num_times = occurrence()
print("%d occurred %d times" % (occurrence, num_times))
</code></pre>
<p>I get the following answer:</p>
<pre><code>5 occurred 2 times
</code></pre>
<p>The answer should be 5456 because it occurred 3 times.
Can any body help me to resolve the issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>the only change you need is</p>
<pre><code>if val &gt;= num_times:
</code></pre>
<p>your code is comparing the length of the current group with the last <code>key</code>.</p>
<p>this returns the <strong>last</strong> item with maximal consecutive occurrence (if there were three times <code>5</code> later in the list this would be selected).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simplify that code by using the built-in <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> function to find the maximum <code>num_times</code>.</p>
<pre><code>from itertools import groupby

b = [1, 2, 45, 55, 5, 4, 3, 2, 5, 5, 6, 5456, 5456, 5456, 7, 67, 6, 6]

num_times, occurrence = max((len(list(values)), key) for key, values in groupby(b))
print("%d occurred %d times" % (occurrence, num_times))
</code></pre>
<p><strong>output</strong></p>
<pre><code>5456 occurred 3 times
</code></pre>
<p>There's no need to give <code>groupby</code> that inefficient <code>lambda x: x</code>: if you don't give it a key function it uses the identity function by default.</p>
<hr/>
<p>FWIW, there's a more efficient way to calculate the length of a <code>groupby</code> group. It doesn't matter here, but it's handy when the groups are large. Rather than converting the group to a list &amp; getting its length, we can loop over the group and use the built-in <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum</code></a> to count the items in the group. Just change </p>
<pre><code>len(list(values))
</code></pre>
<p>to </p>
<pre><code>sum(1 for _ in values)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following generator expression:</p>
<pre><code>print('{1} occurred {0} times'.format(*max((len(list(g)), k) for k, g in groupby(b))))
</code></pre>
<p>This outputs:</p>
<pre><code>5456 occurred 3 times
</code></pre>
</div>
<span class="comment-copy">what if you have more than one item with max occurrences?</span>
<span class="comment-copy">Can you also explain this large one liner. It helps, otherwise it's just a solution without explanation and has limited transferability to other similar problems</span>
