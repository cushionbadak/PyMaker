<div class="post-text" itemprop="text">
<p>I am trying to store the output of a cmd command as a variable in python. 
To achieve  this i am using <code>os.system()</code> but <code>os.system()</code> just runs the process,it doesn't capture the output. </p>
<pre><code>import os


PlatformName = os.system("adb shell getprop | grep -e 'bt.name'")
DeviceName = os.system("adb shell getprop | grep -e '.product.brand'")
DeviceID = os.system("adb shell getprop | grep -e 'serialno'")
Version = os.system("adb shell getprop | grep -e 'version.release'")

print(PlatformName)
print(DeviceName)
print(DeviceID)
print(Version)
</code></pre>
<p>Then i tried to use the <code>subprocess</code> module.</p>
<pre><code>import subprocess
import os


PlatformName = subprocess.check_output(["adb shell getprop | grep -e 'bt.name'"])
DeviceName = subprocess.check_output(["adb shell getprop | grep -e '.product.brand'"])
DeviceID = subprocess.check_output(["adb shell getprop | grep -e 'serialno'"])
Version = subprocess.check_output(["adb shell getprop | grep -e 'version.release'"])

print(PlatformName)
print(DeviceName)
print(DeviceID)
print(Version)
</code></pre>
<p>I am getting the following error </p>
<blockquote>
<p>FileNotFoundError: [WinError 2] The system cannot find the file
  specified</p>
</blockquote>
<p>How can I store the output of the command as a variable?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issues here:</p>
<ul>
<li>passing arguments like this (string in a list, with spaces) is really not recommended</li>
<li>passing arguments like this need <code>shell=True</code> for it to have a slight chance to work, and <code>shell=True</code> is known for security issues (and other issues as well, like non-portability)</li>
<li><code>grep</code> is not standard on windows, and the pattern is a regex which means you'd probably have to escape <code>.</code> (<code>"bt\.name"</code>).</li>
<li>when not found <code>grep</code> returns 1 and would make <code>check_output</code> fail.</li>
<li>when found <code>grep</code> returns match(es), and a newline, that you'd have to strip</li>
</ul>
<p>I'd rewrite this:</p>
<pre><code>PlatformName = subprocess.check_output(["adb shell getprop | grep -e 'bt.name'"])
</code></pre>
<p>as:</p>
<pre><code>output = subprocess.check_output(["adb","shell","getprop"])
platform_name = next((line for line in output.decode().splitlines() if "bt.name" in line),"")
</code></pre>
<p>The second line is a "native" version of grep (without regexes). It returns the first occurrence of "bt.line" in the output lines or empty string if not found.</p>
<p>You don't need <code>grep</code> here (the above is not strictly equivalent, as it yields the <em>first</em> occurrence, not <em>all</em> the occurrences but that should be okay on your case). And your clients may not have <code>grep</code> installed on Windows.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hey I got the same problem as you. Sub-process can do what you want even with the <code>shell=False</code>. The trick is the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">communicate()</a> method.</p>
<pre><code>with subprocess.Popen(cmdCode,
                            stdin=subprocess.PIPE,
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE,
                            cwd = workingDir,
                            bufsize=1,
                            universal_newlines = True) as proc:
    #output is stored in proc.stdout
    #errors are stored in proc.stderr
</code></pre>
<p>Now you just need a little function to scan the <code>proc.stdout</code> for the information you need: <code>PlatformName</code>, etc</p>
</div>
<span class="comment-copy">I think you should just separate each piece of your batch command with a comma.</span>
<span class="comment-copy">Check <a href="https://stackoverflow.com/questions/4760215/running-shell-command-from-python-and-capturing-the-output">this question</a> for more info.</span>
<span class="comment-copy">I think you should "native" grep from python... the issue is missing <code>shell=True</code></span>
<span class="comment-copy">@Jean-Fran√ßoisFabre I have added <code>shell=True</code> and i got <code>CompletedProcess(args=["adb, shell getprop | grep -e 'bt.name'"], returncode=1)</code> but it still does not store the output</span>
<span class="comment-copy">Thanks for the answer i tried to run your code but I am getting an AttributeError: <code>'list' object has no attribute 'decode'</code></span>
<span class="comment-copy">sorry, inverted both calls. Can you retry?</span>
<span class="comment-copy">Working like a charm.</span>
