<div class="post-text" itemprop="text">
<p>I have a function which accepts both regular and asynchronous functions (not coroutines, but functions returning coroutines).</p>
<p>Internally it uses <code>asyncio.iscoroutinefunction()</code> <a href="https://docs.python.org/3/library/asyncio-task.html?highlight=iscoroutine#asyncio.iscoroutinefunction" rel="nofollow noreferrer">test</a> to see which type of function it got.</p>
<p>Recently it broke down when I attempted to create a partial async function.</p>
<p>In this demonstration, <code>ptest</code> <strong>is not</strong> recognized as a couroutine function, even if it returns a coroutine, i.e. <code>ptest()</code> <strong>is</strong> a coroutine.</p>
<pre><code>import asyncio
import functools

async def test(arg): pass
print(asyncio.iscoroutinefunction(test))    # True

ptest = functools.partial(test, None)
print(asyncio.iscoroutinefunction(ptest))   # False!!

print(asyncio.iscoroutine(ptest()))         # True
</code></pre>
<p>The problem cause is clear, but the solution is not.</p>
<p>How to dynamically create a partial async func which passes the test?</p>
<p>OR</p>
<p>How to test the func wrapped inside a <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer">partial object</a>?</p>
<p>Either answer would solve the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't make a <code>partial()</code> object pass that test, because the test requires there to be a <code>__code__</code> object attached directly to the object you pass to <code>inspect.iscoroutinefunction()</code>.</p>
<p>You should instead test the function object that <code>partial</code> wraps, accessible via the [<code>partial.func</code> attribute[(<a href="https://docs.python.org/3/library/functools.html#functools.partial.func" rel="nofollow noreferrer">https://docs.python.org/3/library/functools.html#functools.partial.func</a>):</p>
<pre><code>&gt;&gt;&gt; asyncio.iscoroutinefunction(ptest.func)
True
</code></pre>
<p>If you also need to test for <code>partial()</code> objects, then test against <code>functools.partial</code>:</p>
<pre><code>def iscoroutinefunction_or_partial(object):
    if isinstance(object, functools.partial):
        object = object.func
    return inspect.iscoroutinefunction(object)
</code></pre>
</div>
<span class="comment-copy">Thank you. Is the <code>.func</code> attr documented somewhere?</span>
<span class="comment-copy">@VPfB: yes, the <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial()</code> documentation</a> states it exists explicitly; the <i>Roughly equivalent to</i> code shows the attributes that are set.</span>
<span class="comment-copy">This is the link I could not find earlier: <a href="https://docs.python.org/3/library/functools.html#partial-objects" rel="nofollow noreferrer">docs.python.org/3/library/functools.html#partial-objects</a></span>
