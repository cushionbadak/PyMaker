<div class="post-text" itemprop="text">
<p>I have a folder with up to 1000 files and I want to add a random number to each of the files without repeating any number. </p>
<p>My files look like this:</p>
<pre><code>file_a.jpg
file_b.jpg 
file_c.jpg 
file_d.jpg
</code></pre>
<p>and I want them to be like this:</p>
<pre><code>3_file_a.jpg
1_file_b.jpg
4_file_c.jpg
2_file_d.jpg
</code></pre>
<p>This is my code snippet so far, but using random.sample() seems not to be the right solution. At the moment it creates a list of random variables, which are non repeating, but it creates a new list for each filename. Instead of just one non-repeating number per filename.
Might be a dumb question, but I am new to python and couldn't figure it out yet how to do this properly.</p>
<pre><code>import os
from os import rename
import random

os.chdir('C:/Users/......')

for f in os.listdir():  
   file_name, file_ext = os.path.splitext(f)    
   #file_name = str(random.sample(range(1000), 1)) + '_' + file_name 
   print(file_name) 
   new_name = '{}{}'.format(file_name, file_ext)    
   os.rename(f, new_name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can find the files in your desired directory, and then shuffle a list of indices to pair with the files:</p>
<pre><code>import os, random
_files = os.listdir()
vals = list(range(1, len(_files)+1))
random.shuffle(vals)
new_files = [f'{a}_{b}' for a, b in zip(vals, _files)]
</code></pre>
<p>Sample output (running on my machine):</p>
<pre><code>['24_factorial.s', '233_familial.txt', '15_file', '96_filename.csv', '114_filename.txt', '190_filename1.csv', '336_fingerprint.txt', '245_flask_essentials_testing', '182_full_compression.py', '240_full_solution_timings.py', '104_full_timings.py']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you create a list to store the used <code>randint</code>s you can then use a <code>while</code> loop to ensure you get no repeats</p>
<pre><code>import os
import random

used_random = []

os.chdir('./stack_overflow/test')
for filename in os.listdir():
    n = random.randint(1, len(os.listdir()))
    while n in used_random:
        n = random.randint(1, len(os.listdir()))
    used_random.append(n)
    os.rename(filename, f"{n}_{filename}")
</code></pre>
<p>Before:</p>
<blockquote>
<pre><code>(xenial)vash@localhost:~/python/stack_overflow/test$ ls
file_a.py  file_b.py  file_c.py  file_d.py  file_e.py
</code></pre>
</blockquote>
<p>After:</p>
<blockquote>
<pre><code>(xenial)vash@localhost:~/python/stack_overflow/test$ ls
1_file_b.py  2_file_e.py  3_file_a.py  4_file_c.py  5_file_d.py
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Why not <code>for i, f in enumerate(os.listdir()):</code>. That way you have both and it's pythonic. Do you want this numbers to be in a random order?</span>
<span class="comment-copy">You could use <code>uuid</code> (<a href="https://docs.python.org/3/library/uuid.html#uuid.uuid4" rel="nofollow noreferrer">Universally Unique IDentifier</a>) for the random number. <code>import uuid</code> and then something like <code>new_name = '{}_{}'.format(uuid.uuid4(), f)</code>.</span>
