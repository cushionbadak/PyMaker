<div class="post-text" itemprop="text">
<p>The python PEP 8 linter doesn't like this:</p>
<pre><code>assert type(a) == type(b)
</code></pre>
<p>It tells me to use "isinstance()" instead. But to use <code>isinstance</code> I would have to do something like</p>
<pre><code>assert isinstance(a, type(b)) and isinstance(b, type(a))
</code></pre>
<p>which seems much more unwiedly, and I don't really see the point.</p>
<p>Is the linter being wise in some way that I can't see? Or am I being wise in some way the linter can't see?</p>
</div>
<div class="post-text" itemprop="text">
<p>From context added in the comments:</p>
<blockquote>
<p>according to my program's logic, one should have <code>type(a) == type(b)</code> at this point in the code, and I just want to assert that to see that everything is running smoothly</p>
</blockquote>
<p>In this context, you should just ignore the linter because it's not suggesting anything useful to you.  E271 was intended to warn people about issues via type-checks such as:</p>
<pre><code>if type(a) == A:
    ...
</code></pre>
<p>The example above may be accidentally bugging the logical flow, by neglecting to consider the possibility that <code>a</code> is an instance of a subclass of <code>A</code>.</p>
</div>
<span class="comment-copy">What is the context?  Is this in a test case? Why do want to assert that <code>a</code> and <code>b</code> have the same type, and intentionally break duck-typing?</span>
<span class="comment-copy">From my point of view, if you want to check/assert that two vars have the same <code>type</code> then that usage is perfectly valid. The other, larger, question is that what type means in a dynamically typed language like python and why you need to check that.</span>
<span class="comment-copy">according to my program's logic, one should have <code>type(a) == type(b)</code> at this point in the code, and I just want to assert that to see that everything is running smoothly---this is not some library where these vars might be subclassed, etc, just my own standalone piece of code</span>
<span class="comment-copy">Note that <code>assert</code> is meant for debugging purposes or tests. See the <a href="https://docs.python.org/3/reference/simple_stmts.html#grammar-token-assert_stmt" rel="nofollow noreferrer">documentation</a>. If you actually want to test types, use try...except blocks.</span>
<span class="comment-copy">In any way, consider using <code>type(a) is type(b)</code> (with the <code>is</code> operator).</span>
<span class="comment-copy">Yes it's what I suspected but <code>type(a) == A</code> where <code>A</code> is a type is something the linter could distinguish from <code>type(a) == type(b)</code> where <code>a</code> and <code>b</code> are vars. So it seems the linter isn't being as smart as it could (should?) be.</span>
<span class="comment-copy">In my experience Python linters are blunt tools and implemented fairly naively.</span>
<span class="comment-copy">Any comment from the downvoter?</span>
