<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3940128/how-can-i-reverse-a-list-in-python">How can I reverse a list in Python?</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>I have the following piece of code in python: </p>
<pre><code>results = {}
....
results = sorted([(v, k) for (k, v) in results.items()])
....
return results[:limit]
</code></pre>
<p><code>results</code> contains distances that are sorted in such a way the smaller distances are in the top of the list</p>
<p>Is there a way to sort this list in such a way the higher distances are in the top of <code>results</code>?
 Or, if we don't reverse the items is there a way to get the last items of <code>results</code> instead of the top results using <code>return results[:limit]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>To answer the second question you ask, since @Ruzihm already answered the first, you can get the last items of <code>results</code> with:</p>
<pre><code>return results[-limit:]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the optional <code>reverse</code> parameter in the <code>sorted</code> function:</p>
<pre><code>results= sorted([(v, k) for (k, v) in results.items()], reverse=True)
</code></pre>
</div>
<span class="comment-copy">you probably want <code>reverse=True</code> or/and <code>heapq</code> module</span>
<span class="comment-copy">Do you care only for the top (or bottomly) ranked item? If so, you should look into using heaps (with the <a href="https://docs.python.org/3/library/heapq.html?highlight=heapq" rel="nofollow noreferrer">heapq</a> library).</span>
<span class="comment-copy">Is it necessary to change the structure of <code>results</code>? If not, you can utilize the <code>key=</code> parameter of <code>sorted</code> to accomplish the same: <code>results = sorted(results.items(), key=lambda n: n[1], reverse=False)</code></span>
<span class="comment-copy">Thank you a lot for your answer :)</span>
<span class="comment-copy">if this is the answer, then it's a super-classic duplicate you should refrain answering to</span>
<span class="comment-copy">If you can find a suitable duplicate, please do link it instead of telling other people to do so.</span>
<span class="comment-copy">please don't take it that way. We're not sure if this is a duplicate or not right now. It's just unclear.</span>
<span class="comment-copy">Thank you a lot for your answer :)</span>
