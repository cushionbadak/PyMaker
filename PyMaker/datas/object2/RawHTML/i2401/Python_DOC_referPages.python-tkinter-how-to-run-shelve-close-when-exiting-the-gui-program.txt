<div class="post-text" itemprop="text">
<p>I have a simple gui(tkinter) program that writes data to a file. Uses shelve.
How to run shelve.close () when I want to disable the program?</p>
</div>
<div class="post-text" itemprop="text">
<p>The canonical way of closing something <em>no-matter-what-happens</em> is to use context managers:</p>
<pre><code>with shelve.open(...) as myshelve:
    # ALL YOUR CODE HERE
    root.mainloop()
</code></pre>
<p>This guarantees that shelve.close() will be called, even when you get any exceptions in the code.</p>
<p>It is also the <a href="https://docs.python.org/3/library/shelve.html#shelve.open" rel="nofollow noreferrer">recommended way in the documentation</a>:</p>
<blockquote>
<p>Do not rely on the shelf being closed automatically; always call <code>close()</code> explicitly when you donâ€™t need it any more, or <strong>use <code>shelve.open()</code> as a context manager</strong>.</p>
</blockquote>
<p>Alternatively, since you're using tkinter, you can use the <code>WM_DELETE_WINDOW</code> event:</p>
<pre><code>import tkinter as tk

root = tk.Tk()

def when_window_is_closed():
    myshelve.close()
    root.destroy()

root.protocol("WM_DELETE_WINDOW", when_window_is_closed)
root.mainloop()
</code></pre>
<p>This method is worse because it depends on tk firing the event. Use the context manager method instead to cover all grounds.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>mainloop</code> call stops when your GUI stops. If you want to run some code after the GUI exits just put it after <code>mainloop()</code>. </p>
<pre><code>root.mainloop() # starts the GUI and waits for the GUI to close
shelve.close() # do something after the GUI closes
</code></pre>
</div>
<span class="comment-copy">Hi @MrKorni, could you please add more detail to your question? Like the code you've written so far? That would be helpful for us to help you out!</span>
<span class="comment-copy">The code is long and in a different language</span>
<span class="comment-copy">What does it mean in a different language? Please consider that your question maybe helpful to others as well!</span>
<span class="comment-copy">Okay, I'm sorry. However, I believe that I have at least as many details as I need to answer.</span>
<span class="comment-copy">Do I need to "import tkinter as tk"? Can I "from tkinter import *"?</span>
<span class="comment-copy">@MrKorni you can do whatever you want. I prefer to use <code>import tkinter as tk</code> to prevent <b>global namespace polution</b> - that way all names from tkinter are contained inside the <code>tk</code> module object, instead of scattered in the global namespace.</span>
