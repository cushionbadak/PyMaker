<div class="post-text" itemprop="text">
<p>Am new to python and I have been trying to solve this problem but it does not seem to work as intended. your help is highly appreciated:</p>
<p>Given two numbers X and Y, write a function that:</p>
<ul>
<li>returns even numbers between X and Y, if X is greater than Y </li>
<li>else returns odd numbers between x and y</li>
</ul>
<p>.</p>
<pre><code>def number(x,y):
    if x &gt; y:
        for i in range(x,y):
            if i%2 == 0:
                list = []
        return list.append[i]
    else:
        for i in range(x,y):
            if i%2 == 1:
                list = []
        return list.append[i]

print(number(10,2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this code it's working as per your need.</p>
<pre><code>def number(x,y):
    num= []
    if x &gt; y:
        for i in range(y,x):
            if i%2 == 0:
                num.append(i)
    else:
        for i in range(x,y):
            if i%2 == 1:
                num.append(i)
    return num

print(number(2,10))
print(number(10,2))
</code></pre>
<p>The outputs are:</p>
<pre><code>[3, 5, 7, 9]
[2, 4, 6, 8]
</code></pre>
<p>Let me know if this doesn't serve your purpose.</p>
</div>
<div class="post-text" itemprop="text">
<p>And it is done. Basically if <code>x &gt; y</code>, you need to switch the first <code>range</code>. You append the items normally(using <code>()</code> instead of <code>[]</code>), and then return the full list, got it?</p>
<pre><code>    def number(x,y):
        list = []
        if x &gt; y:
            for i in range(y,x):
                if i%2 == 0:
                    list.append(i)
        else:
            for i in range(x,y):
                if i%2 == 1:                
                    list.append(i)

        return list

    print(number(10,2))
</code></pre>
<blockquote>
<p>Working sample: <a href="https://py3.codeskulptor.org/#user302_nwBq00w56n_1.py" rel="nofollow noreferrer">https://py3.codeskulptor.org/#user302_nwBq00w56n_1.py</a></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Instead of testing for oddness/evenness all the time, use <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer"> range(start,stop[,step])  with a step of 2</a> starting with a (corrected, known) odd/even number:</p>
<pre><code>def number(x,y):
    if x &gt; y:
        if y%2 == 1: # y is smaller &amp;&amp; odd
            y += 1 # make even
        return list(range(y,x,2)) # x is &gt; y - start from y to x
    else: # this is strictly not needed - but more verbose intention-wise
        if x%2 == 0: # is even
            x += 1 # make odd
        return list(range(x,y,2))


print(number(10,32))
print(number(10,2))
</code></pre>
<ul>
<li>You need to also switch <code>x</code> and <code>y</code> if <code>x &gt; y</code></li>
<li>you do not need to iterate a range and add its element to a <code>list</code> iteratively - simply stuff the range-sequence into <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer">the <code>list(sequence)</code> constructor</a> and return it</li>
</ul>
<p>Output:</p>
<pre><code>[11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31]
[2, 4, 6, 8]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's so easy to do, and there are several ways to do what do you want, so i show you two ways to do that, first an understandable way and second an easy way ok let's start:-</p>
<blockquote>
<p>First example</p>
</blockquote>
<pre><code>def number(x,y):

    list = []  #firstly create a list

    if x &gt; y:  #if x was greater than y
        for num in range(y, x): # a loop for searching between them
            if(num % 2 == 0):   # if the number was even add it to list
                list.append(num)
    elif y &gt; x: #if y was greater than x
        for num in range(x, y): # a loop for searching between them
            if(num % 2 != 0):   # if the number was not even add it to list
                list.append(num)

    return list

print(number(10, 20))
print(number(20, 10))

#[11, 13, 15, 17, 19]
#[10, 12, 14, 16, 18]
</code></pre>
<blockquote>
<p>Second example</p>
</blockquote>
<pre><code>number = lambda x, y : [n for n in range(y, x) if n%2 == 0] if x &gt; y else [n for n in range(x, y) if n%2 != 0]

print(number(10, 20))
print(number(20, 10))

#[11, 13, 15, 17, 19]
#[10, 12, 14, 16, 18]
</code></pre>
<p><strong>Note :</strong> But be sure that in both of my answers the <code>x</code> number is inclusive(exists in searching function) and the <code>y</code> number is exclusive, so if you wanted to make both of them inclusive so make loops <code>...(x, y+1)...</code> and if you wanted to make both of them exclusive just change loops to <code>...(x+1, y)...</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Knowing that <code>2 % 2 == 0</code> we then can just use <code>if not 2 % 2</code> for evens since <code>not 0</code> will evaluate to true, here it is with comprehension and in extended form    </p>
<pre><code>def something(x, y):
    if x &gt; y:
        l = [i for i in range(y, x) if not i % 2]
    else:
        l = [i for i in range(x, y) if i % 2]
    return l

print(something(10, 2))
print(something(2, 10))
</code></pre>
<blockquote>
<pre><code>~/python/stack$ python3.7 sum.py 
[2, 4, 6, 8]
[3, 5, 7, 9]
</code></pre>
</blockquote>
<p>Full loop:</p>
<pre><code>def something(x, y):
    l = []
    if x &gt; y:
        for i in range(y, x):
            if not i % 2:
                l.append(i)
    else:
        for i in range(x, y):
            if i %2:
                l.append(i)
    return l
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here in this i use the list comprehensions.list comprehension is a easy and readable technique in python.In this i include both x and y</p>
<pre><code>def fun(x,y):
    if x&gt;y:
        l=[i for i in range(y,x-1) if i%2==0]
        return l.reverse()
    else:
        l=[i for i in range(x,y+1) if i%2!=0]
    return l
</code></pre>
</div>
<span class="comment-copy">Your code is almost there...let me give it a look</span>
<span class="comment-copy"><code>return list.append[i]</code>.  Lots to unpack here.  To call a function you need to use parenthesis.  <code>list.append</code> returns <code>None</code>, so this will too.  Finally, this will return the first time you add something to your list.  You instead want to return after you've finished adding items to the list.  You also shouldn't use the name <code>list</code>, as it already has a meaning.</span>
<span class="comment-copy">Please make sure the indentation is correct. You may be creating empty lists in the wrong places (in addition to some syntactic errors)</span>
<span class="comment-copy">@PatrickArtner Thanks for pointing it out.</span>
<span class="comment-copy">I write a similar code. I didn't post it because you did first. So I upvote your answer. He should accept your answer.</span>
<span class="comment-copy">Thank you @ThexPhi</span>
<span class="comment-copy">@Hackerman thanks alot. it worked. problem was with indentation and declaring my list at the wrong place</span>
<span class="comment-copy">No problem @Evans ...I fixed the url, so you can see the code working live.</span>
<span class="comment-copy">Please explain also in words why you wrote the function like that. This will be helpful to others for understanding why this is a better way.</span>
