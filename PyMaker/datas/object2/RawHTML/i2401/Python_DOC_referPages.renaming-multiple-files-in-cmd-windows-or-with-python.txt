<div class="post-text" itemprop="text">
<p>I'm trying to rename a list of <strong>470</strong> files with the name <code>p01</code>, <code>p02</code> etc to a specific name for each file. So I've got a list (.txt or .xls) in the correct order for those filenames, but I'm unable to figure out a for loop to rename this in a batch. <br/>
I've checked other threads on this forum and Google, but unable to get the result i need. <br/>
Hopefully someone has a solution for this... Python or cmd window are both possible.</p>
<p>So in short:</p>
<blockquote>
<p>p01.pdf --&gt; Blabla.pdf <br/></p>
<p>p02.pdf --&gt; Othertext.pdf <br/>
  ....</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>For a batch solution, create text file and add the names seperated by comma and let's call it something like <code>filenames.txt</code>:</p>
<pre><code>p01.pdf,Blabla.pdf
p02.pdf,Othertext.pdf
...
</code></pre>
<p>Then do as a batch file:</p>
<pre><code>for /f "tokens=1,2 delims=," %%i in (filenames.txt) do ren "%%i" "%%j"
</code></pre>
<p>or directly from console (cmd.exe) This is the exact same, we just use a single <code>%</code> instead of double <code>%%</code></p>
<pre><code>for /f "tokens=1,2 delims=," %i in (filenames.txt) do ren "%i" "%j"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Python 3</h1>
<ol>
<li><p>First export your old and new filenames to a <code>filenames.txt</code> file. Its content should be formatted like <code>old_filename.pdf,new_filename.pdf</code>:</p>
<pre><code>p01.pdf,blabla.pdf
p02.pdf,foobar.pdf
</code></pre></li>
<li><p>Then create a python file <code>rename.py</code> in the <strong>same</strong> directory.</p>
<p>The script reads line per line from that file and uses <a href="https://docs.python.org/3/library/os.html#os.rename" rel="nofollow noreferrer"><code>os.rename(src, dest)</code></a> to rename your files accordingly:</p>
<pre><code>import os

with open("filenames.txt", mode="r") as open_file:
    filenames = open_file.readlines()

for filename in filenames:
    separator_index = filename.find(",")
    old_filename = filename[:separator_index]
    new_filename = filename[separator_index + 1:] # +1 to exclude the comma from the new filename

    os.rename(old_filename, new_filename)
</code></pre></li>
<li><p>Now, to execute your script, open cmd.exe in that directory and type:</p>
<pre><code>$ python3 rename.py
</code></pre></li>
</ol>
<h3>Different Paths</h3>
<p>If your files aren't all in the same directory just add their paths to the <code>filenames.txt</code> like so:</p>
<pre><code>path/to/old_filename.pdf,path/to/new_filename.pdf
</code></pre>
<hr/>
<p><strong>Pro-Tip:</strong> Navigate to that folder in Windows Explorer where all the files are, press <kbd>CTRL</kbd> + <kbd>L</kbd> to highlight the navigation bar, write <code>cmd</code> and confirm by pressing <kbd>ENTER</kbd>. <code>cmd.exe</code> should now directly open with the correct path to your folder already set.  </p>
</div>
<span class="comment-copy">Does your list also contain the old name or just the new ones in correct order?</span>
<span class="comment-copy">Whatever works, I've got an excel with the old and new name next to eacher other in the correct order</span>
<span class="comment-copy">I've used cmd to create a list of the files and after used Excel to put those in the correct order. Based on a list of names I've put to next to the correct <code>p0x</code>, thats the reason it's currently in Excel. But it can be exported to any list</span>
<span class="comment-copy">You cannot brute force an excel file with batch. you need text based file, i.e <code>txt</code> or <code>csv</code></span>
<span class="comment-copy"><code>for filename in os.listdir('path/to/files'):</code> will loop through all the files in your directory. Then you can use if to check the old file name and rename it.</span>
<span class="comment-copy">Thanks for your reply! But when I run this, I get the following error: <code>%%i was unexpected at this time</code>  filenames.txt is in the same folder and looks exactly like you mentioned.</span>
<span class="comment-copy">Did you run it from cmdline or batch file seems you ran the batch option (first script line) from cmdline, that will not work from cmdline as it needs only one <code>%</code> See complete answer please.</span>
<span class="comment-copy">sorry I forgot to refresh for commenting and didn't notice the edit.</span>
