<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/51505826/how-come-i-can-add-the-boolean-value-false-but-not-true-in-a-set-in-python">How come I can add the boolean value False but not True in a set in Python? [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/22275027/using-true-false-as-keys-how-why-does-this-work">Using True/False as keys - how/why does this work?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/8169001/why-is-bool-a-subclass-of-int">Why is bool a subclass of int?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Can anyone explain this behaviour of python dictionaries?</p>
<pre><code>d = {}
d[True] = 'Magic'
d[1] = 'Cool'
d[1.0] = 'Hello'
print(d)

# {True: 'Hello'}
</code></pre>
<p>Why does it not print all the other (key, value) pairs?</p>
<p>Why does True, 1 and 1.0 is evaluated to be the same?</p>
</div>
<div class="post-text" itemprop="text">
<p>the <a href="https://docs.python.org/3/library/functions.html?highlight=hash#hash" rel="nofollow noreferrer"><code>hash</code></a> of the 3 items <code>1, 1.0, True</code> is the same (it equals <code>1</code>). that's what python uses as the key for  dictionaries if there are no collisions. and as <code>1 == 1.0 == True</code> is also <code>True</code> there are no collisions.</p>
<p>here are more details about the <a href="https://fengsp.github.io/blog/2017/3/python-dictionary/" rel="nofollow noreferrer">old implementation</a> of python dictionaries. the new implementation does things along those lines (but preserves the order).</p>
</div>
<span class="comment-copy">@Aran-Fey but the 1.0 part isn't addressed there right?</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre No, but is that really necessary? The answers do a good enough job explaining that sets (and dicts) eliminate items that hash and compare equal.</span>
<span class="comment-copy">I'd say it's a necessary duplicate, then. Because of the confusion that could exist because <code>bool</code> is a subclass of <code>int</code>, while <code>float</code> isn't.. yes this is a duplicate, but I'm not going to fight to delete it. Useful dupe. damn I edited <i>after</i> closure :)</span>
<span class="comment-copy">yes!! hashes are equal AND values are equal.</span>
<span class="comment-copy">You can simply try: <code>True.__hash__()</code></span>
<span class="comment-copy"><code>bool</code> is a subclass of <code>int</code>, and <code>True == 1</code> and <code>False == 0</code> is very much deliberate.</span>
