<div class="post-text" itemprop="text">
<p>When creating a virtual environment, I run:</p>
<pre><code>python3 -m venv env
</code></pre>
<p>I understand that <code>-m</code> <a href="https://docs.python.org/2/using/cmdline.html#cmdoption-m" rel="nofollow noreferrer">executes a module</a> (<code>venv</code> in this case). However, what does the <code>-m</code> flag actually stand for?</p>
<p>Is it <code>-m</code> for <strong>module</strong>, or <code>-m</code> for <strong><code>__main__</code></strong>?</p>
<p>I couldn't find an unambiguous explanation. Here are some resources I investigated:</p>
<ul>
<li><a href="https://docs.python.org/2/using/cmdline.html#cmdoption-m" rel="nofollow noreferrer">https://docs.python.org/2/using/cmdline.html#cmdoption-m</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0547/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0547/</a></li>
<li><a href="https://stackoverflow.com/questions/22241420/execution-of-python-code-with-m-option-or-not">Execution of Python code with -m option or not</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>in 
 section 1.1.1
 It clearly says <code>-m</code> is the module name, <a href="https://docs.python.org/3.7/using/cmdline.html" rel="nofollow noreferrer">here</a>. </p>
<p>Quoting from the docs :</p>
<p><em>"since the argument is a module name, you must not give a file extension (.py). The module-name should be a valid Python module name"</em> </p>
<p>Although <code>-m</code> is arbitrary as in the backend It is an argparser doing all the work.   </p>
<p>When called with -m module-name, the given module is located on the Python module path and executed as a script</p>
<p><em>Package names are also permitted. When a package name is supplied instead of a normal module, the interpreter will execute <code>&lt;pkg&gt;.__main__</code></em>  And I guess the <code>main</code> also starting with 'm' is a coincidence.</p>
</div>
<div class="post-text" itemprop="text">
<p>It runs the module following <code>-m</code>. See <a href="https://docs.python.org/3/using/cmdline.html#interface-options" rel="nofollow noreferrer">the official documentation</a></p>
<p>The documentation says <code>-m &lt;module-name&gt;</code>, as well as "Since the argument is a module name...", so it makes sense to assume that "m" stands for module. </p>
</div>
<span class="comment-copy">I always liked to think of it as <code>-m</code> for <b>make</b>, but I know that's incorrect ; )</span>
<span class="comment-copy">-m is for module</span>
<span class="comment-copy">Do you have any resources that state this clearly @VineethSai? If so, please post it and I'll accept it as an answer.</span>
<span class="comment-copy">in section 1.1.1 It clearly says -m is module name <a href="https://docs.python.org/2/using/cmdline.html" rel="nofollow noreferrer">docs.python.org/2/using/cmdline.html</a></span>
<span class="comment-copy">It doesn't stand for anything.</span>
<span class="comment-copy">Hei, I don't think that the docs you linked clearly explain that this is what <code>-m</code> stands for. I am still okay accepting your answer, but could you improve it by linking this sentence instead: <code>When called with -m module-name, the given module is located on the Python module path and executed as a script.</code> and using a more up-to-date Python documentation: <a href="https://docs.python.org/3.7/using/cmdline.html" rel="nofollow noreferrer">docs.python.org/3.7/using/cmdline.html</a></span>
<span class="comment-copy">Updated it. Thanks</span>
<span class="comment-copy">The question is "What does the <code>m</code> stand for", not "What does the <code>-m</code> flag do".</span>
