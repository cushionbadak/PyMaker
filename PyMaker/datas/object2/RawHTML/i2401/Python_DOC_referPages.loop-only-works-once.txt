<div class="post-text" itemprop="text">
<p>Before you mark this as duplicate, please hear me out.</p>
<p>My code needs a lot of inputs at the terminal. It needs to process two (or more) trajectory files (.gro, separated by a comma). Here is what the input at the terminal looks like:</p>
<blockquote>
<p>script -c 'python script.py -f traj1.gro,traj2.gro -i 1 -s 30 ... (other info)' logfile.log </p>
</blockquote>
<p>Inside my script, to separate the two traj files that come after the '-f' , I use this:</p>
<pre><code>files = []

...

for i in sys.argv[1:]:
    if i == '-f':
        file = sys.argv[sys.argv.index('-f')+1] #input filenames after -f
        for j in file.split(','):
            global files
            files.append(j)

for s in range(len(files)):
    file = ''
    print s
    print files[s]
    file = files[s]

    ... (rest of the code inside this branch)
</code></pre>
<p>Now the code is supposed to go through each traj file one at a time. </p>
<p>At first, it works fine. The 1st file was processed, and it printed "0" and the file name. But when the processing was done, it printed:</p>
<blockquote>
<p>1</p>
<p>Traceback (most recent call last):</p>
<p>File "script.py", line 462, in </p>
<p>file = files[s]</p>
<p>IndexError: list index out of range</p>
<p>Script done, file is logfile.log</p>
</blockquote>
<p>How is it out of range when the <code>len(files)</code> is 2 ? Also it clearly printed "1" so we know that the <code>for s in range(len(files))</code> line worked not only once but for a second time, it just didn't execute the rest of the block, and it also did not print the 2nd file name (index 1).</p>
</div>
<div class="post-text" itemprop="text">
<p>If the <code>for</code> is causing you trouble (with the <code>len</code> and the <code>range</code>), why not simply do:</p>
<pre><code>for file in files:
    print file
</code></pre>
<p>Much simpler, much cleaner, and it may give you a better indication as to what exactly is wrong.</p>
<p>I suspect that you are altering the <code>s</code> variable (or potentially the <code>files</code> variable) later on in your code. Also, may I suggest using <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a>?</p>
</div>
<div class="post-text" itemprop="text">
<p>I removed the global assignment (besides making it python 3) and tested with a shorter test command <code>python script.py -f traj1.gro,traj2.gro -i 1 -s 30</code>: </p>
<pre><code>import sys
files = []
#global files

for i in sys.argv[1:]:
    if i == '-f':
        file = sys.argv[sys.argv.index('-f')+1] #input filenames after -f
        for j in file.split(','):
            files.append(j)

for s in range(len(files)):
    file = ''
    print(s)
    print(files[s])
    file = files[s]
</code></pre>
<p>It spitted out:</p>
<pre><code>0
traj1.gro
1
traj2.gro
</code></pre>
<p>I would recommend not using system names like file and files for variables</p>
</div>
<span class="comment-copy">Did you try printing <code>len(files)</code> before going into that <code>for</code> loop?</span>
<span class="comment-copy">@Rafalon it says 2</span>
<span class="comment-copy">Is there any chance that in the "<i>rest of the code inside this branch</i>" you do anything that can change the content of <code>files</code>? Just print <code>len(files)</code> <i>inside</i> the loop, before <code>print s</code>.</span>
<span class="comment-copy">It is always better to iterate through the list directly: <code>for file in files: ...</code></span>
<span class="comment-copy">Please post a code that can reproduce the issue. We cannot figure it out without the problematic part. More likely the issue is held in <code>rest of the code</code>. There is probably a short way to reproduce it without pasting the whole code. You can check how to write a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">I don't think he's altering <code>s</code> as it prints <code>1</code> which is what it should be (<code>0</code> then <code>1</code>). Instead I think he's altering <code>files</code>.</span>
<span class="comment-copy">Nope. <code>file</code> is (I believe) a file name. You can open the file, alter it, delete it, or anything. The <code>file</code> variable will still contain the file name. Editing the <code>files</code> array is a completely different story, and this should not be necessary.</span>
<span class="comment-copy">I never said it was necessary, I said I suspected OP did it (maybe not on purpose). Either clearing it or removing an element from it but still it appears that before the loop it contains 2 elements and on second iteration it contains less than 2 elements</span>
<span class="comment-copy">Very kind, but usually poor questions lead to poor answers. I'd wait for the OP to work it out a little more (like being able to reproduce) before suggesting debugging tips.</span>
<span class="comment-copy">I just did that, it's much simpler. Thanks!</span>
<span class="comment-copy">I just checked everything, and realized that I globalized "files". There were some identical "files" words inside the big block of code, which I changed to "filess" or something. Thanks!</span>
