<div class="post-text" itemprop="text">
<p>Is there the possibility in Python 3 to distiguish the item lookups Foo[(1,2)] and Foo[1,2]? Since in</p>
<pre><code>class Foo:
    def __getitem__(self, key):
        print(type(key), key)

foo = Foo()
foo[(1,2)]
foo[1,2]
</code></pre>
<p>both produce the same output.</p>
<pre><code>&lt;class 'tuple'&gt; (1, 2)
</code></pre>
<hr/>
<p>Edit: On why I want that: I have a set of Classes that are "parameterized" and I wanted to implent a factory for those classes. e.g. <code>__call__(*arg)</code> to instanciate the class with the parameters inferred from <code>*arg</code> and <code>__getitem__</code> to return the class that with the parameters passed via the key.</p>
<p>I hoped that <code>__getitem__</code> might be used similar to <code>__call__</code> in the way that you can distinguish <code>foo[(1,2)]</code> from <code>foo[1,2]</code> similar to the way you can distinguish <code>foo((1,2))</code> from <code>foo(1,2)</code> .</p>
</div>
<div class="post-text" itemprop="text">
<p>Not easily. Although the source is <a href="https://docs.python.org/3/library/tokenize.html" rel="nofollow noreferrer">tokenized</a> differently, the code is eventually parsed the same way:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; ast.dump(ast.parse('foo[(1,2)]')) == ast.dump(ast.parse('foo[1,2]'))
True
&gt;&gt;&gt; ast.dump(ast.parse('foo[(1,2)]'))
"Module(body=[Expr(value=Subscript(value=Name(id='foo', ctx=Load()), slice=Index(value=Tuple(elts=[Num(n=1), Num(n=2)], ctx=Load())), ctx=Load()))])"
</code></pre>
<p>There are two ways I can think of to detect the difference, both insane:</p>
<ul>
<li>Get in before the parser does, by <a href="https://docs.python.org/3/library/codecs.html" rel="nofollow noreferrer">registering a custom codec</a> to use in the coding declaration.</li>
<li>Use <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer">introspection</a> to find the original source code, and check in there for the parens.</li>
</ul>
<p>A related question concerning the <a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow noreferrer">grammar</a>: <a href="https://stackoverflow.com/q/16017811/674039">When are parentheses required around a tuple?</a></p>
</div>
<span class="comment-copy">No, they are exactly equivalent. See what happens: <code>x = 1,2</code> and <code>y = (1,2)</code> and then you'll see, they are the same. You'd have to do some serious code introspection to do this, and it doesn't make any sense. <i>Why</i> do you want to distinguish these in the first place?</span>
<span class="comment-copy">It's the comma <code>,</code> that makes a tuple, the parenthesis are actually useless. <code>1,2</code> is the same as <code>(1,2)</code>. It's just more readable.  Note however that you could distinguish between <code>[1, 2]</code> and <code>[[1,2]]</code>.</span>
<span class="comment-copy">I wanted to get two different ways to call an object (see my edit).</span>
<span class="comment-copy">I see that is unfortunate... I would prefer that <b>getitem</b> would have simlar properties to <b>call</b></span>
<span class="comment-copy">Any comment from the downvoter?</span>
