<div class="post-text" itemprop="text">
<p>Sometimes when I use a for loop to iterate through lines of a file, I get each letter separately instead of each line. Can someone explain why that is?</p>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer">iter()</a> and <a href="https://docs.python.org/3/library/stdtypes.html#typeiter" rel="nofollow noreferrer">Iterator Types</a></p>
<pre><code>for a in something:
    pass 
</code></pre>
<p>If <code>something</code>s type is a itereable, <code>a</code> will take all values of your iterable in turn. What exactly <code>a</code> becomes is hidden inside the <code>__iter__(self):</code> implementation of the object you are iterating over (afaik). </p>
<ul>
<li>If you iterate over a <code>list</code>, it will present you with all values in turns.</li>
<li>If you iterate over a <code>dict</code>, it will present you with all <code>dict.keys()</code> in turns.</li>
<li>If you iterate over a <code>string</code>, it will present you each character in turn.</li>
</ul>
<p>Generators and sequences also provide iterating over, see <a href="https://stackoverflow.com/questions/1756096/understanding-generators-in-python">Understanding generators in Python</a> and <a href="https://docs.python.org/3/library/stdtypes.html#typesseq" rel="nofollow noreferrer">Sequence Types</a> </p>
<p>If you iterate over a file, you will get (textfile, not binary) it line by line, unless you call other methods on the file first ():</p>
<p>Demodata:</p>
<pre><code>with open("f.txt","w") as f:
    f.write("""Some Text
Some text after a newline.
More text in a new line.""")
</code></pre>
<p>Iterate of file using it as iterable:</p>
<pre><code>with open("f.txt","r") as r:
    for c in r: # returns each single line including \n (thats the way next() of file works
        print (c) # appends another \n due to default end='\n' 
print("-"*30)
</code></pre>
<p>Output:</p>
<pre><code>Some Text

Some text after a newline.

More text in a new line.
------------------------------
</code></pre>
<hr/>
<p>Iterate over file.read():</p>
<pre><code>with open("f.txt","r") as r:
    t = r.read() # returns a single string of the whole files content
    for c in t:  # you iterate characterwise over a string!
        print (c)
print("-"*30)
</code></pre>
<p>Output:</p>
<pre><code>S
o
m
e

[... snipped ...]

l
i
n
e
.
------------------------------
</code></pre>
<hr/>
<p>Iterate over file using readline():</p>
<pre><code>with open("f.txt","r") as r:
    for c in r.readline(): # returns only the first line as string and iterates over this string
        print (c)          # the other lines are omitted!
print("-"*30)
</code></pre>
<p>Output:</p>
<pre><code>S
o
m
e

T
e
x
t

------------------------------
</code></pre>
<hr/>
<p>Iterate over file using readlines():</p>
<pre><code>with open("f.txt","r") as r:
    for c in r.readlines(): # returns a list of strings
        print (c)  # appends another \n due to default end='\n' 
print("-"*30)
</code></pre>
<p>Output:</p>
<pre><code>Some Text

Some text after a newline.

More text in a new line.
------------------------------
</code></pre>
<hr/>
<p>Iterage over binary file:</p>
<pre><code>with open("f.bin","wb") as f:
    f.write(b"294827523")
    f.write(b"2927523")
    f.write(b"-27523")
    f.write(b"\n-27523")

with open("f.bin","rb") as r:
    for b in r:
        print (b)
</code></pre>
<p>Output:</p>
<pre><code>b'2948275232927523-27523\n'
b'-27523'
</code></pre>
</div>
<span class="comment-copy">Can you show the file you're reading and the code you're using to read it?</span>
<span class="comment-copy">Thanks this was really helpful!</span>
