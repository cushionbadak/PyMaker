<div class="post-text" itemprop="text">
<p>Hi: I would like load some 2400 images from a folder into python 3.6 for Neural Networks, the following code works, however, it loads images in its original size, which is (2443, 320, 400, 3), after converting into an array. How do I resize it to 64x96? so it is (2443, 64, 96, 3) and less of a load on memory. Separately, how do I do it using parallel processing, so it is efficient.</p>
<p>Thank you!</p>
<pre><code>IMAGE_PATH = 'drive/xyz/data/'
file_paths = glob.glob(path.join(IMAGE_PATH, '*.gif'))

# Load the images
images = [misc.imread(path) for path in file_paths]
images = np.asarray(images)
</code></pre>
<p>Inspired by this <a href="https://stackoverflow.com/questions/273946/how-do-i-resize-an-image-using-pil-and-maintain-its-aspect-ratio?noredirect=1&amp;lq=1">link</a>, I tried to do the following:</p>
<pre><code>from PIL import Image

basewidth = 96
IMAGE_PATH = 'drive/xyz/data/' 
file_paths = glob.glob(path.join(IMAGE_PATH, '*.gif'))

# Load the images img = [misc.imread(path) for path in file_paths]

wpercent = (basewidth/float(img.size[0])) 
hsize = int((float(img.size[1])*float(wpercent))) 
img = img.resize((basewidth,hsize), Image.ANTIALIAS) 
images = np.asarray(img)
</code></pre>
<p>however, it resulted in an error, written below. Any suggestions, would be greatly appreciated. Thank you.</p>
<pre><code>AttributeError                            Traceback (most recent call last)
&lt;ipython-input-7-56ac1d841c56&gt; in &lt;module&gt;()
      9 img = [misc.imread(path) for path in file_paths]
     10 
---&gt; 11 wpercent = (basewidth/float(img.size[0]))
     12 hsize = int((float(img.size[1])*float(wpercent)))
     13 img = img.resize((basewidth,hsize), Image.ANTIALIAS)

AttributeError: 'list' object has no attribute 'size'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First you may want to resize your images then you can use your same method to initialize the arrays given the output image folder.</p>
<p><strong>Resizing the image</strong></p>
<p>This uses PIL package for resizing images but any library should do the same as long as it provides a resize method.</p>
<p>You can read further down discussions from here  <a href="https://stackoverflow.com/questions/273946/how-do-i-resize-an-image-using-pil-and-maintain-its-aspect-ratio">How do I resize an image using PIL and maintain its aspect ratio?</a></p>
<pre><code>import os, sys
import Image

size = 128, 128

for infile in sys.argv[1:]:
    outfile = os.path.splitext(infile)[0] + ".gif"
    if infile != outfile:
        try:
            im = Image.open(infile)
            im.thumbnail(size, Image.ANTIALIAS)
            im.save(outfile, "GIF")
        except IOError:
            print "cannot create thumbnail for '%s'" % infile
</code></pre>
<p><strong>Parallelism Example</strong></p>
<p>Regarding parallelism you can use this example as a base and move on from there.</p>
<p>This is from the python docs <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">https://docs.python.org/3/library/multiprocessing.html</a></p>
<pre><code>from multiprocessing import Process

    def f(name):
        print('hello', name)

    if __name__ == '__main__':
        p = Process(target=f, args=('bob',))
        p.start()
        p.join()
</code></pre>
</div>
<span class="comment-copy">Is the images in the last line your output? And do you want to parallelize step 3-4?</span>
<span class="comment-copy">@IshanBhatt yes.</span>
<span class="comment-copy">Hi @UmutGÃ¼ler, thanks. Where do I specify the path? filename := "dir/to/myfile/somefile.gif"</span>
