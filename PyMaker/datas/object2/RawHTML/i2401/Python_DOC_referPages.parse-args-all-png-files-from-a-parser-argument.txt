<div class="post-text" itemprop="text">
<p>I would like to get a <code>arg.pics</code> which returns something like <code>['pic1.png', 'pic2.png', 'pic3.png']</code> (to arbitrarily parse all files of .png format) after running the following (<code>test.py</code>):</p>
<pre><code>import argparse
import os

def parser_arg():
    par = argparse.ArgumentParser()
    parser = par.add_argument_group('pictures')
    parser.add_argument("-p", "--pics", nargs="+", help="picture files", required=True)
    arguments = par.parse_args()
    return arguments

args = parser_arg()
</code></pre>
<p>And upon running the script via command line, and inputting </p>
<pre><code>python test.py -p ../User/Desktop/Data/*.png
</code></pre>
<p>then <code>args.pics</code> returns <code>['../User/Desktop/Data/*.png']</code> instead.. </p>
<p>Am I using the right approach? I heard using <code>*.png</code> will be expanded into the .png files once inputted but it doesn't seem to be the case on my end.</p>
<p><strong>Edits:</strong> I'm using Anaconda Prompt on Windows 10 if it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a couple of things that could be going on. One possibility is that <code>../User/Desktop/Data/*.png</code> does not match any files, so does not get expanded. This would happen on a UNIX-like shell only (or PowerShell I suppose). The other possibility is that you are using <code>cmd.exe</code> on Windows, which simply does not do wildcard expansion at all. Given that you are using Anaconda prompt on Windows, I would lean towards the latter possibility as the explanation.</p>
<p>Since you are looking for a list of all the PNGs in a folder, you don't need to rely on the shell at all. There are lots of ways of doing the same thing in Python, with and without integrating in <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a>.</p>
<p>Let's start by implementing the listing functionality. Given a directory, here are some ways to get a list of all the PNGs in it:</p>
<ol>
<li><p>Use <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer"><code>glob.glob</code></a> (<strong>recommended option</strong>). This can either recurse into subdirectories or not, depending on what you want:</p>
<pre><code>mydir = '../User/Desktop/Data/'
pngs = glob.glob(os.path.join(mydir, '*.png'))
</code></pre>
<p>To recurse into subfolders, just add the <code>recursive=True</code> keyword-only option.</p></li>
<li><p>Use <a href="https://docs.python.org/3/library/os.html'" rel="nofollow noreferrer"><code>os.walk</code></a>. This is much more flexible (and therefore requires more work), but also lets you have recursive or non-recursive solutions:</p>
<pre><code>mydir = '../User/Desktop/Data/'
pngs = []
for path, dirs, files in os.walk(mydir):
    pngs.extend(f for f in files if f.lower().endswith('.png'))
    del dirs[:]
</code></pre>
<p>To enable recursion, just delete the line <code>del dirs[:]</code>, which suppresses subdirectory search.</p></li>
<li><p>A related method that is always non-recursive, is to use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a>, which is Pythons rough equivalent to <code>ls</code> or <code>dir</code> commands:</p>
<pre><code>mydir = '../User/Desktop/Data/'
pngs = [f for f in os.listdir(mydir) if f.lower().endswith('.png')]
</code></pre>
<p>This version does not check if something is actually a file. It assumes you don't have folder names ending in <code>.png</code>.</p></li>
</ol>
<p>Let's say you've picked one of these methods and created a function that accepts a folder and returns a file list:</p>
<pre><code>def list_pngs(directory):
    return glob.glob(os.path.join(directory, '*.png'))
</code></pre>
<p>Now that you know how to list files in a folder, you can easily plug this into <code>argparse</code> at any level. Here are a couple of examples:</p>
<ol>
<li><p>Just get all your directories from the argument and list them out afterwards:</p>
<pre><code>parser.add_argument("-p", "--pics", action='store', help="picture files", required=True)
</code></pre>
<p>Once you've processed the arguments:</p>
<pre><code>print(list_pngs(args.pics))
</code></pre></li>
<li><p>Integrate directly into <code>argparse</code> with the <a href="https://docs.python.org/3/library/argparse.html#type" rel="nofollow noreferrer"><code>type</code></a> argument:</p>
<pre><code>parser.add_argument("-p", "--pics", action='store', type=list_pngs, help="picture files", required=True)
</code></pre>
<p>Now you can use the argument directly, since it will be converted into a list directly:</p>
<pre><code>print(args.pics)
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Your approach is correct. However, your script will only receive the expanded list of files as parameters if your shell supports globbing and the pattern actually matches any files. Otherwise, it will be the pattern itself in most cases.</p>
<p>The Anaconda Command Prompt uses <code>cmd.exe</code> by default, which doesn't support wildcard expansion. You could use <a href="https://github.com/ContinuumIO/anaconda-issues/issues/311" rel="nofollow noreferrer">PowerShell</a> instead, which does understand wildcards. Alternatively, you can do the expansion in your application as described in Mad Physicist's <a href="https://stackoverflow.com/a/52427434/244297">answer</a>.</p>
</div>
<span class="comment-copy">It's a bit unclear what you are trying to do here. The <code>/path/to/folder/*.png</code> will be expanded into a list by the shell. On the other hand, if you provide just the folder name, Python has some good ways of getting the list of PNG files yourself. Do you just want a description of the different possibilities, or do you have something specific in mind?</span>
<span class="comment-copy">It's also important to not that the expansion will be done by the shell only on UNIX-like OSes, not Windows.</span>
<span class="comment-copy">Which shell are you using?</span>
<span class="comment-copy">@MadPhysicist I apologize for the confusion. I will like to get a list of all .png files that that folder, with argparse in Python.</span>
<span class="comment-copy">@EugeneYarmash If it helps, I am using Anaconda</span>
<span class="comment-copy">Thank you for such a detailed breakdown! I tried what you have suggested and its working well on Anaconda prompt! :)</span>
<span class="comment-copy">I tried the above but it does show all the .png files in that folder I wish to look into.. Could it be due to the shell I am using? (I'm using Anaconda)</span>
<span class="comment-copy">@Stoner. Anaconda is not your shell unless you are on Windows. What's your OS? Are you using cmd.exe by some chance? Please edit that information into your question.</span>
<span class="comment-copy">@MadPhysicist I'm using Anaconda Prompt on Windows. I'm somewhat new to these technical terms so pardon me if I sound a bit lost on this.. And thanks, I'll update the question accordingly.</span>
