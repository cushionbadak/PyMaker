<div class="post-text" itemprop="text">
<p>Assume we have a list of words stored in a list like this: </p>
<pre><code>list_of_words = ["this", "is", "a", "text","for", "demonstration"]
</code></pre>
<p>Furthermore, i have a list of selected words:</p>
<pre><code>selected_words = ["hello", "text", "demonstration"]
</code></pre>
<p>I would like to count the number of words (elements if you like) that occur in list_of_words prior to the words in selected_words that match a word in list_of_words.</p>
<p>I.e. the first word in selected_word that match is "text" and there are 3 words prior to that word in list_of_words. The second word that match is "demonstration" which has 5 words prior to it. So the output should be [3, 5].  </p>
<p>What would be the most efficient way to calculate this? I can't seem to find anyone else who have asked this question in python. </p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> and a conditional <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>[i for i, word in enumerate(list_of_words) if word in selected_words]
# [3, 5]
</code></pre>
<p>If the involved lists are very large you should consider converting <code>selected_words</code> into a <code>set</code> beforehand to improve the contains-check:</p>
<pre><code>selected_words = set(selected_words)
[i for i, word in enumerate(list_of_words) if word in selected_words]
# [3, 5]
</code></pre>
</div>
<span class="comment-copy">with <code>[3, 5]</code> you cannot be sure where the 3 and the 5 come from. Are you sure that this is your ideal output? Something like <code>[None, 3, 5]</code> would be much better imo.</span>
<span class="comment-copy">Any attempt / code you have tried so far?</span>
<span class="comment-copy"><code>[list_of_words.index(word) for word in selected_words if word in list_of_words]</code></span>
<span class="comment-copy">Great, thank you so much!. A great input also from Ev.Kounis above: Is there a way to return a NONE if the word does not have a match. So the output would be [NONE, 3, 5] instead.</span>
<span class="comment-copy">@Ev.Kounis That will order it as in <code>low</code>.</span>
<span class="comment-copy">@JonathanMarin What if one of the word occurs twice, do you want only the first occurrence?</span>
<span class="comment-copy">It is perfectly fine if words occur twice :-)</span>
<span class="comment-copy">@JonathanMarin But what would you want your output to be like then? :) have the numbers for both occurrences or just the first?</span>
