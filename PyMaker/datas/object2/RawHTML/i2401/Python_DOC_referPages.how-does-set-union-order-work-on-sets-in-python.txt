<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12165200/order-of-unordered-python-sets">'order' of unordered Python sets</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Code: a={1,2,3} c={14,62} b=a|c print(b)
Output: {1,2,3,14,62}</p>
<p>Code: a={1,2,3} c={15,62} b=a|c print(b)
Output: {1,2,3,62,15}</p>
<p>Code: a={1,2,3} c={16,62} b=a|c print(b)
Output: {16,1,2,3,62}</p>
<p>Code: a={1,2,3} c={17,62} b=a|c print(b)
Output: {1,2,3,17,62}</p>
<p>Code: a={12} c={4} b=a|c print(b)
Output: {12,43}</p>
<p>Code: a={12} c={44} b=a|c print(b)
Output: {44,12}</p>
<p>Why is that the resultant set is ordered most of the time but not in some cases.
Numbers like 15,31,63 (00001111,0001111,0011111111) are always at end and numbers like 16,32,64 (00010000,00100000,01000000) are at first position. 
Explain please.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's not bitwise OR even if it looks alike. That's <code>set.union()</code>.</p>
<p>Also, the order of elements in a set has no guarantee. You may not expect any order unless you convert it to a list and sort it.</p>
<p>See <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.union" rel="nofollow noreferrer">Python 3 documentation on <code>set.union()</code></a>.</p>
</div>
<span class="comment-copy">Set order is <b>not</b> guaranteed.</span>
<span class="comment-copy">Welcome to StackOverflow. That operation is not "bit-wise OR" even if it uses the same character. For sets, that is the union operation. In Python, sets are by definition not ordered, so you are not guaranteed to get any specific order at all in your printout of the set. If you need a certain order, you  could sort the set, resulting in a list, before you print. Or, in the current version of Python, you could simulate sets with a dictionary or other data container.</span>
<span class="comment-copy">But if the set order is not guaranteed then why is output always the same and is following the pattern I wrote about in the end</span>
<span class="comment-copy">The result is not guaranteed means that it could be whatever it is (in particular, it may look ordered), but you should not make any assumptions about the order.</span>
