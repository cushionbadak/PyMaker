<div class="post-text" itemprop="text">
<p>Hi guys I just want to know if there's a way to iterate over a tuple that behaves like zip.</p>
<p>For example:</p>
<pre><code>zipper = zip(['aye', 'bee'], ['ex', 'why'])
for x, y in zipper:
    print(x, y)
aye ex
bee why

tupl = 3, 2
for x, y in tupl:
    print(x, y)
# 'int' object is not iterable.
</code></pre>
<p>What I knew now is that it can't be zip-ed:</p>
<pre><code>tupl = zip(3, 2)
# zip argument #1 must support iteration
</code></pre>
<p>I am trying to pass zipper into a function, I also hope to pass the tuple or a single set of zip.</p>
<pre><code>def processthis(zipper):
    for x, y in zipper:
        # do something with x and y
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With a loop of <code>for x, y in tupl:</code> you are expecting <code>tupl</code> to be a sequence of tuples, rather than a tuple.</p>
<p>If you want your loop to process only one tuple you should assign <code>tupl</code> with <code>[(3, 2)]</code> instead of <code>(3, 2)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Parenthesis are missing.</p>
<p>When passing a <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">tuple</a> to function, it needs to be wrapped by parenthesis.</p>
<p>In your case,</p>
<pre><code>zip((3, 2), (4, 5))  # zipping 2 tuples
</code></pre>
<p>Otherwise, zip will sees 3 and 2 as two positional arguments.</p>
</div>
<span class="comment-copy">what's your desired output?</span>
<span class="comment-copy">your example does not show any brackets.</span>
