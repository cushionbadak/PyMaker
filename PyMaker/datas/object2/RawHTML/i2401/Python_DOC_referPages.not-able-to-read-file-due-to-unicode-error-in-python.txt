<div class="post-text" itemprop="text">
<p>I'm trying to read a file and when I'm reading it, I'm getting a unicode error.</p>
<pre><code>def reading_File(self,text):

     url_text =  "Text1.txt"
     with open(url_text) as f:
                content = f.read()
</code></pre>
<p>Error:</p>
<pre><code>content = f.read()# Read the whole file
 File "/home/soft/anaconda/lib/python3.6/encodings/ascii.py", line 26, in 
 decode
 return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0x92 in position 404: 
ordinal not in range(128)
</code></pre>
<p>Why is this happening? I'm trying to run the same on Linux system, but on Windows it runs properly. </p>
</div>
<div class="post-text" itemprop="text">
<p>As it looks, default encoding is ascii while Python3 it's utf-8, below syntax to open the file can be used</p>
<pre><code>open(file, encoding='utf-8')
</code></pre>
<p>Check your system default encoding, </p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.stdout.encoding
'UTF-8'
</code></pre>
<p>If it's not UTF-8, reset the encoding of your system.</p>
<pre><code> export LANGUAGE=en_US.UTF-8
 export LC_ALL=en_US.UTF-8
 export LANG=en_US.UTF-8
 export LC_TYPE=en_US.UTF-8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am assuming the data contains bytes, so why don't you try this one</p>
<pre><code>with open("myfile", "rb") as f:
    byte = f.read(1)
    while byte != "":
        # Do stuff with byte.
        byte = f.read(1)
</code></pre>
<p>Once you have the bytes, you can easily decode it into a string</p>
<pre><code>myString = byte.decode("utf-8") 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/codecs.html#codecs.open" rel="nofollow noreferrer">codecs.open</a> to fix this issue with the correct encoding:</p>
<pre><code>import codecs
with codecs.open(filename, 'r', 'utf8' ) as ff:
    content = ff.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There can be two reasons for that to happen:</p>
<ol>
<li><p>The file contains text encoded with an encoding different than <code>'ascii'</code> and, according you your comments to other answers, <code>'utf-8'</code>.</p></li>
<li><p>The file doesn't contain text at all, it is binary data.</p></li>
</ol>
<p>In case 1 you need to figure out how the text was encoded and use that encoding to open the file:</p>
<pre><code>open(url_text, encoding=your_encoding)
</code></pre>
<p>In case 2 you need to open the file in binary mode:</p>
<pre><code>open(url_text, 'rb')
</code></pre>
</div>
<span class="comment-copy">Tip : Never mix 4 spaces and 8 spaces indentation.</span>
<span class="comment-copy">I tried this. I got  ANSI_X3.4-1968</span>
<span class="comment-copy">you mean o/p of sys.stdout.encoding. Then reset the encoding of the unix system you are using as python3 follows it</span>
<span class="comment-copy">Look into this, it may be related <a href="https://stackoverflow.com/questions/10406135/unicodedecodeerror-ascii-codec-cant-decode-byte-0xd1-in-position-2-ordinal" title="unicodedecodeerror ascii codec cant decode byte 0xd1 in position 2 ordinal">stackoverflow.com/questions/10406135/â€¦</a></span>
<span class="comment-copy">Tried but got this  UnicodeDecodeError: 'utf-8' codec can't decode byte 0x92 in position 404: invalid start byte</span>
