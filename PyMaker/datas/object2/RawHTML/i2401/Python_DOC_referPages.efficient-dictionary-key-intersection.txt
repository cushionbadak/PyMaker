<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18554012/intersecting-two-dictionaries-in-python">Intersecting two dictionaries in Python</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>Say, for example, we have the following dictionaries:</p>
<pre><code>dict1 = {a:b, b:c}
dict2 = {b:c, c:d}
</code></pre>
<p>What is the most efficient way of intersecting the keys of both dictionaries?</p>
<p>Of course, one can use <code>set(dict1.keys()).intersection(set(dict2.keys()))</code>, but I assume converting the dictionary to a set first is not efficient at all. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>keys</code> is a view and has the intersection operator</p>
<pre><code>dict1.keys() &amp; dict2.keys()
</code></pre>
<p>Or simply</p>
<pre><code>dict1.keys() &amp; dict2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>dict.keys()</code> <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">view object</a> supports set operations:</p>
<pre><code>dict1.keys() &amp; dict2.keys()  # equivalent to set(dict1).intersection(dict2)
</code></pre>
<p>However, for smaller dictionaries using a set will probably be faster:</p>
<pre><code>In [1]: dict1 = {'a': 'b', 'c': 'd'}

In [2]: dict2 = {'b': 'c', 'c': 'd'}

In [3]: %timeit dict1.keys() &amp; dict2.keys()
448 ns ± 1.9 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)    

In [4]: %timeit set(dict1).intersection(dict2)
330 ns ± 0.602 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
</code></pre>
<p>Note that <a href="https://docs.python.org/3.7/library/stdtypes.html#frozenset.intersection" rel="nofollow noreferrer"><code>set.intersection()</code></a> accepts <em>any iterable</em> as an argument, so you can just pass <code>dict2</code> to it. Also, no need to call <code>dict1.keys()</code>as a <code>dict</code> object by default iterates over its keys.</p>
</div>
<span class="comment-copy">Technically don't need the <code>.keys()</code> on the RHS...but I sometimes do as it's fairly explicit...</span>
