<div class="post-text" itemprop="text">
<p>I have a text file that represents a transcript. I need to find a way to split this so that I have a list of strings representing what each person said. So this;</p>
<pre><code>mystr = '''Bob: Hello there, how are you? 

           Alice: I am fine how are you?'''
</code></pre>
<p>Becomes this;</p>
<pre><code>mylist= ['Bob: Hello there, how are you?','Alice: I am fine how are you?']
</code></pre>
<p>I am new to regular expressions but recognize that this could be the way to go. The problem is I want to iterate this over many transcripts in circumstances where the names will differ (e.g. John, Paul, George, Ringo and so on). What will be consistent is the presence of a word (representing the speaker), followed by a colon, followed by a white-space. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>re.findall(r"\S[^:]+.*", mystr)
#-&gt; ['Bob: Hello there, how are you? ', 'Alice: I am fine how are you?']
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
mystr = '''Bob: Hello there, how are you? 

           Alice: I am fine how are you?'''
[_.group(0).strip() for _ in re.finditer(r"\w[^:]+.*", mystr)]

#['Bob: Hello there, how are you?', 'Alice: I am fine how are you?']
</code></pre>
<p>If by any chance the colon is not there then this regex should be preferred over the previous one.</p>
<pre><code>mystr = '''Bob Hello there, how are you? 

           Alice: I am fine how are you?'''
[_.group(0).strip() for _ in re.finditer(r"\w{1,}:+.*", mystr)]
#['Alice: I am fine how are you?']
</code></pre>
</div>
