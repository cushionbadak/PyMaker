<div class="post-text" itemprop="text">
<p>With Python one can <a href="https://docs.python.org/3/library/warnings.html#warning-filter" rel="nofollow noreferrer">filter specific warnings</a> using the following command line syntax:</p>
<pre><code>-W action:message:category:module:line
</code></pre>
<p>But how can one determine the correct value for <code>module</code> for a particular warning?</p>
<p>Consider the following example:</p>
<p>Using (<code>pipenv --python 3.6.5 install lxml==4.2.4</code>)</p>
<pre><code>&gt; python -W error -c "from lxml import etree"
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "src/lxml/etree.pyx", line 75, in init lxml.etree
  File "src/lxml/_elementpath.py", line 56, in init lxml._elementpath
ImportWarning: can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
</code></pre>
<p>If one wanted to ignore only that specific import warning, how does one find the module name to use? None of the following commands appear to be correct. They all still emit the warning.</p>
<pre><code>python -W error -W ignore::ImportWarning:lxml -c "from lxml import etree"
python -W error -W ignore::ImportWarning:lxml.etree -c "from lxml import etree"
python -W error -W ignore::ImportWarning:lxml._elementpath -c "from lxml import etree"
python -W error -W ignore::ImportWarning:etree -c "from lxml import etree"
python -W error -W ignore::ImportWarning:_elementpath -c "from lxml import etree"
python -W error -W 'ignore::ImportWarning:lxml[.*]' -c "from lxml import etree"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the <code>ImportWarning</code> warnings, in fact, is from <a href="https://github.com/python/cpython/blob/v3.7.1/Python/import.c#L1538-L1540" rel="nofollow noreferrer">import.c</a>, but you need to filter with <code>_frozen_importlib</code>, the stacks in the warning message are incomplete and internal stacks are skipped. you could obtain this info by overridden <code>warnings.showwarning</code>:</p>
<pre><code>import warnings

def showwarning(message, category, filename, lineno, file, line):
    print(filename)

warnings.showwarning = showwarning
warnings.resetwarnings() # allow all warnings

from lxml import etree
</code></pre>
<p>you could verify this by:</p>
<pre><code>python -Werror::ImportWarning:_frozen_importlib -c 'import lxml.etree'
</code></pre>
<p>btw <code>ImportWarning</code> is <a href="https://github.com/python/cpython/blob/v3.7.1/Lib/warnings.py#L551" rel="nofollow noreferrer">ignored by default</a>.</p>
</div>
<span class="comment-copy">Which Python version are you using? For me (Win7, Py3.4) there is no warning.</span>
<span class="comment-copy">Hm, probably because I have <code>lxml</code>?</span>
<span class="comment-copy">It's in the pipenv command in the question. If you have pipenv you can run it with the exact version of lxml too. Though really I'm interested in a general method to determine a module name rather than just for this case. Thanks.</span>
<span class="comment-copy">As I read <a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow noreferrer">Python 3.7.0 Documentation</a> there should <b>NO</b> space between <code>-W</code> and <code>ignore</code>. Example for your case <a href="https://docs.python.org/3/library/warnings.html#describing-warning-filters" rel="nofollow noreferrer">describing-warning-filters</a></span>
<span class="comment-copy">@stovfl, I believe whitespace between the flag and the value is optional. You can verify that the following works (though it ignores <i>all</i> import warnings): <code>python -W error -W ignore::ImportWarning -c "from lxml import etree"</code></span>
