<div class="post-text" itemprop="text">
<p>I am trying to create a music guessing game whereby the <strong>FULL NAME</strong> of the artist is given and the first letter of <strong>EACH WORD</strong> of the title is given. My current code (that works) is capable of handling one word for the artist and one word for the song; for example EDEN Nocturne.</p>
<p>However, if the artist were to have two parts in their name (Ed Sheeran) my code wouldn't be able to handle this (similarly to the song name).
Therefore, I wanted to use a determiner to split the artist and song so that I could print the whole Artist name and then use the <strong>try:</strong> and <strong>except:</strong> functions to be able to print the first letter of each word of the song if it is available.</p>
<p>When I just use a space the .split() function works correctly, however when I use a word or a symbol ('DOT', '|') It no longer works.</p>
<p>This is the code that works:</p>
<pre><code>with open('MusicNames.txt') as file:
    text = file.readlines()[number]
    artist = text.split()[0]
    print('Artist: ' + artist)
    song = text.split()[1]
    songLetter = text.split()[1][0]
    print('First letter: ' + songLetter)
</code></pre>
<p>The code above works for this style of Artist and Song:</p>
<p><img alt="The code above works for this style of Artist and Song" src="https://i.stack.imgur.com/7YeFV.png"/></p>
<p>However, it will not work in this instance:</p>
<p><img alt="However, it will not work in this instance" src="https://i.stack.imgur.com/Xii63.png"/></p>
<p>Hence, I use a determiner as such:</p>
<pre><code>with open('MusicNames.txt') as file:
    text = file.readlines()[number]
    artist = text.split('|')[0]
    print('Artist: ' + artist)
    song = text.split('|')[1]
    songLetter = text.split('|')[1][0]
    print('First letter: ' + songLetter)
</code></pre>
<p>Look wise, it appears to work. However, it no longer thinks the answer is correct and therefore asks me to guess again:</p>
<p><img alt="Look wise, it appears to work. However, it no longer thinks the answer is correct and therefore asks me to guess again. " src="https://i.stack.imgur.com/iNZhc.png"/></p>
<p>I am just confused by why this is happening because if I were to print the two variables of which need to be equal for it to be correct, they would be exactly the same. Though the program doesn't think that.</p>
<pre><code>for i in range(2):
        guess = input('\nGuess: ')
        if guess == song and triesLeft == 2:
            global score
            score += 3
            print('Correct! Current Score: ' + str(score))
</code></pre>
<p>In the else statement further on I put: print(guess) print(song):</p>
<p><img alt="In the else statement further on I put: print(guess) print(song)" src="https://i.stack.imgur.com/BgN15.png"/></p>
<p>Thank you for reading all of this and any help is appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your textreading looks suspicious:</p>
<pre><code>text = file.readlines()[number]
</code></pre>
<p><a href="https://docs.python.org/3/library/io.html#io.IOBase.readlines" rel="nofollow noreferrer">Doku - hidden in IOBase</a></p>
<p>It works similar to readline() in that it:</p>
<blockquote>
<p><code>f.readline()</code> reads a single line from the file; a newline character (\n) is left at the end of the string, and is only omitted on the last line of the file if the file doesnâ€™t end in a newline.</p>
</blockquote>
<p>(from <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">Dok</a>)</p>
<p>You are never trimming <code>'\n'</code> from your title, so its essentially <em>not</em> euqal to your input as this one has no '\n' at its end.</p>
<p>You can use <code>song = song.rstrip()</code> (<a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer">link</a>) to remove whitespaces including newlines from it.</p>
<p>For multi-word songtitles you might want to inspect the <code>str.split([sep[, maxsplit]])</code> dokumentation <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">here</a> and use it like so:</p>
<pre><code> # create 2 splits maximum
 artist, song = text.split(None, 2) # problem if your artist has 2 words though
</code></pre>
</div>
<span class="comment-copy">Please do not post screenshots of terminal output. Include them as text, formatted as code.</span>
<span class="comment-copy">Sadly the multi-word song titles won't work because there are instances whereby the artist has multiple words as well as the song name. Also, how do I correctly use rtrim in my code because I am not familiar with it. Thank you for your help.</span>
<span class="comment-copy">@Arctic typo - I ment rstrip() - its the same as strip() but just on the righjt side of your string. You do not have a "special" divider between artist - name and title of the song - how do you propose to divide both from one another if you only have spaces all over the line? I added a rstrip link for you.</span>
<span class="comment-copy">@Arctic you would use it <code>text = file.readlines()[number].rstrip()</code> there ... f.e. or by <code>text = text.rstrip()</code></span>
<span class="comment-copy">Thank you very much, it works perfectly now!</span>
