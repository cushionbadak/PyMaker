<div class="post-text" itemprop="text">
<p>this sequence of symbols is required as a password in an app:</p>
<blockquote>
<p>9h/#13/'!O!Nr},w_T0 6!ws%N\c^i,4"</p>
</blockquote>
<p>How can store this to a variable/string? </p>
</div>
<div class="post-text" itemprop="text">
<p>One easy way to store those characters in a string is to use Python's triple-quotes.</p>
<pre><code>s = '''9h/#13/'!O!Nr},w_T0 6!ws%N\c^i,4"'''
</code></pre>
<p>If your sequence did not end with a double-quote, triple double-quotes could also have been used rather than the triple single-quotes above. The triple-quote way of showing a string is designed for tough cases like yours, with almost any combination of text characters allowed in the string. Executing the command <code>print(s)</code> gives the output that you want:</p>
<pre><code>9h/#13/'!O!Nr},w_T0 6!ws%N\c^i,4"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just declare a string as usual, and escape the special characters <code>'</code> and <code>"</code> with <code>\</code>. The escape makes it act like a string literal, rather than a special character.
<code>
str = '9h/#13/\'!O!Nr},w_T0 6!ws%N\c^i,4\"'
</code>
Output is
<code>
'9h/#13/\'!O!Nr},w_T0 6!ws%N\\c^i,4"'
</code></p>
</div>
<span class="comment-copy">It looks to me that it already is a string. Please make your question more clear. What is the source of those symbols, and why does it seem hard to convert that sequence to a string? Just what do you mean by "process"?</span>
<span class="comment-copy">you cannot just assign it into a variable because the symbols make it look partly like a comment/string/regex. Could you implement pls if it seems straightforward to you?</span>
<span class="comment-copy">You should read python tutorial first. If you're baffled by something this basic, you won't be able to do much else. See: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a></span>
<span class="comment-copy">trying this, i am still getting &gt; '9h/#13/\'!O!Nr},w_T0 6!ws%N\\c^i,4" ' there is an additional \ character on the 8th spot</span>
<span class="comment-copy">There is also an extra back-slash by the other back-slash near the end. You apparently typed <code>s</code> at the Python prompt, which shows the <i>representation</i> of the string, which you can also get with <code>print(repr(s))</code>. That is what you could type into Python to get your string--a different way to handle some of the strange characters, a method called "escaping" which was mentioned in Katarina's answer. You can be assured the the string stored in Python is what you see from <code>print(s)</code>.</span>
<span class="comment-copy">didnt know that, thank you :)</span>
<span class="comment-copy">its not the same: there is an additional '\' on the 8th character of the string</span>
<span class="comment-copy">Yes, but I'm not sure that you can avoid this, since you have both quote types in the string, but you need one of them to quote the string itself. you need to escape it to tell python it is a string literal and not the ending quote. Can you disallow one of the quote types for passwords? That would make things much easier</span>
<span class="comment-copy">thank you for the reply!</span>
