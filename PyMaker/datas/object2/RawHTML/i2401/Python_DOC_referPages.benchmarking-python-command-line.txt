<div class="post-text" itemprop="text">
<p>I have a program in python 3.6 that I made to run in linux. I needed to know how much cpu, memory, etc., it consumed when it was executed (in command line), could you help me?</p>
<p>Thank you</p>
<p>Note: Sorry for the tags used, I was not sure which ones to put</p>
</div>
<div class="post-text" itemprop="text">
<p>For basic experiments you can use <code>%timeit</code> with the <code>ipython</code> interpreter. For high precision low level ones - <code>perf</code>. For everything in between there is an article specifically on the topic in the <a href="https://docs.python.org/3/library/profile.html" rel="nofollow noreferrer">documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>For timing single lines, you can python's magic function <code>%timeit</code>. (You can also time multiple lines, however it would give result for complete execution and not per statement basis) </p>
<p>However for a detailed description, you can use cProfile. You can read the description <a href="https://docs.python.org/3/library/profile.html" rel="nofollow noreferrer">here</a>.</p>
<p>Sample code that might help you:</p>
<p>[sample.py]</p>
<pre><code>import time
print('Hello!')
time.sleep(2)
print('Thanks for waiting!')
</code></pre>
<p>cProfile can help you profile your program written in sample.py. Run your python file like below from your linux terminal.</p>
<pre><code>user@this-pc$ python3 -m cProfile sample.py 
</code></pre>
<p>Output:</p>
<pre><code>Hello!
Thanks for waiting!
         6 function calls in 2.001 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.001    2.001 sample.py:1(&lt;module&gt;)
        1    0.000    0.000    2.001    2.001 {built-in method builtins.exec}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    2.001    2.001    2.001    2.001 {built-in method time.sleep}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
</code></pre>
<p>Hope this helps you.</p>
<p>Cheers!</p>
</div>
<span class="comment-copy">"perf" show cpu, memory, etc? Could you show an example?</span>
<span class="comment-copy">@DiegoCardoso - it's a powerful profiler for linux, it wouldn't show python stack traces, only the native ones. The best tutorial I've come across is <a href="http://www.brendangregg.com/perf.html" rel="nofollow noreferrer">brendangregg.com/perf.html</a></span>
<span class="comment-copy">Thanks a lot for the help. It helped a lot. But one last time, where do I see cpu consumption and memory in the example?</span>
<span class="comment-copy">I am not sure if memory consumption per statement is possible in cProfiler. Maybe you can check this: <a href="https://pypi.org/project/memory_profiler/" rel="nofollow noreferrer">pypi.org/project/memory_profiler</a></span>
<span class="comment-copy">Ok, i'll take a look. What about cpu consumption? thank you so much again</span>
<span class="comment-copy">CPU consumption as in? You want number of CPU cycles? cProfile displays you amount of time spent per call per statement.</span>
