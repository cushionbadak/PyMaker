<div class="post-text" itemprop="text">
<p>Python <a href="https://docs.python.org/3.7/library/stdtypes.html#set" rel="nofollow noreferrer">documentation</a> suggests two ways to union sets:</p>
<pre><code>set1 = {1, 2, 3}
set2 = {3, 4, 5}

set1 | set2       # {1, 2, 3, 4, 5}
set1.union(set2)  # {1, 2, 3, 4, 5}
</code></pre>
<p>I've recently come across yet another one:</p>
<pre><code>set.union(set1, set2)  # {1, 2, 3, 4, 5}
</code></pre>
<p>How does it work?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your example, <code>set.union(set1, set2)</code> actually calls the <code>union</code> method with <code>set1</code> for the <code>self</code> argument. Therefore, it is equivalent to <code>set1.union(set2)</code>.</p>
<p>As an aside, Python allows union-ing of arbitrary numbers of sets according to <a href="https://www.programiz.com/python-programming/methods/set/union" rel="nofollow noreferrer">this</a>. Actually you can see this in the Python documentation, <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">here</a>. Because the <code>union</code> method accepts <code>*others</code> as an argument, you can pass in any number of sets and it will perform the union of all of them. </p>
<pre><code>set1 = {1, 2, 3, 4}
set2 = {1, 3, 4, 5}
set3 = {2, 4, 6, 7}

print(set.union(set1, set2, set))
# {1, 2, 3, 4, 5, 6, 7}
</code></pre>
</div>
<span class="comment-copy">set.union(set1,set2) is semantically equivalent to  set1.union(set2). See the documentation on python objects.</span>
<span class="comment-copy"><code>set.union</code> uses the <code>set.union</code> method with <code>set1</code> being the <code>self</code> argument and <code>set2</code> being the second argument. It is essentially equivalent to <code>set1.union(set2)</code>. In python, <code>my_instance.some_method(arg)</code> is equivalent (essentially but not exactly) to <code>MyClass.some_method(my_instance, arg)</code></span>
<span class="comment-copy">Note that the arguments can be any iterable, e.g. <code>set().union([1,2,3], (2, 3, 4)) -&gt; {1, 2, 3, 4}</code></span>
<span class="comment-copy">You've just discovered <a href="https://docs.python.org/3/howto/descriptor.html#invoking-descriptors" rel="nofollow noreferrer">descriptors</a> in <a href="https://stackoverflow.com/a/49765186/674039">method binding</a>.</span>
<span class="comment-copy">Here's yet another syntax to add to your collection:  <code>{*set1, *set2}</code></span>
<span class="comment-copy">I'm not the downvoter, but the fact that union allows arbitrary number of sets is not relevant here (you would see the same behaviour if it was only accepting one other).</span>
<span class="comment-copy">@wim In all honesty, I thought the OP had created a third set called <code>set</code> and was calling <code>union</code> with <code>set</code> as the <code>self</code> argument, in which case this would've been valid information. On further inspection, that wasn't the case. However, his question concerns the ways <code>union</code> can be called so I think my the first part of my answer was relevant, albeit tangential</span>
