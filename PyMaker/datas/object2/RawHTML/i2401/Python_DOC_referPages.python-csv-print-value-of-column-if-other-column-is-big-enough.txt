<div class="post-text" itemprop="text">
<p>I'm recently started with Python and I'm having trouble achieving the following:</p>
<p>I have a .CSV file with 3 columns (in total nearly 100.000 rows):</p>
<pre><code>"date_time","temperature","precipitation" 
"1957-12-31 19:00:00",6.9,0
"1957-12-31 20:00:00",6.6,0 
"1957-12-31 21:00:00",6.8,5.5 
"1957-12-31 22:00:00",7.2,0
</code></pre>
<p>I'm interested only in row [1] and [2] (the second and third row).
<strong>If the third column of a row has a value &gt; a certain value, I want the second column of that row printed / added to a list.</strong></p>
<p><em>For example:</em>
On the fourth row the value 5.5 is bigger than 5, so I want the value 6.8 (the temperature) printed. At the end I'd like to have a list of all temperatures of hours with &gt; 5mm rain.</p>
<p>(This way I can calculate if the average temperature is higher/lower when raining.)</p>
<p>My main problem is that Python sees the values not as numbers, so I can't say <em>'if precipitation &gt; 5, print temperature'</em></p>
<p>Sorry if this question is already asked in another topic, I searched for this particular question for quite some time now and haven't found anything.)</p>
<pre><code>with open("hourly_data_Maastricht.csv", 'r') as g:
  file2 = csv.DictReader(g)
  list = []
  for j['precipitation'] in file2:  
  if float('precipitation') &gt; 5:
    list.append(float(j['temperature']))
</code></pre>
<hr/>
<p>ANSWER</p>
<p>Thank for all the comments, 
I've got my answer and a lot of usefull code that I will look into to be able to implement it in the future!!</p>
<p>Now i've got this:</p>
<pre><code>with open("hourly_data_Maastricht.csv", 'r') as file:
reader = csv.DictReader(file)
list = []
for row in reader:
    if float(row['precipitation']) &gt; 5:
        list.append(float(row['temperature']))
        print(row)
print(list)
</code></pre>
<p>By using the print(row) and print(list) I could confirm that this code does what I need it to do.</p>
<p>Thanks a lot to everyone posting so quickly!</p>
</div>
<div class="post-text" itemprop="text">
<p>In case you don't want to include a whole new framework (pandas) for that, you actually already have most of the solution, you just didn't see one thing:</p>
<p>You are using <code>csv.DictReader</code> - it creates a dict according to the CSV header!
So you just do:</p>
<pre><code>with open("hourly_data_Maastricht.csv", 'r') as file:
    reader = csv.DictReader(file)
    list = []
    for row in reader:
        if float(row['precipitation']) &gt; 5:
            list.append(float(row['temperature']))
</code></pre>
<p>i.e., you iterate over the rows in the file and you access the columns in the dict with the column name as key.</p>
<p>Also see <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">the documentation</a> (Notes: this is for Python3, you didn't specify which version).</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't really need a list to calculate that, you can just filter the dataframe and take the average of the temperature column.</p>
<pre><code>import pandas as pd

df = pd.read_csv("hourly_data_Maastricht.csv")
df['precipitation'] = pd.to_numeric(df['precipitation'])
df_filtered = df[[df['precipitation'] &gt; 5]]
avg_temp = df_filtered['temperature'].mean()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>'Pandas is an open source library which allow you to manipulate .csv, .txt and other kind of files. In your case you should do the following:</p>
<pre><code>import pandas as pd

df = pd.read_csv('hourly_data_Maastricht.csv') #Now df (short for dataframe) you can manipulate your table.
result = df[df['precipitation'] &gt; 5] 
print(result)
</code></pre>
<p>So, you first create your dataframe, then you filter the value you want, for example when you write this "result = df[df['precipitation'] &gt; 5]" you are saying the following: from the dataframe, which has a column called 'precitipation' give me all the values higher than 5, and then you print your result. If you want to calculate something from result, from example mean, std, range, no problem, just call the specific method for that. Hope this help you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Thank for all the comments, 
I've got my answer and a lot of usefull code that I will look into to be able to implement it in the future!!</p>
<p>Now i've got this:</p>
<pre><code>with open("hourly_data_Maastricht.csv", 'r') as file:
reader = csv.DictReader(file)
list = []
for row in reader:
    if float(row['precipitation']) &gt; 5:
        list.append(float(row['temperature']))
        print(row)
print(list)
</code></pre>
<p>By using the print(row) and print(list) I could confirm that this code does what I need it to do.</p>
<p>Thanks a lot to everyone posting so quickly!</p>
</div>
<span class="comment-copy">If you've got a csv.reader going and looping over the input, then convert your relevant column so the comparison works... eg: <code>if float(my_column) &gt; 5)</code>... Have you got code so far you can show that reads the file and someone can help with the step you're missing?</span>
<span class="comment-copy">The code I made up to now is up above,  I don't understand how I can refer to (my_column),</span>
<span class="comment-copy">Try <code>for row in file2: print(row)</code> and you'll see you're getting a dictionary of column names and their values... you should be able to go from there...</span>
<span class="comment-copy">Thanks for answering. But now I think Python sees the column 'precipitation' and the values as string and won't let me compare the string value with 5</span>
<span class="comment-copy">Thanks a lot! I now have a course where Python is considered as prior knowledge but I had never coded before :)</span>
<span class="comment-copy">I see. Well, get yourself some python course/book! There are plenty of free ones out there. I've heard good things about this: <a href="https://automatetheboringstuff.com/" rel="nofollow noreferrer">automatetheboringstuff.com</a> (Chapter 5 explains dicttionaries)</span>
<span class="comment-copy">Doesn't appear the OPs using <code>pandas</code> here though and is probably overkill for this task and possibly not a great point for someone new to Python to go from.</span>
<span class="comment-copy">That's true, on the other hand it still may be useful for OP if he needs to do some more operations on that Dataframe in the future.</span>
<span class="comment-copy">I'm very new to Python, so I'm open to everything. I will look into this code to see if I can understand it. Thank you!</span>
<span class="comment-copy">Thanks, this helps me understanding Python better !</span>
