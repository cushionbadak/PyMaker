<div class="post-text" itemprop="text">
<p>I am doing a Python script to get the mail sent by people on my email address.</p>
<p>I am using the ImapClient module, and I got the content of the e-mail but prototyped strangely, all my UTF-8 Characters are encoded, like this :</p>
<blockquote>
<p>No=C3=ABl</p>
</blockquote>
<p>Here is my piece of code :</p>
<pre><code>    email_message = email.message_from_bytes(message_data[b'RFC822'])
    print(email_message.get_payload(0))
</code></pre>
<p>I tried also to add the <code>decode=True</code> arguments in my <code>get_payload</code>, but it returns me a <code>NoneType</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You would have to first identify the email part you are interested in. Then, you would decode the part's content, according to that part's encoding. Each part may have a different encoding and/or character set. If you're interested in the main body of the email, this is usually the first part, which could be html, or could be plain text, depending on the program that sent it (some user agents, like gmail, will include both forms).</p>
<p>You could use the email module's <a href="https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.walk" rel="nofollow noreferrer">EmailMessage.walk()</a> function over your message object to see the various attachment and their respective content types. The parts are separated from one another with a special "boundary" string (often random) that does not occur in the message body (to avoid ambiguity). It's easier to let the email module walk the parts for you -- especially since parts can nest.</p>
<p>The snippet of text that you show in your question appears to be quoted-printable encoded. You can find an example conversion from quoted-printable to utf-8 here: <a href="https://stackoverflow.com/questions/14249288/change-quoted-printable-encoding-to-utf-8">Change "Quoted-printable" encoding to "utf-8"</a></p>
<p><strong>An example</strong>:</p>
<p>I'm adding an example mock raw message below, which would represent the bytes that form the EmailMessage object.  In an email, each section/part (main body, attachments, etc) can have a different content-type, charset, and transfer-encoding. Parts can embed sub-parts, but email messages will commonly have just a flat structure. For parts that are attachments, it would be also common to find a content-disposition value, which would indicate a suggested filename for the file content.</p>
<pre><code>Subject: Woah
From: "SÃ©bastien" &lt;seb@example.org&gt;
To: Bob &lt;bob@example.org&gt;
Content-Type: multipart/alternative; boundary="000000000000690fec05765c6a66"

--000000000000690fec05765c6a66
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

S=C3=A9bastien est un pr=C3=A9nom.

--000000000000690fec05765c6a66
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div di=
r=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"lt=
r"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div=
dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;&lt;div dir=3D"ltr"&gt;...

...
</code></pre>
<p>Once you select your part of interest, you have to use the encoding settings of that part to convert the payload properly. You would first undo any transfer encoding (e.g. quoted-printable), and decode the resulting string according to the charset.</p>
<p>If the charset of the part you want is already <code>UTF-8</code>, then all you would have to do is to undo the content-transfer-encoding (e.g. remove quoted-printable sequences). However if the part's charset was different, say Latin-1, you would have to go from bytes to unicode  and then back from unicode to utf8:</p>
<pre><code># remove quoted-printable encoding
unquoted = quopri.decodestring(mime_part_payload)

# latin-1 in this case is the charset of the mime part header
tmp_unicode = unquoted.decode('latin-1', errors='ignore')

# encode to desired encoding
u8 = tmp_unicode.encode('utf-8')
</code></pre>
</div>
<span class="comment-copy">Looks like <a href="https://en.wikipedia.org/wiki/Quoted-printable" rel="nofollow noreferrer">Quoted Printable</a>. Python <a href="https://docs.python.org/2/library/quopri.html" rel="nofollow noreferrer">has methods</a> to decode those.</span>
<span class="comment-copy">Thanks a lot for your complete answer, it really helps me ! :)</span>
