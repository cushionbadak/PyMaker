<div class="post-text" itemprop="text">
<p>I need to add test to my django project, I need to create data test before execute tests. I read about setUp test data in <a href="https://stackoverflow.com/q/43594519/8258902">this question</a>. I can create data in setUpClass for all test in a class. Creating my complete data test is time consuming approach so I want to run it once for all of test classes, is any approach to set up data for all test classes once?</p>
</div>
<div class="post-text" itemprop="text">
<p>I found my answer, hope it can help someone else. Base on django <a href="https://docs.djangoproject.com/en/2.1/topics/testing/advanced/#defining-a-test-runner" rel="nofollow noreferrer">docs</a>.</p>
<blockquote>
<p>A test runner is a class defining a run_tests() method. Django ships with a DiscoverRunner class that defines the default Django testing behavior. This class defines the run_tests() entry point, plus a selection of other methods that are used to by run_tests() to set up, execute and tear down the test suite.</p>
</blockquote>
<p>In case of this question, there is 2 helpful methods in this class.<a href="https://docs.djangoproject.com/en/2.1/topics/testing/advanced/#django.test.utils.setup_databases" rel="nofollow noreferrer">setup_databases</a> and <a href="https://docs.djangoproject.com/en/2.1/topics/testing/advanced/#django.test.utils.teardown_databases" rel="nofollow noreferrer">teardown_databases</a> so we can overwrite them to initialize data for all test classes.</p>
<pre><code>from django.test.runner import DiscoverRunner as BaseRunner

class MyMixinRunner(object):
    def setup_databases(self, *args, **kwargs):
        temp_return = super(MyMixinRunner, self).setup_databases(*args, **kwargs)
        # do something
        return temp_return

    def teardown_databases(self, *args, **kwargs):
        # do somthing
        return super(MyMixinRunner, self).teardown_databases(*args, **kwargs)

class MyTestRunner(MyMixinRunner, BaseRunner):
    pass
</code></pre>
<p>after defining test runner class we need to add <code>TEST_RUNNER</code> to settings:</p>
<pre><code>TEST_RUNNER = 'path.to.MyTestRunner'
</code></pre>
</div>
<span class="comment-copy">You can create a base class for all your test classes and implement <code>setUpClass</code> and/or <code>setUp</code> there.</span>
<span class="comment-copy">@MikhailBurshteyn It's worked, thanks for your comment.</span>
<span class="comment-copy">I check it for 2 class that inheritance from my main test class, I create data test in main test class in setUpClass method, but it would re create data test for each inherited class, in previous comment I checked it for one inheritance test class. can explain more?</span>
<span class="comment-copy"><code>unittest</code> supports only class-level and module-level fixtures (see <a href="https://docs.python.org/3/library/unittest.html#setupmodule-and-teardownmodule" rel="nofollow noreferrer">docs</a>). Neither of this approaches will probably work for you, so I'd recommend switching to <code>py.test</code>, where you can have fixtures with session scope.</span>
