<div class="post-text" itemprop="text">
<p>at the start and end of my program, I have </p>
<pre><code>from time import strftime
print int(strftime("%Y-%m-%d %H:%M:%S")



Y1=int(strftime("%Y"))
m1=int(strftime("%m"))
d1=int(strftime("%d"))
H1=int(strftime("%H"))
M1=int(strftime("%M"))
S1=int(strftime("%S"))


Y2=int(strftime("%Y"))
m2=int(strftime("%m"))
d2=int(strftime("%d"))
H2=int(strftime("%H"))
M2=int(strftime("%M"))
S2=int(strftime("%S"))

print "Difference is:"+str(Y2-Y1)+":"+str(m2-m1)+":"+str(d2-d1)\
          +" "+str(H2-H1)+":"+str(M2-M1)+":"+str(S2-S1)
</code></pre>
<p>But when I tried to get the difference, I get syntax errors.... I am doing a few things wrong, but I'm not sure what is going on...</p>
<p>Basically, I just want to store a time in a variable at the start of my program, then store a 2nd time in a second variable near the end, then at the last bit of the program, compute the difference and display it. I am not trying to time a function speed. I am trying to log how long it took for a user to progress through some menus. What is the best way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/library/datetime" rel="noreferrer"><code>datetime</code></a> module will do all the work for you:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; a = datetime.datetime.now()
&gt;&gt;&gt; # ...wait a while...
&gt;&gt;&gt; b = datetime.datetime.now()
&gt;&gt;&gt; print(b-a)
0:03:43.984000
</code></pre>
<p>If you don't want to display the microseconds, just use (as gnibbler suggested):</p>
<pre><code>&gt;&gt;&gt; a = datetime.datetime.now().replace(microsecond=0)
&gt;&gt;&gt; b = datetime.datetime.now().replace(microsecond=0)
&gt;&gt;&gt; print(b-a)
0:03:43
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from time import time

start_time = time()
...

end_time = time()
seconds_elapsed = end_time - start_time

hours, rest = divmod(seconds_elapsed, 3600)
minutes, seconds = divmod(rest, 60)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot calculate the differences separately ... what difference would that yield for 7:59 and 8:00 o'clock? Try</p>
<pre><code>import time
time.time()
</code></pre>
<p>which gives you the seconds since the start of the epoch. </p>
<p>You can then get the intermediate time with something like</p>
<pre><code>timestamp1 = time.time()
# Your code here
timestamp2 = time.time()
print "This took %.2f seconds" % (timestamp2 - timestamp1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.monotonic" rel="nofollow noreferrer">time.monotonic()</a> (basically your computer's uptime in seconds) is guarranteed to not misbehave when your computer's clock is adjusted (such as when transitioning to/from daylight saving time).</p>
<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt;
&gt;&gt;&gt; time.monotonic()
452782.067158593
&gt;&gt;&gt;
&gt;&gt;&gt; a = time.monotonic()
&gt;&gt;&gt; time.sleep(1)
&gt;&gt;&gt; b = time.monotonic()
&gt;&gt;&gt; print(b-a)
1.001658110995777
</code></pre>
</div>
<span class="comment-copy">Think about what happens if the user starts at 8:59:34 and finishes at 9:10:12</span>
<span class="comment-copy">if you don't want microseconds, you can use <code>a = datetime.datetime.now().replace(microsecond=0)</code></span>
<span class="comment-copy">@gnibbler: Hey, nice. Much better than messing with string indices.</span>
<span class="comment-copy">you can use c=b-a ,str(c) to get '0:03:43' string</span>
<span class="comment-copy">One flaw: Doesn't use monotonic time. I suppose the difference will be wrong when transitioning to/from daylight saving time, and whenever ntpd adjusts your clock.</span>
