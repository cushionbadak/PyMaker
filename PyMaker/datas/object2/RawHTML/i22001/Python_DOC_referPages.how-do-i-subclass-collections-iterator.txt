<div class="post-text" itemprop="text">
<p>According to the documentation on <a href="http://docs.python.org/library/collections.html#abcs-abstract-base-classes" rel="nofollow noreferrer">ABCs</a>, I should just have to add a <code>next</code> method to be able to subclass <code>collections.Iterator</code>.  So, I'm using the following class:</p>
<pre><code>class DummyClass(collections.Iterator):
    def next(self):
        return 1
</code></pre>
<p>However, I get an error when I try to instantiate it:</p>
<pre><code>&gt;&gt;&gt; x = DummyClass()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: Can't instantiate abstract class DummyClass with abstract methods __next__
</code></pre>
<p>I'm guessing that I'm doing something stupid, but I can't figure out what it is.  Can anyone shed some light on this?  I could add a <code>__next__</code> method, but I was under the impression that was only for C classes.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you are using Python 3.x. Your code works fine on Python 2.x.</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; class DummyClass(collections.Iterator):
...     def next(self):
...         return 1
... 
&gt;&gt;&gt; x = DummyClass()
&gt;&gt;&gt; zip(x, [1,2,3,4])
[(1, 1), (1, 2), (1, 3), (1, 4)]
</code></pre>
<p>But on Python 3.x, you should implement <code>__next__</code> instead of <code>next</code>, as shown in the table of <a href="http://docs.python.org/3/library/collections.abc.html" rel="nofollow noreferrer">the py3k doc</a>. (Remember to read the correct version!)</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; class DummyClass(collections.Iterator):
...     def next(self):
...         return 1
... 
&gt;&gt;&gt; x = DummyClass()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: Can’t instantiate abstract class DummyClass with abstract methods __next__
&gt;&gt;&gt; class DummyClass3k(collections.Iterator):
...     def __next__(self):
...         return 2
... 
&gt;&gt;&gt; y = DummyClass3k()
&gt;&gt;&gt; list(zip(y, [1,2,3,4]))
[(2, 1), (2, 2), (2, 3), (2, 4)]
</code></pre>
<p>This change is introduced by <a href="http://www.python.org/dev/peps/pep-3114/" rel="nofollow noreferrer"><em>PEP-3114 — Renaming <code>iterator.next()</code> to <code>iterator.__next__()</code></em></a>.</p>
</div>
<span class="comment-copy">As seen on <a href="http://ideone.com/6cxGR" rel="nofollow noreferrer">ideone</a></span>
<span class="comment-copy">It must be a bug with Python 2.6.1 on the Mac then.</span>
<span class="comment-copy">Just to clarify my last comment, I <i>am</i> running python 2.x.  It seems to have been fixed in a version after the version that ships with OS X.</span>
