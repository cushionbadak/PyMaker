<div class="post-text" itemprop="text">
<p>Let's say that I have a python script a.py in /A/B/a.py, and it's in the PATH environment variable. The current working directory is /X/Y/, and it's the directory where I call the /A/B/a.py.</p>
<ul>
<li>In a.py, how to detect /X/Y/? I mean, how to know in which directory the python call is made? </li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can get the current working directory with:</p>
<pre><code>os.getcwd()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt; os.getcwd()
/X/Y
&gt;&gt; os.path.dirname(os.path.realpath(__file__))   # cannot be called interactively
/A/B
&gt;&gt; sys.path[0]
/A/B
&gt;&gt; os.path.abspath(sys.argv[0])
/A/B/a.py
</code></pre>
</div>
<span class="comment-copy">The directory in which the python call is made is automatically the working directory.</span>
<span class="comment-copy">You should use <code>getcwdu()</code> for portability reasons.</span>
<span class="comment-copy">The function <a href="https://docs.python.org/2/library/os.html#os.getcwdu" rel="nofollow noreferrer"><code>getcwdu</code></a> returns a unicode string in Python 2. <a href="https://docs.python.org/3/library/os.html#os.getcwd" rel="nofollow noreferrer"><code>getcwd</code></a> in Python 3 returns a unicode string. <a href="https://docs.python.org/3/library/os.html#os.getcwdb" rel="nofollow noreferrer"><code>getcwdb</code></a> returns a bytestring in Python 3. There is no <code>getcwdu</code> in Python 3.</span>
<span class="comment-copy">That gives you the <code>/A/B</code> directory, the location of the <code>a.py</code>.</span>
<span class="comment-copy">That's not what he meant, see his question from yesterday (<a href="http://stackoverflow.com/questions/3691921/how-to-know-the-path-the-script-the-python-run" title="how to know the path the script the python run">stackoverflow.com/questions/3691921/…</a>).</span>
<span class="comment-copy">@Radomir — I thought the directory where the .py file resides is what the OP wanted. Your comment made me reread the OP's question, and see that that is not the case.</span>
