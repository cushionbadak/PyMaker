<div class="post-text" itemprop="text">
<p>Is it possible to convert a json string (for e.g. the one returned from the twitter search json service) to simple string objects. Here is a small representation of data returned from the json service:</p>
<pre><code>{
results:[...],
"max_id":1346534,
"since_id":0,
"refresh_url":"?since_id=26202877001&amp;q=twitter",
.
.
.
}
</code></pre>
<p>Lets say that I somehow store the result in some variable, say, <strong>obj</strong>. I am looking to get appropriate values like as follows:</p>
<pre><code>print obj.max_id
print obj.since_id
</code></pre>
<p>I've tried using <code>simplejson.load()</code> and <code>json.load()</code> but it gave me an error saying <code>'str' object has no attribute 'read'</code></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I've tried using <code>simplejson.load()</code> and <code>json.load()</code> but it gave me an error saying <code>'str' object has no attribute 'read'</code></p>
</blockquote>
<p>To load from a string, use <code>json.loads()</code> (note the 's').</p>
<p>More efficiently, skip the step of reading the response into a string, and just pass the response to <code>json.load()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you don't know if the data will be a file or a string.... use</p>
<pre><code>import StringIO as io
youMagicData={
results:[...],
"max_id":1346534,
"since_id":0,
"refresh_url":"?since_id=26202877001&amp;q=twitter",
.
.
.
}

magicJsonData=json.loads(io.StringIO(str(youMagicData)))#this is where you need to fix
print magicJsonData
#viewing fron the center out...
#youMagicData{}&gt;str()&gt;fileObject&gt;json.loads
#json.loads(io.StringIO(str(youMagicData))) works really fast in my program and it would work here so stop wasting both our reputation here and stop down voting because you have to read this twice 
</code></pre>
<p>from <a href="https://docs.python.org/3/library/io.html#text-i-o" rel="nofollow">https://docs.python.org/3/library/io.html#text-i-o</a></p>
<p>json.loads from the python built-in libraries, json.loads requires a file object and does not check what it's passed so it still calls the read function on what you passed because the file object only gives up data when you call read(). So because the built-in string class does not have the read function we need a wrapper. So the StringIO.StringIO function in short, subclasses the string class and the file class and meshing the inner workings hears my low detail rebuild <a href="https://gist.github.com/fenderrex/843d25ff5b0970d7e90e6c1d7e4a06b1" rel="nofollow">https://gist.github.com/fenderrex/843d25ff5b0970d7e90e6c1d7e4a06b1</a>
so at the end of all that its like writing a ram file and jsoning it out in one line....</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>magicJsonData=json.loads(io.StringIO((youMagicData).decode("utf-8"))
print(magicJsonData)
</code></pre>
<p>The json string from any request or http server is of type byte array
to convert them in to string, (since the question is about byte array returned from a server request, right?) </p>
<pre><code>res = json.loads((response.content).decode("utf-8") )
print(res)
</code></pre>
<p>here the <code>response.content</code>  can be a byte array or any returned string from server request which is decoded to string (utf-8) format and returned as python array.</p>
<p>Or just use a bytearray but use json.load instead json.loads</p>
</div>
<span class="comment-copy">oh, didn't know that I get a dictionary. Anyway thats fine for the moment...</span>
<span class="comment-copy">doesn't work at all</span>
