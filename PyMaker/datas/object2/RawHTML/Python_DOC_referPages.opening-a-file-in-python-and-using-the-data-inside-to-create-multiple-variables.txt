<div class="post-text" itemprop="text">
<p>For my assignment I have been asked to create a python ATM.
I am going to have all the balances, account details, pin and account number on a txt file which I have made. 
How would I access this file then create a variable from the number which then can be used to deduct balances add balances and change the pin. All I have done so far is:</p>
<pre><code>f = open('info.txt').read().split()
print(f)
</code></pre>
<p>And I am stuck on using those values to create variables in the actual program</p>
<p>The test in the file looks like</p>
<pre><code>Accountnumber 123412341234 
Accountpin 1234 
Creditcardbal 0 
Savingsbal 0 
Name Alex
</code></pre>
<p>So how could I create a varieble called creditcardbal from the data above and if I want to change it how can I edit it in the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, you should not store the information in the manner that you have shown. One very efficient way of storing such information will be to use a csv (comma separated values) file. For your case, a csv file will look like below. Go ahead and store it in a file named atm.csv (you can change the extension if you wish.</p>
<pre><code>Accountnumber,Accountpin,Creditcardbal,Savingsbal,Name
123412341234,1234,0,0,Alex
587452639810,5879,230.20,1265.88,Hans Muster 
</code></pre>
<p>Go ahead and create a python file called atm.py with following code</p>
<pre><code>import csv

global atm

class Account:
    def __init__(self, anum, apin, crbal, savbal, name):
        self.account_number = anum
        self.account_pin = apin
        self.credit_balance = float(crbal)
        self.savings_balance = float(savbal)
        self.name = name

    def change_credit_balance(self, balance):
        self.credit_balance = self.credit_balance + balance

    def change_savings_balance(self, balance):
        self.savings_balance = self.savings_balance + balance

    def change_account_pin(self, pin):
        self.account_pin = pin

    def __str__(self):
        return "name: %s, account_number: %s, credit_balance: %s, savings_balance: %s, account_pin: %s" \
        %(self.name, self.account_number, self.credit_balance, self.savings_balance, self.account_pin)


atm = []

def increase_all_savings(amount):
    for account in atm:
        account.change_savings_balance(amount)

def print_all_accounts():
    for account in atm:
        print(account)

def load_data():
    with open('atm.csv') as csv_file:
        csv_reader = csv.reader(csv_file, delimiter=',')
        line_count = 0
        for row in csv_reader:
            if line_count == 0:
                # for the first row which is column header
                pass       
            else:
                print('Values are %s', ",".join(row)) 
                # data, one record per line
                atm.append(Account(row[0], row[1], row[2], row[3], row[4]))            
            line_count += 1


def store_data():
    with open('atm.csv', mode='w') as csv_file:
        csv_writer = csv.writer(csv_file, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
        # write header or column names
        csv_writer.writerow(['Accountnumber','Accountpin','Creditcardbal','Savingsbal','Name'])
        # write all records
        for account in atm:
            csv_writer.writerow([account.account_number, account.account_pin, account.credit_balance, account.savings_balance, account.name])



if __name__ == '__main__':
    load_data()
    print("=========")
    print("Initial state")
    print_all_accounts()
    increase_all_savings(30)
    print("=========")
    print("State after increasing savings balance by 30")
    print_all_accounts()
    store_data()

</code></pre>
<p>execute this python file (assuming you have python3) like so</p>
<pre><code>python3 atm.py
</code></pre>
<p>Follow the printed input, output and csv file content (before and after execution) carefully, you will get the idea for your assignment </p>
</div>
<span class="comment-copy">What are the things you explored then? What was the output of print? You could try exploring the split function in python.</span>
<span class="comment-copy">with the csv in the file can i still use a .txt file</span>
<span class="comment-copy">I really appreciate the time that you have put into that reposonce but I was looking for a simple way to use a text file then to make a variable using that data, im only in grade 10, and have a very basic python knoldege</span>
<span class="comment-copy">CSVs are nothing but text files, and you indeed can replace the extension of the file from .csv to .txt. This is a very simple way to do what you are after as most of the heavy lifting is done by Python batteries (inbuilt libraries)</span>
<span class="comment-copy">I have redone the reply and given you the complete code. Just go step by step as instructed. It's pretty simple you should not have any difficulties following it.</span>
<span class="comment-copy">It is saying "SyntaxError: invalid syntax" when typing "python3 atm.py" and is highlighting "atm" in red currently i am running IDLE python 3.7</span>
