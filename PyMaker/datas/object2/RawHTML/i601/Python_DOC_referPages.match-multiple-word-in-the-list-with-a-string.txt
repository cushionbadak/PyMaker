<div class="post-text" itemprop="text">
<p>I want to match a multiple words in the list with input string and return a list of matched words. 
for example:</p>
<pre><code>x = input("Enter a string?")
keywords= ["freeway", "doesn't turn on", "dropped", "got sick", "traffic jam", " car accident"]
</code></pre>
<p>output:</p>
<pre><code>Enter a string? there is a car accident on the freeway so that why I am late for the show. 

the list of matched words are: car accident, freeway
</code></pre>
<p>I researched and some people suggest to use any():
if any(keyword in x for keyword in keywords) but it only return true or false. 
how can I return a list of matched words. Anyone can help me with this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the tride and true <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re</a> library.</p>
<pre><code>import re
from collections import OrderedDict

def get_matches(s, keys, include_duplicates=False):
    pattern = re.compile('|'.join(map(re.escape, keys)))
    all_matches = pattern.findall(s, re.IGNORECASE)

    if not include_duplicates:
        all_matches = list(OrderedDict.fromkeys(all_matches).keys())
    return all_matches
</code></pre>
<p>This is very versitile in that there's no needing to worry about retrieving matches out of order <em>(thanks to <code>dict.fromkeys</code>)</em>. And you have the option to include duplicates in the response.</p>
<hr/>
<h1>Explanation</h1>
<p>All I am doing with re is creating a pattern looking for every string in <code>keywords</code> *(<code>keys)* seperated by a</code>|<code>this tells</code>re` to look for all matches of keys.</p>
<p><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">re.findall</a> returns matches in order as explained in the docs:</p>
<blockquote>
<p>Return <strong>all non-overlapping matches</strong> of pattern in string, as a list of
  strings. The string is scanned left-to-right, and matches are <strong>returned
  in the order found.</strong></p>
</blockquote>
<p>This does not take into account duplicates, so the <code>include_duplicates</code> argument is included for such cases where you want them. You could just turn the results into a set to remove duplicates, although you would lose order integrity, thus I used <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer">collections.OrderedDict</a> and turned that back into a list.</p>
<hr/>
<h1>Put into use:</h1>
<pre><code>text = "there is a car accident on the freeway so that why I am late for the show."
keywords= {
  "freeway",
  "doesn't turn on",
  "dropped",
  "got sick",
  "traffic jam",
  " car accident"}
matches = get_matches(text, keywords)
print(f"the list of matched words are: {', '.join(matches)}")
#the list of matched words are:  car accident, freeway, freeway
</code></pre>
<p>You can try this out for yourself <a href="https://repl.it/repls/AbleEssentialDribbleware" rel="nofollow noreferrer">https://repl.it/repls/AbleEssentialDribbleware</a>.</p>
<p><strong>Edit</strong></p>
<p><em>As you asked in your comment:</em></p>
<p>To explain that this line does:</p>
<pre><code>pattern = re.compile('|'.join(map(re.escape, keys)))
</code></pre>
<ul>
<li><code>re.compile</code> - Makes a regex pattern from a string. - <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer">see the docs</a> </li>
<li><code>join</code> Takes an iterable of strings and makes one string of them all separated by the string preceding string. - <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">see the docs</a></li>
<li><code>map</code> &amp; <code>re.escape</code> <em>you could take this out for your case</em> <strong>but</strong>should you, or anyone reading this, be using using more complex keyword searches, this takes each keyword and escapes <code>re</code>'s special metacharacters - (see the docs: <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>, <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer">re.escape</a>)</li>
</ul>
<p>This line could be rewritten without <code>map</code> and <code>re.escape</code> and still work fine like this:</p>
<pre><code>pattern = re.compile('|'.join(keys))
</code></pre>
<p>Just know you cannot include characters like: <code>(</code> or <code>*</code> etc... in your keywords.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use sets to find out which strings match between user entered strings and your keywords.</p>
<p>Check the below code:</p>
<pre><code>keywords= ["freeway", "doesn't turn on", "dropped", "got sick", "traffic jam", " car accident"]

user_strings = []

while True:
    x = input("Enter a string?")
    if x == 'exit':
        break
    user_strings.append(x)

print ("User strings = %s" %(user_strings))
print ("keywords = %s" %(keywords))

print ("Matched Words = %s" %(list(set(keywords) &amp; set(user_strings))))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter a string?"doesn't turn on"
Enter a string?"freeway"
Enter a string?"Hello"
Enter a string?"World"
Enter a string?"exit"
User strings = ["doesn't turn on", 'freeway', 'Hello', 'World']
keywords = ['freeway', "doesn't turn on", 'dropped', 'got sick', 'traffic jam', ' car accident']
Matched Words = ['freeway', "doesn't turn on"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>[i for i in keywords if i in x]
</code></pre>
<p>edit: this does what you want it to</p>
</div>
<span class="comment-copy">thank you so much it solved my problem.</span>
<span class="comment-copy">Can you explain to me this line of code: re.compile('|'.join(map(re.escape, keys)</span>
<span class="comment-copy">What part? I added an explanation to the end of my answer.</span>
<span class="comment-copy">thank you for your time and explanation.</span>
<span class="comment-copy">If this answer helped you please accept it as an answer using the check mark to the left of the <a href="https://stackoverflow.com/a/54585460/225020">answer</a>.</span>
<span class="comment-copy">thank you for your help but it only works if I input specific keyword. it doesn't work if I input a long string.</span>
<span class="comment-copy">It's recommended that you add some explanation to what your code is supposed to do, as it will make your post more helpful to the OP and other users.</span>
<span class="comment-copy">thank you for your help.</span>
