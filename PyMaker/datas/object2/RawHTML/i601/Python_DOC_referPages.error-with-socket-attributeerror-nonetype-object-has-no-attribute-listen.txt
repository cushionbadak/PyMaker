<div class="post-text" itemprop="text">
<p>I'm trying to write a simple TCP socket server.</p>
<p>I'm getting this error:</p>
<pre><code>  File "patch", line 9, in __init__
    self.__SocketServer__.listen(1)
AttributeError: 'NoneType' object has no attribute 'listen'
</code></pre>
<p>And I can't understand why.</p>
<p>Code:</p>
<pre><code>class DataManager:
    def __init__(self):
        self.__port__ = 2121
        self.__ip__ = "127.0.0.1"
        self.__SocketServer__ = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.__SocketServer__ = self.__SocketServer__.bind((self.__ip__, self.__port__))
        self.__SocketServer__.listen(1)
        self.__log__("Waiting car connection...")
        self.__CarSocket__, addr = self.__SocketServer__.accept()
        self.__log__("Car socket connected")
        self.__CarSocket__ = None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>socket.bind()</code> returns <code>None</code>. Don't assign this back to your socket attribute:</p>
<pre><code>self.__SocketServer__ = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
self.__SocketServer__.bind((self.__ip__, self.__port__))
self.__SocketServer__.listen(1)
</code></pre>
<p>On a side note: don't use <code>__doubleunderscore__</code> names for your own projects. Python <a href="https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers" rel="nofollow noreferrer">reserves this class of names</a> for its own use.</p>
<p>If you want to mark names as internal to the instance, use single underscores at the start of names. Python classes have <em>no privacy model</em>, all attributes are always accessible from the outside.</p>
<p>So this suffices:</p>
<pre><code>class DataManager:
    def __init__(self):
        self._port = 2121
        self._ip = "127.0.0.1"

        self._socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self._socket.bind((self._ip, self._port))
        self._socket.listen(1)

        self._log("Waiting car connection...")
        self._connection, addr = self._socket.accept()
        self._log("Car socket connected")
        self._connection = None
</code></pre>
<p>I've used more commonly-used names for the socket and connection, also adhering to the <a href="https://www.python.org/dev/peps/pep-0008/#naming-conventions" rel="nofollow noreferrer">Python style guide</a>.</p>
</div>
<span class="comment-copy">Can I ask why you are using <code>__double_underscore__</code> names for <i>everything</i>? Python <a href="https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers" rel="nofollow noreferrer">reserves that class of names for its own uses</a>.</span>
<span class="comment-copy">@MartijnPieters, for private class members. Something wrong?</span>
<span class="comment-copy">Private variables are done with <code>_single_underscore</code>s.</span>
<span class="comment-copy">Yes, don't use <code>__name__</code> names for your own attributes. Just use <code>_name</code>, single underscore at the start. Python has no privacy model, only a <i>convention</i> of how to use names.</span>
<span class="comment-copy">oh, sorry guys, i'm newbie in python, my main languages - is C++ and Java :D</span>
