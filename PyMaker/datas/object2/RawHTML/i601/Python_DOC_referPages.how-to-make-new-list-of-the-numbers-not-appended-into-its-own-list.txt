<div class="post-text" itemprop="text">
<p>If I have a multidimensional list called t and I append some numbers from the list into a new list called TC, how do I take all of the numbers that were not appended into the new list and put them in their own list, called nonTC? For example:</p>
<pre><code>t = [[1, 3, 4, 5, 6, 7],[9, 7, 4, 5, 2], [3, 4, 5]]
</code></pre>
<p>And I write some conditions to append only some values from each list to create the new list, TC:</p>
<pre><code>TC = [[3, 4, 6], [9, 7, 2], [5]]
</code></pre>
<p>How do I append the values not included in TC into its own list? So I would get:</p>
<pre><code>nonTC = [[1, 5, 7],[4, 5],[3,4]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehensions and a list of sets to filter your original list:</p>
<pre><code>t = [[1, 3, 4, 5, 6, 7],[9, 7, 4, 5, 2], [3, 4, 5]]

# filter sets - each index corresponds to one inner list of t - the numbers in the 
# set should be put into TC - those that are not go into nonTC
getem = [{3,4,6},{9,7,2},{5}]

TC = [ [p for p in part if p in getem[i]] for i,part in enumerate(t)]
print(TC)

nonTC = [ [p for p in part if p not in getem[i]] for i,part in enumerate(t)]     
print(nonTC)
</code></pre>
<p>Output:</p>
<pre><code>[[3, 4, 6], [9, 7, 2], [5]] # TC
[[1, 5, 7], [4, 5], [3, 4]] # nonTC
</code></pre>
<p>Readup:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a></li>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">sets</a> </li>
<li><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate(iterable)</a> </li>
</ul>
<p>And: <a href="https://stackoverflow.com/questions/20639180/explanation-of-how-nested-list-comprehension-works">Explanation of how nested list comprehension works?</a></p>
<hr/>
<p>Suggestion for other way to do it, creds to <a href="https://stackoverflow.com/users/2750492/achampion">AChampion</a>:</p>
<pre><code>TC_1 = [[p for p in part if p in g] for g, part in zip(getem, t)]
nonTC_1 = [[p for p in part if p not in g] for g, part in zip(getem, t)]
</code></pre>
<p>See <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip()</a> - it essentially bundles the two lists into an iterable of tuples </p>
<pre><code>( (t[0],getem[0]), (t[1],getem[1]) (t[2],getem[2])) 
</code></pre>
<hr/>
<p>Add-On for multiple occurences - forfeiting list comp and sets:</p>
<pre><code>t = [[1, 3, 4, 5, 6, 7, 3, 3, 3],[9, 7, 4, 5, 2], [3, 4, 5]]

# filter lists - each index corresponds to one inner list of t - the numbers in the list
# should be put into TC - those that are not go into nonTC - exactly with the amounts given
getem = [[3,3,4,6],[9,7,2],[5]]

from collections import Counter
TC = []
nonTC = []
for f, part in zip(getem,t):
    TC.append([])
    nonTC.append([])
    c = Counter(f) 
    for num in part:
        if c.get(num,0) &gt; 0:
            TC[-1].append(num)
            c[num]-=1
        else:
            nonTC[-1].append(num)            

print(TC)    # [[3, 4, 6, 3], [9, 7, 2], [5]]
print(nonTC) # [[1, 5, 7, 3, 3], [4, 5], [3, 4]]
</code></pre>
<p>It needs only 1 pass over your items instead of 2 (seperate list comps) which makes it probably more efficient in the long run...</p>
</div>
<div class="post-text" itemprop="text">
<p>Just out of curiosity, using NumPy:</p>
<pre><code>import numpy as np

t = [[1, 3, 4, 5, 6, 7],[9, 7, 4, 5, 2], [3, 4, 5]]
TC = [[3, 4, 6], [9, 7, 2], [5]]

print([np.setdiff1d(a, b) for a, b in zip(t, TC)])
#=&gt; [array([1, 5, 7]), array([4, 5]), array([3, 4])]
</code></pre>
</div>
<span class="comment-copy">It would be good to see what you've tried. How do you expect to handle repeats, does order matter? Using <code>set</code>s would make this relative easy, e.g. <code>[sorted(set(a).difference(b)) for a, b in zip(t, TC)]</code></span>
<span class="comment-copy">You could alternatively use <code>zip()</code> instead of indexing in <code>getem</code>, e.g. <code>[[p for p in part if p not in g] for g, part in zip(getem, t)]</code></span>
<span class="comment-copy">Both of your suggestions work! Thanks!</span>
<span class="comment-copy">@AChampion edited and credited in case your comment vanishes somehow</span>
<span class="comment-copy">What if there are repeats in the list? For example, if 't=[[1, 3, 3, 4, 5, 6, 7],[9, 7, 4, 5, 2], [3, 4, 5]]' and only one of the 3's in the first set was appended into TC?</span>
<span class="comment-copy">@May  use an old fashioned loop and remove a number when taken from the corresponding set so it wont get into again. For the nonTC you would do it similarly -you would need to keep the original sets and use copies. Thats quite out of your original question though ...</span>
