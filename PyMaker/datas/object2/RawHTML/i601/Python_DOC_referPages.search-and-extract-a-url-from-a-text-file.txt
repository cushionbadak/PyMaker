<div class="post-text" itemprop="text">
<p>I'm looking to grab a url that begins with http:// or https:// from a textfile that also contains other unrelated text and transfer it to another file/list. </p>
<pre><code>    def test():
        with open('findlink.txt') as infile, open('extractlink.txt', 'w') as outfile:
            for line in infile:
                if "https://" in line:
                    outfile.write(line[line.find("https://"): line.find("")])
            print("Done")
</code></pre>
<p>The code currently does nothing.</p>
<p>Edit: I see this is being negatively voted like usual, is there anything I can add here?</p>
<p>This is not a duplicate, please re-read carefully.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re</a> like in <a href="https://stackoverflow.com/questions/9760588/how-do-you-extract-a-url-from-a-string-using-python">this</a> answer. Below is this incorperated into your function.</p>
<pre><code>def test():
        with open('findlink.txt', 'r') as infile, open('extractlink.txt', 'w') as outfile:
            for line in infile:
                try:
                    url = re.search("(?P&lt;url&gt;https?://[^\s]+)", line).group("url")
                    outfile.write(url)
                except AttributeError:
                    pass
            print("Done")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re</code> to extract all the url.</p>
<pre><code>In [1]: st = '''https://regex101.com/ ha the hkj adh erht  https://regex202.gov
   ...: h euy ashiu fa https://regex303.com aj feij ajj ai http://regex101.com/'''

In [2]: st
Out[2]: 'https://regex101.com/ ha the hkj adh erht  https://regex202.gov h euy ashiu fa https://regex303.com aj feij ajj ai http://regex101.com/'

In [3]: import re

In [4]: a = re.compile(r"https*://(\w+\.\w{3})/*")
In [5]: for i in a.findall(st):
   ...:     print(i)


regex101.com
regex202.gov
regex303.com
regex101.com
</code></pre>
<p>For variable tld and path:</p>
<pre><code>st = '''https://regex101.com/ ha the hkj adh erht  https://regex202.gov h euy ashiu fa https://regex303.com aj feij ajj ai http://regex101.com/ ie fah fah http://regex101.co/ ty ahn fah jaio l http://regex101/yhes.com/'''
a = re.compile(r"https*://([\w/]+\.\w{0,3})/*")
for i in a.findall(st):
    print(i)

regex101.com
regex202.gov
regex303.com
regex101.com
regex101.co
regex101/yhes.com
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's why the code currently does nothing:</p>
<pre><code>outfile.write(line[line.find("https://"): line.find("")])
</code></pre>
<p>Note that <code>line.find("")</code> is looking for the empty string. This is always going to be found at the very beginning of the string, and therefore will always return 0. Thus your list slice is 0 elements long and thus is empty.</p>
<p>Try changing it to <code>line.find(" ")</code> - you're looking for a space, not an empty string.</p>
<hr/>
<p>However, if the line contains spaces before that point, you're still going to mess up. The simplest-to-read way to do it is probably just using separate variables:</p>
<pre><code>if "https://" in line:
    https_begin = line.find("https://")
    https_end = line[https_begin:].find(" ")  # find the next space after the url begins
    outfile.write(line[https_begin: https_end])
</code></pre>
</div>
<span class="comment-copy">What is expected out of this <code>outfile.write(line[line.find("https://"): line.find("")])</code>?</span>
<span class="comment-copy">It is expected to separate the URL from other unrelated text. Picture a file with contents like this <code>lorem ipsum https://stackoverflow.com/questions/54543095/search-and-extract-a-url-from-a-text-file dolor sit amet</code> There may or may not be text written after the URL so <code>line.find(" ")</code> would not be useful here.</span>
<span class="comment-copy">The second part of your slice <code>line.find("")</code> this returns <code>0</code> that will completely mess up the slice. use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re</a></span>
<span class="comment-copy">Yes @Jaba, I'm looking for the proper solution to fix that. Leaving that out won't return only the URL like needed.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/9760588/how-do-you-extract-a-url-from-a-string-using-python">How do you extract a url from a string using python?</a></span>
<span class="comment-copy">Thank you. This solves the issue without worrying about specific TLDs or lengths!</span>
<span class="comment-copy">Just a note so you can edit your solution, this returns an attribute error due to <code>group</code> if <code>re.search</code> doesn't return a url.</span>
<span class="comment-copy">@Dansey Edited my answer</span>
<span class="comment-copy">I know this is weeks later but does .group serve a purpose? could <code>?P&lt;url&gt;</code> and <code>.group("url")</code> be removed to make a simple re search? @Jab</span>
<span class="comment-copy">No, re.search returns either <code>None</code> or <a href="https://docs.python.org/2/library/re.html#re.MatchObject" rel="nofollow noreferrer"><code>re.MatchObject</code></a> as per the docs. Read there and see your options.</span>
<span class="comment-copy">Would this also work for URLs that have a path? All URLs being used here will contain a path and a TLD that may or may not have 3 characters.</span>
<span class="comment-copy">for tld, you can use {0,3} to have no characters upto 3 characters. For path, you can include path separator in the group <code>/*</code></span>
<span class="comment-copy">Also it would help if you include some examples of url you are extracting.</span>
<span class="comment-copy">See comments. I'm not looking for a space as infile may or may not contain a space after the url.</span>
<span class="comment-copy">That's not a problem though. Then the <code>find(' ')</code> would return a <code>-1</code> and you're good to go.</span>
<span class="comment-copy">A possible solution using this would be to add a space to the end of findlink.txt regardless of its contents.</span>
