<div class="post-text" itemprop="text">
<p>I'm having trouble creating a zip in my file system which is dynamic depending on what's defined in the <code>.env</code> file. Can someone guide me through the correct way of writing the zip file?</p>
<p>Here's what I've come up so far which is I know is incorrect.</p>
<pre><code>import os
import zipfile
from fs import open_fs


def download_zip_report():
    try:
        fs = open_fs(os.getenv('UPLOAD_FOLDER').strip("'"))
        with fs.open('/', 'wb') as test_file:
            zf = zipfile.ZipFile('test2.zip', mode='w')
            zf.write('file.txt')
            zf.close()

    except Exception as e:
        logging.error(str(e))
        return Response(status=404)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what the file system package is used for but the appropriate way to write a zipfile is:</p>
<pre><code>from zipfile import ZipFile

with ZipFile('path/to/zipfile.zip', 'w') as zip_file:
    zip_file.write('path/to/file')
</code></pre>
<p>Bare in mind that <em>"...ZipFile is also a context manager and therefore supports the with statement. In the example, myzip is closed after the with statement’s suite is finished—even if an exception occurs.."</em> (From zipfile — Work with ZIP archives <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer">documentation</a>) so you don't have to use zip.close() at the end.
Thus applies to all context manager in Python.</p>
</div>
<span class="comment-copy">Just to answer your inquiry regarding the fs package. I am using it because I am uploading files to a remote server (aws), while on dev, I use the local machine. Hope this helps.</span>
<span class="comment-copy">Anyway, thank you for reminding me the 'with statement'. I was also hoping if you can answer whether on how would I be able to add the path if it's from remote or using the fs package.</span>
<span class="comment-copy">what's the value expected to be assigned to fs when running on a server or localhost?</span>
