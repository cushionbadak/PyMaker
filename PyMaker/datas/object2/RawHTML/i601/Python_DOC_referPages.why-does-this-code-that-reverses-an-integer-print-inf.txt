<div class="post-text" itemprop="text">
<p>I'm writing a program to print the reverse of an integer using Python. I would expect the output of <code>345</code> to be <code>543</code> (i.e., <code>345</code> reversed), but instead, I get <code>inf</code>.</p>
<p>Here's my code:</p>
<pre><code>def intreverse(n):
    r = 0

    while n != 0:
        d = n % 10
        r = r * 10 + d
        n = n / 10

    print(r)

intreverse(345)
</code></pre>
<p>What am I doing wrong, and how can I fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>As said above, you need integer to integer division.</p>
<p>Replace</p>
<pre><code>n = n/10
</code></pre>
<p>by</p>
<pre><code>n = n // 10
</code></pre>
<p><code>//</code> divides to <code>int</code> and not <code>float</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I may, your problem can be solved without any math at all</p>
<pre><code>def intreverse(n):
    return int(str(n)[::-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another possible way is to make the number into an array.</p>
<pre><code>def reverse(number):
    listing = []
    intversion = ""
    for letter in str(number):
        listing.insert(0, letter)
    for x in range(0, len(listing)):
        intversion += str(listing[x])
    print(int(intversion))

reverse(345)
</code></pre>
<p>The output would be as following:</p>
<pre><code>543
&gt;&gt;&gt; 
</code></pre>
<p>Note - The variables that I used can be changed to whatever you like, except <code>letter</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that division with <code>10</code>, implicitly convert <code>n</code> to <code>float</code>. The assumption is that <code>n</code> is an integer.</p>
<p>Change,</p>
<pre><code>n=n/10
</code></pre>
<p>to (prevent implicit convertion to <code>float</code>),</p>
<pre><code>n=int(n/10) or n=n//10
</code></pre>
<hr/>
<p><em>n.b. The original problem is that you do have <code>float</code> conversion and then your exit condition <code>n!=0</code> is not satisfied as you expect due to floating point inaccuracy.</em> </p>
</div>
<span class="comment-copy">Side note: converting to string, reversing and reconverting to integer is way easier</span>
<span class="comment-copy">@user8408080's comment in code: <code>intreverse = lambda i: int(str(i)[::-1])</code></span>
<span class="comment-copy">Hi John! Welcome to Stack Overflow. Please <a href="https://stackoverflow.com/posts/54607162/edit">edit</a> your answer to make sure that your indentation is right. Thanks!</span>
<span class="comment-copy">This is the overcomplicated version of <code>int(str(i)[::-1])</code>, basically. Also what you are doing is effectively rewriting the standard functions <code>reversed</code> and <code>join</code></span>
<span class="comment-copy">oh well I'm new to python I don't know how to use those yet so that's how I've always done it</span>
<span class="comment-copy">@JohnLiu no problem mate; didn't mean to sound rude or anything. Just said this, so you know it for the future. It may be a good idea for you, to read about the <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-in functions</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">built-in types</a> have a nice day :)</span>
<span class="comment-copy">ok cool thanks for the help</span>
