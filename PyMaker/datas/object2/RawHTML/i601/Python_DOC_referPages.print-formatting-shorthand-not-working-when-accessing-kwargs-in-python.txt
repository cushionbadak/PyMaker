<div class="post-text" itemprop="text">
<p>I have noticed, that if you want to print kwargs of a specefic key in python, it gives an error, when i put the keyword, in front of the the print statement like such </p>
<pre><code>def myfunc(*args, **kwargs):
''' sut min dodo funktionen'''
print(f'i would like {args[0]} and {kwargs['food']}') #gives error
print('I would like {} and {}'.format(args[0], kwargs['dodo'])) #works fine
</code></pre>
<p>the error i get is the following</p>
<pre><code>File "&lt;ipython-input-49-5f229585e335&gt;", line 3
print(f'i would like {args[0]} and {kwargs['food']}')
                                               ^
SyntaxError: invalid syntax
</code></pre>
<p>why is it that the second one works fine, but the first one fails to work, even though the logic is essentially the same, only the syntax and operation is different?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, is <code>f'{a['b']}'</code> valid syntax? How can you parse this expression? Is this <em>one single-quoted string</em>, as you expect?</p>
<p>No, it's not. It's parsed as:</p>
<pre><code>f'{a[' # f-string
b      # what's this?
']}'   # regular string
</code></pre>
<p>As you can see, this <code>b</code> is not actually a part of the string, because a pair of matching single quotes denote a string. It could've been treated as a variable name, but Python's syntax doesn't allow this. The same issue can be shown with a simpler example:</p>
<pre><code>'I'm a string, y'all!'
</code></pre>
<p>It's parsed like this:</p>
<pre><code>'I'           # a string
m a string, y # ??!!
'all!'        # a string
</code></pre>
<p>You can just use different quotes:</p>
<pre><code>print(f'i would like {args[0]} and {kwargs["food"]}')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre class="lang-py prettyprint-override"><code>print(f'i would like {args[0]} and {kwargs['food']}')
</code></pre>
<p>Here <code>printf</code> is expecting a string, but <code>'i would like {args[0]} and {kwargs['food']}'</code> is not a string - it's two strings sandwiching an unknown identifier (<code>food</code>).</p>
<p><code>'i would like {args[0]} and {kwargs['</code> + <code>food</code> + <code>']}'</code></p>
<p>Try this instead:</p>
<pre class="lang-py prettyprint-override"><code>print(f"i would like {args[0]} and {kwargs['food']}")
</code></pre>
</div>
<span class="comment-copy">Why is there an f in 2nd print statement?</span>
<span class="comment-copy"><a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">python.org/dev/peps/pep-0498</a></span>
<span class="comment-copy">Those are <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">formatted string literals</a>, introduced in python 3.6</span>
<span class="comment-copy">Thanks, I learned something new in python</span>
<span class="comment-copy">@Valentino yes exactly, thank you for elaborating</span>
<span class="comment-copy">ohh that makes sense, thank you</span>
<span class="comment-copy">makes sense, thank you!</span>
