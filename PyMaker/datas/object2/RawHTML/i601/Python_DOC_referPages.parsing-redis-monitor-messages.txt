<div class="post-text" itemprop="text">
<p>I'm trying to build a bridge between a Redis server and MQTT, so that when the Redis database is updated, these updates are dispatched via MQTT to clients.</p>
<p>For this a client (only one, the bridge) connects to the Redis database and starts to monitor it.</p>
<p>My issue is with parsing the commands, more specifically the arguments contained with it, which is a whitespace-separated list of stings.</p>
<p>For example, when I store the following hash in Redis</p>
<pre><code>data = {
  "key-3-1-json": "value-1",
  "key-3-2-json": 'this "this is \'quoted\' text"',
}
print r18.hmset("test-hash", {
  "key-1": "value-1",
  "key-2": 'this "this is \'quoted\' text"',
  "key-3": json.dumps(data),
})
</code></pre>
<p>the client recieves the following </p>
<p><code>1549578825.1 0 HMSET test-hash "key-3" "{\"key-3-1-json\": \"value-1\", \"key-3-2-json\": \"this \\\"this is 'quoted' text\\\"\"}" "key-2" "this \"this is 'quoted' text\"" "key-1" "value-1"</code></p>
<p>As you can see I'm already parsing the timestamp, database id, command and key, but the last part, I don't know how to create a list of strings from it.</p>
<p>This message would then be sent over MQTT as</p>
<p><code>mqtt.publish("redis/mon/0/HMSET/test-hash", json.dumps(args))</code></p>
<p>where <code>args</code> would be</p>
<pre><code>[
  "key-3",
  "{\"key-3-1-json\": \"value-1\", \"key-3-2-json\": \"this \\\"this is 'quoted' text\\\"\"}",
  "key-2",
  "this \"this is 'quoted' text\"",
  "key-1",
  "value-1"
]
</code></pre>
<p>which would probably be the most complex case, since usually the args would be one single string, in the case where <code>r18.set</code> would have been used instead of <code>r18.hmset</code>.</p>
<hr/>
<p>I think there must be some built-in module in Python which could to this as it is like parsing a command line string.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>subprocess</code> module's documentation states that <code>subprocess.Popen()</code> makes use of <code>shlex.split()</code> (<a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer">shlex: Simple lexical analysis</a>)</p>
<p>Calling <code>shlex.split(args_str)</code> effectively converts the arguments string into the desired list of substrings.</p>
</div>
