<div class="post-text" itemprop="text">
<p>I am trying to create a program to easily handle IT requests, and I have created a program to test if a PC on my network is active from a list.</p>
<p>To do this, I wrote the following code:</p>
<pre><code>self.btn_Ping.clicked.connect(self.ping)

def ping(self):
        hostname = self.listWidget.currentItem().text()
        if hostname:
            os.system("ping " + hostname + " -t")
</code></pre>
<p>When I run it my main program freezes and I can't do anything until I close the ping command window. What can I do about this? Is there any other command I can use to try to ping a machine without making my main program freeze?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer">docs</a> state that <code>os.system()</code> returns the value returned by the command you called, therefore blocking your program until it exits.</p>
<p>They also state that you should use the <a href="https://docs.python.org/3/library/subprocess.html#replacing-os-system" rel="nofollow noreferrer"><code>subprocess</code> module</a> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <code>ping</code> documentation:</p>
<pre><code>ping /?

Options:
-t             Ping the specified host until stopped.
               To see statistics and continue - type Control-Break;
               To stop - type Control-C.
</code></pre>
<p>So, by using <code>-t</code> you are waiting until that machine has stopped, and in case that machine is not stopping, your Python script will run forever.</p>
<p>As mentioned by HyperTrashPanda, use another parameter for launching <code>ping</code>, so that it stops after one or some attempts.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in Tim Pietzcker's answer, the use of <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> is highly recommended over <code>os.system</code> (and others).</p>
<p>To separate the new process from your script, use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer"><code>subprocess.Popen</code></a>. You should get the output printed normally into <code>sys.stdout</code>. If you want something more complex (e.g. for only printing something if something changes), you can set the <code>stdout</code> (and <code>stderr</code> and <code>stdin</code>) arguments:</p>
<blockquote>
<p>Valid values are PIPE, DEVNULL, an existing file descriptor (a positive integer), an existing file object, and None. PIPE indicates that a new pipe to the child should be created. DEVNULL indicates that the special file os.devnull will be used. With the default settings of None, no redirection will occur; the childâ€™s file handles will be inherited from the parent.<br/>
  -- <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">docs on subproces.Popen</a>, if you scroll down</p>
</blockquote>
<p>If you want to get the exit code, use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.poll" rel="nofollow noreferrer"><code>myPopenProcess.poll()</code></a>. </p>
</div>
<span class="comment-copy">You can just run the <code>ping</code> command with the <code>-n 1</code> argument, so that only one attempt is made to contact the remote machine. The <code>-t</code> option you're using is supposed to "Ping the specified host until stopped." as per the documentation, so it's doing exactly what you asked of it.</span>
<span class="comment-copy">You should avoid using <code>os.system</code>. Use <code>subprocess.call(["ping", hostname, "-t"])</code> instead.</span>
<span class="comment-copy">i want it to ping "for ever" or until canceled cause sometimes i am tracking a certain connection problem but i want it to be seperate from the main program</span>
<span class="comment-copy">If you want it to be separate, <code>os.system</code> is wronger. It waits for the command to complete. Don't use <code>os.popen</code> instead.</span>
<span class="comment-copy">actualy i played with threads and made a new thread something like this def ping_t1(host):          _thread.start_new_thread(ping_t2,(host, ))</span>
<span class="comment-copy">i try using the subprocess but where do i get the output?</span>
