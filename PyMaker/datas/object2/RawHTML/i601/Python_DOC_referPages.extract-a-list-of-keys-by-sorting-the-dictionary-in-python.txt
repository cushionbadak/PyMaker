<div class="post-text" itemprop="text">
<p>I have my program's output as a python dictionary and i want a list of keys from the <code>dictn</code>:</p>
<pre><code>s = "cool_ice_wifi"
r = ["water_is_cool", "cold_ice_drink", "cool_wifi_speed"]
good_list=s.split("_")
dictn={}
for i in range(len(r)):
    split_review=r[i].split("_")
    counter=0
    for  good_word in good_list:
        if good_word in split_review:
          counter=counter+1
          d1={i:counter}
          dictn.update(d1)

print(dictn)
</code></pre>
<p>The conditions on which we should get the keys:</p>
<ol>
<li>The keys with the same values will have the index copied as it is in a dummy list.</li>
<li>The keys with highest values will come first and then the lowest in the dummy list</li>
</ol>
<p><strong>Dictn</strong>={0: 1, 1: 1, 2: 2}</p>
<p><strong>Expected output</strong> = [2,0,1]</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comp:</p>
<pre><code>[key for key in sorted(dictn, key=dictn.get, reverse=True)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python3 it is now possible to use the <code>sorted</code> method, as described <a href="https://stackoverflow.com/questions/20944483/python-3-sort-a-dict-by-its-values">here</a>, to sort the dictionary in any way you choose.<br/>
Check out the <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">documentation</a>, but in the simplest case you can <code>.get</code> the dictionary's values, while for more complex operations, you'd define a <code>key</code> function yourself.</p>
<p>Dictionaries in Python3 are now <a href="https://stackoverflow.com/a/39980744/10989396">insertion-ordered</a>, so one other way to do things is to sort at the moment of dictionary creation, or you could use an OrderedDict.</p>
<p>Here's an example of the first option in action, which I think is the easiest</p>
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; a = {}
&gt;&gt;&gt; a[0] = 1
&gt;&gt;&gt; a[1] = 1
&gt;&gt;&gt; a[2] = 2
&gt;&gt;&gt; print(a)
{0: 1, 1: 1, 2: 2}
&gt;&gt;&gt;
&gt;&gt;&gt; [(k) for k in sorted(a, key=a.get, reverse=True)]
[2, 0, 1]
</code></pre>
</div>
<span class="comment-copy">print(list(dictn.keys()))</span>
<span class="comment-copy">it wouldn't give the required order</span>
<span class="comment-copy">[2, 1, 0]  we get this order</span>
