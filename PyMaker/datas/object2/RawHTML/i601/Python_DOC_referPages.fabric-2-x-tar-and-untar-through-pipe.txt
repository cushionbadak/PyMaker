<div class="post-text" itemprop="text">
<p>I want to do the equivalent of this shell script:</p>
<pre><code>ssh visarend.solasistim.net tar -c /home/amoe/episodes | tar -vx -
</code></pre>
<p>But using Fabric 2.x.  This is my attempt, but I'm not sure what the problem is.</p>
<pre><code>remote_path = "/home/amoe/episodes"

c = fabric.Connection('visarend.solasistim.net')

with subprocess.Popen(['tar', '-vx'], stdin=subprocess.PIPE) as reader_proc:
    c.run(
        "tar -c %s" % (remote_path,),
        out_stream=reader_proc.stdin
    )
</code></pre>
<p>This gives me the error:</p>
<pre><code>  File "/usr/local/lib/python3.5/dist-packages/invoke/runners.py", line 525, in write_our_output
    stream.write(encode_output(string, self.encoding))

TypeError: a bytes-like object is required, not 'str'
</code></pre>
<p>Along with some <a href="https://gist.github.com/amoe/26dd7508783da86046cb46eb52c9abeb" rel="nofollow noreferrer">other errors</a>.  I understand that it's probably because the stream that I get from <code>reader_proc.stdin</code> is a bytes stream, not a unicode stream.  But I don't understand why <a href="http://docs.pyinvoke.org/en/latest/api/runners.html#invoke.runners.Runner" rel="nofollow noreferrer">run</a> would need a unicode stream, or what the correct change would be to make it work.</p>
</div>
<div class="post-text" itemprop="text">
<p>I can't comment on why the task executed via <code>fabric.Connection.run()</code> is assumed to produce a text stream, however, thanks to the existence of the <code>latin-1</code> encoding, an actual binary stream packaged into a text stream object can be reinterpreted as a binary stream without any distortion:</p>
<pre><code>import fabric
import subprocess
from io import TextIOWrapper

remote_path = "/home/amoe/episodes"

c = fabric.Connection('visarend.solasistim.net')

with subprocess.Popen(['tar', '-vx'], stdin=subprocess.PIPE) as reader_proc:
    c.run(
        "tar -c %s" % (remote_path,),
        out_stream=TextIOWrapper(reader_proc.stdin, encoding='latin-1'),
        encoding='latin-1'
    )
</code></pre>
</div>
<span class="comment-copy">Very nice.. can you briefly elaborate on the significance of using <code>latin-1</code>?</span>
<span class="comment-copy">@cody In fact any charmap encoding (see <a href="https://docs.python.org/3/library/codecs.html#encodings-and-unicode" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html#encodings-and-unicode</a>) will work. <code>latin-1</code> (aka <code>iso-8859-1</code>) is merely the simplest such encoding (it maps the continuous range of code points 0–255 to the bytes 0x0–0xff).</span>
