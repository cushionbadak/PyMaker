<div class="post-text" itemprop="text">
<p>I have a list like the following:</p>
<pre><code>[[2, 5, "bicycle"],
[1, 4, "table"],
[5, 2, "stew"],
[2, 2, "seesaw"],
...
]
</code></pre>
<p>How could I sort this list in the most readable way, if the main key would be the first element and the secondary key is the second element, in case there are multiple of the first element? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>sorted</code> with <code>key</code> parameter:</p>
<pre><code>lst = [[2, 5, "bicycle"],
[1, 4, "table"],
[5, 2, "stew"],
[2, 2, "seesaw"]]

print(sorted(lst, key=lambda x: (x[0], x[1])))
# [[1, 4, 'table'], [2, 2, 'seesaw'], [2, 5, 'bicycle'], [5, 2, 'stew']]
</code></pre>
<p><code>(x[0], x[1])</code> part basically asks Python to sort by first element and then by second element in case first element is duplicate.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> built-in allows you to specify custom keys. There is also a useful <a href="https://docs.python.org/3/howto/sorting.html#sort-stability-and-complex-sorts" rel="nofollow noreferrer">how-to</a> on multi-key sorts. Adapting your example to theirs</p>
<pre><code>l = [[2, 5, "bicycle"],
[1, 4, "table"],
[5, 2, "stew"],
[2, 2, "seesaw"],
...
]

s = sorted(l, key=lambda o: o[1])     # sort on secondary key
sorted(s, key=lambda o: o[0])         # now sort on primary key
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <strong>sort()</strong> method can be used. The basic syntax is: </p>
<pre><code>list.sort(key=...)
</code></pre>
<p>Here, I have created a function and passed that function as the key in sort() method which returns 1st and 2nd element.</p>
<pre><code>def get_key(item):
    return item[0], item[1]

mylist = [[2, 5, "bicycle"], [1, 4, "table"], [5, 2, "stew"], [2, 2, "seesaw"]]
mylist.sort(key=get_key)
print(mylist)
</code></pre>
</div>
<span class="comment-copy">I would sort it using an inbuilt sorting method. Then go through and sort by secondary key if the key repeats more than once.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/21453264/finding-tuple-in-the-list-of-tuples-sorting-by-multiple-keys">Finding tuple in the list of tuples (sorting by multiple keys)</a></span>
<span class="comment-copy">Wow, I didn't know it was a thing. It wasn't even in the manual entry that ForceBru so kindly sent me in his comment. Thanks</span>
