<div class="post-text" itemprop="text">
<p>I was looking at the pandas source code <a href="https://github.com/pandas-dev/pandas/blob/2e38d5552a5c7b2c0091cecddd483f4f08ad1d2c/pandas/core/groupby/ops.py" rel="nofollow noreferrer">here</a>, and I found the following statement a little bit weird: </p>
<pre><code>from pandas._libs import NaT, groupby as libgroupby, iNaT, lib, reduction
</code></pre>
<p>It seems that it imported Nat and groupby, which are two libraries, as multiple modules (libgroupby, iNaT, lib, reduction).</p>
<ol>
<li><p>I went to the <code>pandas._libs</code> library <a href="https://github.com/pandas-dev/pandas/tree/2e38d5552a5c7b2c0091cecddd483f4f08ad1d2c/pandas/_libs" rel="nofollow noreferrer">here</a>, but I didn't find any model with name <code>NaT</code>. There is indeed a <code>groupby.pyx</code>, which I assume is the <code>groupby</code> library? </p></li>
<li><p>Can the number of imported libraries be less than the imported modules? How does that work? From my past understanding, we can do <code>import a as b</code>, but we cannot do <code>import a as b, c</code>. </p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>from <code>pandas._libs</code> it actually imported 5 method/class/module:</p>
<ol>
<li>NaT,</li>
<li>grouby as libgroupy (so in your script you will now use libgroupy)</li>
<li>iNaT</li>
<li>lib</li>
<li>reduction</li>
</ol>
<hr/>
<p>Now <code>NaT</code> and <code>iNaT</code> indeed doesn't exists in the <code>_libs</code> folder, but it won't give an import error because they are imported from somewhere else in <code>__init__.py</code> of _libs.<br/>
<code>__init__.py</code> of a package implicitly executes whenever something is imported from that package or it's subpackages.<br/>
So the <code>__init__.py</code> inside <code>_libs</code> will execute, where <code>NaT, iNaT etc.</code> is imported from package <code>.tslibs</code> hence making them available for import from <code>.libs</code> package too.<br/>
Now if you will look for <code>NaT</code> or <code>iNaT</code> in the .tslibs folder you will won't find it, but if you will look at the <code>__init__.py</code> of <code>.tslibs</code> you will see here <code>NaT</code> and <code>iNaT</code> is imported from <code>.nattype</code>, so if you look inside that file this time you will find the definition of <code>NaT</code> and <code>iNaT</code> in there.</p>
<p>You can take a look at the <a href="https://docs.python.org/3/reference/import.html?highlight=__init__#regular-packages" rel="nofollow noreferrer">docs</a> for better explanation</p>
<hr/>
<p>You can import it like this and then it might be easier for you to understand whats going on:</p>
<pre><code>from pandas._libs import NaT, iNaT, lib, reduction, groupby as libgroupby
</code></pre>
<p>This import will do exactly the same as what the import statement in your question does.</p>
</div>
<span class="comment-copy">The second part of your question is answered <a href="https://stackoverflow.com/questions/29865421/how-can-i-import-multiple-items-from-a-module-and-rename-them-in-python">here</a></span>
<span class="comment-copy">@DavidW Thanks for pointing me to that direction!</span>
<span class="comment-copy">Thanks! Very precise answer!</span>
<span class="comment-copy">your welcome ðŸ˜Š</span>
<span class="comment-copy">added a bit more stuff about how <code>__init__</code> works</span>
<span class="comment-copy">Thanks, awesome.</span>
