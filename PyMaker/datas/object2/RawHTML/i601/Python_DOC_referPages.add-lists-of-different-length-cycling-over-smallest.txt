<div class="post-text" itemprop="text">
<p>I have two lists:</p>
<pre class="lang-py prettyprint-override"><code>a = [50, 17, 54, 26]
b = [19,  7,  8, 18, 36, 8, 18, 36, 18, 14]
</code></pre>
<p>I want to add to the elements of <code>b</code> the corresponding elements of <code>a</code>. When the elements of <code>a</code> runs out, I want to cycle through <code>a</code> to supply the elements. The result should be:</p>
<pre class="lang-py prettyprint-override"><code>c = [69, 24, 62, 44, 86, 25, 72, 62, 68, 31]
</code></pre>
<p>What is the "Pythonic" way to implement this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a list comprehension to add the elements from both lists zipped together, and use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>itertools.cycle</code></a> so that the iterator <code>a</code> repeats itself as many times as necessary until <code>b</code> is exhausted:</p>
<pre><code>from itertools import cycle
a = [50, 17, 54, 26]
b = [19,  7,  8, 18, 36, 8, 18, 36, 18, 14]

[i+j for i,j in zip(cycle(a), b)]
</code></pre>
<p><b> Output </b> </p>
<pre><code>[69, 24, 62, 44, 86, 25, 72, 62, 68, 31]
</code></pre>
<hr/>
<p><b> Details </b></p>
<p>If you take a look at the iterator of tuples generated from the zipped expression:</p>
<pre><code>list(zip(cycle(a),b))

[(50, 19),
 (17, 7),
 (54, 8),
 (26, 18),
 (50, 36),
 (17, 8),
 (54, 18),
 (26, 36),
 (50, 18),
 (17, 14)]
</code></pre>
<p>You can see that the elements in <code>a</code> cycle around until the other iterator is exhausted, making it very easy to perform some operation on the interleaved elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you dont want any imports you can use the <a href="https://stackoverflow.com/questions/4432208/how-does-work-in-python">modulo operator (%)</a>.</p>
<pre class="lang-py prettyprint-override"><code>a = [50, 17, 54, 26]
b = [19, 7, 8, 18, 36, 8, 18, 36, 18, 14]
[a[i%len(a)]+b[i] for i in range(len(b))]
</code></pre>
<h2>Output</h2>
<pre><code>[69, 24, 62, 44, 86, 25, 72, 62, 68, 31]
</code></pre>
</div>
