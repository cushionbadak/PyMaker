<div class="post-text" itemprop="text">
<p>I am trying to parse through an html page using beautiful soup. Specifically, I am looking at this very large array called "g_rgTopCurators" that can be summarized below:</p>
<pre><code>g_rgTopCurators = 

[{\"curator_description\":\"Awesome and sometimes overlooked indie games 
curated by the orlygift.com team\",
\"last_curation_date\":1538400354,
\"discussion_url\":null,
\"rgTagLineLocalizations\":[],
\"broadcasters\":[],
\"broadcasters_info_available\":1,
\"bFollowed\":null,
\"m_rgAppRecommendations\":
    [{  \"appid\":495600,
        \"clanid\":9254464,
        \"link_url\":\"https:\\\/\\\/www.orlygift.com\\\/games\\\/asteroid-fight\",
        \"link_text\":\"\",
        \"blurb\":\"Overall, we found Asteroid Fight to be a cool space game. If you want to manage a base and also handle asteroids, this is the right game for you. It\\u2019s definitely fun, unique and it has its own twist.\",
        \"time_recommended\":1538400354,
        \"comment_count\":0,
        \"upvote_count\":0,
        \"accountid_creator\":10142231,
        \"recommendation_state\":0,
        \"received_compensation\":0,
        \"received_for_free\":1},

        {other app with same params as above}, 
        {other app},
        {other app}
    ],

\"m_rgCreatedApps\":[],
\"m_strCreatorVanityURL\":\"\",
\"m_nCreatorPartnerID\":0,
\"clanID\":\"9254464\",
\"name\":\"Orlygift\",
\"communityLink\":\"https:\\\/\\\/steamcommunity.com\\\/groups\\\/orlygift\",
\"strAvatarHash\":\"839146c7ccac8ee3646059e3af616cb7691e1440\",
\"link\":\"https:\\\/\\\/store.steampowered.com\\\/curator\\\/9254464-Orlygift\\\/\",
\"youtube\":null,
\"facebook_page\":null,
\"twitch\":null,
\"twitter\":null,
\"total_reviews\":50,
\"total_followers\":38665,
\"total_recommended\":50,
\"total_not_recommended\":0,
\"total_informative\":0
},
{another curator},
{another curator}
];
</code></pre>
<p>I am trying to figure out how to properly use soup.select() to get every \"name\" for every curator in this large array.</p>
<pre><code>soup = bs4.BeautifulSoup(data["results_html"], "html.parser")
curators = soup.select(" ??? ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As the response is JSON containing HTML which contains a script element containing more JSON my first approach was this:</p>
<pre><code>import requests
import json
from bs4 import BeautifulSoup

url="https://store.steampowered.com/curators/ajaxgetcurators/render?start=0&amp;count=50"
response = requests.get(url, headers = {"Accept": "application/json"})
loaded_response = response.json() # Get the JSON response containing the HTML containing the required JSON.
results_html = loaded_response['results_html'] # Get the HTML from the JSON
soup = BeautifulSoup(results_html, 'html.parser')
text = soup.find_all('script')[1].text # Get the script element from the HTML.
# Get the JSON in the HTML script element
jn = json.loads(text[text.index("var g_rgTopCurators = ")+ len("var g_rgTopCurators = "):text.index("var fnCreateCapsule")].strip().rstrip(';'))
for i in jn:  # Iterate through JSON
    print (i['name'])
</code></pre>
<p>Outputs:</p>
<pre><code>Cynical Brit Gaming
PC Gamer
Just Good PC Games
...

WGN Chat
Bloody Disgusting Official
Orlygift
</code></pre>
<p>There is a quicker way of doing it just get the response as bytes decode and escape it then go straight to the desired JSON with string manipulation:</p>
<pre><code>import requests
import json

url="https://store.steampowered.com/curators/ajaxgetcurators/render?start=0&amp;count=50"
response = requests.get(url, headers = {"Accept": "application/json"})
text = response.content.decode("unicode_escape") # response body as bytes decode and escape
# find the JSON
jn = json.loads(text[text.index("var g_rgTopCurators = ")+ len("var g_rgTopCurators = "):text.index("var fnCreateCapsule")].strip().rstrip(';'))
for i in jn:  # Iterate through JSON
    print (i['name'])
</code></pre>
</div>
<span class="comment-copy">Is that data structure really in the <code>html</code>? it looks more like a list of dictionaries, or <code>JSON</code>. Why do you want to use BeautifulSoup? might be easier to use <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads()</code></a>. Then you could do <code>import json data = json.loads(g_rgTopCurators)  print([d['name'] for d in data])</code> would return all <code>name</code></span>
<span class="comment-copy">@davedwards The overall structure is a json object but, contains html that contains this large array. So, your approach I believe wouldn't work.</span>
<span class="comment-copy">@jimbob542, actually davedwards does have the right approach. But I understand your point too. Basically beautifulsoup would be used to parse out this json object, and then you would parse the json object. Can you provide the full html so that I can see how to find the <code>g_rgTopCurators</code>. Or provide the code that pulls the html request would be benificial</span>
<span class="comment-copy">@chitown88 <a href="https://store.steampowered.com/curators/ajaxgetcurators/render?start=0&amp;count=50" rel="nofollow noreferrer">store.steampowered.com/curators/ajaxgetcurators/â€¦</a></span>
