<div class="post-text" itemprop="text">
<p>I need to make a function that replaces repeated, consecutive characters with a single character, for example:</p>
<pre><code> 'hiiii how are you??' -&gt; 'hi how are you?'
 'aahhhhhhhhhh whyyyyyy' -&gt; 'ah why'
 'foo' -&gt; 'fo'
 'oook. thesse aree enoughh examplles.' -&gt; 'ok. these are enough examples'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try a regular expression like <code>(.)\1+</code>, i.e. "something, then more of the same something", and replace it with <code>\1</code>, i.e. "that first something".</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r"(.)\1+", r"\1", 'aahhhhhhhhhh whyyyyyy')
'ah why'
&gt;&gt;&gt; re.sub(r"(.)\1+", r"\1", 'oook. thesse aree enoughh examplles.')
'ok. these are enough examples.'
</code></pre>
<p>Make it a function with <code>functools.partial</code> (or any other way you like)</p>
<pre><code>&gt;&gt;&gt; import functools
&gt;&gt;&gt; dedup = functools.partial(re.sub, r"(.)\1+", r"\1")
&gt;&gt;&gt; dedup('oook. thesse aree enoughh examplles.')
'ok. these are enough examples.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A solution can be expressed very compactly using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; ''.join(g[0] for g in itertools.groupby('hiiii how are you??'))
'hi how are you?'
</code></pre>
<p><code>itertools.groupby</code> groups the objects in an iterable by the given key function. Groups are accumulated as long as the keys are equivalent. If no key function is given, the identity of the items are used, in this case the characters.</p>
<p>Once you have them grouped by their identity, you can then join the objects into a single string. The grouped objects are returned as tuples containing the object and an internal <code>itertools._grouper</code> object, which for your purposes, you can ignore and extract the character.</p>
<p>This can be turned into a function as follows:</p>
<pre><code>def remove_repeated_characters(s):
    groups = itertools.groupby(s)
    cleaned = ''.join(g[0] for g in groups)
    return cleaned
</code></pre>
<p>This results in the expected values:</p>
<pre><code>&gt;&gt;&gt; [remove_repeated_characters(s) 
     for s in ['hiiii how are you??','aahhhhhhhhhh whyyyyyy',
               'foo', 'oook. thesse aree enoughh examplles.']]
['hi how are you?', 'ah why', 'fo', 'ok. these are enough examples.']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def dup_char_remover(input):
    output=""
    t=""
    for c in input:
        if t!=c:
            output = output + c
        t=c
    return output

input = "hiiii how arrrre youuu"
output=dup_char_remover(input)
print(output)
</code></pre>
<p>hi how are you</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a simple iteration.</p>
<p><strong>Demo:</strong></p>
<pre><code>def cleanText(val):
    result = []
    for i in val:
        if not result:
            result.append(i)
        else:
            if result[-1] != i:
                result.append(i)
    return "".join(result)

s = ['hiiii how are you??', 'aahhhhhhhhhh whyyyyyy', 'foo', 'oook. thesse aree enoughh examplles.']
for i in s:
    print(cleanText(i))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>hi how are you?
ah why
fo
ok. these are enough examples.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import OrderedDict

def removeDupWord(word):
   return "".join(OrderedDict.fromkeys(word))

def removeDupSentence(sentence):
    words = sentence.split()
    result = ''
    return ''.join([result + removeDupWord(word) + ' ' for word in words])


sentence = 'hiiii how are you??'
print (removeDupSentence(sentence))

&gt;&gt;&gt; hi how are you? 
</code></pre>
</div>
<span class="comment-copy">Hi @Santiago M.! What have you tried so far? Please, provide some code, if it's possible. If this question is about a homework, please, read <a href="https://meta.stackoverflow.com/questions/334822/how-do-i-ask-and-answer-homework-questions">this</a> thread.</span>
<span class="comment-copy">Really clever solution. +1.</span>
