<div class="post-text" itemprop="text">
<p>I want to resize multiple images using 'convert'.</p>
<p>This works great from the command line.</p>
<p>However, when I try to achieve the same from within Python3 using subprocess.Popen, the flag '\!' specifying that the aspect ratio of the image should be ignored during the resizing, does not work.</p>
<p>Starting from
<img alt="source" src="https://i.imgur.com/Bj1m9YK.png"/>
I want
<img alt="source" src="https://i.imgur.com/z00D9YM.png"/>
and not
<img alt="source" src="https://i.imgur.com/Bj1m9YK.png"/></p>
<p>From the command line this works fine using</p>
<pre><code>convert source.png -resize 1230x80\! out_console.png
</code></pre>
<p>If I run this command from within Python3 using</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from subprocess import Popen

cmd = [
    'convert',
    'source.png',
    '-resize',
    r'1230x80\!',       # Use '\!' ignoring the aspect ratio
    'out_subprocess.png',
    ]
proc = Popen(cmd)
proc.communicate()
</code></pre>
<p>the result is not resized:</p>
<p><img alt="source" src="https://imgur.com/K3PiQ3l.png"/></p>
<p>I tried to escape the backslash character using <code>r'1230x80\!'</code> or <code>'1230x80\\!'</code> without success.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>!</code> needs to be escaped because you're running in a shell. But the command itself doesn't understand <code>\</code>, and <code>Popen</code> doesn't use the shell (unless you use <code>shell=True</code>, but avoid like the plague)</p>
<p>So you're just overdoing this.</p>
<p>Instead, pass arguments without quoting or escaping:</p>
<pre><code>cmd = [
    'convert',
    'source.png',
    '-resize',
    '1230x80!',
    'out_subprocess.png',
    ]
</code></pre>
<p>now you have a portable command line that will even work on Windows (well, on windows there's a <code>convert</code> command which doesn't do the same thing at all so you'll have to specify full path of the <code>convert</code> command)</p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to <a href="https://stackoverflow.com/a/54581408/8935243">accepted answer</a>:
The problem essentially is:</p>
<p><strong>Translate a shell command into a non-shell command.</strong></p>
<p>There is a <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer">library</a> solving this task.</p>
<pre><code>import shlex
shlex.split('convert source.png -resize 1230x80\! out_console.png')
</code></pre>
<p>gives</p>
<pre><code>['convert', 'source.png', '-resize', '1230x80!', 'out_console.png']
</code></pre>
</div>
<span class="comment-copy">try just <code>'1230x80!'</code></span>
<span class="comment-copy">Because I had a student do this literally earlier today: If you're incorporating user input in your command, don't just add it into the string then <code>shlex.split</code> it, because now user input with spaces or the like will cause a bad split. You can <a href="https://docs.python.org/3/library/shlex.html#shlex.quote" rel="nofollow noreferrer">fix that by putting all user input through <code>shlex.quote</code> first</a>, but quoting a bunch of things just to format them into a string, then split the string is more complicated and error prone than just making it a <code>list</code> from the get-go.</span>
