<div class="post-text" itemprop="text">
<p>Here is my code structure</p>
<p>I have included some open-source package as a submodule in my project repo. In <code>main-app-dir/api/server.py</code>, I implement RESTful api request handlers. In one of my handlers, I am trying to use a function in <code>main-app-dir/open-source-package/open-source-package/api/response.py</code> file.</p>
<pre><code>main-app-dir
- app.py
- api
-- __init__.py
-- server.py
- open-source-package
-- requirements.txt
-- open-source-package
--- __init__.py
--- api
---- __init__.py
---- response.py
</code></pre>
<p>Would it be possible to achieve what I want to do without having to modify anything in <code>open-source-package</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>from open-source-package.api.response import &lt;function_name&gt;
</code></pre>
</div>
<span class="comment-copy">Don't use submodules to use a third-party library.  Install it into your Python environment instead.</span>
<span class="comment-copy">add an explanation to improve answer quality</span>
<span class="comment-copy">It throws a <code>ModuleNotFoundError</code>. I believe this is because the open-source-package doesn't have an <b>init</b>.py in its main directory</span>
<span class="comment-copy">@DayeongLee Your question showed there is an __init__.py file in the folders. In order to import the file as a module, that file is required. If there isn't one there, you can simple create a blank one. You can read more in the <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">import documentation</a>.</span>
