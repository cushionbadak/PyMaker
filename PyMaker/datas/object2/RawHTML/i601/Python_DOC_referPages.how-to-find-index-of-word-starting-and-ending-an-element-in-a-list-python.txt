<div class="post-text" itemprop="text">
<p>I have list of strings in that i need to find out <code>'American'</code> is in that string or not. If it exists, then I want to find out starting and ending index of the American word</p>
<pre><code>['Here in Americans, people say “Can I get a bag for the stuff?”',
 'Typically in restaurant after you are done with meal, you ask for check in Americans from the waiter.',
 'When mixing coffee, people in American use creamer, which is equivalent of milk.']
</code></pre>
<p>Desired output: find out starting and ending index of the American word</p>
<pre><code>8,16
75,83
30,38
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.search</code>, which returns a match object with a <code>start</code> method and an <code>end</code> method that return what you're looking for:</p>
<pre><code>import re

l = [
    'Here in Americans, people say “Can I get a bag for the stuff?”',
    'Typically in restaurant after you are done with meal, you ask for check in Americans from the waiter.',
    'When mixing coffee, people in American use creamer, which is equivalent of milk.',
    'Hello World'
]

for string in l:
    match = re.search('American', string)
    if match:
        print('%d,%d' % (match.start(), match.end()))
    else:
        print('no match found')
</code></pre>
<p>This outputs:</p>
<pre><code>8,16
75,83
30,38
no match found
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you should take a look at str.find method : 
<a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.find</a></p>
<p>Example : </p>
<pre><code>&gt;&gt;&gt; str1 = 'Here in Americans, people say "Can I get a bag for the stuff?"'
&gt;&gt;&gt; str2 = "Americans"
&gt;&gt;&gt; print(str1.find(str2))
8
</code></pre>
<p>Loop on your list to get what you want.</p>
<p>Hope this is helpful</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use something like <code>str.find(search_item)</code></p>
<p>this will return the first index value that the search item appears, then you could just return the <code>index + len(search_item)</code></p>
<p>something like :</p>
<pre><code>string = "Hello world!"
search_item = "world"
search_index = string.find(search_item)
search_index_end = search_index+len(search_item)

print(string[search_index] : search_index_end])
</code></pre>
<p>output:</p>
<pre><code>world

search_index = 6
search_index_end = 11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>re</code> and list comprehension. Inspired by @blhsing's solution</p>
<pre><code>import re
a=['Here in Americans, people say “Can I get a bag for the stuff?”',
 'Typically in restaurant after you are done with meal, you ask for check in Americans from the waiter.',
 'When mixing coffee, people in American use creamer, which is equivalent of milk.']

regex  = re.compile('American')

[(match.start(), match.end())  for i in a for match in regex.finditer(i)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>string=['Here in Americans, people say “Can I get a bag for the stuff?”',
 'Typically in restaurant after you are done with meal, you ask for check in Americans from the waiter.',
 'When mixing coffee, people in American use creamer, which is equivalent of milk.']

string2="American"

for sentence in string:
    initial=int(sentence.find(string2))
    end_point=initial+len(string2)
    print ("%d,%d"%(initial,end_point))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This could be another approach:</p>
<pre><code>all_data = ['Here in Americans, people say “Can I get a bag for the stuff?”',
    'Typically in restaurant after you are done with meal, you ask for check in Americans from the waiter.',
    'When mixing coffee, people in American use creamer, which is equivalent of milk.']


for data in all_data:
    words = data.split(' ')
    counter = 0
    for position, word in enumerate(words):
        if 'American' in word:
            print('{}, {}'.format(counter, counter+8))
        else:
            counter += len(word) + 1
</code></pre>
</div>
<span class="comment-copy">This does not answer the question...</span>
<span class="comment-copy">because if there is twice the word in the sentence it will just display the first, ok.But use the find method it's my answer so..</span>
<span class="comment-copy">The asker wanted all <b>starting and ending</b> indices of the word. Your solution only gives the first starting index. The <code>find</code> method always returns the <i>first</i> index, and thus is not a fitting solution to this problem...</span>
<span class="comment-copy">Okay... if there is <b>twice</b> the word in the sentence it will just displaying the first but ineed both starting and ending index of merican word <code>American consider football means by default as American football</code> @mad_</span>
