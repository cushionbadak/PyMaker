<div class="post-text" itemprop="text">
<p>I am trying to copy a blob of data (some bytes) into a larger block at some position. I can do this easily enough in C, but now I am doing it in Python and I am curious as to what is the best/correct way to do this.</p>
<p>The way I did it was:</p>
<pre><code>struct.pack_into("p", buffer, pos, str(data))
</code></pre>
<p>Where data and buffer are of type bytearray. Python would not let me copy the data into the buffer without converting it to a string (see the type conversion above), so I was wondering what is the correct way to insert one bytearray into another?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>bytearray</code> objects are <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-mutable" rel="nofollow noreferrer">mutable sequences</a>, you can copy the contents of one into another at a given position by assigning to a slice:</p>
<pre><code>buffer[pos:pos + len(data)] = data
</code></pre>
<p>There is no need or use for <code>struct.pack_into()</code> here. Note that <code>data</code> can be any iterable of integers, provided they fall in the range 0-255; it doesn't have to be a <code>bytes</code> or <code>bytearray</code> object.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; buffer = bytearray(10)
&gt;&gt;&gt; data = bytes.fromhex('deadbeef')
&gt;&gt;&gt; pos = 3
&gt;&gt;&gt; buffer[pos:pos + len(data)] = data
&gt;&gt;&gt; buffer
bytearray(b'\x00\x00\x00\xde\xad\xbe\xef\x00\x00\x00')
</code></pre>
</div>
<span class="comment-copy">Thanks! Good answer - The slice of bytearray buffer from pos to pos + len(data) is replaced by the contents of the iterable bytearray data.</span>
