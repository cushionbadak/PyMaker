<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/54518163/find-parent-element-of-a-title-xml-tag-containing-specific-text-using-python-e">Find parent element of a 'title' xml tag containing specific text using Python ElementTree</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Need to parse the large XML file with python (xml.etree.ElementTree) to process and generate a report as shown in expected section.</p>
<p>I can't figure out how to get down until 4th level for certain details and from there into 5th level for it's respective/associated data. Where to loop and how to reference the children, is my problem. Please give any suggestions that you may have, thank you. </p>
<pre><code>Input XML File: raw_data.xml

&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;FirstLevel Flevel="my1"&gt;
    &lt;SecondLevel Slevel="my2"&gt;
        &lt;ThirdLevel Tlevel="my3"&gt;
            &lt;FourthLevel test="1" mydata="Needed1"&gt;
                &lt;FifthLevel associated="Required for Needed1"/&gt;
            &lt;/Fourthlevel&gt;  
            &lt;FourthLevel test="2" mydata="Needed2"&gt;
                &lt;FifthLevel associated="Required for Needed2"/&gt;
            &lt;/Fourthlevel&gt;  
            &lt;FourthLevel test="3" mydata="Needed3"&gt;
                &lt;FifthLevel associated="Required for Needed3-1"/&gt;
                &lt;FifthLevel associated="Required for Needed3-2"/&gt;
            &lt;/Fourthlevel&gt;  
            &lt;FourthLevel test="4" mydata="Needed4"&gt;
                &lt;FifthLevel associated="Required for Needed4-1"/&gt;
                &lt;FifthLevel associated="Required for Needed4-2"/&gt;
            &lt;/Fourthlevel&gt;  
        &lt;/ThirdLevel&gt;
    &lt;/SecondLevel&gt;
&lt;/FirstLevel&gt;
-----------------------------------------------------------

My Code:

    import xml.etree.ElementTree as ET
    tree = ET.parse('raw_data.xml')
    root=tree.getroot()
    mylevel=root.findall('.//FourthLevel')
    for i in mylevel:
        print ("mydata=",i.get('mydata'),"\t")
        assoc=root.findall('.//FifthLevel') ### assoc: Temporary variable for associated data
        for j in assoc:
             print ("associated=",j.get('associated'),"\n")




Output: final_output.txt

mydata=Needed1  associated=Required for Needed1
mydata=Needed2  associated=Required for Needed2
mydata=Needed3  associated=Required for Needed3-1
mydata=Needed3  associated=Required for Needed3-1
mydata=Needed4  associated=Required for Needed4-1
mydata=Needed4  associated=Required for Needed4-1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're already iterating <em>root</em>'s child nodes, having the name <em>".//FourthLevel"</em>. You just have to apply the same principle for each child and its children having the name <em>"FifthLevel"</em> (notice the <em>slash</em>es missing).</p>
<p>Translated to code, you just need to replace the line:</p>
<pre class="lang-py prettyprint-override"><code>assoc=root.findall('.//FifthLevel')
</code></pre>
<p>by:</p>
<pre class="lang-py prettyprint-override"><code>assoc = i.findall("FifthLevel")
</code></pre>
<p>as you need the 5<sup>th</sup> level child only for <strong>current</strong> node (4<sup>th</sup> level), not for the whole tree. Check <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow noreferrer">[Python 3]: xml.etree.ElementTree - The ElementTree XML API</a> for more details.</p>
</div>
<span class="comment-copy">Instead of <code>root.findall('.//FifthLevel')</code>, try <code>i.findall('FifthLevel')</code>.</span>
<span class="comment-copy">Thank you, it worked.</span>
<span class="comment-copy">Thank you, it worked out.</span>
<span class="comment-copy">You should probably mark the answer as a solution to the question then (if you're allowed to - considering that the question is dupe).</span>
