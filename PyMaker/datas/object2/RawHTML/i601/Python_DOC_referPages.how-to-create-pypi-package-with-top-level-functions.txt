<div class="post-text" itemprop="text">
<p>I am trying to get a package installed on PyPi and am having trouble getting it configured to have the desired syntax.  At the end of the day, I want to be able to use a function within my module using the following syntax:</p>
<pre><code>import ucal
ucal.calculate(...)
</code></pre>
<p>This syntax follows all the common libraries.  (One could also use <code>from ucal import calculate</code>).</p>
<p>My directory structure is as follows:</p>
<pre><code>ucal/
    ucal/
        __init__.py
        ucal.py
        ucal_units.py
    setup.py
</code></pre>
<p>Within ucal.py:</p>
<pre><code>   import ucal_units
   def calculate():
       pass
</code></pre>
<p>I can upload to PyPi and then install using pip:</p>
<pre><code>&gt; python setup.py bdist_wheel
&gt; python -m twine upload dist/ucal-0.1.3-py3-none-any.whl
(wait a minute)
&gt; pip install --user ucal
</code></pre>
<p>However, inside a new script, the following script yields an error:</p>
<pre><code>import ucal
ucal.calculate() # &lt;-- AttributeError: module 'ucal' has no attribute 'calculate'
</code></pre>
<p>It turns out that this works instead:</p>
<pre><code>from ucal import ucal
ucal.calculate()
</code></pre>
<p>But I don't want this silly syntax.  ucal should be at the top level.  What changes do I need to make in order to get the desired syntax to work?</p>
<p>I tried moving all files in ucal/ucal to the parent directory, but this resulted in <code>ModuleNotFoundError: No module named 'ucal'</code> even though the module was installed (verified with pip list)</p>
</div>
<div class="post-text" itemprop="text">
<p>In <code>ucal/ucal.py</code>, declare public names that you want to export using the <a href="https://docs.python.org/3/tutorial/modules.html#importing-from-a-package" rel="nofollow noreferrer"><code>__all__</code></a> variable:</p>
<pre><code># ucal/ucal.py

__all__ = ["calculate"]

def calculate(...):
    ...
</code></pre>
<p>In <code>ucal/__init__.py</code>, pull those names up into the top-level namespace by using the * import:</p>
<pre><code># ucal/__init__.py

from ucal.ucal import *
</code></pre>
<p>Now, users will see <code>calculate</code> in the top-level namespace.</p>
</div>
<div class="post-text" itemprop="text">
<p>When importing, the namespace within the <code>__init__.py</code> appears to be able to be accessed by the <code>ucal.*</code> syntax.  One option, then, is to replace <code>__init__.py</code> with the contents of <code>ucal.py</code>.  This doesn't seem quite correct.</p>
<p>Another option is to add an import statement within <code>__init__.py</code>:</p>
<pre><code>from ucal.ucal import calculate
</code></pre>
<p>This also seems messy, but perhaps that's the accepted way to do things?</p>
</div>
<span class="comment-copy">or may be you need to add <code>from .ucal import calcuate</code> to the init file or call it like <code>ucal.ucal.calcuate</code></span>
<span class="comment-copy">I fixed the typo--that was not the issue.</span>
