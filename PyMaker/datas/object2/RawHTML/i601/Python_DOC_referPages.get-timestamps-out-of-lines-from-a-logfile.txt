<div class="post-text" itemprop="text">
<p>I have a code that reads all the lines from multiple log files inside a directory using a given regex pattern:</p>
<p><strong>Here is the code:</strong></p>
<pre><code>src_dict = ("/nfs/home/dex/work/xxx/xxx/logs")
pattern = re.compile ('(.*)for exports(.*)')

for passed_files in os.listdir(src_dict):
    files = os.path.join(src_dict, passed_files)
    strng = open(files)
    for lines in strng.readlines():
        if re.search(pattern, lines):
            print lines
</code></pre>
<p>The above code gives me all the required lines from the log file with a time stamp at the end of each line.</p>
<pre><code>./xx.xx.xx.v1.0_Final:2019-01-30 08:34:46.463 -0800 INFO [626] - Program Ended: xx::xx::xxx::xx for exports [... stuff ...] after 00:26:15
</code></pre>
<p>.....................and so on.</p>
<p>Now I want to fetch all the last lines that contains the timestamp i.e. <code>00:26:15</code> (it may always be something different)
and calculate the total and average time for all the timestamps collected from these log files.</p>
</div>
<div class="post-text" itemprop="text">
<h3>Just add the timestamp<sup>1</sup>-getting to the regular expression you're using anyway.</h3>
<p>For that, use <a href="https://docs.python.org/3/howto/regex.html#grouping" rel="nofollow noreferrer">"capture groups"</a>.</p>
<p>To get the numbers as format <code>HH:MM:SS</code>, you have two digits, a colon, two digits, another colon and another two digits. Quantifying that is <a href="https://stackoverflow.com/questions/15908085/">hard</a>, so you'll probably just write it exactly like that: </p>
<p><code>(\d\d):(\d\d):(\d\d)</code> (if you want, you can <code>{2}</code> those <code>\d</code>, but to me it seems more complicated).</p>
<p>Note the parenthesis around the digit matchers: they tell <code>re</code> to capture the contents separately to you and make it available as <code>match.group(number)</code>, starting at 1 and <code>match.groups()</code>, a tuple. To make sure to match the <em>end</em> of the line (not in the middle), you add <code>$</code> (strictly, this shouldn't be neccessary, as <code>.*</code> id "greedy", but it's clearer).</p>
<p>If you add this to your regex, (removing the groups you already have if you don't need them; accounting for them otherwise), you get:</p>
<p><code>pattern = re.compile(r'.* for exports .* (\d\d):(\d\d):(\d\d)$')</code></p>
<p>Now, you can match that and get the time for every run like this:
<code>match = pattern.match(logline); seconds = (int(match.group(1))*60 + int(match.group(2))) * 60 + int(match.group(3)</code></p>
<hr/>
<p>I said above quantifying is hard, but it <em>can</em> be done, I'm aware of a 2-step approach:
You first get <em>all</em> the timestamp, and then process it separately. In this case, the added complication is too much, but, if you have something different, it might be good to keep in mind:</p>
<p><code>.*((?:\d{2}:)+\d\d)$</code> captures you any length of two digits separated by colons, you can then simple <code>.split(':')</code> it and perform your calculations.</p>
<hr/>
<p><sup>1</sup> it usually refers to a <a href="https://en.wikipedia.org/wiki/Timestamp" rel="nofollow noreferrer">specific point in time</a>, not a duration. As to not confuse you, I used "timestamp" in my answer. The actual timestamp in your log output is <code>2019-01-30 08:34:46.463</code>, not <code>00:26:15</code>. </p>
</div>
<span class="comment-copy">Please edit your question and post your code with correct indentation. If it's not possible to edit your own question, close and ask again.</span>
<span class="comment-copy">sorry for the unclear code, have edited and posted the code</span>
<span class="comment-copy">This question is really unclear. You want to only find the lines with the timestamp 00:26:15, does that value vary? Also, what would be the point of an average if they all have the same timestamp? Is the log file full of lines like the one you posted?</span>
<span class="comment-copy">Why don't you just add it to the pattern you're already sorting by?</span>
<span class="comment-copy">the pattern i searched for gives me the list of all the timestamps, that was just an example given above which contains one line of the log....and yes the timestamps vary on each line as the above code parses all the services log file and provide only the passed time's......i need the avg time to calculate how long does it take for these set of services to run....hope you guys are clear now...</span>
