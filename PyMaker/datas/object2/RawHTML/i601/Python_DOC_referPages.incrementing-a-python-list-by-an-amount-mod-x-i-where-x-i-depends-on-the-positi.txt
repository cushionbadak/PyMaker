<div class="post-text" itemprop="text">
<p>I have two lists of equal length.
I am incrementing list1 by an amount, but each entry has to be modded by the corresponding entry in list2.</p>
<p>What I am doing is:</p>
<pre><code>for ii in range(len(list1)):
    list1[ii] = (list1[ii]+val) % list2[ii]
</code></pre>
<p>Is there a better way (maybe using numpy)? I could not find any. These lists are very long, so performance is an issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> and <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to reduce the amount of indexing involved:</p>
<pre><code>for ii, (a, b) in enumerate(zip(list1, list2)):
    list1[ii] = (a + val) % b
</code></pre>
<p>That said, you're probably better off just using a list comprehension to avoid the need for the index entirely, so you can drop <code>enumerate</code> and use only <code>zip</code>, which makes for cleaner looking code (and faster code to boot):</p>
<pre><code># Creates a new list and rebinds list1 to it:
list1 = [(a + val) % b for a, b in zip(list1, list2)]

# Or if list1 *must* be modified in place, slice assignment can do that:
list1[:] = [(a + val) % b for a, b in zip(list1, list2)]
</code></pre>
<p>Note that in both examples I renamed your <code>list</code> to <code>list1</code>, because name shadowing the <code>list</code> constructor is a <em>terrible</em> idea.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is possible using numpy</p>
<pre><code>import numpy as np
numpy_list1 = np.array(list1)
numpy_list2 = np.array(list2)

mod_values1 = np.mod(numpy_list1 + val, numpy_list2) 
mod_values2 = np.remainder(numpy_list1 + val, numpy_list2)
mod_values3 = (numpy_list1 + val) % numpy_list2
</code></pre>
<p>All three give the same results. Documentation for <a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.mod.html" rel="nofollow noreferrer">first</a> and <a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.remainder.html" rel="nofollow noreferrer">second</a> is here. The third method was suggested by <a href="https://stackoverflow.com/users/364696/shadowranger">Shadow Ranger</a> in the comments.</p>
</div>
<span class="comment-copy">absolutely, I renamed my list to list1, it was a typo</span>
<span class="comment-copy">You forgot about adding <code>val</code>, and you don't actually need to use <code>np.mod</code>, you could just do <code>mod_values = (numpy_list1 + val) % numpy_list2</code>.</span>
<span class="comment-copy">Right! I forgot that. Thanks. Regarding, using <code>%</code>, nice. I didn't know that. I'll check it once and update the answer. Thanks!</span>
