<div class="post-text" itemprop="text">
<p>I have an argparse that is given a string:</p>
<pre><code>def f():
    return 'dummy2'

p = argparse.ArgumentParser()
p.add_argument('--a', nargs=1, type=str)
p.add_argument('--b', nargs='?', const=f(), default=f())
p.parse_args('--a dummy'.split())
</code></pre>
<p>The parser namespace is <code>Namespace(a=['dummy'], b='dummy2')</code>.</p>
<p>How can I make the argument for <code>a</code> be stored as a string and not as a list of strings?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's simple, just skip the argument for <code>nargs</code>. Try this:</p>
<pre><code>p = argparse.ArgumentParser()
p.add_argument('--a', type=str)
p.add_argument('--b', nargs='?', const=f(), default=f())
</code></pre>
<p>I believe this is what you expected:</p>
<pre><code>p.parse_args('--a dummy'.split())
=&gt; Namespace(a='dummy', b='dummy2')
</code></pre>
<p>Quoting the <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>ArgumentParser objects usually associate a single command-line argument with a single action to be taken. The nargs keyword argument associates a different number of command-line arguments with a single action. The supported values are:</p>
<p>N (an integer). N arguments from the command line will be gathered together into a list ... Note that nargs=1 produces a list of one item. This is different from the default, in which the item is produced by itself.</p>
</blockquote>
</div>
<span class="comment-copy">can you explain? I thought <code>nargs 1</code> should enforce giving only one argument, basiaclly doing nothing when I suplly my correct string</span>
<span class="comment-copy">ok, nevermind... just saw this ('Note that nargs=1 produces a list of one item. This is different from the default, in which the item is produced by itself.').</span>
<span class="comment-copy">Yup, it's there in the docs, I updated my answer to reflect it</span>
