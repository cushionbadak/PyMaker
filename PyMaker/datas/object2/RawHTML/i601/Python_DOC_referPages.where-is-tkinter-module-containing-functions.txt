<div class="post-text" itemprop="text">
<p>Where is the Tkinter module (in python 2.7) containing all the functions such as Tk(), tk.Entry(), tk.Button(), etc? I want to make a list of all the functions in a cheatsheet for quick reference and a sense of overview/control that is not gained by the impenetrable jargon-filled descriptions. There appears to be no file in the source files of python27 that gives this, there is a suggestion online that it is a binary file and therefore not accessible. Is this so? Is there not a file containing the functions within the python27 source?</p>
<p>Anyway any idea of where the functions in Tkinter are listed so I can make my own quick reference cheatsheet?</p>
</div>
<div class="post-text" itemprop="text">
<h2>Read the official python documentation</h2>
<p>Start by reading python's official tkinter documentation at the following address:</p>
<ul>
<li><a href="https://docs.python.org/3/library/tk.html" rel="nofollow noreferrer">https://docs.python.org/3/library/tk.html</a>. </li>
</ul>
<p>From there you will learn that tkinter doesn't implement any of the widgets itself. Rather, it is just a thin object-oriented wrapper around an embedded tcl interpreter. For better or worse, it expects you to get some of the details of the widgets by learning about tcl/tk.  </p>
<h3>What does "thin object oriented wrapper" mean?</h3>
<p>The underlying tcl/tk interpreter is not object-oriented (ie: not based on classes and instances). Python, however, is highly class-oriented. To make tkinter more pythonic, the developers decided to make the interface to tcl/tk based on classes. </p>
<p>Without this interface, to create a frame might look like this:</p>
<pre><code>tk = _tkinter.create(screenName=None, baseName=None, className='Tk', 
                     interactive=True, wantobjects=1, useTk=True, 
                     sync=0, use=None)
frame = tk.call("frame", ".myframe", "-background", "red")
</code></pre>
<p>With the wrapper this becomes:</p>
<pre><code>root = tkinter.Tk()
frame = tk.Frame(root, background="red")
</code></pre>
<h2>Read the offical tcl/tk documentation</h2>
<p>The canonical documentation for the tk library that's part of tcl can be found at the following link:</p>
<ul>
<li><a href="http://tcl.tk/man/tcl8.5/TkCmd/contents.htm" rel="nofollow noreferrer">http://tcl.tk/man/tcl8.5/TkCmd/contents.htm</a></li>
</ul>
<h2>Find the package location on your disk</h2>
<p>To see the things that are unique to tkinter such as the classes that wrap the underlying tk widgets, you can look through the files in the tkinter module. The easy way to find them is to import the module and then examine the <code>__file__</code> attribute to see where it's stored on your disk. </p>
<p>If you're on python3 the above will probably show a link to the <code>__init__.py</code> file, and on python2 it will probably show a link to <code>Tkinter.pyc</code>. In both cases you can see the containing folder, where you can look around and examine everything that makes up the package on your system.</p>
<pre><code>bash-3.2$ python3
Python 3.7.2 (default, Jan 13 2019, 12:50:01) 
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tkinter
&gt;&gt;&gt; print(tkinter.__file__)
/usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tkinter/__init__.py
</code></pre>
<p>(Of course, the actual file and location depends on your version and your OS)</p>
<h2>See the official source files on github</h2>
<p>The files are available through github at the following link. The bulk of the definition of tkinter is in the file <code>__init__.py</code>.</p>
<ul>
<li><a href="https://github.com/python/cpython/blob/3.7/Lib/tkinter" rel="nofollow noreferrer">https://github.com/python/cpython/blob/3.7/Lib/tkinter</a></li>
</ul>
</div>
<span class="comment-copy">And the documentation is fairly extensive if you search: <a href="https://docs.python.org/3/library/tkinter.html#tkinter-modules" rel="nofollow noreferrer">docs.python.org/3/library/tkinter.html#tkinter-modules</a>.</span>
<span class="comment-copy">I can understand your frustration to a certain degree, but you have to take into consideration, that you are using free software. It's not easy to write a really good documentation. In the special case of <code>tkinter</code> there is extensive documentation as mentioned above, you can also scroll through the <a href="https://github.com/python/cpython/blob/3.7/Lib/tkinter/__init__.py" rel="nofollow noreferrer">source code</a>, which they directly link there.</span>
<span class="comment-copy">This guy Bryan Oakley has wiped out a large portion of my original question and several of my subsequent comments in an act of censorship that goes beyond the acceptable and demonstrates why programming cannot be dominated by the current culture of wilful but unnecessary complexity and control. We all own this technology for reasons that are increasingly political and cultural, it is not only your territory and not yours to decide what is an appropriate form of discussion within the narrow confines of a culture of obscurantism that has dominated up to now.</span>
<span class="comment-copy">"Rather, it is just a thin object-oriented wrapper around an embedded tcl interpreter."  What does that mean, in clear language (I have over 15 years as a web designer).  "The easy way to find them is to import the module and then examine the <b>file</b> attribute to see where it's stored on your disk. "  How to get that done?  Why is it so difficult to get a list of the functions that Tkinter uses? Why does the <i>init</i>.py file in my Python27\Lib\site-packages have 13 lines and the one you linked to contains hundreds of lines? Where is the module in Tkinter that shows these functions?</span>
<span class="comment-copy">I would add that it is much easier to understand Assembly language than it is to understand the abstractions in high level languages such as python and therefore the use of abstractions and jargon to describe even the simplest things in python without any clear explanations for the tens of thousands who are self-learning is unconvincing as anything other than an indulgence and a vanity by programmers who are addressing themselves solely to mirror images of themselves rather than to the general public in order to freeze-out the public and preserve their salaries and sense of self-worth.</span>
<span class="comment-copy">Right Bryan, I managed to scratch around and "examine the <b>file</b> attribute to see where it's stored" on the disk. To do this go: import Tkinter Tkinter  No use of <b>file</b> anywhere, just say 'Tkinter' after importing it. I get: &lt;module 'Tkinter' from 'C:\emacs-26.1-x86_64\lib\python2.7\lib-tk/Tkinter.pyc'&gt;  For some reason Stallman came into my head, I blame him for getting me to install emacs and confusing the issue further. Between that and Anaconda (which I've been fighting ever since) there's room for much confusion.  Stallman's position on free software is superb - Free &amp; Open!</span>
<span class="comment-copy">Right so the source file in python27 is C:\Python27\Lib\lib-tk\Tkinter.py. Well, that took some working to get to didn't it?</span>
