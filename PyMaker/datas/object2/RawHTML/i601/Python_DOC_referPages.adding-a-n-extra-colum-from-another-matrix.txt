<div class="post-text" itemprop="text">
<p>I have these two matrices:</p>
<pre><code>A = [[2, 7, 3, 6], [3, 3, 4, 4], [6, 9, 5, 3], [4, 2, 1, 7]]
B = [[2, 6, 3, 5], [-1, 2, -3, 1], [2, -5, 7, 3]]
</code></pre>
<p>I need to create three matrices A+1st column of B, and so on</p>
<p>So I need this final result:</p>
<pre><code>A1 = [[2, 7, 3, 6, 2], [3, 3, 4, 4, 6], [6, 9, 5, 3, 3], [4, 2, 1, 7, 5]]
A2 = [[2, 7, 3, 6, -1], [3, 3, 4, 4, 2], [6, 9, 5, 3, -3], [4, 2, 1, 7, 7]]
A3 = [[2, 7, 3, 6, 2], [3, 3, 4, 4, -5], [6, 9, 5, 3, 7], [4, 2, 1, 7, 3]]
</code></pre>
<p>I start doing the following code, but I only got one of those</p>
<pre><code>for j in range(len(B)):    
    for i in range(j):
        b = B[j][i]
        A = [x + [b] for x in A]
    print(A)
</code></pre>
<p>Output:</p>
<pre><code>[[2, 7, 3, 6], [3, 3, 4, 4], [6, 9, 5, 3], [4, 2, 1, 7]]
[[2, 7, 3, 6, -1], [3, 3, 4, 4, -1], [6, 9, 5, 3, -1], [4, 2, 1, 7, -1]]
[[2, 7, 3, 6, -1, 2, -5], [3, 3, 4, 4, -1, 2, -5], [6, 9, 5, 3, -1, 2, -5], [4, 2, 1, 7, -1, 2, -5]]
</code></pre>
<p>Process finished with exit code 0</p>
</div>
<div class="post-text" itemprop="text">
<p>You can leverage <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> to get your output:</p>
<pre><code>A = [[2, 7, 3, 6], [3, 3, 4, 4], [6, 9, 5, 3], [4, 2, 1, 7]]
B = [[2, 6, 3, 5], [-1, 2, -3, 1], [2, -5, 7, 3]]

AA ={}
for idx,inner in enumerate(B):

    # add to each a from A the k-th elem of your inner
    AA[f"A{idx}"] = [a +[inner[k]] for k,a in enumerate(A)]

print(AA) # stored the lists into a dict


{'A0': [[2, 7, 3, 6, 2], [3, 3, 4, 4, 6], [6, 9, 5, 3, 3], [4, 2, 1, 7, 5]], 
 'A1': [[2, 7, 3, 6, -1], [3, 3, 4, 4, 2], [6, 9, 5, 3, -3], [4, 2, 1, 7, 1]], 
 'A2': [[2, 7, 3, 6, 2], [3, 3, 4, 4, -5], [6, 9, 5, 3, 7], [4, 2, 1, 7, 3]]}
</code></pre>
<p>As a personal preference I avoid using <code>range(len(...))</code> where I can - <code>enumerate</code> is cleaner.</p>
<hr/>
<p>If string literals do not work for you, use <code>"A{}".format(idx)</code> instead.</p>
<hr/>
<p>Your code does not work because you coupled the range of <code>i</code> to <code>j</code></p>
<blockquote>
<pre><code>for j in range(len(B)):     # j starts as 0,1,2  
    for i in range(j):      # i is doing nothing, 0, 0+1  &lt;-- wrong
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>This is a possible solution that you can certainly start with:</p>
<pre><code>k = len(A)
D = []
for i in range(len(B)):
    D.append([])
    for j in range(len(A)):
        C = A[j][:k]
        C.append(B[i][j])
        D[i].append(C)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Make sure to use deepcopy so that they are not all referring to the same object.</p>
<pre><code>A = [[2, 7, 3, 6], [3, 3, 4, 4], [6, 9, 5, 3], [4, 2, 1, 7]]
B = [[2, 6, 3, 5], [-1, 2, -3, 1], [2, -5, 7, 3]]

from copy import deepcopy
A_list = [deepcopy(A) for i in range(3)]

for outer_idx, list_in_b in enumerate(B):
    for inner_idx, value in enumerate(list_in_b):
        A_list[outer_idx][inner_idx].append(value)

print(A_list)

# Output:
#[[[2, 7, 3, 6, 2], [3, 3, 4, 4, 6], [6, 9, 5, 3, 3], [4, 2, 1, 7, 5]],
# [[2, 7, 3, 6, -1], [3, 3, 4, 4, 2], [6, 9, 5, 3, -3], [4, 2, 1, 7, 1]],
# [[2, 7, 3, 6, 2], [3, 3, 4, 4, -5], [6, 9, 5, 3, 7], [4, 2, 1, 7, 3]]]
</code></pre>
</div>
