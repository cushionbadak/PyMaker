<div class="post-text" itemprop="text">
<p>I am new to webscraping with BeautifulSoup and would like to extract some information from zalando.de. </p>
<p>I have already adressed the row where my needed information (price, article number, ...) can be found. Is it possible to save this row as an accessible datatype (e.g. dictionary) to extract the information by its key?</p>
<pre><code>from bs4 import BeautifulSoup
import requests

source = requests.get("https://en.zalando.de/carhartt-wip-hooded-chase-sweatshirt-c1422s02x-g13.html?_rfl=de").text
soup = BeautifulSoup(source, "lxml")
scr = soup.find("script", id = "z-vegas-pdp-props").text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can save it as a dictionary (or JSON to be exact). You can use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> module to convert the string into a json.</p>
<p>The text needs to be converted into a valid json first. You can do that by removing in invalid parts.</p>
<pre><code>from bs4 import BeautifulSoup
import requests
import json

source = requests.get("https://en.zalando.de/carhartt-wip-hooded-chase-sweatshirt-c1422s02x-g13.html?_rfl=de").text
soup = BeautifulSoup(source, "lxml")
scr = soup.find("script", id = "z-vegas-pdp-props").text

data = json.loads(scr.lstrip('&lt;![CDATA').rstrip(']&gt;'))
print(data['layout'])
# cover
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Improving on the answer. The following code gives you the required dictionary, from which you can access the desired information given in the question, more easily than relying on the original nested dict.</p>
<pre><code>from bs4 import BeautifulSoup
import requests
import json

source = requests.get("https://en.zalando.de/carhartt-wip-hooded-chase-sweatshirt-c1422s02x-g13.html?_rfl=de").text
soup = BeautifulSoup(source, "lxml")
scr = soup.find("script", id = "z-vegas-pdp-props").text

data = json.loads(scr.lstrip('&lt;![CDATA').rstrip(']&gt;'))
desired_data = dict(data['model']['articleInfo'])
print(desired_data)
</code></pre>
<p>The output looks like this.</p>
<pre><code>{'modelId': 'C1422S02X',
 'id': 'C1422S02X-G13',
 'shopUrl': 'https://en.zalando.de/carhartt-wip-hooded-chase-sweatshirt-c1422s02x-g13.html',
 'sizeFits': None,
 'commodity_group': {'values': ['2', '2', 'S', '4']},
 'active': True,
 'name': 'HOODED CHASE  - Hoodie - cranberry/gold',
 'color': 'cranberry/gold',
 'silhouette_code': 'pullover',
 'product_group': 'clothing',
 'category_tag': 'Sweatshirt',

......
'price': {'currency': 'EUR', 'value': 74.95, 'formatted': '74,95\xa0â‚¬'},
......
}
</code></pre>
<p>You may jsonify the output again using </p>
<pre><code>json_output = json.dumps(desired_data)
</code></pre>
</div>
<span class="comment-copy">Not able to access given page. Could you please provide an actual page and the desired output. Thanks.</span>
<span class="comment-copy">Sorry, I fixed the link. Since the output is very long that is why I have not posted it.</span>
<span class="comment-copy">Just typing the same answer down and you posted it! Anyway let me upvote this.</span>
