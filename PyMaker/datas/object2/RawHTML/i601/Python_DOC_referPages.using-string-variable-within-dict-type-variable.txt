<div class="post-text" itemprop="text">
<p>We have 3 different Datacenter environments, for reference, let us say, US, CA and IN. All three have a puppetdb master different to the other 2. So while automating some stuff, I want to a config.json file like below and reference it from the main code based on the parameters passed:</p>
<pre><code>// config.json
{
"DEFAULT": {
    "LOGFILE": "log/get_hname.log",
    "LOCKDIR": "include/LOCK",
    "NOOPRUN": "0"
},
"US": {
    "PDB": "puppetdb100.us",
    "VRFFILE": "include/vrf.txt",
    "FQDN": "us.livevox"
},
"CA": {
    "PDB": "puppet.ca.livevox.net",
    "FQDN": "ca.livevox"
},
"IN": {
    "PDB": "puppet100.in.livevox.net",
    "FQDN": "in.livevox"
}
}
</code></pre>
<p>Now, for the main script, where I am trying to use a variable called "myenv", which would be one of US, or CA or IN to refer the key in the config which is of dict type. But I keep getting the error as below:</p>
<pre><code>Traceback (most recent call last):
  File "./get_hname.py", line 94, in &lt;module&gt;
    print (config[myenv.upper()]['PDB'])
KeyError: 'NONE'
</code></pre>
<p>The script itself for your reference below:</p>
<pre><code>#!/usr/bin/env python

import argparse
import json
import sys 
import os
import logging
import time
from argparse import ArgumentParser

# Where Config File lives --------
CONFFILE = "include/get-hname-cfg.json"
# - DO NOT EDIT BELOW THIS LINE --

with open(CONFFILE, 'r') as f:
config = json.load(f)

logfile = config['DEFAULT']['LOGFILE']
myarguments = argparse.ArgumentParser(description="Arguments for Name Builder", usage="%(prog)s [options]")
myarguments.add_argument("-e", "--env", type=str, metavar="environment", nargs='*', help="Environment")
myarguments.add_argument("-t", "--type", type=str, metavar="servertype", nargs='*', help="Server type")
myarguments.add_argument("-n", "--noop", action="store_true", help="Stimulate the whole run, but don't execute. Similar to noop")
myarguments.parse_args()
args = myarguments.parse_args()

if not args.env and not args.type:
    myarguments.print_help(sys.stderr)

myenv = str(args.env).lower()


pdbhost = "config" +myenv.upper()+ "['PDB']"
print ("%s" %(pdbhost))

if config[myenv.upper()]['PDB'] in globals():
puppetdbhost = config[myenv.upper()]['PDB']
</code></pre>
<p>How can I use the string type variable within a dict as a key?</p>
<p>EDIT : Please note, all necessary indentations which maybe missing in my question, have all been taken care of, since I'm using PyCharm.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>Traceback (most recent call last):
  File "./get_hname.py", line 94, in &lt;module&gt;
    print (config[myenv.upper()]['PDB'])
KeyError: 'NONE'
</code></pre>
<p>It's mean that <code>myenv</code> variable is string <code>'None'</code> in that moment. Check it.</p>
</div>
<div class="post-text" itemprop="text">
<p>you need to modify your add_arguments remove <code>nargs='*'</code> which is giving env in list 
 form see below example:</p>
<p><code>myarguments.add_argument("-e", "--env", type=str, metavar="environment",  help="Environment")</code></p>
<p>refer <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">this</a> document for more info.</p>
</div>
<div class="post-text" itemprop="text">
<p>OK folks, I found what I was doing wrong. The arguments I was using </p>
<pre><code>type=str and nargs='*'
</code></pre>
<p>which is why I was facing a type mismatch and getting the output as ['US'] instead of US (or CA or IN). Once I removed that, things are working fine.</p>
<p>Thank you all for your pointers. That helped.</p>
</div>
<span class="comment-copy">I even tried to prrint the output of :         <code>print (config [myenv.upper()]['PDB'])</code>  I got an error as <code>KeyError: "['US']"</code></span>
<span class="comment-copy">Your code does not match the error traceback.</span>
<span class="comment-copy">Worth explaining why this works. nargs="*" would expect multiple values and thus place the arguments in a list.</span>
