<div class="post-text" itemprop="text">
<pre><code>result = [{'start_date': datetime.date(2019, 1, 20)}, {'start_date': datetime.date(2019, 1, 21)}, {'start_date': datetime.date(2019, 1, 22)}]
</code></pre>
<p>I want to get output like in list format:</p>
<pre><code>result = ['2019-1-20', '2019-1-21', '2019-1-22']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need something like</p>
<pre class="lang-py prettyprint-override"><code>mylist = []
for res in result:
    mylist.append(res['start_date'])
</code></pre>
<p>This will 'get' the dates from the <code>start_date</code> dictionary key in <code>datetime</code> format, so you can keep using them for <code>datetime</code>-like functions. If you want the result in a string, you can replace the last line in this example with</p>
<pre class="lang-py prettyprint-override"><code>mylist.append(res['start_date'].isoformat())
# &gt;&gt;&gt; print(mylist)
# ['2019-01-20', '2019-01-21', '2019-01-22']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a good example of where the build-in <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a> function OR <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list-comprehension</a> can be used with great effect.</p>
<pre><code>import datetime 
result = [{'start_date': datetime.date(2019, 1, 20)}, {'start_date': datetime.date(2019, 1, 21)}, {'start_date': datetime.date(2019, 1, 22)}]

# Map function
res = map(lambda d: str(d['start_date']), result)
print(res)

# List-comprehension
res = [ str(d['start_date']) for d in result ]
print(res)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this : </p>
<pre><code>result = [{'start_date': datetime.date(2019, 1, 20)}, {'start_date': datetime.date(2019, 1, 21)}, {'start_date': datetime.date(2019, 1, 22)}]
result_list = [str(i.get("start_date")) for i in result]
</code></pre>
</div>
<span class="comment-copy">check this out too...<a href="https://stackoverflow.com/questions/54421806/dataframe-keyerror-although-it-exists" title="dataframe keyerror although it exists">stackoverflow.com/questions/54421806/â€¦</a></span>
<span class="comment-copy">If you are sure what are you trying to do, you can try : <code>[j for i in result for j in i.values()]</code></span>
