<div class="post-text" itemprop="text">
<p>Being programming on python, i discovered marshmallow. I always create classes on native python . Is this library (or another) the best way to create POO based program ? </p>
<pre class="lang-py prettyprint-override"><code>import datetime as dt

class User(object):
    def __init__(self, name, email):
        self.name = name
        self.email = email
        self.created_at = dt.datetime.now()

    def __repr__(self):
        return '&lt;User(name={self.name!r})&gt;'.format(self=self)


from marshmallow import Schema, fields

class UserSchema(Schema):
    name = fields.Str()
    email = fields.Email()
    created_at = fields.DateTime()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://marshmallow.readthedocs.io" rel="nofollow noreferrer">Marshmallow</a> is useful if you need serialization/deserialization. It is not about OOP.</p>
<p>If you like the way the attributes are declared and typed, you could be interested in the <a href="https://docs.python.org/3/library/dataclasses.html" rel="nofollow noreferrer">dataclasses</a> feature introduced in Python 3.7.</p>
<pre><code>@dataclass
class InventoryItem:
    '''Class for keeping track of an item in inventory.'''
    name: str
    unit_price: float
    quantity_on_hand: int = 0

    def total_cost(self) -&gt; float:
        return self.unit_price * self.quantity_on_hand
</code></pre>
</div>
<span class="comment-copy"><code>marshmallow</code> is a <b>serialization</b> library, you don't need to use it unless you want to serialize your Python objects. If you're referring to the way is seems to just add the attributes to the class it's because it uses <b>metaclasses</b> to do so.</span>
<span class="comment-copy">Wait, you're writing <i>poo</i> based programs? :D If you're talking about Object-Oriented Programming, it's <i>OOP</i>. Also, no library can provide true OOP if the language doesn't support it, so the best and only way to do OOP is using Python's OOP support.</span>
