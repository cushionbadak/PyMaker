<div class="post-text" itemprop="text">
<p>I would like to be able to interact with different sessions easily. Right now each different connection is on a different thread but everything being sent to the server compiles into the same list. </p>
<pre><code>import socket
import time
import threading



class threadedServer(object):
threads = []
messages = []
def __init__(self, host, port):
    self.host = host
    self.port = port
    self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    self.sock.bind((self.host, self.port))

def listen(self):
    self.sock.listen(5)
    while True:
        conn, addr = self.sock.accept()
        print('Connected by ' + str(addr[0]) +':' + str(addr[1]))
        conn.settimeout(20)
        newThread = threading.Thread(group=None, target = self.ListenToClient,args = (conn,addr))
        newThread.start()
        threadedServer.threads.append(newThread)
        print(threading.enumerate())
def ListenToClient(self, conn, addr):
    while True:
        try:
            data = conn.recv(1024)
            if data:
                threadedServer.messages.append(data)
                print(threadedServer.messages)
                response = 'Recieved'
                conn.send(response.encode())
            else:
                raise error('Client Disconnected')
        except:
            conn.close()
            return False


def main():
beginning = input('\n1) Start Server \n2) Check Number of Connections \n&gt;&gt; ')
if beginning == '1':
    while True:
        port_num = input("Port? ")
        try:
            port_num = int(port_num)
            threadedServer('10.148.198.201',port_num).listen()

            break
        except ValueError:
            pass
elif beginning == '2':
    print('')
    print(threading.enumerate())
    print('')
    main()

if __name__ == '__main__':
main()
</code></pre>
<p>A few questions. First, after starting the server I'd like to return to an option menu with options like end a thread, interact with a thread, view current threads open, things like that. Something that looks like the options menu at the beginning of main().  Also right now anything being sent to the server is put in the messages list, I'd like to have a separate list for each open thread where their messages are sent. My idea is that my main thread should be the one running the option menu and have threads in the background listening and connected; however, I haven't found a way to change the main thread. I'm on Windows.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/socketserver.html#asynchronous-mixins" rel="nofollow noreferrer">Asynchronous Mixins example</a> in the <code>socketserver</code> documentation shows you exactly what you want to do: create a background thread to run the server itself, so you can do other actions on the main thread while the server is handling requests.</p>
<p>Here's a copy of the relevant bit from the example, with a comment showing where you would add your code:</p>
<blockquote>
<pre><code>if __name__ == "__main__":
    # Port 0 means to select an arbitrary unused port
    HOST, PORT = "localhost", 0

    server = ThreadedTCPServer((HOST, PORT), ThreadedTCPRequestHandler)
    with server:
        ip, port = server.server_address

        # Start a thread with the server -- that thread will then start one
        # more thread for each request
        server_thread = threading.Thread(target=server.serve_forever)
        # Exit the server thread when the main thread terminates
        server_thread.daemon = True
        server_thread.start()
        print("Server loop running in thread:", server_thread.name)

        # NOTE: You can interact with the console here

        server.shutdown()
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Is there a reason why you're doing this the hard way and not using the <a href="https://docs.python.org/3/library/socketserver.html" rel="nofollow noreferrer"><code>socketserver</code> module</a> in the standard library that is designed for this sort of thing?</span>
<span class="comment-copy">Your question is not clear, but it sounds like maybe you just want the server to be listening for new connections using a background thread, so that the main thread can continue to interact with the terminal?</span>
<span class="comment-copy">No, not particularly. It's just what I was familiar with. I'll definitely look into it, thanks</span>
<span class="comment-copy">@DanielPryden Yeah, that is exactly what I'm looking for</span>
