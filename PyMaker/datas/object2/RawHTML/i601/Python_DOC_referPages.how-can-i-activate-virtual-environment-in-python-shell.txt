<div class="post-text" itemprop="text">
<p>I have created a virtual environment (directory is <strong>env</strong>) and have installed some third party packages. I work with Mac OSX. How can I <strong>activate my venv</strong> in the <strong>python interactive shell</strong>? I tried</p>
<pre><code>source env/bin/activate
</code></pre>
<p>and get the error message: <code>SyntaxError: invalid syntax</code></p>
<p>I have seen some had posted this question 8 years ago but I haven't found what I was looking for...I have also checked the python documentation but it is not clear for me how to activate it</p>
<p><a href="https://docs.python.org/3/tutorial/venv.html?highlight=virtual" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/venv.html?highlight=virtual</a></p>
<p>Can anybody please help?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your shell, normally <code>python</code> will point you to a default instance of python:</p>
<pre class="lang-sh prettyprint-override"><code>python

Python 2.7.14 (default, Sep 25 2017, 09:53:22)
[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
</code></pre>
<p>This is because <code>python</code> is located in <code>/usr/local/bin</code> which is part of your default <code>PATH</code>. Now, when you <code>source activate &lt;some_env&gt;</code>, you are <em>modifying</em> <code>PATH</code>, which you can actually see in the <code>/path/to/venv/some_env/bin/activate</code> file:</p>
<pre class="lang-sh prettyprint-override"><code>#!/bin/bash

...

    if [[ $PATH == *"CONDA_PATH_PLACEHOLDER"* ]]; then
        # If it did, replace it with our _NEW_PART
        export PATH="$($_CONDA_PYTHON -c "import re; print(re.sub(r'CONDA_PATH_PLACEHOLDER', r'$_NEW_PART', '$PATH', 1))")"
    else

        #### HERE IS WHERE THAT PATH IS OVERWRITTEN

        export PATH="$_NEW_PART:$PATH"
    fi

    # CONDA_DEFAULT_ENV is the shortest representation of how conda recognizes your env.
    #    It can be an env name, or a full path.
    #    Last date of change: 2016-06-21
    # If the string contains / it's a path
    if [[ "$@" == */* ]]; then
        export CONDA_DEFAULT_ENV=$(get_abs_filename "$args")
    else
        export CONDA_DEFAULT_ENV="$args"
    fi
...
esac
</code></pre>
<p>I'm using anaconda but the concept is the same, and <code>...</code> indicates where I've snipped out parts of the script. It is effectively exporting the venv <code>python</code> executable path into <code>PATH</code>. So you won't be pointing to your <code>venv</code> python unless one of two conditions arises: a) you explicitly call that python executable or b) you <code>source activate myenv</code> and <em>then</em> call <code>python</code>.</p>
<p>So the correct workflow is:</p>
<p><code>source /path/to/myenv/bin/activate myenv</code></p>
<p>Then call
<code>python</code></p>
<p>As an example, the first call to <code>$PATH</code> is <em>before</em> activating my conda env, the second is after:</p>
<pre class="lang-sh prettyprint-override"><code>➜  ~ echo $PATH
/Users/mm92400/bin:/usr/local/bin:/Users/mm92400/anaconda3/bin:/Users/mm92400/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands
➜  ~ source activate py36
(py36) ➜  ~ echo $PATH
/Users/mm92400/anaconda3/envs/py36/bin:/Users/mm92400/bin:/usr/local/bin:/Users/mm92400/anaconda3/bin:/Users/mm92400/.cargo/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands
</code></pre>
<p>note how <code>$PATH</code> is different</p>
</div>
<span class="comment-copy">Please provide full error you're getting</span>
<span class="comment-copy">You don't activate the virtual environment <i>in the Python shell</i>. You do so before opening the Python shell. In other words, you run that command in your <i>system's shell</i>.</span>
<span class="comment-copy">I read the question wrong :). Sorry, you do <code>source /path/to/activate</code> in the <code>SHELL</code> you are using, not inside the interactive <code>python</code> interpreter :). <code>source</code> is a shell(bash, ksh...) bultin function :) and <code>not</code> a <code>python</code> related stuff</span>
<span class="comment-copy">Thanks, malberts. So I have to use the Terminal on my Mac, correct? Then, my second question is: do I have to start IDLE in the Terminal of my system?</span>
<span class="comment-copy">When you <code>activate</code> a virtualenv, you are changing which python executable the shell is running. For this reason, you cannot activate a virtualenv while python is running, because you've already selected a specific interpreter</span>
<span class="comment-copy">Thanks @C.Nivs. I have problems with the source code to activate my virtualenv. When I type in the code that you have indicated I get an error message: No such file or directory.</span>
<span class="comment-copy">What explicitly are you giving when trying to activate your virtualenv?</span>
<span class="comment-copy">@ C.Nives. I typed in exactly what you have written: source /path/to/myenv/bin/activate myenv</span>
<span class="comment-copy">Ok that's a sample path. It depends on where you've installed your virtualenv. You will need to adjust that as necessary. For example, on my machine that would be <code>~/anaconda3/envs/py36/bin/activate</code></span>
<span class="comment-copy">@ C.Nives: Sorry, I am not familiar with the Terminal and a beginner in Coding, so thanks for your patience. The path of my virtualenv folder is as follows: Macintosh HD -&gt; User -&gt; Andrea -&gt; env. What do I have to type into the Terminal?</span>
