<div class="post-text" itemprop="text">
<p>Hw would you get a list of 12-month numbers from 3 months back from the current month? For example:</p>
<p>The current month is Feb = 2 (month number)</p>
<p>So 3 months back is Nov = 11 (month number)</p>
<p>so the list should be [11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</p>
<p>I have done:</p>
<pre><code>month_choices = deque([1, 2,3,4,5,6,7,8,9,11,12])
month_choices.rotate(4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can the user specify the current month?</p>
<p>If so:</p>
<pre><code>current_month = 2

[(i - 4) % 12 + 1 for i in range(current_month, current_month + 12)]
</code></pre>
<p>Otherwise, replace the first line with the following:</p>
<pre><code>current_month = int(datetime.datetime.today().strftime('%m'))
</code></pre>
<p>That said, it would probably be better to use <code>datetime.timedelta</code> for any form of date manipulation.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
def fun(current_month,month_back):
    a=[]
    index = l.index(current_month)
    a=l[index-month_back:]+l[:index-month_back] # list slicing take the values from month back to the end of year and from the start of the list to month back 
    return a
print(fun(2,3))
# output : [11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to rotate an array, there are generally two ways to do this. The first is more pythonic and involves appending the end of the list to the front. The second way is to utilize the collections library and rotate a list wrapped in a deque object.</p>
<pre><code>''' Rotate an array of elements
'''

from collections import deque
from datetime import datetime

# Approach #1
def rotate_1(arr, amount):
    return arr[amount:] + arr[:amount]  # append the front of the list to the back

# Approach #2
def rotate_2(arr, amount):
    shifted = deque(arr)                # wrap list in an deque
    shifted.rotate(amount * -1)         # rotate normally works left-to-right
    return list(shifted)                # unwrap the list

months = list(range(1, 13))             # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

if __name__ == '__main__':
    offset = datetime.now().month - 1   # 1 (curent month indexed at 0)
    months = rotate_2(months, offset)   # [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1]
    months = rotate_2(months, -3)       # [11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    print(months)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2150108/efficient-way-to-shift-a-list-in-python">Efficient way to shift a list in python</a></span>
<span class="comment-copy">What have you tried so far?</span>
<span class="comment-copy">It is often more accurate to use <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">datetime.timedelta</a> to compute date/time shifting.</span>
<span class="comment-copy">@Mr.Polywhirl, I agree if it's only about rotating a list.</span>
<span class="comment-copy">Very nice and simple</span>
<span class="comment-copy">User can call datetime.datetime.today().month to get current month - works nicely with my applicaion</span>
<span class="comment-copy">You should explain your code always.</span>
<span class="comment-copy">@SurajKumar Hope this makes solution understandable to you.</span>
