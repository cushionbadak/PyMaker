<div class="post-text" itemprop="text">
<p>Im trying to get this code to select a random value from this 'deck of cards', remove the selected 'card' and then append it to used_deck    </p>
<pre><code>deck = [('ad','ah','ac','as'),('2d','2h','2c','2s'),('3d','3h','3c','3s'),('4d','4h','4c','4s'),('5d','5h','5c','5s'),('6d','6h','6c','6s'),('7d','7h','7c','7s'),('8d','8h','8c','8s'),('9d','9h','9c','9s'),('td','th','tc','ts'),('jd','jh','jc','js'),('qd','qh','qc','qs'),('kd','kh','kc','ks')]
used_deck=[]

a = random.randint(0,len(deck))
try:
    b = random.randint(0,3)
    card = [a][b]
except:
    try:
        b = random.randint(0,2)
    except:
        try:
            b = random.randint(0,1)
        except:
            b = 0

print(deck[a][b],'\n')
user_deck.append(deck[a][b])
print(user_deck)
deck[a].pop(b)
print(deck)
</code></pre>
<p>However when running this code i get the error: </p>
<pre><code>deck[a].pop(b)
AttributeError: 'tuple' object has no attribute 'pop'
</code></pre>
<p>Im assuming that .pop cant be used the way i have used it, but all websites i have looked at are using it in the same way i am?</p>
</div>
<div class="post-text" itemprop="text">
<p>Tuples are immutable, meaning they cannot be changed after they are created. You can learn more about them from here <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences</a>.</p>
<p>If you want to modify the data within something, it should be contained in a mutable data structure. In this case, a list would work fine.</p>
<p>Here is an example of how you could do it:</p>
<pre class="lang-py prettyprint-override"><code>import random


deck = [['ad', 'ah', 'ac', 'as'], ['2d', '2h', '2c', '2s'], ['3d', '3h', '3c', '3s'], ['4d', '4h', '4c', '4s'], ['5d', '5h', '5c', '5s'], ['6d', '6h', '6c', '6s'], ['7d', '7h', '7c', '7s'], ['8d', '8h', '8c', '8s'], ['9d', '9h', '9c', '9s'], ['td', 'th', 'tc', 'ts'], ['jd', 'jh', 'jc', 'js'], ['qd', 'qh', 'qc', 'qs'], ['kd', 'kh', 'kc', 'ks']]

used_deck = []

card_type = random.choice(deck)
card = random.choice(card_type)
card_type.remove(card)
used_deck.append(card)

print('Card: {}'.format(card))
print('Used deck: {}'.format(used_deck))
print('Deck: {}'.format(deck))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are using tuples, those are inmutables, why you dont use lists?</p>
<p><code>deck = [['ad','ah','ac','as']</code></p>
<p>instead </p>
<pre><code> [('ad','ah','ac','as')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>deck_list = list(deck)   # Convert to list
deck_list.pop(a)

print(deck_list)
deck = tuple(deck_list)  # Convert back to tuple
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A tuple is what is known as a immutable object.
On <em>immutable sequences</em> <a href="https://docs.python.org/2/reference/datamodel.html" rel="nofollow noreferrer">from the docs</a>:</p>
<blockquote>
<p>Immutable sequences</p>
<p>An object of an immutable sequence type cannot change once it is created. (If the object contains references to other objects, these other objects may be mutable and may be changed; however, the collection of objects directly referenced by an immutable object cannot change.)</p>
</blockquote>
<p>You can either change the tuple to a list:</p>
<pre><code>a = (1, 2, 3)
a = list(a)
a.pop(0)
</code></pre>
<p>, or iterate over the tuple:</p>
<pre><code>a = (1,2,3)
a = [ i for (idx, i) in enumerate(a) if idx != 0 ]
</code></pre>
<p>there are probably other methods as well.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>deck[a].pop(b)</p>
<p>AttributeError: 'tuple' object has no attribute 'pop'</p>
</blockquote>
<p><code>a</code> is an integer so <code>deck[a]</code> is an item from the list <code>deck</code>, which gives a tuple. That is, <code>deck[a]</code> is a tuple, which does not have a pop attribute/method.</p>
<pre><code>deck.pop(a)
</code></pre>
<p>would remove an item (a tuple) with index <code>a</code> from the list named <code>deck</code>.</p>
</div>
<span class="comment-copy">You return four values for instance, <code>'ad','ah','ac','as'</code> and receive them using a single variable <code>deck</code>  This is what is called a <code>tuple</code>. How about yopu ocnvert it into a list, remove and then convert it back to the tuple?</span>
<span class="comment-copy">you probably should be using try / except like this - you have code in try blocks that should never throw errors, and other bits of code that will almost always throw errors. You should also except specific errors as a rule, otherwise you end up catching errors you didn't know were there.</span>
<span class="comment-copy">for example randint is inclusive so there is a 1 in 13 chance that your first index is out of list range (allowable values are 0 to 12)</span>
<span class="comment-copy">If the last value in one of the lists is removed, is there a way to get rid of that list? or will it have to just stay empty?</span>
<span class="comment-copy">@peterwelsh Yes, it is possible to remove the list once it is empty. After removing the card from the card_type list, check if it is empty: "if not card_type:". If it is, then call deck.remove(card_type). I hope this helps.</span>
<span class="comment-copy">deck is already a list</span>
