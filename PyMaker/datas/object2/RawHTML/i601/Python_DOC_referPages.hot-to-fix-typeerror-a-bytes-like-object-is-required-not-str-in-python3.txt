<div class="post-text" itemprop="text">
<p>I am trying to create a program that will open a port on the local machine and let others connect into it via netcat. My current code is.</p>
<pre><code>s = socket.socket()
host = '127.0.0.1'
port = 12345
s.bind((host, port))

s.listen(5)
while True:
    c, addr = s.accept()
    print('Got connection from', addr)
    c.send('Thank you for connecting')
    c.close()
</code></pre>
<p>I am new to Python and sockets. But when I run this code it will allow me to send a netcat connection with the command:</p>
<pre><code>nc 127.0.0.1 12345
</code></pre>
<p>But then on my Python script I get the error for the c.send:</p>
<pre><code>TypeError: a bytes-like object is required, not 'str'
</code></pre>
<p>I am basically just trying to open a port, allow netcat to connect and have a full shell on that machine.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason for this error is that in Python 3, strings are Unicode, but when transmitting on the network, the data needs to be bytes strings instead. So... a couple of suggestions:</p>
<ol>
<li>Suggest using <code>c.sendall()</code> instead of <code>c.send()</code> to prevent possible issues where you may not have sent the entire msg with one call (see <a href="https://docs.python.org/3/library/socket.html#socket.socket.sendall" rel="nofollow noreferrer">docs</a>).</li>
<li>For literals, add a <code>'b'</code> for bytes string: <code>c.sendall(b'Thank you for connecting')</code></li>
<li>For variables, you need to encode Unicode strings to byte strings (see below)</li>
</ol>
<p>Best solution (should work w/both 2.x &amp; 3.x):</p>
<pre><code>output = 'Thank you for connecting'
c.sendall(output.encode('utf-8'))
</code></pre>
<p><em>Epilogue/background</em>: this isn't an issue in Python 2 because strings are bytes strings already -- your OP code would work perfectly in that environment. Unicode strings were added to Python in releases 1.6 &amp; 2.0 but took a back seat until 3.0 when they became the default string type. Also see <a href="https://stackoverflow.com/questions/33054527">this similar question</a> as well as <a href="http://stackoverflow.com/questions/34283178">this one</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can decode it to str with <code>receive.decode('utf_8')</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can change the send line to this:</p>
<pre><code>c.send(b'Thank you for connecting')
</code></pre>
<p>The b makes it bytes instead.</p>
</div>
<span class="comment-copy">Have you tried encoding yet?</span>
<span class="comment-copy">No. I can comment out the c.send and it will run. Do you think that string needs to be encoded?</span>
<span class="comment-copy">Thank you for this. This is very helpful and also answers my question.</span>
<span class="comment-copy">Thanks that did the trick!</span>
