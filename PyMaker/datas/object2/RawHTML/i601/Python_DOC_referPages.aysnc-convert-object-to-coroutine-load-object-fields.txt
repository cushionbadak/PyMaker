<div class="post-text" itemprop="text">
<p>I have the following function</p>
<pre><code>async def get_page(self, browser):
    page = await browser.newPage()
    await page._client.send("Emulation.clearDeviceMetricsOverride")
    await page.setViewport(
        {"width": 2560, "height": 1600, "deviceScaleFactor": 4})
    return page
</code></pre>
<p>Along with the following test</p>
<pre><code>def test_get_page(page_test_args):
    client = VjsClient()
    browser = client.get_browser()
    page = client.get_page(browser)
    assert page._viewport == page_test_args
</code></pre>
<p>When my code hits </p>
<pre><code>assert page._viewport == page_test_args
</code></pre>
<p>I run into this error</p>
<pre><code>    def test_get_page(page_test_args):
        client = VjsClient()
        browser = client.get_browser()
        page = client.get_page(browser)
&gt;       assert page._viewport == page_test_args
E       AttributeError: 'coroutine' object has no attribute '_viewport'
</code></pre>
<p>How do I resolve this so that I can keep accessing my pages fields and keep the async function?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>async def get_page(self, browser):
</code></pre>
<p><code>async def</code> here means that call of <code>get_page</code> will returns an <code>asyncio</code> <a href="https://docs.python.org/3/library/asyncio-task.html#coroutines" rel="nofollow noreferrer">coroutine</a>. To actually execute <code>get_page</code> and get result you should <a href="https://docs.python.org/3/library/asyncio-task.html#awaitables" rel="nofollow noreferrer">await</a> for this coroutine.</p>
<p>Your test should be altered this way:</p>
<pre><code>page = await client.get_page(browser)
</code></pre>
<p>Note however that if you await for something inside function this function (<code>test_get_page</code>) must be coroutine itself (must be defined with <code>async def</code>) and awaited somewhere to be executed.</p>
<p>It means you should use <a href="https://github.com/pytest-dev/pytest-asyncio" rel="nofollow noreferrer">pytest-asyncio</a> in addition to plain <code>pytest</code> as shown <a href="https://github.com/pytest-dev/pytest-asyncio#pytestmarkasyncio" rel="nofollow noreferrer">here</a>.</p>
</div>
