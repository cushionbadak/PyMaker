<div class="post-text" itemprop="text">
<p>I am writing a program as an exercise in Automate the Boring Stuff With Python. I believe I have a working prototype, but I am getting a file not found error with shutil.copy. The program is supposed to selectively copy files with a user supplied extension, source directory, and destination directory. </p>
<p>I added some print tests at the end and they print the correct file names and the correct absolute path to the destination directory if I have shutil.copy commented out.</p>
<p>If I uncomment shutil.copy I get this error:</p>
<pre><code>Traceback (most recent call last):
  File "selectiveCopy.py", line 30, in &lt;module&gt;
    shutil.copy(filename, copyDirAbs)
  File "/usr/lib/python3.4/shutil.py", line 229, in copy
    copyfile(src, dst, follow_symlinks=follow_symlinks)
  File "/usr/lib/python3.4/shutil.py", line 108, in copyfile
    with open(src, 'rb') as fsrc:
FileNotFoundError: [Errno 2] No such file or directory: 'testfile2.txt'
</code></pre>
<p>It seems like shutil.copy is confused about the path to the file, but it is providing the "correct" file name? The files are not symlinks and they do exist.</p>
<pre><code>#!/usr/bin/python3
# Selective Copy - walks a directory tree looking for a specified
# file type and copying it to a specified directory

# All my directory paths seem correct, so it's something
# with the shutil.copy command and the path that's getting
# borked?

import shutil, os

# Ask what extension to look for
extension = input('What file extension am I copying?')

# Ask what folder to copy files to, and TODO: create it if it doens't exist
copyDir = input('What directory am I copying to?')
copyDirAbs = os.path.abspath(copyDir)

# Ask what directory to search
searchDir = input('What directory do you want me to look in?')
searchDirAbs = os.path.abspath(searchDir)

# Recursively walk the Search Directory, copying matching files
# to the Copy Directory
for foldername, subfolders, filenames in os.walk(searchDirAbs):
    print('Searching files in %s...' % (foldername))
    for filename in filenames:
        if filename.endswith('.%s' % extension):
            print('Copying ' + filename)
            print('Copying to ' + copyDirAbs)
            shutil.copy(filename, copyDirAbs)


print('Done.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One problem here is that you do not specify the path of the file. As you are executing the command from the parent directory, the script has no way of knowing that <code>testfile2.txt</code> is in a subdirectory of your input directory. To fix this, use:</p>
<pre><code>shutil.copy(os.path.join(foldername, filename), copyDirAbs)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thanks for the suggestions. I fixed it by joining the directory path and the filename this way:</p>
<pre><code># Recursively walk the Search Directory, copying matching files
# to the Copy Directory
for foldername, subfolders, filenames in os.walk(searchDirAbs):
    print('Searching files in %s...' % (foldername))
    for filename in filenames:
        if filename.endswith('.%s' % extension):
            print('Copying ' + filename)
            print('Copying to ' + copyDirAbs)
            totalCopyPath = os.path.join(searchDirAbs, filename)
            shutil.copy(totalCopyPath, copyDirAbs)

print('Done.')
</code></pre>
<p>and it seems to work correctly now.</p>
</div>
<span class="comment-copy">You need to join <code>filename</code> with <code>foldername</code>. <code>os.walk</code> doesn't change the working directory, so <code>filename</code> isn't there on it's own.</span>
<span class="comment-copy">Thank you @PeterWood I figured it was something like that but couldn't quite get it figured out. I'll see what I can do. Thanks!</span>
<span class="comment-copy">You might want to use <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer"><code>glob</code></a> instead</span>
<span class="comment-copy">@PeterWood thank you, I will look at glob. I fixed it using os.path.join as noted below. I appreciate your help!</span>
<span class="comment-copy">Thank you, I used a similar formulation. Not sure of the merits of yours vs. mine. I appreciate the help.</span>
