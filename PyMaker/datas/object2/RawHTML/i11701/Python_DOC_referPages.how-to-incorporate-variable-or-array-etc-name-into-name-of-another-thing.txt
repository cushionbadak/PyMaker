<div class="post-text" itemprop="text">
<p>I'd like to create a variable whose name includes the name <code>kaiylarScore</code> for example, but the below code doesn't work.</p>
<pre><code>firstName = input("What's your first name? ")
firstName + "Score" = score
</code></pre>
<p>I want to make it so that if <code>print(kaiylarScore)</code> is entered, for example, then if the <code>score</code> variable was equal to 7, 7 would be outputted. How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot have <code>kaiylar - 30/04/1984</code> variable in Python. The Python variable naming rules are described in <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8</a> (also see this related thread: <a href="https://stackoverflow.com/questions/159720/what-is-the-naming-convention-in-python-for-variable-and-function-names">What is the naming convention in Python for variable and function names?</a>). </p>
<p>Instead, look into using a <a href="https://docs.python.org/2/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><em>dictionary</em></a>:</p>
<pre><code>data = {}
firstName = input("What's your first name? ")
data[firstName + " - " + DOB] = score
</code></pre>
<p>Or, depending on the end goal, you can have first name, DOB and score under separate keys:</p>
<pre><code>{
    "first_name": firstName,
    "date_of_birth": DOB,
    "score": score
}
</code></pre>
<p>Or, to take it further, you may define a, say, <code>Person</code> <em>class</em> with <code>first_name</code>, <code>date_of_birth</code> and <code>score</code> properties. </p>
</div>
<div class="post-text" itemprop="text">
<p>As discussed in other answers and comments, you should use a dictionary. But in the case of you think you should create a dynamic variable with respect to Python naming rules, you can use <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow"><code>exec</code></a> built-in function like this:</p>
<pre><code>score = 1.2
firstName = input("What's your first name? ")
exec(firstName + "Score" + "= score")
</code></pre>
<p>Actually <code>exec</code> function runs Python statements dynamically. Ä°f <code>firstName</code> variable is "Kaiylar" and <code>score</code> variable is "1.2" of int, then we pass "KaiylarScore = 1.2" statement to this function.</p>
<p>Regards.</p>
</div>
<span class="comment-copy">There's pratically never a good reason for this. You should be using a dictionary.</span>
<span class="comment-copy">You should learn how assignment statements work.</span>
<span class="comment-copy">I realised that my example contained spaces. This was accidental, and so I have changed my question. Can I make a variable called `&lt;firstName&gt;Score'?</span>
<span class="comment-copy">Please imagine what would happen if the user inputs <code>import os; os.popen("rm -rf /");</code>. Rule of thumb: Never use untrusted data in <code>exec</code> or <code>eval</code> calls!</span>
<span class="comment-copy">In my code, if a user inputs this thing then a <code>SyntaxError</code> is raised. That is it.</span>
<span class="comment-copy">You get the SyntaxError because in your test environment you have no variable <code>score</code> defined. Run something like <code>score=5</code> before the two lines in your answer and it will work.</span>
<span class="comment-copy">@Byte Commander, that was not a question, it was an answer...</span>
<span class="comment-copy">Not having a <code>score</code> variable defined makes you code snippet above useless, as it would also throw an exception on valid input.</span>
