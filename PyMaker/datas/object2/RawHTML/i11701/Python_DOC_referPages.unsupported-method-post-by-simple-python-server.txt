<div class="post-text" itemprop="text">
<p>I'm learning about full stacks development of Udacity and we have to create a simple python server using http.server.</p>
<p>I wrote a small program in python that does a GET request very well. 
I'm having issues with the post. 
The server is running on port 8080, local host. Any POST request i give is returning a 501 unsupported method error.
I'm mostly into kernel device drivers etc and I'm not used to debugging errors like this.</p>
<p>The program is creating a simple server that prints a greet message on GET request as such. 
<code>http:localhost:8080/hello</code>
It also gives the user a form to enter a new greeting message, but when entered, give the 501 error. The POST method is supposed to display the same page with the user inputted greeting. I' using CGI to get this done.</p>
<p>I'm stuck!
Also, if anyone can provide links/tips to how to go about debugging such things, i'd be grateful! Is there like a log file i can read or something?</p>
<p>The program:</p>
<pre><code>from http.server import BaseHTTPRequestHandler, HTTPServer
import cgi


class WebServerHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        if self.path.endswith("/hello"):
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            output = ""
            output += "&lt;html&gt;&lt;body&gt;"
            output += "&lt;h2&gt; How's it going?&lt;/h2&gt;"
            output += "&lt;form method = 'POST' enctype='multipart/form-data' action='/hello'&gt; What would you like me to say?&lt;/h2&gt;&lt;input name = 'message' type = 'text'&gt; &lt;input type = 'submit' value = 'Submit'&gt;&lt;/form&gt;"
            output += "&lt;/body&gt;&lt;/html&gt;"
            self.wfile.write(output.encode(encoding='utf_8'))
            print (output)
            return
        if self.path.endswith("/hola"):
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            output = ""
            output += "&lt;html&gt;&lt;body&gt;&amp;#161hola  &lt;a href = /hello&gt; Back to English! &lt;/a&gt;"
            output += "&lt;form method = 'POST' enctype='multipart/form-data' action='/hello'&gt; What would you like me to say?&lt;/h2&gt;&lt;input name = 'message' type = 'text'&gt; &lt;input type = 'submit' value = 'Submit'&gt;&lt;/form&gt;"
            output += "&lt;/body&gt;&lt;/html&gt;"
            self.wfile.write(output.encode(encoding='utf_8'))
            print (output)
            return

        else:
            self.send_error(404, 'File Not Found:')


def do_POST(self):
        try:
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            ctype, pdict = cgi.parse_header(
                self.headers.getheader('content-type'))
            if ctype == 'multipart/form-data':
                fields = cgi.parse_multipart(self.rfile, pdict)
                messagecontent = fields.get('message')
            output = ""
            output += "&lt;html&gt;&lt;body&gt;"
            output += " &lt;h2&gt; Okay, how about this: &lt;/h2&gt;"
            output += "&lt;h1&gt; %s &lt;/h1&gt;" % messagecontent[0]
            output += '''&lt;form method='POST' enctype='multipart/form-data' action='/hello'&gt;&lt;h2&gt;What would you like me to say?&lt;/h2&gt;&lt;input name="message" type="text" &gt;&lt;input type="submit" value="Submit"&gt; &lt;/form&gt;'''
            output += "&lt;/body&gt;&lt;/html&gt;"
            self.wfile.write(output.encode(encoding = "utf_8"))
            print (output)
        except:
            pass




def main():
    try:
        port = 8080
        server = HTTPServer(('', port), WebServerHandler)
        print ("Web Server running on port: 8080")
        server.serve_forever()
    except KeyboardInterrupt:
        print (" ^C entered, stopping web server....")
        server.socket.close()

if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>do_POST</code> function is not indented properly, it's outside the class right now, have it aligned with the <code>do_GET</code> function and it should be fine.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler" rel="nofollow noreferrer">docs.python.org/3/library/…</a> As you can see in that link do_POST is not supported by your class. I believe that might be the error. Error 501, “Can only POST to CGI scripts”, is output when trying to POST to a non-CGI url</span>
<span class="comment-copy">Thanks for that! I've been trying to fix it but i don't know where to begin. Any help would be appreciated :D</span>
<span class="comment-copy">I don't know much about that server, I used to use cherrypy which is good and easy to use, and if you want to set a small server Flask or Bottle are great for that. Those are web frameworks for python</span>
