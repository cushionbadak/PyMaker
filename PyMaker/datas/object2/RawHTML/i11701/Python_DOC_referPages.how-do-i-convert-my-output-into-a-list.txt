<div class="post-text" itemprop="text">
<p>I'm trying to plot the output of my function into a list so I can plot it as a graph. My code so far is</p>
<pre><code>t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

def anninos():
    for time in t:
        tfac = math.factorial(time)
        print(tfac)
anninos()
</code></pre>
<p>The output I get is</p>
<pre><code>1
2
6
24
120
720
5040
40320
362880
3628800
</code></pre>
<p>but the output I want is</p>
<pre><code>[1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800]
</code></pre>
<p>What code do I need to add to get this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> or <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map()</code></a> to construct a list:</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
&gt;&gt;&gt; [math.factorial(time) for time in t]
[1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800]
&gt;&gt;&gt; list(map(math.factorial, t))
[1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800]
</code></pre>
<p>You could then return the list from your function or print it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>yield</code> instead of <code>print</code> and do <code>print(list(anninos()))</code> instead of <code>anninos()</code>.  You could also construct a list and append to it:</p>
<pre><code>def anninos():
    result = []
    for time in t:
        result.append(math.factorial(time))
    print(result)
</code></pre>
<p>Whenever you have a loop that just creates a list of the same things, you can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>def anninos():
    print([math.factorial(time) for time in t])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need use yield or not use funtion. You don't even use the return from a function - why do you use function?:</p>
<pre><code>import math

t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

def anninos(values_list):
    for time in values_list:
        yield math.factorial(time)

print list(anninos(t))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

def anninos():
    out = []
    for time in t:
        tfac = math.factorial(time)
        out.append(tfac)
    print(out)
anninos()
</code></pre>
</div>
<span class="comment-copy">How about use <code>return [math.factorial(time) for time in t]</code> instead? Since that I think OP also wants to use the list later.</span>
<span class="comment-copy">@Kevin: That would be more 'functional'.</span>
<span class="comment-copy">​​​​​​​​​​​​​​​Ah yes, I like this one better.</span>
