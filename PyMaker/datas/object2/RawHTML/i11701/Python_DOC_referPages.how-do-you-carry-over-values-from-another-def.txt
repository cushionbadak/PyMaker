<div class="post-text" itemprop="text">
<p>so i just started learning python in school and I've been practicing it at home so i am new to python.
The problem im having is that i am trying to carry over the values from def two() into main(), however when i use {0} to put them in a print or a calculation, it says error and that they don't have any value.</p>
<p>here's my code:</p>
<pre><code>def two():
  print("Hello world!")
  print("Please enter three numbers")
  nam=int(input("Enter the first number: "))
  num=int(input("Enter the second number: "))
  nom=int(input("Enter the third number: "))
  print("So the numbers you have entered are {0}, {1},{2}.".format(nam,nom,num))

def main():
  main=two()
  inpt=input("what math related problem would you like me to do with them? tell me here: ").capitalize()
  if inpt== "Divide":
    ans=({0}/{1}/{2})/1
    print("{0}, there you go!")
  elif inpt== "Times":
    ans=(nam*num*nom)/1
    print("{1}, there you go!")
</code></pre>
<p>And heres what i get from running it:</p>
<pre><code>&gt;&gt;&gt; main()
Hello world!
Please enter three numbers
Enter the first number: 30
Enter the second number: 30
Enter the third number: 30
So the numbers you have entered are 30, 30, 30.
what math related problem would you like me to do with them? tell me here:    divide
Traceback (most recent call last):
File "&lt;pyshell#4&gt;", line 1, in &lt;module&gt;
main()
File "C:\Users\chemg\Documents\PracticePY.py", line 40, in main
ans=({0}/{1}/{2})/1
TypeError: unsupported operand type(s) for /: 'set' and 'set'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can return the values from your previous function and then set them to be variables.</p>
<p>At the end of <code>two()</code></p>
<pre><code>return nam, num, nom
</code></pre>
<p>In <code>main()</code> where you set <code>main = two()</code></p>
<pre><code>nam, num, nom = two()
</code></pre>
<p>Also, you should rename <code>main</code> you can override functionality by using namespaces that are already reserved.</p>
<p>You can then do division with these values</p>
<pre><code>ans = nam / num / nom
</code></pre>
<p>As it is now these are singletons i.e. - sets containing one element.</p>
<p>You can then use <code>format</code> to input these into your strings in your <code>print</code> statements</p>
</div>
<div class="post-text" itemprop="text">
<p>In your code here:</p>
<pre><code>ans=({0}/{1}/{2})/1
</code></pre>
<p><code>{0}</code>, <code>{1}</code> and <code>{2}</code> are sets containing one element. You can't divide sets, which is what the error is complaining about.</p>
<p>You will need to pass the values from <code>two()</code> to <code>main()</code>. See Slayer's answer for details as to how that is done.</p>
<p>You cannot just use the <code>{0}</code> tokens where-ever you want because they are read from strings by <code>format()</code> to format text. Outside a string it's a set containing zero.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue at play here is that you're attempting to apply string formatting to a non-string operation within your main function.</p>
<pre><code>print("So the numbers you have entered are {0}, {1},{2}.".format(nam,nom,num))
</code></pre>
<p>The curly braces that you're using in the line above only substittue for values within that single <code>format</code> function call. When you call <code>ans=({0}/{1}/{2})/1</code> , you're actually creating three separate <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow">sets</a>; that's a different Python data type. You're getting that error because sets are not meant to be divided like your code is attempting to do.</p>
<p>As mentioned in Slayer's answer, your best bet is to return all three variables form your 'two' function:</p>
<pre><code>return nam, num, nom
</code></pre>
<p>That way, you can assign them other variable within your main function. I would highly recommend against creating a variable that's named the same thing as your function too. It'll create some very confusing behavior for you.</p>
<pre><code>nam, num, nom = two()
</code></pre>
<p>Finally, the line of code that's actually creating the exception can be modified to work.</p>
<pre><code>ans = nam / num / nom
</code></pre>
</div>
<span class="comment-copy">Yeah thanks, this worked perfectly. but i also noticed that in my code i needed to add .format at the end of the prints. it all works fine now tho. thanks!</span>
