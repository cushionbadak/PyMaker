<div class="post-text" itemprop="text">
<p>I am new to python. Now I need to declare the array of size 20 and pass the array to a function.</p>
<p>The function expecting the array is as:</p>
<pre><code>function(*args)
</code></pre>
<p>The <code>args</code> is an input to the <code>function()</code>.</p>
<p>Can anyone help me, how to pass array in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you say "array" I assume you mean a Python <code>list</code>, since that's often used in Python when an array would be used in other languages. Python actually has several array types: <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="noreferrer"><code>list</code></a>, <a href="https://docs.python.org/3.1/tutorial/datastructures.html#tuples-and-sequences" rel="noreferrer"><code>tuple</code></a>, and <a href="https://docs.python.org/3/library/array.html" rel="noreferrer"><code>array</code></a>; the popular 3rd-party module <a href="http://www.numpy.org" rel="noreferrer">Numpy</a> also supplies an array type.</p>
<p>To pass a single list (or other array-like container) to a function that's defined with a single <code>*args</code> parameter you need to use the <code>*</code> operator to unpack the list in the function call. </p>
<p>Here's an example that runs on Python 2 or Python 3. I've made a list of length 5 to keep the output short.</p>
<pre><code>def function(*args):
    print(args)
    for u in args:
        print(u)

#Create a list of 5 elements
a = list(range(5))
print(a)

function(*a)        
</code></pre>
<p><strong>output</strong></p>
<pre><code>[0, 1, 2, 3, 4]
(0, 1, 2, 3, 4)
0
1
2
3     
4 
</code></pre>
<p>Note that when <code>function</code> prints <code>args</code> the output is shown in parentheses <code>()</code>, not brackets <code>[]</code>. That's because the brackets denote a list, the parentheses denote a tuple. The <code>*a</code> in the call to <code>function</code> unpacks the <code>a</code> list into separate arguments, but the <code>*arg</code> in the <code>function</code> definition re-packs them into a tuple.                                                                       </p>
<p>For more info on these uses of <code>*</code> please see <a href="https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists" rel="noreferrer">Arbitrary Argument Lists</a> and <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="noreferrer">Unpacking Argument Lists</a> in the Python tutorial. Also see <a href="https://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters">What does ** (double star) and * (star) do for Python parameters?</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Size doesn't matter.</p>
<p>Just pass <code>list</code> to function.</p>
<pre><code>def foo(mylist):
     # do whatever you want with array here
     pass
</code></pre>
<p>You don't need <a href="https://stackoverflow.com/a/36908/3990145"><code>*args</code></a> sequence unpacking for that purpose.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think that what you need is easier than expected:</p>
<pre><code>def arrayIn(arrayFunc):
    print(arrayFunc)

arraySize = 20
mineArray = [None]*arraySize
arrayIn(mineArray)
</code></pre>
</div>
<span class="comment-copy">From which language are you coming from? Because this is as easy as <code>function(array)</code></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters">What does ** (double star) and * (star) do for Python parameters?</a></span>
<span class="comment-copy">Beware that <code>*args</code> will unpack <code>args</code>. So <code>function</code> must accept at least <code>len(args)</code> arguments.</span>
<span class="comment-copy">@DisplayName: That function signature can handle an arbitrary number of arguments, so to pass it a single list / tuple / array you can unpack it in the function call. Please see my answer for a simple demo.</span>
<span class="comment-copy">I suspect that the OP cannot change the signature of the function they're calling.</span>
<span class="comment-copy">I suspect that the OP cannot change the signature of the function they're calling.</span>
