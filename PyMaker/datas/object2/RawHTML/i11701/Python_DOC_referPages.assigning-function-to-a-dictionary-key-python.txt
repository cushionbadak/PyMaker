<div class="post-text" itemprop="text">
<p>I have a problem, where I'm assigning function to an "entry" in dictionary.
This is from the code:</p>
<pre><code>assignment[message[0]] = self.request.sendall
if members == 0:
    for request in assignment:
        request("PING")
        print(request)
        print("Sent PING")
</code></pre>
<p>And this is the traceback. From what I understand, it thinks I'm trying to call a string.</p>
<pre><code>Traceback (most recent call last):
 File "C:\Python27\lib\SocketServer.py", line 295, in_handle_request_noblock
 self.process_request(request, client_address)
 File "C:\Python27\lib\SocketServer.py", line 321, in process_request
 self.finish_request(request, client_address)
 File "C:\Python27\lib\SocketServer.py", line 334, in finish_request
 self.RequestHandlerClass(request, client_address, self)
 File "C:\Python27\lib\SocketServer.py", line 655, in __init__
 self.handle()
 File "C:\Users\Radek Golan\Desktop\Sequencer\Sequencer_Server.py", line 58, in handle
 request("PING")
TypeError: 'str' object is not callable
</code></pre>
<p>And this is the dictionary being listed out:</p>
<pre><code>{'nick1': &lt;bound method _socketobject.sendall of &lt;socket._socketobject object at 0x02883EA0&gt;&gt;, 'nick2': &lt;bound method _socketobject.sendall of &lt;socket._socketobject object at 0x02883FB8&gt;&gt;}
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your iteration here: </p>
<pre><code>for request in assignment:
</code></pre>
<p>Is giving you the <em>keys</em>  of your dictionary. Not the values. To get the values when iterating the way you are, you want: </p>
<pre><code>for request in assignment:
    print(assignment[request])
</code></pre>
<p>or</p>
<pre><code>for key, value in assignment.items():
    print("key {}".format(key))
    print("value {}".format(value))
</code></pre>
<p>Even more simple just use <code>values</code> instead:</p>
<pre><code>for value in assignment.values():
    print(value)
</code></pre>
<p>Take a look at the dictionary documentation to get more acquainted with it: </p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html#dictionaries</a></p>
</div>
<div class="post-text" itemprop="text">
<p>for loops over dictionaries iterate over the keys.  your <code>request</code> variable will have <code>"nick1"</code> in it.  You need <code>assignment[request]("Ping")</code>.</p>
</div>
<span class="comment-copy">Or <code>for value in assignent.values()</code>.</span>
<span class="comment-copy">@GingerPlusPlus ugh..of course! Thanks</span>
<span class="comment-copy">Or <code>for value in assignment.itervalues()</code> in Python 2.</span>
<span class="comment-copy">Thank you, worked for me. Accepting answer.</span>
