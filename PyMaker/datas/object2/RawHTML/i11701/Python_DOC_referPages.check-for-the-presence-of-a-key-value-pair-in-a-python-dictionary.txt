<div class="post-text" itemprop="text">
<p>What is the shortest way to check for the existence of a certain key/value pair in a dictionary if I don't know that the key exists?</p>
<p>So far, I've come up with:</p>
<pre><code>if 'key' in my_dict and my_dict['key'] == 'value':
    do_something()
</code></pre>
<p>This is really long with longer variable names or longer key/value names, such as:</p>
<pre><code>if 'X-Powered-By' in self.request.headers and self.request.headers['X-Powered-By'] == 'NodeBB':
    do_something()
</code></pre>
<p>What's a shorter way to check for the presence of a key and a corresponding value?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can fetch the value, and compare it right away:</p>
<pre><code># default return value is None if key is not found
if mydict.get("key") == "somevalue" 
</code></pre>
<p>or</p>
<pre><code># Or specify your own default value
if mydict.get("key", False) == "somevalue"
</code></pre>
<p>Check out <a href="https://docs.python.org/3/library/stdtypes.html#dict.get">Python dict.get docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, none of the answers captures the full problem. If the value that is being queried for happens to be <code>None</code> or whatever default value one provides, the <code>get()</code>-based solutions fail. The following might be the most generally applicable solution, not relying on defaults, truly checking the existence of a key (unlike <code>get()</code>), and not over-'except'-ing <code>KeyError</code>s (unlike the other <code>try-except</code> answer) while still using <code>O(1)</code> <code>dict</code> lookup (unlike <code>items()</code> approach):</p>
<pre><code>try:
    assert my_dict[key] == value:
except (KeyError, AssertionError):
    do_sth_else()  # or: pass
else:
    do_something()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're just looking for existence of the key</p>
<pre><code>if not 'key' in my_dict:
    my_dict['key'] = 'some default value'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok, my suggestion, to make your code more readable:</p>
<pre><code>headers = self.request.headers
if headers.get('X-Powered-By') == 'NodeBB':
    do_something()
</code></pre>
<p>This could be another short code <strong>but definitely not efficient</strong> as a <code>dict.get</code>:</p>
<pre><code>if ('X-Powered-By', 'NodeBB') in self.request.headers.items():
    do_something()
</code></pre>
</div>
<span class="comment-copy">Thanks, you were the first response and this is shorter than Apero's response. I'll accept this if I can.</span>
<span class="comment-copy">Yeah, I just thought of that myself :)</span>
<span class="comment-copy">This works. However, it disregards the true power of a <code>dict</code>. The other solutions are <code>O(1)</code>, this is <code>O(N)</code>!</span>
<span class="comment-copy">@Apero I've upvoted your answer, as the question was about conciseness, not speed. I'm never going to be dealing with large <code>dict</code>s, so speed is not critical. I appreciate your answer. (this is also something I thought of myself, I was looking to see if there were alternate solutions). I'll still accept Davor Lucic's solution since it's shorter, but I don't have a problem with the slower speed of your answer.</span>
<span class="comment-copy">Yeah, I don't agree with those. Not all code has to be the fastest possible, especially in my case where it's for a personal project rather than commercial software.</span>
<span class="comment-copy">but Davor's answer is neat, I would just recommend you to use the short variable name as I suggested on top of my answer, and then it's easier to read</span>
