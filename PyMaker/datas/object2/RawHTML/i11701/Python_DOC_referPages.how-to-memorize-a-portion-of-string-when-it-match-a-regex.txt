<div class="post-text" itemprop="text">
<p>I would like to memorize a part of a string when it match a regex like :</p>
<pre><code>for line in my file:
    regex = re.compile(r'characters(textToSave)otherCharacters')
    # here I would like to memorise what's in parenthesis like somehow
    # portion = /1 (texToSave)
    # so then I could do:
    if regex.search(line):
       #do something with portion
</code></pre>
<p>(in perl for example we just have to say portion = $1)</p>
<p>Somebody have an idea please ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot do that even in Perl. You need to actually <em>run</em> the regex search against a string to initialize a <code>$1</code> variable.</p>
<p>In Python, first, match it with <code>re.search</code>, and then you will be able to access the match data object:</p>
<pre><code>import re
line = "characterstextToSaveotherCharacters"
regex = re.compile(r'characters(textToSave)otherCharacters')
matchObj = regex.search(line)
if matchObj:
    print(matchObj.group(1)) # Now, matchObj.group(1) contains textToSave
</code></pre>
<p>See the <a href="https://ideone.com/fuU3Af" rel="nofollow">Python demo</a></p>
</div>
<span class="comment-copy">Ok thank you for the explanation. If I have two portion, I can't have two textToSave in parenthesis or can I ?</span>
<span class="comment-copy">@H.eyXD you can have any number of parenthesis</span>
<span class="comment-copy">Yes you can, and you can access them both using group, see <a href="https://docs.python.org/2/library/re.html#re.MatchObject.group" rel="nofollow noreferrer">group for python 2.7</a> or <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow noreferrer">group for python 3</a>.</span>
<span class="comment-copy">Thank you a lot :)</span>
<span class="comment-copy">Sorry, I was deep in thoughts about another question. Surely the 2 links provided by Xiflado are a must read for you to learn more about Python <code>re</code> module. Once you realize it is rather a poor replacement for a Perl regex, just intall <a href="https://pypi.python.org/pypi/regex" rel="nofollow noreferrer">PyPi <i>regex</i> module</a> and enjoy using regular expressions in Python,</span>
