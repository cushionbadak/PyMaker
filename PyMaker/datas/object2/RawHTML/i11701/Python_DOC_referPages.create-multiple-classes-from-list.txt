<div class="post-text" itemprop="text">
<p>Is it possible to create multiple classes from a list, like this:</p>
<pre><code>for cn in ['ABC', 'DEF', 'GHI']:
    class {cn.capitalize()?}(Base):
        __mapper_args__ = {
            'polymorphic_identity': cn.lower(),
        }
</code></pre>
<p><strong>Note:</strong> In all questions I found with a similar title, questioners actually wanted to create multiple objects from a single class</p>
</div>
<div class="post-text" itemprop="text">
<p>You could create new class at runtime using <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow"><code>type</code></a>:</p>
<pre><code>In [17]: class_names = ['ABC', 'DEF', 'GHI']

In [18]: classes = {name: type(name.capitalize(), (Base,),
                      {'__mapper_args__': {'polymorphic_identity': name.lower()}})
           for name in class_names}

In [19]: classes['DEF']
Out[19]: __main__.Def

In [20]: classes['ABC']().__mapper_args__
Out[20]: {'polymorphic_identity': 'abc'}

In [21]: import inspect

In [22]: inspect.getmro(classes['GHI'])
Out[22]: (__main__.Ghi, __main__.Base, object)
</code></pre>
</div>
<span class="comment-copy">Ok. The classes are in a dict, but how get them in the system modules? <code>[name for name, obj in inspect.getmembers(sys.modules[__name__]) if inspect.isclass(obj)]</code></span>
<span class="comment-copy">You should describe the main purpose. Are you using SQLAlchemy? Probably, it provides some low-level API that will help you with solving the problem</span>
<span class="comment-copy">SQLAlchemy indeed; but within a stand-alone py you think this is not possible?</span>
<span class="comment-copy">You could try to place all generated classes into <code>globals()</code> dictionary, although, I don't know if SQLAlchemy be able to use them. See this answer for details: <a href="http://stackoverflow.com/a/5036827/1532460">stackoverflow.com/a/5036827/1532460</a></span>
<span class="comment-copy">Well, you could firstly create all classes using <code>type</code> as described in the answer, and then add them into <code>gloabals()</code>.</span>
