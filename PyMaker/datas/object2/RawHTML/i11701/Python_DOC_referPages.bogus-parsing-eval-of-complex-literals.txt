<div class="post-text" itemprop="text">
<p>When evaluating complex numbers, python likes to fiddle the signs.</p>
<p>This is Python 3.5.0 (but similar weird issues exist in python 2)</p>
<pre><code>&gt;&gt;&gt; -0j
(-0-0j)
&gt;&gt;&gt; (-0-0j)
0j
</code></pre>
<p>Why?  </p>
<p><em>nb:</em> I noticed it when reading <a href="https://stackoverflow.com/q/36584466/674039">this</a> question.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue here is that python doesn't parse complex numbers such as <code>(-0-0j)</code> as literals, they are actually parsed as an expression:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; ast.dump(ast.parse('(-0-0j)'))
'Module(body=[Expr(value=BinOp(left=UnaryOp(op=USub(), operand=Num(n=0)), op=Sub(), right=Num(n=0j)))])'
</code></pre>
<p>So, this is not a complex literal but a subtraction of int and complex.</p>
<pre><code>&gt;&gt;&gt; -0-0j
0j
&gt;&gt;&gt; (0j).__rsub__((0).__neg__())
0j
</code></pre>
<p>The int part is taken as having a 0j complex component, and then we lose the expected <a href="https://en.wikipedia.org/wiki/Signed_zero" rel="nofollow">signed zero</a> from the result because of the subtraction of the complex components.  The result of <code>0j - 0j</code> should have positive sign, as <a href="http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4610935" rel="nofollow">IEEE 754-2008</a> dictates.  </p>
<p>This is arguably a parser issue, because the sign of the zero can influence the solutions of equations.  However, the issue has been <a href="http://bugs.python.org/issue22548" rel="nofollow">repeatedly</a> <a href="http://bugs.python.org/issue25839" rel="nofollow">raised</a> and <a href="http://bugs.python.org/issue17336" rel="nofollow">closed</a> on the python tracker as 'not a bug', so it doesn't look like that behaviour will be going away any time soon.  The reliable way to initialize complex numbers is by calling the <a href="https://docs.python.org/3/library/functions.html?highlight=complex#complex" rel="nofollow"><code>complex</code></a> built-in:</p>
<pre><code>&gt;&gt;&gt; 0-0j
0j
&gt;&gt;&gt; 0+0j
0j
&gt;&gt;&gt; complex(0, -0j)
-0j
&gt;&gt;&gt; complex(0, +0j)
0j
</code></pre>
</div>
