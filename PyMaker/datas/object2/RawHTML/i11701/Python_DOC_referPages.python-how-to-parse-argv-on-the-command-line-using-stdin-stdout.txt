<div class="post-text" itemprop="text">
<p>I'm new to programming. I looked at tutorials for this, but I'm just getting more confused. But what I'm trying to do is use stdin and stdout to take in data, pass it through arguments and print out output results. </p>
<p>So basically,on the command line, the user will input the  and an argument. </p>
<p>The arguments are:</p>
<pre><code>i = sys.argv [1]

f = sys.argv [2]

w = sys.argv [3]
</code></pre>
<p>Then using if/else the program will execute some stuff based on which argument chosen above.</p>
<p>i.e: On the command line the user will enter the script name and <code>f</code> (for <code>sys.argv[2:2]</code>)</p>
<pre><code>$ test.py f
</code></pre>
<p>.</p>
<pre><code>if sys.argv == i:
     #execute some stuff

elif sys.argv == f:
      #execute some stuff

else: 
     sys.argv == w
     #execute some stuff
</code></pre>
<p>With stdin/stdout how can I create this switch where the program executes one piece of the code based on which <code>argv</code> is chosen? Any input will be greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are a bit confused about <code>sys.argv</code>. It is a list of the parameters you gave to your program when you started it. So if you execute <code>python program.py f</code> it will be <code>["program.py", "f"]</code>. If you execute it as <code>python program.py f w i</code> it will be <code>["program.py", "f", "w", "i"]</code>. So the code you showed:</p>
<pre><code>i = sys.argv[1]
f = sys.argv[2]
w = sys.argv[3]
</code></pre>
<p>will throw an exception if you call the program with less than 3 parameters.</p>
<p>There are some libraries to help you with parsing parameters like <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a> or <a href="http://click.pocoo.org/5/" rel="nofollow">click</a>. But for simple cases just using sys.argv is probably easier.</p>
<p>It looks like you want your program to operate in three modes: i, f, and w. </p>
<pre><code>if len(sys.argv) &gt; 2:
    print("Please only call me with one parameter")
    sys.exit()

if sys.argv[1] == "f":
    #do some stuff
elif sys.argv[1] == "i":
    #do some other stuff
elif sys.argv[1] == "w":
    #do some more other stuff
else:
    print("Only accepted arguments are f, i and w")
    sys.exit()
</code></pre>
<p>You can write to stdout via <code>print</code> or <code>sys.stdout.write()</code> where the first one will add a linebreak to each string you input.</p>
<p>If you want the user to interactively input something, you should use <code>input()</code> (<code>raw_input()</code> in python2. There <code>input()</code> evaluates the statement as python code which you almost always don't want).</p>
<p>If you want to do something with lots of data you are probably best off if you pass a path to your program and then read a file in. You can also use stdin via <code>sys.stdin.read()</code> but then you want to pass something in there either via a pipe <code>some-other-program | python program.py f</code> or reading a file <code>python program.py f &lt; file.txt</code>. (Theoretically you could also use stdin to read interactive data but don't do that, use input instead.)</p>
</div>
<span class="comment-copy">argpase will be okay if I can use it with it stdin/stdout</span>
<span class="comment-copy">I will take any other suggestions. I don't think what I'm trying to do will work.</span>
<span class="comment-copy"><code>sys.argv</code> is a list of command-line parameters and not the same thing as stdin/stdout, which are pseudo files.  Reading from stdin uses <code>raw_input()</code> in Python 2, in Python 3 use <code>input()</code>.</span>
<span class="comment-copy">Thanks, I edited my answer to reflect when to use stdin/input. If you have some more information feel free to edit.</span>
<span class="comment-copy">Cool. And thanks for mentioning the danger of using Python 2 <code>input</code>.</span>
