<div class="post-text" itemprop="text">
<p>Is there any way to get pip to print the config it will attempt to use? For debugging purposes it would be very nice to know that:</p>
<ol>
<li>config.ini files are in the correct place and pip is finding them.</li>
<li>The precedence of the config settings is treated in the way one would expect from the <a href="https://pip.pypa.io/en/stable/user_guide/#config-file">docs</a></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p><strong>For 10.0.x and higher</strong></p>
<p>There is new <code>pip config</code> command, to list current configuration values</p>
<pre><code>pip config list
</code></pre>
<p>(As pointed by @wmaddox in comments) To get the list of where pip looks for config files </p>
<pre><code>pip config list -v
</code></pre>
<p><strong>Pre 10.0.x</strong></p>
<p>You can start python console and do. (If you have virtaulenv don't forget to activate it first) </p>
<pre><code>from pip import create_main_parser
parser = create_main_parser()
# print all config files that it will try to read
print(parser.files)
# reads parser files that are actually found and prints their names 
print(parser.config.read(parser.files))
</code></pre>
<p><a href="https://github.com/pypa/pip/blob/master/pip/__init__.py#L116" rel="nofollow noreferrer"><code>create_main_parser</code></a> is function that creates <a href="https://github.com/pypa/pip/blob/master/pip/baseparser.py#L135" rel="nofollow noreferrer"><code>parser</code></a> which pip uses to read params from command line(<code>optparse</code>) and loading configs(<code>configparser</code>)</p>
<p>Possible file names for configurations are generated in <a href="https://github.com/pypa/pip/blob/master/pip/baseparser.py#L151" rel="nofollow noreferrer"><code>get_config_files</code></a>. Including <code>PIP_CONFIG_FILE</code> environment variable if it set.</p>
<p><code>parser.config</code> is instance of <a href="https://docs.python.org/3/library/configparser.html#configparser.RawConfigParser" rel="nofollow noreferrer"><code>RawConfigParser</code></a> so all generated file names in <code>get_config_files</code> are passed to <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read" rel="nofollow noreferrer"><code>parser.config.read</code></a>
.</p>
<blockquote>
<p>Attempt to read and parse a list of filenames, returning a list of filenames which were successfully parsed. If filenames is a string, it is treated as a single filename. If a file named in filenames cannot be opened, that file will be ignored. This is designed so that you can specify a list of potential configuration file locations (for example, the current directory, the userâ€™s home directory, and some system-wide directory), and all existing configuration files in the list will be read. If none of the named files exist, the ConfigParser instance will contain an empty dataset. An application which requires initial values to be loaded from a file should load the required file or files using read_file() before calling read() for any optional files:</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>From how I see it, your question can be interpreted in three ways:</p>
<ol>
<li>What is the configuration of the pip executable?</li>
</ol>
<p>There is a quite extensive documentation for the configurations supported by pip, see here: <a href="https://pip.pypa.io/en/stable/user_guide/#configuration" rel="nofollow">https://pip.pypa.io/en/stable/user_guide/#configuration</a></p>
<ol start="2">
<li>What is the configuration that pip uses when configuring and subsequently building code required by a Python module?</li>
</ol>
<p>This is specified by the package that is being installed.  The package maintainer is responsible for producing a configuration script. For example, Numpy has a Configuration class (<a href="https://github.com/numpy/numpy/blob/master/numpy/distutils/misc_util.py" rel="nofollow">https://github.com/numpy/numpy/blob/master/numpy/distutils/misc_util.py</a>) that they use to configure their Cython build.</p>
<ol start="3">
<li>What are the current modules installed with pip so I can reproduce a specific environment configuration?</li>
</ol>
<p>This is easy, <code>pip freeze &gt; requirements.txt</code>.  This will produce a file of all currently installed pip modules along with their exact versions.  You can then do <code>pip install -r requirements.txt</code> to reproduce that exact environment configuration on another machine.</p>
<p>I hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can run pip in pdb. Here's an example inside ipython:</p>
<pre><code>&gt;&gt;&gt; import pip
&gt;&gt;&gt; import pdb
&gt;&gt;&gt; pdb.run("pip.main()", globals())
(Pdb) s
--Call--
&gt; /usr/lib/python3.5/site-packages/pip/__init__.py(197)main()
-&gt; def main(args=None):
(Pdb) b /usr/lib/python3.5/site-packages/pip/baseparser.py:146
Breakpoint 1 at /usr/lib/python3.5/site-packages/pip/baseparser.py:146
(Pdb) c
&gt; /usr/lib/python3.5/site-packages/pip/baseparser.py(146)__init__()
-&gt; if self.files:
(Pdb) p self.files
['/etc/xdg/pip/pip.conf', '/etc/pip.conf', '/home/andre/.pip/pip.conf', '/home/andre/.config/pip/pip.conf']
</code></pre>
<p>The only trick here was looking up the path of the baseparser (and knowing that the files are in there). If you don't know this already you can simply step through the program or read the source. This type of exploration should work for most Python programs.</p>
</div>
<span class="comment-copy">do you mean the pip.conf files?</span>
<span class="comment-copy">Yes, the Windows equivalent to the pip.conf file is a config.ini file in a parent directory called 'pip'.</span>
<span class="comment-copy">I think this is useful but it seems to just print the files it would potentially use. For example, if I run this on my Mac I get <code>['/Library/Application Support/pip/pip.conf', '/Users/myuser/.pip/pip.conf', '/Users/myuser/Library/Application Support/pip/pip.conf']</code> but none of those files actually exist. Is there some logging or anything that would have pip print out the files it's trying to read and whether or not it was successful in doing so?</span>
<span class="comment-copy">@FGreg I extend my answer. I have some questions for you. How are you trying to pass your <code>config.ini</code>? <code>get_config_files</code> reads <code>PIP_CONFIG_FILE</code> environment variable, are you setting it properly? Are you using virtualenv?</span>
<span class="comment-copy">I'm trying to figure out <b>if</b> it is using a pip.conf, pip.ini, conf.ini, etc... and if so where is it located. Your updates seem to cover what i was looking for; thanks.</span>
<span class="comment-copy">With example above this can easily be converted into script. Which can be ran to show information you want.</span>
<span class="comment-copy">Good to note... <code>pip search</code> seems to always use PyPi.org, even when your pip.conf is correctly configured to use a private mirror.  I wasted an embarrassingly long period of time on this earlier today trying to debug a problem.</span>
