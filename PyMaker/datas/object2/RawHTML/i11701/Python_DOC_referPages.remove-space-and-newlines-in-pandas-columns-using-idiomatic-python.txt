<div class="post-text" itemprop="text">
<p>I am using the below method to replace all the spaces and new line characters in the pandas dataframe column headers.</p>
<p>My question is:</p>
<p>Is a more efficient way to loop using the list comprehensions in the below code ?</p>
<pre><code>def headerfiller(df):
    for i in [" ","\n"]:
        df.columns = [c.replace(i,"_") for c in df.columns]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow"><code>str.translate</code></a>:</p>
<pre><code>&gt;&gt;&gt; tbl = str.maketrans(' \n', '__')
&gt;&gt;&gt; 'a b c\n'.translate(tbl)
'a_b_c_'
</code></pre>
<hr/>
<pre><code>try:
    tbl = str.maketrans('_ \n', '__')  # Python 3.x
except AttributeError:
    import string
    tbl = string.maketrans('_ \n', '__')  # Python 2.x

def headerfiller(df):
    df.columns = [c.translate(tbl) for c in df.columns]
</code></pre>
<hr/>
<p>Using regular expression substitution:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r'[ \n]', '_', 'a b c\n')
'a_b_c_'
</code></pre>
<hr/>
<pre><code>import re

def headerfiller(df):
    df.columns = [re.sub(r' \n', '_', c) for c in df.columns]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the string methods available for index objects,  in this case <code>columns.str.replace()</code> which allows you to do this without looping over the values yourself:</p>
<pre><code>In [23]: df = pd.DataFrame(np.random.randn(3,3), columns=['a\nb', 'c d', 'e\n f'])

In [24]: df.columns
Out[24]: Index([u'a\nb', u'c d', u'e\n f'], dtype='object')

In [25]: df.columns.str.replace(' |\n', '_')
Out[25]: Index([u'a_b', u'c_d', u'e__f'], dtype='object')
</code></pre>
<p>And by using a regular expression, you can replace spaces and newlines at the same time. See the docs: <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.replace.html" rel="nofollow">http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.replace.html</a> (for Series, but the method is the same for Index)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>split()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>'_'.join()</code></a>:</p>
<pre><code>def headerfiller(df):
    df.columns = ['_'.join(c.split()) for c in df.columns]
</code></pre>
<p>It'll lose trailing whitespace and newlines though (if that matters) and compress multiple spaces etc. to a single "_":</p>
<pre><code>In [26]: "_".join("a  b    c\n\n\n".split())
Out[26]: 'a_b_c'
</code></pre>
</div>
<span class="comment-copy">That's a good one!</span>
<span class="comment-copy">Thank you @falsetru I tried to track time for all the answers and found the regex (import re) method to be most efficient.</span>
<span class="comment-copy">This answer was edited but the changes are not reflecting here!</span>
<span class="comment-copy">@Alok, I don't get your comment. Did you try to click <code>edited .. hours ago</code> link?</span>
<span class="comment-copy">@falsetru, yup I can see the changes on clicking edited .. hours ago, now I get it, the changes will reflect only after they are peer reviewed! Thanks again.</span>
<span class="comment-copy">thank you for your answer! Though your solution is the the <i>easiest</i> to type, I accepted other solution with regex method as the answer because it was a tad bit faster and used list comprehension.</span>
