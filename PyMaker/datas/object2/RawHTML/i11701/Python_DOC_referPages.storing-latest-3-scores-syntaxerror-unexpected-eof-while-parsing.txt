<div class="post-text" itemprop="text">
<p>I'm creating a program in Python 3.x where a quiz containing randomly generated simple arithmetic questions (e.g. 3 x 8). The quiz will be played by 3 different classes of school students (not real ones!), and the latest 3 scores of each student should be stored. The scores for each class should be kept separately (in 3 text files).</p>
<p>After the quiz is played by a student, the student's score for that try should be added to their scores. </p>
<p>I created the following code, where <code>filename</code> is the name of the text file which stores the student's class' scores, <code>score</code> is the student's score that they just acheived, <code>fullName</code> is the student's full name (which they inputted at the start), and <code>scores</code> is a dictionary which stores the user's class' scores:</p>
<pre><code>with open(filename, "a+") as file:
    scores = ast.literal_eval(file.read())
#loads student's class' scores into dict

if fullName not in scores:
    scores[fullName] = collections.deque(maxlen=3)
#adds key for student if they haven't played before

scores[fullName].append(score)
#adds student's new score to their scores

with open(filename, "w") as file:
    file.write(str(scores))
#writes updated class scores to student's class' file
</code></pre>
<p>But when I run it, I receive an error:</p>
<pre><code>Traceback (most recent call last):
  File "E:\My Documents\Quiz.py", line 175, in &lt;module&gt;
    menu()
  File "E:\My Documents\Quiz.py", line 142, in menu
    scores = ast.literal_eval(file.read())
  File "C:\Python34\lib\ast.py", line 46, in literal_eval
    node_or_string = parse(node_or_string, mode='eval')
  File "C:\Python34\lib\ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "&lt;unknown&gt;", line 0

    ^
SyntaxError: unexpected EOF while parsing
</code></pre>
<p>I thought that this was because the text files were empty, so when the program tried to read from them, it produced an error. So, I changed it to this:</p>
<pre><code>with open(filename, "a+") as file:
    try:
        scores = ast.literal_eval(file.read())
    except SyntaxError:
        scores = {}
#loads student's class' scores into dict, but if
#text file is empty, it creates empty dict by itself.

if fullName not in scores:
    scores[fullName] = collections.deque(maxlen=3)
#adds key for student if they haven't played before

scores[fullName].append(score)
#adds student's new score to their scores

with open(filename, "w") as file:
    file.write(str(scores))
#writes updated class scores to student's class' file
</code></pre>
<p>But when I run the program multiple times, either with different names or with the same name, only the score from the newest try appears. I tried having data already in a text file and then running the program without the <code>try...except</code> statement, but the same <code>SyntaxError</code> still occurred. Why is this happening? Please note that I am a beginner, though, so I may not understand a lot of things.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <em>deque</em> and <em>pickle</em> but to keep it simple we will use <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json</a> to dump a dict using lists to hold the values:</p>
<pre><code># Unless first run for class we should be able to load the dict.

    try:
        with open(filename, "r") as f:
            scores = json.load(f)
    except FileNotFoundError:
        scores = {}

# game logic where you get score...

# try get users list of scores or create new list if it is their first go.
student_list = scores.get(fullName, [])

# if the user has three score remove the oldest and add the new.
# student_list[1:]  takes all but the first/oldest score.
if len(student_list) == 3:
     scores[fullName] = student_list[1:]  + [score]
else:
     # else &lt; 3 so just append the new score.
     student_list.append(score)
     scores[fullName] = student_list


# dump dict to file.
with open(filename, "w") as f:
    json.dump(scores, f)
</code></pre>
</div>
<span class="comment-copy">Why are you using literal_eval?Also why  <code>"a+"</code>  to open the file?</span>
<span class="comment-copy">@PadraicCunningham Because I read that it's a way to read a file so that it can be used in a dictionary. I used <code>"a+"</code> because I don't want the contents of the file to be truncated (deleted), I want to be able to read from the file, and I want the file to be created if it doesn't already exist.</span>
<span class="comment-copy">You should pickle the dict if you want to store a deque, same sort of logic <a href="http://stackoverflow.com/questions/36365295/trying-to-input-a-integer-into-a-file-and-retrieving-it-as-one-python-3x/36365934#36365934" title="trying to input a integer into a file and retrieving it as one python 3x">stackoverflow.com/questions/36365295/â€¦</a>, you don't want to create the file if it does not exist, you only want to try to read from it if it does exists, you are overwriting each time you dump to file with <code>w</code> so opening for reading is all you need to do.</span>
<span class="comment-copy">Not sure why you are using literal_eval or 'a+' for that matter? What is a sample output, (student_name:score1, score2, score3... or student1_name:score\nstudent2_name:score\nstudent3_name:score)</span>
<span class="comment-copy">@TheLazyScripter At the moment, one of the class' text files contains: <code>{'Bobby Berry': deque([1], maxlen=3)}</code></span>
<span class="comment-copy">Thank you very much! I understand it! :) What if it's the first run for a class? Also, I assume that this can't be done using a .txt file, then? And can a json be opened and read properly in Notepad?</span>
<span class="comment-copy">@BobZeBuilder, the file can be anything, json stores the data in human readable format, it will still look just like a dict in the file. If it is the first run then scores will be set to an empty dict and we will just dump the dict creating the file if it does not exist or just overwriting the content if it does</span>
<span class="comment-copy">Ah, okay, thanks. One more thing, in <code>scores[fullName] = student_list[1:]  + [score]</code>, why is the <code>score</code> variable in square brackets? Shouldn't it just be <code>score</code>?</span>
<span class="comment-copy">I just tested the program with this but I got this error? <code>with open(filename, "r") as f: FileNotFoundError: [Errno 2] No such file or directory: 'Class_C.txt'</code></span>
<span class="comment-copy">Ok. It works now. Thank you very much for your help, I greatly appreciate it! :)</span>
