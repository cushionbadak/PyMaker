<div class="post-text" itemprop="text">
<p>In my program In have a log directory. Name of the log directory is very long so in my python script I used hash function to get the unique code and append it to fixed string ie:</p>
<pre><code>LOG_DIR = "abcdefghijklmnopqrstuvwxyz"
 log_dir_hashed = hash(LOG_DIR)
 new_log_dir = "log_%s" %log_dir_hashed
</code></pre>
<p>Since I am new to python please tell me if anything can go wrong with above code? also How to do similar thing in shell script so that result of the python directory name and shell directory name obtained after hashing is same.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#hash" rel="nofollow noreferrer"><code>hash()</code></a> is an implementation detail of python and <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer"><code>__hash__</code> dunders</a> can even override what it does, so you shouldn't be using it like that. It also has some possibly <a href="https://stackoverflow.com/questions/7648129/when-is-a-python-objects-hash-computed-and-why-is-the-hash-of-1-different">surprising properties</a>, like:</p>
<pre><code># This is not a collision produced by the used hashing method, it is
# how hash() functions. The result though is a collision.
&gt;&gt;&gt; hash(-2) == hash(-1)
True
</code></pre>
<p>Use a well known hash like MD5 or SHA1 etc. If you need cryptographically secure log dirs, choose a suitable hash based on that. Have a look at <a href="https://docs.python.org/3/library/hashlib.html" rel="nofollow noreferrer">https://docs.python.org/3/library/hashlib.html</a>. These have equivalent command line tools available.</p>
<p>For example:</p>
<pre><code>from hashlib import md5

log_dir_hashed = md5('abcdefghijklmnopqrstuvwxyz'.encode('utf-8')).hexdigest()
new_log_dir = "log_%s" % log_dir_hashed
</code></pre>
<p>Comparing python:</p>
<pre><code>&gt;&gt;&gt; md5('abcdefghijklmnopqrstuvwxyz'.encode('utf-8')).hexdigest()
'c3fcd3d76192e4007dfb496cca67e13b'
</code></pre>
<p>and equivalent command line (one way to do it):</p>
<pre><code> % echo -n 'abcdefghijklmnopqrstuvwxyz' | md5sum - | awk '{print $1}'
c3fcd3d76192e4007dfb496cca67e13b
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hash is doing encryption to your directory, Basically converting your data to to MD5/SHA or other encryption.</p>
<p>You can use crypt(Data) in shell script to get the same results.</p>
<p>Eg. </p>
<p>log_dir_hashed=crypt(LOG_DIR)</p>
</div>
<span class="comment-copy">yes I forgot the quotes, have corrected the question. I am doing this hash just to reduce the length of filename... nothing big.</span>
<span class="comment-copy">"This is not a collision, it is how hash() functions" - no, it is a collision. It may also be how <code>hash()</code> functions, but that doesn't make it not a collision.</span>
<span class="comment-copy">@user2357112 It is not a collision in the sense of "the used hashing method produces the same value for these 2 values", but as in "this function can not return -1 as a valid return value". Yes, they will collide, but not in the traditional sense of hash collisions.</span>
<span class="comment-copy">Thanks for the solution!</span>
<span class="comment-copy">You're missing <code>-n</code> from echo. It is adding a newline after "logdir". Compare your command line command to <code>md5.new("logdir\n").hexdigest()</code>. Btw as it seems you're using python 2, you don't have to <code>.encode()</code>, as strings in python 2 are byte strings to begin with. It'd be a different story if you'd use unicode strings (<code>u"logdir"</code> in python 2).</span>
<span class="comment-copy">I tried like this: logdir="abcdefghijklmnopqrstuvwxyz" new_logs=crypt($logdir) but doesnot work</span>
