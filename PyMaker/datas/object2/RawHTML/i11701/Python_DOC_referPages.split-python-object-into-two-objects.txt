<div class="post-text" itemprop="text">
<p>I have an object that looks like</p>
<pre><code>object = [{'number':'230/600','blah':'hi'},{'number':'240/620','blah':'hey'}]
</code></pre>
<p>which I want to split into the following format </p>
<pre><code>[{'first':'230','second':'600', 'blah':'hi'},{'first':'240','second':'620','blah':'hey'}] 
</code></pre>
<p>Any tips on how to do that split based off of what comes before and after the <code>/</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the format is fixed, you can do this:</p>
<pre><code>&gt;&gt;&gt; object = [{'number':'230/600'},{'number':'240/620'}]

&gt;&gt;&gt; for value in object:
...     numbers = value['number'].split('/')
...     new_object.append({'numbera': numbers[0], 'numberb': numbers[1]})
...

&gt;&gt;&gt; new_object
[{'numberb': '600', 'numbera': '230'}, {'numberb': '620', 'numbera': '240'}]
&gt;&gt;&gt;
</code></pre>
<p>Edit: This was before the question was edited. Mike's answer works great for the edited question.</p>
</div>
<div class="post-text" itemprop="text">
<p>This works:</p>
<pre><code>res = []
for item in L:
    d = {}
    for key, value in item.items():
        split_value = value.split('/')
        if len(split_value) &gt; 1:
            for entry, name in zip(split_value, ['first', 'second']):
                d[name] = entry
        else:
            d[key] = value
    res.append(d)
</code></pre>
<p>Now:</p>
<pre><code>&gt;&gt;&gt; res
[{'blah': 'hi', 'first': '230', 'second': '600'},
 {'blah': 'hey', 'first': '240', 'second': '620'}]
</code></pre>
</div>
<span class="comment-copy">what if there is another element in the data that doesn't change but should be in the new one? See edits. For instance <code>object = [{'number':'230/600','blah':'hi'},{'number':'240/620','blah':'hey'}]</code></span>
<span class="comment-copy">@nquestion you can clone the list <code>object</code> with [:] like <code>foo = object[:]</code> <b>EDIT:</b> this was for you comment before you edit it.</span>
<span class="comment-copy">@Eekan So could I just do <code>new_object.append({'numbera': numbers[0], 'numberb': numbers[1],'blah': value['blah']})</code> to grab that <code>blah</code> element?</span>
<span class="comment-copy">@nquestion yes, and by the way <code>new_object</code> wasn't defined in that code so you should bind it with empty list <code>[]</code></span>
<span class="comment-copy">What's the <code>abc</code> part about?</span>
<span class="comment-copy">@nquestion: For <code>numbera</code>, <code>numberb</code>, and <code>numberc</code>.  Take a look at the documentation for <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a>.</span>
<span class="comment-copy"><code>abc</code> are the letters that will be added to <code>number</code> to form <code>numbera</code> etc. If you have more than three elements to split, you need more letters. <code>string.ascii_lowercase</code> could be useful here.</span>
<span class="comment-copy">The shortest one wins. There are only two entries in the split string. So only <code>a</code> and <code>b</code> are used.</span>
<span class="comment-copy">But is the letter part redundant given my edits above <code>[{'first':'230','second':'600', 'blah':'hi'},{'first':'240','second':'620','blah':'hey'}]</code></span>
