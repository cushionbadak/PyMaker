<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8031418/how-to-sort-ordereddict-of-ordereddict-python">How to sort OrderedDict of OrderedDict - Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Dose any one here know how to change the order of the order dictionary variables in python .
I have tried to change the order of the key list but it didn't change the order of the dictionary .</p>
<p>For example i want to  change the order of <strong>d</strong><br/>
to ['e','a','b','c','d'] instead of  ['a','b','c','d','e']</p>
<pre><code>d = collections.OrderedDict()
d['a'] = 'A'
d['b'] = 'B'
d['c'] = 'C'
d['d'] = 'D'
d['e'] = 'E'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to create a new object of the same type as d. Here I use <code>type(d)</code> which is of course <code>OrderedDict</code> in this case</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; d = collections.OrderedDict()
&gt;&gt;&gt; d['a'] = 'A'
&gt;&gt;&gt; d['b'] = 'B'
&gt;&gt;&gt; d['c'] = 'C'
&gt;&gt;&gt; d['d'] = 'D'
&gt;&gt;&gt; d['e'] = 'E'
&gt;&gt;&gt; new_order = ['e','a','b','c','d'] 
&gt;&gt;&gt; type(d)((k, d[k]) for k in new_order)
OrderedDict([('e', 'E'), ('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will have to create another <code>OrderedDict</code></p>
<pre><code>new_keys = ['e','a','b','c','d']
new_dict = collections.OrderedDict()
for i in new_keys:
    new_dict[i] = d[i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're using python3 you <strong>don't</strong> necessarily have to create a new dictionary.</p>
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict.move_to_end" rel="nofollow"><code>OrderedDict.move_to_end</code></a>:</p>
<blockquote>
<p>Move an existing key to either end of an ordered dictionary. The item is moved to the right end if last is true (the default) or to the beginning if last is false. Raises KeyError if the key does not exist &lt;... provides example&gt;</p>
</blockquote>
<p>Example (moving <code>e</code> to start of dictionary to achieve your output):</p>
<pre><code>&gt;&gt;&gt; d = OrderedDict()
&gt;&gt;&gt; for c in 'ABCDE':
...     d[c.lower()] = c
...
&gt;&gt;&gt; d
OrderedDict([('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('e', 'E')])
&gt;&gt;&gt; d.move_to_end('e',last=False) # last=False moves to beginning
&gt;&gt;&gt; d
OrderedDict([('e', 'E'), ('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')])
</code></pre>
</div>
