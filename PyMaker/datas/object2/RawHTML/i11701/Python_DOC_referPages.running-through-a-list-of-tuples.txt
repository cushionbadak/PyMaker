<div class="post-text" itemprop="text">
<p>I need to run through a list of tuples like this:</p>
<pre><code>list = [('Abraham', 'Lisboa', 42195, '10-18', 2224),
('Mike', 'Nova Iorque', 42195, '06-13', 2319),
('Abraham', 'Toquio', 42195, '02-22', 2403),
('Mike', 'Sao Paulo', 21098, '04-12', 1182),
('Abraham', 'Sao Paulo', 21098, '04-12', 1096),
('Dora', 'Toquio', 42195, '02-22', 2449),
('Abraham', 'Boston', 42195, '04-20', 2187)]
</code></pre>
<p>My function (participations) needs to run through these tuples and count how many times does the first element of the tuples occurrs in general.
For example: </p>
<pre><code>participations(list)
&gt;&gt;&gt;[4, 1, 2]
</code></pre>
<p>4 is the number of times that the element "Abraham" occurs, 1 is the number of times the element "Dora" occurs and 2 is the number of times the element "Mike" occurs.
The participations in the final list must be in alphabetical order, following the names given.</p>
<p>Here is what I have so far:</p>
<pre><code>def participations(list):
 result = []
 for i in list:
    for name in i[0]:
        result.append(name)
return result
</code></pre>
<p>But it's not giving me what I want, it only gives me the names with every letter separated from each other...</p>
<p>Feel free to ask any questions if you don't understand mine.</p>
<p>Hope you guys can help me, thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>No imports - just one line of list incomprehension :)</p>
<pre><code>lst = [('Abraham', 'Lisboa', 42195, '10-18', 2224),
('Mike', 'Nova Iorque', 42195, '06-13', 2319),
('Abraham', 'Toquio', 42195, '02-22', 2403),
('Mike', 'Sao Paulo', 21098, '04-12', 1182),
('Abraham', 'Sao Paulo', 21098, '04-12', 1096),
('Dora', 'Toquio', 42195, '02-22', 2449),
('Abraham', 'Boston', 42195, '04-20', 2187)]

[[y[0] for y  in lst].count(z) for z in sorted(set([t[0] for t in lst]))]
</code></pre>
<p>Python 2.7.6 interpreter:</p>
<pre><code>&gt;&gt;&gt; [[y[0] for y  in lst].count(z) for z in sorted(set([t[0] for t in lst]))]
[4, 1, 2]
&gt;&gt;&gt; 
</code></pre>
<p>If you want to count the number of occurrences of the first element in the <em>entire</em> tuple (as opposed to only considering the first element):</p>
<pre><code>[[x for y in lst for x in y].count(z) for z in sorted(set([t[0] for t in lst]))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Counting is best done by <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>Counter</code></a> in python:</p>
<pre><code>from collections import Counter
from operator import itemgetter

data = [('Abraham', 'Lisboa', 42195, '10-18', 2224),
('Mike', 'Nova Iorque', 42195, '06-13', 2319),
('Abraham', 'Toquio', 42195, '02-22', 2403),
('Mike', 'Sao Paulo', 21098, '04-12', 1182),
('Abraham', 'Sao Paulo', 21098, '04-12', 1096),
('Dora', 'Toquio', 42195, '02-22', 2449),
('Abraham', 'Boston', 42195, '04-20', 2187)]

def participations(data):
    # You could use a generator expression too instead of a map:
    # Counter(d[0] for d in data)
    counts = Counter(map(itemgetter(0), data))
    return [counts[k] for k in sorted(counts.keys())]

print(participations(data))
[4, 1, 2]
</code></pre>
</div>
<span class="comment-copy">You don't need the second <code>for</code> loop - just do <code>result.append(i[0])</code>. Also, try not to name your variables <code>list</code> since it shadows the built-in.</span>
<span class="comment-copy">Thank you! I have a list with the names now but how do I count how many times they occur?</span>
<span class="comment-copy">The word <code>list</code> is a keyword in python. It is advisable to use a different variable name to name your list.</span>
<span class="comment-copy">Your implementation currently will count appearances of the first element in the tuple from the whole tuple. This will fail for <code>('Dallas', 'Dallas', ...)</code> for example. Not a concern for the poster probably, but a broken solution all the same, unless that actually was what poster was after. The question did leave that a bit vague.</span>
<span class="comment-copy">@Ilja <i>"The question did leave that a bit vague"</i> Yeah, I didn't know for sure what the intention was either but now I've simplified it to only count the first elements. The previous version that considers all elements in each tuple is the longer version at the bottom of my answer</span>
<span class="comment-copy">Is there a way to do it without a high order function? I'm sorry but I am new to python and I don't fully understand that code yet. Thank you :)</span>
<span class="comment-copy">Just added a comment describing just that.</span>
<span class="comment-copy">I get it now, thank you very much :)</span>
