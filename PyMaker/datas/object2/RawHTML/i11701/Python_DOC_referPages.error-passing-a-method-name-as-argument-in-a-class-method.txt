<div class="post-text" itemprop="text">
<p>Well I am trying to do this:</p>
<pre><code>class Foo(object):
    def method1(self):
        print "method1"
    def method2(self):
        print "method2"        

class Fo1(object):
    def __init__(self):
        self.a = Foo()
    def classMethod(self, selection):
        self.a.selection()

A = Fo1()
A.classified('method2')
</code></pre>
<p>I got this error:</p>
<p><code>--&gt; AttributeError: 'Fo1' object has no attribute 'selection'</code></p>
<p>I don't want to use this (seems to me, more coding):</p>
<pre><code> def classified(self,selection):
    if selection == "method1": self.a.method1()
    elif selection == "method2": self.a.method2()
</code></pre>
<p>How should I code the method so that I can pass the method name as an argument?
Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>getattr</code> to do this, e.g.</p>
<pre><code>def classMethod(self, selection):
    getattr(self.a, selection)()
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow">getattr</a> takes an object an attribute name and returns the attribute, which you can then call.</p>
</div>
<span class="comment-copy"><code>getattr(self.a, selection)()</code>.</span>
<span class="comment-copy">There's rarely a reason to actually do this. You can pass a reference to a method directly: <code>A.classMethod(Foo.method2)</code></span>
<span class="comment-copy">you're calling classified where you seem to mean to be calling classMethod. that is, you're using classMethod and classified interchangeably. pick one name.</span>
