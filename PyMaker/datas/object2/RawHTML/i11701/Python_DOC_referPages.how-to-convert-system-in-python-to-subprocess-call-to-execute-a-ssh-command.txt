<div class="post-text" itemprop="text">
<p>I know it's a very stupid question, but I am having some difficulty in wrapping around my head to convert this <code>system()</code> command into an equivalent subprocess call to execute the ssh command. My current <code>system()</code> call is:</p>
<pre><code>cmd_txt = "ssh -i pem_file.pem user1@" + host_ip + " ' cd /folder1/folder2 &amp;&amp; java -cp jar_filw.jar -a arg1 -t arg2 -e arg3 -f /folder1/folder2/folder3/file1_" + suffix + ".txt'"
</code></pre>
<p>I am having difficulty especially around the <code>cd</code> and <code>java -cp</code> part. Can anyone show what would be the equivalent subprocess call to execute this command?</p>
<p><strong>NOTE</strong>: <code>host_ip</code> and <code>suffix</code> are variables.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use "subprocess.Popen"</p>
<pre><code>cmd_txt = "ssh -i pem_file.pem user1@" + host_ip + " ' cd /folder1/folder2 &amp;&amp; java -cp jar_filw.jar -a arg1 -t arg2 -e arg3 -f /folder1/folder2/folder3/file1_" + suffix + ".txt'"

p = subprocess.Popen(cmd_txt, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)
</code></pre>
<p><b>shell=True</b>
means that the text is like it would be written to command prompt</p>
<p>then u can communicate with subprocess with PIPEs</p>
<pre><code>output = p.communicate()[0]
</code></pre>
<p>Or commands can be supplied as a list of strings</p>
<pre><code>p = subprocess.Popen(["cmd", "arg1", "arg2"])
</code></pre>
<p>for more info see the docs
<a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">https://docs.python.org/3/library/subprocess.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Similar to subprocess.Popen: </p>
<pre><code>subprocess.call(cmd_txt, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)
</code></pre>
<p>would also work</p>
</div>
<span class="comment-copy">there is a library named paramiko, which might handle the ssh, but for subprocess, just refer pyprogrammer's answer</span>
