<div class="post-text" itemprop="text">
<p>I was making a exercise generator algorithm for my friend, but I stumbled across a problem. It is a python program, and I wanted to generate a folder in a directory that was above the program's location (like, the python file is in 'C:\Documents\foo' and the folder should be created in 'C:\Documents') so that it could then store the file the program created. Is there a way to do this or should I try something else?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the path argument of the <code>os.mkdir()</code> <a href="http://www.tutorialspoint.com/python/os_mkdir.htm" rel="nofollow noreferrer">function</a>. </p>
<p>Getting the current script directory is not a built-in feature, but there are multiple hacks suggested <a href="https://stackoverflow.com/questions/3718657/how-to-properly-determine-current-script-directory-in-python">here</a>.</p>
<p>Once you get the current script directory, you can build a path based off of that. </p>
</div>
<div class="post-text" itemprop="text">
<p>Not super familiar with Python in a Windows environment, but this should be easily do-able. Here is a similar question that might be worth looking at: <a href="https://stackoverflow.com/questions/273192/how-to-check-if-a-directory-exists-and-create-it-if-necessary">How to check if a directory exists and create it if necessary?</a> </p>
<p>Looks like the <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib module</a> might do what you are looking for. </p>
<pre><code>from pathlib import Path
path = Path("/my/directory/filename.txt")
try:
    if not path.parent.exists():
        path.parent.mkdir(parents=True)
except OSError:
    # handle error; you can also catch specific errors like
    # FileExistsError and so on.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Appears to work on Win 7 with Python 2.7.8 as described:</p>
<pre><code>import os.path

createDir = '\\'.join((os.path.abspath(os.path.join(os.getcwd(), os.pardir)), 'Foo'))

if not os.path.exists(createDir):
    os.makedirs(createDir)
</code></pre>
</div>
<span class="comment-copy">The os module worked! Thank you! (Also, to find the current directory, you can use os.getcwd)</span>
<span class="comment-copy">@D4rkM4sterBR, I edited the answer to avoid confusing the script directory with the process current directory. You do not want <code>os.getcwd</code>. See the linked question.</span>
<span class="comment-copy">I found out you can split the os.getcwd string into a list, reverse it, delete the last item (which would be the current folder), reverse it again, join it, and you will get the upper folder. It also works.</span>
<span class="comment-copy">Well I'm not really for using <code>os.getcwd</code>. If you're doing that regardless, you can use <code>list.pop(0)</code> (where list is your list obtained by the original split) to remove the first item of the list.</span>
<span class="comment-copy">@D4rkM4sterBR, you said "generate a folder in a directory that was above the program's location". <code>os.getcwd</code> is completely unrelated to this requirement. The current working directory can be <i>anything</i> depending on the working directory of the parent process (e.g. cmd.exe or explorer.exe) or a directory passed explicitly to <a href="https://msdn.microsoft.com/en-us/library/ms682425" rel="nofollow noreferrer"><code>CreateProcess</code></a> as <code>lpCurrentDirectory</code>.</span>
<span class="comment-copy">I don't quite get it, but I'm going to look into it. I didn't even know this library existed! Thanks!</span>
