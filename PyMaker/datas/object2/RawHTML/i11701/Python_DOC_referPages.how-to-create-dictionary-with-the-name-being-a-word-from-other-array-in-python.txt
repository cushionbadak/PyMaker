<div class="post-text" itemprop="text">
<p>I want create dictionaries when a new word comes from a files, to store filename and position in that dictionary of that word.</p>
<p>E.g:</p>
<pre><code>file1="This is apple"
file2="This is mango"
</code></pre>
<p>Dictionaries be like:</p>
<pre><code>this={file1:0,file2:0}
is={file1:5,file2:5}
apple={file1:8}
mango={file2:8}
</code></pre>
<p>My code for retrieving the words:</p>
<pre><code>files=['sample1.txt']
for filename in files:
    file = open(filename, 'r')

    dict={}
    for line in file:
        for word in line.split():
            word_name=word
            if((word_name not in dict.keys())):
                word={}      # here the different dictionaries should be created 
                dict[word_name]=0
            dict[word_name]+=1
</code></pre>
<p>here 'dict' dictionary is storing the word and occurrences. </p>
<p>Any suggestions ?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want this structure <code>{word : {file1: count1, file2: count2}}</code>.</p>
<pre><code>file1="This is apple"
file2="This is mango"
# you can read from a file incrementally and update the Counter
from collections import Counter
c1 = Counter(file1.split())
c2 = Counter(file2.split())
# do a dict comp
result = {i:{"file1": c1[i], "file2": c2[i]} for i in c1.keys() | c2.keys()}
# see if it worked
In[440]: result
Out[440]:
{'This': {'file1': 1, 'file2': 1},
 'apple': {'file1': 1, 'file2': 0},
 'is': {'file1': 1, 'file2': 1},
 'mango': {'file1': 0, 'file2': 1}}
</code></pre>
<h1>Update:</h1>
<p>If you want this structure <code>{word : {file1: [pos1, pos2...], file2: [pos1, pos2...]}}</code>.</p>
<pre><code>import re

from collections import defaultdict
result = defaultdict(lambda: {"file1": [], "file2": []})

for name, f in zip(["file1", "file2"], [file1, file2]):
    ps = [match.start() for match in re.finditer(r"\b\S+\b", f)] 
    for word, p in zip(f.split(), ps):
        result[word][name].append(p)

In [489]: dict(result)
Out[489]:
{'This': {'file1': [0], 'file2': [0]},
 'apple': {'file1': [8], 'file2': []},
 'is': {'file1': [5], 'file2': [5]},
 'mango': {'file1': [], 'file2': [8]}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't believe there is a way to name the actual dictionaries after each word for any input, but this code should provide your desired output (not sorted because it's a dictionary)</p>
<pre><code>import re
files="sample1.txt"
handle = open(files)
wordlist=[]
filenum={}

for line in handle:
    line = line.rstrip()
    if not line.startswith("file"): 
        continue
    sent = re.findall('"([^"]*)"',line) #regexp to capture text between quotations
    filenum[(line[:line.find("=")])]=sent[0] #store file numbers (file1, file2) in dictionary with sentence as value
    words=sent[0].split(" ") #collect words in sentence
    for word in words:
        if word not in wordlist: #only add words not already added
            wordlist.append(word)

x=0
for word in wordlist:
    wordpos=dict()
    for k,v in filenum.items():
        if v.find(word)!=-1:
            wordpos[k]=v.find(word, x)
    if (x+len(word)+1)&lt;len(v):
        x=x+len(word)+1
    print word+"="
    print wordpos
</code></pre>
<p>This should produce:</p>
<pre><code>This={'file2': 0, 'file1': 0}
is={'file2': 5, 'file1': 5}
apple={'file1': 8}
mango={'file2': 8}
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> <code>Counter(f.read().split())</code></span>
<span class="comment-copy">You want position or count?</span>
<span class="comment-copy">What if he word occurs multiple times?</span>
<span class="comment-copy">If it is position a list is probably required. If it is count it is fine.</span>
<span class="comment-copy">I want various dictionaries to be created as the words comes.</span>
<span class="comment-copy">your code is right thx for that.    I wanted positions instead of count, i think that can be done with <code>file.index(word) </code>.  But the problem is that now how to get positions if multiple occurrences are there.    E.g <code>file1 = "This is is apple"      file1.index('is')  gives 2 but i want 2,3 </code>   so how can i do that?</span>
<span class="comment-copy">@Ak-21 Thats why I asked in the comments if it is position or count.just give me a minute. I will uodate my answer.</span>
<span class="comment-copy">@Ak-21 Updated the answer for finding positions. Check.</span>
