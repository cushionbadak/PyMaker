<div class="post-text" itemprop="text">
<p>What the equivalent way to <code>str.format</code> function for converting booleans into strings?</p>
<pre><code>&gt;&gt;&gt; "%5s" % True
' True'

&gt;&gt;&gt; "%5s" % False
'False'
</code></pre>
<p>Please note the space in <code>' True'</code>. This  always makes the length the same for 'True' and 'False'.</p>
<p>I've check the methods in this post:</p>
<p><a href="https://stackoverflow.com/questions/2259228/how-are-booleans-formatted-in-strings-in-python">How are booleans formatted in Strings in Python?</a></p>
<p>None of them can do the same thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use type conversion flags to do what you wanted:</p>
<pre><code>'{:_&gt;5}'.format(True)   # Oh no! it's '____1'
'{!s:_&gt;5}'.format(True) # Now we get  '_True'
</code></pre>
<p>Note the <code>!s</code>. I used an underscore to show the padding more clearly.</p>
<h3>Relevant documentation:</h3>
<blockquote>
<h2>6.1.3. <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">Format String Syntax</a></h2>
<p>[...]</p>
<p>The <em>conversion</em> field causes a type coercion before formatting. Normally, the job of formatting a value is done by the <a href="https://docs.python.org/3/reference/datamodel.html#object.__format__" rel="nofollow noreferrer"><code>__format__()</code></a> method of the value itself. However, in some cases it is desirable to force a type to be formatted as a string, overriding its own definition of formatting. By converting the value to a string before calling <a href="https://docs.python.org/3/reference/datamodel.html#object.__format__" rel="nofollow noreferrer"><code>__format__()</code></a>, the normal formatting logic is bypassed.</p>
<p>Three conversion flags are currently supported: <code>'!s'</code> which calls <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer"><code>str()</code></a> on the value, <code>'!r'</code> which calls <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code></a> and <code>'!a'</code> which calls <a href="https://docs.python.org/3/library/functions.html#ascii" rel="nofollow noreferrer"><code>ascii()</code></a>.</p>
<p>Some examples:</p>
<pre><code>"Harold's a clever {0!s}"        # Calls str() on the argument first
"Bring out the holy {name!r}"    # Calls repr() on the argument first
"More {!a}"                      # Calls ascii() on the argument first
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>str()</code> function. More about it <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow">here</a>.</p>
<p>Here are some examples:</p>
<pre><code>x = str(True)
y = False

print( type(x) )
&lt;class 'str'&gt;   # This is a string

print( type(y) )
&lt;class 'bool'&gt;  # This is a boolean
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found that <code>"{:&gt;5}".format(str(True))</code> works fine. 
The output is exactly the same as <code>"%5s" % True</code>, ie <code>' True'</code>.</p>
<p>So the length of <code>"{:&gt;5}".format(str(bool_value))</code> is alway 5, no matter <code>bool_value</code> is <code>True</code> or <code>False</code>.</p>
<p>Of course you may change the length or the alignment direction as you want. eg. <code>"{:6}".format(str(True))</code> outputs <code>'True  '</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure if I got idea correctly but if some variable x results in True or False, You can write str(x); if not a case, sorry just try explaining Q in more detailed way</p>
</div>
<span class="comment-copy">I think <code>"{:&gt;5}".format(str(True))</code> works fine. OK, I'll leave this question here. Maybe someone will meet the same problem.</span>
<span class="comment-copy">Post it as answer if you think it solved your case.</span>
