<div class="post-text" itemprop="text">
<p>I have the following json</p>
<pre><code>{
"1102": {
    "colours": {
        "r": -70.353, 
        "g": -33.151, 
        "b": -33.824, 
        "y": -71.043
    }, 
    "texture": "grainy", 
    "transparency": "0.8"
}, 
"3941": {
    "colours": {
        "r": -57.833, 
        "g": -34.219, 
        "b": -35.139, 
        "y": -59.258
    }, 
    "texture": "smooth", 
    "transparency": "0.2"
}, 
"2932": {
    "colours": {
        "r": -45.863, 
        "g": -23.125, 
        "b": -24.317, 
        "y": -47.357
    }, 
    "texture": "rough", 
    "transparency": "0.1"
},
</code></pre>
<p>And I want to use Python to get a print
1102
3941
2932
Without the information to follow</p>
<p>I've tried any methods but I can't seem to isolate the first parts. Any help is appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>Load the json using <a href="https://docs.python.org/2/library/json.html" rel="nofollow"><code>json</code> module</a> into a Python dictionary and get the <a href="https://docs.python.org/2/library/stdtypes.html#dict.keys" rel="nofollow"><code>.keys()</code></a>:</p>
<pre><code>import json

data = "your json data"

d = json.loads(data)
print(d.keys())
</code></pre>
<p>Note that in Python 3, <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow"><code>.keys()</code></a> is a <em><a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow">view</a></em>, to get the list:</p>
<pre><code>print(list(d.keys()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = json.loads(json_string)
for k,v in data:
    print(k,v)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can load the json, converting it to a dictionary:</p>
<pre><code>import json    
data = json.loads(json_string)
</code></pre>
<p>Then you can easily print they keys:</p>
<pre><code>print ' '.join([key for key in data.iterkeys()])
</code></pre>
<p>Done, you'll print all the keys space separated, using a pythonic list comprehension over your dictionary created from your json string.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you assign the JSON to a variable...</p>
<pre><code>myJson = {
"1102": {
    "colours": {
        "r": -70.353, 
        "g": -33.151, 
        "b": -33.824, 
        "y": -71.043
    }, 
    "texture": "grainy", 
    "transparency": "0.8"
}, 
"3941": {
    "colours": {
        "r": -57.833, 
        "g": -34.219, 
        "b": -35.139, 
        "y": -59.258
    }, 
    "texture": "smooth", 
    "transparency": "0.2", 
    "country": "Argentina"
}, 
"2932": {
    "colours": {
        "r": -45.863, 
        "g": -23.125, 
        "b": -24.317, 
        "y": -47.357
    }, 
    "texture": "rough", 
    "transparency": "0.1"}
}
</code></pre>
<p>Python will treat it as a dictionary! You can <code>print(myJson)</code>, which will return: </p>
<p><code>{'3941': {'country': 'Argentina', 'transparency': '0.2', 'colours': {'g': -34.219, 'y': -59.258, 'b': -35.139, 'r': -57.833}, 'texture': 'smooth'}, '2932': {'transparency': '0.1', 'colours': {'g': -23.125, 'y': -47.357, 'b': -24.317, 'r': -45.863}, 'texture': 'rough'}, '1102': {'transparency': '0.8', 'colours': {'g': -33.151, 'y': -71.043, 'b': -33.824, 'r': -70.353}, 'texture': 'grainy'}}</code></p>
<p>If you want specific data, you can use <code>print(myJson['1102'])</code>, which will return: </p>
<p><code>{'transparency': '0.8', 'colours': {'g': -33.151, 'y': -71.043, 'b': -33.824, 'r': -70.353}, 'texture': 'grainy'}</code></p>
</div>
<span class="comment-copy">Have you tried anything involving parsing json?</span>
<span class="comment-copy">Instead of just giving the code, please explain the logic. This enables both the OP and other readers to learn the principles behind the solution, and apply it to their specific problem.</span>
