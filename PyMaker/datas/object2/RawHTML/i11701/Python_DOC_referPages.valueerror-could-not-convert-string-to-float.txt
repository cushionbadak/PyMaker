<div class="post-text" itemprop="text">
<p>I'm trying to read in a text file and turn the input into lists:</p>
<pre><code>model = open('Grids/Dusty_AGN/Z'+Z+'_n'+n+'_alp-'+alpha+'_fluxes.txt','r')

Hafluxfile = model.readline() + model.readline() + model.readline() ; the first three lines of the file contain the values that I need

Haflux = []

Haflux.append([float(x) for x in Hafluxfile.split(' ')])
</code></pre>
<p>If I <code>print Hafluxfile</code>, this is what I see:</p>
<pre><code>  2.97500      2.94300      2.92700      2.91800      2.90700      2.90200
  2.89300      2.87700      2.86700      2.87000      2.89900      2.93500
  2.91900
</code></pre>
<p>and then I end up with this error message when trying to append the list <code>Haflux</code>:</p>
<blockquote>
<p>ValueError: could not convert string to float</p>
</blockquote>
<p>and no, there is nothing that I haven't included beyond the colon, it seems to be telling me that white space is preventing it from getting to the first number? I don't know how to work around this.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have <em>multiple spaces</em> between the items. Don't specify the separator when calling <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow"><code>split()</code></a>:</p>
<blockquote>
<p>If sep is not specified or is None, a different splitting algorithm is applied: runs of consecutive whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the string has leading or trailing whitespace.</p>
</blockquote>
<p>And, it looks like you also have leading and trailing spaces which you can trim with <a href="https://docs.python.org/2/library/stdtypes.html#str.strip" rel="nofollow"><code>strip()</code></a>:</p>
<pre><code>[float(x) for x in Hafluxfile.strip().split()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is you are getting some empty elements.</p>
<pre><code>Haflux.append([float(str(x)) for x in Hafluxfile.split(' ') if len(x)&gt;1])
</code></pre>
<p>This will take care of them.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all you should concatenate your path component using <code>+</code>, instead you should use the <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a> function. That being said to do this I would use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module.</p>
<pre><code>import os
import csv

haflux = []
filename = os.path.join('Grids/Dusty_AGN/Z', Z, '_n', n, '_alp-', alpha, '_fluxes.txt')
with open('filename') as f:
    reader = csv.reader(f, delimiter=' ')
    for n in range(3):
        haflux.append([float(i) for i in next(reader) if i])

print(haflux)
#  [[2.975, 2.943, 2.927, 2.918, 2.907, 2.902], [2.893, 2.877, 2.867, 2.87, 2.899, 2.935], [2.919]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From my very limited understanding of Python, it is smart enough to convert the string to a float automatically provided that there is no other character present in the string that is non-numerical. You should try iterating over your file and call <code>isDigit()</code> on each of your number to see if there are any hidden new-line characters or something of that sort. Or is the problem that it's not iterating over the list at all?</p>
</div>
<span class="comment-copy">worked perfectly, thank you!</span>
