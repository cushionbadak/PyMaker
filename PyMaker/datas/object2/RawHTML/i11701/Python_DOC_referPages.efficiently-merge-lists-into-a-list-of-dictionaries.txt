<div class="post-text" itemprop="text">
<p>I have 2 lists and I want to merge them as list of dictionaries.
The code I have:</p>
<pre class="lang-python prettyprint-override"><code>import pprint

list1 = [1, 2, 3, 4]
list2 = [0, 1, 1, 2]
newlist = []
for i in range(0, len(list1)):
    newdict = {}
    newdict["original"] = list1[i]
    newdict["updated"] = list2[i]
    newlist.append(newdict)
pprint.pprint(newlist)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>[{'original': 1, 'updated': 0},
 {'original': 2, 'updated': 1},
 {'original': 3, 'updated': 1},
 {'original': 4, 'updated': 2}]
</code></pre>
<p>Is there a better or faster way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">zip</a> your two lists and then use a list comprehension, where you create your dictionary as each item in the list: </p>
<pre><code>list1=[1,2,3,4]
list2=[0,1,1,2]

new_list = [{'original': v1, 'updated': v2} for v1, v2 in zip(list1, list2)]

print(new_list)
</code></pre>
<p>Output:</p>
<pre><code>[{'updated': 0, 'original': 1}, {'updated': 1, 'original': 2}, {'updated': 1, 'original': 3}, {'updated': 2, 'original': 4}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also iterate over both lists at every index with a list comprehension.  As is, this will throw an index error if list1 is larger than list2.  Anyone know if zip is faster?</p>
<pre><code>newlist = [{"original":list1[i],"updated":list2[i]} for i in range(len(list1))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The answer provided by idjaw nails it in a very Pythonic way. There is an alternative approach using named tuples:</p>
<pre><code>from collections import namedtuple
from itertools import izip
ListCompare = namedtuple('ListCompare', ['original', 'updated'])
L1 = [1,2,3,4]
L2 = [0,1,1,2]
comp = [ListCompare(a, b) for a,b in izip(L1, L2)]
print comp[1].original, comp[1].updated

2 1
</code></pre>
<p>Named tuples should perform better (i.e. less overhead) than dictionaries if the lists are long. Just though I'd mention this less known alternative.
Note that this code is for Python 2.7, for Python 3 one must make minor adjustments.</p>
</div>
<span class="comment-copy">No, the zip approach is slower.</span>
