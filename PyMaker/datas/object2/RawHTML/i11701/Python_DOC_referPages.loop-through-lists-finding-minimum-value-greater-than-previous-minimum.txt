<div class="post-text" itemprop="text">
<p>A simple problem.</p>
<p>I have a list of lists, and I am looking to find the minimum value in each list that is greater than the previous minimum.</p>
<p>The lists are individually sorted, and for the first list I'm just looking for the minimum value.</p>
<p>e.g:</p>
<pre><code>my_list = [[3, 5, 8, 14, 18, 28, 30],
           [4, 6, 7, 9, 13, 15, 17, 19, 22, 26],
           [2, 11, 21, 24, 32],
           [1, 10, 12, 16, 20, 23, 25, 27, 29, 31, 33, 34]]
</code></pre>
<p>And the expected output would be:</p>
<pre><code>[3, 4, 11, 12]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It should be pretty readable:</p>
<pre><code>minimums = []
minimum = None
for sublist in my_list:
    try:
        minimum = min(x for x in sublist if minimum is None or x &gt; minimum)
        minimums.append(minimum)
    except ValueError: # No numbers greater than minimum
        # Error handling
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do this using the built-in <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next</code></a> function since each <code>list</code> is already sorted:</p>
<pre><code>result = []
first = my_list[0][0]
result.append(first)
for val in my_list[1:]:
    try:
        first = next(el for el in val if el &gt; first)
        result.append(first)
    except StopIteration:
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>filter</code></p>
<pre><code>curr_min = min(my_list[0])
minimums = [curr_min]
for l in my_list[1:]:
    curr_min = min(filter(lambda x: (x &gt; curr_min), l))
    minimums.append(curr_min)
</code></pre>
<p>If <code>filter</code> returns an empty list, <code>min</code> is going to raise a <code>ValueException</code></p>
</div>
<span class="comment-copy">What's the expected output for e.g. <code>[[4,5,6],[1,2,3]]</code>, i.e. when there is no minimum in a subsequent list which is greater than the minimum in the previous list?</span>
<span class="comment-copy">Good point, not expecting it to happen in this case so @zondo 's ValueError works well.</span>
