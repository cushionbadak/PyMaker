<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5952344/how-do-i-format-a-string-using-a-dictionary-in-python-3-x">How do I format a string using a dictionary in python-3.x?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>If I have this:</p>
<pre><code>&gt;&gt;&gt; templ = "{aa} fd3443fds {bb} 543gfdgf {cc}"
&gt;&gt;&gt; d1 = {"aa": "this is aa", "bb": "this is bb33", "cc": "this is cc5222"}
</code></pre>
<p>What's the easiest way to replace the values in {} in <code>templ</code> with the corresponding values in "d1", preferably using the function "format" of String?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a template string <code>templ</code> and a dictionary <code>d1</code>, you can fill in the template variables thusly:</p>
<pre><code>result = templ.format(**d1)
</code></pre>
<p>If you have an object <code>d1</code> with attributes <code>d1.aa</code>, <code>d1.bb</code>, etc:</p>
<pre><code>class Class1: pass
d1 = Class1()
d1.aa = d1.bb = d1.cc = 'hello'
</code></pre>
<p>then you could rewrite your template string:</p>
<pre><code>templ = "{0.aa} fd3443fds {0.bb} 543gfdgf {0.cc}"
result = templ.format(d1)
</code></pre>
<p>or you may be able to use <code>vars(d1)</code>:</p>
<pre><code>templ = "{aa} fd3443fds {bb} 543gfdgf {cc}"
result = templ.format(**vars(d1))
</code></pre>
</div>
<span class="comment-copy">Joota, do you mean <code>String</code> or <code>str</code>? I don't know what a <code>String</code> is.</span>
<span class="comment-copy">@Robáµ©, str.....</span>
<span class="comment-copy">how can I do that for the attributes of an instance? in other words, if d1 is an instance of some Class1 and it has attributes "aa", "bb" and "cc". Passing it as-is throws an exception.</span>
<span class="comment-copy">@Joota - Try using <code>.format(**vars(d1))</code>. See my recent edit.</span>
<span class="comment-copy">FYI, in modern Python, <code>result = templ.format(**d1)</code> can be done with <a href="https://docs.python.org/3/library/stdtypes.html#str.format_map" rel="nofollow noreferrer"><code>str.format_map</code></a> to support arbitrary non-<code>dict</code> objects as long as they support the mapping protocol by doing <code>result = templ.format_map(d1)</code>. At one point, this was also necessary for <code>dict</code> subclasses, but it looks like that's not the case in 3.5 at least (<code>'{a},{b}',format(**defaultdict(lambda: 'foo'))</code> produces <code>'foo,foo'</code> instead of erroring out, indicating the <code>defaultdict</code> status isn't lost).</span>
