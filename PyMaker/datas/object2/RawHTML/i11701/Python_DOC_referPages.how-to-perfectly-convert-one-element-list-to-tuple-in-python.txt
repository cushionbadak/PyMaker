<div class="post-text" itemprop="text">
<p>So I am trying to do this:</p>
<pre><code>tuple([1])
</code></pre>
<p>The output I expect is :</p>
<pre><code>(1)
</code></pre>
<p>However, I got this:</p>
<pre><code>(1,)
</code></pre>
<p>But if I do this:</p>
<pre><code>tuple([1,2])
</code></pre>
<p>It works perfectly! like this:</p>
<pre><code>(1,2)
</code></pre>
<p>This is so weird that I don't know why the tuple function cause this result.</p>
<p>Please help me to fix it.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is such a common question that the <a href="https://wiki.python.org/moin/TupleSyntax" rel="noreferrer">Python Wiki has a page dedicated to it</a>:</p>
<blockquote>
<p><strong>One Element Tuples</strong></p>
<p>One-element tuples look like:</p>
<p><code>1,</code> </p>
<p>The essential element here is the trailing comma. As for any
  expression, parentheses are optional, so you may also write
  one-element tuples like</p>
<p><code>(1,)</code> </p>
<p>but it is the comma, not the parentheses, that define the tuple. </p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>That is how tuples are formed in python. Using just <code>(1)</code> evaluates to 1, just as much as using <code>(((((((1)))))))</code> evaluates to <code>((((((1))))))</code> to <code>(((((1)))))</code> to... 1.</p>
<p>Using <code>(1,)</code> explicitly tells python you want a tuple of one element</p>
</div>
<div class="post-text" itemprop="text">
<p>What you are getting is a tuple. When there is only a single element, then it has to be represented with a comma, to show it is a tuple. </p>
<p>Eg)</p>
<pre><code>&gt;&gt;&gt; a = (1)
&gt;&gt;&gt; type(a)
&lt;type 'int'&gt;
&gt;&gt;&gt; a = (1,)
&gt;&gt;&gt; type(a)
&lt;type 'tuple'&gt;
&gt;&gt;&gt;
</code></pre>
<p>The reason is, when you do not use a comma when there is only one element, the interpreter evaluates it like an expression grouped by paranthesis, thus assigning <code>a</code> with a value of the type returned by the expression</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/expressions.html#parenthesized-forms" rel="nofollow">docs</a></p>
<blockquote>
<h2>6.2.3. Parenthesized forms</h2>
<p>A parenthesized form is an optional expression list enclosed in parentheses:</p>
<p><pre>parenth_form ::=  "(" [expression_list] ")" </pre>A parenthesized expression
  list yields whatever that expression list yields: if the list contains
  at least one comma, it yields a tuple; otherwise, it yields the single
  expression that makes up the expression list.</p>
<p>An empty pair of parentheses yields an empty tuple object. Since
  tuples are immutable, the rules for literals apply (i.e., two
  occurrences of the empty tuple may or may not yield the same object).</p>
<p>Note that tuples are not formed by the parentheses, but rather by use
  of the comma operator. The exception is the empty tuple, for which
  parentheses are required — allowing unparenthesized “nothing” in
  expressions would cause ambiguities and allow common typos to pass
  uncaught.</p>
</blockquote>
<p>So <code>(1,)</code> really is a tuple</p>
</div>
<div class="post-text" itemprop="text">
<p><code>(1)</code> is just <code>1</code> in grouping parentheses - it's an integer. <code>(1,)</code> is the 1-element tuple you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>That is normal behavior in Python. You get a Tuple with one element. The notation (1,) is just a reminder that you got such a tuple.</p>
</div>
<div class="post-text" itemprop="text">
<p>The output (1,) is fine. The , is to mark a single element tuple.</p>
<p>If</p>
<pre><code>a = (1) 
</code></pre>
<p>a is really a integer</p>
<p>If</p>
<pre><code>a = (1, )
</code></pre>
<p>Then a is a tuple.</p>
</div>
<span class="comment-copy">The type for <code>(1)</code>  is integer; while <code>(1,)</code> is tuple.</span>
<span class="comment-copy">So (1,) just looks not perfectly. But in fact it is a tuple only contains one element?</span>
<span class="comment-copy">Yes, you are right.</span>
<span class="comment-copy">So (1,) just looks not perfectly. But in fact it is a tuple only contains one element?</span>
<span class="comment-copy">@MarsLee Actually, <code>1,</code> is a tuple that only contains one element. <code>(1,)</code> is just a pretty version of the same :) Try it yourself: <code>for i in 1,2,3,: print i</code> - the tuple is <code>1,2,3,</code>, putting parenthesis around it just makes it easy for the lexer to realise it's a tuple and not confuse it with something else.</span>
<span class="comment-copy">I totally got it. Really appreciate for your help. :)</span>
