<div class="post-text" itemprop="text">
<p>I'm having this problem with a python script I'm writing that calls an exe file (subrocess.Popen). I'm redirecting the stdout and stderr to PIPE, but i cant read (subprocess.Popen.stdout.readline()) any output.</p>
<p>I did try to run the exec file in windows cli and redirecting both stdout and stderr... and nothing happens. So I reckon there is no stdout and stderr in this Qt app.</p>
<p>Is there any way I can get to the data that prints this exe on screen (by the way the application is photivo.exe)?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Warning:</strong> Use communicate() rather than .stdin.write, .stdout.read or .stderr.read to avoid deadlocks due to any of the other OS pipe buffers filling up and blocking the child process.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stderr" rel="nofollow">https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stderr</a></p>
<p>That means try something like this</p>
<pre><code>process = subrocess.Popen(...)
stdout, stderr = process.communicate()
print(stdout)
print(stderr)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://doc.qt.io/qt-5/debug.html" rel="nofollow noreferrer">http://doc.qt.io/qt-5/debug.html</a>:</p>
<blockquote>
<p>With Windows, if it is a console application, the text is sent to console; otherwise, <strong>it is sent to the debugger</strong>.</p>
</blockquote>
<p>There is a special debug channel on Windows (WinAPI function OutputDebugString). See also <a href="https://stackoverflow.com/questions/14643293/how-does-qt5-redirect-qdebug-statements-to-the-qt-creator-2-6-console">How does Qt5 redirect qDebug() statements to the Qt Creator 2.6 console</a></p>
<p>Now it is possible that photivo.exe uses plain qDebug() to produce the output and thus writes to the debug channel. You could try to verify this by using <a href="https://technet.microsoft.com/en-us/sysinternals/bb896647.aspx" rel="nofollow noreferrer">the tool DebugView</a>.</p>
<p>In that case you must find a way to read the debug channel from Python or fork photivo.exe and make it use STDOUT/STDERR instead of qDebug().</p>
</div>
<span class="comment-copy">Maybe you could see <a href="https://gist.github.com/Qix-/72db8d2828eb479e6c47" rel="nofollow noreferrer">gist.github.com/Qix-/72db8d2828eb479e6c47</a></span>
<span class="comment-copy">yep! i've tried .communicate() but it stalls there as .stdout.readline() or .stdout.read(). The thing is that evidently (as for the tests i did in windows command promt) that app has no stdout or stderr, so thats why it halts there, its just waiting for an output, but there is none. While obviously there ir output in the command promt screen, but i guess not forwarded to stdio. I believe this is something specific of Qt, but i dont know much about how Qt writes to the command promt.</span>
<span class="comment-copy">great insight! haven't thought of debug channel, but im afraid the output it is no debug pipe either. Tried with DebugView and still nothing. Also tried to redirect the debug channel in windows terminal (whatever_command 5&gt;something.txt). I think i'll have to find another workaround.</span>
