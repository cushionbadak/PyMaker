<div class="post-text" itemprop="text">
<p>I have two text files</p>
<p>1) foo.txt</p>
<p>2) write.txt</p>
<p>foo.txt contains </p>
<pre><code>welcome 
</code></pre>
<p>and write.txt is blank text file.</p>
<pre><code>fo = open("foo.txt", "r+")
str = fo.readlines();
fo1 = open("write.txt", "wb")
print str[0]


if (str[0] == "welcome" ): fo1.write( "hoola");

fo.close()

fo1.close()
</code></pre>
<p>The above lines are the python code.
When I run it there are no errors.</p>
<p>The output is</p>
<pre><code>welcome
</code></pre>
<p>Text files after running the program:</p>
<p>1) foo.txt </p>
<pre><code>welcome
</code></pre>
<p>2) write.txt is completely blank</p>
<p>so the test "hoola" is not written on the file write.txt</p>
<p>With the output, i made sure that str[0] is 'welcome' but the text is not written to the 2nd text file
How can i correct this code to compare the first element of str[] with the string 'welcome'</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>open('foo.txt').readlines()</code> will give you the list <code>['welcome\n']</code>, you are missing the newline character in your check. So either check your string against <code>'welcome\n'</code> or strip the line you have read in of any newline characters (and whitespace) with the <code>str.strip</code> method.</p>
<p>In addition, don't use the variable name <code>str</code>, you will mask the builtin <code>str</code> type.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Here are a few things you can do:</p>
<p>-If there is any trailing whitespace it can mess up the string match and can be removed with:</p>
<pre><code>import string
clean_input = string.rstrip(str[0])
if clean_input == 'welcome': ...
</code></pre>
<p>-Also you could use regular expressions to pattern match if you only care about the first characters matching. My personal experience is that this is a more reliable way to do text parsing:</p>
<pre><code>import re
if re.match('welcome', str[0]): ...
</code></pre>
</div>
<span class="comment-copy">are you sure that there is no <code>newline</code> char at the end of the <i>welcome</i> string? The code you wrote works for me</span>
<span class="comment-copy">Why do you open file for writing in <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">binary mode</a> ?  Also first file you just read... Try 'r' and 'w' instead</span>
<span class="comment-copy">Yeah it worked, it was a missing of newline char , Thanks a lot</span>
<span class="comment-copy">Why are you <code>fo1 = open("write.txt", "wb")</code> and not <code>fo1 = open("write.txt", "w")</code>? Besides this, I wouldn't use <code>str</code> as a variable's name...</span>
<span class="comment-copy">I corrected as all you said, and now it working , Thanks a lot to all :)</span>
<span class="comment-copy">This is not true. The output of my <code>open('foo.txt').readlines()</code> is <code>['welcome']</code> without the <code>\n</code></span>
<span class="comment-copy">@Francesco well apparently I guessed right that OP's file ends with a newline character, or OP would not have accepted this answer.</span>
<span class="comment-copy">From what you wrote it seems that <code>readlines()</code> adds a new line. I reccomend you to edit your answer as it is misleading</span>
<span class="comment-copy">@Francesco I don't think it seems like that. In OP's case, the call to <code>readlines</code> returns <code>['welcome\n']</code>. I did not mean to give a general lecture on the <code>readlnes</code> function, because it is out of scope for this trivial question.</span>
