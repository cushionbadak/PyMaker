<div class="post-text" itemprop="text">
<p>I have a file which is a list of dictionaries in this way:</p>
<p><code>[{'text': 'this is the text', 'filed1': 'something1', 'filed2': 'something2', 'subtexts': [{'body': 'body of subtext1', 'date': 'xx'}, {'body': 'body of subtext2', 'date': 'yy'}}]</code></p>
<p>The list of nested dictionaries and lists can have multiples dicts and lists inside. I want to read the file which is written exactly like this in python and create a data structure (list of dictionaries). How can it be done knowing it's not json but it has written to file by <code>file.write(str(list))</code> where list is something we want to read back from file?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="noreferrer"><code>ast.literal_eval</code></a> which is a safe way of evaluating Python literals <a href="https://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval">(as opposed to <code>eval</code>)</a> into actual data structures.</p>
<p>That is:</p>
<pre><code>import ast

with open('file.txt') as f:
    data = ast.literal_eval(f.read())
</code></pre>
<p>If you have something beyond the supported types (strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and <code>None</code>), you can <a href="https://stackoverflow.com/a/18178379/918959">use my recipe in this answer</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If json has failed but you know that this is valid, you could try:</p>
<pre><code>random_string = "{'a':'1', 'b':'2', 'c':['3', '4']}"
intended_output = eval(random_string)

print intended_output['c'][0]
</code></pre>
</div>
<span class="comment-copy">Possibly a dumb question, but have you tried just rebuilding a string by concatenating each line in the file?</span>
<span class="comment-copy">The file is one line of a list of dictionaries.</span>
<span class="comment-copy">I'm confused then. The answer by Randy C should work, your dictionary is presented in two blocks of code so I assumed the problem was that is was split by <code>\n</code>. What goes wrong with <code>json.load</code>?</span>
<span class="comment-copy">Are you able to read the file back in as a single string? In that case you could use <code>json.dumps(string)</code></span>
<span class="comment-copy">This is no JavaScript Object Notation, but "Python Literal Notation".</span>
<span class="comment-copy">I am still very much learning; can you explain which way this method is "safe" compared to my answer of just using <code>eval()</code>?</span>
<span class="comment-copy">If the text is from untrusted sources, then with <code>eval()</code> it can contain <b>any</b> python code, including installing malware on your system. <code>literal_eval</code> rejects any python code that is not literals/constants of the types listed in my answer.</span>
<span class="comment-copy">That still leaves me a bit perplexed. I understand that this is not OP's question, but I can't see how you could, for example, secrete a <code>print</code> statement in a data structure that then gets executed by any operation you might perform on a data structure</span>
<span class="comment-copy">Nevermind <a href="http://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html" rel="nofollow noreferrer">found it here</a> thanks :)</span>
