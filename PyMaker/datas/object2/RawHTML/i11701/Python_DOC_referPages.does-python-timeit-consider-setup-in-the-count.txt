<div class="post-text" itemprop="text">
<p>I'm using python timeit to see how long it takes for a function to run.</p>
<pre>
    setup = '''from __main__ import my_func
    import random
    l = list(range(10000))
    random.shuffle(l)'''
    timeit.timeit('my_func(l)', setup=setup, number=1000)
</pre>
<p>the results I'm getting are bigger than a 'normal' check with datetime.
Does timeit also count the time the setup takes, and if so - how can I disable it? </p>
</div>
<div class="post-text" itemprop="text">
<p>Does <code>my_func(l)</code> mutate <code>l</code>? That could affect the timings.</p>
<p><code>timeit</code> will run the setup once and reuse the objects created by the setup each time it calls the code that is to be timed. Also it can call the code a few times to gauge roughly how fast it runs and choose the number of iterations before the actual timed run (though not when you've specified the number of runs yourself). That would mean if there is an initial fast run it won't be included in the timed results.</p>
<p>For example if <code>my_func()</code> was a badly written quicksort function it might run quickly when you call it on a shuffled list and very very slowly when you call it again with a (now sorted) list. <code>timeit</code> would only measure the very slow calls.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/timeit.html#python-interface" rel="nofollow">docs</a> say:</p>
<blockquote>
<p>The execution time of setup is excluded from the overall timed
  execution run.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The Python 2.0 <a href="https://docs.python.org/2/library/timeit.html" rel="nofollow">docs</a> are pretty clear that the setup statement is not timed:</p>
<blockquote>
<p>Time number executions of the main statement. This executes the setup
  statement once, and then returns the time it takes to execute the main
  statement a number of times, measured in seconds as a float.</p>
</blockquote>
<p>But if you're not sure, put a big, slow process into the setup statement and test to see what difference it makes.</p>
</div>
<span class="comment-copy">Please include your setup with datetime and the results of both.</span>
<span class="comment-copy">Show us the results. Are they 1000 times bigger? Timeit returns the <a href="https://docs.python.org/3/library/timeit.html#timeit.Timer.timeit" rel="nofollow noreferrer">time taken for <code>number=1000</code> executions</a>. And no, the setup phase is not included.</span>
<span class="comment-copy">thank you very much! :)it does mutate the list, I didn't realize that the setup only runs once, that does affect my results</span>
