<div class="post-text" itemprop="text">
<p>this time i am asking about running commands on remote Windows machine.
Let me be more descriptive here.<br/>
**I have a machine on which python is installed and I want to run some powershell and cmd commands or I want to send a cmd file to remote windows machine so that it can run in there and every output like error, stdout I can get back to the firing Machine.<br/>
Like I want to manage remote machines remotely from python. And if possible can i fire commands remotely on multiple machines simultaniously with python.<br/>
<em>Remember that other system does n ot have any python installed on.</em> **  </p>
</div>
<div class="post-text" itemprop="text">
<p>It's a bit of a minefield, but the "right" way to do this (python controlling a remote win machine without python) is using a library for WMI or WRM. </p>
<p>There's a <a href="http://timgolden.me.uk/python/wmi/contents.html" rel="nofollow">WMI module by Tim Golden</a> (who's an authority in the Python-on-Windows world), the <a href="http://en.community.dell.com/techcenter/systems-management/w/wiki/3560.python-wsman-api-open-source.aspx" rel="nofollow">WSMAN library from Dell</a>, and a <a href="https://pypi.python.org/pypi/pywinrm/" rel="nofollow">pywinrm module</a>. Pick your poison -- they all have their own weak spots (WRM has to be enabled on server before it can be used, although this doesn't require any extra software, it's all stock Windows; WMI works over DCOM, so you'll have to figure out DCOM security, etc etc).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can install an ssh server on the Windows machine (I've heard <a href="http://www.freesshd.com/" rel="nofollow">freeSSHd</a> is good), and then use the <a href="https://github.com/paramiko/paramiko/" rel="nofollow">paramiko</a> module to communicate with it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>ssh</code> for this as <a href="https://stackoverflow.com/users/1867980/khagler">khagler</a> suggested. But I prefer to install Python on both sides because Python gives me much more control on the remote side.</p>
<p>For example, <code>ssh</code> just offers a single channel between the two computers. That means I have to fold <code>stdout</code> and <code>stderr</code> on the remote side to send it over the wire. With a remote Python server, I can run more complex scripts, I can control exactly what I want to expose (if you allow remote access <em>any</em> command can be executed) and the error handling is much more simple.</p>
<p>Or a combination of the two: Install Python on the remote computer and then use <code>ssh</code> to start a Python script. You can then communicate with it with a custom protocol, without the limits of the command line/shell interface. You can even use <code>scp</code> to install new scripts remotely.</p>
</div>
<div class="post-text" itemprop="text">
<p>Knowing this is a quite old post,</p>
<p>The best option I can think of as of now is to use PowerShell for Window Remote Management. </p>
<p>Below is how to execute a command in remote PC using PowerShell and how to execute the same in Python.</p>
<p>PowerShell to start a service:</p>
<pre><code>Get-Service -ComputerName aaa0001 -Name Tomcat9 | Start-Service
</code></pre>
<p>Now, next is how to execute this with Python, </p>
<pre><code>import subprocess

subprocess.call(["C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","Get-Service -ComputerName aaa0001 -Name Tomcat9 | Start-Service"])
</code></pre>
<p>This example shows how to start Tomcat9 windows service in Windows. (<em>"aaa0001"</em> is just the computer name)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try using something like <a href="http://pypi.python.org/pypi/Pyro4" rel="nofollow">Pyro4</a> in combination with <a href="http://docs.python.org/2/library/subprocess.html#popen-constructor" rel="nofollow"><code>subprocess.popen</code></a>.</p>
<p>Pyro4 is a framework for remote method invocation, and <code>subprocess.popen</code> is used for creating underlying OS processes.</p>
</div>
<span class="comment-copy">This sounds like the best solution. Can I use these modules to control Windows servers from Non-Windows, or do they rely on an underlying mechanism that would only be available on Windows?</span>
<span class="comment-copy">the WMI module by Tim is only a wrapper on top of pywin32, so no, you couldn't use it on non-windows. I don't know about the Dell one (which looks abandoned now, btw). WRM in itself is an XML-based protocol (I think) so theoretically you could do a lot of things, but in practice it's one of those "enterprise" standards nobody really wants to get dirty with. If you really want, you can try looking at traffic and reimplement only the features you need.</span>
<span class="comment-copy">The WMI is a no-go, being Windows only. The WSMAN documentation mentions that it supports Linux... maybe I can get it to work on OS X, too. It supports 2.6 and newer and was last updated 2 years ago, so it wasn't abandoned all that long ago. Your <code>pywinrm module</code> link points to the exact same place as <code>WSMAN library from Dell</code> - I think that's a mistake. I found <code>pywinrm</code> here: <a href="https://pypi.python.org/pypi/pywinrm/0.0.3" rel="nofollow noreferrer">pypi.python.org/pypi/pywinrm/0.0.3</a>. It looks pretty good... if it allows me to upload and download files, it's perfect.</span>
<span class="comment-copy">Hm. <code>pywinrm</code> doesn't seem to have any way of doing uploads and downloads, but WinRM does. So maybe I can add in the capability to <code>pywinrm</code> myself...</span>
<span class="comment-copy">I fixed the link, thanks :) good luck with your project!</span>
<span class="comment-copy">It is my understanding that Windows 10 (to be released later this month), will have full support for SSH out of the box. So perhaps you won't need to install an SSH server on it if you can afford to only have it work with Windows 10 and newer. (I don't actually have any machines running the Windows 10 beta, so I haven't been able to test this yet.)</span>
<span class="comment-copy">OpenSSH available from Microsoft is quite buggy. Its best to avoid. @ArtOfWarfare From their github page.. it seems a lot of people are having similar problems. Not sure whether it will work, but the best chance is to use one of the suggested sshd servers from here: <a href="https://serverfault.com/questions/8411/what-is-a-good-ssh-server-to-use-on-windows" title="what is a good ssh server to use on windows">serverfault.com/questions/8411/…</a></span>
<span class="comment-copy">@ArtOfWarfare, I also have to execute python scripts on a remote windows machine. How did you resolve this issue?</span>
<span class="comment-copy">@alpha_989 - I ended up installing sshd on it with cygwin. Sorry if that's not what you wanted to hear. The Windows 10 thing I mentioned previously... I played with that but most of our servers are still running Server 2008 and Server 2016 wasn't out yet at the time anyways.</span>
<span class="comment-copy">I am wondering what sshserver you are running on Windows? I actually tried to do the same thing as you did with 2 different SSH servers: <code>mobasshd</code> and <code>openSSH</code> from Microsoft. For both these servers, I am unable to execute python scripts, even if I log in via ssh manually. I posted this in <code>serverfault</code>: <a href="https://serverfault.com/questions/901041/how-to-run-a-python-script-remotely-via-ssh-on-a-windows-machine" title="how to run a python script remotely via ssh on a windows machine">serverfault.com/questions/901041/…</a></span>
<span class="comment-copy">Wondering if you could provide specific details of what libraries you are using?</span>
<span class="comment-copy">In my case, I installed Python and then used the normal client/server socket protocol (<a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">docs.python.org/3/library/socket.html</a>). As for running SSH on Windows, yeah, it's a world full of hurt. I don't have a working solution for that, either.</span>
<span class="comment-copy">Thank you. It was kindof hard in the beginning.. but I discovered WinSSHD <a href="https://serverfault.com/a/8423/443721">serverfault.com/a/8423/443721</a>. Which turned out to be pretty stable and almost comparable to SSH on Unix systems and almost no bugs that I could find.</span>
<span class="comment-copy">@alpha_989 Additional libraries mean I have to install them. In my case, I was checking for security patches which meant I had to read some data from the registry (using the win32 module), so I wanted to keep my footprint small.</span>
<span class="comment-copy">thanx for quick reply but as far as I know pyro4 is all abt calling python objects remotely but my scenario is that python is running on one system and other system is not having python installed.</span>
