<div class="post-text" itemprop="text">
<p>I have a string <code>1 blahblahblah 2 sdsdsdsdsd 3 uuuuuu 4 eeee 5 abcdef</code>
I would like to output</p>
<pre><code>1 blahblahblah
2 sdsdsdsdsd
3 uuuuuu
4 eeee
5 abcdef
</code></pre>
<p>I have tried to add <code>\n</code> before every number by using <code>re.split</code> but it didn't work</p>
<pre><code>re.split(' (?=[1-9]:)', line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following works just fine:</p>
<pre><code>re.sub(r'(\d+)', '\n\\1', input)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; print(re.sub(r'(\d+)', r'\n\1', input))

1 blahblahblah 
2 sdsdsdsdsd 
3 uuuuuu 
4 eeee 
5 abcdef
</code></pre>
<p>The expression <code>(\d+)</code> matches 1 or more digits, and I replace that with a newline followed by the matched digits (via the capturing group).</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="http://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">group</a>:</p>
<pre><code>&gt;&gt;&gt; s = '1 blahblahblah 2 sdsdsdsdsd 3 uuuuuu 4 eeee 5 abcdef'
&gt;&gt;&gt; import re
&gt;&gt;&gt; print(re.sub(r'([0-9]+)', r'\n\1', s))

1 blahblahblah 
2 sdsdsdsdsd 
3 uuuuuu 
4 eeee 
5 abcdef
</code></pre>
<p>To remove the first newline, you can add a <a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow">negative lookbehind</a>:</p>
<pre><code>&gt;&gt;&gt; print(re.sub(r'(?&lt;!^)([0-9]+)', r'\n\1', s))
1 blahblahblah 
2 sdsdsdsdsd 
3 uuuuuu 
4 eeee 
5 abcdef
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is another way to do the substitution without inserting a newline before the first number:</p>
<pre><code>In [62]: print(re.sub(r'\s(\d)', r'\n\1', line))
1 blahblahblah
2 sdsdsdsdsd
3 uuuuuu
4 eeee
5 abcdef
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without using <code>re</code>:</p>
<pre><code>&gt;&gt;&gt; s = '1 blahblahblah 2 sdsdsdsdsd 3 uuuuuu 4 eeee 5 abcdef'
&gt;&gt;&gt; for i,word in zip(*[iter(s.split())]*2):
    i = int(i)
    print('{i} {word}'.format(**locals()))
</code></pre>
<p>Output:</p>
<pre><code>1 blahblahblah
2 sdsdsdsdsd
3 uuuuuu
4 eeee
5 abcdef
</code></pre>
</div>
<span class="comment-copy">Please describe what you attempted with <code>re.sub</code> and the result you got.</span>
<span class="comment-copy">First, <code>re.split</code> is for splitting a string into a list, not replacing with newlines. Secondly, why do you have a colon in the regex after the number? And did you mean <code>(?:[1-9)</code>?</span>
<span class="comment-copy">Is there any way to do this without RegEx?</span>
