<div class="post-text" itemprop="text">
<p>I am looking to change the below code so that instead of writing row by row with the contents of <code>values</code> the code will only write on one row and will separate all contents of <code>values</code> with a comma, thus making all of the values be in columns in the .csv instead of rows (as it is right now).</p>
<pre><code>for row in values:
     writer.writerow({'Variable name': row, 'Variable value': values[row]})
     if row == 'C_SerialNumber':
          logging.info("Writing data to csv file for SN: %s"%values[row])
</code></pre>
<p>What would be the easiest way to do this? I would essentially want the following:</p>
<pre><code>Variable name, Variable value
Name1, Value1
Name2, Value2
...
NameX, ValueX
</code></pre>
<p>Turned into: (I would already have the .csv headings created and would just want the <code>value</code> section appended.</p>
<pre><code>Name1, Name2, ... , NameX
Value1, Value2, ... , ValueX
</code></pre>
<p>The <code>values</code> data would then just be looped and appended to the existing .csv file.</p>
<p>Is this possible, and if so, easy to do?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>writer.writerow(values.keys())
writer.writerow(values.values())
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="http://docs.python.org/3/library/csv.html?highlight=csv.dictwriter#csv.DictWriter" rel="nofollow noreferrer">csv.DictWriter</a>.</span>
<span class="comment-copy">I didn't think this would work because of ordering issues, but turns out for a dictionary <code>mydict</code> <code>dict(zip(mydict.keys(), mydict.values())) == mydict</code> valuates to <code>True</code>.  Who knew?</span>
<span class="comment-copy">Dictionaries just hash the keys, so it makes sense that order is consistent. I did test it first though... ;-)</span>
<span class="comment-copy">@D Yeah, but dictionaries other than <code>OrderedDict</code> explicitly aren't ordered, which is why I wasn't sure at first.</span>
