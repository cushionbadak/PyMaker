<div class="post-text" itemprop="text">
<p>for example, <code>a.boo</code> method calls <code>b.foo</code> method.  In <code>b.foo</code> method, how can I get a's file name (I don't want to pass <code>__file__</code> to <code>b.foo</code> method)...</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>inspect</code> module to achieve this:</p>
<pre><code>frame = inspect.stack()[1]
module = inspect.getmodule(frame[0])
filename = module.__file__
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Inspired by ThiefMaster's answer but works also if <code>inspect.getmodule()</code> returns <code>None</code>:</p>
<pre><code>frame = inspect.stack()[1]
filename = frame[0].f_code.co_filename
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use the <code>traceback</code> module:</p>
<pre><code>import traceback
</code></pre>
<p>and you can print the back trace like this:</p>
<pre><code>print traceback.format_exc()
</code></pre>
<p>I haven't used this in years, but this should be enough to get you started.</p>
</div>
<div class="post-text" itemprop="text">
<p>Reading all these solutions, it seems like this works as well?</p>
<pre><code>import inspect
print inspect.stack()[1][1]
</code></pre>
<p>The second item in the frame already is the file name of the caller, or is this not robust?</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done with the <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> module, specifically <a href="https://docs.python.org/3/library/inspect.html#inspect.stack" rel="nofollow noreferrer"><code>inspect.stack</code></a>:</p>
<pre><code>import inspect
import os.path

def get_caller_filepath():
    # get the caller's stack frame and extract its file path
    frame_info = inspect.stack(2)[1]
    filepath = frame_info[1]  # in python 3.5+, you can use frame_info.filename
    del frame_info  # drop the reference to the stack frame to avoid reference cycles

    # make the path absolute (optional)
    filepath = os.path.abspath(filepath)
    return filepath
</code></pre>
<p>Demonstration:</p>
<pre><code>import b

print(b.get_caller_filepath())
# output: D:\Users\Aran-Fey\a.py
</code></pre>
</div>
<span class="comment-copy">thanks for your answer, and I found here is the best for me now: <a href="http://stackoverflow.com/questions/3711184/how-to-use-inspect-to-get-the-callers-info-from-callee" title="how to use inspect to get the callers info from callee">stackoverflow.com/questions/3711184/â€¦</a></span>
<span class="comment-copy"><code>inspect.getmodule()</code> may return <code>None</code> under some conditions, so a more bulletproof way is:    <code>filename = frame[0].f_code.co_filename</code></span>
<span class="comment-copy">Why not just <code>filename = frame[1]</code> (or <code>frame.filename</code> in python 3.5+)?</span>
