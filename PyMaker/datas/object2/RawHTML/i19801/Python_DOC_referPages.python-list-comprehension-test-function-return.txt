<div class="post-text" itemprop="text">
<p>Is there a way to test the return of a function in a list (or dict) comprehension? I'd like to avoid writing that:</p>
<pre><code>lst = []
for x in range(10):
  bar = foo(x)
  if bar:
    lst.append(bar)
</code></pre>
<p>and use a list comprehension instead. Obviously, I don't want to write:</p>
<pre><code>[foo(x) for x in range(10) if foo(x)]
</code></pre>
<p>so?</p>
<pre><code>[foo(x) for x in range(10) if ??? ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about</p>
<pre><code>filter(None, map(foo, range(10)))
</code></pre>
<p>If you don't want to keep the intermediate list, replace <code>map()</code> with <a href="http://docs.python.org/2/library/itertools.html#itertools.imap" rel="nofollow"><code>itertools.imap()</code></a>. And with <a href="http://docs.python.org/2/library/itertools.html#itertools.ifilter" rel="nofollow"><code>itertools.ifilter()</code></a>, the whole thing could be turned into a generator.</p>
<pre><code>itertools.ifilter(None, itertools.imap(foo, range(10)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just make a generator to compute the values and build the filtered list from the generator afterwards.</p>
<p>Example: </p>
<pre><code># create generator via generator expression
results = (foo(x) for x in xrange(10))
# build result list, not including falsy values
filtered_results = [i for i in results if i]
</code></pre>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/3/glossary.html#term-generator" rel="nofollow noreferrer">https://docs.python.org/3/glossary.html#term-generator</a></li>
<li><a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">https://wiki.python.org/moin/Generators</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0289/</a></li>
</ul>
</div>
<span class="comment-copy">Why don't you want to use the first way? It's the appropriate way.</span>
<span class="comment-copy">@Rohit Jain -- depending on <code>foo</code>, it could be an expensive operation which you don't want to do twice.</span>
<span class="comment-copy">@mgilson: And in the first example, he only does it once.</span>
<span class="comment-copy">@TimPietzcker -- Ahh... I thought Rohit was refering to the first list-comprehension... I'm following the comment stream now.  Thanks.</span>
<span class="comment-copy">@TimPietzcker.. Yeah I was talking about 1st list comprehension only.</span>
<span class="comment-copy">I always felt like <code>filter</code> should take a 1 argument form as well ...</span>
<span class="comment-copy">Or, rather than <code>imap</code>, you could use a genexp:  <code>filter(None,(foo(x) for x in range(10)))</code></span>
<span class="comment-copy">Nice solution indeed.</span>
