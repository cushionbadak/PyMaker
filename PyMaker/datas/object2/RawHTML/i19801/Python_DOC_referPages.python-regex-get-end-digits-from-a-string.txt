<div class="post-text" itemprop="text">
<p>I am quite new to python and regex (regex newbie here), and I have the following simple string:</p>
<pre><code>s=r"""99-my-name-is-John-Smith-6376827-%^-1-2-767980716"""
</code></pre>
<p>I would like to extract only the last digits in the above string i.e 767980716 and I was wondering how I could achieve this using python regex.</p>
<p>I wanted to do something similar along the lines of:</p>
<pre><code>re.compile(r"""-(.*?)""").search(str(s)).group(1)
</code></pre>
<p>indicating that I want to find the stuff in between (.*?) which starts with a "-" and ends at the end of string - but this returns nothing..</p>
<p>I was wondering if anyone could point me in the right direction..
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/re.html#re.match"><code>re.match</code></a> to find only the characters:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s=r"""99-my-name-is-John-Smith-6376827-%^-1-2-767980716"""
&gt;&gt;&gt; re.match('.*?([0-9]+)$', s).group(1)
'767980716'
</code></pre>
<p>Alternatively, <a href="http://docs.python.org/3/library/re.html#re.finditer"><code>re.finditer</code></a> works just as well:</p>
<pre><code>&gt;&gt;&gt; next(re.finditer(r'\d+$', s)).group(0)
'767980716'
</code></pre>
<p>Explanation of all regexp components:</p>
<ul>
<li><code>.*?</code> is <a href="http://www.roseindia.net/java/example/java/util/GreedyAndNonGreedyMatching.shtml">a non-greedy match</a> and consumes only as much as possible (a greedy match would consume everything except for the last digit).</li>
<li><code>[0-9]</code> and <code>\d</code> are two different ways of capturing digits. Note that the latter also <a href="http://www.fileformat.info/info/unicode/category/Nd/list.htm">matches digits in other writing schemes</a>, like рнк or р╡и.</li>
<li>Parentheses (<code>()</code>) make the content of the expression a group, which can be retrieved with <a href="http://docs.python.org/3/library/re.html#re.match.group"><code>group(1)</code></a> (or 2 for the second group, 0 for the whole match).</li>
<li><code>+</code> means multiple entries (at least one number at the end).</li>
<li><code>$</code> matches only the end of the input.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Nice and simple with <code>findall</code>:</p>
<pre><code>import re

s=r"""99-my-name-is-John-Smith-6376827-%^-1-2-767980716"""

print re.findall('^.*-([0-9]+)$',s)

&gt;&gt;&gt; ['767980716']
</code></pre>
<p>Regex Explanation:</p>
<pre><code>^         # Match the start of the string
.*        # Followed by anthing
-         # Upto the last hyphen
([0-9]+)  # Capture the digits after the hyphen
$         # Upto the end of the string
</code></pre>
<p><em>Or more simply just match the digits followed at the end of the string</em> <code>'([0-9]+)$'</code> </p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>Regex</code> should be <code>(\d+)$</code>. </p>
<ul>
<li><code>\d+</code> is used to match digit (one or more)</li>
<li><code>$</code> is used to match at the end of string.</li>
</ul>
<p>So, your code should be: -</p>
<pre><code>&gt;&gt;&gt; s = "99-my-name-is-John-Smith-6376827-%^-1-2-767980716"
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.compile(r'(\d+)$').search(s).group(1)
'767980716'
</code></pre>
<p>And you don't need to use <code>str</code> function here, as <code>s</code> is already a string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the below regex</p>
<pre><code>\d+$
</code></pre>
<p><code>$</code> depicts the end of string..</p>
<p><code>\d</code> is a digit</p>
<p><code>+</code> matches the preceding character 1 to many times</p>
</div>
<div class="post-text" itemprop="text">
<p>Save the regular expressions for something that requires more heavy lifting.</p>
<pre><code>&gt;&gt;&gt; def parse_last_digits(line): return line.split('-')[-1]
&gt;&gt;&gt; s = parse_last_digits(r"99-my-name-is-John-Smith-6376827-%^-1-2-767980716")
&gt;&gt;&gt; s
'767980716'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using <code>\d+$</code> instead. That matches one or more numeric characters followed by the end of the string.</p>
</div>
<span class="comment-copy">If you write your regex pattern as <code>r'(\d+)$'</code>, then you don't have to escape the backslash.</span>
<span class="comment-copy">@SamMussmann.. Yeah you are right. Edited :)</span>
