<div class="post-text" itemprop="text">
<p>I got this error when run test.py</p>
<pre><code>C:\Python32&gt;python.exe test.py
Traceback (most recent call last):
  File "test.py", line 5, in &lt;module&gt;
    import httplib
ImportError: No module named httplib
</code></pre>
<p>How to correct it?</p>
<p>Code block for <strong>test.py</strong>:</p>
<pre><code>#!/usr/local/bin/python

import httplib
import sys
import re
from HTMLParser import HTMLParser


class miniHTMLParser( HTMLParser ):

  viewedQueue = []
  instQueue = []

  def get_next_link( self ):
    if self.instQueue == []:
      return ''
    else:
      return self.instQueue.pop(0)


  def gethtmlfile( self, site, page ):
    try:
      httpconn = httplib.HTTPConnection(site)
      httpconn.request("GET", page)
      resp = httpconn.getresponse()
      resppage = resp.read()
    except:
      resppage = ""

    return resppage


  def handle_starttag( self, tag, attrs ):
    if tag == 'a':
      newstr = str(attrs[0][1])
      if re.search('http', newstr) == None:
        if re.search('mailto', newstr) == None:
          if re.search('htm', newstr) != None:
            if (newstr in self.viewedQueue) == False:
              print ("  adding", newstr)
              self.instQueue.append( newstr )
              self.viewedQueue.append( newstr )
          else:
            print ("  ignoring", newstr)
        else:
          print ("  ignoring", newstr)
      else:
        print ("  ignoring", newstr)


def main():

  if sys.argv[1] == '':
    print ("usage is ./minispider.py site link")
    sys.exit(2)

  mySpider = miniHTMLParser()

  link = sys.argv[2]

  while link != '':

    print ("\nChecking link ", link)

    # Get the file from the site and link
    retfile = mySpider.gethtmlfile( sys.argv[1], link )

    # Feed the file into the HTML parser
    mySpider.feed(retfile)

    # Search the retfile here

    # Get the next link in level traversal order
    link = mySpider.get_next_link()

  mySpider.close()

  print ("\ndone\n")

if __name__ == "__main__":
  main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are running Python 2 code on Python 3. In Python 3, the module has been renamed to <a href="http://docs.python.org/3/library/http.client.html" rel="noreferrer"><code>http.client</code></a>.</p>
<p>You could try to run the <a href="http://docs.python.org/2/library/2to3.html#to3-reference" rel="noreferrer"><code>2to3</code> tool</a> on your code, and try to have it translated automatically. References to <code>httplib</code> will automatically be rewritten to use <code>http.client</code> instead.</p>
</div>
<span class="comment-copy">would the 2to3 tool work also for external lib as selenium, because I have same issue, it seems to me that selenium python wrapper is using wrong name(I update it,so it is the last selenium python wrapper)</span>
<span class="comment-copy">Selenium is fully Python 3 compatible. There should not be <i>any need</i> to start mucking with the <code>2to3</code> tool. Most likely something else is wrong.</span>
