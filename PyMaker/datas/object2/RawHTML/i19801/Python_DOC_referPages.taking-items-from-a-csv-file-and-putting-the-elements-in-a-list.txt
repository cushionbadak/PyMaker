<div class="post-text" itemprop="text">
<p>I have a CSV File here: <a href="http://www.filedropper.com/excel" rel="nofollow">http://www.filedropper.com/excel</a> which looks like this <a href="http://pastebin.com/ammzv4FK" rel="nofollow">http://pastebin.com/ammzv4FK</a>. </p>
<p>What I want to do is this:</p>
<p>Take each year with its corresponding rows and find the numbers in months and total them and assign them to variables.</p>
<p>So the first year, 2000, the list would look like this:</p>
<pre><code>year2000 = ['14744', '2947', '14905', '1748',  '2859',  '11778', '1453',  '5255', '14806', '1858', '10763', '6000']
</code></pre>
<p>Then once I have that list I can convert the elements in the list from strings to integers, and sum them using the sum() command.</p>
<p>I can print the rows out but I'm having trouble excluding the year number and then storing the rest into variables because my list comes out as this:</p>
<pre><code>['2000, 14744, 2947, 14905, 1748,  2859,  11778, 1453,  5255, 14806, 1858, 10763, 6000']
</code></pre>
<p>as one big string, instead of individual elements, and my list prints all the years out at once so I can't seem to figure out how to store them into variables and total them separately.</p>
<p>Here is my code:</p>
<pre><code>with open("file.csv","r") as f:
    for i in range(1): 
        next(f)
    for x in f:
        x=x.split()
        print (x)
</code></pre>
<p>But when <code>print(x)</code> runs it prints it all, how can I store each year with its contents in a variable while excluding the actual year number?</p>
<p>I'm using Python 3, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are getting the row like that you probably aren't using a csv reader. You should use the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module and store each row in a <code>dict</code>, with the year as the key. This only works if your data consists of integers.</p>
<pre><code>data = {}

with open("data.csv") as f:
    reader = csv.reader(f, delimiter="\t")
    reader.next() # Skip header
    for row in reader:
        row = list(map(int, row))
        data[row[0]] = row[1:]
</code></pre>
<p>To get the sum, use the built in <code>sum</code> function.</p>
</div>
<span class="comment-copy">The <code>csv</code> module is what you want. Also, you should show your current code in a question.</span>
<span class="comment-copy">@syhpoon Yes, if I was able to get them into their own variables.</span>
<span class="comment-copy">@Lattyware See edit.</span>
<span class="comment-copy">I was using the CSV module, but for your code I am getting the error 'map' object is not subscriptable.</span>
<span class="comment-copy">Oh right, fixed.</span>
<span class="comment-copy">In python 3.x, you might consider <code>key, *values = list(map(int, row))</code> as a nicer way of splitting the list.</span>
<span class="comment-copy">Now I am getting this error: invalid literal for int() with base 10:'2011,3814,2343,6367,13244,3993,9770,5662,2278,12642,12347,14991,1910,'</span>
<span class="comment-copy">Is your csv comma separated or tab separated? The one you linked is tab separated. Where did the commas come from?</span>
