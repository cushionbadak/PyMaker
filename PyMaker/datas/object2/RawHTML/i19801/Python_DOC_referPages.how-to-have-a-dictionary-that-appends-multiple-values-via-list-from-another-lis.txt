<div class="post-text" itemprop="text">
<p>I'm currently having a problem I cannot think through properly</p>
<p>I have a situation where I have a text file being read in a specific format</p>
<p>(predator) eats (prey)</p>
<p>What I am attempting to do is put it into a dictionary however there are situations where there are multiple lines of the. </p>
<p>(predator) eats (prey)</p>
<p>Where the same predator shows up to eat a different prey.</p>
<p>So far this is what it looks like...</p>
<pre><code>import sys


predpraydic={}#Establish universial dictionary for predator and prey
openFile = open(sys.argv[1], "rt") # open the file

data = openFile.read() # read the file
data = data.rstrip('\n') #removes the empty line ahead of the last line of the file
predpraylist = data.split('\n') #splits the read file into a list by the new line character




for items in range (0, len(predpraylist)): #loop for every item in the list in attempt to split the values and give a list of lists that contains 2 values for every list, predator and prey
    predpraylist[items]=predpraylist[items].split("eats") #split "eats" to retrive the two values
    for predpray in range (0, 2): #loop for the 2 values in the list
        predpraylist[items][predpray]=predpraylist[items][predpray].strip() #removes the empty space caued by splitting the two values
for items in range (0, len(predpraylist)
    if 


for items in range (0, len(predpraylist)): # Loop in attempt to place these the listed items into a dictionary with a key of the predator to a list of prey
    predpraydic[predpraylist[items][0]] = predpraylist[items][1]

print(predpraydic)  
openFile.close() 
</code></pre>
<p>As you can see I simply dump the format into a list which I attempt to convert into a dictionary.</p>
<p>But this method will only accept one value for the key. And I want something that has two things like</p>
<p>Lion eats Zebra
Lion eats dog</p>
<p>to have a dictionary that is</p>
<p>Lion: ['Zebra', 'Dog']</p>
<p>I cant think of a way of doing this. Any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two reasonable ways to go about making a dictionary that contains lists that you add to, rather than single items. The first is to check for an existing value before adding a new one. The second is to use a more sophisticated data structure, that takes care of creating the lists whenever it is necessary.</p>
<p>Here's a quick example of the first approach:</p>
<pre><code>predpreydic = {}

with open(sys.argv[1]) as f:
    for line in f:
        pred, eats, prey = line.split() # splits on whitespace, so three values
        if pred in predpreydic:
            predpreydic[pred].append(prey)
        else:
            predpreydic[pred] = [prey]
</code></pre>
<p>A variation on this first approach replaces the <code>if</code>/<code>else</code> block with a slightly more subtle method call on the dictionary: </p>
<pre><code>        predpreydic.setdefault(pred, []).append(prey)
</code></pre>
<p>The <code>setdefault</code> method sets <code>predpredic[pred]</code> to an empty list if it doesn't already exist, then returns the value (either the new empty list, or the previous existing list). It works very similarly to the other approach to the problem, which is up next.</p>
<p>The second approach I mentioned involves <a href="http://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow">the <code>defaultdict</code> class</a> from the <code>collections</code> module (part of the Python standard library). This is a dictionary that creates a new default value any time you request a key that doesn't already exist. To create the values on demand, it uses a factory function that you provide when you first create the <code>defaultdict</code>.</p>
<p>Here's what your program would look like using it:</p>
<pre><code>from collections import defaultdict

predpreydic = defaultdict(list) # the "list" constructor is our factory function

with open(sys.argv[1]) as f:
    for line in f:
        pred, eats, prey = line.split()
        predpreydic[pred].append(prey) #lists are created automatically as needed
</code></pre>
</div>
<span class="comment-copy">Oh thank god I thought I was going to go nuts. I used the first method since this is a university assignment, I'm not totally sure if I can depend on the import defaultdict. I got what I was looking for though, many thank yous.</span>
<span class="comment-copy">+1. @user1877961 Welcome to SO! When an answer like this one solves your problem, you can click the empty check mark under the score to accept it.</span>
