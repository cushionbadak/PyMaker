<div class="post-text" itemprop="text">
<p>I am trying to make a program which grabs a list of numbers from a file (which could change in lines and size), and then print out the total of all the numbers and the average. I had no problems doing this when I had a set number of linereads, but am confused on the 'proper' way when the lineread changes every run.</p>
<p>This is my work-in-progress code. I read around a bit and found the correct (?) way of looping through the file to find the length, but not sure how to implement it since it throws some type of IO error currently. Thanks for the help!</p>
<pre><code>def main():
    filename = input("Enter file name (name.txt):")
    try:
        file = open(filename, "r")
    except IOError:
        print("Error opening file!")

    totalLines = totalLineGet(filename)

    results = []
    for x in range(totalLines):
            results.append(getLineNumber(x+1, file))

    print("Total = ", numTotal)
    print("Average = ", numAvg)

def totalLineGet(_filename):
    count = 0
    _file = open(_filename, "r")
    for x in open(_file):
        count+= 1
    return count

def getLineNumber(linetoget, _file):
    try:
        intNumber = int(number = _file.readline())
    except ValueError:
        print("Error in file data!")

    return intNumber

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what you want to do... but you should be able to get the answer in one pass.
You can use <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code></a> to number an iterable object, in this case a file, if you need to know the item/line number count.</p>
<p>Assuming a single int() per line:</p>
<pre><code>with open(filename, "r") as in_f:
    numbers = []
    for line in in_f: 
        line = line.strip() # remove whitespace
        if line: # make sure there is something there
            number_on_line = int(line) 
            numbers.append(number_on_line)
    sum_of_numbers = sum(numbers)
    avg_of_numbers = sum(numbers)/len(numbers)
</code></pre>
<p>if this is CSV data you should look into using the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module, it will split the line into rows/columns for you.</p>
<pre><code>import csv
filename = "somefile"
with open(filename, "rb") as in_f: # &lt;-- notice "rb" is used
    reader = csv.reader(in_f)
    for row in reader:
        for col in row:
            # do stuff
            ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution, doing what you want...</p>
<pre><code>filename = 'tmp.txt'
f = open(filename)
s, totnum = 0, 0
for line_number, line in enumerate(f):
    nums = map(int, line.split())
    s += sum(nums)
    totnum += len(nums)

print "numbers:", totnum, "average:", 1.0*s/totnum
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This assumes your file only has numbers on each line and not characters, otherwise you'll get a <code>TypeError</code>.</p>
<pre><code>list_of_numbers = []

with open('somefile.txt') as f:
   for line in f:
      if line.strip(): # this skips blank lines
          list_of_numbers.append(int(line.strip()))

print 'Total ',len(list_of_numbers)
print 'Average ',1.0*sum(list_of_numbers)/len(list_of_numbers)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are some good answers regarding how to do what you want. As for the IO error, the input() built-in attempts to evaluate the user's input which is both dangerous and not what you want.</p>
<p>Try using the raw_input() built-in. That returns the user's input as a string. For fun, try running your script and giving it <code>__name__</code> as the filename and see what happens.</p>
</div>
<span class="comment-copy">this code doesn't seem to run... you're not defining numTotal or numAvg anywhere.</span>
<span class="comment-copy">The goal is to grab every single line in the text file, and then find the total of the numbers and the average, and then present them to the user. I was able to do this when I knew how many lines to grab, the problem I am having is when the number of lines changes with every file read.</span>
<span class="comment-copy">what are these numbers you mention, so this is 1 number per line?</span>
<span class="comment-copy">I want the program to be able to a read a file that is simple a list of numbers, with one number per line. Line 1 would be 150, then on the next line it would be 99, and then on the next line it would be 123, etc.</span>
<span class="comment-copy">Exactly what I was looking for, thank you!</span>
<span class="comment-copy">Thats what I figured, I was just lost on how to condense it down, thanks for all your help!</span>
<span class="comment-copy">I thought raw_input no longer existed in Python 3+?</span>
<span class="comment-copy">You're absolutely right. Absent-minded reply!</span>
