<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11664443/how-do-i-read-multiple-lines-of-raw-input-in-python">How do I read multiple lines of raw input in Python?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I want to write a program that gets multiple line input and work with it line by line. Why there is no function like <code>raw_input</code> in Python 3? </p>
<p><code>input</code> does not allow user to put lines separated by newline (<kbd>Enter</kbd>), it prints back only the first line.</p>
<p>Can it be stored in variable or even read it to a list?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.x the <code>raw_input()</code> of Python 2.x has been replaced by <code>input()</code> function. However in both the cases you cannot input multi-line strings, for that purpose you would need to get input from the user line by line and then <code>.join()</code> them using <code>\n</code>, or you can also take various lines and concatenate them using <code>+</code> operator separated by <code>\n</code></p>
<p>To get multi-line input from the user you can go like:</p>
<pre><code>no_of_lines = 5
lines = ""
for i in xrange(5):
    lines+=input()+"\n"

print lines
</code></pre>
<p>Or</p>
<pre><code>lines = []
while True:
    line = input()
    if line:
        lines.append(line)
    else:
        break
text = '\n'.join(lines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>raw_input</code> can correctly handle the EOF, so we can write a loop, read till we have received an EOF (Ctrl-D) from user:</p>
<h3>Python 3</h3>
<pre><code>print("Enter/Paste your content. Ctrl-D or Ctrl-Z ( windows ) to save it.")
contents = []
while True:
    try:
        line = input()
    except EOFError:
        break
    contents.append(line)
</code></pre>
<h3>Python 2</h3>
<pre><code>print "Enter/Paste your content. Ctrl-D or Ctrl-Z ( windows ) to save it."
contents = []
while True:
    try:
        line = raw_input("")
    except EOFError:
        break
    contents.append(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>input(prompt)</code> is basically equivalent to</p>
<pre><code>def input(prompt):
    print(prompt, end='', file=sys.stderr)
    return sys.stdin.readline()
</code></pre>
<p>You can read directly from <code>sys.stdin</code> if you like. </p>
<pre><code>lines = sys.stdin.readlines()

lines = [line for line in sys.stdin]

five_lines = list(itertools.islice(sys.stdin, 5))
</code></pre>
<p>The first two require that the input end somehow, either by reaching the end of a file or by the user typing Control-D (or Control-Z in Windows) to signal the end. The last one will return after five lines have been read, whether from a file or from the terminal/keyboard.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>input()</code> built-in function to get a input line from the user.</p>
<p>You can read <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow">the help here</a>.</p>
<p>You can use the following code to get several line at once (finishing by an empty one):</p>
<pre><code>while input() != '':
    do_thing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>no_of_lines = 5
lines = ""
for i in xrange(5):
    lines+=input()+"\n"
    a=raw_input("if u want to continue (Y/n)")
    ""
    if(a=='y'):
        continue
    else:
        break
    print lines
</code></pre>
</div>
<span class="comment-copy">because there is <code>input()</code> in <b>Python3.x</b> for taking input from the user.</span>
<span class="comment-copy">but it does not allow to put multiple lines</span>
<span class="comment-copy">How were you getting <i>"multiple line input"</i> with <code>raw_input</code>? Why not get one line at a time, looping until the user enters a blank line?</span>
<span class="comment-copy">but I want to input all lines at once</span>
<span class="comment-copy">That doesn't answer my first question, and only partly the second.</span>
<span class="comment-copy">ok thats clear. so there is no option to paste few lines of text separated with newline and store it. how about write it to a file, text file.</span>
<span class="comment-copy">Yes actually In Python you can have a multi line string by using <code>""" multi line string """</code></span>
<span class="comment-copy">Good answer. To answer the OP's question regarding Python 3, replace <code>raw_input("")</code> with <code>input()</code> and change the <code>print</code> statement to use brackets</span>
<span class="comment-copy">And what happens when the user writes some stuff on the line but instead of hitting enter for a newline, they press ctrl-d to trigger the EOFError? From my testing, it results in the last element in <code>contents</code> having its last character trimmed.</span>
<span class="comment-copy">I would suppose you have used double Ctrl-D(which is not really the case we are discussing here) since a single Ctrl-D cannot trigger the EOFError in a non-empty line.</span>
<span class="comment-copy">In PyDev, pressing Ctrl-D to end the input does not work properly.</span>
<span class="comment-copy"><code>[line.splitlines() for line in sys.stdin]</code> removes the carriage returns.</span>
<span class="comment-copy">Welcome to SO :) It's always better to add an explanation to the code you're posting as an answer, so that it will helps visitors understand why this is a good answer.</span>
