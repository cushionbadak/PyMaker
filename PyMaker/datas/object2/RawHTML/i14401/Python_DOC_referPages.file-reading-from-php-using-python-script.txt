<div class="post-text" itemprop="text">
<p>Okay, this is driving me crazy. I have a small file. Here is the dropbox link <a href="https://www.dropbox.com/s/74nde57f07jj0zj/transcript.txt?dl=0" rel="nofollow">https://www.dropbox.com/s/74nde57f07jj0zj/transcript.txt?dl=0</a>.</p>
<p>If I try to read the content of the file using python f.read(), I can easily read it. But, if I try to run the same python program using php shell_exec(), the file read fails. This is the error I get.</p>
<pre><code>Traceback (most recent call last): 
  File "/var/www/python_code.py", line 2, in &lt;module&gt;
    transcript = f.read() 
  File "/opt/anaconda/lib/python3.4/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 107: ordinal not in range(128)
</code></pre>
<p>I have checked all the permission issues and there is no problem with that.</p>
<p>Can anyone kindly shed some light?</p>
<p>Here is my python code.</p>
<pre><code>f = open('./transcript/transcript.txt', 'r')
transcript = f.read()
print(transcript)
</code></pre>
<p>Here is my PHP code.</p>
<pre><code>$output = shell_exec("/opt/anaconda/bin/python /var/www/python_code.py");
</code></pre>
<p>Thank you!</p>
<p>EDIT: I think the problem is in the file content. If I replace the content with simple 'I eat rice', then I can read the content from php. But the current content cannot be read. Still don't know why.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem appears is that your file contains non-ASCII characters, but you're trying to read it as ASCII text.</p>
<p>Either it is text, but is in some encoding or other that you haven't told us (probably UTF-8, Latin-1, or cp1252, but there are countless other possibilities), or it's not text at all, but rather arbitrary binary data.</p>
<hr/>
<p>When you open a text file without specifying an encoding, Python has to guess. When you're running from inside the terminal or whatever IDE you use, presumably, it's guessing the same encoding that you used in creating the file, and you're getting lucky. But when you're running from PHP, Python doesn't have as much information, so it's just guessing ASCII, which means it fails to read the file because the file has bytes that aren't valid as ASCII.</p>
<p>If you want to understand <em>how</em> Python guesses, see the docs for <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open</code></a>, but briefly: it calls <code>locale.getpreferredencoding()</code>, which, at least on non-Windows platforms, reads it from the locale settings in the environment. On a typical linux system that's not new enough to be based on <code>systemd</code> but not too old, the user's shell will be set up for a UTF-8 locale, but services will be set up for C locale. If all of that makes sense to you, you may see a way to work around your problem. If it all sounds like gobbledegook, just ignore it.</p>
<hr/>
<p>If the file is meant to be text, then the right solution is to just pass the encoding to the <code>open</code> call. For example, if the file is UTF-8, do this:</p>
<pre><code>f = open('./transcript/transcript.txt', 'r', encoding='utf-8')
</code></pre>
<p>Then Python doesn't have to guess.</p>
<hr/>
<p>If, on the other hand, the file is arbitrary binary data, then don't open it in text mode:</p>
<pre><code>f = open('./transcript/transcript.txt', 'rb')
</code></pre>
<p>In this case, of course, you'll get <code>bytes</code> instead of <code>str</code> every time you read from it, and <code>print</code> is just going to print something ugly like <code>b'aq\x9bz'</code> that makes no sense; you'll have to figure out what you actually want to <em>do</em> with the bytes instead of printing them as a <code>bytes</code>.</p>
</div>
<span class="comment-copy">Does <b>python_code.py</b> have read access for others? Try <code>chmod o+r python_code.py</code> then? Just tried on my server.</span>
<span class="comment-copy">Is it because the script is being executed from a different directory, thus making a relative url incorrect?</span>
<span class="comment-copy">The URL is correct and the python_code has access by others.</span>
<span class="comment-copy">I am trying to say that your php shell  might not be executing the python script from the directory it is actually in. If this were the case './transcript/transcript.txt' a relative url might not be valid from the directory your script is executing from. You can try printing <code>os.getcwd()</code> (needs <code>import os</code>) to see which directory the script is executed from. Is this what you expected? Another thing to try is to use an absolute url in your python script <code>/var/www/transcript/transcript.txt</code>. It's hard to tell the exact error without your actual error message.</span>
<span class="comment-copy">What does "fails" mean?</span>
<span class="comment-copy">The file content is meant to be text. So, I have taken the first suggestion and the error is gone. Thanks a lot! Now, I find another error. When I am printing the content of the file, I get "UnicodeEncodeError: 'ascii' codec can't encode character '\xa0' in position 107: ordinal not in range(128)" error. I suppose something need to be specified in the print() command as well?</span>
<span class="comment-copy">turns out on ubuntu by default open() assumes binary file and on anaconda it assumes text. I ran the same code serving a web page on both PC and linux, using flask. on the windows/pc, favicon was not showing up and fontawsome was showing empty squares. took a while but it turns out adding the 'rb' parameter to open() solved the problems. thanks!</span>
