<div class="post-text" itemprop="text">
<p>Given the models</p>
<pre><code>class Book(models.Model):
   title = models.CharField(max_length=200)
   price = models.FloatField()
   inventory_quantity = models.IntegerField()

   def movement(type, qty):
      # ...
      if type == 'sell':
         self.inventory_quantity -= qty
      if type == 'donation':
         self.inventory_quantity += qty
      # ...

class Operation(models.Model):
   operation_type_choices = (
       ('sell', 'Sell'),
       ('donation', 'Donation'),
   )
   book = models.ManyToManyField(Book, through = 'BookOperation') 
   operation_type = models.CharField(max_length=50, choices=operation_type_choices)

    def save(self, *args, **kwargs):
       super(Operation, self).save(*args,**kwargs)
       bok_op = BookOperation()
       bok = Book()
       op = Operation()
       bok.movement(op.operation_type, bok_op.quantity)

class BookOperation(models.Model):
   book = models.ForeignKey(Book)
   operation = models.ForeignKey(Operation)
   quantity = models.IntegerField()
</code></pre>
<p>On the OPERATION model, i overrode the <code>save()</code> function to change the Book quantity by executing the <code>movement()</code> function on Book's model(at least that was the intention).
The logic that determines if the inventory_quantity should add or subtract is in this function, is that the right way to do it?</p>
<p>Also, I know my code is extremely wrong on terms of how Python deals with objects, when I save an operation on admin panel I get <code>movment() takes exactly 2 arguments (3 given)</code>, why? It seems that i'm passing only <code>op.operation_type, bok_op.quantity</code></p>
<p>Thanks for the help</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not exactly clear on why you're overriding <code>save</code>, but you should make the <code>super</code> call <em>last</em> there, since it's what does the actual saving of the instance data.</p>
<p>Re "takes exactly 2 arguments (3 given)", the definition of the <code>movement</code> method in the <code>Book</code> class should take <code>self</code> as its first argument. All Python method calls automatically are passed the instance itself as the first method parameter. </p>
<p>See the Python docs for more: <a href="https://docs.python.org/3/tutorial/classes.html#classes" rel="nofollow">"the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call..."</a></p>
<p>(Also, you don't show us where <code>liv</code> is defined so we can't be sure what it is -- from reading your code it seems it should be <code>self</code> instead.)</p>
</div>
<span class="comment-copy"><code>.movement(type, qty)</code> should be <code>.movement(self, type, qty)</code> because it's an instance method</span>
