<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1788608/reference-to-part-of-list-python">Reference to Part of List - Python</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>Python's slice operation creates a copy of a specified portion a list. How do I pass a slice of a parent list so that when this slice changes, the corresponding portion of the parent list changes with it?</p>
<pre><code>def modify(input):
    input[0] = 4
    input[1] = 5
    input[2] = 6


list = [1,2,3,1,2,3]
modify(list[3:6])
print("Woud like to have: [1,2,3,4,5,6]")
print("But I got: "  + str(list))
</code></pre>
<p>Output:</p>
<p>Would like to have: <code>[1,2,3,4,5,6]</code><br/>
But I got: <code>[1,2,3,1,2,3]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You could do it with numpy if using numpy is an option:</p>
<pre><code>import  numpy as np


def modify(input):
    input[0] = 4
    input[1] = 5
    input[2] = 6


arr = np.array([1,2,3,1,2,3])
modify(arr[3:6])
print("Would like to have: [1,2,3,4,5,6]")
print("But I got: "  + str(arr))

Would like to have: [1,2,3,4,5,6]
But I got: [1 2 3 4 5 6]
</code></pre>
<p>Using <a href="http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html" rel="nofollow">basic indexing</a> always returns a <a href="http://docs.scipy.org/doc/numpy/glossary.html#term-view" rel="nofollow">view</a> which is  <em>An array that does not own its data, but refers to another arrayâ€™s data instead</em></p>
<p>Depending on your use case and if you are using python3 maybe a <a href="https://docs.python.org/3/library/stdtypes.html#memoryview" rel="nofollow">memeoryview</a> with an <a href="https://docs.python.org/3/library/array.html#array.array" rel="nofollow">array.array</a> might work .</p>
<pre><code>from array import array

arr = memoryview(array("l", [1, 2, 3, 1, 2, 3]))

print(arr.tolist())

modify(arr[3:6])

print("Woud like to have: [1,2,3,4,5,6]")
print((arr.tolist()))
[1, 2, 3, 1, 2, 3]
Woud like to have: [1,2,3,4,5,6]
[1, 2, 3, 4, 5, 6]
</code></pre>
</div>
<span class="comment-copy">You can't do that using regular Python lists.  You could instead pass the list and indices separately (e.g., <code>modify(list, 3, 6)</code>) and have <code>modify</code> use them to modify the list.</span>
<span class="comment-copy">@thefourtheye: That doesn't make sense, since his goal is mutate the object.</span>
<span class="comment-copy">Just use a slice assignment: <code>li=[1,2,3,1,2,3]</code> then <code>li[3:6]=[4,5,6]</code></span>
