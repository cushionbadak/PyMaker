<div class="post-text" itemprop="text">
<p>I have a function based view function in django that receives an ID from a model, retrieve a file address and delete it using os.remove</p>
<pre><code>image = Images.objects.get(id=image_id)
os.remove(image.file)
</code></pre>
<p>the image_id is valid and is a part of my fixture.</p>
<p>what's the best way to write a test for this view, without manually creating a file each time I'm testing the code?</p>
<p>Is there a way to change the behavior of os.remove function for test?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes. It's called mocking, and there is a Python library for it: mock. Mock is available in the standard library as <a href="https://docs.python.org/3/library/unittest.mock.html?highlight=mock" rel="nofollow"><code>unittest.mock</code></a> for Python 3.3+, or <a href="http://mock.readthedocs.org/en/latest/" rel="nofollow">standalone</a> for earlier versions.</p>
<p>So you would do something like this:</p>
<pre><code>from mock import patch
...
@patch('mymodel_module.os.remove')
def test_my_method(self, mocked_remove):
    call_my_model_method()
    self.assertTrue(mocked_remove.called)
</code></pre>
<p>(where <code>mymodel_module</code> is the models.py where your model is defined, and which presumably imports <code>os</code>.)</p>
</div>
