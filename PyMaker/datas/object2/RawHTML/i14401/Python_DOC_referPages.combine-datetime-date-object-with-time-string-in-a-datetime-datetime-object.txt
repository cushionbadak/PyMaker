<div class="post-text" itemprop="text">
<p>Say you have a <code>datetime.date</code> object such as that returned by <code>datetime.date.today()</code>.</p>
<p>Then later on you also get a string representing the time that complements the date object.</p>
<p>What is a pythonic way of combining these two in a datetime.datetime object? More specifically, can I avoid converting the date object to a string? </p>
<p>This is how I get it done for now:</p>
<pre><code>def combine_date_obj_and_time_str(date_obj, time_str):
    # time_str has this form: 03:40:01 PM
    return datetime.datetime.strptime(date_obj.strftime("%Y-%m-%d") + ' ' + time_str, "%Y-%m-%d %I:%M:%S %p")
</code></pre>
<p><strong>EDIT:</strong></p>
<p>I looked into <code>datetime.datetime.combine</code> as the first answer describes, but I am a bit at loss with getting the time string into a time object:</p>
<pre><code>&gt;&gt;&gt; datetime.datetime.combine(datetime.date.today(), time.strptime("03:40:01 PM", "%I:%M:%S %p"))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: combine() argument 2 must be datetime.time, not time.struct_time
&gt;&gt;&gt; datetime.datetime.combine(datetime.date.today(), datetime.time.strptime("03:40:01 PM", "%I:%M:%S %p"))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: type object 'datetime.time' has no attribute 'strptime'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just read the docs for <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime" rel="noreferrer"><code>datetime</code></a>, or look at the <code>help(datetime)</code> in the interactive interpreter, you'll see the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.combine" rel="noreferrer"><code>combine</code></a> method:</p>
<blockquote>
<p><em>classmethod</em> <code>datetime.combine(date, time)</code></p>
<p>Return a new <code>datetime</code> object whose date components are equal to the given <code>date</code> object’s, and whose time components and <code>tzinfo</code> attributes are equal to the given <code>time</code> object’s. For any <code>datetime</code> object <em>d</em>, <code>d == datetime.combine(d.date(), d.timetz())</code>. If <em>date</em> is a <code>datetime</code> object, its time components and <code>tzinfo</code> attributes are ignored.</p>
</blockquote>
<p>So, you don't have to write the method yourself; it's already there in the module.</p>
<p>Of course you need to parse that <code>time_str</code> into a <code>time</code> object, but you clearly already know how to do that.</p>
<hr/>
<p>But if you <em>did</em> want to write it yourself, formatting the date and time as strings just to parse them back out would be silly. Why not just access the attributes directly?</p>
<pre><code>return datetime(d.year, d.month, d.day, t.hour, t.minute. t.second, t.tzinfo)
</code></pre>
</div>
<span class="comment-copy">How do you obtain that <code>time_str</code>?</span>
<span class="comment-copy">@PascalvKooten: from sar's output</span>
<span class="comment-copy">note: <code>time.strptime(*args)</code> returns <code>time.struct_time()</code>, not <code>datetime.time()</code>. To get the latter, call <code>datetime.strptime(*args).time()</code>.</span>
<span class="comment-copy">@J.F.Sebastian great perfect that is the last piece of the puzzle (for me in this particular instance, all my excuses to user abarnert for not reading the full datetime.datetime/datetime.date/datetime.time/time.struc_time/etc documentation and taking a risk at asking a question on SO, so following that train of thought perhaps it is about time that people sort out stuff on their own by reading docs and books instead of bothering other SO users... &lt;end of rant&gt;)</span>
<span class="comment-copy">Please, check this new question. <a href="https://stackoverflow.com/q/44014424/2449724">stackoverflow.com/q/44014424/2449724</a></span>
