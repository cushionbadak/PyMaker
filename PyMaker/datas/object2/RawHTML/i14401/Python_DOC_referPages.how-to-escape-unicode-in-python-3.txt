<div class="post-text" itemprop="text">
<p>So I know that the character "Latin Small Letter Sharp S" <code>ÃŸ</code> is at Unicode Point <code>U+00DF</code> and I know  how to escape this in Python 3 as a string: <code>\u00DF</code>.  </p>
<p>However, I know that there are other unicode prefixes for the larger codepoints (such as <code>U+260E: Black Telephone</code>)</p>
<p>I have seen the uppercase <code>U</code> being used such as <code>\U00DF</code> and i have also seen <code>\x</code> being used.  </p>
<p>My question is when do i use those.  For instance many emoji are just given as <code>U+260x</code>. And my thought is to use a capital <code>U</code> and fill in 12 <code>0s</code> before those digits but when do I use an <code>\x</code> and when do I know to use leading zeros (and how many)</p>
<p>All of this is me guessing because I can't find any documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>\x</code> takes two hex digits.
The lower-case <code>\u</code> takes four hex digits.
The upper-case <code>\U</code> takes eight hex digits.</p>
<p><a href="https://docs.python.org/3/howto/unicode.html#unicode-literals-in-python-source-code" rel="nofollow">https://docs.python.org/3/howto/unicode.html#unicode-literals-in-python-source-code</a></p>
</div>
<span class="comment-copy">Where did you look for documentation? I found it all right here: <a href="https://docs.python.org/3/reference/lexical_analysis.html#literals" rel="nofollow noreferrer">docs.python.org/3/reference/lexical_analysis.html#literals</a></span>
<span class="comment-copy">Ah. I googled "escaping Unicode in Python" and looked at the 3.3.2 reference.</span>
<span class="comment-copy">So in my first example, why is the U+00DF escaped as <code>\u00DF</code> when it is only 2 hex digits</span>
<span class="comment-copy">@Startec: <code>\u00DF</code> means exactly the same thing as <code>\xDF</code> (and the same as <code>\U000000DF</code>).</span>
<span class="comment-copy">The author may have just found it more readable, maybe because there are other <code>\u</code> escapes in their codebase, or the author is just more used to them.</span>
