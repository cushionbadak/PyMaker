<div class="post-text" itemprop="text">
<p>I'm attempting to build a class representation of a matrix complete with most of the normal mathematical operations. I've hit a snag with the scalar multiplication operation.</p>
<p>The relevant part of the code is as follows:</p>
<pre><code>import numpy

class Matrix(object):

    def __init__(self, array):
        self.array = numpy.array(array, dtype=int)

    def __mul__(self, other):
        if type(other) == int:
            return Matrix(other*self.array)
        else:
            raise ValueError("Can not multiply a matrix with {0}".format(type(other)))
</code></pre>
<p>The standard way the scalar multiplication is expressed is cA where c is a scalar and A is a matrix, so <code>c*A</code> in Python. However, this fails with a <code>TypeError: unsupported operand type(s) for *: 'int' and 'Matrix'</code> while <code>A*c</code> runs as expected (note the <code>other*self.array</code>). Thus I conclude that the * operand is defined for <code>int</code> and <code>numpy.array</code>.</p>
<p>What is this magic and how can I replicate the behavior?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need a <a href="https://docs.python.org/3/reference/datamodel.html#object.__rmul__" rel="noreferrer"><code>__rmul__</code></a> in your calss. For example if you add</p>
<pre><code>def __rmul__(self, other):
    return self.__mul__(other)
</code></pre>
<p>then:</p>
<pre><code>&gt;&gt;&gt; A = Matrix(np.arange(12).reshape(3, 4))
&gt;&gt;&gt; (2 * A).array
array([[ 0,  2,  4,  6],
       [ 8, 10, 12, 14],
       [16, 18, 20, 22]])
</code></pre>
<p>As in the <a href="https://docs.python.org/3/reference/datamodel.html#object.__ror__" rel="noreferrer">docs</a>, the <code>__r***__</code></p>
<blockquote>
<p>are called to implement the binary arithmetic operations with reflected (swapped) operands. These functions are only called if the left operand does not support the corresponding operation and the operands are of different types.</p>
</blockquote>
</div>
<span class="comment-copy">Thank you! It worked.</span>
