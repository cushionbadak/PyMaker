<div class="post-text" itemprop="text">
<p>I have a input file like this</p>
<p>input:</p>
<pre><code>20

23 121 20

35 113 11

12 15 142

17 90 110

58 12 198

......
</code></pre>
<p>I want to create to a list with numbers in each row assigned to a different variable. I'm trying to do like this..</p>
<pre>
def prog(inStr):

    input = inStr.split()

    N = int(input[0])
    list = []

    for i in range(N):
        row1 = int(input[1])
        row2 = int(input[2])
        row3 = int(input[3])
        r = prog(row1, row2, row3)
        list.append(r) 
</pre>
<p>But it's not working as it should, if executed like this..</p>
<pre><code>row1 = int(input[i*3+1])

row2 = int(input[i*3+2])

row3 = int(input[i*3+3])
</code></pre>
<p>Throws an error, index out of range.</p>
<p>Appreciate your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Rather than split your input on all whitespace, split it on <em>line separators</em> first:</p>
<pre><code>def prog(inStr):
    lines = inStr.splitlines()
    N = int(lines[0])
    result = []
    for index in range(N):
        row1, row2, row3 = map(int, lines[index + 1].split())
</code></pre>
<p>If <code>inStr</code> came from a file or standard input, you could read from the input directly:</p>
<pre><code>from itertools import islice

test_count = int(next(fileobj))
result = [r(*map(int, line.split())) for line in islice(fileobj, test_count)]
</code></pre>
<p>This uses a list comprehension, <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>itertools.islice()</code></a> to give a hard limit the number of iterations, and argument unpacking to produce the result list.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are trying to parse a 2D array from a file, you could parse the file into a Numpy 2D Array called A in the following way:</p>
<pre><code>import numpy
f=open("file.txt")
i=0
for line in f:
    line=line.rstrip("\r\n")
    if line!="":
        if i==0:
            N=int(line)
            A=numpy.zeros((N, 3))
        else:   
            splittedRow=line.split()
            A[i-1,0]=int(splittedRow[0])
            A[i-1,1]=int(splittedRow[1])
            A[i-1,2]=int(splittedRow[2])
        i+=1    
print A
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Take a try</p>
<pre><code>rows = inStr.split('\n')
count = int(rows[0])

for row in rows[1:]:
    yourList.append(prog(*map(int, row.split())))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's very unclear what you're trying to do, but I suspect it's the usual programming competition thing, where you can do this:</p>
<pre><code>N = input()
for _ in range(N):
    a, b, c = map(int, raw_input().split())
    print(a, b, c)
</code></pre>
<p>Of course instead of printing <code>a</code>, <code>b</code> and <code>c</code>, do with them what you're supposed to do.</p>
<p>Or if you really want to collect the input as a list of rows:</p>
<pre><code>N = input()
rows = [map(int, raw_input().split()) for _ in range(N)]
</code></pre>
</div>
<span class="comment-copy">What are you passing as an argument to <code>prog</code>?</span>
<span class="comment-copy">sorry! didn't get you. I am defining a class for prog, as that what you mean.</span>
<span class="comment-copy">Why is <code>prog</code> trying to call itself, especially with the wrong number of arguments? This makes no sense whatsoever.</span>
<span class="comment-copy">Upvote +1, but do not use built-in function name as variable name e.g. <code>input</code>.</span>
<span class="comment-copy">@VivekSable: I was focusing on other improvements first, but yes, <code>input</code> is not a good variable name.</span>
