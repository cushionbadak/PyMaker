<div class="post-text" itemprop="text">
<p>Ok I have this text file structure</p>
<pre><code>Customer ID: 1
Customer Name: John
Customer Sale: 5
</code></pre>
<p>Lets say I wish to search the text file for this entry using the customer id and return the contents of customer sale: which is 5</p>
<p>I have something similar to this</p>
<pre><code>with open("sales.txt", "r") as salesFile:
        lines = salesFile.readlines()
        for line in lines:
            if (str(ID)) in line:
                return ????
</code></pre>
<p>Not sure how to return a value two lines down from what I'm searching for</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>No need for splitlines, then file will be a iterator:
You can do something like:</p>
<pre><code>def match_line(ID, f):
    with open(f) as file:
        for line in file:
            if str(ID) in line:
                for line2 in file:
                    if 'Sale' in line2:
                        return line2
</code></pre>
<p>when called with file:</p>
<pre><code>In [9]: match_line(1, 'sales.txt')
Out[9]: 'Customer Sale: 5\n'
</code></pre>
<p>This is assuming you want the line with the string 'Sale' on it, if you want 2 lines after then:</p>
<pre><code>def match_line(ID, f):
    with open(f) as file:
        for line in file:
            if str(ID) in line:
               next(file)
               return next(file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want the next two lines right this gives the next two lines after the match </p>
<pre><code>with open("a.txt") as sales:
    lines=sales.readlines()

    for i in range(len(lines)-1):
        if ("ID: "+str(5)) in lines[i]:
            print lines[i+1],lines[i+2]
</code></pre>
<p><strong><em>Output:</em></strong></p>
<pre><code>Customer Name: John
Customer Sale: 5
</code></pre>
<p>By using enumerator :</p>
<pre><code>with open("a.txt") as sales:
    lines=sales.readlines() 
         for i,a in enumerate(lines):
             if ("ID: "+str(5)) in a:
                 print lines[i+2]
</code></pre>
<p><strong>output:</strong></p>
<pre><code>Customer Sale: 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here you can find two solution, the second is more pythonic. Both functions takes as parameters the <code>Customer ID</code>, the second is the offset between the Customer ID line and the desired line to return and the last is the input file. If the id doesn't exist, the function return <code>None</code>.
If you don't need to pass the offset to the function, you can remove-it and declare inside of function</p>
<pre><code>def get_id_details(c_id,offset,in_file):
    base_line = 'Customer ID: %s' % c_id
    find = False
    with open(in_file) as f:
        for line in f:
            if (base_line == line.rstrip('\r\n') and not find ):
                find = True
            if (find):
                offset -=1
            if offset ==-1:
                return line
    return None  

def get_id_details_2(c_id,offset,in_file):
    base_line = 'Customer ID: %s' % c_id
    with open(in_file) as f:
        for line in f:
            if (base_line == line.rstrip('\r\n')):
                try:
                    for _ in range(offset-1):
                        f.next()
                    return f.next()
                except StopIteration:
                    return None
print get_id_details(2,2,'in.txt')
// result is Customer Sale: 5
print get_id_details(8,6,'in.txt')
// result is None

print get_id_details_2(2,2,'in.txt')
// result is Customer Sale: 6
print get_id_details_2(5,2,'in.txt')
// result is None
</code></pre>
<p>Input file </p>
<pre><code>Customer ID: 1
Customer Name: John1
Customer Sale: 5
Customer ID: 2
Customer Name: John2
Customer Sale: 6
Customer ID: 4
Customer Name: John3
Customer Sale: 7
Customer ID: 3
</code></pre>
</div>
<span class="comment-copy">What version of Python?</span>
<span class="comment-copy">Sorry i am running python 3.4</span>
<span class="comment-copy">How are records separated? By a blank line, ...?</span>
<span class="comment-copy">Every record is on a new line with no blank line between</span>
<span class="comment-copy">Does the line start with customer id in text file and end with sale</span>
<span class="comment-copy">Thanks that's exactly what i was looking for.</span>
<span class="comment-copy">A small mistake is that you check for a number in a line it can also be in sales and not particularly in Customer ID so it will give wrong answer</span>
<span class="comment-copy">You might want to try <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> with that solution.  <code>for idx, line in enumerate(lines): ...</code></span>
<span class="comment-copy">Thanks @wwii but what is the advantage of enumerator</span>
<span class="comment-copy">It can help make the code easier to read.</span>
<span class="comment-copy">But does it improves the performance</span>
<span class="comment-copy">You would have to test that if you'ld like.</span>
