<div class="post-text" itemprop="text">
<p>In my model I want to be able to input duration, like <em>2 years</em>, <em>5 months</em>, etc.</p>
<p>In version <em>1.8</em> <code>DurationField</code> was introduced so I tried using that:</p>
<p>In my model I have
<code>user_validPeriod = models.DurationField()</code></p>
<p>Trying to add a new <em>User</em> from my admin panel, If I try typing something like <em>2d</em> or <em>2 days</em> in the appearing text-field though I get <code>Enter a valid duration</code>.</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/VszE6.png"/></p>
<p>Can someone provide me with an example of how this field is supposed to be used?  </p>
</div>
<div class="post-text" itemprop="text">
<p>To use a DurationField in django 1.8 you have to use a python <code>datetime.timedelta</code> instance like this:</p>
<p>Considering this model :</p>
<pre><code>from django.db import models

class MyModel(models.Model):
    duration = models.DurationField()
</code></pre>
<p>You can set a duration this way :</p>
<pre><code>import datetime

my_model = MyModel()
my_model.duration = datetime.timedelta(days=20, hours=10)
</code></pre>
<p>And query it this way :</p>
<pre><code># Equal
durations = MyModel.objects.filter(duration=datetime.timedelta(*args, **kwargs))

# Greater than or equal
durations = MyModel.objects.filter(duration__gte=datetime.timedelta(*args, **kwargs))

# Less than or equal
durations = MyModel.objects.filter(duration__lte=datetime.timedelta(*args, **kwargs))
</code></pre>
<p>More info on datetime.timedelta <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="noreferrer">here</a> and on DurationField <a href="https://docs.djangoproject.com/fr/1.8/ref/models/fields/#django.db.models.DurationField" rel="noreferrer">here</a>.</p>
<p>In your admin panel, you can enter a duration with a string with following format : <code>[DD] [[hh:]mm:]ss</code></p>
</div>
<span class="comment-copy">Hi Charlesthk, in your answer you haven't used DurationField at all. Not to mention that I cant find an example of someone using it. What is the purpose of its existence if no one uses it?</span>
<span class="comment-copy">edited my answer to be more explicit</span>
<span class="comment-copy">Thanks for the edit. I am sure it is as explicit as it can possibly get, but this is my first time using Django so you will have to excuse my ignorance. The way I know until now to add values to my model, and the way I would expect an administrator or user to do so is through the form in the admin panel?</span>
<span class="comment-copy">Yes you can use the admin for that ! If the answer is ok to you you can accept it ;-)</span>
<span class="comment-copy">Well the issue is that I cannot. I updated the question hopefully making it more clear.</span>
