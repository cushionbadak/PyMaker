<div class="post-text" itemprop="text">
<p>I have been searching for my answer, probably just not using the right verbiage, and only come up with using lists as dictionary key values.</p>
<p>I need to take 20 csv files and anonomyze identifying student, teacher, school and district information for research purposes on testing data.  The csv files range anywhere from 20K to 50K rows and 11 to 20 columns, not all have identical information.</p>
<p>One file may have:</p>
<pre><code>studid, termdates, testname, score, standarderr
</code></pre>
<p>And another may have:</p>
<pre><code>termdates, studid, studfirstname, studlastname, studdob, ethnicity, grade
</code></pre>
<p>And yet another may have:</p>
<pre><code>termdates, studid, teacher, classname, schoolname, districtname
</code></pre>
<p>I am putting the varying data into dictionaries for each type of file/dataset, maybe this isn't the best, but I am getting stuck when trying to use a dictionary as a key value for when a student may have taken multiple tests i.e. Language, Reading, Math etc.</p>
<p>For instance:</p>
<pre><code>studDict{studid{'newid': 12345, 'dob': 1/1/1, test1:{'score': 50, 'date': 1/1/15}, test2:{'score': 50, 'date': 1/1/15}, 'school': 'Hard Knocks'},
        studid1{'newid': 12345, 'dob': 1/1/1, test1:{'score': 50, 'date': 1/1/15}, test2:{'score': 50, 'date': 1/1/15}, 'school': 'Hard Knocks'}}
</code></pre>
<p>Any guidance on which libraries or a brief direction to a method would be greatly appreciated. I understand enough Python that I do not need a full hand holding, but helping me get across the street would be great. :D</p>
<p><strong>CLARIFICATION</strong></p>
<p>I have a better chance of winning the lottery than this project does of being used more than once, so the simpler the method the better. If it would be a repeating project I would most likely dump the data into db tables and work from there.</p>
</div>
<div class="post-text" itemprop="text">
<p>A dictionary cannot be a key, but a dictionary can be a value for some key in another dictionary (a dict-of-dicts). <em>However</em>, instantiating dictionaries of varying length for every tuple is probably going to make your data analysis very difficult. </p>
<p>Consider using <code>Pandas</code> to read the tuples into a DataFrame with <code>null</code> values where appropriate.</p>
<p><code>dict</code> API: <a href="https://docs.python.org/2/library/stdtypes.html#mapping-types-dict" rel="nofollow">https://docs.python.org/2/library/stdtypes.html#mapping-types-dict</a></p>
<p><code>Pandas</code> Data handling package: <a href="http://pandas.pydata.org/" rel="nofollow">http://pandas.pydata.org/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot use a dictionary as a key to a dictionary.  Keys must be hashable (i.e., immutable), and dictionaries are not, therefore cannot be used as keys.</p>
<p>You can store a dictionary in another dictionary just the same as any other value.  You can, for example do</p>
<pre><code>studDict = { studid: {'newid': 12345, 'dob': 1/1/1, test1:{'score': 50, 'date': 1/1/15}, test2:{'score': 50, 'date': 1/1/15}, 'school': 'Hard Knocks'},
    studid1: {'newid': 12345, 'dob': 1/1/1, test1:{'score': 50, 'date': 1/1/15}, test2:{'score': 50, 'date': 1/1/15}, 'school': 'Hard Knocks'}}
</code></pre>
<p>assuming you have defined <code>studid</code> and <code>studid1</code> elsewhere.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I interpret you correctly, in the end you want a <code>dict</code> with students (i.e. <code>studid</code>) as key and different student related data as value? This is probably not exactly what you want, but I think it will point you in the right direction (adapted from <a href="https://stackoverflow.com/questions/9007174/what-is-the-pythonic-way-to-read-csv-file-data-as-rows-of-namedtuples">this answer</a>):</p>
<pre><code>import csv
from collections import namedtuple, defaultdict

D = defaultdict(list)
for filename in files:
    with open(filename, mode="r") as infile:
        reader = csv.reader(infile)
        Data = namedtuple("Data", next(reader))
        for row in reader:
            data = Data(*row)
            D[data.studid].append(data)
</code></pre>
<p>In the end that should give you a dict <code>D</code> with <code>stuid</code>s as keys and a list of test results as values. Each test result is a <code>namedtuple</code>. <strong>This assumes that every file has a <code>studid</code> column!</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you can know the order of a file ahead of time, it's not hard to make a dictionary for it with help from <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a>.</p>
<p>File <code>tests.csv</code>:</p>
<pre><code>12345,2015-05-19,AP_Bio,96,0.12
67890,2015-04-28,AP_Calc,92,0.17
</code></pre>
<p>In a Python file in the same directory as <code>tests.csv</code>:</p>
<pre><code>import csv

with open("tests.csv") as tests:
    # Change the fields for files that follow a different form
    fields = ["studid", "termdates", "testname", "score", "standarderr"]
    students_data = list(csv.DictReader(tests, fieldnames=fields))

# Just a pretty show
print(*students_data, sep="\n")
# {'studid': '12345', 'testname': 'AP_Bio', 'standarderr': '0.12', 'termdates': '2015-05-19', 'score': '96'}
# {'studid': '67890', 'testname': 'AP_Calc', 'standarderr': '0.17', 'termdates': '2015-04-28', 'score': '92'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Be more explicit please. Your solution depend on the design.</p>
<p>in district you have schools and in each school you have teachers or student.</p>
<p>first you order your datas by district and school</p>
<pre><code>    districts = { 
                 "name_district1":{...}, 
                 "name_district2":{...},
                 ...,
                 "name_districtn":{...},
                }
</code></pre>
<p>for each distric:</p>
<pre><code>    # "name_districtn"
      {
        "name_school1": {...},
        "name_school2": {...},
        ...,
        "name_schooln": {...},
      }
</code></pre>
<p>for each school:
    #"name_schooln"</p>
<pre><code>{
  id_student1: {...},
  id_student2: {...},
  ...,
  id_studentn: {...}  
}
</code></pre>
<p>and for each student...you define his elements</p>
<p>you can also define one dictionary for all the student but you have to design a uniq id for each student in this case for example:</p>
<pre><code>   uniq_Id = "".join(("name_district","name_school", str(student_id)))
   Total = {
             uniq_Id: {'dob': 1/1/1, test1:{'score': 50, 'date': 1/1/15}, test2:{'score': 50, 'date': 1/1/15}, 'school': 'Hard Knocks'}} ,
           ...,
           }
</code></pre>
</div>
<span class="comment-copy">try sqldict python module, it may help you</span>
<span class="comment-copy">"this project will never be used more than once so I'll just hack it together" seems like the key phrase to use to ensure you're building a new core product for a company</span>
<span class="comment-copy">It was dumped on my lap via another department who got it via another department and they need it 'yesterday' lol.</span>
<span class="comment-copy">There may be two ways to approach this. One is pandas clearly as someone has stated- where you can read - each CSV into a separate dataframe and you can make them into a 'pandas panel'. May be something you want.   But hard to tell precisely - how - unless there's 'some data' one can have a feel of and what is it that you want 'eventually'. So not very sure how useful this approach is.</span>
<span class="comment-copy">Right, but I'm asking about using a dictionary as a value to a key, not the key itself, maybe I should re-word that.</span>
<span class="comment-copy">@bmeredith: No idea what that means. Can you give us an example of values you are having problem with, and how you tried to use them?</span>
<span class="comment-copy">@bmeredith What is a "key value"?  There are "keys" and there are "values" but I'm not sure what a "key value" is.  If you want to use them as values, there shouldn't be any difficulty in doing <code>dict1[ key ] = dict2</code> and then <code>dict2</code> will be the value in <code>dict1</code> mapped to <code>key</code></span>
<span class="comment-copy">Just updated with a quick example, sorry about that. Looking into using a dictionary as the value to a key</span>
<span class="comment-copy">@bmeredith well, make sure that all strings and variables are lining up.  In the example code you're using <code>studid1</code> as a variable name, but here it's a string, so that would be the first thing to check.  If you're getting the string key names from a file, make sure you're <code>strip</code>ing white space and case matches and all that stuff</span>
<span class="comment-copy">Yes, every file has the studid, that is the only repeating data.</span>
<span class="comment-copy">This is the method that is in place right now, but the layout will essentially be a dictionary of dictionaries which may have dictionaries as the values for certain keys which is throwing me a keyerror</span>
<span class="comment-copy">Can you explain? Is your goal to have a dictionary with keys of student IDs and values of lists of data on their tests?</span>
<span class="comment-copy">So essentially studDict{studID1{key:val, key:val, key:{key:val,    key:val, key:val}, key:val, key:val}, studID2{key:val, key:val, key:{key:val, key:val, key:val}, key:val, key:val}}</span>
<span class="comment-copy">I don't think dictionaries are the right data structure if you want to mix dictionaries and regular values. Make a <code>Student</code> class and use attributes instead.</span>
