<div class="post-text" itemprop="text">
<p>I have a script that writes a file to disk and then needs to upload it to a remote server using psftp. </p>
<p>based on some of answers I have seen on this site I have a basic idea of what I want to do but because:</p>
<ol>
<li><p>My code is written in Python 3.x</p></li>
<li><p>My code uses a mix of strings and variables in the commands</p></li>
</ol>
<p>I have not been successful. </p>
<p>here is my code ( after setting up the variables)</p>
<pre><code>connection_string = "" +prog+ "-P "  +port+ "-pw " +passwd+ " " +user+"@"+host

p = subprocess.Popen(connection_string.split(),stdin=subprocess.PIPE, stdout=subprocess.PIPE,shell=True)

sftp_cmd = "put "+upload_file

encoded_cmd = str.encode(sftp_cmd)

p.stdin.write(encoded_cmd)
# I would have rather used p.stdin.write(b'sftp_cmd') to create a buffer from the string but that didn't seem to work either.
</code></pre>
<p>the code compiles but the file does not get uploaded</p>
<p>1) What am I doing wrong ? :-)</p>
<p>2) How can I see if a connection is made and what command actually goes through ?</p>
<p>3) Is this the best way to call psftp or perhapes I should write a batch file on the fly each time and use the "-b" flag to call it ?</p>
<p>Note. I cannot use any libraries that do not come with the standard Python distro in my code. So I have to use psftp.</p>
<p>referenced answers:</p>
<p><a href="https://stackoverflow.com/questions/3659395/can-i-control-psftp-from-a-python-script">Can i control PSFTP from a Python script?</a></p>
<p><a href="https://stackoverflow.com/questions/8486947/formatting-strings-for-stdin-write-in-python-3-x">formatting strings for stdin.write() in python 3.x</a></p>
<p>TIA</p>
</div>
<div class="post-text" itemprop="text">
<p>Drop <code>shell=True</code>. If <code>prog</code> accept a command on its stdin and you want to get its output as a bytestring then you could use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow"><code>subprocess.check_output()</code></a>:</p>
<pre><code>#!/usr/bin/env python3
from subprocess import check_output

output = check_output([prog, "-P", port, "-pw", passwd, user + "@" + host],
                      input=("put " + upload_file).encode()) # utf8 filename
</code></pre>
<p>It raises an exception if <code>prog</code> returns a non-zero exit status (It usually means an error).</p>
</div>
<span class="comment-copy">Any specific reason why other libraries like paramiko cannot be used? Also, you may like to have a look at pscp.</span>
<span class="comment-copy">I can't use external libraries due to company restrictions. Scp seems to be blocked on the server (I have no control over it)</span>
<span class="comment-copy">for now I wrote the commands to a file and used psftp -b but would still like to know how to do this in a more python way.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/q/15109665/4279">Don't use a list argument and <code>shell=True</code> together</a> on POSIX systems.</span>
<span class="comment-copy">don't: <code>klass.method(some_object)</code>, call <code>some_object.method()</code> instead e.g., <code>sftp_cmd.encode()</code>.</span>
