<div class="post-text" itemprop="text">
<p>I've problem with hex() in python 2.7
I want to convert '0777' to hex with user input.
but it have problem with using integer with user input.</p>
<pre><code>In [1]: hex(0777)
Out[1]: '0x1ff'

In [2]: hex(777)
Out[2]: '0x309'

In [3]: z = raw_input('enter:')
enter:0777

In [4]: z
Out[4]: '0777'

In [5]: hex(z)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-5-3682d79209b9&gt; in &lt;module&gt;()
----&gt; 1 hex(z)


TypeError: hex() argument can't be converted to hex

In [6]: hex(int(z))
Out[6]: '0x309'

In [7]:
</code></pre>
<p>I need 0x1ff but its showing me 0x309, how i can fix it ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>base</em> argument of the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int</code></a> class defaults to 10</p>
<pre><code>int(x, base=10) -&gt; integer
</code></pre>
<p>leading zeroes will be stripped. See this example:</p>
<pre><code>In [1]: int('0777')
Out[1]: 777
</code></pre>
<p>Specify base 8 explicitly, then the <a href="https://docs.python.org/3/library/functions.html#hex" rel="nofollow"><code>hex</code></a> function will give you the desired result:</p>
<pre><code>In [2]: hex(int('0777', 8))
Out[2]: '0x1ff'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>input()</code> instead of raw_input() to eval input and read octal values.</p>
<pre><code>In [3]: z = input('enter:')
enter:0777

In [4]: z
Out[4]: 511

In [5]: hex(z)'
Out[5]: '0x1ff'
</code></pre>
</div>
<span class="comment-copy">So you want octal to hex? What if a user enters <code>777</code>?</span>
<span class="comment-copy">thanks man problem solved</span>
<span class="comment-copy">so you specifically only want octal input?  <code>int('8',8) -&gt; error</code></span>
<span class="comment-copy">You have to exactly indicate octal digit <code>hex(0o777)</code></span>
<span class="comment-copy">Don't use<code>input</code> ever</span>
<span class="comment-copy">if his input is trust-able, why not?</span>
<span class="comment-copy">how do you make user input <i>trust-able</i>?</span>
