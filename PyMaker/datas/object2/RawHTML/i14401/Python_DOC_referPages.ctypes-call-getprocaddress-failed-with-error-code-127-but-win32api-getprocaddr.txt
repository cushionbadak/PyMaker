<div class="post-text" itemprop="text">
<p>When I call <code>GetProcAddress()</code> by win32api, I get the handle successfully but <code>ctypes</code> didn't.</p>
<p>The codes are:</p>
<pre><code>from ctypes import windll
import win32api
KERNEL32 = windll.kernel32
h_kernel32 = KERNEL32.GetModuleHandleW('kernel32.dll')
print(hex(h_kernel32))

h_loadlib1=win32api.GetProcAddress(h_kernel32,'LoadLibraryW')
print(hex(h_loadlib1))
if not h_loadlib1:
    print("NtCreateThreadEx Failed:",win32api.GetLastError())

h_loadlib2 = KERNEL32.GetProcAddress(h_kernel32,'LoadLibraryW')
print(hex(h_loadlib2))
if not h_loadlib2:
    print("NtCreateThreadEx Failed:",win32api.GetLastError())
</code></pre>
<p>And the outputs:  </p>
<pre><code>0x77250000  
0x77266f80  
0x0  
NtCreateThreadEx Failed: 127  
</code></pre>
<p>SYSTEM INFO:<br/>
windows7 64, python 3.43</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use a char string rather than the default Unicode string provided by python 3.x, as hinted by the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms683212%28v=vs.85%29.aspx" rel="nofollow">GetProcAddress</a> documentation (the 2nd parameter is a <code>LPCSTR</code>, <strong>not</strong> <code>LPCTSTR</code> or <code>LPCWSTR</code>):</p>
<p><code>h_loadlib2 = KERNEL32.GetProcAddress(h_kernel32,'LoadLibraryW'.encode(encoding='ascii'))</code></p>
<p>Alternatively, you can pass a byte:</p>
<p><code>h_loadlib2 = KERNEL32.GetProcAddress(h_kernel32, b'LoadLibraryW')</code></p>
<p>Note: The above code won't work on a python 64-bit interpreter (the most significant 32-bit of the 64-bit module handle are zeroed). In this case you'll need to use <code>argtypes</code> and <code>restype</code> as <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow">explained in the tutorial</a> (for example by defining a 64-bit <code>HMODULE</code> type).</p>
</div>
<span class="comment-copy">You can use <code>kernel32 = WinDLL('kernel32');</code> <code>LoadLibraryW = kernel32.LoadLibraryW</code>. You can pass this function pointer as argument in a call to <code>CreateThread</code> or <code>NtCreateThreadEx</code>.</span>
<span class="comment-copy">@eryksun: thank you! typo corrected.</span>
<span class="comment-copy">Thank you so much!</span>
<span class="comment-copy">h_loadlib2 = KERNEL32.GetProcAddress(h_kernel32, b'LoadLibraryW')  works well, BUT I'm using a python 64-bit interpreter.</span>
<span class="comment-copy">@zoumi: It doesn't work on my 64-bit box (Python 3.4 ; Win8.1). Tested with both interpreters (32 and 64-bit) and the above code doesn't work on the 64-bit one. What is the output of <code>import platform; platform.architecture()</code> on your interpreter?</span>
<span class="comment-copy">@Neitsa, the OP is using <code>windll.kernel32</code>. Maybe some other module has assigned <code>windll.kernel32.GetProcAddress.restype</code> to a pointer type. Anyway, if the OP is just doing this to get an address to pass to <code>CreateThread</code>, then it's a needless waste of time. There's no reason to call <code>GetProcAddress</code> in ctypes code.</span>
