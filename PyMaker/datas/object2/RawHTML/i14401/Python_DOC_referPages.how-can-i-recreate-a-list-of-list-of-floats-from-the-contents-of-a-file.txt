<div class="post-text" itemprop="text">
<p>I have a text file coords.txt containing lists in separated rows:</p>
<pre><code>[0, 0.0, 0.0]
[0, 2.0, 1.0]
[0, 1.0, 4.0]
</code></pre>
<p>the first column is ID, second and third ones - coordinates.</p>
<p>I want to obtain following effect:</p>
<pre><code>[[0, 0.0, 0.0], [0, 2.0, 1.0], [0, 1.0, 4.0]]
</code></pre>
<p>I try the code:</p>
<pre><code>file = open(coords.txt).read()
list = file.splitlines()
</code></pre>
<p>Result is:</p>
<pre><code>['[0, 0.0, 0.0]', '[0, 2.0, 1.0]', '[0, 1.0, 4.0]']
</code></pre>
<p>The other way I used is:</p>
<pre><code>file = open(cords.txt)
list= [line.translate(None, '[]').split('\n') for line in file.readlines()]
</code></pre>
<p>Result is:</p>
<pre><code>[['0, 0.0, 0.0', ''], ['0, 2.0, 1.0', ''], ['0, 1.0, 4.0']]
</code></pre>
<p>How can I obtain expected outcome (get into the list to change strings to floats)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your data is in the same format as when a list of floats is printed as a string, you can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> method to convert it back to the actual list, like this</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; with open("coords.txt") as input_file:
...     result = [ast.literal_eval(line) for line in input_file]
...     
&gt;&gt;&gt; result
[[0, 0.0, 0.0], [0, 2.0, 1.0], [0, 1.0, 4.0]]
</code></pre>
<p>We open the file with the <code>with</code> statement, and then read the lines in the file one by one with the <code>for</code> loop (<code>for line in input_file</code>). We do <code>ast.literal_eval</code> on the read lines and the result of the call is stored in the list, with the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>. You can read more about the with statement, <a href="https://stackoverflow.com/q/3012488/1903116">here</a>, <a href="https://stackoverflow.com/q/1369526/1903116">here</a> and <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">here</a>.</p>
<hr/>
<p>Actual problems with your approaches are,</p>
<pre><code>file = open(coords.txt).read()
list = file.splitlines()
</code></pre>
<p>will just read the entire contents as a single string and then just split the string on the new line characters. But the list will still have only strings.</p>
<p>And when you tried</p>
<pre><code>file = open(cords.txt)
list= [line.translate(None, '[]').split('\n') for line in file.readlines()]
</code></pre>
<p>you have just removed the <code>[]</code> characters from the individual lines, and split the line based on <code>\n</code>. You still haven't attempted to convert them back to floats. It will still be string only.</p>
</div>
<div class="post-text" itemprop="text">
<p>For each line in the text file, you first need to get rid of the square braces, then you split the string on <code>", "</code> (mid the space here), Then after splitting you get a list of strings then you need to convert those strings to floats, for which you can use <code>map()</code> function.</p>
<pre><code>data = []
with open("sample.txt", "r") as data_file:
    for line in data_file.readlines():
        line = line.strip()[1:-1]   #To remove the starting and ending braces
        data.append(map(float, line.split(", ")))

print data
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't mind having all floats, you can strip the <code>[]</code> and newline then split on commas mapping to float:</p>
<pre><code>with open("in.txt") as f:
    data = [list(map(float, line.strip("[]\n").split(","))) for line in f]
    print(data)
    [[0.0, 0.0, 0.0], [0.0, 2.0, 1.0], [0.0, 1.0, 4.0]]
</code></pre>
<p>Or using <a href="https://docs.python.org/2/library/re.html" rel="nofollow">re</a> to find all the digits:</p>
<pre><code>import re
with open("in.txt") as f:
    r = re.compile("\d+\.\d+|\d+")
    data = [list(map(float, r.findall(line)))for line in f]
    print(data)

    [[0.0, 0.0, 0.0], [0.0, 2.0, 1.0], [0.0, 1.0, 4.0]]
</code></pre>
<p>Using translate you would split on <code>,</code> after removing the <code>[]</code>:</p>
<pre><code> data = [list(map(float, line.rstrip().translate(None,"[]").split(","))) for line in f]
</code></pre>
<p>Unrelated but you don't need to call readlines, you can just iterate over the file object instead of creating a list with readlines unnecessarily.</p>
</div>
<span class="comment-copy">Downvoter, please let me know what is wrong in the answer. I ll try to fix it. If there is a way to improve it, please suggest.</span>
