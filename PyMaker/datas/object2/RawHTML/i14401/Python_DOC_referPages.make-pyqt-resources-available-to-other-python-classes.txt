<div class="post-text" itemprop="text">
<p>I am developing a GUI with PyQt, and I'd like to use the PyQt resource system to keep track of my resources (images, templates, etc). I'm trying to find a way that I can get the absolute path to my resources so that I can load them with non-PyQt classes. For instance, I would like to be able to get the path to a resource image and plot it with matplotlib, e.g.</p>
<pre><code>import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from PyQt5 import QMysteryClass

qimg = QMysteryClass(":/myresource.png")
img = mpimg.imread( qimg.absolutePath() )
fig, ax = plt.subplots()
ax.imshow( img )
plt.show()
</code></pre>
<p>Does anyone know if the PyQt resource system supports this kind of use, or will I just have to manage my resources some other way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should read <a href="http://pyqt.sourceforge.net/Docs/PyQt5/resources.html" rel="nofollow">this doc</a> about the Qt resource system. Basically you construct a .qrc XML file and use pyrcc5 executable to convert that into a python module you can import.</p>
<p>Once you have your python module you can do stuff like <code>QFile(":/path/to/file")</code> for reading the contents, or use <code>QImage</code> directly since you want to work with images. Additionally, notice that your files are in memory so you can't access them in non-Qt classes with a path, which is why you need to read the data from memory instead. Load your image data into a buffer and read it into your matplotlib classes.</p>
<p>From the <a href="http://fossies.org/dox/matplotlib-1.4.3/namespacematplotlib_1_1image.html#aa1eebdb78e57244559dcf6b8fd62ad28" rel="nofollow">matplotlib.image.imread</a> doc:</p>
<blockquote>
<p><em>fname</em> may be a string path or a Python file-like object.  If
  using a file object, it must be opened in binary mode.</p>
</blockquote>
<p>Therefore you should be able to wrap your data in a <a href="https://docs.python.org/3/library/io.html?highlight=bytesio#io.BytesIO" rel="nofollow"><code>BytesIO</code></a> object.</p>
</div>
<span class="comment-copy">Ironically, the example you linked to describes how to include resources <i>without</i> using pyrcc.</span>
<span class="comment-copy">You're right. I removed it.</span>
