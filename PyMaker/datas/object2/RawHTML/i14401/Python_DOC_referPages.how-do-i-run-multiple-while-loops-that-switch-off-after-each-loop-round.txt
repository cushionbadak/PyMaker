<div class="post-text" itemprop="text">
<p>I'm fairly new to Python (and programming in general) and I was wondering if there's a way to run 2 or more while loops at the same time so that after each round of one loop it switches to the other, without necessarily starting over at round zero.  Here's what I have so far:</p>
<pre><code>def loop1():
rounds = 0
while True:
    if rounds == 1:
        print('A')
    elif rounds == 2:
        print('B')
    else:
        rounds = 0
    rounds = rounds + 1

def loop2():
    rounds = 0
    while True:
        if rounds == 1:
            print('a')
        elif rounds == 2:
            print('b')
        else:
            rounds = 0
        rounds = rounds + 1

loop1()
loop2()
</code></pre>
<p>Now when I do this all it does is run loop1() infinitely and never gets to loop2(), but I'd like to know a way to get the output to say:</p>
<pre><code>A
a
B
b
A
a
B
b
A
a
... and so on. 
</code></pre>
<p>Anyone know how I can do this? </p>
<p>also please note that I am beginner and am not really caught up on all the programming terminology, so please use small word :) Thanks in advance.
(also I'm using Python 3 (though I think you can probably already tell?))</p>
</div>
<div class="post-text" itemprop="text">
<p>Yo can try this, I don't know if it's what you are looking for but it will have your output.</p>
<pre><code>rounds = 0
rounds2= 0
loop=1
while True:
    if loop==1:
        if rounds == 1:
            print('A')
        elif rounds == 2:
            print('B')
        else:
            rounds = 0
        rounds = rounds + 1
        loop=2
    if loop==2:
        if rounds2 == 1:
            print('a')
        elif rounds2 == 2:
            print('b')
        else:
            rounds2 = 0
        rounds2 = rounds2 + 1
        loop=1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not combine them to one loop?</p>
<pre><code>rounds = 0
while True:
    if rounds == 0:
        print('A')
    elif rounds == 1:
        print('a')
    elif rounds == 2:
        print('B')
    elif rounds == 3:
        print('b')
    rounds = (rounds + 1) % 4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks to me like you don't really want to run 2 loops, you want to do 2 things inside a single loop. Something like:</p>
<pre><code>def loop():
  rounds = 0
  while True:
    doThing1(rounds)
    doThing2(rounds)
    rounds = rounds + 1
    # Look up the mod function for an easier way to do this
    if rounds &gt; 2:
        rounds = 1

def doThing1(rounds):
    if rounds == 1:
        print('A')
    elif rounds == 2:
        print('B')

def doThing2(rounds):
    if rounds == 1:
        print('a')
    elif rounds == 2:
        print('b')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ignoring the reason you have two separate functions (if you have one, you should put it in your question), you can do this using a single loop and the <code>itertools</code> module.</p>
<pre><code>import itertools
for c in itertools.cycle("AaBb"):
    print(c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're describing can be boiled down to a state machine. The machine has one variable, which we could call 'letter', so the machine has two states depending on whether this variable is 'A' or 'B' (you could also just make this a True/False boolean variable).  It also has two output variables, the uppercase letter followed by the lowercase one. After printing the current state, we alter the state and print again.</p>
<pre><code>letter = 'A'

while True:
  if letter == 'A':
    print('A')
    print('a')
    letter = 'B'
  else:
    print('B')
    print('b')
    letter = 'A'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know Python, but it would seem to be a good idea to define each loop instead as a function and call them sequentially in a single loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a infinite loop without a break or return statement. The best thing to do is to replace the while with a for rounds in range(3).</p>
<p>Replacing the rounds = 0 with a return statment will also work.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would do it like this:</p>
<pre><code>from itertools import cycle

cycler = cycle(zip((1, 1, 2, 2), 'AaBb'))

for round, letter in cycler:
    # infinite loop-body here
</code></pre>
<p>By using <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow"><code>itertools.cycle</code></a>, you maintain the original structure of your program. Every iteration of your loop corresponds to a round number and a letter, which you are distributing through tuple unpacking.</p>
</div>
<span class="comment-copy">If you're using While True loops you will run forever unless you have a break statement inside your loop to end it. Typically this will be done with some sort of logic. i.e. <code>if variable &gt; 2: Break</code> Breaks will take you up 1 level if you have nested loops. To break out of a nested loop completely in python there are some methods such as repeatedly Breaking or using return. Check out the answers below which seem to have captured a good solution.</span>
<span class="comment-copy">Is there a reason you are using two infinite loops in two separate functions? What you want is technically possible, but it requires a little work and an understanding of coroutines.</span>
<span class="comment-copy">when I use the the output is "A B a b..." and I need it to be "A a B b"</span>
<span class="comment-copy">Yeah, I looked back at your question and edited my answer. You just need to switch a and B like I have above.</span>
<span class="comment-copy">We had the same idea, nice :)</span>
<span class="comment-copy">that sounds great except I have no idea what that means.  I seriously don't know any of the programming lingo, aside from the words you actually type.  I could really use an example</span>
