<div class="post-text" itemprop="text">
<p>I need help deciphering the date number at the end of this url: view-source:<a href="http://finance.yahoo.com/q/op?s=XOM&amp;date=1434672000" rel="nofollow">http://finance.yahoo.com/q/op?s=XOM&amp;date=1434672000</a> -- it doesn't look like a proleptic Gregorian serial number, but in Yahoo it designates June 19, 2015. My goal is to write a Python code segment that will create a valid Yahoo date number from my input of yyyymmdd, so that I can generate a valid url for any stock ticker symbol (not just XOM) and option expiration date expressed as yyyymmdd. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>That's a UNIX timestamp -- the number of seconds since January 1, 1970.</p>
<pre><code>&gt;&gt;&gt; time.gmtime(1434672000)
time.struct_time(tm_year=2015, tm_mon=6, tm_mday=19, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=4, tm_yday=170, tm_isdst=0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/datetime.html#datetime.date.fromtimestamp" rel="nofollow">datetime.fromtimestamp</a> to convert the timestamp into a datetime object:</p>
<pre><code>from datetime import  datetime

url="http://finance.yahoo.com/q/op?s=XOM&amp;date=1434672000"

print(datetime.fromtimestamp(float(url.rsplit("=",1)[1])))
2015-06-19 01:00:00

print(datetime.fromtimestamp(float(url.rsplit("=",1)[1])).date())
2015-06-19
</code></pre>
<p>To create a timestamp using a date string use strptime to create a datetime object and then call <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp" rel="nofollow">.timestamp()</a>:</p>
<pre><code>dte = "2015-06-19"
print(datetime.strptime(dte,"%Y-%m-%d").timestamp())
</code></pre>
<p>Using <code>urllib.parse</code> is probably a nicer way to extract the date:</p>
<pre><code>from datetime import  datetime

url="http://finance.yahoo.com/q/op?s=XOM&amp;date=1434672000"

from urllib.parse import parse_qs

print(datetime.fromtimestamp(float(parse_qs(url)["date"][0])))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you; now I know how to go both ways with the timestamp (deciphering it, and creating it). Regarding creating it, I found out about the calendar module when I discovered the following code for creating a timestamp from a ddmmmyyyy string (I tested this code in the shell):</p>
<pre><code>#----------------- Create time stamp
import time
import datetime
import calendar

# oxdt stands for 'option expiration date'
oxdt_txt = '15may2015'
oxdt = datetime.datetime.strptime(oxdt_txt, '%d%b%Y')
print(oxdt_txt)
print(oxdt)
print(calendar.timegm(oxdt.utctimetuple()))
print()

oxdt_txt = '19jun2015'
oxdt = datetime.datetime.strptime(oxdt_txt, '%d%b%Y')
print(oxdt_txt)
print(oxdt)
print(calendar.timegm(oxdt.utctimetuple()))
#----------------- done
</code></pre>
</div>
<span class="comment-copy">Unix; thanks, I'll look it up. I'm a Python newbie, this helps.</span>
<span class="comment-copy">Thank you, that was fast. Mind posting an example of how to generate the correct timestamp, given yyyymmdd? Thanks.</span>
<span class="comment-copy">@steve123,  added it to the answer</span>
