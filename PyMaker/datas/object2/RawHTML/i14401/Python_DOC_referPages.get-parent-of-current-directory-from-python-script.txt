<div class="post-text" itemprop="text">
<p>I want to get the parent of current directory from Python script. For example I launch the script from <code>/home/kristina/desire-directory/scripts</code> the desire path in this case is <code>/home/kristina/desire-directory</code></p>
<p>I know <code>sys.path[0]</code> from <code>sys</code>. But I don't want to parse <code>sys.path[0]</code> resulting string. Is there any another way to get parent of current directory in Python?</p>
</div>
<div class="post-text" itemprop="text">
<h3>Using os.path</h3>
<p>To <em>get the parent directory of the directory containing the script</em> (regardless of the current working directory), you'll need to use <code>__file__</code>.</p>
<p>Inside the script use <a href="https://docs.python.org/3/library/os.path.html#os.path.abspath" rel="noreferrer"><code>os.path.abspath(__file__)</code></a> to obtain the absolute path of the script, and call <a href="https://docs.python.org/3/library/os.path.html#os.path.dirname" rel="noreferrer"><code>os.path.dirname</code></a> twice:</p>
<pre><code>from os.path import dirname, abspath
d = dirname(dirname(abspath(__file__))) # /home/kristina/desire-directory
</code></pre>
<p>Basically, you can walk up the directory tree by calling <code>os.path.dirname</code> as many times as needed. Example:</p>
<pre><code>In [4]: from os.path import dirname

In [5]: dirname('/home/kristina/desire-directory/scripts/script.py')
Out[5]: '/home/kristina/desire-directory/scripts'

In [6]: dirname(dirname('/home/kristina/desire-directory/scripts/script.py'))
Out[6]: '/home/kristina/desire-directory'
</code></pre>
<p>If you want to <em>get the parent directory of the current working directory</em>, use <a href="https://docs.python.org/3/library/os.html#os.getcwd" rel="noreferrer"><code>os.getcwd</code></a>:</p>
<pre><code>import os
d = os.path.dirname(os.getcwd())
</code></pre>
<h3>Using pathlib</h3>
<p>You could also use the <a href="https://docs.python.org/3/library/pathlib.html#module-pathlib" rel="noreferrer"><code>pathlib</code></a> module (available in Python 3.4 or newer).</p>
<p>Each <code>pathlib.Path</code> instance have the <code>parent</code> attribute referring to the parent directory, as well as the <code>parents</code> attribute, which is a list of ancestors of the path. <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve" rel="noreferrer"><code>Path.resolve</code></a> may be used to obtain the absolute path. It also resolves all symlinks, but you may use <code>Path.absolute</code> instead if that isn't a desired behaviour.</p>
<p><code>Path(__file__)</code> and <code>Path()</code> represent the script path and the current working directory respectively, therefore in order to <em>get the parent directory of the script directory</em> (regardless of the current working directory) you would use</p>
<pre><code>from pathlib import Path
# `path.parents[1]` is the same as `path.parent.parent`
d = Path(__file__).resolve().parents[1] # Path('/home/kristina/desire-directory')
</code></pre>
<p>and to <em>get the parent directory of the current working directory</em></p>
<pre><code>from pathlib import Path
d = Path().resolve().parent
</code></pre>
<p>Note that <code>d</code> is a <code>Path</code> instance, which isn't always handy. You can convert it to <code>str</code> easily when you need it:</p>
<pre><code>In [15]: str(d)
Out[15]: '/home/kristina/desire-directory'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This worked for me (I am on Ubuntu):</p>
<pre><code>import os
os.path.dirname(os.getcwd())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
current_file = os.path.abspath(os.path.dirname(__file__))
parent_of_parent_dir = os.path.join(current_file, '../../')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>Path.parent</code> from the <code>pathlib</code> module:</p>
<pre><code>from pathlib import Path

# ...

Path(__file__).parent
</code></pre>
<p>You can use multiple calls to <code>parent</code> to go further in the path:</p>
<pre><code>Path(__file__).parent.parent
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from os.path import dirname
from os.path import abspath

def get_file_parent_dir_path():
    """return the path of the parent directory of current file's directory """
    current_dir_path = dirname(abspath(__file__))
    path_sep = os.path.sep
    components = current_dir_path.split(path_sep)
    return path_sep.join(components[:-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>'..'</code> returns parent of current directory.</p>
<pre><code>import os
os.chdir('..')
</code></pre>
<p>Now your current directory will be <code>/home/kristina/desire-directory</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use<code>../your_script_name.py</code>
For example suppose the path to your python script is <code>trading system/trading strategies/ts1.py</code>. To refer to <code>volume.csv</code> located in <code>trading system/data/</code>. You simply need to refer to it as <code>../data/volume.csv</code></p>
</div>
<span class="comment-copy">Thanks! It works!</span>
<span class="comment-copy"><code>Path(__file__).resolve().parent</code> -&gt; <code>Path(".").resolve()</code>. This also works when there isn't a <code>__file__</code> because you started in the interactive interpreter.</span>
<span class="comment-copy">if script is in <code>/scripts</code> folder, like` /home/kristina/desire-directory/scripts/myScript.py` the first solution will not return the desired directory, it will return <code>/scripts</code> instead</span>
<span class="comment-copy">@LetsPlayYahtzee: thanks, I revised my answer</span>
<span class="comment-copy">all others <code>os.blabla</code> isn't work for me but this solution. Many many thanks!</span>
