<div class="post-text" itemprop="text">
<p>If I have a dictionary, how can I take the keys, and allow a user to make unlimited versions of it with different values for each key? </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>my_keys = ["Hello", "World"]
my_values1 = ["Why", "that"]

my_dict1 = dict(zip(my_keys, my_values1))

my_dict2 = dict.fromkeys(my_dict1.keys())
</code></pre>
<p>Variant 1 allows simple construction of any dict from both: a list of keys and values, while my_dict2 presents a varaint to create an "empty" (all values are <code>None</code> dict from an existing. You can also mix both (I leave that as an exercise;-).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys" rel="nofollow"><code>dict.fromkeys()</code></a> method:</p>
<pre><code>def copy_keys(your_dict=None):
    if your_dict != None:
        return dict.fromkeys(your_dict.keys())
    else:
        return dict()
</code></pre>
<p> </p>
<pre><code>blah = dict((('blah',1),('haha',2)))
&gt;&gt;&gt;blah
{'blah': 1, 'haha': 2}
</code></pre>
<p> </p>
<pre><code>&gt;&gt;&gt; copy_keys(blah)
{'blah': None, 'haha': None}
</code></pre>
<p>My example function initalizes the values as <code>None</code> but you can easily adapt it to insert your own values by passing the <code>value</code> parameter to the <code>.fromkeys(seq[,value])</code> method.</p>
</div>
<span class="comment-copy">This is surely an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a> if I've ever seen one</span>
<span class="comment-copy">sorry everyone, hopefully I have made my question better :)</span>
<span class="comment-copy">I bet <code>dict.copy</code> would be useful here.</span>
<span class="comment-copy">If it has different values, why call it a copy? Where do the values come from? <i>"There would be no limit on the amount of dictionary copies the user could make"</i> - subject to RAM, presumably...</span>
<span class="comment-copy">Removed some cruft. Shortened the lengthy title a bit. clarified language a little.</span>
<span class="comment-copy">Why would you use an interator in-between? keys already returns a view object.</span>
<span class="comment-copy">Good point. Accidentally left that in there from debugging.</span>
