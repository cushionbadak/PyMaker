<div class="post-text" itemprop="text">
<p>I have a list of strings, some which happen to be None:</p>
<pre><code>headers = ['Name', None, 'HW1', 'HW2', None, 'HW4', 'EX1', None, None]
</code></pre>
<p>Now I would like to iterate over this list, but skip the None entries.  For instance, something like this would be nice:</p>
<pre><code>for header in headers if header: print(header)
</code></pre>
<p>But this doesn't work.  There are two ways I could get this to work, but I don't like either method:</p>
<pre><code>for header in (item for item in headers if item): print(header)
</code></pre>
<p>and</p>
<pre><code>for header in headers:
    if header: print(header)
</code></pre>
<p>I just was curious if there was a better way.  I feel like ignoring None's should be quite fundamental.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>headers = ['Name', None, 'HW1', 'HW2', None, 'HW4', 'EX1', None, None]
for header in filter(None, headers):
    print header
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="noreferrer"><code>filter</code></a>:</p>
<pre><code>headers = filter(None, headers)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can filter out the <code>Nones</code> with a simple list comprehension:</p>
<pre><code>headers = [header for header in headers if header]
</code></pre>
<p>Then call your code:</p>
<pre><code>for header in headers:
    print(header)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get rid of the <code>None</code> items with a list comprehension:</p>
<pre><code>headers = [item for item in headers if item is not None]
for item in header:
    print item
</code></pre>
</div>
<span class="comment-copy">Take care as this is not iterating of things that are not <code>None</code>, as the documentation says "If function is None, the identity function is assumed, that is, all elements of iterable that are false are removed.". Which is equivalent to <code>[x for x in headers if x]</code> which is different from <code>[x for x in headers if x is not None]</code>.  What you want here is probably something like: <code>filter(lambda x: x is not None, headers)</code>, or even the comprehension.  This may not change much in many cases, but if you deal with numbers, all 0 would be removed. In your case, all empty headers <code>""</code> would be removed.</span>
<span class="comment-copy">Thanks! I think this is what I was looking for.</span>
