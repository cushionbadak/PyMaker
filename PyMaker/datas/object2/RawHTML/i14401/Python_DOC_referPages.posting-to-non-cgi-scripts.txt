<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler" rel="nofollow">http.server documentation</a> BaseHTTPRequestHandler can handle POST requests.</p>
<blockquote>
<p>class http.server.BaseHTTPRequestHandler(request, client_address,
  server)¶ This class is used to handle the HTTP requests that arrive at
  the server. By itself, it cannot respond to any actual HTTP requests;
  it must be subclassed to handle each request method (e.g. GET or
  <strong>POST</strong>). BaseHTTPRequestHandler provides a number of class and instance variables, and methods for use by subclasses.</p>
</blockquote>
<p>However, down below it says:</p>
<blockquote>
<p>do_POST() This method serves the 'POST' request type, only allowed for
  CGI scripts. Error 501, “Can only POST to CGI scripts”, is output when
  trying to POST to a non-CGI url.</p>
</blockquote>
<p>What does this part of the documentation mean? Isn't that contradicting itself or am I misunderstanding something?</p>
<p>EDIT: To clarify, the following method I tried seems to work, I'd just like to know what the documentation of do_POST means.</p>
<pre><code>from os import curdir
from os.path import join as pjoin
import requests

from http.server import BaseHTTPRequestHandler, HTTPServer

port = 18888

class StoreHandler(BaseHTTPRequestHandler):
    store_path = pjoin(curdir, 'store.json')

    def do_POST(self):
        if self.path == '/store.json':
            print("Got a connection from", self.client_address)
            length = self.headers['content-length']
            data = self.rfile.read(int(length))
            print(data)                                        
            with open(self.store_path, 'w') as fh:
                fh.write(data.decode())

            self.send_response(200)
            self.end_headers()

server = HTTPServer(('localhost', port), StoreHandler)
server.serve_forever()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>CGIHTTPRequestHandler IS a subclass of SimpleHTTPRequestHandler, which is a subclass of BaseHTTPRequestHandler (I found this out by looking at the source code for <a href="http://www.opensource.apple.com/source/python/python-3/python/Lib/SimpleHTTPServer.py" rel="nofollow">SimpleHTTPServer.py</a> and <a href="http://www.opensource.apple.com/source/python/python-3/python/Lib/CGIHTTPServer.py" rel="nofollow">CGIHTTPServer.py</a>). This part below:</p>
<blockquote>
<p>do_POST() This method serves the 'POST' request type, only allowed for CGI scripts. Error 501, “Can only POST to CGI scripts”, is output when trying to POST to a non-CGI url.</p>
</blockquote>
<p>Refers to CGIHTTPRequestHandler, not BaseHTTPRequestHandler! See:</p>
<ul>
<li><a href="https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler" rel="nofollow">http.server.BaseHTTPRequestHandler</a></li>
<li><a href="https://docs.python.org/3/library/http.server.html#http.server.CGIHTTPRequestHandler" rel="nofollow">CGIHTTPRequestHandler</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>do_POST()</code> as documented is a method of <code>CGIHTTPRequestHandler</code>. Its default behavior does not affect <code>BaseHTTPRequestHandler</code> in any way.</p>
</div>
<span class="comment-copy">That makes a lot of sense, thank you.</span>
