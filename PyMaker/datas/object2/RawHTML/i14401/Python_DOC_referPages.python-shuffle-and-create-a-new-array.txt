<div class="post-text" itemprop="text">
<p>I want to shuffle an array, but all I find was method like <code>random.shuffle(x)</code>, from <a href="https://stackoverflow.com/questions/1022141/best-way-to-randomize-a-list-of-strings-in-python">Best way to randomize a list of strings in Python</a></p>
<p>Can I do something like</p>
<pre><code>import random
rectangle = [(0,0),(0,1),(1,1),(1,0)]
# I want something like
# disorderd_rectangle = rectangle.shuffle
</code></pre>
<p>Now I can only get away with</p>
<pre><code>disorderd_rectangle = rectangle
random.shuffle(disorderd_rectangle)
print(disorderd_rectangle)
print(rectangle)
</code></pre>
<p>But it returns </p>
<pre><code>[(1, 1), (1, 0), (0, 1), (0, 0)]
[(1, 1), (1, 0), (0, 1), (0, 0)]
</code></pre>
<p>So the <code>original array</code> is also changed. How can I just create another shuffled <code>array</code> without changing the original one?</p>
</div>
<div class="post-text" itemprop="text">
<p>People here are advising deepcopy, which is surely an overkill. You probably don't mind the objects in your list being same, you just want to shuffle their order. For that, list provides shallow copying directly.</p>
<pre><code>rectangle2 = rectangle.copy()
random.shuffle(rectangle2)
</code></pre>
<p>About your misconception: please read <a href="http://nedbatchelder.com/text/names.html#no_copies">http://nedbatchelder.com/text/names.html#no_copies</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow"><code>copy.deepcopy</code></a> to create a copy of the array, shuffle the copy.</p>
<pre><code>c = copy.deepcopy(rectangle)
random.shuffle(c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have a look : <a href="https://stackoverflow.com/questions/8056130/immutable-vs-mutable-types-python">Immutable vs Mutable types</a>. This is the reason behind why you need an extra function to create copy of the list</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to make a copy of the list, by default python only creates pointers to the same object when you write:</p>
<pre><code>disorderd_rectangle = rectangle
</code></pre>
<p>But instead use this or the copy method mentioned by Veky. </p>
<pre><code>disorderd_rectangle = rectangle[:]
</code></pre>
<p>It will make a copy of the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a slice to make a shallow copy, then shuffle the copy:</p>
<pre><code>&gt;&gt;&gt; rect = [(0,0),(0,1),(1,1),(1,0)]
&gt;&gt;&gt; sh_rect=rect[:]
&gt;&gt;&gt; random.shuffle(sh_rect)
&gt;&gt;&gt; sh_rect
[(0, 1), (1, 0), (1, 1), (0, 0)]
&gt;&gt;&gt; rect
[(0, 0), (0, 1), (1, 1), (1, 0)]
</code></pre>
</div>
<span class="comment-copy">Here are several ways from a similar question: <a href="https://stackoverflow.com/a/17649901/911945">stackoverflow.com/a/17649901/911945</a></span>
<span class="comment-copy">Upvote only because you called a list a list whereas others are still calling it an array</span>
<span class="comment-copy">LOL. Better for that than for nothing. But seriously, this shows deep misunderstanding of Python's object model. arrays are contiguous in memory, so people will naturally want deepcopy. To us who know how things work, lists are only "skin-deep contiguous", so natural copy is enough.</span>
<span class="comment-copy">So there is nothing like <code>.shuffle</code> method?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> shuffles 'the sequence x in place'. If you want to shuffle a copy, make a copy. Just assigning a new name does not create a copy.</span>
<span class="comment-copy">We ask that answers not simply link to a solution/explanation, because the link could stop working. Could you edit your answer to include a summary/explanation of the information at the linked article?</span>
