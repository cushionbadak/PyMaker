<div class="post-text" itemprop="text">
<p>The protocol for a device I'm working with sends a UDP packet to a server (My Python program, using twisted for networking) in a comma separated ASCII format. In order to acknowledge that my application received the packet correctly, I have to take a couple of values from the header of that packet, convert them to binary and send them back. I have everything setup, though I can't seem to figure out the binary part. </p>
<p>I've been going through a lot of stuff and I'm still confused. The documentation says "binary" though it looks more like hexadecimal because it says the ACK packet has to start with "0xFE 0x02". </p>
<p>The format of the acknowledgement requires me to send "0xFE 0x02" + an 8 unsigned integer (IMEI number, 15 digits) + 2 byte unsigned integer (Sequence ID)</p>
<p>How would I go about converting the ASCII text values that I have into "binary"?</p>
</div>
<div class="post-text" itemprop="text">
<p>First:</p>
<blockquote>
<p>The documentation says "binary" though it looks more like hexadecimal because it says the ACK packet has to start with "0xFE 0x02".</p>
</blockquote>
<p>Well, it's impossible print actual binary data in a human-readable form, so documentation will usually either give a sequence of hexadecimal bytes. They could use a <code>bytes</code> literal like <code>b'\xFE\x02'</code> or something instead, but that's still effectively hexadecimal to the human reader, right?</p>
<p>So, if they say "binary", they probably mean "binary", and the hex is just how they're showing you what binary bytes you need.</p>
<hr/>
<p>So, you need to convert the ASCII representation of a number into an actual number, which you do with the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int</code></a> function. Then you need to <code>pack</code> that into 8 bytes, which you do with the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow"><code>struct</code></a> module.</p>
<p>You didn't mention whether you needed big-endian or little-endian. Since this sounds like a network protocol, and it sounds like it wasn't designed by Microsoft, I would <em>guess</em> big-endian, but you should actually know, not guess.</p>
<p>So:</p>
<pre><code>imei_string = '1234567890123456789'
imei_number = int(imei_string) # 1234567890123456789
imei_bytes = struct.pack('&gt;Q', imei_number) # b'\x11\x22\x10\xf4\x7d\xe9\x81\x15'
buf = b'\xFE\x02' + imei_bytes + seq_bytes
</code></pre>
<p>(You didn't say where you're supposed to get the sequence number from, but wherever it comes from, you'll <code>pack</code> it the same way, just using <code>&gt;H</code> instead of <code>&gt;Q</code>.)</p>
<hr/>
<p>If you actually <em>did</em> need a hex string rather than binary, you'd need to know exactly what format. The <a href="https://docs.python.org/3/library/binascii.html#binascii.b2a_hex" rel="nofollow"><code>binascii.hexlify</code></a> function gives you "bare hex", two characters per byte, no <code>0x</code> or other header or footer. If you want something different, well, it depends on what exactly you want; no format is really that hard. But, again, I'm pretty sure you don't need a hex string here.</p>
<hr/>
<p>One last thing: Since you didn't specify your Python version, I wrote this in a way that's compatible with both 2.6+ and 3.0+; if you need to use 2.5 or earlier, just drop the <code>b</code> prefix on the literal in the <code>buf =</code> line.</p>
</div>
<span class="comment-copy">Does <a href="http://stackoverflow.com/questions/7396849/convert-binary-to-ascii-and-vice-versa-python">this</a> help?</span>
<span class="comment-copy">please show your code what you have tried so far?</span>
<span class="comment-copy">This worked! I really appreciate that you clarified the part about hex/binary in the beginning, too!</span>
