<div class="post-text" itemprop="text">
<p>My current requirement is to write a script in <code>Python 2.4.3</code> which comes bundled wit RHEL 5 . But few years down the line say 5 yrs ,the server may be upgraded to RHEL 8 or 9 which comes with <code>Python 3</code>. So I am supposed to write the code which is compatible with both version. Now my scripts contain basic operations such as creating directories, unzipping files, file manipulations, XML file reading ( which I am doing now with <code>minidom</code> ) and some hashing. </p>
<p>Now I found out that a tool called <code>python-modernize</code> does the work which is built on top of <code>2to3</code>. I searched for the tool but I got a tar.gz file . It does not contain a python-modernize file as they say it in its usage. But all I found was a <code>setup.py</code> file. I am new to Python and all I know is that something is done with <code>pip</code>. But I also read that using pip is a tough work for Python 2.4.3 . </p>
<p>Please tell me how I can get the job done.</p>
<p>I also referred <a href="https://stackoverflow.com/questions/22481718/porting-a-python-2-x-based-project-to-python-3">this</a> but couldn't find how to use the tool.</p>
<p>Also please let me know if there are any good alternative to this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://pypi.python.org/pypi/six" rel="nofollow"><code>six</code></a> libary from Benjamin Peterson.</p>
<p>It was specifically designed for this very use-case.
It allows you to have a single codebase that supports both Python 2 and Python 3 by importing the things that are different from 2 to 3 from the six library.</p>
<p>Just simply import it and use it's definitions:</p>
<pre><code>import six
</code></pre>
<p><strong>Example:</strong></p>
<pre><code>from six import u, b
</code></pre>
<p>The above are classic where Python 3+ introduced stricter changes to the way Unicode Strings and Bytes work.</p>
<blockquote>
<p>Six is a Python 2 and 3 compatibility library. It provides utility
  functions for smoothing over the differences between the Python
  versions with the goal of writing Python code that is compatible on
  both Python versions. See the documentation for more information on
  what is provided.</p>
<p>Six supports every Python version since 2.5. It is contained in only
  one Python file, so it can be easily copied into your project. (The
  copyright and license notice must be retained.)</p>
</blockquote>
<p><strong>Update:</strong> Sorry I missed the <code>Python&lt;=2.5</code> requirement there; but honestly I think using six is your best option. YOu'll have to convince the powers that be that you <strong>have</strong> to use a minimum of Python 2.5.</p>
<p><strong>Update #2:</strong> My strongest recommendation is to upgrade your code to Python 2.7 as a minimum already. Don't get left behind or you'll always be behind the ball!</p>
<p><strong>Update #3:</strong> As per the above very helpful comments; I agree. Just work with what you've got right now. 5 years is indeed a long time and those same restrictions may not be in place by then!</p>
</div>
<span class="comment-copy">See <a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow noreferrer">docs.python.org/3/howto/pyporting.html</a>. This also recommends <b>moving to Python 2.7</b> - there are many more incompatibilities if you have to continue support for 2.4.3 (which isn't even the latest on the 2.4 branch; see <a href="https://www.python.org/download/releases/2.4.3/" rel="nofollow noreferrer">python.org/download/releases/2.4.3</a>).</span>
<span class="comment-copy">@jonrsharpe The RHEL in the server will not be updated until 5 yrs from now. I tried convincing the higher people to update Python, but in vain :| I tried asking them to install python 3 but they ask for a rpm file :(</span>
<span class="comment-copy">See e.g. <a href="https://blog.serverdensity.com/updating-python-on-rhelcentos/" rel="nofollow noreferrer">blog.serverdensity.com/updating-python-on-rhelcentos</a> Alternatively, just give up, write working code now and worry about Py3 porting when (and if) the upgrade actually happens; 5 years is a <b>long</b> time away!</span>
<span class="comment-copy">+1 zillion to @jonrsharpe on this - write the code with the constraints you've got.  Five years is an eternity in IT years.  There's a good chance you won't be using this script 5 years from now. :-D</span>
<span class="comment-copy">@jonrsharpe Nice read ! But the guys wont install any open source rpm's as well. Guess I have to go along with what I've got.</span>
<span class="comment-copy"><i>"Six supports every Python version since 2.5"</i> The OP is targeting 2.4.3 as one of their versions.</span>
<span class="comment-copy">@Cyber Good point; I'm not sure there is a <i>good</i> solution for Python &lt; 2.5; Even circuits dropped support for 2.5 a few years ago :) <i>sigh</i></span>
<span class="comment-copy">@JamesMills I tried convincing the server guys to upgrade but they will not until the next 5 years. Also tried asking them to install python 3 but they ask for a rpm file. Guess I don't have any option left. Any other options ?</span>
<span class="comment-copy">@ViChU I'm afraid not really. That kind of attitude towards software systems is IHMO archaic, error prone and full of maintenance nightmares. I'm not sure of any options that will satisfy your needs :/</span>
