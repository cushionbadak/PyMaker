<div class="post-text" itemprop="text">
<p>I have some questions about inheriting thread class.</p>
<pre><code>class MyThread(threading.Thread):
  def __init__(self, num):
    threading.Thread.__init__(self)
    self.num = num

  def run(self):
    print("Thread", self.num)
    time.sleep(1)
</code></pre>
<p>why can't I only override the run method? 
The Python document of <a href="https://docs.python.org/3.6/library/threading.html" rel="nofollow noreferrer">threading</a> mention that <strong><em>"The Thread class represents an activity that is run in a separate thread of control. There are two ways to specify the activity: by passing a callable object to the constructor, or by overriding the run() method in a subclass."</em></strong></p>
<p>Why does the above example code override the constructor also?</p>
</div>
<div class="post-text" itemprop="text">
<p>The constructor is overridden to pass the <code>num</code> parameter from the place where instance of <code>MyThread</code> is created to the <code>run</code> method. </p>
<p>Note that you do not call <code>run</code> method directly so you can't pass any parameters to it unless you store them in constructor.</p>
<p>If you don't need to pass parameters you can override only <code>run</code> method.</p>
</div>
<span class="comment-copy">What is the source of the code you have posted?</span>
<span class="comment-copy">Because you typically need to pass the data to work on to <code>run()</code> somehow? And doing it explicitly via constructor and class fields is the simplest way to do it.</span>
