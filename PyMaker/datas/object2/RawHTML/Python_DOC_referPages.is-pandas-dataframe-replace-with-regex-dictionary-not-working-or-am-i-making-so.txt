<div class="post-text" itemprop="text">
<p>With pandas 0.19.2 python 3.6.0 DataFrame.replace with a dictionary acts on substrings (like "find"), and so does Series.replace. Pandas 0.24.0 python 3.6.8 seems to act on the entire string (like "match") for DataFrames, and still act on substrings for Series (like "find").</p>
<pre><code>df = pd.DataFrame({'c1':['AD','BD'],'c2':['AD','BD']})
print(df)
print(df.replace(to_replace={'c1':{r'D': ''}, 'c2':{r'BD': ''}},regex=True))
print(df.replace(to_replace={r'D': ''},regex=True))
print(df['c1'].replace(to_replace=r'D', value='',regex=True))
</code></pre>
<p>Pandas 0.19.2 produces (I added some blank lines for legibility):</p>
<pre><code>   c1  c2
0  AD  AD
1  BD  BD

  c1  c2
0  A  AD
1  B    

  c1 c2
0  A  A
1  B  B

0    A
1    B
Name: c1, dtype: object
</code></pre>
<p>With Pandas 0.24.0:</p>
<pre><code>   c1  c2
0  AD  AD
1  BD  BD

   c1  c2
0  AD  AD
1  BD    

   c1  c2
0  AD  AD
1  BD  BD

0    A
1    B
Name: c1, dtype: object
</code></pre>
<p>Looks like a pandas bug to me, or am I missing something?</p>
</div>
<div class="post-text" itemprop="text">
<p>The bug is listed among the <a href="https://pandas.pydata.org/pandas-docs/stable/whatsnew/v0.24.2.html#fixed-regressions" rel="nofollow noreferrer">Fixed regressions for Pandas 0.24.2</a>:</p>
<blockquote>
<p>Fixed regression in <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace" rel="nofollow noreferrer">DataFrame.replace()</a> where <code>regex=True</code> was only replacing patterns matching the start of the string (GH25259)</p>
</blockquote>
<p>As you see, only</p>
<pre><code>print(df.replace(to_replace={'c1':{r'D': ''}, 'c2':{r'BD': ''}},regex=True))
print(df.replace(to_replace={r'D': ''},regex=True))
</code></pre>
<p>did not work correctly. Now, the issue is fixed.</p>
</div>
<span class="comment-copy">Its reported <a href="https://github.com/pandas-dev/pandas/issues/20656" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">Vaishali, the thread you link is concerning a somewhat different issue, though it's clearly related. As you can see my example does not use integers at all, which is what the linked issue is about. This issue here is about regex now matching the whole string ("match") vs matching a substring ("find"). All this is for strings, no integers involved.</span>
<span class="comment-copy">Thanks Wiktor, indeed verified as fixed.</span>
