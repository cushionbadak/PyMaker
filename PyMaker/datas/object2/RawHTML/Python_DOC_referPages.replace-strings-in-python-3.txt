<div class="post-text" itemprop="text">
<p>I'm trying to replace a string in python like this:</p>
<pre><code>        private_ips.replace("{",'') 
</code></pre>
<p>The error I get back is this:</p>
<pre><code>Traceback (most recent call last):
  File ".\aws_ec2_list_instances.py", line 39, in &lt;module&gt;
    private_ips.replace("{",'')
AttributeError: 'set' object has no attribute 'replace'
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>private_ips</code> is <code>set</code> object. You can use replace only on strings.</p>
<p>To represent set as string take this code snippet:</p>
<pre><code>private_ips_as_string = '{' + ', '.join(str(elem) for elem in private_ips) + '}'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's back up a little ...</p>
<pre><code>tree = objectpath.Tree(instance) 
private_ips = set(tree.execute('$..PrivateIpAddress'))
</code></pre>
<p>Your initial problem is that you <em>specifically</em> converted the return value into a set.  If you don't want a set, then don't convert it to one, or convert it back to something more useful to you.  Since you've failed to provide a <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a>, we can't fix everything, but I'll use an intuitive leap here ...</p>
<ul>
<li><code>tree.execute</code> returns a list of IP addresses.</li>
<li>You're using <code>set</code> to remove duplicate addresses in a list.</li>
</ul>
<p>If so, you're fine up to this point.  To get the address as a string, I think you want to iterate through the items in the set:</p>
<pre><code>for ip_addr in private_ips:
    # Handle ip_addr, a single IP address seen as a str.
</code></pre>
<p>If you need the addresses lined up, you can always convert back to a list with</p>
<pre><code>private_ips = list(private_ips)
</code></pre>
<p>... and if you <em>know</em> there is exactly one addr that you want as a string, you can grab it in one step with</p>
<pre><code>single_ip = list(private_ips)[0]
</code></pre>
<p>... or just grab it directly from your function's return value:</p>
<pre><code>single_ip = tree.execute('$..PrivateIpAddress')[0]
</code></pre>
<hr/>
<p>To explain what <em>did</em> happen to you:</p>
<ul>
<li>You called a function that return a sequence of some sort.</li>
<li>You converted that sequence to a set, a common technique for removing duplicates.</li>
<li>You tried to remove braces from the set, as if it were a string.</li>
</ul>
<p>The problem is that a set <em>does not have braces</em>.  Those braces are a notational convenience; they exist <em>only</em> in the <code>__repr__</code> (output string representation) of the data type, not in the set itself.  You <em>cannot</em> manipulate that representation.  This would be something like trying to remove the up-vote and down-vote arrows from this question by editing the question text: you can't do it, because those are part of the delivery framework.</p>
<p>Similarly, you cannot remove the quotation marks from the ends of a string, because they're not part of the string.</p>
<p>To get rid of the braces, you quit using a <code>set</code>: reach inside and pull out the contents as an individual element.</p>
</div>
<span class="comment-copy">It is a <code>set</code> object and not an <code>str</code> :) Check what is <code>private_ips</code> ? <code>type(private_ips)</code> ?</span>
<span class="comment-copy">Ah ok. Got it. Derp! :) How can I replace text in a set object?</span>
<span class="comment-copy">You'd have to show some <code>input</code>s</span>
<span class="comment-copy">Ok sorry. I'm getting the IPs of aws instances using object path like this: `            tree = objectpath.Tree(instance)             private_ips =  set(tree.execute('$..PrivateIpAddress'))` the output looks like this: <code>{'10.48.136.41'}</code> and I want to replace '{' and '}'. Thanks</span>
<span class="comment-copy"><code>private_ips = set(tree.execute('$..PrivateIpAddress')).pop()</code> will return one element from the set. And since it looks like you have only one, that will do, i guess</span>
<span class="comment-copy">So how would someone represent a <code>set</code> as a <code>str</code>?</span>
<span class="comment-copy">This is comment-level, not a good fit for an "answer".</span>
<span class="comment-copy">@Prune okay, I'll take that in mind for future.</span>
<span class="comment-copy">Ok that makes sense. Thanks.</span>
