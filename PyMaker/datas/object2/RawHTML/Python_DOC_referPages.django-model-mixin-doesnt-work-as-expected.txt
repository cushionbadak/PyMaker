<div class="post-text" itemprop="text">
<p>In <code>PipedriveSync</code> model I use <code>GenericForeignKey</code> so any model can have <code>PipedriveSync</code> object related.</p>
<pre><code>class PipedriveSync(TimeStampedModel):
    ...
    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey('content_type', 'object_id')
</code></pre>
<p>And I use <code>GenericRelation</code> to be able to reference backwards this object. For example <code>user.pipedrivesyncs.all()</code></p>
<p>Take a look at <code>User</code></p>
<pre><code>class User(AbstractUser):
    pipedrivesyncs = GenericRelation('pipedrive.PipedriveSync')
</code></pre>
<p>Since I have to specify the same <code>pipedrivesyncs</code> for many models, I decided to create a mixin for that (there are couple of methods there too but it doesn't matter now).</p>
<pre><code>class PipedriveSyncRelatedMixin():
    pipedrivesyncs = GenericRelation('pipedrive.PipedriveSync')
</code></pre>
<p>And I use it this way</p>
<pre><code>class User(PipedriveSyncRelatedMixin,AbstractUser):
    pass
</code></pre>
<p>The problem is that this <code>Mixin</code> doesn't work the way it works when I specify pipedrivesyncs manually.</p>
<p>Case of specifying <code>pipedrivesyncs</code> manually:</p>
<pre><code>&gt; u = User.objects.first()
&gt; u.pipedrivesyncs.first()
&gt; &lt;PipedriveSync: PipedriveSync object (20)&gt;
</code></pre>
<p>Case when using <code>Mixin</code></p>
<pre><code>&gt; u = User.objects.first()
&gt; u.pipedrivesyncs.first()
&gt; AttributeError: 'GenericRelation' object has no attribute 'first'
</code></pre>
<p>Where is the difference and can I use <code>Mixin</code> for this purpose?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your mixin has to be abstract and heritance should come from models.Model i think.</p>
<pre><code>class PipedriveSyncRelatedMixin(models.Model):
    pipedrivesyncs = GenericRelation('pipedrive.PipedriveSync')

    class Meta:
        abstract = True
</code></pre>
</div>
<span class="comment-copy">Did you run <code>makemigrations</code>?</span>
<span class="comment-copy">Interesting. Did you make PipedriveSyncRelatedMixin an abstract model?</span>
<span class="comment-copy">@DanielRoseman It works with Mixin as abstract model. <a href="http://qaru.site/questions/821978/django-genericrelation-in-model-mixin" rel="nofollow noreferrer" title="django genericrelation in model mixin">qaru.site/questions/821978/â€¦</a> Thanks</span>
