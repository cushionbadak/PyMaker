<div class="post-text" itemprop="text">
<p>I am using <code>subprocess.call</code> in order to execute another python file. Considering that the script that will be called will never terminate the execution as it's inside an infinite loop, how can I make it possible for the original script to continue the execution after the subprocess call ?</p>
<p>Example: 
I have script1.py which does some calculations and then calls script2.py using <code>subprocess.call(["python", "script2.py"])</code>, since it's inside an infinite loop the script1 gets stuck on execution, is there another way to run the file other than using subprocess module ?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>subprocess.call(["python", "script2.py"])</code> waits for the sub-process to finish.</p>
<p>Just use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer"><code>Popen</code></a> instead:</p>
<pre><code>proc = subprocess.Popen(["python", "script2.py"])
</code></pre>
<p>You can later do <code>proc.poll()</code> to see whether it is finished or not, or <code>proc.wait()</code> to wait for it to finish (as <code>call</code> does), or just forget about it and do other things instead.</p>
<p>BTW, you might want to ensure that the same <code>python</code> is called, and that the OS can find it, by using <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow noreferrer"><code>sys.executable</code></a> instead of just <code>"python"</code>:</p>
<pre><code>subprocess.Popen([sys.executable, "script2.py"])
</code></pre>
</div>
<span class="comment-copy">Can you just shove the response in a future or on a second thread or something like that and forget about it?</span>
<span class="comment-copy">There is no need to use <code>subprocess</code> for this. Have <code>script1.py</code> import <code>script2</code> and call its main function.</span>
<span class="comment-copy">Thanks! It worked</span>
