<div class="post-text" itemprop="text">
<p>This functions writes a CSV:</p>
<pre><code>def onNewData(self, data):  
    zvalues = []
    csv = open("data.csv","w+")
    columnTitleRow = " ValuesofX , ValuesofY , ValuesofZ \n"
    csv.write(columnTitleRow)
    for i in range(data.getNumPoints()):
        zvalues.append(data.getZ(i))
        csv.write((str(data.getX(i))+',')+(str(data.getY(i))+',') + (str(data.getZ(i))+','))   
        csv.write('\n') 
    csv.close()  
    zarray = np.asarray(zvalues)
    p = zarray.reshape (-1, data.width)        
    self.queue.put(p)
</code></pre>
<p>I use this to read my CSV:</p>
<pre><code># reading data
  import pandas as pd
  import numpy as np 

  bolts_data = pd.read_csv("data.csv")
  print(bolts_data)
</code></pre>
<p>This is the code that I have written to save the data directly into a CSV file. However when I run a new program to read the CSV file, the data shown is misaligned from the header. This error can be shown in the first picture below. The ideal output that I wish to see is the second picture shown below. Is there any possible solution to fix the misalignment? </p>
<p>Misaligned from the header
<a href="https://i.stack.imgur.com/0B5dN.png" rel="nofollow noreferrer"><img alt="Misaligned from the header" src="https://i.stack.imgur.com/0B5dN.png"/></a></p>
<p>This is the output that I wish to see
<a href="https://i.stack.imgur.com/gy63H.png" rel="nofollow noreferrer"><img alt="This is the output that i wish to see" src="https://i.stack.imgur.com/gy63H.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>There is a Problem in your definition. It generates an extra Column</p>
<blockquote>
<p>Code Modification : You do not need comma after <strong>ValuesofZ</strong></p>
</blockquote>
<pre><code>def onNewData(self, data):  
    zvalues = []
    csv = open("data.csv","w+")
    columnTitleRow = " ValuesofX , ValuesofY , ValuesofZ \n"
    csv.write(columnTitleRow)
    for i in range(data.getNumPoints()):
        zvalues.append(data.getZ(i))
        csv.write((str(data.getX(i))+',')+(str(data.getY(i))+',') + (str(data.getZ(i))))    #Here  
        csv.write('\n') 
    csv.close()  
    zarray = np.asarray(zvalues)
    p = zarray.reshape (-1, data.width)        
    self.queue.put(p)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe if you use <code>index_col=False</code> in your <code>read_csv</code> call, it will fix this issue.</p>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> to read and write CSV files.  It will handle all of the necessary encoding/decoding of CSV fields.</span>
<span class="comment-copy">What is the contents of data and how do you read it back?</span>
<span class="comment-copy">@TomKarzes That or <code>Pandas</code> if you're into data analysis and stuff.</span>
<span class="comment-copy">i read the contents of the data using the panda function.</span>
<span class="comment-copy">I would suggest if dumping data directly to csv is not too important, then make pandas  DataFrame and save it using pandas.to_csv with index=False and then try to read it back.</span>
<span class="comment-copy">Your answer is correct, but I think my answer might also work - hopefully OP will let us know!</span>
<span class="comment-copy">@JoshFriedlander there is no such argument in pandas.read_csv as index. you can specify whether to keep index or not while saving using pandas.to_csv() which is never used here.  <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/â€¦</a></span>
<span class="comment-copy">I meant <code>index_col</code> - corrected it in my answer</span>
<span class="comment-copy">Thanks you so much @Hima, your reply helped me alot</span>
<span class="comment-copy">@Sarah If you think the answer posted gave the expected results, you can mark it as answer to your query.</span>
