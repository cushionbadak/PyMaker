<div class="post-text" itemprop="text">
<p>I need assistance with my code. it basically takes an input and then prints the string with the alternate char being upper case.</p>
<p>I need a way to collect all chars into one variable</p>
<pre><code>newString = input("Please enter a word ")
output = newString 
letters =len(output)
b = 0

while b &lt; letters:
if b%2 == 0:
    printonelower=output[b].lower()
else:
    printoneupper=output[b].upper()
b = b+1


print(output)
print(letters)
print(printonelower + printoneupper)'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understood correctly you would want something like:</p>
<pre><code>letters = "hello"
upper = True
new_letters = []
for l in letters:
    if upper:
        new_letters.append(l.lower())
        upper = False
    else:
        new_letters.append(l.upper())
        upper = True
new_letters = "".join(new_letters)
print(new_letters)
</code></pre>
<p>This returns<code>hElLo</code></p>
</div>
<div class="post-text" itemprop="text">
<p>What about something like this?</p>
<pre><code>output = "wonderful" 
letters = len(output)
b = 0
word = []

while b &lt; letters:
    if b % 2 == 0:
        word.append(output[b].lower())
    else:
        word.append(output[b].upper())
    b = b+1

print(''.join(word))
</code></pre>
<p>This returns wOnDeRfUl</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way of accomplishing the same task would be to store an iterable of the functions you want called on the string, and use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>itertools.cycle</code></a> to loop over it repeatedly</p>
<pre><code>from itertools import cycle

def apply_by_character(s, funcs=(str.upper, str.lower)):
    return "".join([f(c) for c, f in zip(s, cycle(funcs))])

print(apply_by_character('transition'))
# TrAnSiTiOn
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do the following.</p>
<pre><code>letters="this is a test"
x=0
for i in letters:print(end=(2*i).title()[x]);x^=i.isalpha()
</code></pre>
<p>Output</p>
<pre><code>ThIs Is A tEsT
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>ok let's have fun too:</p>
<pre><code>words = "this is a test"
result = "".join([str.upper, str.lower][i % 2](c) for i, c in enumerate(words))
print(results)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One line using genexpression</p>
<pre><code>&gt;&gt;&gt; input_string = 'Blahfasel'
&gt;&gt;&gt; ''.join((c.upper() if i % 2 == 0 else c.lower() for i, c in enumerate(input_string)))
'BlAhFaSeL'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>let suppose the given string is like 'string' all lower case and we have to convert it into string like 'StRiNg' or 'sTrInG'.</p>
<p>so we can do this as write below:</p>
<p>take input with <strong>input()</strong> method and use <strong>enumerate()</strong> function to take hold the index of each letter in the input string at every iteration</p>
<p>with <strong>python3:</strong></p>
<pre><code>for index,letter in enumerate(input()): #input : 'string' or 'STRING'
    print(letter.upper() if index%2 == 0 else letter.lower() , end="") # ternary operator 
#output : 'StRiNg'


for index,letter in enumerate(input()): #input : 'string' or 'STRING'
    print(letter.lower() if index%2 == 0 else letter.upper() , end="") # ternary operator
#output : 'sTrInG'
</code></pre>
</div>
<span class="comment-copy">What do you want to achieve?</span>
<span class="comment-copy">Show a sample input/output. Otherwise you will just waste everyone's time including yours in answering unnecessary doubts and clarifications</span>
<span class="comment-copy"><i>I need a way to collect all chars into one variable.</i> Then use just one variable instead of two? You can have a <code>list</code> called <code>result</code> and then <code>result.append()</code> in your conditions instead.</span>
<span class="comment-copy">Your code looks like it's almost there. I see two changes that need to be made:1) Instead of having separate variables for the upper and lower case, use one. 2) Use <code>+=</code> to update this variable instead of <code>=</code></span>
<span class="comment-copy">thanks! this works perfectly :)</span>
<span class="comment-copy">You are welcome, remember to accept it as an answer if it fits your problem.</span>
