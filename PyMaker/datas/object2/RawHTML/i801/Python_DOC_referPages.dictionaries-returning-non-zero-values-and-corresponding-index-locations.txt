<div class="post-text" itemprop="text">
<p>I have spent countless hours watching python dictionary tutorials but still cannot figure out how to return the desired result.</p>
<p>Given some list of grades (0 to 1 as floats) called variable <code>y</code>.<br/>
<code>y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0]</code><br/>
I have a dictionary called <code>dic</code>.<br/>
<code>dic = {'pos':[ ], 'grds':[ ]}</code></p>
<p>I want to return all non zero grades and corresponding positions in the list as the dictionary, <code>dic</code>, without modifying the <code>y</code> list. Assistance in solving is greatly appreciated but also want to understand the solution.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Code for getting Output the way OP wants it:</strong></p>
<pre><code>pos_grade = {'pos': [], 'grds': []}

y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0, 0.82]

for i, x in enumerate(y):
   if x != 0.0:
       pos_grade['pos'].append(i)
       pos_grade['grds'].append(x)

print pos_grade
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'grds': [0.97, 0.82, 0.66, 0.9, 0.82], 'pos': [1, 5, 6, 9, 12]}
</code></pre>
<hr/>
<p>Below approaches can be used if one wants to just use a dictionary to get the grades and values.</p>
<pre><code>pos_grade = {}

y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0]

i = 0
for x in y:
   if x != 0.0:
       pos_grade[x] = i
   i += 1

print pos_grade
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{0.9: 9, 0.97: 1, 0.66: 6, 0.82: 5}
</code></pre>
<hr/>
<p>EDIT:</p>
<p>If duplicate values are present for grades in the list:</p>
<pre><code>from collections import defaultdict

pos_grade = defaultdict(list)

y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0, 0.82]

i = 0
for x in y:
   if x != 0.0:
       pos_grade[x].append(i)
   i += 1

print pos_grade
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>defaultdict(&lt;type 'list'&gt;, {0.9: [9], 0.97: [1], 0.66: [6], 0.82: [5, 12]})
</code></pre>
<hr/>
<p>Code using <code>enumerate</code>:</p>
<pre><code>from collections import defaultdict

pos_grade = defaultdict(list)

y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0, 0.82]

for i, x in enumerate(y):
   if x != 0.0:
       pos_grade[x].append(i)

print pos_grade
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An alternative solution is to use dict comprehension:</p>
<pre><code>y = [0.0, 0.97, 0.0, 0.0, 0.0, 0.82, 0.66, 0.0, 0.0, 0.90, 0.0, 0.0]
{v:k for k,v in enumerate(y) if v!=0}
</code></pre>
<p>output</p>
<pre><code>{0.66: 6, 0.82: 5, 0.9: 9, 0.97: 1}
</code></pre>
</div>
<span class="comment-copy">is this a homework?</span>
<span class="comment-copy">Hmm... you can do this without using <code>dic['pos']</code>.</span>
<span class="comment-copy">What have you tried so far? :-) Loops perhaps?</span>
<span class="comment-copy">Looping over your list using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> would be a good place to start.</span>
<span class="comment-copy">Yes this is an assignment, the dictionary is defined as stated and can't be altered so the returned result should be two different lists which are the "values" for the "keys" 'pos' and 'grds'. I am trying to teach myself Python in a weekend so understand I am still a newb. I have tried like 8 approaches, some based off of work I found for unrelated problems, one I wrote myself (obviously wrong) - for 'pos', 'grds' in dic.items() if y !=0</span>
<span class="comment-copy">Okay... and if there are multiple instances of the same [non-zero] grade?</span>
<span class="comment-copy">@TrebuchetMS, we can solve it using a list for value. I just thought of posting this code as a starting point, so that OP can figure it out further.</span>
<span class="comment-copy">I'd add a note recommending <code>enumerate</code> over <code>i = 0; i += 1</code> but ok.</span>
<span class="comment-copy">That's a good point too. Have updated the code. Thanks!</span>
<span class="comment-copy">Thank you for the help@Jay and @TrebuchetMS ; the desired output for the question would be dic['pos'] = [1, 5, 6, 9]  dic['grds'] = [0.97, 0.82, 0.66, 0.90]</span>
<span class="comment-copy">the desired output for the question would be dic['pos'] = [1, 5, 6, 9]  dic['grds'] = [0.97, 0.82, 0.66, 0.90]</span>
