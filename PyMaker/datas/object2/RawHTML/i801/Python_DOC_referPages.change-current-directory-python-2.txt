<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/431684/how-do-i-change-directory-cd-in-python">How do I change directory (cd) in Python?</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>This isnt a duplicate, as the original answer did not help into implementing it into my raw input command interpreter. Credit to original question/answer where due.</p>
<p>So im working on a dos style os in python (you madman) and i was wondering how or even if i could execute a command that would let me switch between directories like a regular command prompt would let you do. Im not sure how well im explaining myself but basically i would have the same command as cd in terminal so i could read files imbedded in folders, change between folders etc. I dont need any sort of limit on how complex it is but i would prefer if it isnt too long. I have yet to find a clear solution to this. in a best case scenario, this is all you would need to input</p>
<pre><code>cd folder1
cd folderinfolder1
</code></pre>
<p>this would be inputted into a raw input and then executed so im assuming it would require splits so it knows that before the space there is 'cd' and after the space there is the filename</p>
<p>it would be used like this</p>
<p><code>directory=raw_input("enter cd followed with a directory")</code></p>
<hr/>
<p>This might be a bit much to ask, not even sure if it is possible</p>
</div>
<div class="post-text" itemprop="text">
<p><code>import os</code></p>
<p><code>os.chdir('folder1')</code></p>
<p>or </p>
<p><code>os.chdir('folderinfolder1')</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I have done this except using <strong><em>C</em></strong> while creating a shell, in my case I used a library with the <strong><em>chdir</em></strong> function and it looked like this:</p>
<pre><code>static void min_cmd_cd_av(char *av, char ***env)
{
    char    *tmp;

    if (av &amp;&amp; 0 == chdir(av))
    {
        tmp = min_env_get_val(env, "PWD=");
        min_env_set_path(env, "OLDPWD=", tmp);
        free(tmp);
        tmp = (char *)ft_memalloc(4098 * sizeof(char *));
        getcwd(tmp, 4098);
        min_env_set_path(env, "PWD=", tmp);
        ft_strdel(&amp;tmp);
    }
    else
        ft_printf("\e[91mERROR: Invalid Path/Permissions\e[96m\n");
}

int         min_cmd_cd(int ac, char **av, char ***env)
{
    char    *tmp;

    if (ac &lt;= 1)
    {
        tmp = min_env_get_val(env, "HOME=");
        if (tmp)
        {
            min_cmd_cd_av(tmp, env);
            ft_strdel(&amp;tmp);
        }
        else
            ft_printf("\e[91mERROR: Home variable not found!\e[96m\n");
    }
    else if (ac &gt; 1)
    {
        min_shell_path(&amp;av, env);
        min_cmd_cd_av(av[1], env);
    }
    return (0);
}
</code></pre>
<p>I used the shell environment to update the PWD and OLDPWD which allows you to implement that into your shell as well.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/os.html#files-and-directories" rel="nofollow noreferrer"><code>os.chdir()</code></a>.</span>
<span class="comment-copy">that would be changing the directory overall. what im looking for is that you would be using a raw input to determine that you would want to run this command and at the same time know what directory to refrence</span>
<span class="comment-copy"><code>if 'cd' in directory:</code> <code>desired_directory = directory.split(' ')[1]</code> <code>os.chdir('desired_directory')</code></span>
<span class="comment-copy">Last question, is there an easy way to print the current directory</span>
<span class="comment-copy">os.getcwd()... there are plenty of other functions you may be interested in at: <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">docs.python.org/3/library/os.html</a></span>
<span class="comment-copy">Thank you so much!</span>
<span class="comment-copy">Using python 2.7 IDLE for programming, not C</span>
