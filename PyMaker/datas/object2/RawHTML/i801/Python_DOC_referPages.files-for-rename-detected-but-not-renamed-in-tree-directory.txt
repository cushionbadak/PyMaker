<div class="post-text" itemprop="text">
<p>How can i apply a script for file modification in all subfolder (in python)?</p>
<p>I created a little script for rename some pictures but my program only change pictures in the script folder and not in subfolder.</p>
<pre><code>from PIL import Image
from os import *
import sys
from os.path import basename
import os
#from PIL.ExifTags import TAGS
from datetime import datetime
extension = ''
#path='/home/pi/Desktop/testrename'
folder_path = "/home/pi/Desktop/testrename/"
l=[]
import PIL.Image
from os import walk
#from path import path
import glob
EXIF_DATETIME = 36867


def renamefinaljpeg() :
    glob.glob ('*/.jpeg') 
    if len(fname) &lt; 20 :
        try :
            old = PIL.Image.open(fname)._getexif()[EXIF_DATETIME]
            old2 = old.split(' ')
            os.rename (fname, "yes" + old2[0]+' '+fname)
            print('fait')
       except :
            pass
            print('pas jpeg')

def renamefinaljpg() :
    glob.glob ('*/.jpg') 
    if len(fname) &lt; 20 :
        try :
             old = PIL.Image.open(fname)._getexif()[EXIF_DATETIME]
             old2 = old.split(' ')
             os.rename (fname, "yes" + old2[0]+' '+fname)
             print('fait')
        except :
            pass
            print('pas jpg')

 rootDir = "/home/pi/Desktop/testrename/"
for dirName, subdirlist, fileList in os.walk(rootDir) :
    for fname in fileList :
        print(fname)
        try  :
             renamefinaljpg() or renamefinaljpeg()
        except :
             pass
             print('passe')
</code></pre>
<p>The image are renamed in the main directory but not in directory tree (but they are read)
Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you've already got a lot of ideas for how to do it in your script. Let's use <code>os.walk</code> since that's probably the most straightforward. <code>os.walk</code> will iterate over all of our directories recursively and give us the list of filenames contained in each one. To filter the files to only <code>.jpg</code> we can use <a href="https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch" rel="nofollow noreferrer"><code>fnmatch.fnmatch</code></a>.</p>
<pre class="lang-py prettyprint-override"><code>import fnmatch
import os
import sys

from PIL import Image


folder_path = '/home/pi/Desktop/testrename/old'
# Give special numbers a specific name so it's easier to remember what it
# actually means.
EXIF_DATETIME = 36867


def renamefinal(dir_path, filename):
    try:
        old = Image.open(file_path)._getexif()[EXIF_DATETIME]
        date, time = old.split(' ', maxsplit=1)
        new_filename = date + ' ' + filename
        os.rename(
            # Source file name, including directory and filename
            os.path.join(dir_path, filename),
            # Destination file name, including date
            os.path.join(dir_path, new_filename))
        print(
            'jpg renomm√© ({}): {} to {}'.format(
                dir_path, filename, new_filename))
    except:
        # Including filename in our output so we know what to check if
        # something goes wrong.
        print('pas jpg ({}): {}'.format(dir_path, filename))


for path, dirs, files in os.walk(folder_path):
    for filename in files:
        if not fnmatch.fnmatch(filename, '*.jpg'):
            # Go to the next file, skipping the rest of the loop for this file.
            continue
        if 30 &lt;= len(filename):
            continue
        renamefinal(path, filename)
</code></pre>
<p>Some more that might help:</p>
<ul>
<li>If you want to take arguments to your script check out the <a href="https://docs.python.org/3/howto/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> module.</li>
<li>Try to catch exceptions more specifically, for example using <code>except KeyError:</code> instead of <code>except:</code> when you know that <code>EXIF_DATETIME</code> may not be in the exif data - also try putting your <code>try: ... except: ...</code> block only around the lines that might actually fail.</li>
<li>Check out the <a href="https://docs.python.org/3/howto/logging.html" rel="nofollow noreferrer"><code>logging</code></a> module instead of using <code>print</code> to show information about what your script is doing.</li>
</ul>
</div>
<span class="comment-copy">Thans for your help. The code scans all the file but it renames only the first directory and not directory tree. Files dectected but not rename... (it's the same file as the main directory). I don't unterstand.</span>
<span class="comment-copy">Can you provide an example for what did not work?</span>
