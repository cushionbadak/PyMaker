<div class="post-text" itemprop="text">
<p>I am trying to read some values from a <code>config file</code> in python inside a class and then i am trying to access these variables inside one more function inside the same class. I have tried the below code but there seems to be something wrong in my code.
Here is what i tried:</p>
<pre><code>class CLEAN():
    def __init__(self):
        parser = argparse.ArgumentParser(description='Remove inactive users from artifactory')
        parser.add_argument('-f', '--config_file', dest='config_file', default="", required=True, action="store", help='the config file with creds')
        parser.add_argument('-d', '--log_dir', dest='log_dir', default="", required=True, action="store", help='the logs dir')
        parsers = parser.parse_args()

        self.config_file = parsers.config_file.strip()
        self.log_dir = parsers.log_dir.strip()

        if not os.path.exists(self.log_dir):
            os.mkdir(self.log_dir)

        with open('config.ini', 'r') as myfile:
            for line in myfile:
                if 'instance' in line:
                     instance = line.split('=')[1]
                if 'user' in line:
                    user = line.split('=')[1]
                if 'user_api' in line:
                     user_api = line.split('=')[1]

    def print_values(self):
        logger.info(self.instance)
        logger.info(self.user)
        logger.info(self.user_api)`
</code></pre>
<p>This part of the code is followed by main()
The error that i am getting is</p>
<pre><code>Traceback (most recent call last):
 File "clean.py", line 48, in &lt;module&gt;
    c.main()
  File "clean.py", line 44, in main
    self.print_values()
  File "clean.py", line 39, in print_values
   logger.info(self.instance)
AttributeError: CLEAN instance has no attribute 
'instance'


cat config.ini
instance=xxxxx
user=abc
user_api=xxxx
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to add <code>self.</code>:</p>
<pre><code>self.instance = line.split('=')[1]
</code></pre>
<p>Same for <code>user</code> and <code>user_api</code>.</p>
<p>On the flip side, you don't need <code>self</code> for <code>config_file</code> or <code>log_dir</code> if you're not going to use those variables outside of that method.</p>
<p>As bruno says, using ConfigParser:</p>
<pre><code>from configparser import ConfigParser

config = ConfigParser()
config.read('config.ini')
print(config['section']['instance'])  # xxxxx
</code></pre>
<p>This requires adding a line <code>[section]</code> to the top of the config file. Any title will do, but a section header is required.</p>
<p>Then you can you <code>self.config = config['section']</code> and access the values as <code>self.config['instance']</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here:</p>
<pre><code>     with open('config.ini', 'r') as myfile:
        for line in myfile:
            if 'instance' in line:
                 instance = line.split('=')[1]
            if 'user' in line:
                user = line.split('=')[1]
            if 'user_api' in line:
                 user_api = line.split('=')[1]
</code></pre>
<p>You are creating local variables, not instance attributes. You have to assign to <code>self.instance</code>, self.user<code>and</code>self.user_api` instead.</p>
<p>Also, with your current code, there's no garantee that those attributes will be set (if the "user", "user_api" or "instance" words are not found in the file), so you want to first set those attributes to default values, ie:</p>
<pre><code>     # which default value makes sense is up to you
     self.instance = None
     self.user = None
     self.user_api = None

     with open('config.ini', 'r') as myfile:
        for line in myfile:
            if 'instance' in line:
                 self.instance = line.split('=')[1]
            if 'user' in line:
                self.user = line.split('=')[1]
            if 'user_api' in line:
                 self.user_api = line.split('=')[1]
</code></pre>
<p>Also, <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">python has a <code>ConfigParser</code> class</a> that knows how to deal with ini files, so you'd probably be better using this instead. </p>
</div>
<span class="comment-copy">You have not initialized <code>instance</code> properly, use:      <code>self.instance = line.split('=')[1]</code></span>
<span class="comment-copy">Your code creates local (function) variables, not object attributes.</span>
<span class="comment-copy">Haha thanks @brunodesthuilliers, that was pretty critical.</span>
<span class="comment-copy">ohh, this works perfectly, bdw both user and user_api display the same value. My guess is because both have the term user in it, the values overlap..how can i correct this in my code</span>
<span class="comment-copy">@panda cf my answer - use the stlib's ConfigParser instead.</span>
