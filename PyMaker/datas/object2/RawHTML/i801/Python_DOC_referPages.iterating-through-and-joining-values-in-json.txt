<div class="post-text" itemprop="text">
<p>I have a json file that I'm trying to iterate through to join file paths housed inside but I keep having issues:</p>
<pre><code>{
  "files": [
    {
      "name": "Mississippi",
      "folder": "H:\\Data\\Mississippi",
      "zFeatures": [
        {
          "name": "Land_Use",
          "file": "MS_LandUse.shp",
            }
          ]
        }
      ]
    }
</code></pre>
<p>In this case I'd like to join <code>file</code> to <code>folder</code> so my output would be: <code>"H:\\Data\\Mississippi\\MS_LandUse.shp"</code>. I do have hundreds of other files that also need to be joined so I need to iterate through this json.</p>
<p>I've tried iterating top down but that failed</p>
<pre><code>with open("filoc.json", "r") as i:
    filoc = json.load(i)

for files in filoc['files']:
    for folder in files['folder']:
        for zFeatures in files['zFeatures']:
        #This is where I'm stumped, I feel like I'm already doing it wrong.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're on to something. It's a shame that you didn't exactly specify what your problem is. First, let me correct that JSON data (it's corrupt):</p>
<pre><code>{
  "files": [
    {
      "name": "Mississippi",
      "folder": "H:\\Data\\Mississippi",
      "zFeatures": [
        {
          "name": "Land_Use",
          "file": "MS_LandUse.shp"
        }
      ]
    }
  ]
}
</code></pre>
<p>Then, you can combine <code>os.path.join</code> and <code>os.path.abspath</code> to join and make sure the path is correct by doing something along the lines of:</p>
<pre><code>import os, json

with open("test.json", "r") as i:
    filoc = json.load(i)

for file_info in filoc['files']:
    print(os.path.abspath(os.path.join(file_info['folder'], file_info['zFeatures'][0]['file'])))
</code></pre>
<p>This assume that there's only one file under <code>zFeatures</code> tho. If there are multiple, just do:</p>
<pre><code>for file_info in filoc['files']:
    for f_obj in file_info['zFeatures']:
        print(...(file_info['zFeatures'][f_obj]['file']))
</code></pre>
<p>But I'm assuming this blob is per-file.</p>
<p>Lastly, beware of <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">os.path.abspath</a> - if passed a windows path on a Linux machine - it will generate a wonky path. If the paths are mixed, just skip <code>abspath()</code> and hope that paths aren't mixed or correct for it when they are.</p>
</div>
<div class="post-text" itemprop="text">
<p>After changing your sample json input file into valid JSON:</p>
<pre class="lang-json prettyprint-override"><code>{
    "files": [
        {
            "name": "Mississippi",
            "folder": "H:\\Data\\Mississippi",
            "zFeatures": [
                {
                    "name": "Land_Use",
                    "file": "MS_LandUse.shp"
                }
            ]
        }
    ]
}
</code></pre>
<p>Here's probably the simplest way to do what you want:</p>
<pre><code>import json
import os


with open("filoc.json", "r") as inp:
    filoc = json.load(inp)

    for file_metadata in filoc['files']:
        folder = file_metadata['folder']
        filename = file_metadata['zFeatures'][0]['file']
        print(os.path.join(folder, filename))
</code></pre>
<p>Which prints this processing the sample input file:
<code>H:\Data\Mississippi\MS_LandUse.shp</code></p>
<p>Since there could be more than one <code>"zFeatures"</code> file, you may want/need to nest another <code>for</code> loop inside of the <code>for file_metadata in filoc['files']:</code> loop to process each of them individually. Here's what I mean:</p>
<pre><code>with open("filoc.json", "r") as inp:
    filoc = json.load(inp)

    for file_metadata in filoc['files']:
        folder = file_metadata['folder']
        for feature in file_metadata['zFeatures']:  # Added 'for' loop.
            filename = feature['file']
            print(os.path.join(folder, filename))
</code></pre>
</div>
<span class="comment-copy">Using <code>os.path</code> is best as well to avoid most of the many pathing gotchas across different OS.</span>
