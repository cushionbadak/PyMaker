<div class="post-text" itemprop="text">
<p>I have a super basic machine learning question. I've been working through various tutorials and online classes on machine learning and the various techniques to learning how to use it, but what I'm not seeing is the persistent application piece.</p>
<p>So, for example, I train a network to recognize what a garden gnome looks like, but, after I run the training set and validate with test data, how do I persist the network so that I can feed it an individual picture and have it tell me whether the picture is of a garden gnome or not? Every tutorial seems to have you run through the training/validation sets without any notion as of how to host the network in a meaningful way for future use.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Once a model/network is trained and validated with test/dev sets, the best practice is to "freeze" it's state and use it for prediction.</p>
<p>To integrate a network or a model in an application, one should maintain the state of the model and store it, usually a model is stored by <a href="https://en.wikipedia.org/wiki/Serialization" rel="nofollow noreferrer">serializing</a>, tagging it and saving it to a stateful store(a database or your local disk).</p>
<p>Python offers various serialization methods and libraries, including the built-in <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a>.
For additional reference, here is a very short piece on <a href="https://medium.com/@omrieival/finalizing-prediction-models-pickling-the-lean-way-fb0a69d78867" rel="nofollow noreferrer">pickling</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>This question is more suited for <a href="https://stats.stackexchange.com/">Cross Validated</a> or <a href="https://datascience.stackexchange.com/">Data Science</a>, but here's the gist : After you've trained your network, there is a procedure usually referred to as "freezing" which means saving your network in a "persistent" way : weights don't change anymore, and some stuff that happens during training (eg dropout) is dropped. </p>
<p>Your network is saved as a file somewhere on your disk, which you can then reload using dedicated functions.
You can then pass new images to your frozen network exactly as you do when you're training it (something like <code>class=frozen_model(image)</code>).</p>
<p>To get more specific, you should specify what library you're working with.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use python pickle library to dump your trained model on your hard drive and load model and test for <strong>persistent results</strong>. </p>
</div>
