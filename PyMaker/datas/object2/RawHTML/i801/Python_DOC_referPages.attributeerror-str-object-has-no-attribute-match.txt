<div class="post-text" itemprop="text">
<p><strong>code:</strong></p>
<pre><code>import pandas as pd

input = pd.read_csv("resale-flat-prices.csv", header=None)

ans = []

for row in input:
    if(input.iloc[row,2].match("3 ROOM") and input.iloc[row,7].match("ADJOINED FLAT")):
        ans.append(input[row])

print(ans)
</code></pre>
<p>to find rows of data from a csv file with the following matches and append it to a new list, how should i check and match the string terms?</p>
<p><strong>update:</strong></p>
<p>i have edited using the "in" operator as follows: </p>
<p>if("3 ROOM" in input.iloc[row,2] and "ADJOINED FLAT" in input.iloc[row,7]):</p>
<p>the result produced is an empty list, does the issue lie with the reading of the csv file? </p>
<p>first 3 rows of data from csv file: </p>
<p>1990-01| ANG MO KIO|    1 ROOM| 309|    ANG MO KIO AVE 1|   04 TO 06|   31| IMPROVED|   1977|   6000<br/>
1990-01|    ANG MO KIO| 1 ROOM| 309|    ANG MO KIO AVE 1|   07 TO 09|   31| IMPROVED|   1977|   6000<br/>
1990-01|    ANG MO KIO| 1 ROOM| 309|    ANG MO KIO AVE 1|   10 TO 12|   31| IMPROVED| 1977| 8000 </p>
<p>there are 10 columns in total</p>
</div>
<div class="post-text" itemprop="text">
<p>To check for string equality, just use the <code>==</code> operator:</p>
<pre><code>&gt;&gt;&gt; my_string = "3 ROOM"
&gt;&gt;&gt; my_string == "3 ROOM"
True
&gt;&gt;&gt; my_string == "3 ROOMS"
False
</code></pre>
<p>To check if a string contains a substring, use the <code>in</code> operator:</p>
<pre><code>&gt;&gt;&gt; my_string = "13 ROOMS"
&gt;&gt;&gt; "3 ROOM" in my_string
True
&gt;&gt;&gt; "30 ROOM" in my_string
False
</code></pre>
<p>To do a more advanced string comparison, you might want to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; my_string = "3 ROOM"
&gt;&gt;&gt; re.match(r"^\d ROOM$", my_string)
&lt;_sre.SRE_Match object at 0x7f4ac226bb90&gt;
&gt;&gt;&gt; re.match(r"^\d ROOMS$", my_string)
None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't need the Regexp, You can use operator <code>in</code> </p>
<pre><code> for row in input:
     if("3 ROOM" in input.iloc[row,2] and "ADJOINED FLAT" in input.iloc[row,7]):
         ans.append(input[row])
</code></pre>
</div>
<span class="comment-copy">i have edited using the "in" operator as follows:   if("3 ROOM" in input.iloc[row,2] and "ADJOINED FLAT" in input.iloc[row,7]): ans.append(input[row])   the result produced is an empty list, does the issue lie with the reading of the csv file?   first 3 rows of data from csv file:   1990-01	ANG MO KIO	1 ROOM	309	ANG MO KIO AVE 1	04 TO 06	31	IMPROVED	1977	6000   1990-01	ANG MO KIO	1 ROOM	309	ANG MO KIO AVE 1	07 TO 09	31 IMPROVED	1977	6000   1990-01	ANG MO KIO	1 ROOM	309	ANG MO KIO AVE 1	10 TO 12	31	IMPROVED 1977	8000    there are 10 columns in total</span>
<span class="comment-copy">@vixk update your question with this new information, your comment is not readable enough for me to help you</span>
<span class="comment-copy">Looks like your CSV file does not use commas between the fields? If so, you want to specify the delimiter to the read_csv function. For example, if the fields are separated by the pipe character (|), then you want to use pd.read_csv("resale-flat-prices.csv", header=None, delimiter="|")</span>
<span class="comment-copy">Be careful with "IN", as you might get unexpected matches, such as "13 ROOMS", "3 ROOMMATES" or "3 ROOMS WERE NUKED".  ;-)</span>
