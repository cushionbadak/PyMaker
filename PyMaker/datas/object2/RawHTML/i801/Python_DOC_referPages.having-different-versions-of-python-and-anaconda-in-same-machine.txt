<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5844869/comprehensive-beginners-virtualenv-tutorial">Comprehensive beginner's virtualenv tutorial? [closed]</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm working and learning python with python 3.7 IDLE and PyCharm, but now I have to use Anaconda for a few different problems.</p>
<p>My question is, is it possible to install Anaconda in the same machine but without interfering the old python 3.7 that I already have installed? because in one I'm using Django as well and such, but Anaconda will be mainly for data processing, I and don't want them both to interact with each other or overwrite packages.</p>
<p>Shall I use something like a virtual environment to install Anaconda? if so, what's the best way.</p>
<p>I'm new into this, thank you for help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Anaconda comes with its own virtual environment manager <code>conda</code>. This means that Anaconda will by default be independent of your system python 3.7, and packages will not interact with each other.</p>
<p>One solution to manage both python installs in a clean way could be to use <code>conda</code> environments for both. The cleanest IMO would be to:</p>
<ul>
<li>install <a href="https://conda.io/en/master/miniconda.html" rel="nofollow noreferrer">Miniconda</a> (minimal install for the <a href="https://conda.io/projects/conda/en/latest/glossary.html#conda-glossary" rel="nofollow noreferrer"><code>conda</code> manager</a>)</li>
<li>create an environment called <code>anaconda</code> and install all packages from the distribution (which is done with <code>conda create -n anaconda anaconda</code>)</li>
<li>create an environment called <code>py37</code> and install all packages from you current python 3.7 install</li>
</ul>
<p>You can then use <code>conda activate py37</code> to use django, and <code>conda activate anaconda</code> to process data. No interaction between the two, and a very simple way to switch between both. Please see <a href="https://conda.io/projects/conda/en/latest/index.html" rel="nofollow noreferrer">the conda documentation</a> for details.</p>
<p>Of course, using virtualenv or pipenv would allow you to separate environments in a similar manner. But note that only conda will allow you to do so using features from the Anaconda distribution, which looks to be a requirement from your question.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd recommend you using a virtual env for every project.</p>
<p>Here's a pretty informative video: <a href="https://www.youtube.com/watch?v=N5vscPTWKOk" rel="nofollow noreferrer">https://www.youtube.com/watch?v=N5vscPTWKOk</a></p>
<p>And the venv docs: <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/venv.html</a></p>
</div>
<span class="comment-copy">What exactly do you want from Anaconda? What is your OS?</span>
<span class="comment-copy">@DevonOliver I don't think it is a duplicate, if OP has to use the Anaconda distribution, then using virtualenv will be less appropriate than using conda to manage virtual environments.</span>
<span class="comment-copy">thank you for the help and info : )</span>
<span class="comment-copy">You might need to be careful about your path, to be sure you were getting the python from conda on all occassions, and not the already installed non-conda install of python. Aside from that, I agree with this answer.</span>
<span class="comment-copy">thank you for the help and info : )</span>
<span class="comment-copy">thank you for the help and info : )</span>
