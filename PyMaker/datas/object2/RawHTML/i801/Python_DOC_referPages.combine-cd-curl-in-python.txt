<div class="post-text" itemprop="text">
<p>This is what I was using to download a pdf from a website.
When I don't combine cd.... &amp;&amp; part, the curl launches and downloads the file.
But, whenever I use the cd command to change the directory and download the file, it just passes the curl command.
I don't want to provide -o argument to curl, since I'm not willing to provide custom name to file.
Please, suggest the cause of this problem and solution.</p>
<p>The question is unique in the sense that it asks for implementation of curl with bash command. The suggested thread is regarding bash command only.</p>
<pre><code>import subprocess
import shlex

url = 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
sessionID = input('Please, enter jsessionid...\n')
sessionID = str(sessionID) # Cookies
cookies_from_function = " -H 'Cookie: rppValue=20; B_View=1; JSESSIONID=" + sessionID + "'"
tempstring =  '-L -O -C - ' + url + " -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:64.0) Gecko/20100101 Firefox/64.0' -H 'Accept: */*' --compressed -H 'Connection: keep-alive'" + cookies_from_function# Login To Browser, inspect element, go to network tab, reload, copy curl url for a pdf link. Extract headers with cookies and paste here.
# print(tempstring)
curl_cmd = "cd /Volumes/path/to/destination/ &amp;&amp; curl " + tempstring# Original
subprocess.call(shlex.split(curl_cmd))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>&amp;&amp;</code> is a shell logical operator for running a command if the preceding one succeeds. So, you need to run it inside shell; use <code>shell=True</code> and pass it as string not as a list:</p>
<pre><code>subprocess.call(curl_cmd, shell=True)
</code></pre>
<p>Running commands directly in shell, unless sanitized might have catastrophic impact as one can imagine.</p>
<p>As a side note, you should look at doing things directly in Python by using <code>os</code> and some web client e.g. <code>requests</code>.</p>
<hr/>
<p>Also, if you don't want to use the <code>-o</code> option of <code>curl</code>, you can use the shell redirection operator (<code>&gt;</code>) to save the STDOUT of <code>curl</code> to some file:</p>
<pre><code>curl -s ... &gt;/out/file
</code></pre>
<p><code>-s</code> silences <code>curl</code> so that we don't get progress status on STDERR.</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested in a comment, you can use the <code>cwd</code> keyword argument to the <code>subprocess</code> functions to run in a different directory. Another simple option is to <code>open</code> a suitable file and pass it as <code>stdout</code> to the <code>subprocess</code> call.</p>
<p>Tangentially, you probably want to use <code>check_call</code> or the modern replacement <code>run</code> instead of the very basic <code>call</code>.</p>
<pre><code>import subprocess
import os

url = 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'
sessionID = input('Please, enter jsessionid...\n')
# No need, input aways returns a string in Python 3
# sessionID = str(sessionID) # Cookies
with open(os.path.join('/Volumes/path/to/destination', 'dummy.pdf')) as pdf:
    subprocess.check_call([
            'curl', '-L', '-C', '-', url,
            '-H', 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:64.0) Gecko/20100101 Firefox/64.0',
            '-H', 'Accept: */*', '--compressed',
            '-H', 'Connection: keep-alive',
            '-H', 'Cookie: rppValue=20; B_View=1; JSESSIONID={0}'.format(sessionID)],
          stdout=pdf)
</code></pre>
<p>This also does away with <code>shlex</code>, partly because you say in a comment you had to get rid of it, partly because it doesn't really offer any significant value over splitting a simple static command line into tokens manually once (though you have to understand how to do it, obviously).</p>
<p>If you want to keep the <code>-O</code> option,</p>
<pre><code>subprocess.check_call([
    'curl', '-O', ...],
    cwd='/Volumes/path/to/destination')
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow noreferrer"><code>subprocess.call()</code></a> again. Passing argument in general and for your problem have a look at <code>cwd</code> keyword argument in particular. Better yet, <a href="https://docs.python.org/3/library/urllib.html#module-urllib" rel="nofollow noreferrer"><code>urllib</code></a> to not have to bother executing anything else in.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/16362402/save-file-to-specific-folder-with-curl-command">Save file to specific folder with curl command</a></span>
<span class="comment-copy">@MarcinOrlowski that link talks about bash only. This is python+bash.</span>
<span class="comment-copy">Thanks, that solves the problem. I've to use it in more complex task. I hope it works. For, requests library, my knowledge is limited. I wan't to have resume capabilities, so cUrl comes first in mind. For requests, I may have to get headers, then compare to file of same name in specific directory, etc. Please, share your insight of the procedure including requests library and some links to guide, if I'm not asking much. Thanks, again.</span>
<span class="comment-copy">In my complex project, I had to remove the shlex part. This was causing problem even after adding shell argument.</span>
<span class="comment-copy">@lalitaalaalitah Please see <a href="http://docs.python-requests.org/en/master/user/quickstart/" rel="nofollow noreferrer">docs.python-requests.org/en/master/user/quickstart</a> .<code>requests</code> is pretty simple as far as usable is concerned. Please go through the quickstart and let me know if you have any problem understanding something. Best of luck!</span>
<span class="comment-copy">I tried to use request, but redirects are exceeding limit even after exceeding. Tried to set a session too.</span>
<span class="comment-copy">@lalitaalaalitah Okay. You should add the details to your question, and select the other as accepted as its more complete. I'm gonna delete my answer as the problem seems to be different now.</span>
<span class="comment-copy">I'll try to check it. But, doesn't it assume that I've to provide the file name? If yes, any way to get away with that and use the file name provided by server?</span>
<span class="comment-copy">Then probably the <code>cwd</code> trick alluded to earlier. I'll update with another version.</span>
<span class="comment-copy">See also <a href="https://stackoverflow.com/a/51950538/874188">stackoverflow.com/a/51950538/874188</a> for (much) more about subprocess and common antipatterns. (Tried to link before but put the wrong link, sorry.)</span>
<span class="comment-copy">For some reasons <i>subprocess.check_call(['curl', '-O', ...],cwd='/Volumes/path/to/destination')</i> downloads some html instead of pdf however providing cd command under check works without any problem.</span>
