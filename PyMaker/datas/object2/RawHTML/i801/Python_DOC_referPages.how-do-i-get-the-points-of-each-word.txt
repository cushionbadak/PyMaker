<div class="post-text" itemprop="text">
<p>I'm making a program that could count the points of two or more words. How do I get the value of each point in a list in an array? I already have a dictionary of points.</p>
<pre><code>points_dictionary = {
        'A': 1, 'B': 3, 'C': 3,
        'D': 2, 'E': 1, 'F': 4, 'G': 2,
        'H': 4, 'I': 1, 'J': 8, 'K': 5,
        'L': 1, 'M': 3, 'N': 1, 'O': 1,
        'P': 3, 'Q': 10, 'R': 1, 'S': 1,
        'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8,
        'Y': 4, 'Z': 10, '#': 0, '0':3
    }
</code></pre>
<p>I have a list that looks like this<code>currwords = ['PEARS' 'MANGO' 'ORANGE]</code>
I have made a code that can get the points of each letter but its output adds all the points. </p>
<pre><code>for you in currwords:
    for yeah in you:
        trans = list(yeah)
        trans = points_dictionary[yeah[0]]
        total_words.append(trans)
        final1 = sum(total_words)
        print(final1)
</code></pre>
<p>Every time I use this code it only outputs the total points on what is on the list. How do I get the points specifically on each word like PEAR = 6 MANGO = 8 and ORANGE = 7</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's do it <strong><em>the old school</em></strong> way:</p>
<pre><code>points_dictionary = {
        'A': 1, 'B': 3, 'C': 3,
        'D': 2, 'E': 1, 'F': 4, 'G': 2,
        'H': 4, 'I': 1, 'J': 8, 'K': 5,
        'L': 1, 'M': 3, 'N': 1, 'O': 1,
        'P': 3, 'Q': 10, 'R': 1, 'S': 1,
        'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8,
        'Y': 4, 'Z': 10, '#': 0, '0':3
    }

currwords = ['PEARS', 'MANGO', 'ORANGE']
sumsOfwords = []
sum = 0
i = -1
for words in currwords:
    for word in words:
        if words == currwords[i + 1]:
            sum = sum + points_dictionary[word]
        else:
            sumsOfwords.append(sum)
            sum = 0
            sum = sum + points_dictionary[word]
            i = i + 1

sumsOfwords.append(sum)
print(sumsOfwords)
</code></pre>
<p>OUTPUT:</p>
<blockquote>
<p>[7, 8, 7]</p>
</blockquote>
<pre><code>dictionary = dict(zip(currwords, sumsOfwords))
print(dictionary)
</code></pre>
<p>OUTPUT:</p>
<blockquote>
<p>{'PEARS': 7, 'MANGO': 8, 'ORANGE': 7}</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum</a> together with <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>:</p>
<pre><code>points_dictionary = {
        'A': 1, 'B': 3, 'C': 3,
        'D': 2, 'E': 1, 'F': 4, 'G': 2,
        'H': 4, 'I': 1, 'J': 8, 'K': 5,
        'L': 1, 'M': 3, 'N': 1, 'O': 1,
        'P': 3, 'Q': 10, 'R': 1, 'S': 1,
        'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8,
        'Y': 4, 'Z': 10, '#': 0, '0':3
    }

currwords = ['PEARS', 'MANGO', 'ORANGE']

for word in currwords:
    print(word, sum(map(lambda c: points_dictionary.get(c, 0), word)))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>PEARS 7
MANGO 8
ORANGE 7
</code></pre>
<p>As an alternative you could use a <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">generator expression</a>:</p>
<pre><code>for word in currwords:
    print(word, sum(points_dictionary.get(c, 0) for c in word))
</code></pre>
<p>The idea of both map and the generator expression is to <em>map</em> the letters of each word to the corresponding point values.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the issue here is that you append trans to total_words at each iteration, but never reset its value. You could add a </p>
<pre><code>total_words = []
</code></pre>
<p>inside of the first loop. Also, inside of your <code>for yeah in you</code> loop, you define trans twice, so the first one is never used. After correcting that, your code should look like this :</p>
<pre><code>for you in currwords:
    total_words = []
    for yeah in you:
        trans = points_dictionary[yeah]
        total_words.append(trans)
        final1 = sum(total_words)
        print(final1)
</code></pre>
</div>
<span class="comment-copy">Thank you!! I also like the old school way.</span>
<span class="comment-copy">@Ash, you may mark the answer that helped you in solving your problem better! cheers ;-)</span>
<span class="comment-copy">Can you explain this part? dictionary = dict(zip(currwords, sumsOfwords)). What is the use of dict and zip?</span>
<span class="comment-copy">@Ash The purpose of <code>zip()</code> is to map the similar index of multiple containers so that they can be used just using as single entity. and once done, you may convert it into a dictionary or a list as preferred!</span>
<span class="comment-copy">Oh, I see. Thank you so much. I appreciate your help!</span>
<span class="comment-copy">Thank you so much!!. Can you explain too me the use of map and generator expression? It will really much help me understand more! Thank you</span>
<span class="comment-copy">@Ash updated the answer, I think you can take a look to the linked documentations to know more about map and generator expressions.</span>
<span class="comment-copy">Thank you so much!! I appreciate your help.</span>
