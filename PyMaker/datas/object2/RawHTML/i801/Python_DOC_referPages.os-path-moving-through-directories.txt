<div class="post-text" itemprop="text">
<p>i have this structure in my code.</p>
<ul>
<li>app 

<ul>
<li>src

<ul>
<li>script.py</li>
</ul></li>
</ul></li>
<li>data

<ul>
<li>data.ptk</li>
</ul></li>
</ul>
<p>i need to open the file "data.ptk" from "scrip.py", using os.path  i'm able  to extract the script path. </p>
<pre><code>my_path = os.path.abspath(os.path.dirname(__file__))
</code></pre>
<p>But flowing the structure i need to go back 2 directories and then enter the "data" directory to open the file.</p>
<p>The easy way would be to decompose the string my_path with a split("/"), remove the last 2 words and add "data" ...
But I do not think it's the right way</p>
<p>The script.py need to be independent of the OS, that is the reason i'm not able to "hard code" the directory where de pkl file is placed</p>
<p>Any suggestions? thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>To elaborate on my comment more, you can see the documentation for <code>pathlib</code> here: <a href="https://docs.python.org/3/library/pathlib.html?highlight=pathlib#module-pathlib" rel="nofollow noreferrer">https://docs.python.org/3/library/pathlib.html?highlight=pathlib#module-pathlib</a>. It is a stock part of python3 (not sure about python2). I think the following would work:</p>
<pre><code>from pathlib import Path
scriptPath = Path(__file__).absolute() # the absolute() is not strictly necessary
srcPath = scriptPath.parent
appPath = srcPath.parent
commonDirectory = appPath.parent # this could have been shortened with scriptPath.parent.parent.parent
dataPath = commonDirectory / 'data'
dtkFile = dataPath / 'data.ptk'
</code></pre>
</div>
<span class="comment-copy">It seems like <code>../../data</code> would work.</span>
<span class="comment-copy"><code>pathlib</code> is your friend. you can make real objects out of Path's and then use messages like <code>parent</code> and others to construct and use them.</span>
<span class="comment-copy">IMHO you are doing this wrong. <code>data.ptk</code> should be included <a href="https://setuptools.readthedocs.io/en/latest/setuptools.html#including-data-files" rel="nofollow noreferrer">as "package data" using setuptools.</a>.</span>
<span class="comment-copy">Related:  <a href="https://importlib-resources.readthedocs.io/en/latest/" rel="nofollow noreferrer">importlib-resources.readthedocs.io/en/latest</a></span>
<span class="comment-copy">you can use <code>scriptPath.parents[n]</code> to index instead of making subsequent calls to <code>.parent</code> on each previous result</span>
