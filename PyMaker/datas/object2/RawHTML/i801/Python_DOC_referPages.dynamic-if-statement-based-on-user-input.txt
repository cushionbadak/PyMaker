<div class="post-text" itemprop="text">
<p>I have a list with a couple of keys and values in it, each with their own keywords stored in it. </p>
<p>To only return specific items in the list, I use the following for loop with an if statement:</p>
<pre><code>reduced_docs = []
for arg in reduced_docs:
    if 'amazon' in arg[1] and 'google' in arg[1]:
        print(arg[0])
</code></pre>
<p>The code above will return me all the items in the list that contain the words amazon and google. This works, but as you can see it's hardcoded now and I would something like this:</p>
<pre><code> reduced_docs = []
    keyword = input('enter your keywords:') keyword1 keyword2
     for arg in reduced_docs:
            if keyword in arg[1] and keyword in arg[1]:
                print(arg[0])
</code></pre>
<p>As you can see in the example code above, it's not hardcoded anymore, but what if I have 3 keywords or 4 or 5? What would I need to do to create a dynamic if statement that adds the <code>and</code>condition based on the length on the input? So far I can't get my head around this. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all(iterable)</code></a> returns <code>True</code> if all elements of <code>iterable</code> are true.</p>
<p>Using a <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator expression</a> together with that:</p>
<pre><code>keywords = input('enter your keywords:').split()
for arg in reduced_docs:
    if all(keyword in arg[1] for keyword in keywords):
        print(arg[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could ask the user for comma separated keywords then use something like</p>
<pre><code> reduced_docs = []
    keywords = input('enter your keywords comma separated:')
     for arg in reduced_docs:
         to_print = []
         for keyword in keywords.split(","):
            to_print.append(keyword in arg[0])
         if all(to_print):
            print(arg[1])
</code></pre>
</div>
<span class="comment-copy">2 possible approaches: 1.) First ask the user how many keywords they are gonna enter then have a loop asking n times for a keyword 2.) Keep asking the user in an infinite loop if they want to enter another keyword and break the loop if they decline.</span>
<span class="comment-copy">This doesn't make sense. What are <code>arg[0]</code> and <code>arg[1]</code>?</span>
<span class="comment-copy">@PeterWood arg[0] is for example the id of a document and arg[1] is the content of the document. My structure is as follow List, within that List I have multiple tuples and arg[1] has a list with multiple values in it.</span>
<span class="comment-copy">Thanks for your answer, this does exactly what I want! Just one more question if you don't mind. What I would like to use OR instead. What would be the best approach?</span>
<span class="comment-copy">@Solaiman for OR you would use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><b><code>any</code></b></a> instead of <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><b><code>all</code></b></a>: <code>if any(keyword in arg[1] for keyword in keywords)</code>. <code>any</code> shortcircuits so is efficient. It will only check until it finds the first matching keyword.</span>
<span class="comment-copy">@PeterWood thank you very much,that worked perfectly. Still learning new things everyday really appreciate it!</span>
<span class="comment-copy">Thanks for you answer, this also worked. I would only split based on spaces instead of comma seperated values :)</span>
