<div class="post-text" itemprop="text">
<p>Why is it that python's os.walk is returning fewer files than using C# Directory.GetFiles? I would expect the same results when using the same starting directory.</p>
<p>My Python code is:</p>
<pre><code>import os
#Note that startdir is entered as 'Z:\directoryname', same as c# below
startdir = input("Enter Starting Path: ")
fileList = []
for(dirname, dirs, files) in os.walk(startdir, followlinks=True):
    for filename in files:
        thefile = os.path.join(dirname,filename)
        fileList.append(thefile)
printline = 'Total: ' + str(len(fileList))
print(printline)
</code></pre>
<p>The C# is simply:</p>
<pre><code>using System.IO;
...
string rootPath = @"Z:\directoryname";
string[] dirReturn = Directory.GetFiles(rootPath, "*", SearchOption.AllDirectories);
</code></pre>
<p>But, Python returns 653231 files in the array and C# returns 653271 (difference of 40).</p>
<p>I've checked the C# array for duplicates and found none. I've compared the two arrays and found the files in the C# array that are missing from the Python array; the C# files are all valid.</p>
<p>I admit that I seem to be getting valid results from my C# code and perhaps should be happy, but I'd like to understand why the discrepancy exists between the two results.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not enough reputation to comment, but chances are that there is an issue with the files when using os.walk which prevent the method from actually reading the file. <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">From the documentation</a></p>
<p><em>"By default, errors from the scandir() call are ignored. If optional argument onerror is specified, it should be a function; it will be called with one argument, an OSError instance. It can report the error to continue with the walk, or raise the exception to abort the walk. Note that the filename is available as the filename attribute of the exception object."</em></p>
<p>Try using something like this:</p>
<pre><code>import os

def error_os_walk(exception):
    print("Error in file, python can't read")

startdir = input("Enter Starting Path: ")
fileList = []
for(dirname, dirs, files) in os.walk(startdir, followlinks=True, onerror=error_os_walk):
    for filename in files:
        thefile = os.path.join(dirname,filename)
        fileList.append(thefile)
printline = 'Total: ' + str(len(fileList))
print(printline)
</code></pre>
</div>
<span class="comment-copy">I wonder what would happen if you created a new directory, and copied one of the "found in C#, missing in Python" files into it, and ran both scripts on the directory. If there continues to be a discrepancy, this suggests a problem with the file itself. If both programs produce the same output, then maybe the problem is with the original directory, or the sheer quantity of files it contains.</span>
<span class="comment-copy">Can you post sample of the different files?</span>
<span class="comment-copy">@Kevin, thanks for the suggestion. I'll try to make time to give it a try.</span>
<span class="comment-copy">@QianboWang, Odd as it may sound, organizational security disallows my posting even the filenames.</span>
<span class="comment-copy">thank you for the suggestion. I will try that at my next opportunity.</span>
<span class="comment-copy">This answer has provided me with the information I needed. Thanks!</span>
