<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18172451/enumerate-list-of-elements-starting-from-the-second-element">Enumerate list of elements starting from the second element</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>By default, enumerate() starts counting at 0 but if you give it a second integer argument, it'll start from that number instead but how can we enumerate from a particular value of count and elem. for example, we want to pass count as '2' and elem as 'bar'. both values have to pass to enumerate function.</p>
<pre><code>elements = ('foo', 'bar', 'baz')
for count, elem in enumerate(elements):
    print (count, elem)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate a <a href="https://stackoverflow.com/questions/509211/understanding-slice-notation">slice</a> of your data and start the enumeration at a specific integer:</p>
<pre><code>start_at = 1
elements = ('foo', 'bar', 'baz')
for count, elem in enumerate(elements[start_at:], start_at):
    print (count, elem)
</code></pre>
<p>Output:</p>
<pre><code>1 bar
2 baz
</code></pre>
<p>Documentation:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate(iterable, start=0)</a> (specify whatever for <code>start</code> to start numbering the 0th element of <code>iterable</code> with that number onwards)</li>
</ul>
<hr/>
<p>Edit:</p>
<p>If you are working with non-sliceable iterators you have to work around it:</p>
<pre><code>start_at = 3   # first one included (0 based)
stop_at = 5    # last one (not included)

elements = ('foo', 'bar', 'baz', 'wuzz', 'fizz', 'fizzbuzz', 'wuzzfizzbuzz', 'foobarfuzzbizzwuzz')

# skip first few
it = iter(elements)
for _ in range(start_at):
    print("skipping: ", next(it))      # dont print, simply: next(it)

# enumerate the ones you want
i = start_at
for _ in range(stop_at-start_at):
    print(i,next(it))                 # you might need a try: except StopIteration:
    i+=1 
</code></pre>
<p>to get:</p>
<pre><code>skipping:  foo
skipping:  bar
skipping:  baz
3 wuzz
4 fizz
5 fizzbuzz
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the itertools module is where you should look when you want to iterate in a non standard way</p>
<p>in this case use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer">islice</a></p>
<p>to get the start index, use the <code>.index</code> function of the container(or hardcode it to 1 if you want to iterate from the second position regardless of the contents), the end index is the <code>len</code> of the container</p>
<pre><code>for count, elem in enumerate(itertools.islice(elements, elements.index('bar'), len(elements))
    print(count, elem)
</code></pre>
</div>
<span class="comment-copy">@Georgy, I don't actually think that's a good target. The questions are subtly different, there's no need for <code>iter</code> here for an input list / tuple, and <code>str.join</code> is not applicable.</span>
<span class="comment-copy">Thankyou for you reply, I have a for loop like this<code>for batch_id, batch_data in tqdm(enumerate(train_iter)):</code> , I want to iterate over a particular value of batch_id and batch_data. Can you please suggest me some solution for this please? where batch_id and batch_data i am getting from previous saved values.</span>
<span class="comment-copy">@aryan is the train_iter an iterable? try consuming the first few outside of your loop:  <code>for _ in range(5): next(train_iter)</code> to skip first 5 ...</span>
<span class="comment-copy">It is actually dataloader from pytorch and I am trying to start training iterations from previously saved values.</span>
<span class="comment-copy">@aryan see edit - no idea about your dataloader but this works for iterators</span>
<span class="comment-copy">Actually in my case, I just want to give a particular value to batch_id and batch_data, so that enumerate will start from there. where batch_id is int and batch_data is a list.</span>
