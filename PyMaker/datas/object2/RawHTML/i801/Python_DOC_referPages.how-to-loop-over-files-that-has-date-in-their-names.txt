<div class="post-text" itemprop="text">
<p>I want to create Gif file with many Png files. The problem is the Png files has date within their names e.g. (name_2017100706_var.png). The dates start are in yymmddhh format and start at 2017100706 end at 2017101712, with increment of 6 hrs, so the next file name will contain 2017100712 in its name, and I want the code to loop over the files sequentially according to the dates. So I am using the following code:</p>
<pre><code>import os
import imageio
import datetime
png_dir = '/home/path/'
images = []
counter = 2017100706
while counter &lt;= 2017101712:
    for file_name in os.listdir(png_dir):
        if file_name.startswith('name_'+str(counter)):
            file_path = os.path.join(png_dir, file_name)
            images.append(imageio.imread(file_path))
            counter +=6
imageio.mimsave('/home/path/movie.gif', images, duration = 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Question</strong>: How to loop over files that has date in their names</p>
</blockquote>
<p>Example using a <code>class object</code> with the following <strong>built-in functions</strong>:  </p>
<ul>
<li><a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir(path='.')</code></a></li>
<li><a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted(iterable, *, key=None, reverse=False)</code></a> </li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#object.__iter__" rel="nofollow noreferrer"><code>object.__iter__(self)</code></a> </li>
<li><a href="https://docs.python.org/3/reference/simple_stmts.html#index-26" rel="nofollow noreferrer">The yield statement</a></li>
</ul>
<hr/>
<pre><code>import os
import imageio

class SortedDateListdir():
    def __init__(self, dpath):
        # Save directory path for later use
        self.dpath = dpath

        listdir = []

        # Filter from os.listdir only filename ending with '.png'
        for fname in os.listdir(dpath):
            if fname.lower().endswith('.png'):
                listdir.append(fname)

        # Sort the list 'listdir' according the date in the filename                
        self.listdir = sorted(listdir, key=lambda fname: fname.split('_')[1])

    def __iter__(self):
        # Loop the 'self.listdir' and yield the filepath
        for fname in self.listdir:
            yield os.path.join(self.dpath, fname)

if __name__ == "__main__":
    png_dir = '/home/path'
    movie = os.path.join(png_dir, 'movie.gif')

    images = []
    for fpath in SortedDateListdir(png_dir):
        images.append(imageio.imread(fpath))

    imageio.mimsave(movie, images, duration=1)
</code></pre>
<p><strong><em>Tested with Python: 3.4.2</em></strong></p>
</div>
<span class="comment-copy">so, basically, get all the file names that exist in a folder and then sort them by name (sorry, i'm lazy to look for code examples =D).</span>
<span class="comment-copy">here is explained how to get files from a folder: <a href="https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory" title="how do i list all files of a directory">stackoverflow.com/questions/3207219/â€¦</a> And here you can find how to sort a list of strings (filenames): <a href="https://stackoverflow.com/questions/36139/how-to-sort-a-list-of-strings" title="how to sort a list of strings">stackoverflow.com/questions/36139/how-to-sort-a-list-of-strings</a></span>
<span class="comment-copy">If you can't just list the files in a directory and need to generate the file names, I would suggest using a <code>datetime</code> object to store the date time and using a <code>timedelta</code> to add 6 hours to each datetime object.  This will make it easier to change dates at boundaries.  Then you can format the <code>datetime</code> object as you want to create the string names you want.</span>
