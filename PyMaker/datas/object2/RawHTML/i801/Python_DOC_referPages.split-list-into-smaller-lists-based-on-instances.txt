<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8092877/split-a-list-of-tuples-into-sub-lists-of-the-same-tuple-field">Split a list of tuples into sub-lists of the same tuple field</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a list of tuples of the form:</p>
<pre><code> list = [('A',2),('A',1),('B',3),('A',4),('B',5),('A',1)]
</code></pre>
<p>And I want two lists, one with all the tuples with first element 'A' and the other with tuples with first element 'B'.</p>
<pre><code> listA = [('A',2),('A',1),('A',4),('A',1)]
 listB = [('B',3),('B',5)]
</code></pre>
<p>Any ideas? Thank you!
EDIT : Note that the list above is just as an example, my actual list is much longer and has 100+ different first elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>List comprehensions will do the trick:</p>
<pre><code>listA = [x for x in list if x[0] == 'A']
listB = [x for x in list if x[0] == 'B']
</code></pre>
<p>Also, naming a variable <code>list</code> is generally a bad idea, as it overwrites the built-in <a href="https://docs.python.org/3/library/stdtypes.html#typesseq" rel="nofollow noreferrer"><code>list</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simplest and readable way is to use <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>listA = [t for t in list if t[0]=='A']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try below Solution, hope this will solve your problem</p>
<pre><code>ls= [('A',2),('A',1),('B',3),('A',4),('B',5),('A',1)]
key = [i[0] for i in ls]
temp = []
for i in ls:
    temp2 = []
    for j in key:
        if i[0] == j:
            temp2.append(i)
    temp.append(temp2)
</code></pre>
<p>output of above code is:</p>
<pre><code>[[('A', 2)], [('A', 1)], [('B', 3)], [('A', 4)], [('B', 5)], [('A', 1)]]
</code></pre>
<p>list will convert your 1 list into list of list based on key of tuple.</p>
</div>
<span class="comment-copy">Have you tried anything? A simple for-loop version perhaps?</span>
<span class="comment-copy">I could do a loop but my actual list has 100+ different first elements so I'm not sure how to go about that</span>
<span class="comment-copy">That was just for my example, my actual list is much too long for list comprehensions I think, as I have 100+ different first elements</span>
