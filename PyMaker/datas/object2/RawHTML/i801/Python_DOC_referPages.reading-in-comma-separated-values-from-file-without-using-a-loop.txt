<div class="post-text" itemprop="text">
<p>If each line of a text file looks something like this</p>
<pre><code>Carlos Guestrin,CIS 41A,4.5,A,BUS 55,5,A,BUS 18,5,B+,HUMI 16,4,A-
</code></pre>
<p>How would I read all the data into a data structure without using a loop? I'm thinking of having the name (Carlos) be an instance variable and store only the values after the name into the data structure, namely a dictionary of tuples (with the class name as the key value)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the csv library:</p>
<pre><code>import csv
with open('file.csv') as f:
    data = list(csv.reader(f))
</code></pre>
<p>Data becomes a list of lists, with each list being a row in your file.</p>
<p>Edit:</p>
<p>To get this into a dict of tuples you can further process it with a dict comprehension:</p>
<pre><code>data = {i[1]: {"Name": i[0], "Grades": tuple(i[1:])} for i in data}
</code></pre>
<p>If you're trying to get rid of the first row just slice data (<code>data = data[1:]</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Why can't you use a loop? If you can use a dictionary comprehension, you can do:</p>
<pre><code>row = line.strip().split(',')
record = {"name": line[0], "grades": {row[i]: row[i+1]} for i in range(1, len(row), 2}}
</code></pre>
<p>You could also use a class instance instead of a dictionary.</p>
<p>Instead of calling <code>split()</code> explicitly, you can use the <code>csv</code> library as in @Primusa's answer to read each line into a list, then use the above dictionary comprehension to rearrange it into more structured form.</p>
</div>
<div class="post-text" itemprop="text">
<p>You code use <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>str.spltline()</code></a> which would return a <code>list</code> of strings.</p>
<p>E.G.</p>
<pre><code>from pprint import pprint

filename = 'test_data'
with open(filename, 'r') as inp:
    data = inp.read().splitlines()

pprint(data)
</code></pre>
<p>Sample output:</p>
<pre class="lang-none prettyprint-override"><code>['Carlos Guestrin1,CIS 41A,4.5,A,BUS 55,5,A,BUS 18,5,B+,HUMI 16,4,A-',
 'Carlos Guestrin2,CIS 41A,4.5,A,BUS 55,5,A,BUS 18,5,B+,HUMI 16,4,A-',
 'Carlos Guestrin3,CIS 41A,4.5,A,BUS 55,5,A,BUS 18,5,B+,HUMI 16,4,A-']
</code></pre>
</div>
<span class="comment-copy">Use the <code>csv</code> library to read the file.</span>
<span class="comment-copy">It the number of fields variable, since students can take different numbers of classes?</span>
<span class="comment-copy">The question is ambiguous. Do you want to read the file without using a loop or store the values without a loop or just no loops at all? Why do you want to do it without loops?</span>
<span class="comment-copy">In addition to use <code>csv</code> library as @Barmar pointed out, you can also consider use <code>str,split(',')</code>. See: <a href="https://docs.python.org/3.7/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/3.7/library/stdtypes.html#str.split</a></span>
<span class="comment-copy">@spaniard I used that in my answer.</span>
<span class="comment-copy">He seems to be looking for more structure than that, like grouping the class names and grades into tuples.</span>
<span class="comment-copy">@Barmar noted and edited</span>
