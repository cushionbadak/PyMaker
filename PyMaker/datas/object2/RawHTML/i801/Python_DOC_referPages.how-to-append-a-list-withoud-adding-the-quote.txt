<div class="post-text" itemprop="text">
<p>I have this code:</p>
<pre><code>def add_peer_function():
    all_devices=[]
    all_devices.append("cisco,linux")
    print(all_devices)

add_peer_function()
</code></pre>
<p>Which results in :</p>
<pre><code>['cisco,linux']
</code></pre>
<p>My question is how can append the list without qota. So a result like this:</p>
<pre><code>[cisco,router]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well, I know two possible ways, but the first one is faster:</p>
<p><strong>1</strong>:</p>
<pre><code>def add_peer_function():
    all_devices=[item for item in "cisco,linux".split(',')] # or `all_devices = ["cisco", "linux"]`
    print(', '.join(all_devices)) # A prettier way to print list Thanks to Philo

add_peer_function()
</code></pre>
<p><strong>2</strong>:</p>
<pre><code>def add_peer_function():
    all_devices=[] 
    for item in "cisco,linux".split(','): # or `all_devices = ["cisco", "linux"]`
        all_devices.append(item)

    print(', '.join(all_devices)) # A prettier way to print list Thanks to Philo

add_peer_function()
</code></pre>
<p>Python <a href="https://docs.python.org/2/library/string.html#string.split" rel="nofollow noreferrer">str.split</a> documentation.</p>
<p>Python <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">str.join</a> documentation.</p>
<p>Python <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python prints objects, by default, with its convention: strings are between quotes.</p>
<p>If you want to get another format, you can write your own formatter.</p>
<p>For lists of strings, a common pattern in Python is:</p>
<pre><code>my_list = ['one', 'two', 'three']
print(', '.join(my_list))
</code></pre>
<p>Replace ', ' by another separator, eventually.</p>
<p>Finally, note that "cisco,linux" is just a string with a coma, which is different from a list of strings: ["cisco", "linux"].</p>
</div>
<div class="post-text" itemprop="text">
<p>Of course, if you append the string <code>'cisco,linux'</code> to a list, you get <code>['cisco,linux']</code> which is the string representation of this list in Python.</p>
<p>What you what is to <a href="https://docs.python.org/3.8/library/stdtypes.html?highlight=strip#str.strip" rel="nofollow noreferrer">split</a> the string.</p>
<p>Try:</p>
<pre><code>&gt;&gt;&gt; 'cisco,linux'.split(',')
['cisco', 'linux']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>append accepts only one argument. so, <code>your_list.append(something)</code> will add something to <code>your_list</code>. you can however do sth like below.</p>
<p><code>your_list += [el for el in "cisco,linux".split(",")]</code></p>
</div>
<span class="comment-copy">Strings are <i>displayed</i> in single or double quotes, this just isn't what you want</span>
<span class="comment-copy">As the things you're aiming to append are strings, it will not be possible to omit the quotes. However, you're currently appending one string, containing two words that are separated by a comma. To append two individual strings, use two <code>append()</code> calls or use <code>all_devices += ["cisco", "linux"]</code>.</span>
<span class="comment-copy">@applesoup or a single <code>.extend</code> call which is probably more efficient</span>
<span class="comment-copy">@DeepSpace: Sure, that also works. However, in my opinion, the <code>+=</code> operator could be interpreted as being more <i>pythonic</i>.</span>
<span class="comment-copy">Thanks! Nice it worked</span>
