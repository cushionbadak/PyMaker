<div class="post-text" itemprop="text">
<p>I've been experimenting with different Python modules such as <code>pycurl</code> and <code>requests</code> but still unable to get <code>curl -v &lt;URL&gt;</code> output as shown below.</p>
<p><strong>DESIRED OUTPUT (In Python code)</strong></p>
<pre><code>C:\&gt;curl -v http://example.com/
*   Trying 93.184.216.34...
* TCP_NODELAY set
* Connected to example.com (93.184.216.34) port 80 (#0)
&gt; GET / HTTP/1.1
&gt; Host: example.com
&gt; User-Agent: curl/7.52.1
&gt; Accept: */*
&gt;
&lt; HTTP/1.1 200 OK
&lt; Cache-Control: max-age=604800
&lt; Content-Type: text/html; charset=UTF-8
&lt; Date: Mon, 21 Jan 2019 00:34:32 GMT
&lt; Etag: "1337+ident"
&lt; Expires: Mon, 28 Jan 2019 00:34:32 GMT
&lt; Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT
&lt; Server: ECS (sjc/4E29)
&lt; Vary: Accept-Encoding
&lt; X-Cache: HIT
&lt; Content-Length: 1270
&lt;
&lt;!doctype html&gt;
&lt;html&gt;
... input truncated ...
&lt;/html&gt;
* Curl_http_done: called premature == 0
* Connection #0 to host example.com left intact

C:\&gt;
</code></pre>
<p>Since this is in Windows, I don't want to use <code>os.system</code> and <code>subprocess</code> modules as <code>curl.exe</code> is not there by default.</p>
<p>Here are my attempts ... But I still did not get similar output as produced by <code>curl -v</code></p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; requests.get("http://example.com").content
&gt;&gt;&gt; requests.get("http://example.com").text

&gt;&gt;&gt; import pycurl                        
&gt;&gt;&gt; c = pycurl.Curl()                    
&gt;&gt;&gt; c.setopt(c.URL, 'http://example.com')
&gt;&gt;&gt; c.perform()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking for information about <code>Last-Modified</code>, <code>Cache-Control</code> etc,
in <code>requests</code> you can check out <code>headers</code>.</p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; req = requests.get("http://example.com")
&gt;&gt;&gt; req.headers
{'Content-Encoding': 'gzip', 
'Accept-Ranges': 'bytes', 
'Cache-Control': 'max-age=604800', 
'Content-Type': 'text/html; charset=UTF-8', 
'Date': 'Mon, 21 Jan 2019 01:13:53 GMT', 
'Etag': '"1541025663"', 
'Expires': 'Mon, 28 Jan 2019 01:13:53 GMT', 
'Last-Modified': 'Fri, 09 Aug 2013 23:54:35 GMT', 
'Server': 'ECS (dca/24A0)', 
'Vary': 'Accept-Encoding', 
'X-Cache': 'HIT', 
'Content-Length': '606'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without any third-party packages (e.g. <code>requests</code>), in Python 3.7.2:</p>
<pre><code>&gt;&gt;&gt; import urllib.request
&gt;&gt;&gt; dict(urllib.request.urlopen("http://example.com").headers)
{'Accept-Ranges': 'bytes', 'Cache-Control': 'max-age=604800', 'Content-Type': 'text/html; charset=UTF-8', 'Date': 'Mon, 21 Jan 2019 02:52:13 GMT', 'Etag': '"1541025663+gzip"', 'Expires': 'Mon, 28 Jan 2019 02:52:13 GMT', 'Last-Modified': 'Fri, 09 Aug 2013 23:54:35 GMT', 'Server': 'ECS (sjc/4E8B)', 'Vary': 'Accept-Encoding', 'X-Cache': 'HIT', 'Content-Length': '1270', 'Connection': 'close'}
</code></pre>
<p><a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow noreferrer">docs</a></p>
</div>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/10588644/how-can-i-see-the-entire-http-request-thats-being-sent-by-my-python-application" title="how can i see the entire http request thats being sent by my python application">stackoverflow.com/questions/10588644/â€¦</a></span>
<span class="comment-copy">If you want your output to be exactly like <code>curl</code> use <code>curl</code>. And even Windows can run subprocesses. If you actually want something else: please explain.</span>
