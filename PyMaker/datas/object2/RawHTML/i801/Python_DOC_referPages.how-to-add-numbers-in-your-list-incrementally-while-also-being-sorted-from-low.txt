<div class="post-text" itemprop="text">
<p>I'm trying to write code to firstly, order numbers from lowest to highest (e.g. 1, 3, 2, 4, 5 to 1, 2, 3, 4, 5). Secondly, I would like to incrementally add the numbers in the list.
eg. </p>
<pre><code>1
3
6
10
15
</code></pre>
<p>I've already tried using the <code>sum</code> function, then the <code>sorted</code> function, but I was wondering if I can write them neatly in a code to just get everything worked out.</p>
<pre><code>Addition = [1, 13, 166, 3, 80, 6, 40]
print(sorted(Addition))
</code></pre>
<p>I was able to get the numbers sorted horizontally, but I wasn't able to get the numbers added vertically. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer"><code>itertools.accumulate</code></a> with <code>sorted</code>:</p>
<pre><code>import itertools

mylist = [1, 2, 3, 4, 5]
result = list(itertools.accumulate(sorted(mylist)))
# result: [1, 3, 6, 10, 15]
</code></pre>
<p>The default action is <code>operator.add</code>, but you can customize it. For example, you can do running product instead of running sum if you needed it:</p>
<pre><code>import itertools
import operator

mylist = [1, 2, 3, 4, 5]
result = list(itertools.accumulate(sorted(mylist), operator.mul))
# result: [1, 2, 6, 24, 120]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Apparently, you need a <code>cumulative addition</code>. You can code a simple one using a simple loop and <code>yield</code> the results on the go</p>
<pre><code>def cumulative_add(array):
    total = 0
    for item in array:
        total += item
        yield total


&gt;&gt;&gt; list(cumulative_add([1,2,3,4,5]))
[1, 3, 6, 10, 15]
</code></pre>
<hr/>
<p>Depending on your goals, you may also wish to use a library, such as <code>pandas</code>, that has cumulative sum already written for you. </p>
<p>For example,</p>
<pre><code>&gt;&gt;&gt; s = pd.Series([1,2,3,4,5])
&gt;&gt;&gt; s.cumsum()

0     1
1     3
2     6
3    10
4    15
</code></pre>
</div>
<span class="comment-copy">This doesn't do anything to "order numbers from lowest to highest".</span>
<span class="comment-copy">@martineau I assumed OP already solved this problem since he/she used <code>sorted</code> :)</span>
<span class="comment-copy">I'm not sure that assumption is true. The OP should feel free to pipe in and clarify that aspect of their question...</span>
<span class="comment-copy">Why wouldn't my assumption be true? Clearly there is not fundamental reason for you to think that, and the other answer just repeated OP's <code>sorted</code>.</span>
