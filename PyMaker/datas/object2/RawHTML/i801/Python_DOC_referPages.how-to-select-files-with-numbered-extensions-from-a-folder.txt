<div class="post-text" itemprop="text">
<p>I am trying to build my own dataset for a project. Therefore I need to select  files that have been exported from another program and come with numbered extensions:</p>
<pre><code>exported_file_1_aaa.001
exported_file_2_aaa.002
exported_file_3_aaa.003
...
exported_file_5_zzz.925
...and so on.
</code></pre>
<p>I know how to select files with a specific extension e.g. '.txt' from a folder and append it to a list or dict. Is there any way to solve this with '.nnn'</p>
<pre><code>ext = '.nnn'
all_files = [i for i in os.listdir(dir) if os.path.splitext(i)[1] == ext]
for f in all_files:
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can mix the capabilities of shell globbing (<code>glob</code>) and regex (<code>re</code>).</p>
<p>With <code>glob</code> you can get the files ending with a number, so that we get a limited number files for <code>re</code> to do the final check:</p>
<pre><code>glob.iglob('exported_file_*.*[0-9]')
</code></pre>
<p>Then we can match the files precisely with Regex pattern:</p>
<pre><code>\.\d+$
</code></pre>
<p>this will match file names ending in digits after last <code>.</code>.</p>
<p>Putting together:</p>
<pre><code>import glob
import re
[file for file in glob.iglob('exported_file_*.*[0-9]') if re.search(r'\.\d+$', file)]
</code></pre>
<hr/>
<p>Shell globbing is not as flexible as <code>re</code>, otherwise we could have done with <code>glob</code> alone.</p>
<p>Also, if you're sure that all files end in a certain number of digits then <code>glob</code> alone would work e.g. for files ending in 3 digits after last <code>.</code>:</p>
<pre><code>glob.iglob('exported_file_*.[0-9][0-9][0-9]')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't care about the length of the extension, you can use the <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer">isdigit</a> method:</p>
<pre><code>all_files = [i for i in os.listdir(dir) if os.path.splitext(i)[1].isdigit()]
for f in all_files: 
    ....
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>glob</code> module.</p>
<pre><code>import glob

my_dir = "mydir"

all_files = [fn for fn in glob.glob(f"{my_dir}/*.[0-9][0-9][0-9]")]
</code></pre>
</div>
<span class="comment-copy">Thank you very much for your advice! I'm new to python (as you've probably figured) and I really do appreciate the community!  It worked with: [file for file in glob.iglob('<i>.[0-9][0-9][0-9]')]  [file for file in glob.iglob('</i>.[0-9][0-9][0-9]') if re.search(r'\.\+$')]  gave me the error message  "search() missing 1 required positional argument: 'string'" so I guess I have to pass ", file" as in [file for file in glob.iglob('*.[0-9][0-9][0-9]') if re.search(r'\.\+$', file)], right?</span>
<span class="comment-copy">@user10892488 Good catch. Check my edits.</span>
