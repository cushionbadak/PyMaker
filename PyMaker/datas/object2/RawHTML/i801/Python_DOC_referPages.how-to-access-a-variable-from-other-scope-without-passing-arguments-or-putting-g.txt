<div class="post-text" itemprop="text">
<p>I have a function lambda_handler in the lambda module including other module and calling helloWorld function.</p>
<p>Passing the arguments in the helloWorld function or putting the variables as global is not an option. Is it possible to access variables from earlier scope?</p>
<pre><code>#--- lambda.py ---   
import my_module 

def lambda_handler(event,context):
    my_module.helloWorld()   

#--- my_module.py ---
def helloWorld():
    local_variable = &lt;something&gt;.context    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/inspect.html#types-and-members" rel="nofollow noreferrer"><code>inspect</code></a> module to get the calling frame's local variables:</p>
<pre><code>import inspect


def lambda_handler(event, context):
    helloWorld()

def helloWorld():
    calling_frame = inspect.currentframe().f_back
    print(calling_frame.f_locals['event'])
    print(calling_frame.f_locals['context'])


lambda_handler('an event', 'a context')
</code></pre>
<p>Outputs</p>
<pre><code>an event
a context
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You might try:</p>
<pre><code>from mymodule import *
</code></pre>
<p>Because that should import the variables from <em>mymodule</em>.</p>
<p>But it might not import variables created after the import, because it reads the code in the <em>def</em> statements as what to do when called, it doesn't actually create the variables.</p>
</div>
<span class="comment-copy">"Passing the arguments in the helloWorld function is not an option" why? In theory you can mess with the previous frame.</span>
<span class="comment-copy">@DeepSpace passing the arguments in helloWorld function is not an option in this problem since I cannot modify the provided API</span>
<span class="comment-copy">You can't access variables from an inaccessible scope, no - otherwise scope would have no meaning. That doesn't mean you can't design your scopes in the way you need. In this case, while the context isn't totally clear, perhaps you could move <code>helloWorld</code> so that it is defined inside <code>lambda_handler</code>? (The only reason this wouldn't work would be if you need to access <code>helloWorld</code> outside <code>lambda_handler</code>.)</span>
<span class="comment-copy">@RobinZigmond It is possible by inspecting the calling frame.</span>
<span class="comment-copy">Thanks @DeepSpace - I stand corrected. I still think though that for most uses the kind of introspection you have in your answer is too "magical" for ordinary use, and it's better to simply rethink your program design.</span>
