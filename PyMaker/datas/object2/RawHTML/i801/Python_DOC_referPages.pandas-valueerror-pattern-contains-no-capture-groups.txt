<div class="post-text" itemprop="text">
<p>When using regular expression, I get:</p>
<pre><code>import re
string = r'http://www.example.com/abc.html'
result = re.search('^.*com', string).group()
</code></pre>
<p>In pandas, I write:</p>
<pre><code>df = pd.DataFrame(columns = ['index', 'url'])
df.loc[len(df), :] = [1, 'http://www.example.com/abc.html']
df.loc[len(df), :] = [2, 'http://www.hello.com/def.html']
df.str.extract('^.*com')

ValueError: pattern contains no capture groups
</code></pre>
<p>How to solve the problem?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.extract.html" rel="nofollow noreferrer">docs</a>, you need to specify a <em>capture group</em> (i.e., parentheses) for <code>str.extract</code> to, well, extract.</p>
<blockquote>
<p><code>Series.str.extract(pat, flags=0, expand=True)</code><br/>
  For each subject
  string in the Series, extract groups from the first match of regular
  expression pat.</p>
</blockquote>
<p>Each capture group constitutes its own column in the output. </p>
<pre><code>df.url.str.extract(r'(.*.com)')

                        0
0  http://www.example.com
1    http://www.hello.com
</code></pre>
<p></p>
<pre><code># If you need named capture groups,
df.url.str.extract(r'(?P&lt;URL&gt;.*.com)')

                      URL
0  http://www.example.com
1    http://www.hello.com
</code></pre>
<p>Or, if you need a Series,</p>
<pre><code>df.url.str.extract(r'(.*.com)', expand=False)

0    http://www.example.com
1      http://www.hello.com
Name: url, dtype: object
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need specify column <code>url</code> with <code>()</code> for match groups:</p>
<pre><code>df['new'] = df['url'].str.extract(r'(^.*com)')
print (df)
  index                              url                     new
0     1  http://www.example.com/abc.html  http://www.example.com
1     2    http://www.hello.com/def.html    http://www.hello.com
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this python library, works well for this purpose:</p>
<p>Using <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer"><code>urllib.parse</code></a></p>
<pre><code>from urllib.parse import urlparse
df['domain']=df.url.apply(lambda x:urlparse(x).netloc)
print(df)

  index                              url           domain
0     1  http://www.example.com/abc.html  www.example.com
1     2    http://www.hello.com/def.html    www.hello.com
</code></pre>
</div>
