<div class="post-text" itemprop="text">
<p>I have a 4 dimensional array with shape <code>(1, 2000, 102, 32)</code> </p>
<p>I would like to convert it to <code>(64000,102)</code> 64000 is based on (2000*32).</p>
<p>Then store it in csv file.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Does ordering of the dimensions matter? If not, you can just use numpy reshape function. Example is below.</p>
<pre><code>import numpy as np
a=np.zeros((1, 2000, 102, 32))
print(a.shape)
b=a.reshape(64000,102) 
print(b.shape)
</code></pre>
<p>checkout <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> on how to write it to csv</p>
</div>
<span class="comment-copy">what have you tried so far?</span>
<span class="comment-copy">Hi, This didn't work out. Cause the shape of the array is 4 dimension and the dimensions are (1,2000,102,32). I want to reduce the dimensions to 2D (64000, 102)</span>
<span class="comment-copy">edited the response accordingly</span>
<span class="comment-copy">Quick question, does this reshape place the first 2000 rows and then append next 2000 rows in a sequence?</span>
<span class="comment-copy">Yes. It just flattens everything and follows the normal sequence.</span>
