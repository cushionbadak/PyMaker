<div class="post-text" itemprop="text">
<p>I would like to find a way to combine slash separated words from a list of strings. Here's an example:</p>
<pre><code>string1 = 'awesome/stupid'
string2 = 'red/blue/yellow' 
string3 = 'car'


def some_func(string1, strin2):

.
.
.
</code></pre>
<p>Output:</p>
<pre><code>'awesome red car'
'awesome blue car'
'awesome yellow car'    
'stupid red car'
'stupid blue car'
'stupid yellow car'
</code></pre>
<p>What I've tried splitting by '/' and adding strings, but the loop ends up being too big. The solution I'm looking for is for a general case, where I don't know the amount of words separated by slashs.
Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product()</code></a>:</p>
<pre><code>from itertools import product

strings = [string1, string2, string3]    # Put all your slash-separated strings here
for x in product(*(s.split('/') for s in strings)):
    print(' '.join(x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found a solution myself using itertools.product(*args)</p>
<pre><code>string1 = ['awesome/stupid','red/blue/yellow','car']
s = [x.split('/') for x in string]
</code></pre>
<p>Output:</p>
<pre><code>[['awesome', 'stupid'], ['red', 'blue', 'yellow'], ['car']]
</code></pre>
<p>Then</p>
<pre><code>import itertools

prod = list(itertools.product())
prod
</code></pre>
<p>Output:</p>
<pre><code>[('awesome', 'red', 'car'),
('awesome', 'blue', 'car'),
('awesome', 'yellow', 'car'),
('stupid', 'red', 'car'),
('stupid', 'blue', 'car'),
('stupid', 'yellow', 'car')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using loops in a naive way:</p>
<pre><code>string1 = 'awesome/stupid'
string2 = 'red/blue/yellow' 
string3 = 'car'

for x in string1.split('/'):
    for y in string2.split('/'):
        print(f'{x} {y} {string3}')

# awesome red car
# awesome blue car                                              
# awesome yellow car                                          
# stupid red car                                              
# stupid blue car                                             
# stupid yellow car
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this code</p>
<pre><code>string1 = 'awesome/stupid'
string2 = 'red/blue/yellow' 
string3 = 'car'

def(str1,str2,str3):
    list1=str1.split("/")
    list2=str2.split("/")
    list3=str3.split("/")
    for i in list1:
       for j in list2:
           for k in list3:
               print(i,j,k)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>'awesome red car'
'awesome blue car'
'awesome yellow car'    
'stupid red car'
'stupid blue car'
'stupid yellow car'
</code></pre>
<p>Hope it helps :)</p>
</div>
<span class="comment-copy">will string3 be of one word</span>
<span class="comment-copy">stackoverflow is not a code-writing service, try it yourself and come back if something specific goes wrong</span>
<span class="comment-copy">I posted the same solution without realising you answered! Thank you, that's exactly what I needed.</span>
<span class="comment-copy">@PepeMoreno no problem, you should consider marking your own answer as correct as well :)</span>
<span class="comment-copy">Thank you Austin, but I wanted a general solution, for an unknown number of strings and slash separated words. I just posted what I consider the best solution. Still, thanks.</span>
<span class="comment-copy">thank you, but I meant for a general case, with n strings and m words. I just posted the solution I found, but thanks for the help anyway.</span>
