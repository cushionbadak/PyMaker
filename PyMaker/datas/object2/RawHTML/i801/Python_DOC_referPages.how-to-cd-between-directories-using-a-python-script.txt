<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/431684/how-do-i-change-directory-cd-in-python">How do I change directory (cd) in Python?</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>I'm writing a test script that is supposed to cd from the current directory into a new one if that path is confirmed to exist and be a directory</p>
<pre><code>serial_number = input("Enter serial number: ")
directory = "/etc/bin/foo"
if os.path.exists(directory) and os.path.isdir(directory):
   #cd into directory?
   subprocess.call(['cd ..' + directory])
</code></pre>
<p>My dilemma is that I don't know how to properly pass a variable into a subprocess command, or whether or not I should use call or Popen. When I try the above code, it comes back with an error saying that <code>No such file or directory "cd ../etc/bin/"</code>. I need is to travel back one directory from the current directory so then I can enter <code>/etc</code> and read some files in there. Any advice?</p>
</div>
<div class="post-text" itemprop="text">
<p>To change working directory of use </p>
<pre class="lang-py prettyprint-override"><code>os.chdir("/your/path/here")
</code></pre>
<p>subprocess will spawn new process and this doesn't affect your parent.</p>
</div>
<div class="post-text" itemprop="text">
<p>you should use <code>os.chdir(directory)</code> and then call to open your process. I imagine this would be more straightforward and readable</p>
</div>
<div class="post-text" itemprop="text">
<p>It is not possible to change current directory using a subprocess, because that would change the current directory only withing the context of that subprocess and would not affect the current process.</p>
<p>Instead, to change the current directory within the Python process, use Python's function which does that: <a href="https://docs.python.org/3/library/os.html#os.chdir" rel="nofollow noreferrer"><code>os.chdir</code></a>, e.g.:</p>
<pre><code>os.chdir('../etc/bin/')
</code></pre>
<hr/>
<p>On the other hand, if your idea is that the Python script does nothing else, but just change directory and than exit (this is how I understood the question), that won't work either, because when you exit the Python process, current working directory of the parent process will again not be affected.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to get one folder back, Just do it as you do in the shell.</p>
<pre><code>os.chdir('..')
</code></pre>
<p>or in your case, you can, </p>
<pre><code>directory = "/etc/bin/foo"
if os.path.exists(directory) and os.path.isdir(directory):
    os.path.normpath(os.getcwd() + os.sep + os.pardir)
</code></pre>
<p><strong>Output will be:</strong> <strong><em>"/etc/bin"</em></strong></p>
</div>
<span class="comment-copy">Using <code>subprocess</code> to run <code>cd</code> is almost always going to be useless; it only changes the working directory for the forked subprocess, leaving the current working directly unchanged once <code>subprocess.call</code> returns. This is also true if you are expecting the working directory to have changed after your Python process exits.</span>
<span class="comment-copy">It's more than just "straightforward" and "readable": it's the only possible way that <i>actually works</i>.  Doing a <code>cd</code> in a subprocess has absolutely no effect on the parent process.</span>
