<div class="post-text" itemprop="text">
<p>So i'm trying a different approach to graph coloring, what i did basically is assign randomly colors to the nodes of a graph and what i want to do is, after assigning those colors, check if that coloring is correct (no adjacent nodes having the same color) in other words, going through the nodes and their respective colors and make sure no adjacent nodes have that same color.</p>
<p>Here is what i've done so far :</p>
<pre><code>def approx_color(graph):
      colors = [1,2,3,4,5,6,7,8,9]
      xr = random.randint(0, len(graph.nodes))
      s_c = []
      for i in range(len(graph.nodes)):
          s_c.append(random.choice(colors))
      colored = dict(zip(graph.nodes,s_c))
      print(colored)
</code></pre>
<p>EDIT : </p>
<p>The "graph" variable is a graph generated by networkx library, and <code>graph.nodes()</code> <code>graph.edges()</code> being a list of the nodes and edges of the graph</p>
</div>
<div class="post-text" itemprop="text">
<p>For the first part you can directly use <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">random.choices()</a></p>
<pre><code>def approx_color(graph):
    colors = [1,2,3,4,5,6,7,8,9]
    s_c = random.choices(colors, k=graph.order())
    colored = dict(zip(graph.nodes(), s_c))
</code></pre>
<p>A graph coloring is correct if no two adjacent vertices are of the same color.
So you just have to iterate over the nodes and check their neighbors.<br/>
So you can just define a function that check for the condition to be valid.</p>
<pre><code>for u in graph.nodes():
    for v in graph.neighbors(u):
        if colored[u] == colored[v]:
            return False
return True
</code></pre>
</div>
<span class="comment-copy">This question is not clear. What is the <code>graph</code> variable? What do you meant by wanting to <i>"check"</i>? What do you mean by <i>"coloring is correct"</i>? Please take a look at <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a> and <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a>. These pages may help you formulate the questions better.</span>
<span class="comment-copy">I edited my post, i hope everything is clear now.</span>
<span class="comment-copy">Cool, it is now clear what you are asking :) However, it is still not clear where your problem lies. Now you need to go through the nodes again and compare them with their adjacent nodes.</span>
<span class="comment-copy">Yep, works fine, I didn't really read too much about the networkx lib and i didn't know that neighbors was predefined. Thanks for the answer :D</span>
