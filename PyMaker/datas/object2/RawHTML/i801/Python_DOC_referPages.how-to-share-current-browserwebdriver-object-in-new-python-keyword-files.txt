<div class="post-text" itemprop="text">
<p>I use below code but it returns : RuntimeError('No browser is open')</p>
<pre><code>class UtilityFunction(ExtendedSelenium2Library):
    ROBOT_LIBRARY_SCOPE = 'GLOBAL'

    def __init__(self):
        # super.__init__()
        self.lib = BuiltIn().get_library_instance('ExtendedSelenium2Library')
        self.driver=self.lib._current_browser()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The code in the <code>__init__()</code> is ran when an object is initialized - in Robot Framework that happens when the library is imported (in the beginning of the file). At that point, there is no opened browser - you still haven't ran the suite setup, the keyword <code>Open Browser</code> hasn't been ran; thus the exception.</p>
<p>The "fix" is not to get an instance of the webdriver in the constructor:</p>
<pre><code>def __init__(self):
    # super.__init__()
    self.lib = BuiltIn().get_library_instance('ExtendedSelenium2Library')
    self._driver = None  # internal attribute, don't use it in the methods, but "self.driver"

@property
def driver(self):
    if self._driver is None:
        self._driver=self.lib._current_browser()
    return self._driver

@driver.setter
def driver(self, custom):
    self._driver=custom
</code></pre>
<p>This approach is using <a href="https://docs.python.org/3/library/functions.html?highlight=class%20property#property" rel="nofollow noreferrer">class properties</a> - automatic getter and setters; when your code uses <code>self.driver</code>, if it's value is not defined (still <code>None</code>), it will automatically be assigned to the return of <code>self.lib._current_browser()</code>.</p>
</div>
<span class="comment-copy">It would be even more convenient to make <code>self.driver</code> a property.</span>
