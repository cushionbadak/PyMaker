<div class="post-text" itemprop="text">
<p>I am a newer to python,
i have learned print format like:<code>%[(dic-name)][flags][width][.precision]format</code>
and i want to practice it but i have a problem and i want to know why.thanks</p>
<p>My Python version is：</p>
<pre><code>Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
</code></pre>
<p>and i use IPython</p>
<pre><code> IPython 7.2.0 -- An enhanced Interactive Python. Type '?' for help.
</code></pre>
<p>I have a dictionary like this：</p>
<pre><code>dic1 = {1:"hello",2:"python"}
</code></pre>
<p>i want to print a element of the dictionary with print function.</p>
<pre><code>print("The first element is %(1)s"%dic1)
</code></pre>
<p>But i got a KeyError like this:</p>
<pre><code>  ---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-3-3712b45a538a&gt; in &lt;module&gt;
----&gt; 1 print("The first element is %(1)s"%dic1)

KeyError: '1'
</code></pre>
<p>If the dictionary is：</p>
<pre><code>dic2 = {"1":"hello","2":"python"}
</code></pre>
<p>i will get the correct result.
why the dic1 can not print like that and what's the right format?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can usually use dictionary keys with star unpacking</p>
<pre><code>dic1 = {"key1":"hello","key2":"python"}
print("{key1}".format(**dic1))
</code></pre>
<p>Here the keys are numbers (and not even strings but it doesn't matter anyway: to use the technique above, the arguments must be valid as python identifiers, see <a href="https://stackoverflow.com/questions/42514939/what-are-valid-keys-according-to-python-str-format-documentation">what are valid keys according to Python str.format() documentation</a>)</p>
<p>When doing <code>print("{1}".format(whatever))</code>, <code>format</code> interprets them as positional argument (2nd argument) and it fails miserably.</p>
<p>One solution is to pass the dictionary to <code>format</code> and query it from the format string:</p>
<pre><code>dic1 = {1:"hello",2:"python"}

print("{dic[1]}".format(dic=dic1))
</code></pre>
<p>result:</p>
<pre><code>hello
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your line is that you are passing a '1' (string), not a 1 (int)</p>
<p><strong>Note</strong>: the new <code>format()</code> method is <a href="https://docs.python.org/3/library/string.html#string-formatting" rel="nofollow noreferrer">the recommended one</a> for python 3.x. </p>
<p>You can do something like: </p>
<pre><code>print("The first element is {d[1]}".format(d=dic1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to order your items by number then use <strong>list</strong> instead</p>
<p>Also you can do this:</p>
<pre><code>dict([(1, 2), (3, 4)])
</code></pre>
<p>The result will be </p>
<pre><code>{1: 2, 3: 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The key in your dictionary is a integer, and the key in the print function is parse as map are string. That give you this error. You can print in this ways:</p>
<pre><code> print("The first element is ",dic1[1])
 print("The first element is {}".format(dic1[1]))
</code></pre>
<p>also you can change the keys in dict to string: <code>dic1 = {"1":"hello","2":"python"}</code></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/47207495/python-printing-dictionary-key-and-value-side-by-side">Python Printing Dictionary Key and Value side by side</a></span>
<span class="comment-copy">Try this   print("The first element is %s"%dic1[1])</span>
