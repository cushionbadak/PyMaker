<div class="post-text" itemprop="text">
<p>I want to add such a condition that if any of the turtles in the race crosses the finish line or a specified position, the loop automatically ends there. This is a race program in which 4 turtles race, moving random distances turn by turn. So I would like a code that would allow me to end the turn loop as soon as one of the turtle hits the last line. I tried using it in a while loop but it didn't work out well; I hope somebody can fix my code.</p>
<p>HERE IS MY CODE ::::</p>
<pre><code>from turtle import *

from random import randint

from turtle import position

penup ()
speed (10)
goto (-140, 125)

for step in range (11) :
  write (step, align = "center")
  right (90)
  forward (10)
  pendown ()
  forward (150)
  penup ()
  backward (160)
  left (90)
  forward (20)

aaa = Turtle()
aaa.color ("red")
aaa.shape ("turtle")
aaa.penup ()
aaa.goto (-150, 100)
aaa.pendown ()

bbb = Turtle()
bbb.color ("blue")
bbb.shape ("turtle")
bbb.penup ()
bbb.goto (-150, 60)
bbb.pendown ()

ccc = Turtle()
ccc.color ("yellow")
ccc.shape ("turtle")
ccc.penup ()
ccc.goto (-150, 20)
ccc.pendown ()

ddd = Turtle()
ddd.color ("green")
ddd.shape ("turtle")
ddd.penup ()
ddd.goto (-150, -20)
ddd.pendown ()

for turn in range (1) :
  aaa.right(360)
  bbb.left(360)
  ccc.right(360)
  ddd.left(360)

for turn in range (70) :
  aaa.forward(randint(1, 5))
  bbb.forward(randint(1, 5))
  ccc.forward(randint(1, 5))
  ddd.forward(randint(1, 5))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This question is slightly more interesting than it seems at first glance, since there's one rather trivial and one a little more involved part to it.</p>
<blockquote>
<p>I would like a code that would allow me to end the turn loop as soon as one of the turtle hits the last line.</p>
</blockquote>
<p>Since the finish line is the last line drawn in the <code>for step in range (11) :</code> loop, we can simply store the turtle's x coordinate (returned by <a href="https://docs.python.org/3/library/turtle.html#turtle.xcor" rel="nofollow noreferrer"><code>.xcor()</code></a>) when the lines are drawn and get the last line's position after the loop:</p>
<pre><code>for step in range(11):
  â€¦
  finish = xcor()   # remember where line has been drawn
  forward(20)
</code></pre>
<p>One of the turtles hitting the finish line then means that at least one of the turtles' x coordinates reaches <code>finish</code>; with this condition, we don't need to assume a maximum number of turns and can use a <code>while</code> instead of the <code>for</code> loop:</p>
<pre><code>while max(aaa.xcor(), bbb.xcor(), ccc.xcor(), ddd.xcor()) &lt; finish:
  aaa.forward(randint(1, 5))
  bbb.forward(randint(1, 5))
  ccc.forward(randint(1, 5))
  ddd.forward(randint(1, 5))
</code></pre>
<p>But now, when we look at the picture at the end of the race, we see that the winning turtles have crossed the finish line with the center of their bodies (because the body center is taken as the turtle position), although a turtle should rather win as soon as its head hits the finish line. So, to make it right, we'd have to adjust the value of <code>finish</code> to account for the leading of the head with respect to the center. For this, we can use <a href="https://docs.python.org/3/library/turtle.html#turtle.get_shapepoly" rel="nofollow noreferrer"><code>.get_shapepoly()</code></a> which returns <em>the current shape polygon as tuple of coordinate pairs</em>, e. g.</p>
<pre><code>((0, 16), (-2, 14), (-1, 10), (-4, 7), (-7, 9), (-9, 8), (-6, 5), (-7, 1), (-5, -3), (-8, -6), (-6, -8), (-4, -5), (0, -7), (4, -5), (6, -8), (8, -6), (5, -3), (7, 1), (6, 5), (9, 8), (7, 9), (4, 7), (1, 10), (2, 14))
</code></pre>
<p>The shape's center is at (0, 0), and the returned polygon always has the same orientation, in the turtle's case with the head pointing upwardly, so we need the maximum y coordinate for the adjustment, to be placed before the <em>turn loop</em>:</p>
<pre><code># adjust the finish line position for the turtle's head rather than its center
finish -= max([y for x, y in aaa.get_shapepoly()])  # y as head points upwards
</code></pre>
</div>
<span class="comment-copy">This is not a code-writing service. What have you tried?</span>
<span class="comment-copy">Loop until one turtle's <a href="https://docs.python.org/3.3/library/turtle.html?highlight=turtle#turtle.xcor" rel="nofollow noreferrer">x-coordinate</a> is at the finish line.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/54103580/5771269">Use a while loop to control game in Python turtle</a>.</span>
