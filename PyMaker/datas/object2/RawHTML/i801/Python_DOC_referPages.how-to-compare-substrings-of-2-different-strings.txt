<div class="post-text" itemprop="text">
<p>I'm trying to compare 2 last names and see which comes first in alphabetical order</p>
<ul>
<li>Grace Hopper</li>
<li>Katherine Johnson</li>
</ul>
<p>How would I extract the second word in any string with [firstword: secondword] format?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems you want to get the last names from the full names.
If a person "1" has name "ABC DEF";
Another person "2" has name "PQR STU";</p>
<p>You can tokenize the string by using split() command.</p>
<pre><code>person1 = "ABC DEF"
person2 = "PQR STU"
name1   = person1.split(" ")
name2   = person2.split(" ")
</code></pre>
<p>Now the results will be,</p>
<pre><code>print(name1)
&gt;&gt;&gt; ['ABC', 'DEF']
print(name2)
&gt;&gt;&gt; ['PQR', 'STU']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To extract the last name, you can use <a href="https://docs.python.org/3.7/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split</code></a> to split the name. It will, by default, split on whitespace:</p>
<pre><code>fullname = 'Grace Hopper'
first_name, last_name = fullname.split()
</code></pre>
<p>Then, to compare alphabetically, simply compare the lastnames:</p>
<pre><code>if last_name_1 &lt; last_name_2:
    ...
</code></pre>
<p>Or, use <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> to sort all names in a list of names:</p>
<pre><code>fullnames = 'Grace Hopper', 'Katherine Johnson'

sorted_fullnames = sorted(fullnames, key=lambda fullname: fullname.split()[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>s = 'Grace Hopper Katherine Johnson'

result = min(s.split()[1::2])
print(result)
</code></pre>
<p>Output:</p>
<pre><code>Hopper
</code></pre>
<p>Note that it's case sensitive (<code>A</code> &lt; <code>a</code>). For a case insensitive version:</p>
<pre><code>result = min(s.split()[1::2], key=str.lower)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>.split</code> function to split string into words.</p>
<pre><code>In [1]: a="Grace Hopper"

In [2]: b="Katherine Johnson"

In [3]: a.split()
Out[3]: ['Grace', 'Hopper']

In [4]: b.split()
Out[4]: ['Katherine', 'Johnson']

In [6]: a.split()[1]
Out[6]: 'Hopper'

In [8]: b.split()[1]
Out[8]: 'Johnson'

In [9]: a.split()[1] &lt; b.split()[1]
Out[9]: True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The most appropriate way to do this is to use <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">split()</a> function:</p>
<blockquote>
<p>Return a list of the words in the string, using sep as the delimiter
  string.</p>
<p>If sep is not specified or is None, a different splitting algorithm is
  applied: runs of consecutive whitespace are regarded as a single
  separator, and the result will contain no empty strings at the start
  or end if the string has leading or trailing whitespace.</p>
</blockquote>
<hr/>
<p>For instance:</p>
<pre><code>&gt;&gt;&gt; name = "Grace Hopper"
&gt;&gt;&gt; name = name.split()
&gt;&gt;&gt; name
&gt;&gt;&gt; ["Grace", "Hopper"]
</code></pre>
<p>If you want to compare by alphabetical order several strings, just use one of the comparison operators:</p>
<pre><code>&gt;&gt;&gt; name1 = "Stan"
&gt;&gt;&gt; name2 = "Viktor"
&gt;&gt;&gt; name1 &gt; name2
&gt;&gt;&gt; False
</code></pre>
<p>You're getting this result because of <code>ord("S") &lt; ord("V")</code>,  <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer">ord()</a> built-in function returns an integer representing the Unicode code point of that character. </p>
</div>
<span class="comment-copy">I understand simply asking question is easy. But please, at least read some basic tutorial of python before asking, for example <a href="https://www.w3schools.com/python/python_strings.asp" rel="nofollow noreferrer">w3schools.com/python/python_strings.asp</a></span>
