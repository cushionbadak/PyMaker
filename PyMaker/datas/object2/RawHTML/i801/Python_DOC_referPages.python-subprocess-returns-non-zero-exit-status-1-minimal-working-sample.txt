<div class="post-text" itemprop="text">
<p>Why doesn't this work when running as Administrator?</p>
<pre><code>import subprocess

command = "wbadmin get versions"
output = subprocess.check_output(["powershell", command], timeout=120)
print(output)
</code></pre>
<p>When I run it from powershell or cmd, it works.</p>
<p>When I use Popen and communicate() I get the error:</p>
<pre><code>"wbadmin" is not a known name, function or script..." 
The original message is in german:
b''
b'wbadmin : Die Benennung "wbadmin" wurde nicht als Name eines Cmdlet, einer Funktion, einer Skriptdatei oder eines \r\nausf\x81hrbaren Programms erkannt. \x9aberpr\x81fen Sie die Schreibweise des Namens, oder ob der Pfad korrekt ist (sofern \r\nenthalten), und wiederholen Sie den Vorgang.\r\nIn Zeile:1 Zeichen:1\r\n+ wbadmin get versions\r\n+ ~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (wbadmin:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n \r\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The errors in question, comments tend to point to the fact that there's a <strong>big chance</strong> that the code posted here is not the one that you run (maybe it's out of date?).</p>
<p>Anyways, running your <strong>exact</strong> code (saved in a file called <em>code.py</em>) yields:</p>
<blockquote>
<pre class="lang-py prettyprint-override"><code>e:\Work\Dev\StackOverflow\q054334592&gt;"e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" code.py
Traceback (most recent call last):
  File "code.py", line 4, in &lt;module&gt;
    output = subprocess.check_output(["powershell", command], timeout=120)
  File "c:\Install\x64\Python\Python\03.06.08\Lib\subprocess.py", line 356, in check_output
    **kwargs).stdout
  File "c:\Install\x64\Python\Python\03.06.08\Lib\subprocess.py", line 438, in run
    output=stdout, stderr=stderr)
subprocess.CalledProcessError: Command '['powershell', 'wbadmin get versions']' returned non-zero exit status 1.
</code></pre>
</blockquote>
<p>Not too much useful info. <br/>But <em>check_output</em> is just a convenience wrapper, which in the current case works against us. For more details, check <a href="https://docs.python.org/3/library/subprocess.html#module-subprocess" rel="nofollow noreferrer">[Python 3]: subprocess - Subprocess management</a>. <br/>So, I modified your code.</p>
<p><em>code.py</em>:</p>
<pre class="lang-py prettyprint-override"><code>import subprocess

ps_args = "wbadmin get versions"

cmd = ["powershell", *ps_args.split(" ")]  # It works with your way too (["powershell", ps_args]), I'm just being rigorous
print("Popen arguments: {:}".format(cmd))

proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
out, err = proc.communicate(timeout=120)

print("\nProcess terminated with exit code: {:}".format(proc.returncode))

print("\nSTDOUT:\n{:}\n".format(out.decode()))
print("STDERR:\n{:}\n".format(err.decode()))
</code></pre>
<p>This time, the output is:</p>
<blockquote>
<pre class="lang-py prettyprint-override"><code>e:\Work\Dev\StackOverflow\q054334592&gt;"e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" code.py
Popen arguments: ['powershell', 'wbadmin', 'get', 'versions']

Process terminated with exit code: 1

STDOUT:
wbadmin 1.0 - Backup command-line tool
(C) Copyright Microsoft Corporation. All rights reserved.

ERROR - No backup was found.



STDERR:
</code></pre>
</blockquote>
<p>Now, it's visible that the <em>PS</em> (<em>powershell</em>) command <strong>run attempt was successfully run</strong>, but the command itself, <strong>failed</strong>. So, everything is good on <em>subprocess</em> (and <em>Python</em>) side (fact that wasn't quite clear when using <em>check_output</em>), and the problem is on <em>PS</em> side.</p>
<p>In my case, I have no backups, so it's expected to fail. But anyway, from here it seems more like a sysadmin task.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the full path in your command. For example:</p>
<pre><code>ps_args = "/etc/bin/wbadmin get versions" 
</code></pre>
</div>
<span class="comment-copy">Do you start <i>Python</i> (or your script) as Administrator?</span>
<span class="comment-copy">as far as I know, yes. I first run CMD as  Administrator then I run python.</span>
<span class="comment-copy">What does it output when you run the command (<code>powershell wbadmin get versions</code>) in <i>cmd</i>? Also use <i>Popen</i> and <i>communicate</i>, and paste the output in the question.</span>
<span class="comment-copy">"wbadmin 1.0 - Sicherungs-Befehlszeilentool (C) Copyright 2013 Microsoft Corporation. Alle Rechte vorbehalten.  FEHLER - Es wurde keine Sicherung gefunden."  When I run it on a Server with Backups it returns Information about the Last Backup</span>
<span class="comment-copy">Unfortunately I too have no backups, so I can't test it. On the server with backups, if you run it from <i>Python</i>, what do you get (still with <i>Popen</i> and <i>communicate</i>)?</span>
<span class="comment-copy">Thank you a lot. I tried it, it gives me this: wbadmin : "wbadmin" can not be recognized as a cmdlet, function, or script.... Maybe something wrong with PATH variables ?</span>
<span class="comment-copy">That's a <i>PS</i> error. You probably don't have the package installed.</span>
<span class="comment-copy">You seem to have more than one problem here. The info from the comment doesn't correspond to the one in the question (suddenly "<i>"wbadmin" can not....</i>"). You are trying on different machines with different results, but because of external reasons.So <i>Python</i> is not the problem here, and you probably should mark this question as resolved and submit another one strictly on <i>PS</i>.</span>
<span class="comment-copy">Don't think that bringing <i>Nix</i> style paths into play would do it.</span>
