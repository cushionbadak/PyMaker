<div class="post-text" itemprop="text">
<p>I have tried to encode the Unicode characters in the file that I am passing into the pandas dataframe. But the number of unique row counts with df.column.value_counts() that I am getting in Jupyter notebook is not matching the excel row counts of the same file(after removing duplicate values). </p>
<p>How do I fix the issue? </p>
<p>I have loaded a text file(tab separated) and converted that into a pandas dataframe using encoding = 'ISO-8859-1'. The dataframe was created with unique row counts as 66370 for one of the columns. </p>
<p>When I applied 'Remove duplicates' on the desired column on the original csv file(I was using MS Excel to read the export file), the number of unique values = 66368. </p>
<p>There is a difference of 2 in these 2 files- the pandas dataframe in Jupyter Notebook - pandas unique row counts(66370) and the excel version of the row counts(66368). </p>
<p>I understand this could be an encoding issue but I am not able to fix the same. </p>
<p>Can anyone help please?</p>
<pre><code>df = pd.read_csv('csv_file.csv', encoding= 'ISO-8859-1')
df.column1.value_counts()
</code></pre>
<p>I am expecting equal results in the excel version of unique row_counts and df.column1.value_counts().</p>
<p>Actual results are showing a difference of 2 in the row counts by these 2 methods.  </p>
</div>
<div class="post-text" itemprop="text">
<p>-It might happen that you are reading the header column as well and do note that pandas starts indexing with Zero.
Could you please retry with below and let me know the result</p>
<pre><code>df = pd.read_csv('rounds2.csv', encoding= 'ISO-8859-1')
print(len(df.column1.unique()))
print(df.shape)
</code></pre>
<p>Please let me know outputs of both , also you you try to open the file in notepad++ and reconcile the numbers.</p>
<p>let me know your output and then i will edit my answer accordingly </p>
</div>
<div class="post-text" itemprop="text">
<p>Ok Guys. I have found the answer finally !! After about 6 hours of struggle, I finally figured out the right encoding technique-- the right encoder for my problem was 'ANSI'</p>
<p>so the only change to my code was the encoder below:</p>
<pre><code>df = pd.read_csv('csv_file.csv', encoding= 'mbcs')
</code></pre>
<p>I found the answer by going through this link: <a href="https://stackoverflow.com/questions/3710374/get-encoding-of-a-file-in-windows">Get encoding of a file in Windows</a></p>
<p>The right encoder is here: <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">https://docs.python.org/3/library/codecs.html#standard-encodings</a></p>
</div>
<span class="comment-copy">Hi. Please take the time to read this post on <a href="http://stackoverflow.com/questions/20109391/how-to-make-good-reproducible-pandas-examples">how to provide a great pandas example</a> as well as how to provide a <a href="http://stackoverflow.com/help/mcve">minimal, complete, and verifiable example</a> and revise your question accordingly. These tips on <a href="http://stackoverflow.com/help/how-to-ask">how to ask a good question</a> may also be useful.</span>
<span class="comment-copy">I would recommend that you add a unique column (could be just serial numbers) to both and use that to check <i>which rows</i> are missing - then you can see how Pandas reads it and see where the difference is coming from</span>
<span class="comment-copy">The fact that you're trying to read a <code>csv</code> file in excel and then compare it with your pandas output is incorrect. You need to open the <code>rounds2.csv</code> file in a text editor like <code>Notepad++</code> or <code>Ultraedit</code> to verify the actual line count (not columns).</span>
<span class="comment-copy">Excel treats each line of a csv file as a new row, which might not be the case and the actual rows might be lesser than what's excel is showing you.</span>
<span class="comment-copy">@ParvBanks: Beware: line count and row count can be quite different in a csv file: fields can contain new lines which adds lines to the text file.</span>
<span class="comment-copy">HI Puneet, len(df.column1.unique()) = 66370 ; df.shape = 114949, 6</span>
<span class="comment-copy">Also, when we are using value_counts()- it doesn't count the headers. And rest assured, i did not count the headers during "remove duplicates" operation in excel .</span>
