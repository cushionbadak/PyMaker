<div class="post-text" itemprop="text">
<p>I have a bit of code that is currently set to run a set of equations. I would like to allow the input of a custom numerical sequence. Instead of entering 100, I'd like to enter 1+00 but I'd like the code to interpret it as 100. After the equations are ran, I'd like the code to return results in the X+XX format.</p>
<p>I am new to coding (this is my first bit of code) and have looked around trying to find a way to format this. I know in excel I can specify custom number format of "#+##.00" to get it to output a cell in the format I require. I have been unable to find the python equivalent.</p>
<pre><code>from tkinter import *
from math import *

def show_entry_fields():
     try:
          a, c, d, e, = float(e1.get()), float(e3.get()), float(e4.get()), float(e5.get())
          b = e - d
          s = (a + b + c) / 2
          height = (sqrt (s * (s - a) * (s - b) * (s - c)) * 2) / b
          height = float(format(height, '.3f'))
          height_label['text'] = str(height)
          side =((sqrt ((a ** 2) - (height ** 2))) + b)
          side = float(format(side, '.3f'))
          side_label['text'] = str(side)
     except ValueError:
          pass
     master.after(100, show_entry_fields)

master = Tk()
master.attributes("-topmost", True)
master.title("Triangulation Plotting")

Label(master, text="Measurement #1 Station Line Location").grid(row=1, column=0, sticky=W, pady=4)
e4 = Entry(master)
e4.grid(row=1, column=1, sticky=E)

Label(master, text="Triangulation Measurement #1").grid(row=2, column=0, sticky=W, pady=4)
e1 = Entry(master)
e1.grid(row=2, column=1, sticky=E)

Label(master, text="Measurement #2 Station Line Location").grid(row=3, column=0, sticky=W, pady=4)
e5 = Entry(master)
e5.grid(row=3, column=1, sticky=E)

Label(master, text="Triangulation Measurement #2").grid(row=7, column=0, sticky=W, pady=4)
e3 = Entry(master)
e3.grid(row=7, column=1, sticky=E, pady=4)

Label(master, text="Offset from station line").grid(row=8, column=0, sticky=W, pady=4)
height_label = Label(master, text="")
height_label.grid(row=8, column=1)

Label(master, text="Measurement on Station Line").grid(row=9, column=0, sticky=W, pady=4)
side_label = Label(master, text="")
side_label.grid(row=9, column=1)

master.after(100,show_entry_fields)
master.mainloop()
</code></pre>
<p>Omitted sections are entry fields. The math and everything comes out exactly as needed. The entry of X+XX is the format that is used for the specific application this is intended. I looked in the str.format() under docs but did not see how I could do this.</p>
<p>EDIT:
So if I enter 2+66, it will be interpreted as 266. It will conduct the calculations based on the other inputs and the result will be shown in the same format. For numbers less than 100 or 1+00, it will output with a leading 0 i.e. 0+57 for 57. Entries and results will be in floating point. All results will be loaded to 2 decimal places.</p>
</div>
<div class="post-text" itemprop="text">
<p>For strings, split on <code>'+'</code> and <code>'.'</code>, construct a number with an f-string; turn it into a float and round it.  For a float, round to required precision, turn into a string, split on <code>'.'</code> then construct with an f-string.</p>
<pre><code>def convert(thing):
    if isinstance(thing, str):
        a,b = thing.split('+')
        b,*d = b.split('.')
        d = '00' if not d else d[0]
        thing = round(float(f'{a}{b}.{d}'), 2)
    elif isinstance(thing, (int,float)):
        thing = str(round(thing, 2))
        thing,*d = thing.split('.')
        d = '00' if not d else d[0]
        thing = thing if len(thing) &gt; 2 else '0'+thing
        thing = f'{thing[:-2]}+{thing[-2:]}.{d}'
    return thing
</code></pre>
<p>Python 3.6 required for <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a></p>
<p>For Python 3.5- use string formatting:</p>
<pre><code>thing = round(float('{}{}.{}'.format(a,b,d)), 2)
# and
thing = '{}+{}.{}'.format(thing[:-2],thing[-2:],d)
</code></pre>
<hr/>
<p>Usage<br/>
Strings to numbers:</p>
<pre><code>&gt;&gt;&gt; convert('2+66')
266.0
&gt;&gt;&gt; convert('0+22')
22.0
&gt;&gt;&gt; convert('2+66') + convert('0+22')
288.0
&gt;&gt;&gt; x = '223+56.666'
&gt;&gt;&gt; convert(x)
22356.67
&gt;&gt;&gt; y = '-54+22.33212'
&gt;&gt;&gt; convert(y)
-5422.33
&gt;&gt;&gt; 
</code></pre>
<p>Numbers to strings</p>
<pre><code>&gt;&gt;&gt; convert(22)
'0+22.00'
&gt;&gt;&gt; convert(23454.22123)
'234+54.22'
&gt;&gt;&gt; convert(-56732)
'-567+32.00'
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">Please describe the <i>rules</i> for fomatting the numbers and give a few examples showing how different numbers are supposed to <i>appear</i>?</span>
<span class="comment-copy">So if I enter 2+66, it will be interpreted as 266. It will conduct the calculations based on the other inputs and  the result will be shown in the same format. For numbers less than 100 or 1+00, it will output with a leading 0 i.e. 0+57 for 57.</span>
<span class="comment-copy">Please include that in your question. - Integers only or floating point also?</span>
<span class="comment-copy">Floating point. Will update the question.</span>
<span class="comment-copy">What is 266.237 supposed to look like? and 2345.237?</span>
<span class="comment-copy">Thank you. I will give that a try tomorrow when I get home from work.</span>
<span class="comment-copy">I'm on 3.6.6 so I'll try the f-string.</span>
<span class="comment-copy">Due to a combination of my being new to coding, my lack of sleep (worked 16 hours yesterday and am headed back to work now), and my lack of time to play with it for more than 20 minutes today, I am unable to get it to work. Having said that, I basically dropped it in. Could you guide me on making it function? Updated original question with entire code (not terribly long) prior to adding what you put.</span>
<span class="comment-copy">Thank you @wwii, you have been a ton of help. One final question: How would I implement it to auto read the fields and convert similar to how I have the calculations happening automatically?</span>
<span class="comment-copy">I am having trouble implementing it into reading the tkinter Entry field and printing on the tkinter Label field. I'm sure it's something easy and obvious, however, I am still having trouble. I'd appreciate any help, thanks.</span>
