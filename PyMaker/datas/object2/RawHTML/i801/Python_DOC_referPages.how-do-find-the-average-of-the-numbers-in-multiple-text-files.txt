<div class="post-text" itemprop="text">
<p>I have multiple (around 50) text files in a folder and I wish to find the mean average of all these files. Is there a way for python to add up all the numbers in each of these files automatically and find the average for them?</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume you don't want to put the name of all the files manually, so the first step is to get the name of the files in python so that you can use them in the next step.</p>
<pre><code>import os
import numpy as np

Initial_directory = "&lt;the full address to the 50 files you have ending with /&gt;"
Files = []
for file in os.listdir(Initial_directory):
     Path.append( begin + file0 )
</code></pre>
<p>Now the list called "Files" has all the 50 files. Let's make another list to save the average of each file.
reading the data from each file depends on how the data is stored but I assume that in each line there is a single value.</p>
<pre><code>Averages = []
for i in range(len(Files)):
    Data = np.loadtxt(Files[i])
    Averages.append (np.average(Data))
</code></pre>
<p>looping over all the files, Data stores the values in each file and then their average is added to the list Averages.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done if we can unpack the steps needed to accomplish.</p>
<p>steps:</p>
<ul>
<li>Python has a module called <code>os</code> that allows you to interact with the file system. You'll need this for accessing the files and reading from them.</li>
<li>declare a few variables as counters to be used for the duration of your script, including the directory name where the files reside.</li>
<li>loop over files in the directory, increment the total file_count variable by 1 (to get the total number of files, used for averaging at the end of the script).</li>
<li>join the file's specific name with the directory to create a path for the <code>open</code> function to find the accurate file.</li>
<li>read each file and add each line (assuming it's a number) within the file to the total number count (used for averaging at the end of the script), removing the newline character.</li>
<li>finally, print the average or continue using it in the script for whatever you need.</li>
</ul>
<p>You could try something like the following:</p>
<pre><code>#!/usr/bin/env python

import os

file_count=0
total=0
dir_name='your_directory_path_here'

for files in os.listdir(dir_name):
    file_count+=1
    for file_name in files:
        file_path=os.path.join(dir_name,file_name)
        file=open(file_path, 'r')
        for line in file.readlines():
            total+=int(line.strip('\n'))

avg=(total/file_count)
print(avg)
</code></pre>
</div>
<span class="comment-copy">This isn't a website for getting people to write your code from scratch. What have you tried? See <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy"><i>Is there a way for python to add up all the numbers in each of these files automatically</i> What do you mean by this?</span>
<span class="comment-copy">The answer is <b>yes</b>: use <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">open()</a> to open the files, <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-list" rel="nofollow noreferrer">lists</a> to store your numbers, <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum()</a> to sum lists of numbers, <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow noreferrer">len()</a> to get the length of a list and <a href="https://docs.python.org/3/library/functions.html#divmod" rel="nofollow noreferrer">divmod()</a> to perform divisions</span>
