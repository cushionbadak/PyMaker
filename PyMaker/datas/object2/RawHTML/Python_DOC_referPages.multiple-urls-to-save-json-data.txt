<div class="post-text" itemprop="text">
<p>I'm trying to call multiple (more than 10 urls) at a time and save all those 10 url's data, which will be in json format and trying to save in my location</p>
<p>here is the below code I have tried, using this I can only achieve to get only last URL's data saved in my json file. How to get all URL's data and stored in a single json file? </p>
<pre><code>import json
import requests

URLs = ['http://httpbin.org/ip',
'http://httpbin.org/user-agent',
'http://httpbin.org/headers']

json_list = []
for url in URLs:
    data = requests.get(url)
    resolvedwo = data.json()
    with open('resolvedworesolution.json', 'w') as f:
         json.dump(resolvedwo, f)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you are overwriting the file, each time in the loop. Instead, store the loop results in a list and write it to the file only once</p>
<pre><code>import requests
import json

URLs = ['http://httpbin.org/ip',
        'http://httpbin.org/user-agent',
        'http://httpbin.org/headers']

json_list = []

for url in URLs:
    data = requests.get(url)
    resolvedwo = data.json()
    json_list.append(resolvedwo)

with open('resolvedworesolution.json', 'w+') as f:
    json.dump(json_list, f, sort_keys=True, indent=4)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[
    {
        "origin": "137.221.143.66, 137.221.143.66"
    },
    {
        "user-agent": "python-requests/2.21.0"
    },
    {
        "headers": {
            "Accept": "*/*",
            "Accept-Encoding": "gzip, deflate",
            "Host": "httpbin.org",
            "User-Agent": "python-requests/2.21.0"
        }
    }
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When writing to files, opening a file in <code>w</code> mode will erase/truncate the contents before writing to it. </p>
<pre class="lang-py prettyprint-override"><code>with open('resolvedworesolution.json', 'a') as f:
</code></pre>
<p>That should solve your problem</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow noreferrer">append mode</a> while writing to the file in order to "retain" the existing data:</p>
<pre><code>import json
import requests
URLs = ['http://httpbin.org/ip',
'http://httpbin.org/user-agent',
'http://httpbin.org/headers']

json_list = []
for url in URLs:
    data = requests.get(url)
    resolvedwo = data.json()
    with open('resolvedworesolution.json', 'a') as f:   # Using the append mode
        json.dump(resolvedwo, f)
        f.write("\n")                                   # new line for readability
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>{"origin": "159.122.207.241, 159.122.207.241"}
{"user-agent": "python-requests/2.21.0"}
{"headers": {"Accept": "*/*", "Accept-Encoding": "gzip, deflate", "Host": "httpbin.org", "User-Agent": "python-requests/2.21.0"}}
</code></pre>
<p><strong>EDIT</strong>:</p>
<p>You could write the response to the file in one-go:</p>
<pre><code>with open('resolvedworesolution.json', 'a') as f:
    f.write(str(resolvedwo))
    f.write("\n")
</code></pre>
<p><strong>OR</strong></p>
<pre><code>for url in URLs:
    data = requests.get(url)
    with open('resolvedworesolution.json', 'a') as f:
        f.write(data.text)
        f.write("\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store the info in an object that can be serialized as a whole:</p>
<pre><code>import json
import requests

URLs = ['http://httpbin.org/ip',
'http://httpbin.org/user-agent',
'http://httpbin.org/headers']

json_list = []
for url in URLs:
    data = requests.get(url)
    resolvedwo = data.json()
    json_list.append(resolvedwo)

with open('resolvedworesolution.json', 'w+') as f:
    json.dump(json_list, f)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of:</p>
<pre><code>resolvedwo = data.json()
</code></pre>
<p>You probably want:</p>
<pre><code>resolvedwo += data.json()
</code></pre>
</div>
<span class="comment-copy">Bad indentation.</span>
<span class="comment-copy">@DirtyBit, copy paste issue. It is not that problem as of now</span>
<span class="comment-copy">@MDI then fix the copy-paste, please</span>
<span class="comment-copy">@C.Nivs, done..</span>
<span class="comment-copy">Hint: Use append mode <code>a</code> for writing.</span>
<span class="comment-copy">Ok... What does indent =4 means?</span>
<span class="comment-copy">indent=4 implies that each line needs to be indended by 4 spaces; It just makes the json file to look pretty</span>
<span class="comment-copy">throws error:    <code>json.decoder.JSONDecodeError: Extra data: line 1 column 605744 (char 605743)</code></span>
<span class="comment-copy">It's very possible that the <code>json</code> from the website content is not valid</span>
<span class="comment-copy">@MDI <code>JSONDecode</code> is a <code>json.loads</code> error, so where is that error actually coming from?</span>
<span class="comment-copy">Here,  Actually the error line was not in the question section, below is the code where I try to load and open   <code>with open('C:\\Users\\ibmha\\PycharmProjects\\Projects\\Resolved_without_Resolution\\resolvedworesolution.json', encoding='utf-8-sig') as f:   data = json.load(f)</code></span>
<span class="comment-copy">throws error:   <code>json.decoder.JSONDecodeError: Extra data: line 1 column 605744 (char 605743)</code></span>
<span class="comment-copy">@MDI before going here: <a href="https://stackoverflow.com/questions/21058935/python-json-loads-shows-valueerror-extra-data" title="python json loads shows valueerror extra data">stackoverflow.com/questions/21058935/…</a> Could you make sure the file is empty before running this?</span>
<span class="comment-copy">Yes, I cleared the file and then ran the code and it throws the same error</span>
<span class="comment-copy">Actually the error line was not in the question section, below is the code where I try to load and open  <code>with open('C:\\Users\\ibmha\\PycharmProjects\\Projects\\Resolved_without_Resolution\\resolvedworesolution.json', encoding='utf-8-sig') as f:     data = json.load(f)</code></span>
<span class="comment-copy">@MDI try <code>with open('resolvedworesolution.json', 'a', encoding="ISO-8859-1")</code> as f:</span>
<span class="comment-copy">throws error:    <code>json.decoder.JSONDecodeError: Extra data: line 1 column 605744 (char 605743)</code></span>
<span class="comment-copy">try now. You can store the content in a dict or list and write everything at the end of the for loop</span>
<span class="comment-copy">this throws:  <code>io.UnsupportedOperation: not readable</code></span>
<span class="comment-copy">For me it works nicely. I changed <code>'w'</code> to <code>'w+'</code> because I didn't have the file, so it creates it and then writes the json data... Make sure that you don't have already a file with that name or change the filename...</span>
<span class="comment-copy">Nope. that would throw an error, guess which one?</span>
<span class="comment-copy">yes, it throws error. not helpful buddy</span>
