<div class="post-text" itemprop="text">
<p>I need to convert string object location to an object. My code is:</p>
<pre><code>class Dog:
    def __init__(self,name):
        self.name= name

    def bark(self):
        print('BAR')

b=''

a=Dog('Test')
print(a)
with open('Dog.txt','w') as file:
   file.write(str(a))

with open('Dog.txt','r') as file:
   b=file.read()
   b=repr(b)

print(b)
b.bark()
</code></pre>
<p>I saved the object <code>a</code> in a <code>Dog.txt</code> file <code>&lt;__main__.Dog object at 0x0000024E1C7AFE80&gt;</code> and now i want to take that string and convert it to an object so I can use the <code>bark</code> method with it.</p>
<p>How can I do this</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use <a href="https://pypi.org/project/pyaml/" rel="nofollow noreferrer">PyYAML</a>:</p>
<pre><code>pip install PYyaml
</code></pre>
<p>and dump and load data from yaml files:</p>
<pre><code>In [1]: class Dog:
   ...:     def __init__(self,name):
   ...:         self.name= name
   ...: 
   ...:     def bark(self):
   ...:         print('BAR')
   ...: 
   ...: b=''
   ...: 
   ...: a=Dog('Test')
   ...: print(a)
   ...: 
   ...: 
&lt;__main__.Dog object at 0x7fb082811390&gt;
</code></pre>
<p>now dump you object to the <code>yaml</code>:</p>
<pre><code>In [2]: import yaml

In [3]: with open('data.yml', 'w') as outfile:
   ...:     yaml.dump(a, outfile, default_flow_style=False)
</code></pre>
<p>inside the <code>data.yml</code> you will see:</p>
<pre><code>!!python/object:__main__.Dog
name: Test
</code></pre>
<p>and now load:</p>
<pre><code>In [6]: with open('data.yml', 'r') as loadfile:
   ...:     data = yaml.load_all(loadfile)
   ...:     b = next(data)
   ...:     

In [7]: b
Out[7]: &lt;__main__.Dog at 0x7fb07bfd5f28&gt;

In [8]: b.bark()
BAR
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot recover an object from its string representation. You should instead serialize the object before dumping it to the file. You can use <code>pickle</code> for this</p>
<pre><code>&gt;&gt;&gt; a
&lt;__main__.Dog object at 0x7f6d4ee8fb38&gt;
&gt;&gt;&gt; 
&gt;&gt;&gt; pickle.dump(a, open('Dog.txt', 'wb'))
&gt;&gt;&gt; b = pickle.load(open('Dog.txt', 'rb'))
&gt;&gt;&gt; b
&lt;__main__.Dog object at 0x7f6d4ee8fac8&gt;
&gt;&gt;&gt; b.bark()
BAR
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Both Bear Brown and Sunitha fail to mention that the loading they propose to do
can be unsafe. For PyYAML this is clearly indicated <a href="https://pyyaml.org/wiki/PyYAMLDocumentation#cb8" rel="nofollow noreferrer">at the start of the
tutorial</a>:</p>
<blockquote>
<p>Warning: It is not safe to call yaml.load with any data received
    from an untrusted source! yaml.load is as powerful as pickle.load
    and so may call any Python function</p>
</blockquote>
<p>Pickle has <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">a similar warning</a>:</p>
<blockquote>
<p>Warning The pickle module is not secure against erroneous or
    maliciously constructed data. Never unpickle data received from an
    untrusted or unauthenticated source</p>
</blockquote>
<p>At least using YAML, it is not necessary to run any risks now or in the future.</p>
<p>First do:</p>
<pre><code>pip install ruamel.yaml
</code></pre>
<p>Then:</p>
<pre><code>from ruamel.yaml import YAML

class Dog:
    # yaml_tag = u'!Doggie'
    def __init__(self, name):
        self.name = name

    def bark(self):
        print('BARK')

b = ''

a = Dog('Test')

yaml = YAML(typ='safe')
yaml.register_class(Dog)

with open('Dog.yaml','w') as ofp:
   yaml.dump(a, ofp)

with open('Dog.yaml') as ifp:
   b = yaml.load(ifp)

print(b.name, b)
b.bark()

print('==========')
with open('Dog.yaml') as ifp:
    print(ifp.read(), end='')
</code></pre>
<p>which gives:</p>
<pre><code>Test &lt;__main__.Dog object at 0x7f88a5479320&gt;
BARK
==========
!Dog {name: Test}
</code></pre>
<p>Notes:</p>
<ul>
<li>The "official" FAQ on yaml.org asks to use <code>.yaml</code> as <a href="http://yaml.org/faq.html" rel="nofollow noreferrer">the file
extension</a> for files containing YAML.</li>
<li>You can uncomment the "<code>yaml_tag =</code>" line, to use a different tag in YAML document 
than the default (i.e. your class name)</li>
<li>Not only is this safe, it also doesn't have <code>__main__</code> in the YAML file, which is 
essential if you ever decide to move the class definition to a different file.</li>
<li>Although not as fast as using pickle, the above is much (~10x) faster than the solution 
Bear Brown proposes. That might be relevant if you have 101 Dalmatians 
to dump and load.</li>
<li>It is not noticeable in your example data, but the above loads/dumps YAML according to the 
YAML 1.2 specification (published 2009) and also supports the long outdated YAML 1.1 specification. PyYAML has never been updated and still only supports YAML 1.1.</li>
</ul>
<p>(Disclaimer: I am the author of <code>ruamel.yaml</code>)</p>
</div>
<span class="comment-copy">That is not something you can (or should) do.</span>
<span class="comment-copy">@BearBrown no that is not what I ment I want to have a string object location and convert it to an object</span>
<span class="comment-copy">You need to seialized it before weriting to the file.</span>
