<div class="post-text" itemprop="text">
<p>Is  <code>__init__.py</code> file is a module ? I am learning python and come across packages and modules and i have one doubt that weather <code>__init__.py</code> file can be consider as module Since every python file is module so can we consider <code>__init__.py</code> as module ?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the official <a href="https://docs.python.org/3/glossary.html#term-module" rel="nofollow noreferrer">glossary</a> a module is</p>
<blockquote>
<p>An object that serves as an organizational unit of Python code. Modules have a namespace containing arbitrary Python objects. Modules are loaded into Python by the process of importing.</p>
</blockquote>
<p>Which (imho) borders on gibberish for saying "<code>module</code> objects or files with Python code."</p>
<p>Since even an empty <code>__init__.py</code> file contains valid Python code, and you can import it via <code>import __init__</code>, it would technically be considered a module.
I don't know how this knowledge could be useful.</p>
</div>
<span class="comment-copy">I would say so. Why are you asking?</span>
<span class="comment-copy">Actually i have confusion regarding this.</span>
<span class="comment-copy">so if i consider this as module so can i import this ??</span>
<span class="comment-copy">It's actually an interesting question, but knowing whether <code>__init__.py</code> is a module has exactly 0 practical benefits. It really doesn't matter one bit.</span>
<span class="comment-copy">@Djib2011: I would think a directory that contains an <code>__init__.py</code> file could not be considered a module. It's a <i>package</i>, and as such it can be imported, but <code>import package</code> is basically syntactic sugar for <code>import package.__init__ as package</code>, right?</span>
