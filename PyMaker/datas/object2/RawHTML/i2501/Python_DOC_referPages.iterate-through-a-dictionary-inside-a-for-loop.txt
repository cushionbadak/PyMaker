<div class="post-text" itemprop="text">
<p>I'm trying to print the values of a dictionary inside a for loop, currently this is what I'm getting:</p>
<pre><code>    Site 1
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '81,1001,1101,1301,1303'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '1007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '30,31,81,82'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '30,31,81,82,1001,1101'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '1007'}
    Site 1
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '82,1301,2001,2101'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '2007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '30,31,81,82'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '30,31,81,82,1301,2001,2101'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '2007'}
    Site 1
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '1006,1102'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '1007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '20,21'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '20,21,1006,1102'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '1007'}
    Site 1
    {'Port': '1/0/2', 'Link-Status': 'Down', 'Vlans': '2006,2102'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '2007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '20,21'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '20,21,2006,2102'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '2007'}
</code></pre>
<p>I have tried indexing the values inside the for loop, but I haven't had luck with this:</p>
<pre><code>    def main():
        input_site = new_site.keys()
        print(new_site.values())
        for element in input_site:
            i=0
            print(list(new_site.values())[i])
            i+=1
            processInput(element,type)
</code></pre>
<p>This is the content of my dictionary:</p>
<pre><code>    print(new_site.values())
    dict_values(['Site 1', 'Site 3', 'Site 7', 'Site 9'])
</code></pre>
<p>This is what I'm aiming for:</p>
<pre><code>    Site 1
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '81,1001,1101,1301,1303'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '1007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '30,31,81,82'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '30,31,81,82,1001,1101'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '1007'}
    Site 3
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '82,1301,2001,2101'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '2007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '30,31,81,82'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '30,31,81,82,1301,2001,2101'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '2007'}
    Site 7
    {'Port': '1/0/2', 'Link-Status': 'Up', 'Vlans': '1006,1102'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '1007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '20,21'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '20,21,1006,1102'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '1007'}
    Site 9
    {'Port': '1/0/2', 'Link-Status': 'Down', 'Vlans': '2006,2102'}
    {'Port': '1/0/4', 'Link-Status': 'Down', 'Vlans': '2007'}
    {'Port': '1/0/11', 'Link-Status': 'Up', 'Vlans': '20,21'}
    {'Port': '1/0/13', 'Link-Status': 'Up', 'Vlans': '20,21,2006,2102'}
    {'Port': '1/0/14', 'Link-Status': 'Up', 'Vlans': '2007'}
</code></pre>
<p>Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Inside your <code>for-loop</code> you have the following lines</p>
<pre><code>for element in input_site:
    i=0 # &lt;---
    print(list(new_site.values())[i])
    i+=1
</code></pre>
<p>At each iteration you assign i to be 0, then print the i-th element of <code>list(new_site.values())</code> and then increase its value by one.<br/>
The same will happen for the next iterations.<br/>
So, to fix it, <code>i</code> should be moved outside the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>Other than the <code>i=0</code> problem, there are some major issues with your for-loop:</p>
<pre><code>for element in input_site:
    print(list(new_site.values())[i])
    i+=1
    processInput(element,type)
</code></pre>
<ul>
<li>Every time you iterate, you copy the ENTIRE list of values, just to access a single element.</li>
<li><code>element</code> is a key in the <code>new_site</code> dict. There are ways to ask for the value associated with a key. Go over <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">the tutorial</a> and <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">the documentation</a> for <code>dict</code>.</li>
<li><p>When iterating over a dict, if you want both keys and values, you should use <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>.items()</code></a>, not <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow noreferrer"><code>.keys()</code></a>. Sample code:</p>
<pre><code>for key, value in d.items():
    ...
</code></pre></li>
<li>When you pass <code>type</code> to <code>processInput</code>, you are passing the function named <code>type</code>. <code>type</code> is a function that takes in an object and tells you what type it has. However, when you pass <code>type</code>, you are just passing the function itself. Is that really what you want? You need to <em>call</em> the function on an object to get its type.</li>
</ul>
<p>I recommend reviewing the material, or finding a tutor to explain to you what each part of your code does. Prepare some questions beforehand.</p>
</div>
<span class="comment-copy">Thanks, I put the i=0 before the for loop.</span>
