<div class="post-text" itemprop="text">
<p>I have a html file:</p>
<pre><code>&lt;div class="panel-heading"&gt;
Some Text1
&lt;strong&gt;Hello&lt;/strong&gt;
&lt;/div&gt;
&lt;div&gt;
Some Text2
Some Text3
&lt;strong&gt;
Hi1
Hi2
&lt;/strong
</code></pre>
<p>I want to print only <strong>Hello</strong> in my python script using selenium, so I tried:</p>
<pre><code>element = driver.find_element_by_xpath("//div[@class='panel-heading']")    
for element in driver.find_elements_by_tag_name('strong'):
    print (element.text)
</code></pre>
<p>The result is:</p>
<p>Hello</p>
<p>Hi1</p>
<p>Hi2</p>
<p>But I want only:</p>
<blockquote>
<p><strong>Hello</strong></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use </p>
<pre><code>element = driver.find_element_by_xpath("//div[@class='panel-heading']")
print(element.find_element_by_tag_name('strong').text)
</code></pre>
<p>to print <em>first</em> <code>strong</code> text from required <code>div</code></p>
<p>Note that <code>for element in driver.find_elements_by_tag_name('strong')</code> means to iterate over <em>all</em> <code>strong</code> nodes on page. You need to replace <code>driver</code> with <code>element</code> to iterate over descendant <code>strong</code>s of defined WebElement:</p>
<pre><code>for strong in element.find_elements_by_tag_name('strong'):
    print(strong.text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code give you list. So simply use first element of the list, which give you "Hello".</p>
<pre><code>element = driver.find_elements_by_tag_name('strong')[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>:</p>
<pre><code>for element in driver.find_elements_by_tag_name('strong'):
    print(next(element.text for element in driver.find_elements_by_tag_name('strong')))
</code></pre>
<p>Or less cryptic and more robust if there is no such element, just <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer"><code>break</code></a> the loop after the print:</p>
<pre><code>for element in driver.find_elements_by_tag_name('strong'):
    print(element.text)
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You did small mistake in your code, you get <code>div</code> with <code>panel-heading</code> but in the loop you iterate throw all elements with tag <code>strong</code> in DOM. Perhaps, here how you wanted it to be:</p>
<pre><code>divElement = driver.find_element_by_xpath("//div[@class='panel-heading']")    
for element in divElement.find_elements_by_tag_name('strong'):
    print (element.text)
</code></pre>
<p>But <code>div</code> with <code>panel-heading</code> contains only one <code>span</code> and <code>strong</code>, you can get it with css selector:</p>
<pre><code>strongText = driver.find_element_css_selector(".panel-heading strong").text
</code></pre>
</div>
<span class="comment-copy">Try using print(next(driver.find_elements_by_tag_name('strong')).text)</span>
