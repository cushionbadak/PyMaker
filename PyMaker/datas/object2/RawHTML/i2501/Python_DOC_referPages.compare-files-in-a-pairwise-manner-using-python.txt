<div class="post-text" itemprop="text">
<p>I am trying to compare the contents of two files in the same directory for matching lines. I want to eventually do this in a pairwise manner. Right now, I have written some code which will keep the first file in the directory open and compare it to the rest of the files in that directory. What I am having trouble implementing is to repeat the logic with the second file in the directory, then the third, etc..</p>
<p>I am new to Python and am just using the knowledge I've gained so far to execute this code. I'm thinking of adding another counter for the first file. This way once the files have been compared to the first file, the file1counter then has one added to it, so that now file1read is opening file1read[1] and repeating.</p>
<pre><code>import os
#define path where files to be compared are located
path = ("/path/to/files/")
#lists all files in a directory and sorts them alphabetically
files = sorted(os.listdir( path ))
#count the number of files in the directory
number_files = len(files)

count = 1
#open first file in the directory
file1 = open(path+files[0], 'r')
#store lines of the file 
file1read = file1.read().splitlines() 

#while loop to compare file 1 to file 2, then file 1 to file 3 ... to file n
while (count &lt; number_files):
    file2 = open(path+files[count], 'r')
    file2read = file2.read().splitlines() 
    for i in file1read:
        for j in file2read:
            if i == j:
                print (os.path.basename(file1.name)+"_"+os.path.basename(file2.name)+" have {} in common".format(j))
    count = count + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> for getting all the unique pairs of files in the directory and a set to determine similarities between files as done in <a href="https://stackoverflow.com/a/19007888/6806787">this</a> solution. Also the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob</code></a> package has better functionality than <code>os.listdir</code> as it lists proper paths to files in the given directory:</p>
<pre><code>import itertools
import glob

path = ("/path/to/files/")

for files in itertools.combinations(glob.glob(path + '*'), 2):
    file1, file2 = map(open, files)
    similarities = set(file1).intersection(file2)
    if similarities:
        print('_'.join(files), 'have {} in common'.format(','.join(similarities))
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/difflib.html" rel="nofollow noreferrer">docs.python.org/3/library/difflib.html</a> This can be useful</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/19007383/compare-two-different-files-line-by-line-in-python">link</a> try this</span>
<span class="comment-copy">Are you wanting to know if the the pair of files being considered matches entirely, or if they have only partial matches?</span>
<span class="comment-copy">Partial matches. Each file is a list and I want to outut any items shared between the lists.</span>
