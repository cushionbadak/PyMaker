<div class="post-text" itemprop="text">
<p>I want to allow type hinting using Python 3 to accept sub classes of a certain class. E.g.:</p>
<pre><code>class A:
    pass

class B(A):
    pass

class C(A):
    pass

def process_any_subclass_type_of_A(cls: A):
    if cls == B:
        # do something
    elif cls == C:
        # do something else
</code></pre>
<p>Now when typing the following code:</p>
<pre><code>process_any_subclass_type_of_A(B)
</code></pre>
<p>I get an PyCharm IDE hint 'Expected type A, got Type[B] instead.'</p>
<p>How can I change type hinting here to accept any subtypes of A?</p>
<p>According to this (<a href="https://www.python.org/dev/peps/pep-0484/#type-definition-syntax" rel="noreferrer">https://www.python.org/dev/peps/pep-0484/#type-definition-syntax</a>, "Expressions whose type is a subtype of a specific argument type are also accepted for that argument."), I understand that my solution <code>(cls: A)</code> should work?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you do <code>cls: A</code>, you're saying that <code>cls</code> is going to an instance of type <code>A</code>. To make it work with type or its subtypes use <a href="https://docs.python.org/3/library/typing.html#typing.Type" rel="noreferrer"><code>typing.Type</code></a>.</p>
<pre><code>from typing import Type
def process_any_subclass_type_of_A(cls: Type[A]):
    pass
</code></pre>
<p>From <a href="http://mypy.readthedocs.io/en/latest/kinds_of_types.html#the-type-of-class-objects" rel="noreferrer">The type of class objects
</a>:</p>
<blockquote>
<p>Sometimes you want to talk about class objects that inherit from a
  given class. This can be spelled as <code>Type[C]</code> where <code>C</code> is a class. In
  other words, when <code>C</code> is the name of a class, using <code>C</code> to annotate an
  argument declares that the argument is an instance of <code>C</code> (or of a
  subclass of <code>C</code>), but using <code>Type[C]</code> as an argument annotation declares
  that the argument is a class object deriving from <code>C</code> (or <code>C</code> itself).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I found the soluton. Use:</p>
<pre><code>from typing import Type
def process_any_subclass_type_of_A(cls: Type[A]):
    pass
</code></pre>
<p>And the desired behavior will be there as noted in the PEP above.</p>
</div>
<span class="comment-copy">Is Python also raising this error ? Otherwise, it's maybe a bug in PyCharm !</span>
<span class="comment-copy">For me I tried on python console and It is working fine. Might be possible bug in PyCharm..</span>
<span class="comment-copy">Yes it's working, the type hinting is optional as far as I know. Still I want the user of the method to explicitly know what classes are intended for usage there.</span>
