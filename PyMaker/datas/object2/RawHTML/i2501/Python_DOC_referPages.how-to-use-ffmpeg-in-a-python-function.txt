<div class="post-text" itemprop="text">
<p>I have tried to use a ffmpeg to extract an audio from a video file and this is my code</p>
<pre><code>import io
import os
import subprocess

def extract_audio(video,output):
    command = "ffmpeg -i '{video}' -ac 1  -f flac -vn '{output}'"
    subprocess.call(command,shell=True)

extract_audio('dm.MOV','dm-new.flac')
</code></pre>
<p>And I got no error after compiled. By doing this I should get a new file which is 'dm-new.flac'. But there is no such a flac file created after I compile the script. I think there are something wrong with the syntax or something in the variable 'command' which I have no idea to fix this. My question here is how can I use ffmpeg in a python function base on this code?</p>
<p>By the way, I knew that I could just use ffmpeg without writing a function. But I really need to write in in a function. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import io
import os
import subprocess

def extract_audio(video,output):
    command = "ffmpeg -i {video} -ac 1  -f flac -vn {output}".format(video=video, output=output)
    subprocess.call(command,shell=True)

extract_audio('dm.MOV','dm-new.flac')
</code></pre>
<p>I think you were trying to reference two variables inside a string but did not tell Python that you should replace 'video' and 'output' with their corresponding variables. <code>.format()</code> allows you to reference the variables that you refer to in a string. </p>
<p>See <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">here</a> for more info.</p>
</div>
<div class="post-text" itemprop="text">
<p>Add one character (<code>f</code>) to solve it (over python 3.6): </p>
<pre><code>import subprocess
def extract_audio(video,output):
    command = f"ffmpeg -i '{video}' -ac 1  -f flac -vn '{output}'"
    subprocess.call(command,shell=True)

extract_audio('dm.MOV','dm-new.flac')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this is it. </p>
<pre><code>import io
import subprocess
def extract_audio(video,output):
    command = "ffmpeg -i {} -ac 1  -f flac -vn {}".format(video,output)
    subprocess.call(command,shell=True)

extract_audio('dm.MOV','dm-new.flac')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I belive this should work: </p>
<pre><code>import io
import os
import subprocess

def extract_audio(video,output):
    command = "ffmpeg -i {} -ac 1  -f flac -vn {}".format(video, output)
    subprocess.call(command,shell=True)

extract_audio('dm.MOV','dm-new.flac')
</code></pre>
</div>
<span class="comment-copy">Does it work for you if you put it in a script outside of python?</span>
<span class="comment-copy">Yeah it work if I don't use a function</span>
<span class="comment-copy"><code>c3 = "ffmpeg -i dm.mov -ac 1  -f flac -vn testdm.flac" subprocess.call(c3, shell=True)</code>  like this</span>
<span class="comment-copy">even with this I still think you need no quote at all in the script string, and I suspect you're still getting one quote, but again this is just a guess</span>
<span class="comment-copy">@kevinkayaks <code>command = 'ffmpeg -i {video} -ac 1  -f flac -vn {output}' </code>  This is what I meant but it didn't work</span>
<span class="comment-copy">Interesting... accepted answer but written two minutes after mine... win some, lose some!</span>
<span class="comment-copy">it's different!</span>
<span class="comment-copy">Marginally... and with no explanation...</span>
<span class="comment-copy">TD afaik yours doesn't work.</span>
<span class="comment-copy">oh, I thought you had extra quotes. alright, kudos!</span>
