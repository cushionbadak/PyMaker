<div class="post-text" itemprop="text">
<p>I have a list of dictionaries that looks like the following:</p>
<pre><code>d = [{'first':'jason','color':'green','age':22},
     {'first':'josh','color':'red','age':22},
     {'first':'chris','color':'blue','age':21}
    ]
</code></pre>
<p>I want to create a dictionary that is a subset of the previous dictionaries.</p>
<p>Something that looks like:</p>
<pre><code>newD = {'jason':22, 'josh':22, 'chris':21}
</code></pre>
<p>The following does the trick:</p>
<pre><code>first = [k['first'] for k in d]
age = [k['age'] for k in d]
newD = dict(zip(first, age))
</code></pre>
<p>But is there a more Pythonic/cleaner way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>newd = {dd['first']: dd['age'] for dd in d}
</code></pre>
<p>Output:</p>
<pre><code>In [3]: newd
Out[3]: {'chris': 21, 'jason': 22, 'josh': 22}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you only need one comprehension:</p>
<pre><code>&gt;&gt;&gt; {x['first']: x['age'] for x in d}
{'jason': 22, 'josh': 22, 'chris': 21}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe this?</p>
<pre><code>newD = dict((x['first'], x['age']) for x in d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a>:</p>
<pre><code>from operator import itemgetter

res = dict(map(itemgetter('first', 'age'), d))

{'jason': 22, 'josh': 22, 'chris': 21}
</code></pre>
</div>
