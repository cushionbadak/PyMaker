<div class="post-text" itemprop="text">
<p>New to coding, reading some books and trying to practice. Wrote a program in python3.7 to <strong>search through a directory</strong>, <strong>find all the pdf files</strong> and <strong>move them to a new folder called 'Reading Materials'</strong>.</p>
<p>How could I improve on this code e.g a shorter, more concise and/or efficient script in python? </p>
<pre><code>import os, re, shutil

os.chdir(r'C:\\Users\\Luke\\Documents\\coding\\python\\') #set cwd to the where I want program to run

#create regex to identify pdf files
PDFregex = re.compile(r'''^(.*?)  # all text before the file extension
                          \.{1}   #start of file extension
                          (pdf)$  #ending in pdf''', re.VERBOSE)

Newdir = os.mkdir('Reading Material') #make new directory for files
NewdirPath = os.path.abspath('Reading Material')
print('new directory made at : '+NewdirPath)

#search through directory for files that contain .pdf extension using regex object
for pdf in os.listdir('.'):
    mo = PDFregex.search(pdf)
    if mo == None: #no pdf's found by regex search
        continue    #bypass loop
    else:
        originalLoc = os.path.join(os.path.abspath('.'), pdf)  #original file location
        newLoc = shutil.move(originalLoc, os.path.join(NewdirPath, pdf)) #move pdf to new folder
        print('Moving file "%s" moved to "%s"...' %(pdf, newLoc)) #say what's moving

os.listdir(NewdirPath) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Regexp is overkilled here. os module has various method to help you extract informations about files.
You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow noreferrer">splitext</a> method in os module to find the extension.</p>
<p>Something like this should work :</p>
<pre><code>import os
import shutil

old_dir = 'C:\\Users\\Luke\\Documents\\coding\\python\\'

new_dir = 'Reading Material'
# You should always use underscore_notations to name variables instead of CamelCase (use for ClassNames) see https://www.python.org/dev/peps/pep-0008/

os.makedirs(new_dir, exist_ok=True)

for file_path in os.listdir(old_dir):
    if os.path.splitext(file_path)[1] == '.pdf':
        shutil.move(file_path, '{0}\\{1}'.format(new_dir, os.path.basename(file_path)))
</code></pre>
</div>
<span class="comment-copy">thanks! that makes a lot more sense to do and is easier to follow. I'd used the regex because I hadn't considered there was a simpler way to do it.</span>
<span class="comment-copy">If splitext didn't exist, I would have done something simpler than regexp anyway. You could do somethin like : if file_path[-4:] == '.pdf' for example ;) . I really like regular expressions but they are often hard to read/maintain so I try to use them only when needed.</span>
