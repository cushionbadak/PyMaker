<div class="post-text" itemprop="text">
<p>I currently have a django management command to import CSV files, which is based on <a href="https://stackoverflow.com/a/15961736/2052575">this answer</a>.  The main business is done by the following line in a loop:</p>
<pre><code>created = Customer.objects.get_or_create(account_no = int(row[0]), name = row[1])
</code></pre>
<p>However, because I have a number of different models to run this on, I wish to put the above code inside a function, and pass the attributes and row keys in from a dictionary; so I'd defnine something like:</p>
<pre><code>csv_columns = { 0: 'account_no', 1: 'name' }
</code></pre>
<p>However I don't know how to run the <code>get_or_create</code> function based on this.  I'm sure this should be simple.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, your dictionaries should look like this:</p>
<pre><code>csv_row = {"account_no": "123-456", "name": "v25"}
</code></pre>
<p>Make sure you use a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>DictReader</code></a> so that you're reading the csv file's header and then iterating the rows of the csv file correctly, i.e. the keys of each dict yielded are the column names.</p>
<p>Then, the <code>get_or_create</code> call will be a simple unpacking, something like this:</p>
<pre><code>Customer.objects.get_or_create(**csv_row)
</code></pre>
</div>
<span class="comment-copy">Thanks, I couldn't get this method to work, but with help from your link to DictReader, was able to implement this whereby I can specify the django field names IN the CSV which is sufficient for my needs.</span>
