<div class="post-text" itemprop="text">
<p>I was messing around and noticed that the following code yields the value once, while I was expecting it to return a generator object. </p>
<pre><code>def f():
    yield (yield 1) 
f().next() # returns 1

def g():
    yield (yield (yield 1) 
g().next() # returns 1
</code></pre>
<p>My question is what is the <code>value</code> of the <code>yield</code> expression and also why are we allowed to nest yield expression if the yield expression  collapses?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The value of the <a href="https://docs.python.org/3/reference/expressions.html#yield-expressions" rel="nofollow noreferrer"><code>yield</code> expression</a> after resuming depends on the method which resumed the execution. If <code>__next__()</code> is used (typically via either a <code>for</code> or the <code>next()</code> builtin) then the result is <code>None</code>. Otherwise, if <code>send()</code> is used, then the result will be the value passed in to that method.</p>
</blockquote>
<p>So this:</p>
<pre><code>def f():
    yield (yield 1) 
</code></pre>
<p>Is equivalent to this:</p>
<pre><code>def f():
    x = yield 1
    yield x
</code></pre>
<p>Which in this case (since you're not using <code>generator.send()</code>) is equivalent to this:</p>
<pre><code>def f():
    yield 1
    yield None
</code></pre>
<hr/>
<p>Your code is only looking at the first item yielded by the generator. If you instead call <code>list()</code> to consume the whole sequence, you'll see what I describe:</p>
<pre><code>def f():
    yield (yield 1)

def g():
    yield (yield (yield 1)) 


print(list(f()))
print(list(g()))
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>$ python3 yield.py 
[1, None]
[1, None, None]
</code></pre>
<hr/>
<p>If we iterate the generator manually (as you have), but <code>.send()</code> it values, then you can see that <code>yield</code> "returns" this value:</p>
<pre><code>gen = f()
print(next(gen))
print(gen.send(42))
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>$ python3 yield_manual.py 
1
42
</code></pre>
</div>
<span class="comment-copy">Related/Dup: <a href="//stackoverflow.com/q/37845338">yield(x) vs. (yield(x)): parentheses around yield in python</a></span>
<span class="comment-copy">It's not really true that <code>yield</code> returns <code>None</code>. Rather, it returns the value that you <a href="https://stackoverflow.com/questions/19302530/python-generator-send-function-purpose"><code>send</code></a> to the generator. (And simply iterating over a generator is like calling <code>send(None)</code>.)</span>
<span class="comment-copy">Thanks @Aran-Fey, I've been trying to find the relevant part of the documentation to elaborate on that.</span>
