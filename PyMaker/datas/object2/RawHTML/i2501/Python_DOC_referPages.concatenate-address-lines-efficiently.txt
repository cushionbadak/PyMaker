<div class="post-text" itemprop="text">
<p>My database stores some standard address lines fields (address line 1,2.. City, Country, Postal/zip code) and I would like to concatenate them to a human form. I've written the following code but I'm not sure if this is very efficient with a bunch of if statements. (Written in python but it's the algorithm that I care about)</p>
<pre><code>def human_readable_address(self):
    '''
    Return human readable address
    If address1 is empyty, return None
    '''
    addr = ""

    if(self.address1):
        addr += self.address1 + ", "
    else:
        return None

    if(self.address2):
        addr += self.address2 + ", "
    if(self.city):
        addr += self.city + ", "
    if(self.postal_code):
        addr += self.postal_code + ", "
    if(self.country):
        addr += self.country + ", "

    return addr
</code></pre>
<p>What do you guys think? Is there a better way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using string concatenation (which creates a new string each time) you could use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>:</p>
<pre><code>def human_readable_address(self):
    '''
    Return human readable address
    If address1 is empty, return None
    '''

    if not self.address1:
        return None

    parts = list(filter(None, [self.address1, self.address2, self.city,
                               self.postal_code, self.country]))
    return ', '.join(parts)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension, joined into a string, to get the address in the format you need:</p>
<pre><code>address_1 = "first"
address_2 = False
address_3 = "third"

def make_address(*args):
  return "".join(["%s,\n" % x for x in args if x])[:-2]

address = make_address(address_1, address_2, address_3)

print(address)
</code></pre>
<p>As in: <a href="https://repl.it/repls/LiveJuniorLanservers" rel="nofollow noreferrer">https://repl.it/repls/LiveJuniorLanservers</a></p>
</div>
<span class="comment-copy">"Python String join() The join() is a string method which returns a string concatenated with the elements of an iterable." That's what I would use.</span>
<span class="comment-copy">The list creation can be compacted in 2 lines. EDIT: Better :)</span>
<span class="comment-copy">Well, it can even be 1 line if desired.</span>
<span class="comment-copy">Hmm, you would loose the "break" if <code>not self.address1</code> and would have to do the <code>filter</code> every time. Am I wrong?</span>
