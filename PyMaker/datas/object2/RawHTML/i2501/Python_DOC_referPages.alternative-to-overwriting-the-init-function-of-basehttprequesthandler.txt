<div class="post-text" itemprop="text">
<p>I would like to define a few variables inside my RequestHandler class that is a subclass of BaseHTTPRequestHandler. These variables then should be accessible from inside my <code>do_Post()</code> function. Normaly I would define those variables inside the <code>__ init__()</code> method but the <a href="https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler" rel="nofollow noreferrer">python docs about the BaseHTTPRequestHandler class</a></p>
<p>says "Subclasses should not need to override or extend the <code>__ init__()</code> method."</p>
<p>So what would be the most elegant way to achieve this?</p>
<pre><code>from http.server import BaseHTTPRequestHandler, HTTPServer

class RequestHandler(BaseHTTPRequestHandler):

    def do_POST(self):
        #do some stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>Shouldn't need to</em> means you don't have to worry about that method, the library will work without any special attributes set on the instance. However, that <em>doesn't mean you can't</em>.</p>
<p>For example, the <code>BaseHTTPRequestHandler</code> class doesn't define a <code>__init__</code> method itself, but the <a href="https://docs.python.org/3/library/http.server.html#http.server.SimpleHTTPRequestHandler" rel="nofollow noreferrer"><code>SimpleHTTPRequestHandler</code></a> class in the same module is a direct subclass of <code>BaseHTTPRequestHandler</code> which does define an <code>__init__</code> method.</p>
<p>Your code can define one just fine:</p>
<pre><code>class RequestHandler(BaseHTTPRequestHandler):
    def __init__(self, ...):
        # do something with arguments and set state on self

    def do_POST(self):
        # do some stuff
</code></pre>
</div>
<span class="comment-copy">If you only want to use them in <code>do_Post()</code> can't you just define them there? Otherwise, I misunderstand the question.</span>
<span class="comment-copy"><i>should not need to</i> doesn't mean that you can't. Just define the method as <code>def __init__(self, *args, **kwargs):</code> and make sure to call <code>super().__init__(*args, **kwargs)</code>.</span>
<span class="comment-copy">In fact, the <code>BaseHTTPRequestHandler</code> implementation doesn't have any <code>__init__</code> method.</span>
