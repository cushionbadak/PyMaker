<div class="post-text" itemprop="text">
<p>First off, Im a python beginner, so I'm not really experienced.
This is the code for my server - client program:</p>
<pre><code>import getpass
from requests import get
import os
import thread
import socket
import sys

os.system('cls' if os.name == 'nt' else 'clear')
print '\033[91mMCP CONTROLLER\033[0m'
print ('--------------------------------------')
print ('Welcome back,' + getpass.getuser())
print ('--------------------------------------')
ip = get('https://api.ipify.org').text
print ('Your current external IP is: ' + ip) 
print ('--------------------------------------')

HOST = 'localhost'
PORT = 1979

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Socket created!'

try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print 'lul'
    sys.exit()

print 'Socket bind complete'

s.listen(20)

print 'Listening...'


while 1:
    conn, addr = s.accept()
    print 'Client connected: ' + addr[0] + ':' + str(addr[1])

msg = conn.recv(1024)
print (msg) 


s.close()
print ('Please enter command')
</code></pre>
<p>My problem is: I want the program to stop the socket after 20 seconds and do "print('Please enter command')" whether someone connects to it or not. If I start the program now it just says "Listening..." (if I don't start the client) forever and the only option I have is to close the terminal window. But I want the program to move on after 20 seconds. 
And I also want it to say some special message if it didn't get any connection after 20 seconds (like print 'no client available') </p>
<p>Please pardon my bad english.</p>
</div>
<div class="post-text" itemprop="text">
<p>As @abarnet mentioned, settimeout is probably what you want, here is an example:</p>
<pre><code>import getpass
from requests import get
import os
import thread
import socket
import sys
import time

os.system('cls' if os.name == 'nt' else 'clear')
print('\033[91mMCP CONTROLLER\033[0m')
print ('--------------------------------------')
print ('Welcome back,' + getpass.getuser())
print ('--------------------------------------')
ip = get('https://api.ipify.org').text
print ('Your current external IP is: ' + ip) 
print ('--------------------------------------')

HOST = 'localhost'
PORT = 1979

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print ('Socket created!')

try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print( 'lul')
    sys.exit()

print( 'Socket bind complete')

s.settimeout(5)
s.listen(20)

print ('Listening...')

while 1:
    try:
        conn, addr = s.accept()
        msg = conn.recv(1024)
        print (msg) 
    except socket.timeout as e:
        print(e,': no connections after 5 seconds...')
        s.close()
        break
    print( 'Client connected: ' + addr[0] + ':' + str(addr[1]))

print('please enter command:')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/socket.html#socket.socket.settimeout" rel="nofollow noreferrer"><code>socket.settimeout ()</code></a></p>
<p><code>s.settimeout (20);</code></p>
</div>
<span class="comment-copy">Why do you have a <code>while 1:</code> that loops forever accepting clients and doing nothing with them, and then code after that <code>while</code> loop that expects that you have a <code>conn</code> after all of those loops?</span>
<span class="comment-copy">Anyway, have you tried calling <code>settimeout</code> on the listener socket, <a href="https://docs.python.org/3/library/socket.html#socket-timeouts" rel="nofollow noreferrer">as explained in the docs</a>?</span>
