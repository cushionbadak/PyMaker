<div class="post-text" itemprop="text">
<p>I'm using python 3.6 and I'm trying to do a program that requires arguments, but I can not use it because I can't pass the arguments. Another question: I can't understand the <code>dest</code> parameter; is it to create a variable with that name?</p>
<pre><code>#!/usr/bin/env python3
import argparse
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument('-m', '--mac',
                    help='Introduce your new MAC' +
                    'use random as value if you want to have a random mac',
                    action="store_true", required=True)
parser.add_argument('-i', '--interface',
                    help='The interface that the MAC will be changed',
                    action="store", required=True)
args = parser.parse_args()

print(args.mac + args.interface)
</code></pre>
<p>IÂ´m getting this error, when trying to use it (I use hi and bye as examples)</p>
<pre><code>&gt; python  '.\test.py' -m hi -i bye
usage: test.py [-h] -m -i INTERFACE
test.py: error: unrecognized arguments: hi
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://stackoverflow.com/a/52250220/2988730">@Dawit's answer</a> correctly points out, the issue is with <code>action="store_true"</code>. The built-in <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">action</a> <code>'store_true'</code> has an automatic default of <code>False</code>, and sets the value of the argument in the namespace to <code>True</code> if the flag is found. It does not accept any arguments to the flag.</p>
<p>If you want to accept an argument to the flag, you have to use an action like <code>action="store"</code>.</p>
<p>If you want to error-check or convert your argument on the spot, pass <a href="https://docs.python.org/3/library/argparse.html#type" rel="nofollow noreferrer"><code>type</code></a> to <a href="https://docs.python.org/3/library/argparse.html#the-add-argument-method" rel="nofollow noreferrer"><code>add_argument</code></a>. You can convert to a type like <code>int</code>, or just check your argument. For example, you could have a function <code>mac_address</code> that would be parse the argument string to a more easily managed object, or raise an error if the format didn't match. Then you could do <code>type=mac_address</code>.</p>
<p>The <a href="https://docs.python.org/3/library/argparse.html#dest" rel="nofollow noreferrer"><code>dest</code></a> argument simply provides the name of the output attribute in the namespace to assign the value to. This is normally taken from the long name of the flag or positional argument. So for <code>--mac</code> the output variable would default to <code>mac</code> and for <code>--interface</code> it would default to <code>interface</code>. Sometimes you want to use an alternative output variable though.</p>
</div>
<div class="post-text" itemprop="text">
<p>This worked for me:</p>
<pre><code>parser.add_argument('-m', '--mac',
                help='Introduce your new MAC' +
                'use random as value if you want to have a random mac',
                action="store", required=True
</code></pre>
<p>Changing <code>store_true</code> to <code>store</code></p>
</div>
<span class="comment-copy"><code>python test.py -m -i hi</code> works but crashes your concatenation. <code>-m</code> is a boolean, so you can't pass a string to it. Look at the usage: <code>test.py [-h] -m -i INTERFACE</code></span>
<span class="comment-copy"><code>required</code> doesn't make sense with a <code>store_true</code> action.  Use a <code>print(args)</code> to see how the <code>dest</code> is used.</span>
<span class="comment-copy">Thanks you both, I fix my issue and now I understand the module &lt;3</span>
<span class="comment-copy">@KevinPita. The standard procedure here would be to select an answer by clicking on the check mark next to it, and upvoting when you have the reputation to do so.</span>
