<div class="post-text" itemprop="text">
<pre><code>name = ["Hetty", "Poppy", "Blue Skies", "Bay View", "Happy Days", "Summer Joy", 
"Walkers Rest", "Bertie","Green Forest Lodge", "Coppice Lodge" ]
cap = [4, 4, 4, 6, 6, 6, 8, 8, 10, 10]
peak = [400, 400, 500, 650, 695, 800, 950, 1050, 1200, 1500]
offpeak = [250, 250, 350, 500, 550, 600, 750, 850, 950, 1150]
onoff = False
cost = 0
print("Here are our avaliable lodges")
for elem in name:
    print("- " + elem)

desired_room = (str(input("Enter The Name Of The Room You Would Like To Book: "))).lower()

while True: 
    for i in range (0,10):
        if desired_room == name [i].lower():
            print("Name: ", name[i])
            print("Capacity: ",  cap[i])
            print("Off Peak Rate: 0" + str(offpeak[i]))
            print("Peak Rate: 0" + str(peak[i]))
            exit
    print("Invalid Room Name Entered Try Again")
    desired_room = (str(input("Enter The Name Of The Room You Would Like To Book:   "))).lower()

week = int(input("Enter The Week Your Stay Starts "))
</code></pre>
<p>This is my code. When the user inputs the the name of the room it works but then for some reason it loops and asks the user which room they want to book. How can I fix it so "Enter The Week Your Stay Starts " is asked instead of the room that the user wants to book is inputted?
Picture reference 
<a href="https://imgur.com/a/QAtnHT9" rel="nofollow noreferrer">https://imgur.com/a/QAtnHT9</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The first problem is that you want <code>break</code>, not <code>exit</code>.</p>
<p>The <code>break</code> statement breaks out of a loop, which is what you want to do.</p>
<p><code>exit</code> is not a statement. It's the name of a function, which you aren't calling, so it doesn't do anything, any more than just writing <code>sorted</code> would. Also, it isn't intended to be used except in interactive mode; if you need to exit a script in the middle of the script, you use <code>sys.exit()</code>. Also, you don't <em>want</em> to exit the whole script here anyway, just the loop.</p>
<hr/>
<p>But you've got another problem beyond that: You have one loop nested inside another one. Breaking out of the first one won't break out of the second one.</p>
<p>You need to reorganize your logic in some way that it's easy to get out of this code where you want to, and the cleanest way to do that is usually by writing a function, which you can <code>return</code> from:</p>
<pre><code>def book_room():
    desired_room = (str(input("Enter The Name Of The Room You Would Like To Book: "))).lower()

    while True: 
        for i in range (0,10):
            if desired_room == name [i].lower():
                return i
        print("Invalid Room Name Entered Try Again")
        desired_room = (str(input("Enter The Name Of The Room You Would Like To Book:   "))).lower()
</code></pre>
<p>And now, you can just call that function:</p>
<pre><code>room = book_room()
print("Name: ", name[room])
print("Capacity: ",  cap[room])
print("Off Peak Rate: 0" + str(offpeak[room]))
print("Peak Rate: 0" + str(peak[room]))
</code></pre>
<hr/>
<p>While we're at it, you can simplify this code in a number of ways. You can just ask for the <code>input</code> at the top of the loop instead of doing it twice; you don't need to call <code>str</code> on something that's already a string; you can use string formatting instead of manually converting things to strings and concatenatingâ€¦</p>
<pre><code>def book_room():
    while True: 
        desired_room = input("Enter The Name Of The Room You Would Like To Book: ")).lower()
        for i in range(0,10):
            if desired_room == name[i].lower():
                return i
        print("Invalid Room Name Entered Try Again")

room = book_room()
print(f"Name: {name[room]}")
print(f"Capacity: {cap[room]}")
print(f"Off Peak Rate: 0{offpeak[room]}")
print(f"Peak Rate: 0{peak[room]}")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While the points raised in @abarnert's answer are valid, you can use a <code>for-else</code> construct like the following instead to avoid using a separate function to break out of a nested loop:</p>
<pre><code>while True: 
    for i in range (0,10):
        if desired_room == name[i].lower():
            print("Name: ", name[i])
            print("Capacity: ",  cap[i])
            print("Off Peak Rate: 0" + str(offpeak[i]))
            print("Peak Rate: 0" + str(peak[i]))
            break
    else:
        print("Invalid Room Name Entered Try Again")
        desired_room = (str(input("Enter The Name Of The Room You Would Like To Book:   "))).lower()
        continue
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Solution</strong></p>
<pre><code>name = [ 
    "Hetty", "Poppy", "Blue Skies", "Bay View", "Happy Days", "Summer Joy", 
    "Walkers Rest", "Bertie", "Green Forest Lodge", "Coppice Lodge" 
]
cap = [4, 4, 4, 6, 6, 6, 8, 8, 10, 10] 
peak = [400, 400, 500, 650, 695, 800, 950, 1050, 1200, 1500]
offpeak = [250, 250, 350, 500, 550, 600, 750, 850, 950, 1150]
onoff = False
cost = 0 

print("Here are our avaliable lodges")
[print(f"-{elem}") for elem in name]

desired_room = input("Enter The Name Of The Room You Would Like To Book: " \
    ).title()

while desired_room.title() not in name:
    print("Invalid Room Name Entered Try Again")
    desired_room = input("Enter The Name Of The Room You Would Like To" + 
        " Book:").title()

for i in range(len(name)) :
    if desired_room == name [i]:
        print("Name: ", name[i])
        print("Capacity: ",  cap[i])
        print("Off Peak Rate: 0" + str(offpeak[i]))
        print("Peak Rate: 0" + str(peak[i]))

week = int(input("Enter The Week Your Stay Starts "))
</code></pre>
<p>It would make your code easier to work with, if you just split what you are trying to do there up a little.  If you make a <code>while</code> loop that checks to make sure the <code>desired_room</code> exists first then you can enter your next loop knowing that <code>desired_room</code> is a valid entry.</p>
<p>Also by transforming inputs into <code>title</code> instead of <code>lower</code> you can check with your <code>name</code> quicker since you know all entries are in title case format.</p>
<p><strong>Thoughts</strong></p>
<p>The way you are, you are matching all the indices for each list to get the proper info (<code>name[0], cap[0], peak[0],... give us</code>Hetty`'s information).  This is fine but what happens when you have 100 rooms and you entry number 67 is off, its going to be rough going through each list and checking index 67. Instead you could use a list of dictionaries to keep each rooms information together. Just trying to give some ideas, threw in some print formatting ideas as well, </p>
<pre><code>def print_info(something):
    r_width = len(something['name'])
    print("-"*15 + "-"*(r_width+1))
    print("Name:".ljust(15), f"{something['name']}".rjust(r_width))
    print("Capacity:".ljust(15), f"{something['cap']}".rjust(r_width))
    print("Off Peak Rate:".ljust(15), f"{something['offpeak']}".rjust(r_width))
    print("Peak Rate:".ljust(15), f"{something['peak']}".rjust(r_width))
    print("-"*15 + "-"*(r_width+1))

rooms = [
    {'name': 'Hetty', 'cap': 4, 'peak': 400, 'offpeak': 250},
    {'name': 'Poppy', 'cap': 4, 'peak': 400, 'offpeak': 250},
    {'name': 'Blue Skies', 'cap': 4, 'peak': 500, 'offpeak': 350},
    {'name': 'Bay View', 'cap': 6, 'peak': 650, 'offpeak': 500},
    {'name': 'Happy Days', 'cap': 6, 'peak': 695, 'offpeak': 550},
    {'name': 'Summer Joy', 'cap': 6, 'peak': 800, 'offpeak': 600},
    {'name': 'Walkers Rest', 'cap': 8, 'peak': 950, 'offpeak': 750},
    {'name': 'Bertie', 'cap': 8, 'peak': 1050, 'offpeak': 850},
    {'name': 'Green Forest Lodge', 'cap': 10, 'peak': 1200, 'offpeak': 950},
    {'name': 'Coppice Lodge', 'cap': 10, 'peak': 1500, 'offpeak': 1050}
]

onoff = False
cost = 0

room_avail = []
for i in rooms:
    room_avail.append(i['name'])

print("Here are our avaliable lodges")
for i in rooms:
    print(f"-{i['name']}")

desired_room = input("Enter The Name Of The Room You Would Like To Book: " \
    ).title()

while desired_room not in room_avail:
    print("Invalid Room Name Entered Try Again")
    desired_room = input("Enter The Name Of The Room You Would Like To" +
        " Book:").title()

for i in rooms:
    if desired_room == i['name']:
        print_info(i)

week = int(input("Enter The Week Your Stay Starts "))
</code></pre>
<p><strong>Output</strong></p>
<blockquote>
<pre><code>(xenial)vash@localhost:~/python$ python3.7 hotel.py
Here are our avaliable lodges
-Hetty
-Poppy
-Blue Skies
-Bay View
-Happy Days
-Summer Joy
-Walkers Rest
-Bertie
-Green Forest Lodge
-Coppice Lodge
Enter The Name Of The Room You Would Like To Book: coppice lodge
-----------------------------
Name:           Coppice Lodge
Capacity:                  10
Off Peak Rate:           1050
Peak Rate:               1500
-----------------------------
Enter The Week Your Stay Starts
</code></pre>
</blockquote>
</div>
<span class="comment-copy">in your if statement you should need to remove a space.                            You have <code>if desired_room == name [i].lower():</code> and it should be <code>if desired_room == name[i].lower():</code>.</span>
<span class="comment-copy">@RedCricket While that's definitely better style, it doesn't affect the code in any way.</span>
<span class="comment-copy">if and else misaligned?</span>
<span class="comment-copy">@vash_the_stampede No, please read the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow noreferrer">documentation</a> for explanation of the <code>for-else</code> construct.</span>
<span class="comment-copy">I figured you knew better, but had to check keep you on your toes, maybe I'll catch you slipping one time :)</span>
