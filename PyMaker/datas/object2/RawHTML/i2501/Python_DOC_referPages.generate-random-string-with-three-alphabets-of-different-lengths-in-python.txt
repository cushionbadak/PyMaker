<div class="post-text" itemprop="text">
<p>How can I generate a random string with three integers A, B and C containing exactly A letters 'a', B letters 'b' and C letters 'c'?</p>
<pre><code>def generate_string(A, B, C):
    // return a string

s = generate_string(2, 5, 1)
// outputs can be
aabbbbbc 
ababbbcb
abcabbbb
and so on....
</code></pre>
<p>However, I am capable of achieving such kind of functionality using python <strong>random.choice()</strong> function.</p>
<pre><code>&gt;&gt;&gt; print(''.join(choice('a'+'b'+'c') for i in range(5)))
aacaa
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Complexity is O(a+b+c) but that will work:</p>
<pre><code>from random import shuffle

a = 3
b = 4
c = 5
letters = []

for i in range(a):
  letters.append('a')
for i in range(b):
  letters.append('b')
for i in range(c):
  letters.append('c')

shuffle(letters)
print(''.join(letters))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>from random import choice

options = {'a': 2, 'b': 5, 'c': 1}
gen_chars = []
while options:
    genc = choice(''.join(options.keys()))
    options[genc] -= 1
    if options[genc] == 0:
        options.pop(genc)
    gen_chars.append(genc)

print(''.join(gen_chars))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way to do this would be to make a string containing those characters, then <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>sample</code></a> from that string to shuffle it:</p>
<pre><code>from random import sample

s = 'a'*2 + 'b'*5 + 'c'*1

print(''.join(sample(s, k=len(s))))
</code></pre>
<p>Based on your comment, a function could look something like</p>
<pre><code>from itertools import repeat, chain
from random import shuffle

def generate_string(*pairs):
    chars = list(chain.from_iterable(repeat(c, n) for n, c in pairs))
    shuffle(chars)
    return ''.join(chars)

print(generate_string((2, 'a'), (5, 'b'), (1, 'c')))
</code></pre>
<p>If you're only worried about those 3 characters, this can be simplified to </p>
<pre><code>def generate_string(a, b, c):
    s = 'a'*a + 'b'*b + 'c'*c
    return ''.join(sample(s, k=len(s)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Function:</p>
<pre><code>def generate_string(A,B,C):
    from random import sample as sp
    return "".join(sp(("a"*A)+("b"*B)+("c"*C),A+B+C))
</code></pre>
<p>Using:</p>
<pre><code>&gt;&gt;&gt; generate_string(2,3,1)
'baacbb'
&gt;&gt;&gt; generate_string(2,3,1)
'bcbaba'
&gt;&gt;&gt; generate_string(5,1,1)
'baaacaa'
&gt;&gt;&gt; generate_string(2,5,1)
'cbababbb'
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to check for variables A, B and C for int though:</p>
<pre><code> import random
 def generate_string(A, B, C):
     _list = list("a"*A + "b"*B + "c"*C)
     random.shuffle( _list)
     return "".join(_list)
</code></pre>
</div>
<span class="comment-copy">And what is your question?</span>
<span class="comment-copy">@BlackThunder I have edited my question.</span>
<span class="comment-copy">Good, now you need to choose over all the answers to accept one which better fit with your needs.</span>
<span class="comment-copy">But this does not guarantee that there will be 2 a's, 5 b's and 1 c's in each generated string.</span>
<span class="comment-copy">You did the opposite of what I want to achieve. Suppose there is a function that takes three integers (length of characters) as input and generates a string from these lengths.   <code>def generate_string(length_a, length_b, length_c):       // return a string</code> <code>s = generate_string(2, 5, 1)  //output aabbbbbc ababbbcb abcabbbb</code></span>
<span class="comment-copy">@DeepSpace Yes it does?  <code>sample</code> selects without replacement, so we can't end up with more of something than the population has.</span>
<span class="comment-copy">@PatrickHaugh Indeed.</span>
