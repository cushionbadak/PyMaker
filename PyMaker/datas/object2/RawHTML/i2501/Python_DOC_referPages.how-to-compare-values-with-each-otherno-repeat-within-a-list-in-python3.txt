<div class="post-text" itemprop="text">
<p>Hey I want to compare each value in a list with each other and I don't want the same value to compare twice, for example, ab  = ba also 'a' does not need to compare with 'a' itself</p>
<pre><code>list = [a,b,c,d,e]
</code></pre>
<p>output:</p>
<pre><code>#### not necessarily in this format
ab bc cd
ac bd ce
ad be
ae
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For this you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a></p>
<pre><code>from itertools import combinations

for i in combinations([1,2,3,4], 2):
  print(i)
</code></pre>
<p>This prints:</p>
<pre><code>(1, 2)
(1, 3)
(1, 4)
(2, 3)
(2, 4)
(3, 4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create 2 loops one inside the other, where the inner loop always starts from the next index the outer loop currently has</p>
<pre><code>l = [1, 2, 3, 4]

outer_index = 0
while(outer_index &lt; len(l)):
    inner_index = outer_index+1
    while(inner_index &lt; len(l)):
        print(str(l[outer_index]) + ", " +  str(l[inner_index]))
        inner_index = inner_index+1
    outer_index = outer_index+1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure if I understood your question. 
This is my approach without using libraries, just simple code:</p>
<pre><code>a=1
b=2
c=3
d=4
e=5

list = [a,b,c,d,e]
for index, i in enumerate(list):
    list2=list[index+1:]
    for j in list2:
        print i, j
</code></pre>
<p>Output:</p>
<pre><code>1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5
</code></pre>
<p>Instead of 'print', you can use your function to compare the variables</p>
<p>For sure, the code can be optimized (more pythonic), but this is one approach</p>
</div>
<span class="comment-copy">try to show some code...</span>
<span class="comment-copy">You want <code>itertools.combinations</code>. Look it up in the docs; if you can’t figure out how to use it, post your attempt and where you’re stuck.</span>
<span class="comment-copy">Sorry Saketh Katari, we had same idea</span>
