<div class="post-text" itemprop="text">
<pre><code>def cat_latin_word(text):
    """ convert the string in another form
    """

    constant = "bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ"

    for word in text.split():
        if word[0] in constant:
            word = (str(word)[-1:] + str(word)[:4] + "eeoow")
        else:
            word = (str(word) + "eeoow")
        print(word)



def main():
    """ converts"""
    text = input("Enter a sentence ")
    cat_latin_word(text)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A few pointers:</p>
<ul>
<li>Converting your code to "one line" doesn't make it better.</li>
<li>No need to type out all consonants, use the <code>string</code> module and use <code>set</code> for O(1) lookup complexity.</li>
<li>Use formatted string literals (Python 3.6+) for more readable and efficient code.</li>
<li>No need to use <code>str</code> on variables which are already strings.</li>
<li>For a single line, you can use a list comprehension with a ternary statement and <code>' '.join</code>.</li>
</ul>
<p>Here's a working example:</p>
<pre><code>from string import ascii_lowercase, ascii_uppercase

def cat_latin_word(text):

    consonants = (set(ascii_lowercase) | set(ascii_uppercase)) - set('aeiouAEIOU')

    print(' '.join([f'{word}eeow' if not word[0] in consonants else \
                    f'{word[-1:]}{word[:4]}eeoow' for word in text.split()]))

text = input("Enter a sentence ")
cat_latin_word(text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use a list to put all the words or use <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">print()</a> in a different way.<br/>
Example:</p>
<pre><code>print(word, end="\t")
</code></pre>
<p>where here I use the keyword argument <code>end</code> to set it to <code>'\t'</code> ( by default is <code>'\n'</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Simply edited your code to return the results as a words separated by space.</p>
<pre><code>def cat_latin_word(text):
    constant = "bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ"
    result = []
    for word in text.split():
        if word[0] in constant:
            word = (str(word)[-1:] + str(word)[:4] + "eeoow")
            result.append(word)
        else:
            word = (str(word) + "eeoow")
            result.append(word)

    return ' '.join(result)

def main():
    text = 'ankit jaiswal'
    print(cat_latin_word(text))
</code></pre>
</div>
<span class="comment-copy">can you add some sample output you are expecting ?</span>
<span class="comment-copy">I can see a good reason for using <code>join</code>, but why only on one line?</span>
<span class="comment-copy">i am getting the output right ..that is for input ankit jaiswal..outtput is ankiteeoow ljaiseeoow   but i want it in one line</span>
<span class="comment-copy">@cdarke question corrected..i want output in one single line..currently i am getting splitted output.</span>
<span class="comment-copy">@VikasDamodar i am expecting output in one single line..not splitted in two lines or more</span>
<span class="comment-copy">the output is not comming correctly.Only one word is transforming</span>
<span class="comment-copy">thanks buddy..now it is working fine.</span>
