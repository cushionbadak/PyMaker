<div class="post-text" itemprop="text">
<p>I'm working on project based on project built at Arduino microcontroller and Raspberry Pi computer:</p>
<p>Arduino measures time from the moment when program loop starts. It stops when the user push button. This score is going to be sent via serial port to specially prepared csv file. The same time <code>update()</code> function is going to take out values from this file and plot live graph and histogram.</p>
<p>The problem started, when just one function was executed when the script was running. I've checked some options and decided to try the <code>threading</code>:</p>
<ol>
<li><a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">https://docs.python.org/3/library/threading.html</a></li>
<li><a href="https://docs.python.org/2/library/threading.html" rel="nofollow noreferrer">https://docs.python.org/2/library/threading.html</a></li>
<li><a href="https://www.tutorialspoint.com/python/python_multithreading.htm" rel="nofollow noreferrer">https://www.tutorialspoint.com/python/python_multithreading.htm</a></li>
</ol>
<p>However it compiles, but not executes properly. I don't ask for ready code or links - just suggestion or some tip would be really helpfull:</p>
<pre><code>import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import serial
import datetime
import threading

fig, axes = plt.subplots(nrows=2, ncols=1)
ax1, ax2 = axes.flatten()

scores_to_read = serial.Serial ('/dev/ttyACM0', 9600)
file = open ("/home/pi/Desktop/Noc_Naukowcow/score_board.csv", 'r+')    

def update(i):
     file_data = pd.read_csv("/home/pi/Desktop/Noc_Naukowcow/score_board.csv", delimiter="\t", 
parse_dates=[0], header=None, usecols=[0, 1])
     ax1.clear()
     ax2.clear()
     ax1.plot(file_data[0],file_data[1])
     ax2.hist([file_data[1],], bins='auto', histtype='bar')
     #ax1.set_title('History')
     ax1.set_xlabel('Measurement time')
     ax1.set_ylabel('Reaction time [s]')
     #ax2.set_title('Histogram')
     ax2.set_xlabel('Reaction time [s]')
     ax2.set_ylabel('Number of results')
     ani = animation.FuncAnimation(fig, update, interval=1000)
     plt.plot()

def serial_port(file):
    file.read()
    new_score = scores_to_read.readline()
    print(new_score)
    score = new_score.decode('utf-8').strip() + "\n"
    score_time = '{:%Y-%m-%d %H:%M:%S}'.format(datetime.datetime.now())
    file.write(score_time)
    file.write('\t')
    file.write(score)
    file.flush()

thread1 = threading.Thread(target=serial_port, args=(file))
thread1.start()

thread2 = threading.Thread(target=update, args=(fig))
thread2.start()
</code></pre>
<p>I got some warning:</p>
<pre><code>Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python3.5/threading.py", line 914, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.5/threading.py", line 862, in run
    self._target(*self._args, **self._kwargs)
TypeError: serial_port() takes 1 positional argument but 11 were given
</code></pre>
<p>This <code>[...] TapeError: serial port_() takes 1 positional argument but 11 were given</code> says about 11 records in the csv file - am I right?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>args</em> attribute must be a tuple not a single value. With Python, singleton tuples must have a trailing comma, like <code>(foo,)</code>.</p>
<p>To fix that, add a trailing comma:</p>
<pre><code>thread1 = threading.Thread(target=serial_port, args=(file,))
thread1.start()

thread2 = threading.Thread(target=update, args=(fig,))
thread2.start()
</code></pre>
</div>
<span class="comment-copy">Thank you, this code works ;)</span>
