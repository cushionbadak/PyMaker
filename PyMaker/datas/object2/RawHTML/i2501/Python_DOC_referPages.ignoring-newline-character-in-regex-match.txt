<div class="post-text" itemprop="text">
<p>I am trying to replace all matching occurrences with title cases using the following script. When there is a newline character between filter words (in this case 'ABC' and 'DEF') that line doesn't get replaced as intended. </p>
<p>How can I ignore the newline character in this case? </p>
<p>Edit: I don't want to strip all newline characters entirely from the string, but only strip those between the filter words.</p>
<p>Edit2: I edited the text and script to better reflect on the issue I am experiencing. If I include <code>flags=re.DOTALL</code> argument, it will give me: </p>
<pre><code>  mmm    = "Hello Hello Hello Hello Hello Hello
              Hello Hello Hello Hello",
  Bbb   = "Bbb",
</code></pre>
<p>whereas the output I want is (notice that <code>bbb</code> is not capitalized):</p>
<pre><code>  mmm    = "Hello Hello Hello Hello Hello Hello
              Hello Hello Hello Hello",
  bbb   = "bbb",
</code></pre>
<p>The following is the script I am using.</p>
<pre><code>test_string = '''
  mmm    = "hello hello hello hello hello hello
              hello hello hello hello",
  bbb   = "bbb",
'''

rex = r'(?&lt;= mmm)(.*)(?=\")'

def maketitle(match_obj):
    return match_obj.group(0).title()

formatted = re.sub(rex, maketitle, test_string, flags=re.DOTALL)

print(formatted)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following code gives the result you expect:</p>
<pre><code>test_string = '''
  mmm    = "hello hello hello hello hello hello
              hello hello hello hello",
  bbb   = "bbb",
'''

rex = r'(?&lt;= mmm)\s*=\s*"[^"]*'

def maketitle(match_obj):
    return match_obj.group(0).title()

formatted = re.sub(rex, maketitle, test_string)

print(formatted)
</code></pre>
<p>I'm assuming that the value you want to "title-case" is always between double quotes, and that it can not contain a double-quote (escaped in some way). Handling escaping would be possible with a slightly more complex regex, though.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>re.DOTALL</code> flag:</p>
<pre><code>formatted = re.sub(rex, maketitle, string, flags=re.DOTALL)
print(formatted)
</code></pre>
<p>According to the <a href="https://docs.python.org/3/library/re.html#re.DOTALL" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><code>re.DOTALL</code><br/>
  Make the '.' special character match any character at all, including a newline; without this flag, '.' will match anything except a newline.</p>
</blockquote>
</div>
<span class="comment-copy">Please create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> working on several examples.</span>
<span class="comment-copy"><code>re.sub</code> typically will replace everything if it can.  So we need to see your code, to understand what might be going wrong.</span>
<span class="comment-copy">Found out that the newline character is causing the problem, so updated the question accordingly</span>
<span class="comment-copy">I thought if DOTALL is not set, then newlines are ignored by default?</span>
<span class="comment-copy">thanks for your comment, but including the arg will capitalize following words as well. Please refer to the updated example.</span>
