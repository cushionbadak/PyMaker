<div class="post-text" itemprop="text">
<p>I'm a beginner in programming and I'm currently trying to call a function between quotation marks.</p>
<p>Here, more precisely, I would like to replace the name in \"name\": \"name\", with 88. How would I be able to do that with all those quotation marks?</p>
<p>Thanks in advance for your help</p>
<pre><code>import requests

url = "https://api.multiloginapp.com/v1/profile/create"

def descr():
    return 88

querystring = {"token":"xxxx"}

payload = "{\n\t\"generateZeroFingerprintsData\": true,\n    \"name\": \"name\",\n    \"OS\": \"MacOS\",\n    \"platform\": \"MacIntel\",\n    \"browserType\": \"mimic\",\n    \"proxyHost\": \"0.0.0.0\",\n    \"proxyPort\": 0,\n    \"proxyIpValidation\": false,\n    \"proxyType\": \"socks5\",\n    \"maskFonts\": true,\n    \"disablePlugins\": true,\n    \"disableWebrtcPlugin\": true,\n    \"disableFlashPlugin\": true,\n    \"canvasDefType\": \"noise\",\n    \"hardwareConcurrency\": 2,\n    \"langHdr\": \"en-US,en;q=0.8\",\n    \"timeZone\": \"US/Eastern\",\n    \"audio\": {\n        \"noise\": true\n    },\n    \"geolocation\": {\n        \"permitType\": \"block\"\n    },\n    \"mediaDevices\": {\n        \"audioInputs\": 1,\n        \"audioOutputs\": 1,\n        \"videoInputs\": 1\n    },\n    \"webgl\": {\n        \"noise\": true\n    },\n    \"webRtc\": {\n        \"type\": \"block\"\n    },\n    \"shared\": false\n\t},\n}"
headers = {
    'Content-Type': "application/json",
    'Cache-Control': "no-cache",
    'Postman-Token': "xxx
    }

response = requests.request("POST", url, data=payload, headers=headers, params=querystring)

print(response.text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The way to do what you're directly asking how to do here is to use string formatting. For example, <a href="https://docs.python.org/3/library/stdtypes.html#old-string-formatting" rel="nofollow noreferrer">using printf-style formatting</a>,<sup>1</sup> instead of this:</p>
<pre><code>payload = " … \"name\": \"name\" … "
</code></pre>
<p>… do this:</p>
<pre><code>template = " … \"name\": \"%s\" … "
payload = template % (descr(),)
</code></pre>
<p>While we're at it, if you put the payload in single quotes, you wouldn't need to escape every <code>"</code>. Even better, if you put it in triple quotes, you wouldn't need to escape all the newlines. See <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">the tutorial section on Strings</a> for details:</p>
<pre><code>template = """{
    \t"generateZeroFingerprintsData": true,
    \t"name": "%s",
    # …
}"""
</code></pre>
<p>But you can make things a whole lot easier by not doing any of this. You're trying to build a JSON text representing a dictionary. The easy way to do that is to <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">just create the dictionary and JSON-ify it</a>:</p>
<pre><code>payloadobj = {
    "generateZeroFingerprintsData": True,
    "name": descr(),
    # …
}
payload = json.dumps(payloadobj)
</code></pre>
<p>Or, even better, let <code>requests</code> do it for you. <a href="http://docs.python-requests.org/en/master/user/quickstart/#more-complicated-post-requests" rel="nofollow noreferrer">Instead of passing <code>data=</code> with a string, pass it <code>json=</code> with a dict, and it automatically JSON-ifies it, and also sets the <code>Content-Type</code> header for you</a>:</p>
<pre><code>payload = {
    "generateZeroFingerprintsData": True,
    "name": name,
    # …
}
# …

response = requests.post(url, json=payload, headers=headers, params=querystring)
</code></pre>
<p>(Also, notice that, instead of calling the generic <code>request</code> function and passing <code>POST</code>, which you really only want to do for <a href="http://docs.python-requests.org/en/master/user/advanced/#custom-verbs" rel="nofollow noreferrer">custom HTTP verbs that <code>requests</code> doesn't know about</a>, I used the simpler <code>post</code> function, <a href="http://docs.python-requests.org/en/master/user/quickstart/#make-a-request" rel="nofollow noreferrer">as shown in the quickstart docs</a>.)</p>
<hr/>
<p><sub>1. In general, the newer braces-based formatting is simpler. Especially in 3.6+, where you can literally call a function inside quotes, just by wrapping it in braces inside an f-string, like `spam = f'eggs = {eggs()}'. But when the string you're trying to create is full of literal braces, but isn't full of literal percent characters, often that's an exception than the "in general".</sub></p>
</div>
<span class="comment-copy">First, it looks like you're trying to generate some JSON. If so, why not just create a normal dict, which is easy, then call <code>json.dumps</code> on it? Or, even better, just pass the dict to <code>requests.post(url, json=payload, headers=headers)</code>?</span>
<span class="comment-copy">I recommend converting <code>payload</code> into a Python dictionary using the <code>json</code> built-in library and then changing the <code>name</code> key.</span>
<span class="comment-copy">Thanks a lot, it's working perfectly. Any good reason to let requests do the job? I created a dictionary, and your better option seems pretty much identical</span>
