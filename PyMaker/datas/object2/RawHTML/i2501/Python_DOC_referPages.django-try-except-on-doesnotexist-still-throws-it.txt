<div class="post-text" itemprop="text">
<p>I'm struggling with a <code>DoesNotExist</code> error on my application. The point is that I don't really understand why this error is thrown as I already handle it:</p>
<pre><code>import socket

from django.core.exceptions import ObjectDoesNotExist
from django.db import Models

class MyClass(models.Model):
    name = models.CharField(max_length=250, default=socket.gethostname(), unique=True)
    @staticmethod
    def update_some_list(some_list):
        for some_item in some_list:
            try:
                MyClass.objects.get(name=some_item)
            except ObjectDoesNotExist:  # I also tried with MyClass.DoesNotExist
                MyClass.objects.create(name=some_item)
</code></pre>
<p>The point here is that, when I run into this code, I have some "module-level" DoesNotExist that is thrown away, as if this try/except block is never hit: </p>
<pre><code>Traceback (most recent call last):
  File "/app/backend/shared/models.py", line 201, in update_some_list
    MyClass.objects.get(name=some_item)
  File "/usr/lib/python3.6/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/usr/lib/python3.6/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
shared.models.DoesNotExist: MyClass matching query does not exist.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Consider using <a href="https://docs.djangoproject.com/en/2.1/ref/models/querysets/#django.db.models.query.QuerySet.get_or_create" rel="nofollow noreferrer">QuerySet.get_or_create</a>, which shall eliminate the problem above.</p>
<pre><code>MyClass.objects.get_or_create(name=some_item)
</code></pre>
<p>Also, please note, that if you access class inside the <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer">@staticmethod</a> it makes sense to update it to be <a href="https://docs.python.org/3/library/functions.html#classmethod" rel="nofollow noreferrer">@classmethod</a>. Also, in the question you are having:</p>
<pre><code>from django.db import Models
</code></pre>
<p>instead of 
    from django.db import models</p>
</div>
<span class="comment-copy">Did you try to catch a general error in except and print something out just to see if django generally jumps into the except clause?</span>
<span class="comment-copy">It looks as if the exception is not a Django error, but an exception in <code>shared.models</code>?</span>
<span class="comment-copy">Can you make a blanket exception, and print <code>print(type(e).__qualname__)</code>.</span>
<span class="comment-copy">You are catching the <code>django.core.exceptions.ObjectDoesNotExist</code> while the raised one is a <code>shared.models.DoesNotExist</code>.</span>
<span class="comment-copy">Yup, the problem is that I didn't implemented a shared.models.DoesNotExist. I guess it has something to do with my <code>@staticmethod</code>, maybe? Anyway, I re-deployed a new debugging version containing a mix of both of your proposals, a <code>catch Error as e</code> and <code>print(type(e).__qualname__)</code> did not output anything</span>
<span class="comment-copy">Sorry, I accepted the answer too quickly. I now have the same error but in function  <code>get_or_create</code>, still wondering what's happening in there</span>
<span class="comment-copy">@Yoiro strange. You can handle both exceptions at the same time: <code>except (ObjectDoesNotExist, MyClass.DoesNotExist)</code></span>
<span class="comment-copy">The weirdest part in all of this is that it throws a <code>shared.models.DoesNotExist</code>, which is my module name and not my class so... I really don't understand this error. Now I've corrected some other errors (related to external API calls) and this one doesn't show anymore, so... Dunno, Python :D</span>
