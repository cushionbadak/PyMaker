<div class="post-text" itemprop="text">
<p>I am writing a program for counting the approximate number of words in the file and getting an error stating <code>'ascii' codec can't decode byte</code>. </p>
<p>How can I eliminate this error?</p>
<p>Below is the traceback of above error:</p>
<pre><code>Traceback (most recent call last):
  File "/Users/NikolaMac/Desktop/alice.py", line 23, in &lt;module&gt;
    contents = f_obj.read()
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 0: ordinal not in range(128)"
</code></pre>
<p>Here is my code:</p>
<pre><code>filename='alice.txt'

try:
    with open(filename) as f_obj:
        contents = f_obj.read()

except FileNotFoundError:
    msg = "Sorry, the file " + filename + " does not exist."
    print(msg)

else:
    # Count the approximate number of words in the file.
    words = contents.split()
    num_words = len(words)
    print("The file " + filename + " has about " + str(num_words) + " words.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the <code>io.open</code> function instead, and pass it an encoding.</p>
<p>Try this:</p>
<pre><code>import io

with io.open(filename, encoding='utf-8') as f_obj:
    contents = f_obj.read()

print('Words: %d'%len(contents.split(' ')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error message says that it tries to use ASCII decoding. You may need to specify a different encoding.</p>
<p>The only part of your program I can see where encoding can come in is the <code>open</code> call. According to <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">the docs</a>, if you don't pass in an encoding explicitly,</p>
<blockquote>
<p>The default encoding is platform dependent (whatever <code>locale.getpreferredencoding()</code> returns)</p>
</blockquote>
<p>Try passing in <code>encoding='utf-8'</code> to the <code>open</code> call.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe every encoding out there encodes the space character as <code>0x20</code> (out of experience, not with solid evidence). If all you need to do is count words, you can skip the decoding process by checking the number of <code>0x20</code> bytes in the file, then add 1 to it. This simple method will get you an approximate.</p>
<p>With that method, you might have to consider subtracting the number of spaces at the very beginning or end of the file, since that means there is no word surrounding that space. UTF-16 encodes space as <code>0x20 0x00</code> so there might be a null byte at the beginning or end of the file if the document starts or ends with a space. Also some encodings put a byte order mark at the beginning of the file, in which case the text doesn't start from the beginning.</p>
<p>You can't use regex with this method so it will not work if you want to parse documents in non-latin based languages.</p>
</div>
<span class="comment-copy">@MylesHollowed The error message shows Python 3.6.</span>
<span class="comment-copy">Can I do anything in Terminal to works this encoding without additional code?</span>
<span class="comment-copy">What are you trying to do?</span>
<span class="comment-copy">I don't think this is a very good approach... what about consecutive spaces or other whitespace tokens?</span>
<span class="comment-copy">@robinsax Good point. Consecutive spaces can be taken into account. I don't know what whitespace tokens are though.</span>
