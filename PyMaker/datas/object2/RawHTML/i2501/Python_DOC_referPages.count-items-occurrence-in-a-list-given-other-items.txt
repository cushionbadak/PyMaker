<div class="post-text" itemprop="text">
<p>I have written the following python code to parse .csv files and print two columns, date and rating. Now I want to count ratings according to date for example if <code>2018-4-01</code> occur 4 times with rating <code>1,4,1,4</code> I want to print</p>
<pre><code>2018-4-01 1 2
2018-4-01 4 2
</code></pre>
<p>the code I have tried</p>
<pre><code>import glob
import csv
import re
from collections import Counter
path = "ReviewsSep2018/*.csv"
mylist = []
    for filename in glob.glob(path):
    print(filename)
    with open(filename, newline='', encoding='utf-16') as f:
        reader = csv.reader(f)
        for row in reader:
            result = re.search(r'\d+\W\d+\W\d+', row[5])
            if result:
                line = result.group()
                mylist.append(tuple([line,row[9]]))
        print(mylist)
for i in mylist:
    print(i[0],i[1])
</code></pre>
<p>the output of the code example  </p>
<pre><code>2018-09-01 1
2018-09-01 5
2018-09-01 2
2018-09-01 1
2018-08-23 1
2018-09-01 4
2018-09-01 4
2018-09-01 5
2018-09-01 2
2018-09-02 1
2018-09-02 5
2018-09-02 5
</code></pre>
<p>desired result  </p>
<pre><code>date       star   count
2018-09-01   1        2
2018-09-01   2        3
2018-09-01   5        2
2018-09-02   5        2
2018-08-23   1        1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just turn your <code>mylist</code> into <code>Counter</code></p>
<pre><code>mycount = Counter()
</code></pre>
<p>Instead of appending to the list increment count of <code>(date, rating)</code> tuple:  </p>
<pre><code>mycount[(line,row[9])] += 1
</code></pre>
<p>And finally, display it with:  </p>
<pre><code>for (date, rating), count in mycount.items():
    print(date, rating, count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't mind using the pandas library you can use <code>groupby</code> once you have parsed the data. Also in my opinion pandas has a good <code>.csv</code> reading functionality. </p>
<pre><code>import pandas as pd

(pd.DataFrame([['2018-09-01', 1],
              ['2018-09-01', 5],
              ['2018-09-01', 2],
              ['2018-09-01', 1],
              ['2018-08-23', 1],
              ['2018-09-01', 4],
              ['2018-09-01', 4],
              ['2018-09-01', 5],
              ['2018-09-01', 2],
              ['2018-09-02', 1],
              ['2018-09-02', 5],
              ['2018-09-02', 5]],
             columns=['date', 'star']
            )
 .assign(count=1)
 .groupby(['date', 'star'])
 .count()
)
</code></pre>
</div>
<span class="comment-copy">Consider using a dictionary like myDictionary['date and rating as a string']=count</span>
<span class="comment-copy">Please provide a sample of input data</span>
<span class="comment-copy"><code>collections.Counter</code> will help you: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">docs.python.org/3/library/collections.html#collections.Counter</a></span>
