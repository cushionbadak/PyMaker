<div class="post-text" itemprop="text">
<p>I've been using some great answers on Stack Overflow to help solve my problem, but I've hit a roadblock.</p>
<p><strong>What I'm trying to do</strong> </p>
<ol>
<li>Read values from rows of CSV</li>
<li>Write the values from the CSV to Unique PDFs</li>
<li>Work through all rows in the CSV file and write each row to a different unique PDF</li>
</ol>
<p><strong>What I have so far</strong></p>
<pre><code>from PyPDF2 import PdfFileWriter, PdfFileReader
import io
import pandas as pd
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter

# Read CSV into pandas dataframe and assign columns as variables
csv = '/myfilepath/test.csv'
df = pd.read_csv(csv)
Name = df['First Name'].values + " " + df['Last Name'].values
OrderID = df['Order Number'].values

packet = io.BytesIO()

# create a new PDF with Reportlab
can = canvas.Canvas(packet, pagesize=letter)
can.setFont("Helvetica", 12)
if OrderID is not None:
    can.drawString(80, 655, '#' + str(OrderID)[1:-1])

can.setFont("Helvetica", 16)
if Name is not None:
    can.drawString(315, 630, str(Name)[2:-2]
can.save()

# move to the beginning of the StringIO buffer
packet.seek(0)
new_pdf = PdfFileReader(packet)

# read your existing PDF
existing_pdf = PdfFileReader(open("Unique1.pdf", "rb"))
output = PdfFileWriter()

# add the new pdf to the existing page
page = existing_pdf.getPage(0)
page2 = new_pdf.getPage(0)
page.mergePage(page2)
output.addPage(page)

# finally, write "output" to a real file
outputStream = open("Output.pdf", "wb")
output.write(outputStream)
outputStream.close()
</code></pre>
<p><strong>The code above works if:</strong></p>
<ol start="4">
<li>I specify the PDF that I want to write to</li>
<li>I specify the output file name </li>
<li>The CSV only has 1 row</li>
</ol>
<p><strong>What I need help with</strong></p>
<ol>
<li>Reading values from the CSV one row at a time and storing them as a variable to write</li>
<li>Select a unique PDF, and write the values from above, then save that file and select the next unique PDF</li>
<li>Loop through all rows in a CSV and end when the last row has been reached</li>
</ol>
<p>Additional Info: the unique PDFs will be contained in a folder as they each have the same layout but different barcodes</p>
<p>Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>I would personally suggest that you reconsider using Pandas and instead try the standard CSV module. It will meet your need for streaming through a file for row-by-row processing. Shown below is some code looping through a CSV file getting each row as a dictionary, and processing that in a <code>write_pdf</code> function, as well as logic that will get you a new filename to write the PDF to for each row.</p>
<pre><code>import csv
# import the PDF libraries you need

def write_pdf(data, filename):
    name = data['First Name'] + ' ' + data['Last Name']
    order_no = data['Order Number']
    # Leaving PDF writing to you

row_counter = 0
with open('file.csv', 'r') as f:
    reader = csv.DictReader(f)
    for row in reader:
        write_pdf(row, 'Output' + row_counter + '.pdf')
        row_counter += 1
</code></pre>
<p>I'm going to leave the PDF writing to you because I think you understand what you need from that better than I do.</p>
<p>I known I cut out the Pandas part, but I think the issue are having with that, and how it doesn't work for a CSV with more than 1 row stems from <code>DataFrame.get</code> being an operation that retrieve an entire column.</p>
<ul>
<li><a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">Python CSV module docs</a></li>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/api.html#dataframe" rel="nofollow noreferrer">pandas DataFrame docs</a></li>
</ul>
</div>
<span class="comment-copy">Your question sounds like a project with plenty todos. What exactly is the roadblock you are hitting?</span>
<span class="comment-copy">I tried to outline them in the post, but I am unable to work out how to loop through each row of the CSV (that's now a pandas dataframe) and output the contents into a unique PDF, then move on to the next row and use a different unique PDF with the next row and so on until I run out of rows. I think I am missing:  1. Selecting first unique PDF in directory and setting it as input PDF 2. Selecting first row of CSV and setting the contents to be written to above PDF 3. Looping through above 2 steps with different input PDF and row each time\</span>
<span class="comment-copy">Try writing out a pseudocode for project with statements written in English, make checkpoints on what how you determine success of the step, organise existing code to steps in pseudocode, point to specific problem for review. Please accept that maybe you are attempting a task beyoubd your skill level, so splitting it to smaller subprojects as described above should help.</span>
