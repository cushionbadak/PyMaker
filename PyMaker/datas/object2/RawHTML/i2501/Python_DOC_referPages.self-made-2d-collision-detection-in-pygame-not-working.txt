<div class="post-text" itemprop="text">
<p>I am making a tron-like game, two players control their character with keys w,a,s,d for player1 and player2 controls their character with up,down,left,right. On player movement, the user makes a trail and if the opposing player touches the trail of the player, they are "out".<br/><br/>Code for the game:<br/></p>
<pre><code>from steel2D import *

window = Window(600, 450, "Steel 2D Tutorial")
running = True
char1 = Rect(window, 0, 0, 5, 5, (255, 0, 0))
char2 = Rect(window, 595, 445, 5, 5, (0, 0, 255))
trail1 = []
trail2 = []
red = 0
blue = 0

while running:
    sleep(2)
    keys = OnKeyInput()

    if keys[pygame.K_w]:
        char1.y -= 2.2
        trail1.append(char1)
    if keys[pygame.K_a]:
        char1.x -= 2.2
        trail1.append(char1)
    if keys[pygame.K_s]:
        char1.y += 2.2
        trail1.append(char1)
    if keys[pygame.K_d]:
        char1.x += 2.2
        trail1.append(char1)

    if keys[pygame.K_UP]:
        char2.y -= 2.2
        trail2.append(char2)
    if keys[pygame.K_LEFT]:
        char2.x -= 2.2
        trail2.append(char2)
    if keys[pygame.K_DOWN]:
        char2.y += 2.2
        trail2.append(char2)
    if keys[pygame.K_RIGHT]:
        char2.x += 2.2
        trail2.append(char2)

    if char1.x &gt;= 595:
        char1.x = 595
    if char1.x &lt;= 0:
        char1.x = 0
    if char1.y &gt;= 445:
        char1.y = 445
    if char1.y &lt;= 0:
        char1.y = 0

    if char2.x &gt;= 595:
        char2.x = 595
    if char2.x &lt;= 0:
        char2.x = 0
    if char2.y &gt;= 445:
        char2.y = 445
    if char2.y &lt;= 0:
        char2.y = 0

    char1.draw()
    char2.draw()
    Update()

    for t1, t2 in zip(trail1, trail2):
        if OnRectCollison(t1, t2):
            exit()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            pygame.quit()
</code></pre>
<p>On each keypress, the users trail gets appended to a list then it gets looped through to check if there is a collision. Now it seems to only pick up the collision if the player's first trail touches, nothing else.<br/><br/></p>
<p>Code for steel2D (My game engine):</p>
<pre><code>import pygame
from threading import Thread

pygame.init()


def sleep(ms):
    pygame.time.delay(ms)


def Window(w, h, title="steel2D"):
    window = pygame.display.set_mode((w, h))
    pygame.display.set_caption(title)
    return window


def Update():
    pygame.display.update()


def OnKeyInput():
    return pygame.key.get_pressed()


class Rect:
    def __init__(self, window, x, y, w, h, color=(0, 0, 0)):
        self.window = window
        self.x = x
        self.y = y
        self.w = w
        self.h = h
        self.color = color

    def draw(self):
        pygame.draw.rect(self.window, self.color, (self.x, self.y, self.w, self.h))


class Circle:
    def __init__(self, window, x, y, r, color=(0, 0, 0)):
        self.window = window
        self.x = x
        self.y = y
        self.r = r
        self.color = color

    def draw(self):
        pygame.draw.circle(self.window, self.color, (self.x, self.y), self.r, self.r)


def Line(window, color, sx, sy, ex, ey, width=2):
    pygame.draw.line(window, color, (sx, sy), (ex, ey), width)


def OnRectCollison(rect1, rect2):
    if rect1.x &lt; rect2.x + rect2.w and rect1.x + rect1.w &gt; rect2.x and rect1.y &lt; rect2.y + rect2.h and rect1.y + rect1.h &gt; rect2.y:
        return True
    else:
        return False
</code></pre>
<p>Any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several problems:</p>
<ol>
<li><p><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> is the wrong function if you want to compare the head rects with each rect in <code>trail1</code> and <code>trail2</code>. You will only get pairs of rects at the same indices and also drop elements of the longer list. Take a look at this example:</p>
<pre><code>&gt;&gt;&gt; trail1 = [1, 2, 3]
&gt;&gt;&gt; trail2 = ['a', 'b', 'c', 'd', 'e']
&gt;&gt;&gt; list(zip(trail1, trail2))
[(1, 'a'), (2, 'b'), (3, 'c')]
</code></pre>
<p>Just iterate over the rects in the trail lists and check if <code>char1</code> or <code>char2</code> collide with them.</p>
<pre><code># I skip the last few rects by slicing the list, otherwise they would collide immediately.
for trail in trail1[:-5]:
    if OnRectCollison(char1, trail):
        print('collision')
for trail in trail2:
    if OnRectCollison(char1, trail):
        print('collision')
</code></pre></li>
<li><p>You append the same <code>Rect</code> objects (<code>char1</code>, <code>char2</code>) to the trail lists when you move, so the lists only contain references to the head rects and therefore only the heads of the trails are able to collide.</p>
<pre><code>trail1.append(char1)
</code></pre>
<p>Append (shallow) copies instead:</p>
<pre><code>trail1.append(copy.copy(char1))
</code></pre></li>
</ol>
<hr/>
<p>Side note: Collision is spelled incorrectly.</p>
</div>
<span class="comment-copy">in Python there are no ";" at the end of lines and after ":" there must be an indentation (look after the while loop).</span>
<span class="comment-copy">Your ifs are all messed up if I'm not mistaken</span>
<span class="comment-copy">Ok, thanks a lot! I did not know that they would reference to the main head of the trails. Appreciated!</span>
