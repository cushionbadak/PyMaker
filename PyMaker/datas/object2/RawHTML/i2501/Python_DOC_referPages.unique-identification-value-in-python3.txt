<div class="post-text" itemprop="text">
<p>I want to generate a unique value, or uuid, (I do not care if it is a number or hex) for some script produced documents in a python3 script, but this should be unique between multiple executions of the script.</p>
<p>etc. The script might run every two (2) or three (3) days. I do not want to get the same uuid twice.</p>
<p>A simple yet practical way I thought of is using the epoch time (since the script won't run twice at the same second) and the machine it will be running will be 64bit (<a href="https://en.wikipedia.org/wiki/Year_2038_problem" rel="nofollow noreferrer">2038 problem</a>), but it seems to simple to be foolproof.</p>
<p>Another way to achieve this would be to use <a href="https://docs.python.org/3/library/uuid.html#uuid.uuid4" rel="nofollow noreferrer">uuid4()</a>. Will this be unique between executions and different machines?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>uuid4()</code> is cryptographically guaranteed to be unique. In practice, you can go so far as to assume that every UUID ever generated is unique.</p>
<p>I refer you to this: <a href="https://stackoverflow.com/questions/1155008/how-unique-is-uuid?rq=1">How unique is UUID?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As @Chris Conlan mentions, uuid4() would be unique with almost certain probability. But, you can also name the files with the UNIX timestamp, i.e, the output of <code>time.time()</code>.</p>
</div>
<span class="comment-copy">Perfect, so just to be sure, using it is safe between executions right?</span>
<span class="comment-copy">Yes, definitely.</span>
