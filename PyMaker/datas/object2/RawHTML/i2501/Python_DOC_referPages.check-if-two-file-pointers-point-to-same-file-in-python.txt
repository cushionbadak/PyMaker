<div class="post-text" itemprop="text">
<p>How do I check if two file pointers point to the same file or not.</p>
<pre><code>&gt;&gt;&gt; fp1 = open("/data/logs/perf.log", "r")
&gt;&gt;&gt; fp1
&lt;open file '/data/logs/perf.log', mode 'r' at 0x7f5adc07cc00&gt;
&gt;&gt;&gt; fp2 = open("/data/logs/perf.log", "r")
&gt;&gt;&gt; fp2
&lt;open file '/data/logs/perf.log', mode 'r' at 0x7f5adc07cd20&gt;
&gt;&gt;&gt; fp1 == fp2
False
&gt;&gt;&gt; fp1 is fp2
False
</code></pre>
<p>My <strong>use case</strong> is I am watching a file for changes and doing something, but logback rolls over this file to old date and creates a new file. But the file pointer variable in python is still pointing to the old file. If <code>fp1 != fp2</code>, I would like to update <code>fp1</code> to new file.</p>
<p>Why <code>.name</code> doesn't work?
When I tried, </p>
<pre><code>mv /data/logs/perf.log /data/logs/perfNew.log
echo abctest &gt;&gt; /data/logs/perfNew.log
</code></pre>
<p>even then the name still is the old one.</p>
<pre><code>&gt;&gt;&gt; fp1.readline()
'abctest\n'
&gt;&gt;&gt; fp1.name
'/data/logs/perf.log'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.fstat" rel="nofollow noreferrer"><code>os.fstat</code></a> is available on Windows and UNIX, and comparing the inode number (file serial number) and device ID <a href="http://pubs.opengroup.org/onlinepubs/000095399/basedefs/sys/stat.h.html" rel="nofollow noreferrer">uniquely identify a file within the system</a>:</p>
<pre><code>import os
fp1 = open("/data/logs/perf.log", "r")
fp2 = open("/data/logs/perf.log", "r")
stat1 = os.fstat(fp1.fileno())
stat2 = os.fstat(fp2.fileno())

# This comparison tests if the files are the same
stat1.st_ino == stat2.st_ino and stat1.st_dev == stat2.st_dev

fp1.close()
fp2.close()
</code></pre>
<p><code>st_ino</code> is the inode number which identifies the file uniquely on a drive. However, the same inode number can exist on different drives, which is why the <code>st_dev</code> (device ID) is used to distinguish which drive/disk/device the file is on.</p>
</div>
<span class="comment-copy">related: <a href="https://stackoverflow.com/questions/23156274/multiple-file-handles-for-the-same-file" title="multiple file handles for the same file">stackoverflow.com/questions/23156274/…</a></span>
<span class="comment-copy">@Jean-FrançoisFabre Question seems related but there is no accepted answer, and doesn't solve my use case.</span>
<span class="comment-copy">@OptimusPrime There is an accepted answer claiming that you <i>cannot use comparison for file handles</i>. That is how I read it anyway.</span>
<span class="comment-copy">I could have closed as duplicate and I didn't. Hence <i>related</i> not duplicate. The fstat answer below works (beat me by a few minutes damn :))</span>
<span class="comment-copy">@Chris_Rands Adde dwhy .name doesn't work Sir. I need to check if the file with same name has changed.</span>
<span class="comment-copy">This works. Thank you. Could you help me understand what <code>st_dev     Device ID of device containing file. </code> mean? The device ID seems to be same for the two files, but I could use access/modified time, those should be different for the two as well.</span>
<span class="comment-copy">Please close <code>fp1</code> and <code>fp2</code> ;)</span>
<span class="comment-copy">@EricDuminil Isn't it okay if I just close one?</span>
<span class="comment-copy">@OptimusPrime: No, you need to make sure every file handle is closed.</span>
