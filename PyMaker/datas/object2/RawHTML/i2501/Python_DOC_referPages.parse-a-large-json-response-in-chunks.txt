<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10715628/opening-a-large-json-file-in-python">Opening A large JSON file in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Is there an accepted way to parse large json responses/files in Python?  To be clear I mean:</p>
<ol>
<li>The data cannot be loaded into memory all at once.</li>
<li>You know nothing about the data other than that it is legal json.</li>
<li><p>The output format should be something that easily read in chunks(delimited by linebreak or YAMl for example.)</p>
<p>This is the classic json problem, i've seen plenty of other posts on this, but they usually revolve around a specific json representation.  The key here is <strong>you know nothing about the json</strong>.  </p>
<p>I know how to build a parser to do this myself, but it really sucks to do.  I'm hoping there's already an accepted Python solution for this.</p>
<p>Thanks.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You could try <a href="https://pypi.org/project/ijson/" rel="nofollow noreferrer">ijson</a>. It provides event-based iterators and would be easier than writing your own from scratch.</p>
</div>
<span class="comment-copy">There are multiple libraries that can do this. Most of them provide a SAX-like API (and are roughly equivalent to SAX-like JSON parsers for other languages), but <a href="https://pypi.org/project/ijson/" rel="nofollow noreferrer"><code>iljson</code></a> provides an API modeled on ElementTree's <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse" rel="nofollow noreferrer"><code>iterparse</code></a>, which is a lot nicer for Python.</span>
<span class="comment-copy">@abarnert I've been messing with ijson. It seems to easily decode the json stream, but is there something in place that can be used to encode the produced event stream?</span>
<span class="comment-copy">I've been messing with ijson.  It seems to easily decode the json stream, but is there something in place that can be used to encode the produced event stream?</span>
<span class="comment-copy">@JamieMarshall did you see the ObjectBuilder class? See the <code>items()</code> function source for how to use it. Or just use <code>items()</code> if it works for your purposes.</span>
