<div class="post-text" itemprop="text">
<p>I'm trying to understand how Django management commands work.</p>
<p>When there's no argument, or self on it's own. my command works fine.
When I add arguments to the second function 'def add_arguments' it seems one arg works but the other isn't registering.</p>
<p>My command is as follows:</p>
<pre><code>from backend.tasks import MBCommand
import sys

class Command(MBCommand):
    help = 'Refreshes MB data'

    def add_arguments(self , parser):
        parser.add_argument('event_id' , nargs='+' , type=int, 
        help='evid')
        parser.add_argument('market_id', nargs='+', type=int, 
        help='marid')

   def handle(self, *args, **kwargs):

       self.mb_get_events()

       event_ids =  kwargs['event_id']
       market_ids = kwargs['market_id']

        for event_id in event_ids:
            for market_id in market_ids:


            self.mb_get_runners(event_id,market_id)
            sys.exit()
</code></pre>
<p>My two functions are,</p>
<pre><code>from django.core.management.base import BaseCommand, CommandError
class MBCommand(BaseCommand):

    def mb_get_events(self):
        do something


   def mb_get_runners(self, event_id, market_id):
        do something
</code></pre>
<p>What am I missing here?</p>
<p>how I run the command (update_mb is the file name of command)</p>
<pre><code>python manage.py update_mb  event_id market_id
</code></pre>
<p>the error.</p>
<pre><code>usage: manage.py update_mb [-h] [--version] [-v {0,1,2,3}]
                     [--settings SETTINGS] [--pythonpath 
     PYTHONPATH]
                     [--traceback] [--no-color]
                     event_id [event_id ...] market_id [market_id 
  ...]
 manage.py update_mb: error: argument event_id: invalid int 
 value: 
'event_id'
(butterbotenv) macs-MBP:butterbot mac$ 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I already said in the comments to the question:</p>
<p>The command expects one (or multiple) arguments of type <code>int</code>; but as the error says, it cannot cast the received argument into a <code>int</code>.</p>
<p>Try passing numbers; instead of </p>
<pre><code>python manage.py update_mb event_id market_id
</code></pre>
<p>try using this (or something similar)</p>
<pre><code>python manage.py update_mb 2 3 4
</code></pre>
<hr/>
<p>But I notice an issue with your code: you use <code>parser.add_argument(... nargs='+', ...)</code> for both of your arguments. Consider the example I gave previously:</p>
<pre><code>python manage.py update_mb 2 3 4
</code></pre>
<p>How is the command supossed to know which are <code>event_id</code> and which are <code>market_id</code>? How does it work for you?</p>
<p>One improvement could be to use optional arguments; read more about <a href="https://docs.djangoproject.com/en/1.11/howto/custom-management-commands/#accepting-optional-arguments" rel="nofollow noreferrer">Djangos custom management commands</a> and the underlying <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">Python <code>argparse</code> module</a>.
It could look like this:</p>
<pre><code>def add_arguments(self , parser):
    parser.add_argument('--event', action='append', type=int)
    parser.add_argument('--market', action='append', type=int)
</code></pre>
<p>To be used like this:</p>
<pre><code>&gt;&gt;&gt; python manage.py update_mb --event 2 --event 3 --market 4
</code></pre>
</div>
<span class="comment-copy">This seems about right. Can you print <code>kwargs</code> at the beginning of <code>handle</code>, run the command and add the output to your answer (please also add how you run the command).</span>
<span class="comment-copy">The command expects a (or multiple) <code>int</code>; instead of <code>python manage.py update_mb event_id market_id</code> try <code>python manage.py update_mb 2 2</code> or something like that.</span>
<span class="comment-copy">@Ralf thanks a lot that worked!!</span>
<span class="comment-copy">@RodrigoRodrigues I added an answer</span>
