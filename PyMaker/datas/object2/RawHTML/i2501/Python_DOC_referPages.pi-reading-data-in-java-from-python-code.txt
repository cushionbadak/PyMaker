<div class="post-text" itemprop="text">
<p>I have a simple python code that read RFID card that run as a loop
and whenever I put a card - I can see it's data. 
I want to run the code in a loop - and when I get new data(new card) I will see it in my java application.</p>
<p>something like this :</p>
<p>12:13:10</p>
<p>12:13:20</p>
<p>12:13:30</p>
<p>12:13:40 - Card Found , Data is - "David Card"</p>
<p>12:13:50 </p>
<p>12:14:00 - Card Found , Data is - "kate Card"</p>
<p>can someone help? or maybe start show me how to ?I'm new at java  </p>
<p>the python file is Read.py and it's from here
<code>https://pimylifeup.com/raspberry-pi-rfid-rc522</code></p>
<p>Thanks , </p>
<p>this is the Java code for show that print time every 10 seconds</p>
<pre><code>import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Show_Time
{
    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss");

    public static void main(String[] args)
    {
        while (true)
        {
            try{
                Date date = new Date();
                System.out.println(new Timestamp(date.getTime()));
                Thread.sleep(10000);
            }
            catch(InterruptedException ex)
            {
                Thread.currentThread().interrupt();
            }
            finally {}
        }

    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several ways to communicate between two programs. You can make a client-server architecture for example. But, since you are a novice, I think that the fastest and simplest way is to share a common file between the two application.  </p>
<p><strong>Python</strong> side:</p>
<pre><code>with open('RFIDdata.txt', 'w') as the_file:
    the_file.write(rfid_data)
</code></pre>
<p><strong>Java</strong> side:</p>
<pre><code>public static void main(String[] args) {
    BufferedReader reader;
    try {
        reader = new BufferedReader(new FileReader(
                "RFIDdata.txt"));
        String line = reader.readLine();
        while (line != null) {

            Date date = new Date();
            System.out.println(new Timestamp(date.getTime())+" "+line);
            Thread.sleep(10000);
            // read next line
            line = reader.readLine();
        }
        reader.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
</code></pre>
<p>Notice that with this solution, you must execute the two programs manually. Another cleaner but more advance choice could be the use of <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/ProcessBuilder.html" rel="nofollow noreferrer">ProcessBuilder</a>:</p>
<p><strong>Python</strong> side:</p>
<pre><code>print(rfid_data)
</code></pre>
<p><strong>Java</strong> side:</p>
<pre><code>public static void main(String[] args) {
    BufferedReader reader;
    try {
         ProcessBuilder builder = new ProcessBuilder( "python" ,"/home/pi/MFRC522-python/Read.py"); 
         builder.redirectErrorStream(true); 
         Process p = builder.start(); 
         reader = new BufferedReader (new InputStreamReader(p.getInputStream()));

        String line = reader.readLine();
        while (line != null) {

            Date date = new Date();
            System.out.println(new Timestamp(date.getTime())+" "+line);
            Thread.sleep(10000);
            // read next line
            line = reader.readLine();
        }
        reader.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
</code></pre>
</div>
<span class="comment-copy">nice thinking - but maybe I can make the file overwrite it self? every time it have a new device?</span>
<span class="comment-copy">because the final project will be get the information from the card ,add to it some data , and send it to my server</span>
<span class="comment-copy">Open the file with 'w' (write) instead of 'a' (append) to start with an empty file on each write. I'm not sure how the reading process (java) reacts to a suddenly removed file, though. But python could only write to the file if the file does not exist and buffer pending ID's while java removes the file after reading it ... ( see <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#open</a> )</span>
<span class="comment-copy">Actually, the 'w' option should do the trick. @David12123 Can you check if it works? I'll edit the answer accordingly</span>
<span class="comment-copy">I did something else -   ProcessBuilder builder = new ProcessBuilder(                         "python" , "/home/pi/MFRC522-python/Read.py");                 builder.redirectErrorStream(true);                 Process p = builder.start();                 BufferedReader r = new BufferedReader (new InputStreamReader(p.getInputStream()));                and now I can see response in the java - and then work with it -i think it's better then  a file, no ? Thanks</span>
