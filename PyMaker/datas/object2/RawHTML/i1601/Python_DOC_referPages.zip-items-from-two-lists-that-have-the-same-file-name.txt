<div class="post-text" itemprop="text">
<p>I have two list: this:</p>
<p>list1(has way more items)</p>
<pre><code>['C:\\Users\\user\\Desktop\\prog1\\merge\\AST\\AST.shp',
 'C:\\Users\\user\\Desktop\\prog1\\merge\\ASTI\\ASTI.shp',
 'C:\\Users\\user\\Desktop\\prog1\\merge\\ASTO\\ASTO.shp']
</code></pre>
<p>and this:</p>
<p>list2(has way more items)</p>
<pre><code>['C:\\Users\\user\\Desktop\\programs\\merge\\AST\\AST.shp',
 'C:\\Users\\user\\Desktop\\programs\\merge\\ASTI\\ASTI.shp',
 'C:\\Users\\user\\Desktop\\programs\\merge\\AWE\\AWE.shp',  #THIS IS EXTRA
 'C:\\Users\\user\\Desktop\\programs\\merge\\ASTO\\ASTO.shp']
</code></pre>
<p>How to ensure that the pairs will match with the corresponding same name on the other list after the zip?</p>
<p>Maybe we match with their previous folder? Like:</p>
<pre><code>if list1[0].split('\\')[-2] == list2[0].split('\\')[-2]:
      final = [(f,s) for f,s in zip(list1,list2)]
      final
</code></pre>
<p>wanted final output :</p>
<pre><code>[('C:\\Users\\user\\Desktop\\prog1\\merge\\AST\\AST.shp',
  'C:\\Users\\user\\Desktop\\programs\\merge\\AST\\AST.shp'),etc..]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would just group the files with a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a>, then output the pairs of length 2 in a separate list.</p>
<p><strong>Demo:</strong></p>
<pre><code>from os.path import basename
from collections import defaultdict
from pprint import pprint

f1 = [
    "C:\\Users\\user\\Desktop\\prog1\\merge\\AST\\AST.shp",
    "C:\\Users\\user\\Desktop\\prog1\\merge\\ASTI\\ASTI.shp",
    "C:\\Users\\user\\Desktop\\prog1\\merge\\ASTO\\ASTO.shp",
]

f2 = [
    "C:\\Users\\user\\Desktop\\programs\\merge\\AST\\AST.shp",
    "C:\\Users\\user\\Desktop\\programs\\merge\\ASTI\\ASTI.shp",
    "C:\\Users\\user\\Desktop\\programs\\merge\\AWE\\AWE.shp",  # THIS IS EXTRA
    "C:\\Users\\user\\Desktop\\programs\\merge\\ASTO\\ASTO.shp",
]

files = defaultdict(list)
for path in f1 + f2:
    filename = path.split('\\')[-1]
    files[filename].append(path)

pairs = [tuple(v) for k, v in files.items() if len(v) == 2]
pprint(pairs)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[('C:\\Users\\user\\Desktop\\prog1\\merge\\AST\\AST.shp',
  'C:\\Users\\user\\Desktop\\programs\\merge\\AST\\AST.shp'),
 ('C:\\Users\\user\\Desktop\\prog1\\merge\\ASTI\\ASTI.shp',
  'C:\\Users\\user\\Desktop\\programs\\merge\\ASTI\\ASTI.shp'),
 ('C:\\Users\\user\\Desktop\\prog1\\merge\\ASTO\\ASTO.shp',
  'C:\\Users\\user\\Desktop\\programs\\merge\\ASTO\\ASTO.shp')]
</code></pre>
<p><strong>Note:</strong> Using <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><code>os.path.basename()</code></a> to extract the filename from Windows paths will only work on Windows. It will simply do nothing on Unix enviorments.  </p>
</div>
<span class="comment-copy">Do the two lists have the same length?</span>
<span class="comment-copy">No they don't. it needs also condition for that.</span>
<span class="comment-copy">your code returns <code>[]</code>.</span>
<span class="comment-copy">in <code>files = defaultdict(list)</code>. What is the <code>list</code> variable?</span>
<span class="comment-copy">@RoadRunner <a href="https://repl.it/repls/UglyOffshoreIteration" rel="nofollow noreferrer">That is what I get</a>. The online compiler might be running a different OS though. Hmm</span>
<span class="comment-copy">I think it is great.</span>
<span class="comment-copy">@RoadRunner On retrospect, it does make sense. +1</span>
