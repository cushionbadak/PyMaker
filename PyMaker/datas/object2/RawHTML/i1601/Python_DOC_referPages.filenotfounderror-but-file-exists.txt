<div class="post-text" itemprop="text">
<p>I am creating a Python application that imports many JSON files. The files are in the same folder as the python script's location. Before I moved the entire folder someplace else, the files imported perfectly. Since the script creates a files if none exists, it keeps creating the file in the home directory while ignoring the one in the same folder as it is in. When I specify an absolute path (code below):</p>
<pre><code>startT= time()
    with open('~/Documents/CincoMinutos-master/settings.json', 'a+') as f:
        f.seek(0,0) # places pointer at start of file
        corrupted = False
        try:
            # turns all json info into vars with load
            self.s_settings = json.load(f)
            self.s_allVerbs = []
            # --- OFFLINE MODE INIT ---
            if self.s_settings['Offline Mode']: # conjugation file reading only happens if setting is on
                with open('~/Documents/CincoMinutos-master/verbconjugations.json', 'r+', encoding='utf-8') as f2: 
                    self.s_allVerbs = [json.loads(line) for line in f2]
            # --- END OFFLINE MODE INIT ---
            for key in self.s_settings:
                if not isinstance(self.s_settings[key], type(self.s_defaultSettings[key])): corrupted = True
        except Exception as e: # if any unexpected error occurs
            corrupted = True
            print('File is corrupted!\n',e)
        if corrupted or not len(self.s_settings):
            f.truncate(0) # if there are any errors, reset &amp; recreate the file
            json.dump(self.s_defaultSettings, f, indent=2, ensure_ascii=False)
            self.s_settings = {key: self.s_defaultSettings[key] for key in self.s_defaultSettings}
    # --- END FILE &amp; SETTINGS VAR INIT ---
    print("Finished loading file in {:4f} seconds".format(time()-startT))
</code></pre>
<p>It spits out a FileNotFound error.</p>
<pre><code>    Traceback (most recent call last):
  File "/Users/23markusz/Documents/CincoMinutos-master/__main__.py", line 709, in &lt;module&gt;
    frame = CincoMinutos(root)
  File "/Users/23markusz/Documents/CincoMinutos-master/__main__.py", line 42, in __init__
    with open('~/Documents/CincoMinutos-master/settings.json', 'a+') as f:
FileNotFoundError: [Errno 2] No such file or directory: '~/Documents/CincoMinutos-master/settings.json'
</code></pre>
<p>Keep in mind that I am perfectly able to access it with the same absolute path when I operate from terminal. Can somebody please explain what I need to do in order for the files to import correctly?</p>
<p>Also, I am creating this application for multiple users. While <code>/Users/23markusz/Documents/CincoMinutos-master/verbconjugations.json</code> does work, it will not on another user's system. This file is also in the SAME FOLDER as the script so it should import correctly.</p>
<p><strong>UPDATE:</strong>
While my issue is solved using os.path.expanduser(), I still do not understand why python refuses to open a file that is within the same folder as the python script. It should automatically open the file with just the filename and not the absolute path.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>"~"</code> isn't a real directory (and would not qualify as an "absolute path"), and that's why the open doesn't work.</p>
<p>In order to expand the tilde to an actual directory (e.g. <code>/Users/23markusz</code>), you can use <a href="https://docs.python.org/3/library/os.path.html#os.path.expanduser" rel="nofollow noreferrer"><code>os.path.expanduser</code></a>:</p>
<pre><code>import os
...
with open(os.path.expanduser('~/Documents/CincoMinutos-master/settings.json'), 'a+') as f:
    # Do stuff
</code></pre>
</div>
<span class="comment-copy">try replacing <code>/Documents/CincoMinutos-master/settings.json</code> with <code>~/Documents/CincoMinutos-master/settings.json</code></span>
<span class="comment-copy">I tried both and they both generate errors.</span>
<span class="comment-copy">Could you do <code>import os</code> followed by <code>os.getcwd()</code> on your python interpreter (at the same directory that your file is) and comment the result?</span>
<span class="comment-copy">The result it returns is '/Users/23markusz/Documents/CincoMinutos-master'</span>
<span class="comment-copy">Could you try replacing <code>~/Documents/CincoMinutos-master/settings.json</code> with the absolute path <code>/Users/23markusz/Documents/CincoMinutos-master/settings.json</code> to see if this works?</span>
<span class="comment-copy">You forgot to apply the function <code>os.path.expanduser</code> in your example.</span>
<span class="comment-copy">Ouch. That's embarrassing.</span>
<span class="comment-copy">I still don't understand why python refuses to open a file that is within the same folder as the python script. Shouldn't it just automatically open the file with just the filename and not the absolute path?</span>
<span class="comment-copy">Kind of. If you try open a relative path (e.g. <code>"settings.json"</code>) it will be relative to the <i>current directory</i>, not the <i>script's directory</i>. Which means that you must be that exact directory in the terminal for the open to work. (This may or may not be the case, I don't know). Either way, since users could call your script from any directory, that's not a good idea.</span>
<span class="comment-copy">This makes a lot of sense! Thanks a lot!</span>
