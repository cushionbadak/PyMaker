<div class="post-text" itemprop="text">
<p>I had 2 list </p>
<pre><code>daydate=['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']

percentday=['0%', '17%', '27%', '11%', '7%', '19%', '19%']
</code></pre>
<p>i have converted into dictionary by doing </p>
<p><code>daydic=dict(zip(daydate, percentday))</code></p>
<p>the output is coming like </p>
<pre><code>{'Monday': '17%', 'Tuesday': '27%', 'Friday': '19%', 'Wednesday': '11%', 'Thursday': '7%', 'Sunday': '0%', 'Saturday': '19%'}
</code></pre>
<p>i want to sort this dictionary like the order of elements in daywise like below</p>
<pre><code>{'Sunday': '0%','Monday': '17%', 'Tuesday': '27%', 'Wednesday': '11%', 'Thursday': '7%', , 'Friday': '19%','Saturday': '19%'}
</code></pre>
<p>Help me</p>
</div>
<div class="post-text" itemprop="text">
<h3>Dictionaries should not be considered ordered</h3>
<p>They are, in fact, <em>insertion ordered</em> in Python 3.6+ (officially 3.7+), but even so you should <em>prefer</em> to use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="noreferrer"><code>OrderedDict</code></a> for a robust ordered mapping.</p>
<p>In addition, you should never have to type days of the week manually, you can import from <a href="https://docs.python.org/3/library/calendar.html#calendar.day_name" rel="noreferrer"><code>calendar.day_name</code></a> and rotate via <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="noreferrer"><code>deque</code></a>:</p>
<pre><code>from calendar import day_name
from collections import deque, OrderedDict

daydate = deque(day_name)
daydate.rotate(1)

percentday = ['0%', '17%', '27%', '11%', '7%', '19%', '19%']

res = OrderedDict(zip(daydate, percentday))

OrderedDict([('Sunday', '0%'),
             ('Monday', '17%'),
             ('Tuesday', '27%'),
             ('Wednesday', '11%'),
             ('Thursday', '7%'),
             ('Friday', '19%'),
             ('Saturday', '19%')])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As told, a dict is not ordered, but you can order before to convert to dict.</p>
<pre><code>daydate=['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
percentday=['0%', '17%', '27%', '11%', '7%', '19%', '19%']
</code></pre>
<p>Sort by day, just rotate the zip:</p>
<pre><code>dayzip = list(zip(daydate, percentday))
dayzip = dayzip[1-len(dayzip):] + dayzip[:1-len(dayzip)]
daydict = dict(dayzip)

#=&gt; {'Sunday': '0%', 'Monday': '17%', 'Tuesday': '27%', 'Wednesday': '11%', 'Thursday': '7%', 'Friday': '19%', 'Saturday': '19%'}
</code></pre>
<p>To sort by percentage:</p>
<pre><code>dayzip = list(zip(daydate, percentday))
dayzip.sort(key=lambda x: float(x[1][:-1]) )
daydict = dict(dayzip)


#=&gt; [('Sunday', '0%'), ('Monday', '17%'), ('Tuesday', '27%'), ('Wednesday', '11%'), ('Thursday', '7%'), ('Friday', '19%'), ('Saturday', '19%')]
#=&gt; {'Sunday': '0%', 'Thursday': '7%', 'Wednesday': '11%', 'Monday': '17%', 'Friday': '19%', 'Saturday': '19%', 'Tuesday': '27%'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>from collections import OrderedDict
daydic={'Friday': '19%', 'Wednesday': '11%', 'Monday': '17%', 'Thursday': '7%', 'Saturday': '19%', 'Sunday': '0%', 'Tuesday': '27%'}
weeks=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']
print(OrderedDict(sorted(daydic.items(),key =lambda x:weeks.index(x[0]))))
</code></pre>
<p>This will output as:</p>
<pre><code>OrderedDict([('Sunday', '0%'), ('Monday', '17%'), ('Tuesday', '27%'), ('Wednesday', '11%'),
 ('Thursday', '7%'), ('Friday', '19%'), ('Saturday', '19%')])  
</code></pre>
</div>
<span class="comment-copy">Dictionaries don't have a sorting. You can sort it when you print, by sorting the keys</span>
<span class="comment-copy">@TomdeGeus: i want to sort by daywise,i.e., week day wise. Anyway thanks</span>
<span class="comment-copy">But OP wants to sort by day, <i>not</i> by value.</span>
<span class="comment-copy">Oops! In case, rotate <a href="https://stackoverflow.com/questions/9457832/python-list-rotation">stackoverflow.com/questions/9457832/python-list-rotation</a>. I''l edit.</span>
