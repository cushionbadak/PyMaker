<div class="post-text" itemprop="text">
<p>In an attempt to tech myself a method for binding in python, I have the following code:</p>
<pre><code>wname = QLineEdit()
dname = "Test Value"
sattr  = getattr(wname, "text")
</code></pre>
<p><strong>How to assign the value of dname to wname using the info from above?</strong></p>
<p>I do understand that setText() would typically be used here; however, I am exploring a method for binding and I would like to know how to utilitze the <code>getattr()</code> function for extracting the setter and getter for the widget passed.  Thanks!!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure if I got the point, but by doing </p>
<pre><code>sattr = getattr(wname, "text")
</code></pre>
<p>you are retrieving the function and not the text inside it. Therefore by calling</p>
<pre><code>sattr("abc")
</code></pre>
<p>you will set the text. Same for writing:</p>
<pre><code>sattr = gettar(wname, "setText")
sattr("Hello World!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Similarly to what Alessandro said, you need to get the setter with <code>getattr</code> first, then call it with your text:</p>
<pre><code>wname = QLineEdit()
dname = "Test Value"
sattr = getattr(wname, "setText")
sattr(dname)
</code></pre>
<p>If you want to build some code that gets both the getters and setters based on a property name, I guess you could do something like this:</p>
<pre><code>def get_getters_and_setters(widget, name):
    return getattr(widget, name), getattr(widget, 'set' + name[0].upper() + name[1:]
</code></pre>
<p>If, instead, you want something similar to the way <code>getattr</code> and <code>setattr</code> work with Python attributes but for already existing widget properties, I guess you could do something like the following, but it seems a bit of an overkill to me:</p>
<pre><code>class CustomLineEdit(QtWidgets.QLineEdit):

    @property
    def textAttribute(self):
        return self.text()

    @textAttribute.setter
    def textAttribute(self, value):
        self.setText(value)

wname = CustomLineEdit()
dname = "Test Value"
setattr(wname, 'textAttribute', dname)
</code></pre>
</div>
<span class="comment-copy"><code>setattr(wname, 'text', dname)</code> or <code>getattr(wname, 'setText')(dname)</code>. The former only really makes sense if the attribute is a <a href="https://doc.qt.io/qt-5/qlineedit.html#properties" rel="nofollow noreferrer">qt property</a>.</span>
<span class="comment-copy">pyqt is written in C++, it does not use <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">property</a>, so getting the getter and the setter will not be possible as you think, as ekhumoro points out, something close to what you want is to use q-properties</span>
<span class="comment-copy">Perhaps I should have clarified that I will be using Qt widgets for my binding.</span>
<span class="comment-copy">@Elcid_91 that does not change anything, the Qt Widgets are QObject that you also have the q-properties</span>
<span class="comment-copy">@Elcid_91 A possible option is that you inherit the widgets and establish those properties.</span>
<span class="comment-copy">Yes, I am trying to receive the function, then utilize the retrieved function to set the value.  There will be different widgets and I need to retrieve their individual setter and getter methods.</span>
