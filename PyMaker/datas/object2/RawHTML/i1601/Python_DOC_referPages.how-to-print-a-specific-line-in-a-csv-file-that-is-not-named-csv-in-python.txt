<div class="post-text" itemprop="text">
<p>I'm supposed to write a function that does this specifically. </p>
<pre><code>def get_customer_record(file_handle, n):
    """
    -------------------------------------------------------
    Find the n-th record in a comma-delimited sequential file.
    Records are numbered starting with 0.
    Use: result = get_customer_record(file_handle, n)
    -------------------------------------------------------
    Parameters:
        file_handle - file to search (file - open for reading)
        n - the number of the record to return (int &gt; 0)
    Returns:
        result - a list of the fields of the n-th record if it exists,
            an empty list otherwise (list)
    -------------------------------------------------------
    """
</code></pre>
<p>And here is the file.</p>
<p><strong>customers.txt</strong> </p>
<pre><code>12345,Tom,Black,300.00,1998-01-30
23456,Alice,Smith,1200.50,1998-02-20
14567,Jane,White,900.00,1998-07-01
43564,Weilin,Zhao,450.25,1998-01-03
45432,Bina,Mehta,278.95,1998-03-21
</code></pre>
<p>The Code</p>
<pre><code>list = [] 
file_handle = open('customers.txt', 'r+', encoding="utf-8") 
line = file_handle.readline(n) 
list.append(line.strip(',')) 
file_handle.close() 
return list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution would be iterate through the file using <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a>:</p>
<pre><code>from csv import reader

def get_customer_record(file_handle, n):
    with open(file=file_handle) as csvfile:
        csv_reader = reader(csvfile)
        return next((line for row, line in enumerate(csv_reader) if row == n), [])

print(get_customer_record(file_handle='customer.csv', n=3))
# ['43564', 'Weilin', 'Zhao', '450.25', '1998-01-03']

print(get_customer_record(file_handle='customer.csv', n=5))
# []
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not clear from your syntax whether to return just the row as a string, or the fields split around the <code>,</code>.  I have assumed the single-line.</p>
<p>The python <code>readline()</code> function does not take an index, it just reads the <em>next</em> line from the file.  Below I used <code>readlines()</code> (note the <code>s</code>) which reads all lines from the file.  If your file was huge, this would not be so efficient.</p>
<p>Also a bit of error-handling for out-of-bounds <code>n</code> helps:</p>
<pre><code>def get_customer_record(file_handle, n):
    lines = file_handle.readlines()
    if (n &gt;= 0 and n &lt; len(lines)):
        return lines[n] # or n-1?
    else:
        return None

file_handle = open( 'customers.txt', 'r+', encoding="utf-8" )
fields = get_customer_record( file_handle, 3 )
print( str( fields )  )
</code></pre>
<p>Of course you may not want to read the whole file, just the next Nth record</p>
<pre><code>def get_customer_record(file_handle, n):
    if (n &gt;= 0):
        line = file_handle.readline()
        while (n &gt; 0):
            line = file_handle.readline()
            if (line == ''):
                line = None
                break  # end of file
            n -= 1
        return line
    else:
        return None
</code></pre>
<p>Obviously this code assumes that <code>n</code> is indexed 0 -&gt; (N-1).</p>
</div>
<span class="comment-copy">So what have you tried so far? In what way is it not working?</span>
<span class="comment-copy">Welcome to Stack Overflow! Please take the <a href="https://stackoverflow.com/tour">tour</a>, look around, and read through the <a href="https://stackoverflow.com/help">Help Center</a>, in particular <a href="https://stackoverflow.com/help/how-to-ask">How do I ask a good question?</a> If you run into a specific problem, research it thoroughly, search thoroughly here, and if you're still stuck post your code and a description of the problem. Also, remember to include <a href="https://stackoverflow.com/help/mcve">Minimum, Complete, Verifiable Example</a>. People will be glad to help</span>
<span class="comment-copy">Welcome to SO, we are a community of volunteers that help answer questions/issues in code. Unfortunately I see no code here, we don't write programs. Please try to answer this yourself and come back if you run into any issues. Don't be afraid to search your question/issue before asking</span>
<span class="comment-copy">Maybe it would help to read about python's CSV Module - <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a> or perhaps Python's input and output syntax - <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/inputoutput.html</a></span>
<span class="comment-copy">@Kingsley        list = []      file_handle = open('customers.txt', 'r+', encoding="utf-8")      line = file_handle.readline(n)     list.append(line.strip(','))     file_handle.close()          return list I have tried doing this, here was what I have in my testing file.  from functions import get_customer_record file_handle = open('customers.txt', 'r+', encoding="utf-8") n = int(input())  result = get_customer_record(file_handle, n)  print(list)</span>
<span class="comment-copy">Really appreciate the help, my only question is why did you use 3? in the line  fields = get..... Thank you</span>
<span class="comment-copy">@DavidEnjugu I used 3 just as a test number, no particular reason.  But FWIW I tested with 0, 5, 50 and -4 too.</span>
