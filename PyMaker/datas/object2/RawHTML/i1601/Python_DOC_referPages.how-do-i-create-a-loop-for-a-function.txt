<div class="post-text" itemprop="text">
<p>I have a function that sorts a data set based on start and end dates and returns the top value. I was hoping to create a for loop that would allow me to run the function for all five year ranges in one go.</p>
<pre><code>def get_topName(dataset, start_year, end_year):
    subset = dataset[(dataset.year &gt;= start_year) &amp; (dataset.year &lt;= end_year)
    subset2 = subset.sort_values("n" , ascending = False)
return subset3[0:1]
</code></pre>
<p>I was hoping to loop this function for the following year ranges: 1950-1960, 1960-1970, 1970-1980, 1980-1990, and 1990-2000.</p>
<p>I was trying something like this, but I couldn't get it to work. I am also not sure how to properly create my list of date ranges.</p>
<pre><code>for int in decades:
    get_topName(baby_df, start_year, end_year)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this:</p>
<pre><code>start_year = 1950
end_year = 2000
step = 10

for x in range(start_year, end_year, step):
    get_topName(baby_df, x, x+step)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since your function has multiple args you can either unpack and use the map method, or use list comprehensions. Alternatively you could the itertools.partial method and use map over that. The easiest in this case is the list comprehension. Here is an example:</p>
<pre><code>years    = range(1950, 2000, 10)
topNames = [get_topName(dataset, start, end) for start, stop in zip(years[:-1], years[1:])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one suggestion, using <code>np.vectorize()</code>:</p>
<pre><code>import numpy as np

new_func = np.vectorize(get_topName)
output = new_func(dataset, [list_of_start_years], [list_of_end_years])
</code></pre>
<p>Note from the <a href="https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.vectorize.html" rel="nofollow noreferrer">documentation</a>, </p>
<blockquote>
<p>The vectorize function is provided primarily for convenience, not for performance. The implementation is essentially a for loop.</p>
</blockquote>
</div>
<span class="comment-copy">Can you explain what the "in zip(years....."  is doing?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> is one of the builtin functions in python it aggregates the iterables in the argument. In this case i define a range and iterate over the years from the first element until the end -1 and from the second element until the end. This way you have the range set that you specified above.</span>
