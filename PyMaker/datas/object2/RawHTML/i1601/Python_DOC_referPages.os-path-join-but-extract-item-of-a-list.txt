<div class="post-text" itemprop="text">
<p>I want to do an os.path.join that contains a list in <code>filenames</code> because there are 3 files in that final folder. I want to only use the PST.shp</p>
<pre><code>import os
fo = []
f = r'C:\Users\user\Desktop\folder\folder1'
for dirpath,dirnames,filenames in os.walk(f):      
        print(filenames)
        #fo.append(os.path.join(dirpath,filenames))
</code></pre>
<p>gives:</p>
<pre><code>[]
[]
['PST.dbf', 'PST.shp', 'PST.shx']
[]
['PST.dbf', 'PST.shp', 'PST.shx']
[]
['PST.dbf', 'PST.shp', 'PST.shx']
[]
['PST.dbf', 'PST.shp', 'PST.shx']
[]
</code></pre>
<p>How to filter so I use only the <code>PST.shp</code> full path in the list <code>fo</code>?</p>
<p>something like:</p>
<pre><code> fo = []
    f = r'C:\Users\user\Desktop\folder\folder1'
    for dirpath,dirnames,filenames in os.walk(f):  
         if filenames not empty:    
            print(filenames)
            fo.append(os.path.join(dirpath,filenames[0][1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are sure that you will only use the script to process a PST shape, just follow @AbdulNiyasPM's advice and check and process the <code>PST.shp</code> file:</p>
<pre><code>     ...
     if filenames not empty:    
        print(filenames)
        if 'PST.shp' in filenames:
            fo.append(os.path.join(dirpath, 'PST.shp'))
</code></pre>
<p>If you want to keep any <code>shp</code> file, you can simple test that pattern:</p>
<pre><code>     ...
     if filenames not empty:    
        print(filenames)
        for name in filenames:
            if name.endswith('.shp'):
                fo.append(os.path.join(dirpath, name))
</code></pre>
<p>Beware: if you need to be able to support non case sensitive platforms like Windows (ie: if you want to accept file names like <code>xx.Shp</code> or <code>yy.SHP</code>) a simple <code>str.endswith</code> is not enough, and you should use <code>fnmatch</code> or at least a non case sensitive regex (thanks to Peter Wood for his remark).</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>endswith</code> function to check for extensiton as follows,</p>
<pre><code>for dirpath,dirnames,filenames in os.walk(f):  
   for f in filenames:
       if f.endswith('.shp'):
          fo.append(os.path.join(dirpath,f))
</code></pre>
</div>
<span class="comment-copy">Check if <code>PST.shp</code> is in <code>filenames</code>. If yes <code>append</code> the path. ie, <code>fo.append(os.path.join(dirpath, 'PST.shp'))</code></span>
<span class="comment-copy">Since Python 3.5 <code>glob</code> is recursive so you could use that. See <a href="https://stackoverflow.com/questions/2186525/use-a-glob-to-find-files-recursively-in-python">Use a Glob() to find files recursively in Python?</a> which also has pre-3.5 solutions.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow noreferrer"><b><code>fnmatch</code></b></a>.</span>
<span class="comment-copy">ok this worked but is it possible to do it without referring to the name but use index?</span>
<span class="comment-copy">@PeterWood Write an answer if you want with fnmatch.</span>
<span class="comment-copy">What if the filename is uppercase, <code>'PST.SHP'</code>? It would be safer to use <a href="https://docs.python.org/3.1/library/fnmatch.html" rel="nofollow noreferrer"><b><code>fnmatch</code></b></a> as it deals with case based on operating system support.</span>
<span class="comment-copy">@PeterWood: Thanks for noticing. Post edited</span>
