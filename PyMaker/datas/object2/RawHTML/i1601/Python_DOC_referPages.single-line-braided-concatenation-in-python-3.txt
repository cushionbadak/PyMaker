<div class="post-text" itemprop="text">
<p>is there any single-line code out there that can give this exact behavior? that is, take two strings and return a "braided" concatenation of sorts, assuming both strings are of the same length?</p>
<pre><code>string1 = '01234'
string2 = '56789'

output = '0516273849'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about this way (without using <code>join</code> and <code>for</code>):</p>
<pre><code>output = list(sum(zip(string1, string2),()))
</code></pre>
<p>Hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can make use of <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> followed by string concatenation in a list comprehension:</p>
<pre><code>string1 = '01234'
string2 = '56789'

output = ''.join([x + y for x, y in zip(string1, string2)])
print(output) # 0516273849
</code></pre>
</div>
<span class="comment-copy">Btw, this is commonly referred to as "interleaving". That word might help you find answers. And don't strive for single-line solutions. Have you managed to solve this by any means yet?</span>
<span class="comment-copy">thank you for giving me the common name for this. i have most certainly solved my problem now... my earlier attempts were much too convoluted.</span>
<span class="comment-copy">brilliant! i'll be using this way, definitely.</span>
<span class="comment-copy">Glad you like it! Please <b>Accept</b> the answer if you see it is the one you are after.</span>
<span class="comment-copy">are there any possible optimizations if i wish for the output to be a list of the form ['0', '5', '1', '6', '2', '7', '3', '8', '4', '9'] ?</span>
<span class="comment-copy">@RohanCurran You omit the <code>join</code> (which is used to convert the list to a string). So simply <code>output = [x + y for x, y in zip(string1, string2)]</code> should give you the list.</span>
<span class="comment-copy">this actually yields <code>['05', '16', '27', '38', '49']</code>... i solved it by using <code>output = list(''.join(x+y for x,y in zip(s1,s2)))</code> instead. thank you for your help!</span>
<span class="comment-copy">@RohanCurran Good catch :)</span>
