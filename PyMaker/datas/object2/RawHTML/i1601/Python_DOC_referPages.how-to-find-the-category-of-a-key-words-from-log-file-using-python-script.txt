<div class="post-text" itemprop="text">
<p>my input file</p>
<pre><code>INCIDENT 677700 password reset
INCIDENT 677742 C:\ drive full
INCIDENT 500901 mouse not working
INCIDENT 500942 unable to connect oracle box
INCIDENT 500949 high cpu utilization
INCIDENT 600901 sql server clustering failed
INCIDENT 490203 Low disk space issue
INCIDENT 10I891 Lotus Notes client failed
INCIDENT 489011 Low disk space issue
INCIDENT 89G901 SSIS Load failed

words =["password","drive full","disk space","SSIS","sql server","cpu utilization","oracle","Lotus Notes","mouse"]
</code></pre>
<p>I would like assign category in my output file should be: and how to add future words.</p>
<pre><code>Password,INCIDENT 677700 password reset
drive full,INCIDENT 677742 C:\ drive full
mouse,INCIDENT 500901 mouse not working
Oracle,500942 unable to connect oracle box
cpu utilization,INCIDENT 500949 high cpu utilization
sql server,INCIDENT 600901 sql server clustering failed
disk space, INCIDENT 490203 Low disk space issue
Lotus Notes,INCIDENT 10I891 Lotus Notes client failed
disk space,INCIDENT 489011 Low disk space issue
SSIS,INCIDENT 89G901 SSIS Load failed
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just iterate over each line and each word, and if the word exists in the line, then write the new line <code>word,line</code> to the output file.</p>
<p>Some assumptions:</p>
<ul>
<li>You want to do caseless matching e.g. <code>Disk space</code> and <code>disk space</code> would match. </li>
<li>Each entry in the log file only has one matching word. If there are more, then the line would get written twice with each separate entry. </li>
</ul>
<p><strong>Demo:</strong></p>
<pre><code>words = [
    "password",
    "drive full",
    "disk space",
    "SSIS",
    "sql server",
    "cpu utilization",
    "oracle",
    "Lotus Notes",
    "mouse",
]

with open("input.txt") as file, open("output.txt", "w") as out:
    for line in file:
        for word in words:
            # Do lowercase matching
            if word.lower() in line.lower():
                out.write("%s,%s" % (word, line))
</code></pre>
<p><em>output.txt</em>:</p>
<pre><code>password,INCIDENT 677700 password reset
drive full,INCIDENT 677742 C:\ drive full
mouse,INCIDENT 500901 mouse not working
oracle,INCIDENT 500942 unable to connect oracle box
cpu utilization,INCIDENT 500949 high cpu utilization
sql server,INCIDENT 600901 sql server clustering failed
disk space,INCIDENT 490203 Low disk space issue
Lotus Notes,INCIDENT 10I891 Lotus Notes client failed
disk space,INCIDENT 489011 Low disk space issue
SSIS,INCIDENT 89G901 SSIS Load failed
</code></pre>
<p>You can also condense the two nested loops with <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product()</code></a>:</p>
<pre><code>from itertools import product

with open("input.txt") as file, open("output.txt", "w") as out:
    for line, word in product(file, words):
        if word.lower() in line.lower():
            out.write("%s,%s" % (word, line))
</code></pre>
</div>
<span class="comment-copy">So, what have you tried?</span>
<span class="comment-copy">What if there are two keywords in one entry?</span>
<span class="comment-copy">without using words =["password","drive full","disk space","SSIS","sql server","cpu utilization","oracle","Lotus Notes","mouse"]. Is it possible to identify categories?</span>
<span class="comment-copy">How to identify new features? Tomorrow i may get like INCIDENT 500986 ERROR_BAD_ENVIRONMENT? How can i capture?</span>
<span class="comment-copy">@Gower Where are you getting these features from?</span>
<span class="comment-copy">Incident / release / problem tickets data located @ SQL Server database. from there i have to pull and categorize.</span>
