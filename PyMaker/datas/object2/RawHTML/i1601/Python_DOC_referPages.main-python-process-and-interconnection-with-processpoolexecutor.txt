<div class="post-text" itemprop="text">
<p>What kind of structure that a main Python process gets results from ProcessPoolExecutor after, on exemple, map command has been invoked.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can call on </p>
<blockquote>
<p>executor.map</p>
</blockquote>
<p>function for getting the results. Here's a really good <a href="https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example" rel="nofollow noreferrer">example</a> in python docs.</p>
<p><strong>EDITED (to answer the question)</strong></p>
<p>It uses a queue(from multiprocessing module) for scheduling calls and another for the results if any. Its like a consumer-producer model. I think that reading this <a href="https://github.com/python/cpython/blob/master/Lib/concurrent/futures/process.py" rel="nofollow noreferrer">code</a> will be very enlightenment. Its very well documented.</p>
</div>
<span class="comment-copy">Sure, thanks. But what I meant. What structure, like queue or pipe, is being used to communicate between forked child processes and main process to get a result eventually.</span>
