<div class="post-text" itemprop="text">
<p>I'm working on a domain fronting project. Basically I'm trying to use the <code>subprocess.call()</code> function to interpret the following command:
<code>wget -O - https://fronteddomain.example --header 'Host: targetdomain.example'</code></p>
<p>With the proper domains, I know how to domain front, that is not the problem. Just need some help with writing using the python <code>subprocess.call()</code> function with wget.</p>
</div>
<div class="post-text" itemprop="text">
<p>I figured it out using curl: </p>
<p><code>call(["curl", "-s", "-H" "Host: targetdomain.example", "-H", "Connection: close", "frontdomain.example"])</code></p>
</div>
<span class="comment-copy">What have you done so far that did not work? Which part of it is not covered by documentation <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a>?</span>
<span class="comment-copy">Why do a <code>subprocess.call()</code> to launch <code>wget</code> when you have HTTP client libraries available in Python, starting with <code>requests</code> (<a href="http://docs.python-requests.org/en/master/" rel="nofollow noreferrer">docs.python-requests.org/en/master</a>)?</span>
<span class="comment-copy">@PatrickMevzek I've been working on domain fronting using curl and wget through the CLI, so I just looked up a way to run a command in python. I will look into the <code>requests</code> library. I just need the ability to manipulate Host headers.</span>
<span class="comment-copy">Manipulating headers should not be a problem, see <a href="http://docs.python-requests.org/en/master/user/quickstart/#custom-headers" rel="nofollow noreferrer">docs.python-requests.org/en/master/user/quickstart/â€¦</a>.  By using an internal library instead of an external command you gain: more control, more performances, more portability (ex: running your code on an host that does not have <code>curl</code> or <code>wget</code> installed) and better security.</span>
