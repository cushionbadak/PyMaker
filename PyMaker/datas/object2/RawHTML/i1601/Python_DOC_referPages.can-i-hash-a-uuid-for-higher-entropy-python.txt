<div class="post-text" itemprop="text">
<p>If I generate a UUID with something like </p>
<pre><code>ID = uuid.uuid4()
</code></pre>
<p>I get a 128 bit string with 122 bits of entropy. </p>
<p>However I desire a string with more than 128 bits of entropy. </p>
<p>How will the entropy of the string change if I put this uuid through a hashing function.</p>
<p>for instance:</p>
<pre><code>ID = uuid.uuid4()
ID = HASHFUNC(ID)
</code></pre>
<p>or even:</p>
<pre><code>ID = uuid.uuid4()
Salt = someString
ID = HASHFUNC(ID+Salt)
</code></pre>
<p>Is it better to simply use os.urandom(32) and be done with it?</p>
<p>Thanks for the help</p>
</div>
<div class="post-text" itemprop="text">
<p>No, you can't.</p>
<p>Although hashing a string with 2<sup>122</sup> possible values will give you a 128-bit result, there are still only 2<sup>122</sup> possible outcomes, so your hashed UUIDs still only carry 122 bits of information each.</p>
<p>Either use <code>os.urandom(16)</code> (since 16 bytes is sufficient for 128 bits of entropy), or the <a href="https://docs.python.org/3/library/secrets.html" rel="nofollow noreferrer"><code>secrets</code></a> module (if you're using Python 3.6).</p>
</div>
<span class="comment-copy">If you want to safely generate string tokens in python, you need to use the <code>secrets</code> module. Posting it as a comment since your question is specific about UUID, but I believe you're in the wrong path.</span>
<span class="comment-copy">Nothing you do to transform your result will increase the entropy. You have to generate more random bits with a separate RNG process.</span>
