<div class="post-text" itemprop="text">
<p>I've seen PyPI distribution names as well python package names with numbers in them. For example <a href="https://pypi.org/project/flake8/" rel="nofollow noreferrer">flake8 </a> is one example, where you also import with <code>import flake8</code>.</p>
<p>According to PyPI and PEP standards, is it OK to have a number in a package name? I know you can't start with a number for syntax reasons, but is it OK in the middle or the end from a standards viewpoint?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, note that PyPI project names and module names are completely independent; there's nothing stopping you from creating a package <code>foo</code> that installs a module <code>bar</code>, and these two names follow separate policies as to what is valid.</p>
<p>Module names are restricted by Python's grammar to be valid <a href="https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-identifier" rel="nofollow noreferrer">identifiers</a>.  <a href="https://docs.python.org/2.7/reference/lexical_analysis.html#grammar-token-identifier" rel="nofollow noreferrer">In Python 2</a>, this means that they must consist of an ASCII letter or underscore followed by zero or more ASCII letters, digits, and/or underscores.  In Python 3, Unicode is added, and things get more complicated, but I believe that all-ASCII module names still follow the same restrictions.</p>
<p>The names of projects on PyPI (as specified in <a href="https://www.python.org/dev/peps/pep-0508/#names" rel="nofollow noreferrer">PEP 508</a>, among others) must consist entirely of ASCII letters, numbers, <code>.</code>, <code>-</code>, and/or <code>_</code>, and they must begin &amp; end with a letter or number.  There is also <a href="https://www.python.org/dev/peps/pep-0503/#normalized-names" rel="nofollow noreferrer">a normalization policy</a> that enforces case-insensitivity and treats runs of <code>.</code>, <code>-</code>, and <code>_</code> as equal, so <code>foo-bar</code> and <code>FOO.BAR</code> are considered the same project.</p>
<p>In addition, <a href="https://www.python.org/dev/peps/pep-0008/#package-and-module-names" rel="nofollow noreferrer">PEP 8 has a section on package and module names</a>; it says:</p>
<blockquote>
<p>Modules should have short, all-lowercase names. Underscores can be used in the module name if it improves readability. Python packages should also have short, all-lowercase names, although the use of underscores is discouraged.</p>
<p>When an extension module written in C or C++ has an accompanying Python module that provides a higher level (e.g. more object oriented) interface, the C/C++ module has a leading underscore (e.g. <code>_socket</code>).</p>
</blockquote>
<p>So, yes, you can have a number in both a project name and a module name, and the project name can even begin with one!</p>
</div>
<span class="comment-copy">Very comprehensive reply. Thank you!</span>
