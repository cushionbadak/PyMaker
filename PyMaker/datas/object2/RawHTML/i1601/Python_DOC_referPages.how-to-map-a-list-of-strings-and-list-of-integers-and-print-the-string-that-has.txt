<div class="post-text" itemprop="text">
<p>I have been troubles by this. I have two lists</p>
<blockquote>
<p>lista = ["a", "b", "c", "d"]</p>
<p>listb = [80, 90, 70, 60]</p>
</blockquote>
<p>I want to map it so </p>
<p>"a" has a value of 80 </p>
<p>"b" has a value of 90 </p>
<p>"c" has a value of 70 and </p>
<p>"d" has a value of 60 </p>
<p>Then, I want to print the string that has the second largest value, which is "a"</p>
<p>Is there any way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>To determine the second highest value, you need to track, at a minimum, the <em>top two values</em> in your iterable. So use <code>heapq</code> again, similar to <a href="https://stackoverflow.com/questions/53306005/how-to-map-a-list-of-strings-and-list-of-integers-and-find-the-string-that-has-g">your previous problem</a>.</p>
<pre><code>from heapq import nlargest

lista = ["a", "b", "c", "d"]
listb = [80, 90, 70, 60]

n = 2
idx, _ = zip(*nlargest(n, enumerate(listb), key=lambda x: x[1]))  # (1, 0)
key = lista[idx[-1]]                                              # 'a'
</code></pre>
<p>Only for large values of <em>n</em> should you consider a full sort, where <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> may perform better.</p>
</div>
<div class="post-text" itemprop="text">
<p>It can be done with <code>argsort</code>'ing <code>listb</code> which returns the indices of the sorted items. Then select from <code>lista</code> with the second highest index. <code>argsort</code> is available in <code>numpy</code>.</p>
<pre><code>import numpy

second_largest_str = lista[numpy.argsort(listb)[-2]]
print(second_largest_str)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way of approaching this is to create a dictionary where the list of characters is the <strong>Key</strong> and the list of integers are the <strong>Values</strong></p>
<p>There are probably a ton of ways of doing this, this is just one!</p>
<p>Zip takes two lists and creates a dictionary out of them, the first argument being the Key, and the second argument being the value</p>
<pre><code>a = ["A", "B", "C"]
b = [1, 2, 3]
dict_1 = dict(zip(a,b))
print(dict_1)
&gt;&gt;&gt; {'A': 1, 'B': 2, 'C': 3}
</code></pre>
<p>Then you could use this to sort the dictionary by value from smallest to largest</p>
<pre><code>x = sorted((k,v) for v,k in dict_1.items())
</code></pre>
<p>Then to access the second to largest you could access the dictionary from the right hand side (Negative Indexing)</p>
<pre><code>print(x[-2])
&gt;&gt;&gt; (3, 'C') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pandas</code> for this:</p>
<pre><code>import pandas as pd

In [2210]: lista = ["a", "b", "c", "d"]

In [2211]: listb = [80, 90, 70, 60]

In [2213]: df = pd.DataFrame(lista)

In [2214]: df['listb'] = listb

In [2215]: df
Out[2215]: 
   0  listb
0  a     80
1  b     90
2  c     70
3  d     60
</code></pre>
<p>Then find the 2nd highest like below:</p>
<pre><code>In [2228]: df.nlargest(2, 'listb').tail(1).values.tolist()
Out[2228]: [['a', 80]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple enough version for the same</p>
<pre><code>d = {}
l = ["a", "b", "c", "d"]
j = [80, 90, 70, 60]

for i in range(len(l)):
    d[str(l[i])] = j[i]

d = sorted(d.items(), key=lambda x: x[1], reverse=True)
print(d[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The sorted() function takes an optional key argument:</p>
<pre><code>lista = ["a", "b", "c", "d"] 
listb = [80, 90, 70, 60] 

pairs = zip(lista, listb)
sorted_tuples = sorted(pairs, key=(lambda pair : pair[1]), reverse=True)
str_with_second_highest_nr = sorted_tuples[1][0]
</code></pre>
<p>You could zip it together to a pairs of lista and listb and sort these after the second item in each tuple with a lambda function as key argument.
Then just pick first position of the second pair</p>
<pre><code>&gt;&gt;&gt; print(sorted_tuples)
[('b', 90), ('a', 80), ('c', 70), ('d', 60)]

&gt;&gt;&gt; print(str_with_second_highest_nr)
a
</code></pre>
</div>
<span class="comment-copy">Did we just do one of your homework assignments?</span>
