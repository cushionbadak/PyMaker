<div class="post-text" itemprop="text">
<p>I am trying to calculate some sentence probabilities.</p>
<p>I have a dictionary that contains some values for different letters:</p>
<pre><code>{'a': 0.2777777777777778, 'b': 0.3333333333333333, 'c': 0.3888888888888889}
</code></pre>
<p>I then have separate sentences in a list such as:</p>
<pre><code>['aabc', 'abbcc', 'cba', 'abcd', 'adeb']
</code></pre>
<p>What i am trying to do is some probability calculations so that it searches the sentence in a list and multiplies the values for example
<code>aabc</code> would be <code>0.2777*0.2777*0.3333*0.388888</code></p>
<p>How would i search this list for each independent string and do this multiplication?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce</code></a> to reduce your sentence into its final probability (note that if a character does not have a probability, I just use 1 to multiply):</p>
<pre><code>from functools import reduce

probs = {'a': 0.2777777777777778, 'b': 0.3333333333333333, 'c': 0.3888888888888889}
sentences = ['aabc', 'abbcc', 'cba', 'abcd', 'adeb']

result = [reduce(lambda acc, curr: probs.get(curr, 1) * acc, s, 1) for s in sentences]
print(result) 
# [0.010002286236854138, 0.004667733577198597, 0.0360082304526749, 0.03600823045267489, 0.09259259259259259]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a pretty non-fanciful way of doing it:</p>
<pre><code>values = {'a': 0.2777777777777778, 'b': 0.3333333333333333, 'c': 0.3888888888888889, 'd':0.1234, 'e':0.5678}

strings = ['aabc', 'abbcc', 'cba', 'abcd', 'adeb']

for string in strings:
  product = 1
  for char in string:
    product *= values[char]

  print(product)
</code></pre>
<hr/>
<h2>EDIT :</h2>
<p>If we want to use check if the dictionary has values, we can do the following and use <code>unk</code> instead: </p>
<pre><code>values = {'a': 0.2777777777777778, 'b': 0.3333333333333333, 'c': 0.3888888888888889}

strings = ['aabc', 'abbcc', 'cba', 'abcd', 'adeb']

unk = 0.05

for string in strings:
  product = 1
  for char in string:
    if char in values:
      product *= values[char]
    else:
      product *= unk

  print(product)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a double for loop. The outer <code>for</code> would iterate over the sentence list, and the inner <code>for</code> can iterate over each letter in the sentence. Python for loop syntax is <code>for item in iterable_object: &lt;code to run&gt;</code>. Try using this information and see how far you can get. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension and a for loop to do this. </p>
<pre><code>def prob(string, prob):
    out = 1;
    probs = [prob[char] for char in string]
    for x in probs:
        out *= x;
    return out
</code></pre>
<p><code>prob</code> is a dictionary of probabilities and <code>string</code> is the string. <code>in</code> iterates over each character in the string.</p>
</div>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/on-topic">On topic</a>, <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a>, and <a href="https://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/" rel="nofollow noreferrer">... the perfect question</a> apply here. StackOverflow is not a design, coding, research, or tutorial resource. However, if you follow whatever resources you find on line, make an honest coding attempt, and run into a problem, you'd have a good example to post.</span>
<span class="comment-copy">I would love to post a code attempt, if i knew where to even start. Would i split each list item into 'a', 'a', 'b', 'c' then search it?</span>
<span class="comment-copy">what if i were to use a set unk value for any values that do not appear in my vocab. i.e. if my vocab is just <code>abc</code> but unk has a value 0.055. Then <code>abcd</code> would be a<i>b</i>c*unk</span>
<span class="comment-copy">@godlypython You can change the reduce lambda to <code>lambda acc, curr: probs.get(curr, unk) * acc, s, 1)</code>.</span>
<span class="comment-copy">Lets say d and e wasn't in my vocab file but i want to use a item in the dictionary "unk" for those values, is that possible. i.e. unk = 0.05. Since my vocabulary only includes a,b,c, it will automatically use the value of unk for any d or e letters found</span>
<span class="comment-copy">Yup, I've added an additional response to your follow-up comment.</span>
<span class="comment-copy"><code>sum</code> is not a good name for a product...</span>
<span class="comment-copy">@juanpa.arrivillaga true :) Corrected.</span>
<span class="comment-copy">Thank you, could I ask you to run a test and see what output you get? My probability is coming up beyond 1. I think its adding up all the probabilities of all the sentences. I need to keep them seperate. So that each sentence has its own probability</span>
