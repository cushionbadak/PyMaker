<div class="post-text" itemprop="text">
<p>I was expecting different answer like 
0
1
3
6
But the answer is only 6.Could someone help me understand it please, Thanks!</p>
<pre><code>def func(x):
  res = 0
  for i in range(x):
     res += i
  return res

print(func(4))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> returns only one value. What you meant to use is <code>yield</code>:</p>
<pre><code>def func(x):
  res = 0
  for i in range(x):
     res += i
     yield res
</code></pre>
<p>This is called a  <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator</a>. You may use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer">next</a> to see values one by one, or use <a href="https://stackoverflow.com/questions/5239856/asterisk-in-function-call">*</a> operator to print them all at once:</p>
<pre><code>print(*(func(4)))
</code></pre>
<p>Sure enough, you get the desired output:</p>
<pre><code>0 1 3 6
</code></pre>
</div>
<span class="comment-copy">the print prints  whatever your function  returns. unless you <code>yield</code> the function can only return <i>one</i> value. Why would it print 0 1 3 6 ? - you would need to print <i>inside</i> the loop the actual <code>res</code> (before incrementing) to get these numbers, but then they'll be on seperate lines unless you specify <code>end=" "</code> for your print... - your function does essentially a <code>return sum(range(x))</code></span>
<span class="comment-copy">You add up the numbers in <code>range(4)</code> and get <code>0+1+2+3==6</code>. How did you expect it to work?</span>
<span class="comment-copy">see <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#for-statements</a> for a short overview about <code>for</code> and ``range`</span>
<span class="comment-copy">thanks guys, I appreciate deeply!</span>
<span class="comment-copy">thanks. but I am new to python. can you explain it in simple way please. thanks.</span>
<span class="comment-copy">@Bekry A <code>generator</code> is like an iterable, but generates (yields) elements on demand. See <a href="https://stackoverflow.com/questions/1756096/understanding-generators-in-python">this</a> for more on the topic.</span>
