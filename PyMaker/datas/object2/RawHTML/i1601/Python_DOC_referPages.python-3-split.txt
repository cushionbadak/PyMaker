<div class="post-text" itemprop="text">
<p>When I'm splitting a string <code>"abac"</code> I'm getting undesired results.</p>
<p><strong>Example</strong></p>
<pre><code>print("abac".split("a"))
</code></pre>
<p>Why does it print:</p>
<p>['', 'b', 'c']</p>
<p>instead of</p>
<p>['b', 'c']</p>
<p>Can anyone explain this behavior and guide me on how to get my desired output?</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://stackoverflow.com/users/1453822/deepspace">@DeepSpace</a> pointed out <em>(referring to the <a href="https://docs.python.org/3.7/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs</a>)</em></p>
<blockquote>
<p>If sep is given, consecutive delimiters are not grouped together and are deemed to delimit empty strings (for example, '1,,2'.split(',') returns ['1', '', '2']).</p>
</blockquote>
<p>Therefore I'd suggest using a better delimiter such as a comma <code>,</code> or if this is the formatting you're stuck with then you could just use the builtin <a href="http://docs.python.org/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code></a> function as suggested in <a href="https://stackoverflow.com/questions/3845423/remove-empty-strings-from-a-list-of-strings">this</a> answer, this will remove any "empty" strings if passed <code>None</code> as the function.</p>
<pre><code>sample = 'abac'
filtered_sample = filter(None, sample.split('a'))
print(filtered_sample)
#['b', 'c']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you split a string in python you keep everything between your delimiters (even when it's an empty string!)</p>
<p>For example, if you had a list of letters separated by commas:</p>
<pre><code>&gt;&gt;&gt; "a,b,c,d".split(',')
['a','b','c','d']
</code></pre>
<p>If your list had some missing values you might leave the space in between the commas blank:</p>
<pre><code>&gt;&gt;&gt; "a,b,,d".split(',')
['a','b','','d']
</code></pre>
<p>The start and end of the string act as delimiters themselves, so if you have a leading or trailing delimiter you will also get this "empty string" sliced out of your main string:</p>
<pre><code>&gt;&gt;&gt; "a,b,c,d,,".split(',')
['a','b','c','d','','']

&gt;&gt;&gt; ",a,b,c,d".split(',')
['','a','b','c','d']
</code></pre>
<p>If you want to get rid of any empty strings in your output, you can <a href="https://stackoverflow.com/questions/3845423/remove-empty-strings-from-a-list-of-strings">use the filter function</a>. </p>
<p>If instead you just want to get rid of this behavior near the edges of your main string, you can strip the delimiters off first:</p>
<pre><code>&gt;&gt;&gt; ",,a,b,c,d".strip(',')
"a,b,c,d"

&gt;&gt;&gt; ",,a,b,c,d".strip(',').split(',')
['a','b','c','d']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your example, <code>"a"</code> is what's called a delimiter. It acts as a boundary between the characters before it and after it. So, when you call <code>split</code>, it gets the characters before <code>"a"</code> and after <code>"a"</code> and inserts it into the list. Since there's nothing in front of the first <code>"a"</code> in the string <code>"abac"</code>, it returns an empty string and inserts it into the list. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>split</code> will return the characters between the delimiters you specify (or between an end of the string and a delimiter), even if there aren't any, in which case it will return an empty string. (See <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">the documentation</a> for more information.)</p>
<p>In this case, if you don't want any empty strings in the output, you can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> to remove them:</p>
<pre><code>list(filter(lambda s: len(s) &gt; 0, "abac".split("a"))
</code></pre>
</div>
<span class="comment-copy"><code>a</code> is the separator, <code>split()</code> will return all the words in between the separators without them.</span>
<span class="comment-copy">Because this is how <code>split</code> works and is documented: "If sep is given, consecutive delimiters are not grouped together and are deemed to delimit empty strings (for example, <code>'1,,2'.split(',')</code> returns <code>['1', '', '2'])</code>"  <a href="https://docs.python.org/3.7/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/3.7/library/stdtypes.html#str.split</a></span>
<span class="comment-copy"><code>split</code> and <code>join</code> are implemented so that <code>x.join(s.split(x)) == s</code> for any string <code>s</code> and non-empty string <code>x</code>.</span>
