<div class="post-text" itemprop="text">
<p>Okay so what I need to do is as follows:</p>
<p>I create a game lobby and 8 players join and their wins are as follows</p>
<pre><code>Player1 = 10 wins
Player2 = 150 wins
Player3 = 100 wins
Player4 = 23 wins
Player5 = 76 wins
Player6 = 92 wins
Player7 = 1088 wins
Player8 = 0 wins
</code></pre>
<p>Now that we have the players and their wins the teams need to be split into two groups so that the teams are fair for example it would be unfair for the players with:</p>
<p>0, 10, 23, 76 wins to be</p>
<p><strong>VS</strong></p>
<p>92, 150, 100 and 1088 wins.</p>
<p>I've looked all over and can't find anything that does this any guidance would be great.</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's say we have each player and score in a dict like this </p>
<pre><code>players = {player1:0, player2:15, ...}
</code></pre>
<p>You could probably sort players into two groups, say <code>team1</code> and <code>team2</code> by iterating over each player score and sorting that way</p>
<pre><code> team1 = {}
 team2 = {}
 for player, score in players.items():
      # Do something there to split over the two groups
      # This will depend on what you consider "fair"
      # In the end, you should be able to get your game set up. Good luck! 
      pass
</code></pre>
<p>If you just wat to sort "one then the other", you could probably use something like</p>
<pre><code>players = {"player1":0, "player2":1000, "player3":500, "player4":1582}
team1 = {}
team2={}

i = 0
for key in sorted(players, key=lambda p: players[p]):
     i += 1
     if i % 2 == 0:
          team2[key] = players[key]
     else:
          team1[key] = players[key]

print(team1)
print(team2) 
</code></pre>
</div>
<span class="comment-copy">SO  is about fixing <i>your</i> Code - not implementing your ideas.  Please go over <a href="https://stackoverflow.com/help/how-to-ask">how to ask</a> and  <a href="https://stackoverflow.com/help/on-topic">on-topic</a> again and if you have questions provide  your code as <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Try to get a "fair" grouping by hand:  [7,8,4,1] &lt;&gt; [2,3,6,5] - then think about you can achieve this with coding. If thats what you consider "fair" you got an algorythm going - code it, come back if you get specific problems.</span>
<span class="comment-copy">Hi, interesting question but I think you need to show what you have tried so far (code) so someone could help you out.</span>
<span class="comment-copy">Please explain why you are downvoting</span>
<span class="comment-copy">Because your code does nothing to solve the question - you provide some noise-code and the complete logic is still not solved. Beside that - this Questions as currently stated is far too broad to be solved by any answer - too much is unclear and would lead to forht and back because of ill-defined-ness. Iterating over sorted dict entries also makes not much sense - probably better to use a sorted queue and take from front end/back end depending if you need a low scored or high scored player until empty.</span>
<span class="comment-copy">@PatrickArtner This is why I setup the OP a starting point, but didn't implement the fair-ness algorithm. They are now free to iterate over the players and find the "fair" grouping. I can't guess for them if they want the avrerage to be close, one winner then the next to alternate between groups, ...</span>
<span class="comment-copy">I think the best way to do it is first sort them by ascending order and then put the 1st and second value in a team iterating through the list until they are all sorted, not sure how i would achieve this though</span>
<span class="comment-copy">@Poppadomus do you know about <code>list</code>'s? if not: <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#lists</a> - if so, sort it, then take from front and end and populate 2 more lists that are your teams. You showed no code at all so its difficult to help you because nobody can see how advanced your python skills are. You can read here: <a href="https://stackoverflow.com/questions/19199984/sort-a-list-in-python" title="sort a list in python">stackoverflow.com/questions/19199984/sort-a-list-in-python</a>  how to sort something. If you use tuples <code>[(4,"Olaf"),(6,"Bjoern"),(2,"Astrid")]</code> and sort them they'll get sorted by the first value (and if draw-on the name) so you have your data representation</span>
