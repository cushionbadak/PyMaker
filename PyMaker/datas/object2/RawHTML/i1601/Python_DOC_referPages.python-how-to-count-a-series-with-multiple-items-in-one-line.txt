<div class="post-text" itemprop="text">
<pre><code>f = open("routeviews-rv2-20181110-1200.pfx2as", 'r')
#read file into array, ignore first 6 lines
lines = loadtxt("routeviews-rv2-20181110-1200.pfx2as", dtype='str', 
delimiter="\t", unpack=False)
#convert to dataframe
df = pd.DataFrame(lines,columns=['IPPrefix', 'PrefixLength', 'AS'])
series = df['AS'].astype(str).str.replace('_', ',').str.split(',')
arr = numpy.array(list(chain.from_iterable(series)))
ASes= pd.Series(numpy.bincount(arr))
</code></pre>
<p>ValueError: invalid literal for int() with base 10: '31133_65500,65501'</p>
<p>I want to count each time an item appears in col AS. However some lines have multiple entries that need to be counted.</p>
<p>Refer to: <a href="https://stackoverflow.com/questions/53231776/python-find-max-in-dataframe-column-to-loop-to-find-all-values">Python Find max in dataframe column to loop to find all values</a></p>
<p>Txt file: <a href="http://data.caida.org/datasets/routing/routeviews-prefix2as/2018/11/" rel="nofollow noreferrer">http://data.caida.org/datasets/routing/routeviews-prefix2as/2018/11/</a></p>
<p>But that cannot count line 67820 below. </p>
<pre><code>    Out[94]: df=
              A                 B       C
0             1.0.0.0           24  13335
1             1.0.4.0           22  56203
2             1.0.4.0           24  56203
3             1.0.5.0           24  56203
              ...          ...    ...
67820    1.173.142.0            24  31133_65500,65501
              ...          ...    ...
778719  223.255.252.0           24  58519
778720  223.255.254.0           24  55415
</code></pre>
<p>The _ is not a typo, that is how it appears in the file. </p>
<pre><code>Desired output.
1335     1
...     ..
31133    1
...     ..
55415    1 
...     ..
56203    3
...     ..
58159    1
...     ..
65500    1
65501    1
...     ..
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h3><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.replace.html" rel="nofollow noreferrer"><code>replace</code></a> + <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.split.html" rel="nofollow noreferrer"><code>split</code></a> + <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain</code></a></h3>
<p>You can replace <code>_</code> with <code>,</code>, split and then chain before using <code>np.bincount</code>:</p>
<pre><code>from itertools import chain

series = df['A'].astype(str).str.replace('_', ',').str.split(',')
arr = np.array(list(chain.from_iterable(series))).astype(int)

print(pd.Series(np.bincount(arr)))

0     0
1     0
2     2
3     4
4     1
5     6
6     1
7     0
8     0
9     0
10    1
dtype: int64
</code></pre>
</div>
<span class="comment-copy">Please, put the desired output. More details needes to describe your program</span>
<span class="comment-copy">"I would expect" is desired output. I want to count occurrences of each number in col A.</span>
<span class="comment-copy">.astype(int) have error OverflowError: Python int too large to convert to C long .astype('int64') gave ValueError: invalid literal for int() with base 10: '' any suggesitons?</span>
<span class="comment-copy">@JimHubbard, Works fine for me, with the data you've provided (which, admittedly, doesn't include types). You can try providing a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, see <a href="https://stackoverflow.com/questions/20109391/how-to-make-good-reproducible-pandas-examples">How to make good reproducible pandas examples</a>.</span>
<span class="comment-copy">I know, that was a sample. My file is Length: 778721..with numbers similar in magnitude</span>
<span class="comment-copy">@JimHubbard, Yup, it's tough to help without representative data. If you can find out the row that's causing problems, it'll give me a chance of being able to debug.</span>
<span class="comment-copy">sorry about that. I provided the actual df above. I did not consider length in my previous example. Note it is now col C, sorry for the confusion.</span>
