<div class="post-text" itemprop="text">
<p>I have a pandas dataframe with two columns that are filled with pandas sets. I want to check that all values in one column are a subset of the other column. I thought the code below would work but it seems you cannot apply .issubset() to two series with sets.</p>
<p>Ex:</p>
<pre><code>data = [[['one','orange','green'],['one','orange']],[['milk','honey'],['Clarke', 'honey']]]

df = pd.DataFrame(data, columns=['Column_1','Column_2'])

Are_all_column_2_values_valid = df.loc[:, 'Column_2'].apply(set).issubset(df.loc[:, 'Column_1'])

desired_output = pd.series([True,False])
</code></pre>
<p>All values in both sets will be strings.</p>
<p>Any help would greatly be appreciated! </p>
</div>
<div class="post-text" itemprop="text">
<p>First ensure you actually have series of sets:</p>
<pre><code>df = df.apply(lambda x: x.apply(set))
</code></pre>
<p>Then use the syntactic sugar <code>&lt;=</code> for <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.issubset" rel="nofollow noreferrer"><code>set.issubset</code></a>:</p>
<pre><code>print(df['Column_2'] &lt;= df['Column_1'])

0     True
1    False
dtype: bool
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension like this:</p>
<pre><code>&gt;&gt;&gt; [set(v).issubset(i) for v, i in zip(df.Column_2, df.Column_1)]
[True, False]
</code></pre>
<p>Or as a Series:</p>
<pre><code>&gt;&gt;&gt; pd.Series(set(v).issubset(i) for v, i in zip(df.Column_2, df.Column_1))
0     True
1    False
dtype: bool
</code></pre>
</div>
<span class="comment-copy">Interesting solution. I am trying to apply the set to two columns of a larger pandas dataframe. I tried:  df['Column_1'] = df['Column_1'].apply(lambda x: x.apply(set))  but get an error 'AttributeError: 'list' object has no attribute 'apply''  Do you know how to fix this?</span>
