<div class="post-text" itemprop="text">
<p>My dataframe is as shown </p>
<pre><code> name    key    value
 john    A223   390309
 jason   B439   230943
 peter   A5388  572039
 john    D23902 238939
 jason   F2390   23930
</code></pre>
<p>I want to convert the above generated dataframe into a nested dictionary with list of dictionary in the below shown format.</p>
<pre><code>{'john': [{'key':'A223', 'value':'390309'}, {'key':'A5388', 'value':'572039'}],
 'jason': [{'key':'B439','value':'230943', {'key':'F2390', 'value'2:'23930'}],
 'peter': [{'key':'A5388'  ,'value':'572039'}]}
</code></pre>
<p>could some one help with this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><code>dictionary comprehension</code></a> with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer"><code>to_dict</code></a>:</p>
<pre><code>d = {name:df.loc[df.name==name,['key','value']].to_dict('records') for name in df.name.unique()}

print(d)
{'john': [{'key': 'A223', 'value': 390309}, {'key': 'D23902', 'value': 238939}], 
 'jason': [{'key': 'B439', 'value': 230943}, {'key': 'F2390', 'value': 23930}], 
 'peter': [{'key': 'A5388', 'value': 572039}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html" rel="nofollow noreferrer">groupby</a>, <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html" rel="nofollow noreferrer">apply</a>, <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iterrows.html" rel="nofollow noreferrer">iterrows</a> and Series' <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.tolist.html" rel="nofollow noreferrer">tolist</a> as below:</p>
<pre><code>def f(rows):
      return {rows.iloc[0]['name']: [{'key': row['key'], 'value': row['value']} for _, row in rows.iterrows()]}

df.groupby("name").apply(f).tolist()
</code></pre>
<p>Generating the results you want:</p>
<pre><code>[{'jason': [{'key': 'B439', 'value': '230943'}, {'key': 'F2390', 'value': '23930'}]},
 {'john': [{'key': 'A223', 'value': '390309'}, {'key': 'D23902', 'value': '238939'}]},
 {'peter': [{'key': 'A5388', 'value': '572039'}]}]
</code></pre>
<p><strong>Explanation:</strong></p>
<ul>
<li>With <code>groupby("name")</code> we aggregate all the rows per <code>name</code></li>
<li>Then we are applying the function <code>f</code> to each of those groups of rows with <code>apply(f)</code></li>
<li><code>f</code> iterates through those rows with <code>iterrows</code> creating a list of dictionaries with <code>[{'key': row['key'], 'value': row['value']} for _, row in rows.iterrows()]</code> and finally we take just the first row's name with <code>rows.iloc[0]['name']</code> to create the final dictionary for this <code>name</code>. </li>
<li>We aggregate all the dictionaries per <code>name</code> with <code>tolist()</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>try this,</p>
<pre><code>final_dict={}
def dict_make(row):
    m_k= row['name'].values.tolist()[0]
    final_dict[m_k]=  row.set_index('name').to_dict(orient='records')
df.groupby('name').apply(dict_make)
print final_dict
</code></pre>
<p>Output:</p>
<pre><code>{'peter': [{'value': 572039, 'key': 'A5388'}], 
'john': [{'value': 390309, 'key': 'A223'}, {'value': 238939, 'key': 'D23902'}],
'jason': [{'value': 230943, 'key': 'B439'}, {'value': 23930, 'key': 'F2390'}]}
</code></pre>
</div>
