<div class="post-text" itemprop="text">
<p>I need to sort my list in alphabetical order but ignore the case of my letters.</p>
<pre><code>my_list = [('CAT', 1), ('Crop', 1), ('PoP', 4), ('anTs', 1), ('apple', 1), ('cAt', 1), ('can', 1), ('dog', 1), ('long', 1), ('poeT', 1), ('toe', 2)]
</code></pre>
<p>I would like to receive :</p>
<pre><code>my_list_sorted = [('anTs', 1), ('apple', 1), ('can', 1), ('CAT', 1), ('cAt', 1), ('Crop', 1), ('dog', 1), ('long', 1), ('poeT', 1), ('PoP', 4), ('toe', 2)]
</code></pre>
<p>I tried to do :</p>
<pre><code>sorted(set(my_list),key=str.lower())
</code></pre>
<p>But I received this error : </p>
<pre><code>TypeError: descriptor 'lower' of 'str' object needs an argument
</code></pre>
<p>Someone can help me please ?</p>
<p>Thank you,
Jason</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to provide a key function:</p>
<pre><code>sorted(my_list, key=lambda item : item[0].lower())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>sorted(my_list, key=lambda x: x[0].casefold())
</code></pre>
<p>The <code>key</code> parameter of the function <code>sorted</code> is the value that will be used for comparison in the sorting process. In this case the <code>key</code> we want is the string part of the tuples in lowercase, so that's what we return using a one-line lambda function.</p>
<p>In python <code>str</code> is a basic built in function that converts the value passed to a string, that's why the error.</p>
<p>See <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>str.casefold()</code></a> to understand why is prefered over <code>str.lower()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't need to keep an original version of the list it's quicker to sort in place by calling a list method:</p>
<pre><code>my_list.sort(key=lambda tup: tup[0].lower())
</code></pre>
<p>this method doesn't return anything because the original list object now becomes sorted.</p>
</div>
<span class="comment-copy">Is there a way without using lambda?</span>
<span class="comment-copy">@MitchelPaulin that's correct -- what would you expect to do?</span>
