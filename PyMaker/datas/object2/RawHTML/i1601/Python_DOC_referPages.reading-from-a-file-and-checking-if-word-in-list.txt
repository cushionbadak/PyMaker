<div class="post-text" itemprop="text">
<p>my wife texts me unorganized and long grocery lists. I will paste her list into a text file. I want to write a program that will will erase her unordered list and write to that file an ordered list. e.x. all fruit together, meat together ect. clearly this program is in its infancy. in my text file, I have written:</p>
<pre><code>banana
apple
</code></pre>
<p>in this case, when I iterate through each line of my text file, I expect <code>item</code> to be appended to fruit? but it is not. what have I missed?</p>
<pre><code>fruit = []
vegetables = []
meat = []
dairy = []
fruit_list = ["banana", "apple", "orange"]

def read_list():
    with open("/storage/emulated/0/textfiles/grocery.txt", "r") as r:
        for item in r:
            if item in fruit_list:
                fruit.append(item)
    print(fruit)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to strip the line endings from the file, as they are carrying <code>\n</code> or <code>\r\n</code>(Windows carriage return) at the ends. This means you are comparing <code>banana</code> with <code>banana\n</code>, which are <em>not</em> equal, leading to nothing being appended. </p>
<p>You can fix this by using <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip()</code></a> beforehand like so:</p>
<pre><code>item = item.strip()
if item in fruit_list:
    # rest of code
</code></pre>
<p>Or you can just strip from the right with <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer"><code>str.rstrip()</code></a>:</p>
<pre><code>item = item.rstrip()
if item in fruit_list:
    # rest of code
</code></pre>
<p>You could also strip everything while iterating with <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a>:</p>
<pre><code>for item in map(str.strip, r):
    # rest of code
</code></pre>
<p>But the first two solutions are fine. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>.rstrip()</code> to cut '\n' simbols from end of lines    </p>
<pre><code>def read_list():
    with open("grocery.txt", "r") as r:
        for item in r:
            if item.rstrip() in fruit_list:
                fruit.append(item)
    print(fruit)

read_list()
</code></pre>
<p>also you can use <code>item.rstrip().lower()</code> to check items that starts with Upper letter</p>
</div>
<span class="comment-copy">strip the item. there is a newline at the end. <code>"banana" != "banana\n"</code></span>
<span class="comment-copy">Try to cut the whitespaces before the comparison: item=item.strip()</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/21761498/string-comparison-doesnt-seem-to-work-for-lines-read-from-a-file">String comparison doesn't seem to work for lines read from a file</a> Probably there are better ones out there but this is the first one I got.</span>
<span class="comment-copy">Iterating like that includes the newline character in each <code>item</code>. Try e.g. <code>item.strip()</code> or use <code>r.splitlines()</code> for a list of all newlineless items.</span>
<span class="comment-copy">I used item.rstrip(). that worked, thank you</span>
<span class="comment-copy">Readlines not needed,  strip() is the key to their issue.</span>
<span class="comment-copy">@SpghttCd readlines will return 'banana\n' of first line in example. And it does not equal to 'banana' that in fruit_list</span>
<span class="comment-copy">Right, and that is exactly the problem of the question. hence: <code>readlines</code> is not a solution for the problem.</span>
<span class="comment-copy">@SpghttCd your truth, <code>readlines()</code> is unnecessary</span>
