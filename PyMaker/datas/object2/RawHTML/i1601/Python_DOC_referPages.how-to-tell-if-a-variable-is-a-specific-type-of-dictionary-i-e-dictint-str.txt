<div class="post-text" itemprop="text">
<p>I have a dictionary -</p>
<pre><code>d = dict(
    0='a',
    1='b',
    2='c'
)
</code></pre>
<p>How can I tell if <code>d</code> is a <code>dict</code> of type <code>(int, str)</code>?</p>
<p>In C# it'd be something like:</p>
<pre><code>d.GetType() == typeof(Dictionary&lt;int, string&gt;)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python dictionaries don't have types. You'd literally have to check every key and value pair. E.g.</p>
<pre><code>all(isinstance(x, basestring) and isinstance(y, int) for x, y in d.items())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Within a single Python dictionary, values may be of arbitrary types. Keys have the additional requirement that they must be hashable, but they may also cover multiple types.</p>
<p>To check keys or values in a dictionary are of a specific type, you can iterate them. For example:</p>
<pre><code>values_all_str = all(isinstance(x, str) for x in d.values())
keys_all_int = all(isinstance(x, int) for x in d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you're using Python 3.7 you can do something like:</p>
<pre><code>from typing import Dict

d: Dict[int, str] = { 0: 'a', 1: 'b', 2: 'c' }

print(__annotations__['d'])
</code></pre>
<p>and get back: <code>typing.Dict[int, str]</code></p>
<p>there's a function <a href="https://docs.python.org/3/library/typing.html#typing.get_type_hints" rel="nofollow noreferrer"><code>typings.get_type_hints</code></a> that might be useful in the future, but currently only knows about objects of type:</p>
<blockquote>
<p>function, method, module or class</p>
</blockquote>
<p><a href="https://www.python.org/dev/peps/pep-0526/" rel="nofollow noreferrer">PEP-0526</a> also says something is to be done about this</p>
</div>
<span class="comment-copy">Dictionaries don't have specific types.</span>
<span class="comment-copy">You can mix and match different types of keys and values. <code>d = {0:'a', 'foo': 1}</code></span>
<span class="comment-copy">that's not a valid way to define a python dict</span>
<span class="comment-copy">as indicated, dicts are hetrogenous, you'll have to check every item to be sure, e.g. <code>[(type(k),type(v)) for k,v in d.items()]</code></span>
<span class="comment-copy">That's not how you do duck typing to begin with. Python doesn't care if it's a specific type, it cares if it <b>acts</b> like a certain type.</span>
