<div class="post-text" itemprop="text">
<p>I am trying to solve this problem of finding the permutation of a given list using the code below. But, the list, <code>final</code> keeps appending the same thing again and again. It should return <code>[[1,2,3],[2,1,3],[2,3,1],[1,3,2],[3,1,2],[3,2,1]]</code> but instead it returns <code>[[1,2,3],[1,2,3], [1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3]]</code>. I have been trying to fix this for a while now and would really appreciate your help.</p>
<pre><code>class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        self.final = []
        l = 0 
        r = len(nums) -1 
        self.permutation(nums, l, r)
        return self.final

    def permutation(self, nums, l, r):
        if l == r:
            self.final.append(nums)
            # print(nums)
            print(self.final)
        else:
            for i in range(r+1):
                nums[l], nums[i] = nums[i], nums[l]
                self.permutation(nums, l+1, r)
                nums[l], nums[i] = nums[i], nums[l]

A = Solution()
A.permute(['1','2','3'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you change your list in-place instead of creating a new list every time. your final list contains references to the same list in the end.</p>
<p>a fix for that is to wrirte</p>
<pre><code>def permutation(self, nums, l, r):
    if l == r:
        self.final.append(nums.copy())
        # instead of self.final.append(nums)
</code></pre>
<p>note: <a href="https://docs.python.org/3/library/itertools.html?highlight=permutations#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations</code></a> would do that job for you.</p>
<p>this <a href="https://stackoverflow.com/questions/240178/list-of-lists-changes-reflected-across-sublists-unexpectedly">post</a> might help understand what is going on here.</p>
<p>and as mentioned in the comment: you still do not get all the permutations. this might work for you:</p>
<pre><code>def permutation(self, nums, k):
    r = [[]]
    for i in range(k):
        r = [[a] + b for a in nums for b in r if a not in b]
    self.final = r
</code></pre>
</div>
<span class="comment-copy">I assume you can't use itertools? <a href="https://stackoverflow.com/questions/8113684/python-itertools-permutations" title="python itertools permutations">stackoverflow.com/questions/8113684/â€¦</a></span>
<span class="comment-copy">you change your list in-place instead of creating a new list every time. your final list contains references to the same list in the end.</span>
<span class="comment-copy">That being said, the code still does not accomplish the desired task</span>
