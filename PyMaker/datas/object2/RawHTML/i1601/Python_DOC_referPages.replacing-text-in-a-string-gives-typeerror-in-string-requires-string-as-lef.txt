<div class="post-text" itemprop="text">
<p>I am trying to censor some words by replacing them, but it's giving the error: <code>TypeError: 'in &lt;string&gt;' requires string as left operand, not list</code>.</p>
<pre><code>def censor(text, blacklist):
    if blacklist in text:
       text= text.replace(blacklist, "*" * len(blacklist))
    return text

censor("this is annoying me", ["annoying"]) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you read the error carefully you see that Python is complaining that you are trying to check if a <code>list</code> is inside a <code>string</code>. You wrote <code>blacklist in text</code>, but since <code>blacklist</code> is a list, you cannot do that.</p>
<p>Instead, you should iterate over the words in your blacklist and check each word, like this:</p>
<pre><code>def censor(text, blacklist):
    for word in blacklist:
        if word in text:
           text = text.replace(word, "*" * len(word))
    return text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you only want to replace the exact matches, the <a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow noreferrer"><code>re</code></a> module can help:</p>
<pre><code>import re

def censor(text, blacklist):
    for veto in blacklist:
        text = re.sub(f'(\W){veto}(\W)', '\\1' + '*'*len(veto) + '\\2', text)
    return text

print(censor("this is annoying me annoyingly.", ["annoying"]))
# this is ******** me annoyingly.
</code></pre>
<p>not that the example makes any sense but you may not want <code>cat</code> in <code>concatenate</code> replaced in this example:</p>
<pre><code>print(censor("concatenating a cat and a dog", ["cat"]))
# concatenating a *** and a dog
</code></pre>
<p>the words in your blacklist are matched only if it is surrounded by <code>\W</code> (non-letter, non-number, not <code>_</code>). then i back-reference with <code>\\1</code> and <code>\\2</code> to add these characters again.</p>
</div>
<div class="post-text" itemprop="text">
<p>As per the error <code>TypeError: 'in &lt;string&gt;' requires string as left operand, not list</code> it clearly states that you must pass the argument in a string format and not in list format. </p>
<p>When you pass the list as an argument you must keep in mind that you need to iterate over each element of list and check that whether that element exists in your text string or not.</p>
<pre><code>def censor(text, blacklist):
    for w in blacklist:
        if w in text:
           text = text.replace(w, "*" * len(w))
    return text
</code></pre>
<p>Also note that as per your code you only just returned the new text but did not print so don't forget to do print if you are not doing in the python shell.</p>
<blockquote>
<p>print(censor("this is annoying me", ["annoying"]))</p>
</blockquote>
<p>If you do not want to pass list as an argument and want to check many words in text and replace it then you can also try for example-</p>
<pre><code>def censor(text,*blacklist):
    for b in blacklist:
        if b in text:
            text= text.replace(b, "*" * len(b))
    return text
print(censor("this is annoying me badly", "annoying","badly"))
</code></pre>
<p>Here * takes multiple arguments!</p>
<p>This will output as:</p>
<pre><code>this is ******** me *****
</code></pre>
</div>
<span class="comment-copy">what about <code>print( censor("this is humounguannoyingly me", ["annoying"]) )</code> - should it print <code>this is humoungu********ly me</code>   ? What about <code>'This is annoying!'</code> -if you split() by spaces it would maybe replace the ! as well? ... you should probably define the problem at hand a bit more.</span>
<span class="comment-copy">The error message says it all: you are passing <code>["annoying"]</code> as argument. This is a list. You should pass a string instead, i.e. <code>"annoying"</code>.</span>
<span class="comment-copy">nice one, will also replace wortparts ...</span>
