<div class="post-text" itemprop="text">
<pre><code>['2016-01-01 00:00:00', '0',
 '2016-01-01 08:00:00', '268705.0',
 '2016-01-01 16:00:00', '0',
 '2016-01-02 00:00:00', '0',
 '2016-01-02 08:00:00', '0.0',
 '2016-01-02 16:00:00', '0.0',
 '2016-01-03 00:00:00' ...
 ... etc for 1 year]
</code></pre>
<p>I basically have a date and energy production as a int after it. I want to make it so that it looks like</p>
<pre><code>['2016-01-01 00:00:00;0',
 '2016-01-01 08:00:00;268705.0',
 ... etc]
</code></pre>
<p>aka <code>['date;energy']</code></p>
<p>Any tips? I am new to this and need this to get through my course...</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip()</a> and list-slicing to zip every 2nd element starting at index 0 with every 2nd element starting at index 1:</p>
<pre><code>data = ['2016-01-01 00:00:00', '0',
        '2016-01-01 08:00:00', '268705.0',
        '2016-01-01 16:00:00', '0',
        '2016-01-02 00:00:00', '0',
        '2016-01-02 08:00:00', '0.0',
        '2016-01-02 16:00:00', '0.0',
        '2016-01-03 00:00:00', "18.05",]

new_data = list(zip(data[0::2],data[1::2]))

print(new_data)

combined = ["{};{}".format(a,b) for a,b in new_data]

print(combined)
</code></pre>
<p>Output:</p>
<pre><code># new_data (I would vouch to use that further on)
[('2016-01-01 00:00:00', '0'), ('2016-01-01 08:00:00', '268705.0'), 
 ('2016-01-01 16:00:00', '0'), ('2016-01-02 00:00:00', '0'), 
 ('2016-01-02 08:00:00', '0.0'), ('2016-01-02 16:00:00', '0.0'), 
 ('2016-01-03 00:00:00', '18.05')]

# combined
['2016-01-01 00:00:00;0', '2016-01-01 08:00:00;268705.0', '2016-01-01 16:00:00;0',
 '2016-01-02 00:00:00;0', '2016-01-02 08:00:00;0.0', '2016-01-02 16:00:00;0.0', 
 '2016-01-03 00:00:00;18.05']
</code></pre>
<hr/>
<p>If I were you I would not str-combine them , but work further using the tuples. F.e. if you want to summ up energies per day:</p>
<pre><code>new_data = sorted((zip(data[0::2],data[1::2])))

from itertools import groupby 

# x[0][0:10] uses the 1st element of each tuple (the datetime) and slices only the date
# from it. That is used to group all data.
k = groupby(new_data, lambda x:x[0][0:10])

summs = []
for date,tups in k:
    summs.append( (date,sum(float(x[1]) for x in tups)) )

print(summs)
</code></pre>
<p>Output:</p>
<pre><code>[('2016-01-01', 268705.0), ('2016-01-02', 0.0), ('2016-01-03', 18.05)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use a <code>zip</code> to generate a zipped list of your needed values and then use <code>join</code> to join the list with a <code>;</code></p>
<pre><code>&gt;&gt;&gt; a=['2016-01-01 00:00:00', '0', '2016-01-01 08:00:00', '268705.0', '2016-01-01 16:00:00', '0']
&gt;&gt;&gt; [';'.join(i) for i in zip(a[::2],a[1::2])]
['2016-01-01 00:00:00;0', '2016-01-01 08:00:00;268705.0', '2016-01-01 16:00:00;0']
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">just add the date to semicolon and then to the energy production.</span>
<span class="comment-copy">I think the answers to this question might help you: <a href="https://stackoverflow.com/questions/24443995/list-comprehension-joining-every-two-elements-together-in-a-list" title="list comprehension joining every two elements together in a list">stackoverflow.com/questions/24443995/â€¦</a></span>
<span class="comment-copy">Thanks, it worked fine.</span>
<span class="comment-copy">Now I have another issue. Now that I have this list of '2016-01-01 00:00:00;0' etc.. I need to use timedelta somehow to add all energy production of a certain date, for example to the form of 1.1.2016;combined energy of that day. and then 2.1.2016;combined energy of that day. etc.. so one day has three dates and three energy sums and they need to be combined for one day and one energy sum. and it needs to be in the form of d.m.year as i wrote.</span>
<span class="comment-copy">['01.01.2016;0', '01.01.2016;268705.0', '01.01.2016;0', '02.01.2016;0', '02.01.2016;0.0', '02.01.2016;0.0', '03.01.2016;0.0'] Okay now my list looks like this, I just now need it to be like 01.01.2016;sum of energy production of that day</span>
<span class="comment-copy">@anonymous33243433 this is alltogether a new problem and should be a new question. I added code to show you how to do it using the tuple approach. You can str-join the values yourself using the code above usign the grouped results. You need to sort the date-tuples, hence I changed <code>list</code> to <code>sorted</code> so <code>groupby</code> works.</span>
<span class="comment-copy">and one more thing the date has to actually look like 1.1.2016 --- 2.1.2016 etc.. not 01.01.2016 gahhhh more things to do</span>
