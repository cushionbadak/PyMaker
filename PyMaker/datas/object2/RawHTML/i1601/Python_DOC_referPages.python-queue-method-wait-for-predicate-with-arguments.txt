<div class="post-text" itemprop="text">
<p>I'm trying to utilize the <code>wait_for</code> method of the queue module. I have a callable for the predicate, and it works if I don't pass any arguments, however the callable requires an <code>int</code> argument. </p>
<p>WORKS:</p>
<pre><code>self.cv.wait_for(fn, timeout=5.0)
</code></pre>
<p>FAILS:</p>
<pre><code>self.cv.wait_for(fn(1), timeout5.0)
</code></pre>
<p>This generates the error "bool is not callable".</p>
<p>I've tried the following:</p>
<pre><code>self.cv.wait_for((fn(1)) , timeout=5.0)
</code></pre>
<p>Result: bool is not callable</p>
<pre><code>self.cv.wait_for((fn, 1), timeout=5.0)
</code></pre>
<p>Result: tuple object is not callable</p>
<pre><code>self.cv.wait_for((fn, 1)(), timeout=5.0)
</code></pre>
<p>Result: tuple object is not callable</p>
<pre><code>self.cv.wait_for((fn(), 1), timeout=5.0)
</code></pre>
<p>Result:  fn missing 1 required positional argument: 'int'</p>
<p>fn is a simple function just for testing.</p>
<p><code>fn</code>:</p>
<pre><code>def fn(int):
  if int:
   return True
  else:
   return False
</code></pre>
<p>Any guidance is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/threading.html#threading.Condition.wait_for" rel="nofollow noreferrer"><code>Condition.wait_for</code></a> accepts a predicate that is a callable that accepts no arguments. The return value of the predicate can be anything since all objects have a boolean interpretation.</p>
<p><code>self.test</code> is a callable that accepts one argument, so it is not a suitable predicate. <code>self.test(1)</code> is the object that is the <em>result</em> of calling the method, which is a <code>bool</code>, not a callable.</p>
<p>Your approach with the <code>lambda</code> is the simplest and easiest in this case:</p>
<pre><code>self.cv.wait_for(lambda: self.test(1), timeout=5.0)
</code></pre>
<p>If your function is complex enough, you can have it return the predicate callable with appropriate refactoring, instead of wrapping it in a lambda. For example:</p>
<pre><code>def fn(i):
    def preficate():
        return bool(i)
    return predicate

...

self.cv.wait_for(fn(1), timeout=5.0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was able to solve it by using a lambda:</p>
<pre><code>self.cv.wait_for( lambda: self.test(1), timeout=5.0)
</code></pre>
<p>But I'm curious as to if there are other ways?</p>
</div>
<span class="comment-copy">Thank you, it's greatly appreciated. This raises another question, which I've asked here: <a href="https://stackoverflow.com/questions/53356567/python-queue-threading-waiting-for-queue-to-be-of-specific-size">link</a> if you're willing.</span>
<span class="comment-copy">@user2442072 Glad that helped. An upvote would be nice. I'll be happy to see the link. Good on you for asking another question instead of asking for scope creep.</span>
