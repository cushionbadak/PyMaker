<div class="post-text" itemprop="text">
<p>Hello I've been set a project where I have to generate 10,000 random coordinates (x,y), using the random module in python and then output them all. The coordinates HAVE to be decimal numbers between 0 and 2. I've had a look around on the internet but I can't seem to find anything that is helping me. Can anyone on here help me? Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/random.html#real-valued-distributions" rel="nofollow noreferrer">random</a> module within a list comprehension to generate a list of random coordinate tuples:</p>
<pre><code>import random

coords = [(random.random()*2.0, random.random()*2.0) for _ in range(10000)]
</code></pre>
<p>This will give you 10,000 tuples (x, y), where x and y are random floating point numbers greater than or equal to 0 and less than 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>Or use numpy:</p>
<pre><code>import numpy as np

coords = np.random.rand(10000, 2) * 2
</code></pre>
</div>
<span class="comment-copy">Have you tried the random module?</span>
<span class="comment-copy">I have tried but I can only do basic things in python. I'm currently studying computer science at A level (first year) and I'm just trying to get my head around it.</span>
<span class="comment-copy">google the documentation for the random module and take it from there</span>
<span class="comment-copy">the concept Im most struggling with is just generating coordinates in python overall. Will the documentation for the random module provide me support on this?</span>
<span class="comment-copy">wow thank you so much Fred! That actually worked! That's amazing thank you :)</span>
<span class="comment-copy">This is probably more performant than using <code>random</code>.</span>
<span class="comment-copy">@gil.fernandes: Quite a lot faster, <a href="https://ideone.com/ZJB1vt" rel="nofollow noreferrer">it turns out</a>.</span>
<span class="comment-copy">Also having the output as a numpy array is better for further processing than having a list of tuples.</span>
