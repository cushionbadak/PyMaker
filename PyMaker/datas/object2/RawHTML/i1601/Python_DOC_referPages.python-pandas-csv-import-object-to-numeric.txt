<div class="post-text" itemprop="text">
<p>I'm trying to import a csv-file with the following content in each line.</p>
<pre><code>0;0;0;1;239.57558842082713;0.3690280072634046;[239.6369763080322, 239.5252233951102, 240.21580279356058, 239.86250730788123]

df = pd.read_csv('dataset', sep=';');
</code></pre>
<p>In the end df.dtypes shows that it is an object, but I want to get the values that I can make for example a line plot.</p>
<p>I tried to convert the object to a string, to remove the '[', ']' and than cast
it to numeric, but I was not successful.</p>
<p>Any hints?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can read the "list" series as a string, use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a>, then construct a dataframe and join onto your original dataframe. The resultant series will all have numeric dtypes.</p>
<p>Here's an example:</p>
<pre><code>from io import StringIO
from ast import literal_eval

x = StringIO("""0;0;0;1;239.57558842082713;0.3690280072634046;[239.6369763080322, 239.5252233951102, 240.21580279356058, 239.86250730788123]
0;0;0;1;239.57558842082713;0.3690280072634046;[239.6369763080322, 239.5252233951102, 240.21580279356058, 239.86250730788123]""")

df = pd.read_csv(x, header=None, sep=';')

list_cols = pd.DataFrame(df.pop(6).apply(literal_eval).values.tolist()).add_suffix('_L')

df = df.join(list_cols)

print(df)

   0  1  2  3           4         5         0_L         1_L         2_L  \
0  0  0  0  1  239.575588  0.369028  239.636976  239.525223  240.215803   
1  0  0  0  1  239.575588  0.369028  239.636976  239.525223  240.215803   

          3_L  
0  239.862507  
1  239.862507  
</code></pre>
</div>
<span class="comment-copy">The column is an <code>object</code> type, because a list is an object in python. How do you want to handle the values in the list? Do you want them to be <a href="https://stackoverflow.com/questions/35491274/pandas-split-column-of-lists-into-multiple-columns">separate columns</a>, or to remain inside a list in one column?</span>
<span class="comment-copy">Hi, this goes into the desired direction, but my way is still too complicate. I want to make line graphs containing the 4 values as y-coordinates, ` list_cols = pd.DataFrame(df.pop(6).apply(literal_eval).values.tolist()).add_suffix('_pixL') df = df.join(list_cols) plt.plot([df['0_pixL'],df['1_pixL'],df['2_pixL'],df['3_pixL']]) `</span>
<span class="comment-copy">It seems I've solved your problem: <code>I tried to convert the object to a string, to remove the '[', ']' and than cast it to numeric, but I was not successful.</code> If you have a new question, feel free to <a href="https://stackoverflow.com/questions/ask">ask a new question</a>.</span>
