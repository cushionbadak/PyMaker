<div class="post-text" itemprop="text">
<p>In python 2.x SORT worked well when I passed a function.
Switched to python 3.x .. sort has changed, but I did not understand how I have to modify the code to make it work also in python 3.
If I do not pass a function, everything works, but when I pass a function, I get the error: TypeError: must use keyword argument for key function</p>
<p>How should I change ....</p>
<pre><code>A = [8, 89]
A = [str(c) for c in A]
def my_cmp(a,b):
    return cmp(int(b+a), int(a+b))
A.sort(my_cmp)
print(A)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p><a href="https://docs.python.org/2.7/library/functions.html#cmp" rel="nofollow noreferrer">cmp</a> is not a valid built-in function in Python 3 anymore, but you can emulate it.  </p></li>
<li><p><a href="https://docs.python.org/3.7/library/stdtypes.html?highlight=sort#list.sort" rel="nofollow noreferrer">sort</a> works differently in Python 3, but you can use <a href="https://docs.python.org/3/library/functools.html#functools.cmp_to_key" rel="nofollow noreferrer">cmp_to_key</a> to translate old Python 2 style sorts. You have to import <a href="https://docs.python.org/3/library/functools.html#module-functools" rel="nofollow noreferrer">functools</a> to use <code>cmp_to_key</code>.</p></li>
</ol>
<blockquote>
<p>The functools.cmp_to_key() utility is available to convert a 2.x style cmp function to a key function.</p>
</blockquote>
<ol start="3">
<li>You have to use <code>key</code> keyword argument in Python 3 sort method</li>
</ol>
<p>Here's an example implementation:</p>
<pre><code>from functools import cmp_to_key   # required for cmp_to_key

def cmp(v1, v2):                   # emulate cmp from Python 2
    if (v1 &lt; v2):
        return -1
    elif (v1 == v2):
        return 0
    elif (v1 &gt; v2):
        return 1

A = [8, 89]
A = [str(c) for c in A]

def my_cmp(a, b):
    return cmp(int(b + a), int(a + b))

A.sort(key = cmp_to_key(my_cmp))   # use cmp_to_key to emulate Python 2 behavior
print(A)  
</code></pre>
<p>Output is exactly the same as Python 2 output:</p>
<pre><code>['89', '8']
</code></pre>
</div>
<span class="comment-copy">You should use <code>key=my_cmp</code> and <code>my_cmp</code> expects one argument, but what is <code>cmp</code>? Please provide a <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a>.</span>
<span class="comment-copy">cmp is not a valid function in Python 3. It was, in Python 2, but not anymore</span>
<span class="comment-copy">I think his cmp returns string that is higher when converted to int(first + second), but he uses two arguments instead of one as you mention.</span>
<span class="comment-copy">@Austin seems like a Minimal, complete, verifiable example to me, what is the problem?</span>
<span class="comment-copy">thank you, it works !!!!!</span>
