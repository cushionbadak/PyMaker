<div class="post-text" itemprop="text">
<p>Using Windows</p>
<p>Learning about <code>virtualenv</code>. Here is my understanding of it and a few question that I have. Please correct me if my understanding is incorrect. </p>
<p><code>virtualenv</code> are environments where your pip dependencies and its selected version are stored for a particular project. A folder is made for your project and inside there are the dependencies. </p>
<ol>
<li><p>I was told you would not want to save your .py scripts in side of virtual ENV, if that's the case how do I access the virtual env when I want to run that project? Open it up in the command line under <code>source ENV/bin/activate</code> then <code>cd</code> my way to where my script is stored?</p></li>
<li><p>By running <code>pip freeze</code> that creates a requirements.txt file in that project folder that is just a txt. copy of the dependencies of that virtual env? </p></li>
<li><p>If I'm in a second virutalenv who do I import another virtualenv's requirements? I've been to the documentation but I still don't get it.</p>
<p>$ env1/bin/pip freeze &gt; requirements.txt</p>
<p>$ env2/bin/pip install -r requirements.txt</p></li>
</ol>
<p>Guess I'm confused on the "requirements" description. Isn't best practice to always call our requirements, requirements.txt? If that's the case how does <code>env2</code> know I'm want <code>env1</code> requirements? </p>
<p>Thank you for any info or suggestions. Really appreciate the assistance.</p>
<p>I created a <code>virtualenv  C:\Users\admin\Documents\Enviorments&gt;virtualenv django_1</code> 
Using base prefix<code>'c:\\users\\admin\\appdata\\local\\programs\\python\\python37-32'</code> 
New python executable in <code>C:\Users\admin\Documents\Enviorments\django_1\Scripts\python.exe Installing setuptools, pip, wheel...done.</code></p>
<p>How do I activate it? <code>source django_1/bin/activate</code> doesn't work?</p>
<p>I've tried: <code>source C:\Users\admin\Documents\Enviorments\django_1/bin/activate</code> <strong>Every time I get : 'source' is not recognized as an internal or external command, operable program or batch file.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>* disclaimer * I mainly use conda environments instead of virtualenv, but I believe that most of this is the same across both of them and is true to your case.</p>
<ol>
<li><p>You should be able to access your scripts from any environment you are in. If you have virtenvA and virtenvB then you can access your script from <strong>inside either of your environments</strong>. All you would do is activate one of them and then run <code>python /path/to/my/script.py</code>, but you need to make sure any dependent libraries are installed. </p></li>
<li><p>Correct, but for clarity the requirements file contains a list of the dependencies by name only. It doesn't contain any actual code or packages. You can print out a requirements file but it should just be a list which  says package names and their version numbers. Like <code>pandas 1.0.1    numpy 1.0.1   scipy 1.0.1</code> etc.</p></li>
<li><p>In the lines of code you have here you would export the dependencies list of <code>env1</code> and then you would install these dependencies in <code>env2</code>. If <code>env2</code> was empty then it will now just be a copy of <code>env1</code>, otherwise it will be the same but with all the packages of <code>env1</code> added and if it had a different version number of some of the same packages then this would be overwritten</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>virtualenv simply creates a new Python environment for your project. Think of it as another copy of Python that you have in your system. Virutual environment is helpful for development, especially if you will need different versions of the same libraries.</p>
<p>Answer to your first question is, yes, for each project that you use virtualenv, you need to activate it first. After activating, when you run python script, not just your project's scripts, but any python script, will use dependencies and configuration of the active Python environment.</p>
<p>Answer to the second question, <code>pip freeze &gt; requirements.txt</code> will create requirements file in active folder, not in your project folder. So, let's say in your cmd/terminal you are in <code>C:\Desktop</code>, then the requirements file will be created there. If you're in <code>C\Desktop\myproject</code> folder, the file will be created there. Requirements file will contain the packages installed on active virtualenv.</p>
<p>Answer to 3rd question is related to second. Simply, you need to write full path of the second requirements file. So if you are in first project and want to install packages from second virtualenv, you run it like <code>env2/bin/pip install -r /path/to/my/first/requirements.txt</code>. If in your terminal you are in active folder that does not have requirements.txt file, then running <code>pip install</code> will give you an error. So, running the command does not know which requirements file you want to use, you specify it. </p>
<p>I created a virtualenv 
<code>C:\Users\admin\Documents\Enviorments&gt;virtualenv django_1 Using base prefix 'c:\\users\\admin\\appdata\\local\\programs\\python\\python37-32' New python executable in C:\Users\admin\Documents\Enviorments\django_1\Scripts\python.exe Installing setuptools, pip, wheel...done.</code> </p>
<p>How do I activate it? <code>source django_1/bin/activate</code> doesn't work? </p>
<p>I've tried: <code>source C:\Users\admin\Documents\Enviorments\django_1/bin/activate</code> Every time I get : <strong>'source' is not recognized as an internal or external command, operable program or batch file.</strong></p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>Yes, saving virtualenv separately from your project files is one of concepts. <a href="https://virtualenvwrapper.readthedocs.io/en/latest/" rel="nofollow noreferrer">virtualenvwrapper</a> and <a href="https://github.com/pypa/pipenv" rel="nofollow noreferrer">pipenv</a> works like that. But personally if I use <code>virtualenv</code> in the simplest form, then I just create the directory with the same name inside virtualenv's directory (next to <code>bin/</code>) and I keep project files there.</p></li>
<li><p><code>pip freeze</code> prints to console the packages (and it's versions) you've installed inside your <code>virtualenv</code> using pip. If you want to save those requirements to file you should do something like <code>pip freeze &gt; requirements.txt</code></p></li>
<li><p>There are few posibilites:</p>
<ul>
<li>you can activate one virtualenv, then go (<code>cd /path/to/venv2</code>) to another virtualenv.</li>
<li>you can copy your <code>requirements.txt</code> file from one virtualenv and install those requirements in your second virtualenv</li>
</ul></li>
</ol>
</div>
<span class="comment-copy">Note: <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer"><code>venv</code> is built into the standard library</a>, so you wouldn't need a separate package of <code>virtualenv</code></span>
<span class="comment-copy">I really appreciate the help. Thank you</span>
<span class="comment-copy">I created a virtualenv    C:\Users\admin\Documents\Enviorments&gt;virtualenv django_1 Using base prefix 'c:\\users\\admin\\appdata\\local\\programs\\python\\python37-32' New python executable in C:\Users\admin\Documents\Enviorments\django_1\Scripts\python.exe Installing setuptools, pip, wheel...done.   How do I activate it? source django_1/bin/activate doesn't work?  I've tried:  source C:\Users\admin\Documents\Enviorments\django_1/bin/activate  Every time I get :  'source' is not recognized as an internal or external command, operable program or batch file.</span>
