<div class="post-text" itemprop="text">
<p>I just learned how to create list comprehensions and I was looking back through my past projects to see where I can create comprehensions. I was successful with several, but then I got to this part of the code and I was wondering if there was any way to create a list comprehension from this:</p>
<pre><code>scores = util.Counter()

for l in self.legalLabels:
    scores[l] = self.weights[l] * trainingData[i]
</code></pre>
<p>Maybe I'm just thinking a bit too hard for this but I was wondering if there was any way to create a comprehension using this?</p>
<p>I was thinking something like:</p>
<pre><code>[(scores(l) = self.weights[l] * trainingData[I]) for l in self.legalLabels]
</code></pre>
<p>but this does not work in terms of attributing each value to scores[l].</p>
<p>Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>util.Counter()</code> is a dictionary like <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>, you can update it with a dictionary via its <code>update</code> method. So you can use:</p>
<pre><code>scores = util.Counter()
scores.update({L: self.weights[L] * trainingData[i] for L in self.legalLabels})
</code></pre>
<p>Then for some label <code>x</code>, you can access the result via <code>scores[x]</code>.</p>
<p>List comprehension are for lists, dictionary comprehensions for dictionaries. The latter are <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">mentioned in the  docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: I didn't pay attention to <code>scores = utils.Counter()</code>, so I provided an answer which is <code>list</code> comprehension. See @jpp's answer for correct approach.</p>
<p>Your approach is right, but there is no assignment within comprehension. You must make one outside of it</p>
<pre><code>scores = [self.weights[l] * trainingData[I]) for l in self.legalLabels]
</code></pre>
</div>
<span class="comment-copy">What's <code>util.Counter()</code>, is it a custom object, a dictionary (like <code>collections.Counter</code>), or something else?</span>
<span class="comment-copy">@jpp It's a dictionary similar to collections.Counter</span>
<span class="comment-copy"><i>It's a dictionary</i> So <code>scores</code> isn't a list at all.  Making it into one is certainly an error.</span>
<span class="comment-copy">Oh okay that makes a lot of sense. How would I be able to attribute each of those to scores[i]? Because I want to do <code>[self.weights[l] * trainingData[I]) for l in self.legalLabels]</code> for each value in the scores list...</span>
<span class="comment-copy">Can you provide more detail? I don't really understand your question. You want <code>scores[l] = self.weights[l] * trainingData[I]</code>with every <code>l</code>, is that right?</span>
<span class="comment-copy">Hey, yes that's correct. Let me know if you need more</span>
<span class="comment-copy">This is exactly what my answer do. But, since I didn't pay attention to your <code>scores=util.Counter()</code>, means scores is a dictionary, my answer won't work (it's a <code>list</code> comprehension). See @jpp 's answer below</span>
