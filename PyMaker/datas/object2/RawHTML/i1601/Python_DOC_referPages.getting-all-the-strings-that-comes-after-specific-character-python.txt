<div class="post-text" itemprop="text">
<p>Getting strings that comes after a character which is '$' and store them as lowercase strings in a list.
For example:</p>
<pre><code>string = "apple $is a $tasty fruiit and $CHEAP"
['is', 'tasty', 'cheap']
</code></pre>
<p>I tried</p>
<pre><code>string.lower()
lst  = []
lst.append(string.lower().split("$",1)[1:])
return lst
</code></pre>
<p><strong>EDIT</strong>
It also should end before a number or special character like
string = "apple $is a $tasty fruit and $CHEAP#chs"
['is', 'tasty', 'cheap']
where it shouldn't be cheap#chs
Can someone help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a regex:</p>
<pre><code>import re

s = "apple $is a $tasty fruiit and $CHEAP"

re.findall(r'(?&lt;=\$)(.+?)\b', s.lower()))
</code></pre>
<p>Yields:</p>
<pre><code>['is', 'tasty', 'cheap']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>s1='apple $is a $tasty fruiit and $CHEAP'
lst=s1.split()
sample=[]
for i in lst:
    if '$' in i:
        sample.append(i[1:].lower())
print(sample)
</code></pre>
<p>This one gives op as <code>['is', 'tasty', 'cheap']</code>. Regex is simple though.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.lower" rel="nofollow noreferrer"><code>string.lower()</code></a> returns a new lowercase string and doesn't do anything to the original. One possible way to do this is to split your string by spaces, and check if a word <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code></a> "$":</p>
<pre><code>string = "apple $is a $tasty fruiit and $CHEAP"
result = [s[1:] for s in string.lower().split() if s.startswith('$')]

print(result)
# ['is', 'tatsy', 'cheap']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use The <a href="https://www.tutorialspoint.com/python/string_count.htm" rel="nofollow noreferrer">count()</a> method, as follows:</p>
<pre><code>starting_point = 0
Lst = []
for _ in range(string.count('$')):
    starting_point += string[starting_point+1:].index('$')+1
    Lst.append(string[starting_point:].split()[0].split('$')[1].lower())
</code></pre>
<p>and the output would be:</p>
<pre><code>['is', 'tasty', 'cheap']
</code></pre>
</div>
<span class="comment-copy">regex would give one possible solution</span>
