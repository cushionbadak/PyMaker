<div class="post-text" itemprop="text">
<p>For the input <code>3 30 34 5 9</code>, the expected largest number output is: <code>9534330</code></p>
<p>Any inputs why the sorted is returning the same result as input: <code>3303459</code>?</p>
<pre><code>import functools

def compare(item1, item2):
    return int(item1 + item2) - int(item2 + item1)

inputList = input().split()
sorted(inputList, key=functools.cmp_to_key(compare))
max = "".join([ x for x in inputList])
print(max)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason is either because you are sorting the list in the wrong order and you did not use the sorted list. Currently, you are sorting the list in an ascending order by the first digit. In addition to that, <code>sorted()</code> function returns a new list, so you need to save that in a variable.</p>
<p>You can fix that by either using the <code>reverse()</code> on the sorted list</p>
<pre><code>import functools

def compare(item1, item2):
    return int(item1 + item2) - int(item2 + item1)

inputList = input().split()
inputList = sorted(inputList, key=functools.cmp_to_key(compare))
inputList.reverse()
max = "".join([ x for x in inputList])
print(max)
</code></pre>
<p>Or switch operation in the <code>compare()</code> function</p>
<pre><code>import functools

def compare(item1, item2):
    return int(item2 + item1) - int(item1 + item2)

inputList = input().split()
inputList = sorted(inputList, key=functools.cmp_to_key(compare))
max = "".join([ x for x in inputList])
print(max)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For exhaustiveness, you can also set the order argument in the sorted() function:
    import functools</p>
<pre><code>def compare(item1, item2):
    return int(item1 + item2) - int(item2 + item1)

input_list = input().split(",")
custom_sorted_list = sorted(input_list, key=functools.cmp_to_key(compare), reverse=True)
max = "".join([ x for x in custom_sorted_list])
print(max)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <strong>sorted</strong> function returns the list in ascending order.</p>
<p>But, as you only want the largest number, it is even easier:</p>
<pre><code>import itertools

input_list = [3, 30, 34, 5, 9]

answer = max(map("".join, itertools.permutations(map(str, input_list))))

print(answer)
</code></pre>
</div>
<span class="comment-copy">Because <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> returns a new list.</span>
