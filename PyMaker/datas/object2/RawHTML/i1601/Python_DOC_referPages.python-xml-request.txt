<div class="post-text" itemprop="text">
<p>I am new in python and try to request a website for public transport information which I then want to show on a small display of my raspberry-pi.</p>
<pre><code>import request

xml = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Trias version="1.1" xmlns="http://www.vdv.de/trias" xmlns:siri="http://www.siri.org.uk/siri" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
    &lt;ServiceRequest&gt;
        &lt;siri:RequestTimestamp&gt;2016-06-27T13:34:00&lt;/siri:RequestTimestamp&gt;
        &lt;siri:RequestorRef&gt;EPSa&lt;/siri:RequestorRef&gt;
        &lt;RequestPayload&gt;
            &lt;StopEventRequest&gt;
                &lt;Location&gt;
                    &lt;LocationRef&gt;
                        &lt;StopPointRef&gt;8578169&lt;/StopPointRef&gt;
                    &lt;/LocationRef&gt;
                &lt;/Location&gt;
                &lt;Params&gt;
                    &lt;NumberOfResults&gt;5&lt;/NumberOfResults&gt;
                    &lt;StopEventType&gt;departure&lt;/StopEventType&gt;
                    &lt;IncludePreviousCalls&gt;false&lt;/IncludePreviousCalls&gt;
                    &lt;IncludeOnwardCalls&gt;false&lt;/IncludeOnwardCalls&gt;
                    &lt;IncludeRealtimeData&gt;true&lt;/IncludeRealtimeData&gt;
                &lt;/Params&gt;
            &lt;/StopEventRequest&gt;
        &lt;/RequestPayload&gt;
    &lt;/ServiceRequest&gt;
&lt;/Trias&gt;"""

headers = {'Authorization': *'#MYCODE'*, 'Content-Type': 'application/xml'}

answer = requests.post('https://api.opentransportdata.swiss/trias', data=xml, headers=headers)
</code></pre>
<p>What the answer will be:</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Trias xmlns="http://www.vdv.de/trias" version="1.1"&gt;
&lt;ServiceDelivery&gt;
    &lt;ResponseTimestamp xmlns="http://www.siri.org.uk/siri"&gt;2018-11-19T14:17:42Z&lt;/ResponseTimestamp&gt;
    &lt;ProducerRef xmlns="http://www.siri.org.uk/siri"&gt;EFAController10.2.9.62-WIN-G0NJHFUK71P&lt;/ProducerRef&gt;
    &lt;Status xmlns="http://www.siri.org.uk/siri"&gt;true&lt;/Status&gt;
    &lt;MoreData&gt;false&lt;/MoreData&gt;
    &lt;Language&gt;de&lt;/Language&gt;
    &lt;DeliveryPayload&gt;
        &lt;StopEventResponse&gt;
            &lt;StopEventResult&gt;
                &lt;ResultId&gt;ID-8E6262DF-2FB8-4591-97A3-AC3E94E56635&lt;/ResultId&gt;
                &lt;StopEvent&gt;
                    &lt;ThisCall&gt;
                        &lt;CallAtStop&gt;
                            &lt;StopPointRef&gt;8578169&lt;/StopPointRef&gt;
                            &lt;StopPointName&gt;
                                &lt;Text&gt;Basel, Thomaskirche&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/StopPointName&gt;
                            &lt;ServiceDeparture&gt;
                                &lt;TimetabledTime&gt;2018-11-19T14:16:00Z&lt;/TimetabledTime&gt;
                                &lt;EstimatedTime&gt;2018-11-19T14:17:00Z&lt;/EstimatedTime&gt;
                            &lt;/ServiceDeparture&gt;
                            &lt;StopSeqNumber&gt;31&lt;/StopSeqNumber&gt;
                        &lt;/CallAtStop&gt;
                    &lt;/ThisCall&gt;
                    &lt;Service&gt;
                        &lt;OperatingDayRef&gt;2018-11-19&lt;/OperatingDayRef&gt;
                        &lt;JourneyRef&gt;odp:05036::H:j18:36143:36143&lt;/JourneyRef&gt;
                        &lt;LineRef&gt;odp:05036::H&lt;/LineRef&gt;
                        &lt;DirectionRef&gt;outward&lt;/DirectionRef&gt;
                        &lt;Mode&gt;
                            &lt;PtMode&gt;bus&lt;/PtMode&gt;
                            &lt;BusSubmode&gt;regionalBus&lt;/BusSubmode&gt;
                            &lt;Name&gt;
                                &lt;Text&gt;Bus&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/Name&gt;
                        &lt;/Mode&gt;
                        &lt;PublishedLineName&gt;
                            &lt;Text&gt;36&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/PublishedLineName&gt;
                        &lt;OperatorRef&gt;odp:823&lt;/OperatorRef&gt;
                        &lt;OriginStopPointRef&gt;8589334&lt;/OriginStopPointRef&gt;
                        &lt;OriginText&gt;
                            &lt;Text&gt;Basel, Kleinhüningen&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/OriginText&gt;
                        &lt;DestinationStopPointRef&gt;8588780&lt;/DestinationStopPointRef&gt;
                        &lt;DestinationText&gt;
                            &lt;Text&gt;Basel, Schifflände&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/DestinationText&gt;
                    &lt;/Service&gt;
                &lt;/StopEvent&gt;
            &lt;/StopEventResult&gt;
        &lt;/StopEventResponse&gt;
    &lt;/DeliveryPayload&gt;
&lt;/ServiceDelivery&gt;
</code></pre>
<p></p>
<p>How can I now continue to get some information out of it? (Interested in TimetabledTime and EstimatedTime)</p>
<p>I tried to use the ElementTree but it did not really work.</p>
<p>Thanks in advance!</p>
<p>Website of the data provider: <a href="https://opentransportdata.swiss/en/cookbook/departurearrival-display/" rel="nofollow noreferrer">https://opentransportdata.swiss/en/cookbook/departurearrival-display/</a></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I tried to use the ElementTree but it did not really work.</p>
</blockquote>
<p>As <em>mzjn</em> said, you should provide us more information about the difficulties you encountered.</p>
<p>Anyway, if you want to parse the xml I suggest using a third party library to ease your work. In my example I used <a href="https://www.crummy.com/software/BeautifulSoup/" rel="nofollow noreferrer">BeautifulSoup</a>:</p>
<pre class="lang-python prettyprint-override"><code>from bs4 import BeautifulSoup
from datetime import datetime

test_answer = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Trias xmlns="http://www.vdv.de/trias" version="1.1"&gt;
&lt;ServiceDelivery&gt;
    &lt;ResponseTimestamp xmlns="http://www.siri.org.uk/siri"&gt;2018-11-19T14:17:42Z&lt;/ResponseTimestamp&gt;
    &lt;ProducerRef xmlns="http://www.siri.org.uk/siri"&gt;EFAController10.2.9.62-WIN-G0NJHFUK71P&lt;/ProducerRef&gt;
    &lt;Status xmlns="http://www.siri.org.uk/siri"&gt;true&lt;/Status&gt;
    &lt;MoreData&gt;false&lt;/MoreData&gt;
    &lt;Language&gt;de&lt;/Language&gt;
    &lt;DeliveryPayload&gt;
        &lt;StopEventResponse&gt;
            &lt;StopEventResult&gt;
                &lt;ResultId&gt;ID-8E6262DF-2FB8-4591-97A3-AC3E94E56635&lt;/ResultId&gt;
                &lt;StopEvent&gt;
                    &lt;ThisCall&gt;
                        &lt;CallAtStop&gt;
                            &lt;StopPointRef&gt;8578169&lt;/StopPointRef&gt;
                            &lt;StopPointName&gt;
                                &lt;Text&gt;Basel, Thomaskirche&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/StopPointName&gt;
                            &lt;ServiceDeparture&gt;
                                &lt;TimetabledTime&gt;2018-11-19T14:16:00Z&lt;/TimetabledTime&gt;
                                &lt;EstimatedTime&gt;2018-11-19T14:17:00Z&lt;/EstimatedTime&gt;
                            &lt;/ServiceDeparture&gt;
                            &lt;StopSeqNumber&gt;31&lt;/StopSeqNumber&gt;
                        &lt;/CallAtStop&gt;
                    &lt;/ThisCall&gt;
                    &lt;Service&gt;
                        &lt;OperatingDayRef&gt;2018-11-19&lt;/OperatingDayRef&gt;
                        &lt;JourneyRef&gt;odp:05036::H:j18:36143:36143&lt;/JourneyRef&gt;
                        &lt;LineRef&gt;odp:05036::H&lt;/LineRef&gt;
                        &lt;DirectionRef&gt;outward&lt;/DirectionRef&gt;
                        &lt;Mode&gt;
                            &lt;PtMode&gt;bus&lt;/PtMode&gt;
                            &lt;BusSubmode&gt;regionalBus&lt;/BusSubmode&gt;
                            &lt;Name&gt;
                                &lt;Text&gt;Bus&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/Name&gt;
                        &lt;/Mode&gt;
                        &lt;PublishedLineName&gt;
                            &lt;Text&gt;36&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/PublishedLineName&gt;
                        &lt;OperatorRef&gt;odp:823&lt;/OperatorRef&gt;
                        &lt;OriginStopPointRef&gt;8589334&lt;/OriginStopPointRef&gt;
                        &lt;OriginText&gt;
                            &lt;Text&gt;Basel, Kleinhüningen&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/OriginText&gt;
                        &lt;DestinationStopPointRef&gt;8588780&lt;/DestinationStopPointRef&gt;
                        &lt;DestinationText&gt;
                            &lt;Text&gt;Basel, Schifflände&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/DestinationText&gt;
                    &lt;/Service&gt;
                &lt;/StopEvent&gt;
            &lt;/StopEventResult&gt;
        &lt;/StopEventResponse&gt;
    &lt;/DeliveryPayload&gt;
&lt;/ServiceDelivery&gt;
&lt;/Trias&gt;"""

soup = BeautifulSoup(test_answer, "html.parser")
service_departure = soup.find("servicedeparture")

# as Tag objects
timetabled_time = service_departure.timetabledtime
estimated_time = service_departure.estimatedtime

# as strings
timetabled_time = timetabled_time.text
estimated_time = estimated_time.text

# as datetime objects
date_format = "%Y-%m-%dT%H:%M:%SZ"
timetabled_time = datetime.strptime(timetabled_time, date_format)
estimated_time = datetime.strptime(estimated_time, date_format)

print("Timetabled time: {} at {}".format(timetabled_time.date(), timetabled_time.time()))
print("Estimated time: {} at {}".format(estimated_time.date(), estimated_time.time()))
</code></pre>
<p>This prints:</p>
<pre class="lang-none prettyprint-override"><code>Timetabled time: 2018-11-19 at 14:16:00
Estimated time: 2018-11-19 at 14:17:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I tried to use the ElementTree but it did not really work.</p>
</blockquote>
<p>I think @mzjn was probably right when they mentioned: <strong><em>Note that XML namespaces are used.</em></strong></p>
<p>Just in case that's what the issue was, here's an example of using ElementTree to parse the XML while properly handling the default namespace.</p>
<p>I used the answer from @AndreaCattaneo as a base. It produces the exact same output.</p>
<p><strong>Python</strong></p>
<pre class="lang-py prettyprint-override"><code>import xml.etree.ElementTree as ET
from datetime import datetime

test_answer = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Trias xmlns="http://www.vdv.de/trias" version="1.1"&gt;
&lt;ServiceDelivery&gt;
    &lt;ResponseTimestamp xmlns="http://www.siri.org.uk/siri"&gt;2018-11-19T14:17:42Z&lt;/ResponseTimestamp&gt;
    &lt;ProducerRef xmlns="http://www.siri.org.uk/siri"&gt;EFAController10.2.9.62-WIN-G0NJHFUK71P&lt;/ProducerRef&gt;
    &lt;Status xmlns="http://www.siri.org.uk/siri"&gt;true&lt;/Status&gt;
    &lt;MoreData&gt;false&lt;/MoreData&gt;
    &lt;Language&gt;de&lt;/Language&gt;
    &lt;DeliveryPayload&gt;
        &lt;StopEventResponse&gt;
            &lt;StopEventResult&gt;
                &lt;ResultId&gt;ID-8E6262DF-2FB8-4591-97A3-AC3E94E56635&lt;/ResultId&gt;
                &lt;StopEvent&gt;
                    &lt;ThisCall&gt;
                        &lt;CallAtStop&gt;
                            &lt;StopPointRef&gt;8578169&lt;/StopPointRef&gt;
                            &lt;StopPointName&gt;
                                &lt;Text&gt;Basel, Thomaskirche&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/StopPointName&gt;
                            &lt;ServiceDeparture&gt;
                                &lt;TimetabledTime&gt;2018-11-19T14:16:00Z&lt;/TimetabledTime&gt;
                                &lt;EstimatedTime&gt;2018-11-19T14:17:00Z&lt;/EstimatedTime&gt;
                            &lt;/ServiceDeparture&gt;
                            &lt;StopSeqNumber&gt;31&lt;/StopSeqNumber&gt;
                        &lt;/CallAtStop&gt;
                    &lt;/ThisCall&gt;
                    &lt;Service&gt;
                        &lt;OperatingDayRef&gt;2018-11-19&lt;/OperatingDayRef&gt;
                        &lt;JourneyRef&gt;odp:05036::H:j18:36143:36143&lt;/JourneyRef&gt;
                        &lt;LineRef&gt;odp:05036::H&lt;/LineRef&gt;
                        &lt;DirectionRef&gt;outward&lt;/DirectionRef&gt;
                        &lt;Mode&gt;
                            &lt;PtMode&gt;bus&lt;/PtMode&gt;
                            &lt;BusSubmode&gt;regionalBus&lt;/BusSubmode&gt;
                            &lt;Name&gt;
                                &lt;Text&gt;Bus&lt;/Text&gt;
                                &lt;Language&gt;de&lt;/Language&gt;
                            &lt;/Name&gt;
                        &lt;/Mode&gt;
                        &lt;PublishedLineName&gt;
                            &lt;Text&gt;36&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/PublishedLineName&gt;
                        &lt;OperatorRef&gt;odp:823&lt;/OperatorRef&gt;
                        &lt;OriginStopPointRef&gt;8589334&lt;/OriginStopPointRef&gt;
                        &lt;OriginText&gt;
                            &lt;Text&gt;Basel, Kleinhüningen&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/OriginText&gt;
                        &lt;DestinationStopPointRef&gt;8588780&lt;/DestinationStopPointRef&gt;
                        &lt;DestinationText&gt;
                            &lt;Text&gt;Basel, Schifflände&lt;/Text&gt;
                            &lt;Language&gt;de&lt;/Language&gt;
                        &lt;/DestinationText&gt;
                    &lt;/Service&gt;
                &lt;/StopEvent&gt;
            &lt;/StopEventResult&gt;
        &lt;/StopEventResponse&gt;
    &lt;/DeliveryPayload&gt;
&lt;/ServiceDelivery&gt;
&lt;/Trias&gt;"""

ns = {"t": "http://www.vdv.de/trias"}

tree = ET.fromstring(test_answer)

# as strings
timetabled_time = tree.find(".//t:TimetabledTime", ns).text
estimated_time = tree.find(".//t:EstimatedTime", ns).text

# as datetime objects
date_format = "%Y-%m-%dT%H:%M:%SZ"
timetabled_time = datetime.strptime(timetabled_time, date_format)
estimated_time = datetime.strptime(estimated_time, date_format)

print("Timetabled time: {} at {}".format(timetabled_time.date(), timetabled_time.time()))
print("Estimated time: {} at {}".format(estimated_time.date(), estimated_time.time()))
</code></pre>
<p><strong>Output</strong></p>
<pre class="lang-none prettyprint-override"><code>Timetabled time: 2018-11-19 at 14:16:00
Estimated time: 2018-11-19 at 14:17:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to stick to standard Python you can use: html.parser</p>
<p><a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">https://docs.python.org/3/library/html.parser.html</a></p>
<p>There are also many third party libraries that make life easier (google "html parsing python")</p>
</div>
<span class="comment-copy">I'd suggest BeautifulSoup.</span>
<span class="comment-copy">Please elaborate on "it did not really work". Show us what you tried. Note that XML namespaces are used. See <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#parsing-xml-with-namespaces" rel="nofollow noreferrer">docs.python.org/3/library/…</a>.</span>
<span class="comment-copy">Thanks a lot, I will work with BeautifulSoup. That was what I was looking for!</span>
