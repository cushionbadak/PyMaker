<div class="post-text" itemprop="text">
<p>I'm just starting to learn how to work with python binary files, and i'm trying to write information into a file in binary mode. Since apparently there's no newline command for bytes (like \n for strings), what is the easiest way to keep different chunks (of different sizes) of information separated in a binary file?
Ideally i would like to have different lines for it, but i cannot find a way to do so.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you are referring to is an <code>encoding</code> - the way the bits/bytes in a binary file should be interpreted.</p>
<p>All files are binary files as they are stored. It is only when they are displayed/transmitted/processed that the encoding becomes important.</p>
<p>For example, the bytes <code>0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x21, 0x0A, 0x65, 0x41, 0x42, 0x43</code> might be displayed as </p>
<pre><code>Hello!
ABC
</code></pre>
<p>If there were interpreted as part of a text file by a text editor, because the bytes are ASCII text and <code>0x0A</code> is a newline character.</p>
<p>However, the same sequence of bytes would be interpreted very differently if they were part of a JPEG file (for example).</p>
<p>As an example of a binary encoding, in a JPEG file each logical piece of image information is called a <code>segment</code>. Each segment starts with a <code>marker</code>. Each marker starts with the byte <code>0xFF</code>. This is the 'separator' between logical pieces of information.</p>
</div>
<span class="comment-copy">You have to make your own encoding.</span>
<span class="comment-copy">When a text file is encoded, there aren't empty gaps between the lines of text.  Instead, a special character <code>\n</code> is used to represent line breaks.  You'll have to do something similar.</span>
<span class="comment-copy">you mean like defining a custom set of characters to mark a division in my information?</span>
<span class="comment-copy">You may be interested in grouping your record data in a kind of <code>C struct</code> and then write (or read) the structs (records) from/to a file. See the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer"><code>struct</code></a> Python module.</span>
<span class="comment-copy">With structs of different sizes mixed, you need to know the type before a read or write. See also the <code>pickle</code> format for ideas.</span>
