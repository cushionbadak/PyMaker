<div class="post-text" itemprop="text">
<p>I have a date column that has the following format:</p>
<pre><code>date
10jan2018
12feb2018
14mar2018
</code></pre>
<p>And so on. I guess the best approach is to turn the middle string into a number, and then apply <code>todatetime()</code> so I created a dictionary like this:</p>
<pre><code>dict_month={'jan':01, 'feb':02,'mar':03,'apr':04,'may':05,'jun':06'
      'jul':07, 'aug':08,'sep':09,'oct':10,'nov':11,'dec':12}
</code></pre>
<p>But I'm not sure how to proceed. Maybe I could use a regex, but I'm not sure how to combine regex and dictionary. </p>
<p>Any ideas? </p>
</div>
<div class="post-text" itemprop="text">
<p>Specify a <code>format</code> to <code>pd.to_datetime()</code>.  <code>%b</code> is the month as localeâ€™s abbreviated name (and is case-insensitive in this direction):</p>
<pre><code>&gt;&gt;&gt; df
        date
0  10jan2018
1  12feb2018
2  14mar2018

&gt;&gt;&gt; pd.to_datetime(df['date'], format='%d%b%Y')
0   2018-01-10
1   2018-02-12
2   2018-03-14
Name: date, dtype: datetime64[ns]
</code></pre>
<p>From <code>datetime</code> module: <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">Formatting directives</a>.</p>
</div>
