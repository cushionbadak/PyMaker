<div class="post-text" itemprop="text">
<p>I have a following python dictionary:</p>
<pre><code>lines = {('mid', 'north'): None,
         ('south', 'mid'): None,
         ('south', 'north'): None,
        }
</code></pre>
<p>what I am trying to achieve is to get the first string or/and second string of one of the keys of the <code>lines</code> dictionary.</p>
<p>so <code>lines.keys()</code> gives me <code>dict_keys([('mid', 'north'), ('south', 'mid'), ('south', 'north')])</code></p>
<p>what I would like to have is something like this:</p>
<pre><code>lines.keys()[0][0]
'mid'
</code></pre>
<p>ofc it is not working like this but is there a function or a command which gives me the first string of the tuple <code>('mid', 'north')</code>, as an output? Keep in mind <code>('mid', 'north')</code> is the key of the dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert <code>dict_keys</code> to tuple, since it is iterable:</p>
<pre><code>&gt;&gt;&gt; k = tuple(lines.keys())
&gt;&gt;&gt; k[0][0]
'mid'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert your keys to list, and since dict will be in random order you need to <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">sort</a> it.</p>
<pre><code>lines = {('mid', 'north'): None,
         ('south', 'mid'): None,
         ('south', 'north'): None,
        }

print(list(sorted(lines.keys()))[0][0]) # -&gt; mid
</code></pre>
</div>
<span class="comment-copy">This looks like the easiest solution ty. And it works. Btw when you do <code>k = list(lines.keys())</code> and then <code>k[0][0]</code> gives <code>mid</code> and not <code>'mid'</code>, can u explain why is that? and also add to your answer?</span>
<span class="comment-copy"><code>k[0][0]</code> contains the string <code>mid</code>. In python you would write that as <code>'mid'</code> (or <code>"mid"</code>), but if you do <code>print(k[0][0])</code> it would just output string's content (<code>mid</code>). If you want to obtain the string <i>representation</i>, do <code>print(repr(k[0][0]))</code>, and it will print <code>'mid'</code>. The interactive console gives you the string representation by default.</span>
<span class="comment-copy">Looks nice, but why sorted?</span>
<span class="comment-copy">I don't think it will be in random order, but it will be the order I set them. so <code>[0]</code> is always <code>('mid', 'north')</code>, and <code>[1]</code> is <code>('south', 'mid')</code>, etc...</span>
<span class="comment-copy">No it won't try <code>print(lines.keys())</code> running that  couple of times.</span>
