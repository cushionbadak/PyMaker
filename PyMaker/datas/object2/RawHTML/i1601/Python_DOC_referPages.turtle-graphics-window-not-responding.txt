<div class="post-text" itemprop="text">
<p>I am attempting to translate a Julia set generator that I made previously to Python code. However, when the code is run, the turtle graphics window stops responding immediately and draws nothing. Have I done something horribly wrong or is there something I'm missing? Perhaps I'm asking too much of python to do in 1 frame. Please explain what is causing this to happen and how I can fix it. Thanks! </p>
<pre><code>import turtle
import time

y_set = []
map_output = 0
iterations = 0
#turtle.hideturtle()
#turtle.speed(1)
</code></pre>
<p>generate a list of y-values</p>
<pre><code>def y_set (r):
    global y_set
    y_set = []
    for n in range ((360*2)+1):
        y_set.append(n)
</code></pre>
<p>create a color value</p>
<pre><code>def color (i, n):
    output = map(i, 2, 10000, 0, 2500)
    if output &lt; 0:
        output = 0
    if output &gt; 0:
        output = 255
</code></pre>
<p>iterate on the x's</p>
<pre><code>def repeat (n, r, i):
    global iterations
    global x
    global y
    aa = 0
    ba = 0
    ab = 0
    a = 0
    b = 0
    for j in range (n):
        iterations += 1
        aa = a * a
        bb = b * b
        ab = 2 * a * b
        a = ((aa - bb) + float(r))
        b = (ab + float(i))
        if (ab + bb) &gt; 4:
            break
    turtle.setx(100 * x)
    turtle.sety(100 * y)
    color(iterations, n)
    turtle.pendown()
    turtle.penup()
</code></pre>
<p>Iterate on the y's</p>
<pre><code>def Julia (s, r, i, d):
    global iterations
    global y_set
    global x
    global y
    global a
    global b
    y_set(s)
    while len(y_set) &gt; 0:
        y = y_set[0]/360
        del y_set[0]
        x = -1.5
        for n in range (round((700/(float(r)+1))+1)):
            a = x
            b = y
            iterations = 0
            repeat(10**d, r, i)
            x += ((1/240)*s)
</code></pre>
<p>user input</p>
<pre><code>real = input('Real: ')
imag = input('Imaginary: ')

Julia (1, real, imag, 100)
turtle.done()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are too many problems with this code to focus on an algorithm error.  When I try to run it, I get, <code>TypeError: 'int' object is not iterable</code>.  Specific issues:</p>
<p>The <code>i</code> argument here is being passed a number:</p>
<pre><code>    iterations += 1
...
color(iterations, n)
...

def color(i, n):
    output = map(i, 2, 10000, 0, 2500)
</code></pre>
<p>but Python's <code>map</code> function (and Julia's) expects a function as its first argument:</p>
<pre><code>map(func, *iterables)
</code></pre>
<p>and it returns a list of the results of applying <code>func</code> to <code>iterables</code> but you treat the result as a scalar value: </p>
<pre><code>output = map(i, 2, 10000, 0, 2500)
if output &lt; 0:
    output = 0
if output &gt; 0:
    output = 255
</code></pre>
<p>The <code>color()</code> function never uses its second argument, and never returns anything!</p>
<p>The variables <code>a</code> &amp; <code>b</code> here are being treated as globals, set but not used, as if prepared for use by <code>repeat()</code>:</p>
<pre><code>global a
global b

...

a = x
b = y
iterations = 0
repeat(10 ** d, r, i)
</code></pre>
<p>but the <code>a</code> &amp; <code>b</code> used by <code>repeat()</code> are locals initialized to zero:</p>
<pre><code>a = 0
b = 0
</code></pre>
<p>You have a function and global variable with the same name <code>y_set</code>!</p>
<p>And your globals are out of control.</p>
</div>
<span class="comment-copy">What to you expect the <code>map(i, 2, 10000, 0, 2500)</code> to do?</span>
<span class="comment-copy">I expected map to take a number 'i' within range 2 to 10000, and map it to a new range 0 to 2500. Is that not what this function is?</span>
<span class="comment-copy">No, that's not what the built-in <code>map()</code> function doesâ€”although you might be able to use it to implement your own function that will. Strongly suggest you read its <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">documentation</a>.</span>
<span class="comment-copy">It seems I misunderstood what the map function did. I thought it maped a number from one range to another. As for the color, I simply took out the 'n' for testing purposes. Also, whoops, didn't realise y-set was a function and a variable. Thanks so much for your help!</span>
<span class="comment-copy">Thanks for the help. But what do you mean by my globals are "out of control". This is the solution I have been using for over a year when it comes to letting 2 or more functions modify the same variable. Also, even after fixing everything else you brought up, the turtle graphics window still won't respond.</span>
<span class="comment-copy">@Noah: Global variables are generally considered a poor programming practice. The article <a href="http://wiki.c2.com/?GlobalVariablesAreBad" rel="nofollow noreferrer">Global Variables Are Bad</a> describes some of the reasons why.</span>
<span class="comment-copy">@NoahGehlhausen, globals-wise, consider <code>iterations</code>.  You make it a global and declare it as such but just before you call <code>repeat()</code> you always set it to zero.  That's no different than making it local to <code>repeat()</code> and tossing the global stuff.</span>
