<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5737196/is-there-an-expression-for-an-infinite-generator">Is there an expression for an infinite generator?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>Is there any function in Python that provides an infinite series similar to generateSequence in Kotlin?</p>
<p>In Kotlin I can do something like:</p>
<pre><code>generateSequence(1) { it + 1 }.take(5).forEach { println(it) }
</code></pre>
<p>Obviously this stops with an integer overflow error but I would like to do something similar in Python. </p>
</div>
<div class="post-text" itemprop="text">
<p>you can write a simple <code>generator</code></p>
<pre><code>def count(x):
    while True:
        yield x
        x += 1

for i in count(5):
    print(i)
</code></pre>
<p>of coarse this particular generator is builtin with <code>itertools.count</code></p>
<pre><code>import itertools
for i in itertools.count(5):
    print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count()</code></a> to get a <code>count</code> object that generates an infinite sequence of values.</p>
<p>You can take the first <em>n</em> items by explicitly retrieving the next item from the <code>count</code> object for the required number of times. Alternatively, and preferably, use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice()</code></a> to take the first <em>n</em> items.</p>
<p>Mirroring your example, to take the first 5 values of the sequence using explicit iteration:</p>
<pre><code>from itertools import count

c = count(1)    # start from 1 instead of 0
for i in range(5):
    print(next(c))
</code></pre>
<p>Or using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>islice()</code></a>:</p>
<pre><code>for n in islice(count(1), 5):
    print(n)
</code></pre>
</div>
<span class="comment-copy">This SO thread will be of interest to you: <a href="https://stackoverflow.com/questions/5737196/is-there-an-expression-for-an-infinite-generator" title="is there an expression for an infinite generator">stackoverflow.com/questions/5737196/â€¦</a></span>
