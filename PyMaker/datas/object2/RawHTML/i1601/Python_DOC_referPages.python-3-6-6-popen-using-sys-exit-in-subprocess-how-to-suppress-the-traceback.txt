<div class="post-text" itemprop="text">
<p>I have a class with some functions that basically do output checks on data, the functions of this class are called using a subprocess. 
Now if the output check fails the subprocess has a sys.exit call with a different code depending on which check it failed.</p>
<p>In the main code I have this:</p>
<pre><code>try:
    exitCode = 0
    #import module for current test
    teststr = os.path.splitext(test)[0]
    os.chdir(fs.scriptFolder)
    test = __import__(teststr)
    #delete old output folder and create a new one
    if  os.path.isdir(fs.outputFolder):
        rmtree(fs.outputFolder)
    os.mkdir(fs.outputFolder)
    # run the test passed into the function as a new subprocess
    os.chdir(fs.pythonFolder)
    myEnv=os.environ.copy()
    myEnv["x"] = "ON"
    testSubprocess = Popen(['python', test.testInfo.network + '.py', teststr], env=myEnv)
    testSubprocess.wait()
    result = addFields(test)
    # poke the data into the postgresql database if the network ran successfully 
    if testSubprocess.returncode == 0:
        uploadToPerfDatabase(result)     
    elif testSubprocess.returncode == 1:
        raise Exception("Incorrect total number of rows on output, expected: " + str(test.testInfo.outputValidationProps['TotalRowCount']))
        exitCode = 1
    elif testSubprocess.returncode == 2:
        raise Exception("Incorrect number of columns on output, expected: " + str(test.testInfo.outputValidationProps['ColumnCount']))
        exitCode = 1
except Exception as e:
    log.out(teststr + " failed", True)
    log.out(str(e))
    log.out(traceback.format_exc())
    exitCode = 1 
return exitCode
</code></pre>
<p>Now the output from this shows all traceback and python exceptions for the sys.exit calls in the subprocess.
Im actually logging all errors so I dont want anything being displayed in the command prompt unless ive printed it manually.
I'm not quite sure how to go about this. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can specify <code>stderr</code> to write to <code>os.devnull</code> with the <code>subprocess.DEVNULL</code> flag:</p>
<p><code>p = Popen(['python', '-c', 'print(1/0)'], stderr=subprocess.DEVNULL)</code></p>
<blockquote>
<p>subprocess.DEVNULL
  Special value that can be used as the stdin, stdout or stderr argument to Popen and indicates that the special file os.devnull will be used.</p>
<p>New in version 3.3. <a href="https://docs.python.org/3/library/subprocess.html#subprocess.DEVNULL" rel="nofollow noreferrer">docs</a></p>
</blockquote>
</div>
<span class="comment-copy">Thanks i mustve skimmed over that flag in the docs worked like a charm on most of the output.  I just get which I expected:  <code>Caused by: Python exception: 2 File "C:\x\performance_branch\python\outputValidation.py", Line 31, in onEnd  sys.exit(2)</code></span>
<span class="comment-copy">@Methodicle That's all you get? No mention of what exception exactly and what at all is caused <code>by: Python exception...</code>?</span>
<span class="comment-copy">No in my logging I get the full detail that is was caused by fact output wasn't correct so the run terminated, but in the prompt it just shows that now which ill probably try and suppress too so that it's all contained in the .log file.</span>
<span class="comment-copy">@Methodicle Oh sorry, I overlooked the "which I expected" and thought you have an ongoing problem :)</span>
<span class="comment-copy">Don't worry! Thanks so much for the help and quick response fairly new to python so theirs a few bits to get my head around :D</span>
