<div class="post-text" itemprop="text">
<p>I have been struggling with this code for a couple hours and am not seeing much in previous questions that relates to it. I've gone down the rabbit hole trying to make it work so I think it's pretty inefficient at this point as well as isn't outputting in the manner I'd like.</p>
<p>I am trying to get user input in the form of multiple grade entries, evaluate them based on grading criteria and then output the students grade in letter form</p>
<p>Any advice on getting it to output correctly or on any better coding techniques would be greatly appreciated. Thanks ahead of time from a novice coder.</p>
<p>Here is my code:</p>
<pre><code>    """10.1 - write a program that reads a list of scores and then
    assigns letter grades based on the criteria:
    A if score is &gt;= best - 10
    B if score is &gt;= best - 20
    C if score is &gt;= best - 30
    D if score is &gt;= best - 40
    F otherwise
    """

    grades_input = input("Enter Students scores seperated by a space: ") #get user input of student's grades
    grades_list = grades_input.split() #split user input into a list
    grades_list_valid = [ int(x) for x in grades_list ] #convert items into integers
    number_of_students = []

    for i in range(len(grades_list_valid)):
        number_of_students.append(i)

    for grade in grades_list_valid: #create criteria to assign each letter grade
        best_score = max(grades_list_valid) #get the highest grade


        if grade &gt;= best_score - 10:
            print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is A")
        elif grade &gt;= best_score - 20:
            print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is B")
        elif grade &gt;= best_score - 30:
            print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is C")
        elif grade &gt;= best_score - 40:
            print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is D")
        else:
            print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is F")
</code></pre>
<p>and here is the output:</p>
<pre><code>    Enter Students scores seperated by a space: 40 55 70 58
    Student 3 score is 58 and grade is C
    Student 3 score is 58 and grade is B
    Student 3 score is 58 and grade is A
    Student 3 score is 58 and grade is B
</code></pre>
<p>The desired output is:</p>
<pre><code>    Student 0 score is 40 and grade is C
    Student 1 score is 55 and grade is B
    Student 2 score is 70 and grade is A
    Student 3 score is 58 and grade is B
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Its because your first loop to get i is completing before you make use of i, then i is already 3 when you loop through to print the results. Instead you should get the index in your second loop like this:</p>
<pre><code>grades_input = input("Enter Students scores seperated by a space: ") #get user input of student's grades
grades_list = grades_input.split() #split user input into a list
grades_list_valid = [ int(x) for x in grades_list ] #convert items into integers

best_score = max(grades_list_valid) 
for i, grade in enumerate(grades_list_valid): 
    letter_grade = "F"        

    if grade &gt;= best_score - 10:
        letter_grade = "A"
    elif grade &gt;= best_score - 20:
        letter_grade = "B"
    elif grade &gt;= best_score - 30:
        letter_grade = "C"
    elif grade &gt;= best_score - 40:
        letter_grade = "D"
    else:
        letter_grade = "F"

    print("Student {} score is {} and grade is {}".format(i, grade, letter_grade))
</code></pre>
<p>and then eliminate the first loop.</p>
<p>After looking again at the question i also noticed you were grabbing the "best score" from the same list every time, which would make each student have the same score. Im guessing you just want to grab the score for each student. I updated my answer to work for that - not sure if it was your desired behaviour.</p>
<p>Edit: looked at it again and realized what you were doing with best score, fixed my answer here's the results when i run it:</p>
<pre><code>Enter Students scores seperated by a space: "70 80 93 77 31"
Student 0 score is 70 and grade is C
Student 1 score is 80 and grade is B
Student 2 score is 93 and grade is A
Student 3 score is 77 and grade is B
Student 4 score is 31 and grade is F
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>grades_input = input("Enter Students scores seperated by a space: ") #get user input of student's grades
grades_list = grades_input.split() #split user input into a list
grades_list_valid = [ int(x) for x in grades_list ] #convert items into integers
number_of_students = []

for i in range(len(grades_list_valid)):
    number_of_students.append(i)
i=0
for grade in grades_list_valid: #create criteria to assign each letter grade
    best_score = max(grades_list_valid) #get the highest grade

    print(i)
    if grade &gt;= best_score - 10:
        print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is A")
    elif grade &gt;= best_score - 20:
        print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is B")
    elif grade &gt;= best_score - 30:
        print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is C")
    elif grade &gt;= best_score - 40:
        print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is D")
    else:
        print("Student {}".format(number_of_students[i]), "score is {}".format(grades_list_valid[i]), "and grade is F")
    i+=1
</code></pre>
<p>this the correct way,in your code i=3 which is why you are getting the same answer for each student</p>
</div>
<div class="post-text" itemprop="text">
<p>As Quinn said, your top loop iterates over <code>i</code>, which finishes at <code>i = 3</code>. Future references to <code>i</code> will yield 3.
Some things I noticed:</p>
<p>1) What you can do is check their grade at the same time as you loop through.</p>
<p>2) Additionally, you don't need to find the maximum each loop, you can get it once <em>outside</em> the loop and then reference it inside.</p>
<p>3) Finally, it looks quite ugly when you have all of these print statements, it makes it much nicer to read if you assign the grade in the if statements and then print once with the found grade, like so:</p>
<pre><code>best_score = max(grade_list_valid)
for i in range(len(grades_list_valid)):
    curr_score = grades_list_valid[i]
    if(curr_score &gt;= best_score - 10):
        grade = "A"
    ...
    print("Student {} score is {} and grade is {}".format(i, curr_score, grade))
</code></pre>
<p>There are some further small optimisations you can make as well. For example, the list comprehension you have:</p>
<p><code>[ int(x) for x in grades_list ]</code></p>
<p>Is the classic case for a <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>:</p>
<p><code>map(int, grades_list)</code></p>
</div>
<span class="comment-copy">is your indentation correct? because i never changes in the second loop</span>
<span class="comment-copy">Thank you for the response, this helped me immensely.</span>
<span class="comment-copy">just updated my answer then saw yours, guess we had the same idea for formatting the string :P</span>
<span class="comment-copy">Thank you for the response and best coding practices, between your response and Quinn's I've updated my program (to include the optimization) and am getting the desired output</span>
