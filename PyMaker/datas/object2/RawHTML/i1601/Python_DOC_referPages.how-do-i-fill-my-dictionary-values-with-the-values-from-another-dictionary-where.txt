<div class="post-text" itemprop="text">
<p>I have one dictionary (dictDemCLass) with a key but the values are all 0 and I plan to fill them with the values from another dictionary (dictAvgGrade).  I need to do so where the keys of the two dictionaries are the same.</p>
<pre><code>dictAvgGrade = {k:sum(v)/4 for k,v in studentPerf.items()}

dictDemClass = {k:0 for k in classes}
</code></pre>
<p>When printed (dictAvgGrade is shortened):</p>
<pre><code>print(dictAvgGrade)
{('Jeffery', 'male', 'junior'): 0.7749999999999999, ('Able', 'male', 'senior'): 0.8200000000000001, ('Don', 'male', 'junior'): 0.7974999999999999, ('Will', 'male', 'senior'): 0.7975000000000001}

print(dictDemClass)

{'junior': 0, 'senior': 0, 'sophomore': 0}
</code></pre>
<p>Ultimately I want to fill dictDemClass to show the average for each class. So that the output could look something like:</p>
<pre><code>print(dictDemClass)

{'junior': 77.46, 'senior': 83.82, 'sophomore': 86.79}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to groups items in <code>dictAvgGrade</code> by "class" (i.e. junior, senior, etc.). Then you can compute the average for each group and add it to <code>dictDemClass</code>.</p>
<p>So for the example your posted, it can be something like the following:</p>
<pre><code>from itertools import groupby

dictAvgGrade = {('Jeffery', 'male', 'junior'): 0.7749999999999999, ('Able', 'male', 'senior'): 0.8200000000000001, ('Don', 'male', 'junior'): 0.7974999999999999, ('Will', 'male', 'senior'): 0.7975000000000001}
dictDemClass = {'junior': 0, 'senior': 0, 'sophomore': 0}

def get_class(x):
    return x[0][2]

for k, g in groupby(sorted(dictAvgGrade.items(), key=get_class), key=get_class):
    group = list(g)
    class_avg = sum(x[1] for x in group)/len(group)
    dictDemClass[k] = class_avg

print(dictDemClass)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'senior': 0.8087500000000001, 'junior': 0.7862499999999999, 'sophomore': 0}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you know that <code>dictAvgGrade</code> is always a subset of <code>dictDemClass</code> you can do this</p>
<pre><code>dictDemClass.update(dictAvgGrade)
</code></pre>
<p>otherwise</p>
<p>if you are using python3 you can do something like this</p>
<pre><code>for key in (dictDemClass.keys() &amp; dictAvgGrade.keys()):
    dictDemClass[key] = dictAvgGrade[key]
</code></pre>
<p>if you are using python2 you can do something like this</p>
<pre><code>for key in (set(dictDemClass.keys()) &amp; set(dictAvgGrade.keys())):
    dictDemClass[key] = dictAvgGrade[key]
</code></pre>
</div>
<span class="comment-copy">So the final values in <code>dictDemClass</code> are the averages of all corresponding values in <code>dictAvgGrade</code>?</span>
<span class="comment-copy">yes that's what im hoping to achieve, obviously the ones there at the end of my post are just an example</span>
<span class="comment-copy">I might have been too vague, see my comment on the other response.  Id appreciate if you could give this another look</span>
<span class="comment-copy">@JacobMyer As alex pointed out, can you please add example data and the expected output?</span>
<span class="comment-copy">I added some more information, I think that should show you what my goal is</span>
<span class="comment-copy">@JacobMyer I hope the updated answer is more helpful.</span>
<span class="comment-copy">@JacobMyer Great! If this solved your problem, please consider marking the answer as accepted (<a href="https://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a>).</span>
<span class="comment-copy">Maybe I wasn't clear enough.  dictAvgGrade has all of the information that needs to go into dictDemClass, but its keys are in tuples and their is other information I hope to filter out by creating this new dictionary.  I need the v values of dictAvgGrade to fill the 0s of dictDemClass in the places where the keys from both of those dictionaries are equivalent</span>
<span class="comment-copy">sorry, I'm not sure I understand, can you add examples of the two dictionaries and the desired result?</span>
<span class="comment-copy">no worries, I made some changes. Hopefully that's easier to understand</span>
