<div class="post-text" itemprop="text">
<p>I have a JSON file, and what I am trying to do is getting this specific field '_id'. Problem is that when I use <code>json.load('input_file')</code>, it says that my variable  <code>data</code> is a list, not a dictionary, so I can't do something like:</p>
<pre><code>for value in data['_id']:
    print(data['_id'][i])
</code></pre>
<p>because I keep getting this error: <strong>TypeError: list indices must be integers or slices, not str</strong></p>
<p>What I also tried to do is:</p>
<pre><code>data = json.load(input_file)[0]
</code></pre>
<p>It kinda works. Now, my type is a dictionary, and I can access like this: <code>data['_id']</code>
But I only get the first '_id' from the archive... </p>
<p>So, what I would like to do is add all '_id' 's values into a list, to use later.</p>
<pre><code>input_file = open('input_file.txt')
data = json.load(input_file)[0] 
print(data['_id'])# only shows me the first '_id' value
</code></pre>
<p>Thanks for the help!</p>
<pre><code>[{
 "_id": "5436e3abbae478396759f0cf",
 "name": "ISIC_0000000",
 "updated": "2015-02-23T02:48:17.495000+00:00"
},
{
 "_id": "5436e3acbae478396759f0d1",
 "name": "ISIC_0000001",
 "updated": "2015-02-23T02:48:27.455000+00:00"
},
{

 "_id": "5436e3acbae478396759f0d3",
 "name": "ISIC_0000002",
 "updated": "2015-02-23T02:48:37.249000+00:00"
},
{
 "_id": "5436e3acbae478396759f0d5",
 "name": "ISIC_0000003",
 "updated": "2015-02-23T02:48:46.021000+00:00"
 }]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to print the <code>_id</code> of each element of your json list, so let's do it by simply iterating over the elements:</p>
<pre><code>input_file = open('input_file.txt')
data = json.load(input_file)  # get the data list
for element in data:  # iterate on each element of the list
    # element is a dict
    id = element['_id']  # get the id
    print(id)  # print it
</code></pre>
<p>If you want to transform the list of elements into a list of ids for later use, you can use list comprehension:</p>
<pre><code>ids = [ e['_id'] for e in data ]  # get id from each element and create a list of them
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you can see the <code>data</code> is a <code>list</code> of <code>dictionaries</code></p>
<p>for looping over <code>data</code> you need to use the following code</p>
<pre><code>for each in data:
    print each['_id']
    print each['name']
    print each['updated']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>it says that my variable data is a list, not a dictionary, so I can't do something like:</p>
<pre><code>for value in data['_id']:
     print(data['_id'][i])
</code></pre>
</blockquote>
<p>Yes, but you can loop over all the dictionaries in your list and get the values for their '_id' keys. This can be done in a single line using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>data = json.load(input_file)

ids = [value['_id'] for value in data]
print(ids)
</code></pre>
<blockquote>
<p>['5436e3abbae478396759f0cf', '5436e3acbae478396759f0d1', '5436e3acbae478396759f0d3', '5436e3acbae478396759f0d5']</p>
</blockquote>
<p>Another way to achieve this is using the <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map built-in</a> function of python:</p>
<pre><code>ids = map(lambda value: value['_id'], data)
</code></pre>
<p>This creates a function that returns the value of the key <code>_id</code> from a dictionary using a <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">lambda expression</a> and then returns a list with the return value from this function applied on every item in <code>data</code></p>
</div>
<span class="comment-copy">Thank you! That worked out perfectly!</span>
<span class="comment-copy">Thanks! It worked out just as I needed!</span>
<span class="comment-copy">Please mark the answer as accepted</span>
<span class="comment-copy">Thank you so much! You helped me a lot! =]</span>
