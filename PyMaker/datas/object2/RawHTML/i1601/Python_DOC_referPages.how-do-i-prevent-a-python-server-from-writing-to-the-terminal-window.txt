<div class="post-text" itemprop="text">
<p>I need to run a Python web server, while still taking inputs from the user, but when someone visits the website, the information logged to the terminal window is on the same line as the input, making it look like this:<a href="https://i.stack.imgur.com/3Ushw.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/3Ushw.png"/></a></p>
<p>I've tried setting the thread the the servers on to daemon mode, I've tried <code>logging.getLogger("socketserver").setLevel(logging.CRITICAL)</code>, I've tried <code>logger.propagation = False</code>, and <code>logger.disable = True</code></p>
<p>This is my server code:</p>
<pre><code>os.chdir("docs")
port = 8980
Handler = http.server.SimpleHTTPRequestHandler
with socketserver.TCPServer(("", port), Handler) as httpd:
   httpd.serve_forever()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Subclass <code>SimpleHTTPRequestHandler</code> and override the <code>log_message</code> method to do nothing:</p>
<pre><code>class QuietHandler(http.server.SimpleHTTPRequestHandler):
    def log_message(self, format, *args):
        pass


with socketserver.TCPServer(("", 8980), QuietHandler) as httpd:
    httpd.serve_forever()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One thing you can try is piping the output into a file, if the file size ever becomes a concern I would try piping it to nul, like:
python3 myserver.py 2&gt; nul</p>
</div>
<div class="post-text" itemprop="text">
<p>I wasn't quite clear if you wanted to remove the logging message on the command line, or redirect logging to file. </p>
<p>If you're wanting to redirect to file, you can use <a href="https://www.tutorialspoint.com/python/os_write.htm" rel="nofollow noreferrer">os.write</a> to print to file.</p>
<p>If you're wanting to turn off the logging messages, and you can't get them off the command line, you could assign that logging to a <a href="https://docs.python.org/3/library/logging.handlers.html" rel="nofollow noreferrer">nullHandler</a>. Something a bit like:</p>
<pre><code>noop = logging.NullHandler()
log.addHandler(noop)
# nothing happens here
log.info('message that will not be logged')
</code></pre>
<p>Using a nullHandler is a bit of a large solution, as the ideal would be to have logging going to a .log file for reference, not turning it off or skipping for certain messages.</p>
</div>
<span class="comment-copy">It doesn't really matter where the message goes, just that it's not visible on the terminal windows.</span>
