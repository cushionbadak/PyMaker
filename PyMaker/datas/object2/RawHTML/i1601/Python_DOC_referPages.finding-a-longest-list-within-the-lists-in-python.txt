<div class="post-text" itemprop="text">
<p>I'm just a new in python and I need to print the lists which has minimum and maximum items in a list.</p>
<p>For example if i have:</p>
<pre><code> total_list = [[1, 2, 3], [1, 2, 3, 4], [1,2,3,4,5]]
</code></pre>
<p>I need to return a list with a minimum and maximum length of itself. How can I do it simply in python way?</p>
<p>I try to iterate over it but all I could receive is the only <code>len</code> of each item in a list </p>
<p>Output must be: </p>
<pre><code>total_list[0] and total_list[2]
</code></pre>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p><code>max</code> and <code>min</code> function in python accepts a <code>key</code> argument that will find the max of an iterable based on what defined as a key. so, try this:</p>
<pre><code>max(total_list, key=len)
</code></pre>
<p>then you can use <code>total_list.index</code> to find those indexes</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>total_list = [[1, 2, 3], [1, 2, 3, 4], [1,2,3,4,5]]

print('total_list[{0}] and total_list[{1}]'.format(total_list.index(min(total_list, key=len)), total_list.index(max(total_list, key=len))))
</code></pre>
<p><strong>OUTPUT:</strong></p>
<pre><code>C:\Users\Desktop&gt;py x.py
total_list[0] and total_list[2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The usage of <code>min( iterable, key=len)</code> (<a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">min</a>/<a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">max</a>) is easiest. If you like to go through your list yourself, you can do this like so:</p>
<pre><code>tl  = [[1, 2, 3], [1, 2, 3, 4], [1,2,3,4,5]]

# init shortest and longest to 1st element of list
# use a tuple to store:  ( listdata, length, position in original list )
shortest = longest = (tl[0], len(tl[0]), 0)

# iterate over remaining elements
for pos_act,act in enumerate(tl[1:],1): # start enumerate on 1 to fix position due slicing
    # get actual length
    len_act = len(act)

    # is it larger then current largest?
    if len_act &gt; longest[1]:
        longest = (act,len_act, pos_act)

    # is it shorter then current shortest?
    if len_act &lt; shortest[1]:
        shortest = (act, len_act, pos_act)

print ("Shortest: {} with len {} on position {}".format(*shortest))
print ("Longest: {} with len {} on position {}".format(*longest))
</code></pre>
<p>Output:</p>
<pre><code>Shortest: [1, 2, 3] with len 3 on position 0
Longest: [1, 2, 3, 4, 5] with len 5 on position 2
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate(iterable[,start_value])</a></li>
</ul>
</div>
<span class="comment-copy">How could we possibly tell you what you did wrong if you don't show us what you did?</span>
<span class="comment-copy">If you already got to the point where you have the len of each list item, then you are almost done. You just need to set an initial min/max value then compare it to the len values you have, and if it's <code>&gt;</code> or <code>&lt;</code>, store those index numbers and return them once the loop is complete</span>
