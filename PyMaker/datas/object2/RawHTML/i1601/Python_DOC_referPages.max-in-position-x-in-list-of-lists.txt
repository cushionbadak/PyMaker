<div class="post-text" itemprop="text">
<p>How do I get the max value in position x in a list of lists, and return that along with the data in position 0? A sample of my current list is pasted below. I was considering making another list which contains the elements i want then sorting that one, but I am guessing there is a better to do this</p>
<p>Data currently being output</p>
<pre><code>[['Name1', '1 (5)', '0', '0', '0', 'TeamPos', 'TeamA'], 
 ['Name2', '13 (0)', '5', '4', '0', 'TeamPos', 'TeamB'], 
 ['Name3', '4 (1)', '2', '1', '0', 'TeamPos', 'TeamC']]
</code></pre>
<p>Expected output would be - lets say I wanted the max value across all lists in index 2: </p>
<pre><code>Name2, 5
</code></pre>
<p>EDIT: Trying to pass in data from my first function into the function suggested by slider, and I get NameError: name 'data' is not defined. I've also tried to pass in when get_max is called and that didnt work either</p>
<pre><code>def get_max(lst, i, key_func=None):

    data = squads()

    if not key_func: key_func = lambda x: x[i]
    res = max(lst, key=key_func)
    return [res[0], res[i]]

print(get_max(data,2, lambda x: int(x[2])))
</code></pre>
<p>Also, if I try the below and then run it, I get the following error "Position arguement follows keyword argument. I tried to then shift the order in which the values are declared when the function is declared but it gets messy, especially when I dont really follow how this function works</p>
<p>print(get_max(data=squads(),2, lambda x: int(x[2])))</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> with a <code>key</code>:</p>
<pre><code>data = [['Name1', '1 (5)', '0', '0', '0', 'TeamPos', 'TeamA'], 
        ['Name2', '13 (0)', '5', '4', '0', 'TeamPos', 'TeamB'], 
        ['Name3', '4 (1)', '2', '1', '0', 'TeamPos', 'TeamC']]

def get_max(lst, i, key_func=None):
    if not key_func: key_func = lambda x: x[i]
    res = max(lst, key=key_func)
    return [res[0], res[i]]

print(get_max(data, 2, lambda x: int(x[2])))
# ['Name2', '5']

print(get_max(data, 6))
# ['Name3', 'TeamC']
</code></pre>
<p>The way <code>get_max</code> works is you specify your 2-d list, the index you want to retrieve and a key function that you want to pass in to <code>max</code>. If the key function is not provided, a default is used (specifically, <code>lambda x: x[i]</code>).</p>
<p>The key function is supposed to define which column to consider to determine the maximum of your 2-d list.</p>
<p><strong>Edit</strong></p>
<p>You're defining <code>data</code> inside the <code>get_max</code> function but you're using it outside the function. Change this to the following:</p>
<pre><code>def get_max(lst, i, key_func=None):
    if not key_func: key_func = lambda x: x[i]
    res = max(lst, key=key_func)
    return [res[0], res[i]]

data = squads()
print(get_max(data,2, lambda x: int(x[2])))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sorting would be quite appropriate. Let's say you are interested in the 2nd column:</p>
<pre><code>POS = 2
maximal = sorted(your_list, key=lambda x: x[POS])[-1]
[maximal[0], maximal[POS]]
#['Name2', '5']
</code></pre>
<p>Bear in mind that <code>sorted</code> sorts strings in the lexicographic order. If you want to treat your columns as numbers, convert them to numbers when sorting:</p>
<pre><code>maximal = sorted(your_list, key=lambda x: int(x[POS]))[-1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the data is very large, you may want to isolate your column of interest and do a "lazy" run of max:</p>
<pre><code>list_of_lists = [..] # your data
target_idx = 2
col_of_interest = ((lst[target_idx], idx) for idx, lst in enumerate(list_of_lists))
max_val, location = max(col_of_interest)
print (list_of_lists[location][0], max_val)
# Name2 5
</code></pre>
<p>This  generates no intermediate lists (or lists of lists thereof).</p>
<p>As noted by @Austin, max() may not provide the result you wanted since the items are strings, in which case you may want to preorganize the lazy column with <code>int()</code>:</p>
<p><code>col_of_interest = ((int(lst[target]), idx) for idx, lst in enumerate(list_of_lists))</code></p>
</div>
<span class="comment-copy">Please include the expected output.</span>
<span class="comment-copy">can you provide expected output for this input? I amnot very clear.</span>
<span class="comment-copy"><code>(list_of_lists[x][0], max(list_of_lists[x])</code> ?</span>
<span class="comment-copy">@Jay, that's not quite right. Considering the elements are strings, <code>max</code> does not output the desired.</span>
<span class="comment-copy">I now see that it's also not what the asker had in mind :)</span>
<span class="comment-copy">Didn't know max() could accept a key, nice!</span>
<span class="comment-copy">Thanks. I am getting the lists of lists from another function but when I run the above I get - "NameError: name 'data' is not defined". I pass the list of lists into data like so - data = squads()</span>
<span class="comment-copy">@slider I am trying your function but I am taking input from another function for my data, how can I pass it in? I am getting errors when I try and insert it into the function. The data is in a list</span>
<span class="comment-copy">@anfield I've updated my answer with comments and a link to the <code>max</code> function.</span>
<span class="comment-copy">Ok many thanks. I think the difference was that you had data=squads() not indented whereas I did. I get a different error now so I think this will work once i fix that. I'll have to clean up the data a little bit more before I run this.</span>
<span class="comment-copy">Thanks...impressed just by the use of the word lexicographic</span>
<span class="comment-copy">The <code>int(x[POS]))</code> wouldn't work if <code>POS = 1</code> because that column can't be converted to an integer by <code>int()</code>—result being <code>ValueError: invalid literal for int()</code>.</span>
<span class="comment-copy">@martineau It is not clear if the OP plans to sort by the column #1. If they do, they have the option of not converting it to an int (my originally proposed answer).</span>
<span class="comment-copy">DYZ: I know those things—I guess my earlier comment was meant to be mostly for the benefit of the OP because they asked for something to find the "max value in position x", which it it seems reasonable to assume means any column.</span>
<span class="comment-copy">@DYZ, you are right. I meant any column. I will be doing a few of these for different columns, but they will always return that particular column, along with the first one, because they can be identified by the first one, as it contains the name</span>
