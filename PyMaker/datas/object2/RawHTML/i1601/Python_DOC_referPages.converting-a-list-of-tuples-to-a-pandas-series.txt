<div class="post-text" itemprop="text">
<p>I have a list of tuples which I want to convert to a Series.  </p>
<pre><code>return array2

[(0, 0.07142857142857142),
  (0, 0.07142857142857142),
  (1, 0.08333333333333333),
  (1, 0.3333333333333333),
  (1, 0.3333333333333333),
  (1, 0.08333333333333333),
  (3, 0.058823529411764705),
  (3, 0.058823529411764705)]
</code></pre>
<p>I attempt to do this by converting the list to a dictionary and then to a Series:</p>
<pre><code> a = pd.Series(dict(array2))
</code></pre>
<p>The resulting Series however, doesn't behave as I need it to.  It seems to drop <code>key:value</code> pairs (possibly arbitrarily?)</p>
<p>E.g.</p>
<pre><code>return a

 0    0.071429
 1    0.083333
 3    0.058824
</code></pre>
<p>How would I obtain a series without dropping any key value pairs?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html" rel="nofollow noreferrer"><code>DataFrame</code></a> constructor with <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html" rel="nofollow noreferrer"><code>set_index</code></a> by first column, then select second column for <code>Series</code>:</p>
<pre><code>a = pd.DataFrame(array2).set_index(0)[1]
print (a)
0
0    0.071429
0    0.071429
1    0.083333
1    0.333333
1    0.333333
1    0.083333
3    0.058824
3    0.058824
Name: 1, dtype: float64
</code></pre>
<p>Or create 2 lists and pass to <code>Series</code> contructor:</p>
<pre><code>idx = [x[0] for x in array2]
vals = [x[1] for x in array2]

a = pd.Series(vals, index=idx)
print (a)
0    0.071429
0    0.071429
1    0.083333
1    0.333333
1    0.333333
1    0.083333
3    0.058824
3    0.058824
dtype: float64
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#zip" rel="noreferrer"><code>zip</code></a> and sequence unpacking:</p>
<pre><code>idx, values = zip(*L)

a = pd.Series(values, idx)
</code></pre>
<p>With duplicate indices, as in your data, <code>dict</code> will not help as duplicate dictionary keys are not permitted: <code>dict</code> will only take the last value for every key supplied.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>MultiIndex</code></p>
<pre><code>pd.MultiIndex.from_tuples(L).to_frame()[1].reset_index(level=1,drop=True)
Out[79]: 
0    0.071429
0    0.071429
1    0.083333
1    0.333333
1    0.333333
1    0.083333
3    0.058824
3    0.058824
Name: 1, dtype: float64
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that when you convert a list of tuples to a dictionary, Python drops all duplicate keys and only uses the last value for each key. This is necessary since each key can only appear once in a dictionary. So you need to use a method that preserves all the records. This will do that:</p>
<pre><code>df = pd.DataFrame.from_records(array2, columns=['key', 'val'])
df = df.set_index('key')
a = df['val']
</code></pre>
<p>Example:</p>
<pre><code>import pandas as pd
array2 = [
    (0, 0.07142857142857142),
    (0, 0.07142857142857142),
    (1, 0.08333333333333333),
    (1, 0.3333333333333333),
    (1, 0.3333333333333333),
    (1, 0.08333333333333333),
    (3, 0.058823529411764705),
    (3, 0.058823529411764705)
]

df = pd.DataFrame.from_records(array2, columns=['key', 'val'])
df = df.set_index('key')
a = df['val']
print(a)
# key
# 0    0.071429
# 0    0.071429
# 1    0.083333
# 1    0.333333
# 1    0.333333
# 1    0.083333
# 3    0.058824
# 3    0.058824
# Name: val, dtype: float64
</code></pre>
</div>
<span class="comment-copy">out of box solution :)</span>
<span class="comment-copy">@jezrael thank you man</span>
