<div class="post-text" itemprop="text">
<p>I have a dictionary (studentPerf) which has all of the students in a school, with tuples as keys.  I want to count the number of male students and the number of female students in the school, and use this to update the values in a second dictionary. The second dictionary (dictDemGender) has 2 keys, male and female, and 0s as the values.  How can I change the 0s in dictDemGender to reflect the number of males and females in the school?</p>
<p>Could I do this with dictionary comprehension?</p>
<p>I've given the first few entries to studentPerf:</p>
<pre><code>studentPerf = {('Jeffery','male','junior'):[0.81,0.75,0.74,0.8],
('Able','male','senior'):[0.87,0.79,0.81,0.81],
('Don','male','junior'):[0.82,0.77,0.8,0.8],
('Will','male','senior'):[0.86,0.78,0.77,0.78],
('John','male','junior'):[0.74,0.81,0.87,0.73]}

#Creates a dictionary with genders as keys and 0s as the values to fill later
dictDemGender = {k:0 for k in genders}

dictDemGender = ?
</code></pre>
<p>I did ask a similar question but had diagnosed the problem incorrectly.  I previously asked for help with finding an average score. What I actually need is a count of the different key possibilities. I need to be able to do so without any outside packages unfortunately.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter

studentPerf = {('Jeffery','male','junior'):[0.81,0.75,0.74,0.8],
('Able','male','senior'):[0.87,0.79,0.81,0.81],
('Don','male','junior'):[0.82,0.77,0.8,0.8],
('Will','male','senior'):[0.86,0.78,0.77,0.78],
('John','male','junior'):[0.74,0.81,0.87,0.73]}

print(Counter(x[1] for x in studentPerf))
# Counter({'male': 5})
</code></pre>
<p>Or, if you need empty counts also:</p>
<pre><code>gender = {'male': 0, 'female': 0}
gender.update(Counter(x[1] for x in studentPerf))
# {'male': 5, 'female': 0}
</code></pre>
<p>Or, using <code>dict.fromkeys()</code> with <code>Counter</code>:</p>
<pre><code>d = {'male', 'female'}
gender = dict.fromkeys(d, 0)
gender.update(Counter(x[1] for x in studentPerf))
# {'female': 0, 'male': 5}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the expected output is <code>{'male':5, 'female':0}</code>, consider using a <code>Counter</code>.</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; c = Counter(male=0, female=0)
&gt;&gt;&gt; c.update(gen for _, gen, _ in studentPerf)
&gt;&gt;&gt; c
Counter({'female': 0, 'male': 5})
</code></pre>
<p>Initializing the two keys with zeros is not really necessary, you could also write</p>
<pre><code>&gt;&gt;&gt; c = Counter(gen for _, gen, _ in studentPerf)
&gt;&gt;&gt; c
Counter({'male': 5})
</code></pre>
<p>because <code>Counter</code> lookup defaults to zero for missing keys:</p>
<pre><code>&gt;&gt;&gt; c['female']
0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I said, I was looking for a solution that did not require outside packages.  I know the way I've gone about this is rather cumbersome but this was for a class and the exercise had these requirements.  I found a way to count all of the males and females and input those values into the dictDemGender dictionary.</p>
<pre><code>genCounts = ([x[1] for x in list(studentPerf.keys())].count('female'), [x[1] for x in list(studentPerf.keys())].count('male'))
dictDemGender = dict(zip(dictDemGender.keys(), genCounts))
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/53368240/how-do-i-fill-my-dictionary-values-with-the-values-from-another-dictionary-where">How do I fill my dictionary values with the values from another dictionary where their keys are the same?</a></span>
<span class="comment-copy">What exactly is the expected output? <code>{'male':5, 'female':0}</code>?</span>
<span class="comment-copy">You asked a similar question yesterday. What have you tried on your own?</span>
<span class="comment-copy">expected output is {'male':5, 'female:'0'}  (of course with the full studentPerf dictionary those numbers will be much higher.</span>
<span class="comment-copy">@slider , I'm not sure if you've seen my post edits yet or not.  After I posted yesterday I realized I made a mistake and was looking for the wrong output.  I was able to come up with a solution on my own that fit the criteria and I posted that solution here</span>
