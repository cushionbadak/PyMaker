<div class="post-text" itemprop="text">
<p>I am getting a syntax error while trying to index a python dict:</p>
<pre><code>(Pdb) o_model.flows
{(&lt;oemof.solph.network.Bus object at 0x7f3e9c6b3ea8&gt;, &lt;oemof.solph.network.Transformer object at 0x7f3e9c52ce08&gt;): &lt;oemof.solph.network.Flow object at 0x7f3e9c50d5f8&gt;}
</code></pre>
<p>Here is the key of the dict.:</p>
<pre><code>(Pdb) o_model.flows.keys()
dict_keys([(&lt;oemof.solph.network.Bus object at 0x7f3e9c6b3ea8&gt;, &lt;oemof.solph.network.Transformer object at 0x7f3e9c52ce08&gt;)])
</code></pre>
<p>So what I am assuming is the <strong>key of the dict</strong> is <code>(&lt;oemof.solph.network.Bus object at 0x7f3e9c6b3ea8&gt;, &lt;oemof.solph.network.Transformer object at 0x7f3e9c52ce08&gt;)</code></p>
<p>Problem is that I get an syntax error, while trying to index the <code>o_model.flows</code> with the key, which is mentioned above.</p>
<p>Normally I was expecting to get the value(<code>&lt;oemof.solph.network.Flow object at 0x7f3e9c50d5f8&gt;</code>) of the dict via, but instead I get an syntax error:</p>
<pre><code>(Pdb) o_model.flows[(&lt;oemof.solph.network.Bus object at 0x7f3e9c6b3ea8&gt;, &lt;oemof.solph.network.Transformer object at 0x7f3e9c52ce08&gt;)]
*** SyntaxError: invalid syntax
</code></pre>
<p>What I do wrong?</p>
<p>Some Extras:</p>
<pre><code>(Pdb) type(o_model.flows)
&lt;class 'dict'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your key is a tuple of two objects (Bus, Transformer), so in order to index it, I suppose you have to store that tuple somewhere when that dictionary is created in order to access it later or to extract the key. You can use this:</p>
<pre><code>my_key = list(o_model.flows.keys())[0]
print(o_model.flows[my_key])
</code></pre>
<p>Example:</p>
<pre><code>test = {("qwe","zxc"): [4,5,6]}
print(test.keys()) # dict_keys([('qwe', 'zxc')])
my_key = list(testprint(.keys())[0]
print(flow[my_key]) # [4 5 6]
</code></pre>
<ul>
<li><strong>Why can't just type <code>(&lt;oemof.solph.network.Bus object at 0x7f3e9c6b3ea8&gt;, &lt;oemof.solph.network.Transformer object at 0x7f3e9c52ce08&gt;)</code> as key?</strong></li>
</ul>
<p>Because that is just the human-readable representation of that objects given that there is no string assigned for printing. Common keys, as strings, are also objects at certain location e.g. <code>(&lt;str object at 0x7f45f4f52c36&gt;)</code>, but its bytes are intended to be interpreted as characters when printed.</p>
<p>So you don't use what is printed for indexing, you should use the object itself.</p>
<p><strong>Example:</strong></p>
<pre><code>class ObjNoStr():
    def __init__(self, x):
        self.x = x

class ObjStr():
    def __init__(self, x):
        self.x = x

    def __str__(self):
        return "I have x: %d" % self.x

o1 = ObjNoStr(3)
o2 = ObjStr(3)
print(o1) # &lt;__main__.ObjNoStr object at 0x7f36d38469b0&gt;
print(o2) # I have x: 3
</code></pre>
</div>
<span class="comment-copy">this is not the key of the dictionary, only a represenation !!!!!!!</span>
<span class="comment-copy">how would I get the key then?</span>
<span class="comment-copy">I have no idea what a <code>oemof.solph.network.Bus object</code> is (presumably it's a class defined in some library you're using) - but it's definitely not the same as a dict</span>
<span class="comment-copy">First, just check values in dictionary - use <code>print</code> function. I guess you'll find out, that that one value is not dictionary key...</span>
<span class="comment-copy"><b>You can iterate over a dict without needing to know its keys, see <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer"><code>values()</code>, <code>items()</code></a></b>. But this dict looks really painful, show us the code that generated <code>o_model.flows</code>. Its keys are not strings, they're lists of objects. Handling those keys would just be a pain. So don't construct it that way, if at all possible.</span>
<span class="comment-copy">this works, but I don't understand why I have to store it? why can't I just type it between <code>[brackets]</code></span>
<span class="comment-copy">Hi @oakca I updated the answer.</span>
