<div class="post-text" itemprop="text">
<p>i have the following json template</p>
<p>template.py</p>
<pre><code>from string import Template

test1 = Template(u'''\
{
    "data": {
       "name": "$name"
    }
}
''')
</code></pre>
<p>and to generate the JSONs I use
JSONGen.py</p>
<pre><code>import template

class JSONGen:
    result1 = template.test1.safe_substitute(
        name = 'SomeName'
    )
    print(result1)
</code></pre>
<p>now that works, it produces the JSON but i'm trying to create a function that accepts the template name and calls it something like</p>
<p>JSONGenV2.py</p>
<pre><code>import template

class JSONGenV2:

    def template_func(self, templateName):
        generatedTemplate = template.templateName.safe_substitute(
            name = 'SomeName'
        )

        print (generatedTemplate)

    template_func(test1)
</code></pre>
<p>now what i want to achieve is to use 'templateName' contents to be the template to call, as it is right now </p>
<pre><code>template.templateName.safe_substitute
</code></pre>
<p>gives me an error saying 'templateName' doesn't exist, how can 'templateName' be a changed to the value passed in tihs case 'test1' so it would call </p>
<pre><code>template.test1.safe_substitute
</code></pre>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html?highlight=getattr#getattr" rel="nofollow noreferrer"><code>getattr()</code></a>, usage like this:</p>
<blockquote>
<p><strong><code>getattr</code><em></em></strong>(object, name[, default])</p></blockquote></div>
<div class="post-text" itemprop="text">
<p>You need a way to convert a template name to instance of the actual template.<br/>
I would define a dictionary with the keys being the template name, and value being the template instance.</p>
<pre><code>test1 = Template(...)
test2 = Template(...)
templates = {
    'test1': test1
    'test2': test2
}
</code></pre>
<p>Now in your method you could use the templates dictionary to get the instance of the template you requested:</p>
<pre><code>def template_func(self, templateName):
    generatedTemplate = templates[templateName].safe_substitute(
        name = 'SomeName'
    )
    print (generatedTemplate)
</code></pre>
<p>And you would call the method like so: <code>template_func('test1')</code></p>
</div>
<span class="comment-copy">You have to rethink your question title, so others can find your question better</span>
<span class="comment-copy">That is not a safe way to generate JSON. The "safe" in the method name doesn't mean that.</span>
<span class="comment-copy">thank you @idlehands this is exactly what i was looking for</span>
