<div class="post-text" itemprop="text">
<p>I've been stuck on this task for a while. I've managed to generate 1500 coordinates that give me a float between 0 and 2 (x,y), using the code below.</p>
<pre><code>coordinates = [(random.random()*2.0, random.random()*2.0) for _ in range(15000)]
print(coordinates)
</code></pre>
<p>However now I need to create a counter that counts the number of floats between 0 and 1 and outputs it to the user. Ive tried using If statements and while loops. I've also had a snoop around the internet and am unable to find anything of use. Does anyone know how to work this out?</p>
<p>Kind regards.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a simple conditional <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum()</code></a> over your tuples and sum up <em>1</em> if <code>x</code> or/and <code>y</code> are smaller then <code>1</code>:</p>
<pre><code>import random

# your code used 15k tuples, your text says 1.5k - adapt the number to your liking
coordinates = [(random.random()*2.0, random.random()*2.0) for _ in range(1500)]

one_lower_1  = sum(1 for x,y in coordinates if x &lt; 1 or  y &lt; 1)
both_lower_1 = sum(1 for x,y in coordinates if x &lt; 1 and y &lt; 1)
x_lower_1    = sum(1 for x,_ in coordinates if x &lt; 1)
y_lower_1    = sum(1 for _,y in coordinates if y &lt; 1)

print(one_lower_1)
print(both_lower_1)
print(x_lower_1)
print(y_lower_1)
</code></pre>
<p>Output</p>
<pre><code>1134
383
745
772
</code></pre>
<p>This is essentially a generator expression that filters out only those pairs that match the part after <code>if ....</code> from your generated <code>coordinates</code></p>
<hr/>
<p>I choose the <code>sum(1 ... )</code> approach because that way you do not have to create a list to take its <code>len()</code>  ... it is more memory friendly if you just need the count of elements then producing all the elements.</p>
<hr/>
<p>Alternate way from <a href="https://stackoverflow.com/users/9209546/jpp">jpp's</a> comment:</p>
<pre><code>sum(x &lt; 1 or  y &lt; 1 for x,y in coordinates)
</code></pre>
<p>this works because a sum over 10 <code>True</code> 's give 10 - each <a href="https://docs.python.org/3.7/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">True counting as 1</a>:</p>
<pre><code>print(sum(True for _ in range(10))) # 10
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should get you started. It's another list comprehension checking your list of coordinate pairs to see if each x and y is within the interval (0,1).</p>
<pre><code>from random import random

print(len([(x,y) for x,y in [(2*random(),2*random()) for _ in range(1500)] if 0 &lt; x &lt; 1 and 0 &lt; y &lt; 1]))
</code></pre>
<p>If your only goal is to count all the pairs such that the x,y pairs are in the interval (0,1) then while loop would be more efficient by avoiding creating lists.</p>
<pre><code>def rand_coordinates(num_of_pairs):
"""Counts the number of randomly generated x,y 
pairs in the range of [0,2) where x and y are 
contained in the interval from (0,1)"""
count = 0
while num_of_pairs:
    x,y = 2*random(),2*random()
    if 0 &lt; x &lt; 1 and 0 &lt; y &lt; 1:
        count += 1
    num_of_pairs -= 1
return count
</code></pre>
</div>
<span class="comment-copy">what exactly did you try?</span>
<span class="comment-copy">I doubt you did much cheking, but this is just simply a matter of check if the number is between 0 and 1.</span>
<span class="comment-copy">I spent a lot of time looking at other people who have had similar problems to me , they did get answers but I was unable to apply them to my code due to me constantly getting a Type Eroor</span>
<span class="comment-copy">I dont have much experience in python unfortunately, I'm currently in my first year of A levels</span>
<span class="comment-copy">also javajav , how do I check 10,000 values individually to see whether theyre between 0 and 1</span>
<span class="comment-copy">amazing, thank you so much Patrick!</span>
<span class="comment-copy">You can also use the fact <code>bool</code> is a subclass of <code>int</code>, e.g. <code>sum(x &lt; 1 and y &lt; 1 for x,y in coordinates)</code></span>
<span class="comment-copy">@jpp neat one - added it</span>
