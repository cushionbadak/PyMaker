<div class="post-text" itemprop="text">
<p>I currently have a problem where I want to get a list of directories that are at an n-1 level. The structure looks somewhat like the diagram below, and I want a list of all the folders that are blue in color. The height of the tree however, varies across the entire file system. </p>
<p><a href="https://i.stack.imgur.com/lcYir.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/lcYir.png"/></a></p>
<p>Due to the fact that all the folders that are blue, generally end their name with the string <code>images</code>, I have written the code in <code>Python</code> below: </p>
<pre><code>def getDirList(dir):
    dirList = [x[0] for x in os.walk(dir)]
    return dirList

oldDirList = getDirList(sys.argv[1])

dirList = []

# Hack method for getting the folders
for i, dir in enumerate(oldDirList):
    if dir.endswith('images'):
        dirList.append(oldDirList[i] + '/')
</code></pre>
<p>Now, I do not want to use this method, since I want a general solution to this problem, with <code>Python</code> or bash scripting and then read the bash script result into <code>Python</code>. Which one would be more efficient in practice and theoretically? </p>
</div>
<div class="post-text" itemprop="text">
<p>To rephrase what I think you're asking - you want to list all folders that do not contain any subfolders (and thus contain only non-folder files).</p>
<p>You can use <code>os.walk()</code> for this pretty easily. <code>os.walk()</code> returns an iterable of three-tuples (<code>dirname</code>, <code>subdirectories</code>, <code>filenames</code>). We can wrap a list comprehension around that output to select only the "leaf" directories from a file tree - just collect all the <code>dirnames</code> that have no subdirectories.</p>
<pre><code>import os

dirList = [d[0] for d in os.walk('root/directory/path') if len(d[1]) == 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So another way to state your problem is that you want all folders that contain no subfolders? If that's the case then you can make use of the fact that os.walk lists all the subfolders within a folder. If that list is empty, then append it to <code>dirList</code></p>
<pre><code>import os
import sys

def getDirList(dir):
    # x[1] contains the list of subfolders
    dirList = [(x[0], x[1]) for x in os.walk(dir)]
    return dirList

oldDirList = getDirList(sys.argv[1])

dirList = []

for i, dir in enumerate(oldDirList):
    if not dir[1]:    # if the list of subfolders is not empty
        dirList.append(dir[0])

print dirList
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>today I had a similar problem. </p>
<p>Try pathlib: <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">https://docs.python.org/3/library/pathlib.html</a></p>
<pre><code>from pathlib import PurePath
import os, sys

#os.getcwd() returns path of red_dir if script is inside
gray_dir = PurePath(os.getcwd()).parents[1]  # .parents[1] returns n-1 path 
blue_things = os.listdir(gray_dir)


blue_dirs = []
for thing in blue_things:
    if os.path.isdir(str(gray_dir) + "\\" + str(thing)):  # make sure not to append files
        blue_dirs.append(thing)

print(blue_dirs)
</code></pre>
</div>
<span class="comment-copy">yeah this would be an O(n) solution in a pythonic waay too.</span>
