<div class="post-text" itemprop="text">
<p>I'm using Kafka with Avro messages. One of my fields is defined like this:</p>
<pre><code>{ 
    "name": "a_number", 
    "type": "bytes", 
    "logicalType": "decimal", 
    "precision": 4, 
    "scale": 4 
}
</code></pre>
<p>Using the Avro console consumer, I see a message like this:</p>
<pre><code>{"a_number": "\t\u0000°"}
</code></pre>
<p>Which I expect to equal <code>59</code>.</p>
<p>Supposedly, the bytearray <a href="https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#toByteArray()" rel="nofollow noreferrer">should be the twos-compliment of the number</a>. I've tried using Python's <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer"><code>struct</code></a> module to decode it, but the values I get don't make any sense:</p>
<pre><code>bs = '\t\u0000°'.encode('utf8')    # b'\t\x00\xc2\xb0'
struct.unpack('&gt;l', bs)[0] / 1e4   # 15104.4784
</code></pre>
<p>How can I validate the message? Can I decode the string somehow, or has the Avro console consumer corrupted it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be going about this the Hard Way. The approach suggested by <a href="https://stackoverflow.com/questions/25006273/how-to-extract-schema-for-avro-file-in-python">How to extract schema for avro file in python</a> is to use:</p>
<pre><code>reader = avro.datafile.DataFileReader(open('filename.avro',"rb"),avro.io.DatumReader())
schema = reader.meta
</code></pre>
<p>Single stepping in a debugger to see how the reader decodes your messages should get you closer to assembling a "raw" hand engineered decode.</p>
</div>
<span class="comment-copy">For comparison: <code>struct.pack('&gt;l', int(59 * 1e4)) == b'\x00\t\x00\xb0'</code></span>
<span class="comment-copy">Are you sure that you want to encode high ASCII values as UTF-8? They will gain at least one additional byte, then, which will influence the total value. That said, at least you will <i>get</i> 4 bytes. Your sample string defines only 3.</span>
<span class="comment-copy">@usr2564301 Yeah, I'm not sure - it does seem weird. The reason I chose UTF-8 is that that's what JSON uses to encode strings, and the output of the Avro console consumer is (apparently) JSON. I am a bit suss on that string; I would have expected it to write something in Base64 or so.</span>
<span class="comment-copy">Yep fair point. I don't have a <code>.avro</code> file to read, but maybe I should just write a little Python script using an <code>AvroConsumer</code> instead of the (presumably) Java-based console consumer to test it.</span>
