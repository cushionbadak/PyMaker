<div class="post-text" itemprop="text">
<p>I have a table of strings where the final column is the 'time' is written as below:</p>
<pre><code>['7:15','6:27','5:24','2:50','4:39','5:11','2:56','4:29','3:17','3:04']
</code></pre>
<p>I would like to present the largest and smallest from this list, with the <strong>restriction</strong> being I <strong>cannot import any modules</strong> (it's not my choice to). </p>
<p>While I thought of comparing the first character of each element as an int, then if there is a tie, looking at the 2nd number to compare, it seems like there could be a better way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer"><code>list.sort</code></a> method with your own key function:</p>
<pre><code>l = ['7:15','6:27','5:24','2:50','4:39','5:11','2:56','4:29','3:17','3:04']
l.sort(lambda s: [int(i) for i in s.split(':')])
</code></pre>
<p>which modifies <code>l</code> to:</p>
<pre><code>['2:50', '2:56', '3:04', '3:17', '4:29', '4:39', '5:11', '5:24', '6:27', '7:15']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The traditional method <em>is</em> to use an imported module, e.g. <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer"><code>datetime.timedelta</code></a> from <code>stlib</code>. However, given your restriction you can calculate minutes in each "time delta" string and then sort:</p>
<pre><code>def sorter(x):
    hrs, mins = map(int, x.split(':'))
    return 60*hrs + mins

res = sorted(L, key=sorter)

print(res)

['2:50', '2:56', '3:04', '3:17', '4:29', '4:39', '5:11', '5:24', '6:27', '7:15']
</code></pre>
</div>
