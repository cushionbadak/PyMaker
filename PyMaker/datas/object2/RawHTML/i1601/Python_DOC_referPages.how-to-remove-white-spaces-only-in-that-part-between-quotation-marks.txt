<div class="post-text" itemprop="text">
<p>I have the following string. I have to remove white spaces only in the part that is between single quotations. Rest of the part should be intact in the line, </p>
<pre><code>+amk=0 nog = 0 nf=1 par=1 mg =0.34e-6 sd='((nf != 1) ? (nf-1)) :0)' sca=0 scb=0 scc=0  pj='2* ((w+7.61e-6) + (l+8.32e-6 ))'
</code></pre>
<p>So the output should be </p>
<pre><code>+amk=0 nog = 0 nf=1 par=1 mg =0.34e-6 sd='((nf!=1)?(nf-1)):0)' sca=0 scb=0 scc=0  pj='2*((w+7.61e-6)+(l+8.32e-6))'
</code></pre>
<p>Is it possible to do this with a single Regex statement ? or needed multiple lines ?</p>
</div>
<div class="post-text" itemprop="text">
<p>As an alternative, you might want to consider finite state machine. I always forget the library, but it's super simple to create it on your own. Something like this:</p>
<pre><code>def remove_quoted_whitespace(input_str):
    """
    Remove space if it is quoted.

    Examples
    --------
    &gt;&gt;&gt; remove_quoted_whitespace("mg =0.34e-6 sd='((nf != 1) ? (nf-1)) :0)'")
    "mg =0.34e-6 sd='((nf!=1)?(nf-1)):0)'"
    """
    output = []
    is_quoted = False
    quotechars = ["'"]
    ignore_chars = [' ']
    for c in input_str:
        if (c in ignore_chars and not is_quoted) or c not in ignore_chars:
            output.append(c)
        if c in quotechars:
            is_quoted = not is_quoted
    return ''.join(output)
</code></pre>
<p>See also: <a href="https://stackoverflow.com/a/16147471/562769">Is list join really faster than string concatenation in python?</a></p>
</div>
<span class="comment-copy">try lookbehind and lookahead assertions to extract just that part. <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">Thanks Martin. That was a great code. Where I can find more information to learn and code FSM in python</span>
