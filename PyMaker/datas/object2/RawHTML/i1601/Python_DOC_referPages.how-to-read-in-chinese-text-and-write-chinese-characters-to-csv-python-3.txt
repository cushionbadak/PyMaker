<div class="post-text" itemprop="text">
<p>I've searched SO but have not been able to find the answer to this specific problem. I am trying to read in from a .txt file of Chinese characters. When I try to write to a .csv, the contents of cells look like this:</p>
<p>b'\xef\xbb\xbf\xe5' </p>
<p>as opposed to:</p>
<p>山西襄汾</p>
<p>How can I output to a .csv the latter format? Snippet of relevant code is below:</p>
<pre><code>infilehandle = open(infilepath, encoding = 'utf-8') # open .txt file
txtlines = infilehandle.read().replace('\n', '')
date_pattern = re.compile('(\d{4}.\d{1,2}.\d{1,2})')
date = date_pattern.findall(txtlines)[0]
title = txtlines.split(date)[0]
localrow = []
localrow.append(date.encode("utf-8-sig"))
localrow.append(title.encode("utf_8_sig"))
outfilehandle.writerow(localrow) # writes to .csv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, make sure to create <code>outfilehandle</code> with <code>encoding='utf-8'</code>, as suggested by <a href="https://stackoverflow.com/questions/53309456/how-to-read-in-chinese-text-and-write-chinese-characters-to-csv-python-3#comment93499784_53309456">Peter Wood</a>, like so:</p>
<pre><code>outfilehandle = csv.writer(open('outfile.csv', 'w', encoding='utf-8'))
</code></pre>
<p>Then there is no need to call <code>date.encode("utf-8-sig")</code>, just change lines 7-8 in your code snippet into:</p>
<pre><code>localrow.append(date)
localrow.append(title)
</code></pre>
<p>Also, it may be helpful to read <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">Python Unicode HOWTO</a> and <a href="http://python-notes.curiousefficiency.org/en/latest/python3/text_file_processing.html" rel="nofollow noreferrer">Processing Text Files in Python 3</a>.</p>
</div>
<span class="comment-copy">Was <code>outfilehandle</code> also created with <code>encoding='utf-8'</code>?</span>
<span class="comment-copy">If data items for <code>writerow</code> aren't strings, they are converted with <code>str</code> but <code>str(b'n') == "b'n'"</code></span>
<span class="comment-copy">How are you viewing the contents of the <code>.csv</code> file?</span>
<span class="comment-copy">Your snippet of code is not so relevant as you say it is. It seems to search for a sequence of digits and do something with them. Are you sure that is an important part of your problem?</span>
<span class="comment-copy">Peter, I am viewing the contents in Excel. I use the default to set outfilehandle, which I believe in Python 3 is utf-8 but I could be wrong.</span>
<span class="comment-copy">I modified my code, but the resulting cell contents now look like: å±±è¥¿è instead of the Chinese characters in the input text file. I have read through the links provided, but am unsure how to apply that information to writing to a csv. Thanks in advance.</span>
<span class="comment-copy">Realizing this is an Excel issue. Opening the file in Notepad displays the "correct" characters.</span>
<span class="comment-copy">@steven.m787 you may need to change Excel's encoding. see this: <a href="https://www.itg.ias.edu/content/how-import-csv-file-uses-utf-8-character-encoding-0" rel="nofollow noreferrer">itg.ias.edu/content/…</a></span>
