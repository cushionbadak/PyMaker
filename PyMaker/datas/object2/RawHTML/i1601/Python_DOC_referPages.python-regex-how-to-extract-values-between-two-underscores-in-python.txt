<div class="post-text" itemprop="text">
<p>I am trying to extract values between two underscores. For that I have written this code:</p>
<pre><code>patient_ids = []
for file in files:
    print(file)
    patient_id = re.findall("_(.*?)_", file)
    patient_ids.append(patient_id)

print(patient_ids) 
</code></pre>
<p>Output:</p>
<pre><code>PT_112_NIM 26-04-2017_merged.csv
PT_114_NIM_merged.csv
PT_115_NIM_merged.csv
PT_116_NIM_merged.csv
PT_117_NIM_merged.csv
PT_118_NIM_merged.csv
PT_119_NIM_merged.csv
[['112'], ['114'], ['115'], ['116'], ['117'], ['118'], ['119'], ['120'], ['121'], ['122'], ['123'], ['124'], ['125'], ['126'], ['127'], ['128'], ['129'], ['130'], ['131'], ['132'], ['133'], ['134'], ['135'], ['136'], ['137'], ['138'], ['139'], ['140'], ['141'], ['142'], ['143'], ['144'], ['145'], ['146'], ['147'], ['150'], ['151'], ['152'], ['153'], ['154'], ['155'], ['156'], ['157'], ['158'], ['159'], ['160'], ['161'], ['162'], ['163'], ['165']]
</code></pre>
<p>So extracted values are in this form: ['121']. I want them in this form: 121 , i.e., just the number inside two underscores. </p>
<p>What change should I make to my code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Really, an easy way would be, instead of appending a <em>list</em> to another <em>list</em>, just make that list equivalent:</p>
<pre><code>patient_ids = []
for file in files:
    print(file)
    patient_ids.extend(re.findall("_(.*?)_", file))

print(patient_ids) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just replace the last line of your for loop by :</p>
<pre><code>patient_ids.extend(int(patient_id))
</code></pre>
<p>extend will flatten your results, and int(patient_id) will convert the string to int</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to flatten your results, e.g. <a href="https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python">like that</a>:</p>
<pre><code> patient_ids = [item for sublist in patient_ids for item in sublist]
 print flat_list
 # =&gt; ['112', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144', '145', '146', '147', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '165']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a list of findall results (which only ever is 1 result per file it seems) - you can either just convert the strings to integers or also flatten the result:</p>
<pre><code>patient_ids= [['112'], ['114','4711'], ['115'], ['116'], ['117'], ['118'], ['119']]
#                       ^^^^^ ^^^^^^  modified to have 2 ids for demo-purposes


# if you want to keep the boxing
numms   = [ list(map(int,m)) for m in patient_ids]  

# converted and flattened
numms2  = [ x for y in [list(map(int,m)) for m in patient_ids] for x in y]  


print(numms) 

print(numms2) 
</code></pre>
<p>Output:</p>
<pre><code># this keeps the findall results together in inner lists
[[112], [114, 4711], [115], [116], [117], [118], [119]]

# this flattens all results
[112, 114, 4711, 115, 116, 117, 118, 119]
</code></pre>
<p>Doku:</p>
<ul>
<li>you can find the doku for <code>map()</code> and <code>int()</code> at <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">Overview of built in functions</a></li>
</ul>
</div>
<span class="comment-copy">How about <code>int(patient_id[0])</code>?</span>
<span class="comment-copy">Try <code>int(re.search("_(\d*?)_", file).group(1))</code></span>
<span class="comment-copy">@usr2564301 I think you misunderstood...</span>
