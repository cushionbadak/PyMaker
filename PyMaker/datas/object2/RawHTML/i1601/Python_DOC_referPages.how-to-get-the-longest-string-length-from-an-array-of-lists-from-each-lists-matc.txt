<div class="post-text" itemprop="text">
<p>I have an array of lists in the form</p>
<pre><code>list = [['hello','hi','hey'],['where','when','why'],['him','herself','themselves']]
</code></pre>
<p>I want to compare the length of <code>list[0][0]</code> to <code>list[1][0]</code> and <code>list[2][0]</code>, basically all the first indexes, and obtain the length of the longest string size. </p>
<p>it must iterate through the list because the number of items and number of lists in the list can be any size.</p>
<p>for example, the answer of this should be</p>
<pre><code>length1 = 5
length2 = 6 #('herself' is longer than 'hi' and 'when')
length3 = 10
</code></pre>
<p>TIA!</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to create a variable number of variables. You can use either a list comprehension or a dictionary:</p>
<pre><code>L = [['hello','hi','hey'],['where','when','why'],['him','herself','themselves']]

# list comprehension
res_list = [max(map(len, i)) for i in zip(*L)]

[5, 7, 10]

# dictionary from enumerated generator expression
res_dict = dict(enumerate((max(map(len, i)) for i in zip(*L)), 1))

{1: 5, 2: 7, 3: 10}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Lots of ways to do it in Python.</p>
<pre><code>array = [['hello','hi','hey'],
         ['where','when','why'],
         ['him','herself','themselves']]

length1 = 0
for elem in array:
    if length1 &lt; len(elem[0]):
        length1 = len(elem[0])

length2 = max(array, key=lambda elem: len(elem[1]))

from itertools import accumulate
length3 = accumulate(array,
        lambda e1, e2: max(len(e1[2]), len(e2[2]))
</code></pre>
<p>As a side note it is generally not recommended to assign something to standard identifiers, like <code>list</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just go through the triples from <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> and print out the length of the longest word:</p>
<pre><code>lst = [['hello','hi','hey'],['where','when','why'],['him','herself','themselves']]

for i, triple in enumerate(zip(*lst), start=1):
    print('length%d = %d' % (i, len(max(triple, key=len))))

# length1 = 5
# length2 = 7
# length3 = 10
</code></pre>
<p>Or as a dictionary:</p>
<pre><code>{'length%d' % i: len(max(e, key=len)) for i, e in enumerate(zip(*lst), start=1)}
# {'length1': 5, 'length2': 7, 'length3': 10}
</code></pre>
<p>Which is nicer than storing variables for each length. </p>
</div>
<span class="comment-copy">Please include your code that is not producing the desired output</span>
<span class="comment-copy">Please show the code you've tried so far and the results you got.</span>
<span class="comment-copy">I think you want <code>length2 = 7</code> as <code>'herself'</code> has 7 characters.</span>
