<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3283984/decode-hex-string-in-python-3">Decode Hex String in Python 3</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to convert IEEE 754 floats in hex to standard python floats.</p>
<p>The following works in Python 2.x : </p>
<pre><code>foo ='4074145c00000005'
conv_pound = struct.unpack('!d', foo.decode('hex'))[0]
print(conv_pound)
</code></pre>
<p>and produces the following output (which is indeed the number that I want):</p>
<pre><code>321.272460938
</code></pre>
<p>However, python 3 does not have a str.decode method and I'm struggling to find how to do this. Any tips ?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#bytes.fromhex" rel="noreferrer"><code>bytes.fromhex()</code></a> worked for me in python3:</p>
<pre><code>Python 3.6.6 (default, Sep 12 2018, 18:26:19) 
[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; foo ='4074145c00000005'
&gt;&gt;&gt; import struct
&gt;&gt;&gt; struct.unpack('!d', bytes.fromhex(foo))
(321.2724609375003,)
&gt;&gt;&gt; struct.unpack('!d', bytes.fromhex(foo))[0]
321.2724609375003
</code></pre>
</div>
<span class="comment-copy">I've tried that but unless I'm missing something I'm getting @t\x14\\\x00\x00\x00\x05' as the result</span>
<span class="comment-copy">Definitely <i>not</i> a duplicate because the methods showed in "duplicate" will give a string and not a bytes object. In this case as the answer belows shows, we have to stop halfway.</span>
<span class="comment-copy">@kriss Well, the OP already had the other half, they just had to put 2 and 2 together.  Definitely a dupe.</span>
<span class="comment-copy">@Wim: definitely not a dupe that's like pretending bytes type is a duplicate of str type in python. Wreacks havoc! Of course some people can get the answer by themselves and don't need SO.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/library/stdtypes.html#float.fromhex" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#float.fromhex</a></span>
<span class="comment-copy">Thank you very much, I had the pieces but I struggled to put them together</span>
<span class="comment-copy">@user3352975 you're welcome!</span>
