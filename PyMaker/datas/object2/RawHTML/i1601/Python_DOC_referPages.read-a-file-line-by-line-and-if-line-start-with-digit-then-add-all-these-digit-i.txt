<div class="post-text" itemprop="text">
<p>I have a .txt file like this</p>
<pre><code>name John 
25 45 23 67
name Ahmed 
65 21 35
</code></pre>
<p>I want to read this file line by line and check that whether the line starts with alphabet or digit. If the line starts with digit then add all these digits in that line and print sum. and if the line starts with alphabet then simply print any message.
I have tried this code</p>
<pre><code>f=open(r"E:\test.txt","r")
for line in f:
    if line[0].isnumeric()== True:
            for i in line:
                    total = total + line[i]
                    print(total)

    elif line[0].isalpha()==True:
            print("line starts with alpha")
</code></pre>
<blockquote>
<p>NameError: name 'total' is not defined</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><code>total</code> is undefined - and you do not need it:</p>
<p>Create file:</p>
<pre><code>with open("k.txt","w") as f:
    f.write("""name john 
25 45 23 67
name ahmed 
65 21 35
""")
</code></pre>
<p>Process file:</p>
<pre><code>with open("k.txt","r") as r:
    for line in r:
        if line and line[0].isdigit():  # no need to compare against True 
            print(sum(map(int,line.rstrip().split())))
        else: 
            print(line.strip())
</code></pre>
<p>Output:</p>
<pre><code>name john
160
name ahmed
121
</code></pre>
<p><strong>Explanation of <code>sum(map(int,line.rstrip().split()))</code>:</strong></p>
<p>this takes the whole <code>line</code>, <code>split()</code>'s it at whitespaces into a list <code>["25", "45", "23", "67"]</code> of strings. <code>map(func, iterable)</code> applies a function to all elements of the iterable and returns a generator of it which is summed up by <code>sum()</code>:</p>
<pre><code>"25 45 23 67" -&gt; ["25", "45", "23", "67"] -&gt; (25,45,23,67) -&gt; 160
</code></pre>
<p>Readup:</p>
<ul>
<li>you can find most of the function I used at <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">python built in functions</a>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map()</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">int()</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum()</a></li>
</ul></li>
<li>the rest are string functions:

<ul>
<li><a href="https://docs.python.org/3.7/library/stdtypes.html#str.split" rel="nofollow noreferrer">split()</a></li>
<li><a href="https://docs.python.org/3.7/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer">rstrip()</a></li>
</ul></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>It was some error in your code.
First, <code>total</code> is not initialised, you should add</p>
<pre><code>total = 0
</code></pre>
<p>After, iterate on <code>line</code> will give you :</p>
<pre><code>2
5
{space}
4
...
</code></pre>
<p>I think you want split the line and get number one by one:</p>
<pre><code>for i in line.split(' '):
    total = total + int(i)
print(total)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python interpreter doesn't know how to do this <code>total = total + line[i]</code> because <code>total</code> isn't initialized. 
Just initialize it like this, for example (or in any place you think it would be right):</p>
<pre><code>f=open(r"E:\test.txt","r")
for line in f:
    if line[0].isnumeric()== True:
            total=""
            for i in line:
                    total = total + line[i]
                    print(total)

    elif line[0].isalpha()==True:
            print("line starts with alpha")
</code></pre>
<p>PS And if you want to sum numbers instead of string concatenation, you should initialize <code>total</code> as <code>total = 0</code> and add <code>line[i]</code> like this <code>total = total + int(line[i])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Parse the string of number to a list of integers with <code>map</code> and make the addition with <code>numpy</code>:</p>
<pre><code>import numpy as np

f = open('test.txt','r')
for line in f:
    if line[0].isnumeric():
            print(np.sum(list(map(int, line.split()))))
    elif line[0].isalpha():
            print("line starts with alpha")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As always, many ways lead to the desired result.
My approach would be</p>
<pre><code>with open('E:/test.txt', 'r') as f:
    for line in f:
        if line[0].isnumeric():
            print(sum([int(d) for d in line.split()]))    
        elif line[0].isalpha():
            print("line starts with a letter")
</code></pre>
<ul>
<li>using with is convenient as it closes the file for you, even if an error occurs</li>
<li><code>isnumeric()</code> and <code>isaplpha</code> return bools - no need to additionally test them against <code>True</code></li>
<li>a so called <em>list comprehension</em> (a one-line-for-loop in square brackets) creates a list on the fly and allows processing each value while adding it to the list; the resulting list can esily summed up and printed</li>
</ul>
</div>
<span class="comment-copy">initialize <code>total</code>. Always keep in mind that <code>NameError</code> is raised when the <code>Name</code> is not found globally.(In this case it's <code>total</code>)</span>
<span class="comment-copy">if you <i>really</i> want to add the <i>digits</i>, i.e. numbers from 0-9, then your code is quite there, just lacking a cast from string to int. But I guess you want to add e.g. <code>25+45+23+67</code>, so you should use <code>for i in line.split():</code></span>
<span class="comment-copy"><code>' ' </code> is the default for <code>str.split()</code>, so you can leave it away</span>
<span class="comment-copy">i know, but i prefer let it for beginer, it's less ambiguous and it helps to better understand how the function works</span>
