<div class="post-text" itemprop="text">
<p>I get an <code>IndexError: list index out of range</code> error when using the <code>--todir</code> option in Google's Python Exercise <code>copyspecial.py</code>. How can I resolve this issue? What confuses me the most is that the part of code causing it is what was written by the instructor (from Google/Standford). I can only assume some syntactic error has spilled into other lines of code or that built in function syntax has changed since Python 2.7. This exercise code was written in 2.7.</p>
<p>The file works when no option is used, as so: </p>
<blockquote>
<p>Printing list of special files</p>
<p>C:.\gpe\copyspecial\xyz__hello__.txt</p>
<p>C:.\gpe\copyspecial\zz__something__.jpg</p>
<p>done</p>
</blockquote>
<p>This is the error:</p>
<p><a href="https://i.stack.imgur.com/j2H5L.png" rel="nofollow noreferrer"><img alt="error" src="https://i.stack.imgur.com/j2H5L.png"/></a></p>
<p>The code:</p>
<pre><code>def main():
  # This basic command line argument parsing code is provided.
  # Add code to call your functions below.

  # Make a list of command line arguments, omitting the [0] element
  # which is the script itself.
  args = sys.argv[1:]
  if not args:
    print "usage: [--todir dir][--tozip zipfile] dir [dir ...]";
    sys.exit(1)

  # todir and tozip are either set from command line
  # or left as the empty string.
  # The args array is left just containing the dirs.
  todir = ''
  if args[0] == '--todir':
    todir = args[1]
    del args[0:2]

  tozip = ''
  if args[0] == '--tozip':
    tozip = args[1]
    del args[0:2]

  if len(args) == 0:
    print "error: must specify one or more dirs"
    sys.exit(1)

  # +++your code here+++
  # Call your functions
</code></pre>
<p>All the aforementioned code is straight from google.com. My code comes before main() is defined and after where it says <code># +++your code here+++</code></p>
<p>I have spent hours trying to resolve this. I've learned a lot, but not the solution.</p>
<ol>
<li>I've tried changing indentations.</li>
<li>I've tried doing <code>sys.exit(1)</code> nest under the '<code>--todir</code>' '<code>if</code>', but the program keeps running down into the '<code>if tozip</code>' part, which leads me to believe it's syntactical. But I can't find a misplaced <code>()</code> or <code>:</code>. I also checked indentations.</li>
<li>I've tried adding an '<code>if args[0]:</code>' check, but it doesn't work, because as I later learned, although an empty list <code>('args[0]' = [])</code>, Python does not interpret it as an actual '<code>False</code>' value.</li>
<li>The list goes on</li>
</ol>
<p>I really appreciate the opportunity to have my question heard by the community at stackoverflow, and even more so as a first time poster.</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as I can see your third try should work if you do it right:</p>
<pre><code>tozip = ''
if args and args[0] == '--tozip':
  tozip = args[1]
  del args[0:2]
</code></pre>
<p>This actually checks the list <code>args</code>. If it is empty (<code>[]</code>), it is considered False and the second test <code>args[0] == '--tozip'</code> does not get evaluated.</p>
<p>Your problem is that <code>args</code> itself is an empty list which <strong>does</strong> evaluate to <code>False</code> (see <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow">https://docs.python.org/2/library/stdtypes.html#truth-value-testing</a>), hence you cannot access <code>args[0]</code> and checking for it results in the same <code>Indexerror</code>.</p>
<p>However, you would still get an <code>IndexError</code> if you only pass one of the parameters without the argument because you access <code>args[1]</code> without testing.</p>
<p><strong>EDIT (Why doesn't the code run as is?):</strong> I don't think any python versions &gt;=2.4 would interpret this differently but I have no proof. This argument passing is very basic. Checking for malformed user input is always quite "annoying" because you have to handle every possible input which results in a lot of code. If you want to go into more detail of argument passing I recommend the <code>argparse</code> module (<a href="https://docs.python.org/2.7/library/argparse.html" rel="nofollow">2.7</a>, <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">3.5</a>). My feeling is that to avoid having a large part of the exercise file that has nothing to do with the exercise they just left it that simple. If you don't supply at least one file path as a parameter you will get an error message in the next step anyway:</p>
<pre><code>if len(args) == 0:
  print "error: must specify one or more dirs"
  sys.exit(1)
</code></pre>
<p>So the code <strong>does</strong> run as is. You just have to supply the right parameters.</p>
</div>
<span class="comment-copy">Thank you! That does the trick. However, I'm still confused, because this code comes from a very reputable source and that particular set of lines of code are supposed to run as is. Would previous versions of Python interpret those functions differently?</span>
<span class="comment-copy">I edited my answer.</span>
<span class="comment-copy">I removed the additional argument passing you had originally provided and did indeed see that the original code works. What I learned was how to properly interpret the command line usage guide. "usage: [--todir dir][--tozip zipfile] dir [dir ...]" means "--todir dir-its-going-to directory-to-check". I was omitting the second dir, the directory to check. Thanks again!</span>
