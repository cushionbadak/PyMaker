<div class="post-text" itemprop="text">
<p>What would be the best way to read the first couple of bytes of an opened file without messing with the file position? Is this too much jumping around:</p>
<pre><code>current_position = f.tell()

f.seek(0)
b1 = f.read(1)
b2 = f.read(1)

f.seek(current_position, 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/os.html#os.pread" rel="nofollow"><code>os.pread(fd, buffersize, offset)</code></a> but that was only added in Python 3.3. Like this: </p>
<pre><code>os.pread(f.fileno(), 2, 0)
</code></pre>
<p>to read the 2 bytes at the start of the file.</p>
<p>Another option would be to duplicate the <code>fd</code> and then seek on the duplicate and then close the duplicate: </p>
<pre><code>d = os.dup(f.fileno())
os.lseek(d, 0, 0)
b1 = os.read(d, 1)
b2 = os.read(d, 1)
os.close(d)
</code></pre>
<p>Why can't file objects be duplicated directly?</p>
</div>
<span class="comment-copy">What are you trying to achieve? Why not store the first few bytes when you first open the file?</span>
<span class="comment-copy">i see nothing wrong with this code.</span>
<span class="comment-copy">The file 'position' you're referring to is just a small integer that acts rather like a bookmark. It's really not that big of a deal to move it.</span>
<span class="comment-copy">it's a utility function that doesn't know what state the file will be in when it receives it. If the seek calls are random access this becomes a stupid question.</span>
<span class="comment-copy">You could use <code>os.pread</code> but that was only added in Python 3.3. Like this: <code>os.pread(f, 2, 0)</code> to read the 2 bytes at the start of the file.</span>
