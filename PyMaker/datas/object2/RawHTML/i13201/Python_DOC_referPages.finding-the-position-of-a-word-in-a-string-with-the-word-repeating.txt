<div class="post-text" itemprop="text">
<p>Here's my code:</p>
<pre><code>sentence= input("Enter a sentence")
keyword= input("Input a keyword from the sentence")
words = sentence.split(' ')
if keyword in words:
    pos = words.index(keyword)
    pos = 0+1
    print(pos)
</code></pre>
<p>Right, so this is what i have but if the word repeats then it only shows the first position. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>sentence= input("Enter a sentence")
keyword= input("Input a keyword from the sentence")
words = sentence.split(' ')
for (i, subword) in enumerate(words):
    if (subword == keyword): 
        print(i+1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simpler version, more closely following your original style.</p>
<pre><code>sentence= input("Enter a sentence")
keyword= input("Input a keyword from the sentence")
words = sentence.split(' ')

for i, word in enumerate(words):
    if keyword == word:
        print(i+1)  # if you want the index to start at 1, not 0
</code></pre>
<p>the Python <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow">enumerate</a> function returns both the index of your word, as well as the word itself.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>one liner with Counter

from collections import Counter
import re

s = "A sunny day, or rainy day"
# first split. Counter will find frequencies. most_common(1) will
# find repeating word and its frequency (2 in this case). 
# [0][0] will extract the word from Counter tuple, and put it into rindex
# as argument. 
print(s.rindex(Counter(re.split(r'[ ,]',s)).most_common(1)[0][0]))

22
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is how to do the code but with an error message on the end if a word is not in the sentence</p>
<pre><code> sentence= input("Please Enter A Sentence With No Puncatuation:&gt; ")
 sentence= sentence.lower()
 keyword= input("Please Input A Word From The Sentence:&gt; ")
 keyword= keyword.lower()
 words= sentence.split(' ')
 for (i, subword) in enumerate(words):
     if(subword == keyword):
        print(i+1)
        break
 else:
     print("Error This Word Isnt In The Sentence")
</code></pre>
<p>This Code Is Also Case Insensitive So You Can Do it In what ever Case</p>
</div>
<span class="comment-copy">Your expected results are not clear to me, could you show what output you were expecting?</span>
<span class="comment-copy">Hint: <code>index</code> has an optional <code>start</code> parameter.</span>
<span class="comment-copy">Lifesaver, thanks. Dont suppose you know how to put an error message in if they ask for a word  thats not in the sentence</span>
