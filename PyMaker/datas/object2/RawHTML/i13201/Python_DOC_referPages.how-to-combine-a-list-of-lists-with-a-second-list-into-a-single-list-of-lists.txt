<div class="post-text" itemprop="text">
<p>I have two lists of same length:</p>
<pre><code>l1 = [['a','b'],['b','c'],[]]
l2 = [0,1,3]
</code></pre>
<p>How do I make a list <code>l3</code> from these two lists such that:</p>
<pre><code>l3 = [['a','b',0],['b','c',1],[3]] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hint: here's the answer</p>
<pre><code>l1 = [['a','b'],['b','c'],[]]
l2 = [0,1,3]
l3 = [l1[i] + [x] for i, x in enumerate(l2)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>:</p>
<pre><code>l3 = [x + [y] for x, y in zip(l1, l2)]
</code></pre>
<p>Zip creates a list of tuples of the form <code>('item from first list', 'item from the second list')</code>. Then it's just a matter of moving through that list and merging them. (The <code>x+[y]</code> part of the for-comprehension above.)</p>
</div>
<span class="comment-copy">Have you tried it yourself and came across a problem?</span>
<span class="comment-copy">Hint: <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> 'em</span>
<span class="comment-copy">If you want to get creative, you could do <code>map(list.append, l1, l2)</code>.  It will change <code>l1</code> in place (and return a pointless list of <code>None</code>s).</span>
<span class="comment-copy">@Leb yes, of course.</span>
<span class="comment-copy">Note that <code>enumerate</code> works well in this case, but does fail if the lists are of different lengths. Especially if <code>l2</code> is the longer length.</span>
<span class="comment-copy">If the lists are not always the same length he can just use <code>zip</code> ;)</span>
<span class="comment-copy">@NathanielFord tried enumerate on lists of diff lengths, makes sense.</span>
