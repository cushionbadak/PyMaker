<div class="post-text" itemprop="text">
<p>I've started the book <a href="https://automatetheboringstuff.com/chapter3/" rel="nofollow">"Automate The Boring Stuff" by Al Sweigart</a>. </p>
<p>At the end of Chapter 3, the author suggests creating a Collatz Sequence in Python as a practice exercise. (the practice exercise suggests I use a the print function and return statement)</p>
<p>When I use a <code>print()</code> function in my code, it works great and I get all the evaluated values I want to see on the screen:</p>
<pre><code>print("This is The Collatz Sequence")
user = int(input("Enter a number: "))


def collatz(n):
    print(n)
    while n != 1:
        if n % 2 == 0:
            n = n // 2
            print(n)
        else:
            n = n * 3 + 1
            print(n)


collatz(user)
</code></pre>
<p><strong>Question:</strong><br/>
How come when I want to use the <code>return</code> statement, the <code>while</code> loop only runs once?</p>
<p>For example, passing the integer 3 into my function with the <code>return</code> statement only gives me the <code>return</code> value of 3 and 10:</p>
<pre><code>print("This is The Collatz Sequence")
user = int(input("Enter a number: "))


def collatz(n):
    print(n)
    while n != 1:
        if n % 2 == 0:
            n = n // 2
            return n
        else:
            n = n * 3 + 1
            return n


result = collatz(user)
print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> exits the function and, therefore terminates your <code>while</code> loop.</p>
<p>Perhaps you meant to use <code>yield</code> instead:</p>
<pre><code>print("This is The Collatz Sequence")
user = int(input("Enter a number: "))

def collatz(n):
    print(n)
    while n != 1:
        if n % 2 == 0:
            n = n // 2
            yield(n)
        else:
            n = n * 3 + 1
            yield(n)

print(list(collatz(user)))
</code></pre>
<p>Output:</p>
<pre><code>This is The Collatz Sequence
Enter a number: 3
3
[10, 5, 16, 8, 4, 2, 1]
</code></pre>
<p><a href="https://stackoverflow.com/a/231855/298607">Yield</a> is logically similar to a <code>return</code> but the function is not terminated until a defined <code>return</code> or the end of the function is reached. When the <a href="https://docs.python.org/3/reference/simple_stmts.html#the-yield-statement" rel="nofollow noreferrer">yield statement</a> is executed, the generator function is suspended and the value of the <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-yield_expression" rel="nofollow noreferrer">yield expression</a> is returned to the caller. Once the caller finishes (and assumably uses the value that was sent) execution returns to the generator function right after the <code>yield</code> statement. </p>
</div>
<div class="post-text" itemprop="text">
<p>In your code you don't re-feed the new value back into your equation. Try separating your while loop from the collatz module. I have an example of this below:</p>
<pre><code>def collatz(number):
    if number % 2 == 0:
        return number // 2
    elif number % 2 == 1:
        return 3 * number + 1

chosenInt = int(input('Enter an integer greater than 1: '))

print(chosenInt)

while chosenInt != 1:
    chosenInt = collatz(chosenInt)
    print(chosenInt)
</code></pre>
</div>
<span class="comment-copy">Because return exits your function.</span>
<span class="comment-copy">Return doesn't just exit the loop, it exits the function!</span>
<span class="comment-copy">True. Edited. Thanks!</span>
<span class="comment-copy">I think maybe you need add some explanation that tells OP <i>How does <code>yield</code> work</i> :)</span>
<span class="comment-copy">I see that now.  Thank you.  Is it possible to stay in the function with a return statement?</span>
<span class="comment-copy">@R2DPoop: Yes -- use <code>yield</code>.</span>
