<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9483979/is-there-a-difference-between-continue-and-pass-in-a-for-loop-in-python">Is there a difference between `continue` and `pass` in a for loop in python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I'm new to Python, couldn't figure out the following syntax, </p>
<pre><code>item = [0,1,2,3,4,5,6,7,8,9]
for element in item:
      if not element:
          pass
      print(element)
</code></pre>
<p>this gives me all of these element, it make sense as Pass is skip this step to next one </p>
<p>however if I use continue I will get the following </p>
<pre><code>item = [0,1,2,3,4,5,6,7,8,9]
for element in item:
      if not element:
          continue
      print(element)
</code></pre>
<pre><code>[1,2,3,4,5,6,7,8,9]
</code></pre>
<p>Can someone tell me why don't I get '0'? Is 0 not in the list?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>continue</code> skips the statements after it, whereas <code>pass</code> do nothing like that. Actually <code>pass</code> do nothing at all, useful to handle some syntax error like:</p>
<pre><code> if(somecondition):  #no line after ":" will give you a syntax error
</code></pre>
<p>You can handle it by:</p>
<pre><code> if(somecondition):
     pass   # Do nothing, simply jumps to next line 
</code></pre>
<p>Demo:</p>
<pre><code>while(True):
    continue
    print "You won't see this"
</code></pre>
<p>This will skip the <code>print</code> statement and print nothing.</p>
<pre><code>while(True):
    pass
    print "You will see this" 
</code></pre>
<p>This will keep printing <code>You will see this</code></p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>"pass" just means "no operation". it does not do anything.</li>
<li>"continue" breaks a loop and jumps to the next iteration of the loop</li>
<li>"not 0" is True, so your "if not element" with element=0 triggers the continue instruction, and directly jumps to next iteration: element = 1</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>pass</code> is a no-op. It does nothing. So when <code>not element</code> is true, Python does nothing and just goes on. You may as well leave out the whole <code>if</code> test for the difference that is being made here.</p>
<p><code>continue</code> means: skip the rest of the loop body and go to the next iteration. So when <code>not element</code> is true, Python skips the rest of the loop (the <code>print(element)</code> line), and <em>continues</em> with the next iteration.</p>
<p><code>not element</code> is true when <code>element</code> is 0; see <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow"><em>Truth Value Testing</em></a>.</p>
</div>
<span class="comment-copy"><code>continue</code> skips the rest of the loop body and <i>continues</i> with the next iteration of the loop. <code>pass</code> does nothing at all.</span>
<span class="comment-copy">apart from the <code>pass/continue</code> conundrum which has been answered, what are you trying to achieve? There may be better ways to scan the list and produce the desired output (e.g. <code>filter(None, item)</code>)</span>
