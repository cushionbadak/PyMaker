<div class="post-text" itemprop="text">
<p>I'm trying to read a dictionary in my python script from an environment variable.</p>
<p>This is the code of my python script: </p>
<pre><code>  desired_cap_default = [
        {'platform': 'Windows 7', 'browserName': 'firefox', 'version': '24.0'},
        {'platform': 'OS X 10.10', 'browserName': 'chrome', 'version': '45.0'},
        {'platform': 'Windows XP', 'browserName': 'chrome', 'version': '40.0'},
        {'platform': 'OS X 10.10', 'browserName': 'safari', 'version': '8.0'},
        # {'platform': 'Windows XP', 'browserName': 'firefox', 'version': '10.0', 'screenResolution': '1600x1200',
        # 'videoUploadOnPass': False, 'commandTimeout': 120}
    ]

browser = os.getenv('TESTING_BROWSERS', desired_cap_default)
</code></pre>
<p>And this is how I'm specifying the environment variable (but is not recognising it as a dictionary)</p>
<pre><code>TESTING_BROWSERS="[{'platform': 'Windows 7', 'browserName': 'firefox', 'version': '24.0'}, \
    {'platform': 'OS X 10.10', 'browserName': 'chrome', 'version': '45.0'}, \
    {'platform': 'Windows XP', 'browserName': 'chrome', 'version': '40.0'}, \
    {'platform': 'OS X 10.10', 'browserName': 'safari', 'version': '8.0'},  ]"
</code></pre>
<p>Can anyone help me figuring out what am I missing? Thanks in advance guys</p>
</div>
<div class="post-text" itemprop="text">
<p>You can you use the <code>ast</code> module for this.</p>
<pre><code>TESTING_BROWSERS = "[{'platform': 'Windows 7', 'browserName': 'firefox', 'version': '24.0'}, \
{'platform': 'OS X 10.10', 'browserName': 'chrome', 'version': '45.0'}, \
{'platform': 'Windows XP', 'browserName': 'chrome', 'version': '40.0'}, \
{'platform': 'OS X 10.10', 'browserName': 'safari', 'version': '8.0'},  ]"

import ast
my_dict = ast.literal_eval(TESTING_BROWSERS)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your json object here is being represented as a string. You need to now use the json module to make it a proper Python dictionary. </p>
<p>You also have an error in your json with that trailing comma you have at the end.</p>
<p>Furthermore, is that in order to use the json module for this, you should be using double quotes and then enclose by single quotes. </p>
<p>I also don't see the "\" as necessary if you are setting them in to an environment variable. However, if they are there, they will also be in your string as this:</p>
<pre><code>\\\n
</code></pre>
<p>The json module will have a hard time with that. What you can do in that case is if you really want those slashes in there, make sure you remove them before performing your <code>json.loads</code> command using the replace method on the string. So, you can in fact, do this: </p>
<pre><code>browser = json.loads(os.getenv('TESTING_BROWSERS', v).replace("\\\n", ""))
</code></pre>
<p>Below are two examples. One with the modifications I made to the json removing the slashes, and another without removing:</p>
<pre><code>import json
a = '[{"platform": "Windows 7", "browserName": "firefox", "version": "24.0"}, {"platform": "OS X 10.10", "browserName": "chrome", "version": "45.0"}, {"platform": "Windows XP", "browserName": "chrome", "version": "40.0"}, {"platform": "OS X 10.10", "browserName": "safari", "version": "8.0"}]'
print(json.loads(a))
</code></pre>
<p>Output:</p>
<pre><code>[{u'platform': u'Windows 7', u'browserName': u'firefox', u'version': u'24.0'}, {u'platform': u'OS X 10.10', u'browserName': u'chrome', u'version': u'45.0'}, {u'platform': u'Windows XP', u'browserName': u'chrome', u'version': u'40.0'}, {u'platform': u'OS X 10.10', u'browserName': u'safari', u'version': u'8.0'}]
</code></pre>
<p>Now, with the slashes in place. </p>
<p>Remember, you have to at least fix your quotes and remove that comma first, as I mentioned.</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; browser = json.loads(os.getenv('TESTING_BROWSERS', v).replace("\\\n", ""))
&gt;&gt;&gt; print(browser)
[{u'platform': u'Windows 7', u'browserName': u'firefox', u'version': u'24.0'}, {u'platform': u'OS X 10.10', u'browserName': u'chrome', u'version': u'45.0'}, {u'platform': u'Windows XP', u'browserName': u'chrome', u'version': u'40.0'}, {u'platform': u'OS X 10.10', u'browserName': u'safari', u'version': u'8.0'}]
</code></pre>
<p>Here is information on the json module: </p>
<p>Python 2</p>
<p><a href="https://docs.python.org/2/library/json.html" rel="nofollow">https://docs.python.org/2/library/json.html</a></p>
<p>Python 3</p>
<p><a href="https://docs.python.org/3/library/json.html" rel="nofollow">https://docs.python.org/3/library/json.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It is being recognised as a string. You need to evaluate it as python code in order to create a dictionary from it.</p>
<pre><code>import ast
brower_dict = ast.literal_eval(brower)
</code></pre>
<p><code>ast.literal_eval</code> is more limited than built-in <code>eval</code>, but it is safe to use from untrusted sources, as it cannot execute arbitrary code.</p>
</div>
<span class="comment-copy">The backslashes in <code>TESTING_BROWSERS</code> are unnecessary; newlines are embedded in quoted strings without them.</span>
<span class="comment-copy">Simple, useful and to the point. It worked perfectly, thanks. My only concern is... :( would be awesome if you just told me the problem was that's being treated as a string instead of dict! Thank you a lot!</span>
<span class="comment-copy">Rather, the JSON object <i>is</i> a string; you need to use <code>json.loads</code> to turn that string into a proper Python <code>dict</code>.</span>
<span class="comment-copy">Thanks @chepner . I corrected my wording and fixed a few other references that were misleading. Cheers. If you happen to take another look, let me know if you see anything else off.</span>
<span class="comment-copy">Thanks for the extensive answer and explanation! I'll try it right now!</span>
<span class="comment-copy"><code>eval</code> is generally bad practice. Take a look at <a href="http://stackoverflow.com/questions/1832940/is-using-eval-in-python-a-bad-practice" title="is using eval in python a bad practice">stackoverflow.com/questions/1832940/…</a></span>
<span class="comment-copy">@Wondercricket I have changed it to <code>ast.literal_eval</code></span>
<span class="comment-copy">It worked flawless, gracias Álvaro!</span>
