<div class="post-text" itemprop="text">
<p>I am trying to make a python script that will allow me to place music into one large folder so when I run the script it will create folders according to the first part of the music files. So let's say I have a music file called <code>OMFG - Ice Cream.mp3</code> I would like to be able to split each music file name so that instead of <code>OMFG - Ice Cream.mp3</code> it would chop it off in this case <code>Ice Cream.mp3</code> and then it would use <code>OMFG</code> to create a folder called that. After it created that folder I would then like to find out a way to then move, in this case <code>OMFG - Ice Cream.mp3</code> into the folder that was just created.</p>
<p>Here is my code so far:</p>
<pre class="lang-py prettyprint-override"><code>import os

# path = "/Users/alowe/Desktop/testdir2"
# os.listdir(path)
songlist = ['OMFG - Ice Cream.mp3', 'OMFG - Hello.mp3', 'Dillistone - Sad &amp; High.mp3']
teststr = str(songlist)
songs = teststr.partition('-')[0]
print ''.join(songs)[2:-1]
</code></pre>
<p>My main trouble is how to loop through each object in the string.</p>
<p>Thanks, 
Alex</p>
</div>
<div class="post-text" itemprop="text">
<p>It is convenient to use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow"><code>pathlib</code> module for such tasks</a>:</p>
<pre><code>#!/usr/bin/env python3
import sys
from pathlib import Path

src_dir = sys.argv[1] if len(sys.argv) &gt; 1 else Path.home() / 'Music'
for path in Path(src_dir).glob('*.mp3'): # list all mp3 files in source directory
    dst_dir, sep, name = path.name.partition('-')
    if sep: # move the mp3 file if the hyphen is present in the name
        dst_dir = path.parent / dst_dir.rstrip()
        dst_dir.mkdir(exist_ok=True) # create the leaf directory if necessary
        path.replace(dst_dir / name.lstrip()) # move file
</code></pre>
<p>Example:</p>
<pre><code>$ python3.5 move-mp3.py /Users/alowe/Desktop/testdir2
</code></pre>
<p>It moves <code>OMFG - Ice Cream.mp3</code> to <code>OMFG/Ice Cream.mp3</code>.</p>
<hr/>
<p>If you want to move <code>OMFG - Ice Cream.mp3</code> to <code>OMFG/OMFG - Ice Cream.mp3</code>:</p>
<pre><code>#!/usr/bin/env python3.5
import sys
from pathlib import Path

src_dir = Path('/Users/alowe/Desktop/testdir2') # source directory
for path in src_dir.glob('*.mp3'): # list all mp3 files in source directory
    if '-' in path.name: # move the mp3 file if the hyphen is present in the name
        dst_dir = src_dir / path.name.split('-', 1)[0].rstrip() # destination
        dst_dir.mkdir(exist_ok=True) # create the leaf directory if necessary
        path.replace(dst_dir / path.name) # move file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try out this code that:</p>
<ul>
<li>Loops through the list</li>
<li>Split each element into the list</li>
<li>Create folder if it does not  exist yet</li>
<li>Transfer music to that folder</li>
</ul>
<p>Loops through the list</p>
<pre><code>    import os
    import shutil
    songlist = ['OMFG - Ice Cream.mp3', 'OMFG - Hello.mp3', 'Dillistone - Sad &amp; High']
    m_dir = '/path/mainfolder'
    song_loc = '/path/songlocation'

    for song in songlist:
        s = song.split('-')
        if os.path.exists(os.path.join(m_dir,s[0])):
            shutil.copy(os.path.join(song_loc,song),os.path.join(m_dir,s[0].strip()))
        else:
            os.makedirs(os.path.join(m_dir,s[0]))
            shutil.copy(os.path.join(song_loc,song),os.path.join(m_dir,s[0].strip()))
</code></pre>
</div>
<span class="comment-copy">Your script worked great!!! But Is there a way so that I do not have to type <code>/Users/alowe/Desktop/testdir2</code> each time I type the command? Maybe by adding the folder path within the Python script?</span>
<span class="comment-copy">@Alex: yes, if you want to hardcode the path; put it instead of <code>Path.home()/'Music'</code> in the script.</span>
<span class="comment-copy">Also instead of moving  <code>OMFG - Ice Cream.mp3</code> to <code>OMFG/Ice Cream.mp3</code> can I move it to <code>OMFG/OMFG - Ice Cream.mp3</code> if there is a way how?</span>
<span class="comment-copy">@Alex: I've updated the answer. To keep old name, use <code>dst_dir / path.name</code> instead of <code>dst_dir / name.lstrip()</code>.</span>
<span class="comment-copy">This script does not work on <code>Ubuntu 14.04.3 LTS</code> because it only has <code>Python 3.4</code> what modifications would I need to make in order to make this script work with python 3.4?</span>
<span class="comment-copy">Umm... Did you forget to transfer anything? Say, with <code>os.rename</code> or <code>shutil.move</code>? I'll grant the questioner was asking for something much simpler, which makes me think they really need to run through a proper Python tutorial.</span>
<span class="comment-copy">I just wrote the pseudocode, assuming he/she already knows the function to transfer. But okay i can edit and add the transferring of files. (Shutil, etc)</span>
<span class="comment-copy">It looked nearly complete, so omitting the last step just seemed odd. No big deal.</span>
<span class="comment-copy">Alright, ill just add the shutil just for the sake of completeness</span>
<span class="comment-copy">@anon for some reason your script did not work.</span>
