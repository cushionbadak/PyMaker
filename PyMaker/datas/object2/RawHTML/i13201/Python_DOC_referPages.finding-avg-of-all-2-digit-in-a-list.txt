<div class="post-text" itemprop="text">
<p>I'm trying to find the avg of list but only when n &gt;= 10 (two digit numbers, my original list is limited to 100).</p>
<p>Here's what I have right now: </p>
<pre><code># Calculate average of all two-digit numbers (10-99)
grade_list = [10, 11, 12, 13, 14, 15]
def calcAvg(grade_list):
    while n &gt; 10:
        total = sum(grade_list)
        n = total % len(grade_list)
        print_list = n
    return print_list
</code></pre>
<p>I get that I have to find the total sum of the list when n &gt; 10 and then dividing by the length (only &gt; 10, my original list has single digit elements, so I'd like to avoid them). </p>
<p>But when I run it, I get an error saying: local variable 'n' referenced before assignment</p>
<p>Any help on how to structure this function to achieve the end results (sum/total of only 2-digit elements = avg)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def calcAvg(grade_list):
    my_list = []
    for n in grade_list:
        if 10 &lt;= n &lt;= 99:
            my_list.append(n)
    total = 0
    for n in my_list:
        total += n
    if total:
        avg = float(total)/len(my_list)
    else:
        avg = None
    return avg
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd either collect the good grades and use <code>sum</code>/<code>len</code>, or use the <code>mean</code> function:</p>
<pre><code>&gt;&gt;&gt; grade_list = [1, 2, 10, 11, 12, 13, 14, 15]

&gt;&gt;&gt; good = [g for g in grade_list if g &gt; 10]
&gt;&gt;&gt; sum(good) / len(good)
13.0

&gt;&gt;&gt; import statistics
&gt;&gt;&gt; statistics.mean(g for g in grade_list if g &gt; 10)
13.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a clean way of doing it:</p>
<pre><code>def calc_avg(lst):
    filtered_lst = filter(lambda x: 10 &lt; x &lt; 100, lst)
    return sum(filtered_lst) / len(filtered_lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So you should use a for loop instead of a while loop. Instead of having two for loops and making a new list, you could just account for the sum inside the first for loop. I demonstrate this below.</p>
<pre><code>def calcAvg(grade_list):
    sum = 0;
    count = 0;
    for n in grade_list:
        if 10 &lt;= n &lt;= 99:
            sum = sum + n
            count = count + 1
    return sum/count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you should manually go over the code step by step and try to understand what is wrong.  Meanwhile this may give you some hints</p>
<pre><code># Calculate average of all two-digit numbers (10-99)
def calcAvg(alist):
    count=total=0
    for i in alist:
        if 9 &lt; i &lt; 100:
            total += i
            count += 1
    return total/count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>Python 3.4</code> there is a <a href="https://docs.python.org/3/library/statistics.html#module-statistics" rel="nofollow">statistics</a> module.</p>
<p>So you just need to filter out numbers in range &lt;10,100), for example with a list comprehension, and then pass this filtered list to the <code>mean</code> function. Simple as that.</p>
<pre><code>from statistics import mean

numbers = [1, 20, 30, 50]
mean([n for n in numbers if n &gt;= 10 and n &lt; 100])
&gt;&gt;&gt; 33.333333333333336
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do this fairly simply with a list comprehension</p>
<pre><code>&gt;&gt;&gt; grades = [1, 2, 10, 11, 12, 13, 14, 15, 120, 122, 320]
&gt;&gt;&gt; lst = [v for v in grades if 10 &lt;= v &lt; 100]
&gt;&gt;&gt; sum(lst)/len(lst)
12
</code></pre>
</div>
<span class="comment-copy">You need a for loop here, not a while, as you are summing all the values that are greater than 10</span>
<span class="comment-copy"><code>total</code> is an <code>int</code> value. Shouldn't it be <code>len(my_list)</code>?</span>
<span class="comment-copy"><code>len(int)</code> raises an exception. Also, edge case - if all the values are &lt;=10, this would raise an exception.</span>
<span class="comment-copy">@AerofoilKite: what's the error?</span>
<span class="comment-copy">I'm getting an error: object of type 'int' has no len() <b>Edit</b> I just replaced the len(total) with len(my_list). And replaced the total = 0 for loop with totalsum = sum(my_list). Thanks!</span>
<span class="comment-copy"><code>grade_list = [1, 2, 10, 11, 12, 13, 14, 15, 120, 122, 320]</code> what about this?</span>
<span class="comment-copy">@AerofoilKite He said the list already is limited to 100, so that should not happen.</span>
<span class="comment-copy">Careful, in the question description there is a condition <code>n &gt;= 10</code></span>
<span class="comment-copy">@dm295 I know. And there's also <code>n &gt; 10</code>. Obviously he needs to make up his mind, and I don't care since it's trivial to adapt if necessary.</span>
<span class="comment-copy">@Stefan oh, good point, I didn't notice the other one</span>
