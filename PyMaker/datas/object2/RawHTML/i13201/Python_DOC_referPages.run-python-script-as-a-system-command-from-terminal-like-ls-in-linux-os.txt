<div class="post-text" itemprop="text">
<p>I have a python script which i want to run from terminal in linux without using "python" keyword in the beginning. 
For example my script name is helloworld.py which is accepting 2 arguments from terminal.
<strong>I want to run this script as "helloworld" from terminal instead of "python helloworld.py"</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>To make the file an executable, rename and change the mode for the access permissions, e.g.:</p>
<pre><code>$ mv helloworld.py helloworld
$ chmod +x helloworld
</code></pre>
<p>And edit the first line of the file be a <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)" rel="nofollow">shebang</a>:</p>
<pre><code>#!/usr/bin/env python
</code></pre>
<p>There are at least three ways to run it from a shell:</p>
<ol>
<li>Use something like <code>./helloworld</code> or <code>/path/to/helloworld</code></li>
<li>Move it to a directory on your <code>PATH</code>, e.g. <code>/usr/local/bin</code> or <code>~/bin</code></li>
<li>Modify <code>PATH</code> to add the directory, e.g. <code>export PATH=$PATH:/to/dir</code></li>
</ol>
</div>
<span class="comment-copy">Next to <code>sys.argv</code> is the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a> module, which is the more comprehensive way of handling arguments.</span>
<span class="comment-copy">I am not concerned about passing the argument. I know how to do that. I am concerned about running my python script directly from terminal in linux(helloworld) like a command(eg ls -l) with the name of the script not by using "python helloworld.py"</span>
<span class="comment-copy">You want a hash-bang: put <code>#! /usr/bin/env python</code> as the first line of your script, and make the script executable: <code>chmod ugo+x script.py</code>.</span>
<span class="comment-copy">ok but still with this i have to run the script like this "./script". I want to run it as system command like grep or ls</span>
<span class="comment-copy">You don't need the <code>./</code> in front of the name if you set your <code>PATH</code> to include your current directory: <code>export PATH=$PATH:.</code> or similar.</span>
<span class="comment-copy">Dont forget to place it somewhere within PATH if you want to use it without the ./</span>
<span class="comment-copy">after adding to path variable. It is running as helloworld.py and for removing .py also, you have to add "ln -s /path/to/helloworld.py /path/to/helloworld". Now I can run it as helloworld. Thanks for the help. Appreciate it :)</span>
<span class="comment-copy">@NishankSingla You don't need a symlink, you can just rename the script: the .py extension is not necessary for anything, just convenience.</span>
<span class="comment-copy">rename the script to what ? You mean to say save the python script without .py extension ?</span>
<span class="comment-copy">@NishankSingla file extensions are just part of the name of the file, and don't have any significance on how it acts as a command executable. You can even add <code>.exe</code> if you want to mess with some folks.</span>
