<div class="post-text" itemprop="text">
<p>I have a python code and i'm reading a certificate and matching only the root cert. For ex my certificate is as below:</p>
<pre><code>--------begin certificate--------
CZImiZPyLGQBGRYFbG9jYWwxGjAYBgoJkiaJk/IasdasdassZAEZFgp2aXJ0dWFsdnB4MSEw
HwYDVQQDExh2aXJ0dWFsdnB4LVZJUlRVQUxEQzEtQ0EwHhfdgdgdgfcNMTUwOTE2MTg1MTMx
WhcNMTcwOTE2MTkwMTMxWjBaMQswCQYDVQQGEwJVUzEXMBUGCgmSJoaeqasadsmT8ixkARkW
B3ZzcGhlcmUxFTATBgoJkiaJk/IsZAEZFgVsb2NhbDEOMAwGA1UEChMFdmNlcnfrrfgfdvQx
CzAJBgNVBAMTAkNBMIIBIjANBgkqhkiG9w
--------end certificate----------
--------begin certificate--------
ZGFwOi8vL0NOPXZpcnR1YWx2cHgtcvxcvxvVklSVFVBTERDMS1DQSxDTj1BSUEsQ049UHVi
bGljJTIwS2V5JTIwU2VydmldfsfhjZXMsQ049U2VydmfffljZXMsQ049Q29uZmlndXJhdGlv
bixEQz12aXJ0dWFsdnB4LERDPWxvY2FsP2NxvxcvxcvBQ2VydGlmaWNhdGU/YmFzZT9vYmpl
Y3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0dsfsdffraG9yaXR5MD0GCSsGAQQBgjcVBwQwMC4G
--------end certificate----------
</code></pre>
<p>I want to fetch only the root certificate, which starts with CZImiZPy. I read the certificate into the variable data and applying the below regex</p>
<pre><code>re.sub('-----.*?-----', '', data)
</code></pre>
<p>But it fetched both the encrypted certificates and not just the first one. Is there any better way I can tweak the regular expression?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to search for text, not substitute it with something else. </p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = """--------begin certificate--------
&lt;certificate encrypted&gt;
--------end certificate----------
--------begin certificate--------
&lt;certificate encrypted&gt;
--------end certificate----------"""
&gt;&gt;&gt; re.search(r"-+begin certificate-+\s+(.*?)\s+-+end certificate-+", s, flags=re.DOTALL).group(1)
'&lt;certificate encrypted&gt;'
</code></pre>
<p><strong>Explanation:</strong></p>
<pre class="lang-none prettyprint-override"><code>-+begin certificate-+ # Match the starting label
\s+                   # Match whitespace (including linebreaks)
(.*?)                 # Match any number of any character. Capture the result in group 1
\s+                   # Match whitespace (including linebreaks)
-+end certificate-+   # Match the ending label
</code></pre>
<p><code>re.search()</code> will always return the first match.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3.5/library/re.html#re.sub" rel="nofollow"><code>re.sub</code></a> can get a count variable as a parameter:</p>
<blockquote>
<p><code>re.sub(pattern, repl, string, count=0, flags=0)</code></p>
<p>The <em>optional</em> argument <code>count</code> is the <em>maximum number of pattern occurrences to be replaced</em>..</p>
</blockquote>
<p>If you want to only change the first match, do the following:</p>
<pre><code>re.sub('-----.*?-----', '', data, 1)
</code></pre>
<p>Note that if you want to <strong>extract</strong>, you shouldn't use <code>re.sub</code>. Visit the <a href="https://docs.python.org/3/library/re.html" rel="nofollow"><code>re</code></a> module to learn about all available functions that help you extracting patterns from a string.</p>
</div>
<span class="comment-copy">Could you also provide the expected output?</span>
<span class="comment-copy">@emre. the expected output is there, just the first <code>&lt;certificate encrypted&gt;</code></span>
<span class="comment-copy">@yzT: If that's OP wants then he shouldn't use <code>re.sub()</code> here.</span>
<span class="comment-copy">This doesn't give the correct output. It prints: ================================ RESTART ================================</span>
<span class="comment-copy">@Sandy: I can't see that text in the sample you gave in your question. The regex works for that input - if it doesn't work with your "real world" data, you need to specify what your data actually looks like, otherwise all attempts at a useful regex are doomed...</span>
<span class="comment-copy">Updated the data and question</span>
<span class="comment-copy">@Sandy: The regex still works, and the text still doesn't contain <code>===RESTART===</code>. Are you sure you're using <code>re.search()</code> correctly? Are you assigning or printing the result (i. e. <code>print re.search(...)</code> or <code>result =  re.search(...); print result</code>)?</span>
<span class="comment-copy">Thanks! It is working now. My mistake with the syntax.</span>
<span class="comment-copy">While true, this doesn't have any positive effect on the OP's (XY) problem. Reducing the number of replaces means that even more of the to-be-discarded text remains.</span>
<span class="comment-copy">@TimPietzcker that's why I mentioned the last part. I just answered OP's question "regex to match only first instance". He's using <code>sub</code>, which accepts the count parameter.</span>
<span class="comment-copy">@TimPietzcker Your answer is just an implementation of my answer's last part :) I just didn't want to give OP a ready solution. A minimal try from him might help him more.</span>
<span class="comment-copy">The entire answer (except for the last paragraph, which should rather be a comment) is misleading. He's looking for the first match, and he's hoping to get it by removing all the non-matches. Your solution shows him how to remove only the first non-match. This isn't helping him/her.</span>
<span class="comment-copy">@Maroun/kevin: I don't want to change anything. I just want to print the first &lt;certificate encrypted&gt;. The change you mentioned is not working for me.</span>
