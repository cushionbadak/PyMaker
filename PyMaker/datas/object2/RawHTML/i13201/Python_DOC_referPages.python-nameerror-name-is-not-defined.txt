<div class="post-text" itemprop="text">
<p>I am currently expanding by python skills by programming a procedurally generated dungeon level in text format. I am confused as to why my "intersects" define is not working. Here is the class containing the def:</p>
<pre><code>class Room:

    global x1
    global x2
    global y1
    global y2

    global w
    global h

    global centre

    def __init__(self,x,y,w,h):
        x1 = x
        x2 = x + w
        y1 = y
        y2 = y + h
        self.x = x
        self.y = y
        self.w = w
        self.h = h
        centre = math.floor((x1 + x2) / 2),math.floor((y1 + y2) / 2)

    #function that checks if the rooms intersect by comparing corner pins relative to the x,y tile map 
    def intersects(self,room):
        if x1 &lt;= room.x2 and x2 &gt;= room.x1 and y1 &lt;= room.y2 and room.y2 &gt;=  room.y1:
            return True
        return False
</code></pre>
<p>Here is where it's called:</p>
<pre><code>def placeRooms(r):
    rooms = []
    #Where the room data is stored

    for r in range(0,r):
        w = minRoomSize + randint(minRoomSize,maxRoomSize)
        h = minRoomSize + randint(minRoomSize,maxRoomSize)
        x = randint(1,map_width - w - 1) + 1
        y = randint(1,map_height - h - 1) + 1

        newRoom = Room(x,y,w,h)

        failed = False

        #for every room generated, this function checks if new room intersects with the last one
        for otherRoom in rooms:
            if newRoom.intersects(otherRoom):
                failed = True
                break

        if failed == False:
            createRoom(newRoom)

            rooms.append(newRoom)
</code></pre>
<p>Full traceback:</p>
<pre><code>Traceback (most recent call last):
File "C:\Users\Max\Desktop\LiClipse Workspace\testing\RandomDungeon.py",      line 78, in &lt;module&gt;
placeRooms(2)
File "C:\Users\Max\Desktop\LiClipse Workspace\testing\RandomDungeon.py",  line  65, in placeRooms
if newRoom.intersects(otherRoom):
File "C:\Users\Max\Desktop\LiClipse Workspace\testing\RandomDungeon.py",   line 41, in intersects
if x1 &lt;= room.x2 and x2 &gt;= room.x1 and y1 &lt;= room.y2 and room.y2 &gt;= room.y1:
NameError: name 'x1' is not defined
</code></pre>
<p>I hope someone can help me understand why this code won't work, thank you.</p>
<p>I have managed to fix the problem. I'm sorry if my question was not defined very well. I have only been learning Python for around 4 weeks and i am used to Java which has a very different syntax. Here is my solution:</p>
<pre><code>def __init__(self,x,y,w,h):
    self.x1 = x
    self.x2 = x + w
    self.y1 = y
    self.y2 = y + h
    self.x = x
    self.y = y
    self.w = w
    self.h = h
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As most previous comments have said, you use global variables that shouldn't be global at all.</p>
<p>The way I understand your code, you meant for <code>x1</code>, <code>x2</code>, <code>y1</code> and <code>y2</code> to be attributes of your <code>Room</code> instance, meaning that each room has its own values for <code>x1</code>, <code>x2</code>, <code>y1</code> and <code>y2</code>. In Python you don't have to declare attributes at the beginning of the class (where you declare all the global variables), you simply need to initialize the attributes in the <code>__init__</code> method.</p>
<p>This means that you can safely delete all the <code>global</code> lines, and change your <code>__init__</code> to</p>
<pre><code>def __init__(self,x,y,w,h):
    self.x1 = x
    self.x2 = x + w
    self.y1 = y
    self.y2 = y + h
    self.w = w
    self.h = h
    centre = (self.x1 + self.x2) // 2,(self.y1 + self.y2) // 2
</code></pre>
<p>(note that you don't need <code>math.floor</code> since you're already dealing with integers, simply use the integer division operator <code>//</code>)</p>
<p>That way you define <code>x1</code>, <code>y1</code>, <code>x2</code>, <code>y2</code>, <code>w</code>, <code>h</code> and <code>center</code> as attributes of your class meaning that each instance has its own values for these variables. In Python, you need to add <code>self.</code> before all calls to attributes of the object itself, so you should also modify <code>intersects</code> to add <code>self.</code> before each access to an attribute of your current object (all the <code>x1</code>, <code>x2</code>, etc. that are not already prefixed by <code>room.</code> in your code).</p>
<p>Also, while we're at it I don't think your <code>intersect</code> function works as intended, but that's another problem :)</p>
</div>
<span class="comment-copy">Can you please include the full traceback in your post?</span>
<span class="comment-copy">What do you <i>want</i> (or expect) all your <code>global</code> definitions to do?</span>
<span class="comment-copy">You should consider any instance of the keyword <code>global</code> to be a bug in your code.</span>
<span class="comment-copy">You keep using that <a href="https://docs.python.org/3/reference/simple_stmts.html#the-global-statement" rel="nofollow noreferrer"><code>global</code> keyword</a>, I do not think it means what you think it means.</span>
<span class="comment-copy">I included a full traceback. @MorganThrapp</span>
