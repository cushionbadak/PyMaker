<div class="post-text" itemprop="text">
<p><code>ast.literal_eval</code> is throwing <code>ValueError: malformed string</code> for the following JSON.
I am unable to spot what the error is. I used online JSON validators, all mention that this a valid JSON.</p>
<p>Can someone help me spot the error with this string?</p>
<pre><code>{
    "business_id": "Iu-oeVzv8ZgP18NIB0UMqg",
    "full_address": "3320 S Hill St,South East LA,Los Angeles, CA 90007",
    "schools": [
        "University of Southern California"
    ],
    "open": true,
    "categories": [
        "Medical Centers",
        "Health and Medical"
    ],
    "photo_url": "http://s3-media1.ak.yelpcdn.com/bphoto/SdUWxREuWuPvvot6faxfXg/ms.jpg",
    "city": "Los Angeles",
    "review_count": 2,
    "name": "Southern California Medical Group",
    "neighborhoods": [
        "South East LA"
    ],
    "url": "http://www.yelp.com/biz/southern-california-medical-group-los-angeles",
    "longitude": -118.274281,
    "state": "CA",
    "stars": 3.5,
    "latitude": 34.01971,
    "type": "business"
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>true</code> is an invalid literal in Python:</p>
<pre><code>In [2]: ast.literal_eval('true')
ValueError: malformed node or string: &lt;_ast.Name object at 0x7f32a096d550&gt;
</code></pre>
<p>Use <a href="https://docs.python.org/3/library/json.html"><code>json</code></a> module (specifically <a href="https://docs.python.org/3/library/json.html#json.loads"><code>json.loads</code></a>) when you need to deserialize a JSON document.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're using the wrong tool for the job here - <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a> is intended for parsing <em>python literals</em> from strings into python objects.   It is not intended for loading data from serialised JSON into python (although it may also work for that in a subset of cases, because serialised json format happens to overlap with python syntax some of the time).  </p>
<p>Perhaps you were you looking for <a href="https://docs.python.org/2/library/json.html" rel="nofollow"><code>json.loads</code></a>?</p>
</div>
<span class="comment-copy">This is right. true and false are invalid in Literal Eval. Once I replaced those with proper strings it worked.</span>
<span class="comment-copy">The complexity of the inputs supported by <code>ast.literal_eval</code> and <code>json.loads</code> are roughly the same. It's not like <code>ast.literal_eval</code> is restricted to single tokens or even any fixed level of nesting. The important thing is that they're not the same format.</span>
<span class="comment-copy">ok, edited phrasing for you</span>
