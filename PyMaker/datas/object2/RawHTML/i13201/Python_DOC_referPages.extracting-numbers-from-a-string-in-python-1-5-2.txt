<div class="post-text" itemprop="text">
<p>I'm currently working with a Telit module (GT864-py) and I'm trying to extract numbers from a return value/string that I recieve when using AT-commands.</p>
<p>This is an example of the code that I'm using:</p>
<pre><code>MDM.send('AT#ADC=1,2'+'\r', 5)
pump = MDM.receive(15)
pumpb = int(filter(str.isdigit, pump))
</code></pre>
<p>which gives the response</p>
<pre><code>#ADC: 10 (This number can range from ~10-150)
OK
</code></pre>
<p>Now, I would like to filter the number after ADC, however, I have not yet found a solution as to how.</p>
<p>By using this code in PythonWin 1.5.2+ I get the following error:</p>
<p>NameError: isdigit</p>
<p>So I am assuming isdigit isn't supported in Python 1.5.2, is that correct? And if so, does anyone know any other ways to extract the numbers after #ADC: xxx ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/release/1.5.2p2/" rel="nofollow">Python 1.5.2p2 documentation</a> is available online. Indeed, there is no <code>isdigit</code> in either <code>str</code> or in the module <a href="https://docs.python.org/release/1.5.2p2/lib/module-string.html" rel="nofollow"><code>string</code></a>.</p>
<hr/>
<p>Even in Python 1.5, <code>str</code> is a sequence that supports the <code>in</code> operation, so you could do:</p>
<pre><code>def isdigit(c):
    return c in '0123456789'

pumpb = int(filter(isdigit, pump))
</code></pre>
<hr/>
<p>For more thorough parsing I'd use a regular expression, with module <a href="https://docs.python.org/release/1.5.2p2/lib/module-re.html" rel="nofollow"><code>re</code></a> instead; the code </p>
<pre><code>import re
match = re.search('#ADC:\s*(\d+)', pump)
if match:
    number = match.group(1)
</code></pre>
<p>This will match <code>#ADC:</code> followed by any number of spaces, followed by 1 or more digits <code>[0-9]</code>; the digits are captured in the group <code>1</code>, whose value is then stored to <code>number</code> if a match was found.</p>
</div>
<div class="post-text" itemprop="text">
<p>If the string is always exactly <code>"#ADC: "</code>, then simple string slicing should also work:</p>
<pre><code>if pump[:6] == '#ADC: ':
    pumpb = int(pump[6:])
</code></pre>
</div>
<span class="comment-copy">Why are you using 1.5.2? You could write your own <code>isdigit</code> using <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a>, I suppose.</span>
<span class="comment-copy">I guess you will have more success if you contact Python's IRC channel if you want to find users that have experienced this ancient Python version first hand.</span>
<span class="comment-copy">IIRC Python 1.5.2 already had regexps... But really, Python 1.5.2 ??? That was early 1999 or so ?</span>
<span class="comment-copy">@jonrsharpe: <code>all</code> doesn't exist either :-)</span>
<span class="comment-copy">The reason that I am using Python 1.5.2 is that the Telit module itself has a built-in python v 1.5.2 interpreter which, unfortunately, can't be updated to a later version. If it had a later version, say 2.7, this would have been a lot easier but now I'm left with trying to figure out a way to make it work on this old, obsolete piece of machinery</span>
<span class="comment-copy">After initial testing, this seems to work perfectly.I will try it more extensively with different numbers later but for now, a big thanks to you Mr. Haapala</span>
