<div class="post-text" itemprop="text">
<p>Goal:</p>
<ul>
<li>Directly read .csv API response to Python list</li>
</ul>
<p>I am using the Census Bureau's Bulk <a href="http://geocoding.geo.census.gov/geocoder/geographies/addressbatch?form" rel="nofollow">Geocoder</a> to get the lat/long of many addresses. The <a href="http://geocoding.geo.census.gov/geocoder/Geocoding_Services_API.pdf" rel="nofollow">documentation</a> for Batch Geocoding is on page 5-6.</p>
<p>I would like to be able to read this csv to a list without first saving the file.</p>
<p>My first attempt was to do the following:</p>
<p>Get response:</p>
<pre><code>    import requests
    import csv

    url = 'http://geocoding.geo.census.gov/geocoder/locations/addressbatch'
    payload = {'benchmark':'Public_AR_Current', 'vintage':'Current_Current', 'returntype':'locations'}
    files = {'addressFile':('Addresses.csv',open(tmp_file,'rb'),'text/csv')}
    response = requests.post(url,data=payload,files=files)
</code></pre>
<p>Handle response (without writing to file):</p>
<pre><code>    reader = csv.reader(response.content)
    tmp_list = list(reader)

    print(tmp_list)
</code></pre>
<p>The output is a 1-D list:</p>
<blockquote>
<p>[[unique_id], [input_address], [match/no_match], [exact/non-exact], [output_address], [lat/long], [tiger_line_id], [tiger_line_side], [ ], .... ]</p>
</blockquote>
<p>The newline is being read as an element to be put into the list (shown as [ ]).</p>
<p>However, if I do the following:</p>
<p>Handle response (first writing response to file):</p>
<pre><code>    with open('out.csv','w') as f:
        f.write(response.content)

    with open('out.csv','rb') as r:
        reader = csv.reader(r)
        tmp_list = list(reader)

    print(tmp_list)
</code></pre>
<p>The output for this method is the desired 2-D list of lists:</p>
<blockquote>
<p>[[unique_id, input_address, match/no_match, exact/non-exact, output_address, lat/long, tiger_line_id, tiger_line_side], .... ]</p>
</blockquote>
<p>How can I read the .csv response directly to a list? I would like to avoid I/O operations because I may be performing 300+ batches at a time (which would be 300+ write to file/read from file.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow"><code>csv.reader</code></a> class accepts an iterable of <em>lines</em>; if you split the content by lines before passing it in it should work:</p>
<pre><code>reader = csv.reader(response.content.split('\n'))
</code></pre>
</div>
<span class="comment-copy">looks like you are already doing it without writing to file, the response just might need some cleaning before using csvreader.  Can you post some of the raw response?</span>
<span class="comment-copy">Thank you very much!</span>
