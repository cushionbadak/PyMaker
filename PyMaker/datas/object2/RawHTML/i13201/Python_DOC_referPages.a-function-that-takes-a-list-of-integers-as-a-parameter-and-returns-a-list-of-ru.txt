<div class="post-text" itemprop="text">
<p>I have this function in python, and this function computes the sum of the integers in the list. </p>
<pre><code>def runningSum(aList):
    theSum = 0
    for i in aList:
        theSum = theSum + i
    return theSum
</code></pre>
<p>result:</p>
<pre><code>&gt;&gt;runningSum([1,2,3,4,5]) = 15
</code></pre>
<p>what I'm hoping to achieve from this function is to return a list of running totals.
something like this:</p>
<pre><code>E.g.: [1,2,3,4,5] -&gt; [1,3,6,10,15]
E.g.: [2,2,2,2,2,2,2] -&gt; [2,4,6,8,10,12,14] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Appending the running sum into a list in a loop and return the list:</p>
<pre><code>&gt;&gt;&gt; def running_sum(iterable):
...     s = 0
...     result = []
...     for value in iterable:
...         s += value
...         result.append(s)
...     return result
...
&gt;&gt;&gt; running_sum([1,2,3,4,5])
[1, 3, 6, 10, 15]
</code></pre>
<p>Or, using <a href="https://docs.python.org/2/reference/simple_stmts.html#the-yield-statement" rel="nofollow"><code>yield</code> statement</a>:</p>
<pre><code>&gt;&gt;&gt; def running_sum(iterable):
...     s = 0
...     for value in iterable:
...         s += value
...         yield s
...
&gt;&gt;&gt; running_sum([1,2,3,4,5])
&lt;generator object runningSum at 0x0000000002BDF798&gt;
&gt;&gt;&gt; list(running_sum([1,2,3,4,5]))  # Turn the generator into a list
[1, 3, 6, 10, 15]
</code></pre>
<p>If you're using Python 3.2+, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow"><code>itertools.accumulate</code></a>.</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list(itertools.accumulate([1,2,3,4,5]))
[1, 3, 6, 10, 15]
</code></pre>
<p>where the default operation in <code>accumulate</code> with an iterable is 'running sum'. Optionally you can also pass an operator as needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>def runningSum(aList):
    theSum = 0
    cumulative = [ ]
    for i in aList:
        theSum = theSum + i
        cumulative.append(theSum)
    return cumulative </p>
</div>
<span class="comment-copy">Why reinvent the wheel when <code>numpy.cumsum</code> does it for you?</span>
<span class="comment-copy">this is perfect!! thanks.</span>
<span class="comment-copy">the question already has an accepted answer and your answer doesn't provide any new information</span>
