<div class="post-text" itemprop="text">
<p>Say I create a recursive nested list in Python like this:</p>
<pre><code>&gt;&gt;&gt; a = [1,2]
&gt;&gt;&gt; a += [a]
</code></pre>
<p>Some properties:</p>
<ul>
<li><code>len(a)</code> is <code>3</code></li>
<li><code>a[2] is a</code> is <code>True</code></li>
</ul>
<p>What happens when you print out <code>a</code>? This appears:</p>
<pre><code>&gt;&gt;&gt; a
[1, 2, [...]]
</code></pre>
<p>Similarly:</p>
<pre><code>&gt;&gt;&gt; a[2]
[1, 2, [...]]
</code></pre>
<p>Why? How does Python "know" the recursion within the list? How is the recursion detected?</p>
</div>
<div class="post-text" itemprop="text">
<p>When Python constructs the <code>repr</code> of a builtin object such as a <code>list</code> it uses two internal functions: <code>Py_ReprEnter(PyObject *)</code>, and <code>Py_ReprLeave(PyObject *)</code>.</p>
<p>The first of these functions checks we are already handling the repr for the specified object (i.e. looks to see whether it is currently remembering that object). If not it remembers the object and returns 0. In that case the repr code prints the object then calls <code>Py_ReprLeave</code> which removes the object from the set that are currently being tracked.</p>
<p>If <code>Py_ReprEnter</code> is already tracking the object it returns non 0 and in that case the list repr code prints <code>[...]</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/17160162/what-is-the-ellipsis-in-a-python-list">What is the ellipsis [...] in a Python list?</a></span>
<span class="comment-copy">I'm not quite sure how it's implemented in Python, but if I were to implement this, when iterating through elements of the list to print, I would check if the element coincides (in the appropriate sense) with the whole list I'm serializing â€” if so, I would just put ellipses instead of going into a recursive call.</span>
<span class="comment-copy">@YassineFaris that question is different though, it's not asking how the recursion is detected.</span>
<span class="comment-copy">Note that Python 3 also provides a decorator to help make you own repr implementations do this: <a href="https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr" rel="nofollow noreferrer">docs.python.org/3/library/reprlib.html#reprlib.recursive_repr</a></span>
