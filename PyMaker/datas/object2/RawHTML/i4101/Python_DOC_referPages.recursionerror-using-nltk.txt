<div class="post-text" itemprop="text">
<p>I run this code in purpose to processing text before feed it in my model</p>
<p>and got RecursionError: maximum recursion depth exceeded in comparison</p>
<p>train_text is a python series with text
stem is PorterStemmer object from nltk library</p>
<pre class="lang-py prettyprint-override"><code>train_corpus = []
for i in range(0, len(train_text)):
    data = re.sub("[^a-zA-Z]", ' ', train_text[i]).lower().split()
    data = [ps.stem(word) for word in data if not word in set(stopwords.words("english"))]
    data = ' '.join(data)
    train_corpus.append(data)
</code></pre>
<hr/>
<pre><code>RecursionError                            Traceback (most recent call last)
&lt;ipython-input-25-4a8646f33f6f&gt; in &lt;module&gt;()

     57 for i in range(0, len(train_text)):
     58     data = re.sub("[^a-zA-Z]", ' ', train_text[i]).lower().split()
---&gt; 59     data = [ps.stem(word) for word in data if not word in set(stopwords.words("english"))]
     60     data = ' '.join(data)
     61     train_corpus.append(data)

&lt;ipython-input-25-4a8646f33f6f&gt; in &lt;listcomp&gt;(.0)
     57 for i in range(0, len(train_text)):
     58     data = re.sub("[^a-zA-Z]", ' ', train_text[i]).lower().split()
---&gt; 59     data = [ps.stem(word) for word in data if not word in set(stopwords.words("english"))]
     60     data = ' '.join(data)
     61     train_corpus.append(data)

~\Anaconda3\lib\site-packages\nltk\stem\porter.py in stem(self, word)
    665         stem = self._step1a(stem)
    666         stem = self._step1b(stem)
--&gt; 667         stem = self._step1c(stem)
    668         stem = self._step2(stem)
    669         stem = self._step3(stem)
....
</code></pre>
<p>What can I do to solve this?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like it can be won by <a href="https://docs.python.org/3/library/sys.html#sys.getrecursionlimit" rel="nofollow noreferrer">Docs</a>:
<code>setrecursionlimit()</code>.<br/>
<strong>But</strong> remember, that recursion is not free - it consumes <code>memory_of_function_consumes * amount_of_circles_of_recursion</code> - so you can run out of memory when you have a huge amount of recursion runs. Thats why that limit is hardcoded in Python, and I think it is bad idea to overwrite it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can manually set the recursion depth  <strong>But do so with care</strong></p>
<p><code>sys.setrecursionlimit(n)</code>  #replace n with the depth you want to achieve</p>
<p><strong>Cause</strong>: It occurs when the stack exceeds its limit(Stack Overflow)</p>
<p><strong>Workaround</strong>: Or use a iterative as opposed to recursion technique</p>
<p><strong>EDIT:</strong>
From the Python Doc</p>
<p><a href="https://docs.python.org/2/library/sys.html#sys.setrecursionlimit" rel="nofollow noreferrer">https://docs.python.org/2/library/sys.html#sys.setrecursionlimit</a></p>
<blockquote>
<p>Set the maximum depth of the Python interpreter stack to limit. This
  limit prevents infinite recursion from causing an overflow of the C
  stack and crashing Python.</p>
<p>The highest possible limit is platform-dependent. A user may need to set the limit higher when she has a program that requires deep
  recursion and a platform that supports a higher limit. This should be
  done with care, because a too-high limit can lead to a crash.</p>
</blockquote>
</div>
<span class="comment-copy">It's unclear what your code is supposed to do, and all it does is throw a NameError because there are undefined variables. Please post a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">What exactly do you have in <code>train_text</code>? This <a href="https://github.com/nltk/nltk/issues/1971" rel="nofollow noreferrer">github.com/nltk/nltk/issues/1971</a> suggests that very long words will cause the recursion error. Have you tried with a short, simple training example?</span>
<span class="comment-copy">I had some text comment like that (this is a serie took from a dataframe) 0         Explanation\nWhy the edits made under my usern... 1         D'aww! He matches this background colour I'm s... 2         Hey man, I'm really not trying to edit war. It...</span>
<span class="comment-copy">What is the maximum length of the strings in <code>train_text</code>? (You can check this using <code>print(max(len(s) for s in train_text))</code>)</span>
<span class="comment-copy">max length of the strings in my serie is 5000</span>
<span class="comment-copy">Hi, i'm still a beginner in python, can you show me how my code will look like with an iterative script ?</span>
<span class="comment-copy">This is not recommended, as <a href="https://stackoverflow.com/a/41916112/5951320">it can segfault if the stack size is not increased</a>. Better to use iteration rather than unbounded recursion in Python, or use a language that supports tail recursion.</span>
<span class="comment-copy">@user9176398: Identify the number of times your code is iterating and replace the N with the number</span>
<span class="comment-copy">@Chris_Rands I don't think that the analogy holds. An index error is always a bug but recursion isn't always a bug. Having said that, I agree that this isn't a good solution.</span>
<span class="comment-copy">@user9176398: Did setting the recursion limit recursion limit help ?</span>
