<div class="post-text" itemprop="text">
<pre><code>with open('file.txt', 'w') as output:
    output.write('stuff')
    output.write('hello there')
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>5
11
</code></pre>
<p>How do I silence the those printed character lengths (5, 11)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python shells assume users want to see what's going on as the program executes. They don't display assignments, but they do display just about everything else. Normally that's useful</p>
<pre><code>&gt;&gt;&gt; foo = 1
&gt;&gt;&gt; foo
1
&gt;&gt;&gt; os.path.isfile('file.txt')
False
&gt;&gt;&gt; 
</code></pre>
<p>But it can get too chatty</p>
<pre><code>&gt;&gt;&gt; with open('file.txt', 'w') as output:
...     output.write('stuff')
... 
5
&gt;&gt;&gt;
</code></pre>
<p>If you are running a shell and you want to reduce the chatter, you can assign the function's return value to a throwaway variable. By tradition in python, that's <code>_</code></p>
<pre><code>&gt;&gt;&gt; 
&gt;&gt;&gt; with open('file.txt', 'w') as output:
...     _ = output.write('stuff')
... 
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">Are you trying this in the REPL? Have you tried executing it as a script and seeing if that solves your problem?</span>
<span class="comment-copy">are you using jupiter notebook? the output shouldn't go through <code>stdout</code>, it's just the returned value - in a script you can just ignore it like @JohnOss said</span>
<span class="comment-copy">From the <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">docs for <code>write</code></a>: <i>"f.write(string) writes the contents of string to the file, returning the number of characters written."</i> (This behavior was introduced in python3- in python2 this returned <code>None</code>). I am guessing, as blue-phoenox said, that you are running these line by line in an interpreter. Check the contents of <code>file.txt</code> - it should be correct.</span>
<span class="comment-copy">Python shells typically print the output of a line, but scripts don't. If you find it annoying, assign the result to a variable `foo = output.write('stuff')``</span>
<span class="comment-copy">@tdelaney if you'd like to write that as an answer I'll mark it correct.</span>
