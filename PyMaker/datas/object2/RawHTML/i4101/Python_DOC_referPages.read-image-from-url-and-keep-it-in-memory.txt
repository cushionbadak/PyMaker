<div class="post-text" itemprop="text">
<p>I am using Python and requests library. I just want to download an image to a numpy array for example and there are multiple questions where you can find different combinations (using opencv, PIL, requests, urllib...)</p>
<p>None of them work for my case. I basically receive this error when I try to download the image:</p>
<pre><code>cannot identify image file &lt;_io.BytesIO object at 0x7f6a9734da98&gt;
</code></pre>
<p>A simple example of my code can be:</p>
<pre><code>import requests
from PIL import Image

response = requests.get(url, stream=True)
response.raw.decode_content = True
image = Image.open(response.raw)
image.show()
</code></pre>
<p>The main this that is driving me crazy is that, if I download the image to a file (using urllib), the whole process runs without any problem!</p>
<pre><code>import urllib
urllib.request.urlretrieve(garment.url, os.path.join(download_folder, garment.get_path()))
</code></pre>
<p>What can I be doing wrong?</p>
<h1>EDIT:</h1>
<p>My mistake was finally related with URL formation and not with requests 
 or PIL library. My previous code example should work perfectly if the URL is correct.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are using data from <code>requests.raw</code> object somehow before save them in <code>Image</code> but requests response raw object is not seekable, you can read from it only once:</p>
<pre><code>&gt;&gt;&gt; response.raw.seekable()
False
</code></pre>
<p>First open is ok:</p>
<pre><code>&gt;&gt;&gt; response.raw.tell()
0
&gt;&gt;&gt; image = Image.open(response.raw)
</code></pre>
<p>Second open throws error (stream position is on the end of file already):</p>
<pre><code>&gt;&gt;&gt; response.raw.tell()
695  # this file length https://docs.python.org/3/_static/py.png

&gt;&gt;&gt; image = Image.open(response.raw)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2295, in open
    % (filename if filename else fp))
OSError: cannot identify image file &lt;_io.BytesIO object at 0x7f11850074c0&gt;
</code></pre>
<p><strong>You should save data from requests response in file-like object (or file of course) if you want to use them several times</strong>:</p>
<pre><code>import io
image_data = io.BytesIO(response.raw.read())
</code></pre>
<p>Now you can read image stream and rewind it as many times as needed:</p>
<pre><code>&gt;&gt;&gt; image_data.seekable()
True

image = Image.open(image_data)
image1 = Image.open(image_data)
</code></pre>
</div>
<span class="comment-copy">Try adding <code>output.seek(0)</code> before the <code>Image.open</code></span>
<span class="comment-copy">This is a duplicate of <a href="https://stackoverflow.com/questions/23587426/pil-open-method-not-working-with-bytesio" title="pil open method not working with bytesio">stackoverflow.com/questions/23587426/â€¦</a></span>
<span class="comment-copy">I think you might be wrong! Where I am supposed to call seek? In the question you mentioned they are writing the image into a file but that exactly what I am trying to avoid</span>
<span class="comment-copy">Your first code block works fine for me. What version of python/requests/PIL are you using? I used: <code>Pillow==5.1.0 requests==2.18.4</code> on python 2.7</span>
<span class="comment-copy">I working with: python:3.5, requests: 2.18.4, PIL: 5.1.0</span>
<span class="comment-copy">This is a great observation! Unfortunately it is not related with the problem I am having. I am working with an API to retrieve image links from there, so I will try to do some investigation around this!</span>
<span class="comment-copy">@m33n i think it is no matter from where you are getting file urls - im testing with image from this file <code>https://docs.python.org/3/_static/py.png</code></span>
<span class="comment-copy">Yes, it does actually work now with an external link so the problem must be related with my url</span>
<span class="comment-copy">@m33n anyway file-like objects from io module is the way to go if you are working with files in memory</span>
<span class="comment-copy">I was trying to avoid the writing procedure to optimize my code and process the image directly</span>
