<div class="post-text" itemprop="text">
<p>I have this exercise:</p>
<p>You have a tree graph as input, and you need to remove its leaves. So you need to remove the empty lists from a list of lists.</p>
<p>For example this:</p>
<p>[[[[], []], [[], []]], [[], [], []]]</p>
<p>becomes this:
[[[], []], []]</p>
<p>I tried to use pop and del, but the teacher said to use recursion. Also it gives None as an output. But I can't figure out how to. Can you explain it how to or can you help to solve this question? </p>
<pre><code>  def tree_cut(tree):
  for i in range(len(tree)):
      if tree[i]=="":
          tree.pop(i)
          return tree
          for k in tree[i]=="":
              if k=="":
                  tree.remove(k)
                  return tree
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The solution:</p>
<pre><code>def tree_cut(tree):
    return [tree_cut(x) for x in tree if x]
</code></pre>
<p>uses a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> to iterate, filter and transform nodes in the tree.</p>
<p>Can be written also in terms of <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> and <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code></a>:</p>
<pre><code>def tree_cut(tree):
    return list(map(tree_cut, filter(None, tree)))
</code></pre>
<p>The <code>if x</code> part <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">tests if the list is not empty</a>.</p>
<pre><code>&gt;&gt;&gt; tree = [[[[], []], [[], []]], [[], [], []]]
&gt;&gt;&gt; tree_cut(tree)
[[[], []], []]
</code></pre>
</div>
<span class="comment-copy"><code>def remove_leaves(tree): return [remove_leaves(x) for x in tree if x]</code></span>
