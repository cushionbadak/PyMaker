<div class="post-text" itemprop="text">
<p>I am new to coding and I need some help. I'm trying to randomize these rooms or 'scenes' in a text adventure but whenever I try to randomize it they don't even show up when I run it! Here is the script:</p>
<pre><code>from sys import exit
import time
import random
#import another file here to use in this

class Scene(object):
    def enter(self):
        print "Not yet configured."



class Start():

    def start(self):
        print "Hello. How are you? You are about to play a game that is set in a crazy world."
        print "We are creating your profile right now."
        epic = raw_input("Enter your name here: ")
        print "Hello, %s." % epic
        print "You are being transported to a randomly generated world. Try to survive as long as possible."
        print "Here's some advice, %s: Don't die. Make the right choice. Be careful." % epic
        print "The rules will be shown to you soon."
        print "LOADING..."
        time.sleep(1)
        return Rules().rules()

class Rules(Scene):

    def rules(self):
        print ""
        print "-------------"
        print ""
        print "These are the rules:"
        print "1: Be a good sport. This game takes skill and memory to be able to win, so try your best to succeed."
        print "2: Every time you die, you do not get to respawn, so you will be prompted to either just not play anymore"
        print "or play again. If you decide to play again, you will most likely be on a new world with a new puzzles."
        print "3: Finally, have fun. Hopefully this game brings you joy, so have a great time playing it."
        return random.choice(the_shuffler)

class BoilerRoom(Scene):

    def boiler_room(self):
        print "You are in the boiler room."

class Kitchen(Scene):

    def kitchen(self):
        print "You are in the kitchen."

class Pool(Scene):

    def pool(self):
        print "You are in the pool."

class TennisCourts():

    def tennis_courts(self):
        print "You are in the tennis courts."

class SoccerField():

    def soccer_field(self):
        print "You are on the soccer field."

class Map(object):

    scenes = {
        Rules(): 'rules',
        BoilerRoom(): 'boiler_room',
        Kitchen(): 'kitchen',
        Pool(): 'pool',
        TennisCourts(): 'tennis_courts',
        SoccerField(): 'soccer_field'
    }

the_shuffler = (BoilerRoom, Kitchen, Pool, TennisCourts, SoccerField)

Start().start()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to call the method on the class returned by <code>random.choice(the_shuffler)</code>. </p>
<p>It would help if each class had the description printing method named the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>Somehow you have the syntax the wrong way round. You create a dictionary with <code>class</code>-instances as <em>keys</em> and <code>strings</code> as <em>values</em>. </p>
<p>If you want to call functions/classes randomized you have to assign a variablename to each function, randomize the order of these names and call the returned function by applying () to it. </p>
<p>If you want to use classes or functions as values of your dict, does not really matter - for classes you would also somehow have to store which method to call (or simply print the class and code a working <strong>str</strong>() for it). </p>
<p>My example uses functions directly:  </p>
<pre><code>def a():
    print "a"

def b():
    print "b" 

def c():
    print "c"

def d():
    print "d"

def e():
    print "e"



import random


# you would have to incoporate this somewhere into your program logic.
# probably calling it from Rules() - somehow. 

def menu():
    # map functions to keys
    #     "a"   is a string, the name for a function
    #     a     is the function
    #     a()   calls the function, as does options["a"]() 
    options = { "a" : a,  "b" : b,  "c" : c,  "d" : d,  "e" : e}

    # get all possible names
    listOfKeys = list(options.keys())

    # shuffle in place into random order
    random.shuffle(listOfKeys)

    # visit them in this order
    for r in listOfKeys:  
        options[r]() # get function-value from the dict and () it 


print "First try:" 
menu()

print "\n\nSecond try:"
menu()
</code></pre>
<p>Output:</p>
<pre><code>First try:
e
c
d
a
b


Second try:
b
c
a
e
d
</code></pre>
<p>Link to docu for <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle()</a></p>
<p>Why using classes here would benefit your code is not clear to me... </p>
</div>
<span class="comment-copy">You have to clarify as to what you mean by not showing up? Please give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy"><code>..they don't even show up..</code> ?? when you call <code>Start().start()</code> you don't do anything with the return value.</span>
<span class="comment-copy">Thank you for your reply. Like I said, I am new to coding and this is my first real text adventure. I will try to do what you said.</span>
