<div class="post-text" itemprop="text">
<pre><code>a = [1, 2, 3]    
b = [a, b, c, d]    
c = ["why", "cant", "i", "make", "this", "work"]
</code></pre>
<p>Desired output:</p>
<pre><code>a     b     c  
1     a     why  
2     b     cant  
3     c     I  
      d     make  
            this  
            work  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can reference this code.</p>
<pre><code>a = [1, 2, 3]
b = ['a', 'b', 'c', 'd']
c = ["why", "cant", "i", "make", "this", "work"]

def get_safenode(l, i):
    if i&lt;len(l):
        an=l[i]
    else:
        an=''
    return str(an)

maxlen = max(len(a), len(b), len(c))
print('%3s %3s %-5s' % ('a','b','c'))
for i in range(maxlen):
    an = get_safenode(a, i)
    bn = get_safenode(b, i)
    cn = get_safenode(c, i)
    print('%3s %3s %-5s'%(an, bn, cn))
</code></pre>
<p>The output is this.</p>
<pre><code>  a   b c    
  1   a why  
  2   b cant 
  3   c i    
      d make 
        this 
        work 
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.zip_longest</a></span>
<span class="comment-copy">show us some code please</span>
<span class="comment-copy"><code>for x,y,z in itertools.zip_longest(a,b,c, fillvalue=''): print(f"{x:&lt;4}{y:&lt;4}{z:&lt;4}")</code></span>
