<div class="post-text" itemprop="text">
<p>This is a part of our assignments for Computer Programming in high school. These are the instructions. <a href="https://prospect.schoolloop.com/file/1407107943880/1376109333800/2888156401519472863.pdf" rel="nofollow noreferrer">https://prospect.schoolloop.com/file/1407107943880/1376109333800/2888156401519472863.pdf</a></p>
<pre><code>def c7():
    myList = [7, 10, 94, 2, 54, 2, 19, 4, 11]
    print (myList)
    valueToSearch = int(input("Enter the value to search for: "))

    for n in range(0, len(myList)):
        if valueToSearch == myList[n]:
            print (myList[n], "is in index", n)
        elif (n == len(myList)-1) and (valueToSearch != myList[n]):
            print ("No matches")
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; c7()
[7, 10, 94, 2, 54, 2, 19, 4, 11]
Enter the value to search for: 1
No matches
&gt;&gt;&gt; c7()
[7, 10, 94, 2, 54, 2, 19, 4, 11]
Enter the value to search for: 7
(7, 'is in index', 0)
No matches
</code></pre>
<p>The last line "No matches" is unexpected when the input is 7.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>def c7():
    myList = [7, 10, 94, 2, 54, 2, 19, 4, 11]
    print (myList)
    valueToSearch = int(input("Enter the value to search for: "))

    for n in range(0, len(myList)):
        if valueToSearch == myList[n]:
            print (myList[n], "is in index", n)
        elif (n == len(myList)-1) and (valueToSearch not in myList):
            print ("%s is not found in list"%valueToSearch)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you find the value in the list, you should stop searching.</p>
<pre><code>for n in range(0, len(myList)):
    if valueToSearch == myList[n]:
        print (myList[n], "is in index", n)
        break
    elif (n == len(myList)-1) and (valueToSearch != myList[n]):
        print ("No matches")
</code></pre>
<p>You could then improve this by using python's for-else clause:</p>
<pre><code>for n in range(0, len(myList)):
    if valueToSearch == myList[n]:
        print (myList[n], "is in index", n)
        break
else:
    print ("No matches")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Think about what happens if you enter a number that isn't 11. Let's say you pick <code>2</code>.</p>
<p>The final item is reached. At this point, <code>n == len(myList)-1)</code> is <code>True</code>, and since <code>2 != myList[n]</code>, that condition is <code>True</code> as well, so "No Matches" is printed.</p>
<p>You could use another variable (e. g. <code>found = False</code>) that is set to <code>True</code> as soon as the first match is found, and then check for that at the end of the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>You iterate over the list, for each value it checks if it is equal to your looked for value, if it is, it prints the one thing, else the other - hence you get one output per element in the list.</p>
<p>Edit: reread and saw you need to find all, not only the first:</p>
<pre><code>def c7():
    myList = [7, 10, 94, 2, 54, 2, 19, 4, 11]
    print (myList)
    valueToSearch = int(input("Enter the value to search for: "))

    foundOne = False # none found so far
    for idx,value in enumerate(myList): # enumerate gives you index + value of each elem
        if value == valueToSearch:
            print (valueToSearch, "is in index", idx)    
            foundOne = True  # found (at least) one

    if not foundOne: 
        print ("No matches")
</code></pre>
<hr/>
<p>If you had to only get the first, simply get the <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">index of the element</a> in the list and capture the error if it is not in it.</p>
<p>That fits with pythons <a href="https://stackoverflow.com/questions/12265451/ask-forgiveness-not-permission-explain">ask forgiveness not permission</a>:</p>
<pre><code>def c7findFirst():
    myList = [7, 10, 94, 2, 54, 2, 19, 4, 11]
    print (myList)
    valueToSearch = int(input("Enter the value to search for: "))
    try:
        idx = myList.index(valueToSearch)
        print (valueToSearch, "is in index", idx)
    except ValueError: # capture the error if thing is not in list
        print ("No matches")
</code></pre>
</div>
<span class="comment-copy">Because you <b>always</b> check on each iteration. Regardless of whether or not you've found your value... so regardless of whether you find <code>19</code> at index <code>6</code>, you still check <code>elif (n == len(myList)-1) and (valueToSearch != myList[n])</code>, which happens to be true on the last iteration...</span>
<span class="comment-copy">But if you break, you'll stop after the first match.</span>
<span class="comment-copy">@TimPietzcker: True. If duplicates are in the list this would only print the first value,</span>
