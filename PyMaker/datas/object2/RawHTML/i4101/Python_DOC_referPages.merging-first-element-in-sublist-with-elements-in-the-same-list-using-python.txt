<div class="post-text" itemprop="text">
<p>I have a list below. I need to use it to create a new nested list with only the first element in the sublist with the last element in list. </p>
<pre><code>a=[[a,b,c],3]
</code></pre>
<p>the outcome should look like</p>
<pre><code>b=[[a,3],[b,3],[c,3]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>zip()</code>:</p>
<pre><code>In [79]: a=[['a','b','c'],3]

In [80]: list(zip(a[0], [a[1]]*len(a[0])))
Out[80]: [('a', 3), ('b', 3), ('c', 3)]
</code></pre>
<p>Or:</p>
<pre><code>In [83]: (a, b, c), num = a

In [84]: [(a, num), (b, num), (c, num)]
Out[84]: [('a', 3), ('b', 3), ('c', 3)]
</code></pre>
<p>Or more general:</p>
<pre><code>In [85]: lst, num = a

In [86]: from itertools import repeat

In [87]: list(zip(lst, repeat(num, len(lst))))
Out[87]: [('a', 3), ('b', 3), ('c', 3)]
</code></pre>
<p>Another way is using a nested list comprehension:</p>
<pre><code>In [15]: a
Out[15]: [['a', 'b', 'c'], [1, 2]]

In [16]: [(j, i) for i in a[1] for j in a[0]]
Out[16]: [('a', 1), ('b', 1), ('c', 1), ('a', 2), ('b', 2), ('c', 2)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; a = [['a','b','c'], 3]
&gt;&gt;&gt; sublist, value = a
&gt;&gt;&gt; [[x, value] for x in sublist]
[['a', 3], ['b', 3], ['c', 3]]
</code></pre>
</div>
<span class="comment-copy">Should <code>a=[[a,b,c],3]</code> be <code>a=[['a','b','c'],3]</code>?</span>
<span class="comment-copy">Yes, it works fine, thanks a lot, but do i have to do some changes if a =[['a','b','c'],[1,2]] and the output looks like a=[('a',1),('b',1),('c',1),('a',2),('b',2),('c',2)]</span>
<span class="comment-copy">If the order is not important you can simply use <code>itertools.product</code>. <code>list(product(*a))</code>. Or check the update.</span>
<span class="comment-copy">WELL, Thanks a lot, you helped me a lot, i appreciate your effort.</span>
