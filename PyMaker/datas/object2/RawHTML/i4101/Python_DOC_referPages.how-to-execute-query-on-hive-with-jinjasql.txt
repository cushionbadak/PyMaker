<div class="post-text" itemprop="text">
<p>Is it possible to execute query for hive using jinjasql and pyhive?
When I tried it I got following error.</p>
<pre><code>pyhive.exc.ProgrammingError: Unsupported param format: 
odict_values(['XXXXXXX'])
</code></pre>
<p>I can execute query with jinjasql as well as with pyhive but I need to use both together to prevent sql injection. </p>
<p>Environment (all on the same VM.)</p>
<ul>
<li><a href="https://jp.hortonworks.com/downloads/#sandbox" rel="nofollow noreferrer">Hortonworks Data Platform (HDPÂ®) 2.6.4 on Hortonworks Sandbox for
VirtualBox</a> </li>
<li><a href="https://github.com/hashedin/jinjasql" rel="nofollow noreferrer">Jinjasql</a> 0.1.6</li>
<li><a href="https://github.com/dropbox/PyHive/blob/master/pyhive/common.py" rel="nofollow noreferrer">PyHive</a> 0.5.1</li>
<li>Python 3.5.5</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Pyhive supports list, tuple and dict in params. While jinjasql supports multiple param style, and as mentioned in the documentation <a href="https://github.com/hashedin/jinjasql#multiple-param-styles" rel="nofollow noreferrer">here</a></p>
<p>It should return a list, except for 'named' or 'pyformat' which would return a dictionary. Since Jinjasql creates a Ordereddict it is throwing this exception. Solution should be to use a param style which returns a list.</p>
<p>Hope this helps :)</p>
<p>UPDATE for python 3:
In python 3 you will have to convert the parameters to list as dict.values() returns a <a href="https://docs.python.org/3/library/stdtypes.html#dict-views" rel="nofollow noreferrer">view</a> of the dictionary values.</p>
</div>
<div class="post-text" itemprop="text">
<p>As you mentioned that PyHive allows list for execute parameter I used list function following your suggestion to convet bind_params to a list.</p>
<pre><code>from pyhive import hive
from jinjasql import JinjaSql
j = JinjaSql()

template = "SELECT * FROM sample_07 WHERE code = {{ codex }}"
data = {'codex': '13-1061'}

query, bind_params = j.prepare_query(template, data)
updated_bind_params = list(bind_params)

cursor = hive.connect('sandbox.hortonworks.com').cursor()
cursor.execute(query, updated_bind_params)
print(cursor.fetchall())
</code></pre>
<p>It can fetch record from hive. </p>
</div>
<span class="comment-copy">It works fine. Thank you so much for your help.</span>
