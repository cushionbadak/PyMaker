<div class="post-text" itemprop="text">
<p>I'm doing this project where I have to make python password generator which should be between 12 and 30 characters long, the characters should be a combination of letters and numbers and the letters should be both capitalized and lower case. I have code that gives me a password, here's that code:</p>
<pre><code>import random
import string

letters = ("string.ascii_letters")
digits = ("string.digits")
length = random.randint(12,30)
psswrd = ""

for i in range(length):
     rndmlttrs = random.randrange(len(letters))
     rndmdgts = random.randrange(len(digits))
     psswrd = psswrd + letters[rndmlttrs] + digits[rndmdgts]

print(psswrd)
</code></pre>
<p>However, when I run it, it gives me something that looks like this:
    encinntgl.iieil.crggei_gng.t_nsi.itiltr.itsgagtrgtedldtsn.</p>
<p>Not only does it not contain a combination of uppercase, lowercase, and digits, it exceeds the range needed, I don't know what I'm doing wrong, so if someone could help me I'd appreciate it a lot.</p>
</div>
<div class="post-text" itemprop="text">
<p>The biggest issue in your current code is that you assign strings to <code>letters</code> and <code>digits</code>, instead of the actual items you want to access from the <code>string</code> library.  Try instead:</p>
<pre><code>letters = string.ascii_letters
digits = string.digits
</code></pre>
<p><strong>but...</strong></p>
<p><em>You should not be using the random library to generate passwords, as it is not cryptographically secure</em></p>
<p>Instead use the <a href="https://docs.python.org/3/library/secrets.html" rel="nofollow noreferrer"><code>secrets</code></a> library.</p>
<blockquote>
<p>In particularly, secrets should be used in preference to the default pseudo-random number generator in the random module, which is designed for modelling and simulation, not security or cryptography.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Couple of issues:
As mentioned by others, you were using the <code>string.ascii_letters</code> and <code>string.digits</code> wrong.  Second, in your loop you were doubling the number of characters generated by random because you were adding both letters and the digits... so you can either divide by 2 or you can go from 6 to 15 as shown below.</p>
<pre><code>import random
import string

letters = string.ascii_letters
digits = string.digits
length = random.randint(6,15)
psswrd = ""

for i in range(length):
     rndmlttrs = random.randrange(len(letters))
     rndmdgts = random.randrange(len(digits))
     psswrd = psswrd + letters[rndmlttrs] + digits[rndmdgts]

print(psswrd)
</code></pre>
<p>However, please note that this gives you a password that always alternates between letter and number.  Better way to do it would be:</p>
<pre><code>letters = string.ascii_letters
digits = string.digits
choice = letters + digits*5
length = random.randint(12,30)
psswrd = ""

for i in range(length):
     rndmlttrs = random.randrange(len(choice))
     psswrd = psswrd + choice[rndmlttrs]

print(psswrd)
</code></pre>
<p>In this solution I combined your strings of digits and letters and made them almost the same length (multiply by 5) so there is an equal chance of getting either a letter or number.  Then I selected from that joined up string.</p>
</div>
<span class="comment-copy">Take a look at the values of your <code>letters</code> and <code>digits</code> variables. Then take a look at the values you're assigning them to.</span>
<span class="comment-copy">Are you aware that your <code>letters</code> variable literally contains: <code>"string.ascii_letters"</code>?</span>
<span class="comment-copy">letters and digits are both variables of type string that literally contain "string.ascii_letters" and "string.digits". Which is why the generated password string had only characters that are contained within those two strings.</span>
<span class="comment-copy">shouldnt this be moved to codereview ?</span>
<span class="comment-copy">@zython Why would you move code that 1) doesn't work and 2) doesn't work because of a <i>typo</i> to CodeReview? Just close it as off-topic.</span>
