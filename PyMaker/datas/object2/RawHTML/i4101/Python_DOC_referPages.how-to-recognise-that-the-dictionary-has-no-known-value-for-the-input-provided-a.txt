<div class="post-text" itemprop="text">
<p>I am using a Python dictionary to read DNA bases into codons however want the program to recognise if nonsense is inputted into this. Currently all that happens is there is a key error when using something like </p>
<p>"codon += cod[F[x]]"</p>
<p>Is there a way to search the string of bases (AGCTATATCAT) (for example) for strings not found in the dictionary? For example if other characters that aren't ACGT were in it how would I detect this? </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can check if all characters in a string are in a given <code>set</code> by doing the following:</p>
<pre><code>if set(string).difference(set("AGCT")):
    # There are characters other then 'AGCT' in string
else:
    # All characters in the string are one of "AGCT"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A quick way to validate that every char in a string is a valid base is to use the <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.issuperset" rel="nofollow noreferrer"><code>set.issuperset</code></a> method. Eg,</p>
<pre><code>valid_bases = set('ACGT')

for s in ('AGCTAT', 'ATCQAT'):
    print(s, valid_bases.issuperset(s))
</code></pre>
<p><strong>output</strong></p>
<pre><code>AGCTAT True
ATCQAT False
</code></pre>
<p>If you wish to identify the illegal chars, you can use <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.difference" rel="nofollow noreferrer">set difference</a>:</p>
<pre><code>valid_bases = set('ACGT')

for s in ('AGCTAT', 'ATCQAT', 'ATCQAZT'):
    bad = set(s) - valid_bases
    print(s, bad or "ok")
</code></pre>
<p><strong>output</strong></p>
<pre><code>AGCTAT ok
ATCQAT {'Q'}
ATCQAZT {'Z', 'Q'}
</code></pre>
</div>
<span class="comment-copy">Assuming <code>F</code> is the <code>dict</code> in question, <code>x in F</code></span>
<span class="comment-copy">Thanks this was the tidiest solution and worked great. Thanks for the help.</span>
<span class="comment-copy">This could trigger on a correct sequence if it did not contain one of the 4 characters. For however for long strings this is probably not an issue.</span>
<span class="comment-copy">@ktzr Nope. It will not trigger. <code>a.diffrence(b)</code>: Only elements in a that are not in b will be returned.</span>
<span class="comment-copy">Thanks I'll use the set difference to add output of identifying the illegal characters. Thanks for the help</span>
