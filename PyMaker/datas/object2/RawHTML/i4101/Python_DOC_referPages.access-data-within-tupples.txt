<div class="post-text" itemprop="text">
<p>I have a list of tupples like so:</p>
<pre><code>     tupples=[(41, 'Mike'), (29, 'Tom'), (28, 'Sarah'), (22, 'Jane'), (18, 'John']
</code></pre>
<p>The ints are ages of the individuals and the strings are their names. The tupples are ordered by the individials age on purpose.</p>
<p>I understand list indexes work here. So if I want to access the first tupple then:</p>
<pre><code>  tupples[0] 
</code></pre>
<p>will access </p>
<pre><code> (41, 'Mike')
</code></pre>
<p>How do I access the values within the tupples?</p>
<p>I would like to loop through the tupple and print:
    "They are" AGE "years old, and their name is" NAME. </p>
<p>So for tupples[0] it would look like:</p>
<pre><code> "They are" 41 "years old, and their name is" Mike. 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess
<code>tupples[1][0]</code>
would work just fine.</p>
<p>Edit:
If you want both age and name as variables, do something like this:</p>
<pre><code>age, name = tupples[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">sequence unpacking</a> like:</p>
<pre><code>data = [(41, 'Mike'), (29, 'Tom'), (28, 'Sarah'),
        (22, 'Jane'), (18, 'John')]

for age, name in data:
    print("They are {} years old, and their name is {}.".format(age, name))
</code></pre>
<p>Or you can access the elements in the tuple as <code>[0]</code> and <code>[1]</code> like:</p>
<pre><code>for datum in data:
    print("They are {} years old, and their name is {}.".format(datum[0], datum[1]))
</code></pre>
<p>Or you can use <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">argument unpacking</a> like:</p>
<pre><code>for datum in data:
    print("They are {} years old, and their name is {}.".format(*datum))
</code></pre>
</div>
<span class="comment-copy">Actually you should write <code>tupples[0]</code> to access the first element...</span>
<span class="comment-copy">You index tuple objects the exact same way as lists</span>
<span class="comment-copy">Youre right, tupples[0] for the first instance - That was a mistake, my apologies. I'll change that now.</span>
<span class="comment-copy">I did not know about this approach, thank you I will try this</span>
<span class="comment-copy">Thank you I will try this.</span>
