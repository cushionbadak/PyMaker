<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/41476711/python-frozensets-comparison">Python: frozensets comparison</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2765892/python-see-if-one-set-contains-another-entirely">Python: See if one set contains another entirely?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>How do comparison operators work? I thought they could be used only to compare numeric values, 5 &lt;= 8, etc. But in this code <em>sets</em> are compared:</p>
<pre><code>str = 'The quick Brow Fox'
alphabet = string.ascii_lowercase
alphaset = set(alphabet)

b = alphaset &lt;= set(str.lower()) # Does it automatically extract length of objects?

print(len(alphaset))  # 26
print(len(set(str.lower())))  # 19
print(b)

26
15
False
</code></pre>
<p>I thought that it is impossible to do. <code>alphaset &lt;= set(str.lower())</code>, you know literally is, e. g. <code>set() &lt;= set()</code>. Does an operator implicitly call <code>len()</code> on such objects to find some numeric values to compare?</p>
<p>How does it know that one sequence is bigger, less or equal etc. to another?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python supports <a href="https://en.wikipedia.org/wiki/Operator_overloading" rel="nofollow noreferrer">operator overloading</a>, which means that any class can implement methods that provide access to the standard operators.</p>
<p>For full documentation of what you can do in Python, including which methods a class can implement to support different operators, check out the <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">Python data model</a>.</p>
<p>For a description of how a built-in type like <code>set</code> implements its operators, see that type's documentation. For example, <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">documentation for the set type</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">Python manual</a>:</p>
<blockquote>
<p><code>issubset(other)</code><br/>
<code>set &lt;= other</code></p>
<p>       Test whether every element in the set is in <em>other</em>.</p>
</blockquote>
<p>There are a variety of <a href="https://docs.python.org/3/reference/datamodel.html#basic-customization" rel="nofollow noreferrer">magic methods you can implement</a> if you want to overload operators for your own classes. When you call <code>a &lt; b</code> Python defers to <a href="https://docs.python.org/3/reference/datamodel.html#object.__le__" rel="nofollow noreferrer"><code>a.__le__(b)</code></a> if such a method exists.</p>
</div>
<span class="comment-copy">I've found a better duplicate. Maybe not optimal. it's about <code>frozenset</code>. very similar to <code>set</code></span>
<span class="comment-copy">I suspect you actually wanted <code>alphaset &gt;= set(str.lower())</code> there. FWIW, <code>alphaset.issubset(s.lower())</code> is a little more efficient than <code>alphaset &lt;= set(s.lower())</code> since the former doesn't need to convert its arg to a set. (BTW, please don't use <code>str</code> as a variable name. That shadows the built-in <code>str</code> type, which can lead to confusing error messages).</span>
