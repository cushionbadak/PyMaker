<div class="post-text" itemprop="text">
<p>The second assertion fails, indicating that <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="nofollow noreferrer">importlib.reload</a> silently failed to reload the modified module, can anyone explain why?</p>
<pre><code>import os
import sys
import tempfile
import importlib


# Create some module and import it
dir = tempfile.TemporaryDirectory()
os.mkdir(os.path.join(dir.name, 'test_package'))
with open(os.path.join(dir.name, '__init__.py'), "w") as f:
    f.write("\n")
with open(os.path.join(dir.name, 'test_package', 'some_module.py'), "w") as f:
    f.write("def a():\n    print(\"old\")\n    return 0\n")
sys.path.insert(0, dir.name)

from test_package import some_module

# Check that imported code works as expected
assert some_module.a() == 0

# Alter module and reload
with open(os.path.join(dir.name, 'test_package', 'some_module.py'), "w") as f:
    f.write("def a():\n    print(\"new\")\n    return 1\n")

importlib.reload(some_module)

# Check wether modifications have been reloaded
assert some_module.a() == 1

sys.path.pop(0)
</code></pre>
<p>demo: <a href="https://ideone.com/wtaENF" rel="nofollow noreferrer">https://ideone.com/wtaENF</a></p>
<p>EDIT:
- python 3.6.1
- archlinux (linux 4.10.13)</p>
</div>
<div class="post-text" itemprop="text">
<p>The following code, extended with <code>time.sleep(10)</code> doesn't throw the assertion error (the safe threshold appear to be one second). This provides the explanation why the reload didn't work as expected. So the answer to the question why the assertion error is raised is</p>
<blockquote>
<p><strong><code>importlib.reload()</code> uses file timestamp to decide about re-compiling the cached file.</strong></p>
</blockquote>
<p>If the code update/change happens very fast, the cached and the script file are considered to be the same version and there is no re-compiling of the cached files from which modules are re-loaded. </p>
<pre><code>import os
import sys
import tempfile
import importlib
import time

# Create some module and import it
dir = tempfile.TemporaryDirectory()
os.mkdir(os.path.join(dir.name, 'test_package'))
with open(os.path.join(dir.name, '__init__.py'), "w") as f:
    f.write("\n")
with open(os.path.join(dir.name, 'test_package', 'some_module.py'), "w") as f:
    f.write("def a():\n    print(\"old\")\n    return 0\n")
sys.path.insert(0, dir.name)

from test_package import some_module

# Check that imported code works as expected
assert some_module.a() == 0
</code></pre>
<blockquote>
<pre><code>time.sleep(10)
</code></pre>
</blockquote>
<pre><code># Alter module and reload
with open(os.path.join(dir.name, 'test_package', 'some_module.py'), "w") as f:
    f.write("def a():\n    print(\"new\")\n    return 1\n")

importlib.reload(some_module)

# Check wether modifications have been reloaded
assert some_module.a() == 1

sys.path.pop(0)
</code></pre>
</div>
