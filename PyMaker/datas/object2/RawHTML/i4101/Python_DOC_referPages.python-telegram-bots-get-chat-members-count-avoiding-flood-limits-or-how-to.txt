<div class="post-text" itemprop="text">
<p>I'm checking a list of around 3000 telegram chats to get and retrieve the number of chat members in each chat using the <code>get_chat_members_count</code> method.</p>
<p>At some point I'm hitting a flood limit and getting temporarily banned by Telegram BOT. </p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\alexa\Desktop\ico_icobench_2.py", line 194, in &lt;module&gt;
    ico_tel_memb = bot.get_chat_members_count('@' + ico_tel_trim, timeout=60)
  File "C:\Python36\lib\site-packages\telegram\bot.py", line 60, in decorator
    result = func(self, *args, **kwargs)
  File "C:\Python36\lib\site-packages\telegram\bot.py", line 2006, in get_chat_members_count
    result = self._request.post(url, data, timeout=timeout)
  File "C:\Python36\lib\site-packages\telegram\utils\request.py", line 278, in post
    **urlopen_kwargs)
  File "C:\Python36\lib\site-packages\telegram\utils\request.py", line 208, in _request_wrapper
    message = self._parse(resp.data)
  File "C:\Python36\lib\site-packages\telegram\utils\request.py", line 168, in _parse
    raise RetryAfter(retry_after)
telegram.error.RetryAfter: Flood control exceeded. Retry in 85988 seconds
</code></pre>
<p>The <code>python-telegram-bot</code> wiki gives a detailed explanation and example on how to avoid flood limits <a href="https://github.com/python-telegram-bot/python-telegram-bot/wiki/Avoiding-flood-limits" rel="nofollow noreferrer">here</a>.</p>
<p>However, I'm struggling to implement their solution and I hope someone here has more knowledge of this than myself.</p>
<p>I have literally made a copy and paste of their example and can't get it to work no doubt because i'm new to python. I'm guessing I'm missing some definitions but I'm not sure which. Here is the code below and after that the first error I'm receiving. Obviously the TOKEN needs to be replaced with your token.</p>
<pre><code>import telegram.bot
from telegram.ext import messagequeue as mq

class MQBot(telegram.bot.Bot):
    '''A subclass of Bot which delegates send method handling to MQ'''
    def __init__(self, *args, is_queued_def=True, mqueue=None, **kwargs):
        super(MQBot, self).__init__(*args, **kwargs)
        # below 2 attributes should be provided for decorator usage
        self._is_messages_queued_default = is_queued_def
        self._msg_queue = mqueue or mq.MessageQueue()

    def __del__(self):
        try:
            self._msg_queue.stop()
        except:
            pass
        super(MQBot, self).__del__()

    @mq.queuedmessage
    def send_message(self, *args, **kwargs):
        '''Wrapped method would accept new `queued` and `isgroup`
        OPTIONAL arguments'''
        return super(MQBot, self).send_message(*args, **kwargs)


if __name__ == '__main__':
    from telegram.ext import MessageHandler, Filters
    import os
    token = os.environ.get('TOKEN')
    # for test purposes limit global throughput to 3 messages per 3 seconds
    q = mq.MessageQueue(all_burst_limit=3, all_time_limit_ms=3000)
    testbot = MQBot(token, mqueue=q)
    upd = telegram.ext.updater.Updater(bot=testbot)

    def reply(bot, update):
        # tries to echo 10 msgs at once
        chatid = update.message.chat_id
        msgt = update.message.text
        print(msgt, chatid)
        for ix in range(10):
            bot.send_message(chat_id=chatid, text='%s) %s' % (ix + 1, msgt))

    hdl = MessageHandler(Filters.text, reply)
    upd.dispatcher.add_handler(hdl)
    upd.start_polling()
</code></pre>
<p>The first error I get is:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\alexa\Desktop\z test.py", line 34, in &lt;module&gt;
    testbot = MQBot(token, mqueue=q)
  File "C:\Users\alexa\Desktop\z test.py", line 9, in __init__
    super(MQBot, self).__init__(*args, **kwargs)
  File "C:\Python36\lib\site-packages\telegram\bot.py", line 108, in __init__
    self.token = self._validate_token(token)
  File "C:\Python36\lib\site-packages\telegram\bot.py", line 129, in _validate_token
    if any(x.isspace() for x in token):
TypeError: 'NoneType' object is not iterable
</code></pre>
<p>The second issue I have is how to use wrappers and decorators with <code>get_chat_members_count</code>. </p>
<p>The code I have added to the example is:</p>
<pre><code>@mq.queuedmessage
def get_chat_members_count(self, *args, **kwargs):
    return super(MQBot, self).get_chat_members_count(*args, **kwargs)
</code></pre>
<p>But nothing happens and I don't get my count of chat members. I'm also not saying which chat I need to count so not surprising I'm getting nothing back but where am I supposed to put the telegram chat id?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting this error because MQBot receives an empty token. For some reason, it does not raise a descriptive exception but instead crashes unexpectedly.</p>
<p>So why token is empty? It seems that you are using <code>os.environ.get</code> incorrectly. The <code>os.environ</code> part is a <a href="https://www.programiz.com/python-programming/dictionary" rel="nofollow noreferrer">dictionary</a> and its' method <code>get</code> allows one to access dict's contents safely. According to <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><strong>get(key[, default])</strong></p>
<p>Return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError.</p>
</blockquote>
<p>According to your question, in this part <code>token = os.environ.get('TOKEN')</code> you pass token itself as a key. Instead, you should've passed the name of the environmental variable which contains your token.</p>
<p>You can fix this either rewriting that part like this <code>token = 'TOKEN'</code> or by <a href="https://www.computerhope.com/issues/ch000549.htm" rel="nofollow noreferrer">setting environmental variable correctly</a> and accessing it from <code>os.environ.get</code> via correct name.</p>
</div>
<span class="comment-copy">Indeed. I actually found the solution as well but didn't have time to come on here and update yet. Apparently it is to do with <code>environ</code> but I do not know enough about this method to use it. The workaround is to simply remove it since I declare 'token' as a variable at the very beginning.</span>
