<div class="post-text" itemprop="text">
<p>In the link given below, the answers suggests that both <code>os.read()</code>/<code>os.write()</code> and <code>sys.stdin.read()</code>/<code>sys.stdout.write()</code> can be used for fast I/O. But I didn't find any explanation regarding which among the two is faster or is there any specific case where one performs better than other.</p>
<p>Can someone please explain the difference between these methods?</p>
<p><a href="https://stackoverflow.com/questions/7982146/fastest-stdin-out-io-in-python-3">Fastest stdin/out IO in python 3?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You should measure to check, but <code>sys.stdin</code> and <code>sys.stdout</code> are <a href="https://docs.python.org/3/library/io.html#io.TextIOWrapper" rel="nofollow noreferrer"><code>io.TextIOWrapper</code></a> objects that, at a minimum, include the additional functionality of decoding incoming data to unicode, and encoding outgoing data to whatever encoding is configured for the output stream.</p>
<p>On that basis it should be the case that <code>os.read()/os.write()</code> will be faster as these are lower level functions that deal only with bytes, regardless of encoding, if you are dealing with byte oriented data e.g. ascii text, binary etc.</p>
<p>If you are profiling the <code>os</code> functions you should also take into account the time to separately encode and decode the data if that is required by your application. You might find that performing encoding and I/O in two separate steps will be slower than the <code>sys</code> methods.</p>
<p>Some other differences in Python 3 are that the <code>os</code> functions accept/return <code>bytes</code> objects whereas the <code>sys</code> objects deal with <code>str</code> objects.</p>
</div>
<span class="comment-copy">If you want to know which is fastest, you'll have to profile it on your own machine.</span>
<span class="comment-copy">Other than performance, there isn't any other difference?</span>
<span class="comment-copy">Well certainly <code>os.read()</code> is less commonly used.</span>
