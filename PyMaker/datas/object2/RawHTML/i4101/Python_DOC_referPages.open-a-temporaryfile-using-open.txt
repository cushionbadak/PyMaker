<div class="post-text" itemprop="text">
<p>I'm trying to interface with an existing library that uses the built in <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open()</code></a> function to read a <code>.json</code> file using <a href="https://docs.python.org/3/glossary.html#term-path-like-object" rel="nofollow noreferrer">either a str or bytes object representing a path, or an object implementing the os.PathLike protocol</a>. </p>
<p>My function generate a dictionary which is converted to <code>json</code> using <code>json.dump()</code>, but I'm not sure how to pass that to the existing function which expects a file path.</p>
<p>I was thinking something like this might work, but I'm not sure how to get a <code>os.PathLike</code> object of a TemporaryFile.</p>
<pre><code>import tempfile
temp_file = tempfile.TemporaryFile('w')
json.dump('{"test": 1}', fp=temp_file)
file = open(temp_file.path(), 'r')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create a <a href="https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile" rel="nofollow noreferrer"><code>NamedTemporaryFile()</code> object</a> instead; it has a <code>.name</code> attribute you can pass on to the function:</p>
<pre><code>from tempfile import NamedTemporaryFile

with NamedTemporaryFile('w') as jsonfile:
    json.dump('{"test": 1}', jsonfile)
    jsonfile.flush()  # make sure all data is flushed to disk
    # pass the filename to something that expects a string
    open(jsonfile.name, 'r')
</code></pre>
<p>Opening an already-open file object does have issues on Windows (you are not allowed to); there you'd have to close the file object first (making sure to disable delete-on-close), and delete it manually afterwards:</p>
<pre><code>from tempfile import NamedTemporaryFile
import os

jsonfile = NamedTemporaryFile('w', delete=False)
try:
    with jsonfile:
        json.dump('{"test": 1}', jsonfile)
    # pass the filename to something that expects a string
    open(jsonfile.name, 'r')
finally:
    os.unlink(jsonfile.name)
</code></pre>
<p>The <code>with</code> statement causes the file to be closed when the suite exits (so by the time you reach the <code>open()</code> call).</p>
</div>
