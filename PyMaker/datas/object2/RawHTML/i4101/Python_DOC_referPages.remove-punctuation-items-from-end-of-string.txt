<div class="post-text" itemprop="text">
<p>I have a seemingly simple problem, which I cannot seem to solve. Given a string containing a DOI, I need to remove the last character if it is a punctuation mark until the last character is letter or number. </p>
<p>For example, if the string was:</p>
<pre><code>sampleDoi = "10.1097/JHM-D-18-00044.',"
</code></pre>
<p>I want the following output:</p>
<pre><code>"10.1097/JHM-D-18-00044"
</code></pre>
<p>ie. remove <code>.',</code></p>
<p>I wrote the following script to do this:</p>
<pre><code>invalidChars = set(string.punctuation.replace("_", ""))
a = "10.1097/JHM-D-18-00044.',"
i = -1
for each in reversed(a):
    if any(char in invalidChars for char in each):
        a = a[:i]
        i = i - 1
    else:
        print (a)
        break
</code></pre>
<p>However, this produces <code>10.1097/JHM-D-18-00</code> but I would like it to produce <code>10.1097/JHM-D-18-00044</code>. Why is the <code>44</code> removed from the end? </p>
</div>
<div class="post-text" itemprop="text">
<p>Corrected code: </p>
<pre><code>import string

invalidChars = set(string.punctuation.replace("_", ""))
a = "10.1097/JHM-D-18-00044.',"
i = -1
for each in reversed(a):
    if any(char in invalidChars for char in each):
        a = a[:i]
        i = i # Well Really this line can just be removed all together.
    else:
        print (a)
        break
</code></pre>
<p>This gives the output you want, while keeping the original code mostly the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>The string function <code>rstrip()</code> is designed to do <em>exactly</em> this:</p>
<pre><code>&gt;&gt;&gt; sampleDoi = "10.1097/JHM-D-18-00044.',"
&gt;&gt;&gt; sampleDoi.rstrip(",.'")
'10.1097/JHM-D-18-00044'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is one way using <code>next</code> and <a href="https://docs.python.org/3/library/stdtypes.html#str.isalnum" rel="nofollow noreferrer"><code>str.isalnum</code></a> with a generator expression utilizing <code>enumerate</code> / <code>reversed</code>.</p>
<pre><code>sampleDoi = "10.1097/JHM-D-18-00044.',"

idx = next((i for i, j in enumerate(reversed(sampleDoi)) if j.isalnum()), 0)

res = sampleDoi[:-idx]

print(res)
'10.1097/JHM-D-18-00044'
</code></pre>
<p>The default parameter <code>0</code>is used so that, if no alphanumeric character is found, an empty string is returned.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you dont wanna use regex:</p>
<pre><code>the_str = "10.1097/JHM-D-18-00044.',"
while the_str[-1] in string.punctuation:
    the_str = the_str[:-1]
</code></pre>
<p>Removes the last character until it's no longer a punctuation character.</p>
</div>
<span class="comment-copy"><code>strip('.\',')</code></span>
<span class="comment-copy">This is not a <i>general</i> solution though.</span>
<span class="comment-copy">In what sense is it not general?</span>
<span class="comment-copy">This certainly works for this example. But see OP says - " I need to remove the last character if it is a punctuation mark until the last character is letter or number." So any punctuations at the end should ideally be removed.</span>
<span class="comment-copy">Wouldn't <code>sampleDoi.rstrip(string.punctuation)</code> work?</span>
<span class="comment-copy">@0p3n5ourcE That seems perfect here, since it handles every punctuations.</span>
<span class="comment-copy">Unfortunately, this doesn't answer the question, since user doesn't know in advance that the last character(s) are invalid.</span>
<span class="comment-copy">Why I agree there are better ways to do this, if the last character <i>isn't</i> invalid, the while loop will never run, so it will still give correct output.</span>
