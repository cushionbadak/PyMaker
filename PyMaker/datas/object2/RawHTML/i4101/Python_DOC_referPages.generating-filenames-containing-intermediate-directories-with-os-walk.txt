<div class="post-text" itemprop="text">
<p>It's my first time working in Python, and I'm having a bit of trouble finding the intermediate directory path in the following segment of code:</p>
<p>Currently, when passing a directory argument to 'stroll', the function seems to enter thePath, observing each subdirectory type, and descending if of type directory. The code isn't mine, and it seems that the nested for loop is iterating over a list of regular files, so the loop wouldn't know anything about the directory to which each element belongs.</p>
<p>Current output is</p>
<pre><code>../Sample_Cases_Asg2/output.txt
../Sample_Cases_Asg2/file2
../Sample_Cases_Asg2/file1
../Sample_Cases_Asg2/output.txt
../Sample_Cases_Asg2/file2
../Sample_Cases_Asg2/file1
../Sample_Cases_Asg2/output.txt
../Sample_Cases_Asg2/file2
../Sample_Cases_Asg2/file1
../Sample_Cases_Asg2/output.txt
../Sample_Cases_Asg2/file2
../Sample_Cases_Asg2/file1
</code></pre>
<p>Desired output is</p>
<pre><code>../Sample_Cases_Asg2/sample1/output.txt
../Sample_Cases_Asg2/sample1/file2
../Sample_Cases_Asg2/sample1/file1
../Sample_Cases_Asg2/sample2/output.txt
../Sample_Cases_Asg2/sample2/file2
../Sample_Cases_Asg2/sample2/file1
../Sample_Cases_Asg2/sample3output.txt
../Sample_Cases_Asg2/sample3/file2
../Sample_Cases_Asg2/sample3/file1
../Sample_Cases_Asg2/sample3/output.txt
../Sample_Cases_Asg2/sample3/file2
../Sample_Cases_Asg2/sample3/file1
</code></pre>
<p>The implementation is</p>
<pre><code>   def stroll(thePath):
    deeper = []
    for root, dirs, files in os.walk(thePath):
            for file in files:
                    print (os.path.join(thePath, file))
</code></pre>
<p>Additionally, I'm new to the community so any concise input on how to improve my question asking would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you put <code>help(os.walk)</code> in a shell, you will see:</p>
<blockquote>
<p>For each directory in the directory tree rooted at top (including top
  itself, but excluding '.' and '..'), yields a 3-tuple</p>
<pre><code>dirpath, dirnames, filenames
</code></pre>
<p>dirpath is a string, the path to the directory.  dirnames is a list of
  the names of the subdirectories in dirpath (excluding '.' and '..').
  filenames is a list of the names of the non-directory files in
  dirpath. <strong>Note that the names in the lists are just names, with no path
  components.</strong></p>
</blockquote>
<p>So you need:</p>
<pre><code>os.path.join(root, file)
</code></pre>
<p>It's pretty annoying.</p>
</div>
<span class="comment-copy">Only improvement suggestion I have is to try to make the title describe the problem or question as distinctly and clearly as possible (someone else who wants to know if they have the same problem should be able to get a good idea of that from the title without needing to click through); hopefully the edit suffices. :)</span>
<span class="comment-copy">It's a bit annoying that all of the online examples for <code>os.walk</code> use confusingly different names for the five obvious variables, so many people get it mixed up the first time. It's the one you called <code>root</code> that you want to use in the <code>join</code>. (If it helps, <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">the examples in the official docs</a> have been pretty clean and easy to follow for a long time now; it's just all the SO answers, blogs, etc. that may still be confusing, so go to the docs first whenever you get thrown.)</span>
<span class="comment-copy">You only need <code>os.path.join(root, file)</code>.</span>
<span class="comment-copy">@DietrichEpp oops, thanks.</span>
