<div class="post-text" itemprop="text">
<p>I have <code>pandas.DataFrame</code>:</p>
<pre><code>import pandas as pd
import json
df = pd.DataFrame([['2016-04-30T20:02:25.693Z', 'vmPowerOn', 'vmName'],['2016-04-07T22:35:41.145Z','vmPowerOff','hostName']], 
                  columns=['date', 'event', 'object'])

    date                        event       object
0   2016-04-30T20:02:25.693Z    vmPowerOn   vmName
1   2016-04-07T22:35:41.145Z    vmPowerOff  hostName
</code></pre>
<p>I want to convert that dataframe into the following format:</p>
<pre><code>  {
    "name":"Alarm/Error",
    "data":[
      {"date": "2016-04-30T20:02:25.693Z", "details": {"event": "vmPowerOn", "object": "vmName"}},
      {"date": "2016-04-07T22:35:41.145Z", "details": {"event": "vmPowerOff", "object": "hostName"}}
    ]
  }
</code></pre>
<p>So far, I've tried this:</p>
<pre><code>df = df.to_dict(orient='records')
j = {"name":"Alarm/Error", "data":df}
json.dumps(j)

'{"name": "Alarm/Error", 
  "data": [{"date": "2016-04-30T20:02:25.693Z", "event": "vmPowerOn", "object": "vmName"}, 
           {"date": "2016-04-07T22:35:41.145Z", "event": "vmPowerOff", "object": "hostName"}
          ]
 }'
</code></pre>
<p>However, this obviously does not put the detail columns in their own dictionary. </p>
<p>How would I efficiently split the df date column and all other columns into separate parts of the JSON?</p>
</div>
<div class="post-text" itemprop="text">
<p>With a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list and dict comprehension</a>, you can do that like:</p>
<h3>Code:</h3>
<pre><code>[{'date': x['date'], 'details': {k: v for k, v in x.items() if k != 'date'}}
 for x in df.to_dict('records')]
</code></pre>
<h3>Test Code:</h3>
<pre><code>df = pd.DataFrame([['2016-04-30T20:02:25.693Z', 'vmPowerOn', 'vmName'],
                   ['2016-04-07T22:35:41.145Z', 'vmPowerOff', 'hostName']],
                  columns=['date', 'event', 'object'])

print([{'date': x['date'],
        'details': {k: v for k, v in x.items() if k != 'date'}}
       for x in df.to_dict('records')])
</code></pre>
<h3>Results:</h3>
<pre><code>[{'date': '2016-04-30T20:02:25.693Z', 'details': {'event': 'vmPowerOn', 'object': 'vmName'}}, 
 {'date': '2016-04-07T22:35:41.145Z', 'details': {'event': 'vmPowerOff', 'object': 'hostName'}}
]
</code></pre>
</div>
