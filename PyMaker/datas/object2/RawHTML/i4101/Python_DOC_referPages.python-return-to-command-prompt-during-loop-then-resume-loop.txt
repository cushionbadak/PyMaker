<div class="post-text" itemprop="text">
<p>I would like to write a python loop that pauses the loop at a certain moment and exits to the command prompt, and then continues with the loop. The idea is to program a set of computations in a loop, interactively check the intermediate results (printing, plotting, making computations, etc), and then resumes the loop once the user is satisfied and exits the command prompt somehow.</p>
<p>Is it possible to do that in python? Note that this is not about collecting raw input or anything like that, the idea is to be able to set a "pause" in the loop where I have full access to the command prompt, and then resume the loop wherever it paused once the user voluntarily "exits" the command prompt.
Thanks for any suggestions!</p>
</div>
<div class="post-text" itemprop="text">
<p>I think what you are trying to do is something like building a program with its own console. I see you write you want "full access" and that can be achived if you make sure everything is supported in your console. </p>
<p>I would have a look at the code module, as this could push you in the right direction. </p>
<p><a href="https://docs.python.org/3/library/code.html" rel="nofollow noreferrer">https://docs.python.org/3/library/code.html</a></p>
<p>...
However, the hackish way of doing it is to relaunch the script after each session and make sure it resumes correctly. You could have automate the relaunching by a spawning a seperate thread. </p>
</div>
<div class="post-text" itemprop="text">
<p>Tell your script to wait for a user input when the loop reaches a certain condition.</p>
<pre><code>a = [1, 2, 3, 4, 5, 6, 7, 8, 9]

for x in a:
    print(x)
    #Do stuff
    if x == 4:
        input("Pausing...")
        #Hit enter to dismiss
</code></pre>
<p>When run this outputs:</p>
<pre><code>[me@machine home]$ python3 loop.py
1
2
3
4
Pausing...
5
6
7
8
9
</code></pre>
</div>
<span class="comment-copy">What do you mean by <code>full access to command prompt</code>?</span>
<span class="comment-copy">I want to be able "exit" to the regular python terminal while the loop is in "stand by" so to speak, so that I can do things in the command line including, but not limited to, checking the results of the ongoing loop. Then, I want to be able to interactively "exit" this intermediate terminal and "resume" the loop where it stopped when I am done</span>
<span class="comment-copy">Thanks! That is indeed the intention, I'll have a look at the documentation you recommended</span>
<span class="comment-copy">Thanks, but that is not it. It indeed pauses, but I cannot do anything while it is paused. The idea is to be able to check the intermediate results of the loop computations, and then either continue or terminate the loop based on the manual inspection.</span>
