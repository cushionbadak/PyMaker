<div class="post-text" itemprop="text">
<p>My question is similar to
<a href="https://stackoverflow.com/questions/12905999/python-dict-how-to-create-key-or-append-an-element-to-key">Python dict how to create key or append an element to key?</a></p>
<p>I want to create the following dictionary of dictionaries:</p>
<pre><code>my_dict = {
 "name1" : { "id1" : "pin1", "id2" : "pin2" },
 "name2" : { "id3" : "pin3", "id4" : "pin4" }
}
</code></pre>
<p>I currently accomplish this using the following:</p>
<pre><code>if name in my_dict:
    my_dict[name].update({ id : pin }
else:
    my_dict[name] = { id : pin }
</code></pre>
<p>Is there a way to do this using dict.setdefault() ?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is there a way to do this using dict.setdefault() ?</p>
</blockquote>
<p>Of course! There's nothing magic about <code>setdefault</code>; it just returns <code>my_dict[name]</code> if it exists, or sets <code>my_dict[name] = default</code> and returns <code>default</code> if not.</p>
<p>Either way, what it returns is the (potentially new) dict in <code>my_dict[name]</code>, so all you have to do is update it:</p>
<pre><code>my_dict.setdefault(name, {})[id] = pin
</code></pre>
<p>Or, if you really like using <code>update</code> instead of just <code>[] =</code>:</p>
<pre><code>my_dict.setdefault(name, {}).update({id: pin})
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; my_dict.setdefault('name1', {})['id10']= 'pin10'
&gt;&gt;&gt; my_dict.setdefault('name3', {})['id20']= 'pin20'
{'name1': {'id1': 'pin1', 'id10': 'pin10', 'id2': 'pin2'},
 'name2': {'id3': 'pin3', 'id4': 'pin4'},
 'name3': {'id20': 'pin20'}}
</code></pre>
<hr/>
<p>More generally, you could obviously rewrite your existing code to this:</p>
<pre><code>if name not in my_dict:
    my_dict[name] = {}
my_dict[name].update({ id : pin }
</code></pre>
<p>Whenever you can do that, you can use <code>setdefault</code>. (But notice that we're <em>calling a mutating method</em> or <em>assigning to a key/index/member</em> of <code>my_dict[name]</code> here, not just assigning a new value to <code>my_dict[name]</code>. That's the key to it being useful.)</p>
<hr/>
<p>Of course almost any time you can use <code>setdefault</code>, you can also <a href="https://stackoverflow.com/a/50163669/908494">use <code>defaultdict</code> (as demonstrated in CoryKramer's answer)</a> (and vice-versa). If you want defaulting behavior <em>all the time</em>, use <code>defaultdict</code>. Only use <code>setdefault</code> if you want defaulting behavior <em>just this once</em> (e.g., you want defaulting while building the dict up, but you want <code>KeyError</code>s later when using it).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict</a></p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; my_dict = defaultdict(dict)
&gt;&gt;&gt; my_dict
defaultdict(&lt;class 'dict'&gt;, {})
&gt;&gt;&gt; my_dict['name1'].update({'id1': 'pin1'})
&gt;&gt;&gt; my_dict
defaultdict(&lt;class 'dict'&gt;, {'name1': {'id1': 'pin1'}})
</code></pre>
<p>Then you don't need the <code>if</code> statement, you can directly call <code>update</code>, and if no <code>dict</code> yet exists for that <code>name</code> a new one will be created before calling <code>update</code></p>
</div>
<span class="comment-copy">above code snippet should say if name not in my_dict:</span>
<span class="comment-copy">@crusarovid Thanks; fixed.</span>
