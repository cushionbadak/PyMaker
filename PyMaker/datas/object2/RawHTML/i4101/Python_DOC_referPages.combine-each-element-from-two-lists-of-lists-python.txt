<div class="post-text" itemprop="text">
<p>I've been struggling with this problem for a couple of hours and I can't seem to reach a solution. 
So I have two lists of lists in python:</p>
<pre><code>list1=[['= 0\n', '= 1\n', '= 2\n', '= 3\n', '= 4\n'],['= 0\n', '= 1\n', '= 2\n']]
list2=[['a', 'b', 'c', 'd', 'e'],['a', 'b', 'c']]
</code></pre>
<p>and I want to combine these two lists of lists into something like:</p>
<pre><code>[['a=0\n', 'b=1\n', 'c=2\n', 'd=3\n', 'e=4\n'], ['a=0\n', 'b=1\n', 'c=2\n']]
</code></pre>
<p>Basically, I want to take each element from the first list in list1 and append the first element from the first list in list2 and so on and keep the list of list structure.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can first <code>zip</code> the outer lists together, then <code>zip</code> those elementwise and concatenate them into a single string.</p>
<pre><code>&gt;&gt;&gt; [[b+a for a,b in zip(i,j)] for i,j in zip(list1, list2)]
[['a= 0\n', 'b= 1\n', 'c= 2\n', 'd= 3\n', 'e= 4\n'], ['a= 0\n', 'b= 1\n', 'c= 2\n']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a list comprehension with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> for pairing:</p>
<pre><code>list1 = [['= 0\n', '= 1\n', '= 2\n', '= 3\n', '= 4\n'], ['= 0\n', '= 1\n', '= 2\n']]
list2 = [['a', 'b', 'c', 'd', 'e'], ['a', 'b', 'c']]

print([[(x+y) for x, y in zip(list2[i], list1[i])] for i in range(len(list1))])
# [['a= 0\n', 'b= 1\n', 'c= 2\n', 'd= 3\n', 'e= 4\n'], ['a= 0\n', 'b= 1\n', 'c= 2\n']]                                  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A variation of the previous answers using <code>map</code>:</p>
<pre><code>list(map(lambda x: list(map(''.join, zip(*x))), zip(list2, list1)))
</code></pre>
</div>
<span class="comment-copy">I don't understand the output. Even ignoring the fact that you don't have quotes around your strings, why are <code>'a = 0\n'</code> and <code>'b=1\n'</code> inside a subsublist in the first sublist? How do you combine <code>' b '</code> with anything to get <code>'b=1\n'</code> without some kind of explicit strippingâ€”and whatever the rule is, how does that same rule give you <code>'a = 0\n'</code> and <code>c= 2\n'</code>?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/6618515/sorting-list-based-on-values-from-another-list">Sorting list based on values from another list?</a></span>
<span class="comment-copy">Anyway, what I <i>think</i> you're looking for is a nested zip. Do you know about <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>? If so, do you know how to write a <code>for</code> statement inside another <code>for</code> statement? (Or, if you prefer, a comprehension with two <code>for</code> clauses?) If so, what part are you stuck on?</span>
<span class="comment-copy">Why do some have spaces between them and some do not?</span>
<span class="comment-copy">i fixed how the output should look. zip does not help me as it creates one list from the two, while I need a list of lists.</span>
<span class="comment-copy">The OP's desired output has the first two elements of the first sublist in another sublist; yours doesn't. Your space-handling rule only matches whatever the OP's desired rule is in one out of 8 examples.</span>
<span class="comment-copy">@abarnert They've updated their output, look again, that was a typo in their example</span>
<span class="comment-copy">The spacing still doesn't match. The OP's output is probably <i>impossible</i> to generate with any sensible code, but that just means the problem can't be answered, not that any answer is valid.</span>
<span class="comment-copy">Thank you very much for the help</span>
<span class="comment-copy">Thanks a lot :D</span>
<span class="comment-copy">@meow Glad to help you.:)</span>
