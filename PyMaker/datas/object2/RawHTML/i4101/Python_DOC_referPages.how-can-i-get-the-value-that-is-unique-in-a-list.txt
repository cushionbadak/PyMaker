<div class="post-text" itemprop="text">
<p>If there's a list the elements of which are <code>[2,2,3,2,2]</code>. I want to find the element that is unique, which is <code>3</code> this time. </p>
<p>I think I could do this with <code>count()</code> method and a few loops, but I wonder if there are simpler and efficient ways to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a>:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; l = [2,2,3,2,2]
&gt;&gt;&gt; next(k for k, v in collections.Counter(l).items() if v == 1)
3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without any modules, you can simply perform <code>xor</code> of all elements to get the unique item.</p>
<p>This outputs <code>0</code>, if there is no unique item as noted by @KeyurPotdar.</p>
<pre><code>l = [2,2,3,2,2]

out = l[0]
for elem in l[1:]:
    out = out ^ elem

print(out)
# 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/functions.html#min" rel="nofollow noreferrer">Counter</a> and then <a href="https://docs.python.org/2/library/functions.html#min" rel="nofollow noreferrer">min</a>,</p>
<pre><code>In [4]: from collections import Counter

In [5]: x = [2,2,3,2,2]

In [6]: c = Counter(x)

In [7]: min(c, key=c.get)
Out[7]: 3

In [8]:
</code></pre>
</div>
<span class="comment-copy">this will break if list doesn't have any unique element. e.g. l = [2, 3, 3, 3, 3, 2, 2, 2, 2]</span>
<span class="comment-copy">Add the default value as the 2nd argument for <code>next</code>, like <code>next(iter([]), 7)</code> -&gt; <code>7</code></span>
<span class="comment-copy">Using the default argument of <code>next</code> would fix this.</span>
<span class="comment-copy">This will give <code>0</code> as the output if no unique element is present. I think you should handle that case. For example, if <code>l = [0, 0, 0]</code>, output will be <code>0</code>.</span>
<span class="comment-copy">He is asking if it is possible to get unique numbers only, set will return both 2 and 3</span>
<span class="comment-copy">@BugHunter I have updated answer.</span>
<span class="comment-copy">I see two problems here: 1) You're creating <i>two</i> <code>Counter</code> objects instead of just one, which essentially doubles your execution time. 2) This will return the element with the least occurences, but it doesn't guarantee that that element occurs exactly once.</span>
