<div class="post-text" itemprop="text">
<p>So, I'm taking a list of usernames from a Linux server at school, this top code opens the directory where they are kept and saves it as information</p>
<pre><code>#!/usr/bin/env python
import subprocess, sys

r = subprocess.Popen(['ls','/home/ADILSTU'], stdout=subprocess.PIPE)
information = r.stdout.read()
print information, str(information)
</code></pre>
<p>that works just fine and list the users like this... where it list them 1 per line. (there is atleast 100 usernames) </p>
<pre><code>ajax2
jjape3
jaxe32    
</code></pre>
<p>my problem is, I want to create a "look-up" for these usernames, this is my code to search for usernames that only start with the letter j (so should only list jaxe32 from this list)</p>
<pre><code>#lookup
import re
p = re.compile(r'j(?!j)\w*')
print p.match(str(information)).group()
</code></pre>
<p>but when I run this I get this error, and if I get rid of .group() it then just states "none", but no error. So i'm not sure if the list is getting saved to a string right, or if I'm just missing something obvious. I only want to use regular expression for this, not anything else.</p>
<pre><code>    Traceback (most recent call last):
    File "getInformation.py", line 11, in &lt;module&gt;
    print p.match(str(information)).group()
    AttributeError: 'NoneType' object has no attribute 'group'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the documentation on <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a>:</p>
<blockquote>
<p>If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding match object. Return None if the string does not match the pattern;</p>
</blockquote>
<p><code>re.match</code> is only useful if the match starts from the beginning of the string, it does not find all matches in a string.</p>
<p>This leaves you with two main options:</p>
<ul>
<li><p>Split the input file by line and use <code>re.match</code></p></li>
<li><p>Use multiline matching and <code>re.findall</code></p></li>
</ul>
<p><strong><em>Option 1</em></strong>:</p>
<pre><code>r = subprocess.Popen(['ls', '/home/administrator/sotest'], stdout=subprocess.PIPE)
information = r.stdout.read().decode('utf-8').split('\n') # ['ajax2', 'jaxe32', 'jjape3', '']

for user in information:
    s = re.match(r'j(?!j)\w*', user)
    if s:
        print(s.group())
</code></pre>
<p>Output:</p>
<pre><code>jaxe32
</code></pre>
<p><strong><em>Option 2</em></strong> (using <a href="https://regex101.com/r/FjRPvM/3/" rel="nofollow noreferrer"><code>(?m)^j(?!j)\w*$</code></a>):</p>
<pre><code>r = subprocess.Popen(['ls', '/home/administrator/sotest'], stdout=subprocess.PIPE)
information = r.stdout.read().decode('utf-8') # 'ajax2\njaxe32\njjape3\n'

print(re.findall(r'(?m)^j(?!j)\w*$', information))
</code></pre>
<p>Output:</p>
<pre><code>['jaxe32']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that when the <code>match</code> method doesn't match anything, it doesn't return an empty <code>match</code> object, on which you could call the <code>group</code> method, it returns <code>None</code>. Which does not have the <code>group</code> method. Just check for <code>None</code> before you call any methods.</p>
<pre><code>#lookup
import re
p = re.compile(r'j(?!j)\w*')
result = p.match(str(information))
if result:
    print result.group()
</code></pre>
</div>
<span class="comment-copy">I mean to say starts with only one j not jj</span>
<span class="comment-copy">option 1 only printed out j's for each user that started with j but that was it so just got a bunch of j lines, but option 2 worked flawlessly, Thanks!</span>
<span class="comment-copy">Hmm, option 1 works for me. Maybe your data is slightly different.  Glad option 2 works!</span>
