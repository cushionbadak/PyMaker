<div class="post-text" itemprop="text">
<p>I'm trying to repeat myself as little as possible in my code buy have run into a problem.</p>
<p>My code looks like this</p>
<pre><code>from .models import source

def myfunction():
    if  category1 == True:
        types=5
        b=[None]*types
        for i in range(0, types):
            b[i]=source.objects.all().filter(rowdata1='identifier', state=i)

    elif category2 == True:
        types=3
        b=[None]*types
        for i in range(0, types):
            b[i]=source.objects.all().filter(rowdata2='identifier', state=i)
    .
    .
    .
    return result
</code></pre>
<p>However I would like to do something like this instead:</p>
<pre><code>def myfunction():
    if  category1 == True:
        types=5
        param='rowdata1'

    elif category2 == True:
        types=3
        param='rowdata2'

    b=[None]*types
        for i in range(0, types):
            b[i]=source.objects.all().filter(param='identifier', state=i)
    .
    .
    .
    return result
</code></pre>
<p>Is there a way to use a string or other structure to use as a filter value to access a model in Django? When i try my example 2 i get a Field error, the first one works.</p>
<p>Working suggestion: </p>
<pre><code>def myfunction():
    if  category1 == True:
        types=5
        param='rowdata1'

    elif category2 == True:
        types=3
        param='rowdata2'

    b=[None]*types
    for i in range(0, types):
        b[i]=source.objects.all().filter(**{param:'identifier'}, state=i)
    .
    .
    .
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">keyword unpacking</a>, that can be done like:</p>
<pre><code>.filter(state=i, **{param: 'identifier'})
</code></pre>
<p>or if you prefer:</p>
<pre><code>.filter(**{param: 'identifier', 'state': i})
</code></pre>
</div>
<span class="comment-copy">How does this solve the problem?</span>
<span class="comment-copy">@StephenRauch because now it's using the value of the variable <code>param</code> as the name of the keyword argument.</span>
<span class="comment-copy">Sorry I wasn't clear. I understand how it solves the problem.  I was hoping you could put that explanation into the answer.  Thanks...</span>
<span class="comment-copy">That was extremely fast and it works, thanks, I'll accept the answer when I can in 7 minutes. Is there anywhere in the documentation where I can find this and more information that you can point me to?  To answer @ste</span>
<span class="comment-copy">To answer @StephenRauch I think it accepts variables as long as it's a dict with the model name as a key, and the filter-value as a dictionary value corresponding to that key.</span>
