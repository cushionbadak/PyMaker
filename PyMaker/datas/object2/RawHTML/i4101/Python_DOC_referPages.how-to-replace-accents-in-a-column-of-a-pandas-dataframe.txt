<div class="post-text" itemprop="text">
<p>I have a dataframe <code>dataSwiss</code> which contains the information Swiss municipalities. I want to replace the letter with accents with normal letter.</p>
<p>This is what I am doing:</p>
<pre><code>dataSwiss['Municipality'] = dataSwiss['Municipality'].str.encode('utf-8')
dataSwiss['Municipality'] = dataSwiss['Municipality'].str.replace(u"é", "e")
</code></pre>
<p>but I get the following error:</p>
<pre><code>----&gt; 2 dataSwiss['Municipality'] = dataSwiss['Municipality'].str.replace(u"é", "e")
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 1: ordinal not in range(128)
</code></pre>
<p>data looks like:</p>
<pre><code>dataSwiss.Municipality
0               Zürich
1               Zürich
2               Zürich
3               Zürich
4               Zürich
5               Zürich
6               Zürich
7               Zürich
</code></pre>
<p>I found the solution</p>
<pre><code>s = dataSwiss['Municipality']
res = s.str.decode('utf-8')
res = res.str.replace(u"é", "e")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is one way. You can convert to byte literal first before decoding to utf-8.</p>
<pre><code>s = pd.Series(['hello', 'héllo', 'Zürich', 'Zurich'])

res = s.str.normalize('NFKD')\
       .str.encode('ascii', errors='ignore')\
       .str.decode('utf-8')

print(res)

0     hello
1     hello
2    Zurich
3    Zurich
dtype: object
</code></pre>
<p><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.normalize.html" rel="nofollow noreferrer"><code>pd.Series.str.normalize</code></a> uses <a href="https://docs.python.org/3/library/unicodedata.html" rel="nofollow noreferrer"><code>unicodedata</code></a> module. As per the <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>The normal form KD (NFKD) will apply the compatibility decomposition,
  i.e. replace all compatibility characters with their equivalents.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Try  <strong>unidecode</strong> module.</p>
<p><strong>Ex:</strong> </p>
<pre><code>import unidecode
dataSwiss['Municipality'] = dataSwiss['Municipality'].apply(unidecode.unidecode)
</code></pre>
<p>Or:</p>
<pre><code>import unicodedata
def remove_accents(input_str):
    nfkd_form = unicodedata.normalize('NFKD', input_str)
    only_ascii = nfkd_form.encode('ASCII', 'ignore')
    return only_ascii

dataSwiss['Municipality'] = dataSwiss['Municipality'].apply(remove_accents)
</code></pre>
<p><strong>Note:</strong> The function is from this <a href="https://stackoverflow.com/questions/517923/what-is-the-best-way-to-remove-accents-in-a-python-unicode-string">link</a></p>
<p><em>Update as per comment</em></p>
<pre><code>dataSwiss['Municipality'] = dataSwiss['Municipality'].apply(unicode).apply(remove_accents)
</code></pre>
</div>
<span class="comment-copy">What I get instead of <code>Zurich</code> is <code>ZA14rich</code></span>
<span class="comment-copy">@emax, That's strange, are you copy / pasting my code exactly? I'm on Pandas 0.19.2 / Python 3.6 for reference. What are you using?</span>
<span class="comment-copy">I found the solution as shown in the text</span>
<span class="comment-copy">I still receive the same error</span>
<span class="comment-copy">Now I receive this error  <code>----&gt; 3     nfkd_form = unicodedata.normalize('NFKD', input_str)</code> <code>TypeError: normalize() argument 2 must be unicode, not str</code></span>
<span class="comment-copy">Updated snippet use  <code>.apply(unicode)</code>.</span>
<span class="comment-copy">@Still the same, I do not understand why</span>
<span class="comment-copy">Can you post a sample of your data?</span>
