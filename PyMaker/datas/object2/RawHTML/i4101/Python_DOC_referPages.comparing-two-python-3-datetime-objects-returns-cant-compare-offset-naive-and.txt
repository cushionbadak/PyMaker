<div class="post-text" itemprop="text">
<p>I am trying to compare the time of an AWS EC2 instance object that is of type datetime with another datetime being represented as datetime.datetime.now. The line of code in question looks like, </p>
<pre><code>if launchTime &lt; datetime.datetime.now()-datetime.timedelta(seconds=20):
</code></pre>
<p>Where launchTime is of type datetime. However when I run it I get the error </p>
<pre><code>can't compare offset-naive and offset-aware datetimes: TypeError
</code></pre>
<p>And I'm unsure of how to convert launchTime in such a way where I can successfully compare it. </p>
<p>Edited fixed code below -----------------------------------------</p>
<pre><code>if launchTime.replace(tzinfo=None) &lt; datetime.datetime.now()-datetime.timedelta(minutes=4):
</code></pre>
<p>Full code as well in case any future people find it of value. It's Python 3 to stop EC2 instances that have been running for an "x" amount of time. In this case if an instance is running for five minutes. Terminate it. The lambda itself is set up with Cloudwatch to run every 4 minutes as well.</p>
<pre><code>import boto3
import time
import datetime

#for returning data about our newly created instance later on in fuction
client = boto3.client('ec2')

def lambda_handler(event, context):

response = client.describe_instances()
#for each instance currently running/terminated/stopped
for r in response['Reservations']:
    for i in r['Instances']:
        #if its running then we want to see if its been running for more then 3 hours. If it has then we stop it. 
        if i["State"]["Name"] == "running":
            launchTime = i["LaunchTime"]

            #can change minutes=4 to anything
            if launchTime.replace(tzinfo=None) &lt; datetime.datetime.now()-datetime.timedelta(minutes=4):
                response = client.stop_instances(
                    InstanceIds=[
                        i["InstanceId"]
                    ]
                )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The main problem is that I'm assuming <code>launchTime</code> is timezone aware, whereas <code>datetime.now()</code> is not (<code>datetime.now().tzinfo == None</code>).</p>
<p>There are a couple ways to solve this, but the easiest would be to remove the tzinfo from <code>launchTime</code>: <code>if launchTime.replace(tzinfo=None) &lt; datetime.datetime.now()-datetime.timedelta(seconds=20)</code> should do the trick.</p>
<p>Alternatively, you can convert your datetime objects to Unix timestamps and then you don't have to deal with timezone silliness.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try like this, you have to make sure pytz installed :</p>
<pre><code>import pytz

utc=pytz.UTC
launchTime = utc.localize(launchTime) 
</code></pre>
</div>
<span class="comment-copy">launchTime is a string? Can you give an example?</span>
<span class="comment-copy">An offset-naive datetime has no <a href="https://docs.python.org/3/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer"><code>tzinfo</code></a>.</span>
<span class="comment-copy">launchTime is not a string, when printing launchTime I get, "2018-05-10 03:32:12+00:00" and when printing the type of launchTime i get "&lt;class 'datetime.datetime'&gt;"</span>
<span class="comment-copy">But see the difference when you print <code>datetime.datetime.now()</code> ? Notice that there's no timezone info?</span>
<span class="comment-copy">That did it. Thanks greatly for the input</span>
<span class="comment-copy">Np! Do be aware that it's on you to ensure that the time zones match in this case.</span>
<span class="comment-copy">@jelidens Your <code>launchTime</code> has UTC timezone info (+00:00). Is that your timezone?</span>
<span class="comment-copy">@PM 2Ring, No i don't think I am in (+00:00) time zone? But I'm also not sure if launchTime in this case is based on where I am located or where the Lambda Function on AWS is located.</span>
<span class="comment-copy">@jelidens I think you need to do some reading about timezones, and about Python's <code>tzinfo</code> that I linked earlier.</span>
<span class="comment-copy">are you sure you installed pytz ?</span>
<span class="comment-copy">Below a fix is listed that didn't require any other external dependencies. Thanks all for input!</span>
