<div class="post-text" itemprop="text">
<p>For some reason, I have to run a php script to get an image from Python. Because the php script is very big and it is not mine, it will takes me days to find out the right algorithm used and translate it into python.</p>
<p>I am wonder if there is any way to run php script, with few parameters, which returns a image, in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Example code:</p>
<pre><code>import subprocess

# if the script don't need output.
subprocess.call("php /path/to/your/script.php")

# if you want output
proc = subprocess.Popen("php /path/to/your/script.php", shell=True, stdout=subprocess.PIPE)
script_response = proc.stdout.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply execute the php executable from Python. </p>
<p>Edit: example for Python 3.5 and higher using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="noreferrer"><code>subprocess.run</code></a>:</p>
<pre><code>import subprocess

result = subprocess.run(
    ['php', 'image.php'],    # program and arguments
    stdout=subprocess.PIPE,  # capture stdout
    check=True               # raise exception if program fails
)
print(result.stdout)         # result.stdout contains a byte-string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://github.com/brool/util/blob/master/php.py" rel="noreferrer">php.py</a>. This would allow you to execute php code in python, like in this example (taken from <a href="http://www.brool.com/index.php/hacks-python-calling-php" rel="noreferrer">here</a>):</p>
<pre><code>php = PHP("require '../code/private/common.php';")
code = """for ($i = 1; $i &lt;= 10; $i++) { echo "$i\n"; }"""
print php.get_raw(code)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Make a wrapper around the PHP script, which:</p>
<ul>
<li>performs the stuff (If I understand well, it's an image creation),</li>
<li>then redirects (<em>301 Moved Permanently</em>) to the result image,</li>
<li>(also, the image should be purged some day).</li>
</ul>
<p>So you can refer to this <em>service</em> (the PHP script) with a simple HTTP request, from anywhere, you can test it with browser, use from Python prg, you need just download the image the usual way.</p>
<p>Also, if you have a such standalone sub-system, don't feel bad about implement it with different language/technique. It has several advantages, e.g. you can install that service on a different host.</p>
<p>Recommended reading: <a href="http://en.wikipedia.org/wiki/Service-oriented_architecture" rel="nofollow">Service-Oriented Architecture</a> on Wikipedia.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you can run the PHP script locally from the command-line, <a href="http://docs.python.org/library/subprocess.html#subprocess.check_output" rel="nofollow">subprocess.check_output()</a> will let you can PHP and will capture the return value.</p>
<p>If you are accessing PHP via a socket, then you can use <a href="http://docs.python.org/library/urllib.html#urllib.urlopen" rel="nofollow">urllib.urlopen()</a> or <a href="http://docs.python.org/library/urllib.html#urllib.urlretrieve" rel="nofollow">urllib.urlretrieve()</a> to pull down the resource.</p>
</div>
<span class="comment-copy">This is the code pasted from <a href="http://mail.python.org/pipermail/tutor/2009-October/071973.html" rel="nofollow noreferrer">mail.python.org/pipermail/tutor/2009-October/071973.html</a></span>
<span class="comment-copy">it is incorrect. The first call won't work on POSIX systems. Use <code>subprocess.call(["php", "/path/to/your/script.php"])</code> instead. Use <code>script_response = subprocess.check_output(["php", "/path/to/your/script.php"])</code> instead of the second example.</span>
<span class="comment-copy">if the argument <code>shell</code> is set to <code>True</code> then using the string rather than a list is ok</span>
<span class="comment-copy">Another way is:   os.system("php /path/to/your/file.php")</span>
<span class="comment-copy">Could you post any example?</span>
<span class="comment-copy"><a href="http://mail.python.org/pipermail/tutor/2009-October/071973.html" rel="nofollow noreferrer">mail.python.org/pipermail/tutor/2009-October/071973.html</a></span>
<span class="comment-copy">Assuming the php script can be called from the command line and accepts a command line argument to describe what to do with the image you could use the built in subprocess package.      import subprocess     subprocess.call(["/path/to/php", "/path/to/php/script.php", "argument"])</span>
<span class="comment-copy">Post an example</span>
<span class="comment-copy">Hi. Thanks for your help. If you check the source code of this program, you can see that I have to enter the php code manually. Since it is also linked to some .inc files, it is not so good option. But thanks anyway.</span>
<span class="comment-copy">It is a really good idea! I guess it can solve my problem. Thanks a lot.</span>
