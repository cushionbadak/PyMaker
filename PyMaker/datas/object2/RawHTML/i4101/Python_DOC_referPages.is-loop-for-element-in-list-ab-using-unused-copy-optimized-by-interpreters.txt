<div class="post-text" itemprop="text">
<p>Is this :</p>
<pre><code>for element in list_[a:b]:
</code></pre>
<p>translated during interpretation (CPython) to be equivalent to :</p>
<pre><code>for i in range(a, b):
    element = list_[i]
</code></pre>
<p>or is the copy</p>
<pre><code>list_[a:b]
</code></pre>
<p>really performed ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The copy is really performed. The interpreter has no way of knowing what kind of object <code>list_</code> is at runtime and what you will do with it (maybe you'll start editing the original <code>list_</code>).
If you want to not produce the copy, use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a>:</p>
<pre><code>import itertools

def f(list_, a, b):
    for element in itertools.islice(list_, a, b):
        element
</code></pre>
<hr/>
<p>You can look at the <code>islice</code> documentation I linked for the full (python translated) implementation but this is a simplified version:</p>
<pre><code>def islice(itr, start, stop):
    for index, element in enumerate(itr):
         if index == stop:
              break
         if start &lt;= index:
              yield element
</code></pre>
</div>
<span class="comment-copy">The compiler has no way to know whether <code>list_</code> is actually a <code>list</code> or a custom object, hence it <b>cannot</b> optimize that operation away.</span>
<span class="comment-copy"><code>list_[a:b]</code> gets evaluated. So yes, a new copy is made. Perhaps you want <code>itertools.islice</code>.</span>
<span class="comment-copy">ok thanks guys (answer and comments) ... A last clarification : <code>itertools.islice</code> use is equivalent to loop in a range and then access by index ?</span>
<span class="comment-copy">@E.B. see my edited answer. <code>islice</code> works on any iterable, even those that don't have index access (like generators). However, it is functionally equivalent to how you described when used on lists.</span>
