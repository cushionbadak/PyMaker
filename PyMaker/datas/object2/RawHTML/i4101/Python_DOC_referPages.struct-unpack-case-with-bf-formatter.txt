<div class="post-text" itemprop="text">
<p>Can someone explain this to me? Why is unpack behaving like this (adding 4 times 0x00 instead of once in first case)?
<br/>
<code>Python 3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 08:06:12) [MSC v.1900 64 bit (AMD64)] on win32</code></p>
<pre><code>struct.pack('Bf', 0, 1342.34)
b'\x00\x00\x00\x00\xe1\xca\xa7D'

struct.pack('B', 0)
b'\x00'

struct.pack('fB', 1342.34, 0)
b'\xe1\xca\xa7D\x00'

struct.pack('Bf', 4, 1342.34)
b'\x04\x00\x00\x00\xe1\xca\xa7D'

struct.pack('fB', 1342.34, 4)
b'\xe1\xca\xa7D\x04'
</code></pre>
<p>I can use <code>&gt;, &lt;</code> formatters but:</p>
<pre><code>struct.pack('&lt;Bf', 0, 1342.34)
b'\x00\xe1\xca\xa7D'

struct.pack('&gt;Bf', 0, 1342.34)
b'\x00D\xa7\xca\xe1'
</code></pre>
<p>So I do not get the rule</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>By default, C types are represented in the machineâ€™s native format and byte order, and properly aligned by skipping pad bytes if necessary (according to the rules used by the C compiler).</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/struct.html#byte-order-size-and-alignment" rel="nofollow noreferrer">source</a></p>
</div>
