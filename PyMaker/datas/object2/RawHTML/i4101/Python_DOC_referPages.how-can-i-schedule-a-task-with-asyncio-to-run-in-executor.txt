<div class="post-text" itemprop="text">
<p>I have been using asyncio for concurrency, however I have run into a problem. I have the need to schedule a task with asyncio but it is blocking and so I would like to execute it in an executor using threadpool from concurrent.futures.</p>
<p>I have seen example like this, that schedule tasks:</p>
<pre><code>now = loop.time()
loop.call_at(now + 60, callback, arg, loop)
</code></pre>
<p>and like this that run tasks in executors:</p>
<pre><code>blocking_tasks = [
    loop.run_in_executor(executor, blocks)
    for i in range(6)
]
completed, pending = await asyncio.wait(blocking_tasks)
</code></pre>
<p>But how can I schedule a blocking task to run in executor?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>run_in_executor</code> returns a future, so you can't use it with <code>call_at</code>, which requires an ordinary function. However, you can easily postpone execution using <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.sleep" rel="nofollow noreferrer"><code>asyncio.sleep()</code></a>:</p>
<pre><code>async def my_task():
    await asyncio.sleep(60)
    result = await loop.run_in_executor(None, fn)
    ...

taskobj = loop.create_task(my_task())
</code></pre>
<p>This has the advantage that the task created by <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.create_task" rel="nofollow noreferrer"><code>create_task</code></a> can be <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel" rel="nofollow noreferrer">canceled</a> during the sleep. Also, you can return a useful value from <code>my_task()</code> and obtain it using <code>await taskobj</code>, calling <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.Future.result" rel="nofollow noreferrer"><code>taskobj.result()</code></a>, or <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_until_complete" rel="nofollow noreferrer"><code>loop.run_until_complete(taskobj)</code></a>.</p>
</div>
