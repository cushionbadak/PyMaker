<div class="post-text" itemprop="text">
<p>Can any one help me with the below:</p>
<p>I am trying to pass the literal input, example if I enter 10 the function should be passed with int, but in below case its still passing string. </p>
<p>Can anyone please edit this for the code to pass as is entered type?</p>
<pre><code>def str_len(s):
    if type(s) == int:
        return "You entered Integer, Please enter strings only to get length"
    elif type(s) == float:
        return "You entered float, Please enter strings only to get length"
    else:
        return len(s)

string = input("Enter a string to find its length: ")
print(str_len(string))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the documentation, <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input</code></a>:</p>
<blockquote>
<p>reads a line from input, converts it to a string (stripping a trailing newline), and returns that</p>
</blockquote>
<p>Whenever you take in an input, it will be a string, so <code>type(s)</code> will not give you your desired result.  </p>
<p>However, you can get around this by using a <code>try/except</code> block to attempt to cast to a particular type, and if no error is raised, you know a valid type for what the string contains.</p>
<pre><code>def try_as_type(t, v):
  try:
    t(v)
    return True
  except:
    return False

def check(s):
  if try_as_type(int, s):
    return "You entered an integer"
  elif try_as_type(float, s):
    return "You entered a float"
  else:
    return len(s)
</code></pre>
<p>Sample runs:</p>
<pre><code>&gt;&gt;&gt; Please enter a value:  10
You entered an integer

&gt;&gt;&gt; Please enter a value:  1.43
You entered a float

&gt;&gt;&gt; Please enter a value:  hello there
11
</code></pre>
</div>
<span class="comment-copy">Don't use <code>string</code> as a variable name. Also what if they want to enter <code>'10'</code> as a string?</span>
<span class="comment-copy">Hi Chris, I am just intending this program for literal entry of the type.  I changed the variable name to str,   Thanks.</span>
<span class="comment-copy">Oh no, <code>str</code> is a much worse name than <code>string</code>, it overrides a builtin type.  Use something like <code>s</code> if you want a simple name.</span>
<span class="comment-copy">The correct way to test the type of a value is using <code>isinstance(s, int)</code>, not <code>type(s) == int</code>. You should also be using <code>raw_input</code> instead of <code>input</code> in Python 2, then attempting to convert <code>s</code> explicitly: <code>int(s)</code>, <code>float(s)</code>, etc, catching <code>ValueError</code> as necessary.</span>
<span class="comment-copy">Thanks guys, will try your suggestions, Just started learning python :)</span>
<span class="comment-copy">Thanks Chris, the above code worked. smart way to determine the type of passing valuee. Although I still didn't get to try and except in my training, i understood the code.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html#handling-exceptions</a></span>
<span class="comment-copy">Glad to help, happy programming!</span>
