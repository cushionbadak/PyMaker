<div class="post-text" itemprop="text">
<p>I want to redirect o/p of shell commands to file using variable "path" but it is not working </p>
<pre><code>import os, socket, shutil, subprocess
host = os.popen("hostname -s").read().strip()
path = "/root/" + host

if os.path.exists(path):
  print(path, "Already exists")
else:
   os.mkdir("Directory", path , "Created")

os.system("uname -a" &gt; path/'uname')  # I want to redirect o/p of shell commands to file using varibale "path" but it is not working 
os.system("df -hP"&gt; path/'df')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the problem is the bare &gt; and / symbols in the os.system command...</p>
<p>Here is a python2.7 example with os.system that does what you want</p>
<pre><code>import os
path="./test_dir"
command_str="uname -a &gt; {}/uname".format(path)
os.system(command_str)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a <em>very</em> minimal example using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">subprocess.run</a>. Also, search StackOverflow for "python shell redirect", and you'll get this result right away:</p>
<p><a href="https://stackoverflow.com/questions/89228/calling-an-external-command-in-python/92395#92395">Calling an external command in Python</a></p>
<pre><code>import subprocess


def run(filename, command):
    with open(filename, 'wb') as stdout_file:
        process = subprocess.run(command, stdout=subprocess.PIPE, shell=True)
        stdout_file.write(process.stdout)
        return process.returncode

run('test_out.txt', 'ls')
</code></pre>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">subprocess module</a></span>
<span class="comment-copy">What does "it is not working" mean exactly? Are you getting an error?</span>
<span class="comment-copy">subprocess.run("uname -a", shell=True, stdout=subprocess.PIPE) Out[199]: CompletedProcess(args='uname -a', returncode=0, stdout=b'Linux abhithak 4.13.0-38-generic #43~16.04.1-Ubuntu SMP Wed Mar 14 17:48:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n') which option to use to save in file using variable ?</span>
<span class="comment-copy">/root/abhithak Already exists --------------------------------------------------------------------------- TypeError                                 Traceback (most recent call last) &lt;ipython-input-202-dead83ea1f54&gt; in &lt;module&gt;()       9      10 ---&gt; 11 os.system("uname -a" &gt; path/'uname')  # I want to redirect o/p of shell commands to file using varibale "path" but it is not working      12 os.system("df -hP"&gt; path/'df')  TypeError: unsupported operand type(s) for /: 'str' and 'str'</span>
<span class="comment-copy">Please <b>read</b> the error it is giving you: <code>TypeError: unsupported operand type(s) for /: 'str' and 'str'</code>. The error is with the <code>/</code> operator. It tells you this. Look back until you find it. You see <code>path/'df'</code>. They are both <code>'str'</code>s. You cannot divide strings. It is telling you what's wrong: that you have written something incorrect and not what you intended.</span>
<span class="comment-copy">if we use varibale in run it won't work . I want to save in path like host = os.popen("hostname -s").read().strip()      ...: path = "/root/" + host</span>
<span class="comment-copy">In [223]:  run(path/'uname', 'uname -a') --------------------------------------------------------------------------- TypeError                                 Traceback (most recent call last) &lt;ipython-input-223-1cf1c321c5dd&gt; in &lt;module&gt;() ----&gt; 1 run(path/'uname', 'uname -a')  TypeError: unsupported operand type(s) for /: 'str' and 'str'</span>
<span class="comment-copy">Just modify my code to do what you want. Write another version of my <code>run</code> method to return the hostname rather than write it to a file.</span>
