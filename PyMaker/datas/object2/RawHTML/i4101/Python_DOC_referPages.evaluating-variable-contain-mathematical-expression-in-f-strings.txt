<div class="post-text" itemprop="text">
<p>I have to accept input (using <code>raw_input()</code>) as a power expression like <code>10**5</code> and then print its value. I have tried a few pieces of code but these do not give desired results:</p>
<pre><code>print(f'{2**4}') #&lt;-- prints 16 correctly
a = '{2**4}'
print(f'{{}}'.format(a)) #&lt;-- prints {2**4}
</code></pre>
<p>Is it possible to achieve something like:</p>
<pre><code>var = '2**4'
print(f'{&lt;some way to expand var in here&gt;}') #&lt;-- prints 16
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In f-strings expressions are parsed with the equivalent of:</p>
<pre><code>ast.parse('(' + expression + ')', '&lt;fstring&gt;', 'eval')
</code></pre>
<p>see <a href="https://docs.python.org/3/library/ast.html#ast.parse" rel="nofollow noreferrer">https://docs.python.org/3/library/ast.html#ast.parse</a></p>
<p>But variables will be replaced with their actual value. What are you looking for is sort of a nested evaluation which is not supported by f-strings. Instead as a safe approach you can first split with '**' then covert to int and finally use power:</p>
<pre><code>In [9]: s = "2**4"

In [10]: print(f"{pow(*map(int, s.split('**')))}")
16
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So this works for all expressions (e.g. <code>((2+4-10+88*2)/100)**5</code>) but I am not sure if this is the right way to go (since <code>eval</code> is not recommended) </p>
<pre><code>a = '2**4'
print(eval (a))  #&lt;-- prints 16
</code></pre>
</div>
<span class="comment-copy">Does <code>eval</code> help?</span>
<span class="comment-copy">Yes @Megalng - thanks</span>
<span class="comment-copy">Depending on your needs <code>a = 2**4</code> could help, if <code>eval()</code> is not.</span>
<span class="comment-copy">It does in this case yes, but in case of other operators or expression chains it won't e.g. <code>print(f'{2**4}')  a = '((2+4-10+88*2)/100)**5'  print(eval ('f"{'+a+'}"'))</code></span>
<span class="comment-copy">@BabyGroot In that case take a look at answers here <a href="https://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" title="evaluating a mathematical expression in a string">stackoverflow.com/questions/2371436/â€¦</a></span>
<span class="comment-copy">Yes but most solutions require importing some module - <code>eval</code> and <code>extrapolation</code> is built into python - thanks anyways (+1)</span>
<span class="comment-copy">@BabyGroot As it's also mentioned in many of those answers don't use <code>eval</code> on user input data. NEVER!</span>
<span class="comment-copy">Yes i saw that - that's why i was wondering if we could just <code>int(&lt;expr&gt;)</code> with builtin support</span>
