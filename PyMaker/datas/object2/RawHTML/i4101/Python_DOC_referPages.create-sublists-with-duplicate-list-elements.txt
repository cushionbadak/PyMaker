<div class="post-text" itemprop="text">
<p>I'm new to Python and I'm trying to create sublists for list elements sharing the same base:</p>
<pre><code>listRaw = ['AKS/STB', 'SBHS/AME', 'SBJ/OAK', 'SBJ/ALS', 'AKS/OSMX', 'SBHS/ABNX', 'AKS/AKX']
desiredOutput = [['AKS/STB', 'AKS/OSMX', 'AKS/AKX'], ['SBHS/AME', 'SBHS/ABNX'], ['SBJ/OAK', 'SBJ/ALS']]
</code></pre>
<p>I've tried to first isolate the base from each list element using: </p>
<pre><code>def commonNumerator(self):
    checkPosition = self.find('/')
    commonNumerator = self[:checkPosition]
    return commonNumerator

listRawModified = [commonNumerator(x) for x in listRaw]
print(listRawModified)
</code></pre>
<p>which gets me: </p>
<pre><code>['AKS', 'SBHS', 'SBJ', 'SBJ', 'AKS', 'SBHS', 'AKS']
</code></pre>
<p>but from then I don't know how to proceed to get to the desired ouput.</p>
<p>Can someone explain to me how to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Typical usecase for <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a>:</p>
<pre><code>from itertools import groupby

listRaw = ['AKS/STB', 'SBHS/AME', 'SBJ/OAK', 'SBJ/ALS', 'AKS/OSMX', 'SBHS/ABNX', 'AKS/AKX']

def key(s):
    return s.split('/')[0]

[list(g) for k, g in groupby(sorted(listRaw, key=key), key=key)]
# [['AKS/STB', 'AKS/OSMX', 'AKS/AKX'], ['SBHS/AME', 'SBHS/ABNX'], ['SBJ/OAK', 'SBJ/ALS']]
</code></pre>
<p>The <code>key()</code> function helps in extracting the sorting/grouping key: <code>key('AKS/STB')</code> == <code>'AKS'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way to do this would be to split each element and create a dictionary and then construct your desired output from that dictionary, e.g.:</p>
<pre><code>In []:
d = {}
for i in listRaw:
    k, v = i.split('/')
    d.setdefault(k, []).append(v)
[['/'.join([k, v]) for v in d[k]] for k in d]

Out[]:
[['AKS/STB', 'AKS/OSMX', 'AKS/AKX'], ['SBHS/AME', 'SBHS/ABNX'], ['SBJ/OAK', 'SBJ/ALS']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a typical usecase for itertools. But you could also consider storing the values in a dictionary:</p>
<pre><code>from collections import defaultdict

d = defaultdict(list)
listRaw = ['AKS/STB', 'SBHS/AME', 'SBJ/OAK', 'SBJ/ALS', 'AKS/OSMX', 'SBHS/ABNX', 'AKS/AKX']

for item in listRaw:
    i,y = item.split('/')
    d[i].append(y)

print(dict(d))

# {'AKS': ['STB', 'OSMX', 'AKX'], 'SBHS': ['AME', 'ABNX'], 'SBJ': ['OAK', 'ALS']}
</code></pre>
<p>You can then access the values to <code>AKS</code> with a simple command as:</p>
<pre><code>d['AKS'] # ['STB', 'OSMX', 'AKX']
</code></pre>
</div>
<span class="comment-copy">Awesome! This works perfectly, thanks a lot.</span>
<span class="comment-copy">This works great, thanks a lot @Achampion</span>
