<div class="post-text" itemprop="text">
<p>I have a class, which contains some data. Operator + for two objects of such class should merge data from both objects and returns a new object. However, it should be much better if in the case of += operator would append data from the added object and return self. Here some pseudo code to demonstrate what I want to achieve.</p>
<pre><code>class BiGData:
  def __init__(self):
    self.data=[]
  def __add__(self,x):
    if (this is just a +):
      newData=BigData()
      newData.data += self.data
      newData.data += x.data
      return newData
    else: #(this is the += case)
      self.data += x.data
      return self
</code></pre>
<p>If these two case of usage <code>__add__</code> function can be distinguished, Python code would much better read and understand! Consider this:</p>
<pre><code>x,y=BigData(),BigData()
z = x + y # z is a new object of the BigData class, 
          # which collects all data from both x and y
          # but data in x and y are intacked
x += y    # just append data from y to x
          # data in x has been changed
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, it is not possible.</p>
<p>But if you implement <a href="https://docs.python.org/3/reference/datamodel.html#object.__iadd__" rel="noreferrer"><code>__iadd__()</code></a> then <code>+=</code> will use that instead.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>object.__iadd__(self, other)</code> for <code>+=</code></p>
<p><code>object.__radd__(self, other)</code> for <code>+</code></p>
<p>see <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">datamodel</a> for reference</p>
</div>
<span class="comment-copy">As a general rule, <code>+=</code> is a different operator, so can be overriden separately. If it is not defined separately, the default implementation will just use <code>+</code> and reassign the result.</span>
<span class="comment-copy">@MadPhysicist yes I do understand now. Somehow <b>iadd</b> sneaked behind my attention</span>
<span class="comment-copy"><code>__iadd__</code> and just plain <code>__add__</code>. You only really want <code>__radd__</code> for weird cases and where addition is not commutative for some reason.</span>
