<div class="post-text" itemprop="text">
<p>I am currently using the game engine in Blender. I was wondering how can I change the properties of an object via script, like position, rotation, color, and change the related variables in the objects.</p>
<pre><code>scene = bpy.data.scenes["Scene"]
scene.Cube.diffuse_color = [0]=red [1]=green [2]=blue
</code></pre>
<p>In the example above I tried to change the color of a Cube, but it fails with the error "Cannot assign to literal". How can I solve it?</p>
</div>
<div class="post-text" itemprop="text">
<h2>A couple of suggestions</h2>
<ol>
<li>Before starting to code in Blender you have to be sure of what you are doing because unless it is going to become hard to find a solution to your problem.</li>
<li>Always look at <a href="https://docs.blender.org/manual/en/dev/advanced/scripting/introduction.html" rel="nofollow noreferrer">the documentation</a>.</li>
<li>Blender has a hidden console that you can show up by dragging and dropping the higher part of the UI; every time you do something in the UI (move an object, change a color,...), the corresponding Python command is displayed here:
<a href="https://i.stack.imgur.com/g57zv.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/g57zv.png"/></a></li>
</ol>
<h2>About your question</h2>
<p>The following is a simple snippet to show you how to change the color of the default Cube in Blender:</p>
<pre><code>import bpy
activeObject = bpy.context.active_object #Set active object to variable
mat = bpy.data.materials.new(name="MaterialName") #set new material to variable
activeObject.data.materials.append(mat) #add the material to the object
bpy.context.object.active_material.diffuse_color = (1, 0, 0) #change color
</code></pre>
<p>You can also access an object's transformations through the relevant properties (location, rotation_euler - for Euler XYZ rotations, and scale) this way:</p>
<pre><code>&gt;&gt;&gt; object.location
Vector((-2.609607696533203, -3.618044137954712, 1.8581657409667969))

&gt;&gt;&gt; object.rotation_euler
Euler((-0.6668576598167419, 0.697817325592041, -1.8853096961975098), 'XYZ')

&gt;&gt;&gt; object.scale
Vector((1.2768771648406982, 1.4246054887771606, 0.6418209075927734))
</code></pre>
<p>Hope this is a good hint for you to start with.</p>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, the error you get is because the code you show is not valid python code, to change the color value, you need to have the index (the <code>[0]</code>) attached to the property name and the value to assign goes on the other side of the <code>=</code> sign.</p>
<pre><code>color[0] = 0.1
</code></pre>
<p>It is possible to assign the same value to several properties in one line -</p>
<pre><code>color[0] = color[1] = color[2] = 0.2
</code></pre>
<p>You can also assign all four values (color includes an alpha) to the color property by using a <a href="https://docs.python.org/3/library/stdtypes.html#tuples" rel="nofollow noreferrer">tuple</a> -</p>
<pre><code>red = blue = green = alpha = 0.2

color = (red, green, blue, alpha)
</code></pre>
<p>Now on to what you are trying to do -</p>
<p>There are two ways to access blenders data, <a href="https://docs.blender.org/api/current/#application-modules" rel="nofollow noreferrer">bpy</a> is only used for accessing data while you are modeling, texturing etc.</p>
<p>When the game engine is running bpy is not available, you need to use <a href="https://docs.blender.org/api/current/#game-engine-modules" rel="nofollow noreferrer">bge</a> to access any data from scripts you assign to a python controller.</p>
<p>To get what you are trying to work, first enable object color for the material, you can find this under <a href="https://docs.blender.org/manual/en/dev/render/blender_render/materials/properties/options.html" rel="nofollow noreferrer">options in the material settings</a>. With this enabled you can adjust the objects color property -</p>
<pre><code>import bge

cont = bge.logic.getCurrentController()
own = cont.owner

own.color[0] = 0.2 # red
own.color[1] = 0.3 # green
own.color[2] = 0.4 # blue
</code></pre>
<p>It is possible to access other objects, you use <a href="https://docs.blender.org/api/current/bge.logic.html#bge.logic.getCurrentScene" rel="nofollow noreferrer"><code>getCurrentScene()</code></a> to get the current scene which has the list of objects,</p>
<pre><code>scn = bge.logic.getCurrentScene()
enemy = scn.objects['enemy']
</code></pre>
<p>You can find sample code in many of the API pages for <a href="https://docs.blender.org/api/current/bge.types.html" rel="nofollow noreferrer">game engine types</a> and will find <a href="https://blender.stackexchange.com">blender.stackexchange</a> is a better place to ask blender questions.</p>
</div>
