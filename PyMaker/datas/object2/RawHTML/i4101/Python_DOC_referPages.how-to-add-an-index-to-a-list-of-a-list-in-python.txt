<div class="post-text" itemprop="text">
<p>I want to sort a List within a List that i currently have which isnt the issue, its that I believe I have saved the values as a single index in the array, but need the finishTime to be a seperate index as I would need to sort the arrays by this value. The context of this code is a simple Athlete race data entry form.
The code is below</p>
<pre><code>import time
datasets= []


for i in range(1, 3):
    print("Inputting Data for Lane", i)
    gender = input("Is the athlete male or female ")
    athlete = input("What is the athletes name ")
    finishTime = input("What was the finishing time ")
    dataset = ("Gender =", gender, "|" ,"Athlete =", athlete, "|","Finish time", finishTime)
    datasets.append(dataset)






for s in datasets:
    time.sleep(1)
    print("")
    print(*s)
</code></pre>
<p>It should look like this</p>
<pre><code>&gt;Male John, 9
&gt;Female Sarah, 7
</code></pre>
<p>As you can see they should be two different indexes so that I can then sort the lists within the list by the number on the end.</p>
</div>
<div class="post-text" itemprop="text">
<p>First use a proper data structure - this: </p>
<pre><code>("Gender =", gender, "|" ,"Athlete =", athlete, "|","Finish time", finishTime)
</code></pre>
<p>is mixing data (the <code>gender</code>, <code>athlete</code> and <code>finishTime</code> values) with presentation stuff, and is barely usable. Either just store the values ie:</p>
<pre><code> datasets.append((gender, athlete, finishTime))
</code></pre>
<p>you know that for each "row" in <code>datasets</code>, <code>row[0]</code> is the gender, <code>row[1]</code> is the name and <code>row[2]</code> the time.</p>
<pre><code>row = datasets[0]
print("Gender : {}".format(row[0]))
</code></pre>
<p>or use dicts if you want something more explicit:</p>
<pre><code> datasets.append(
     {"gender": gender, "athlete": athlete, "finishTime": finishTime}
     )
</code></pre>
<p>so for each row you can get the values by key instead of index:</p>
<pre><code>row = datasets[0]
print("Gender : {}".format(row["gender"]))
</code></pre>
<p>Then you very certainly want to make <code>finsihTime</code> an integer - <code>input()</code> returns a string, and string don't sort the same way as integers:</p>
<pre><code>&gt;&gt;&gt; lst = ["15", "2", "21", "3"]
&gt;&gt;&gt; sorted(lst)
['15', '2', '21', '3']

&gt;&gt;&gt; lst2 = [15, 2, 31, 3]
&gt;&gt;&gt; sorted(lst2)
[2, 3, 15, 31]
</code></pre>
<p>Then you only have to pass the proper <code>key</code> callback function to <code>sorted()</code>. If you use tuples:</p>
<pre><code>&gt;&gt;&gt; datasets
[('male', 'foo', 15), ('female', 'bar', 11)]

&gt;&gt;&gt; sorted(datasets, key=lambda row: row[2])
[('female', 'bar', 11), ('male', 'foo', 15)]
</code></pre>
<p>If you use dicts:</p>
<pre><code>&gt;&gt;&gt; datasets
[{'gender': 'male', 'athlete': 'foo', 'finishTime': 15}, {'gender': 'female', 'athlete': 'bar', 'finishTime': 11}]
&gt;&gt;&gt; sorted(dataset, key=lambda row: row["finishTime"])
[{'gender': 'female', 'athlete': 'bar', 'finishTime': 11}, {'gender': 'male', 'athlete': 'foo', 'finishTime': 15}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using your list of lists, use either <a href="https://docs.python.org/3/library/stdtypes.html?highlight=list%20sort#list.sort" rel="nofollow noreferrer"><code>sort()</code></a> to sort the list in place or <a href="https://docs.python.org/3/library/functions.html?highlight=sorted#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> to get a new sorted list. Use the <code>key</code> argument to either function to sort on the last element of the list. If you need the items sorted from largest finish time to shortest, set <code>reverse=True</code>:</p>
<pre><code>datasets.sort(key=lambda dataset: float(dataset[-1]), reverse=True)
</code></pre>
<p>this will sort the list based on the numeric floating point value of the last item of each nested list. You might prefer to use <a href="https://docs.python.org/3/library/decimal.html#module-decimal" rel="nofollow noreferrer"><code>Decimal</code></a>s instead of <code>float</code>s to avoid any loss of precision, particularly if you need to perform calculations on the times.</p>
<p>I think, however, that you'd be better off using a dictionary, named tuple, or even an ordinary tuple instead of the inner list. Here's an example using a dictionary:</p>
<pre><code>datasets = []

for i in range(1, 3):
    dataset = {}
    print("Inputing Data for Lane", i)
    dataset['lane'] = i
    dataset['gender'] = input("Is the athlete male or female ")
    dataset['athlete'] = input("What is the athletes name ")
    dataset['finishTime'] = float(input("What was the finishing time "))
    datasets.append(dataset)

datasets.sort(key=lambda d: d['finishTime'], reverse=True)

for dataset in datasets:
    print('{} {}, {}'.format(dataset['gender'], dataset['athlete'], dataset['finishTime']))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time
datasets= []


for i in range(0, 3):
    print("Inputting Data for Lane", i)
    gender = str(input("Is the athlete male or female ")) # female|male check missing...
    athlete = str(input("What is the athletes name "))
    finishTime = str(input("What was the finishing time "))
    dataset = [gender, athlete, finishTime]
    datasets.append(dataset)





print("{0:&lt;10}{1:&lt;10}{2:&lt;15}".format("Gender","Athlete","Finish time"))

ds = sorted(datasets, key=lambda x:x[2], reverse=False)

for s in ds:
    time.sleep(1)
    print("{0:&lt;10}{1:&lt;10}{2:&lt;15}".format(s[0], s[1], s[2]))
</code></pre>
</div>
<span class="comment-copy">You can use <a href="https://docs.python.org/2/library/functions.html#sorted" rel="nofollow noreferrer">sorted</a></span>
<span class="comment-copy">Why not use a dictionary or a named tuple for the dataset, and a list of these for the datasets?</span>
<span class="comment-copy">It would need to be sorted by the finishingTime however, I think theres only one index for each array. It would need another index which would be the finishingTime from where it can be sorted, Im having trouble with doing this.</span>
<span class="comment-copy">Could you provide a brief explanation on what you added so i can further understand this.</span>
<span class="comment-copy">Changed to list format because sorted() function works only with it. All inputs are added to datasets as string (so sorting by dataset[2] / finishTime) is according to string type, not time or int. So leading zeros are important for finishTime ("01:00" is not same as "1:00"). Changed output to formatted string in order to get tabulated output.</span>
