<div class="post-text" itemprop="text">
<p>I currently have this dict:</p>
<pre><code>initial_dict = {'val_1': 2, 'val_2': 4}
</code></pre>
<p>And I`m looking for the more efficient way to add a new 'foo' key to all keys to get:</p>
<pre><code>final_dict = {('foo' ,'val_1'): 2, ('foo' ,'val_2'): 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe you want <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><code>dict comprehension</code></a> </p>
<pre><code>&gt;&gt;&gt; { ('foo', key): val for key, val in initial_dict.items()}
{('foo', 'val_1'): 2, ('foo', 'val_2'): 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really wanted to, you could re-build the dictionary using a comprehension:</p>
<pre><code>new_dict = {('foo', k) : v for k, v in initial_dict.items()}
</code></pre>
<p></p>
<pre><code>print(new_dict)
{('foo', 'val_1'): 2, ('foo', 'val_2'): 4}
</code></pre>
<p>To index, you would now use <code>new_dict[('foo', 'val_1')]</code>.</p>
<p>However, it appears you're trying to build a multi-indexed dictionary. Why not make it a nested dict instead?</p>
<pre><code>new_dict = {'foo' : initial_dict}
</code></pre>
<p></p>
<pre><code>print(new_dict)
{'foo': {'val_1': 2, 'val_2': 4}}
</code></pre>
<p>Now, you'd just need to do <code>new_dict['foo']['val_1']</code>  to achieve the same effect. 
This is a lot faster and cheaper to construct because you re-use what you already have instead of re-creating it from scratch.</p>
</div>
<span class="comment-copy">Any idea why we were down voted @coldspeed?</span>
<span class="comment-copy">@RafaelC I've learned not to let it get to me, because it tends to happen.</span>
