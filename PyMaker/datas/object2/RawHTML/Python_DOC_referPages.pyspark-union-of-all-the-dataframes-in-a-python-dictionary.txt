<div class="post-text" itemprop="text">
<p>I have a dictionary <code>my_dict_of_df</code> which consists of <strong>variable</strong> number of dataframes each time my program runs. I want to create a new dataframe that is a union of all these dataframes.</p>
<p>My dataframes look like-</p>
<pre><code>my_dict_of_df["df_1"], my_dict_of_df["df_2"] and so on...
</code></pre>
<p>How do I union all these dataframes?</p>
</div>
<div class="post-text" itemprop="text">
<p>Consulted the solution given <a href="https://stackoverflow.com/questions/33743978/spark-union-of-multiple-rdds">here</a>, thanks to <a href="https://stackoverflow.com/users/5858851/pault">@pault</a>.</p>
<pre><code>from functools import reduce
from pyspark.sql import DataFrame

def union_all(*dfs):
    return reduce(DataFrame.union, dfs)

df1 = sqlContext.createDataFrame([(1, "foo1"), (2, "bar1")], ("k", "v"))
df2 = sqlContext.createDataFrame([(3, "foo2"), (4, "bar2")], ("k", "v"))
df3 = sqlContext.createDataFrame([(5, "foo3"), (6, "bar3")], ("k", "v"))

my_dic = {}
my_dic["df1"] = df1
my_dic["df2"] = df2
my_dic["df3"] = df3

new_df = union_all(*my_dic.values())

print(type(new_df))   # &lt;class 'pyspark.sql.dataframe.DataFrame'&gt;
print(new_df.show())  

"""
+---+----+
|  k|   v|
+---+----+
|  1|foo1|
|  2|bar1|
|  3|foo2|
|  4|bar2|
|  5|foo3|
|  6|bar3|
+---+----+
"""
</code></pre>
<p><strong>Edit</strong>: using <code>DataFrame.union</code> instead of <code>DataFrame.unionAll</code> since the latter is deprecated.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/33743978/spark-union-of-multiple-rdds">Spark union of multiple RDDs</a></span>
<span class="comment-copy">@pault I've consulted that answer, but the return value is a list of dataframe objects and not a new unionized dataframe. I intend to do further operations on this newly created dataframe.</span>
<span class="comment-copy">The return value on the linked post and the code in my other comment is a DataFrame. It is not a list of DataFrames.</span>
<span class="comment-copy">It's because of the way <code>unionAll</code> is defined here to take in <code>*dfs</code>. Either call it by unpacking your values: <code>unionAll(*my_dic.values())</code> OR change the function definition to take a single (iterable) argument: <code>def unionAll(dfs): return reduce(DataFrame.unionAll, dfs)</code></span>
