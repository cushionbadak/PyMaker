<div class="post-text" itemprop="text">
<p>in pinax Userdict.py:</p>
<pre><code>def __getitem__(self, key):
        if key in self.data:
            return self.data[key]
        if hasattr(self.__class__, "__missing__"):
            return self.__class__.__missing__(self, key)
</code></pre>
<p>why does it do this on <code>self.__class__.__missing__</code>.</p>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The UserDict.py presented <a href="http://www.manifestdensity.net/2009/05/05/python_on_the_fonera/UserDict.py" rel="noreferrer">here</a> emulates built-in <code>dict</code> closely, so for example:</p>
<pre><code>&gt;&gt;&gt; class m(dict):
...   def __missing__(self, key): return key + key
... 
&gt;&gt;&gt; a=m()
&gt;&gt;&gt; a['ciao']
'ciaociao'
</code></pre>
<p>just as you can override the special method <code>__missing__</code> to deal with missing keys when you subclass the built-in <code>dict</code>, so can you override it when you subclass that <code>UserDict</code>.</p>
<p>The official Python docs for dict are <a href="http://docs.python.org/library/stdtypes.html?highlight=__missing__#mapping-types-dict" rel="noreferrer">here</a>, and they do say:</p>
<blockquote>
<p>New in version 2.5: If a subclass of
  dict defines a method <code>__missing__</code>(),
  if the key key is not present, the
  <code>d[key]</code> operation calls that method
  with the key key as argument. The
  <code>d[key]</code> operation then returns or
  raises whatever is returned or raised
  by the <code>__missing__(key)</code> call if the
  key is not present. No other
  operations or methods invoke
  <code>__missing__()</code>. If <code>__missing__()</code> is not defined, <code>KeyError</code> is raised.
  <code>__missing__()</code> must be a method; it cannot be an instance variable. For an
  example, see <code>collections.defaultdict</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you want to <strong>use default values in a dict</strong> (aka <em>__missing__</em>), you can check out <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> from  collections module:</p>
<pre><code>from collections import defaultdict

a = defaultdict(int)

a[1] # -&gt; 0
a[2] += 1
a # -&gt; defaultdict(int, {1: 0, 2: 1})
</code></pre>
</div>
