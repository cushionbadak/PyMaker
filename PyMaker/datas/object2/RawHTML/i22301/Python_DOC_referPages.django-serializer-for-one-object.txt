<div class="post-text" itemprop="text">
<p>I'm trying to figure out a way to serialize some Django model object to JSON format, something like:</p>
<pre><code>j = Job.objects.get(pk=1)
##############################################
#a way to get the JSON for that j variable???
##############################################
</code></pre>
<p>I don't want:</p>
<pre><code>from django.core import serializers
serializers.serialize('json', Job.objects.get(pk=1),ensure_ascii=False)
</code></pre>
<p>Because it returns JSON array, not a single object representation.</p>
<p>Any ideas?</p>
<p>One way I'm thinking of: is to find a way to get a hash(attribute,value) of the object and then use simplejson to get the JSON representation of it, however I don't know how to get that hash.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about just massaging what you get back from serializers.serialize?  It is not that hard to trim off the square brackets from the front and back of the result.</p>
<pre><code>job = Job.objects.get(pk=1)
array_result = serializers.serialize('json', [job], ensure_ascii=False)
just_object_result = array_result[1:-1]
</code></pre>
<p>Not a fancy answer but it will give you just the object in json notation.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using Django's <code>model_to_dict</code>. If I'm not mistaken, <code>serializers.serialize()</code> relies on it, too, but it only works for <code>list</code>, <em>not single model instance</em>. That's how you get a <code>dict</code> instance with your model fields out of a single model: </p>
<pre><code>from django.forms.models import model_to_dict

# assuming obj is your model instance
dict_obj = model_to_dict( obj )
</code></pre>
<p>You now just need one straight <code>json.dumps</code> call:</p>
<pre><code>import json
json.dumps(dict_obj)
</code></pre>
</div>
<span class="comment-copy">Isn't the the same as putting [0] at the end of the array_result? just_object_result = array_result[0]</span>
<span class="comment-copy">No.  <code>array_result</code> is an array serialized into json and will be a string bookended by <code>[]</code>'s at the start and end.  If <code>array_result = '[...]'</code> then <code>arrary_result[1:-1]</code> gives <code>'...'</code> and <code>array_result[0]</code> gives <code>'['</code>.  This question was all about serializing data into a string.  The<code>s[start:end]</code> notation is a <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer">slice of string s</a>.</span>
<span class="comment-copy">This should be inbuilt inside a Model, like a <code>.to_json()</code> method.</span>
<span class="comment-copy">This doesn't work for Date-Time objects, apparently.</span>
