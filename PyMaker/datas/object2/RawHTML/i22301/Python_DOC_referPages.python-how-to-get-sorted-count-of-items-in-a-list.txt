<div class="post-text" itemprop="text">
<p>In Python, I've got a list of items like:</p>
<pre><code>mylist = [a, a, a, a, b, b, b, d, d, d, c, c, e]
</code></pre>
<p>And I'd like to output something like:</p>
<pre><code>a (4)
b (3)
d (3)
c (2)
e (1)
</code></pre>
<p>How can I output a count and leaderboard of items in a list? I'm not too bothered about efficiency, just any way that works :)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import defaultdict

def leaders(xs, top=10):
    counts = defaultdict(int)
    for x in xs:
        counts[x] += 1
    return sorted(counts.items(), reverse=True, key=lambda tup: tup[1])[:top]
</code></pre>
<p>So this function uses a <code>defaultdict</code> to count the number of each entry in our list.  We then take each pair of the entry and its count and sort it in descending order according to the count.  We then take the <code>top</code> number of entries and return that.</p>
<p>So now we can say</p>
<pre><code>&gt;&gt;&gt; xs = list("jkl;fpfmklmcvuioqwerklmwqpmksdvjioh0-45mkofwk903rmiok0fmdfjsd")
&gt;&gt;&gt; print leaders(xs)
[('k', 7), ('m', 7), ('f', 5), ('o', 4), ('0', 3), ('d', 3), ('i', 3), ('j', 3), ('l', 3), ('w', 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A two-liner:</p>
<pre><code>for count, elem in sorted(((mylist.count(e), e) for e in set(mylist)), reverse=True):
    print '%s (%d)' % (elem, count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm surprised that no one has mentioned <code>collections.Counter</code>. Assuming</p>
<pre><code>import collections
mylist = ['a', 'a', 'a', 'a', 'b', 'b', 'b', 'd', 'd', 'd', 'c', 'c', 'e']
</code></pre>
<p>it's just a one liner:</p>
<pre><code>print(collections.Counter(mylist).most_common())
</code></pre>
<p>which will print:</p>
<pre><code>[('a', 4), ('b', 3), ('d', 3), ('c', 2), ('e', 1)]
</code></pre>
<p>Note that <code>Counter</code> is a subclass of <code>dict</code> with some useful methods for counting objects. Refer to <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">the documentation</a> for more info.</p>
</div>
<span class="comment-copy">what have you tried? there are loads of dupes on SO. Have you at least tried looking for them?</span>
<span class="comment-copy">Yes I have. Sorry, I might be using the wrong search terms but I couldn't find anything that looked like what I needed. I have been experimenting but haven't got very far... apologies</span>
<span class="comment-copy">dupe: <a href="http://stackoverflow.com/questions/2148480/can-pythons-list-comprehensions-ideally-do-the-equivalent-of-count-group/2148555#2148555" title="can pythons list comprehensions ideally do the equivalent of count group">stackoverflow.com/questions/2148480/…</a></span>
<span class="comment-copy">Is your listed always sorted?</span>
<span class="comment-copy">Duplicate of all of these: <a href="http://stackoverflow.com/search?q=%5Bpython%5D+frequency+count">stackoverflow.com/search?q=%5Bpython%5D+frequency+count</a>.  Specifically, <a href="http://stackoverflow.com/questions/2161752/how-to-count-the-frequency-of-the-elements-in-a-list" title="how to count the frequency of the elements in a list">stackoverflow.com/questions/2161752/…</a>.    Since it's exactly a year ago, and has almost the same sample data, this smells like homework.</span>
<span class="comment-copy">Perfect. Thank you</span>
