<div class="post-text" itemprop="text">
<p>What is the difference or relationship between <em>str</em> and <em>string</em>?</p>
<pre><code>import string 
print str
print string 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3.1/library/functions.html#str" rel="noreferrer"><code>str</code></a> is a <a href="http://docs.python.org/3.1/library/functions.html" rel="noreferrer">built-in function</a> (actually a <a href="http://docs.python.org/tutorial/classes.html" rel="noreferrer">class</a>) which converts its argument to a string. <a href="http://docs.python.org/3.1/library/string.html" rel="noreferrer"><code>string</code></a> is a <a href="http://docs.python.org/tutorial/modules.html" rel="noreferrer">module</a> which provides common <a href="http://docs.python.org/3.1/library/stdtypes.html#string-methods" rel="noreferrer">string</a> operations.</p>
<pre><code>&gt;&gt;&gt; str
&lt;class 'str'&gt;
&gt;&gt;&gt; str(42)
'42'
&gt;&gt;&gt; import string
&gt;&gt;&gt; string
&lt;module 'string' from '/usr/lib/python3.1/string.py'&gt;
&gt;&gt;&gt; string.digits
'0123456789'
</code></pre>
<p>Put another way, <code>str</code> objects are a textual representation of some object <code>o</code>, often created by calling <code>str(o)</code>. These objects have certain <em>methods</em> defined on them. The module <code>string</code> provides additional <em>functions</em> and <em>constants</em> that are useful when working with strings. </p>
</div>
<div class="post-text" itemprop="text">
<p>There is some overlap between the string module and the str type, mainly for historical reasons.  In early versions of Python str objects did not have methods, so all string manipulation was done with functions from the string module.  When methods were added to the str type (in Python 1.5?) the functions were left in the string module for compatibility, but now just forward to the equivalent str method.</p>
<p>However the string module also contains constants and functions that are not methods on str, such as formatting, character translation etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Like Stephan202 said: str is a built in function which is just used to convert item into string. It has also many useful methods.
For instance:</p>
<pre><code>&gt;&gt;&gt; str(100)
'100' # converts integer into string.

&gt;&gt;&gt; str.lower('foobar')
'FOOBAR'
</code></pre>
<p>Now let's talk about String.-- It a python module which has very interesting functions.
One of them Template thingy</p>
<pre><code>&gt;&gt;&gt; from string import  Template 
&gt;&gt;&gt; t = Template('$foo is a test')
&gt;&gt;&gt; t.substitute (foo='this')
'this is a test' # Replaces $foo variable with 'this'
</code></pre>
<p>There are other useful methods. Suppose you want all the ascii letters</p>
<pre><code>&gt;&gt;&gt; string.ascii_letters
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>"string" is a module that provides string handling functions, str is a built-in function that converts an object to a string representation. No relationship between the two.</p>
</div>
<div class="post-text" itemprop="text">
<p>String is a module but has the same kind of ability as a class 'str' does.</p>
<p>I suggest typing 'string' and type a '.' and wait for few seconds and a pop-down list will appear and you will see that many of the methods available there are also parts of 'str'.</p>
<pre><code>&gt;&gt;&gt;dir(string)
</code></pre>
<p>['Formatter', 'Template', '_TemplateMetaclass', '<strong>builtins</strong>', '<strong>doc</strong>', '<strong>file</strong>', '<strong>name</strong>', '<strong>package</strong>', '_float', '_idmap', '_idmapL', '_int', '_long', '_multimap', '_re', 'ascii_letters', 'ascii_lowercase', 'ascii_uppercase', 'atof', 'atof_error', 'atoi', 'atoi_error', 'atol', 'atol_error', 'capitalize', 'capwords', 'center', 'count', 'digits', 'expandtabs', 'find', 'hexdigits', 'index', 'index_error', 'join', 'joinfields', 'letters', 'ljust', 'lower', 'lowercase', 'lstrip', 'maketrans', 'octdigits', 'printable', 'punctuation', 'replace', 'rfind', 'rindex', 'rjust', 'rsplit', 'rstrip', 'split', 'splitfields', 'strip', 'swapcase', 'translate', 'upper', 'uppercase', 'whitespace', 'zfill']</p>
<p>or you can do this:</p>
<pre><code>&gt;&gt;&gt;help(string)
</code></pre>
<p>now you have to import String to use but str does not have that kind of limitations.</p>
<pre><code>&gt;&gt;&gt;help(str)
</code></pre>
<p>This gives a similar looking list as well.</p>
<p>So the basic difference is that you have to import String but not str.</p>
</div>
<span class="comment-copy">-1: A google search turns up this: <a href="http://docs.python.org/library/string.html" rel="nofollow noreferrer">docs.python.org/library/string.html</a> and this <a href="http://docs.python.org/library/stdtypes.html#sequence-types-str-unicode-list-tuple-buffer-xrange" rel="nofollow noreferrer">docs.python.org/library/â€¦</a>.  The question is very bad considering how readily available the information is.</span>
<span class="comment-copy">Is str a built-in function or a class?  I thought they would be quite different.</span>
<span class="comment-copy"><code>x = 'hello, world'</code> - is x a str or a string? <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#string-methods</a> refers to many <code>str.</code> methods - and then there is <a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer">docs.python.org/3/library/string.html</a> - why does the language need both?</span>
<span class="comment-copy">I think this should be added to the accepted answer, since I believe it is probably the answer people are looking for nowadays. For me, I was trying to figure out why someone in an older book was importing the string module to do a split on a string.</span>
<span class="comment-copy">Functions have methods?</span>
