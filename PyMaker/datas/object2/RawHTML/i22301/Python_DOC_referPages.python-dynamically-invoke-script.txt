<div class="post-text" itemprop="text">
<p>I want to run a python script from within another. By within I mean any state changes from the child script effect the parent's state. So if a variable is set in the child, it gets changed in the parent.</p>
<p>Normally you could do something like </p>
<pre><code>import module
</code></pre>
<p>But the issue is here the child script being run is an argument to the parent script, I don't think you can use import with a variable</p>
<p>Something like this</p>
<pre><code>$python run.py child.py
</code></pre>
<p>This would be what I would expect to happen</p>
<pre><code>#run.py

#insert magic to run argv[1]
print a

#child.py
a = 1

$python run.py child.py
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="http://docs.python.org/library/functions.html#__import__" rel="noreferrer"><code>__import__</code></a> function which allows you to import a module dynamically:</p>
<pre><code>module = __import__(sys.argv[1])
</code></pre>
<p>(You may need to remove the trailing <code>.py</code> or not specify it on the command line.)</p>
<p>From the Python documentation:</p>
<blockquote>
<p>Direct use of <code>__import__()</code> is rare, except in cases where you want to import a module whose name is only known at runtime.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>While <code>__import__</code> certainly executes the specified file, it also stores it in the python modules list. If you want to reexecute the same file, you'd have to do a reload.</p>
<p>You can also take a look at the python <a href="http://docs.python.org/reference/simple_stmts.html#exec" rel="nofollow noreferrer"><code>exec</code></a> statement that could be more suited to your needs.</p>
<p>From Python documentation :</p>
<blockquote>
<p>This statement supports dynamic execution of Python code. The first expression should evaluate to either a string, an open file object, or a code object.</p>
</blockquote>
</div>
<span class="comment-copy">thanks greg. bonus points if you can show how to do this if the python file lies in another directory than the script</span>
<span class="comment-copy">@Mike: sure, modify <code>sys.path</code>, perhaps like this: <code>sys.path.append("/your/module/directory")</code></span>
<span class="comment-copy">Python 3 :  <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer"><code>exec</code></a></span>
