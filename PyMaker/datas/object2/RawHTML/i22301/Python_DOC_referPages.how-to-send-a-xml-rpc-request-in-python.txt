<div class="post-text" itemprop="text">
<p>I was just wondering, how would I be able to send a <code>xml-rpc</code> request in python? I know you can use <code>xmlrpclib</code>, but how do I send out a request in <code>xml</code> to access a function?</p>
<p>I would like to see the <code>xml</code> response.</p>
<p>So basically I would like to send the following as my request to the server:</p>
<pre><code>&lt;?xml version="1.0"?&gt;
&lt;methodCall&gt;
  &lt;methodName&gt;print&lt;/methodName&gt;
  &lt;params&gt;
    &lt;param&gt;
        &lt;value&gt;&lt;string&gt;Hello World!&lt;/string&gt;&lt;/value&gt;
    &lt;/param&gt;
  &lt;/params&gt;
&lt;/methodCall&gt;
</code></pre>
<p>and get back the response</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple XML-RPC client in Python:</p>
<pre><code>import xmlrpclib

s = xmlrpclib.ServerProxy('http://localhost:8000')
print s.myfunction(2, 4)
</code></pre>
<p>Works with this server:</p>
<pre><code>from SimpleXMLRPCServer import SimpleXMLRPCServer
from SimpleXMLRPCServer import SimpleXMLRPCRequestHandler

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

# Create server
server = SimpleXMLRPCServer(("localhost", 8000),
                            requestHandler=RequestHandler)

def myfunction(x, y):
    status = 1
    result = [5, 6, [4, 5]]
    return (status, result)
server.register_function(myfunction)

# Run the server's main loop
server.serve_forever()
</code></pre>
<p>To access the guts of <code>xmlrpclib</code>, i.e. looking at the raw XML requests and so on, look up the <code>xmlrpclib.Transport</code> class in the documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have pared down the source code in <a href="https://docs.python.org/3/library/xmlrpc.client.html" rel="nofollow">xmlrpc.client</a> to a minimum required to send a xml rpc request (as I was interested in trying to port the functionality). It returns the response XML.</p>
<p>Server:</p>
<pre><code>from xmlrpc.server import SimpleXMLRPCServer

def is_even(n):
    return n%2 == 0

server = SimpleXMLRPCServer(("localhost", 8000))
print("Listening on port 8000...")
server.register_function(is_even, "is_even")
server.serve_forever() 
</code></pre>
<p>Client:</p>
<pre><code>import http.client

request_body = b"&lt;?xml version='1.0'?&gt;\n&lt;methodCall&gt;\n&lt;methodName&gt;is_even&lt;/methodName&gt;\n&lt;params&gt;\n&lt;param&gt;\n&lt;value&gt;&lt;int&gt;2&lt;/int&gt;&lt;/value&gt;\n&lt;/param&gt;\n&lt;/params&gt;\n&lt;/methodCall&gt;\n"

connection = http.client.HTTPConnection('localhost:8000')
connection.putrequest('POST', '/')
connection.putheader('Content-Type', 'text/xml')
connection.putheader('User-Agent', 'Python-xmlrpc/3.5')
connection.putheader("Content-Length", str(len(request_body)))
connection.endheaders(request_body)

print(connection.getresponse().read())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What do you mean by "get around"?  <a href="http://docs.python.org/library/xmlrpclib.html?highlight=xmlrpclib#module-xmlrpclib" rel="nofollow noreferrer">xmlrpclib</a> is <em>the</em> normal way to write an XML-RPC client in python.  Just look at <a href="http://svn.python.org/view/python/trunk/Lib/xmlrpclib.py?revision=74543&amp;view=markup" rel="nofollow noreferrer">the sources</a> (or copy them to your own module and add <code>print</code> statements!-) if you want to know the details of how things are done.</p>
</div>
<span class="comment-copy">Yes, I have that working, but how would i be able to send a request simply by using xml? And then getting the response back in xml?</span>
<span class="comment-copy">@PCBEEF: see the <code>Transport</code> class, as I said in the bottom. Examples are in the documentation - and you can also always look under the hood (the sources)</span>
<span class="comment-copy">Found that setting the verbose=True flag when initiating the client, outputs the raw request and response</span>
