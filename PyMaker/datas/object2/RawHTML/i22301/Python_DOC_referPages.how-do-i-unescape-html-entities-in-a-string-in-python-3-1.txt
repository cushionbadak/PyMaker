<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2087370/decode-html-entities-in-python-string">Decode HTML entities in Python string?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have looked all around and only found solutions for python 2.6 and earlier, NOTHING on how to do this in python 3.X. (I only have access to Win7 box.)</p>
<p>I HAVE to be able to do this in 3.1 and preferably without external libraries. Currently, I have httplib2 installed and access to command-prompt curl (that's how I'm getting the source code for pages). Unfortunately, curl does not decode html entities, as far as I know, I couldn't find a command to decode it in the documentation.</p>
<p>YES, I've tried to get Beautiful Soup to work, MANY TIMES without success in 3.X. If you could provide EXPLICIT instructions on how to get it to work in python 3 in MS Windows environment, I would be very grateful.</p>
<p>So, to be clear, I need to turn strings like this: <code>Suzy &amp;amp; John</code> into a string like this: "Suzy &amp; John".</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the function <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="noreferrer">html.unescape</a>:</p>
<p>In <strong>Python3.4+</strong> (thanks to J.F. Sebastian for the update):</p>
<pre><code>import html
html.unescape('Suzy &amp;amp; John')
# 'Suzy &amp; John'

html.unescape('&amp;quot;')
# '"'
</code></pre>
<p>In <strong>Python3.3</strong> or older:</p>
<pre><code>import html.parser    
html.parser.HTMLParser().unescape('Suzy &amp;amp; John')
</code></pre>
<p>In <strong>Python2</strong>:</p>
<pre><code>import HTMLParser
HTMLParser.HTMLParser().unescape('Suzy &amp;amp; John')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3.1/library/xml.sax.utils.html#xml.sax.saxutils.unescape" rel="noreferrer"><code>xml.sax.saxutils.unescape</code></a> for this purpose. This module is included in the Python standard library, and is portable between Python 2.x and Python 3.x.</p>
<pre><code>&gt;&gt;&gt; import xml.sax.saxutils as saxutils
&gt;&gt;&gt; saxutils.unescape("Suzy &amp;amp; John")
'Suzy &amp; John'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Apparently I don't have a high enough reputation to do anything but post this. unutbu's answer does not unescape quotations. The only thing that I found that did was this function</p>
<pre>
import re
from htmlentitydefs import name2codepoint as n2cp

def decodeHtmlentities(string):
    def substitute_entity(match):        
        ent = match.group(2)
        if match.group(1) == "#":
            return unichr(int(ent))
        else:
            cp = n2cp.get(ent)
            if cp:
                return unichr(cp)
            else:
                return match.group()
    entity_re = re.compile("&amp;(#?)(\d{1,5}|\w{1,8});")
    return entity_re.subn(substitute_entity, string)[0]
</pre>
<p>Which I got from this <a href="https://stackoverflow.com/questions/275174/how-do-i-perform-html-decoding-encoding-using-python-django">page</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.x has <a href="http://docs.python.org/3.1/library/html.entities.html" rel="nofollow noreferrer">html.entities</a> too</p>
</div>
<div class="post-text" itemprop="text">
<p>In my case I have a html string escaped in as3 escape function. After a hour of googling haven't found anything useful so I wrote this recusrive function to serve for my needs. Here it is,</p>
<pre><code>def unescape(string):
    index = string.find("%")
    if index == -1:
        return string
    else:
        #if it is escaped unicode character do different decoding
        if string[index+1:index+2] == 'u':
            replace_with = ("\\"+string[index+1:index+6]).decode('unicode_escape')
            string = string.replace(string[index:index+6],replace_with)
        else:
            replace_with = string[index+1:index+3].decode('hex')
            string = string.replace(string[index:index+3],replace_with)
        return unescape(string)
</code></pre>
<p><strong>Edit-1</strong> Added functionality to handle unicode characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure if this is a built in library or not but it looks like what you need and supports 3.1.</p>
<p>From: <a href="http://docs.python.org/3.1/library/xml.sax.utils.html?highlight=html%20unescape" rel="nofollow noreferrer">http://docs.python.org/3.1/library/xml.sax.utils.html?highlight=html%20unescape</a></p>
<p>xml.sax.saxutils.unescape(data, entities={})
Unescape '&amp;', '&lt;', and '&gt;' in a string of data.</p>
</div>
<span class="comment-copy">Awesome! However, I see that only unescapes certain characters. For example, the ampersand remains escaped. Could you explain why this is? How do I unescape these characters?</span>
<span class="comment-copy">@Sho Minamimoto: I added an example. Hope it helps?</span>
<span class="comment-copy">Yeah, I got it, thanks!</span>
<span class="comment-copy">It is exposed as <code>html.escape()</code> since Python 3.4</span>
<span class="comment-copy">@SaurabhYadav: The <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="nofollow noreferrer"><code>html</code> package</a> is part of the Python standard library. It does not need to be installed separately. If <code>import html</code> raises an error, then your Python distribution was not installed properly.</span>
<span class="comment-copy">Seems to be incomplete, '&amp;euml' didn't decode with this although it does with htmlparser</span>
