<div class="post-text" itemprop="text">
<p>I have this python script where I need to run <code>gdal_retile.py</code></p>
<p>but I get an exception on this line:</p>
<pre><code>if Verbose:
   print("Building internam Index for %d tile(s) ..." % len(inputTiles), end=' ')
</code></pre>
<p>The <code>end=''</code> is invalid syntax. I am curious as to why, and what the author probably meant to do. </p>
<p>I'm new to python if you haven't already guessed.</p>
<hr/>
<p>I think the root cause of the problem is that these imports are failing
and therefore one must contain this import <code>from __future__ import print_function</code></p>
<pre><code>try: 
   from osgeo import gdal
   from osgeo import ogr
   from osgeo import osr
   from osgeo.gdalconst import *
except:
   import gdal
   import ogr
   import osr
   from gdalconst import *
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you sure you are using Python 3.x? The syntax isn't available in Python 2.x because <code>print</code> is still a statement.</p>
<pre><code>print("foo" % bar, end=" ")
</code></pre>
<p>in Python 2.x is identical to</p>
<pre><code>print ("foo" % bar, end=" ")
</code></pre>
<p>or</p>
<pre><code>print "foo" % bar, end=" "
</code></pre>
<p>i.e. as a call to print with a tuple as argument.</p>
<p>That's obviously bad syntax (literals don't take keyword arguments). In Python 3.x <code>print</code> is an actual function, so it takes keyword arguments, too.</p>
<p>The correct idiom in Python 2.x for <code>end=" "</code> is:</p>
<pre><code>print "foo" % bar,
</code></pre>
<p>(note the final comma, this makes it end the line with a space rather than a linebreak)</p>
<p>If you want more control over the output, consider using <code>sys.stdout</code> directly. This won't do any special magic with the output.</p>
<p>Of course in somewhat recent versions of Python 2.x (2.5 should have it, not sure about 2.4), you can use the <code>__future__</code> module to enable it in your script file:</p>
<pre><code>from __future__ import print_function
</code></pre>
<p>The same goes with <code>unicode_literals</code> and some other nice things (<code>with_statement</code>, for example). This won't work in really old versions (i.e. created before the feature was introduced) of Python 2.x, though.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre><code>#Only for use in Python 2.6.0a2 and later
from __future__ import print_function
</code></pre>
<p>This allows you to use the Python 3.0 style <code>print</code> function without having to hand-edit all occurrences of <code>print</code> :)</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>In python 2.7 here is how you do it</strong> </p>
<pre><code>mantra = 'Always look on the bright side of life'
for c in mantra: print c,

#output
A l w a y s   l o o k   o n   t h e   b r i g h t   s i d e   o f   l i f e
</code></pre>
<p><strong>In python 3.x</strong></p>
<pre><code>myjob= 'hacker'
for c in myjob: print (c, end='')
#output 
h a c k e r 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you're missing a quote at the beginning but this is probably a copy/paste error.</p>
<p>In Python 3.x, the <code>end=' '</code> part will place a space after the displayed string instead of a newline. To do the same thing in Python 2.x, you'd put a comma at the end:</p>
<pre><code>print "Building internam Index for %d tile(s) ..." % len(inputTiles),
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think he's using Python 3.0 and you're using Python 2.6.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is just a version thing. Since Python 3.x the print is actually a function, so it now takes arguments like any normal function.</p>
<p>The <code>end=' '</code> is just to say that you want a space after the end of the statement instead of a new line character. In Python 2.x you would have to do this by placing a comma at the end of the print statement.</p>
<p>For example, when in a Python 3.x environment:</p>
<pre><code>while i&lt;5:
    print(i)
    i=i+1
</code></pre>
<p>Will give the following output:</p>
<pre><code>0
1
2
3
4
</code></pre>
<p>Where as:</p>
<pre><code>while i&lt;5:
    print(i, end = ' ')
    i=i+1
</code></pre>
<p>Will give as output:</p>
<pre><code>0 1 2 3 4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you're just missing an opening double-quote.  Try:</p>
<pre><code>if Verbose:
   print("Building internam Index for %d tile(s) ..." % len(inputTiles), end=' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the author probably meant:</p>
<pre><code>if Verbose:
   print("Building internam Index for %d tile(s) ..." % len(inputTiles), end=' ')
</code></pre>
<p>He's missing an initial quote after <code>print(</code>.</p>
<p>Note that as of <a href="http://docs.python.org/release/3.0.1/whatsnew/3.0.html#print-is-a-function" rel="nofollow noreferrer">Python 3.0</a>, <code>print</code> is a function as opposed to a statement, if you're using older versions of Python the equivalent would be:</p>
<pre><code>print "Building internam Index for %d tile(s) ..." % len(inputTiles)
</code></pre>
<p>The <code>end</code> parameter means that the line gets <code>' '</code> at the end rather than a newline character. The equivalent in earlier versions of Python is:</p>
<pre><code>print "Building internam Index for %d tile(s) ..." % len(inputTiles),
</code></pre>
<p>(thanks Ignacio).</p>
</div>
<div class="post-text" itemprop="text">
<p>For python 2.7 I had the same issue 
Just use "<strong>from __future__ import print_function</strong>" without quotes to resolve this issue.This Ensures Python 2.6 and later Python 2.x can use Python 3.x print function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this one if you are working with python 2.7:</p>
<pre><code>from __future__ import print_function
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>Even I was getting that same error today. And I've experienced an interesting thing.
If you're using python 3.x and still getting the error, it might be a reason:</em></p>
<blockquote>
<p>You have multiple python versions installed  on same drive. And when
  you're presing the f5 button the python shell window (of ver. &lt; 3.x)
  pops up</p>
</blockquote>
<p><em>I was getting same error today, and noticed that thing. Trust me, when I execute my code from proper shell window (of ver. 3.x), I got satisfactory results</em></p>
</div>
<div class="post-text" itemprop="text">
<p>USE :: <strong><code>python3 filename.py</code></strong> </p>
<p>I had such error , this occured because i have two versions of python installed on my drive namely python2.7 and python3 .
Following was my code :</p>
<pre><code>#!usr/bin/python

f = open('lines.txt')
for line in f.readlines():
        print(line,end ='')
</code></pre>
<p>when i run it by the  command <code>python lines.py</code> I got the following error</p>
<pre><code>#!usr/bin/python

f = open('lines.txt')
for line in f.readlines():
        print(line,end ='')
</code></pre>
<p>when I run it by the command <code>python3 lines.py</code> I executed successfully</p>
</div>
<div class="post-text" itemprop="text">
<p>we need to import a header before using <code>end=''</code>, as it is not included in the python's normal runtime.</p>
<pre><code>from __future__ import print_function
</code></pre>
<p>it shall work perfectly now</p>
</div>
<span class="comment-copy">It really helps if you post the traceback to best diagnose the exception you receive. The obvious syntax error is from the lack of opening quotes. If that was fixed, it would still be a syntax error in Python 2, which does not have the print function without a <code>__future__</code> import.</span>
<span class="comment-copy">As am aside, variables that are not <code>ClassNames</code> should begin with a lower-case letter.</span>
<span class="comment-copy">wrt/ @Mike, see <a href="http://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">python.org/dev/peps/pep-0008</a> for the complete guidelines for variable naming and coding style in Python. It's a good idea to adhere to the guidelines because in Python you have the privilege of working with a mostly consistent library and can thus often avoid the usual guessing game (e.g. PHP) even when you're working with other people's code.</span>
<span class="comment-copy">When asking for help with errors in the future, <i>especially syntax errors</i>, you should try to provide the <i>exact code you've tried running</i>, without any retyping.</span>
<span class="comment-copy">@Mike - I usually would never bother in typing it out again, however i was unable to do so as the code was on a remote computer. I'll be sure to be more careful in the future.</span>
<span class="comment-copy">I checked mine version using <code>dpkg -p python</code> and it was version 2.xx.xx. Thank you so much, I applied the suggestion to put it in the form of <code>print "foo" %bar, </code> and it worked perfectly fine.</span>
<span class="comment-copy">simply putting <b>,</b> at the end of print is awsome..</span>
<span class="comment-copy">Keep in mind, there is a (subtle) difference between <code>print foo, bar</code> and <code>print (foo, bar)</code> in Python 2. The former is a <code>print</code> statement with two items in its "argument" list; the latter is a <code>print</code> statement with a single tuple  in its argument list.</span>
<span class="comment-copy">Your example <code>print("foo" % bar, end=" ")</code> won't work, since <code>bar</code> is not defined; so what is <code>bar</code> in your example? (At least for me with Python 3.7)</span>
<span class="comment-copy">It's work for me ,many thanks. :) :) :)</span>
<span class="comment-copy">Man, you just solve a problem confusing me for couple days, i just remember those whistle and old-day scene but not the lyris, and now i finally figure out what that song is!!</span>
<span class="comment-copy">@Sphynx-HenryAY happy to help you out brother</span>
<span class="comment-copy">I'm intersted to do something like this in python 2 what would be the syntax ? what do you mean add a comma ?</span>
<span class="comment-copy">@Rémi The code in my answer is in Python 2... And I'm referring to the comma at the end.</span>
<span class="comment-copy">Good point! <code>print("foo" % bar, end = " ")</code> triggers a syntax error in Python 2.6 under <code>end = " "</code> just like the missing quote does :)</span>
<span class="comment-copy">A link to the official documentation of <code>print()</code> might be helpful, since there one can see the default value <code>'\n'</code> for the argument <code>end</code>: <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#print</a></span>
<span class="comment-copy">Adding a <code>,</code> to the end will do it.</span>
<span class="comment-copy">Welcome to StackOverflow: if you post code, XML or data samples, please highlight those lines in the text editor and click on the "code samples" button ( { } ) on the editor toolbar or using Ctrl+K on your keyboard to nicely format and syntax highlight it!</span>
<span class="comment-copy">#!/usr/bin/env python3</span>
