<div class="post-text" itemprop="text">
<p>I have a multit-threaded xmlrpc service running which stores a huge amount of data ~2G in memory.  Currently, if I want to update a method the server exposes I have to restart the service.  The problem here is that if I restart the service it needs to load all of the data it had in memory back into memory by using a database or using shelved data.  </p>
<p>I am using methods like this:</p>
<pre><code>xmlrpc_getUser(self, uid):
    return self.users[uid]
</code></pre>
<p>What I was hoping I could do is just use these methods as a proxy to another module, so my methods would look more like this</p>
<pre><code>xmlrpc_getUser(self, uid):
    return self.proxy.getUser(uid)
</code></pre>
<p>This way I could update code on the development server then simply copy my update proxy module to the production server without the need for a restart.</p>
<p>I tried adding 
import service_proxy
to the constructor of my xmlrpc service controller, but I think the module is cached and won't reload.  </p>
<p>Is there a good way to do this?  Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <a href="https://docs.python.org/2/library/functions.html#reload" rel="nofollow noreferrer">reload</a> method. You would need to write some code to check the last modified time of the modules file.</p>
</div>
<div class="post-text" itemprop="text">
<p>If reload doesn't work, you could try <code><a href="http://twistedmatrix.com/documents/current/api/twisted.python.rebuild.html" rel="nofollow noreferrer">twisted.python.rebuild</a></code>; your application need not be written in Twisted to use this twisted.python utility.</p>
<p>I also recently saw this <a href="http://code.google.com/p/livecoding/" rel="nofollow noreferrer">livecoding</a> thing ("a code reloading library for Python"), but it talks about a custom module system and I don't know what's going on there.</p>
</div>
<span class="comment-copy">Note that the <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="nofollow noreferrer"><code>reload</code> function</a> has moved in Python 3.</span>
