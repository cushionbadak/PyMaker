<div class="post-text" itemprop="text">
<pre><code>import pickle

data_pkl = open("data.pkl", "rb")
d_c = data_pkl.read()
data_pkl.close()
print(d_c)
</code></pre>
<p>I am new to handling data structure. When I tried to read pickle data and result looks like below:</p>
<p>b'\x80\x03}q\x00(X\x05\x00\x00\x00Phoneq\x01}q\x02(cnumpy.core.multiarray\nscalar\nq\x03cnumpy\ndtype\nq\x04X\x02\x00\x00\x00i8q\x05K\x00K\x01\x87q\x06Rq\x07(K\x03X\x01\x00\x00\x00

<p>......... long line</p>
<p>How can I convert this to human-readable format in python? </p>
</p></div>
<div class="post-text" itemprop="text">
<p>When a data is dumped, <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> produce a bytes string. This is what you have.</p>
<p>For instance:</p>
<pre class="lang-py prettyprint-override"><code>import pickle

data = {'text': 'value', 'list': [1, 2, 3]}

s = pickle.dumps(data)
print(s)
</code></pre>
<p>Produces the bytes string:</p>
<pre class="lang-py prettyprint-override"><code>b'\x80\x03}q\x00(X\x04\x00\x00\x00textq\x01X\x05\x00\x00'
b'\x00valueq\x02X\x04\x00\x00\x00listq\x03]q\x04(K\x01K'
b'\x02K\x03eu.'
</code></pre>
<p><em>note</em>: I split the long line in 3 parts for readability.</p>
<p>Python defines several protocols, names <code>HIGHEST_PROTOCOL</code> and <code>DEFAULT_PROTOCOL</code>. So, If you change the protocol you can have a different result.</p>
<p>To read this bytes string, you need to use <code>pickle.load</code> (or <code>pickle.loads</code> to read from a bytes string).</p>
<p>For instance:</p>
<pre class="lang-py prettyprint-override"><code>import pprint

obj = pickle.loads(s)
pprint.pprint(obj)
</code></pre>
<p>You get:</p>
<pre class="lang-py prettyprint-override"><code>{'list': [1, 2, 3], 'text': 'value'}
</code></pre>
<p>Cool, but if your data contains instance of unknown type, you wonâ€™t be able to deserialize it.</p>
<p>Here is an example:</p>
<pre class="lang-py prettyprint-override"><code>import pickle
import pprint


class UnknownClass:
    def __init__(self, value):
        self.value = value


data = {'text': 'value',
        'list': [1, 2, 3],
        'u': UnknownClass(25)}

s = pickle.dumps(data)
print(s)

del UnknownClass

obj = pickle.loads(s)
</code></pre>
<p>The <code>del</code> statement is here to simulate an unknown type. </p>
<p>The result will be:</p>
<pre class="lang-py prettyprint-override"><code>Traceback (most recent call last):
  File "/path/to/stack.py", line 19, in &lt;module&gt;
    obj = pickle.loads(s)
AttributeError: Can't get attribute 'UnknownClass' on &lt;module '__main__' from '/path/to/stack.py'&gt;
</code></pre>
<p>For more info, the protocols are specified in the Python documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend looking at the Python documentation, in particular the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer"><code>pickle</code> module docs</a>. Your current code is importing <code>pickle</code>, but it's not actually using <code>pickle</code>, since you're just loading the file using <code>read()</code>. Using <a href="https://docs.python.org/3/library/pickle.html#pickle.load" rel="nofollow noreferrer"><code>pickle.load()</code></a> or another <code>pickle</code> method should do the trick.</p>
<p>For example:</p>
<pre><code>d_c = pickle.load(data_pkl)
</code></pre>
<hr/>
<p>Editing to add the mandatory pickle warning from the docs:</p>
<blockquote>
<p>Warning: The pickle module is not secure against erroneous or maliciously
  constructed data. Never unpickle data received from an untrusted or 
  unauthenticated source. </p>
</blockquote>
<p>(Unpickling an unknown file leaves you open to having arbitrary code executed on your computer, so be careful what you unpickle!)</p>
</div>
<span class="comment-copy">Your pickle is returning a bytes literal which means it has ascii characters \x, \x00, etc. so you need to decode it try print(d_c.decode('utf-8'))</span>
<span class="comment-copy">Is there a reason for not using <code>pickle</code> to read the file?</span>
<span class="comment-copy">@Mntfr Pickle file format is not that straightforward. It is not enough to call <code>decode()</code>.</span>
<span class="comment-copy">@Mntfr This is not a text format. And it is not encoded in UTF-8. So you cannot decode it like that. You need to use <code>pickle.loads</code>.</span>
