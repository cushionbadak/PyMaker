<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8701500/python-class-instance-variables-and-class-variables">python class instance variables and class variables</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have this bit of code: </p>
<pre><code>class Car:
    wheels = 4


if __name__ == "__main__":
    car = Car()
    car2 = Car()
    print(car2.wheels)
    print(car.wheels)
    car.wheels = 3
    print(car.wheels)
    print(car2.wheels)
</code></pre>
<p>Which outputs: </p>
<pre><code>4
4
3
4
</code></pre>
<p>Here "wheels" is defined as a class variable. Class variables are shared by all objects. However I can change its value for a SPECIFIC instance of that class?</p>
<p>Now I know to modify the class variable I need to use the class name: </p>
<pre><code>Car.wheels = 3
</code></pre>
<p>I'm still confused as to how/why this happens. Am I creating an instance variable or am I overwriting the class variable for that instance using: </p>
<pre><code>car.wheels = 3
</code></pre>
<p>-- Or something else?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are right, you do not override the class attribute <code>wheels</code>, but create an instance attribute named <code>wheels</code> for the object <code>car</code> and set it to 3.</p>
<p>This can be verified using <a href="https://docs.python.org/3/library/stdtypes.html#object.__dict__" rel="nofollow noreferrer">the special <code>__dict__</code> attribute</a>:</p>
<pre><code>&gt;&gt;&gt; class Car:
...   wheels=4
... 
&gt;&gt;&gt; c1 = Car() 
&gt;&gt;&gt; c2 = Car()
&gt;&gt;&gt; 
&gt;&gt;&gt; c1.wheels=3
&gt;&gt;&gt; c1.wheels
3
&gt;&gt;&gt; c2.wheels
4
&gt;&gt;&gt; c1.__dict__
{'wheels': 3}
&gt;&gt;&gt; c2.__dict__
{}
</code></pre>
</div>
<span class="comment-copy">Attributes are looked up first on the instance, then the class. So, when you set an attribute of the same name on an instance, it goes in the instance's <code>__dict__</code> and overrides the class attribute when looked up on that instance.</span>
<span class="comment-copy">You might find this answer from <a href="https://stackoverflow.com/a/8959269/8944057">What is the difference between class and instance variables?</a> helpful.</span>
