<div class="post-text" itemprop="text">
<p>I have a function in my program that list all the files in a given path and I am trying to write a test that passes when there are no files exists in the path provided (empty output i.e <code>[]</code>) I am learning about mocker fixture of <code>pytest</code> to do it. Here is what i have written,</p>
<pre><code>def test_no_dirs(mocker):
    mocker.patch('os.listdir')
    assert get_list() #get_list returns ['abc.json', 'test.json', 'test2.json']
    os.listdir.assert_called_with('/etc/app_data/',stdout=[])
</code></pre>
<p>I have used mocker as a parameter first then patch the <code>os.listdir</code> function. <code>os.listdir</code> is called in <code>get_list()</code>, but i don't know how to change the <code>return</code> value of <code>os.listdir</code> to empty list, <code>[]</code> to mock empty directory.</p>
<p>When I run above command I get the following error,</p>
<pre><code>E       AssertionError: Expected call: listdir('/etc/app_data/', stdout='[]')
E       Actual call: listdir('/etc/app_data/')
E
E       pytest introspection follows:
E
E       Kwargs:
E       assert {} == {'stdout': '[]'}
E         Right contains more items:
E         {'stdout': '[]'}
E         Full diff:
E         - {}
E         + {'stdout': '[]'}
</code></pre>
<p>How can I mock <code>os.listdir</code> to return empty value and pass the test?</p>
<p>If i remove <code>stdout=[]</code>, the test <code>PASS</code> but its not really doing what i want to do, which is to pass when there are no files.</p>
<p>That's the code for <code>get_list()</code></p>
<pre><code>import os
def get_list():
    return os.listdir('/etc/app_data/')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>pytest-mock</code> version should look something like this:</p>
<pre><code>def test_no_dirs(mocker):
    mock = mocker.patch('os.listdir', return_value=[])
    result = get_list()
    assert result == []  # because that's the `return_value` mocked
    mock.assert_called_once_with('/etc/app_data/')
</code></pre>
<p>Note that users who do <code>from os import listdir</code> will need to mock in a different namespace! </p>
</div>
<span class="comment-copy">Add the code for <code>get_list</code>.  We need to see how <code>listdir</code> is used/imported.</span>
<span class="comment-copy">I have added the code @wim thanks</span>
<span class="comment-copy">Why are you passing <code>stdout=[]</code> to <code>assert_called_with</code>? You're asserting that <code>stdout=[]</code> was one of the keyword arguments to the <code>listdir</code> call, when no such argument was passed.</span>
<span class="comment-copy">i was watching online tutorial or pytest. and that's how they suggest to set <code>stdout</code> value, i must have confused it. thanks for clearing it out</span>
<span class="comment-copy">thank you so much. can you please suggest where can i find good documentation on <code>pytest-mock</code> which is easy to understand ?</span>
<span class="comment-copy">The stdlib documentation for <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a>.  Note that <code>mocker</code> fixture just injects mock namespace.</span>
<span class="comment-copy">i didn;t downvote</span>
