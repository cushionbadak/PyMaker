<div class="post-text" itemprop="text">
<pre><code>x = [[1,2,3,4],[4,5,0,1],[22,21,31,10]]


def minFor(x):

    removingvalue = []    

    for i in x:
        minvalue = i[0]

        for j in i:           
            if j &lt; minvalue:
                minvalue=j

        for i in range(0,len(x)):
            if x==minvalue:
                removingvalue = removingvalue + minvalue
            return minvalue

        print(minvalue)
</code></pre>
<p>what I 'm trying to do here is first find the smallest number from the list. And remove that smallest value and find again the smallest number from the list. But the remove function doesn't work</p>
</div>
<div class="post-text" itemprop="text">
<p>This finds second smallest of each sublists in the list:</p>
<pre><code>lst = [[1,2,3,4],[4,5,0,1],[22,21,31,10]] 

print([sorted(x)[1] for x in lst])
# [2, 1, 21]
</code></pre>
<p>You just needed to sort sublist in ascending order and select second value out. There is no need of removing value from list.</p>
</div>
<div class="post-text" itemprop="text">
<p>To find the min values of each sub-list, you can do:</p>
<pre><code>min_values = [min(sub_list) for sub_list in x]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Personally, I'd use the builtin <code>sorted</code> function:</p>
<pre><code>def second_min(x):
    result = []
    for sublist in x:
        result.extend(sublist)
    # this flattens the sublists
    # into a single list
    result = sorted(result)
    return result[1]
    # return the second element
</code></pre>
<p>And without the built-ins, replace the <code>sorted()</code> call with:</p>
<pre><code>...
for i in range(len(result) - 1):
    if result[i] &gt; result[i + 1]:
        result[i:i + 2] = [result[i + 1], result[i]]
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min(iterable)</code></a> and a list comprehension to get the overall minimal value. </p>
<p>Then use min on the same list comp with a twist: only allow values in the second list comp that are bigger then your minimal min-value:</p>
<pre><code>xxxx = [[1,2,3,4],[4,5,0,1],[22,21,31,10]]

minmin = min((x for y in xxxx for x in y)) # flattening list comp
secmin = min((x for y in xxxx for x in y if x &gt;minmin))

print(minmin,secmin)
</code></pre>
<p>Output:</p>
<pre><code>0 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can convert the given data-structure, to a single list and then sort the list.  The first two elements give you the answer you want.  Here's what you can do:</p>
<pre><code>input_list = x
new_l = []
for sl in input_list:
    new_l.extend(sl)
new_l.sort()

# First two elements of new_l are the ones that you want.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>remove_smallest = [sorted(i)[1:] for i in x]
get_smallest = [min(i) for i in remove_smallest]

print(remove_smallest)
print(get_smallest)
</code></pre>
<blockquote>
<pre><code>[[2, 3, 4], [1, 4, 5], [21, 22, 31]]
[2, 1, 21]
</code></pre>
</blockquote>
<p>Expanded loops:</p>
<pre><code>remove_smallest = []
for i in x:
    remove_smallest.append(sorted(i)[1:])

get_smallest = []
for i in remove_smallest:
    get_smallest.append(min(i))
</code></pre>
</div>
<span class="comment-copy">Do you want to find second smallest of every sublists or in the whole list?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/42464940/return-second-smallest-number-in-a-nested-list-using-recursion">Return second smallest number in a nested list using recursion</a></span>
<span class="comment-copy">I think your answer is <a href="https://stackoverflow.com/questions/42476504/python-get-second-smallest-value-in-nested-lists-recurssion">there</a></span>
<span class="comment-copy">@PatrickArtner, no the link is different but i see the nature of question is same. please open the link :-)  .. anyway both are good refe to answer this question i believe!</span>
<span class="comment-copy">What did you intend with <code>if x==minvalue:</code> - at this point <code>x</code> is a list and <code>minvalue</code> is a number - they will never be <i>equal</i> and even though that conditional is inside a loop, neither value ever changes (inside that loop). I suspect your return statement should not be inside any loops.</span>
<span class="comment-copy">I can't use sort of any built in functions</span>
<span class="comment-copy">Acknowledged. Please edit your question to include this information so that other people can answer appropriately</span>
