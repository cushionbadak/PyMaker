<div class="post-text" itemprop="text">
<p>I'm trying to check 4 separate variables for the exact same strings using separate variables with similar names. An example is below. The print functions are also an example, they're not my final goal.</p>
<pre><code>from random import randint
example1 = randint(1,3)
example2 = randint(1,3)
example3 = randint(1,3)
example4 = randint(1,3)
if example1 == 1:
  print ("A")
elif example1 == 2:
  print ("C")
else:
  print ("M")
</code></pre>
<p>Can anyone suggest how I could repeat this area for all of the variables?</p>
<pre><code>if example1 == 1:
  print ("A")
elif example1 == 2:
  print ("C")
else:
  print ("M")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remove <code>str</code> from <code>randint(str(1,3))</code></p>
<pre><code>l = [example1, example2, example2, example4]

for i in l:
    if i == 1:
      print ("A")
    elif i == 2:
      print ("C")
    else:
      print ("M")
</code></pre>
<p>or </p>
<pre><code>[print('A') if i == 1 else print('C') if i ==2 else print('M') for i in l]
</code></pre>
<blockquote>
<pre><code>C
C
C
A
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can use a for loop:</p>
<pre><code>from random import randint
example1 = randint(1,3)
example2 = randint(1,3)
example3 = randint(1,3)
example4 = randint(1,3)
for example in (example1, example2, example3, example4):
  if example == 1:
    print ("A")
  elif example == 2:
    print ("C")
  else:
    print ("M")
</code></pre>
<p>The <code>(example1, example2, example3, example4)</code> part creates a <a href="https://realpython.com/python-lists-tuples/#python-tuples" rel="nofollow noreferrer">tuple</a> containing all of the four variables. The <code>for example in ...</code> part then repeats your desired code for each variable, with the <code>example</code> variable taking on the value of each different variable each time round the loop.</p>
<p>For more on for loops, you can take a look at the <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">official tutorial</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A more scalable approach to your problem:         </p>
<pre><code>from random import randint
example1 = randint(1,3)
example2 = randint(1,3)
example3 = randint(1,3)
example4 = randint(1,3)

int_char_map = {1: "A", 2: "C", 3: "M"}

examples = [example1, example2, example2, example4]

print(examples)

for example in examples:
    print(int_char_map[example])
</code></pre>
</div>
<span class="comment-copy">Please post real code. <code>randint(str(1,3))</code> gives a TypeError. What exactly are you trying to do there?</span>
<span class="comment-copy"><code>randint(str(1,3))</code> will throw an error</span>
<span class="comment-copy"><code>len({example1,example2,example3,example4}) == 1</code>?</span>
<span class="comment-copy">As a general rule, when you have "separate variables with similar names" (and similar values and semantic), you really want a <code>list</code> or a <code>dict</code>.</span>
<span class="comment-copy">Perfect, thanks for the help.</span>
<span class="comment-copy">Your welcome! Cheers!</span>
<span class="comment-copy">that is not valid python...</span>
<span class="comment-copy">@JackTaylor <code>randint(str(1,3))</code> will thow an error as str can't be passed with more than 1 element</span>
<span class="comment-copy">Thanks for the warning - should have tested that bit out first. Fixed now.</span>
<span class="comment-copy">Thanks, this is exactly what I needed, just worded differently.</span>
