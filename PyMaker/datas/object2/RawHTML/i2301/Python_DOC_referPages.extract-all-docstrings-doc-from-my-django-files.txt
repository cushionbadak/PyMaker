<div class="post-text" itemprop="text">
<p>I have a project in Django and I write docstrings in my modules, classes and functions. But I need a way to extract all <code>__doc__</code> from there automatically. Like "python manage.py collectstatic" but for <code>.__doc__</code> instances for all <code>.py</code> codes. Something like that? Some ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Giving you a glimpse of  <a href="http://docs.python.org/2/library/pydoc.html" rel="nofollow noreferrer"><code>pydoc</code></a></p>
<p>Example module:</p>
<pre><code># foo.py

def bar():
  """this is the docstring for bar()"""
  print 'hello'


def baz():
  """this is the docstring for baz()"""
  print 'world'
</code></pre>
<p>Now you can print the docstrings using below command:</p>
<pre><code>$ pydoc foo.py
Help on module foo:

NAME
    foo

FILE
    /path/to/foo.py

FUNCTIONS
    bar()
        this is the docstring for bar()

    baz()
        this is the docstring for baz()
</code></pre>
<p>You can also generate an HTML help file:</p>
<pre><code>$ pydoc -w ./foo.py
wrote foo.html
</code></pre>
<p>which looks like this:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/7OiV2.png"/></p>
</div>
<span class="comment-copy">You're probably looking for <a href="https://docs.python.org/3/library/pydoc.html" rel="nofollow noreferrer">pydoc</a></span>
<span class="comment-copy">if you are looking for pydoc(and it sounds like you are.) I would recommend investing the extra effort to get sphinx working ... you will not regret it</span>
<span class="comment-copy">Yes, pydoc is util. But in Python 3 not so much. The imports, for example, have conflicts with the pydoc. The text encoding too.</span>
