<div class="post-text" itemprop="text">
<p>I made an alarm which pops a window when timer is 0 this also starts a while loop for the sound so it keeps playing while the window is open. i however want it to stop when pressing a button. how can i use the changed value of a variable (done by button press) in a loop outside of the assignment?</p>
<p>i have been trying random different things and this is the latest version of my test file:</p>
<pre><code>v = True


def Close():
    global root
    global v
    v = False
    root.destroy()
def Wdow():
    global root
    root = Tk()
    b = Button(root, text='OK', command=Close).grid()
    root.mainloop()

def Sound():

    global v
    while v:
        winsound.PlaySound('sound.wav', winsound.SND_FILENAME)

def Pstart():
    if __name__ == '__main__':
        Process(target=Sound).start()
        Process(target=Wdow).start()

def Note():
    Pstart()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>multiprocessing</code> requires a very special programming style.  You can <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow noreferrer">share state between processes</a>, but it requires the use of the <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Value" rel="nofollow noreferrer"><code>Value</code> class</a> or a similar mechanism.  The usual Python variables will not work.</p>
<p>You also have to pass the <code>Value</code> object as an argument to the target function.  I cannot test this on Windows, but perhaps something like this will work:</p>
<pre><code>def Wdow(v):
    global root
    root = Tk()
    def Close():
        global root
        v.value = 1
        root.destroy()
    b = Button(root, text='OK', command=Close).grid()
    root.mainloop()

def Sound(v):
    while v.value == 0:
        winsound.PlaySound('sound.wav', winsound.SND_FILENAME)

if __name__ == '__main__':
    v = multiprocessing.Value('i', 0)
    Process(target=Sound, args=(v,)).start()
    Process(target=Wdow, args=(v,)).start()
</code></pre>
</div>
<span class="comment-copy">Where does <code>Process</code> come from? Is it from the <code>multiprocessing</code> module?</span>
<span class="comment-copy">@FlorianWeimer yes its from that module.</span>
<span class="comment-copy">I'm a little uncertain, but can you try to do all of your <code>global</code> declaring outside of all of your functions?</span>
<span class="comment-copy">@MattCremeens that's definitely pointless. <code>global</code> statements in the global scope do nothing</span>
<span class="comment-copy">@MattCremeens i had already tried that to no avail...</span>
<span class="comment-copy">Thank you, this worked. Do you maybe know a better way of running the window function and sound loop at the same time so i could avoid this module?</span>
<span class="comment-copy">I expect that threads and the <code>threading</code> module are a bit easier to use for things like, especially on Windows, but you will still have to be careful.</span>
<span class="comment-copy">Perfect, this is much better to work with. Again thank you</span>
