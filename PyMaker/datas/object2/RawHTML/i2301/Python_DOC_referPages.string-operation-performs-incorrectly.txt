<div class="post-text" itemprop="text">
<p>In <code>main.py</code> i have this</p>
<pre><code>import RemoveShortWords as rs

procLine="the   in  shear flow past a flat plate"
procLine = rs.RemomeOneTwoCharWords(procLine)
print(procLine)
</code></pre>
<p>and <code>RemoveShortWords.py</code> is this</p>
<pre><code>def RemomeOneTwoCharWords(procLine):

    procLine = str(procLine)

    for word in procLine.split():

        if(len(word)&lt;=2):
            procLine = procLine.replace(word,"")


    return procLine
</code></pre>
<p>print returns this</p>
<blockquote>
<p>the     sher flow pst  flt plte</p>
</blockquote>
<p>as you can see function removes words with less than 2 characters.
But, for some reason, it removed all "a" characters too. For Example, "flat" became "flt"</p>
<p>Why? </p>
</div>
<div class="post-text" itemprop="text">
<p>The variable <code>procLine</code> has <code>the   in  shear flow past a flat plate</code></p>
<p>And <code>procLine.split()</code>
['the', 'in', 'shear', 'flow', 'past', 'a', 'flat', 'plate']</p>
<p>In <code>for</code> loop, it finds <code>a</code> and replaces <code>a</code> in <code>procLine</code> with empty or removes the character. <strong>Note</strong>: it would do same if some word was with <code>in</code> e.g. <code>string</code> to <code>strg</code>.</p>
<p>Instead I would suggest something like <code>list comprehension</code> may work:</p>
<pre><code>procLine = ' '.join([w for w in procLine.split() if len(w)&gt;2])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>replace</code> replaces <strong>all</strong> occurrences. </p>
<blockquote>
<p>str.replace(old, new[, count])</p>
<p>Return a copy of the string with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#textseq" rel="nofollow noreferrer">Documentation</a></p>
<p>So once the word "a" is reached in the input, <code>procLine.replace("a", "")</code> will remove all "a"s in the entire string. If you only want to replace words shorter than 2 characters, you could use for example list-comprehension:</p>
<pre><code>return ' '.join([s for s in procLine.split(' ') if len(s) &gt; 2])
</code></pre>
</div>
<span class="comment-copy">@PM2Ring, sometimes people may miss things. Why not just try to help to explain what's wrong, instead of posting useless comment?</span>
<span class="comment-copy">@PM2Ring , it is not duplicate, i'm not asking how to remove 2 char words, I  asked why code performed not as intended</span>
<span class="comment-copy">Reopening. The question is about why the code fails; the dupe target did not contain an answer to that question. It may be related, but it's not a dupe.</span>
<span class="comment-copy">oh yes. I missed that somehow. Thank you</span>
<span class="comment-copy"><code>Happy Coding</code>.</span>
<span class="comment-copy">Why not a generator then?</span>
<span class="comment-copy">@U9-Forward For specific case with <code>.join</code> the answer mentions <code>list comprehension</code> is better. <a href="https://stackoverflow.com/a/9061024/5916727">stackoverflow.com/a/9061024/5916727</a></span>
<span class="comment-copy">@student Yeah that's true</span>
<span class="comment-copy">@PM2Ring Interesting; I didn't know that one. Thanks for the info :) I'll edit</span>
