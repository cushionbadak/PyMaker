<div class="post-text" itemprop="text">
<p>My code:</p>
<pre><code>directions = ["north", "south", "east", "west"]
def scan(sentence):
    global sentence_list
    sentence_list = []
    sentence.split()
    for i in sentence:
        if i in directions:
            a = ('direction', i)
            sentence_list.append(a)
            del a
    return sentence_list
</code></pre>
<p>I am trying to split a string and return the words in a tuple within a list, but whenever i test it using returns empty list.</p>
<p>Here's my output:</p>
<pre><code>PS C:\Users\dell 3521\lpythw\ex48&gt; nosetests
F
======================================================================
FAIL: tests.lexicon_tests.test_directions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\dell 3521\AppData\Local\Programs\Python\Python36- 
 32\lib\site-packages\nose-1.3.7-py3.6.egg\nose\case.py
    ", line 198, in runTest
    self.test(*self.arg)
  File "C:\Users\dell 3521\lpythw\ex48\tests\lexicon_tests.py", line 5, in 
test_directions
    assert_equal(lexicon.scan("north"), [('direction', 'north')])
AssertionError: Lists differ: [] != [('direction', 'north')]

Second list contains 1 additional elements.
First extra element 0:
('direction', 'north')

- []
+ [('direction', 'north')]

----------------------------------------------------------------------
Ran 1 test in 0.021s

FAILED (failures=1)
</code></pre>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to reassign <code>sentence</code> to the return value of <code>sentence.split()</code> or iterate directly over <code>sentence.split()</code>, because the <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer">str.split()</a> method does not modify <code>sentence</code> in place, but returns a list instead.</p>
<p>Also you do not need the <code>del a</code> statement.</p>
<p>Change your code to</p>
<pre><code>directions = ["north", "south", "east", "west"]

def scan(sentence):
    global sentence_list
    sentence_list = []
    for i in sentence.split():
        if i in directions:
            a = ('direction', i)
            sentence_list.append(a)

    return sentence_list 
</code></pre>
<p>Or a even shorter way is using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a></p>
<pre><code>directions = ["north", "south", "east", "west"]

def scan(sentence):
    global sentence_list
    sentence_list = [('direction', i) for i in sentence.split() if i in directions]

    return sentence_list
</code></pre>
<p>The output is</p>
<pre><code>&gt;&gt;&gt; scan("north")
[('direction', 'north')]
</code></pre>
<p>And you may want the over think the use of the <code>global</code> statement in your code.
As explained in <a href="https://docs.quantifiedcode.com/python-anti-patterns/maintainability/using_the_global_statement.html" rel="nofollow noreferrer">various</a> <a href="https://www.reddit.com/r/Python/comments/25jzga/what_exactly_makes_global_variables_so_bad/" rel="nofollow noreferrer">resources</a>, you want to avoid using global variables for the readability and maintainability of your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>str.split()</code> method does not modify the string in-place. You should assign the returning value of <code>str.split()</code> to a variable, or in this case, you can simply iterate over it instead:</p>
<pre><code>sentence_list = []
for i in sentence.split():
</code></pre>
</div>
<span class="comment-copy">Please indent your code correctly-</span>
<span class="comment-copy"><code>sentence.split()</code> does not modify <code>sentence</code> in-place.</span>
<span class="comment-copy">You should try using <code>for i in sentence.split():</code></span>
<span class="comment-copy">It is intended in the source file, but i forgot to indent the code post after posting the question.It is rectified now.</span>
<span class="comment-copy">don't use global, <code>del a</code> is not necessary, <code>i</code> is a bad name for a word.</span>
<span class="comment-copy"><code>sentence = sentence.split()</code> is redundant. <code>for i in sentence.split():</code> is sufficient</span>
<span class="comment-copy">You are right, I edited my answer</span>
<span class="comment-copy">Thank you for your answer. It was helpful, but i tried, as you suggested, removing del a and it worked. Still, aren't tuples supposed to be immutable.</span>
<span class="comment-copy">Yeah, of course they are. But you create a new tuple every time you call <code>a = ('direction', i)</code> in your loop.   On the other hand trying to change an element of a, like <code>a[1] = 'north'</code> would result in a <code>TypeError: 'tuple' object does not support item assignment</code></span>
