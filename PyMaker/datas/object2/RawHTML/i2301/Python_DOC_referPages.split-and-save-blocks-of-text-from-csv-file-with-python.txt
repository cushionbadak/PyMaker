<div class="post-text" itemprop="text">
<p>I would like to split each row of a csv file into multiple blocks of text and save them as separate text files (it has only 1 column, each row contains a block of text). My items_split function works perfectly fine with a defined block of text but when applied to the csv file I got the error </p>
<blockquote>
<p>"File "untitled.py", line 25, in items_split
      idx = text_lines.index("ABC") + 1</p>
<p>ValueError: 'ABC' is not in list"</p>
</blockquote>
<p>The code I used is below:</p>
<pre><code>import re
import uuid

def items_split(file):
    data=file
    ## First, we want to remove all empty lines in the text files
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)
    data = re.sub(r'\n\s*\n','\n',data,re.MULTILINE)

    ## Then, we remove all lines up to ABC
    text_lines = data.split("\n")
    idx = text_lines.index("ABC") + 1
    data = "\n".join(text_lines[idx:])


    ## Last, we split the text files into multiple files, each with a news item 

    current_file = None
    for line in data.split('\n'):

        # Set initial filename, 
        if current_file == None and line != '':
            current_file = str(uuid.uuid4()) + '.txt' #this will assign a random file name 
            #current_file = line + '.txt'

        # This is to handle the blank line after Brief
        if current_file == None:
            continue

        text_file = open(current_file, "a")
        text_file.write(line + "\n")
        text_file.close()

        # Reset filename if we have finished this section
        # which is idenfitied by:
        #    starts with Demographics - ^Demographics
        #    contains some random amount of text - .*
        #    ends with ) - )$
        if re.match(r'^Demographics:.*\)$', line) is not None:
            current_file = None


import csv
with open('Book1.csv', 'rb') as csvfile:
    spamreader = csv.reader(csvfile, delimiter=',')
    for row in spamreader:
        items_split(row)
</code></pre>
<p>For example, each row in the csv file would look like this:</p>
<blockquote>
<p>"MEDIA News report</p>
<p>ABC </p>
<p>Topic 1  dzfffa a agasgeaherhryyeshdh</p>
<p>Demographics: 12,000 (male 16+) • 7,000 (female 16+)</p>
<p>Topic 2</p>
<p>fszg seez trbwtewtmytmutryrmujfcj</p>
<p>Demographics: 10,000 (male 16+) • 5,000 (female 16+)</p>
<p>Are you happy with this content? "</p>
</blockquote>
<p>I want to split it into:</p>
<blockquote>
<p>ABC </p>
<p>Topic 1  dzfffa a agasgeaherhryyeshdh</p>
<p>Demographics: 12,000 (male 16+) • 7,000 (female 16+)</p>
</blockquote>
<p>and </p>
<blockquote>
<p>Topic 2</p>
<p>fszg seez trbwtewtmytmutryrmujfcj</p>
<p>Demographics: 10,000 (male 16+) • 5,000 (female 16+)</p>
<p>Are you happy with this content? "</p>
</blockquote>
<p>and save each as separate text files. I have run the function on text itself and it works perfectly fine. The problem is when I run it on the csv file, somehow it doesn't recognize that each row is a block of text and I have tried converting it into strings etc. in vain. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a great library for importing and reading from CSV files. <em>never reinvent the wheel</em></p>
<p><a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">CSV Python 2.X</a></p>
<p>from the document a short example explaining how to read from a CSV file.</p>
<pre><code>import csv
with open('eggs.csv', 'rb') as csvfile:
     spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
     for row in spamreader:
         print ', '.join(row)
</code></pre>
<p><a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">CSV Python 3.x</a></p>
<p>This module works similarly except now it returns an OrderedDict[] type which makes it a bit easier to navigate the file. </p>
<pre><code> import csv
 with open('names.csv', newline='') as csvfile:
     reader = csv.DictReader(csvfile)
     for row in reader:
         print(row['first_name'], row['last_name'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're passing a row from csv, which is a list of columns obtained from just one line of text, to your <code>item_split</code> function, which expects a newline-delimited string of lines, so the function certainly can't find anything you expect.</p>
<p>Since you apparently already know the topic names of each block of texts, you can instead use <code>re.split</code> to split your csv by known topic name patterns:</p>
<pre><code>import re
import uuid
with open('Book1.csv', 'r') as f:
    texts = iter(re.split(r'^(ABC|Topic 2)$', f.read(), flags=re.MULTILINE)[1:])
for text in zip(texts, texts):
    with open(str(uuid.uuid4()) + '.txt', 'w') as f:
        f.write(''.join(text))
</code></pre>
<p>so that the first file will have:</p>
<pre><code>ABC

Topic 1 dzfffa a agasgeaherhryyeshdh

Demographics: 12,000 (male 16+) • 7,000 (female 16+)
</code></pre>
<p>and the second file will have:</p>
<pre><code>Topic 2

fszg seez trbwtewtmytmutryrmujfcj

Demographics: 10,000 (male 16+) • 5,000 (female 16+)

Are you happy with this content?
</code></pre>
</div>
<span class="comment-copy">CSV (comma separated values).  Your file may have a csv extension but it is not acctually a CSV since it does not have commas as the delimiter. This will cause undefined behavior when trying to use the csv library.</span>
