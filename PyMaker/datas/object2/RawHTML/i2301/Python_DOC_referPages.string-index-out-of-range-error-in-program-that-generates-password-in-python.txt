<div class="post-text" itemprop="text">
<p>I was given an assignment in university to write a program that will create user's password using their name and surname( ex: name = 'John', surname = 'Smith' =&gt; password will be 'JSomhinth', but I get “IndexError: string index out of range” mistake.</p>
<pre><code>name = input("Enter your name: ")
surname = input("Enter your surname: ")
print("Your credentials are %s %s." %(name, surname))

length = int((len(name) + len(surname))/2)
password = []
x = 0
y = 0
if len(name)&gt;len(surname):
    for i in range(0, length):
        for n in range(0, len(name)):
            password.append(name[x])
            x += 1
            break
        for m in range(0, len(surname)):
            password.append(surname[y])
            y += 1
            break
print(''.join(password))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest</code></a> with <code>fillvalue</code> handling the unequal length case.</p>
<p>Using a list-comprehension:</p>
<pre><code>from itertools import zip_longest

name = 'John'
surname = 'Smith'

print(''.join([x + y for x, y in zip_longest(name, surname, fillvalue='')]))
# JSomhinth
</code></pre>
<p>Or using <code>map</code>:</p>
<pre><code>print(''.join(map(''.join, zip_longest(name, surname, fillvalue=''))))
# JSomhinth
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is here:</p>
<pre><code>if len(name)&gt;len(surname):
    for i in range(0, length):
        for n in range(0, len(name)):
            password.append(name[x])
            x += 1
            break
        for m in range(0, len(surname)):
            password.append(surname[y])
            y += 1
            break
</code></pre>
<p>every time you go through the outer loop you will hit the inner loop on surname and increment <code>y</code>.
Since surname is shorter than name, eventually <code>y</code> will reach (len(name)+len(surname))/2 -1 which will make <code>surname[y]</code> call throw out of bounds exception if name is at least 2 chars longer than surname.</p>
<p>In unrelated note, there is no need for inner loops, since every time they will only run once, increment global var and break, so the following code would work too</p>
<pre><code>if len(name)&gt;len(surname):
    for i in range(0, length):
        password.append(name[x])
        x += 1
        if y &lt; len(surname):
            password.append(surname[y])
        y += 1
</code></pre>
<p>Austin's answer is the cleanest way to go about this problem though.</p>
</div>
<span class="comment-copy">If you use <code>name = 'John', surname = 'Smith'</code>, this code just prints the full name because <code>len('John') &lt; len('Smith')</code>. It also works fine if I take name=Johnny and surname = Smith. I get the desired password without any error</span>
<span class="comment-copy">I know :D I didn't get to elif part, where surname would be longer</span>
<span class="comment-copy">I think you should just use <code>length = min(len(name), len(surname))</code></span>
<span class="comment-copy">Bazingaa, this code works with some names and doesn't work with others for some reasons. For example, with Daniiar Ivanov it's ok, but with Daniiar Smith there's an error</span>
<span class="comment-copy">Unrelated sidenote: these are terrible passwords, you should <b>never</b> use them.</span>
<span class="comment-copy">You said, "Since surname is shorter than name, eventually y will reach (len(name)+len(surname))/2 -1 which will make surname[y] call throw out of bounds exception if name is at least 2 chars longer than surname.", but I don't understand why. I'm very new to python, so could you please try to explain it to me, if it's possible.</span>
<span class="comment-copy">Bro, I finally understand why it works this way! Thank you very much! And debugger too :D</span>
