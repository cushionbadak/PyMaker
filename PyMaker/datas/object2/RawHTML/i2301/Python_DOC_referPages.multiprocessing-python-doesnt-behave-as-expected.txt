<div class="post-text" itemprop="text">
<p>Hello I am working on running two different functions from <code>main()</code> with the multiprocessing library :</p>
<pre><code>Coap = multiprocessing.Process(target=runCoapSync(iotComponent))
huis=multiprocessing.Process(target=runHuis(iotComponent))
huis.start()
Coap.start()
</code></pre>
<p>The problem is that the function <code>runHuis()</code> does not get triggered but if I comment lines for running the other function, the function <code>runHuis()</code> works as expected. I use the very same structure somewhere else in my code but it's working great.</p>
<p>Here's the code of both functions: </p>
<pre><code>def runHuis(iotDevice):
    print("----------------1---------------")
    LCD=iotDevice.connectedHUIs[0]
    while True:
        LCD.alertHuman(iotDevice.connectedSensors[0].data.value)

def runCoapSync(iotDevice):
    print("----------------2---------------")
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(runCoap(iotDevice))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>multiprocessing.Process</code> requires the <a href="https://docs.python.org/3/library/multiprocessing.html#the-process-class" rel="nofollow noreferrer">target</a> to be a callable with optional args:</p>
<pre><code>multiprocessing.Process(target=runCoapSync, args=(iotComponent,))
</code></pre>
<p>Since you're calling it instead, the remaining program waits for <code>runCoapSync</code> to complete.</p>
</div>
<span class="comment-copy">What version of Python is this? Which operating system are you running on?</span>
<span class="comment-copy">I am working on Python3 on a raspberry Pi so the OS is a raspbian</span>
<span class="comment-copy">Great solution, thank you but don't you find it's weird because when i was passing the arguments myself it worked very well for <code>runCoapSync()</code> function.</span>
<span class="comment-copy">@VincentNAHMIAS it was calling the first function, but in the <i>same</i> process, since the call was happening even before the process was instantiated.</span>
<span class="comment-copy">oh okay i have understood, thanks for the explanation !</span>
