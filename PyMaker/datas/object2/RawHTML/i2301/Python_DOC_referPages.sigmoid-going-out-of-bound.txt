<div class="post-text" itemprop="text">
<pre><code>def sigmoid(z):
# complete the code
z = np.asarray(z)
if z.ndim == 0:
    return(1/(1+np.exp(-z)))
else:
    d = np.array([])
    for item in z:
        d= np.append(d,1/(1+np.exp(-item)))
    return d
</code></pre>
<p>print(sigmoid([(1,3), (4,30)]))</p>
<p>why is this returning <code>[ 0.73105858  0.95257413  0.98201379  1.        ]</code>
as the function is bound from 0 to 1
for example <code>[q= 1/1+np.exp(-30)][1]</code> returns 1.0000000000000935</p>
<p>why is this happening and how to correct it?
 for example <a href="https://i.stack.imgur.com/eSSHN.png" rel="nofollow noreferrer">image of a weird looking output</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your sigmoid implementation looks fine.</p>
<p>The reason <code>print(1 / 1 + np.exp(-30))</code> returns <code>1.0000000000000935</code> is due to <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a>.</p>
<pre><code># Your example
1 / 1 + np.exp(-30)

# How it will be computed
(1 / 1) + np.exp(-30)

# What you actually wanted
1 / (1 + np.exp(-30))
</code></pre>
<p>P.S. numpy supports <a href="https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html" rel="nofollow noreferrer">broadcasting</a>. Your function can be simplified into:</p>
<pre><code>def sigmoid(z):
    z = np.asarray(z)
    return 1 / (1 + np.exp(-z))
</code></pre>
<p>Use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ravel.html" rel="nofollow noreferrer">ravel</a> function to flatten the multi-dimensional array, if it's what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>oh BODMAS rule.</p>
<pre><code>q= 1/(1+np.exp(-30))
</code></pre>
<p>returns <code>0.9999999999999065</code></p>
<p>which is less than 1</p>
<p>It is rounded off to 1 in the console</p>
</div>
<span class="comment-copy">FYI: The logistic sigmoid function is implemented in SciPy as <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.expit.html" rel="nofollow noreferrer"><code>scipy.special.expit</code></a>.</span>
<span class="comment-copy">But the sigmoid function is returning a value greater than 1, which is [ 0.73105858  0.95257413  0.98201379  1.        ]  the last output of this array is 1. something</span>
<span class="comment-copy"><a href="https://i.stack.imgur.com/eSSHN.png" rel="nofollow noreferrer">i.stack.imgur.com/eSSHN.png</a></span>
<span class="comment-copy">It is rounded. The actual value is less than 1.  <code>sigmoid(np.array([20,3]))[0] &lt; 1.0  ===&gt;  True</code></span>
<span class="comment-copy">But the sigmoid function is returning a value greater than 1, which is [ 0.73105858 0.95257413 0.98201379 1. ] the last output of array is 1. something</span>
