<div class="post-text" itemprop="text">
<p>I have written a function like below:</p>
<pre><code>def separate_files(filetree_list, destination):

    from shutil import copyfile
    from os import makedirs
    from os.path import join, exists, commonprefix

    try:
        for file in filetree_list:
            dst = join(destination,
                       '\\'.join(file.split(commonprefix(filetree_list))[1].split('\\')[0:-1]))
            if not exists(dst):
                print(dst, " doesn`t exist. Creating...")
                makedirs(dst)
                print(exists(dst), ". Path created.")
            print(file)
            copyfile(file, dst)
    except:
        print("Moving files has FAILED.")
    else:
        print("Moving files was SUCCESSFUL.")
</code></pre>
<p>When I call it with a "filetree_list" list containing a single element and destination prepared with os.path.join:</p>
<pre><code>filetree_list = ['C:\\Users\\&lt;username&gt;\\staging_folder\\folder_1\\filename.xlsx'] 
destination = os.path.join(staging_dir, 'Sorted', 'Unwanted_files')
</code></pre>
<p>I get the following error:</p>
<pre><code>---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
&lt;ipython-input-29-c3525a60c859&gt; in &lt;module&gt;()
     14         print(exists(dst), ". Path created.")
     15     print(file)
---&gt; 16     copyfile(file, dst)

    C:\ProgramData\Anaconda3\lib\shutil.py in copyfile(src, dst, follow_symlinks)
    119     else:
    120         with open(src, 'rb') as fsrc:
--&gt; 121             with open(dst, 'wb') as fdst:
    122                 copyfileobj(fsrc, fdst)
    123     return dst

FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\&lt;username&gt;\\staging_folder\\Sorted\\Unwanted_files\\'
</code></pre>
<p>What is strange about it (and it is driving me insane at the moment), is that this folder definitely exists, and has been created by the "if not exists(dst)" block in separate_files function - I can even see it in the Windows Explorer!</p>
<p>To add insult to injury, when I run this function with the same destination argument but multiple strings in a list, it does what I expect and there are no errors!</p>
<p>Can anyone offer any insight into what am I doing wrong in here?</p>
<p>UPDATE:
Updated code above to reflect the function in my IDE. Indentation error next to print(file) &amp; copyfile(file,dst) was corrected to include it in under the loop.
copyfile()'s dst argument was also updated to "dst" rather than join(destination, file.split(commonprefix(filetree_list))[1]).</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile" rel="nofollow noreferrer">https://docs.python.org/3/library/shutil.html#shutil.copyfile</a>:</p>
<blockquote>
<p><code>shutil.<b>copyfile</b>(<i>src</i>, <i>dst</i>, <i>*</i>, <i>follow_symlinks=True</i>)</code></p>
<p>Copy the contents (no metadata) of the file named <em><code>src</code></em> to a file named <em><code>dst</code></em> and return <em><code>dst</code></em>. <em><code>src</code></em> and <em><code>dst</code></em> are path names given as strings. <strong><em><code>dst</code></em> must be the complete target file name; look at <a href="https://docs.python.org/3/library/shutil.html#shutil.copy" rel="nofollow noreferrer"><code>shutil.copy()</code></a> for a copy that accepts a target directory path.</strong></p>
</blockquote>
<p>You're trying to pass a directory as <code>dst</code> to <code>copyfile</code>. That doesn't work.</p>
</div>
<span class="comment-copy">Ooops, sorry - a leftover from the function prototyping stage. Obviously, it should be copyfile(file, dst) in there, rather than the copyfile(file, join(destination, file.split(commonprefix(filetree_list))[1])) one. I`ll edit that change in now.</span>
<span class="comment-copy">Updated the loop problem as well - sorry for that, I blame my bad copying from IDE skills.</span>
<span class="comment-copy"><code>dst</code> is a folder name. <code>with open(dst, 'wb')</code> is trying to open it as a file (for writing). That can't work.</span>
<span class="comment-copy">Umm, but isn`t the destination argument supposed to be a folder, rather than a file? Source points to a file, while dst points to a folder where this file is supposed to land?</span>
<span class="comment-copy">Thank you - that fixed it for me. I modified the copyfile line to copyfile(file, os.path.join(dst, filename)) and all is fixed now.</span>
