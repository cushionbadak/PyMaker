<div class="post-text" itemprop="text">
<p>Here's my cube root calculator:</p>
<pre><code>cube = int(input('Input an integer: '))
for guess in range(abs(cube + 1)):
    if guess ** 3 &gt;= abs(cube):
        break
if guess ** 3 != abs(cube):
    print(str(cube) + ' is not a perfect cube.')
else:
    if cube &lt; 0:
        guess = - guess
    print('Cube root of ' + str(cube) + ' is ' + str(guess))
</code></pre>
<p>It returns following error on entering <code>-1</code> as input:</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/ABC.py", line 5, in &lt;module&gt;
    if guess ** 3 != abs(cube):
NameError: name 'guess' is not defined
</code></pre>
<p>It prints expected answers for all negative integers expect <code>-1</code> and I am unable to find reason for this behavior. It should print <code>-1</code> as output and I don't see any reason for defining <code>guess</code>when it's being "defined" by <code>range()</code>function.</p>
<p>Do you see what I am missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you put -1 into the function, the for loop never runs. <code>abs(-1+1)</code> is 0, so it never runs, therefore guess is never initialized. You may have ment to do <code>abs(-1) +1</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>cube == -1</code>, then <code>abs(cube + 1) == 0</code>, and <code>range(abs(cube + 1))</code> is empty. So, no iteration happens (because there's nothing to iterate over), and the name <code>guess</code> is never created.</p>
<p>Also, <code>range</code> is not a function, it's a <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow noreferrer">class</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to indent properly. <code>guess</code> is only defined in the scope of the for loop, it is the index of the for loop.</p>
<pre><code>cube = int(input('Input an integer: '))
for guess in range(abs(cube + 1)):
    if guess ** 3 &gt;= abs(cube):
        break
if guess ** 3 != abs(cube): # this if is outside the for loop so guess is not defined
    print(str(cube) + ' is not a perfect cube.')
else: # this else-if is outside the foor loop so guess is not defined
    if cube &lt; 0:
        guess = - guess
    print('Cube root of ' + str(cube) + ' is ' + str(guess))
</code></pre>
<p>I indented those lines below and ran the script, I don't get the error that you got, but I also get <code>8 is not a perfect cube.</code> when running the program and I get no output if I input -1 (or any negative number).</p>
<pre><code>cube = int(input('Input an integer: '))
for guess in range(abs(cube + 1)):
    if guess ** 3 &gt;= abs(cube):
        break
    if guess ** 3 != abs(cube): # now it is inside the for loop
        print(str(cube) + ' is not a perfect cube.')
    else: # this is also now inside the for loop
        if cube &lt; 0:
            guess = - guess
        print('Cube root of ' + str(cube) + ' is ' + str(guess))
</code></pre>
<p>My best guess as to what you're trying to do is below. There are probably more elegant ways to write the program, and I know <code>break</code> statements are frowned upon for making the logic hard to follow.</p>
<pre><code>cube = int(input('Input an integer: '))
for guess in range(abs(cube) + 1):
    # if a perfect cube is found we enter this if statement
    if guess ** 3 == abs(cube):
        # these if and else statements print the appropriate cube depending on if the input is negative or positive
        if cube &lt; 0:
            print('Cube root of ' + str(cube) + ' is ' + str(guess * -1))
            break
        else:
            print('Cube root of ' + str(cube) + ' is ' + str(guess))
            break
    # else if the index cubed is greater than our input, we know it can't be a perfect cube and we should exit the loop.
    elif guess ** 3 &gt; abs(cube):
        # tell the user the input is not a perfect cube
        print(str(cube) + " is not a perfect cube.")
        break
</code></pre>
</div>
<span class="comment-copy">With an input of -1, you are calling <code>range(0)</code>, which produces an empty sequence - the body of the <code>for</code> loop never executes, so <code>guess</code> is never assigned any value.  I think you want <code>abs(cube) + 1</code>.</span>
