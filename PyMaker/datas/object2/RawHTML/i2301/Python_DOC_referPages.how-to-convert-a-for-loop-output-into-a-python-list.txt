<div class="post-text" itemprop="text">
<p>I'm new to Python, sorry for the level of this question.</p>
<p>This is my output (prices from a website). I'm wondering how to convert them into a list of <code>int</code>s</p>
<pre><code>for price_list_items in price_list:
        for values in price_list_items:
            x= values.rstrip(' zł')
            print(x)
</code></pre>
<p>479 000<br/>
355 000<br/>
269 000<br/>
499 000<br/>
289 000<br/></p>
<p>The desired result will like this [479 000,355 000,... ]. Also, I want to be able to perform basic with the values.
I found this thread <a href="https://stackoverflow.com/questions/33390493/how-to-convert-a-for-loop-output-into-a-list-python">How to convert a for loop output into a list (python)</a>, but it didn't help me.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>lista = []

for price_list_items in price_list:
        for values in price_list_items:
            x= values.rstrip(' zł')
            lsita.append(x)

lista = ['479 000', '350 000']
for idx, item in enumerate(lista):
        item = item.split()
        item = ''.join(item)
        lista[idx] = int(item)

print(lista)
</code></pre>
<blockquote>
<p><code>~/python/stack$ python3.7 sum.py  [479000, 350000]</code></p>
</blockquote>
<p>Change your last line to <code>append</code> to <code>lista</code> instead of <code>print</code>. Now we have <code>lista = ['479 000', ...]</code> but we want <code>int</code>s to perform operations on.</p>
<p>So we can then <code>enumerate</code> our <code>list</code>, from there we can <code>split()</code> and <code>join()</code> to get to here <code>lista = ['479000', ...]</code> then we can just use <code>int(item)</code> and put them back into <code>lista</code> as <code>int</code>s </p>
<p>For fun we could do some <code>map</code> and just go from:</p>
<pre><code>lista = ['479 000', '350 000']
lista = list(map(lambda x: int(''.join((x.split()))), lista))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like your string is meant to be a series of 6-digit numbers but both the individual number-parts, for lack of a better term, are split by spaces and the numbers themselves are split by newlines. The solution, therefore, is to remove the space in between number-parts, converting the result to an integer, like this:</p>
<pre><code>int(part.replace(' ', '')) # Finds all instances of space and replaces them with nothing
</code></pre>
<p>Putting this in a list-comprehension, we have:</p>
<pre><code>numbers = [int(l.replace(' ', '')) for l in str]
</code></pre>
<p><strong>UPDATE</strong></p>
<p>Since you've posted your code, I can give you a better answer.</p>
<pre><code>[ int(v.rstrip(' zł').replace(' ', '')) for price_list_items in price_list for v in price_list_items ]
</code></pre>
</div>
<span class="comment-copy">Thank you vash_the_stampede. It will take some time to understand it but it works fine.</span>
<span class="comment-copy">@Paul np I tried to detail it best I could if any questions just ask</span>
<span class="comment-copy">If the data was read from a file opened in text mode then line ending will usually get automatically converted to <code>\n</code>; more options are available via the <code>newline</code> arg to <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open</code></a>.</span>
<span class="comment-copy">@PM2Ring Correct. I wasn't sure how he got his data. It sounded like he already had it in from wherever he got and he was looking to get it into a <code>list</code> of <code>int</code>s from there</span>
<span class="comment-copy">Fair enough, but it's probably safe to assume that he just has simple <code>\n</code> line endings. If his multi-line data is in a single string it can be split with <code>.splitlines</code>, which can get rid of the line endings. And if it's already in a list of lines, or is being being read line by line, then the line endings can be removed (along with any other trailing whitespace) by using <code>.rstrip</code>. BTW, your code has both <code>\r\n</code> and <code>\n\r</code>. You should probably fix that. ;)</span>
<span class="comment-copy">@PM2Ring Point. I have updated my answer</span>
<span class="comment-copy">@vash_the_stampede Agreed. That's what my solution does</span>
