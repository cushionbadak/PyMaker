<div class="post-text" itemprop="text">
<p>In python, is there a function to check if a given file/directory is a symlink ? For example, for the below files, my wrapper function should return <code>True</code>.</p>
<pre><code># ls -l
total 0
lrwxrwxrwx 1 root root 8 2012-06-16 18:58 dir -&gt; ../temp/
lrwxrwxrwx 1 root root 6 2012-06-16 18:55 link -&gt; ../log
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To determine if a directory entry is a symlink use this:</p>
<blockquote>
<p><a href="http://docs.python.org/library/os.path.html?highlight=islink#os.path.islink" rel="noreferrer">os.path.islink(path)</a></p>
<p>Return True if path refers to a directory entry that is a symbolic
  link. Always False if symbolic links are not supported.</p>
</blockquote>
<p>For instance, given:</p>
<pre><code>drwxr-xr-x   2 root root  4096 2011-11-10 08:14 bin/
drwxrwxrwx   1 root root    57 2011-07-10 05:11 initrd.img -&gt; boot/initrd.img-2..

&gt;&gt;&gt; import os.path
&gt;&gt;&gt; os.path.islink('initrd.img')
True
&gt;&gt;&gt; os.path.islink('bin')
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For python 3.4 and up, you can use the Path class</p>
<pre><code>from pathlib import Path


# rpd is a symbolic link
&gt;&gt;&gt; Path('rdp').is_symlink()
True
&gt;&gt;&gt; Path('README').is_symlink()
False
</code></pre>
<p>You have to be careful when using the is_symlink() method.  It will return True even the target of the link is non-existent as long as the the named object is a symlink.  For example (Linux/Unix):</p>
<pre><code>ln -s ../nonexistentfile flnk
</code></pre>
<p>Then, in your current directory fire up python</p>
<pre><code>&gt;&gt;&gt; from pathlib import Path
&gt;&gt;&gt; Path('flnk').is_symlink()
True
&gt;&gt;&gt; Path('flnk').exists()
False
</code></pre>
<p>The programmer has to decide what he/she realy wants.  Python 3 seems to have renamed a lots of classes. It might be worthwhile to read the manual page for the Path class: <a href="https://docs.python.org/3/library/pathlib.html" rel="noreferrer">https://docs.python.org/3/library/pathlib.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Without the intention to bloat this topic, but I was redirected to this page as I was looking for symlink's to find them and convert them to real files and found this script within the python tools library.</p>
<pre><code>#Source https://github.com/python/cpython/blob/master/Tools/scripts/mkreal.py


import sys
import os
from stat import *

BUFSIZE = 32*1024

def mkrealfile(name):
    st = os.stat(name) # Get the mode
    mode = S_IMODE(st[ST_MODE])
    linkto = os.readlink(name) # Make sure again it's a symlink
    f_in = open(name, 'r') # This ensures it's a file
    os.unlink(name)
    f_out = open(name, 'w')
    while 1:
        buf = f_in.read(BUFSIZE)
        if not buf: break
        f_out.write(buf)
    del f_out # Flush data to disk before changing mode
    os.chmod(name, mode)

    mkrealfile("/Users/test/mysymlink")
</code></pre>
</div>
<span class="comment-copy">On Windows, <i>Shortcuts</i> appear as files with extension <code>lnk</code>, and <code>os.islink('a_shortcut.lnk')</code> returns <code>False</code>.</span>
<span class="comment-copy">@EvgeniSergeev That's because they are just files - possibly a hangover from Windows 9x days when the only file system was FAT/FAT32.  See this <a href="http://superuser.com/questions/347930/what-are-the-various-link-types-in-windows-how-do-i-create-them" title="what are the various link types in windows how do i create them">superuser.com/questions/347930/…</a> for all the types of symbolic/hard links and directory junctions supported on NTFS. That said, I still don't think Python supports them.</span>
<span class="comment-copy">And islink() doesn't work for Windows symlinks, i.e. junctions. So the answer is applicable only for Unix.</span>
<span class="comment-copy">Please refer to this <a href="http://stackoverflow.com/questions/27972776/having-trouble-implementing-a-readlink-function" title="having trouble implementing a readlink function">stackoverflow.com/questions/27972776/…</a> answer if you need Windows solution.</span>
<span class="comment-copy">@TheGodfather: directory junction is not a symlink (<code>IO_REPARSE_TAG_SYMLINK</code>).</span>
<span class="comment-copy">this MAY only finds valid symlink, this MAY not identify a file that is a symlink but is broken. so if you are filtering for real files or all symlinks (good and bad) then ensure you do additional checks</span>
<span class="comment-copy">@2114L3 What does a valid but broken symlink mean? From simple testing with a broken symlink, it seems that <code>is_symlink()</code> is true, and <code>exists()</code> is false, which is what I would expect. Can you give a source for your concerns?</span>
<span class="comment-copy">@Sheljohn check the edits on this answer, before my comment exists() was not a part of the answer. using exists is a additional check of which i meant. as using is_symlink alone is not enough as per original version.</span>
