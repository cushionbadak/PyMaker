<div class="post-text" itemprop="text">
<p>I was given the function:</p>
<pre><code>x**2 - 4*x + 6
</code></pre>
<p>and the task was to find the minimum integer values x between 0 and 10.
I had to use a <code>for</code> loop:</p>
<pre><code>for i in range(11):
    if 2*i-4==0:
        print("Minimum of the given function is:", i)
</code></pre>
<p>which gives me the correct answer <code>2</code>.</p>
<p>Now I should translate that as a list comprehension, but I do not know where to put the <code>if</code> statement:</p>
<pre><code>mylist = [2*i-4==0 for i in range(11)]
print(mylist)
</code></pre>
<p>Of course, as an output I get a <code>true</code>/<code>false</code> list, with the index 2 being the correct <code>true</code>. But How do I include the if in my list comprehension?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are finding a <em>single value</em>, not a list of values. A list comprehension makes little sense here.</p>
<p>Your error is in putting your test in the <em>value expression</em> section of the list comprehension. That's not a filter, that's the part where you build the new list values from the (filtered) elements from the loop.</p>
<p>Put an <code>if</code> <em>after</em> the <code>for</code> loop part:</p>
<pre><code>[i for i in range(11) if 2 * i - 4 == 0]
</code></pre>
<p>This builds a list with just one element, the <code>i</code> value for which the value is true:</p>
<pre><code>&gt;&gt;&gt; [i for i in range(11) if 2 * i - 4 == 0]
[2]
</code></pre>
<p>If you must do this in a single line, use a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer"><em>generator expression</em></a>, then use the <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code> function</a> to get the first result from that:</p>
<pre><code>gen = (i for i in range(11) if 2 * i - 4 == 0)
result = next(gen)
</code></pre>
<p>This will get you the minimal value for <code>i</code> even if there were to be multiple possible values for <code>i</code> where the <code>if</code> test would be true.</p>
<p>A generator is lazily evaluated; the loop stops the moment <code>i</code> reaches a value where the <code>if</code> test is true, and that one value is produced. <code>next()</code> only returns that first value, so no more iteration takes place. It's as if you used <code>break</code> in a <code>for</code> loop (except you can continue the loop later).</p>
<p>Note that this can raise a <code>StopIteration</code> exception if the generator doesn't produce <em>any</em> values. You can tell <code>next()</code> to return a default value in that case; a second argument to <code>next()</code> is returned if <code>StopIteration</code> would be raised otherwise:</p>
<pre><code>result = next(gen, None)
</code></pre>
<p>You can combine the generator expression in the <code>next()</code> call; if a generator expression is the only argument you can omit the <code>(...)</code> parenthesis of the generator expression, otherwise include them so that it can be distinguished from other arguments:</p>
<pre><code>result = next((i for i in range(11) if 2 * i - 4 == 0), None)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you <em>really</em> want to use a comprehension and not a classic loop here, since there is only one result, you could pass a generator to <code>next</code> with a default value just in case it doesn't find anything:</p>
<pre><code>next((i for i in range(11) if 2*i-4==0),None)
</code></pre>
</div>
<span class="comment-copy">There is absolutely no use in converting this to a list comprehension. You are not building a list here.</span>
<span class="comment-copy">You'd have to put the <code>if</code> <b>after</b> the <code>for</code> loop, and only <code>i</code> before. But why build a list for one value?</span>
<span class="comment-copy"><code>mylist = [i for i in range(11) if 2*i-4==0]</code> - but you only get one result so making this a list comp is not really helpfull....</span>
<span class="comment-copy">try <code>next((i for i in range(11) if 2*i-4==0),-1)</code> you'll get -1 if no min, else you'll get the index</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/9061760/how-to-read-aloud-python-list-comprehensions">How to read aloud Python List Comprehensions?</a> - it explains how to unfold list comps whats what you need to do here in reverse ....</span>
