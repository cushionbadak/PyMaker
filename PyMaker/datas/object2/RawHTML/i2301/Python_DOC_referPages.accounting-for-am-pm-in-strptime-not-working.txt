<div class="post-text" itemprop="text">
<p>I am following another search thread here, but it is not working.  Anytime I include %p to get AM/PM, I get the following error:</p>
<p>ValueError: time data '11:30' does not match format '%I:%M%p'</p>
<p>This is true if I have '%I:%M %p' or '%I:%M%p'.  If I leave the %p off it works fine, but that defeats the purpose of getting AM PM</p>
<pre><code># my code
from datetime import datetime
date_string = '11:30'
format = '%I:%M %p'
my_date = datetime.strptime(date_string, format)
my_date.strftime(format)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just need to provide same format of your time in <code>strptime</code> function. And then use AM/PM format ('%I:%M %p') in <code>strftime</code> function.</p>
<pre><code>from datetime import datetime

def getTime(time_string):
    time_object = datetime.strptime(time_string,'%H:%M') #Covert string to time object
    return time_object.strftime('%I:%M %p') #Convert time object to AM/PM format

getTime('11:30')
Output: 11:30 am
getTime('13:30')
Output: 01:30 pm
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, cause you need to add if it's AM or PM to match the format.</p>
<pre><code>from datetime import datetime
date_string = '11:30 AM'
format = '%I:%M %p'
my_date = datetime.strptime(date_string, format)
my_date.strftime(format)
</code></pre>
<p>%I matches hour, %M matches minutes, %p matches AM/PM</p>
</div>
<div class="post-text" itemprop="text">
<p>The format strings provided <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strptime (...)</code></a> must match <strong><em>exactly</em></strong>. </p>
<p>If you do not know which format your time is in, you can try multiple ones:</p>
<pre><code>from datetime import datetime

def getTime(text, formats = ['%I:%M %p','%I:%M']):
    """Tries different patterns to create a time from text. 
    First format with match wins.

    As default the time is parsed with am/pm, as fallback without it."""

    for pattern in formats:
        try:    
            return datetime.strptime(text, pattern)
        except:
            pass # catch all errors

    # nothing matched, return None
    raise ValueError("No format {} matched '{}'".format(formats,text))

a_time = getTime("11:42")    # produces an am time
b_time = getTime("11:42 pm") # produces a pm time

print(a_time.strftime("%I:%M %p"))    
print(b_time.strftime("%I:%M %p"))

try:
    c_time = getTime("does not work")
except ValueError as e:
    print(type(e),e)
</code></pre>
<p>Output:</p>
<pre><code>11:42 AM
11:42 PM
&lt;class 'ValueError'&gt; No format ['%I:%M %p', '%I:%M'] matched 'does not work'
</code></pre>
</div>
<span class="comment-copy">You are trying to parse a string withOUT AM/PM - so the format does not fit it. What is your exact problem with that? Provide a strings that <i>has</i> AM/PM in it or choose another format-string?`</span>
<span class="comment-copy">Yes, Just edited after seeing you comment. Now It works.</span>
<span class="comment-copy">This is exactly what I was trying to do.  I was trying to get the am/pm determined based on hour and was getting hung up on how to go from %H:%M to %I:%M %p.  Thanks!</span>
<span class="comment-copy">Makes sense.  My eventual goal was to have the AM/PM determined for me passed on hours.  See example below</span>
