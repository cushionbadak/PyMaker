<div class="post-text" itemprop="text">
<p>I have just imported some columns into two lists in python. I am trying to add both lists together into a dictionary and have unique objects with totaled values. For example, 'Apple' and 'Apple' will return 'Apple': 14.0' since both are combined together. How do I produce the desired output? Do I have to add anything to my for loop?</p>
<pre><code>listA = ['Apple', 'Apple', 'Banana', 'Orange', 'Pineapple', 'Pineapple']
listB = ['5.0', '9.0', '12.0', '2.0', '8.0', '1.0']
dict={}

for i, x in zip((listA),(listB)):
    dict[i]=x
</code></pre>
<p>Output: </p>
<pre><code>{'Apple':'9.0', 'Banana':'12.0', 'Orange':'2.0', 'Pineapple':'1.0'}
</code></pre>
<p>Desired output:</p>
<pre><code>{'Apple':'14.0', 'Banana':'12.0', 'Orange':'2.0', 'Pineapple':'9.0'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a> to have your values automatically added when the same key is encountered, something like:</p>
<pre><code>import collections

listA = ['Apple', 'Apple', 'Banana', 'Orange', 'Pineapple', 'Pineapple']
listB = ['5.0', '9.0', '12.0', '2.0', '8.0', '1.0']

result = collections.defaultdict(float)
for k, v in zip(listA, listB):
    result[k] += float(v)
</code></pre>
<p>This will, however, produce a result with floats, i.e.:</p>
<pre><code>{'Apple': 14.0, 'Banana': 12.0, 'Orange': 2.0, 'Pineapple': 9.0}
</code></pre>
<p>If you need string results, you can either post-process the result:</p>
<pre><code>result = {k: str(v) for k, v in result.iteritems()}  # Python 3.x: result.items()
# {'Apple': '14.0', 'Banana': '12.0', 'Orange': '2.0', 'Pineapple': '9.0'}
</code></pre>
<p>Or you can handle the whole thing without <code>collections.defaultdict()</code>:</p>
<pre><code>listA = ['Apple', 'Apple', 'Banana', 'Orange', 'Pineapple', 'Pineapple']
listB = ['5.0', '9.0', '12.0', '2.0', '8.0', '1.0']

result = {}
for k, v in zip(listA, listB):
    result[k] = str(float(result.get(k, 0)) + float(v))
# {'Apple': '14.0', 'Banana': '12.0', 'Orange': '2.0', 'Pineapple': '9.0'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>just use the <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">default dict</a></p>
<pre><code>In [1]: from collections import defaultdict

In [2]: listA = ['Apple', 'Apple', 'Banana', 'Orange', 'Pineapple', 'Pineapple']
   ...: listB = ['5.0', '9.0', '12.0', '2.0', '8.0', '1.0']
   ...: 
   ...: 

In [3]: d = defaultdict(float)

In [4]: for i, x in zip((listA),(listB)):
   ...:     d[i] += float(x)
   ...:     

In [5]: d
Out[5]: 
defaultdict(float,
            {'Apple': 14.0, 'Banana': 12.0, 'Orange': 2.0, 'Pineapple': 9.0})
</code></pre>
</div>
<span class="comment-copy">good description of the details!</span>
