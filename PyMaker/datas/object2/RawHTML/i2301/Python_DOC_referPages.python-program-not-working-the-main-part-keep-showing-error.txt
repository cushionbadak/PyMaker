<div class="post-text" itemprop="text">
<pre><code>class point:
    def __init__(self,z,d):
        self.x = z
        self.y = d
    def display(self,z,d):
        self.x = self.z
        self.y = self.d
    def setX(self, z):
        self.x = z
    def setY(self, d):
        self.y = d
    def getX(self):
       return self.x
    def getY(self):
       return self.y
    def show(self):
       print(self.x)
       print(self.y)

p1 = point() //error
print("Point P1:")
p1.show()
print("Updated value:")
p1.display(5, 6)
p1.setX(9)
p1.setY(4)
p1.show()
print("Point P2:")
p2=point()
p2.setX(9)
p2.setY(4)
p2.show()
print("Updated value:")
p2.display(6, 3)
p2.show()
</code></pre>
<p>My program keep showing me error that z and d are missing in the object section,,i donno how to correct it i keep trying but more n more errors keeps showing up. </p>
<pre><code>Traceback (most recent call last):
  File "P:\xxxyyy.py", line 29, in &lt;module&gt;
    p1 = point() //error
TypeError: __init__() missing 2 required positional arguments: 'z' and 'd'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't forget to pass in <code>z</code> and <code>d</code> in the constructor, eg:</p>
<pre><code>p1 = point(1,2)
</code></pre>
<p>Also, in the <code>display</code> function, you try to set <code>self.x</code> to <code>self.z</code> and <code>self.y</code> to <code>self.d</code>. <code>self.z</code> and <code>self.d</code> don't exist (self means it should be a class attribute, which it isn't), you should instead use the function's input parameters:</p>
<pre><code>self.x = z
self.y = d
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class point: 
    def __init__(self,z,d): 
        self.x = z 
        self.y = d 
    def display(self,z,d): 
        self.x = z #not self.z
        self.y = d #not self.d
    def setX(self, z): 
        self.x = z 
    def setY(self, d): 
        self.y = d 
    def getX(self): 
       return self.x 
    def getY(self): 
       return self.y 
    def show(self): 
       print(self.x) 
       print(self.y) 
</code></pre>
<p>First fix this, you are updating with <code>display</code> using two new variables that its taking in, so we just cast those variables not <code>self.z</code> / <code>self.d</code></p>
<pre><code>p1 = point(1,2)
print("Point P1:")
p1.show()
</code></pre>
<p>Create your instance with values that it needs <code>__ini__(self, z, d)</code>  needs a <code>z and d</code> value </p>
<pre><code>print("Updated value:")
p1.display(5, 6)
p1.setX(9)
p1.setY(4)
p1.show()
</code></pre>
<p>If <code>p1.display</code> is updating the values to <code>5,6</code> then why update them again with <code>setX</code>/<code>setY</code> pretty much you are making <code>z=5, d=6</code> then <code>z=9 d=4</code></p>
<p>And then you just repeat these small errors for <code>p2</code></p>
</div>
<span class="comment-copy">what is the error?</span>
<span class="comment-copy">When asking about code that produces an exception, please include the complete Traceback in the question: copy and paste it then format it as code.</span>
<span class="comment-copy">... or give those parameters <a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" rel="nofollow noreferrer">default values</a> in the method definition.</span>
<span class="comment-copy">Yep! I just assumed he meant to use the function parameters since they are there and match up to <code>self.z</code> and <code>self.d</code>. Whichever way makes more sense is the better way</span>
<span class="comment-copy">i did try putting 1,2 in it,, it wasn't working with that too..also the self thing i wrote it like the statement u told me bout. but since it was showing error so i changed it(silly me duh)</span>
<span class="comment-copy">thanks for explaining.. about the set n get thing i had the assignment to do it in both ways. So thatsy i used display n also set n get fuctions</span>
<span class="comment-copy">np would appreciate if this solved your problem if you checked solved :)</span>
