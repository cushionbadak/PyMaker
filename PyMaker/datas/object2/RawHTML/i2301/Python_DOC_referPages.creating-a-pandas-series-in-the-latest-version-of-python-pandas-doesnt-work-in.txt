<div class="post-text" itemprop="text">
<p>I am calling several python libraries in Matlab and am now having trouble using the latest version of pandas (ver 0.23.x) <a href="https://pandas.pydata.org/" rel="nofollow noreferrer">https://pandas.pydata.org/</a> . Conversely, pandas 0.22.x works fine.</p>
<p>Note that the problem doesn't exist in python.</p>
<p>To reproduce:</p>
<pre><code>% set desired python environment
pyversion(pypath)

% try to create a pandas series
py.pandas.Series(1)

Error using py.pandas.Series
Class 'py.pandas.core.series.Series' is not allowed to define a 'cat' method.
</code></pre>
<p>Has anyone experienced this?</p>
<p>I noticed that pandas has moved the CategoricalAccessor (which 'cat' refers to) from pandas.core.series.CategoricalAccessor to pandas.core.arrays.categorical.CategoricalAccessor. Maybe this is related?</p>
<p>Any help on this would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>I can reproduce this on R2018b with python 3.6.6 and pandas 0.23.4, on Win10 x64.</p>
<p>What you suggest is very likely related, since pandas' <code>cat</code> likely interferes with MATLAB's <code>cat</code> which is used for <em>concatenation</em>.</p>
<p>I would advise you to create a new virtual environment, with the correct version of pandas, and have MATLAB use <em>that</em> (via the <code>pyversion</code> command). After all, this is exactly what virtual environments are for. See also <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">this documentation article</a>.</p>
</div>
<span class="comment-copy">Thanks for your reply. Actually, I already am running two different envs (one for each pandas version), however, I would like to use the latest version of pandas in the future. Is that simply not possible at the moment, or what are my options here?</span>
<span class="comment-copy">Perhaps you could submit a bug report to MathWorks, and they would be able to provide a workaround, or incorporate a fix in the coming versions. You can either do that or modify pandas by yourself to revert the offending change (or perhaps rename the offending function/package). Perhaps you could nest the <code>Series</code> object in your own python class, so that MATLAB doesn't try to parse its method names and thus never "realizes" that an issue exists....</span>
