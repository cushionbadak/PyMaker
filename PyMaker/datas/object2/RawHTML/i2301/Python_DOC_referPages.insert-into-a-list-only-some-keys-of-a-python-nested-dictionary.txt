<div class="post-text" itemprop="text">
<p>I'm using Spotipy for getting all the albums from an artist.</p>
<p>I have the following Python dictionary object for each query (one per artist queried):</p>
<pre><code>{
    "href": "https://api.spotify.com/v1/artists/006ibfxHXj6ewIkihKcaS2/albums?offset=0&amp;limit=1&amp;include_groups=album",
    "items": [
        {
            "album_group": "album",
            "album_type": "album",
            "artists": [
                {
                    "external_urls": {
                        "spotify": "https://open.spotify.com/artist/006ibfxHXj6ewIkihKcaS2"
                    },
                    "href": "https://api.spotify.com/v1/artists/006ibfxHXj6ewIkihKcaS2",
                    "id": "006ibfxHXj6ewIkihKcaS2",
                    "name": "Hello Meteor",
                    "type": "artist",
                    "uri": "spotify:artist:006ibfxHXj6ewIkihKcaS2"
                }
            ],
            "available_markets": [
           "blabla"
            ],
            "external_urls": {
                "spotify": "https://open.spotify.com/album/19HZblBbWVWYVqiM0B9eW8"
            },
            "href": "https://api.spotify.com/v1/albums/19HZblBbWVWYVqiM0B9eW8",
            "id": "19HZblBbWVWYVqiM0B9eW8",
            "images": [
                {
                    "height": 640,
                    "url": "https://i.scdn.co/image/8c249db0add94460c7e61e994e7ac3f8f1abddd9",
                    "width": 640
                },
                {
                    "height": 300,
                    "url": "https://i.scdn.co/image/03ff6bd7c00fd58b167a4f3bc5529e5d17bf7ee1",
                    "width": 300
                },
                {
                    "height": 64,
                    "url": "https://i.scdn.co/image/151539b29846c6ae9b68c628e639d66277349468",
                    "width": 64
                }
            ],
            "name": "Mu &amp; Mea",
            "release_date": "2018-07-17",
            "release_date_precision": "day",
            "total_tracks": 15,
            "type": "album",
            "uri": "spotify:album:19HZblBbWVWYVqiM0B9eW8"
        }
    ],
    "limit": 1,
    "next": "https://api.spotify.com/v1/artists/006ibfxHXj6ewIkihKcaS2/albums?offset=1&amp;limit=1&amp;include_groups=album",
    "offset": 0,
    "previous": null,
    "total": 6
}
</code></pre>
<p>I have the following line of code that adds all items object to the list:</p>
<pre><code>albums.extend(sp.artist_albums(artist, album_type='album', limit=1)['items'] for artist in artists)
</code></pre>
<p>The problem is that I only need two of the endless keys that that returns; I only need the album title and release date. The output I would like to have is a list:</p>
<pre><code>[['album name 1', 'release_date1'], ['album name2'', release_date2'], ...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Rather than add the <code>['items']</code> list (which only contains a single album, if I understand your <code>limit=1</code> query correctly), add a new dictionary with the specific values.</p>
<p>To avoid having to call the Spotify API twice for those two items, put your query loop into a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a>; that makes it easier to then take the resulting album dictionary and take out specific keys:</p>
<pre><code>results = (result for artist in artists 
           for result in sp.artist_albums(artist, album_type='album', limit=1)['items'])
albums.extend([r['name'], r['release_date']] for r in results)
</code></pre>
<p>Here, <code>results</code> is a lazily evaluating sequence of <code>{'album_group': ..., 'album_type', ..., ...}</code> dictionaries; these are all the albums in the <code>'items'</code> list for each artist queried. There is only 1 for each artist here, but on the off-chance there might be <em>zero</em> albums, or you wanted to raise the <code>limit</code> value, I make sure to loop over the items.</p>
<p>The generator expression in <code>albums.extend()</code> then creates a new list object with two of the keys for each of those results.</p>
</div>
<span class="comment-copy">So what kind of output do you want then? Add dictionaries with <code>{'name': ..., 'release_date': ...}</code>?</span>
<span class="comment-copy">And there is no <code>['items']['name']</code>, the <code>'items'</code> key is till a list. You have <code>['items'][0]['name']</code>.</span>
<span class="comment-copy">I want a list that contains only <code>'name'</code> and <code>'release_date'</code> without the keys, only the values.</span>
<span class="comment-copy">So you end up with nested lists? <code>[['album 1 title', '2018-07-17'], ['album 2 title', '2018-07-01'], ...]</code>? Can you please update your question to show that expected output?</span>
<span class="comment-copy">That's extactly what I wanted to do, thank you!</span>
