<div class="post-text" itemprop="text">
<p>I have a pandas dataframe</p>
<pre><code>import pandas as pd
df = pd.read_csv("MyCsv.csv", delimiter='@@@')
df
    ID  Signal
0   0   HT_CLKIN_P
1   1   HT_CLKOUT_P
2   2   LDTPHY013_Inst1.HT_REFCLK
3   3   clk_PCI1CLK_H
4   4   clk_ht100_or_200_H
5   5   clk_pcibr66_H
6   6   h_extrxclkin
7   7   h_exttxclkin

def filterData(df,colname,regex):
'''
df:: Dataframe Name
colname: Name of the column against which you want to filter the data.
regex: Regular expression or special characters you want to search.
'''
return df[df[colname].str.contains(regex,regex=True)]

filterData(df,'Signal','clk_ht100*')

filterData(df,'Signal','*CLK*')
</code></pre>
<p>I am getting following error </p>
<pre><code>---------------------------------------------------------------------------
  error                                     Traceback (most recent call 

   last)
    &lt;ipython-input-9-32fc02914557&gt; in &lt;module&gt;()
   ----&gt;    1 filterData(df,'Signal','*CLK*')

   &lt;ipython-input-8-aeebba3ee8c6&gt; in filterData(df, colname, regex)
      5     regex: Regular expression or special characters you want to search.
        6     '''
        ----&gt; 7     return df[df[colname].str.contains(regex,regex=True)]

        ~\AppData\Local\Continuum\anaconda3\lib\site- 
        packages\pandas\core\strings.py in contains(self, pat, case, flags, na, regex)
         1565     def contains(self, pat, case=True, flags=0, na=np.nan, regex=True):
         1566         result = str_contains(self._data, pat, case=case, flags=flags, na=na,
        -&gt; 1567                               regex=regex)
          1568         return self._wrap_result(result)
           1569 

           ~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\strings.py in str_contains(arr, pat, case, flags, na, regex)
        247             flags |= re.IGNORECASE
        248 
     --&gt; 249         regex = re.compile(pat, flags=flags)
        250 
        251         if regex.groups &gt; 0:

        ~\AppData\Local\Continuum\anaconda3\lib\re.py in compile(pattern, flags)
         231 def compile(pattern, flags=0):
         232     "Compile a regular expression pattern, returning a pattern object."
    --&gt;   233     return _compile(pattern, flags)
          234 
          235 def purge():

         ~\AppData\Local\Continuum\anaconda3\lib\re.py in _compile(pattern, flags)
    299     if not sre_compile.isstring(pattern):
    300         raise TypeError("first argument must be string or compiled pattern")
      --&gt; 301     p = sre_compile.compile(pattern, flags)
          302     if not (flags &amp; DEBUG):
          303         if len(_cache) &gt;= _MAXCACHE:

          ~\AppData\Local\Continuum\anaconda3\lib\sre_compile.py in compile(p, flags)
        560     if isstring(p):
        561         pattern = p
         --&gt;       562         p = sre_parse.parse(p, flags)
           563     else:
           564         pattern = None

         ~\AppData\Local\Continuum\anaconda3\lib\sre_parse.py in parse(str, flags, pattern)
         853 
         854     try:
          --&gt;      855         p = _parse_sub(source, pattern, flags &amp; SRE_FLAG_VERBOSE, 0)
         856     except Verbose:
         857         # the VERBOSE flag was switched on inside the pattern.  to be

            ~\AppData\Local\Continuum\anaconda3\lib\sre_parse.py in _parse_sub(source, state,   verbose, nested)
              414     while True:
               415         itemsappend(_parse(source, state, verbose, nested + 1,
         --&gt;     416                            not nested and not items))
                 417         if not sourcematch("|"):
                 418             break

             ~\AppData\Local\Continuum\anaconda3\lib\sre_parse.py in _parse(source, state, verbose, nested, first)
              614             if not item or (_len(item) == 1 and item[0][0] is AT):
               615                 raise source.error("nothing to repeat",
               --&gt;            616                                    source.tell() - here + len(this))
            617             if item[0][0] in _REPEATCODES:
            618                 raise source.error("multiple repeat",

           error: nothing to repeat at position 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In regular expressions, <code>*</code> is a quantifier, denoting that the preceding pattern should be matched zero or more times. The error <code>nothing to repeat at position 0</code> is thrown, as the regular expression is malformed. The quantifier cannot apply to any pattern as there is no pattern for it to apply to. I suggest that you read up on some basics of regular expressions. The Python re module is documented <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">here</a>.</p>
<p>What you may have meant would be these expressions:</p>
<pre><code>filterData(df,'Signal','clk_ht100.*')
filterData(df,'Signal','.*CLK.*')
</code></pre>
<p>The same can be achieved with string matching, and doesn't require regular expressions:</p>
<pre><code>&gt;&gt;&gt; df['Signal'].str.startswith("clk_ht100")
0    False
1    False
2    False
3    False
4     True
5    False
6    False
7    False
Name: Signal, dtype: bool

&gt;&gt;&gt; df['Signal'].str.contains("CLK")
0     True
1     True
2     True
3     True
4    False
5    False
6    False
7    False
Name: Signal, dtype: bool
</code></pre>
<p>You can find a list of available string methods at the bottom of the <a href="https://pandas.pydata.org/pandas-docs/stable/text.html" rel="nofollow noreferrer">Working with Text Data</a> document.</p>
</div>
<span class="comment-copy">could you please point me documentation of what all regular expressions can we support in pandas</span>
<span class="comment-copy">@TechiTechi I've added some links to the standard documentation. It's nothing special, you would also find that quickly through Google.</span>
