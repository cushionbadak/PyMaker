<div class="post-text" itemprop="text">
<p>I need to define a function to go through a string and replace all replacement fields, without knowing how many there will be. I do know that the replacement fields will be named a specific way. For example, If i know that all fields will be named 'name' &amp; 'position':</p>
<pre><code>Test1 = "I think {name} should be our {position}. Only {name} is experienced. Who else could be a {position}?"
Test2 = "{name} is the only qualified person to be our {position}."
</code></pre>
<p>I need one function that would process both of these the same way, with output like:</p>
<pre><code>&gt;&gt;Test1 = ModString(Test1)
&gt;&gt;Test2 = ModString(Test2)
&gt;&gt;Test1
&gt;&gt;'I think Mary should be our boss. Only Mary is experienced. Who else could be a boss?'
&gt;&gt;Test2
&gt;&gt;'Mary is the only qualified person to be our boss.'
</code></pre>
<p>I feel like this should be simple, but my mind can't seem to get past the multiples and the unknown quantity.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def ModString(s, name_replacement, position_replacement):
    return s.replace("{name}",name_replacement).replace("{position}", position_replacement)
</code></pre>
<p>Then: </p>
<pre><code>Test1 = ModString(Test1, "Mary", "boss")
Test2 = ModString(Test2, "Mary", "boss")
</code></pre>
<p>or you can just use <code>.format()</code>, which is recommended</p>
<pre><code>def ModString(s, name_replacement, position_replacement):
    return s.format(name=name_replacement, position=position_replacement)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>str.format()    I got too in my head about this.</p>
</div>
<div class="post-text" itemprop="text">
<p>bphi is right, use string formatting
e.g.</p>
<pre><code>test1 = "I think {name} should be our {position}. Only {name} is experienced. Who else could be a {position}?"
test1.format(name="Bob", position="top cat")
&gt; 'I think Bob should be our top cat. Only Bob is experienced. Who else could be a top cat?'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to use replace() Method,  for example, read here: <a href="https://www.tutorialspoint.com/python/string_replace.htm" rel="nofollow noreferrer">https://www.tutorialspoint.com/python/string_replace.htm</a></p>
<pre><code>Test1 = "I think {name} should be our {position}. Only {name} is experienced. Who else could be a {position}?"
Test2 = "{name} is the only qualified person to be our {position}."

def ModString(str, name, position):
    str = str.replace("{name}", name)
    str = str.replace("{position}", position)
    return str
Test1 = replaceWord(Test1, "Mary", "boss")
Test2 = replaceWord(Test2, "Mary", "boss")
</code></pre>
</div>
<span class="comment-copy">You are probably looking for string fomatting: <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.format</a>  e.g. <code>"{name}{name}".format(name="Mary") == "MaryMary"</code></span>
<span class="comment-copy">you can also check out regular expressions if you will be using a different format: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">What have you tried so far? What are the <code>multiples</code> and the <code>unknown quantity</code>?</span>
<span class="comment-copy">If you're on a recent version of Python (&gt;= 3.6) you can take advantage of string interpolation, also known as f-strings: <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">python.org/dev/peps/pep-0498</a></span>
<span class="comment-copy">Wow I feel ridiculous for posting this. I have been using str.format forever, but only changing a single variable at a time. I didn't realize it could do mass replaces. This is the easiest thing. I'm sorry for wasting everyone's time.</span>
