<div class="post-text" itemprop="text">
<p>I am trying to log whatever is printed in console to a file(It should print in both console and in a file).i am using a command, that is logging the output to a file, but i am facing two problems: 1. Not printing the output on console, printing directly to a file. 2. If i am using sleep command it did not work.Can anyone help me in this with python codes.
Here is my code</p>
<pre><code>import  time    
sys.stdout = open("for_posterity.txt", "a")
def main():
    while True:
       fun1()
       fun2()
def fun1():
    time.sleep(1)
    print("inside fun 1")
def fun2():
    time.sleep(1)
    print("inside fun 2")
if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you changed sys.stdout, you lost the ability to write to the console.
This code does exactly what you told it to do. If I look at for_posterity.txt, it says</p>
<blockquote>
<p>inside fun 1<br/>
  inside fun 2<br/>
  inside fun 1<br/>
  inside fun 2<br/>
  ...</p>
</blockquote>
<p>If you want a logging function which does both, you have to actually do both.</p>
<pre><code>def output(message):
    with open("for_posterity.txt", "a") as logfile:
        print (message)
        logfile.write(message + "\n")

def fun1():
    time.sleep(1)
    output("inside fun 1")

def fun2():
    time.sleep(1)
    output("inside fun 2")
</code></pre>
<p>However, when you get more advanced, you will want to use the logging module, which you can configure to write to as many or as few places as you want, and it can decide based on what's happening. </p>
<p><a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">https://docs.python.org/3/library/logging.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Update - Added file.close() as without that it doesn't work in python 3</p>
<pre><code>def print_and_write(content):
    print(content)
    file = open("for_posterity.txt", "a")
    file.write(content)
    file.close()

def main():
    while True:
       print_and_write(fun1())
       print_and_write(fun2())
def fun1():
    return("inside fun 1")
def fun2():
    return("inside fun 2")
if __name__ == '__main__':
    main()
</code></pre>
</div>
<span class="comment-copy">exactly! i want the code to log.</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/6674327/redirect-all-output-to-file">this</a></span>
<span class="comment-copy">This is the program that will run infinite times..whatever output is printed on python shell should be copied to a file. i want a code for that.</span>
<span class="comment-copy">@ Lucas Can you please help me in windows. i think the link you shared is for LINUX.</span>
<span class="comment-copy">Kindly check the answer <a href="https://stackoverflow.com/questions/4828885/how-to-direct-output-into-a-txt-file-in-python-in-windows">here</a> . it's clear and it shall help you.</span>
<span class="comment-copy">Thanks a ton!! it worked for me... :)</span>
<span class="comment-copy">@Ayush Please accept the answer if it worked for you.</span>
<span class="comment-copy">@Kenny Can't i use print statement instead of output statement, as because output statement doesn't have multiple parameters.</span>
<span class="comment-copy">It could take multiple parameters, just like print, but that is a whole new topic. If you just want to intercept stdout, independently of the program, that is an operating system question -- it has nothing to do with what happens in the program.</span>
<span class="comment-copy">Sorry but i didn't worked for me.  Problem is, output is not copied to the file.</span>
<span class="comment-copy">Still Thanks a lot for your precious time. :)</span>
<span class="comment-copy">I think you are running Python 3. You need to use print() instead of print in that case. It should work. I have updated the code. Please post the error if this doesn't work.</span>
<span class="comment-copy">yes i am using python 3.7, i did the same thing in print statement still not working. i am only getting output in stdout.</span>
<span class="comment-copy">@ayush Got it.. I usually work on python 2.7. With python 3, seems like we also need to explicitly close the file once the data is written. So, I have updated the code to reflect the same and tested in python 3.7. It is working now. You can check as well.</span>
