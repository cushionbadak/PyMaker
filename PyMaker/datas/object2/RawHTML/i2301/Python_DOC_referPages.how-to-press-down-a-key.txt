<div class="post-text" itemprop="text">
<p>Been using the pyautogui module to do most of my things, but I have come across one problem:</p>
<p>I cannot hold down a key for a certain length of time.</p>
<p>Does anyone know any modules that can do this, or have a solution without downloading any modules?
For example (perfect for me):</p>
<p>I go into word, and run my code. Word should just be receiving (w pressed down), with the w's slowly increasing - (after a while holding adds like 5 a half sec). </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following example:</p>
<pre><code>&gt;&gt;&gt; pyautogui.keyDown('shift')  # hold down the shift key
&gt;&gt;&gt; pyautogui.press('left')     # press the left arrow key
&gt;&gt;&gt; pyautogui.press('left')     # press the left arrow key
&gt;&gt;&gt; pyautogui.press('left')     # press the left arrow key
&gt;&gt;&gt; pyautogui.keyUp('shift')    # release the shift key
</code></pre>
<p>In your case you'd use the <code>keyDown</code> function and a timer or equivelent to trigger <code>keyUp</code>.</p>
<p>You can find more information in regards to using timers <a href="https://docs.python.org/3.6/library/time.html#time.sleep" rel="nofollow noreferrer">here</a> or better yet use <a href="https://docs.python.org/3/library/threading.html#timer-objects" rel="nofollow noreferrer">Timer</a> from the threading library - especially if you want to the processing to continue.</p>
<p>Example of using <code>threading.Timer</code> below.</p>
<pre><code>def hello():
    print("hello, world")

t = Timer(30.0, hello)
t.start()  # after 30 seconds, "hello, world" will be printed
</code></pre>
<p>In the <code>keyDown</code> documentation one can note the following:</p>
<blockquote>
<p>NOTE: For some reason, this does not seem to cause key repeats like
  would happen if a keyboard key was held down on a text field.</p>
</blockquote>
<p>An alternative to using the <code>keyDown</code> function is to repeat the <code>press</code> function; in cases where <code>keyDown</code> is not satisfying the behaviour required by the developer and/or user. </p>
<pre><code>def hold_key(key, hold_time):
    import time, pyautogui

    start_time = time.time()

    while time.time() - start_time &lt; hold_time:
        pyautogui.press(key)
</code></pre>
<p>or</p>
<pre><code>import pyautogui

while True:
    pyautogui.press('w')
</code></pre>
<p><em>The above code is not tested.</em></p>
</div>
<span class="comment-copy">depends on how you want to use your key press</span>
<span class="comment-copy">You can keydown, wait five second, and keyup again.</span>
<span class="comment-copy">A quick search of the documentation: <a href="https://pyautogui.readthedocs.io/en/latest/keyboard.html#the-press-keydown-and-keyup-functions" rel="nofollow noreferrer">pyautogui.readthedocs.io/en/latest/â€¦</a></span>
<span class="comment-copy">This is not the same effect as actually holding down a key...</span>
<span class="comment-copy">Example: I go onto word and run this code, it does not 'hold' the button but just types a's (im using keyDown(a) and press(a))</span>
<span class="comment-copy">@IAmAlsoLearning if you do <code>keyDown('a')</code> and then <code>press('a')</code>, <code>press</code> will do <code>keyDown('a')</code> then <code>keyUp('a')</code> which will stop any repetition that Word(tm) performs. You just need to do <code>keyDown('a')</code></span>
<span class="comment-copy">@Peter Wood maybe its just my computer, but when I do keyDown, it doesn't 'hold' the key... Maybe some fix in my computer settings?</span>
<span class="comment-copy"><code>keyDown</code> acts as if you hold the key down tangibly; meaning it will keep on printing 'w' over and over. - You can always try something on the lines of repeating the <code>press</code> function; added to the answer.</span>
