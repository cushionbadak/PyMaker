<div class="post-text" itemprop="text">
<p>I am using Python3.6.</p>
<p>Database table example:</p>
<pre><code>column1 . .column2  . .column3

....10    ...........20..............30

....100  .......     200.............300
</code></pre>
<p>Code:</p>
<pre><code># extracts all data for the rows without the column names
rows=cursor.fetchall()

for row in rows:
    print(row)

  10   20   30  
  100  200  300
</code></pre>
<p>How do I add the column names manually to this loop so that it is included in the output?</p>
<p>I am new to stackoverflow so this post will need improvements in formatting, content, etc., so I welcome any feedback. </p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://www.python.org/dev/peps/pep-0249/#cursor-attributes" rel="nofollow noreferrer"><code>cursor.description</code></a> to extract headers and then iterate headers and data via <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>
<pre><code>from itertools import chain
from operator import itemgetter

headers = [list(map(itemgetter(0), cursor.description))]
rows = cursor.fetchall()

for row in chain(headers, rows):
    print(*row)

column1 column2 column3
10 20 30
100 200 300
</code></pre>
<p>If formatting as a table with consistent spacing is important, see <a href="https://stackoverflow.com/questions/9535954/printing-lists-as-tabular-data">Printing Lists as Tabular Data</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you're adding column names manually just do print the column names outside of the for loop.</p>
<pre><code>print("col1\tcol2\tcol3")
for row in rows:
   print(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want the headers to be available with each row of data, make a <code>DictCursor</code>. In my knowledge, most popular MySQL, Oracle, Postgres libs support it.</p>
<p>Then you can do this:</p>
<pre><code>conn = MySQLdb.connect(host,port,user,passwd,db)
cursor = van.cursor(MySQLdb.cursors.DictCursor)
cursor.execute("SELECT * FROM table;")

# Avoid doing fetchall(). If your query resukt is big enough, it can even make your program run out of available memory of the system.
#rows=cursor.fetchall()

#Alternatively, iterate over the cursor itself, which is a generator

for row in cursor:
    print row
</code></pre>
<p>Reference: <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator</a></p>
</div>
<span class="comment-copy"><code>headers = [desc[0] for desc in cursor.description]</code> from PEP 249 -- Python Database API Specification v2.0 <a href="https://www.python.org/dev/peps/pep-0249/#cursor-attributes" rel="nofollow noreferrer">Cursor Attributes</a>.</span>
<span class="comment-copy">@StevenRumbalski, Thanks, updated. I wasn't familiar with <code>cursor</code>. Just have to put it in another list for consistency.</span>
