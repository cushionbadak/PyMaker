<div class="post-text" itemprop="text">
<p>I need to split a file into 2 separate arrays. What I mean is to split a <code>username:password</code> file into a username and a password arrays and then be able to call them by the same index number, to make the usernames and passwords match. So far I have :</p>
<pre><code>with open('userlist.txt', 'r') as userlist:
    for line in userlist:
        user, pwd = line.strip().split(':')
</code></pre>
<p>Instead of the code splitting in to 2 different variables, I want to split them into 2 different arrays.  This way I can call them by the same index number to get the user:pass combo.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Taohidul Islam already posted a technically perfect solution, <strong>BUT</strong>: </p>
<blockquote>
<p>split a username:password file into a username array and a password array and then be able to call them by the same index number, to make the usernames and passwords match</p>
</blockquote>
<p>This is not the proper design. With this solution, you rely on the list staying of the same length and in the same order, which cannot be garanteed, so it's brittle at best (IOW: you can bet your ... that it WILL break). </p>
<p>Also, to find a user and her password, you need a first sequential lookup (on the "usernames" list), then an indexed access on the second list, which is far from optimal.</p>
<p>The correct data structure to "match" a key (here the username) with a value (here the password) is a <code>dict</code>: an unordered collection of key:value pairs with optimized key lookup (0(1) instead of 0(N) for a list), so what you really want is:</p>
<pre><code>users = {}
with open('userlist.txt', 'r') as userlist:
    for line in userlist:
        user, pwd = line.strip().split(':')
        users[user] = pwd
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>username = list()
password = list()
with open('userlist.txt', 'r') as userlist:
    for line in userlist:
        user, pwd = line.strip().split(':')
        username.append(user)
        password.append(pwd)

total_length = len(username)
for i in range(total_length):
    print(username[i], password[i])
</code></pre>
<p>You can read this <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">resource</a> to know about data structures.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of a list i'd suggest a dictionnary:</p>
<p>You could then do:</p>
<pre><code>with open("userlist.txt", "r") as f:
    # create a nice dict with name to password mapping
    name_password_mapping = dict(
        line.strip().split(":")
        for line in f.readlines()
    )
# Access the user password with
user_pass = name_password_mapping["user"]
# do stuff with user and password

# if you want to have the user and the password together as a tuple, 
# you can still do:
list_of_user_password_pairings = name_password_mapping.items()
print(list_of_user_password_pairings[0]) #  prints ("user0", "pw_user0")
</code></pre>
</div>
<span class="comment-copy">Wouldn't a dictionary be a more appropriate container?</span>
<span class="comment-copy">How would that work? I am a newb to python. :) Please help</span>
<span class="comment-copy">Yes please. That would be helpful! Thanks!</span>
<span class="comment-copy">@Bluecider you should also be looking into tutorials e.g. <a href="http://www.tutorialspoint.com/python/python_dictionary.htm" rel="nofollow noreferrer">tutorialspoint.com/python/python_dictionary.htm</a> because you are going to be using dictionaries a lot</span>
<span class="comment-copy">I am clueless at the moment. Right now I'm sticking to this design but I'm still not sure how to print a certain index. Like for example print(users[1]) doesn't work I would expect an outcome of "username1","password1"</span>
<span class="comment-copy">@Bluecider I linked you to the tutorial, that shows you how to access values by a key. "Accessing Values in Dictionary" is the very first section.</span>
<span class="comment-copy">@Bluecider SO is neither a tutorial nor a substitute for the official documentation. dicts are introduced here <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#dictionaries</a> and fully documented here  <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#mapping-types-dict</a> so please start with those resources (beware of 3rd part tutorials, some are great but quite a few are complete hogwash). You <b>MUST</b> learn to use the main builtins types anyway, and <b>specially</b> dicts as they are the bases of quite a essential features - objects, modules, namespaces etc.</span>
<span class="comment-copy">Ok thanks so much! How would I print a certain index in the list/array? I am a newbie to python :)</span>
<span class="comment-copy">Please see my updated answer</span>
