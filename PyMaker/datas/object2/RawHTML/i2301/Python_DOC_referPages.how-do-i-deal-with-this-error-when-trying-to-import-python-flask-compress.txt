<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/47116912/python-flask-ext-mysql-is-deprecated">Python flask.ext.mysql is deprecated?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I want to serve compressed files from my flask application, and I looked around and found this solution. </p>
<pre><code>from flask import Flask
from flask.ext.compress import Compress

app = Flask(__name__)
Compress(app)
</code></pre>
<p>This is what is says on the docs, but when I try and actually implement this I get an error.</p>
<pre><code>Cannot find reference 'compress' in '__init__.py' less... (âŒ˜F1) 
This inspection detects names that should resolve but don't. Due to dynamic dispatch and duck typing, this is possible in a limited but useful number of cases. Top-level and class-level items are supported better than instance items.
</code></pre>
<p>And consequently I cannot import Compress.</p>
<p>Does anyone know how to fix this issue and possibly an alternative way to compress the files on my web app.</p>
<p>I have imported the modules into Pycharm correctly as my IDE shows that they have been installed. Its just when I try and do the above in my application that I get this error. </p>
<h2>Thanks for your time.</h2>
</div>
<div class="post-text" itemprop="text">
<p>Taken from the README of <a href="https://github.com/jmcarp/flask-compress/blob/master/README.md" rel="nofollow noreferrer">flask-compress</a>.</p>
<blockquote>
<p>In many cases, one cannot expect a Flask instance to be ready at import time, and a common pattern is to return a Flask instance from within a function only after other configuration details have been taken care of. In these cases, Flask-Compress provides a simple function, init_app, which takes your application as an argument.</p>
</blockquote>
<p>Did you try using this?</p>
<pre><code>from flask import Flask
from flask_compress import Compress

compress = Compress()

def start_app():
    app = Flask(__name__)
    compress.init_app(app)
    return app
</code></pre>
<p>Also, I would recommend using the new Flask import standard for all of your imports, so </p>
<pre><code>from flask_compress import Compress
</code></pre>
<p>instead of the old </p>
<pre><code>from flask.ext.compress import Compress
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I use <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer"><code>zipfile</code></a> to compress files. From the Introduction:</p>
<blockquote>
<p>The ZIP file format is a common archive and compression standard. This module provides tools to create, read, write, append, and list a ZIP file. Any advanced use of this module will require an understanding of the format, as defined in PKZIP Application Note.</p>
</blockquote>
<p>and with <code>ZipFile.write(filename)</code> you can write files to a ZipFile object representing the archive.</p>
</div>
