<div class="post-text" itemprop="text">
<pre><code>name = "Joe Van Schmo"
rname = name.split()
print ('{}, {}'.format(rname[-1],rname[0:-1]))
</code></pre>
<p>Ideally I want the return to be (All but the first word), (first word) but I'm not sure how to go about combining the Van and the Schmo in the quickest way.</p>
<p>Any help appreciated. Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>maxsplit</code> parameter for <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a>:</p>
<pre><code>name = "Joe Van Schmo"
fname, rname = name.split(None, 1)
print ('{}, {}'.format(rname, fname))
</code></pre>
<p>This outputs:</p>
<pre><code>Van Schmo, Joe
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can provide a <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>maxsplit</code> parameter to <code>str.split</code></a>, or if you know you'll have exactly one space between first name and the rest of the name, <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow noreferrer"><code>str.partition</code> implies at most one split</a>.</p>
<pre><code>name = "Joe Van Schmo"
# Raises exception if no spaces in name
firstname, restname = name.split(maxsplit=1)  # Equivalently, name.split(None, 1)

# Or without exceptions, but with possibly odd output for spaceless names
firstname, sep, restname = name.partition(' ')

print ('{}, {}'.format(restname, firstname))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First word:</p>
<pre><code>rname[0]
</code></pre>
<p>All but first word:</p>
<pre><code>rname[1:]
</code></pre>
<p>If you want to merge it with spaces:</p>
<pre><code>' '.join(rname[1:])
</code></pre>
<p>So your last line of code should've been:</p>
<pre><code>print ('{}, {}'.format(' '.join(rname[1:]),rname[0]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You also can slice the <code>.split()</code> directly in your print statement   </p>
<pre><code>print('{}, {}'.format(' '.join(name.split()[1:]), name.split()[0]))
</code></pre>
<blockquote>
<pre><code>Van Schmo, Joe
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Desired output? Consider learning what is a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy"><code>rname[-1]</code> is not the first word, it's the last word. Likewise, <code>rname[0:-1]</code> is all but the last word.</span>
<span class="comment-copy">Are you looking for "Van Schmo, Joe" as the output?</span>
<span class="comment-copy">@coldspeed that's correct</span>
<span class="comment-copy">@blhsing: Where did the OP say that?</span>
<span class="comment-copy">My apologies. I mixed it up with another question.</span>
