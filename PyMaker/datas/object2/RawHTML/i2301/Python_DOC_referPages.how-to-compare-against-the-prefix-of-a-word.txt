<div class="post-text" itemprop="text">
<p>Let me explain with a quick bit of code.</p>
<p>Code:</p>
<pre><code>choice = raw_input("Do you like pineapple? Y/N: ")
if choice == "y".lower() or choice == "ye".lower() or choice == "yes".lower():
    print("Sammmmeee")
else:
    print("Nani! You criminal!")
</code></pre>
<p>How could I make it so instead of doing:</p>
<pre><code>if choice == "y".lower() or choice == "ye".lower() or choice == "yes".lower():
</code></pre>
<p>it automatically accepts, <code>"y"</code>, <code>"ye"</code> or <code>"yes"</code> without needing to do <code>or</code> so much?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code></a> to achieve this:</p>
<pre><code>if 'yes'.startswith(choice.lower().strip()):
   print('You said "yes"!')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you shouldn't be applying <code>lower</code> to the right hand side, which is a constant and already lowercase. You should be applying it to the variable input:</p>
<pre><code>choice = raw_input(...).lower()
</code></pre>
<p>There are a number of ways to check for the match you are looking for. The easiest is to use <code>startswith</code>:</p>
<pre><code>if 'yes'.startswith(choice):
</code></pre>
<p>Another way would be to explicitly check for containment in a set or tuple:</p>
<pre><code>if choice in ('y', 'ye', 'yes'):
</code></pre>
<p>This is only necessary for cases that don't fit into a simple method check, like if you wanted to add <code>ok</code> to the list of options.</p>
<p>If you wanted to have multiple function checks, you could use <code>any</code> with a generator expression:</p>
<pre><code>if any(f(x) for f in ('yes'.startswith, 'ok'.startswith)):
</code></pre>
<p>All of the tests here are properly short circuiting, just like your original expression. </p>
</div>
<div class="post-text" itemprop="text">
<p>This will case-insensitively match exactly <code>'y'</code>, <code>'ye'</code>, and <code>'yes'</code>:</p>
<pre><code>choice = raw_input("Do you like pineapple? Y/N: ")
if choice.lower() == 'yes'[:len(choice)]:
    print("Sammmmeee")
else:
    print("Nani! You criminal!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just pick the first character of the input to compare with 'y'. Also note that you need to make the input lowercase. So the code becomes:</p>
<pre><code>choice = raw_input("Do you like pineapple? Y/N: ")[0]
if choice.lower() == "y":
    print("Sammmmeee")
else:
    print("Nani! You criminal!")
</code></pre>
</div>
<span class="comment-copy">I've updated your title and removed the self-deprecating intro. I had a pretty good idea what the question was going to be even before that, so don't sell yourself short. Also good job using <code>or</code> correctly to begin with. Judging by a lot of the questions here, it's not intuitively easy.</span>
<span class="comment-copy">Thank you for making the title more understandable :)</span>
<span class="comment-copy">This worked the best, thank you.</span>
<span class="comment-copy">This doesn't work the way the OP requests it: for example, your code would accept 'yerk!' as a yes, which it shouldn't.</span>
