<div class="post-text" itemprop="text">
<p>I'd like to update a field within a dataclass, but I know the field name only during runtime, not during development time.</p>
<pre><code>#!/usr/bin/env python3.6
# -*- coding: utf-8 -*-

from dataclasses import dataclass # I use the backport to 3.6

@dataclass
class Template:
    number: int = 0
    name: str = "^NAME^"


oneInstance = Template()
print(oneInstance) # Template(number=0, name='^NAME^')
# If I know the variable name during development, I can do this:
oneInstance.number=77
# I get this from a file during runtime:
para = {'name': 'Jones'}
mykey = 'name'
# Therefore, I used exec:
ExpToEval = "oneInstance." + mykey + ' = "' + para[mykey] + '"'
print (ExpToEval) # oneInstance.name = "Jones"
exec(ExpToEval)  # How can I do this in a more pythonic (and secure) way?
print(oneInstance) # Template(number=77, name='Jones')
</code></pre>
<p>I need something like</p>
<pre><code>oneInstance[mykey] = para[mykey]
</code></pre>
<p>but this ends up in "TypeError: 'Template' object does not support item assignment"</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try <a href="https://docs.python.org/3/library/dataclasses.html#dataclasses.replace" rel="nofollow noreferrer">replace()</a> method, like below:</p>
<pre><code>from dataclasses import dataclass, replace

@dataclass
class Template:
    number: int = 0
    name: str = "^NAME^"

oneInstance = Template()
print(oneInstance)
para = {'name': 'Jones'}
oneInstance = replace(oneInstance, **para)
print(oneInstance)
</code></pre>
<p>That should do the job if your dict <code>para</code> only contains keys that are fields of your dataclass.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">setattr</a> to update an object's attributes during runtime:</p>
<pre><code>oneInstance = Template()
setattr(oneInstance, 'name', 'Jones')  # this doesn't raise a TypeError
print(oneInstance.name)  # prints: 'Jones'
</code></pre>
</div>
