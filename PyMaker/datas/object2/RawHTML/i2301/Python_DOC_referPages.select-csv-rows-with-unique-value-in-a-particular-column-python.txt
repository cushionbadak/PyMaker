<div class="post-text" itemprop="text">
<p>I have a CSV file with rows such as </p>
<pre><code>A,apple,102
A,orange,103
B,banana,101
C,peach,102
B,orange,104
</code></pre>
<p>and so on...</p>
<p>I want to remove rows with duplicate values in the first column, the output of the above should be:</p>
<pre><code>A,apple,102
B,banana,101
C,peach,102
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create an empty set and add the values of the first columns to it. If it's already in the set, just skip to the next row, eg:</p>
<pre><code>import csv

column_values = set()
new_rows = []

with open('example.csv', 'r') as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:
        if (row[0] in column_values):
            continue
        column_values.add(row[0])
        new_rows.append(row)

with open('updated.csv', 'w') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerows(new_rows)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are happy to use a 3rd party library, you can use Pandas:</p>
<pre><code>import pandas as pd
from io import StringIO

x = StringIO("""A,apple,102
A,orange,103
B,banana,101
C,peach,102
B,orange,104""")

# read file and drop duplicates, replace x with 'file.csv'
df = pd.read_csv(x, names=['letter', 'fruit', 'value'])\
       .drop_duplicates('fruit', keep=False)

# export to output csv
df.to_csv('file_out.csv', index=False, header=False)

print(df)

  letter   fruit  value
0      A   apple    102
2      B  banana    101
3      C   peach    102
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>in the <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools-recipes" rel="nofollow noreferrer">itertools recipes</a> there is a recipe for <code>unique_everseen</code> (slightly adapted here). may be a bit overkill here but it works:</p>
<pre><code>from io import StringIO
from csv import reader
from operator import itemgetter


def unique_everseen(iterable, key):
    "List unique elements, preserving order. Remember all elements ever seen."
    seen = set()
    seen_add = seen.add
    for element in iterable:
        k = key(element)
        if k not in seen:
            seen_add(k)
            yield element

txt = '''A,apple,102
A,orange,103
B,banana,101
C,peach,102
B,orange,104'''

with StringIO(txt) as file:
    rows = reader(file)
    unique_rows = unique_everseen(rows, key=itemgetter(0))
    for row in unique_rows:
        print(row)
</code></pre>
<p>i use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter(0)</code></a> as <code>key</code> in order to select the first column in your rows.</p>
<p>you could then write the <code>row</code>s to a new file using <code>csv.writer</code>.</p>
<p>of course you will have to replace <code>StringIO(txt)</code> with something like <code>open('file.csv', 'r')</code>.</p>
</div>
