<div class="post-text" itemprop="text">
<p>I have Below snippet, where i'm searching for word <strong>koint</strong> but it prints all the associated words to this like <code>koint</code> , <code>koint_local</code> and <code>koint_limited</code>.</p>
<p>Is there a strict way to find strings / words in this type of requirements apart from regex.</p>
<pre><code>from subprocess import Popen, PIPE

CRED = '\033[91m'
CGRN = '\033[92m'
CEND = '\033[0m'

with open("kkdiff", "r") as lid:
    for line in lid:
        line = line.strip()
        proc = Popen(['id', line], stdout=PIPE,)
        myID = proc.communicate()[0].decode('utf-8')
        if 'koint' in myID:
            print(line, CGRN + "Success: " + CEND + "User exists in the Group")
        else:
            print(line, CRED + "Failed: " + CEND + "User does not exists in the Group")
</code></pre>
<p>The above snippet returns below while i'm looking for only <code>koint</code>:</p>
<pre><code>user1 Failed: User does not exists in the Group
user30 Success: User exists in the Group (&lt;-- koint_local)
user81 Success: User exists in the Group  (&lt;-- koint_limited)
</code></pre>
<blockquote>
<p>Raw data in myID:</p>
</blockquote>
<pre><code>uid=24699(user1) gid=1001(skilla) groups=1786(koint),1614(koint_limited),101(torr)
</code></pre>
<p>IN the above data even if <code>koint</code> s missing and <code>koint_limited</code> is there it say Success.</p>
<p>Requited: Print Success if it finds <code>koint</code> in line.</p>
<p><strong>Just to clarify as i mention at the start of my Post apart from regex:
Though regex works:</strong></p>
<pre><code>from subprocess import Popen, PIPE

CRED = '\033[91m'
CGRN = '\033[92m'
CEND = '\033[0m'

with open("kkdiff", "r") as lid:
    for line in lid:
        line = line.strip()
        proc = Popen(['id', line], stdout=PIPE,)
        myID = proc.communicate()[0].decode('utf-8')
        if re.search(r'\bkoint\b', myID):
            print(line, CGRN + "Success: " + CEND + "User exists in the Group")
        else:
            print(line, CRED + "Failed: " + CEND + "User does not exists in the Group")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Regex that matches string with a full-word <em>koint</em></p>
<pre><code>&gt;&gt;&gt; re.search(r'\bkoint\b', 'groups=1786(koint)') is not None
True
&gt;&gt;&gt; re.search(r'\bkoint\b', '1614(koint_limited)') is not None
False
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">Regular Expression Syntax</a></p>
<hr/>
<p>It looks like <code>groups</code> command would fit your needs better.</p>
<pre><code>&gt;&gt;&gt; proc = subprocess.Popen(['groups', line], stdout=PIPE)
&gt;&gt;&gt; myID = proc.communicate()[0].decode('utf-8')
&gt;&gt;&gt; 'koint' in myID.split()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have compiled the working codes, so it may be useful to someone looking over SO.Now there are two solutions with and without <code>regex</code>.</p>
<p><strong>1) Solution without <code>regex</code></strong></p>
<pre><code>from subprocess import Popen, PIPE, DEVNULL
##### color for success &amp; Failed code ########
CRED = '\033[91m'
CGRN = '\033[92m'
CEND = '\033[0m'
###############################################
with open(input("Please Enter the userfile: "), "r") as lid:
    for line in lid:
        line = line.strip()
        proc = Popen(['groups', line], stdout=PIPE, stderr=DEVNULL)
        myID = proc.communicate()[0].decode('utf-8')
        if 'koint' in myID.split():
            print(line, CGRN + "Success: " + CEND + "user exists in the group")
        else:
            print(line, CRED + "Failed: " + CEND + "user doesn't exists in the group")
</code></pre>
<p><strong>2) Solution based on <code>regex</code></strong></p>
<pre><code>    from subprocess import Popen, PIPE, DEVNULL
    import re
    ##### color for success &amp; Failed code ########
    CRED = '\033[91m'
    CGRN = '\033[92m'
    CEND = '\033[0m'
   ################################################
    with open(input("Please Enter the userfile: "), "r") as lid:
        for line in lid:
            line = line.strip()
            proc = Popen(['id', line], stdout=PIPE, stderr=DEVNULL)
            myID = proc.communicate()[0].decode('utf-8')
            if re.search(r'\bkoint\b', myID):
                print(line, CGRN + "Success: " + CEND + "User exists in the Group")
            else:
                print(line, CRED + "Failed: " + CEND + "User does not exists in the Group")
</code></pre>
</div>
<span class="comment-copy">do you mean you want to match <code>koint</code> but not <code>koint_local</code> and <code>koint_limited</code></span>
<span class="comment-copy">... <code>myID == 'koint'</code>?</span>
<span class="comment-copy">@AtulShanbhag, yes correct.</span>
<span class="comment-copy">@GiacomoAlzetta, <code>'koint'</code> anywhere in  myID</span>
<span class="comment-copy">Then you <b>do</b> want to match also <code>koint_local</code> and <code>koint_limited</code>.  Matching "everywhere in the string" and matching "only <code>koint</code>" are inconsistent statements. Please clarify exactly which kind of strings you want to match and which not. It would be really helpful if you provided the output of the command you are running (maybe with information redacted) and show whihc lines you'd like to match</span>
<span class="comment-copy">@ pacholik, thanx for your inputs,  regex works , i'm able to do that <code>if re.search(r'\koint\b', myID):</code>  with the word boundaries, But my question remains same apart from regex.</span>
<span class="comment-copy">@pygo I don't believe there is a way, you have to use some kind regex matching to find the word boundaries. On a side note, you could use just <code>in</code> operator if you used <code>groups</code> instead of <code>id</code>.</span>
<span class="comment-copy">@ pacholik, can you set an example for <code>in</code> operator with <code>groups</code> command as you suggested</span>
