<div class="post-text" itemprop="text">
<p>I'm trying to take data from a .csv file and create individual .xml files for each row. I've read the .csv into Pandas already. Where I'm struggling is trying to figure out how to make edits in .xml files. </p>
<p>I'm using this previous answer as a guide to try to learn this:</p>
<p><a href="https://stackoverflow.com/a/38440723/8309944">Link</a></p>
<p>Applying the author's solution to my data would look something like this:</p>
<pre><code>data = """&lt;annotation&gt;
    &lt;folder&gt;VOC2007&lt;/folder&gt;
    &lt;filename&gt;abc.jpg&lt;/filename&gt;
    &lt;object&gt;
        &lt;name&gt;blah&lt;/name&gt;
        &lt;pose&gt;unknown&lt;/pose&gt;
        &lt;truncated&gt;0&lt;/truncated&gt;
        &lt;difficult&gt;0&lt;/difficult&gt;
        &lt;bndbox&gt;
            &lt;xmin&gt;0&lt;/xmin&gt;
            &lt;ymin&gt;0&lt;/ymin&gt;
            &lt;xmax&gt;0&lt;/xmax&gt;
            &lt;ymax&gt;0&lt;/ymax&gt;
        &lt;/bndbox&gt;
    &lt;/object&gt;
&lt;/annotation&gt;
"""
</code></pre>
<p>Then  I do this:</p>
<pre><code>tree = et.fromstring(data)
</code></pre>
<p>Where I'm stuck is the next part. The author edits their file with this line of code:</p>
<pre><code>for data in tree.findall("data"):
    name = data.attrib["name"]
    value = data.find("value")
    value.text = "[%s] %s" % (name, value.text)
</code></pre>
<p>I try to apply it to my own like this:</p>
<pre><code>for data in tree.findall("data"):  
    filename = data.find("filename")
    filename.text = "001.jpg"
</code></pre>
<p>But this doesn't seem to change anything when I print it out. </p>
<pre><code>print(et.tostring(tree))
</code></pre>
<p>What am I doing wrong or what steps do I need to take to edit the name of the image from 'abc.jpg' to '001.jpg'?</p>
<p>Also trying to figure out how to change the values for the four items xmin, ymin, xmax, and ymax. </p>
</div>
<div class="post-text" itemprop="text">
<p>I make the assumption you read your CSV file and extract a collection of dictionary-like records, for instance:</p>
<pre><code>record = {
    'folder': "VOC2007",
    'filename': "abc.jpg",
    'name': "blah",
    'pose': "unknown",
    'truncated': "0",
    'difficult': "0",
    'xmin': "0",
    'ymin': "0",
    'xmax': "0",
    'ymax': "0",
}
</code></pre>
<p>A simple thing you can do is to use a string template to generate your XML content (since it is very simple):</p>
<pre><code>import textwrap

template = textwrap.dedent("""\
&lt;annotation&gt;
    &lt;folder&gt;{folder}&lt;/folder&gt;
    &lt;filename&gt;{filename}&lt;/filename&gt;
    &lt;object&gt;
        &lt;name&gt;{name}&lt;/name&gt;
        &lt;pose&gt;{pose}&lt;/pose&gt;
        &lt;truncated&gt;{truncated}&lt;/truncated&gt;
        &lt;difficult&gt;{difficult}&lt;/difficult&gt;
        &lt;bndbox&gt;
            &lt;xmin&gt;{xmin}&lt;/xmin&gt;
            &lt;ymin&gt;{ymin}&lt;/ymin&gt;
            &lt;xmax&gt;{xmax}&lt;/xmax&gt;
            &lt;ymax&gt;{ymax}&lt;/ymax&gt;
        &lt;/bndbox&gt;
    &lt;/object&gt;
&lt;/annotation&gt;""")
</code></pre>
<p>To generate your XML content you can do:</p>
<pre><code>from xml.sax.saxutils import escape

escaped = {k: escape(v) for k, v in record.items()}
data = template.format(**escaped)
</code></pre>
<p>The function <a href="https://docs.python.org/3/library/xml.sax.utils.html" rel="nofollow noreferrer"><code>xml.sax.saxutils.escape</code></a> is used to convert “&lt;“, “&gt;” and “&amp;” into XML entities.</p>
<p>The result is:</p>
<pre><code>&lt;annotation&gt;
    &lt;folder&gt;VOC2007&lt;/folder&gt;
    &lt;filename&gt;abc.jpg&lt;/filename&gt;
    &lt;object&gt;
        &lt;name&gt;blah&lt;/name&gt;
        &lt;pose&gt;unknown&lt;/pose&gt;
        &lt;truncated&gt;0&lt;/truncated&gt;
        &lt;difficult&gt;0&lt;/difficult&gt;
        &lt;bndbox&gt;
            &lt;xmin&gt;0&lt;/xmin&gt;
            &lt;ymin&gt;0&lt;/ymin&gt;
            &lt;xmax&gt;0&lt;/xmax&gt;
            &lt;ymax&gt;0&lt;/ymax&gt;
        &lt;/bndbox&gt;
    &lt;/object&gt;
&lt;/annotation&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My preference lies in using  <a href="https://pypi.org/project/xmltodict/" rel="nofollow noreferrer">xmltodict</a>. But from the link you have posted, it seems you are wanting to make the .find("filename") from within the  tag and not a  tag (which isn't present in your xml-data as is also stated in a comment).</p>
<p>That is, your code could be changed "minimally" (I don't know ElementTree well enough to say what the best solution is) to something like:</p>
<pre><code>for annotation in tree.findall("annotation")
    filename = annotation.find("filename")
    filename.text = "001.jpg"
</code></pre>
</div>
<span class="comment-copy">Regarding <code>tree.findall("data")</code> you don't seem to have any <code>&lt;data&gt;</code> tags in your xml</span>
<span class="comment-copy">What do you mean by "<i>xml</i> files"? there's no <i>xml</i> file here. It's just an <i>xml</i> string, (which probably gets modified). How did you test if it changes something? Did you missed the last line in your <i>URL</i>: <code>print(ET.tostring(tree))</code>?</span>
<span class="comment-copy">Correct, there are no .xml files because I'm trying to create them from data in the .csv. I have a template for what the .xml files should look like. However, I need to figure out how to edit the data in an .xml file in Python before I can do that. The print line at the end was also applied; that's not the issue.</span>
<span class="comment-copy">That's brilliant. Much easier to understand than xml.etree. Thanks so much!</span>
