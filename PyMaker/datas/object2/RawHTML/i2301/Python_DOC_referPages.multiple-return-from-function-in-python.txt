<div class="post-text" itemprop="text">
<pre><code>def example():
    var1 = {'a':1,'b':2}
    var2 = {'c':3,'d':4}

    return var1,var2

[v1, v2] = example()
</code></pre>
<p>I want to assign var1 to v1, and var2 to v2. Is it ok for me to unpacked tuple var1,var2 into list v1,v2. So far, I haven't found anyone unpack the multiple return value into list</p>
</div>
<div class="post-text" itemprop="text">
<p>Semantically, there is no difference between unpacking into a list or a tuple. All of these are equivalent:</p>
<pre><code>v1, v2 = example()
(v1, v2) = example()
[v1, v2] = example()
</code></pre>
<p>(See also the <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">assignment statement grammar</a>.)</p>
<p>However, unpacking into a list is a relatively unknown feature, so it might be confusing for people who read your code. It's also needlessly verbose. That's why I would strongly recommend using the well-known unpacking syntax without any parentheses or brackets:</p>
<pre><code>v1, v2 = example()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not extremely familiar with python, but I don't think you can return multiple values like that. I would return a dictionary (lookup object) like so:</p>
<pre><code>def example():
    var1 = {'a':1,'b':2}
    var2 = {'c':3,'d':4}

    return {'var1': var1, 'var2': var2}

result = example()
v1 = result['var1']
v2 = result['var2']
</code></pre>
<p>See if this helps you.</p>
</div>
<span class="comment-copy">refer to this <a href="https://stackoverflow.com/questions/354883/how-do-you-return-multiple-values-in-python">question</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/354883/how-do-you-return-multiple-values-in-python">How do you return multiple values in Python?</a></span>
<span class="comment-copy">yep bytcode is identical for all 3, e.g. <code>dis.dis('[v1, v2] = example()')</code></span>
<span class="comment-copy"><i>"I don't think you can return multiple values like that"</i>. It's legal. <code>return var1, var2</code> simply creates a two-element tuple containing var1 and var2, and returns that. It's not so much "returning two values" as it is "returning one object that has a length of two"</span>
