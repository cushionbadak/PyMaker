<div class="post-text" itemprop="text">
<p>In a Linux directory, I have several numbered files, such as "day1" and "day2". My goal is to write a code that retrieves the number from the files and add 1 to the file that has the biggest number and create a new file. So, for example, if there are files, 'day1', 'day2' and 'day3', the code should read the list of files and add 'day4'. To do so, at least I need to know how to retrieve the numbers on the file name.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a> to get all the file names, remove the "day" prefix, convert the remaining characters to integers, and take the maximum.
From there, it's just a matter of incrementing the number and appending it to the same prefix:</p>
<pre><code>import os
max_file = max([int(f[3:]) for f in os.listdir('some_directory')])
new_file = 'day' + str(max_file + 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Get all files with the <code>os</code> module/package (don't have the exact command handy) and then use <code>regex</code>(package) to get the numbers. If you don't want to look into regex you could remove the letters  from your string with <code>replace()</code> and convert that string with <code>int()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Glob would be good for this. It is kind of regex, but specially for file search and simpler. Basically you just use * as a wildcard, and you can select numbers too. Just google what it exactly is. It can be pretty powerful and is native to the bash shell for example. </p>
<pre><code>for glob import glob
from pathlib import Path

pattern = "day"
last_file_number = max(map(lambda f: int(f[len(pattern):]), glob(pattern + "[0-9]*")))
Path("%s%d" % (pattern, last_file_number + 1)).touch()
</code></pre>
<p>You can also see that I use pathlib here. This is a library to deal with the file system in an OOP manner. Some people like, some don't. </p>
<p>So, a little disclaimer: Glob is not as powerful as regex. Here <code>daydream</code> for example won't be matched, but <code>day0dream</code> would still be matched. You can also try <code>day*[0-9]</code>, but then <code>daydream0</code> would still be matched.  Off course you can also use <code>day[0-9]</code> if you know you stay below double digits. So, if your use case requires this, you can use glob and filter down with regex.</p>
</div>
<span class="comment-copy">Look into the <code>os</code> module.</span>
<span class="comment-copy">So your question is how to get the filename, or how to parse the number from inside a string (such as a filename)?</span>
<span class="comment-copy">Your code is not reusable if an other pattern is required. (3 is a magic number here.) Also the directory could contain files that don't match the pattern, but that's more of an extra.</span>
