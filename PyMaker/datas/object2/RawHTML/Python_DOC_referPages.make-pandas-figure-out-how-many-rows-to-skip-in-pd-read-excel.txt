<div class="post-text" itemprop="text">
<p>I'm trying to automate reading in hundreds of excel files into a single dataframe. Thankfully the layout of the excel files is fairly constant. They all have the same header (the casing of the header may vary) and then of course the same number of columns, and the data I want to read is always stored in the first spreadsheet.</p>
<p>However, in some files a number of rows have been skipped before the actual data begins. There may or may not be comments and such in the rows before the actual data. For instance, in some files the header is in row 3 and then the data starts in row 4 and down.</p>
<p>I would like <code>pandas</code> to figure out on its own, how many rows to skip. Currently I use a somewhat complicated solution...I first read the file into a dataframe, check if the header is correct, if no search to find the row containing the header, and then re-read the file now knowing how many rows to skip..</p>
<pre><code>def find_header_row(df, my_header):
    """Find the row containing the header."""
    for idx, row in df.iterrows():
        row_header = [str(t).lower() for t in row]
        if len(set(my_header) - set(row_header)) == 0:
            return idx + 1
    raise Exception("Cant find header row!")

my_header = ['col_1', 'col_2',..., 'col_n']
df = pd.read_excel('my_file.xlsx')
# Make columns lower case (case may vary)
df.columns = [t.lower() for t in df.columns]

# Check if the header of the dataframe mathces my_header
if len(set(my_header) - set(df.columns)) != 0:
    # If no... use my function to find the row containing the header
    n_rows_to_skip = find_header_row(df, kolonner)
    # Re-read the dataframe, skipping the right number of rows
    df = pd.read_excel(fil, skiprows=n_rows_to_skip)
</code></pre>
<p>Since I know what the header row looks like is there a way to let <code>pandas</code> figure out on its own where the data begins? Or is can anyone think of a better solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's know if this work for you</p>
<pre><code>import pandas as pd
df = pd.read_excel("unamed1.xlsx")
df
    Unnamed: 0  Unnamed: 1  Unnamed: 2
0   NaN bad row1 badddd row111  NaN
1   baaaa   NaN NaN
2   NaN NaN NaN
3   id  name    age
4   1   Roger   17
5   2   Rosa    23
6   3   Rob 31
7   4   Ives    15
first_row = (df.count(axis = 1)  &gt;= df.shape[1]).idxmax()
df.columns = df.loc[first_row]
df = df.loc[first_row+1:]
df
3   id  name    age
4   1   Roger   17
5   2   Rosa    23
6   3   Rob 31
7   4   Ives    15
</code></pre>
</div>
<span class="comment-copy">Pandas take cares of it automatically, if you are reading the csv file using the read_csv function then it ignores the blank rows above the header column</span>
<span class="comment-copy">Have you tried the <code>skiprows</code> param ? Note that It could be a <code>callable</code> which <b>return True if the row should be skipped and False otherwise</b></span>
<span class="comment-copy">@min2bro I'm not reading a .csv, but an .xlsx. It is not doing the right thing on its own..</span>
<span class="comment-copy">@Neroksi I'm not following :| could you produce a code example?</span>
<span class="comment-copy">@mortysporty Sorry my solution won't work as pandas will only pass the row's index and not the entire row's data, which could be checked before returning <code>True</code> if the row is not valid.</span>
<span class="comment-copy">That worked beatifully. Thank you.</span>
