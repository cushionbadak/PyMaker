<div class="post-text" itemprop="text">
<p>I'm try to run this script:</p>
<pre><code>hostname = '192.168.3.4'
port = 22
username = 'username'
password = 'mypassword'
y = "2012"
m = "02"
d = "27"

if __name__ == "__main__":
   s = paramiko.SSHClient()
   s.load_system_host_keys()
   s.connect(hostname, port, username, password)
   command = 'ls /home/user/images/cappi/03000/y/m/d'
   s.close
</code></pre>
<p>The question is:
how can I put the variables <code>y</code>,<code>m</code>,<code>d</code> into the variable <code>command</code> ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has lots of ways to perform string formatting.  One of the simplest is to simply concatenate the parts of your string together:</p>
<pre><code>#!/usr/bin/env python
hostname = '192.168.3.4'    
port = 22
username = 'username'
password = 'mypassword'
y = "2012"
m = "02"
d = "27"

def do_it():
    s = paramiko.SSHClient()
    s.load_system_host_keys()
    s.connect(hostname, port, username, password)
    command = 'ls /home/user/images/cappi/03000/' + y + '/' + m + '/' + d
    (stdin, stdout, stderr) = s.exec_command(command)
    for line in stdout.readlines():
        print line
    s.close()

if __name__ == "main":
    do_it()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>command = 'ls /home/user/images/cappi/03000/%s/%s/%s' %(y,m,d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using the <a href="http://docs.python.org/library/string.html#format-examples" rel="nofollow">new format specifications</a>, you can access arguments by name:</p>
<pre><code>'ls /home/user/images/cappi/03000/{year}/{month}/{day}'.format(year=y, month=m, day=d)
</code></pre>
</div>
<span class="comment-copy">I don't see that that's significantly better.  Now if you had said '/'.join([y, m, d]) you'd have a case.</span>
<span class="comment-copy">The problem here is not syntax, the problem is that if you run <code>a1 + a2 + a3 + ... + an</code>, you're creating and destroying <code>n-1</code> temporary strings. <code>join</code> in Python only creates 1 string. This is a bad habit to get into.</span>
<span class="comment-copy">I would point out 1. n is very small here, 2. the + operator is very readable here, and 3. <a href="http://greaterdebater.com/blog/gabe/post/7" rel="nofollow noreferrer">greaterdebater.com/blog/gabe/post/7</a></span>
<span class="comment-copy">I understand now. Thanks guys!</span>
<span class="comment-copy">@matt: I think we're going to have to agree to disagree here. This is a convention, and getting in the habit of doing it properly is best, IMO.</span>
<span class="comment-copy">You need to put an f in front of the string.</span>
<span class="comment-copy">@kagronick <a href="https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498" rel="nofollow noreferrer">since Python 3.6 you can use f-strings (PEP 498)</a>, but the above <code>.format(...)</code> string is perfectly valid <a href="https://docs.python.org/2/library/stdtypes.html#str.format" rel="nofollow noreferrer">since Python 2.6</a> and in <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">Python 3.x</a>.</span>
<span class="comment-copy">Oh I didn't scroll to the right on my phone. .format was new in 2006 so I assumed f strings were what you were talking about.</span>
