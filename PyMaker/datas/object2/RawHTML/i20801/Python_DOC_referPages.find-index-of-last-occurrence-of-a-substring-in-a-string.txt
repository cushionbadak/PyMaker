<div class="post-text" itemprop="text">
<p>I want to find the position (or index) of the last occurrence of a certain substring in given inputted string <code>str</code>.</p>
<p>For example, suppose the inputted string is <code>str = 'hello'</code> and the substring is <code>target = 'l'</code>, then it should output 3.</p>
<p>How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/py3k/library/stdtypes.html#str.rfind"><code>.rfind()</code></a>:</p>
<pre><code>&gt;&gt;&gt; s = 'hello'
&gt;&gt;&gt; s.rfind('l')
3
</code></pre>
<p>Also don't use <code>str</code> as variable name or you'll shadow the built-in <a href="http://docs.python.org/py3k/library/functions.html#str"><code>str()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=rfind#str.rfind" rel="noreferrer"><code>rfind()</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html?highlight=rfind#str.rindex" rel="noreferrer"><code>rindex()</code></a> <br/>
<sup>Python2 links: <a href="https://docs.python.org/2/library/string.html#string.rfind" rel="noreferrer"><code>rfind()</code></a> <a href="https://docs.python.org/2/library/string.html#string.rindex" rel="noreferrer"><code>rindex()</code></a></sup></p>
<pre><code>&gt;&gt;&gt; s = 'Hello StackOverflow Hi everybody'

&gt;&gt;&gt; print( s.rfind('H') )
20

&gt;&gt;&gt; print( s.rindex('H') )
20

&gt;&gt;&gt; print( s.rfind('other') )
-1

&gt;&gt;&gt; print( s.rindex('other') )
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: substring not found
</code></pre>
<p>The difference is  when the substring is not found, <code>rfind()</code> returns <code>-1</code> while <code>rindex()</code> raises an exception <a href="https://docs.python.org/3/library/exceptions.html#ValueError" rel="noreferrer"><code>ValueError</code></a> (Python2 link: <a href="https://docs.python.org/2/library/exceptions.html#exceptions.ValueError" rel="noreferrer"><code>ValueError</code></a>).</p>
<p>If you do not want to check the <code>rfind()</code> return code <code>-1</code>, you may prefer <code>rindex()</code> that will provide an understandable error message. Else you may search for minutes where the unexpected value <code>-1</code> is coming from within your code...</p>
<hr/>
<h3>Example: Search of last newline character</h3>
<pre><code>&gt;&gt;&gt; txt = '''first line
... second line
... third line'''

&gt;&gt;&gt; txt.rfind('\n')
22

&gt;&gt;&gt; txt.rindex('\n')
22
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>str.rindex</code> method.</p>
<pre><code>&gt;&gt;&gt; 'hello'.rindex('l')
3
&gt;&gt;&gt; 'hello'.index('l')
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>s = 'hello plombier pantin'
print (s.find('p'))
6
print (s.index('p'))
6
print (s.rindex('p'))
15
print (s.rfind('p'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://github.com/erikrose/more-itertools" rel="nofollow noreferrer"><code>more_itertools</code></a> library offers tools for finding indices of all <em>characters</em> or all <em>substrings</em>.</p>
<p><strong>Given</strong></p>
<pre><code>import more_itertools as mit


s = "hello"
pred = lambda x: x == "l"
</code></pre>
<p><strong>Code</strong></p>
<p><em>Characters</em></p>
<p>Now there is the <a href="https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.rlocate" rel="nofollow noreferrer"><code>rlocate</code></a> tool available:</p>
<pre><code>next(mit.rlocate(s, pred))
# 3
</code></pre>
<p>A complementary tool is <a href="https://more-itertools.readthedocs.io/en/latest/api.html#more_itertools.locate" rel="nofollow noreferrer"><code>locate</code></a>:</p>
<pre><code>list(mit.locate(s, pred))[-1]
# 3

mit.last(mit.locate(s, pred))
# 3
</code></pre>
<hr/>
<p><em>Substrings</em></p>
<p>There is also a <code>window_size</code> parameter available for locating the leading item of several items:</p>
<pre><code>s = "How much wood would a woodchuck chuck if a woodchuck could chuck wood?"
substring = "chuck"
pred = lambda *args: args == tuple(substring)

next(mit.rlocate(s, pred=pred, window_size=len(substring)))
# 59
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't wanna use <a href="http://docs.python.org/py3k/library/stdtypes.html#str.rfind" rel="nofollow noreferrer">rfind</a> then this will do the trick/</p>
<pre><code>def find_last(s, t):
    last_pos = -1
    while True:
        pos = s.find(t, last_pos + 1)
        if pos == -1:
            return last_pos
        else:
            last_pos = pos
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not trying to resurrect an inactive post, but since this hasn't been posted yet...</p>
<p>(This is how I did it before finding this question)</p>
<pre><code>s = "hello"
target = "l"
last_pos = len(s) - 1 - s[::-1].index(target)
</code></pre>
<p>Explanation: When you're searching for the last occurrence, really you're searching for the first occurrence in the reversed string. Knowing this, I did <code>s[::-1]</code> (which returns a reversed string), and then indexed the <code>target</code> from there. Then I did <code>len(s) - 1 - the index found</code> because we want the index in the <em>unreversed</em> (i.e. original) string.</p>
<p>Watch out, though! If <code>target</code> is more than one character, you probably won't find it in the reversed string. To fix this, use <code>last_pos = len(s) - 1 - s[::-1].index(target[::-1])</code>, which searches for a reversed version of <code>target</code>.</p>
</div>
<span class="comment-copy">Hi @JacobSchneider. I have added an example according to your comment. I do not understand your issue. Please provide more information: Python version, Content of your string... Cheers</span>
