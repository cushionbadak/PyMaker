<div class="post-text" itemprop="text">
<pre><code>print(round(mas[i],4))
</code></pre>
<p>This only works with float numbers, not integers.</p>
</div>
<div class="post-text" itemprop="text">
<p>Format your number using <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format()</code></a>:</p>
<pre><code>format(mas[i], '.4f')
</code></pre>
<p>This formats numbers (including integers) to 4 decimal places. See the <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow"><em>Format Specification Mini-Language</em> documentation</a>.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; print(format(16, '.4f'))
16.0000
&gt;&gt;&gt; print(format(4.242422, '.4f'))
4.2424
</code></pre>
<p>If the number is part of a larger string, you can use the format specification in a <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format()</code> format string</a>, using placeholders:</p>
<pre><code>'Your frobnar has been opfritzed to {:.4f} hafnavz'.format(mas[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To be complete, you can also use the <a href="https://docs.python.org/3.4/library/stdtypes.html#old-string-formatting" rel="nofollow">printf style formating</a>:</p>
<pre><code>&gt;&gt;&gt; '%0.4f' % 4
'4.0000'
&gt;&gt;&gt; '%0.4f' % 4.56789
'4.5679'
&gt;&gt;&gt; '%0.4f' % .1
'0.1000'
</code></pre>
<p>As stated in the documents, it can be quirky with tuples, but can also be faster. </p>
</div>
<span class="comment-copy">What do you mean by "4 signs"? Do you mean decimal places or digits?</span>
<span class="comment-copy">An integer is not a float and it won't ever have numbers after the decimal.</span>
<span class="comment-copy">Note that this only works up to about 15 or 16 digits before you start getting inaccuracies due to the <code>float</code> conversion.</span>
