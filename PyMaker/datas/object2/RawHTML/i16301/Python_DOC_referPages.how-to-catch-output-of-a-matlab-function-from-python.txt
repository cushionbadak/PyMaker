<div class="post-text" itemprop="text">
<p>I'm running the python code below which evaluates mean of an array:</p>
<pre><code>def matlab_func1(array):
    p = os.popen('matlab -nodesktop -nosplash  -r "mean('+str(array)+');exit"')
    while 1:
        line = p.readline()
        if not line:
            break
        print line

matlab_func1([1,2,3]) 
</code></pre>
<p>From the matlab script below, it can be seen output return to y. I want to catch this output from python.</p>
<pre><code>function y = mean(x,dim)
...
...
end
</code></pre>
<p>The solution must be applicable to the other matlab function. The 'mean' function is just an example. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://www.mathworks.com/help/matlab/ref/fprintf.html" rel="nofollow noreferrer"><code>fprintf</code></a> to write needed text into <code>stderr</code>. Just add an extra argument <code>2</code> in the beginning. </p>
<pre><code>import subprocess
import os
def matlab_func1(array):
    p = subprocess.Popen(['/home/user/Matlab/bin/matlab', '-nodesktop', '-nosplash', '-r "m = mean(' + str(array) + ');fprintf(2, \'%d\\n\',m);exit" &gt;/dev/null'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    while 1:
        try:
            out, err = p.communicate()
        except ValueError:
            break
        print 'hello' + err

matlab_func1('[1,2,3]') 
</code></pre>
<p>A few things to note: </p>
<ul>
<li>Changed the Python command to <code>subprocess.Popen</code>, which allows <code>stderr</code> piping. </li>
<li>In Matlab command, use <code>fprintf</code> to write wanted info into <code>stderr</code>. This can separate code ouput from Matlab's header lines. </li>
<li>Back into Python, use <code>Popen.communicate()</code> to catch <code>stderr</code> output. </li>
<li>The exception <code>ValueError</code> handles exit event of Matlab (<code>p</code> is closed). </li>
</ul>
<hr/>
<p>EDIT: </p>
<h1>for a function that gives multiple outputs</h1>
<p>say a Matlab function is</p>
<pre><code>function [y, z] = foo(x)
    y = x+1;
    z = x*20;
end
</code></pre>
<p>The point is use <code>fprintf</code> to throw the output, while doing all other things as you always do normally in Matlab. </p>
<h2>Method 1 - in-line script</h2>
<pre><code>p = subprocess.Popen(['/home/user/Matlab/bin/matlab', '-nodesktop', '-nosplash', '-r "[y, z] = foo(' + str(array) + ');for ii=1:length(y) fprintf(2, \'%d %d\\n\',y(ii),z(ii)); end; exit" &gt;/dev/null'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
</code></pre>
<h2>Method 2 - standalone script</h2>
<p>First create a new <code>caller.m</code> script</p>
<pre><code>[y, z] = foo(x);
for ii=1:length(y)
    fprintf(2, '%d %d\n',y(ii),z(ii));
end
</code></pre>
<p>Note that <code>x</code> is to be assigned when calling from Python; scripts share the same stack. (Remember NOT to <code>clear</code> the workspace in the caller script. )</p>
<p>Then, call the script from Python</p>
<pre><code>p = subprocess.Popen(['/home/user/Matlab/bin/matlab', '-nodesktop', '-nosplash', '-r "x=' + str(array) + ';caller; exit" &gt;/dev/null'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
</code></pre>
<h2>Storing Matlab result in a Python variable</h2>
<ul>
<li><p>When passing data through <code>stdout</code> / <code>stderr</code> pipe: </p>
<p>Refer to <a href="https://stackoverflow.com/q/11248224/3839249">this</a> and <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer"><code>subprocess.check_output()</code></a>. </p></li>
<li><p>When handling serious data like <code>double</code> or binary: </p>
<p>Write the data into an external file with Matlab. Then read this file with Python. A protocol with which both side talk with each other should be defined. </p></li>
</ul>
</div>
<span class="comment-copy">Your code isn't formatted properly. You must use four spaces to create a code block, and then another four spaces of indentation for code inside functions and the like.</span>
<span class="comment-copy">Have you considered using e.g. <a href="https://pypi.python.org/pypi/pymatlab" rel="nofollow noreferrer">pymatlab</a>?</span>
<span class="comment-copy">@Marcin I installed the pymatlab, however could not find any tutorial to understand how it works. The short script on the pymatlab does not show how to call a specific function.</span>
<span class="comment-copy">What if it is a file?</span>
<span class="comment-copy">@yasin.yazici What is "it"?</span>
<span class="comment-copy">What if output of a function is a file?</span>
<span class="comment-copy">The code above raises an error: <code>ValueError: I/O operation on closed file</code> I just changed the matlab path</span>
<span class="comment-copy">Do you mean the output data is stored in a file, or the output of your function is a string containing a file path? I can't understand how you make a function output a "file".</span>
