<div class="post-text" itemprop="text">
<p>I have seen how to go from ISO formatted date such as <code>2007-01-14T20:34:22+00:00</code>, to a a more readble format with python <code>datetime</code>.</p>
<p>Is there an easy way to generate a <strong>random ISO8601 date</strong> similar to <a href="https://stackoverflow.com/a/553320/3783608">this answer</a> for <code>datetime</code> strings?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd suggest using this <a href="https://github.com/joke2k/faker" rel="nofollow noreferrer">Faker</a> library. </p>
<pre><code>pip install faker
</code></pre>
<p>It's a package that allows you to generate a variety of randomised "fake" data sets. Using <code>Faker</code> below generates a random <code>datetime</code> object which you can then convert to an ISO8601 string format using the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.isoformat" rel="nofollow noreferrer"><code>datetime.datetime.isoformat</code></a> method.</p>
<pre><code>import faker

fake = faker.Faker()
rand_date = fake.date_time()  # datetime(2006, 4, 30, 3, 1, 38)
rand_date_iso = rand_date.isoformat()  # '2006-04-30T03:01:38'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Decide on which range you want the random dates to fall inside.</li>
<li>Calculate the timestamp of those dates (seconds since unix epoch) in <code>start</code>, <code>end</code> integers.</li>
<li>Use <code>random.randrange(start, end)</code> to pick a random number between <code>start</code> and <code>end</code> timestamps.</li>
<li>Turn this random integer to datetime with <code>datetime.fromtimestamp()</code></li>
<li>Change the datetime to whatever output format you want.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>If you wanted to just generate a random date, you could just generate it to the correct format of the <code>ISO8601</code>:</p>
<pre><code>import random

iso_format = "{Year}-{Month}-{Day}T{Hour}:{Minute}+{Offset}"

year_range = [str(i) for i in range(1900, 2014)]
month_range = ["01","02","03","04","05","06","07","08","09","10","11","12"]
day_range = [str(i).zfill(2) for i in range(1,28)]
hour_range = [str(i).zfill(2) for i in range(1,25)]
min_range = [str(i).zfill(2) for i in range(1, 60)]
offset = ["00:00"]

argz = {"Year": random.choice(year_range),
        "Month": random.choice(month_range),
        "Day" : random.choice(day_range),
        "Hour": random.choice(hour_range),
        "Minute": random.choice(min_range),
        "Offset": random.choice(offset)
        }

print iso_format.format(**argz)
</code></pre>
<p>This would need to be altered if you wanted to make sure the date was valid.</p>
</div>
<span class="comment-copy">What does "random ISO8601 date" mean? Do you mean a random date in ISO8601 format (and, in that case, given that you know how to create a random date and how to format an ISO8601 date, what's the problem)?</span>
<span class="comment-copy">@ChrisJohnson comment above is now obsolete.  If you follow that advice, you now get <code>ImportError: The fake-factory package is now called Faker</code></span>
