<div class="post-text" itemprop="text">
<p>How would I replace all {x} in the command data with their respective values from msg?
I have a regex for this in Perl that does the trick but will that work with Python?</p>
<pre><code>data = "{1} {2}"
cmd = "!test"
msg = "!test param1 param2"

def parsecommand( data, cmd, msg, nick, channel ):
    print "Parsing command %s by %s on %s." % (cmd, nick, channel)
    msgparamcount = len(msg.split(' '))-1
    re1='.*?'
    re2='(\\{.*?\\})'
    re3='.*?'
    re4='(\\d)'
    rg = re.compile(re1+re2+re3+re4,re.IGNORECASE|re.DOTALL)
    m = rg.search(data)
    if m:
        cbraces1=m.group(1)
        d1=m.group(2)
        print "("+cbraces1+")"+"("+d1+")"+"\n"
    return
</code></pre>
<p>Output</p>
<pre><code>({1})(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the commands are as simple as you show them, then use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>format</code></a>.</p>
<pre><code>data = "{1} {2}"
cmd = "!test"
msg = "!test param1 param2"
print(data.format(*msg.split()))
</code></pre>
<p>Just split the parameter string into a list and feed <code>format</code> with it.</p>
<p>If <code>cmd</code> might have an additional parameter then create a new message string. Strip the command from the message (<code>msg[len(cmd):</code>) and prepend it with a dummy command.</p>
<pre><code>cmd = "!test xyz"
msg = '_ ' + msg[len(cmd):]
</code></pre>
</div>
<span class="comment-copy">Sorry I should have mentioned that the commands are dynamic. They get loaded from a database.</span>
<span class="comment-copy">Could you show some examples? It might work nevertheless.</span>
<span class="comment-copy">Its not printing the result of the string format, any idea why? What kind of examples do you need?</span>
<span class="comment-copy">I did not even realise that string.format used {x}! thanks.</span>
<span class="comment-copy">So you've got your solution now? The fact that the data is coming from a database should change nothing concerning the logic.</span>
