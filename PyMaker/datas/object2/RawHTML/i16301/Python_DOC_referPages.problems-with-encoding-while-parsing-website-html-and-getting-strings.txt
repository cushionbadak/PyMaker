<div class="post-text" itemprop="text">
<p>I'm making a web scrawler using HTMLParser from the library html.parser. I'm getting some strings from each html page and I'm modifing them with the following function. The following function, indeed, is aimed at deleting italian prepositions and articles from each word in the string of input:</p>
<pre><code>def delApostrophedPrepositions(string):
    p = re.compile(r'\b[^\s/-]+\b')
    string = p.findall(string)
    apostrophedPrepArt = ["d'", "all'", "dall'", "tr'", "s'", "sull'", "dell'", "nell'", "l'"]
    i = 0
    while i &lt; len(string):
        #print(string[i])
        for ap in apostrophedPrepArt:
            #print(ap)
            if string[i].startswith(ap):
                #print(frase[i])
                string[i] = string[i][len(ap):]
        i = i + 1
    return " ".join(string)
</code></pre>
<p>If I pass to the function phrases that I've wrote in the code, the function works, but I've detected a weird behaviour and I can neither explain nor resolve the reason of that behaviour. I'll try to explain that behaviuor:
I detected that the locution: "Dati aggregati dell’attività amministrativa" was never modified while parsing the website, so I have made the following steps:</p>
<ul>
<li>1) I have opened a file called: "apostroph.txt"</li>
<li>2) I have written "Dati aggregati dell’attività amministrativa" in it.</li>
<li>3) I have called my function with the phrase at step two as input value. Then I have written the result in an other file</li>
<li>4) I have copied (Ctrl+C) the same quoted locution in step 2 from the following website: <code>view-source:http://www.regione.emilia-romagna.it/trasparenza/attivita-e-procedimenti</code> and I have pasted it (Ctrl+V) in a new file. Then I have called my function with that phrase as input value.</li>
</ul>
<p>Finally, I have noticed that the result in the step 3 was correctly: "Dati aggregati attività amministrativa", but the result of the step 4 was uncorrectly: "Dati aggregati dell'attività amministrativa"</p>
<p>I specify that convert_charrefs is set to True in the HTMLParser</p>
</div>
<div class="post-text" itemprop="text">
<p>The apostrophe in the webpage is not what you are expecting it to be:</p>
<pre><code>&gt;&gt;&gt; phrase = 'Dati aggregati dell’attività amministrativa'
&gt;&gt;&gt; phrase[19]
'’'
&gt;&gt;&gt; print(ascii(phrase[19]))
'\u2019'
</code></pre>
<p>That's a <a href="http://codepoints.net/U+2019" rel="nofollow">U+2019 RIGHT SINGLE QUOTATION MARK</a> codepoint, <strong>not</strong> the <a href="http://codepoints.net/U+0027" rel="nofollow">U+0027 APOSTROPHE</a> codepoint your code looks for.</p>
<p>You'll need to either normalise your inputs to use one character or expand your matching to take the many different Unicode alternatives into account.</p>
<p>In this case <a href="https://pypi.python.org/pypi/Unidecode" rel="nofollow">Unidecode</a> could help:</p>
<pre><code>&gt;&gt;&gt; from unidecode import unidecode
&gt;&gt;&gt; unidecode(phrase)
"Dati aggregati dell'attivita amministrativa"
</code></pre>
<p>but take into account that <code>à</code> has been replaced by <code>a</code> now too.</p>
<p>Another approach would be to use <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow"><code>str.translate()</code></a> to map such characters; you'd then have to produce your own table first:</p>
<pre><code>&gt;&gt;&gt; apostrophes = dict.fromkeys(
...     (0x2013, 0x2018, 0x2019, 0x201b, 0x2035, 0x275b, 0x275c),
...     "'")
&gt;&gt;&gt; phrase.translate(apostrophes)
"Dati aggregati dell'attività amministrativa"
</code></pre>
</div>
<span class="comment-copy">How can I do to normalise my input?</span>
<span class="comment-copy">@UtenteStack: you could use <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate()</code></a> to map many 'foreign' apostrophes to <code>'</code> as well.</span>
<span class="comment-copy">@Pieters: thank you. But I think I could spend a few weeks, if I wanted to map every character to the the characters with it can be confused. I have to find specific phrases in each website, so I think that I'll use unidecode to pre-empively convert to ascii both the phrase I'm looking for, both the phrase found and finally compare them, in order to understand if I've found the right phrase.  What do you think about my choice?</span>
<span class="comment-copy">That may be a better approach, yes; if you are merely collecting stats on phrases, using <code>unidecode</code> is probably the better approach.</span>
<span class="comment-copy">not properly stats...I have to find specific phrases in order to find specific links that are dictated by law in italian websites government. I have to say whether those links are present and whether they work</span>
