<div class="post-text" itemprop="text">
<p>I have a csv file called sample.csv which contains the following data:-</p>
<pre><code>2014-07-18 01:00:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10002
2014-07-18 01:00:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10003
2014-07-18 01:15:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10004
2014-07-18 01:15:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10005
2014-07-18 01:30:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10006
2014-07-18 01:30:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10007
2014-07-18 01:45:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10008
2014-07-18 01:45:00,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,10009
</code></pre>
<p>I am trying to write a python script that would read all the lines in this csv file and I want it to read the hour which is '01' here and make the hour as the head key and then make the minute as the subkey and the remaining fields as its values. </p>
<p>Here is my code snippet:-</p>
<pre><code>def connection():
        os.chdir("record_output/")
        mydict = {}
        for files in glob.glob("*.csv"):
                fo = open(files, "r")
                data = fo.readlines()
                for lines in data:
                        lines = lines.split(',')
                        dateObject = datetime.strptime(lines[0],"%Y-%m-%d %H:%M:%S")
                        hour = dateObject.hour
                        minute = dateObject.minute
                        fields = lines[1:]
</code></pre>
<p>Here I get the hour, the minute and the remaining fields but kinda struggling in creating the desired output that is making hour as the head key, the minute as the subkey and the corresponding fields as the values and so on for every minute in that hour that is '00', '15', '30' and '45' and for every hour. Currently there is only 1 hour in this csv file, in future there can be more than 1 hour. </p>
</div>
<div class="post-text" itemprop="text">
<p>A solution with csv module</p>
<pre><code>import dateutil.parser
import csv

data_dict = {}
with open('data.csv', 'r') as csvfile:
    csvreader = csv.reader(csvfile)
    for row in csvreader:
        dt = dateutil.parser.parse(row[0])
        if not data_dict.get(dt.hour,''):
            data_dict[dt.hour] = {}
        if not data_dict[dt.hour].get(dt.minute,''):
            data_dict[dt.hour][dt.minute]=[]
        data_dict[dt.hour][dt.minute].append(row[1:])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check if key exists before insert a new value (this will be inside your las loop)</p>
<pre><code>if not mydict.has_key(hour):
    mydict[hour] = {}
mydict[hour][minute]=fields
</code></pre>
<p>Unchecked but should work. Should let you something like:</p>
<pre><code>{1: {33: 22, 34: 25}}
</code></pre>
<p>Been 1 the hour, 33 and 34 the minutes and 22, 25 the values (can be strings or whatever)</p>
<p>EDIT:  True, the minutes must be arrays to store many values in the same minute, so do the same with minutes, letting it this way:</p>
<pre><code>if not mydict.has_key(hour):
    mydict[hour] = {}

if not mydict[hour].has_key(minute):
    # A list here, cause you don't have more keys
    mydict[hour][minute] = [] 

mydict[hour][minute].append(fields)
</code></pre>
<p>So the output should be this way:</p>
<pre><code>{1: {33: ["a value, undefinde,...", 22, "test1"], 34: [33, "test2", "test945723"]}}
</code></pre>
<p>EDIT II: The final code will be:</p>
<pre><code>def connection():
        os.chdir("record_output/")
        mydict = {}
        for files in glob.glob("*.csv"):
                fo = open(files, "r")
                data = fo.readlines()
                for lines in data:
                        lines = lines.split(',')
                        dateObject = datetime.strptime(lines[0],"%Y-%m-%d %H:%M:%S")
                        hour = dateObject.hour
                        minute = dateObject.minute
                        fields = lines[1:]

                        if not mydict.has_key(hour):
                                mydict[hour] = {}

                        if not mydict[hour].has_key(minute):
                                # A list here, cause you don't have more keys
                                mydict[hour][minute] = [] 

                        mydict[hour][minute].append(fields)
</code></pre>
<p>If don't works check your loop:</p>
<pre><code>fo = open(files, "r")
  data = fo.readlines()
  for lines in data:
    print lines
</code></pre>
<p>And try changing:</p>
<pre><code>  for row in data:
    lines = row.split(',')
</code></pre>
<p>with a new field called </p>
<pre><code>  for row in data:
    lines = row.split(',')
</code></pre>
<p>And put 'print's to debug the program.</p>
</div>
<span class="comment-copy">As a sidenote, check out the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> module instead of parsing the CSV by hand.</span>
<span class="comment-copy">csv it just an extention I gave in my shell environment. It could be txt as well or maybe nothing</span>
<span class="comment-copy">Edited and optimized for your requirements</span>
<span class="comment-copy">Thanks!! it finally works just fine!</span>
<span class="comment-copy">Thanks for your effort. I will try and get back to you.</span>
<span class="comment-copy">{1: {30: ['UNKNOWN', 'UNKNOWN', 'UNKNOWN', 'UNKNOWN', '10002']}}</span>
<span class="comment-copy">The above output its giving, its not giving for 00, 15 and 45 minute</span>
<span class="comment-copy">let me try your new edited version</span>
<span class="comment-copy">Its still giving me the same output, it just creates the hash of the first record of the csv and leaves the rest for some reason. Can you please edit my code above with your code so that I can make sure I am not making any mistake on my end. Thanks</span>
