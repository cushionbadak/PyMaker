<div class="post-text" itemprop="text">
<p>I'm trying to make byte frame which I will send via UDP. I have class <strong>Frame</strong> which has attributes <strong>sync</strong>, <strong>frameSize</strong>, <strong>data</strong>, <strong>checksum</strong> etc. I'm using hex strings for value representation. Like this:</p>
<pre><code>testFrame = Frame("AA01","0034","44853600","D43F")
</code></pre>
<p>Now, I need to concatenate this hex values together and convert them to byte array like this?!</p>
<pre><code>def convertToBits(self):
    stringMessage = self.sync + self.frameSize + self.data + self.chk
    return b16decode(self.stringMessage)
</code></pre>
<p>But when I print converted value I don't get the same values or I don't know to read python notation correctly:</p>
<pre><code>This is sync: AA01
This is frame size: 0034
This is data:44853600
This is checksum: D43F

b'\xaa\x01\x004D\x856\x00\xd4?'
</code></pre>
<p>So, first word is converted ok (AA01 -&gt; \xaa\x01) but (0034 -&gt; \x004D) it's not the same. I tried to use <strong>bytearray.fromhex</strong> because I can use spaces between bytes but I got same result. Can you help me to send same hex words via UDP?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python displays any byte that can represent a <em>printable ASCII character</em> as that character. <code>4</code> is the same as <code>\x34</code>, but as it opted to print the ASCII character in the representation.</p>
<p>So <code>\x004</code> is really the same as <code>\x00\x34</code>, <code>D\x856\x00</code> is the same as <code>\x44\x85\x36\x00</code>, and <code>\xd4?</code> is the same as <code>\xd4\x3f</code>, because:</p>
<pre><code>&gt;&gt;&gt; b'\x34'
'4'
&gt;&gt;&gt; b'\x44'
'D'
&gt;&gt;&gt; b'\x36'
'6'
&gt;&gt;&gt; b'\x3f'
'?'
</code></pre>
<p>This is just the <em>representation</em> of the bytes value; the value is <em>entirely correct</em> and you don't need to do anything else.</p>
<p>If it helps, you can visualise the <code>bytes</code> values as hex again using <a href="https://docs.python.org/3/library/binascii.html#binascii.b2a_hex" rel="nofollow"><code>binascii.hexlify()</code></a>:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; binascii.hexlify(b'\xaa\x01\x004D\x856\x00\xd4?')
b'aa01003444853600d43f'
</code></pre>
<p>and you'll see that <code>4</code>, <code>D</code>, <code>6</code> and <code>?</code> are once again represented by the correct hexadecimal characters.</p>
</div>
<span class="comment-copy">The string 4D is \x34\x44 so there is no problem, you just misread the output</span>
<span class="comment-copy">Thanks! This helped me a lot!</span>
