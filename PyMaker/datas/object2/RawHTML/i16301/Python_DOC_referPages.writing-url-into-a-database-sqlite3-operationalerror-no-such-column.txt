<div class="post-text" itemprop="text">
<p>I am trying to write in some URL into a sqlite database. I have gotten this to work without the URL. It even works if I replaces the  'Volumes/data/rc3/2/sdss/SDSS_r_0_0.fits' with a number .</p>
<pre><code>c.execute("INSERT INTO rc3 (ID,ra,dec,radius,PGC_number,new_ra, new_dec, new_radius,ufits,gfits,rfits,ifits,zfits,best,low,in_SDSS_footprint,clean,error)VALUES({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{})".format(n,pgc,ra,dec,radius,new_ra,new_dec,new_radius,2, 3, 4, 5, 6, 7,8,in_SDSS_footprint,clean,error))
</code></pre>
<p>It seems like it is mistakening the URL as a column as it is throwing the error: </p>
<pre><code>c.execute("CREATE TABLE rc3 (ID INT , PGC_number INT,ra REAL, dec REAL,radius REAL,new_ra REAL,new_dec REAL,new_radius REAL, ufits TEXT, gfits TEXT, rfits TEXT ,ifits TEXT, zfits TEXT, best TEXT, low TEXT,in_SDSS_footprint BIT ,clean BIT, error INT,PRIMARY KEY(ID))")
....
c.execute("INSERT INTO rc3 (ID,ra,dec,radius,PGC_number,new_ra, new_dec, new_radius,ufits,gfits,rfits,ifits,zfits,best,low,in_SDSS_footprint,clean,error)VALUES({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{})".format(0, 0.0075, 47.2744444444, 0.01999027436515, 2, 0, 0, 0, 'Volumes/data/rc3/2/sdss/SDSS_u_0_0.fits', 'Volumes/data/rc3/2/sdss/SDSS_g_0_0.fits', 'Volumes/data/rc3/2/sdss/SDSS_r_0_0.fits', 'Volumes/data/rc3/2/sdss/SDSS_i_0_0.fits', 'Volumes/data/rc3/2/sdss/SDSS_z_0_0.fits', 'Volumes/data/rc3/2/sdss/SDSS_0_0_BEST.tiff ', 'Volumes/data/rc3/2/sdss/SDSS_0_0_LOW.tiff ', 0, 1, 0))
sqlite3.OperationalError: no such column: Volumes 
</code></pre>
<p>but I am not sure what to do. Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Never try to create SQL statements by embedding the values with string formatting commands. Instead, use SQL parameters.</p>
<p>Instead of this:</p>
<pre><code>c.execute("INSERT INTO breakfast (id, spam, eggs) VALUES({}, {}, {})".format(
    id, spam, eggs))
</code></pre>
<p>â€¦ do this:</p>
<pre><code>c.execute("INSERT INTO breakfast (id, spam, eggs) VALUES(?, ?, ?)",
          id, spam, eggs)
</code></pre>
<p>This is explained at the very top of the <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow"><code>sqlite3</code></a> documentation. But briefly, the reasons to do things this way are (in rough order of importance):</p>
<ul>
<li>Avoids <a href="http://xkcd.com/327/" rel="nofollow">SQL injection</a> if any of the data may come from malicious or incompetent users or external programs.</li>
<li>Means you don't have to worry about how to quote/escape strings, format numbers, etc.</li>
<li>Makes errors from inappropriate value types clearer and easier to debug.</li>
<li>Allows the SQL engine to see your 1000 separate inserts as the exact same statement with different values, instead of 1000 completely different statements, making it more likely it can cache or otherwise optimize.</li>
<li>Allows you to use <code>executemany</code>, which can be more readable than a loop, and also may give the SQL engine more optimization opportunities.</li>
</ul>
<p>In your case, it's the second one you were running into. You're trying to use the string <code>Volumes/data/rc3/2/sdss/SDSS_r_0_0.fits</code> as a value. That's an expression, asking sqlite to divide the <code>Volumes</code> column by the <code>data</code> column, divide that by <code>rc3</code>, etc. If you wanted the string to be stored as a string, you need to put it in quotes.</p>
<p>But, again, don't try to fix this by adding quotes; just use parameters.</p>
</div>
