<div class="post-text" itemprop="text">
<pre><code>def increment(n):
    """Return n+1
    increment(int) -&gt; int
    """
    return n+1

def double(n):
    """Return 2*n
    double(int) -&gt; int
    """
    return 2*n
</code></pre>
<p>How would I go about writing a single assignment statement that uses both of these functions to assigns 2*(n+1) to the variable m.</p>
</div>
<div class="post-text" itemprop="text">
<p>We have two functions, let's look at what they do:</p>
<pre><code>double(n) -&gt; 2 * n
increment(n) -&gt; n + 1
</code></pre>
<p>So, in the <a href="https://docs.python.org/2/tutorial/interpreter.html" rel="nofollow">REPL or "Interactive Mode"</a> (or in <a href="https://docs.python.org/3/library/idle.html" rel="nofollow">IDLE</a>):</p>
<pre><code>n = 2
double(n)
&gt; 4
increment(n)
&gt; 3
n
&gt; 2              # note that n was not reassigned
</code></pre>
<p>Now, looking at the equation <code>m = 2*(n+1)</code>, we can see that it can be rewritten like so:</p>
<pre><code>let n1 = n + 1
     m = 2 * n1
</code></pre>
<p>And applying the definitions from above:</p>
<pre><code>n1 = increment(n)
m = double(n1)
# and, by substitution of n1
m = double(increment(n))
</code></pre>
<p>Trying it out interactively:</p>
<pre><code>n = 4
m = double(increment(n))
&gt; 10
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about this?</p>
<pre><code>def combo(n):
    return double(increment(n))
</code></pre>
</div>
<span class="comment-copy">What have you tried? This is a fairly straightforward exercise and you won't learn anything if you're just handed the answer.</span>
<span class="comment-copy">explain it better. Besides it looks trivial</span>
<span class="comment-copy"><code>m = call_those_functions</code>. Hint: <code>2*n</code> -&gt; <code>double(n)</code>, <code>n+1</code> -&gt; <code>increment(n)</code>. Then just put them together in the right way.. I recommend playing around with (calling) these functions in IDLE (or similar REPL).</span>
<span class="comment-copy">@Greg Hewgill: you have a point, but I disagree. Sometimes, the best way to learn is to see the code.</span>
<span class="comment-copy">@SebasSBM: Please see <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/08/04/9856634.aspx" rel="nofollow noreferrer">blogs.msdn.com/b/oldnewthing/archive/2009/08/04/9856634.aspx</a></span>
