<div class="post-text" itemprop="text">
<p>Consider the following function:</p>
<pre><code>def test(first, second = None, third = None):
    print first
    print second
    print third

test('one', third = 'three')
</code></pre>
<p>I want to be able to call it with a list I build up with some logic (non-working pseudo code):</p>
<pre><code>arguments = ['one']
arguments.append(third = 'three')

test(arguments)
</code></pre>
<p>How can this be achieved?</p>
</div>
<div class="post-text" itemprop="text">
<p>This</p>
<pre><code>arguments.append(third = 'three')
</code></pre>
<p>is not possible. Use a dictionary:</p>
<pre><code>args = {"third":"three"}
test("one", **args)
</code></pre>
<p>Output:</p>
<pre><code>one
None
three
</code></pre>
<p><strong>Edit:</strong> I don't see a point in using a separate structur for the positional arguments. As long as there is only one such argument, <code>*["one"]</code> is not shorter than <code>"one"</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a list for the positional arguments, and a dictionary for the named arguments. (c.f. <a href="https://docs.python.org/3/tutorial/controlflow.html#tut-unpacking-arguments" rel="nofollow">The Python Tutorial 4.7.4. Unpacking Argument Lists</a>)</p>
<pre><code>positionalArguments = ['one']
namedArguments = {
  'third': 'three'
}

test(*positionalArguments, **namedArguments)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you cannot do </p>
<pre><code>arguments.append(third = 'three')
</code></pre>
<p>This is not a valid python instruction. What you are looking for is a dictionary</p>
<pre><code>arguments = {'first': 'one'}
arguments['third'] = 'three'
</code></pre>
<p>The good news is that in python, you are able to call a function by passing a list of positional arguments and/or a list of named arguments. You would use the magic <a href="http://markmiyashita.com/blog/python-args-and-kwargs/" rel="nofollow">* and ** symbols</a></p>
<ul>
<li>The * operator let you pass positional arguments as a list </li>
<li>The ** operator let you pass named arguements as a dictionary</li>
</ul>
<p>Following your example, you would do the following:</p>
<pre><code>pargs = ['one']
kwargs = {'third': 'three'}
test(*pargs, **kwargs)
</code></pre>
</div>
<span class="comment-copy">dictionary is better option than list</span>
<span class="comment-copy">it's <code>*["one"]</code> :) And it's actually usefull: Thing of the case where the arguments are supplied by a dynamic source like a CLI or a web-service. You do not know in advance how many positional and named arguments will be passed :)</span>
<span class="comment-copy">Sorry, typo. I don't doubt that this syntax is useful. But for the current question it feels like overkill.</span>
<span class="comment-copy">Well, I would also argue that <code>**{"third": "three"}</code> is not shorted than <code>third='three'</code> (Completely useless comment :))</span>
