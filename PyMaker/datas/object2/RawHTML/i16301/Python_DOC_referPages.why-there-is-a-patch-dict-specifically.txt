<div class="post-text" itemprop="text">
<p>I have found that the python internal deals with dictionary object different as the other object like function and list.</p>
<p>Does anyone have idea why python mock library (1.0.1) has a patch.dict specifically besides the existing patch and patch.object? </p>
</div>
<div class="post-text" itemprop="text">
<pre><code> patch.dict() for setting values in a dictionary just during a scope and restoring the dictionary to its original state when the test ends:
</code></pre>
<blockquote>
<blockquote>
<blockquote>
<p>foo = {'key': 'value'}</p>
<p>original = foo.copy()</p>
<p>with patch.dict(foo, {'newkey': 'newvalue'}, clear=True):</p>
<p>assert foo == {'newkey': 'newvalue'}</p>
<p>assert foo == original</p>
</blockquote>
</blockquote>
</blockquote>
<p>See the <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow">reference</a></p>
</div>
<span class="comment-copy">I don't know what you mean by the first sentence. For the second, it's because there are useful things you can do in mocking a dictionary that you can't do with other things (like add key-value pairs to it).</span>
