<div class="post-text" itemprop="text">
<p>I'm working with django 1.6 and postgresql. I have multiple models with similar fields that look like:</p>
<pre><code>class MU2(models.Model):
    name = models.CharField(max_length=200,default="",unique=True)
    addresses = models.CharField(max_length=200,default="")
    email = models.CharField(max_length=200,default="")
    ......
</code></pre>
<p>Is it possible to pass a model name in as a parameter? in pseudocode I would like to </p>
<pre><code>def savePractices(practices, MODELNAME):

    from ml1.models import MODELNAME

    for practice in practices:
        p =MODELNAME(**practice)
        try:
            p.save()
        except IntegrityError:
            print "error"

    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can even do as following:</p>
<pre><code>def savePractices(practices, MODELNAME):

    from ml1 import models

    dynamic_model = getattr(models, MODELNAME)
    for practice in practices:
        p = dynamic_model(**practice)
        try:
            p.save()
        except IntegrityError:
            print "error"

    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>get_model</code> in <code>django.db.models.loading</code> module is what you're looking for:</p>
<pre><code>from django.db.models.loading import get_model

def savePractices(practices, model_name):

    model = get_model('YOUR_APP_NAME', model_name)

    (...)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>May be better to do this:</p>
<pre><code>class ModelMix(object):

    @classmethod
    def savePractices(cls, practices):
        for practice in practices:
            p = cls(**practice)
            try:
                p.save()
            except IntegrityError:
                print "error"

        return


class MU1(models.Model, ModelMix):
    name = models.CharField(max_length=200,default="",unique=True)
    addresses = models.CharField(max_length=200,default="")
    email = models.CharField(max_length=200,default="")

class MU2(models.Model, ModelMix):
    name = models.CharField(max_length=200,default="",unique=True)
    addresses = models.CharField(max_length=200,default="")
    email = models.CharField(max_length=200,default="")

MU1.savePractices(practices)
MU2.savePractices(practices)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>__import__</code> or <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow"><code>importlib</code></a> to load module dynamically.</p>
<p>It will load module from modulename.</p>
</div>
<span class="comment-copy">I went with this because it is the closest to my existing code, Thanks - Bill</span>
