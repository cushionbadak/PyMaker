<div class="post-text" itemprop="text">
<p>I'm using <strong>Python 3</strong> and I'm looking for a way for the program to ask 2 user inputs in a single line.</p>
<p>Example of the output I'm looking for:</p>
<pre><code>enter first input:                      enter second input:
</code></pre>
<p>However the only way I know for asking multiple user inputs is this:</p>
<pre><code>first_input = input("enter first input: ")
second_input = input("enter second input: ")

#output
enter first input:
enter second input: 
</code></pre>
<p>Is the one I'm looking for possible? If yes, can someone teach me how to do that?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>choices = raw_input("Please enter two input and seperate with space")
value1, value2 = choices.split(" ")
</code></pre>
<p>Now if you enter <code>1 56</code> or something like this <code>value1</code> will be <code>1</code> and <code>value2</code> will be <code>56</code>.
You can choose another seperator for <code>split</code> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is largely environment-dependent.</p>
<p>The following is a windows-only solution:</p>
<pre><code>from ctypes import *
from ctypes import wintypes

def get_stderr_handle():
    # stdin handle is -10
    # stdout handle is -11
    # stderr handle is -12
    return windll.kernel32.GetStdHandle(-12)

def get_console_screen_buffer_info():
    csbi_ = CONSOLE_SCREEN_BUFFER_INFO()
    windll.kernel32.GetConsoleScreenBufferInfo(get_stderr_handle(), byref(csbi_))
    return csbi_

class CONSOLE_SCREEN_BUFFER_INFO(Structure):
    """struct in wincon.h."""
    _fields_ = [
    ("dwSize", wintypes._COORD),
    ("dwCursorPosition", wintypes._COORD),
    ("wAttributes", wintypes.WORD),
    ("srWindow", wintypes.SMALL_RECT),
    ("dwMaximumWindowSize", wintypes._COORD),
]

csbi = get_console_screen_buffer_info()
first_input = input("enter first input: ")
cursor_pos = csbi.dwCursorPosition
cursor_pos.X = len("enter first input: ") + len(first_input) + 1
windll.kernel32.SetConsoleCursorPosition(get_stderr_handle(), cursor_pos)
second_input = input("enter second input: ")
</code></pre>
<p>The following is a linux solution, which uses backspace characters. There are some implementations of <code>get_terminal_size()</code> <a href="https://stackoverflow.com/a/6550596/1115577">here</a> if you're using an older python version.</p>
<pre><code>from shutil import get_terminal_size
first_input = input("enter first input: ")
second_input = input("\b"*(get_terminal_size()[0] - len("enter first input: ") - len(first_input) - 1) + "enter second input: ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This may help </p>
<pre><code>import sys
inputarr=sys.stdin.read().split()
print("input 1:",inputarr[0])
print("input 2:",inputarr[1])
</code></pre>
<p>you can use any other delimiter </p>
<p>notify me me if this not what you are looking for !</p>
</div>
<span class="comment-copy">ask user to enter two numbers separated by space and then press enter.Then Split() :)</span>
<span class="comment-copy">This is possible, but it requires <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer">a lot more effort</a>; something not easy if you are beginning. Are you sure you want to do this?</span>
<span class="comment-copy">hmm...i think i'll give it a shot...can you show me how with explanations in between the codes???</span>
<span class="comment-copy">This doesn't do exactly what the asker wants.</span>
<span class="comment-copy">This is alternative way which I know. Let him decide that.</span>
<span class="comment-copy">well this just helped my friend, thanks for that...however, i'm looking for a different one</span>
<span class="comment-copy">Okay, no problem.</span>
<span class="comment-copy">Also works on Windows. Nice hack!</span>
<span class="comment-copy">didn't work for me...the output was a series of boxes that moves when i click between them</span>
<span class="comment-copy">What terminal you using, and which os?</span>
<span class="comment-copy">by terminal you mean pc? ..i'm using an asus laptop with windows 7 as os ...i've got a question about your answer, is the one i'm looking for really that much dependent on the environment of my terminal; or is this 1 of the few answers i'm going to encounter?</span>
<span class="comment-copy">Try the windows only solution, tested on windows 7.</span>
<span class="comment-copy">can you explain how this works?</span>
<span class="comment-copy">Its easy sys includes System-specific parameters and functions and stdin is the file object for interpreterâ€™s standard input stream . sys.stdin.read() will read from standard input till EOF is reached while sts.stdin will read one line at a time .</span>
<span class="comment-copy">hmm..okay..but, i didn't get the inputarr[] part</span>
<span class="comment-copy">Sorry i screwed up :P it has to be sys.stdin.read().split()  "sys.stdin.read()" reads the input file till EOF is reached and split() without any parameter is similar to split(" ") ie it will remove all the white-spaces and put the elements on a list</span>
