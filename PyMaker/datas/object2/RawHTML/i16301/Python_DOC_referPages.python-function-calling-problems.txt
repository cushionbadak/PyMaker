<div class="post-text" itemprop="text">
<p>I just started learning python 2 days ago and Im trying to make some kind of text based adventure to practice , the only problem Im having is with functions:</p>
<pre><code>def menu_op():
    print('1- Action 1')
    print('2- Action 2')
    choice= input('Choose action: ')
    return choice

def action_op(x):
    if x == 1:
        print('You chose action 1')
    if x == 2:
        print('You chose action 2')

menu_op()
action_op(menu_op())
</code></pre>
<p>The idea behind this is to call the menu function , which gives a value equal to user's input , which gets fed into the action function when the latter is called and does something depending on the user choice.</p>
<p>Cant tell what im doing wrong though , as the code doesnt seem to work. 
Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are using Python 3.x.  In that version, <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> returns a string object like <code>raw_input</code> did in Python 2.x.  This means that the return value of the function <code>menu_op</code> will always be a string.</p>
<p>Because of this, you need to compare <code>x</code> with strings rather than integers:</p>
<pre><code>if x == '1':
    print('You chose action 1')
elif x == '2':
    print('You chose action 2')
</code></pre>
<p>I also changed the second <code>if</code> to <code>elif</code> since <code>x</code> could never equal both <code>'1'</code> and <code>'2'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're calling <code>menu_op()</code> function twice. The first time it gets called choice is not passed to <code>action_op()</code></p>
<pre><code>menu_op()      #return is not catched
action_op(menu_op())
</code></pre>
<p>And the value returned from <code>menu_op</code> is a string so you should compare strings in <code>action_op</code> instead of comparing <code>x</code> with integers</p>
<pre><code>def action_op(x):
    if x == 1:
           ^^^  #should compare strings here -&gt;  x == "1"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>choice= int(input('Choose action: '))  # make choice an int to compare</code></p>
<pre><code>In [1]: 1 == "1"
Out[1]: False

In [2]: 1 == int("1")
Out[2]: True
</code></pre>
<p><code>input</code> is a string and you are comparing <code>if x == 1</code> where <code>x</code> is <code>"1"</code></p>
</div>
<span class="comment-copy"><i>"doesnt [sic] seem to work"</i> is not a helpful problem description. Errors (provide full traceback)? Unexpected outputs (provide inputs and expected and actual outputs)? Why do you call <code>menu_op</code> twice?</span>
<span class="comment-copy">This is indeed the correct answer thank you very much , I would have swore raw_input was used to return a string !! Thanks for the quick answer</span>
<span class="comment-copy"><code>raw_input</code> does not exist in Python 3.</span>
<span class="comment-copy">@Trenloco if you're used to Python 2.x, and you're now working in Python 3.x, you should absolutely take a look at the list of changes. Python 3.x is not backwards compatible by design. <a href="https://docs.python.org/3.0/whatsnew/3.0.html" rel="nofollow noreferrer">docs.python.org/3.0/whatsnew/3.0.html</a></span>
