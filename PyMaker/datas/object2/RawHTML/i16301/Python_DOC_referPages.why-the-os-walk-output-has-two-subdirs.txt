<div class="post-text" itemprop="text">
<p>my program is </p>
<pre><code>import os
from traceback import format_exc
import pdb
des="testdir"
def generate_cabfile(folder):
    for parent,dirs, files in os.walk(folder):
        print parent
        print dirs
        print files
        print "-----------------"
        for file in files:
            file_path = os.path.join(parent, file)
        for dir in dirs:
            chile_folder = os.path.join(parent, dir)
            generate_cabfile(chile_folder)
    print "this is over"
generate_cabfile(des)
</code></pre>
<p>my dir tree is </p>
<blockquote>
<p>testdir/1.txt<br/>
  testdir/2.txt<br/>
  testdir/mu/a.txt    </p>
</blockquote>
<p>the output is very strange,which has two dir 'mu'
output：</p>
<pre><code>testdir
['mu']
['1.txt', '2.txt']
-----------------
testdir/mu
[]
['a.txt']
-----------------
this is over
testdir/mu
[]
['a.txt']
-----------------
this is over
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow"><code>os.walk</code></a> already visits <em>all</em> subdirectories it encounters (that’s why it’s called “walk”; it walks through the whole directory structure). So you do not need to recursively call your function again for every directory you see.</p>
<p>Your logic would be appropriate if you were using <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow"><code>os.listdir</code></a> to just give you the contents of a single directory. In that case, you would have to recursively list the contents for every subdirectory too.</p>
</div>
<span class="comment-copy">You seem to call recursively <code>generate_cabfile</code> on each subdir. That's why it's first called with <code>testdir</code> as a root, then recalled with <code>mu</code> as root. If you had another directory in <code>testdir</code> you would have another <code>this is over</code> output</span>
