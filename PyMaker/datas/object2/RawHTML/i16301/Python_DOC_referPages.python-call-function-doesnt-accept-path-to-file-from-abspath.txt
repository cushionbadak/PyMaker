<div class="post-text" itemprop="text">
<p>Probably this question is obvious, so excuse me.</p>
<p>I want to execute shell command (Windows 8.1, Python 3.4) to open IE with SVG file.
I do it like this:</p>
<pre><code># imgpath = 'C:/Users/Vladimir/dot-code\\..\\graph1.svg'
tmp = FS.abspath(imgpath)
# tmp = 'C:\\Users\\Vladimir\\graph1.svg'
subprocess.call(["start", "", tmp])
</code></pre>
<p>Looks fine, but I get an exception inside call() - FileNotFoundError: [WinError 2] File not found.</p>
<p>I suppose the root of evil is double slashes in "tmp". How can I fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should not pass the empty string. (I guess, you meant to separate the command and argument.). Remove blank string. Just pass <code>start</code> and the path.</p>
<p>In addition to that <code>start</code> is not a real program, but a command builtin to <code>cmd</code>. Use <code>cmd /c</code>:</p>
<pre><code>subprocess.call(['cmd', '/c', 'start', tmp])
</code></pre>
<p>or pass <code>shell=True</code> keyword argument:</p>
<pre><code>subprocess.call(['start', tmp], shell=True)
</code></pre>
<p>BTW, on windows, you can use <a href="https://docs.python.org/3/library/os.html#os.startfile" rel="nofollow"><code>os.startfile</code></a>:</p>
<pre><code>import os
os.startfile(tmp)
</code></pre>
</div>
<span class="comment-copy">Why your imgpath is different from your tmp path?</span>
<span class="comment-copy">I generate images with GraphViz. Dot-code is in 'C:/Users/Vladimir/dot-code/graph1.dot'. I save generated images in previous directory.</span>
<span class="comment-copy">It doesn't work. According to <a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/start.mspx?mfr=true" rel="nofollow noreferrer">docs</a> first arg for start is "title". But thanks for startfile!</span>
<span class="comment-copy">@Vladimir, "title" is optional. If you specify only one argument that is interpreted as <code>filename</code>.</span>
<span class="comment-copy">@Vladimir, If <code>subprocess.call</code> solution does not work, there two option: (1) using <code>shell=True</code>: <code>subprocess.call(['start', tmp], shell=True)</code>. (2) explicitly call <code>cmd.exe</code>: <code>subprocess.call(['cmd', '/c', 'start', tmp])</code>.  I just updated the answer to include this.</span>
<span class="comment-copy">shell=True has fixed it! Thank you!</span>
<span class="comment-copy">@Vladimir, You're welcome. Happy python!</span>
