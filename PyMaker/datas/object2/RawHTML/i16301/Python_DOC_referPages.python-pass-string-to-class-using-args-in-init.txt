<div class="post-text" itemprop="text">
<p>I'm trying to learn python and wanted to attempt having multiple classes interact with each other. I want to store a string from class A in a variable of class b. I have been trying to use *args because I call the class other times without arguments. I cant seem to figure it out. I keep coming up with dead ends.</p>
<p>Here is my code</p>
<pre><code>#!/usr/bin/python

# import modules used here
import sys
# import encrypt
# import storage

class Storage(object):

    def __init__(self, *args):
        if len(args) &gt; 1:
            store(args[0].usr_string)
        self.data = {}

    def store(var):
        Storage().data[len(data)] = [var]
        print "store function successfully called. stored: %s" % (var)

    def retrieve(self):
        return str(Storage().data.items())
        print "retrieve function successfully called"


class Dialogue(object):
    # global usr_string

    def __init__(self):
        self.variable = 1

    def welcome(self):
        print 'Would you like to store a new string? (1): '
        print 'Would you like to view your stored strings? (2): '
        print 'Would you like to terminate this session? (3): '
        # prprint 'usr_string is now:'+get_new_stringint 'usr_string is now:'+usr_string
        return raw_input(': ')

    def new_string(self):
        print 'You may type your string in below'
        return raw_input(': ')

    # def disp_string_list(self):
    #     # list = defg.retrieve()
    #     print str(list)

def main():

    def __init__(self):
        self.usr_string
        self.selec

    selec = Dialogue().welcome()

    if int(selec) == 1: #store new string
        main().usr_string = Dialogue().new_string() #requests usr for string
        tempObj = main()
        Storage(tempObj)
        """ passes main object to Storage class to store main.usr_string"""
        main() #return to menu

    elif int(selec) == 2: #view stored string
        temp = Storage().retrieve()
        print temp
        # Dialogue().disp_string_list() #recall list of strings from storage
        main() #return to menu

    else: #exit on bad response or quit
        sys.exit()

if __name__ == '__main__': #call main func after module fully loads
    main()
</code></pre>
<p>Can anyone tell me why Storage() is not seeing my argument?
Sorry for the code length. I probably should have made an example.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are confusing classes with object instances. </p>
<pre><code>class Storage(object):
    def __init__(self):
        self.data = []

class Dialogue(object):
    def __init__(self):
        self.msg = 'hello world'


def main():
    d = Dialogue()
    s = Storage()
    s.data.append(d.msg)
    print s.data

if __name__ == '__main__':
    main()
</code></pre>
<p>By the way, when you call main() from  within main(), it's a recursion not a return.</p>
</div>
<span class="comment-copy">Please read the tutorial about <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">classes</a>. You are constantly creating new Dialogue and Storage objects, so you are not sharing anything.</span>
<span class="comment-copy">I have been up too long I think. I read about global/local variable as well as now init and self work. Then I noticed how I forgot main was only a function. You are correct about the recursion as well. If you want, here is the code after I corrected my issues.  <a href="http://pastebin.com/5ygZzZeE" rel="nofollow noreferrer">pastebin.com/5ygZzZeE</a></span>
