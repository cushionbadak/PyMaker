<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/14091387/creating-a-dictionary-from-a-csv-file">Creating a dictionary from a CSV file</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I would like to know to load this csv file:</p>
<pre><code>Epitope,ID,Frequency,Assay

AVNIVGYSNAQGVDY,123431,27.0,Tetramer

DIKYTWNVPKI,887473,50.0,3H

LRQMRTVTPIRMQGG,34234,11.9,Elispot
</code></pre>
<p>into a python dictionary like this:</p>
<pre><code>d = {'AVNIVGYSNAQGVDY': [ID[123431],Frequency[27.0],Assay['Tetramer']], 'DIKYTWNVPKI': [ID[887473],Frequency[50.0],Assay['3H']], 'LRQMRTVTPIRMQGG': [ID[34234],Frequency[11.9],Assay['Elispot']]}
</code></pre>
<p>I am working with lists since my actual file is bigger and I will append more values to those lists. </p>
</div>
<div class="post-text" itemprop="text">
<p>First, do you know about the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module? If not, read the introduction and examples to the point where you know how to get an iterable of rows. Print each one out, and they'll look something like this:</p>
<pre><code>['AVNIVGYSNAQGVDY', '123431', '27.0', 'Tetramer']
</code></pre>
<p>Or, if you use a <code>DictReader</code>:</p>
<pre><code>{'Epitope': 'AVNIVGYSNAQGVDY', 'ID': '123431', 
 'Frequency': '27.0', 'Assay': 'Tetramer'}
</code></pre>
<p>But you don't want a list of lists, or a list of dictionaries; you want a dictionary of lists, where each key is the <code>Epitope</code> from a row, and the corresponding value is the other three values, right? Soâ€¦ just insert each row into a dictionary that way:</p>
<pre><code>d = {}
with open(path, 'rb') as f:
    with csv.DictReader(f) as reader:
        for row in reader:
            d[row['Epitope']] = [row['ID'], row['Frequency'], row['Assay']]
</code></pre>
<p>(This would be more compact with a plain <code>reader</code> instead of a <code>DictReader</code>, but I think it's more readable this way if you come back to the code a few months from now.)</p>
<p>You also want to convert the values and use them as keys for another lookup, but that should be trivial. For example:</p>
<pre><code>            row_id = ID[int(row['ID'])]
            row_frequency = Frequency[float(row['Frequency'])]
            row_assay = Assay[row['Assay']]
            d[row['Epitope']] = [row_id, row_frequency, row_assay]
</code></pre>
<p>You can clean this up a bit by writing the row transformation as a function, and then just using a dictionary comprehension:</p>
<pre><code>with open(path, 'rb') as f:
    with csv.DictReader(f) as reader:
        d = {row['Epitope']: process_row(row) for row in reader}
</code></pre>
</div>
