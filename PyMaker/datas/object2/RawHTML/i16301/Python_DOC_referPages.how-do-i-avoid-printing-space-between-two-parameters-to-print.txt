<div class="post-text" itemprop="text">
<p>I have</p>
<pre><code>&gt;&gt;&gt;i=65536
&gt;&gt;&gt;print('The value of i is', i)
The value of i is 65536
</code></pre>
<p>How do I get the output (notice the lack of space between <code>is</code> &amp; <code>65536</code>)</p>
<pre><code>The value of i is65536
</code></pre>
<p>Without manipulating the strings prior to the <code>print()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>There are two choices.</p>
<p>First, you can use the <code>sep</code> keyword argument to the <a href="https://docs.python.org/3/library/functions.html#print"><code>print</code></a> function:</p>
<pre><code>print('The value of i is', i, sep='')
</code></pre>
<p>Or, better, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.format">string formatting</a> instead of a multi-argument <code>print</code> call:</p>
<pre><code>print('The value of i is{}'.format(i))
</code></pre>
<p>The second one is a lot more flexible, and more readable for any but the simplest cases. But either one works.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print('The value of i is', i, sep='')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>print('The value of i is{my_var}'.format(my_var=i))</code></p>
<p>or</p>
<p><code>print('The value of i is' + str(i))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Another way you could do it is:</p>
<p><code>i=65536
print('The value of i is', end='')
print(i)
</code></p>
<p>When you do:</p>
<pre><code>end=''
</code></pre>
<p>You are making it so it does not skip to the next like after finish that print statement.</p>
</div>
<span class="comment-copy">When you have a question like this, it's usually worth either typing <code>help(print)</code> into the interactive interpreter, or searching <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">the online docs</a>. (Or, if you use an IDE that has built-in help, search that instead.) Most answers—including this one—have an easy answer that you'll spot immediately.</span>
<span class="comment-copy">I am going with the python.org tutorial. Have not seen it there, maybe it comes later. Will remember the help(print) though, they did not mention that</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/12700558/print-without-space-in-python-3">Print without space in python 3</a></span>
<span class="comment-copy">@ItayMoav-Malimovka: I didn't realize it doesn't mention the <code>help</code> command early on. That really ought to be covered right when they introduce the interactive interpreter in chapter 2. You want to file a docs bug on that?</span>
<span class="comment-copy">Good answer, A!</span>
<span class="comment-copy">Although not pertinent to this Python 3.x tagged question, FWIW, another advantage of the <code>format()</code> string method approach is that it would work in Python 2.6+. Similarly, <code>print('The value of i is' + format(i))</code> which uses the built-in <code>format()</code> function also works in both versions.</span>
<span class="comment-copy">@martineau: Good point, which may be helpful to future searchers coming off the <code>[python]</code> tag rather than <code>[python-3.x]</code> (or just to someone who needs to write a single codebase that's 2.6+/3.2+, which is still a pretty common target). Except that with 2.6, you'd need <code>{0}</code> instead of <code>{}</code>; you need 2.7 or… I think 3.2?… to leave out the indices.</span>
<span class="comment-copy">You can't add strings to integers in Python.</span>
<span class="comment-copy">Sorry, forgot the <code>str</code>.  Corrected.</span>
