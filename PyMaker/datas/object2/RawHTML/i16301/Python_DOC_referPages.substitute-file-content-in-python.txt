<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16208206/confused-by-python-file-mode-w">Confused by python file mode “w+”</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I imagine this is a question asked already twenty thousand times, but I cannot understand why the file is always empty. I want to open a file, remove a string from the whole file and then rewrite the content, but the file ends up being empty. This is the code I use:</p>
<pre><code>f = open(filename,'w+')
f.write(f.read().replace(str_to_del,""))
f.close()
</code></pre>
<p>But the file is always empty. If I instead use "r+" then the content is appended and I have a duplicate text in the file. I'm using Python 3.3 . What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Opening the file in <code>w+</code> mode truncates the file. So, your <code>f.read()</code> is guaranteed to return nothing.</p>
<p>You can do this by opening the file in <code>r+</code> mode, reading it, then calling <code>f.seek(0)</code>, then writing. Or by opening the file in <code>r</code> mode, reading it, closing it, reopening it in <code>w</code> mode, and writing. Or, better, by writing a temporary file and moving it over the original (which gives you "atomic" behavior—no possibility of ending up with a half-written file).</p>
</div>
<span class="comment-copy">At the risk of looking very daft, aren't you replacing everything with an empty string?</span>
<span class="comment-copy">Yes, in fact. w+ empties the file, and I wonder why it works like that. f doesn't have the content of the file then, so what should I do?</span>
<span class="comment-copy">Short answer: open once in <code>'r'</code> to get the content, open again in <code>'w'</code> to replace the existing content.</span>
<span class="comment-copy">@Novalink: If you don't know why <code>w+</code> mode is emptying the file, read the documentation on the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>open</code></a> function (or <code>help(open)</code> in an interactive session; it will explain what the modes mean.</span>
<span class="comment-copy">@Novalink that's just the tutorial, you want the library reference: <a href="https://docs.python.org/3.4/library/functions.html#open" rel="nofollow noreferrer">docs.python.org/3.4/library/functions.html#open</a></span>
<span class="comment-copy">Now I have put f.seek(0) as you said but I have some junk lines in the end every time - instead of having 50 lines before and after, I have then 60 lines.. I don't understand</span>
<span class="comment-copy">@Novalink: When you seek to 0 in a file that's, say, 12000 bytes long, then write 10000 bytes, that overwrites the first 10000 bytes of the file, and leaves the other 2000 behind. You can fix that by using <code>f.truncate()</code> after you're done writing. But again, it would be better to write to a temporary file and move it over the original, instead of trying to modify the existing file in-place.</span>
<span class="comment-copy">the bytes rewritten are the same</span>
<span class="comment-copy">@Novalink: In the example you gave us, you're replacing each occurrence of some non-empty string with the empty string, which means there can't <i>possibly</i> be the same number of bytes. If you have a different example that's working differently, give us an MCVE and we can debug that one.</span>
<span class="comment-copy">Sorry, I forgot - later a number is replaced but initially some strings are deleted. Anyway in the while I solved with a      " open(filename,'w+') " among the read and write (how to format code in comments?</span>
