<div class="post-text" itemprop="text">
<p>I want to print the string. In my code i am not getting the right string.</p>
<pre><code>line="\\python\001tag\file.txt"  
str=re.search(r"\[(0-9)+]",line)   (don't use raw_string here)

print str.group()
</code></pre>
<p>This gives nothing. I want to extract 001 from there.</p>
<p>Note: I don't want to use rawstring.because here user is getting the path from other resource. Is it possible to replace single slash by double slash to solve this problem</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">raw-string</a> so that escape sequences are not processed:</p>
<pre><code>sat = r"\\Python\001tag\file.txt"
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; sat = r"\\Python\001tag\file.txt"
&gt;&gt;&gt; sat
'\\\\Python\\001tag\\file.txt'
&gt;&gt;&gt; print(sat)
\\Python\001tag\file.txt
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Three errors: <code>'\001'</code> gives the codepoint in octal, actually the character at codepoint 1. Use double <code>\\</code> or raw-strings.
Second: <code>r'\['</code> escapes the '[', use double <code>\\</code> instead: <code>r'\\[+0-9()]'</code> (I have rearranged the characters in the set, so that it doesn't look like a expression group.
Third: You want to look at <code>str.group(0)</code> to get the whole matched string.</p>
</div>
<span class="comment-copy">Please don't over-tag; your question looks specific to Python 2, so it <i>certainly</i> doesn't need the <code>python-3.x</code> tag.</span>
<span class="comment-copy">so you now ask a totally different question! Open a new question, if you need a new answer.</span>
<span class="comment-copy">I didnt change the question. I explained the scenario. Because i cant able to use the raw string here</span>
<span class="comment-copy">do the strings always follow the same pattern?</span>
<span class="comment-copy">@PadraicCunningham yes</span>
<span class="comment-copy">I dont want to use raw strings here</span>
<span class="comment-copy">@gokul - Then you will need to double all of your backslashes: <code>sat = "\\Python\\001tag\\file.txt"</code>.</span>
<span class="comment-copy">If another person is passing the string like this "\\Python\001tag\file.txt". Here I want to search what string that person passed and in this i want to extract only the "001" number.how to do in this case?</span>
