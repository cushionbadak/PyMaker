<div class="post-text" itemprop="text">
<p>First of all, here are my two python files:</p>
<p>sred.py:</p>
<pre><code>import _thread,time

class Thread:

def __init__(self,time:int,say:str):

    self.time=time
    self.say=say


def create():
    id = _thread.get_ident() 


    for i in range(5):

        print("HALLO", id)

    return

from sred import Thread
import time,_thread

_thread.start_new_thread(Thread.create,())
</code></pre>
<p>The second one:
main.py</p>
<pre><code>from sred import Thread
import time,_thread

_thread.start_new_thread(Thread.create,())
</code></pre>
<p>when executing this it doesn't print anything out, why?</p>
<p>UPDATE:</p>
<pre><code>import _thread

class Thread:


    @classmethod
    def create():
        id = _thread.get_ident() 


        for i in range(5):
            print("HALLO", id)
        return
</code></pre>
<p>main.py:</p>
<pre><code>from sred import Thread
import time,_thread

_thread.start_new_thread(Thread().create,())
</code></pre>
<p>Is this now right, or is there still something wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>create</code> method is missing <code>self</code> as a parameter -- it looks like it should also be a  <code>@classmethod</code> if you want to call it as it's written now. Note that your <code>__init__</code> method is never getting called, because you never instantiate any <code>Thread</code> objects. You may want it to read:</p>
<pre><code>_thread.start_new_thread(Thread().create, ())
</code></pre>
<p>i.e., instantiate a thread, then pass its <code>create</code> method to be executed in the new thread. I'm not sure what's happening, but I suspect that something is erroring and the <a href="https://docs.python.org/3/library/_thread.html#_thread.start_new_thread" rel="nofollow">stacktrace is being suppressed</a> by something.</p>
<p>Also, you need to delete the space after the <code>for</code> statement -- it's significant, and it should be throwing you a syntax error about an unexpected indent. </p>
<p>EDIT:</p>
<p>This version runs on my machine:</p>
<pre><code>import _thread

class Thread:
    def create(self):
        id = _thread.get_ident() 

        for i in range(5):
            print("HALLO", id)
        return

_thread.start_new_thread(Thread().create, ())
</code></pre>
</div>
<span class="comment-copy">Why are you using <code>_thread</code> and not <code>threading</code>?</span>
<span class="comment-copy">is threading better?</span>
<span class="comment-copy">it just was in my book, so I used it</span>
<span class="comment-copy"><code>threading</code> is the high-level API, <code>_thread</code> is quite low-level (and as suggested by the leading underscore, is basically an implementation detail)</span>
<span class="comment-copy">What book says "import _thread"?</span>
<span class="comment-copy">Is the UPDATE what you meant?</span>
<span class="comment-copy"><code>create</code> still needs <code>cls</code> as a parameter. Your code as written should be throwing a bunch of errors -- make sure you're copying it with the correct indentation and with no extra linebreaks.</span>
<span class="comment-copy">I didn't get any errors, I also added cls now as a parameter and the output is still nothing.</span>
<span class="comment-copy">Your code as written in this thread will not run because of problems with indentation. I can't tell which of those problems are a result of the way you pasted it, and which are actually in your code. Please fix the indentation in your post and make sure you've posted exactly what you're running.</span>
<span class="comment-copy">I think I fixed the indentation now.</span>
