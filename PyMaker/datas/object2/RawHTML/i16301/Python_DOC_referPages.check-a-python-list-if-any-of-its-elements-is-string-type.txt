<div class="post-text" itemprop="text">
<p>I am trying to raise a <code>TypeError</code> if a list contains an element of string data type when a mixed type of list given. I was able to do this with the code below but I wonder if there is a better way to achieve the same result.</p>
<pre><code>numbers = [1, "two", 3, 4, 5]
myStrList = [x for x in numbers if isinstance(x, str)]
if len(myStrList) != 0:
    raise TypeError
else:
    #do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>numbers = [1, "two", 3, 4, 5]
if any(isinstance(x, str) for x in numbers):
    raise TypeError
else:
    #do something
</code></pre>
<p>Aside from the fact that there is less code, this solution is actually a lot more efficient than your current one.  This is because, instead of building an unnecessary list, it will lazily compute the result and only check as many items as are necessary.</p>
<hr/>
<p>Also, if you are using Python 2.x, then it might be better to test for instances of <a href="https://docs.python.org/2/library/functions.html#basestring" rel="nofollow"><code>basestring</code></a> rather than just <code>str</code>.  This will allow you to also catch any <a href="https://docs.python.org/2/library/functions.html#unicode" rel="nofollow"><code>unicode</code></a> strings that are inside the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Filtering the list for strings works too:</p>
<pre><code>L=[0, 0, 1, 2, 'a', 3, 0, 0, 'l']

if filter(lambda item: isinstance(item, str), L) != []:
  raise TypeError
else:
  #do something
</code></pre>
<p>If the filtered list is empty, no strings are in the original list.</p>
</div>
<span class="comment-copy">What do you mean with <i>is there any other way to do the check please</i>. Why do you want another way? What's the problem you are facing?</span>
<span class="comment-copy">Related:  <a href="http://stackoverflow.com/q/13252333/748858">stackoverflow.com/q/13252333/748858</a></span>
<span class="comment-copy">Just to avoid building an unnecessary list.....</span>
<span class="comment-copy">Wait a minute, raising a TypeError isn't just redundant? If at any point there's a string on the list the error will be raised whenever you try to operate on him.</span>
<span class="comment-copy">@Ben - Possibly.  But maybe the OP wants to fail early if a string is found inside the list.  For all we know, <code>#do something</code> could be something that is very labor intensive.  It looks like the OP wants to make sure that the list is "clean" before he proceeds.</span>
<span class="comment-copy">Thank you very much! Its working...I am using Python 3.4</span>
<span class="comment-copy">Then it should be a negated type of int, strings and ints are not the only data type python handles :)</span>
<span class="comment-copy">FYI, I am trying to calculate mean deviation in the else part of my code. Below is the full code</span>
