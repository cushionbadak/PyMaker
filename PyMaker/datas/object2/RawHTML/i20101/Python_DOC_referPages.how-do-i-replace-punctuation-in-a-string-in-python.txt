<div class="post-text" itemprop="text">
<p>I would like to <em>replace</em> (and not <em>remove</em>) all punctuation characters by " " in a string in Python.</p>
<p>Is there something efficient of the following flavour?</p>
<pre><code>text = text.translate(string.maketrans("",""), string.punctuation)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This answer is for Python 2 and will only work for ASCII strings:</p>
<p>The string module contains two things that will help you: a list of punctuation characters and the "maketrans" function.  Here is how you can use them:</p>
<pre><code>import string
replace_punctuation = string.maketrans(string.punctuation, ' '*len(string.punctuation))
text = text.translate(replace_punctuation)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Modified solution from <a href="https://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python">Best way to strip punctuation from a string in Python</a></p>
<pre><code>import string
import re

regex = re.compile('[%s]' % re.escape(string.punctuation))
out = regex.sub(' ', "This is, fortunately. A Test! string")
# out = 'This is  fortunately  A Test  string'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a more robust solution which relies on a regex exclusion rather than inclusion through an extensive list of punctuation characters.</p>
<pre><code>import re
print(re.sub('[^\w\s]', '', 'This is, fortunately. A Test! string'))
#Output - 'This is fortunately A Test string'
</code></pre>
<p>The regex catches anything which is not an alpha-numeric or whitespace character</p>
</div>
<div class="post-text" itemprop="text">
<p>Replace by <code>''?</code>.</p>
<p>What's the difference between translating all <code>;</code> into '' and remove all <code>;</code>?</p>
<p>Here is to remove all <code>;</code>:</p>
<pre><code>s = 'dsda;;dsd;sad'
table = string.maketrans('','')
string.translate(s, table, ';')
</code></pre>
<p>And you can do your replacement with translate.</p>
</div>
<div class="post-text" itemprop="text">
<p>In my specific way, I removed "+" and "&amp;" from the punctuation list:</p>
<pre><code>all_punctuations = string.punctuation
selected_punctuations = re.sub(r'(\&amp;|\+)', "", all_punctuations)
print selected_punctuations

str = "he+llo* ithis&amp; place% if you * here @@"
punctuation_regex = re.compile('[%s]' % re.escape(selected_punctuations))
punc_free = punctuation_regex.sub("", str)
print punc_free
</code></pre>
<p>Result: he+llo ithis&amp; place if you here</p>
</div>
<div class="post-text" itemprop="text">
<p>This workaround works in python 3: </p>
<pre><code>import string
ex_str = 'SFDF-OIU .df  !hello.dfasf  sad - - d-f - sd'
#because len(string.punctuation) = 32
table = str.maketrans(string.punctuation,' '*32) 
res = ex_str.translate(table)

# res = 'SFDF OIU  df   hello dfasf  sad     d f   sd' 
</code></pre>
</div>
<span class="comment-copy">s=s.replace('old', 'new')</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python">Best way to strip punctuation from a string in Python</a></span>
<span class="comment-copy">what's the difference between REMOVE vs REPLACE with nothing??</span>
<span class="comment-copy">no, replace with " " (whitespace)</span>
<span class="comment-copy">This is the fastest solution, easily beating the regular expression option.</span>
<span class="comment-copy">thanks, this is what i was loking for :)</span>
<span class="comment-copy">By far the best answer - fast and complete. :-)</span>
<span class="comment-copy">in python 3 use the following: str.translate()   <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.translate</a></span>
<span class="comment-copy">How would you keep apostrophes, for example in the word don't? I don't want the apostrophes stripped out so that I am left with dont.</span>
<span class="comment-copy">You can remove the apostrophe from string.punctuation (which is in turn just a string containing all punctuation characters). <code>string.punctuation.replace("'", "")</code> leads to ` '!"#$%&amp;()*+,-./:;&lt;=&gt;?@[\]^_<code>{|}~'</code></span>
<span class="comment-copy">Thanks! That works.</span>
<span class="comment-copy">who knows why i can't use the code-style sometimes?</span>
