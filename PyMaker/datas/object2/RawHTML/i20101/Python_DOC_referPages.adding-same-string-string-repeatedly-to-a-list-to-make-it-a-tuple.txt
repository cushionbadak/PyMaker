<div class="post-text" itemprop="text">
<p>I'm trying to combine a string with a series of numbers as tuples to a list.</p>
<p>For example, starting with:  </p>
<pre><code>a = [12,23,45,67,89]  
string = "John"  
</code></pre>
<p>I want to turn that into:</p>
<pre><code>tuples = [(12,'John'),(23,'John'),(45,'John'),(67,'John'),(89,'John')]
</code></pre>
<p>I tried:</p>
<pre><code>string2 = string * len(a)
tuples = zip(a, string2)
</code></pre>
<p>but this returned:</p>
<pre><code>tuples = [(12,'J'), (23,'o'), ...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; a = [12,23,45,67,89]
&gt;&gt;&gt; string = "John"
&gt;&gt;&gt; my_tuple = [(i,string) for i in a]
&gt;&gt;&gt; print my_tuple
</code></pre>
<p>You can iterate over each position within a string so <code>zip</code> causes the behavior you were seeing previously.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to use <code>zip()</code>, then create a list for your string variable before multiplying:</p>
<pre><code>string2 = [string] * len(a)
tuples = zip(a,string2)
</code></pre>
<p><code>string * len(a)</code> creates <em>one long string</em>, and <code>zip()</code> then iterates over that to pull out individual characters. By multiplying a list instead, you get a list with <code>len(a)</code> separate references to the <code>string</code> value; iteration then gives you <code>string</code> each time.</p>
<p>You could also use <a href="https://docs.python.org/3/library/itertools.html#itertools.repeat" rel="nofollow noreferrer"><code>itertools.repeat()</code></a> to give you <code>string</code> repeatedly:</p>
<pre><code>from itertools import repeat

tuples = zip(a, repeat(string))
</code></pre>
<p>This avoids creating a new list object, potentially quite large.</p>
</div>
<span class="comment-copy">Perfect, thank you very much</span>
<span class="comment-copy">@Daniel You're welcome. Also, I would recommend using a name other than tuple - tuple is the name of the function which is used by python to create tuples, so it's best not to overwrite it.</span>
<span class="comment-copy">Yeah, I just used "Tuple" on here just to be more clear rather than the ones I am currently working with.</span>
