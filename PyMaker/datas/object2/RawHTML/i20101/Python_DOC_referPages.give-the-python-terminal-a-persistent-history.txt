<div class="post-text" itemprop="text">
<p>Is there a way to tell the interactive Python shell to preserve its history of executed commands between sessions?</p>
<p>While a session is running, after commands have been executed, I can arrow up and access said commands, I'm just wondering if there is some way for a certain number of these commands to be saved until the next time I use the Python shell.</p>
<p>This would be very useful since I find myself reusing commands in a session, that I used at the end of the last session.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure you can, with a small startup script. From <a href="http://docs.python.org/tutorial/interactive.html" rel="noreferrer">Interactive Input Editing and History Substitution</a> in the python tutorial:</p>
<pre><code># Add auto-completion and a stored history file of commands to your Python
# interactive interpreter. Requires Python 2.0+, readline. Autocomplete is
# bound to the Esc key by default (you can change it - see readline docs).
#
# Store the file in ~/.pystartup, and set an environment variable to point
# to it:  "export PYTHONSTARTUP=~/.pystartup" in bash.

import atexit
import os
import readline
import rlcompleter

historyPath = os.path.expanduser("~/.pyhistory")

def save_history(historyPath=historyPath):
    import readline
    readline.write_history_file(historyPath)

if os.path.exists(historyPath):
    readline.read_history_file(historyPath)

atexit.register(save_history)
del os, atexit, readline, rlcompleter, save_history, historyPath
</code></pre>
<p>From Python 3.4 onwards, <a href="https://docs.python.org/3/whatsnew/3.4.html#other-improvements" rel="noreferrer">the interactive interpreter supports autocompletion and history out of the box</a>:</p>
<blockquote>
<p>Tab-completion is now enabled by default in the interactive interpreter on systems that support <code>readline</code>. History is also enabled by default, and is written to (and read from) the file <code>~/.python-history</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://ipython.org/">IPython</a>.</p>
<p>You should, anyway, because it's awesome: persistent command history is just one of the many many ways it's better than the stock Python shell.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is also required for Python 3 when using a <a href="https://github.com/pypa/virtualenv/issues/355" rel="nofollow noreferrer">virtual environment</a>.</p>
<p>I use a slightly different version which keeps a history file per virtual environment:</p>
<pre><code>import sys

if sys.version_info &gt;= (3, 0) and hasattr(sys, 'real_prefix'):  # in a VirtualEnv
    import atexit, os, readline, sys

    PYTHON_HISTORY_FILE = os.path.join(os.environ['VIRTUAL_ENV'], '.python_history')
    if os.path.exists(PYTHON_HISTORY_FILE):
        readline.read_history_file(PYTHON_HISTORY_FILE)
    atexit.register(readline.write_history_file, PYTHON_HISTORY_FILE)
</code></pre>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/947810/how-to-save-a-python-interactive-session">How to save a Python interactive session?</a></span>
<span class="comment-copy">Thank you, this is what I was looking for!</span>
<span class="comment-copy">I have several python virtual environments and wanted to be able to enable persistent history. So used this approach, but changed the location of the <code>.pyhistory</code> file to the virtual environment folder instead of user home folder.</span>
<span class="comment-copy">Extra awesome: I just noticed it has Python 3 support now!</span>
