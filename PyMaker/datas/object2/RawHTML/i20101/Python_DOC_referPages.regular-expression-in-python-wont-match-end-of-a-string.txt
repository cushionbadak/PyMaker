<div class="post-text" itemprop="text">
<p>I'm just learning Python, and I can't seem to figure out regular expressions.</p>
<pre><code>r1 = re.compile("$.pdf")
if r1.match("spam.pdf"):
    print 'yes'
else:
    print 'no'
</code></pre>
<p>I want this code to print 'yes', but it obstinately prints 'no'. I've also tried each of the following:</p>
<pre><code>r1 = re.compile(r"$.pdf")

r1 = re.compile("$ .pdf")

r1 = re.compile('$.pdf')

if re.match("$.pdf", "spam.pdf")

r1 = re.compile(".pdf")
</code></pre>
<p>Plus countless other variations. I've been searching for quite a while, but can't find/understand anything that solves my problem. Can someone help out a newbie?</p>
</div>
<div class="post-text" itemprop="text">
<p>You've tried all the variations except the one that works. The <code>$</code> goes at the <em>end</em> of the pattern.  Also, you'll want to escape the period so it actually matches a period (usually it matches any character).</p>
<pre><code>r1 = re.compile(r"\.pdf$")
</code></pre>
<p>However, an easier and clearer way to do this is using the string's <code>.endswith()</code> method:</p>
<pre><code>if filename.endswith(".pdf"):
    # do something
</code></pre>
<p>That way you don't have to decipher the regular expression to understand what's going on.</p>
</div>
<div class="post-text" itemprop="text">
<h2>Behaviour of <code>re.match()</code> and <code>re.search()</code></h2>
<p>There is one significant difference: <a href="http://docs.python.org/library/re.html#re.match" rel="noreferrer"><code>re.match()</code></a> checks <strong>the beginning</strong> of string, you are most likely looking for <a href="http://docs.python.org/library/re.html#re.search" rel="noreferrer"><code>re.search()</code></a>.</p>
<p>Comparison of both methods is clearly shown in the Python documentation chapter called "<a href="http://docs.python.org/library/re.html#search-vs-match" rel="noreferrer"><em>search() vs. match()</em></a>"</p>
<h2>Special characters in regular expression</h2>
<p>Also the meaning of characters in regular expressions is different than you are trying to use it (see <a href="http://docs.python.org/library/re.html#regular-expression-syntax" rel="noreferrer">Regular Expression Syntax</a> for details):</p>
<ul>
<li><p><code>^</code> matches the beginning:</p>
<blockquote>
<p>(Caret.) Matches the start of the string, and in MULTILINE mode also matches immediately after each newline.</p>
</blockquote></li>
<li><p><code>$</code> matches the end:</p>
<blockquote>
<p>Matches the end of the string or just before the newline at the end of the string, and in <code>MULTILINE</code> mode also matches before a newline. foo matches both ‘<code>foo</code>’ and ‘<code>foobar</code>’, while the regular expression <code>foo$</code> matches only ‘<code>foo</code>’. More interestingly, searching for foo.$ in 'foo1\nfoo2\n' matches ‘<code>foo2</code>’ normally, but ‘<code>foo1</code>’ in <code>MULTILINE</code> mode; searching for a single <code>$</code> in '<code>foo\n</code>' will find two (empty) matches: one just before the newline, and one at the end of the string.</p>
</blockquote></li>
</ul>
<h2>Complete answer</h2>
<p>The solution you are looking for may be:</p>
<pre><code>import re
r1 = re.compile("\.pdf$")  # regular expression corrected
if r1.search("spam.pdf"):  # re.match() replaced with re.search()
    print "yes"
else:
    print "no"
</code></pre>
<p>which checks, if the string ends with "<code>.pdf</code>". Does the same as kindall's answer with <code>.endswith()</code>, but if kindall's answer works for you, choose it (it is cleaner as you may not need regular expressions at all).</p>
</div>
<div class="post-text" itemprop="text">
<h2>Your Question</h2>
<p><code>$</code> means "end of string". So, you need a regex like <code>\.pdf$</code> to match:</p>
<ol>
<li>A dot (<code>.</code>), escaped because it is a special character in regular expressions.</li>
<li>String "<code>pdf</code>"</li>
<li>End of string.</li>
</ol>
<h2>Further Reading</h2>
<p>Regular expressions go beyond languages, Python or others, so you should read some tutorials about them firstly. Consider <a href="http://www.regular-expressions.info">regular-expressions.info</a>. This is not a Python question actually, it is a fundamental regular expression question.</p>
</div>
<div class="post-text" itemprop="text">
<p>The regular expression <code>$.pdf</code> says "find the end of the string, then find any character and beyond the any character beyond the end of the string, find a p, a d and an f".</p>
<p>As written, it cannot sensibly match anything.</p>
<p>However, <code>pdf$</code> would match.</p>
<p>In this specific case, you probably also want to do a <code>search</code> rather than <code>match</code>, as I believe match is inherently anchored at the start of the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>I see 2 quick alternatives:</p>
<ul>
<li><p><code>re.match(pattern='.*pdf$', string='filename.pdf')</code></p>
<p>Using this solution we must specify that we don't care about how the string begins. But we cannot omit the expression at the beginning.
When using <code>re.match()</code> you must be sure to provide a regex valid for the whole string i.e. since index 0 see <a href="https://docs.python.org/3/howto/regex.html#match-versus-search" rel="nofollow noreferrer">https://docs.python.org/3/howto/regex.html#match-versus-search</a></p></li>
<li><p><code>re.search(pattern='\.pdf$', string='filename.pdf')</code></p>
<p>We don't care about how the string begins, we're just searching a string which ends with the extension</p></li>
</ul>
<p>Answered have been already accepted but I've personnaly needed to check the official documentation to be clear with that.</p>
</div>
<span class="comment-copy">this has nothing to do with python... you need to do a tutorial on regex's ...</span>
<span class="comment-copy">Intro to regular expressions... <a href="http://www.aivosto.com/vbtips/regex.html" rel="nofollow noreferrer">aivosto.com/vbtips/regex.html</a></span>
<span class="comment-copy">Thanks a lot! I knew it had to be something simple!</span>
<span class="comment-copy">Hmm, sorry, but it's still returning 'no'.</span>
<span class="comment-copy">You're probably using <code>.match()</code> to check to see whether it matches. You want <code>.search()</code> since <code>.match()</code> only checks at the beginning of the string.</span>
<span class="comment-copy">@user1634426 You probably want to use re.search rather than re.match.</span>
<span class="comment-copy">Thanks a lot, everyone! .endswith() worked.</span>
<span class="comment-copy">Thanks for the link, it looks very informative.</span>
<span class="comment-copy">@user1634426 Good lucks.</span>
