<div class="post-text" itemprop="text">
<p>How can we plot 2D math vectors with <code>matplotlib</code>? Does anyone have an example or suggestion about that? </p>
<p>I have a couple of vectors stored as 2D <code>numpy</code> arrays, and I would like to plot them as directed edges. </p>
<p>The vectors to be plotted are constructed as below:</p>
<pre><code>import numpy as np
# a list contains 3 vectors;
# each list is constructed as the tail and the head of the vector
a = np.array([[0, 0, 3, 2], [0, 0, 1, 1], [0, 0, 9, 9]]) 
</code></pre>
<hr/>
<p><strong>Edit:</strong></p>
<p>I just added the plot of the final answer of <code>tcaswell</code> for anyone interested in the output and want to plot 2d vectors with matplotlib:
<img alt="enter image description here" src="https://i.stack.imgur.com/BkIId.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>The suggestion in the comments by halex is correct, you want to use quiver (<a href="http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.quiver" rel="noreferrer">doc</a>), but you need to tweak the properties a bit.</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt

soa = np.array([[0, 0, 3, 2], [0, 0, 1, 1], [0, 0, 9, 9]])
X, Y, U, V = zip(*soa)
plt.figure()
ax = plt.gca()
ax.quiver(X, Y, U, V, angles='xy', scale_units='xy', scale=1)
ax.set_xlim([-1, 10])
ax.set_ylim([-1, 10])
plt.draw()
plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's pretty straightforward.  Hope this example helps.</p>
<pre><code>import matplotlib.pyplot as plt
import numpy as np
x = np.random.normal(10,5,100)
y = 3 + .5*x + np.random.normal(0,1,100)
myvec = np.array([x,y])
plt.plot(myvec[0,],myvec[1,],'ro')
plt.show()
</code></pre>
<p>Will produce:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/2Y7Cp.jpg"/></p>
<p>To plot the arrays you can just slice them up into 1D vectors and plot them. I'd read the full documentation of matplotlib for all the different options.  But you can treat a numpy vector as if it were a normal tuple for most of the examples.</p>
</div>
<span class="comment-copy">Do you want to plot a vectorfield with <code>quiver</code>? <a href="http://matplotlib.sourceforge.net/api/pyplot_api.html#matplotlib.pyplot.quiver" rel="nofollow noreferrer">matplotlib.sourceforge.net/api/…</a></span>
<span class="comment-copy">There's a fairly good collection of examples (with code!) on the project site: <a href="http://matplotlib.sourceforge.net/examples/index.html" rel="nofollow noreferrer">matplotlib.sourceforge.net/examples/index.html</a> , including a quiver demo: <a href="http://matplotlib.sourceforge.net/examples/pylab_examples/quiver_demo.html" rel="nofollow noreferrer">matplotlib.sourceforge.net/examples/pylab_examples/…</a></span>
<span class="comment-copy">@halex and at abought, thanks for your examples ;-), the thing is that I'd like to plot individual vectors. I added a code to make it clear.</span>
<span class="comment-copy">There's also the possibility of the <a href="http://matplotlib.org/examples/pylab_examples/arrow_simple_demo.html" rel="nofollow noreferrer"><code>arrow</code></a> plot</span>
<span class="comment-copy">beautiful :-)! thanks @Seanny123</span>
<span class="comment-copy">That looks really cool, thanks.</span>
<span class="comment-copy">What does the asterisk do? (inside the call to zip on line 4)</span>
<span class="comment-copy">Turns out zip with an asterisk is for unzipping! <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#zip</a></span>
<span class="comment-copy">How would you do this with <code>n</code> vectors instead of 4?</span>
<span class="comment-copy">@rien333 just pass in more values?</span>
<span class="comment-copy">Thank you for your answer, I meant math vectors as arrows(directed edges).</span>
<span class="comment-copy">Ahh, sorry, I thought you meant just a vector of numbers.  Can you provide a sample of code?</span>
<span class="comment-copy">np, I just added a simple code segment for the vector definition.</span>
