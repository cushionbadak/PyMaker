<div class="post-text" itemprop="text">
<p>How to check Queue's length in python?</p>
<p>I dont see they provide Queue.lenght in python....</p>
<p><a href="http://docs.python.org/tutorial/datastructures.html">http://docs.python.org/tutorial/datastructures.html</a></p>
<pre><code>from collections import deque
queue = deque(["Eric", "John", "Michael"])
</code></pre>
<p>how to check the length of this queue?</p>
<p>and can we initialize like </p>
<pre><code>queue= deque([])   #is this length 0 queue?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>len(queue)</code> should give you the result, 3 in this case.</p>
<p>Specifically, <code>len(object)</code> function will call <code>object.__len__</code> method [<a href="http://docs.python.org/reference/datamodel.html#object.__len__">reference link</a>]. And the object in this case is <code>deque</code>, which implements <code>__len__</code> method (you can see it by <code>dir(deque)</code>).</p>
<hr/>
<pre><code>queue= deque([])   #is this length 0 queue?
</code></pre>
<p>Yes it will be 0 for empty <code>deque</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>it is simple just use .qsize()
example:</p>
<pre><code>a=Queue()
a.put("abcdef")
print a.qsize() #prints 1 which is the size of queue
</code></pre>
<p>The above snippet applies for <code>Queue()</code> class of python. Thanks <a href="https://stackoverflow.com/users/3250829/rayryeng">@rayryeng</a> for the update.</p>
<p>for <code>deque from collections</code> we can use <code>len()</code> as stated <a href="https://stackoverflow.com/a/12548492/6663095">here</a> by <a href="https://stackoverflow.com/users/853611/k-z">K Z</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes we can check the length of queue object created from collections.</p>
<pre><code>from collections import deque
class Queue():
    def __init__(self,batchSize=32):
        #self.batchSie = batchSize
        self._queue = deque(maxlen=batchSize)

    def enqueue(self, items):
        ''' Appending the items to the queue'''
        self._queue.append(items)

    def dequeue(self):
        '''remoe the items from the top if the queue becomes full '''
        return self._queue.popleft()
</code></pre>
<p>Creating an object of class</p>
<pre><code>q = Queue(batchSize=64)
q.enqueue([1,2])
q.enqueue([2,3])
q.enqueue([1,4])
q.enqueue([1,22])
</code></pre>
<p>Now retrieving the length of the queue </p>
<pre><code>#check the len of queue
print(len(q._queue)) 
#you can print the content of the queue
print(q._queue)
#Can check the content of the queue
print(q.dequeue())
#Check the length of retrieved item 
print(len(q.dequeue()))
</code></pre>
<p>check the results in attached screen shot</p>
<p><a href="https://i.stack.imgur.com/GCWhW.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/GCWhW.png"/></a> </p>
<p>Hope this helps...</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>queue.rear+1</code> to get the length of the queue</p>
</div>
<span class="comment-copy">Did you try <code>len(queue)</code>? That's usually how Python handles element counts.</span>
<span class="comment-copy">AttributeError: Queue instance has no attribute '<b>len</b>' I used qsize() instead <a href="https://docs.python.org/2.7/library/queue.html" rel="nofollow noreferrer">docs.python.org/2.7/library/queue.html</a></span>
<span class="comment-copy">@memo: read the question body. <code>collections.deque</code> is different from <code>queue.Queue</code>. The latter is expected to be used in a multithreading case where the size may be changed in another thread.</span>
<span class="comment-copy">This answer is wrong. There is no such attribute at all.</span>
<span class="comment-copy">@SmallChess Are you sure? It definitely does exist for a <code>collections.deque</code> which is what the question is asking. Per the documentation: <a href="https://docs.python.org/3/library/collections.html#deque-objects" rel="nofollow noreferrer">docs.python.org/3/library/collections.html#deque-objects</a> towards the end of the section... <i>"In addition to the above, deques support iteration, pickling, <b>len(d),</b>..."</i> (emphasis mine).</span>
<span class="comment-copy">Please note that this is for the <code>Queue</code> class, which is not the same as the one from <code>collections.deque</code>, which is what the OP is actually asking for.</span>
<span class="comment-copy">noted and thanks for the update.</span>
<span class="comment-copy">No it won't.  There's no <code>rear</code> attribute in any queue seen in the Python language, at least not within the core stack.</span>
