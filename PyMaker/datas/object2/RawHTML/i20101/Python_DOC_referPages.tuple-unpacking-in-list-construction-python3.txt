<div class="post-text" itemprop="text">
<p>I'd love to use tuple unpacking on the right hand side in assignments:</p>
<pre><code>&gt;&gt;&gt; a = [3,4]

&gt;&gt;&gt; b = [1,2,*a]
  File "&lt;stdin&gt;", line 1
SyntaxError: can use starred expression only as assignment target
</code></pre>
<p>OF course, I can do:</p>
<pre><code>&gt;&gt;&gt; b = [1,2]
&gt;&gt;&gt; b.extend(a)
&gt;&gt;&gt; b
[1, 2, 3, 4]
</code></pre>
<p>But I consider this cumbersome. Am I mising a point? An easy way?
Is it planned to have this? Or is there a reason for explicitly not having it in the language?</p>
<p>Part of the problem is that all container types use a constructor which expect an iterable and do not accept a *args argument. I could subclass, but that's introducing some non-pythonic noise to scripts that others are supposed to read.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is fixed in Python 3.5 as described in <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" rel="nofollow noreferrer">PEP 448</a>:</p>
<pre><code>&gt;&gt;&gt; a=[3,4]
&gt;&gt;&gt; b=[1,2,*a]
&gt;&gt;&gt; b
[1, 2, 3, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use add operator:</p>
<pre><code>a = [3, 4]
b = [1, 2] + a
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a few options, but the best one is to use list concatenation (<code>+</code>):</p>
<pre><code>b = [1,2] + a
</code></pre>
<hr/>
<p>If you really want to be able to use the <code>*</code> syntax, you can create your own list wrapper:</p>
<pre><code>def my_list(*args):
    return list(args)
</code></pre>
<p>then you can call it as:</p>
<pre><code>a = 3,4
b = my_list(1,2,*a)
</code></pre>
<p>I suppose the benefit here is that <code>a</code> doesn't need to be a list, it can be any Sequence type.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, this is not planned. The <code>*arg</code> arbitrary parameter list (and <code>**kw</code> keyword arguments mapping) only applies to python <a href="http://docs.python.org/py3k/reference/expressions.html#calls" rel="nofollow">call invocations</a> (mirrored by <a href="http://docs.python.org/py3k/reference/compound_stmts.html#function-definitions" rel="nofollow"><code>*arg</code> and <code>**kw</code> function signatures</a>), and to the left-hand side of an <a href="http://docs.python.org/py3k/reference/simple_stmts.html#assignment-statements" rel="nofollow">iterable assignment</a>.</p>
<p>You can simply concatenate the two lists:</p>
<pre><code>b = [10, 2] + a
</code></pre>
</div>
<span class="comment-copy">It had to be that simple. There weren't any questions on this. Thanks for pointing out the obvious. <i>sigh</i></span>
