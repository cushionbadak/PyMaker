<div class="post-text" itemprop="text">
<p>a beginner question:
how to unpack a string to an argument sequence:</p>
<pre><code>'{2}, {1}, {0}'.format(*'abc')      # unpacking argument sequence
'c, b, a'
</code></pre>
<p>I'm not sure how to set up the delimiter with longer words but I tried the camalCase and it didn't work</p>
<pre><code>'sir {}, so your family's name is {}, and you were born in {}'.format(*"HmmamKhoujaSyria")
 #'sir Hmmam, so your family's name is Khouja, and were born in Syria' 
</code></pre>
<p>edited:how to add a specifier so the string could be split by the camalCase or even a specific character like space</p>
</div>
<div class="post-text" itemprop="text">
<p>For the second case you would need to separate the string by camel case and for that we can use <a href="https://stackoverflow.com/questions/29916065/how-to-do-camelcase-split-in-python">this neat function</a>.</p>
<p>That function will return a list of strings separated by camel case. We can then use that to print what we want.</p>
<p>Beware that if your original string has less than 3 capital letters you'll get an <code>IndexError: tuple index out of range</code>. If you have more, that wouldn't be a problem.</p>
<pre><code>from re import finditer

def camel_case_split(identifier):
    matches = finditer('.+?(?:(?&lt;=[a-z])(?=[A-Z])|(?&lt;=[A-Z])(?=[A-Z][a-z])|$)', identifier)
    return [m.group(0) for m in matches]

s = "HmmamKhoujaSyria"
l = camel_case_split(s)
'sir {}, so your family\'s name is {}, and you were born in {}'.format(*l)
#'sir Hmmam, so your family's name is Khouja, and were born in Syria' 
</code></pre>
<p>If you wish to separate the string by something simpler, like a space or comma, then you can use the str.split() method.</p>
<pre><code>s = "Hmmam Khouja Syria"
l = s.split(" ")
'sir {}, so your family\'s name is {}, and you were born in {}'.format(*l)
#'sir Hmmam, so your family's name is Khouja, and were born in Syria' 
</code></pre>
</div>
<span class="comment-copy">What criteria do you have? Do you always want to use camelCase to unpack the string? Or number of characters? Any specific use case? If you were to use camelCase and your string always follows that format, you could use a regular expression to split the string, if it always follows that pattern. Please add more information to understand your use case better.</span>
<span class="comment-copy"><code>*X</code> unpacks <code>X</code> into constituent items. If <code>X</code> is a string, then <code>*X</code> are individual characters. There are no other ways to interpret <code>*X</code>.</span>
<span class="comment-copy">I appreciate your time Sergio, and I knew about the split() before but I was kinda  looking for a way to do that with the string formatter</span>
<span class="comment-copy">Using the formatter, you can format floats, align the text, format as percentage and do other things within the curly braces, but you can't do string slicing. You could look into the formatter's <a href="https://docs.python.org/3.5/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">minilanguage</a> to see what's possible.</span>
