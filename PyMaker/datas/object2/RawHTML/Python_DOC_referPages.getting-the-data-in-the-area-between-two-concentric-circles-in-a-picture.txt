<div class="post-text" itemprop="text">
<p>I am trying to calculate all the red dots in areas between two concentric circles. Finding the red dots is easy, I simply search using a for loop everything of red color, but the problem is finding that inside a contour, especially when I try to run over all the areas between the circles. </p>
<p>Code as bellow:</p>
<p>img2=Image.open("C:\Python27\Image.png")</p>
<p>pixels=list(img2.getdata())</p>
<p>for pixel in pixels:</p>
<p>if pixel==(255,0,0): print pixel</p>
<p>Bellow you can see the sample picture I'm working on to try my algorithm.</p>
<p><a href="https://i.stack.imgur.com/Qpsru.png" rel="nofollow noreferrer">enter image description here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you know where the circle's center is you simply calculate the distance between the red dot and the center. This tells you in which circle band your dot's are.</p>
<p>If you don't know where the circles are apply techniques for finding circles. Hough transform for example.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you start scanning a single row of pixels in the middle of the edge of the image from left to right you can determine when a pixel is black.</p>
<p>When you record a series of white then black then white pixels you know you've found the edge of a circle. Scanning the same row from right to left will let you figure out the opposite side of the circle. Then you can calculate the equation of that circle from the diameter.</p>
<p>If you keep recording each circle as you move towards the center, you'll find the equation of each circle. Then when you find red pixels, you can determine which area they belong to by using the (x, y) coordinates of the red pixel and the equations of the circles.</p>
</div>
<span class="comment-copy">Thank you. I'll try this.</span>
