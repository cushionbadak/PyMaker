<div class="post-text" itemprop="text">
<p>I am having trouble understanding what's happening behind the scenes for this simple code snippet:</p>
<pre><code>def changeArray(arr):
     for i in range(len(arr)):
         arr[i], arr[arr[i] - 1] = arr[arr[i] - 1], arr[i]
         print(arr)
     return(arr)
</code></pre>
<p>The code assumes the array has as its elements the integers from 1 to n.
The output for the given code when the input is [1,3,4,2] is:</p>
<pre><code>[1, 3, 4, 2]
[1, 4, 4, 3]
[1, 4, 4, 3]
[1, 4, 4, 3]
Out[8]: [1, 4, 4, 3]
</code></pre>
<p>while I was expecting it to print and return this:</p>
<pre><code>[1, 3, 4, 2]
[1, 4, 3, 2]
[1, 4, 3, 2]
[1, 2, 3, 4]
Out[8]: [1, 2, 3, 4]
</code></pre>
<p>Why are the values changing at all when the code is only swapping elements?</p>
<hr/>
<p>Edit:</p>
<p>It turns out, changing the swapping order fixes the problem:</p>
<pre><code>def changeArray(arr):
     for i in range(len(arr)):
         arr[arr[i]-1], arr[i] = arr[i], arr[arr[i]-1]
         print(arr)
     return(arr)
</code></pre>
<p>This gives the following output:</p>
<pre><code>[1, 3, 4, 2]
[1, 4, 3, 2]
[1, 4, 3, 2]
[1, 2, 3, 4]
Out[8]: [1, 2, 3, 4]
</code></pre>
<p>How did changing the order do the swapping as expected, and the reverse did something else entirely?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, you shouldn't use the object you're mutating to specify the target positions you want to replace, or it gets very confusing.</p>
<p>When you write this:</p>
<pre><code> arr[i], arr[arr[i] - 1] = arr[arr[i] - 1], arr[i]
</code></pre>
<p>It's roughly equivalent to:</p>
<pre><code>tup = arr[arr[i] - 1], arr[i]
x, y = tup
arr.__setitem__(i, x)
arr.__setitem__(arr[i] - 1, y)
</code></pre>
<p>(Full details for how to translate this are <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">in the reference docs</a>, but hopefully the inuitive idea is a lot simpler.)</p>
<p>Which should make it clear why you're getting the results you are. And also why all of the following do what you want:</p>
<pre><code>x = arr[i] - 1
arr[i], arr[x] = arr[x], arr[i]

arr[arr[i] - 1], arr[i] = arr[i], arr[arr[i] - 1]

def swap(x, y):
    arr[x], arr[y] = arr[y], arr[x]
swap(i, arr[i] - 1)
</code></pre>
<p>I think the first one is the simplest (the second one <em>looks</em> simple, but only misleadingly so).</p>
</div>
<div class="post-text" itemprop="text">
<p>Changing your expression to    </p>
<pre><code> arr[arr[i] - 1], arr[i] = arr[i], arr[arr[i] - 1]
</code></pre>
<p>is working for me. Still don't know how or why the values were changing. I am new to python as well sorry.</p>
</div>
<span class="comment-copy">I think you probably want <code>arr[i - 1]</code> instead of <code>arr[arr[i] - 1]</code></span>
<span class="comment-copy">@damores arr[arr[i] - 1] would swap the element in ith index to a new index ind such that the new index will satisfy arr[ind] = ind + 1. Am I right in that reasoning?</span>
<span class="comment-copy"><code>arr[arr[i] - 1]</code> takes an index equal to <code>arr[i] - 1</code> into <code>arr</code>. This means that the index of the element you swap is dependent on the value of the <code>arr[i] - 1</code>th element of <code>arr</code>. You don't want this to occur - the element positions you swap is independent of the value of the element.</span>
<span class="comment-copy">Are you expecting this code to work for a list with larger elements, e.g. <code>[11, 12, 13, 14]</code>?</span>
<span class="comment-copy">Oh no. I mentioned the assumption that all the elements in the array are from [1,n] where n is the length of the array</span>
<span class="comment-copy">Thank you very much! :)</span>
<span class="comment-copy">It gives me index out of range.</span>
<span class="comment-copy">hmmm interesting. I will edit and get back to you</span>
