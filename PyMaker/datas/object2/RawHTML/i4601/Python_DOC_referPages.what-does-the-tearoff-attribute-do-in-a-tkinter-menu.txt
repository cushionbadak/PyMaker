<div class="post-text" itemprop="text">
<p>I often see Tkinter applications initialize <a href="http://effbot.org/tkinterbook/menu.htm" rel="nofollow noreferrer"><code>Menu</code></a> widgets using <code>tearoff=0</code> in the constructor.</p>
<pre class="lang-python prettyprint-override"><code>import tkinter as tk

root = tk.Tk()
menubar = tk.Menu(root)    
filemenu = tk.Menu(menubar, tearoff=0)
</code></pre>
<p><a href="http://effbot.org/tkinterbook/menu.htm#Tkinter.Menu.config-method" rel="nofollow noreferrer">effbot.org's documentation for <code>Menu</code></a> specifies that the default value for <code>tearoff</code> is 1, but it doesn't explain what the value is used for.</p>
<pre class="lang-none prettyprint-override"><code>tearoff=
    Default value is 1. (tearOff/TearOff)
tearoffcommand=
    No default value. (tearOffCommand/TearOffCommand)
</code></pre>
<p>What does the <code>tearoff</code> attribute do when initializing a tkinter <a href="http://effbot.org/tkinterbook/menu.htm" rel="nofollow noreferrer"><code>Menu</code></a> widget?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/tk.html" rel="noreferrer">official python docs</a> admit that they're a little light on details:</p>
<blockquote>
<p>The tkinter package is a thin object-oriented layer on top of Tcl/Tk. To use tkinter, you donâ€™t need to write Tcl code, but you will need to consult the Tk documentation, and occasionally the Tcl documentation.</p>
</blockquote>
<p>The <a href="http://wiki.tcl.tk/11793" rel="noreferrer">Tk documentation for <code>tearoff</code></a> gives you what you're looking for:</p>
<blockquote>
<p>tearoff allows you to detach menus for the main window creating floating menus. If you create a menu you will see dotted lines at the top when you click a top menu item. If you click those dotted lines the menu tears off and becomes floating.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/QklH0.png" rel="nofollow noreferrer"><img alt="Tkinter menu with tearoff" src="https://i.stack.imgur.com/QklH0.png"/></a>Here you can see a tkinter <code>Menu</code> tear-off with the code for it in the background. I'm not sure how useful this is going to be but according to <a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu.html" rel="nofollow noreferrer">New Mexico Tech</a>:</p>
<blockquote>
<p>Normally, a menu can be torn off: the first position (position 0) in the list of choices is occupied by the tear-off element, and the additional choices are added starting at position 1. If you set tearoff=0, the menu will not have a tear-off feature, and choices will be added starting at position 0.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Try this if you want to test the floating menu if you are using Windows.</p>
<pre><code>from tkinter import *
import re

class HoverInfo(Menu):
    def __init__(self, parent, text, command=None):
       self._com = command
       Menu.__init__(self,parent, tearoff=1)
       if not isinstance(text, str):
          raise TypeError('Trying to initialise a Hover Menu with a non string type: ' + text.__class__.__name__)
       toktext=re.split('\n', text)
       for t in toktext:
          self.add_command(label = t)
          self._displayed=False
          self.master.bind("&lt;Enter&gt;",self.Display )
          self.master.bind("&lt;Leave&gt;",self.Remove )

    def __del__(self):
       self.master.unbind("&lt;Enter&gt;")
       self.master.unbind("&lt;Leave&gt;")

    def Display(self,event):
       if not self._displayed:
          self._displayed=True
          self.post(event.x_root, event.y_root)
       if self._com != None:
          self.master.unbind_all("&lt;Return&gt;")
          self.master.bind_all("&lt;Return&gt;", self.Click)

    def Remove(self, event):
     if self._displayed:
       self._displayed=False
       self.unpost()
     if self._com != None:
       self.unbind_all("&lt;Return&gt;")

    def Click(self, event):
       self._com()

class MyApp(Frame):
   def __init__(self, parent=None):
      Frame.__init__(self, parent)
      self.grid()
      self.lbl = Label(self, text='testing')
      self.lbl.grid()

      self.hover = HoverInfo(self, 'while hovering press return \n for an exciting msg', self.HelloWorld)

   def HelloWorld(self):
      print('Hello World')

app = MyApp()
app.master.title('test')
app.mainloop()
</code></pre>
<p>This example is Hover Class by Gogo. <a href="https://stackoverflow.com/questions/20399243/display-message-when-hovering-over-something-with-mouse-cursor-in-python">Display message when hovering over something with mouse cursor in Python</a></p>
<p>I Just set tear-off to 1 to see the floating effect.</p>
</div>
<span class="comment-copy">A tear-off menu can be dragged away from the position where it popped up, and left open permanently.  It's a UI element that has fallen out of favor; I'm not sure that all platforms that Tkinter runs on even support it.</span>
<span class="comment-copy">What does a floating menu look like?</span>
<span class="comment-copy">@StevenVascellaro Use VLC to see what it looks like, if your OS supports it.</span>
