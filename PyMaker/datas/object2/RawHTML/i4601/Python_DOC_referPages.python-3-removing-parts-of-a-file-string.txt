<div class="post-text" itemprop="text">
<p>I have a list of sound files like below</p>
<pre><code>Mix = ['/home/pi/Music/The Very Best Of The Stone Roses/02 She Bangs The Drums.mp3',
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-20 Sheila Take A Bow.mp3',
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-21 Girlfriend In A Coma.mp3',
                   "/home/pi/Music/The Smiths/The Sound Of The Smiths/1-22 I Started Something I Couldn't.mp3",
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-23 Last Night I Dreamt That Somebo.mp3']
</code></pre>
<p>And What I want to do is remove everything before the song name and display just the song name on my PiFace Controll &amp; Display 2 with the code `cad.lcd.write(Song_Name).</p>
<p>I think I have a slight understanding on how to do it by creating a separate string with what I want to be removed like below</p>
<pre><code>remove = '/home/pi/Music/The Very Best Of The Stone Roses/01'
</code></pre>
<p>However the issue with this is that every song has a separate number like 1-20 and 1-21 and then different albums that I will be adding after will have a different album location so I'm not sure how to implement this idea.</p>
<p>Any help would be greatly appreciated.</p>
<p><strong><em>If I have confussed anyone I have a music file eg;</em></strong></p>
<pre><code>'/home/pi/Music/The Smiths/The Sound Of The Smiths/1-20 Sheila Take A Bow.mp3',
</code></pre>
<p>And I want to remove</p>
<pre><code>'/home/pi/Music/The Smiths/The Sound Of The Smiths/1-20
</code></pre>
<p>So that I'm left with</p>
<pre><code>Sheila Take A Bow.mp3',
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this approach:</p>
<pre><code>import re

pattern=r'\/[0-9-]+\s(\w.+?mp3)'
Mix = ['/home/pi/Music/The Very Best Of The Stone Roses/02 She Bangs The Drums.mp3',
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-20 Sheila Take A Bow.mp3',
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-21 Girlfriend In A Coma.mp3',
                   "/home/pi/Music/The Smiths/The Sound Of The Smiths/1-22 I Started Something I Couldn't.mp3",
                   '/home/pi/Music/The Smiths/The Sound Of The Smiths/1-23 Last Night I Dreamt That Somebo.mp3']

for i in Mix:
    print(re.findall(pattern,i)[0])
</code></pre>
<p>output:</p>
<pre><code>She Bangs The Drums.mp3
Sheila Take A Bow.mp3
Girlfriend In A Coma.mp3
I Started Something I Couldn't.mp3
Last Night I Dreamt That Somebo.mp3
</code></pre>
<p>Regex info:</p>
<pre><code>\/ matches the character / literally (case sensitive)
Match a single character present in the list below [0-9-]+
+ Quantifier — Matches between one and unlimited times, as many times as possible, giving back as needed (greedy)
0-9 a single character in the range between 0 (index 48) and 9 (index 57) (case sensitive)
- matches the character - literally (case sensitive)
\s matches any whitespace character (equal to [\r\n\t\f\v ])
1st Capturing Group (\w.+?mp3)
\w matches any word character (equal to [a-zA-Z0-9_])
.+? matches any character (except for line terminators)
+? Quantifier — Matches between one and unlimited times, as few times as possible, expanding as needed (lazy)
mp3 matches the characters mp3 literally (case sensitive)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The standard module <code>os.path</code> has everything you need to manipulate filepath. <code>os.path.basename(filename)</code> does what you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two common solutions for the problem you are trying to solve.</p>
<p><strong>1. regex</strong></p>
<p>In a more general case, if either what you are looking for or the string you are dealing with shows regularity, you can use python's regular expressions library, re.
Here is an example of using regex to extract everything after the last forward slash.</p>
<pre><code>import re
x = "this/stuff/should/go/leave this.ext"
re.search('([^/]+$)',x).group(0)
</code></pre>
<p>To learn more about regular expressions in python, try the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">documentation for re in Python 3</a>.</p>
<p><strong>2. os.path</strong></p>
<p>In this particular case, the easiest option is to use os.path since you are dealing with a filename.</p>
<pre><code>import os.path
x = "this/stuff/should/go/leave this.ext"
os.path.basename(x)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
fileName = ' '.join("/path/to/file".split(os.path.sep)[-1].split(" ")[1:])
</code></pre>
<p>Python package <code>os</code> provides the function <a href="https://docs.python.org/2/library/os.path.html#os.path.split" rel="nofollow noreferrer"><code>[split]</code></a>, to split the path (or we can say <strong>string</strong>) and <a href="https://docs.python.org/2/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>[join]</code></a>, to join the path.</p>
<p>First you need to split the path, joint by the "<strong>/</strong>" separator and store the last element of the returned output.</p>
<pre><code>filePath = '/home/pi/Music/The Very Best Of The Stone Roses/02 She Bangs The Drums.mp3'
headName = filePath.split(os.path.sep)[-1]
</code></pre>
<p>Here, the <code>headName</code> would consist of <code>02 She Bangs The Drums.mp3</code></p>
<p>Now you need to split the <code>headName</code> in the same manner, joint by a <strong>space ( )</strong>. Store all the elements except the <strong>0th</strong> one.</p>
<pre><code>splittedHeadName = headName.split(" ")[1:]
</code></pre>
<p>Here, <code>splittedHeadName</code> would contain <code>["She", "Bangs", "The", "Drums.mp3"]</code>.</p>
<p>Now all you need to do is to just join the <code>splittedHeadName</code> by the <code>space</code> separator.</p>
<pre><code>fileName = ' '.join (splittedHeadName)
</code></pre>
<p>That's it. Now the <code>fileName</code> contains <code>She Bangs The Drums.mp3</code> which is required the output you want.</p>
<p>Now, just iterate the <code>filePath</code> and get the respected <code>fileName</code>. You can use snippet I mentioned on the top.</p>
</div>
<span class="comment-copy">Please could you explain what the pattern string does</span>
<span class="comment-copy">tom , Pattern is regular expression pattern, I have edited my answer for more info :</span>
<span class="comment-copy">Thanks, i just like to know what's happening instead of just taking code and not knowing what it does</span>
<span class="comment-copy">@tom , Indeed that's should be your first priority, to understand the code. :)</span>
<span class="comment-copy">I just tried this but got an error [Errno 30] Read-only file system: Any idea?</span>
