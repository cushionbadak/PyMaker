<div class="post-text" itemprop="text">
<p>I have a folder with files that are named from <code>0.txt</code> to <code>100.txt</code>.
They are created in order from a list <code>L</code>.</p>
<p>I want to rename the files in that folder with the name from the list, however, they are renamed in "wrong" order, meaning they are not renamed as the list.
My code is like:</p>
<pre><code>import os
folder = r'D:\my_files'
os.chdir(folder)
for i,j in zip(os.listdir(folder), L):
    os.rename(i, j + ".txt")
</code></pre>
<p>where L is the list with names for the files.</p>
<p>How do I keep the order of files in the directory to match my names in the <code>L</code> list, so the files are renamed according to my list?</p>
</div>
<div class="post-text" itemprop="text">
<p>As per the Python <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p><strong>os.listdir(path='.')</strong></p>
<p>Return a list containing the names of the entries
  in the directory given by path. <strong><em>The list is in arbitrary order</em></strong>, and
  does not include the special entries '.' and '..' even if they are
  present in the directory.</p>
</blockquote>
<p>Therefore, you need to sort your files before you use <code>zip</code>:</p>
<pre><code>for i,j in zip(sorted(os.listdir(folder), key=lambda x: int(x.split('.')[0])), L):
    # logic to rename file
</code></pre>
<p>With <code>sorted</code>, the parameter <code>key=lambda x: int(x.split('.')[0])</code> will ensure the ordering is correct.</p>
</div>
<span class="comment-copy">What is the <i>right</i> order?</span>
<span class="comment-copy">I believe <code>listdir</code> just leaves it up to the OS to return files in any order it wants. I can’t remember whether on Windows that means alphabetical, by creation date, mostly by creation date but with holes filled in, or what, but it’s probably not going to be by “natural sort” that puts <code>9.txt</code> before <code>10.txt</code>, or whatever other thing you happen to want. So you’re going to need to sort the results yourself.</span>
<span class="comment-copy"># jpp, thanks. but if 1.txt, 2.txt, ... 9.txt. are not renamed as 01.txt, 02.txt, ..., 09.txt  the sorting is not working  for up to 10, as 1.txt will be followed by 10.txt</span>
<span class="comment-copy">@ jpp - thanks! - yes using lambda it's working.</span>
