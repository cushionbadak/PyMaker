<div class="post-text" itemprop="text">
<p>Is it possible using Python 3 syntax for declaring input parameters and return value types determine those types? Similarly to determining the number of parameters of a function?</p>
<pre><code>def foo(name: str) -&gt; int:
    ....
</code></pre>
<p>I would like to get <code>str</code> and <code>int</code> respectively.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>typing</code> module has a convenience function for that:</p>
<pre><code>&gt;&gt;&gt; import typing
&gt;&gt;&gt; typing.get_type_hints(foo)
{'name': &lt;class 'str'&gt;, 'return': &lt;class 'int'&gt;}
</code></pre>
<p>(<a href="https://docs.python.org/3/library/typing.html#typing.get_type_hints" rel="nofollow noreferrer">the documentation</a>)</p>
<p>This is different from <code>foo.__annotations__</code> in that <code>get_type_hints</code> can resolve forward references and other annotations stored in string, for instance</p>
<pre><code>&gt;&gt;&gt; def foo(name: 'foo') -&gt; 'int':
...     ...
... 
&gt;&gt;&gt; foo.__annotations__
{'name': 'foo', 'return': 'int'}
&gt;&gt;&gt; typing.get_type_hints(foo)
{'name': &lt;function foo at 0x7f4c9cacb268&gt;, 'return': &lt;class 'int'&gt;}
</code></pre>
<p>It will be especially useful in Python 4.0, because then <a href="https://www.python.org/dev/peps/pep-0563/" rel="nofollow noreferrer"><em>all</em> annotations will be stored in string form</a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def foo(name: str) -&gt; int:
    pass

foo.__annotations__
# {'name': &lt;class 'str'&gt;, 'return': &lt;class 'int'&gt;}

foo.__annotations__['return'].__name__
# 'int'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>inspect</code> can be used:</p>
<pre><code>&gt;&gt;&gt; def foo(name: str) -&gt; int:
...     return 0
&gt;&gt;&gt; 
&gt;&gt;&gt; import inspect
&gt;&gt;&gt; 
&gt;&gt;&gt; sig = inspect.signature(foo)
&gt;&gt;&gt; [p.annotation for p in sig.parameters.values()]
[&lt;class 'str'&gt;]
&gt;&gt;&gt; sig.return_annotation
&lt;class 'int'&gt;
</code></pre>
<p>@vaultah's method looks even more convenient, though.</p>
</div>
<span class="comment-copy">I don't think this is what you're asking but it might be, if you're looking for something like overloading python3 does have <a href="https://repl.it/repls/JauntyMellowDownload" rel="nofollow noreferrer">single dispatch functions</a></span>
<span class="comment-copy">This still doesn't guarantee <code>name</code> is going to be <code>str</code>. You can pass an <code>int</code> there and it will work</span>
<span class="comment-copy">@AndrewChe I don't <i>think</i> OP is asking about enforcing type hints, although I agree that the wording is hard to understand.</span>
