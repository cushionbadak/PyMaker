<div class="post-text" itemprop="text">
<p>We have CentOS 7 servers in a Hadoop cluster.  Python and pip should have been installed on all of the server the same way because it was done with Ansible.  But for some reason, there are some servers where Python cannot use the modules that were installed.  For instance pandas was install, but when in python3.6, I get a 'No module named pandas' error.</p>
<pre><code>$ python3.6
Python 3.6.2 (default, Aug  2 2017, 14:51:00)
[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import pandas
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ModuleNotFoundError: No module named 'pandas'
&gt;&gt;&gt;
</code></pre>
<p>If I try installing pandas again, I get messages that the reuirements are already satisfied.</p>
<pre><code>$ sudo pip3.6 install pandas
Requirement already satisfied: pandas in /usr/lib64/python3.6/site-packages
Requirement already satisfied: python-dateutil&gt;=2 in /usr/lib/python3.6/site-packages (from pandas)
Requirement already satisfied: pytz&gt;=2011k in /usr/lib/python3.6/site-packages (from pandas)
Requirement already satisfied: numpy&gt;=1.9.0 in /usr/lib64/python3.6/site-packages (from pandas)
Requirement already satisfied: six&gt;=1.5 in /usr/lib/python3.6/site-packages (from python-dateutil&gt;=2-&gt;pandas)
</code></pre>
<p>It appears that the python 3.6 sys.path is using a different location for site-packages.</p>
<pre><code>$ python3.6 -m site
sys.path = [
    '/home/avalenti',
    '/usr/local/lib/python36.zip',
    '/usr/local/lib/python3.6',
    '/usr/local/lib/python3.6/lib-dynload',
    '/usr/local/lib/python3.6/site-packages',
]
</code></pre>
<p>It may all stem from pip being installed in an unusual location.</p>
<pre><code>$ pip3.6 --version
pip 9.0.1 from /usr/lib/python3.6/site-packages (python 3.6)
</code></pre>
<p>Pip and the modules seem to be located in the same place, correctly on servers that DO work as follows:</p>
<pre><code>$ pip3.6 --version
pip 9.0.1 from /usr/local/lib/python3.6/site-packages (python 3.6)
$ python3.6 -m site
sys.path = [
    '/home/avalenti',
    '/usr/local/lib/python36.zip',
    '/usr/local/lib/python3.6',
    '/usr/local/lib/python3.6/lib-dynload',
    '/usr/local/lib/python3.6/site-packages',
]
$ python3.6
Python 3.6.2 (default, Aug  2 2017, 14:17:20)
[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import pandas
&gt;&gt;&gt; exit()
$ pip3.6 show pandas
Name: pandas
Version: 0.22.0
Summary: Powerful data structures for data analysis, time series,and statistics
Home-page: http://pandas.pydata.org
Author: The PyData Development Team
Author-email: pydata@googlegroups.com
License: BSD
Location: /usr/local/lib/python3.6/site-packages
Requires: numpy, pytz, python-dateutil
</code></pre>
<p>So my question is, how do I get this fixed and how do I keep this from happening in the first place?  I don't seem to find a way to configure Pip and I don't find any way to specify the installation location for modules.
I tried to be thorough with the information provided, but I'm sure I missed something.</p>
<p>Thanks,</p>
<p>Anthony</p>
<p>Well, the Pip documentation for the config pointed me to the --target option for pip install.  That allowed me to specify the location where I thought the packages should go - /usr/local/lib/python3.6/site-packages (as noted in the sys.path).  That allowed the import to find the pandas package, but fail on the import of some basic system modules, <strong>builtin</strong> and binascii.  It seems like python itself is kinda hosed.</p>
<pre><code># pip3.6 install --target /usr/local/lib/python3.6/site-packages pandas
Collecting pandas
  Using cached pandas-0.22.0-cp36-cp36m-manylinux1_x86_64.whl
Collecting numpy&gt;=1.9.0 (from pandas)
  Downloading numpy-1.14.2-cp36-cp36m-manylinux1_x86_64.whl (12.2MB)
    100% |████████████████████████████████| 12.2MB 92kB/s
Collecting python-dateutil&gt;=2 (from pandas)
  Downloading python_dateutil-2.7.2-py2.py3-none-any.whl (212kB)
    100% |████████████████████████████████| 215kB 2.4MB/s
Collecting pytz&gt;=2011k (from pandas)
  Using cached pytz-2018.3-py2.py3-none-any.whl
Collecting six&gt;=1.5 (from python-dateutil&gt;=2-&gt;pandas)
  Using cached six-1.11.0-py2.py3-none-any.whl
Installing collected packages: numpy, six, python-dateutil, pytz, pandas
Successfully installed numpy-1.14.2 pandas-0.22.0 python-dateutil-2.7.2 pytz-2018.3 six-1.11.0
You are using pip version 9.0.1, however version 9.0.3 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
# python3.6
Python 3.6.2 (default, Aug  2 2017, 14:51:00)
[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import pandas
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/pandas/compat/__init__.py", line 48, in &lt;module&gt;
    import __builtin__ as builtins
ModuleNotFoundError: No module named '__builtin__'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.6/site-packages/pandas/__init__.py", line 23, in &lt;module&gt;
    from pandas.compat.numpy import *
  File "/usr/local/lib/python3.6/site-packages/pandas/compat/__init__.py", line 61, in &lt;module&gt;
    import http.client as httplib
  File "/usr/local/lib/python3.6/http/client.py", line 71, in &lt;module&gt;
    import email.parser
  File "/usr/local/lib/python3.6/email/parser.py", line 12, in &lt;module&gt;
    from email.feedparser import FeedParser, BytesFeedParser
  File "/usr/local/lib/python3.6/email/feedparser.py", line 27, in &lt;module&gt;
    from email._policybase import compat32
  File "/usr/local/lib/python3.6/email/_policybase.py", line 7, in &lt;module&gt;
    from email import header
  File "/usr/local/lib/python3.6/email/header.py", line 14, in &lt;module&gt;
    import binascii
ModuleNotFoundError: No module named 'binascii'
&gt;&gt;&gt; exit()
</code></pre>
<p>Ugh...</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to be very careful using pip when having multiple Python distributions. Instead of using <code>pip3.6', try using</code>python3.6 -m pip` to install  pandas:</p>
<pre><code>python3.6 -m pip install pandas
</code></pre>
<p>(prepend <code>sudo</code> if you really need to). In this way you are invoking pip through Python itself, and so you are guaranteed to get the pip that belongs with the Python you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try to set the location for pip in <code>$HOME/.pip/pip.conf</code></p>
<p>As per PIP Docs:</p>
<blockquote>
<p>Configuration Config file</p>
<p>pip allows you to set all command line option defaults in a standard
  ini style config file.</p>
<p>The names and locations of the configuration files vary slightly
  across platforms. You may have per-user, per-virtualenv or site-wide
  (shared amongst all users) configuration:</p>
<p>Per-user:</p>
<pre><code>On Unix the default configuration file is: $HOME/.config/pip/pip.conf which respects the XDG_CONFIG_HOME
</code></pre>
<p>environment variable.
      On macOS the configuration file is $HOME/Library/Application Support/pip/pip.conf.
      On Windows the configuration file is %APPDATA%\pip\pip.ini.</p>
<p>There are also a legacy per-user configuration file which is also
  respected, these are located at:</p>
<pre><code>On Unix and macOS the configuration file is: $HOME/.pip/pip.conf
On Windows the configuration file is: %HOME%\pip\pip.ini
</code></pre>
<p>You can set a custom path location for this config file using the
  environment variable PIP_CONFIG_FILE.</p>
<p>Inside a virtualenv:</p>
<pre><code>On Unix and macOS the file is $VIRTUAL_ENV/pip.conf
On Windows the file is: %VIRTUAL_ENV%\pip.ini
</code></pre>
<p>Site-wide:</p>
<pre><code>On Unix the file may be located in /etc/pip.conf. Alternatively it may be in a "pip" subdirectory of any of the paths set in the
</code></pre>
<p>environment variable XDG_CONFIG_DIRS (if it exists), for example
  /etc/xdg/pip/pip.conf.
      On macOS the file is: /Library/Application Support/pip/pip.conf
      On Windows XP the file is: C:\Documents and Settings\All Users\Application Data\pip\pip.ini
      On Windows 7 and later the file is hidden, but writeable at C:\ProgramData\pip\pip.ini
      Site-wide configuration is not supported on Windows Vista</p>
<p>If multiple configuration files are found by pip then they are
  combined in the following order:</p>
<pre><code>Firstly the site-wide file is read, then
The per-user file is read, and finally
The virtualenv-specific file is read.
</code></pre>
<p>Each file read overrides any values read from previous files, so if
  the global timeout is specified in both the site-wide file and the
  per-user file then the latter value is the one that will be used.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Short answer, but I would recommend using Python Virtual Environments. Makes managing Python versions and pip packages very easy.</p>
<p><a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/venv.html</a></p>
<p>This way you can have many different virtualized Python environments and activate them for whatever script, Ansible playbook, etc you are running. Another great feature is you can create a requirements file to share with others, so if they want to run your code they can simply install from the requirements file which guarantees they have the right version of Python and associated packages installed.</p>
</div>
<span class="comment-copy">I think the problem with that is still that pip is installed in a location that isn't in the sys.path. "            " # python3.6 -m pip install pandas /usr/local/bin/python3.6: No module named pip "            " Remember, on the bad servers pip is located in "/usr/lib/python3.6/site-packages", while sys.path is looking in "/usr/local/lib/python3.6/site-packages"</span>
<span class="comment-copy">Is that dir/conf file supposed to already be there?  Because I don't find that anywhere on either the functioning or non-functioning servers.</span>
<span class="comment-copy">Updated answer. Hope this helps.</span>
<span class="comment-copy">This is a good suggestion, but we have multiple components in the hadoop cluster that will try to use python and we aren't sure that we will be able to get them to all use the virtual environment.  So we would like to fix the base python install.</span>
