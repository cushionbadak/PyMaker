<div class="post-text" itemprop="text">
<p>I'm trying to open a MATLAB file which is an 'array of structures'. When using scipy.io.loadmat to open the file, I get the following error:</p>
<pre><code>File "&lt;ipython-input-15-0951b80baef6&gt;", line 1, in &lt;module&gt;
    data = sio.loadmat('C:\Users\Martin\Desktop\Biophysics PhD\Results\180321_agonists_spreading_conditions\180321_agonists_spreading_conditions\Compare_ADPdexBSA.mat')

File "C:\Users\Martin\Anaconda2\lib\site-packages\scipy\io\matlab\mio.py", line 141, in loadmat
MR, file_opened = mat_reader_factory(file_name, appendmat, **kwargs)

File "C:\Users\Martin\Anaconda2\lib\site-packages\scipy\io\matlab\mio.py", line 64, in mat_reader_factory
byte_stream, file_opened = _open_file(file_name, appendmat)

TypeError: 'NoneType' object is not iterable
</code></pre>
<p>Still new enough to programming, so I'm not sure how to interpret the error. Any help you can give me is greatly appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>This error is most likely happening because <code>scipy.io.loadmat</code> cannot find the file of interest.  Because you're using Windows, the path you're defining is not quite correct.  You need to delineate the directory separator <code>\</code> with two backslashes: <code>\\</code>.</p>
<p>In other words:</p>
<pre><code>data = sio.loadmat('C:\\Users\\Martin\\Desktop\\Biophysics PhD\\Results\\180321_agonists_spreading_conditions\\180321_agonists_spreading_conditions\\Compare_ADPdexBSA.mat')
</code></pre>
</div>
<span class="comment-copy">Thanks, your solution worked. I can't believe that the issue was so easily fixed and that the address didn't work even though I copied the address directly from the windows explorer address bar</span>
<span class="comment-copy">@kynnem For sure!  I know of this error because this has happened to me before.  Actually if you don't double the backslashes, the error is undefined because you are specifying the actual path to the file.  On Python 3, I get a unicode error.  On Python 2, I get an invalid mode error.  To be platform agnostic, consider using <code>os.path.join</code>.  That way it correctly inserts the directory delineator character(s) regardless of the operating system: <code>data = sio.loadmat(os.path.join('C:', 'Users', 'Martin', ...))</code></span>
<span class="comment-copy">I generally find <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib</a> nicer to use than <code>os.path</code>.</span>
<span class="comment-copy">@excaza interesting. Thanks!</span>
