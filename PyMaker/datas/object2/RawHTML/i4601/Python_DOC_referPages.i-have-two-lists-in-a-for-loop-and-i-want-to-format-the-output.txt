<div class="post-text" itemprop="text">
<p>I am trying to get user input for relatives kind and name.</p>
<pre><code>for relatives in victim['other_relatives_kind'], victim['other_relatives_name']:
    print(relatives)
</code></pre>
<p>If a user inputs, for example, Brother and Aunt in <code>['other_relatives_kind']</code> and Andreas Petersen and Anni Nielsen in <code>['other_relatives_name']</code> the I get this output:</p>
<pre><code>['Brother', 'Aunt']

['Andreas Petersen', 'Anni Nielsen']
</code></pre>
<p>How can I get the output to be like:</p>
<blockquote>
<p>Brother: Andreas Petersen </p>
<p>Aunt: Anni Nielsen</p>
</blockquote>
<p>There might be an "unlimited" numbers of entered relatives.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a> to join a list of <code>str</code>s using any arbirary separator.</p>
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to merge two lists into a single list, each element of which is a tuple of two items.</p>
<p>Here is an example using <code>zip</code> and <code>str.join()</code>:</p>
<pre><code>victim = {
    'other_relatives_kind': ['Brother', 'Aunt'],
    'other_relatives_name': ['Andreas Petersen', 'Anni Nielsen']
}

zipped_data = zip(
    victim['other_relatives_kind'],
    victim['other_relatives_name'])
print ('\n'.join('{kind}: {name}'.format(kind=kind, name=name)
                 for kind, name in zipped_data))
</code></pre>
<p>Result:</p>
<pre><code>Brother: Andreas Petersen
Aunt: Anni Nielsen
</code></pre>
<p>Note that the <code>print</code> call can be simplified in Python3.6+, using f-strings:</p>
<pre><code>print ('\n'.join(f'{kind}: {name}' for kind, name in zipped_data))
</code></pre>
</div>
<span class="comment-copy">The function you are looking for is <code>zip</code>.</span>
<span class="comment-copy">What does <code>fx</code> mean?</span>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a> to join a <code>list</code> of <code>strs</code> using any arbirary separator (such a ", "). E.g. <code>', '.join(['alice', 'bob',' charlie']) # =&gt; 'alice, bob, charlie'</code> <a href="https://www.tutorialspoint.com/python/string_join.htm" rel="nofollow noreferrer">tutorialspoint.com/python/string_join.htm</a></span>
<span class="comment-copy">@Robáµ© For example :))</span>
