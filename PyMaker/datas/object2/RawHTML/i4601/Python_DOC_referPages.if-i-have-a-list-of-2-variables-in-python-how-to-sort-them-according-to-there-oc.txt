<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15812547/keep-duplicates-in-a-list-in-python">Keep duplicates in a list in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/26773054/get-a-unique-list-of-items-that-occur-more-than-once-in-a-list">Get a unique list of items that occur more than once in a list</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>So the software takes inputs from user
And print them as an array.
If the value doesn't occurr more than once it doesnt print it</p>
<pre><code> # for example I had these inputs by the users
 Z=[(2,40),(1,15),(3,9),(2,12),(1,15),(3,9),(1,15)]        

 # so that output should be
 1 15

 3 9
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get the number of occurence with <code>collections.Counter</code> and then use it as key for sorting in decreasing order of number of times an item appears in the list.</p>
<pre><code>from collections import Counter

def sort_by_occurence(lst, min_occurence=1):
    counter = Counter(lst)
    occ = (k for k, v in counter.items() if v &gt;= min_occurence)
    return sorted(occ, key=lambda e: counter[e], reverse=True)

z = [(2, 40), (1, 15), (3, 9), (2, 12), (1, 15), (3, 9), (1, 15)]
sort_by_occurence(z, min_occurence=2) # [(1, 15), (3, 9)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> like:</p>
<pre><code>from collections import Counter

Z=[(2,40),(1,15),(3,9),(2,12),(1,15),(3,9),(1,15)]
x = Counter(Z)
print ([k for k, v in x.items() if v &gt; 1])
</code></pre>
<h3>Results:</h3>
<pre><code>[(1, 15), (3, 9)]
</code></pre>
</div>
<span class="comment-copy">What did you attempt? Include all relevant code.</span>
<span class="comment-copy">Yeah that was my bad I meant to say that to be sorted and out put to be printed once as in (1,2)  (3,4)</span>
<span class="comment-copy">I don't understand, do you need your element to be sorted from the most common to the least?</span>
<span class="comment-copy">Yeah,. But it has to occur more than once in z</span>
<span class="comment-copy">Ok, then the above code does exactly that.</span>
<span class="comment-copy">And in the output it has to occur once</span>
<span class="comment-copy">Can u  print in matrix form</span>
<span class="comment-copy">@MarioSorial, What?  I don't understand.</span>
<span class="comment-copy">As in 1 15 \n 3 9</span>
<span class="comment-copy">By the way thank you so much for giving me time for help</span>
<span class="comment-copy"><code>print('\n'.join(' '.join(str(s) for s in k) for k, v in x.items() if v &gt; 1))</code></span>
