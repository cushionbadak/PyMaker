<div class="post-text" itemprop="text">
<p>I am trying to read the first line of a CSV file and assign it to <code>header</code>. The CSV file looks like this:</p>
<pre><code>TIME,DAY,MONTH,YEAR
"3:21","23","FEB","2018"
"3:23","23","FEB","2018"
...
</code></pre>
<p>Here is the code:</p>
<pre><code>import csv

with open("20180223.csv") as csvfile:
    rdr = csv.reader(csvfile)
    header = next(rdr)
    print(header)
</code></pre>
<p>I expect the output to look like:</p>
<pre><code>['TIME', 'DAY', 'MONTH', 'YEAR']
</code></pre>
<p>However the output looks like this:</p>
<pre><code>['ï»¿TIME', 'DAY', 'MONTH', 'YEAR']
</code></pre>
<p>What did I miss?</p>
</div>
<div class="post-text" itemprop="text">
<p>That first character is the <a href="https://en.wikipedia.org/wiki/Byte_order_mark" rel="noreferrer">Byte order mark</a> character.</p>
<p>Try this:</p>
<pre><code>with open("20180223.csv", encoding="utf-8-sig") as csvfile:
</code></pre>
<p>This advice is somewhat hidden away in the <a href="https://docs.python.org/3/howto/unicode.html" rel="noreferrer">documentation</a>, but it is there:</p>
<blockquote>
<p>In some areas, it is also convention to use a “BOM” at the start of
  UTF-8 encoded files; the name is misleading since UTF-8 is not
  byte-order dependent. The mark simply announces that the file is
  encoded in UTF-8. Use the ‘utf-8-sig’ codec to automatically skip the
  mark if present for reading such files.</p>
</blockquote>
</div>
