<div class="post-text" itemprop="text">
<p>I have a list as follows.</p>
<pre><code>[['Andrew', '1', '9'], ['Peter', '1', '10'], ['Andrew', '1', '8'], ['Peter', '1', '11'], ['Sam', '4', '9'], ['Andrew', '2', '2']]
</code></pre>
<p>I would like sum up the last column grouped by the other columns.The result is like this</p>
<pre><code>[['Andrew', '1', '17'], ['Peter', '1', '21'], ['Sam', '4', '9'], ['Andrew', '2', '2']]
</code></pre>
<p>which is still a list.</p>
<p>In real practice, I would always like to sum up the last column grouped by many other columns. Is there a way I can do this in Python? Much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>dynamically grouping by all columns except the last one:</p>
<pre><code>In [24]: df = pd.DataFrame(data)

In [25]: df.groupby(df.columns[:-1].tolist(), as_index=False).agg(lambda x: x.astype(int).sum()).values.tolist()
Out[25]: [['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is an O(n) solution via <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>, adaptable to any number of keys.</p>
<p>If your desired output is a list, then this may be preferable to a solution via Pandas, which requires conversion to and from a non-standard type.</p>
<pre><code>from collections import defaultdict

lst = [['Andrew', '1', '9'], ['Peter', '1', '10'], ['Andrew', '1', '8'],
       ['Peter', '1', '11'], ['Sam', '4', '9'], ['Andrew', '2', '2']]

d = defaultdict(int)

for *keys, val in lst:
    d[tuple(keys)] += int(val)

res = [[*k, v] for k, v in sorted(d.items())]
</code></pre>
<p><strong>Result</strong></p>
<pre><code>[['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
</code></pre>
<p><strong>Explanation</strong></p>
<ul>
<li>Cycle through your list of lists, define keys / value and add to your <code>defaultdict</code> of lists.</li>
<li>Use a list comprehension to convert dictionary to desired output.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Op1</p>
<p>You can pass a index <code>sum</code>  and add tolist convert back to list </p>
<pre><code>pd.DataFrame(L).\
   set_index([0,1])[2].astype(int).sum(level=[0,1]).\
        reset_index().values.tolist()
Out[78]: [['Andrew', '1', 17], ['Peter', '1', 21], ['Sam', '4', 9], ['Andrew', '2', 2]]
</code></pre>
<hr/>
<p>Op2</p>
<p>For list of list you can using <code>groupby</code> from <code>itertools</code> </p>
<pre><code>from itertools import groupby
[k+[sum(int(v) for _,_, v in g)] for k, g in groupby(sorted(l), key = lambda x: [x[0],x[1]])]
Out[98]: [['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create to <code>DataFrame</code> and aggregate third column converted to integers by first and second columns, last convert back to <code>list</code>s:</p>
<pre><code>df = pd.DataFrame(L)
L = df[2].astype(int).groupby([df[0], df[1]]).sum().reset_index().values.tolist()
print (L)
[['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
</code></pre>
<p>And solution with <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a>, python 3.x only:</p>
<pre><code>from collections import defaultdict

d = defaultdict(int)
#https://stackoverflow.com/a/10532492
for *head, tail in L:
    d[tuple(head)] += int(tail)

d = [[*i, j] for i, j in sorted(d.items())]
print (d)
[['Andrew', '1', 17], ['Andrew', '2', 2], ['Peter', '1', 21], ['Sam', '4', 9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h3><code>pd.factorize</code> and <code>np.bincount</code></h3>
<pre><code>f, u = pd.factorize([tuple(x[:-1]) for x in data])
v = np.array([x[-1] for x in data], int)

[list(k) + [int(v)] for k, v in zip(u, np.bincount(f, v))]

[['Andrew', '1', 17], ['Peter', '1', 21], ['Sam', '4', 9], ['Andrew', '2', 2]]
</code></pre>
</div>
<span class="comment-copy">Does [0,1] represents the first column and the second column?</span>
<span class="comment-copy">@Deepleeqe, yes, i've also added another version where it's done dynamically for any number of columns...</span>
