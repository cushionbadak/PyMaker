<div class="post-text" itemprop="text">
<p>I already trained a model for topic classification. Then when I am going to  transform new data into vectors for prediction, it going wrong. It shows "NotFittedError: CountVectorizer - Vocabulary wasn't fitted." But when I did the prediction by splitting training data into test data in trained model, it works. Here are the code:</p>
<pre><code>from sklearn.externals import joblib
from sklearn.feature_extraction.text import CountVectorizer

import pandas as pd
import numpy as np

# read new dataset
testdf = pd.read_csv('C://Users/KW198/Documents/topic_model/training_data/testdata.csv', encoding='cp950')

testdf.info()
&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 1800 entries, 0 to 1799
Data columns (total 2 columns):
keywords    1800 non-null object
topics      1800 non-null int64
dtypes: int64(1), object(1)
memory usage: 28.2+ KB

# read columns
kw = testdf['keywords']
label = testdf['topics']

# 將預測資料轉為向量
vectorizer = CountVectorizer(min_df=1, stop_words='english')
x_testkw_vec = vectorizer.transform(kw)
</code></pre>
<p>Here is an error</p>
<pre><code>---------------------------------------------------------------------------
NotFittedError                            Traceback (most recent call last)
&lt;ipython-input-93-cfcc7201e0f8&gt; in &lt;module&gt;()
      1 # 將預測資料轉為向量
      2 vectorizer = CountVectorizer(min_df=1, stop_words='english')
----&gt; 3 x_testkw_vec = vectorizer.transform(kw)

~\Anaconda3\envs\ztdl\lib\site-packages\sklearn\feature_extraction\text.py in transform(self, raw_documents)
    918             self._validate_vocabulary()
    919 
--&gt; 920         self._check_vocabulary()
    921 
    922         # use the same matrix-building strategy as fit_transform

~\Anaconda3\envs\ztdl\lib\site-packages\sklearn\feature_extraction\text.py in _check_vocabulary(self)
    301         """Check if vocabulary is empty or missing (not fit-ed)"""
    302         msg = "%(name)s - Vocabulary wasn't fitted."
--&gt; 303         check_is_fitted(self, 'vocabulary_', msg=msg),
    304 
    305         if len(self.vocabulary_) == 0:

~\Anaconda3\envs\ztdl\lib\site-packages\sklearn\utils\validation.py in check_is_fitted(estimator, attributes, msg, all_or_any)
    766 
    767     if not all_or_any([hasattr(estimator, attr) for attr in attributes]):
--&gt; 768         raise NotFittedError(msg % {'name': type(estimator).__name__})
    769 
    770 

NotFittedError: CountVectorizer - Vocabulary wasn't fitted.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to call <a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer.fit" rel="nofollow noreferrer"><code>vectorizer.fit()</code></a> for the count vectorizer to build the dictionary of words before calling <a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer.transform" rel="nofollow noreferrer"><code>vectorizer.transform()</code></a>. You can also just call <a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer.fit_transform" rel="nofollow noreferrer"><code>vectorizer.fit_transform()</code></a> that combines both. </p>
<p><strong>But you should not</strong> be using a new vectorizer for test or any kind of inference. You need to use the same one you used when training the model, or your results will be random since vocabularies are different (lacking some words, does not have the same alignment etc..)</p>
<p>For that, you can just <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> the vectorizer used in the training and load it on inference/test time.</p>
</div>
<span class="comment-copy">I have tried that but when I ran the model.predit() I go an error: ValueError: dimension mismatch. Then I found an answer on stackoverflow, it said should call fit_transform only on the training part of the data, not the test part. <a href="https://stackoverflow.com/questions/28093984/scikit-learn-valueerror-dimension-mismatch" title="scikit learn valueerror dimension mismatch">stackoverflow.com/questions/28093984/…</a></span>
<span class="comment-copy">Actually I am going to deploy this model, and I think I need to convert words to vectors before prediction. I separate prediction function and trained model into two files.</span>
<span class="comment-copy">@KenHsieh Yes, you should (well you can use both sets, but ideally you shouldn't) fit the vectorizer on your training data and use that same vectorizer on both training and test. The problem here is that you are creating a new vectorizer and calling transform before initializing the vocabulary. I'm sorry if the first part of my answer is confusing (it fixes the error you've posted but you need to change more to fix the real problem which is using separate vectorizers). Oh and you may have some problems with OOV (out of vocabulary) words, but that's something you have to solve separately.</span>
<span class="comment-copy">Got it! Now I know what the issue is. Thanks. In order to fix this problem I need to use the vectorizer same as the trained model and find a way to import(?) to the prediction file.</span>
<span class="comment-copy">@KenHsieh You can save (pickle) the vectorizer to a file and then load that at the time of prediction</span>
