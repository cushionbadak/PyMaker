<div class="post-text" itemprop="text">
<p>I am trying to scrape a website and have all the data needed in very long matrices which were obtained through <code>requests</code> and <code>json</code> imports.</p>
<p>I am having issues getting any output.
Is it because of the merge of two strings in <code>requests.get()</code>?</p>
<p>Here is the part with the problem, all things used were declared at the start of the code.</p>
<pre><code>balance=[]

for q in range(len(DepositMatrix)):
    address= requests.get('https://ethplorer.io/service/service.php?data=' + str(DepositMatrix[q][0]))
    data4 = address.json()
    TokenBalances = data4['balances'] #returns a dictionary
    balance.append(TokenBalances)

print(balance) 
</code></pre>
<p>Example of DepositMatrix - list of lists with 4 elements, <code>[[string , float, int, int]]</code></p>
<pre><code>[['0x2b5634c42055806a59e9107ed44d43c426e58258', 488040277.1535826, 660, 7103], 
 ['0x05ee546c1a62f90d7acbffd6d846c9c54c7cf94c', 376515313.83254075, 2069, 12705]]
</code></pre>
<p>I think the error is in this part:</p>
<pre><code>requests.get('https://ethplorer.io/service/service.php?data=' + str(DepositMatrix[q][0]))
</code></pre>
<p>This change doesnt help either:</p>
<pre><code>requests.get('https://ethplorer.io/service/service.php?data=' + DepositMatrix[q][0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Like I said in my comment, I tried your code and it worked for me. But I wanted to highlight some things that could help your code be clearer:</p>
<pre><code>import requests
import pprint

DepositMatrix = [['0x2b5634c42055806a59e9107ed44d43c426e58258', 488040277.1535826, 660, 7103], 
 ['0x05ee546c1a62f90d7acbffd6d846c9c54c7cf94c', 376515313.83254075, 2069, 12705]]

balance=[]

for deposit in DepositMatrix:
    address = requests.get('https://ethplorer.io/service/service.php?data=' + deposit[0])
    data4 = address.json()
    TokenBalances = data4['balances'] #returns a dictionary
    balance.append(TokenBalances)

pprint.pprint(balance)
</code></pre>
<ul>
<li>For your loop, instead of creating a range of the length of your list (<code>q</code>) and then using this <code>q</code> to get the information back from your list, it's simpler to get each element directly (<code>for deposit in DepositMatrix:</code>)</li>
<li>I've used the <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow noreferrer"><code>pprint</code></a> module to ease the visualization of your data.</li>
</ul>
</div>
<span class="comment-copy">Could you give an example of content of <code>DepositMatrix</code>? And are you aware that in the first loop, you are overwriting <code>TokenBalance</code> at each iteration? So by the time you get to the second loop, you will process only <code>TokenBalance</code> of the last iteration. Does the second loop was meant to be inside the first loop?</span>
<span class="comment-copy">Moreover, if <code>TokenBalances</code> is a dictionary, <code>TokenBalances[k]</code> has a chance of not working because nothing will guarantee that the keys are numbers from 0 to <code>len(TokenBalances) - 1</code>. Maybe you should use <code>for current_token in TokenBalances.values():</code> and work with <code>current_token</code> instead of using <code>for k in range(len(TokenBalances)):</code>?</span>
<span class="comment-copy">@EvensF You're right, it was at first. I've made a mistake copying and pasting the code. I cannot have a O(n^2) as lists are going to be over the length of 100,000.  I've edited the code, removed the second for loop as that one works when just given a predefined list of dictionaries.  Issue is with scraping the dynamic data in the first loop.</span>
<span class="comment-copy">It does seem to be the issue with the requests.get() line. Both loops work file when working from a predefined DepositMatrix and a non-concatenating requests.get() which accesses a dynamic data set.</span>
<span class="comment-copy">Please provide the error message so we can assess what is wrong, I tried getting a GET response using the URL string explicitly and got no error</span>
<span class="comment-copy">It does work perfectly when the deposit matrix is predefined. However the real one is dynamically generated and it itself is very long. It just looks like the one in the example.</span>
<span class="comment-copy">Well, is it possible that the website you are trying to reach has set up a maximum number of connections in a defined time period? That would be a protection against network attack.</span>
<span class="comment-copy">Yeah that is a possibility. Thanks for your help, it actually made it faster. I suppose I cant really scrape 50k+ items in that manner.</span>
