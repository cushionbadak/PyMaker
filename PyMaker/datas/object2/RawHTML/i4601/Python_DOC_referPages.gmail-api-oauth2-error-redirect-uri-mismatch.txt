<div class="post-text" itemprop="text">
<p>I followed this Gmail API Python Quickstart tutorial:
<a href="https://developers.google.com/gmail/api/quickstart/python" rel="nofollow noreferrer">https://developers.google.com/gmail/api/quickstart/python</a></p>
<p>I configured my OAuth client ID in the API console as instructed (see the first image below). However, launching the script opens a browser session that results in the 400 error below.</p>
<p>The redirect URL matches what is registered in the API console.</p>
<p>HOWEVER, the quickstart script opens the following URL:
<a href="https://accounts.google.com/o/oauth2" rel="nofollow noreferrer">https://accounts.google.com/o/oauth2</a>... &amp;<strong><em>redirect_uri=http%3A%2F%2Flocalhost%3A8080%2F</em></strong> ...</p>
<p>Manually changing redirect URI to <a href="http://localhost:8080" rel="nofollow noreferrer">http://localhost:8080</a> partially fixes the problem as I proceed to the authorization request, but then the response can't get returned to the command prompt.</p>
<p>How can I force the quickstart program to produce a URL that leaves the redirect URI as <em><a href="http://localhost:8080" rel="nofollow noreferrer">http://localhost:8080</a></em>?</p>
<p><a href="https://i.stack.imgur.com/zIWOq.png" rel="nofollow noreferrer"><img alt="Google API console" src="https://i.stack.imgur.com/zIWOq.png"/></a></p>
<p><a href="https://i.stack.imgur.com/cf7oQ.png" rel="nofollow noreferrer"><img alt="400 Error" src="https://i.stack.imgur.com/cf7oQ.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The cause of the error you're getting is that the <a href="https://developers.google.com/gmail/api/quickstart/python#step_3_set_up_the_sample" rel="nofollow noreferrer">Python Quickstart</a> says:</p>
<p><strong>d</strong>. Select the Credentials tab, click the Create credentials button and select OAuth client ID.</p>
<p><strong>e</strong>. Select the application type <strong>Other</strong>, enter the name "Gmail API Quickstart", and click the Create button.</p>
<p>However, looking at what you're doing, you are using <strong>Web Application</strong> instead of <strong>Other</strong>.</p>
<p>When I used the <strong>Other</strong> as client_secret.json, I didn't encounter this problem.</p>
<p><strong>result</strong>:</p>
<blockquote>
<p>The authentication flow has completed.</p>
</blockquote>
<p>No hacks/workaround needed. Just follow instructions :)</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Explanation</strong></p>
<p>This is happening because the <em>uri_redirect</em> parameter being passed to the Google API server is a percent encoded ASCII string. This can be verified by looking at the URL launched by the script:</p>
<pre><code>...redirect_uri=http%3A%2F%2Flocalhost%3A8080%2F...
</code></pre>
<p>The whole URL gets encoded by the quickstart script in the steps following the execution of this line:</p>
<pre><code>credentials = tools.run_flow(flow, store, flags)
</code></pre>
<p>Stepping through the process with a debugger reveals the URL is eventually encoded with the <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode" rel="nofollow noreferrer">urlencode</a> method from Python's urllib library. This results in the redirect_uri parameter from the client_secret.json file converting from:</p>
<pre><code>http://localhost:8080
</code></pre>
<p>To</p>
<pre><code>http%3A%2F%2Flocalhost%3A8080%2F
</code></pre>
<p>When Google receives the OAuth request, it compares the <strong>encoded</strong> uri_redirect parameter against the <strong>un-encoded</strong> one registered in the API console. Since they don't match, a redirect_uri_mismatch is returned.</p>
<p><strong>Solution</strong></p>
<p>Ideally, Google should modify the API endpoint to ensure that this parameter is decoded if necessary before comparing it to what's registered in the API console.</p>
<p>An acceptable fix would be if the API console would accept encoded redirect URI entries, but it does not:</p>
<p><a href="https://i.stack.imgur.com/LYy9m.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/LYy9m.png"/></a></p>
<p><strong>Workaround</strong> (warning: hacky)</p>
<p>Simply replace the encoded redirect_uri parameter in two places in the oauth2client library:</p>
<p>(1) <em>update_query_params</em> function in <a href="https://github.com/google/oauth2client/blob/master/oauth2client/_helpers.py" rel="nofollow noreferrer">_helpers.py</a></p>
<pre><code>...
start = new_query.find("redirect_uri")+13
end = new_query.find("&amp;",start)
new_query2 = new_query[:start] + "http://localhost:8080" + new_query[end:]

new_parts = parts._replace(query=new_query2)
...
</code></pre>
<p>(2) <em>step2_exchange</em> in <a href="https://github.com/google/oauth2client/blob/master/oauth2client/client.py" rel="nofollow noreferrer">client.py</a></p>
<pre><code>...
        body = urllib.parse.urlencode(post_data)
    start = body.find("redirect_uri")+13
    end = body.find("&amp;",start)
    body2 = body[:start] + "http://localhost:8080" + body[end:]

    headers = {
        'content-type': 'application/x-www-form-urlencoded',
    }
    if self.authorization_header is not None:
        headers['Authorization'] = self.authorization_header
    if self.user_agent is not None:
        headers['user-agent'] = self.user_agent

    if http is None:
        http = transport.get_http_object()

    resp, content = transport.request(
        http, self.token_uri, method='POST', body=body2, headers=headers)
...
</code></pre>
<p>Now everything works.</p>
</div>
<span class="comment-copy">Thanks! It works</span>
<span class="comment-copy">goodjob..keep codin</span>
<span class="comment-copy">I've posted the correct answer to the quickstart. You're using "Web Application" credentials instead of "Other".</span>
<span class="comment-copy">Confirmed :) Thanks for the fix</span>
