<div class="post-text" itemprop="text">
<p>When coding a class that provides abstraction over one or more HTTP APIs that it transparently consumes, what is the appropriate Exception to raise when the service request ends up in a <code>HTTP 404</code> or similar?</p>
<p>The class is intended as a composite object for consumers who have a high-level overview of what services are being consumed but would appreciate a specific exception for failures at the API access level. Of course, one could always write and raise a Custom Exception Object:</p>
<pre><code>class WebServiceUnresponsive(Exception):
    pass
</code></pre>
<p>But going through, <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow noreferrer">Standard Python Exceptions</a>, I am not sure if I am  overlooking a suitable candidate. What is the best practice if not this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>requests</code>:</p>
<p><a href="http://docs.python-requests.org/en/master/_modules/requests/exceptions/" rel="nofollow noreferrer">requests.exceptions</a> contains a multitude of built-in HTTP exceptions, and includes a specific <a href="http://docs.python-requests.org/en/master/user/quickstart/#response-status-codes" rel="nofollow noreferrer">response.raise_for_status()</a>, which does all the heavy lifting for you (example from the link):</p>
<pre><code>&gt;&gt;&gt; bad_r = requests.get('http://httpbin.org/status/404')
&gt;&gt;&gt; bad_r.status_code
404

&gt;&gt;&gt; bad_r.raise_for_status()
Traceback (most recent call last):
  File "requests/models.py", line 832, in raise_for_status
    raise http_error
requests.exceptions.HTTPError: 404 Client Error
</code></pre>
<p>If you aren't using requests directly, you can <code>from requests import exceptions</code> and then throw your own.</p>
<pre><code>if exception_encountered(req):
    raise exceptions.HTTPError("Got a 404 yo... server says there's nothing there :(")
</code></pre>
</div>
<span class="comment-copy">Why not use an HTTP library, like <a href="http://docs.python-requests.org/en/master/_modules/requests/exceptions/" rel="nofollow noreferrer">requests.exceptions</a>, specifically <a href="http://docs.python-requests.org/en/master/user/quickstart/#response-status-codes" rel="nofollow noreferrer">raise_for_status()</a>?</span>
<span class="comment-copy">I see the most of the requests exceptions are inheriting <code>IOError</code> or <code>ValueError</code> which kind of answers this question in another way, as in how the <code>requests</code> people thought of it. Anyway, great suggestion.</span>
