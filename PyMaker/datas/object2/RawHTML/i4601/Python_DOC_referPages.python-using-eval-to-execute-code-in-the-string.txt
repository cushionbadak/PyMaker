<div class="post-text" itemprop="text">
<p>I have a syntax tree</p>
<pre><code>Tree(if, [Tree(condition, [Token(VARIABLE, 'age'), Token(ACTION_OPERATOR, '&gt;'), Token(SIGNED_NUMBER, '18')]), Tree(result, [Tree(if, [Tree(condition, [Token(VARIABLE, 'salary'), Token(ACTION_OPERATOR, '&gt;'), Token(SIGNED_NUMBER, '100000')]), Tree(result, [Token(STRING, 'success')]), Tree(condition, [Token(VARIABLE, 'salary'), Token(ACTION_OPERATOR, '&lt;'), Token(SIGNED_NUMBER, '50000')]), Tree(result, [Token(STRING, 'fail')]), Tree(else, [Token(STRING, 'get_more_info')])])]), Tree(else, [Token(STRING, 'fail')])])
</code></pre>
<p>And I convert it to string:</p>
<pre><code>if age &gt; 18:
    if salary &gt; 100000:
        print('success')
    elif salary &lt; 50000:
        print('fail')
    else: 
        print('get_more_info')
else:
    print('fail')
</code></pre>
<p>I declare variables:</p>
<pre><code>age = 20
salary = 60000
</code></pre>
<p>And try to execute this code with</p>
<pre><code>eval(code)
</code></pre>
<p>and get an error</p>
<pre><code>File "&lt;string&gt;", line 1
if age &gt; 18: 
 ^
SyntaxError: invalid syntax
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/dev/library/functions.html#exec" rel="nofollow noreferrer"><code>exec</code></a> not <a href="https://docs.python.org/dev/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a>:</p>
<pre><code>code = """
if age &gt; 18:
    if salary &gt; 100000:
        print('success')
    elif salary &lt; 50000:
        print('fail')
    else: 
        print('get_more_info')
else:
    print('fail')"""

exec(code, {"age": 20, "salary": 60000})
# out: get_more_info
</code></pre>
<p><code>exec</code> takes a code string, or an code object. While <code>eval</code> takes an expression.</p>
<hr/>
<p>Alternatively, you can always evaluate (using <code>eval</code>) code objects by <a href="https://docs.python.org/dev/library/functions.html#compile" rel="nofollow noreferrer">compiling</a> the code string beforehand:</p>
<pre><code>eval(compile(code, '&lt;string&gt;', 'exec'), {"age": 20, "salary": 60000})
# out: get_more_info
</code></pre>
<hr/>
<p>Just for the fun of it, you <em>can</em> use <code>eval</code> for your syntax tree without needing to compile your code, but your code has to be a bit different:</p>
<pre><code>code = 'print(("success" if salary &gt; 100000  else "fail" if salary &lt; 50000 else "get_more_info") if age &gt; 18 else "fail")'

eval(code, {"age": 20, "salary": 60000})
# out: get_more_info
</code></pre>
<p>This utilizes Python's <a href="https://stackoverflow.com/q/394809/6622817">ternary</a> conditions, which technically is still counted as an expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are confusing <a href="https://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> with <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer"><code>exec()</code></a>.</p>
<p><code>eval()</code> is used for expressions, such as <code>False==True</code>:</p>
<pre><code>&gt;&gt;&gt; eval('False==True')
False
</code></pre>
<p><code>exec()</code> is used to dynamically execute code:</p>
<pre><code>age = 10
s = '''
if age &gt; 18:
    if salary &gt; 100000:
        print('success')
    elif salary &lt; 50000:
        print('fail')
    else: 
        print('get_more_info')
else:
    print('fail')
'''

exec(s)
</code></pre>
<p>Output:</p>
<pre><code>fail
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/30671563/eval-not-working-on-multi-line-string">Eval not working on multi-line string</a></span>
<span class="comment-copy">Found more detailed answer. <a href="https://stackoverflow.com/questions/2220699/whats-the-difference-between-eval-exec-and-compile-in-python" title="whats the difference between eval exec and compile in python">stackoverflow.com/questions/2220699/â€¦</a></span>
<span class="comment-copy">May I ask how you convert back and forth between syntax tree and code as a string?</span>
<span class="comment-copy">and can you say, If I have not formated string like <code>"if age &gt; 18: if salary &gt; 100000: print('success') elif salary &lt; 50000: print('fail') else: print('get_more_info') else: print('fail')"</code> is any way to add markup?</span>
<span class="comment-copy">My last example uses the ternary syntax, it changed more than just the formatting. You can add comments (if that's what you meant by markup) at the end of the expression, since ternary conditions are no different than normal expressions. Though I do advise to use my first example because it's the clearest and the simplest to use.</span>
