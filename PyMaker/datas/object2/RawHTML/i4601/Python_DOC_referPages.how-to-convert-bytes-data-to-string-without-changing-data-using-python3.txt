<div class="post-text" itemprop="text">
<p>How can I convert bytes to string without changing data ?<br/>
E.g<br/>
<strong>Input:</strong><br/>
<code>file_data = b'\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff'</code></p>
<p><strong>Output:</strong><br/>
<code>'\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff'</code></p>
<p>I want to write an image data using StringIO with some additional data, Below is my code snippet,</p>
<pre><code>img_buf = StringIO()
f = open("Sample_image.jpg", "rb")
file_data = f.read()
img_buf.write('\r\n' + file_data + '\r\n')
</code></pre>
<p>This works fine with python 2.7 but I want it to be working with python 3.4.<br/>
on read operation <code>file_data = f.read()</code> returns bytes object data something like this  </p>
<pre><code>b'\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff'  
</code></pre>
<p>While writting data using <code>img_buf</code> it accepts only String data, so unable to write <code>file_data</code> with some additional characters.
So I want to convert <code>file_data</code> as it is in String object without changing its data. Something like this </p>
<pre><code>'\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff'  
</code></pre>
<p>so that I can concat and write the image data.</p>
<p>I don't want to decode or encode data. Any suggestions would be helpful for me. thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is not clear what kind of output you desire.  If you are interested in <em>aesthetically</em> translating bytes to a string representation without encoding:</p>
<pre><code>s = str(file_data)[1:]
print(s)
# '\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff'
</code></pre>
<p>This is the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer">informal string representation</a> of the original byte string (no conversion).  </p>
<hr/>
<p><strong>Details</strong></p>
<p>The <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer">official string representation</a> looks like this:</p>
<pre><code>s
# "'\\xb4\\xeb7s\\x14q[\\xc4\\xbb\\x8e\\xd4\\xe0\\x01\\xec+\\x8f\\xf8c\\xff\\x00 \\xeb\\xff'"
</code></pre>
<p><em>String representation handles how a string looks.</em>  Double escape characters and double quotes are implicitly interpreted in Python to do the right thing so that the <code>print</code> function outputs a formatted string.</p>
<p><em>String intrepretation handles what a string means.</em>  Each block of characters means something different depending on the applied encoding.  Here we interpret these blocks of characters (e.g. <code>\\xb4</code>, <code>\\xeb</code>, <code>7</code>, <code>s</code>) with the <code>UTF-8</code> encoding.  Blocks unrecognized by this encoding are replaced with a default character, �:</p>
<pre><code>file_data.decode("utf-8", "replace")
# '��7s\x14q[Ļ���\x01�+��c�\x00 ��'
</code></pre>
<p>Converting from bytes to strings is required for reliably working with strings.</p>
<p>In short, there is a difference in string output between how it looks (representation) and what it means (interpretation).  Clarify which you prefer and proceed accordingly.</p>
<p><strong>Addendum</strong></p>
<p>If your question is "how do I concatenate a byte string?", here is one approach:</p>
<pre><code>buffer = io.BytesIO()
with buffer as f:
    f.write(b"\r\n")
    f.write(file_data)
    f.write(b"\r\n")
    print(buffer.getvalue())
# b'\r\n\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff\r\n'
</code></pre>
<p>Equivalently:</p>
<pre><code>buffer = b""
buffer += b"\r\n"
buffer += file_data
buffer += b"\r\n"
buffer
# b'\r\n\xb4\xeb7s\x14q[\xc4\xbb\x8e\xd4\xe0\x01\xec+\x8f\xf8c\xff\x00 \xeb\xff\r\n'
</code></pre>
</div>
<span class="comment-copy">Are you asking how to convert the bytes data to a string?  Just <code>my_string = file_data.decode('utf-8')</code>?  (Realize that decoding is literally converting bytes to a string... are you <b>sure</b> you don't want to decode it?)</span>
<span class="comment-copy"><code>my_string = file_data.decode('utf-8')</code>  Gives error as <code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb4 in position 0: invalid start byte</code></span>
<span class="comment-copy">I won't try to close this as a duplicate, because I don't yet understand what you want, but does <a href="https://stackoverflow.com/questions/13837848/converting-byte-string-in-unicode-string?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" title="converting byte string in unicode string">stackoverflow.com/questions/13837848/…</a> solve your problem?</span>
<span class="comment-copy">Actually, I'll step it back a bit.  Please read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.  Your title mentions "bytes data of an image".  This is presumably 64-bit encoded image data that you're loading.  With the appropriate functions, you can convert this data to an image.  Why do you want it to be a string?  Can you please <a href="https://stackoverflow.com/posts/49453235/edit">edit</a> your question to tell us what exactly you're trying to do with it?</span>
<span class="comment-copy">You'll need to explain better what you mean by "without changing data".  The data doesn't change; simply the way it is interpretted does when you use decode.  I'll just leave this here as recommended reading, and wish you good luck.  <a href="https://docs.python.org/3.3/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/3.3/howto/unicode.html</a></span>
<span class="comment-copy">I tried both of ways you mentioned in answer. <code>file_data = str(file_data)[2:-1]</code> returns String like  <code>'\\xb4\\xeb7s\\x14q[\\xc4\\xbb\\x8e\\xd4\\xe0\\x01\\xec+\\x8f\\xf8c\\xff\\x00 \\xeb\\xff'</code> which contains escaped backslashes and I dont want escaped backslashes. I have added brief explanation in question for more information. Thanks @pylang</span>
<span class="comment-copy"><code>s</code> has escaped characters because it is a string.   To my knowledge, you cannot change that (and probably should not try).  It seems like you just want to append data to a byte string, correct?  If so, is it necessary to have a string result?  How about modifying a byte string instead?</span>
