<div class="post-text" itemprop="text">
<p>So I recently built a Python package that required a few YAML files for configuration. Following the <a href="https://docs.python.org/3/distutils/sourcedist.html" rel="nofollow noreferrer">distribution instructions</a> I created a manifest file that looks like the following:</p>
<pre><code>include LICENSE.txt
recursive-include thecurator *.yml *.csv *.json *.txt
</code></pre>
<p>According to the docs, I should have expected for the file to end up in the package... but it didn't, and after this screw up, I'm wondering how would I go about testing the built package against my pytest suite to make sure everything will work as expected after a build?</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the manifest file is four source distributions. To include data files in built distributions you use the <code>package_data</code> option in the setup function.</p>
<pre><code>setup(
    name=NAME,
    version=VERSION,
    packages=find_packages(),
    package_data={"mypackage": ["*.yaml"]},  # &lt;- this
    test_suite="tests",
    tests_require=['pytest'],
    ...
    )
</code></pre>
</div>
<span class="comment-copy">How can I actually test to ensure everything works at the distribution level though? My test suite and CI setup are a complete joke if mistakes like won't get caught.</span>
<span class="comment-copy">You could just inspect the package (get a list of contents), and check that it's there.  You could also take the built package and install it in a new place. A virtual environment would be good, such as <code>venv</code>. Then check for the files. But that's probably overkill.</span>
