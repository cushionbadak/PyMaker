<div class="post-text" itemprop="text">
<p>I have my script that exits through the <code>except KeyboardInterrupt</code> when CTLC+C is pressed as follows:</p>
<pre><code>....

try:
    thread1.start()
    thread2.start()
    while True:
        time.sleep(1)

except (KeyboardInterrupt, SystemExit, Exception):
    print("exiting")
    # handle proper threads exit
</code></pre>
<p>However, when the script is running as systemd and I call <code>systemctl stop myscript.service</code>, the 'exiting' message is not logged to the syslogger, so I know that the <code>except</code> is not executed. The <code>SystemExit</code> and <code>Exception</code> do not seem to be issued on service stop. What is issued by the systemctl so I could catch it in the <code>try - except</code> portion of my script?</p>
<p>Also, do I need to care for proper threads exit when calling <code>systemctl stop</code>, or it will handle my script nicely?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can specify the <a href="http://manpages.ubuntu.com/manpages/bionic/en/man5/systemd.kill.5.html" rel="nofollow noreferrer"><code>KILL_MODE</code></a> option in the systemd config file that specifies what signal is sent to the process to exit it. Then you can modify the python script to capture the specified signal using the <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer"><code>signal</code></a> module and perform your exit code accordingly.</p>
<p>As for the other threads, it depends on how critical they are and how they are instantiated. If they are instantiated as daemonic and there is no consequence to them simply terminating at any given time, you can just let them die. Otherwise you should explicitly code the logic to shut them down properly when the signal is received.</p>
</div>
