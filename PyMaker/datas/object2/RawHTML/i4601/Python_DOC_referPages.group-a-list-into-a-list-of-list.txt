<div class="post-text" itemprop="text">
<p>I have a list 'mylist' as follows:</p>
<pre><code>l = [2,4,4,3,9,9,1]
</code></pre>
<p>I have to group its elements if each element is multiple of it.
The expected result is:</p>
<pre><code>result = [[4,4], [9,9]]
</code></pre>
<p>I did as follows:</p>
<pre><code>mylist = [2,4,4,3,9,9,1]


results = [] 
for l in mylist:
    res = [l for l in mylist if l*2 == l]
    results.append(res)


print (results)   

[[], [], [], [], [], [], []]
whoops, what's error guys?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> to count how many times each value occurs in the list, and then create a new list out of all values that occur at least two times:</p>
<pre><code>import collections

counter = collections.Counter(l)
result = [[value]*count for value, count in counter.items() if count &gt; 1]

print(result)
# output: [[9, 9], [4, 4]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>groupby</code> from the <code>itertools</code> package to do this.  It is designed to group together like elements.  The example below sorts the list first, to ensure all matching items are pulled together.  If you don't want that behavior, just remove <code>sorted</code>, and it will only group consecutive matching items.</p>
<pre><code>from itertools import groupby

l = [2,4,4,3,9,9,1]

x = [list(g) for _, g in groupby(sorted(l))]
x = [e for e in x if len(e) &gt; 1]

x
# returns:
[[4, 4], [9, 9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With your original code, for each element of the input list, you create a new list (<code>res</code>) that contains each element that is equal to its double (which works only with the zero value ), then you append to your output list.<br/>
So it does not work at all.  </p>
<p>I may suggest you this solution, without any additional package and easily readable:  </p>
<pre><code>l = [2,4,4,3,9,9,1]

results = []
for i in set(l):
    if l.count(i) &gt; 1:
        results.append([i]*l.count(i))

print(results)
</code></pre>
<p>I also add the one-line style solution:  </p>
<pre><code>l = [2,4,4,3,9,9,1]

results = [[i]*l.count(i) for i in set(l) if l.count(i) &gt; 1]

print(results)
</code></pre>
</div>
<span class="comment-copy"><code>l*2==l</code> is only true if <code>l</code> is zero.</span>
<span class="comment-copy">@ian The correct question would be "<i>Why</i> is someone downvoting my question?".</span>
<span class="comment-copy">Your quesiton is somewhat hard to follow. "I have to group its elements if each element is multiple of it." â€” A multiple of what?</span>
<span class="comment-copy">@ian <i>Every</i> number is a multiple of itself. That can't be what you mean. I'm not sure even you know what you mean.</span>
<span class="comment-copy">@ian I have posted a solution after having understood that <code>if each element is multiple of it</code> meant <code>for each element that is present more than one time in the list</code>. Is it the correct meaning ?</span>
<span class="comment-copy">Thanks @Chris_Rands.  I updated the answer.</span>
<span class="comment-copy">@ian I don't think so, but this is not the same question at all anyway. Is my answer answering to your original question of this page ?</span>
<span class="comment-copy">That's a <i>very</i> inefficient solution. Iterating over the list and counting the occurence of each value (twice)? That's quadratic run time complexity. On the plus side, it's a very readable solution.</span>
