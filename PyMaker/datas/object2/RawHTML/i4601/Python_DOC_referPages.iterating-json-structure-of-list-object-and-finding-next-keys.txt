<div class="post-text" itemprop="text">
<p>I have a Json list and I want to print all the keys from a given key till the end of dictionary. But the code I wrote is very complex. How to do it with less complexity ?
I'm using <strong>Python 3</strong></p>
<pre><code>dictionary = [{"a": "1"}, {"b": "2"}, {"c": "3"}, {"d": "4"}]

try:
    for token in dictionary:
            if "b" in list(token.keys())[0]:
                new_dict = dictionary[len(list(token.keys())[0]):]
                for i in new_dict:
                    print(new_dict[len(list(i.keys())[0]):])
                break
            else:
                print("Inception")
except Exception as error:
    print(str(error))
</code></pre>
<p><strong>DESIRED</strong> <br/>
Input: <strong>b</strong> <br/>
Output: <strong>c, d</strong></p>
<p><strong>My Output</strong>: </p>
<pre><code>Inception
[{'c': '3'}, {'d': '4'}]
[{'c': '3'}, {'d': '4'}]
[{'c': '3'}, {'d': '4'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.dropwhile" rel="nofollow noreferrer"><code>itertools.dropwhile()</code></a> to skip all dictionaries that don't have a <code>'b'</code> key:</p>
<pre><code>from itertools import dropwhile

filtered = dropwhile(lambda t: 'b' not in t, dictionary)
next(filtered)  # skip the dictionary with `b` in it.

for token in filtered:
    print(token)
</code></pre>
<p>This prints all dictionaries after the first. If you only need to print their keys, do so explicitly:</p>
<pre><code>filtered = dropwhile(lambda t: 'b' not in t, dictionary)
next(filtered)  # skip the dictionary with `b` in it.

for token in filtered:
    print(*token, sep='\n')
</code></pre>
<p>This prints the keys on separate lines; if there is just one key, then that's all that'll be printed for each <code>token</code> dictionary.)</p>
<p>As a side note: you <strong>really</strong> do not want to use <code>list(dict.keys())[0]</code>. Before Python 3.6, dictionaries have no set order (instead <a href="https://stackoverflow.com/questions/15479928/why-is-the-order-in-dictionaries-and-sets-arbitrary/">being subject to insertion and deletion history and the current random hash seed</a>), so if you have more than one key what value you'll get is a gamble. And all you want to do is see if a key is present, so use a <code>key in dictobject</code> membership test.</p>
<p>To get the first key out of each dictionary, I'd use <code>next(iter(dictobject))</code>, avoiding creating a list:</p>
<pre><code>first_key = next(iter(dictobject))
</code></pre>
<p>I'd only use this if I had <em>single-key</em> dictionaries. I'd also avoid using dictionaries for such a scenario; perhaps you really wanted to use an ordered dictionary instead (in Python &lt; 3.6, use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict()</code></a>, otherwise use the <a href="https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6">regular <code>dict</code> type</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way. The idea is to find the index of the dictionary with desired key. Then filter your list accordingly.</p>
<pre><code>keys = [next(iter(x)) for x in dictionary]
res = keys[keys.index('b')+1:]
# ['c', 'd']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can re-write your code as follows for your desired result.</p>
<pre><code>found = False
for data in dictionary:
    if found:
        print(list(data.keys())[0])
    if 'b' in data.keys():
        found = True
</code></pre>
</div>
<span class="comment-copy">What's your desired output for the given data ? The question is unclear.</span>
<span class="comment-copy">I mentioned the desired and the output I'm receiving.</span>
<span class="comment-copy">Sounds like you want <a href="https://docs.python.org/3/library/itertools.html#itertools.dropwhile" rel="nofollow noreferrer"><code>itertools.dropwhile()</code></a>..</span>
<span class="comment-copy"><code>if 'b' in list(token.keys())[0]</code> should just be <code>if 'b' in token</code>. Dictionaries have no order, your test would be subject to the whim of insertion order and the current random hash seed if you have more than one key.</span>
<span class="comment-copy">Thanks Martijin :) This helps.</span>
<span class="comment-copy">Thanks for the update jpp :) But I just need c, d (i.e, only the keys). How can I find the keys?</span>
<span class="comment-copy">Thanks jpp :) This helps.</span>
