<div class="post-text" itemprop="text">
<p><strong>Set-up</strong></p>
<p>I have a large dictionary with unique keys, unique values and non-unique values in lists.</p>
<p>Dictionary looks like,</p>
<pre><code>d = {'a': ['1','2','3'],'b': ['1'],'c': ['1','3']}
</code></pre>
<hr/>
<p><strong>Problem</strong></p>
<p>I'd like to swap the keys and values such that,</p>
<pre><code>d_inverse = {'1': ['a', 'b', 'c'], '2': ['a'],'3': ['a', 'c']}
</code></pre>
<p>I've found the following answers about swapping keys and values,</p>
<ul>
<li><a href="https://stackoverflow.com/questions/483666/python-reverse-invert-a-mapping">Python reverse / invert a mapping</a></li>
</ul>
<p>and about swapping keys with values in lists, </p>
<ul>
<li><a href="https://stackoverflow.com/questions/31674403/swap-dictionary-keys-and-values-when-values-are-lists">Swap dictionary keys and values when values are lists</a></li>
</ul>
<p>the last answer comes close, but doesn't manage non-unique values in lists. </p>
<p>That is, </p>
<pre><code>{k: oldk for oldk, oldv in d.items() for k in oldv}
</code></pre>
<p>produces </p>
<pre><code>{'1': 'c', '2': 'a', '3': 'c'}
</code></pre>
<p>How do I account for the non-unique values and don't lose information?</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>:</p>
<pre><code>d = {'a': ['1','2','3'],'b': ['1'],'c': ['1','3']}

from collections import defaultdict
d_dict = defaultdict(list)
for k,v in d.items():
    for i in v:
        d_dict[i].append(k)

dict(d_dict)
#{'1': ['a', 'b', 'c'], '2': ['a'], '3': ['a', 'c']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a <code>for-loop</code></p>
<pre><code>d = {'a': ['1','2','3'],'b': [1],'c': ['1','3']}
res = {}

for k,v in d.items():           #Iterate dictionary.
    for i in v:                 #Iterate List
        i = str(i)              #Convert element to string
        if i not in res:        #Check if key in dictionary.
            res[i] = [k]
        else:
            res[i].append(k)    #Else append element. 
print(res)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'1': ['a', 'c', 'b'], '3': ['a', 'c'], '2': ['a']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Someone answered this question <a href="https://stackoverflow.com/a/485368/9544516">here</a></p>
<pre><code>inv_map = {}
for k, v in my_map.iteritems():
    inv_map.setdefault(v, []).append(k)
</code></pre>
<p>with a small change it works as we want:</p>
<pre><code>d = {'a': ['1','2','3'],'b': ['1'],'c': ['1','3']}

inv_map = {}
for k, vs in d.items():
    for v in vs:
        inv_map.setdefault(v, []).append(k)


print(inv_map)
&gt;&gt;&gt; {'1': ['a', 'b', 'c'], '2': ['a'], '3': ['a', 'c']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use a dictionary comprehension:</p>
<pre><code>from string import ascii_lowercase as alphabet
d = {'a': ['1','2','3'],'b': ['1'],'c': ['1','3']}
new_d = {str(alphabet.index(a)+1):[alphabet[int(i)-1] for i in b] for a, b in d.items()}
</code></pre>
<p>Output:</p>
<pre><code>{'1': ['a', 'b', 'c'], '2': ['a'], '3': ['a', 'c']}
</code></pre>
</div>
<span class="comment-copy">Consider using a loop?</span>
<span class="comment-copy">Note you have both <code>int</code> and <code>string</code> values in the lists in <code>d</code>, so your output isn't quite right (it should have both <code>'1'</code> and <code>1</code> keys).</span>
<span class="comment-copy">Thanks, I edited my example.</span>
<span class="comment-copy">Thanks Maarten. I found that one, but doesn't work. <code>list</code> is not hashable.</span>
