<div class="post-text" itemprop="text">
<p>I have a csv file. I want to split the data by the trips taken that day. I tried creating a List of list of dictionaries. I am hoping maybe there is a better approach? My end goal is to use the get a distance summary from google distance api for the distance traveled that day.</p>
<p>For example, for the below follow input:</p>
<p>Input csv file:</p>
<pre><code>Address,City,State,ShowingDateTime
1234 Hodge Street,Brown,CA,1/4/17 12:00
9613 Llama Street,Downtown,CA,1/5/17 12:15
7836 Bob Street,Swamp,CA,1/5/17 12:15
2134 Cardinal Street,Ruler,CA,1/6/17 11:30
</code></pre>
<p>Expected data structure?:</p>
<pre><code>List[ 
  List[Dict[1234 Hodge Street,Brown,CA,1/4/17 12:00],
  List[
    Dict[9613 Llama Street,Downtown,CA,1/5/17 12:15],
    Dict[7836 Bob Street,Swamp,CA,1/5/17 12:15]
  ],
  List[
    Dict[2134 Cardinal Street,Ruler,CA,1/6/17 11:30]
  ]
]
</code></pre>
<p>Attempt (not working):</p>
<pre><code>#!/usr/bin/env python3
from datetime import datetime
from googlemaps import Client
import requests
import csv
def read_csv(csv_file):  
  trip_list = []
  with open(csv_file) as File:
    reader = csv.DictReader(File, dialect='excel')   
    subtrip_list=[]
    previous_date=0
    for row in reader:
      current_date = datetime.strptime(row['ShowingDateTime'], '%m/%d/%y %H:%M').date()
      if previous_date==0:
        previous_date=current_date
      if current_date != previous_date:
        trip_list.append(subtrip_list)
        del subtrip_list[:]
      subtrip_list.append(row)
      previous_date=current_date 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group the rows using the date string. <code>csv.DictReader</code> allows to you return the csv rows as dicts with keys as the csv header: </p>
<pre><code>import csv
from itertools import groupby

func = lambda x: x['ShowingDateTime'].split()[0]

def read_csv(csv_file): 
    with open(csv_file) as f:
        reader = csv.DictReader(f)
        lst = [list(grp) for _, grp in groupby(sorted(reader, key=func), func)]
    return lst
</code></pre>
<p>This returns a list of lists of dicts grouped by the dates. You may skip sorting step if the rows are already sorted by date.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have never used the google api, but my suggestion for a simpler approach would be to use pandas.</p>
<pre><code>import pandas as pd
df = pd.read_csv('data.csv', parse_dates=['DateTime'])
print(df)
</code></pre>
<p>Outputs</p>
<pre><code>                Address      City State            DateTime
0     1234 Hodge Street     Brown    CA 2017-01-04 12:00:00
1     9613 Llama Street  Downtown    CA 2017-01-05 12:15:00
2       7836 Bob Street     Swamp    CA 2017-01-05 12:15:00
3  2134 Cardinal Street     Ruler    CA 2017-01-06 11:30:00
</code></pre>
<p>From this point I think it is much easier to get whatever formats you prefer. But the data frame seems very useful for your use case. I would add another column for distance traveled from last point and plug the result from the google api in. But that is just me.</p>
</div>
<span class="comment-copy">If you are going to specify a <code>departure_time</code> for requests to the Distance Matrix API, it needs to be in the future, not the past, as per the <a href="https://developers.google.com/maps/documentation/distance-matrix/intro#departure-time" rel="nofollow noreferrer">documentation</a>. So your requests would have to omit the date/time info.</span>
