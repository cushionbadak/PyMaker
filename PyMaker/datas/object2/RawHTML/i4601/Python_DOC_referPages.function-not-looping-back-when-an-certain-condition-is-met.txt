<div class="post-text" itemprop="text">
<p>I am building off of a simple Pythagorean Theorem calculator I wrote a while back to make a more advanced version as an introduction to classes and functions. I've successfully programmed it to solve for c, either a or b and to loop back the calculation function if the user needs to do another calculation.</p>
<p>I've recently tried to add a main menu function, so if the user needed to solve for c, and now needs to solve for b, he/she can go back to the main menu to select the option they need. With some difficulty, I've managed to code it to where it will</p>
<ol>
<li>Go back to the main menu</li>
<li>The user selects another option</li>
<li>The user performs the calculation as needed</li>
<li>1-3 repeats successfully </li>
</ol>
<p>But then if they try to go back and select another option, it just returns to the python prompt. It's very hard for me to describe this problem in words, as other things go wrong as well. Such as, if you preform less than 2 calculations and try to go back, the method you're currently on keeps looping. I have no idea why any of this is happening, and it seems I'm doing everything right. I've tried troubleshooting, but as said above, my particular situation is hard to describe. I'm convinced that I haven't done it right, and I would like to know how. My code and screenshots are attached below. </p>
<p>Code</p>
<pre><code>    ' A Pythagoren Therom Calculator (v.2.0)
By: Anon_104'''
#imports
import time, math
#Welcome statement (Welcomes the user)
print("Welcome to the pythagorean theorem calculator!")
time.sleep(1)
#a class to organize and keep everything in order ;)
class pytha:
    #custom function for solving for c
    def cal():
        global ques1
        a = int(input('Please enter the "A" value: '))
        b = int(input('Please enter the "B" value: '))
        print("Calculating...")
        time.sleep(1)
        print('The "C" value is ')
        c = math.sqrt(a*a + b*b)
        print(c)
        ques1 = str(input("Another Calculation? (y/n) Or return to main menu? (back)"))
    #function for solving for a or b, given c
    def cal2():
        global ques2
        var = input('Please input either the "A" or "B" value: ')
        c = input('Please input the "C" value: ')
        var2 = float(c)**2 - float(var)**2
        ans = math.sqrt(var2)
        print('The "A"/"B" value is {0}'.format(ans))
        ques2 = str(input("Another Calculation? (y/n) Or return to main menu? (back)"))
    def mainmenu():
        global query1
        query1 = input('Welcome to the main menu! Solve for "C" or "A"/"B"? (opt1/opt2)')
pytha.mainmenu()

#The loop and break code for function 1      
if query1 == 'opt1':
    pytha.cal()
    while ques1 == 'y':
        pytha.cal()
        if ques1 == 'back':
            pytha.mainmenu()
            while query1 == 'opt1':
                pytha.cal()
        elif ques1 == 'n':
            print("Quitting... ")
            time.sleep(1.6)
            quit



#The loop and break code for function 2
if query1 == 'opt2':
    pytha.cal2()
    while ques2 == 'y':
        pytha.cal2()
        if ques2 == 'back':
            pytha.mainmenu()
            while query1 == 'opt2':
                pytha.opt2
        elif ques2 == 'n':
            print("Quitting... ")
            time.sleep(1.6)
            quit
</code></pre>
<p>Screenshot
<a href="https://i.stack.imgur.com/LmJ2I.png" rel="nofollow noreferrer">It doesn't loop again</a></p>
<p>P.S This is my first question EVER on a help board for anything, so go easy on me if I haven't done something right.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don’t need the query statements at the end. Include the calls to your methods in the methods or create a new one for the purpose of returning to the main menu. I would also suggest using float() instead of int() when dealing with possible decimals, but I did not change this. </p>
<pre><code>class Pytha(object):
    def __init__(self):
        import time, math
        self.math = math
        self.time = time
        print("Welcome to the pythagorean theorem calculator!\n")
        self.time.sleep(1)
        self.mainmenu()

    #custom function for solving for c
    def cal(self):
        try:
            a = int(input('\nPlease enter the "A" value: '))
            b = int(input('Please enter the "B" value: '))
            print("Calculating...")
            self.time.sleep(1)
            print('The "C" value is ')
            c = self.math.sqrt(a*a + b*b)
            print(c)
        except ValueError:
            print("\nError: Please enter a number\n")
            self.cal()
        self.rerun()

    #function for solving for a or b, given c
    def cal2(self):
        try:
            var = int(input('\nPlease input either the "A" or "B" value: '))
            c = int(input('Please input the "C" value: '))
            var2 = float(c)**2 - float(var)**2
            ans = self.math.sqrt(var2)
            print('The "A"/"B" value is {0}'.format(ans))
        except ValueError:
            print("\nError: Please enter a number\n")
            self.cal2()
        self.rerun()

    def mainmenu(self):
        query1 = str(input('Welcome to the main menu! Solve for "C" or "A"/"B" or quit program? (opt1/opt2/q)\n'))
        if query1.lower() == "opt1":
            self.cal()
        elif query1.lower() == "opt2":
            self.cal2()
        elif query1.lower() == 'q':
            quit()
        else:
            print("Error: Please type 'opt1' or 'opt2' or 'q'\n")
            self.mainmenu()

    def rerun(self):
        query1 = str(input('\nAnother Calculation? Solve for "C" or "A"/"B" or quit program? (opt1/opt2/q)\n'))
        if query1.lower() == "opt1":
            self.cal()
        elif query1.lower() == "opt2":
            self.cal2()
        elif query1.lower() == 'q':
            quit()
        else:
            print("Error: Please type 'opt1' or 'opt2' or 'q'\n")
            self.rerun()

app = Pytha()           
</code></pre>
<p>There were more things you could do to clean this up. I put everything in the class and called everything as self.something(). </p>
<p>I added .lower() for your responses in case a user does OPT1 or Opt1. </p>
<p>I created a single rerun function to call after each operation. It automatically goes to this after the first run. </p>
<p>I also used try/except for your inputs because you will get a ValueError by entering a non-numeric character when calling int(). Instead, it now will tell the user to enter a number and will try again. </p>
<p>For quit, you need to call it as quit().</p>
<p>The <strong>init</strong> loads as soon as you call the class, which allows you to do things to initiate it, such as including your imports, setting variables, printing messages, and running functions. This way it is all inclusive. </p>
<p>Finally, it is standard practice to begin you class name with a capital letter (though not a requirement).</p>
<p>Hope this helps you get a better idea of how to use classes. </p>
<p>EDIT:</p>
<p>If you want to build a custom import for your tool to use without direct user interaction, you can build it like this:</p>
<pre><code>class Pythag(object):
    #custom function for solving for c
    def solve_C(a, b):
            from math import sqrt
            a = int(a)
            b = int(b)
            c = sqrt(a*a + b*b)
            return (c)

    #function for solving for a or b, given c
    def solveAB(var, c):
            from math import sqrt
            var = int(var)
            c = int(c)
            var2 = float(c)**2 - float(var)**2
            ans = sqrt(var2)
            return(ans)
</code></pre>
<p>Then you can import it into another script. If your pythag script is named pythag.py, you would import it as </p>
<pre><code>from pythag import Pythag
</code></pre>
<p>Then call the modules like this:</p>
<pre><code>Pythag.solve_C(4,5)
</code></pre>
</div>
<span class="comment-copy">This is a lot of code. Please try to pare it down to a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> that still demonstrates the same problem you're asking for help with.</span>
<span class="comment-copy">You need to put a loop around the code starting with <code>pytha.mainmenu()</code>. Also your line <code>quit</code> won't do anything useful, if you want to exit the script, call <code>quit()</code>, but if you just want to exit that loop, then you should use a different name as <a href="https://docs.python.org/3/library/constants.html#quit" rel="nofollow noreferrer">quit is a builtin</a>.</span>
<span class="comment-copy">Thank you very much. I'm quite new to programming, and don't really know how to solve problems with my code just yet. This did help me understand and use different methods. Thanks again!</span>
<span class="comment-copy">You’re welcome. If this answered your question, please select it as the best answer and close out the question as answered.</span>
