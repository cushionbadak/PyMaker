<div class="post-text" itemprop="text">
<p>I try to run python3 from a symbolic link on Windows, but it doesn't work! </p>
<p>I have multiple versions of Python installed on my computer, e.g. Python 2.7 and Python 3.6 and 3.6 64bit. They are installed in <code>G:\Developer\Python\2.7</code> and so on.</p>
<p>I use symbolic links to run specific a python version. In <code>G:\Developer\Python</code> are symbolic links <em>python2.exe</em>, <em>python3.exe</em>, <em>python36x64.exe</em> and so on.</p>
<p>To create those symbolic links, I use <a href="http://schinagl.priv.at/nt/hardlinkshellext/linkshellextension.html" rel="nofollow noreferrer">Link Shell Extension</a>.</p>
<p>Running the original python.exe inside the installation path (e.g. G:\Developer\Python\3.6\python.exe) does work without any problems. The symlinks targeting python2 work as expected, too, but the python3 links doesn't work. In a Powershell-terminal, they do nothing at all (no error message, no output). In a windows commandline window, trying to start them give me this error message (translation below):</p>
<p><a href="https://i.stack.imgur.com/g3zsY.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/g3zsY.png"/></a></p>
<p><em>The code could not execute, because python36.dll hasn't been found. Reinstallation will probably solve the problem.</em></p>
<p>So I'm not sure how I should install multiple python version side by side?</p>
<p>Thanks in advance!
Micha</p>
</div>
<div class="post-text" itemprop="text">
<p>Things are worse (or better) than that on Windows. In a traditional Windows installation, the Python executable uses either the registry, the environment or the directory of the executable to locate its installation path. That means that a <em>symbolic link</em> will break that search..</p>
<p>But the standard way to deal with multiple installations on Windows is the <code>py.exe</code> launcher that comes with Python &gt; 3.3 . If you installed for <em>all users</em> or at least asked the installer to <em>install launcher for all users (recommended)</em>, it will be available in default path (my 3.6 version installed it in the Windows directory).</p>
<p>Now without more configuration, you can start Python 2.7 with <code>py -2.7</code>, and Python 3.6 with <code>py -3.6</code> if you do not pass a version option, </p>
<blockquote>
<p>the launcher will correctly select the most appropriate version of Python. It will prefer per-user installations over system-wide ones, and orders by language version rather than using the most recently installed version</p>
<p>...</p>
<p>If you want the latest version of Python 2.x you have installed, try the command:</p>
<pre class="lang-none prettyprint-override"><code>py -2
</code></pre>
</blockquote>
<p>I currently have not a 32 and 64 bits version side by side so I could not test it, but further configuration is possible through a <code>PY.INI</code> file</p>
<p><a href="https://docs.python.org/3/using/windows.html#python-launcher-for-windows" rel="nofollow noreferrer">reference doc for Python launcher</a></p>
</div>
<span class="comment-copy">maybe can try <a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753194(v=ws.10)" rel="nofollow noreferrer">docs.microsoft.com/en-us/previous-versions/windows/it-pro/…</a>  instead of some 3-party tool</span>
<span class="comment-copy">Thanks for commenting! It gives me the same error. I don't think, that this error is caused by the tool - otherwise, the symbolic links to python2  would fail, too.</span>
<span class="comment-copy">I would suggest using <a href="https://bitbucket.org/vinay.sajip/pylauncher/overview" rel="nofollow noreferrer">pylauncher</a> which is included in Python 3.x (also see the <a href="https://docs.python.org/3/using/windows.html?#shebang-lines" rel="nofollow noreferrer">docs</a>). It will work with Python 2.x if you have one or more of them installed (as well as multiple Python 3.x versions). You can control what version executes by either add shebang lines to your scripts or providing a command-line argument to the <code>py</code> command-line tool it installs.</span>
<span class="comment-copy">oh, I can reproduce your issue now, after I remove <code>G:\Developer\Python\3.6</code> from PATH <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/windows/desktop/…</a></span>
<span class="comment-copy">Thank you! This is exactly what I need! As I just read in the docs, you can switch between 64bit and 32bit, too. On 64bit Windows, the pylauncher use 64bit Python by default. If you pass a version option <i>with</i> minor version, you can change that, e.g. <code>py -2.7-32</code> will start Python 2.7 32bit</span>
