<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/477486/how-to-use-a-decimal-range-step-value">How to use a decimal range() step value?</a>
<span class="question-originals-answer-count">
                    33 answers
                </span>
</li>
</ul>
</div>
<p>I'm relatively new to Python, so my code is very simple.<br/>
I have a project to write code which approximates integrals using the rectangle rule, followed by the trapezium rule:</p>
<pre><code>    a = float(input('Lower limit ---&gt; '))

while True:
    b = float(input('Upper limit ---&gt; '))

    if b &gt; a:
        break
    elif a == b:
        print('Integral = 0.')
    else:
        print('Invalid input.')

N = float(input('Number of integral divisions ---&gt; '))

h = float((b - a) / N)

print('For the integral in the range {} to {} with {} divisions, the step size is {}.'.format(a,b,N,h))


def f(x):
    return(np.exp(-x) * sin(x))

summation = (f(a) + f(b))

for points in range(a, N - 1):
    summation = summation + f(a + (points * h))

I = h * summation

print(I)
</code></pre>
<p>Near the end, I try to use a for loop from the initial limit to minus 1 the number of step sizes.<br/>
I've defined this as a float but it I keep getting the error </p>
<blockquote>
<p>TypeError: 'float' object cannot be interpreted as an integer.</p>
</blockquote>
<p>Any ideas how to fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>when you collect your <code>a</code> and <code>N</code> variables, you convert them in <code>float</code>:</p>
<pre><code>a = float(input('Lower limit ---&gt; '))
N = float(input('Number of integral divisions ---&gt; '))
</code></pre>
<p>Then you try to iterate from a to N, but let's assume <code>a=0.42</code> and <code>n=3.14</code>.<br/>
How do you expect python to behave?</p>
<pre><code>print([x for x in range(0.42,3.14)]) # Raise TypeError: 'float' object cannot be interpreted as a
</code></pre>
<p>so you have to convert your float into integers (<code>a = int(a), N = int(N)</code>):</p>
<pre><code>print([x for x in range(0,3)]) # prints [0, 1, 2]
</code></pre>
<p>or you can use numpy, and define 2 float values and the step between them:</p>
<pre><code>import numpy as np
np.arange(0.0, 1.0, 0.1)
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>a</code>, <code>b</code> and <code>N</code> are floats. <code>range</code> does not allow its arguments to be floats so you will need to convert them to <code>int</code>:</p>
<p><code>for points in range(int(a), int(N - 1)):</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The error message clearly states that you are using floats where an integer is wanted. </p>
<p>Read the documentation of <a href="https://docs.python.org/3/library/stdtypes.html?highlight=range#range" rel="nofollow noreferrer"><code>range()</code></a> - what lead you to believe is is capable of doing anything with floats?</p>
<p>There are unlimited floats between 1 and 2 - and still <em>very many</em> if you take the resolution of float into consideration - how should python be able to give you all of them as range?</p>
</div>
<span class="comment-copy"><code>range</code> expects integer arguments, but you give it floating-point values. Either use <code>int</code>, not <code>float</code>, for <code>a</code> and <code>N</code>, or use something like <code>arange</code> or <code>linspace</code> from the NumPy package.</span>
<span class="comment-copy">you are even already working with numpy, so the latest solution should be the best to implement</span>
<span class="comment-copy">Since the OP is using numpy, they could do <code>np.arange</code></span>
<span class="comment-copy">The OP has <code>np.exp(-x)</code> in the <code>f</code> function, which gives me the assumption <code>numpy</code> is being used in some form</span>
<span class="comment-copy">Apologies, I import numpy and some things from math earlier in the notebook.</span>
<span class="comment-copy">Nothing led me to believe it could. It was a complete lack of understanding of what Python IS capable of that led me to assume it could. Thanks for the help.</span>
