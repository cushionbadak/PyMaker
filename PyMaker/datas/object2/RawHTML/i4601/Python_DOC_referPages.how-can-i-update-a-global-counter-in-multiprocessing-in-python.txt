<div class="post-text" itemprop="text">
<p>I have a use case where I am running two <code>while</code> loops simultaneously.Both the loops reference a counter variable which is global. One loop changes the counter variable and the other loop performs certain function based on the current value of the counter. This thing works great if I use <code>threading</code> module. But due to certain performance degradation, I am forced to use <code>multiprocessing</code>.</p>
<p>The problems begins with that. The global variable remains unchanged by either of the 2 processes. I know that the two processes do not have shared memory space like threads and thus their copy of the counter value is different. So, my question is, How can I pass that global variable between the two function like I was able to do using threads. Below is the code sample to illustrate my problem -</p>
<pre><code>import multiprocessing as mp

def work1():
    while True:
        global temp
        if temp==1:
           print("value is 1")
        else:
           print("value is not 1")

def work2():
    while True:
        global temp
        temp+=1
        time.sleep(5)
        temp-=1
        time.sleep(5)

if __name__=='__main__':
    global temp
    temp=0
    p1=mp.Process(target=work1)
    p2=mp.Process(target=work2)
    p1.start()
    p2.start()
</code></pre>
<p>As you can see, I want the <code>process-2</code> to update the global variable <code>temp</code> every 5 seconds. And, the <code>process-1</code> should print the current value of the global variable <code>temp</code>.</p>
<p>I am aware that passing global variables is a very bad code design. So, I am writing the value of the temp variable in a file in process-2 and continuously reading it in process-1. This is even worse idea because of so many file closing/opening operations. </p>
<p>I want to replicate the functionality above, without reading/writing into files or using global variable (which doesn't work). Please help.</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Two separate processes don't share the same globals hence the result you get. I think this should help finding a way to share variables between processes <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow noreferrer">https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes</a></p>
</div>
<span class="comment-copy">If I remember correctly, you can use something like <code>multiprocessing.Queue</code> to share a variable. Also, the module should even have a special type for shared variables.</span>
<span class="comment-copy">I tried following some online tutorials about Queue, Pool, Value. Everything went over my head as they seemed to address complex code structures. If you could give an example with ref to my above code, it'll be very helpful.</span>
