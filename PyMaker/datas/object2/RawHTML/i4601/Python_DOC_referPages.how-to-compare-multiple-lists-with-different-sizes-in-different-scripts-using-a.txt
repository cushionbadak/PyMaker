<div class="post-text" itemprop="text">
<p>I have a single list in script 1</p>
<pre><code>x = [apple,orange,banana,kiwi] 
</code></pre>
<p>In script 2 I have many lists </p>
<pre><code>a = [carrot,apple,celery,banana] 
b = [tomato, kiwi] 
c = [banana, pineapple, strawberry, avocado] 
d = [dragon fruit, lettuce, orange] 
</code></pre>
<p>I am trying to figure out a loop that I can use that will compare list x to each individual list and then create a new lists that have the similarities. The real file will have over 100 lists to go through not 4. </p>
<pre><code>list_one = [apple,banana] 
list_two = [kiwi] 
list_three = [banana] 
list_four = [orange] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a> is actually what you need. You can intermediately convert the lists to sets and then convert it back to a list like below:</p>
<pre><code>x = ['apple','orange','banana','kiwi']

a = ['carrot','apple','celery','banana']
b = ['tomato', 'kiwi']
c = ['banana', 'pineapple', 'strawberry', 'avocado']
d = ['dragon fruit', 'lettuce', 'orange']

result_lists = []
for reference in (a,b,c,d):
    result_lists.append(list(set(x).intersection(set(reference))))

print(result_lists)
&gt;&gt;&gt; [['apple', 'banana'], ['kiwi'], ['banana'], ['orange']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can accomplish this with a one-liner:</p>
<pre><code>out = [[j for j in i if j in x] for i in [a, b, c, d]]
</code></pre>
<p>Yields:</p>
<pre><code>[['apple', 'banana'], ['kiwi'], ['banana'], ['orange']]
</code></pre>
</div>
<span class="comment-copy">Seems like you should be using <code>set</code>s instead of <code>list</code>s and calculating the intersection.</span>
<span class="comment-copy">I guess your actual question is how to access the 100 lists in the 2nd file. You can use set operations for the comparison part. As for the lists, you can put them all in a dictionary and use keys as 0,1,2,.... This way you can iterate over the dictionary and compare the lists.</span>
<span class="comment-copy">You can also use the <code>&amp;</code> operator instead of <code>set(x).intersection(set(reference)</code> as such: <code>set(x) &amp; set(reference)</code>. It's clearer in my humble opinion.</span>
<span class="comment-copy">Use this solution if there are duplicates in the lists in script 2 (e.g. <code>a = ['carrot','apple','celery','banana', 'apple']</code>) and you want the preserve these duplicates, i.e you want the result to be <code>['apple', 'banana', 'apple']</code>.</span>
