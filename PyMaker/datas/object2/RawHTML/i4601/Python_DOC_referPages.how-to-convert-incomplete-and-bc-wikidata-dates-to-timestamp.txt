<div class="post-text" itemprop="text">
<p>The <a href="https://www.wikidata.org/wiki/Help:Dates#Precision" rel="nofollow noreferrer">Wikidata date format</a> looks like this:</p>
<p><code>+2018-03-26T00:00:00Z
</code>
So if Douglas Adams was born on <code>+1952-03-11T00:00:00Z</code></p>
<p>Then I can use Python to get the timestamp like this:</p>
<pre class="lang-py prettyprint-override"><code>from datetime import datetime
from dateutil.parser import parse
datestring = '+1952-03-11T00:00:00Z'
dt_obj = parse(datestring[1:])
print(dt_obj.timestamp())
</code></pre>
<p><code>&gt;&gt;&gt; -562032000.0</code> </p>
<p>As you can see here I cannot use the <em>+ -</em> value, which indicates that the date in AD or BC.</p>
<p>Moreover, I cannot work with an incomplete date: </p>
<p>For example Genghis Khan <code>+1162-00-00T00:00:00Z</code>(day and month missing)</p>
<p>And dates in BC that are also incomplete: Plato <code>-0427-00-00T00:00:00Z</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The standard <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> module cannot handle negative (BC) dates, but <a href="https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html" rel="nofollow noreferrer">NumPy</a> can. It allows you to parse both positive and negative dates, although for some reason it only allows no sign symbol (assumes positive) or negative symbol; maybe it's worth raising an issue, as <a href="https://en.wikipedia.org/wiki/ISO_8601#Years" rel="nofollow noreferrer">the ISO 8601 standard is supposed to support it</a>. The missing months and days, though, are not (afaik) part of the standard; you can split by <code>'-00'</code> as a kinda-hacky-but-effective solution. A complete function could look like this:</p>
<pre><code>import numpy as np

def get_timestamp(date_str):
    # Probably not necessary
    date_str = date_str.strip()
    # Remove + sign
    if date_str[0] == '+':
        date_str = date_str[1:]
    # Remove missing month/day
    date_str = date_str.split('-00', maxsplit=1)[0]
    # Parse date
    dt = np.datetime64(date_str)
    # As Unix timestamp (choose preferred datetype)
    return dt.astype('&lt;M8[s]').astype(np.int64)

date1 = '+1952-03-11T00:00:00Z'
date2 = '-0427-00-00T00:00:00Z'
print('Timestamp for {}: {}'.format(date1, get_timestamp(date1)))
# Timestamp for +1952-03-11T00:00:00Z: -562032000
print('Timestamp for {}: {}'.format(date2, get_timestamp(date2)))
# Timestamp for -0427-00-00T00:00:00Z: -75641990400
</code></pre>
</div>
<span class="comment-copy">Related question: <a href="https://stackoverflow.com/questions/15857797/bc-dates-in-python">BC dates in Python</a>.</span>
<span class="comment-copy">Also can look at <a href="https://stackoverflow.com/questions/32161570/how-to-create-negative-datetime-in-python-2-7">How to create negative datetime in python 2.7</a>, where they suggest using <a href="http://www.astropy.org/" rel="nofollow noreferrer">Astropy</a> or <a href="https://pypi.org/project/datautil" rel="nofollow noreferrer">datautil</a> (not the same as <a href="https://pypi.org/project/python-dateutil/" rel="nofollow noreferrer">dateutil</a>, confusingly enough) instead of the standard <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> objects.</span>
<span class="comment-copy">Opened <a href="https://github.com/numpy/numpy/issues/10810" rel="nofollow noreferrer">NumPy issue #10810</a> about signed positive dates.</span>
<span class="comment-copy">Thanks this is exactly what I was looking for.</span>
<span class="comment-copy"><a href="https://github.com/numpy/numpy/issues/10810" rel="nofollow noreferrer">NumPy issue #10810</a> is now fixed, I suppose the fix will be in for v1.14.3 / v1.15.</span>
<span class="comment-copy">Thanks for the update.</span>
