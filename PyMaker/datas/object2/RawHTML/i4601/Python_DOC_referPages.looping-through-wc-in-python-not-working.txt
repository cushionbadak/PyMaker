<div class="post-text" itemprop="text">
<p>I have written a web scraper according to a youtube vid. It gives me just one container from all 48 containers. </p>
<p>Why isn't my code looping through all the containers automatically? What did I miss here?</p>
<pre><code>    from urllib.request import urlopen as uReq
    from bs4 import BeautifulSoup as soup

    my_url = 'https://www.tradera.com/search?itemStatus=Ended&amp;q=iphone+6+-6s+64gb+-plus'

    #
    uClient = uReq(my_url)
    page_html = uClient.read()
    uClient.close()

    #html parsing
    page_soup = soup(page_html, "html.parser")


    #Container 
    containers = page_soup.findAll("div",{"class":"item-card-details"})

    filename = "ip6.csv"
    f = open(filename, "w")

    headers = "title, link, price, bids\n"

    f.write(headers)


    for container in containers:
        title = container.div.div.h3["title"]
        link = container.div.div.h3.a["href"]

        price_container = container.findAll("span",{"class":"item-card-details-price-amount"})
        price = price_container[0].text

        bid_container = container.findAll("span",{"class":"item-card-details-bids"})
        bids = bid_container[0].text

    print("title: " + title)
    print("link: " + link)
    print("price: " + price)
    print("bids: " + bids)

    f.write(title + "," + link + "," + price + "," + bids + "\n")

    f.close
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because the loop is "empty". In python you have to indent the block of code that should run inside the loop, e.g.:</p>
<pre><code>for i in loop:
    # do something
</code></pre>
<p>In your code:</p>
<pre><code>for container in containers:
    title = container.div.div.h3["title"]
    link = container.div.div.h3.a["href"]

    price_container = container.findAll("span",{"class":"item-card-details-price-amount"})
    price = price_container[0].text

    bid_container = container.findAll("span",{"class":"item-card-details-bids"})
    bids = bid_container[0].text

    print("title: " + title)
    print("link: " + link)
    print("price: " + price)
    print("bids: " + bids)

    f.write(title + "," + link + "," + price + "," + bids + "\n")

    f.close
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You asked me what was going on and why I get the correct result. Below the script adjusted for py 3.5. As it appears some error occurs at the print line. I by accident almost fixed your script in your question itself.</p>
<p>As Ilja pointed out there were indentation errors and its correct he mentioned empty list returns... prior to my accidental partial fix. What I missed out in the accidental fix was not bringing in the print statements into the for-loop. So I get one result. Checking the web-page... you want to collect all phone products.</p>
<p>Below script fixes all the issues by having the print-statements inside the for-loop. Thus in your Pycharm standard output you should now hget many blocks of printed products. And fixing your file wire should show similar result in the csv-file.</p>
<p>Py3.5+ is a little bit childish when it comes to print ('title' + title`). IMO... style py2.x should have been kept as it gives more flexibility and reduces RSI by less typing. Anyway, the iteration through this phone web-page should work now like a pyCharm..</p>
<p><code>repr</code> comment : no you didn't use <code>repr</code> at all and its not needed but....</p>
<p>For print syntax examples check <a href="https://www.python-course.eu/python3_formatted_output.php" rel="nofollow noreferrer">here</a> and for the official python docs <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">here</a>.</p>
<p>In addition, I've added some formatting code for your output-file. It should be now in columns... and readable. Enjoy!</p>
<pre><code>from urllib.request import urlopen as uReq
from bs4 import BeautifulSoup as soup


my_url = 'https://www.tradera.com/search?itemStatus=Ended&amp;q=iphone+6+-6s+64gb+-plus'

#
uClient = uReq(my_url)
page_html = uClient.read()
uClient.close()

#html parsing
page_soup = soup(page_html, "html.parser")


#Container 
containers = page_soup.findAll("div",{"class":"item-card-details"})

filename = "ip6.csv"
f = open(filename, "w")

headers = "title, link, price, bids\n"

f.write(headers)

l1 = 0
l2 = 0
l3 = 0

# get longest entry per item for string/column-formatting
for container in containers:
    title = container.div.div.h3["title"]
    t = len(title)
    if t &gt; l1:
        l1 = t
    link = container.div.div.h3.a["href"]


    price_container = container.findAll("span",{"class":"item-card-details-price-amount"})
    price = price_container[0].text

    p = len(price)
    if p &gt; l2:
        l2 = p

    bid_container = container.findAll("span",{"class":"item-card-details-bids"})
    bids = bid_container[0].text

    b = len(bids)
    if b &gt; l3:
        l3 = b

for container in containers:
    title = container.div.div.h3["title"]

    link = container.div.div.h3.a["href"]

    price_container = container.findAll("span",{"class":"item-card-details-price-amount"})
    price = price_container[0].text

    bid_container = container.findAll("span",{"class":"item-card-details-bids"})
    bids = bid_container[0].text

    # claculate distances between columns
    d1 = l1-len(title) + 0
    d2 = l2-len(price) + 1
    d3 = l3-len(bids)  + 1
    d4 = 2

    print("title : %s-%s %s." % (l1, d1, title))
    print("price : %s-%s %s." % (l2, d2, price))
    print("bids  : %s-%s %s." % (l3, d3, bids))
    print("link  : %s." % link)

    f.write('%s%s, %s%s, %s%s, %s%s\n' % (title, d1* ' ', d2* ' ', price, d3 * ' ', bids,  d4 * ' ', link))

f.close
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you all for helping me solve this. It was the indentation of the print lines. You are the best!</p>
</div>
<span class="comment-copy">I can't reproduce your problem. The loop prints the title and link and whatnot of plenty of containers, not just one.</span>
<span class="comment-copy">.. confirmed - no issues - Might be out-dated soup from the fridge. Please update your soup with pip or conda and see if the error persists.</span>
<span class="comment-copy">Hello. Well the code returns one correct answer (for one container) meaning it takes the "title",etc and gives the value. The issue is that it doesn't loop all the containers.</span>
<span class="comment-copy">@ZF007 Hi, did you tried the scrip "out of box" or did you make any adjustments? Do you know how I can update that in pycharm ? Thank you for your help.</span>
<span class="comment-copy">Updating... copy/paste would suffice for pycharm.. but I guess you're not talking about that. By accident I fixed half of your script while correcting the indentations in your question itself. Your script returned only the last result of page one. I've fixed it for your csv-output file now. See my answer below (including output formatting corrections). But seven out of ten issues like what you posted is outdated soup with updated py/anaconda versions (code brakes due to dependency differences and/or the order of site-packages installation). That explains my default answer earlier.</span>
<span class="comment-copy">No. If this were their problem, they would have reported an error message like: <code>IndentationError: expected an indented block</code></span>
<span class="comment-copy">That's the error I'm getting when I run the code from the question, therefore my answer. But your're right, if the code runs once, it's not the problem. I've read over this part in the question, my fault. :-)</span>
<span class="comment-copy">Could it be because I use repl.it (online compiler) ?</span>
<span class="comment-copy">Ok, I tested in Pycharm with anaconda3 and it once again only worked with one container.</span>
