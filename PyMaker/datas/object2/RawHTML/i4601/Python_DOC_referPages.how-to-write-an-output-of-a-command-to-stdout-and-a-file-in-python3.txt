<div class="post-text" itemprop="text">
<p>I have a Windows command which I want to write to stdout and to a file. For now, I only have <code>0</code> string writen in my file:</p>
<pre><code>#!/usr/bin/env python3
#! -*- coding:utf-8 -*-

import subprocess

with open('auto_change_ip.txt', 'w') as f:
    print(subprocess.call(['netsh', 'interface', 'show', 'interface']), file=f)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>subprocess.call</code> returns an int (the returncode) and that's why you have <code>0</code> written in your file.<br/>
If you want to capture the output, why don't you use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run</code></a> instead?  </p>
<pre><code>import subprocess

cmd = ['netsh', 'interface', 'show', 'interface']
p = subprocess.run(cmd, stdout=subprocess.PIPE)
with open('my_file.txt', 'wb') as f:
    f.write(p.stdout)
</code></pre>
<p>In order to capture the output in <code>p.stdout</code>, you'll have to redirect stdout to <a href="https://docs.python.org/3/library/subprocess.html#subprocess.PIPE" rel="nofollow noreferrer"><code>subprocess.PIPE</code></a>.<br/>
Now <code>p.stdout</code> holds the output (in bytes), which you can save to file.  </p>
<hr/>
<p>Another option for Python versions &lt; 3.5 is <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer"><code>subprocess.Popen</code></a>. The main difference for this case is that <code>.stdout</code> is a file object, so you'll have to read it. </p>
<pre><code>import subprocess

cmd = ['netsh', 'interface', 'show', 'interface']
p = subprocess.Popen(cmd, stdout=subprocess.PIPE)
out = p.stdout.read()
#print(out.decode())  
with open('my_file.txt', 'wb') as f:
    f.write(out)
</code></pre>
</div>
<span class="comment-copy">have you tried to discard the subprocess and simply write any string literal instead?</span>
<span class="comment-copy">Now I have and it works so I edited the title of my question.</span>
<span class="comment-copy">Thank you! What does <code>subprocess.PIPE</code> mean? Unfortunately, I use Python 3.4.3 for XP compatibility, but <code>subprocess.run</code> is only for 3.5+. Can I import it somehow from future? I don't know how to patch it like suggested here <a href="https://stackoverflow.com/questions/40590192/getting-an-error-attributeerror-module-object-has-no-attribute-run-while" title="getting an error attributeerror module object has no attribute run while">stackoverflow.com/questions/40590192/â€¦</a></span>
<span class="comment-copy">Hold on, i'll update</span>
<span class="comment-copy">This doesn't write to console too, so I added <code>subprocess.call(cmd)</code>. Thank you for explaining a diffrence between <code>call</code>, <code>run</code> and <code>popen</code>.</span>
<span class="comment-copy">Yes, it won't print because the output is redirected. But why don't you use <code>print</code>  instead of calling the command twice? I updated my code to give an example.</span>
