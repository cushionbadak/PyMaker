<div class="post-text" itemprop="text">
<p>I'm happy to ask my first python question !!! I would like to strip the beginning (the part before the first occurrence of the article) of the sample file below. To do this I use re.sub library.</p>
<p>below this is my file sample.txt:</p>
<pre><code>fdasfdadfa
adfadfasdf
afdafdsfas
adfadfadf
adfadsf
afdaf

article: name of the first article
aaaaaaa
aaaaaaa
aaaaaaa
article: name of the first article
bbbbbbb
bbbbbbb
bbbbbbb
article: name of the first article
ccccccc
ccccccc
ccccccc
</code></pre>
<p>And my Python code to parse this file:</p>
<pre><code>for line in open('sample.txt'):
    test = test + line

result = re.sub(r'.*article:', 'article', test, 1, flags=re.S)
print result
</code></pre>
<p>Sadly this code only displays the last article. The output of the code:</p>
<pre><code>article: name of the first article
ccccccc
ccccccc
ccccccc
</code></pre>
<p>Does someone know how to strip only the beginning of the file and display the 3 articles?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.dropwhile" rel="nofollow noreferrer"><code>itertools.dropwhile</code></a> to get this effect</p>
<pre><code>from itertools import dropwhile

with open('filename.txt') as f:
    articles = ''.join(dropwhile(lambda line: not line.startswith('article'), f))

print(articles)
</code></pre>
<p>prints</p>
<pre><code>article: name of the first article
aaaaaaa
aaaaaaa
aaaaaaa
article: name of the first article
bbbbbbb
bbbbbbb
bbbbbbb
article: name of the first article
ccccccc
ccccccc
ccccccc
</code></pre>
</div>
<span class="comment-copy">I don't really understand what you are trying to do from your code. Are you trying to replace all instances of "article: " with "article"?</span>
<span class="comment-copy">using <a href="https://stackoverflow.com/questions/7124778/how-to-match-anything-up-until-this-sequence-of-characters-in-a-regular-expres">non-greedy regex</a> would help you here (<code>.*</code> --&gt; <code>.*?</code>).. also, replacement section is missing <code>:</code> .. however slurping whole file is not advisable if file is big.. also, you could use <code>open('sample.txt').read()</code> instead of custom for loop</span>
<span class="comment-copy">Oh great, I tried with the non-greedy regex and it works !!!!!! Thanks a lot</span>
<span class="comment-copy">Thanks for your help it's working with itertools.dropwhile. I didn't know this library. Sundeep gave me an other solution also: it's to use a non-greedy expression. Thanks for your help</span>
