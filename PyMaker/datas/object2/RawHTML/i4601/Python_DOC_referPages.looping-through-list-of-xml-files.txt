<div class="post-text" itemprop="text">
<p>I'm trying to create a program that loops through a list of xml-files and extracts certain elements from the files: </p>
<pre><code>from os import listdir, path
import xml.etree.ElementTree as ET

mypath = 'C:\myfolder'

files = [f for f in listdir(mypath) if f.endswith('.xml')]

for file in files:
    tree = ET.parse(file)
    root = tree.getroot()

ns = {namespaces}

def myfunction():
    if 'something' in root.tag:
        filename = path.splitext(file)[0]
        var1 = root.find('./element1', ns)
        var2 = root.find('./element2', ns)

        row = [
            var1.text,
            var2.text
            ]

    return row   
</code></pre>
<p>The above code returns a list with var1, var2 (from the last file) if I call the function. The reason I have defined this function is that there are different types of xml-files with different element names, so I'm going to create a function for each file type.</p>
<p>Now I want to create a table where the output from each file is a row i.e.:</p>
<pre><code>filename1, var1, var2
filename2, var1, var2
ect.
</code></pre>
<p>And ideally export the table to a csv-file. How do I go about that?</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to write a CSV file is using the <a href="https://docs.python.org/3.6/library/csv.html" rel="nofollow noreferrer">Standard CSV</a>.
To write a CSV file, is as simple as opening the file and using the default writer:</p>
<pre><code>import csv
from os import listdir, path
import xml.etree.ElementTree as ET

mypath = 'C:\myfolder'

files = [f for f in listdir(mypath) if f.endswith('.xml')]

for file in files:
    tree = ET.parse(file)
    root = tree.getroot()

ns = {namespaces}

def myfunction():
    if 'something' in root.tag:
        filename = path.splitext(file)[0]
        var1 = root.find('./element1', ns)
        var2 = root.find('./element2', ns)

        row = [
            var1.text,
            var2.text
            ]

        # Open the file and store the data
        with open('outfile.csv', 'a', newline='') as csvfile:
            csv_writer = csv.writer(csvfile, delimiter=' ', quotechar='|', quoting=csv.QUOTE_MINIMAL)
            csv_writer.writerow(row)

    return row   
</code></pre>
<p>Note that <code><a href="https://docs.python.org/3.6/library/csv.html#csv.writer" rel="nofollow noreferrer">csf.writer</a></code> receives a list as parameter.</p>
</div>
<span class="comment-copy">Your question isn't really about looping through xml files, it's about extracting and data from each of those files and writing a new file. I suggest you consider using the <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer"><code>csv'</code></a> module to create the new file.</span>
<span class="comment-copy">Did it work? If it did, could you upvote and mark it as correct? Otherwise, please tell me what went wrong.</span>
<span class="comment-copy">It only writes the variables from the last file. Maybe something is wrong with my loop? I have a few thousand files, so there should be a line for each.</span>
