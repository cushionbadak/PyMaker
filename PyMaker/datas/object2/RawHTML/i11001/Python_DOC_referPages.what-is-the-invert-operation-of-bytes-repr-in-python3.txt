<div class="post-text" itemprop="text">
<pre><code>a = b'\x00\x01'
ra = repr(a)   # ra == "b'\\x00\\x01'"
assert invert_repr(ra) == a
</code></pre>
<p>What is the correct form of invert_repr? string_escape &amp; unicode_escape?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>eval</code> or equivalent:</p>
<pre><code>from ast import literal_eval
a = b'\x00\x01'
ra = repr(a)
assert literal_eval(ra) == eval(ra) == a # no error
</code></pre>
<p><a href="https://stackoverflow.com/q/15197673/2301450"><code>ast.literal_eval</code> is safer than <code>eval</code>.</a></p>
</div>
<span class="comment-copy">Are you using <code>repr()</code> to serialise and unserialise data? Don't, Python syntax is not meant to be a serialisation format. Use pickle, marshall or json instead.</span>
<span class="comment-copy">Yes, but it is really slow. Could you give me a string-based operation?</span>
<span class="comment-copy">@ShenLei: no, there are no other options. You have a Python byte string literal, these are your options to interpret it again. Why do you need this?</span>
<span class="comment-copy">Because I read data from a text file and printed failed-to-decode content with repr() to another file. Now I want to process the latter.</span>
<span class="comment-copy">@ShenLei: then why are you complaining about speed? You are debugging, not writing a performance-sensitive application. And why not just pickle then?</span>
<span class="comment-copy">@ShenLei: why did you write 2GB using <code>repr()</code> representation instead of writing the bytes directly? (it is not very hard to parse a Python <code>bytes</code> literal  in C without <code>ast.literal_eval()</code>  but you shouldn't need to -- here're <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">lexical definitions for the <code>bytes</code> literal</a>)</span>
