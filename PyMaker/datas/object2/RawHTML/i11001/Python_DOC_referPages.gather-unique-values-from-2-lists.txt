<div class="post-text" itemprop="text">
<p>I currently have  2 "set" lists, both contain mostly the same values i.e:</p>
<pre><code>a = [1,2,3,4,5,6]

b = [1,2,3,4,5,6,7,8]
</code></pre>
<p>What I'm trying to do is compare the two and only return 7 &amp; 8 into another list however I'm having no luck, I've tried a few methods I've found on here such as:</p>
<pre><code>c = [item for item in a if item not in b]
</code></pre>
<p>However I've had no luck does anyone know a quick and fairly easy method of doing this? Both lists have been "set" previously to remove any duplicates within their own lists also (just felt I should add that if that makes a difference)</p>
<p>Just to be clear, as I think I wasn't sorry, the example values are already in set format, in my head for some reason when you used set on a list it acted like the array_unique PHP function.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use sets:</p>
<pre><code>set(b) - set(a)
Out[65]: {7, 8}
</code></pre>
<p>Or more explicitly:</p>
<pre><code>set(b).difference(a)
Out[67]: {7, 8}
</code></pre>
<p>For symmetric difference, you can use <code>^</code>. It will return elements that are in a or b, but not in both. Assume <code>a</code> has an additional element, 9:</p>
<pre><code>a = [1, 2, 3, 4, 5, 6, 9]
b = [1, 2, 3, 4, 5, 6, 7, 8]
set(b) ^ set(a)
Out[70]: {7, 8, 9}
</code></pre>
<p>Or,</p>
<pre><code>set(b).symmetric_difference(a)
Out[71]: {7, 8, 9}
</code></pre>
<p>If they are already sets, you can just do <code>b - a</code> or <code>b ^ a</code>.</p>
<p>Your attempt does not work because there is no item in <code>a</code> which is not in <code>b</code>. For that difference (<code>b-a</code>), you need: <code>[item for item in b if item not in a]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another approach is using a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a>  to count the number of occurrences of each element from both lists:</p>
<pre><code>from collections import defaultdict
from itertools import chain

a = [1,2,3,4,5,6,9]

b = [1,2,3,4,5,6,7,8,9]

d = defaultdict(int)

for num in chain(a, b):
    d[num] += 1


print([key for key, value in d.items() if value == 1])
</code></pre>
<p>Output:</p>
<pre><code>[7, 8]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list(set(a)-set(b))+list(set(b)-set(a))
</code></pre>
</div>
<span class="comment-copy">Is there a reason you converted them from sets to lists?</span>
<span class="comment-copy">@Adrocks__, are you trying to find unique values from list b or from both lists?</span>
<span class="comment-copy">@ayhan - sorry if it wasn't clear, They started as lists at this current stage they are in sets (for the duplication removal) thats what I tried to mean by "set" lists.  @ Valera &gt; I'm trying to return all values from list/set B that aren't in list/set A.  As I I need the uniques that appear in the larger list for later in the script.</span>
<span class="comment-copy">I think I tried "final = set(b) - set(a)" however from memory it returned 6,7,8 I will have another go on when I have access to the script again and will see what happens.  Just made an edit to main post just as I think I made it a tad confusing the "lists" are already in sets and were not reconverted back to lists, sorry about that</span>
<span class="comment-copy">Too many sets were created and destroyed in the making of this one-liner</span>
