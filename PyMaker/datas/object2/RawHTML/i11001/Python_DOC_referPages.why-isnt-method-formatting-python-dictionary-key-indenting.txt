<div class="post-text" itemprop="text">
<p>For some reason method formatting a dictionary key only begins to indent after specifying a width greater than 4. Any idea why? </p>
<pre><code>for i in range(10):
    print({'{0:&gt;{1}}'.format('test',i):12}, "should be indented", i)
</code></pre>
<p>Output:</p>
<pre><code>{'test': 12} should be indented 0
{'test': 12} should be indented 1
{'test': 12} should be indented 2
{'test': 12} should be indented 3
{'test': 12} should be indented 4
{' test': 12} should be indented 5
{'  test': 12} should be indented 6
{'   test': 12} should be indented 7
{'    test': 12} should be indented 8
{'     test': 12} should be indented 9
</code></pre>
<p>Also, when I try to output a dictionary with indented keys to a text document the indent isn't consistent. For example, when I specify a constant indentation width of 10 characters, the indentation is not consistent across the output. </p>
</div>
<div class="post-text" itemprop="text">
<p>This has nothing to do with dict keys, nor is there anything special about the number 4; it just happens to be the length of your string <code>"test"</code>.</p>
<p>With <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow"><code>{0:&gt;{1}}</code></a> you say that that entire block should be right-aligned to a total length of at least <code>{1}</code> characters, <em>including</em> the string you passed as <code>{0}</code>. So if <code>{1}</code> is <code>6</code>, and <code>{0}</code> is <code>"test"</code>, then the string is padded with two spaces, for a total length of 6.</p>
<pre><code>In [11]: "{0:&gt;{1}}".format("test", 6)
Out[11]: '  test'
</code></pre>
<p>This is similar to what <code>str.rjust</code> does:</p>
<pre><code>In [12]: "test".rjust(6)
Out[12]: '  test'
</code></pre>
<p>If you want a constant padding independent of the string's original length, you can, e.g., use string multiplication, or use a more complex format string, padding an empty string to some given length before putting your actual string.</p>
<pre><code>In [14]: " " * 6 + "test"
Out[14]: '      test'
In [15]: "{2:{1}}{0}".format("test", 6, "")
Out[15]: '      test'
</code></pre>
</div>
