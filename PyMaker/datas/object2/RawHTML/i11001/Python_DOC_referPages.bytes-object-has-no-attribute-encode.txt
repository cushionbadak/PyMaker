<div class="post-text" itemprop="text">
<p>I'm trying to store salt and hashed password before inserting each document into a collection. But on encoding the salt and password, it shows the following error:</p>
<pre><code> line 26, in before_insert
 document['salt'] = bcrypt.gensalt().encode('utf-8')

AttributeError: 'bytes' object has no attribute 'encode'
</code></pre>
<p>This is my code: </p>
<pre><code>def before_insert(documents):
    for document in documents:
        document['salt'] = bcrypt.gensalt().encode('utf-8')
        password = document['password'].encode('utf-8')
        document['password'] = bcrypt.hashpw(password, document['salt'])
</code></pre>
<p>I'm using eve framework in virtualenv with python 3.4</p>
</div>
<div class="post-text" itemprop="text">
<p>You're using : <pre>bcrypt.gensalt()</pre> 
This method seems to generate a bytes object. These objects do not have any encode methods as they only work with ASCII compatible data. So you can try without <em>.encode('utf-8')</em></p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview" rel="nofollow">Bytes description in python 3 documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>salt</em> from the <code>.getsalt()</code> method is a <em>bytes object</em>, and all the "salt" parameters in the methods of bcrypt module expect it in this particular form. There is no need to convert it to something else.</p>
<p>In contrast to it, the "password" parameters in methods of bcrypt module are expected it in the form of the <em>Unicode string</em> - in Python 3 it is simply a <em>string</em>.</p>
<p>So - assuming that your original <code>document['password']</code> is a <em>string</em>, your code should be</p>
<pre><code>def before_insert(documents):
    for document in documents:
        document['salt'] = bcrypt.gensalt()
        password = document['password']
        document['password'] = bcrypt.hashpw(password, document['salt'])
</code></pre>
</div>
<span class="comment-copy">Did you try <i>not</i> <code>encode</code>-ing it?</span>
<span class="comment-copy">Yes, if i just use <code>document['salt'] = bcrypt.gensalt()</code> it shows "in hashpw     raise TypeError("Unicode-objects must be encoded before hashing") TypeError: Unicode-objects must be encoded before hashing" @jonrsharpe</span>
<span class="comment-copy">It looks like <code>bcrypt</code> is returning a <code>bytes</code> instance, which <i>cannot</i> be encoded. It can be <i>decoded</i> if needed. Encoding = <code>str</code> to <code>bytes</code>, decoding = <code>bytes</code> to <code>str</code>. â€“ What exactly is complaining with a <code>TypeError</code> where exactly?</span>
<span class="comment-copy">It shows <code>TypeError</code> at <code>bcrypt.hashpw</code> and it says <code>Unicode-objects must be encoded before hashing</code></span>
<span class="comment-copy"><a href="http://xyproblem.info" rel="nofollow noreferrer">XYProblem?</a> Your issue isn't that you can't encode the result of <code>bcrypt.gensalt()</code>. You definitely cannot, it's already a <code>bytes</code> object. Your issue is that there's somehow a unicode object in <code>bcrypt.hashpw</code>!</span>
<span class="comment-copy">These objects don't have an <code>encode</code> method ... because <i>encoding</i> a <code>bytes</code> object makes no sense. Raw <code>bytes</code> can be <i>decoded</i> according to a specific charset to <i>characters</i> (<code>str</code>), not the other way around.</span>
