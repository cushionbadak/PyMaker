<div class="post-text" itemprop="text">
<p>Sometimes I have multiple axes in <code>axes[0]</code>, and sometimes just one. So to iterate over it/them, I use the following:</p>
<p><code>for ax,_x in [(axes[0], X[0])] if len(X)==1 else zip(axes[0],X):</code></p>
<p>What is the idiomatic way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, the best way is to just iterate. <a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow">Don't ask for permission</a> (with <code>if</code> checks, rather wrap it in a <code>try-except</code> block for handling the "forgiveness" cases.</p>
<p>As others have commented though, you shouldn't create different cases if <code>X</code> is a list of size <code>1</code>, that still is iterable. If you use <code>zip</code> it will stop at the shortest iterable: </p>
<pre><code>&gt;&gt;&gt; l = [1, 2, 3]    
&gt;&gt;&gt; y = [1, 2]

&gt;&gt;&gt; list(zip(l, y))
[(1, 1), (2, 2)]
</code></pre>
<p>If you need to work with all values of the longer iterable and provide defaults for the missing values of the shorted one, use <code>zip_longest</code> from itertools with an appropriate <code>fillvalue</code>:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest

&gt;&gt;&gt; list(zip_longest(l, y, fillvalue=0))
[(1, 1), (2, 2), (3, 0)]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow noreferrer">docs.python.org/3/glossary.html#term-eafp</a></span>
<span class="comment-copy"><code>hasattr(axes[0], "__iter__")</code> or <code>try/except</code>, maybe?</span>
<span class="comment-copy">You don't need to check the length just use <code>zip(axes[0],X)</code> . But if your aim is creating the columns, when you are not aware of the length of iterables the best way is using <code>itertools.zip_longest()</code> (if you want to keep all the items from longer iterable) other wise just use <code>zip</code>.</span>
<span class="comment-copy">A container of length 1 is still iterable.</span>
<span class="comment-copy">@Kasramvd I get an error when I do naive zip.</span>
