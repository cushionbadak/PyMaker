<div class="post-text" itemprop="text">
<p>I have been tring to replace german letters into English way of writing:</p>
<pre><code>Ä -&gt; Ae
Ü -&gt; Ue
ß -&gt; ss
</code></pre>
<p>I tried this way: </p>
<pre><code>re.sub("ö","oe",wordLineElements)
re.sub("Ö","Oe",wordLineElements)
re.sub("ä","ae",wordLineElements)
re.sub("Ä","Ae",wordLineElements)
re.sub("ü","ue",wordLineElements)
re.sub("Ü","Ue",wordLineElements)
re.sub("ß","ss",wordLineElements)
</code></pre>
<p>but looks like it does not work, so I need to do it with one <code>re.sub()</code></p>
<p>what is the regex way of doing it?</p>
<p>and if it's ok, what is a general way of using regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>I guess you have already got the solution, but here's it if you want to do with regex <code>re</code> module:</p>
<pre><code>&gt;&gt;&gt; sub_dict = {
                u"ö": "oe",
                u"Ö": "Oe",
                u"ä": "ae",
                u"Ä": "Ae",
                u"ü": "ue",
                u"Ü": "Ue",
                u"ß": "ss"
               }
&gt;&gt;&gt; sub_regex = re.compile("(%s)"%"|".join([german_letter.decode('UTF-8') for german_letter in sub_dict.iterkeys()]))
&gt;&gt;&gt; sub_regex.sub(lambda x: sub_dict[x.group(0)], u'asdasdsüadsadas')
102: u'asdasdsueadsadas'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need regular expressions, <a href="https://docs.python.org/3/library/stdtypes.html#str.translate"><code>str.translate()</code></a> would be a better choice:</p>
<pre><code>d = {
    "ö": "oe",
    "Ö": "Oe",
    "ä": "ae",
    "Ä": "Ae",
    "ü": "ue",
    "Ü": "Ue",
    "ß": "ss"
}

s = "Ä test ß test Ü"
print(s.translate({ord(k): v for k, v in d.items()}))
</code></pre>
<p>Prints:</p>
<pre><code>Ae test ss test Ue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that re.sub doesn't modify the string in place, it returns a new string. Try:</p>
<pre><code>wordLineElements = re.sub("ö","oe",wordLineElements)
wordLineElements = re.sub("Ö","Oe",wordLineElements)
wordLineElements = re.sub("ä","ae",wordLineElements)
wordLineElements = re.sub("Ä","Ae",wordLineElements)
wordLineElements = re.sub("ü","ue",wordLineElements)
wordLineElements = re.sub("Ü","Ue",wordLineElements)
wordLineElements = re.sub("ß","ss",wordLineElements)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub</code> returns a new string with the replacement. So you need something like <code>wordLineElements = re.sub("ö","oe",wordLineElements)</code>. There is also a great answer <a href="https://stackoverflow.com/questions/6116978/python-replace-multiple-strings">here</a> that does multiple replacements with some clever code</p>
</div>
<span class="comment-copy">Use a simple <code>s = s.replace("x", "Yy").replace(...,...)...</code></span>
<span class="comment-copy">@WiktorStribiżew I Could do that of course, but I though to develop my knowlage, I would like to see how to change it in regex way, so I could use it in the future</span>
<span class="comment-copy"><code>re.sub</code> returns a new string with the replacement.  So you need something like <code>wordLineElements = re.sub("ö","oe",wordLineElements)</code>.  There is also a great answer <a href="http://stackoverflow.com/questions/6116978/python-replace-multiple-strings">here</a> that does multiple replacements with some clever code.</span>
<span class="comment-copy">@GWW I would argue that your comment makes for a good answer.</span>
<span class="comment-copy">There is no knowledge to gain in using regexp for such case. The best answer is by @WiktorStribiżew</span>
<span class="comment-copy">Nice way of doing it.. thank you</span>
