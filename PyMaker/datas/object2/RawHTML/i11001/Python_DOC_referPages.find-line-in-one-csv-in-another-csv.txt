<div class="post-text" itemprop="text">
<p>I have been using this code below to find exact matches of strings from one csv to another:</p>
<pre><code>with open(filename1, 'rb') as file1:
file1reader = csv.reader(file1)

for line1 in file1reader:
    with open(filename2, 'rb') as file2:
        file2reader = csv.reader(file2)

        for linenum, line2 in enumerate(file2reader, start=1):
            if str(line1) == str(line2):
                print('match found')
                matches.append(str(linenum))
                counts.append(linenum) 
                if len(matches) &gt;= MAX_COUNT:
                    break

    if len(matches) &gt;= MAX_COUNT:
        break
</code></pre>
<p>Now, I have a file that has strings that are partial matches to another file. I would also like to have these be a match as exact strings are in the above code. I tried replacing the <code>==</code> with <code>in</code> but had no luck. Any help? </p>
<p>Example:</p>
<pre><code>string1 = humpty

string2 = humptydumpty
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try checking both directions:</p>
<pre><code>if (str(line1) in str(line2)) or (str(line2) in str(line1)):
</code></pre>
<p>I don't think the parentheses are strictly necessary but they make the meaning clearer.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to <code>check if a substring is present in a string</code>.</p>
<p>For this you can use the <a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" rel="nofollow">in</a> operator:</p>
<p>Example:</p>
<pre><code>if "humpty" in "humptydumpty": 
    print "Ok"
</code></pre>
<p>In your case:</p>
<pre><code>if string1 in string2: 
    print "Ok"
</code></pre>
</div>
<span class="comment-copy">Tried this but still no luck. The script seems to not be able to find a match, even though I am sure there are substrings that are present in the first list that are present in string in the second list.</span>
<span class="comment-copy">I think it is doing this because it is comparing list objects and thus string1 = ['humpty'] and string2 = ['humptydumpty']</span>
<span class="comment-copy">If that's the case, then <code>if str(string1[0]) in str(string2[0])</code> would work.. assuming they are one-item lists</span>
<span class="comment-copy">Yup, that's it! Thank you</span>
