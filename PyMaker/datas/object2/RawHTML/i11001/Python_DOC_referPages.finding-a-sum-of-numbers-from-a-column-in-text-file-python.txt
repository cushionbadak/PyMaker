<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17953211/python-find-sum-of-column-in-table-in-text-file">Python find sum of column in table in text file</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I want to know how to find the total sum of number from a column in a text file in python.</p>
<p>My file:</p>
<pre><code>123  Hammer  20  36
124  Knife   10  10
125  Rod     90  20
</code></pre>
<p>I want to add the 4th column in the text file. That is the column that starts with 36. The function should return the sum of the column that is 66.</p>
<p>I don't have any code yet as I am still stuck in this problem and thinking of a way to solve it.</p>
<p>I am having error in some places i think it is due to my code. I need assistance in it.</p>
<pre><code># Creating class Hardware to store the linked list data in to the class, Properties like get and set
class Hardware:
    def __init__(self,barcode,description,price,quantity): # initating data
        self.barcode=barcode
        self.description=description
        self.price=price
        self.quantity=quantity
        self.next=None

    def getData(self):#function to get data
        return self.barcode,self.description,self.price,self.quantity

    def getNext(self):#function to get the next data
        return self.next

    def setData(self,newBarcode,newDescription,newPrice,newQuantity):#function to set the data
        self.barcode=newBarcode
        self.description=newDescription
        self.price=newPrice
        self.quantity=newQuantity

    def setNext(self,newNext):#function to set the next data
        self.next=newNext

# LinkedList class for manipulation of data that is add, display and update
class LinkedListHardware:
    def __init__(self): # initating data
        self.head=None

    def isEmpty(self): #checks if the data is empty
        return self.head==None

    def ReadFile(self): # Reads a text file called Hardware
        Hardwarefile=open('Hardware.txt','r')
        return Hardwarefile.read()

    def add(self,itemBarcode,itemDescription,itemPrice,itemQuantity): #Adds data to the linked list and also writes to the file
        temp=Hardware(itemBarcode,itemDescription,itemPrice,itemQuantity)
        temp.setNext(self.head)
        self.head=temp
        HardwareItems=(itemBarcode,itemDescription,itemPrice,itemQuantity)
        Hardwarefile=open('Hardware.txt','a+')
        Hardwarefile.write('\n')
        for items in HardwareItems:
            Hardwarefile.write(str(items)+'\t')
        return "Added Successfully"
        Hardwarefile.close()


    def display(self,itemBarcode): # Displays a line based on the Barcode the user enters
        current=self.head
        with open('Hardware.txt','r') as f:
            found=False
            for line in f:
                lines=line.split()
                if itemBarcode in lines:
                    found=True
                    return line
            if not found:
                 return "No such Barcode"
            f.close()        

    def update(self,itemBarcode,itemDescription,itemPrice,itemQuantity): #update data of hardware item
            current=self.head
            with open('Hardware.txt','r+') as f:
                found=False
                for lines in f:
                    line=lines.split()
                    if itemBarcode not in line:
                        array=[]
                        array.append(line)
                        st=[x[0]+'\t'+x[1]+'\t'+x[2]+'\t'+x[3] for x in array]
                        st=''.join(st)

                        with open('Hardwareupdate.txt','a+') as outfile:
                            outfile.write('\n'+str(st))
                            found=True
                        HardwareItems=(itemBarcode,itemDescription,itemPrice,itemQuantity)
                        Hardwarefile=open('Hardwareupdate.txt','a+')
                        Hardwarefile.write('\n')
                        for items in HardwareItems:

                            Hardwarefile.write(str(items)+'\t')

                return "Added Successfully"


            if not found:
                    return "No such Transaction"



# Creating class Transaction to store the linked list data in to the class, Properties like get and set
class Transaction:
    def __init__(self,invoiceNumber,Barcode,totalPrice,Quantity): # initating data
        self.invoiceNumber=invoiceNumber
        self.Barcode=Barcode
        self.totalPrice=totalPrice
        self.Quantity=Quantity

        self.next=None

    def getData(self): #function to get data
        return self.invoiceNumber,self.Barcode,self.totalPrice,self.Quantity

    def getNext(self): #function to get the next data
        return self.next

    def setData(self,newinvoiceNumber,newBarcode,newtotalPrice,newQuantity): #function to set the data
        self.invoiceNumber=newinvoiceNumber
        self.Barcode=newBarcode
        self.totalPrice=newtotalPrice
        self.Quantity=newQuantity


    def setNext(self,newNext): #function to set the next data
        self.next=newNext

# LinkedList class for manipulation of data that is add, search, update and delete
class LinkedListTransaction:

    # initating data
    def __init__(self):
        self.head=None

    #checks if the data is empty
    def isEmpty(self):
        return self.head==None

    #Adds data to the linked list and also writes to the file
    def add(self,iteminvoiceNumber,itemBarcode,itemQuantity,itemtotalPrice):
        temp=Transaction(iteminvoiceNumber,itemBarcode,itemQuantity,itemtotalPrice)
        temp.setNext(self.head)
        self.head=temp
        TransactionItems=(iteminvoiceNumber,itemBarcode,itemQuantity,itemtotalPrice)
        Transactionfile=open('Transaction.txt','a+')
        Transactionfile.write('\n')
        for items in TransactionItems:
            if iteminvoiceNumber != ' ':
                Transactionfile.write(str(items)+'\t')
        return "Added Successfully"

    # Displays the record of data by receving the item invoice number
    def display(self,iteminvoiceNumber):
            current=self.head
            with open('Transaction.txt','r') as f:
                found=False
                for line in f:
                    lines=line.split()
                    if iteminvoiceNumber in lines:
                        found=True
                        return line
                if not found:
                     return "No such Transaction"

    # Removes sepcific data from the file (rewrites data that does not contain the data which user entered and writes to another file)
    def remove(self,iteminvoiceNumber):
        current=self.head
        with open('Transaction.txt','r') as f:
            found=False
            for lines in f:
                line=lines.split()

                if iteminvoiceNumber not in line:
                    array=[]
                    array.append(line)
                    st=[x[0]+'\t'+x[1]+'\t'+x[2]+'\t'+x[3] for x in array]
                    st=''.join(st)
                    with open('Transactionlatest.txt','a+') as outfile:
                        outfile.write('\n'+str(st))
                        found=True

            if not found:
                    return "No such Transaction"

    # Updates Data from the text file. Copies data to new file and then update whatever user enters
    def update(self,iteminvoiceNumber,itemBarcode,itemQuantity,itemtotalPrice):
            current=self.head
            with open('Transaction.txt','r+') as f:
                found=False
                for lines in f:
                    line=lines.split()
                    if iteminvoiceNumber not in line:
                        array=[]
                        array.append(line)
                        st=[x[0]+'\t'+x[1]+'\t'+x[2]+'\t'+x[3] for x in array]
                        st=''.join(st)

                        with open('Transactionupdate.txt','a+') as outfile:
                            outfile.write('\n'+str(st))
                            found=True
                        TransactionItems=(iteminvoiceNumber,itemBarcode,itemQuantity,itemtotalPrice)
                        Transactionfile=open('Transactionupdate.txt','a+')
                        Transactionfile.write('\n')
                        for items in TransactionItems:

                            Transactionfile.write(str(items)+'\t')

                return "Added Successfully"


            if not found:
                    return "No such Transaction"


    def TotalSales(self):
        mysum=0
        with open('Transaction.txt','r') as f:
            for line in f:
                mysum+=int(line.split()[3])
            return mysum





HardwareList=LinkedListHardware()

TransactionList=LinkedListTransaction()
print(TransactionList.TotalSales())
print(TransactionList.remove(input()))
'''
print("Hardware Shop\n")
print("[1]Update hardware item quantity in hand or price per unit\n")
print("[2]Add hardware item\n")
print("[3]Display hardware item\n")
print("[4]Add Sales Transaction\n")
print("[5]Remove Sales Transaction\n")
print("[6]Edit Sales Transaction\n")
print("[7]All Sales Transaction\n")        

MainInput=input("Enter Selection: ")

HardwareList=LinkedListHardware()

TransactionList=LinkedListTransaction()


if MainInput=='1':
    print("\nUpdate hardware item quantity in hand or price per unit")
    print(HardwareList.update(input("Enter Barcode: "),input("Enter Description: "),input("Enter Price: "),input("Enter Quantity: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")


if MainInput=='2':
    print("\nAdd hardware item")
    print(HardwareList.add(input("Enter Barcode: "),input("Enter Description: "),input("Enter Price: "),input("Enter Quantity: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")

if MainInput=='3':
    print("\nDisplay hardware item")
    print(HardwareList.display(input("Enter Barcode: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")

if MainInput=='4':
    print("\nAdd Sales Transaction")
    print(TransactionList.add(input("Enter Invoice Number: "),input("Enter Hardware Barcode: "),input("Enter Quantity: "),input("Enter Total Price: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")

if MainInput=='5':
    print("\nRemove Sales Transaction")
    print(TransactionList.remove(input("Enter Invoice Number: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")

if MainInput=='6':
    print("\nEdit Sales Transaction")
    print(TransactionList.update(input("Enter Invoice Number: "),input("Enter Hardware Barcode: "),input("Enter Quantity: "),input("Enter Total Price: ")))
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")

if MainInput=='7':
    print("\nAll Sales Transaction")
    print(TransactionList.TotalSales())
    SubInput=int(input("Enter 0 to exit and 1 to continue "))
    if SubInput==0:
        quit()
    if SubInput==1:
        print("Hardware Shop\n")
        print("[1]Update hardware item quantity in hand or price per unit\n")
        print("[2]Add hardware item\n")
        print("[3]Display hardware item\n")
        print("[4]Add Sales Transaction\n")
        print("[5]Remove Sales Transaction\n")
        print("[6]Edit Sales Transaction\n")
        print("[7]All Sales Transaction\n")        

        MainInput=input("Enter Selection: ")



'''
</code></pre>
<p>The error is receive</p>
<pre><code>mysum+=int(line.split()[3])
IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>mysum = 0
with open('myfilename','r') as f:
    for line in f:
        mysum += int(line.split()[3])
</code></pre>
<p><code>line.split()</code> will turn <code>"123  Hammer  20  36"</code> into <code>["123", "Hammer", "20", "36"]</code>. We take the fourth value  <code>36</code> using the index <code>[3]</code>. This is still a string, and can be converted to an integer using <code>int</code> or a decimal (floating-point) number using <code>float</code>.</p>
<p>EDIT:</p>
<p>to check for empty lines add the condition <code>if line:</code> in the for loop. In your particular case you might do something like:</p>
<pre><code>for line in f:
    words = line.split()
    if len(words)&gt;3:
        mysum += int(words[3])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use Panda for that:</p>
<p><a href="http://pandas.pydata.org/pandas-docs/stable/io.html" rel="nofollow">http://pandas.pydata.org/pandas-docs/stable/io.html</a></p>
<p><a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sum.html" rel="nofollow">http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sum.html</a></p>
<pre><code>import pandas as pd
df = pd.read_csv('myfilename.csv')
df[4] = df[3].sum(axis=0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is python that opens a file, maps each line to the integer at the end, and then sums the integers:</p>
<p>first open the file:</p>
<pre><code>with open("my_file.txt") as f:
    # .readlines() method gives you a list of the lines in the file.
    lines = f.readlines()
</code></pre>
<p>Next we have to write a function that returns the last column of any given line as an integer.</p>
<pre><code>def extract_last_int(line):
    return int(line.split()[-1])

# apply 'extract_last_int' to each line, and then sum the results.
print sum(map(extract_last_int, lines))
</code></pre>
<ul>
<li><p>the <code>.split()</code> method will by default split on spaces, 
giving you a list of each column in this line.</p></li>
<li><p><code>[-1]</code> tells python to get the last element of the list.</p></li>
<li><p><code>map</code> takes a function and a list and calls the function once for each item of the list. The return value for <code>map</code> is a list of the results of each of these calls. In this case, the return value of map is a list of integers which are in the last column of the file.</p></li>
<li>finally, <code>sum</code> adds all these integers together.</li>
</ul>
<p>That's it!</p>
<p>If you're curious, you can do the same thing with <code>awk</code> in one line:</p>
<pre><code>awk '{i+=$NF} END {print i}' my_file.txt
</code></pre>
</div>
<span class="comment-copy">have a look at <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.split</a></span>
<span class="comment-copy">Read it but still unclear. Can you kindly do me a code sample or do the code. Thank you</span>
<span class="comment-copy">I think what you might want to try is to read the file in line by line, then split each line using <code>str.split</code> and get the 4th element ie. <code>split_line[3]</code> and add that to a variable as a number (ie <code>mysum+=int(split_line[3])</code> to get the sum.</span>
<span class="comment-copy">Tried what you said but it gives me an error. IndexError: list index out of range</span>
<span class="comment-copy">Still i receive the same error</span>
<span class="comment-copy">I tried this on another file it works. When I previously used this, I used it in a function in a class and the called it back. When I call it it gives me the error.  My code to call the function. TransactionList=LinkedListTransaction() print(TransactionList.TotalSales())</span>
<span class="comment-copy">@Ahzam I cannot help you with any error in a class or function you have not presented</span>
<span class="comment-copy">I will edit my code now with what i have</span>
<span class="comment-copy">@Ahzam Seeing the code you added, I believe the error must be in your file. Do you have any empty lines in your code. You could try to check this by only adding to the sum if the line contains at least 3 elements. I will add an example to my answer.</span>
