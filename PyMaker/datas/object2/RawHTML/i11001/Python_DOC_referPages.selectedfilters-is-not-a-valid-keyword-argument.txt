<div class="post-text" itemprop="text">
<p>I use PyQt5 and I have an error when I try to save the file name :</p>
<pre><code> csv_file_list = QtWidgets.QFileDialog.getOpenFileName(self, 'Open file', '', '*.csv')
    fileName = csv_file_list 
    fileName = QtWidgets.QFileDialog.getSaveFileName(self, 'Dialog Title', '/path/to/default/directory', selectedFilters='*.txt')
    if fileName:
        print (fileName)
</code></pre>
<p>And it display me this error : 'selectedFilters' is not a valid keyword argument.</p>
<p>I don't know if the error is here because of PyQt5 or not</p>
</div>
<div class="post-text" itemprop="text">
<p>For various reasons, the C++ signatures don't always exactly match the PyQt signatures. This is probably the biggest weakness of PyQt5. There really needs to be a comprehensive reference that details all the differences between the C++ APIs and the PyQt APIs. It <em>sort of</em> exists for PyQt4, in the form of the <a href="http://pyqt.sourceforge.net/Docs/PyQt4/classes.html" rel="nofollow">PyQt Class Reference</a> (which is a partially converted version of the Qt documentation). But there is currently nothing equivalent to that for PyQt5. However, you can always use python's introspection methods to work out the differences for yourself.</p>
<p>Here's the C++ signature for <a href="http://doc.qt.io/qt-5/qfiledialog.html#getSaveFileName" rel="nofollow">getSaveFileName</a>:</p>
<pre class="lang-cpp prettyprint-override"><code>QString getSaveFileName(QWidget *parent = Q_NULLPTR,
                        const QString &amp;caption = QString(),
                        const QString &amp;dir = QString(),
                        const QString &amp;filter = QString(),
                        QString *selectedFilter = Q_NULLPTR,
                        Options options = Options()
                        )
</code></pre>
<p>And here's the PyQt5 signature, which was obtained from the <a href="http://docs.python.org/3/library/functions.html#help" rel="nofollow">help function</a> in a python interactive session - i.e. <code>help(QtWidgets.QFileDialog.getSaveFileName)</code>:</p>
<pre class="lang-python prettyprint-override"><code>getSaveFileName(parent: QWidget = None,
                caption: str = '',
                directory: str = '',
                filter: str = '',
                initialFilter: str = '',
                options: Union[QFileDialog.Options, QFileDialog.Option] = 0,
                ) -&gt; Tuple[str, str]
</code></pre>
<p>As you can see, the <code>dir</code> argument has changed to <code>directory</code>, and the <code>selectedFilter</code> argument has changed to <code>initialFilter</code>.</p>
</div>
<span class="comment-copy">Did you consider checking the <a href="http://doc.qt.io/qt-5/qfiledialog.html" rel="nofollow noreferrer">documentation</a> to see what the valid arguments are?</span>
<span class="comment-copy">I check the doc: QString QFileDialog::getSaveFileName(QWidget *parent = Q_NULLPTR, const QString &amp;caption = QString(), const QString &amp;dir = QString(), const QString &amp;filter = QString(), QString *selectedFilter = Q_NULLPTR, Options options = Options())</span>
<span class="comment-copy">But I can't find what's the problem (I try with selectedFilter and selectedFilters too)</span>
<span class="comment-copy">Using the help function for getSaveFileName using PyQt 4 and Python 2.7 gives me "QFileDialog.getOpenFileName(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString selectedFilter=None, QFileDialog.Options options=0) -&gt; QString". Tried to set the 5th parameter as selectedFilter=aComboBox.getText() but getting the keyword error. Tested initialFilters just to see, but I'm pretty sure it doesn't apply here. Am I incorrectly interpreting the help?</span>
<span class="comment-copy">@user25976. What version of PyQt are you using? Support for keyword arguments was added in PyQt-4.7. Did you try to use <code>QFileDialog.getSaveFileNameAndFilter</code>? It has a different signature (i.e. with <code>initialFilter</code>).</span>
<span class="comment-copy">I'm using pyqt 4.11.4 so I tried getSaveFileNameAndFilter as you suggested. I am able to return the filter that was selected, but for some reason setting the initialFilter to something like "Format TIFF (*.tiff *TIFF)" (retrieved from a combobox) does not sit the initial filter (just stays on pdf because it's the first one on my filter list)...hm..</span>
<span class="comment-copy">@user25976. It seems to be broken in PyQt4 (but it does work okay in PyQt5).</span>
