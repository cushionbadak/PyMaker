<div class="post-text" itemprop="text">
<p>The following code will output infinite lines of "test". </p>
<pre><code>foo = 5
while foo:
    print("bar")
</code></pre>
<p>The other day I came across an answer here about digit sums. This was the code shown in the answer:</p>
<pre><code>def digit_sum(t):
    s = 0
    while t:
        s += t % 10
        t //= 10
    return s
</code></pre>
<p>The part I'm focusing on is the "while t:" part. How and why does this work?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>while</code> condition tests for <em>truth</em>. Any non-zero numeric value is considered true. See the <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow"><em>Truth Value Testing</em> section</a> in the Python documentation:</p>
<blockquote>
<p>Any object can be tested for truth value, for use in an <code>if</code> or <code>while</code>
  condition or as operand of the Boolean operations below. <strong>The following
  values are considered false:</strong></p>
<ul>
<li><p><code>None</code></p></li>
<li><p><code>False</code></p></li>
<li><p><strong>zero of any numeric type, for example, <code>0</code>, <code>0L</code>, <code>0.0</code>, <code>0j</code>.</strong></p></li>
<li><p>any empty sequence, for example, <code>''</code>, <code>()</code>, <code>[]</code>.</p></li>
<li><p>any empty mapping, for example, <code>{}</code>.</p></li>
<li><p>instances of user-defined classes, if the class defines a
  <code>__nonzero__()</code> or <code>__len__()</code> method, when that method returns the integer zero or bool value <code>False</code>.</p></li>
</ul>
<p><strong>All other values are considered true â€” so objects of many types are
  always true.</strong></p>
</blockquote>
<p>Bold emphasis mine.</p>
<p>In your sample <code>while</code> loop, <code>t</code> trends to 0 (integer division by 10), so eventually <code>while t:</code> ends because <code>t</code> is considered false.</p>
</div>
<div class="post-text" itemprop="text">
<p>You already got useful answers, but I just wanted to answer your question in a way that can be easily understood by someone who is a beginner in Python.
You could rewrite your code as:</p>
<pre><code>def digit_sum(t):
    s = 0
    while t!=0:
        s += t % 10
        t = t//10
    return s
</code></pre>
<p>'while t' is equivalent to 'while t!=0', meaning that the loop will end when t is equal to 0.</p>
<p>In your for loop, 't //= 10' is equivalent to 't = t // 10' ('//' is a floor division operator and returns an integer). So the value of t becomes smaller each time the loop is executed, until it eventually reaches the value of 0. At this point, the 'while t' condition is False and the loop ends.</p>
</div>
<span class="comment-copy">0 is false and non-zero is true.</span>
<span class="comment-copy">Could you explain your question in more detail? Because, as of now, my answer would be something like: "That's just the way it is".</span>
<span class="comment-copy">You could have found the answer by reading the docs: <a href="https://docs.python.org/3/library/stdtypes.html#truth" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#truth</a></span>
<span class="comment-copy">Partly historical from C (and possibly earlier?) that zero is considered False.    The <code>bool</code> class is a subclass of <code>int</code>, so they are closely related.  Note that character <code>"0"</code> (zero) is True in Python, but False in Perl.</span>
<span class="comment-copy">@cdarke Surely 0 is false in python too, while 1 is true?</span>
<span class="comment-copy">Note that <code>__nonzero__</code> is Python 2, renamed <code>__bool__</code> in Python 3.</span>
<span class="comment-copy">I guess my question was not taken very well, but thanks a lot for the answer.</span>
