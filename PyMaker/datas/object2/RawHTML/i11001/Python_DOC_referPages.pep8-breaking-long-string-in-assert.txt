<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/53162/how-can-i-do-a-line-break-line-continuation-in-python">How can I do a line break (line continuation) in Python?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I have this line of code:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n, "First edge needs to be between 0 and {}".format(self.n)
</code></pre>
<p>I want pep8 to be happy, but I don't understand how to break this line. I tried breaking after the comma and got invalid syntax. I've tried breaking the string with additional ""'s as in <a href="https://stackoverflow.com/questions/25949525/how-to-break-long-string-lines-for-pep8-compliance">How to break long string lines for PEP8 compliance?</a>. PEP8 was happy but the assert only produced the first half of the message.</p>
<p>What is the proper way to break long assert strings?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use parens:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n, ("First edge needs to be "
                          "between 0 and {}".format(self.n))
</code></pre>
<p>Or:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n, ("First edge needs to be between 0 and {}"
                          .format(self.n))
</code></pre>
<p>Or use the parens of the <code>format</code> function:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n, "First edge needs to be between 0 and {}".format(
    self.n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Considering <a href="https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement" rel="nofollow"><code>assert</code></a> statements can be stripped when you run the interpreter with the <code>-O</code> option, you probably want to keep it a single statement and use some sort of string concatenation:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n, ("First edge needs to be between "
                          "0 and {}".format(self.n))
</code></pre>
<p>That said, breaking it into two statements would also be PEP8-compliant (and arguably more readable):</p>
<pre><code>message = "First edge needs to be between 0 and {}".format(self.n)
assert 0 &lt;= j &lt;= self.n, message
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can force breaking to a new line like this:</p>
<pre><code>assert 0 &lt;= j &lt;= self.n,\
       "print stuff"
</code></pre>
<p>That always makes the line continue, if brackets and such aren't doing it automatically.  And you can indent the next line to wherever makes it the most readable, as I did above.</p>
</div>
<span class="comment-copy">Break PEP8 instead.</span>
<span class="comment-copy">You could add a backslash after the comma and put the rest on a new line.</span>
<span class="comment-copy">Personally, I'd go for a <i>slightly</i> more readable version: Assign the failure message to a variable, and use that variable in assert.</span>
<span class="comment-copy">See also <a href="http://stackoverflow.com/questions/2058925/how-can-i-break-up-this-long-line-in-python">How can I break up this long line in Python?</a></span>
