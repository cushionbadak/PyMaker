<div class="post-text" itemprop="text">
<p>My website has a list of pages that are under /record and available only with query parameters of type and id. Like so:</p>
<blockquote>
<p>/record?type=poem&amp;id=175</p>
</blockquote>
<p>I am using the django next redirect to go from the login page to the previous page. I initially used <code>href="{% url 'auth:login' %}?next={{ request.path }}"</code> to redirect, but it didn't take the query parameters (i.e type and id). This takes the user to </p>
<blockquote>
<p>/login/?next=/record</p>
</blockquote>
<p>I then used <code>href="'{% url 'auth:login' %}?next={{ request.path }}'+window.location.search"</code>. However, this doesn't work as well. This takes the user to</p>
<blockquote>
<p>/login/?next=/record?type=poem&amp;id=175</p>
</blockquote>
<p>but it finally redirects to</p>
<blockquote>
<p>/record</p>
</blockquote>
<p>How do I redirect using next along with query parameters? Is this behavior not possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <strong>use <a href="https://docs.djangoproject.com/en/1.9/ref/request-response/#django.http.HttpRequest.get_full_path" rel="nofollow"><code>HttpRequest.get_full_path()</code></a></strong> method along with <a href="https://docs.djangoproject.com/en/1.9/ref/templates/builtins/#urlencode" rel="nofollow"><code>urlencode</code></a> template filter to get the current url along with the query string. </p>
<blockquote>
<p><a href="https://docs.djangoproject.com/en/1.9/ref/request-response/#django.http.HttpRequest.get_full_path" rel="nofollow"><code>HttpRequest.get_full_path()</code></a><br/>
  Returns the path, plus an appended query string, if applicable.</p>
</blockquote>
<pre><code>href="{% url 'auth:login' %}?next={{request.get_full_path|urlencode}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to escape special characters in the URL, namely '?', '&amp;' and '='.
While there is <a href="https://docs.djangoproject.com/en/dev/ref/utils/#django.utils.encoding.escape_uri_path" rel="nofollow noreferrer">django.utils.encoding.escape_uri_path</a>, it doesn't escape the ampersand (&amp;), which is a problem because it will be interpreted as the end of the <code>next</code> parameter and the beginning of another.</p>
<p>Instead, you can use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote" rel="nofollow noreferrer">urllib.parse.quote</a>:</p>
<pre><code>from urllib.parse import quote
current_url_escaped = quote(request.get_full_path())
</code></pre>
<p>and in the template:</p>
<pre><code>href="{% url 'auth:login' %}?next={{ current_url_escaped }}
</code></pre>
</div>
<span class="comment-copy">Out of what I recall, could you try: <code>request.get_full_path()</code> ?</span>
<span class="comment-copy">"request.get_full_path"* you mean. However, doing that works the same as using widow.location.search. It first takes me to <code>/login/?next=/record?type=poem&amp;id=171</code> but then finally takes me to <code>/record</code> as if ignoring the query parameters.</span>
<span class="comment-copy">This <code>?next={{ request.get_full_path|urlencode }}</code> should be the ideal case. Could you showcase the view you have written and also your settings.py <code>TEMPLATE_CONTEXT_PROCESSORS</code> ?</span>
<span class="comment-copy">It's working. That's the reason it's taking me to <code>/login/?next=/record?type=poem&amp;id=171</code> in the first place. But after I am logged in, it simply redirects to <code>/record</code> ignoring the query parameters. I do have <code>django.core.context_processors.request</code> in <code>TEMPLATE_CONTEXT_PROCESSORS</code>, so that's not an issue.</span>
<span class="comment-copy">Using <code>urlencode</code>, <code>/login/?next=/record?type=poem&amp;id=171</code> just changes to <code>/login/?next=/record%3Ftype%3Dpoem%26id%3D170</code>. But in the end both redirect to <code>/record</code></span>
<span class="comment-copy">Doing that works the same as using widow.location.search. It first takes me to <code>/login/?next=/record?type=poem&amp;id=171</code> but then finally takes me to <code>/record</code> as if ignoring the query parameters.</span>
<span class="comment-copy">Please check whether in your login view, you are preserving parameters or not when redirecting to <code>next</code> url.</span>
<span class="comment-copy">What do you mean by preserving parameters? How exactly would I do that?</span>
<span class="comment-copy">When redirecting to <code>next</code> url, you should also add the url parameters to the <code>next</code> url so that it gets passed to <code>/record</code> url.</span>
