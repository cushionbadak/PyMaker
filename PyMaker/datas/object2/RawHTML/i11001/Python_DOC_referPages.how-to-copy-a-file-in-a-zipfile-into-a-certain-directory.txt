<div class="post-text" itemprop="text">
<p>I need only one subfile in each of 500 zipfiles, the paths are the same, like:</p>
<pre><code>120132.zip/A/B/C/target_file
212332.zip/A/B/C/target_file
....
</code></pre>
<p>How can I copy all these target files into one directory? Keeping the entire paths in the new directory will be the best, which I mean is:</p>
<pre><code>target_dir/
    120132/A/B/C/target_file
    212332/A/B/C/target_file
    ......
</code></pre>
<p>I tried it with Python modules <em>zipfile</em> and <em>shutil</em> </p>
<p>However, <strong>copyfile</strong> from <em>shutil</em> takes the entire path as argument but when I tried to directly copy the target file it will raise filenotfind error. When unzipped by the zipfile.Zipfile, the target file will be accessible but <em>copyfile</em> becomes invalid.</p>
<p>How can I do this correctly and efficiently ?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.extract" rel="nofollow"><code>ZipFile.extract</code></a> accepts optional <code>path</code> specifying into which directory it will extract file:</p>
<pre><code>import os
import zipfile

zip_filepath = ['120132.zip', '212332.zip', ...]  # or glob.glob('...zip')
target_dir = '/path/to/target_dir'

for path in zip_filepath:
    with zipfile.ZipFile(path) as zf:
        dirname = os.path.join(
            target_dir, os.path.splitext(os.path.basename(path))[0]
        )
        zf.extract('A/B/C/target_file', path=dirname)
</code></pre>
</div>
<span class="comment-copy">Yes! That's totally what I want! extract() makes sense. Thank you!</span>
<span class="comment-copy">I run into another problem. I executed "zf.extract(r"A\B\C\filename", ..)" on windows, but it failed, saying "There is no item named 'A\\\\B\\\\C\\\\filename'". Could you give me an advice? @falsetru</span>
<span class="comment-copy">@Spike, Are you sure all zip files contains that file? Does it fail from the very beginning file? You may need to check it before calling <code>extract</code> or use <code>try ... except ...</code>.</span>
<span class="comment-copy">oh I am sorry, I made a mistake, nevertheless, thanks! @falsetru</span>
