<div class="post-text" itemprop="text">
<p>I have the following string:</p>
<pre><code>st='19.000\n20,000'
</code></pre>
<p>i want to remove the commas and points <strong>ONLY FOR NUMBERS</strong>. I am using the following code</p>
<pre><code>re.sub(r'[^\d\.]','',st)
</code></pre>
<p>The result is:</p>
<blockquote>
<p>'19.00020000'</p>
</blockquote>
<p>I am newbie in regex. How do I preserve the new line and remove the dot Can anyone help?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>^\d</code> matches everything that is not a digit.</p>
<p>Instead, you should use <code>(?&lt;=\d)[,\.]</code>.</p>
<p><code>(?&lt;=\d)</code> ensures that there are digits before the comma or the point.</p>
<pre><code>import re

st = '19.000\n20,000\na.a,a'

print(re.sub(r'(?&lt;=\d)[,\.]','',st))
&gt;&gt; 19000
   20000
   a.a,a
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>[^\d\.]</code>, since it starts with a <code>^</code>, matches everything that <em>isn't</em> a digit (<code>\d</code>) or point (<code>\.</code>).  If you want to remove commas and points, you want to match <code>,</code> or <code>\.</code>, which can be written <code>[,\.]</code> or <code>[\.,]</code>.  In <code>re.sub</code>, that's written <code>r'[,\.]</code>.  You replace those with the empty string (<code>''</code>) and everything else should be left as is.</p>
<p><strong>Edit</strong> Per the change to your question, to remove commas and points between digits, one way is to use</p>
<pre><code>re.sub(r'(?&lt;=\d)[,\.](?=\d)','',st)
</code></pre>
<p>which will match commas or points preceded by a digit (<code>(?&lt;=\d)</code>) and followed by a digit (<code>(?=\d)</code>).  These are called <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">"lookbehind" and "lookahead" assertions</a>.</p>
</div>
<span class="comment-copy"><code>re.sub(r'[,\.]', '', st)</code></span>
<span class="comment-copy">Thanks but wouldn't that replace all dots and commas?</span>
<span class="comment-copy">That's what you asked for.</span>
<span class="comment-copy">Sorry about that I edited the description</span>
<span class="comment-copy">Please post some example input/output that shows your problem. If your string contains some dots and commas outside of numbers that are not supposed to be removed, your examples should show that.</span>
