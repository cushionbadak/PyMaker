<div class="post-text" itemprop="text">
<p>I'm looking for a way to pad the float decimals with zeros:</p>
<p>This one is my reference:</p>
<pre><code>In [37]: '{:5.5}'.format(round(4.123456, 5))
Out[37]: '4.1235'
</code></pre>
<p>I have this:   </p>
<pre><code>In [38]: '{:5.5}'.format(4.1)
Out[38]: '  4.1'
</code></pre>
<p>But I would like to have this:</p>
<pre><code>Out[38]: '4.1000'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">format</a> a floating point number with a given precision you should use the <code>'f'</code> specifier. Without it the value is formatted as a string.</p>
<pre><code>&gt;&gt;&gt; '{:.4f}'.format(4.1)
'4.1000
</code></pre>
<p>You can also specify the <em>minimum width</em> of the complete output and the fill character:</p>
<pre><code>&gt;&gt;&gt; '{:07.4f}'.format(4.1)
'04.1000'
</code></pre>
<p>Here the output is padded on the left with zeros to be at least 7 characters.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code> '{:5.5f}'.format(4.1)
</code></pre>
<p>The f in the format string makes the difference here. You can read more about the formatters in <a href="https://docs.python.org/2/library/string.html#format-specification-mini-language" rel="nofollow">here</a>, important for this task is </p>
<blockquote>
<p>'f'   Fixed point. Displays the number as a fixed-point number. The
  default precision is 6.</p>
</blockquote>
<p>But you wanted just 4 digits after the comma, so better is </p>
<pre><code>&gt;&gt;&gt; '{:.4f}'.format(4.1)
'4.1000'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>'{:5.5f}'.format(4.1)
</code></pre>
<p><a href="http://www.pyformat.info" rel="nofollow">pyformat.info</a></p>
</div>
