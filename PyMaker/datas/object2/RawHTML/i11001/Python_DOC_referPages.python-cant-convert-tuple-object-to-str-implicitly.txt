<div class="post-text" itemprop="text">
<p>I'm trying to get my code to store messages within txt file using json. Each time a new message comes in, it will add the new message to the array.</p>
<p>The structure will be</p>
<pre><code>{
  "Messages": {
    "Test Contact 2": {
      "0": "\"Message 1"
    },
    "Test Contact 1": {
      "0": "\"Message 1\"",
      "1": "\"Message 2\""
    }
  }
}
</code></pre>
<p>And here is my current code</p>
<pre><code>class PluginOne(IPlugin):
    def process(self):
        try:
            print("Database")
            data_store('Test contact', 'Text Message')
            pass
        except Exception as exc:
            print("Error in database: " + exc.args)


def data_store(key_id, key_info):
    try:
        with open('Plugins/Database/messages.txt', 'r+') as f:
            data = json.load(f)
            data[key_id] = key_info
            f.seek(0)
            json.dump(data, f)
            f.truncate()
        pass
    except Exception as exc:
        print("Error in data store: " + exc.args)
</code></pre>
<p>when I try to run the code, I get the following error</p>
<pre><code>Can't convert 'tuple' object to str implicitly
</code></pre>
<p>I've looked online and I'm still struggling, I'm sure it's a simple answer but as I'm fairly new to Python, I can't figure it out.</p>
<p>Thanks in advanced</p>
</div>
<div class="post-text" itemprop="text">
<p>In your exception handler, you're adding <code>exc.args</code> to a string. The args attribute <a href="https://docs.python.org/3/library/exceptions.html#BaseException.args" rel="nofollow">is a tuple</a>, which can't be converted to a string implicitly. You could...</p>
<pre><code>    # print it seperately
    print("Error in data store")
    print(exc.args)

    # or alternatively
    print("Error in data store: " + str(exc.args))

    # or alternatively
    print("Error in data store: " + str(exc))
</code></pre>
<p>However, this being a problem in the exception handler, the root cause of the problem is something else, and your current exception handler isn't that great at handling it:</p>
<ul>
<li><em>without</em> your exception handler, Python would show a complete traceback of the root cause of the exception, and halt your program.</li>
<li><em>with</em> your exception handler, only your message is printed <em>and the program continues</em>. This might not be what you want.</li>
</ul>
<p>It would perhaps be better to only <code>catch</code> the specific exceptions you know you can recover from.</p>
</div>
<span class="comment-copy">You can't concatenate strings and lists. You should find some way to represent the data you want from <code>exc.args</code> as a string instead.</span>
<span class="comment-copy">Why would converting it to a list help? A list is also not a string.</span>
<span class="comment-copy">You're both right. I've fixed my answer.</span>
