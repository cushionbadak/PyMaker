<div class="post-text" itemprop="text">
<p>I have the following Python code:</p>
<pre><code>a = [1,2,3,'4','55',6]
filter(int,a)
</code></pre>
<p>The output is:</p>
<pre><code>[1, 2, 3, '4', '55', 6]
</code></pre>
<p><code>filter()</code> is supposed to remove the elements from the provided sequence which translate into false, and return only those elements which translate into true. </p>
<p>I expected the output to be:</p>
<pre><code>[1,2,3,6]
</code></pre>
<p>since these are the only integers in my list.
Am I missing something essential? </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow"><code>isinstance</code></a> instead:</p>
<pre><code>&gt;&gt;&gt; a =[1,2,3,'4','55',6]
&gt;&gt;&gt; filter(lambda x: isinstance(x, int),a)
[1, 2, 3, 6]
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int</code></a> will convert each object to integer and since all numbers/strings on the list are non-zero <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow"><code>filter</code></a> picks them all since they evaluate <code>True</code> in boolean context. Instead of that it seems that your goal is to pick objects that are already ints and that can be done with <code>isinstance</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>filter()</code> calls the callable that it is given (<code>int</code>) with each item in the iterable and returns those that are Truthy.  Since <code>int('56')</code> results in <code>56</code>, it is Truthy and is included in the results.  You may want something like this:</p>
<pre><code>filter(lambda x: isinstance(x, int), a)
</code></pre>
<p>or better:</p>
<pre><code>[x for x in a if isinstance(x, int)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I agree with @niemmi's and @zondo's solution i.e.</p>
<pre><code>filter(lambda x: isinstance(x, int), a)
</code></pre>
<p>Now the question is why filter(int, a) didn't work ?</p>
<p>Filter ultimately call <strong>function(val)</strong> and if this returns false then it filtered it out.</p>
<pre><code>&gt;&gt;&gt; int('4')  # Which is returning 4, and its true.
4
</code></pre>
<p>But if you call this,</p>
<pre><code>&gt;&gt;&gt; a =[1,2,3,'4','0',6]
&gt;&gt;&gt; filter(int, a)
[1,2,3,4,6]

&gt;&gt;&gt; a =[1,2,3,'4','55a',6]
&gt;&gt;&gt; filter(int, a)
Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 10: '55a'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>[x for x in a if isinstance(x, int)]
</code></pre>
<p>or</p>
<pre><code>filter(lambda x: isinstance(x, int), a)
</code></pre>
</div>
<span class="comment-copy">On why your code didn't work: <code>int</code> returns an <code>int</code> object or raises an exception when input cannot be turned into an <code>int</code>, so it will always return a value that evaluates to true.  Filter will filter out anything that evaluates to a "falsy" value, so if you had a <code>0</code> in the list it will be filtered out by your filter.</span>
<span class="comment-copy">Please read the documentation about what a language feature does before posting a question about it not working the way you think it does: <a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#filter</a></span>
<span class="comment-copy">@IanAuld  [item for item in iterable if function(item)] is what i think i overlooked; This perfectly answers my question. Yes, you are right, a careful observation goes a long way.</span>
<span class="comment-copy">Thanks, Yes, i can get the list i wanted by using isinstance, but i am wondering why the filter(int,&lt;list&gt;) wouldn't work.</span>
