<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31818050/round-number-to-nearest-integer">Round number to nearest integer</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/20457038/how-to-round-to-2-decimals-with-python">How to round to 2 decimals with Python?</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>I need to round floating number in such a way that,</p>
<p><strong>If 7.4 comes, it should round to next lower number, that is 7.<br/>
If 7.5 or 7.6 comes it should round to next higher number, that is 8</strong></p>
<p>How can I do that? I am using python 2.7</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>round()</code> function which comes builtin in python (<a href="https://docs.python.org/2/library/functions.html#round" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#round</a>)</p>
<pre><code>&gt;&gt;&gt; round(7.4)
7
&gt;&gt;&gt; round(7.5)
8
</code></pre>
<p>From the documentation:</p>
<blockquote>
<p>Note the behaviour of <code>round()</code> for floats can be surprising: for
  example, <code>round(2.675, 2)</code> gives <code>2.67</code> instead of the expected
  <code>2.68</code>. This is not a bug: it’s a result of the fact that most decimal
  fractions can’t be represented exactly as a float. See <a href="https://docs.python.org/2/tutorial/floatingpoint.html#tut-fp-issues" rel="nofollow noreferrer">Floating Point
  Arithmetic: Issues</a> and Limitations for more information.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You want to use the <a href="https://docs.python.org/2/library/functions.html#round" rel="nofollow">round() builtin</a>.</p>
<p>You haven't specified whether or not you are using Python 2 or 3, but note that in Python3, <code>round()</code> does bankers rounding: <a href="https://docs.python.org/3/library/functions.html#round" rel="nofollow">https://docs.python.org/3/library/functions.html#round</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#round" rel="nofollow"><code>round</code></a>:</p>
<pre><code>&gt;&gt;&gt; round(7.4)
7
&gt;&gt;&gt; round(7.5)
8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the round() method for this. The round() method takes two parameters. round(a, b). a is the the floating number whereas b is the number of decimal places up to which you want.</p>
<pre><code>print round(60.23456, 2)
</code></pre>
<p>will give you an answer of 60.23</p>
<p>P.S This is python 2.7</p>
<p>In python 3 you can use</p>
<pre><code>math.ceil(x) or math.floor(x)
</code></pre>
<p>for more information go to <a href="https://docs.python.org/3/library/math.html" rel="nofollow">https://docs.python.org/3/library/math.html</a></p>
<p>Hope this helps :)</p>
</div>
<span class="comment-copy">Look at Python documentation for ceil and floor</span>
<span class="comment-copy">Caveat: <code>round(8.5)</code> will give you a result of <code>9</code> in Python 2 and  <code>8</code> in Python 3. Keep this in mind if you ever want to switch to Python 3.</span>
