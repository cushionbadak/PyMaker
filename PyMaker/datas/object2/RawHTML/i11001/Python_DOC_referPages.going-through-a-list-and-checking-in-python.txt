<div class="post-text" itemprop="text">
<p>I'm currently looking for an algorithm to be able to go through a list such as the following one: <code>[1,1,1,1,2,3,4,5,5,5,3,2]</code>
I want, in this example, to be able to select the first "1" as there's a duplicate next to it, and keep going through the list until finding the next number having a duplicate next to it, and then select the last number of this one (ie. "5" in this example).
Eventually, make the difference between these 2 numbers (ie. 5-1)</p>
<p>I have this code at the moment:</p>
<pre><code>i=0    

for i in range(len(X)):

    if (X[i] == X[i+1]):
        first_number = X[i]

    elif (X[i] != X[i+1]):
        i+=1
</code></pre>
<p>I'd like to add a further condition to my question. Suppose you have the following list: lst=[1,1,1,1,2,3,4,5,5,5,3,3,3,3,2,2,2,4,3] In this case, I'll get the following differences according to your code = lst = [4,-2,-1] and then stops. However, I'd like "4-2" to be added to the list afterwards because "4" is followed by a number less than "4" (thus, going to the opposite direction - up - of what "2" followed "4" were following). I hope this is clear enough. Many thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code></a> to find groups of repeating numbers, then find the difference between the first two of those:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; lst = [1,1,1,1,2,3,4,5,5,5,3,2]
&gt;&gt;&gt; duplicates = [k for k, g in itertools.groupby(lst) if len(list(g)) &gt; 1] 
&gt;&gt;&gt; duplicates[1] - duplicates[0]
4
</code></pre>
<p>Or use <code>duplicates[-1] - duplicates[0]</code> if you want the difference between the first and the <em>last</em> repeated number.</p>
<p>In the more general case, if you want the difference between all pairs of consecutive repeated numbers, you could combine that with <code>zip</code>:</p>
<pre><code>&gt;&gt;&gt; lst = [1,1,1,1,2,3,4,5,5,5,3,3,3,3,2,2,2]
&gt;&gt;&gt; duplicates = [k for k, g in itertools.groupby(lst) if len(list(g)) &gt; 1] 
&gt;&gt;&gt; duplicates
[1, 5, 3, 2]
&gt;&gt;&gt; [x - y for x,y in zip(duplicates, duplicates[1:])]
[-4, 2, 1]
</code></pre>
<hr/>
<p>I think now I got what you want: You want the difference between any consecutive "plateaus" in the list, where a plateau is either a repeated value, or a local minimum or maximum. This is a bit more complicated and will take several steps:</p>
<pre><code>&gt;&gt;&gt; lst=[1,1,1,1,2,3,4,5,5,5,3,3,3,3,2,2,2,4,3]
&gt;&gt;&gt; plateaus = [lst[i] for i in range(1, len(lst)-1) if lst[i] == lst[i-1] 
...                                                  or lst[i-1] &lt;= lst[i] &gt;= lst[i+1] 
...                                                  or lst[i-1] &gt;= lst[i] &lt;= lst[i+1]]
&gt;&gt;&gt; condensed = [k for k, g in itertools.groupby(plateaus)]
&gt;&gt;&gt; [y-x for x, y in zip(condensed, condensed[1:])]
[4, -2, -1, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>enumerate</code> with a starting index of <code>1</code>. Duplicates are detected if the current value is equal to the value at the previous index:</p>
<pre><code>l = [1,1,1,1,2,3,4,5,5,5,3,2]
r = [v for i, v in enumerate(l, 1) if i &lt; len(l) and v == l[i]]

result = r[-1] - r[0]
# 4
</code></pre>
<p>The list <code>r</code> is a list of all duplicates. <code>r[-1]</code> is the last item and <code>r[0]</code> is the first.</p>
<p>More trials:</p>
<pre><code>&gt;&gt;&gt; l= [1,1,5,5,5,2,2]
&gt;&gt;&gt; r = [v for i, v in enumerate(l, 1) if i &lt; len(l) and v == l[i]]
&gt;&gt;&gt; r[-1] - r[0]
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Solution:</p>
<pre><code>def subDupeLimits( aList ):
    dupList = []
    prevX = None
    for x in aList:
        if x == prevX:
            dupList.append(x) # track duplicates
        prevX = x # update previous x

    # return last duplicate minus first
    return dupList[-1] - dupList[0]

# call it
y = subDupeLimits( [1,1,1,1,2,3,4,5,5,5,3,2] )
# y =  4
</code></pre>
</div>
<span class="comment-copy">Could you provide example input and output of what this algorithm should do? Where does the difference (ie 5-1) get added?</span>
<span class="comment-copy">So, are you looking for the difference between the first duplicate and the second duplicate?</span>
<span class="comment-copy">Once you have the first number, <code>break</code>. Then do a similar look over <code>range(len(X) - 1, -1, -1)</code> going backwards to find the last one.</span>
<span class="comment-copy">Also, get rid of the <code>for</code> loop or <code>i=0</code>. Also, if you do do a for loop, do it over <code>range(len(X) - 1)</code>.</span>
<span class="comment-copy">Please clarify: Do you want the difference between the first and the <i>second</i>, or the first and the <i>last</i> repeated number?</span>
<span class="comment-copy">Dear downvoter, care to explain why the downvote? Do you think I misunderstood the question? In this case, please enlighten me.</span>
<span class="comment-copy">Thank you for your answer. Still have some problems. My code is:  from itertools import groupby as itertools  def check_f1(X):          duplicates = [k for k, g in itertools.groupby(X) if len(list(g)) &gt; 1]     duplicates[1] - duplicates[0]</span>
<span class="comment-copy">@sammtt Your import is wrong: Instead of <code>from itertools import groupby as itertools</code> just do <code>import itertools</code></span>
<span class="comment-copy">Thanks very much. However, I don't understand why the first element is "-4" ??</span>
<span class="comment-copy">actually I have two cases in which subtraction would occur: 1) the one previously elaborated 2) my new case: consider the list [2,2,2,3,4,3]. I'd like to make "4-2" as "4" is here a local maximum. Another example, consider the list, [6,6,6,2,2,2,3,4,3]. In this case, two subtractions will be carried out: "2-6" and "4-2". Another example, consider the list [6,6,6,2,2,2,3,4,3,7]. Here, 3 subtractions will be carried out: "2-6", "4-2", and "3-4" Hope it's clear now</span>
<span class="comment-copy">Hm, I guess OP's question is a bit ambiguous: In one sentence, he's looking for the "next" duplicate number, and then he takes the difference between the "last" and the first...</span>
