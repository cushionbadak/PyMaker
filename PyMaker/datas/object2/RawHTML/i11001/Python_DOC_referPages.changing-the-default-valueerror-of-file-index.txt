<div class="post-text" itemprop="text">
<p>I was using <code>file.index</code> to search for a string in a file.</p>
<pre><code>def IfStringExistsInFile(self,path,lineTextCheck):
    file = open(path).read()
    if file.index(lineTextCheck):
        print (lineTextCheck + " was found in: " + path)
    else:
        raise ValueError (lineTextCheck + " was NOT found in: " + path)
</code></pre>
<p>My issue is that if it does not find the string, it automatically raises a default ValueError and does not go into the "else" code which contains my custom ValueError:</p>
<pre><code>ValueError: substring not found
</code></pre>
<p>Is there a way I could change that default ValueError?</p>
<p>Currently, the only way I came up with was to wrap the sentence with "try except", like so:</p>
<pre><code>def IfStringExistsInFile(self,path,lineTextCheck):
    file = open(path).read()
    try:
        if file.index(lineTextCheck):
            print (lineTextCheck + " was found in: " + path)
    except:
            raise ValueError(lineTextCheck + " was NOT found in: " + path)
</code></pre>
<p>Any better way would be greatly appreciated. Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Any better way would be greatly appreciated</p>
</blockquote>
<p>You solved it exactly how this should be solved.</p>
<p>Note that you can create your own <code>Exception</code> by creating a class that inherits from <code>BaseException</code>, but this is rarely needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as i know you cant change the built in errors. When you <code>raise</code> an error you raise it wherever you want, but in cause you done <code>except</code> the built-in error you will still get that.</p>
<p>So your second solution is the best i think, to <code>except</code> the built-in error, and treat it with a <code>raise</code></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow"><em>Easier to Ask for Forgiveness than Permission</em></a>. </p>
<p>Using a <code>try/except</code> for this is standard practice. You can also drop that <code>if</code> so the line gets printed if the index is found without raising errors:</p>
<pre><code>try:
    file.index(lineTextCheck)
    print (lineTextCheck + " was found in: " + path)
except ValueError: # explicitly specify the error
    raise ValueError(lineTextCheck + " was NOT found in: " + path)
</code></pre>
</div>
<span class="comment-copy">Perfect, thank you :)</span>
<span class="comment-copy">Removing the "if" is a nice improvment, thank you!</span>
