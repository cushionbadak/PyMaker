<div class="post-text" itemprop="text">
<p>I know <code>p=re.compile('aaa|bbb')</code> can work, but I want to rewrite <code>p = re.compile('aaa|bbb')</code> using variables, something like</p>
<pre><code>A = 'aaa'
B = 'bbb'
p = re.compile(A|B)
</code></pre>
<p>but this doesn't work. How can I rewrite this so that variables are used (and it works)?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><code>p=re.compile(A|B)</code></p>
</blockquote>
<p><em>You are not doing the string concatenation correctly</em>. What you are doing is applying the <a href="https://stackoverflow.com/questions/5988665/pipe-character-in-python">"bitwise or" (the pipe) operator</a> to strings, which, of course, fails:</p>
<pre><code>&gt;&gt;&gt; 'aaa' | 'bbb'
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for |: 'str' and 'str'
</code></pre>
<p>Instead, you can use <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>:</p>
<pre><code>p = re.compile(r"|".join([A, B])) 
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; A = 'aaa'
&gt;&gt;&gt; B = 'bbb' 
&gt;&gt;&gt; r"|".join([A, B])
'aaa|bbb'
</code></pre>
<p>And, make sure you trust the source of <code>A</code> and <code>B</code> (beware of <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS" rel="nofollow noreferrer">Regex injection attacks</a>), or/and properly <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer">escape</a> them.</p>
</div>
<span class="comment-copy">Python already provides a function to escape them, namely, <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>re.escape</code></a>. So to make an alternation of an arbitrary set of literal strings, you'd just do: <code>r'|'.join(map(re.escape, literals_to_alternate_on))</code>.</span>
