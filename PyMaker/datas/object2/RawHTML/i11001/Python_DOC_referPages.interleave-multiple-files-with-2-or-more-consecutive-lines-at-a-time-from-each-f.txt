<div class="post-text" itemprop="text">
<p>I've searched and found code below that can interleave 2 files line by line into new one.</p>
<pre><code>from itertools import izip_longest
from contextlib import nested

with nested(open('foo'), open('bar')) as (foo, bar):
    for line in (line for pair in izip_longest(foo, bar)
                      for line in pair if line):
        print line.strip()
</code></pre>
<p>I have multiple files and like to have 2 or more consecutive lines to interleave one after another. I like to be able to choose number of lines depend on the job. Total number of lines in each file may not be the same, but the pattern for number of lines for each element on all files are always the same. How can I achieve my goal?</p>
<pre><code>input:
fileA
lineA1
lineA2
lineA3
......

fileB
lineB1
lineB2
lineB3
......

For 2 lines output:
lineA1
lineA2
lineB1
lineB2
.....

For 3 lines output:
lineA1
lineA2
lineA3
lineB1
lineB2
lineB3
....
</code></pre>
<p>Thank you.</p>
<p>@xealits Thanks a million. Your codes work like a champ. Have a nice day!</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>from itertools import islice

# number of sequential lines to read from each file
N = 2
# files that are read
files = [open(n) for n in ['foo', 'bar', 'baz']]

line = ''.join([''.join(islice(f, N)) for f in files])[:-1]
while line:
    print(line)
    line = ''.join([''.join(islice(f, N)) for f in files])[:-1]

[f.close() for f in files]
</code></pre>
<p>-- here the files are opened and closed manually in list comprehensions instead of using <code>with</code> and <code>nested</code> or <code>ExitStack</code>; when <code>islice</code> called on a file reads first N lines from it (and when the lines are read they are not in the file object any more -- they pop out of it) (also, one can loop through a file with <code>[line for line in file]</code>); <code>''.join</code> joins items of the given list/tuple/iterable object into a string with <code>''</code> as the separator; since <code>print</code> adds newline to the printed string, <code>[:-1]</code> is to remove the last character of the resulting string from files, which is newline character.</p>
<p>If you read only 2 files, then <code>with</code> is fine:</p>
<pre><code>from itertools import islice

# number of sequential lines to read from each file
N = 2

with open('foo') as foo, open('bar') as bar:
    line = ''.join(islice(foo, N)) + ''.join(islice(bar, N))[:-1]
    while line:
        print(line)
        line = ''.join(islice(foo, N)) + ''.join(islice(bar, N))[:-1]
</code></pre>
<p>Some references for the used stuff:</p>
<p><a href="https://stackoverflow.com/questions/5832856/how-to-read-file-n-lines-at-a-time-in-python">How to read file N lines at a time in Python?</a></p>
<p><a href="https://docs.python.org/2/library/contextlib.html#contextlib.nested" rel="nofollow noreferrer">nested is deprecated</a></p>
<p><a href="https://stackoverflow.com/questions/4617034/how-can-i-open-multiple-files-using-with-open-in-python#comment22683982_4617069">Python 3 uses <code>ExitStack</code> for <code>nested</code> features in <code>with</code></a></p>
<p><a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow noreferrer"><code>ExitStack</code></a></p>
</div>
<span class="comment-copy">Closing the files is <b>always</b> a good idea. Even if they are closed on your current version of your specific python interpreter, there is absolutely no guarantee they will be in next release. And in fact, neither Jython nor Pypy close files automatically in this case.</span>
<span class="comment-copy">@spectras, yep. But at the same time <code>nested</code> is deprecated. And apparently one <a href="http://stackoverflow.com/questions/4617034/how-can-i-open-multiple-files-using-with-open-in-python#comment22683982_4617069">has to use StackExit in Python 3</a>.. So, if the target is any python interpreter (Jython/Pypy), maybe one needs to make the list of the files, loop through them and close them manualy at the end.</span>
<span class="comment-copy">Indeed. Though here, as you're reading all files before looping through the line, you could just open them one after the other, there is no need for nested or stackexit.</span>
<span class="comment-copy">To xealits, please change your code to interleave 2 or more consecutive lines from each file. Just edited my post for clarification. Thank for your help.</span>
<span class="comment-copy">@mlov sorry for missing the point, now it should be ok</span>
