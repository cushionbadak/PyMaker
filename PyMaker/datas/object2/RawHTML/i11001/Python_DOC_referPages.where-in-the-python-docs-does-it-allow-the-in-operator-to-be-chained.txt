<div class="post-text" itemprop="text">
<p>I recently discovered that the following returns <code>True</code>:</p>
<pre><code>'a' in 'ab' in 'abc'
</code></pre>
<p>I'm aware of the python comparison chaining such as <code>a &lt; b &lt; c</code>, but I can't see anything in the docs about this being legal.</p>
<p>Is this an accidental feature in the implementation of CPython, or is this behaviour specified?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is fully specified behaviour, not an accidental feature. Operator chaining is defined in the <a href="https://docs.python.org/2/reference/expressions.html#not-in" rel="noreferrer"><em>Comparison operators</em> section</a>:</p>
<blockquote>
<p>Comparisons can be chained arbitrarily, e.g., <code>x &lt; y &lt;= z</code> is equivalent to <code>x &lt; y and y &lt;= z</code>, except that <code>y</code> is evaluated only once (but in both cases <code>z</code> is not evaluated at all when <code>x &lt; y</code> is found to be false).</p>
</blockquote>
<p><code>in</code> is one of the comparison operators; from the same section:</p>
<blockquote>
<pre><code>comp_operator ::=  "&lt;" | "&gt;" | "==" | "&gt;=" | "&lt;=" | "&lt;&gt;" | "!="
                   | "is" ["not"] | ["not"] "in"
</code></pre>
</blockquote>
<p>No exceptions are made for combinations that may not make much sense.</p>
<p>The specific expression you used as an example is thus executed as <code>'a' in 'ab' and 'ab' in 'abc'</code>, with the  <code>'ab'</code> literal only being executed (loaded) once.</p>
</div>
<span class="comment-copy">I was looking at the <a href="https://docs.python.org/3/library/stdtypes.html#comparisons" rel="nofollow noreferrer">comparisons</a> section on a different page, which does not list <code>in</code></span>
<span class="comment-copy">@Eric see the bottom of that section: <i>Two more operations with the same syntactic priority, <code>in</code> and <code>not in</code>, are supported only by sequence types (below).</i> Because of that limitation they are not listed in the table.</span>
