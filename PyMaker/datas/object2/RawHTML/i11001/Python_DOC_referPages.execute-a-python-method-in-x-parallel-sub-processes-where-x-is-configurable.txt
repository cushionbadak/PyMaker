<div class="post-text" itemprop="text">
<p>I'm not a python expert,
and I'm trying to implement the functionality in subject.</p>
<p>I know how to use a functionality which executes methods in parallel.
E.g.</p>
<pre><code>def main():
    run_in_parallel(A,B)

def A():
    while True:
        print("A")

def B():
    while True:
        print("B")

def run_in_parallel(*fns):
    proc = []
    for fn in fns:
        p = Process(target=fn)
        p.start()
        proc.append(p)
    for p in proc:
        p.join()

if __name__ == '__main__':
    main()
</code></pre>
<p>but I can't figure out how can I execute method A in 10 / 20 / 100 / ... parallel sub processes.</p>
<p>Assistance will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Do you mean you want to run function A 10/20/100... times in parallel subprocesses? If yes then you can create 20 subprocesses like this:</p>
<pre><code>def main():
    run_in_parallel(A, 20)

def A():
    while True:
        print("A")

def run_in_parallel(fn, proc_count):
    proc = []
    for _ in range(proc_count):
        p = Process(target=fn)
        p.start()
        proc.append(p)
    for p in proc:
        p.join()

if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you question correctly, what you are looking for is a threadpool/processpool, where you can define the number of workers, and then just apply functions asynchronously with them. Python has that <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool" rel="nofollow">built in</a>. Instead of opening a new process you can just use <code>pool.apply_async</code>.</p>
<p>For example:</p>
<pre><code>def run_in_parallel(fn, times=10):
    pool = multiprocessing.Pool(times)
    [pool.apply_async(fn) for _ in range(times)]
</code></pre>
</div>
<span class="comment-copy">Do you need to return something from the parallel functions?</span>
<span class="comment-copy">@Will no need for return value</span>
<span class="comment-copy">this makes sense, however when I try to execute it in more then one subprocess, I'm getting an error. can you have a look?</span>
<span class="comment-copy">perfect! thank you!</span>
<span class="comment-copy">Welcome buddy!!!!!</span>
<span class="comment-copy">can you provide an example? pseudo for what i need is something like: num_of_subprocesses = 10 execute_method_in_parallel(num_of_subprocesses)  This should invoke method A in 10 parallel sub processes.</span>
