<div class="post-text" itemprop="text">
<p>I have the following python code:</p>
<pre><code>value = 1.9

if value:
    #do something
else:
    #do something else
</code></pre>
<p>What happens here? I can't understand this because <code>value</code> is not Boolean.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a concept of truthy-ness where non-Boolean values are basically "coerced" into Boolean ones, as shown <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">here</a>:</p>
<blockquote>
<p><strong>4.1 Truth value testing</strong></p>
<p>Any object can be tested for truth value, for use in an <code>if</code> or <code>while</code> condition or as operand of the Boolean operations below. The following values are considered false:</p>
<ul>
<li><code>None</code></li>
<li><code>False</code></li>
<li>zero of any numeric type, for example, <code>0</code>, <code>0.0</code>, <code>0j</code>.</li>
<li>any empty sequence, for example, <code>''</code>, <code>()</code>, <code>[]</code>.</li>
<li>any empty mapping, for example, <code>{}</code>.</li>
<li>instances of user-defined classes, if the class defines a <code>__bool__()</code> or <code>__len__()</code> method, when that method returns the integer zero or bool value <code>False</code>.</li>
</ul>
<p>All other values are considered true - so objects of many types are always true.</p>
<p>Operations and built-in functions that have a Boolean result always return <code>0</code> or <code>False</code> for false and <code>1</code> or <code>True</code> for true, unless otherwise stated. (Important exception: the Boolean operations <code>or</code> and <code>and</code> always return one of their operands.)</p>
</blockquote>
<p>Bottom line is that <code>1.9</code> comes under the "All other values are considered true" clause since it matches none of the values that would be considered false. The closest it comes is the third one (numeric type) but, since it's non-zero, it doesn't <em>quite</em> get there.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Any object can be tested for truth value, for use in an if or while
  condition or as operand of the Boolean operations below. The following
  values are considered false:</p>
<ul>
<li>None</li>
<li>False</li>
<li>zero of any numeric type, for example, 0, 0L, 0.0, 0j.</li>
<li>any empty sequence, for example, '', (), [].</li>
<li>any empty mapping, for example, {}.</li>
<li>instances of user-defined classes, if the class defines a
  <strong>nonzero</strong>() or <strong>len</strong>() method, when that method returns the integer zero or bool value False</li>
</ul>
</blockquote>
<p><a href="https://docs.python.org/2.4/lib/truth.html" rel="nofollow">https://docs.python.org/2.4/lib/truth.html</a></p>
<p>So since value isn't one of those things, it takes the if, not the else!</p>
</div>
<div class="post-text" itemprop="text">
<p>Check this <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow">documentation materials</a>. In python as in many programming language. <code>0, '', []</code> kind of values gives <code>False</code> while any other value returns <code>True</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is going to be False only if value is equal 0 or ""</p>
</div>
<span class="comment-copy">You can test how python evaluate boolean using bool(). For example bool(1) = True. bool(0)= False. bool("any string ") =True. bool("") = False. bool(2.2) =true. No-zero numbers are always True. Non-empty strings are always true. Non-empty lists are true, etc</span>
<span class="comment-copy">old docs ... Still good in this case ...</span>
<span class="comment-copy">Many? Name seven :-)</span>
<span class="comment-copy">Well <code>python</code>, <code>C</code>, <code>C++</code>, <code>Perl</code>, <code>Lua</code>, <code>Ruby</code>, <code>JavaScript</code> for example.</span>
<span class="comment-copy">@sehrob As I know in C/C++ an empty string literal <code>""</code> means true since it's not the null pointer, and in Javascript an empty list literal <code>[]</code> means true, too. But those things are considered as <code>False</code> in Python.</span>
<span class="comment-copy">You are right @neuront, I just wanted to say that a value doesn't need to be a Boolean type to be evaluated as that :)</span>
<span class="comment-copy">Touche, I stand corrected :-)</span>
<span class="comment-copy">There is a large number of other cases that will give false...</span>
