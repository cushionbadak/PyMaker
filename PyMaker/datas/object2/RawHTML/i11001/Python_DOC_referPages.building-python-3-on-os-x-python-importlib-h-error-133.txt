<div class="post-text" itemprop="text">
<p>I am trying to build Python (3.5.2) on OS X El Capitan (10.11.5). However, I run into an error when I try to <code>make</code> it. The error seems to be related to <code>_freeze_importlib</code>.</p>
<pre><code>/usr/local/src/Python-3.5.2 $ make
if test "no" != "yes"; then \
        ./Programs/_freeze_importlib \
            ./Lib/importlib/_bootstrap.py Python/importlib.h; \
    fi
dyld: lazy symbol binding failed: Symbol not found: _getentropy
  Referenced from: /usr/local/src/Python-3.5.2/./Programs/_freeze_importlib
  Expected in: /usr/lib/libSystem.B.dylib

dyld: Symbol not found: _getentropy
  Referenced from: /usr/local/src/Python-3.5.2/./Programs/_freeze_importlib
  Expected in: /usr/lib/libSystem.B.dylib

/bin/sh: line 1: 56666 Trace/BPT trap: 5       ./Programs/_freeze_importlib ./Lib/importlib/_bootstrap.py Python/importlib.h
make: *** [Python/importlib.h] Error 133
/usr/local/src/Python-3.5.2 $ 
</code></pre>
<p>You can see my steps <a href="https://github.com/lukejanicke/setups/blob/master/Python.md">on GitHub</a>.</p>
<p>The full Terminal output up to the <code>make</code> fail is in a <a href="https://gist.github.com/lukejanicke/dec964bd55633bbc5eed144300a94658">Gist</a>.</p>
<hr/>
<p><em>I fully acknowledge that this is an academic exercise, as El Capitan comes with Python 2.7.10 and you can easily install Python 3.5.2 with the official OS X installer package or via Homebrew.</em></p>
<p>The documentation for <a href="https://docs.python.org/3/using/unix.html">Using Python on Unix platforms</a> provides build instructions. The documentation for <a href="https://docs.python.org/3/using/mac.html">Using Python on a Macintosh</a> specifically says to use the the OS X installer package.</p>
<p>However, it should be possible to build on Mac.</p>
<blockquote>
<p>Python on a Macintosh running Mac OS X is in principle very similar to Python on any other Unix platform, but there are a number of additional features such as the IDE and the Package Manager that are worth pointing out.</p>
</blockquote>
<p>At this point, I'm not worried about those additional features. Just curious about why I am getting a <code>make</code> error.</p>
</div>
<div class="post-text" itemprop="text">
<p>Fixed.</p>
<p>In the output of <code>./configure</code>, I noticed a reference to <code>/Applications/Xcode-beta.app/Contents/Developer/</code>. I installed Xcode 8 (beta) a few days ago. After switching back to the regular Command Line Tools (with Xcode 7.3.1)</p>
<pre><code>sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
</code></pre>
<p><code>make</code> succeeded. Not perfectly.</p>
<pre><code>Python build finished successfully!
The necessary bits to build these optional modules were not found:
_dbm                  _gdbm                 _sqlite3           
_ssl                  nis                   ossaudiodev        
spwd                  zlib                                     
To find the necessary bits, look in setup.py in detect_modules() for the module's name.

Failed to build these modules:
_lzma                 _tkinter 
</code></pre>
<p>I hope I don't need those modules.</p>
<p>I've put the full output of <code>./configure</code> and <code>make</code> in this <a href="https://gist.github.com/lukejanicke/5615c254c4c12bbde008439765f64f03" rel="noreferrer">Gist</a>. I didn't include the output for <code>make install</code> as it was too long and seemed to only repeat the warnings and errors of <code>make</code>.</p>
<p><strong>Notes</strong> </p>
<ul>
<li>I didn't use <code>--enable-framework</code> or <code>--enable-universalsdk</code>.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I think a better solution is <code>xcode-select --install</code>.</p>
<p>If you update Xcode to 8(beta), you have to run <code>xcode-select --install</code> again to install all the build tools with it.</p>
<p>I ran into the same issue as yours and I can successfully install python through brew with Xcode8 after running <code>xcode-select --install</code>.</p>
<p>I hope it would help others with the same issue here.</p>
</div>
<span class="comment-copy">a bit unrelated considering you want to build it on your own, but does <code>brew install python3</code> help you?</span>
<span class="comment-copy">Yes, I went with Homebrew but I remain curious about building it.</span>
<span class="comment-copy">Does adding <code>--enable-universalsdk</code> to <code>configure</code> resolve the issue?</span>
<span class="comment-copy">Tried with <code>--enable-universalsdk</code> but the same error pops out.</span>
<span class="comment-copy">I wonder if it matters that <code>./configure</code> chose to configure with Xcode-beta, which I just installed a few days ago.</span>
<span class="comment-copy">I got a similar error, perhaps for a different reason--though with Xcode 8 (on macOS Sierra 10.12.6). What worked in my case was to place default paths (<code>/usr/...</code>) before MacPorts (regarding <code>gcc</code>), and cleaning with <code>make distclean</code> inside the <a href="https://github.com/python/cpython" rel="nofollow noreferrer">CPython repository</a>.</span>
<span class="comment-copy">Related: <a href="https://stackoverflow.com/a/36790088/1959808">stackoverflow.com/a/36790088/1959808</a></span>
<span class="comment-copy">Thanks. I was getting Symbol not found: _getentropy and this helped me resolve the issue and continue with installing python3 (brew install --upgrade python3).</span>
