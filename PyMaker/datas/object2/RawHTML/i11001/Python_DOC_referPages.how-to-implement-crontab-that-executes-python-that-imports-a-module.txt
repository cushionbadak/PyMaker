<div class="post-text" itemprop="text">
<p>So I have a Python file that runs just fine from the terminal/command-line. The Python file uses a module that was imported using pip. I've set up my crontab file like so to run at 1:15pm every weekday:</p>
<p><code>15 13 * * 1-5 python ~/Personal/Code/Python/HelloWorld.py</code></p>
<p>My problem is two-fold. First, the output of the python file is sent to <code>/var/mail/</code> rather than being output to the terminal screen as when run normally from the command-line. How do I have the output print directly in the terminal rather than being appended to a file? Second, within the <code>/var/mail/</code> file, the output of the script is an <code>ImportError</code> saying there is no module with the name of the one that I am importing. This does not happen when running the script directly from the command-line, in that case the script works fine without errors. How can I get around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Not to be mean, but your problem is one-fold: you don't understand <a href="https://en.wikipedia.org/wiki/Cron" rel="nofollow">Cron</a>.</p>
<p>Cron is a scheduling tool. It's to tell your computer "Hey, take care of this every so often, okay?" It's an automated process <em>that does not interact with you</em> after it's been set up. It's most often used by systems administrators to take care of tasks like moving logs or copying disks â€” things that the administrator doesn't want to see. Cron jobs <em>should</em> output to a log file somewhere instead of to the console. (And when Cron <em>does</em> receive output to <code>stdout</code>, it saves the output and mails it to you via the system-specified mail agent. This involves storing the data at <code>/var/mail/</code> as you discovered.)</p>
<p>This means that you can't get output from a job run by Cron to your terminal (without some manipulation of tty devices, which I'm going to say is not the route you want to take). I'm not sure under what circumstance you could want an automated job to repeat every day at 1:15pm and yet also redirect its output to your terminal. What if you close your terminal? Where does the job send its output? You need to implement logging. Check out Python's <a href="https://docs.python.org/3/library/logging.html" rel="nofollow">logging</a> module.</p>
<p>As for the <code>ImportError</code>: Cron does not run in your shell. It doesn't use your environment variables or <code>$PATH</code>. So what does this mean? Well your job starts with <code>python</code>. Which <code>python</code>? <code>/usr/bin/python</code>? <code>/usr/local/bin/python</code>? <code>/usr/local/bin/python3</code>? Which binary is being used depends on your OS and setup, but in any case it's probably safe to say that while <em>your</em> Python has the module, the <em>default</em> Python executable does not. To get around this, you should use an <em>absolute path</em>, e.g. replace <code>python</code> with <code>/usr/bin/python</code> or whatever. To find out what Python you use, do <code>which python</code> on the command line and the output will tell you.</p>
</div>
