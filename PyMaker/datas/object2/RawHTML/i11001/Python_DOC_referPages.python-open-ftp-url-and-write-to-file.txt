<div class="post-text" itemprop="text">
<p>How can I open and FTP url and download it into a file. What I'm trying looks something like this:</p>
<pre><code>from contextlib import closing
from urllib.request import urlopen

url = 'ftp://whatever.com/file.txt'
target_path = 'file.txt'

with closing(urlopen(url)) as source:
    with open(target_path, 'wb') as target:
        target.write(source)
</code></pre>
<p>However, this fails with the following error:</p>
<pre><code>TypeError: 'addinfourl' does not support the buffer interface
</code></pre>
<p>Is there any simple way to make this work? Especially if I want to extend it, so that the file is extracted while it is downloaded?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>write</code> requires object with buffer interface in particular <code>bytes</code>, but the <code>source</code> is actually <code>BufferedReader</code> (or <code>HTTPResonse</code> if http). To get bytes you need to call <a href="https://docs.python.org/3/library/io.html#io.BufferedReader.read" rel="nofollow"><code>BufferedReader.read()</code></a></p>
<pre><code>from contextlib import closing
from urllib.request import urlopen

url = 'ftp://whatever.com/file.txt'
target_path = 'file.txt'

with closing(urlopen(url)) as source:
    with open(target_path, 'wb') as target:
        target.write(source.read())
</code></pre>
</div>
<span class="comment-copy">What is <code>closing</code>? Presumably you want it to equate to the content of the FTP URL?</span>
<span class="comment-copy">Apologies, I posted a louse code snippet. I've added import statements.</span>
<span class="comment-copy">That works, but as far as I understand it downloads the entire file into memory, and then writes it to disk, right? That is problematic for large files.</span>
<span class="comment-copy"><code>read()</code> accepts <code>size</code> that you can use with loop</span>
<span class="comment-copy">Yes, I can use that, but I was wondering if there is way to do this without writing manual loops.</span>
