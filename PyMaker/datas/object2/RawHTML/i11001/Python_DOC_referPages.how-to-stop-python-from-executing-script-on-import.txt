<div class="post-text" itemprop="text">
<p>I have a Tkinter-based GUI with a series of buttons. I want one of these buttons to execute a command from another script - <code>testExecute.py</code> -  when pressed (code for both scripts included below). </p>
<p>Right now, when I start the GUI, the external script function appears to be executing on <code>import</code> rather than when I press the button (pressing the button doesn't appear to execute the function either). I did some research and included the <code>if __name__ == "__main__":</code> bit in <code>testExecute.py</code>, but it still executes on import in my main script. Any thoughts? </p>
<p>EXTRA QUESTION IN RESPONSE TO ANSWERS BELOW: What do I do if I want to pass an argument to the function? Because if I include the argument, the function again executes on import.  But if I don't include the argument, I get an error when I press the button.</p>
<p>Main Script: </p>
<pre><code>from tkinter import *
from tkinter.ttk import *
import testExecute as testEx

class mainGUI(Frame):

    def __init__(self, parent):
        Frame.__init__(self, parent)

        self.parent = parent

        self.initUI()


    def initUI(self):

        self.parent.title("GUIV0.1")
        self.pack(fill=BOTH, expand=True)

        self.columnconfigure(1, weight = 1)
        self.columnconfigure(3, pad = 7)
        self.rowconfigure(3, weight = 1)
        self.rowconfigure(5, pad = 7)

        lbl = Label(self, text = "Windows")
        lbl.grid(sticky = W, pady=4, padx=5)

        area = Text(self)
        area.grid(row=1, column=0, columnspan=2, rowspan=4, padx=5, sticky=E+W+S+N)

        abtn = Button(self, text="Activate", command = testEx.testFunc())
        abtn.grid(row=1, column=3)

        cbtn = Button(self, text="Close")
        cbtn.grid(row=2, column=3, pady=4)

        hbtn = Button(self, text="Help")
        hbtn.grid(row=5, column=0, padx=5)

        obtn = Button(self, text="OK")
        obtn.grid(row=5, column=3)


def main():

    root = Tk()
    app = mainGUI(root)
    root.mainloop()

if __name__ == '__main__':
    main() 
</code></pre>
<p>testExecute.py:</p>
<pre><code>def testFunc():
    print("Test test test")
    print("I do nothing, if you see this text, I am hiding in your code!")

if __name__ == "__main__":
    testFunc()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you create the button you are executing the function directly. Instead you should bind to the function itself. So</p>
<pre><code>   abtn = Button(self, text="Activate", command = testEx.testFunc())
</code></pre>
<p>should be</p>
<pre><code>   abtn = Button(self, text="Activate", command = testEx.testFunc)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check out <a href="http://effbot.org/tkinterbook/button.htm" rel="nofollow">http://effbot.org/tkinterbook/button.htm</a>. </p>
<p>The problem is that you are <em>calling</em> the command callback during initialization. Change, </p>
<pre><code>abtn = Button(self, text="Activate", command = testEx.testFunc())
</code></pre>
<p>to </p>
<pre><code>abtn = Button(self, text="Activate", command = testEx.testFunc)
</code></pre>
<p>and you should be all good. (Note the lack of parenthesis following testFunc). </p>
</div>
<span class="comment-copy">No need to edit the question to add the solution DeeWBee, just accept one of the answers :-)</span>
<span class="comment-copy">Solved the problem thanks! Is there somewhere I could go to better educate myself about the nuances of python functions (specifically the parenthesis vs. no parenthesis)?</span>
<span class="comment-copy">I don't think there is some special secret to it. If you execute <code>function()</code> the function is executed immediately. If you just want to pass it around you can just pass it around as any other object/variable, e.g. <code>a = function</code> then you could call the same function via <code>a()</code>.</span>
<span class="comment-copy">@DeeWBee the best you can find is <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">in the docs</a>. Read them, they are nicely written and will help you immensely.</span>
<span class="comment-copy">@syntonym what do I do then if I want to pass an argument to the function? Because if I include the argument, the function again executes on import.  But if I don't include the argument, I get an error when I press the button</span>
<span class="comment-copy">Any thoughts on the posted bonus question?</span>
<span class="comment-copy">@DeeWBee, In order to do that, you'd need to wrap it in a lambda function like so: <code>command=lambda: testEx.testFunc(5)</code> should do the trick.</span>
