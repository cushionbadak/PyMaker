<div class="post-text" itemprop="text">
<p>I have a data acquisition program written in Python that I distribute to my collaboration as an executable (using <a href="http://cx-freeze.sourceforge.net/" rel="nofollow">cx_freeze</a>), as I don't want to bother them with installing Python and installing all the software dependencies. The program has been working well for a year now. Recently, the program started to crash (crash, not give a scripting error, i.e., the Python virtual machine itself is crashing). So I would like to know what library is causing this problem. This problem is happening randomly, so it's difficult to systematically pinpoint the cause.</p>
<p>I learned about <a href="https://docs.python.org/3/library/faulthandler.html" rel="nofollow">faulthandler</a>, and I would like to use it with my cx_freeze, because I can't be sure the problem is happening due to cx_freeze itself or due to some other library. </p>
<p><strong>The question:</strong> How can I produce a cx_freeze executable that will use <code>faulthandler</code>?</p>
<p><strong>What I tried:</strong></p>
<p>My current cx_freeze setup script is the following:</p>
<pre><code>import sys
from cx_Freeze import setup, Executable
from GUI.Meta import *

target = Executable("Main.py",
                    #base = "Win32GUI",
                    icon = "GUI\\icon.ico",
                    compress=True,
                    targetName="Prog.exe")

setup(
    name = "My Software",
    version = SOFTWARE_VERSION,
    description = "",
    executables = [target])
</code></pre>
<p>I tried replacing my Executable part <code>Main.py</code> by <code>Main.py -q -X faulthandler</code>, but that didn't work. Importing <code>faulthandler</code> in my cx_freeze setup file with <code>import faulthandler</code> or <code>from faulthandler import *</code> didn't help.</p>
<p>Please advise.</p>
<p><strong>Additional info</strong>: Dependencies that I'm using (in case you may know a possible cause of the problem): PySide, Sympy, Numpy, H5py, PySerial, Matplotlib</p>
</div>
<div class="post-text" itemprop="text">
<p>I learned that I could use <code>procdump</code>. It can be downloaded from <a href="https://technet.microsoft.com/en-us/sysinternals/dd996900.aspx?f=255&amp;MSPPError=-2147217396" rel="nofollow">here</a>. It's a very simple program that can log stack trace. You can use it with:</p>
<pre><code>C:\&gt;procdump -ma -i c:\Dumps
</code></pre>
<p>and this will dump the stack trace of any program that crashes to that folder.</p>
</div>
<span class="comment-copy">base = None; if sys.platform == "win32":;     base = "Win32GUI"; from : <a href="http://cx-freeze.readthedocs.io/en/latest/distutils.html#distutils-setup-script" rel="nofollow noreferrer">cx-freeze.readthedocs.io/en/latest/â€¦</a> , if cmd under windows: base="console" (french name)</span>
<span class="comment-copy">@Destrif I'm sorry, how will faulthandler come here into play?</span>
<span class="comment-copy">@Destrif Not necessarily an import problem. Actually imports seem wrong, because <code>faulthandler</code> usually is called on Python command line using <code>Python Main.py -q -X faulthandler</code>. Without <code>faulthandler</code>, there's no problem whatsoever. So my question is about how to get the stacktrace of my program while using cx_freeze.</span>
<span class="comment-copy">Ok so perfect: python version/Os</span>
<span class="comment-copy">@Destrif Python 3.4 32-bit on Windows 10. I use Anaconda with Python 3.4 environment.</span>
