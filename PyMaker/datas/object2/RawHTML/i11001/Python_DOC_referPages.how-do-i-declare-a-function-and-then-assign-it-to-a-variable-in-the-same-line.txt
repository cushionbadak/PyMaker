<div class="post-text" itemprop="text">
<p>I have a <code>Button</code> class that has a variable, <code>when_pressed</code>, that is meant to be a function. For the sake of the question, let's assume that it will always be a function and not something like an <code>int</code>. When your instance of the <code>Button</code> class is pressed, the function contained in <code>when_pressed</code> gets called. So you could do this:</p>
<pre><code>def pressed():
    print("Pressed")
button = new Button()
button.when_pressed = pressed
</code></pre>
<p>This will print <code>Pressed</code> when the button is pressed. Makes sense.</p>
<p>But I won't be needing that function anywhere else. I am dealing with a low-memory environment, so it would be easier to do something like this:</p>
<pre><code>button = new Button()
button.when_pressed = function():
    print("Pressed")
</code></pre>
<p>You could do this in Javascript, so I think it's possible in Python too. But I can't find anything on it. How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="http://www.diveintopython.net/power_of_introspection/lambda_functions.html" rel="nofollow"><code>lambda</code></a> function:</p>
<pre><code>button.when_pressed = lambda: print('pressed')
</code></pre>
<p>Here's a good chance for you to learn about them in case you haven't: <a href="http://www.diveintopython.net/power_of_introspection/lambda_functions.html" rel="nofollow">lambda functions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use a lambda:</p>
<pre><code>something = lambda: print("Hello")
</code></pre>
</div>
<span class="comment-copy">Python has something called <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">lambda expressions</a>, but they are not really equivalent to Javascript's anonymous function. In Python they can only contain a single expression, i.e variable assignment etc are not possible.</span>
<span class="comment-copy">How would I do this if I need multiple lines?</span>
<span class="comment-copy">To print multiple lines?</span>
<span class="comment-copy">No, when I need to execute multiple statements.</span>
<span class="comment-copy">Well then, you should write a regular function</span>
