<div class="post-text" itemprop="text">
<p>I want to make an anonymous web request using python 3 with help of Tor, and I'm following this tutorial: <a href="https://computerscienceandfangs.blogspot.com/2018/04/setting-up-tor-for-windows-10-python-3.html" rel="nofollow noreferrer">https://computerscienceandfangs.blogspot.com/2018/04/setting-up-tor-for-windows-10-python-3.html</a>.</p>
<p>So far I'm just testing the first part of the tutorial code (below):</p>
<pre><code>import requests

def get_tor_session():
    session = requests.session()
    # Tor uses the 9050 port as the default socks port
    session.proxies = {'http':  'socks5://127.0.0.1:9050',
                       'https': 'socks5://127.0.0.1:9050'}
    return session

# Make a request through the Tor connection
# IP visible through Tor
session = get_tor_session()
print(session.get("http://httpbin.org/ip").text)
# Above should print an IP different than your public IP

# Following prints your normal public IP
print(requests.get("http://httpbin.org/ip").text)
</code></pre>
<p>So when I execute the code: <code>print(session.get("http://httpbin.org/ip").text)</code>, it should show me a different IP address to mine. However instead I get the error: </p>
<pre><code> File "C:\Program Files\Anaconda3\lib\site-packages\requests\adapters.py", line 43, in SOCKSProxyManager
    try:

InvalidSchema: Missing dependencies for SOCKS support.
</code></pre>
<p>I've installed the packages below as per the tutorial:</p>
<p>1)pip install requests -- upgrade</p>
<p>2)pip install requests[socks]</p>
<p>3)pip install stem</p>
<p>I'm using Windows 7 (64-bit). Spyder for Python IDE. Python version 3.5.</p>
<p>Second question, which is more general. I'm looking to make requests on a bigger scale as part of a project for a web-scraper. Is the approach above, using the tutorial I referenced, still a good approach (i.e. coding things manually using Python), to ensure you don't get banned/black-listed? Or Are there services out there more advanced that can do Anonymous IP request, IP rotating and request throttling all for you, without you having to code your own software and configure manually, and with unlimited number of requests? </p>
<p>Many thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you running a tor service from the cli?</p>
<p>Your proxy should look like this:</p>
<pre><code>session.proxies = {'http':  'socks5h://127.0.0.1:9050',
                   'https': 'socks5h://127.0.0.1:9050'}
</code></pre>
<p>Also, requests is not designed for making mass amounts of requests in the way you describe.  I would recommend using the following setup, which uses <code>aiohttp</code>, <code>aiohttp_socks</code>, and <code>asyncio</code>.</p>
<pre><code>import asyncio, aiohttp
from aiohttp_socks import SocksConnector

async def get_one(url, callback):
    connector = SocksConnector.from_url('socks5://localhost:9050', rdns=True)
    # rdns=True is important!
    # 1) Can't connect to hidden services without it
    # 2) You will make DNS lookup requests using your real IP, and not your Tor IP!
    async with aiohttp.ClientSession(connector=connector) as session:
        print(f'Starting {url}')
        async with session.get(url) as res:
            return await callback(res)

def get_all(urls, callback):
    future = []
    for url in urls:
        task = asyncio.ensure_future(get_one(url, callback))
        future.append(task)

    return future

def test_callback(res):
    print(res.status)

if __name__ == '__main__':
    urls = [
        'https://python.org', 
        'https://google.com',
        #...
    ]

    loop = asyncio.get_event_loop()
    future = get_all(urls, test_callback)
    loop.run_until_complete(asyncio.wait(future))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To resolve the error: <code>InvalidSchema: Missing dependencies for SOCKS support</code> I had restart Tor service in Windows OS, by running the following in command line: </p>
<p><code>tor --service remove</code></p>
<p>then</p>
<p><code>tor --service install -options ControlPort 9051</code></p>
</div>
<span class="comment-copy">I've made the code changes as per your suggestion. As for the <code>tor</code> service, sorry I'm a newby to this. I've double clicked on tor.exe, but nothing happened. How do I know if 'tor' service is running, on Windows 7?</span>
<span class="comment-copy">I'm not familiar with what it looks like on windows, but on mac I installed it with <code>brew install tor</code>, and start a tor instance by calling <code>tor</code> in the cli.</span>
<span class="comment-copy">Also, I checked the <a href="https://www.torproject.org/docs/tor-doc-osx.html.en" rel="nofollow noreferrer">tor</a> website and they don't have a tutorial for installing it on windows (in the "expert guides" section).  I assume it is possible since the guide you referenced uses it, but I'm not sure.</span>
<span class="comment-copy">Added another update.  You should probably get your requests version working before you mess with asyncio (its a bit confusing at first).  Hope that helps!</span>
<span class="comment-copy">Sorry ignore my previous comment (which I deleted), I thought you meant you made update in the comment section, not the solution section, so I didn't see your update until now. Thank you for this. I have one question on the code update - does this utilise Tor? The whole point is I'm trying to make my requests from anonymous IPs so that websites do not block my IP address when I'm using a web scraper.</span>
