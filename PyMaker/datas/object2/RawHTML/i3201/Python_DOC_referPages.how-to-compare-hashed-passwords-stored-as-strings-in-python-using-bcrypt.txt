<div class="post-text" itemprop="text">
<p>So I have a database where a bunch of hashed passwords are stored in strings. Now I am trying to then pull them down, and compare them to the plain text passwords the user enters. Here is an example:</p>
<pre><code>import bcrypt

# at creation first:
password = u"seCr3t"
hashed_password = bcrypt.hashpw(password.encode('utf8'), bcrypt.gensalt())
print(hashed_password)

#example of it being stored in the database
hashed_password = str(hashed_password)


# first attempt:
password = u"seCrEt"
print(bcrypt.checkpw(password.encode('utf8'), hashed_password.encode('utf8')))
# -&gt; False

# second attempt:
password = u"seCr3t"
print(bcrypt.checkpw(password.encode('utf8'), hashed_password.encode('utf8')))
# -&gt; True


# However I get the error "Invalid Salt"
</code></pre>
<p>I don't know how to get around this error and have not been able to find much about it online. Any help would be appreciated. Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're casting the password to string. Use decode and encode to ensure the password gets converted to string and back using the same format.</p>
<pre><code>import bcrypt

password = u"seCr3t"
hashed_password = bcrypt.hashpw(password.encode('utf8'), bcrypt.gensalt())

# convert to string with correct format
string_password = hashed_password.decode('utf8')

password = u"seCr3t"
# convert back to bytes with correct format
print(bcrypt.checkpw(password.encode('utf8'), string_password.encode('utf8')))
# True
</code></pre>
<p>I'm not an expert on encoding formats by any means, so this may not work in all cases. If you have a character in your bytes object that can't be represented using utf8, it could cause problems. I'd look into best practices for storing passwords. Maybe you could even use <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> which allows you to store python objects directly.</p>
</div>
<span class="comment-copy">That does not work you will run into this error:  <code>Traceback (most recent call last):   File "Passwordhashtest.py", line 14, in &lt;module&gt;     print(bcrypt.checkpw(password.encode('utf8'), hashed_password))   File "C:\Users\justi\AppData\Local\Programs\Python\Python36-32\lib\site-packages\bcrypt\__init__.py", line 101, in checkpw     raise TypeError("Unicode-objects must be encoded before checking") TypeError: Unicode-objects must be encoded before checking</code></span>
<span class="comment-copy">Working fine for me on bcrypt 3.1.4 and python 3.6.0. What version are you using? What OS?</span>
<span class="comment-copy">I just installed bcrypt so I would assume the most up to date version, and I am on Windows 10 python 3.6</span>
<span class="comment-copy">That backtrace you posted looks like the error is on line 14, and my example isn't that long. Did you copy and run the example exactly?</span>
<span class="comment-copy">I edited my code to match yours. Let me try that exact example</span>
