<div class="post-text" itemprop="text">
<pre><code>a = [1, 2, 3, 4]
</code></pre>
<p>Combinations are:</p>
<pre><code>[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]

[2, 3], [2, 4], [3, 4], [1, 3], [1, 4], [1, 2]

[1], [2], [3], [4]
</code></pre>
<p>Code:</p>
<pre><code>from itertools import combinations

a = [1, 2, 3, 4]

list1 = list()

b = combinations(a, len(a)-1)

for i in b:

    list1.append(list(i))

list2 = list()


while len(list1) != 0:

    temp = list1.pop()

    comb = combinations(temp, len(temp)-1)

    for i in comb:

        if list(i) not in list2:

            print(list(i))

            list2.append(list(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're correct about using <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><strong><code>itertools.combinations</code></strong></a>, but you need to loop through several possible lengths to produce your final output.  Finally, I used <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><strong><code>itertools.chain.from_iterable</code></strong></a> to flatten the resulting list:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain, combinations
&gt;&gt;&gt; list(chain.from_iterable(combinations(a, i) for i in range(1, len(a))))
[(1,),
 (2,),
 (3,),
 (4,),
 (1, 2),
 (1, 3),
 (1, 4),
 (2, 3),
 (2, 4),
 (3, 4),
 (1, 2, 3),
 (1, 2, 4),
 (1, 3, 4),
 (2, 3, 4)]
</code></pre>
<p>If you are dead set on the elements being lists, store the result, and use <strong><code>map</code></strong></p>
<pre><code>list(map(list, res))
</code></pre>
</div>
<span class="comment-copy"><a href="http://idownvotedbecau.se/unclearquestion" rel="nofollow noreferrer">idownvotedbecau.se/unclearquestion</a></span>
<span class="comment-copy">Hi, welcome to stack overflow. Please refer the <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> link for  more details on how to ask a question and update your question accordingly.</span>
