<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1059559/split-strings-into-words-with-multiple-word-boundary-delimiters">Split Strings into words with multiple word boundary delimiters</a>
<span class="question-originals-answer-count">
                    29 answers
                </span>
</li>
</ul>
</div>
<p>I want to split a string by remove everything expect alphabetical characters. </p>
<p>By default, <code>split</code> only splits by whitespace between words. But I want to split by everything expect alphabetical characters. How can I add multiple delimiter to <code>split</code>?</p>
<p>For example:</p>
<pre><code>word1 = input().lower().split() 
# if you input " has 15 science@and^engineering--departments, affiliated centers, Bandar Abbas&amp;&amp;and Mahshahr."
#the result will be ['has', '15', 'science@and^engineering--departments,', 'affiliated', 'centers,', 'bandar', 'abbas&amp;&amp;and', 'mahshahr.']
</code></pre>
<p>But I am looking for this kind of result:</p>
<pre><code>['has', '15', 'science', 'and', 'engineering', 'departments', 'affiliated', 'centers', 'bandar', 'abbas', 'and', 'mahshahr']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For performance, you should use regex as per the marked duplicate. See benchmarking below.</p>
<h3>groupby + str.isalnum</h3>
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> with <a href="https://docs.python.org/3/library/stdtypes.html#str.isalnum" rel="nofollow noreferrer"><code>str.isalnum</code></a> to group by characters which are alphanumeric.</p>
<p>With this solution you do not have to worry about splitting by explicitly specified characters.</p>
<pre><code>from itertools import groupby

x = " has 15 science@and^engineering--departments, affiliated centers, Bandar Abbas&amp;&amp;and Mahshahr."

res = [''.join(j) for i, j in groupby(x, key=str.isalnum) if i]

print(res)

['has', '15', 'science', 'and', 'engineering', 'departments',
 'affiliated', 'centers', 'Bandar', 'Abbas', 'and', 'Mahshahr']
</code></pre>
<h3>Benchmarking vs regex</h3>
<p>Some performance benchmarking versus regex solutions (tested on Python 3.6.5):</p>
<pre><code>from itertools import groupby
import re

x = " has 15 science@and^engineering--departments, affiliated centers, Bandar Abbas&amp;&amp;and Mahshahr."

z = x*10000
%timeit [''.join(j) for i, j in groupby(z, key=str.isalnum) if i]  # 184 ms
%timeit list(filter(None, re.sub(r'\W+', ',', z).split(',')))      # 82.1 ms
%timeit list(filter(None, re.split('\W+', z)))                     # 63.6 ms
%timeit [_ for _ in re.split(r'\W', z) if _]                       # 62.9 ms
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can replace all the non-alphanumeric characters with a single character (I'm using comma)</p>
<pre><code>s = 'has15science@and^engineering--departments,affiliatedcenters,bandarabbas&amp;&amp;andmahshahr.'

alphanumeric = re.sub(r'\W+', ',',s) 
</code></pre>
<p>and then split it on comma:</p>
<pre><code>splitted = alphanumeric.split(',')
</code></pre>
<p><strong>Edit:</strong></p>
<p>As suggested by, @DeepSpace, this can be done in a single statement:</p>
<pre><code>splitted = re.split('\W+', s)
</code></pre>
</div>
<span class="comment-copy">Also <a href="https://stackoverflow.com/questions/1059559/split-strings-with-multiple-delimiters" title="split strings with multiple delimiters">stackoverflow.com/questions/1059559/â€¦</a></span>
<span class="comment-copy">You could do <code>import re</code> and <code>words = re.findall(r"\w+", input().lower())</code>.</span>
<span class="comment-copy">@jonrsharpe, I think this is a different question. I believe OP is trying to split by all alphanumerical characters. Not split by selected characters only. There may be another dup but I couldn't find it.</span>
<span class="comment-copy">@jpp, if problem is to <i>split</i> on alphanumeric, wouldn't there be non-alphanumeric characters in the result? It seems that splitting on multiple delimiters  is a duplicate  regardless of which set of delimiters are used for the split - the only difference in a regex solution would be the pattern used.</span>
<span class="comment-copy">@wwii, See my answer, seems to solve the problem without being an answer to the proposed duplicate. Although everyone seems to prefer regex. Possibly the question needs more clarity, but then it's unclear / too broad rather than a dup.</span>
<span class="comment-copy">What if we also want to remove the numbers ?</span>
<span class="comment-copy">Possibly <code>str.isalpha</code>.</span>
<span class="comment-copy">Or simply use <code>re.split</code></span>
<span class="comment-copy">@DeepSpace, Thanks, updated my answer :)</span>
