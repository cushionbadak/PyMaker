<div class="post-text" itemprop="text">
<p>I am trying to set up a variables file for my Python project.
I have a function that works fine:</p>
<pre><code>def resize_window(self):
    size_object = QDesktopWidget().screenGeometry(-1)  # active screen
    screen_width = size_object.width()
    screen_height = size_object.height()
</code></pre>
<p>However, when I try to set it up in separate file to be called I get an error.</p>
<p>AttributeError: type object 'ScreenSize' has no attribute 'screen_width'</p>
<p>This is how my separate file looks:</p>
<pre><code>class ScreenSize(object):
def __init__(self, screen_width, screen_height):
    self.screen_width = screen_width
    self.screen_height = screen_height
    self.resize_window()

def resize_window(self):
    size_object = QDesktopWidget().screenGeometry(-1)  # active screen
    screen_width = size_object.width()
    screen_height = size_object.height()
</code></pre>
<p>The call:</p>
<pre><code>self.frame_top.setMinimumSize(QtCore.QSize(3/4* ScreenSize.screen_width, 1/10*ScreenSize.screen_height))
    self.frame_top.setMaximumSize(QtCore.QSize(3/4*ScreenSize.screen_width, 1/10*ScreenSize.screen_height))
</code></pre>
<p>The error is: AttributeError: type object 'ScreenSize' has no attribute 'screen_width'</p>
<p>If I setup class with just this:</p>
<pre><code>class ScreenSize(object):
screen_width = 500
screen_height = 300
</code></pre>
<p>It works. So my problem is calling the function from within the class. 
Thanks in advance for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you declare your class as</p>
<pre><code>class ScreenSize(object):
    screen_width = 500
    screen_height = 300
</code></pre>
<p>the variables belong to the class rather than an instance of the class. In this sense, having the function inside this class is synonymous with not wrapping the variables or the function in a class at all, as a script in Python is essentially just a class.</p>
<p>If you want to create instances of your settings class you need to use <code>self</code> in the function calls declared in your class too, and then create an instance of that class to retrieve the values from rather than the class itself:</p>
<pre><code>class ScreenSize(object):
    def __init__(self, screen_width, screen_height):
        self.screen_width = screen_width
        self.screen_height = screen_height
        self.resize_window()

    def resize_window(self):
        size_object = QDesktopWidget().screenGeometry(-1)  # active screen
        self.screen_width = size_object.width()
        self.screen_height = size_object.height()

screen_size = ScreenSize()
</code></pre>
<p>Check out <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Python Classes</a> for more info on how to implement classes.</p>
<p>Also, as noted by @gilch in the comments, these values don't need to be in a class if you only want one instance of them:</p>
<pre><code># settings.py
screen_width = 500
screen_height = 300

def resize_window(self):
    size_object = QDesktopWidget().screenGeometry(-1)  # active screen
    screen_width = size_object.width()
    screen_height = size_object.height()
</code></pre>
<p>Assuming <code>settings.py</code> is in the same directory as main:</p>
<pre><code>#  main.py
import settings

print(settings.screen_width)
settings.resize_window()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on suggestions I got it going by creating separate .py file with following in it</p>
<pre><code>def screen_width(self):
   size_object = PyQt5.QtWidgets.QDesktopWidget().screenGeometry(-1)  # active screen
   scr_width = size_object.width()
   return scr_width
</code></pre>
<p>Thanks for pointing me to the right directions.</p>
</div>
<span class="comment-copy">The indentation doesn't look right and it's confusing.</span>
<span class="comment-copy">A class is not the same as an instance of that class. You set the attributes on the instance <code>self</code>, so of course the class <code>ScreenSize</code> doesn't have them. That's what you're doing wrong, but there's not enough information in the question to tell you how to do it right. You don't actually have to put things in classes just to separate files though.</span>
<span class="comment-copy">Try to use <code>self.screen_width</code>. Use <code>self.</code> for all the variables of your <code>class</code>.</span>
<span class="comment-copy">I appreciate your suggestions. I really like the approach with settings.py. It accomplishes exactly what I am after. However, when I ran it returns 500 for screen_width (the initial settings), but I am expecting the actual screen width that is retrieved from size_object around 1000. What am I missing?</span>
<span class="comment-copy">Hi, if you're happy with this answer, could you mark it as such to close this question. Thanks!</span>
