<div class="post-text" itemprop="text">
<p>Let's say I have a list of <code>[100, 210, 250, 300, 405, 430, 500, 1850, 1875, 2120, 2150]</code>
I want to remove any numbers that start with the same digit and have the same length.
The result should be:  <code>[100, 210, 300, 405, 500, 1850, 2120]</code></p>
<p>What I have so far is:</p>
<pre><code>for i in installed_tx_calc:
    if (len(str(i)) == 3) and (str(i)[:1] == str(i-1)[:1]):
        installed_tx_calc.remove(i)
    elif str(i)[:2] == str(i-1)[:2]:
        installed_tx_calc.remove(i)
</code></pre>
<p>I have a list of <code>[862, 1930, 2496]</code> and my code outputs <code>[1930]</code>.</p>
<p>I couldn't find anything when searching, but I feel like I'm missing something obvious.</p>
<p>Thank you for your time.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create the new list with a list comprehension, using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="noreferrer">itertools.groupby</a>:</p>
<pre><code>from itertools import groupby

numbers =  [100, 210, 250, 300, 405, 430, 500, 1850, 1875, 2120, 2150]

out = [next(group) for key, group in groupby(numbers, key=lambda n: (str(n)[0], len(str(n))))]

print(out)
# [100, 210, 300, 405, 500, 1850, 2120]
</code></pre>
<p>We group using the tuple (first digit, length of number), and keep the first number of each group, which we get with <code>next(group)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a new set that will keep unique entries. Then, you may filter according to that set:</p>
<pre><code>unique = set()
mylist = [100, 210, 250, 300, 405, 430, 500, 1850, 1875, 2120, 2150]
newlist = []

for num in mylist:
    num_str = str(num)
    length = len(num_str)
    first_digit = num_str[0]
    if (length, first_digit) in unique:
        continue
    newlist.append(num)
    unique.add((length, first_digit))

&gt;&gt;&gt; newlist
[100, 210, 300, 405, 500, 1850, 2120]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At the moment, you are using the variable <code>i</code> as a string in <code>installed_tx_calc</code>.  However, you can't subtract from a string. What you really want is to use <code>i</code> as an index and access in this way: <code>installed_tx_calc[i]</code>.  However, using the index can be tricky if you are removing items from the list, so I've replaced the for loop with a while loop.  Also, I would recommend that you access the first digit directly, instead of getting a slice.  Therefore, your code will look more like this:</p>
<pre><code>i = 1
while i &lt; len(installed_tx_calc):
    if len(str(installed_tx_calc[i]) == 3 and str(installed_tx_calc[i])[0] == str(installed_tx_calc[i-1])[0]:
        installed_tx_calc.remove(i)
        continue
    elif str(installed_tx_calc[i])[0] == str(installed_tx_calc[i-1])[0]:
        installed_tx_calc.remove(i)
        continue
    i += 1
</code></pre>
<p>Keep in mind that this will break if you have more numbers of length not equal to 3 or 4.  A more extensible solution would be:</p>
<pre><code>i = 1
while i &lt; len(installed_tx_calc):
    if len(str(installed_tx_calc[i])) == len(str(installed_tx_calc[i-1])) and str(installed_tx_calc[i])[0] == str(installed_tx_calc[i-1])[0]:
        installed_tx_calc.remove(i)
        continue
    i += 1
</code></pre>
<p>A final optimization would be to avoid using <code>remove</code> in favor of building a new list.  <code>remove</code> can be a fairly slow operation compared to <code>append</code> so the following will be faster than the previous two solutions:</p>
<pre><code>new_itc = []
for i in range(1, len(installed_tx_calc):
    if not (len(str(installed_tx_calc[i])) == len(str(installed_tx_calc[i-1])) and str(installed_tx_calc[i])[0] == str(installed_tx_calc[i-1])[0]):
        new_itc.append(installed_tx_calc[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First sort the list from low value to high values. Check on the highest base of the number (so for 350, this is 100) and if a multiple of this base (i.e. 3) has not occurred before then add this value to a new list</p>
<pre><code>a_list = [210, 100, 250, 300, 405, 430, 500, 1850, 1875, 2120, 2150]
a_list.sort()
new_list = []
base = 1
pre_multiple = 0

for value in a_list:
    while (value / base ) &gt;= 10:
        base *= 10

    multiple = int(value/base)
    if multiple != pre_multiple:
        new_list.append(value)

    pre_multiple = multiple

print(new_list)
</code></pre>
</div>
<span class="comment-copy">How do you choose which number to keep?  For instance, does it matter whether you remove 210 or 250?</span>
<span class="comment-copy">first come first i think</span>
<span class="comment-copy">Also, is it guaranteed that this list is sorted?</span>
<span class="comment-copy">Yes, the list is always from lowest to highest.  I want to keep the lower number.</span>
<span class="comment-copy">Perfect!  Thank you.</span>
