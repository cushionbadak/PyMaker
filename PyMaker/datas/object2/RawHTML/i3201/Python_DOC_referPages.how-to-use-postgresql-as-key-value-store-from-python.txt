<div class="post-text" itemprop="text">
<p>I need to convert from <a href="https://docs.python.org/3/library/dbm.html" rel="nofollow noreferrer">gdbm</a> to <a href="http://docs.sqlalchemy.org/en/latest/dialects/postgresql.html" rel="nofollow noreferrer">postgresql</a> for my key/value store.</p>
<p>It appears that I will have to replace</p>
<pre><code>import dbm.gnu

def get_value(db, key):
    return json.loads(db[key])

db = dbm.gnu.open(...)
v = get_value(db, "foo")
</code></pre>
<p>with</p>
<pre><code>import sqlalchemy
from sqlalchemy import Column, Text
from sqlalchemy.dialects.postgresql import JSONB

db = sqlalchemy.create_engine("...")
engine = db.connect()
meta = sqlalchemy.MetaData(engine)

id_col = Column('id', Text, primary_key=True)
data_col = Column('data', JSONB)
sqlalchemy.Table("my_table", meta, id_col, data_col)

meta.create_all()

# populate the table with 40M "id"--&gt;JSON records
engine.execute(
    my_table.update(),
    id="foo",
    data={"a":3, "b":17, "c":[2,6,0]})

my_table = sqlalchemy.table("my_table", id_col, data_col)

def get_value(db, key):
    res = engine.execute(db.select().where(db.c.id == key)).fetchall()
    assert len(res) == 1
    return res[0][1]

v = get_value(my_table)
</code></pre>
<p>this looks someone scary (especially if I add <code>echo</code> and see all the SQL
generated for these simple key-value operations).</p>
<p>Is there a better way?</p>
<p>PS. I could also use <a href="http://initd.org/psycopg/" rel="nofollow noreferrer"><code>psycopg</code></a> instead of <a href="http://docs.sqlalchemy.org/en/latest/dialects/postgresql.html" rel="nofollow noreferrer"><code>sqlalchemy</code></a> directly, but that would make me write SQL <em>myself</em> ;-(</p>
</div>
<div class="post-text" itemprop="text">
<p>You must not use postgresql as a key-value store.</p>
<p>The key-value store (except in rare cases) is structured around a schema based on key composition that layout the data in multidimensional space that may or may not map directly the concepts of SQL tables. Otherwise said, there is a database abstraction that lives in the key-value store.</p>
<p>There is not enough information to say, simply replace the key-value store with a 2 columns table. If you do that you will mostlikely end up with the worst of both worlds.</p>
</div>
<span class="comment-copy">ORM generated SQL is often somewhere between puzzling and downright scary. If you just use Postgres in pure key/value mode I would rather write the SQL myself. Or just not look at the ORM generated code :)</span>
<span class="comment-copy">do the JSON objects share a common schema?</span>
<span class="comment-copy">You are not using the ORM. Those are so called Core constructs: "The SQLAlchemy Expression Language presents a system of representing relational database structures and expressions using Python constructs. These constructs are modeled to resemble those of the underlying database as closely as possible, while providing a modicum of abstraction of the various implementation differences between database backends." Iow you're in a way already writing SQL yourself.</span>
