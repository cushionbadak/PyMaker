<div class="post-text" itemprop="text">
<p>I did some search but couldn't find any useful information.</p>
<pre><code>s = ['33PM']
</code></pre>
<p>My aim is to cut 'PM' from <code>s[0]</code> and append it as <code>s[1]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.findall</code> to extract continuous range of numbers and characters. <code>\d+</code> would extract all numbers and <code>\w+</code> would extract all character ranges</p>
<pre><code>&gt;&gt;&gt; import re 
&gt;&gt;&gt; s = re.findall(r'\d+|\w+', s[0])
&gt;&gt;&gt; s
['33', 'PM']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a method that uses simple Python code, avoiding the complications of regular expressions. This is designed for when you know that <code>'PM'</code> is in the string, and if there is any text in the string after that it will be moved to the second list item together with the <code>'PM</code>. This code also assumes that you care only about the first item in the list--any later items will be dropped.</p>
<pre><code>s = ['33PM']

string0 = s[0]
loc = string0.find('PM')
s = [string0[:loc], string0[loc:]]
</code></pre>
<p>If you now print <code>s</code> the result is</p>
<pre><code>['33', 'PM']
</code></pre>
</div>
<span class="comment-copy">Maybe it make sense to read the Python Tutorial that is available with the standard Python documentation. <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">Here</a> is the introduction to strings, followed by an introduction to lists.</span>
<span class="comment-copy">Can you explain me that? (Thanks for your explanation!)</span>
<span class="comment-copy">And what If I wanted to cut ['123'] as ['1','23'] ?</span>
<span class="comment-copy">On what basis would like to cut '123' as? How would we know if it has to be <code>['1','23']</code> or <code>['12','3']</code></span>
<span class="comment-copy">Keep the first character of s[0] and cut the else to the s[1], maybe?</span>
<span class="comment-copy">Would this help? <code>s=['123']; s=[s[0][0], s[0][1:]]</code></span>
<span class="comment-copy">This is also very helpful, thank you.</span>
