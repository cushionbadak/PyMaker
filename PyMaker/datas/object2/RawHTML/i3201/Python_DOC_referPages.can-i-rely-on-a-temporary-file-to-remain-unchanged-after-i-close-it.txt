<div class="post-text" itemprop="text">
<p>I'm using a temporary file to exchange data between two processes:</p>
<ol>
<li>I create a temporary file and write some data into it</li>
<li>I start a subprocess that reads and modifies the file</li>
<li>I read the result from the file</li>
</ol>
<p>For demonstration purposes, here's a piece of code that uses a subprocess to increment a number:</p>
<pre><code>import subprocess
import sys
import tempfile

# create the file and write the data into it
with tempfile.NamedTemporaryFile('w', delete=False) as file_:
    file_.write('5')  # input: 5

    path = file_.name

# start the subprocess
code = r"""with open(r'{path}', 'r+') as f:
    num = int(f.read())
    f.seek(0)
    f.write(str(num + 1))""".format(path=path)
proc = subprocess.Popen([sys.executable, '-c', code])
proc.wait()

# read the result from the file
with open(path) as file_:
    print(file_.read())  # output: 6
</code></pre>
<p>As you can see above, I've used <a href="https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile" rel="nofollow noreferrer"><code>tempfile.NamedTemporaryFile(delete=False)</code></a> to create the file, then closed it and later reopened it.
 My question is:</p>
<p>Is this reliable, or is it possible that the operating system deletes the temporary file after I close it? Or perhaps it's possible that the file is reused for another process that needs a temporary file? Is there any chance that something will destroy my data?</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation does not say. The operating system might automatically
delete the file after some time, depending on any number of things about
how it was set up and what directory is used. If you want persistence,
code for persistence: use a regular file, not a temporary one.</p>
</div>
<span class="comment-copy">That strongly depends on the OS. Even different <a href="https://serverfault.com/questions/377348/when-does-tmp-get-cleared">Linux distributions differ in <code>/tmp</code> cleanup behaviour</a>.</span>
<span class="comment-copy">@EliKorvigo "It strongly depends on the OS" sounds an awful lot like "No, that's not reliable at all" to me (: Thanks for the info.</span>
<span class="comment-copy">I haven't called it downright unreliable, because you are not bound to use <code>tempfile.gettempdir()</code>, hence you can theoretically store the file in a safe place. That being said, a temporary file that should safely survive past the lifetime of its process doesn't sound so temporary to me. If you need to exchange data with another process, you can use sockets or a named pipe. Or use a plain-old regular file (with some custom permissions, if you want to mimic a tempfile).</span>
<span class="comment-copy">@EliKorvigo The file doesn't need to persist after my program exits. And I can't use pipes because the subprocess only supports on-disk files.</span>
<span class="comment-copy">Any recommendations where I should create that file? In the current working directory? In the directory where my program is located? Somewhere else?</span>
<span class="comment-copy">Depends on your use case. You probably want a fixed directory, not the CWD, since another process needs to access the file and that process might have a different CWD. Under Linux, Iâ€™d probably use a hidden file (<code>.filename</code>) in my home directory.</span>
