<div class="post-text" itemprop="text">
<p>I’ve been trying to build a basic program that reads a file with two integers (could be empty or have a million entries) separated by a space.  It looks like this (corresponding to the day of the week and the temperature):</p>
<pre><code>2 30
5 27
1 31
4 32
3 29
6 29
7 33
</code></pre>
<p>I am trying to assign the day to a variable called ‘dow’ and the temperature to one called ‘temp’. After the values are gathered (from “input.txt”), I need to use four lists for the count (number of times the day appears), high (for the high temperature), low (for the low), and average (for the average temp). I need to then output to a file (“output.txt”) that shows dow, high, low, average, like this (randomly chosen):</p>
<pre><code>1 31 25 27
2 29 24 26
3 32 34 31
... etc ...
7 34 34 32
</code></pre>
<p>I have tried using with() along with readline() in a for loop with limited success. Since I need to perform mathematical calculations with the list data, I don’t know how to read them in as integers. I have read that readline() automatically determines the end of file, but I need it to iterate until it finishes.  </p>
<p>I have figured out how to write the output, determine the highs, lows, and averages, but I keep getting errors when I try to use math functions on the data from the input files. I have also had issues when I try assigning values to the lists. I use the ‘index’ variable as a counter for each list. E.g.:</p>
<pre><code>if high[index] &lt; temp:
    high[index] = temp
</code></pre>
<p>Or:</p>
<pre><code>if count[index] == dow:
    count[index] += 1
</code></pre>
<p>The errors I keep getting indicate that I can’t perform math functions on str and int values. I’ve done things like this with arrays in Perl and Java, but I am trying to be pythonic and use lists instead of arrays in Python.</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>s</code> is a string, <code>int(s)</code> converts it into an integer, and <code>float(s)</code> converts it into a float.</p>
<p>Those 2 functions can raise a <code>ValueError</code> if the string format is not correct.</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume your data is stored in .txt files. Text files are <a href="https://docs.python.org/3/glossary.html#term-iterator" rel="nofollow noreferrer">iterable</a>, thus a good way to retrieve the data is:</p>
<pre><code>file = "my_file.txt"

with open(file, "r") as f:
    for line in f:
        # Do stuff
</code></pre>
<p>Now, since you want the stats for every day, I think a dictionary would fit your needs. If we consider the key to be the day, and the value to be a list of every temperature recorded for that given day, we get something like this:</p>
<pre><code># Create a dictionnary for the days
days = dict()

with open(file, "r") as f:
    for line in f:
        values = line.strip("\n").split(" ")    # Split the string at the space after taking out the \n ENTER character
        values = [int(v) for v in values]       # I assume all the data was composed of integers. Replace by float() if needed.

        if values[0] in days.keys():
            days[values[0]].append(values[1])   # Add the temperature
        else:
            days[values[0]] = [values[1]]       # Create the temperature list for this day
</code></pre>
<p>For this input:</p>
<pre><code>2 30
5 27
3 29
2 29
5 33
</code></pre>
<p>The dictionary would be:</p>
<pre><code>days = {2: [30, 29], 5: [27, 33], 3: [29]}
</code></pre>
<p>Now since you want the min, max and mean, let's work on the lists in the dict:</p>
<pre><code>import numpy as np
output_file = "output.txt"

sorted_days = sorted(list(days.keys()))
with open(output_file, "w") as f:
    for key in sorted_days:
        mini = np.min(days[key])
        maxi = np.max(days[key])
        mean = np.mean(days[key])

        # Build the line to write
        line = " ".join([str(key), str(mini), str(maxi), str(mean)]) + "\n"
        f.write(line)
</code></pre>
<p>Output:</p>
<pre><code>2 29 30 29.5
3 29 29 29.0
5 27 33 30.0
</code></pre>
<p>You can of course do other operation, but I think this is enough of an overview of the possibilities.</p>
</div>
<span class="comment-copy">If you're getting errors that say you can't perform math functions on strings, have you considered parsing those strings into actual numbers? Give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of the specific problem.</span>
<span class="comment-copy">Thank you for the format editing, Jon!</span>
<span class="comment-copy">When you read a file, you're getting strings. Convert them and you can perform mathematical operations.</span>
<span class="comment-copy">@catharsis834 This indeed sounds familiar, this kind of question has been asked countless time. But if we don't have the code that leds to the <code>count</code> and <code>high</code> lists, we can't tell you where you have to do the str to int conversion. You can do <code>if int(count[index])) == dow:</code> for example, but it's probably better to do this conversion at the list construction.</span>
<span class="comment-copy">The others are right you should convert the data into int or float before doing any maths on it - as an aside, I highly recommend you look into using numpy or pandas to handle reading data from csv, filtering and vectorised maths as those are optimised for these tasks</span>
<span class="comment-copy">By the way numpy is not require, but I think it is one of the most handy module, so why bother writing sum / len</span>
