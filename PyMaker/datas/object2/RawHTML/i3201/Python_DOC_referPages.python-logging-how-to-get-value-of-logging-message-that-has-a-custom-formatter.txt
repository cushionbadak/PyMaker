<div class="post-text" itemprop="text">
<p>I have a logger that I've added a handler to with a custom formatter, but I'd like to access what the resulting message is after going through my custom formatter. So my code looks something like this:</p>
<pre><code>import logging
logger = logging.getLogger(__name__)

some_handler = logging.StreamHandler()
some_handler.setFormatter(some_formatter) # some_formatter specified elsewhere

logger.addHandler(some_handler)
</code></pre>
<p>Now when I do a <code>logger.warning('hello')</code>, I see the message in the format that I specified in <code>some_formatter</code> (so maybe something like <code>'my message is: hello'</code>). But I'd like to access that formatted message in the code. How can I get what the resulting formatted message was from my <code>logger.info('hello')</code> in the code?</p>
</div>
<div class="post-text" itemprop="text">
<p>The default logging level is <a href="https://docs.python.org/3/library/logging.html#logging.Logger.setLevel" rel="nofollow noreferrer"><code>WARNING</code></a>, which is the reason why <code>logger.info('hello')</code> since <code>INFO</code> is less severe than <code>WARNING</code>. Just add the following somewhere:</p>
<pre><code>logger.setLevel(logging.INFO)
</code></pre>
<p>This will set the lowest logged severity level to <code>INFO</code>. </p>
<hr/>
<p>As for your question, you'll need another handler. You <em>can</em> define your own <code>Handler</code> or create another <code>StreamHandler</code> with the stream set to a <code>StringIO</code>:</p>
<pre><code>import logging
from io import StringIO

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)

stream = StringIO()

some_handler = logging.StreamHandler()
some_handler.setFormatter(some_formatter)

some_other_handler = logging.StreamHandler(stream)
some_other_handler.setFormatter(some_formatter)

logger.addHandler(some_handler)
logger.addHandler(some_other_handler)

# You hadn't specified your desired result format, so... I'm going to assume you want a list and assume all logs are single lined, but you can change it accordingly

def get_stream():
    stream.seek(0)
    return stream.read().strip().split('\n')

logger.warning("opps")
logger.info("nevermind")

current_streamed = get_stream()
print(current_streamed)
</code></pre>
<p>Output:</p>
<pre><code>format: opps
format: nevermind
['format: opps', 'format: nevermind']
</code></pre>
<p>The first two came from logging, the list from <code>current_streamed</code>.</p>
</div>
<span class="comment-copy">Ok I didn’t include the part where I set the severity level. I’ve edited my question. But my question remains the same</span>
<span class="comment-copy">@Andrew Okay, I edited with the answer to what I think was your question.</span>
