<div class="post-text" itemprop="text">
<pre><code>one = (r"C:\Users\Sam\OneDrive\Desktop\RateData\1")

for feature in features[0]:
    backslash = '\\'
    imagePath = ((one)+backslash+"'"+str(feature)+"'")
    img = cv2.imread(imagePath)
    print(imagePath)
    print(img)
</code></pre>
<hr/>
<p>So the result of <code>print(imagePath)</code> is: 
   <code>C:\Users\Sam\OneDrive\Desktop\RateData\1\'1.1.jpg'</code></p>
<hr/>
<p>The result of <code>print(img)</code> is:    <code>None</code></p>
<hr/>
<p><code>feature</code> is just the image file name.  I wrote it like that so it would add the unique image file name to the path.</p>
<p>So I tried running that through the <code>cv2.imread()</code> function and it returned <code>None</code>.
I know that the reason it won't run is that it is just reading it as a string and doesn't recognize that as a raw string literal. I'm not a very experienced programmer so I tried all the ways I could think of (not very many) to get it to read the path as a raw string literal and it didn't work. So if any of you could help me out in making the string into that that would be awesome!</p>
<p>Thanks for the help!</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>So the result of "print(imagePath) is: C:\Users\Sam\OneDrive\Desktop\RateData\1\'1.1.jpg</p>
</blockquote>
<p>Almost certainly, you don't have a file named <code>'1.1.jpg</code> in the <code>RateData</code> directory. While Windows does allow apostrophe/single-quote characters in filenames, I can't imagine you would have used one there intentionally. So, it's probably named <code>1.1.jpg</code>?</p>
<p>I'm also not sure how you got that string out of that codeâ€¦ but never mind that.</p>
<hr/>
<p>You're making this all a lot harder than it has to be. There's no need to worry about getting path separators escaped and quoted properly, or whatever you were trying to do.</p>
<p>Python comes with the <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer"><code>os.path</code></a> module for doing path-related operations. So just use it:</p>
<pre><code>for feature in features[0]:
    imagePath = os.path.join(one, str(feature))
    img = cv2.imread(imagePath)
    print(imagePath)
    print(img)
</code></pre>
<p>Or, since I'd bet <code>feature</code> is already a string, even simpler:</p>
<pre><code>    imagePath = os.path.join(one, feature)
</code></pre>
<hr/>
<p>Or, if you prefer a more object-oriented API, Python also comes with <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a>:</p>
<pre><code>one = pathlib.Path(one)
for feature in features[0]:
    imagePath = one / feature
    img = cv2.imread(str(imagePath))
    print(imagePath)
    print(img)
</code></pre>
<p>I don't know if <code>cv2</code> is pathlib-aware, but if it is, you can just do <code>cv2.imread(imagePath)</code>. (If you want to use <code>pathlib</code>, definitely try that and see, because it's obviously more readable.)</p>
</div>
<span class="comment-copy">"I know that the reason it won't run is that it is just reading it as a string and doesn't recognize that as a literal" - whatever your concepts of "string" and "literal" are, they don't match how Python actually works. Why are you trying to stick single-quotes into your file path at all? Does your file name actually have those single-quotes in it?</span>
<span class="comment-copy">Is the problem that you build the path <code>C:\Users\Sam\OneDrive\Desktop\RateData\1\'1.1.jpg</code> but wanted to build a different path, or that you build that path and wanted to build that path and don't understand why there's no file named <code>'1 1.jpg</code> in that <code>RateData</code> directory?</span>
<span class="comment-copy">To answer both of your comments, <code>C:\Users\Sam\OneDrive\Desktop\RateData\1\'1.1.jpg</code> is an acceptable path and I've gotten it to work in the code if I type in: <code>r"C:\Users\Sam\OneDrive\Desktop\RateData\1\'1.1.jpg'"</code>. It works the same as: <code>r"C:\Users\Sam\OneDrive\Desktop\RateData\1\1.1.jpg"</code>. The reason I need the "r" in the front of the path is so that I don't get an unicode error. Also, it's my bad that I used the word "literal". I should have used "raw string." The reason for my posting was to figure out how to make <code>imagePath</code> a raw string, but as it turns out I don't need that.</span>
<span class="comment-copy">To explain what I was trying to do was, I was trying to piece together a string to make a path for a file. I didn't know about os.path.join until you replied with it. Also if you read my other comment you will understand why I used <code>'1.1.jpg'</code> instead of just <code>1.1.jpg</code> and that was simply because I knew it worked the first way and I didn't bother to try it the other way. Your answer is a much better solution than what I was trying to do and it indeed worked perfectly. I still would like to know out of curiosity about how to make that string a raw string, because that would work too. Thank you!</span>
<span class="comment-copy">@SamHall You can't "make a string a raw string". Raw strings aren't a thing. Strings just contain their characters. Raw string <i>literals</i> are a way of representing strings in your source code. They affect how your source code is parsed, but once it's parsed, the string you get is just a plain old string, and, e.g., <code>r'C:\Spam'</code> and <code>'C:\\Spam'</code> are the exact same string. So, what you're trying to do doesn't make sense, so it can't be a solution to your problem.</span>
<span class="comment-copy">So instead of using that silly concatenation I was trying to use, I put in the full path instead: <code>r"C:\Users\fatso\OneDrive\Desktop\RateData\1\1.1.jpg"</code> and set that equal to <code>imagePath</code>. I just understood that the <code>r</code> in front of the path made it work, so when I asked this I was just trying to find a way to make my concatenation a raw string literal even though I didn't realize it was called a raw string literal. But anyways you're saying that making that concatenation a raw string literal is not possible?</span>
<span class="comment-copy">@SamHall I'm saying that it doesn't <i>mean</i> anything. If you concatenate <code>r"C:\Users\fatso\OneDrive\Desktop\RateData\1" + "\\" + "1.1.jpg"</code>, what you get is the same string as r"C:\Users\fatso\OneDrive\Desktop\RateData\1\1.1.jpg"`.</span>
<span class="comment-copy">Also I am kind of new to stackoverflow so I was wondering, could send me a few pointers to writing a good question because I don't want to get banned from asking questions? I am a relatively new programmer and as I get into more complex things it becomes helpful to ask questions and I don't want that privelege being taken away. If you would, could you please tell me what's wrong with this post so I can make it better? I have read the guidelines and I thought I was in the green but apparently not. If you don't have time I understand, but anyways thank you for the time you put into helping me!</span>
