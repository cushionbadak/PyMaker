<div class="post-text" itemprop="text">
<p>I have two lists named <code>res_list</code> and <code>fina_list</code>. I want the first member of the <code>res_list</code> as key and first member of <code>fina_list</code> as the value and so on. Both the list are of the same length. I have written following code but I am not getting the answer please help me on this. </p>
<pre><code>for i in range(0, len(prot_temp)):
    dict_dist[res_list_count[i]] = fina_val[i]
print (dict_dist)
</code></pre>
<p>res_list = ['LYS', 'LYS', 'LYS', 'LYS', 'ARG', 'LYS', 'LYS', 'LYS', 'ARG', 'LYS', 'LYS', 'ARG', 'LYS', 'ARG', 'LYS', 'LYS', 'ARG', 'LYS', 'ARG', 'ARG', 'ARG', 'LYS', 'LYS', 'LYS', 'LYS', 'LYS'] and fina_val = [['90', 30.390685694798005], ['91', 33.017900690383094], ['99', 25.200985952934463], ['104', 19.14776281971343], ['113', 20.365273138359818], ['114', 21.71637709195528], ['135', 29.452559922696025], ['138', 24.335606731700775]] but when I am doing as you said I am geeing fillowing answer: {'LYS': ['302', 25.757180610462783], 'ARG': ['282', 17.118237438474793]} where i am wrong ? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> and a <a href="https://www.google.com/search?q=dictionary%20comprehension" rel="nofollow noreferrer"><code>dictionary comprehension</code></a>. </p>
<pre><code>d = {k:v for k,v in zip(res_list, fina_list)}
</code></pre>
<p>Also, as <a href="https://stackoverflow.com/users/1084416/peter-wood">Peter</a> pointed out, one can do <code>dict(zip(res_list, fina_list)</code>!</p>
<hr/>
<p>Some more explicit (and perhaps less <code>Python(ic)</code> ways)</p>
<p>You can iterate over the zip to be more explicit.</p>
<pre><code>d = {}
for k,v in zip(res_list, fina_list):
    d[k] = v
</code></pre>
<p>Of you can even iterate over the lists together with an index.</p>
<pre><code>d = {}
for i in range(min(len(res_list), len(fina_list)):
    d[res_list[i]] = fina_list[i]
</code></pre>
<p>if those are more clear to you. However, part of the beauty of python is it's <em>conciseness</em> while maintaining <em>clarity</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>dict</code>'s constructor accepts a sequence of <code>(key, value)</code> pairs, 
so you can achieve it with </p>
<pre><code>dict(zip(res_list, fina_list))
</code></pre>
</div>
<span class="comment-copy">You probably want to rename your <code>fina_list</code> to <code>final_list</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/209840/convert-two-lists-into-a-dictionary-in-python">Convert two lists into a dictionary in Python</a></span>
<span class="comment-copy">Or just use the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><b><code>dict</code></b></a> constructor, which can take tuple pairs: <code>dict(zip(keys, values))</code></span>
<span class="comment-copy">@PeterWood That would be an exact duplicate though. See comment section.</span>
<span class="comment-copy">@scharette a comprehensive answer can mention more than one method. Also, the answer wasn't there when I commented.</span>
<span class="comment-copy">@PeterWood No, you missunderstood me. Your insight was really good. It was actually the best to acheive this. My point was that there is an exact duplicate that I inlcuded in the comments section.</span>
<span class="comment-copy">res_list = ['LYS', 'LYS', 'LYS', 'LYS', 'ARG', 'LYS', 'LYS', 'LYS', 'ARG', 'LYS', 'LYS', 'ARG', 'LYS', 'ARG', 'LYS', 'LYS', 'ARG', 'LYS', 'ARG', 'ARG', 'ARG', 'LYS', 'LYS', 'LYS', 'LYS', 'LYS'] and fina_val = [['90', 30.390685694798005], ['91', 33.017900690383094], ['99', 25.200985952934463], ['104', 19.14776281971343], ['113', 20.365273138359818], ['114', 21.71637709195528], ['135', 29.452559922696025], ['138', 24.335606731700775]] but when I am doing as you said I am geeing fillowing answer: {'LYS': ['302', 25.757180610462783], 'ARG': ['282', 17.118237438474793]} where i am wrong ?</span>
<span class="comment-copy">Since you have duplicated in res_list you need to decide on a proper way to handle it. A dictionary cannot have duplicate keys (for obvious reasons)</span>
<span class="comment-copy">OOPS than what I could do ?</span>
<span class="comment-copy">You can either aggregate values with the same keys in a list or rename your keys to avoid duplicates.</span>
<span class="comment-copy">Please, update your question with those sample <code>res_list</code> and <code>fina_val</code>, since it is a major point</span>
