<div class="post-text" itemprop="text">
<p>I just begin to learn python now. Below is some code I tried to test.
My question is:
Now, these code has an error:
name <code>student2dict</code> is not defined, when running to <code>std_data</code> line.
Can somebody help me figure it out and how to fix it? thanks a lot.</p>
<pre><code>import json

class Student(object):

    def __init__(self,name,age,score):
        self.name = name
        self.age = age
        self.score = score

    def student2dict(std):
        return{
            'name':std.name,
            'age':std.age,
            'score':std.score
            }

s= Student('Penny',20,88)
std_data = json.dumps(s,default=student2dict)
print('Dump Student:',std_data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your existing code is that you don't have a global function (or anything else) named <code>student2dict</code>, because you indented it under the <code>class Student</code> definition.</p>
<p>Just dedent it, and it will work:</p>
<pre><code>class Student(object):

    def __init__(self,name,age,score):
        self.name = name
        self.age = age
        self.score = score

def student2dict(std):
    return{
        'name':std.name,
        'age':std.age,
        'score':std.score
        }

s= Student('Penny',20,88)
std_data = json.dumps(s,default=student2dict)
print('Dump Student:',std_data)
</code></pre>
<hr/>
<p>However, it seems like you wanted it to be a method, not a plain function:</p>
<blockquote>
<p>before I tried to use default=s.student2dict instead of dedault=student2dict</p>
</blockquote>
<p>A normal method needs a <code>self</code> parameter. That's how it knows which instance you're calling it on. The error you got was presumably about calling <code>student2dict</code> with two arguments (the <code>s</code> from <code>s.student2dict</code>, and the same <code>s</code> again passed in by <code>json.dumps</code>) when it only wanted one (<code>std</code>).</p>
<p>You could fix this:</p>
<pre><code>class Student(object):

    def __init__(self,name,age,score):
        self.name = name
        self.age = age
        self.score = score

    def student2dict(self, std):
        return{
            'name':std.name,
            'age':std.age,
            'score':std.score
            }
</code></pre>
<p>And now you could pass <code>default=s.student2dict</code> and it would work.</p>
<p>But this really isn't a very good design. If you're not actually using <code>self</code> for anything, you're not really writing an instance method.</p>
<hr/>
<p>(You <em>could</em> make it a <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer">static method</a>, because they neither get nor need a <code>self</code>, but I don't see any point to doing that here. If that's what you want, a global function probably makes more sense.)</p>
<hr/>
<p>Butâ€¦ what if you got rid of <code>std</code>, and used <code>self</code> instead?</p>
<pre><code>class Student(object):

    def __init__(self,name,age,score):
        self.name = name
        self.age = age
        self.score = score

    def student2dict(self):
        return{
            'name':self.name,
            'age':self.age,
            'score':self.score
            }
</code></pre>
<p>Now, you don't want to pass <code>s.student2dict</code>, because that's a <em>bound method</em>, owned by the instance <code>s</code>. It can't be called with an argument, because the argument is already bound in. You're going to get the same error about two arguments instead of one.</p>
<p>What you want is an <em>unbound method</em>, which you get by referencing it on the <em>class</em>, rather than the instance, so that it can be called later with any instance. like this:</p>
<pre><code>s= Student('Penny',20,88)
std_data = json.dumps(s,default=Student.student2dict)
print('Dump Student:',std_data)
</code></pre>
<p>This works, because <code>Student.student2dict(s)</code> does the same thing as <code>s.student2dict()</code>. So, if you pass that <code>Student.student2dict</code> to the <code>json.dumps</code>, when it calls that on <code>s</code>, you get exactly what you wanted.</p>
</div>
<span class="comment-copy">There is no global name <code>student2dict</code>, because you indented it as a method of the class <code>Student</code>. Presumably this is a simple typo that you know how to fix easily. If you don't understand, then please let us know and we can find or write an explanation.</span>
<span class="comment-copy">Also, the <code>dump</code> tag is for things like core dumps, not for Python's <code>dump</code>/<code>dumps</code> functions. I removed it, but for future reference, check the descriptions of tags before using them.</span>
<span class="comment-copy">@abarnert before I tried to use default=s.student2dict instead of dedault=student2dict. But still, lead to some other errors. May you please just write the correct way to use this method student2dict in json.dumps(), thanks</span>
