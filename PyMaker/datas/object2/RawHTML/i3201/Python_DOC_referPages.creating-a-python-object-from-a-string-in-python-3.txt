<div class="post-text" itemprop="text">
<p>This is not a duplicate of <a href="https://stackoverflow.com/questions/6098073/creating-a-function-object-from-a-string">creating a function object from a string</a> because that is a Python 2 solution with <code>exec</code> not as a function()</p>
<p>Trying to implement that solution in Python 3 gets this:</p>
<pre><code>d = {}
exec("def f(x): return x")in d
print(d)
</code></pre>
<p>returns:</p>
<pre><code>{}
</code></pre>
<p>So the question is, how do I create a function in Python 3 from an arbitrary string? (In my case read in from a YAML file, but that's a side issue.)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>X in d</code> , returns True if X is found in element d.</p>
<p>Your exec call is defining function f in global scope.</p>
<p>This appears to do what you want it to:</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; exec("def f(x): return x", d)
&gt;&gt;&gt; d["f"]("Hello World")
'Hello World'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; d={}
&gt;&gt;&gt; exec("def f(x): return x",None,d)
&gt;&gt;&gt; d['f'](2)
2
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">I don't understand what the <code>in d</code> part is trying to do.  If you just <code>exec</code> that code, you will be able to call <code>f(x)</code> in your code.  Either way, I would never recommend running arbitrary strings, this seems like an XY problem</span>
<span class="comment-copy">I need the function object so I can place it in an object to be used later.  The use must be able to create an arbitrary function that uses data from the object.</span>
<span class="comment-copy">@user3483203 that's part of the syntax of the <code>exec</code> keyword in Python 2 (apparently). It seems like a honkin' bad idea to me.</span>
<span class="comment-copy">Right. Understand that folks don't know my application.  Moving beyond the question of whether others would do it, is it still possible to create a function object from an arbitrary string?</span>
<span class="comment-copy">@sP_ No, it returns <code>{}</code> because <code>d</code> is an empty dictionary. The middle line of code just checks if <code>None</code> is a member of <code>d</code>, which it is not.</span>
<span class="comment-copy">for reference: <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#exec</a></span>
<span class="comment-copy">Thanks!  I see now how the <code>exec</code> has changed (and now that I understand it, improved.)</span>
<span class="comment-copy">Can you please provide a brief explanation?</span>
