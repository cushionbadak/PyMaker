<div class="post-text" itemprop="text">
<p>Im working on python3 project and I am getting error when trying to write on CSV file.</p>
<pre><code>with open('infile.csv', 'r') as f:
    reader = csv.reader(f)


# manipulate the data

with open('outfile.csv', 'w') as fl:
    writer = csv.writer(fl)
    for row in reader:
        writer.writerow(row)
</code></pre>
<p>Im  getting <code>I/O operation on closed file on csv python</code> issues. Do I need to create <code>outfile.csv</code> first? Im not sure?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because you are using a context manager the infile gets closed when you come out of it scopes.</p>
<p>The solution is </p>
<pre><code>with open('infile.csv', 'r') as f:
    reader = csv.reader(f)


    # manipulate the data

    with open('outfile.csv', 'w') as f:
        writer = csv.writer(f)
        for row in reader:
             writer.writerow(row)
</code></pre>
<p>Edit Here is a more concise and efficient way </p>
<pre><code>with open('infile.csv', 'r') as fin, open("outfile.csv" , "w") as fout:
    reader = csv.reader(fin)
    writer = csv.writer(fout) 
    for row in reader:        
        writer.writerow(row) 
</code></pre>
</div>
<span class="comment-copy">both have same file handler f</span>
<span class="comment-copy">more idiomatic is to open both in the same context manager. <code>with open('infile.csv', 'r') as fin, open('outfile.csv', 'w') as fout: # do stuff</code></span>
<span class="comment-copy">ya that is more concise and efficient</span>
<span class="comment-copy">for multiple context managers it is better to use <a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow noreferrer"><code>contextlib.ExitStack</code></a></span>
