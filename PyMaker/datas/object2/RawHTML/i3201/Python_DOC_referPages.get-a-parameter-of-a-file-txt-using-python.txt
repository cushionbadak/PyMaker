<div class="post-text" itemprop="text">
<p>I'm trying to get parameters of a .txt like that:</p>
<pre><code>a=10
b=15
c=20
</code></pre>
<p>How can i do a function called get() that takes from this file called parameters.txt the parameter b and return 15??</p>
<p>It's to build a module that works like a getter of parameters.</p>
<p>To simplify and explain information: the .txt conatains parameters with and int value. The get() function will obtain the integer value associated to the parameter.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you say you want "to build a module that works like a getter of parameters", you should just parse the whole file into an internal dictionary:</p>
<pre><code>class Config(dict):
    def __init__(self, file_name):
        with open(file_name) as f:
            for line in f:
                key, value = line.strip().split("=")
                self[key] = value
</code></pre>
<p>Example usage:</p>
<pre><code>c = Config("test.txt")
print(c)
# {'a': '10', 'b': '15', 'c': '20'}
print(c['b'])
# 15
</code></pre>
<p>If all your values are numerical, you might want to modify this to do <code>self[key] = float(value)</code> or similar. Otherwise you might want to define a <code>try_parse_numeric</code> function:</p>
<pre><code>def try_parse_numeric(s):
    try:
        return int(s)
    except ValueError:
        pass
    try:
        return float(s)
    except ValueError:
        pass
    return s

class Config(dict):
    def __init__(self, file_name, value_parser=try_parse_numeric):
        self.value_parser = value_parser
        with open(file_name) as f:
            for line in f:
                key, value = line.strip().split("=")
                self[key] = self.value_parser(value)
</code></pre>
<p>And if it gets more complicated than that, you probably want to use <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer"><code>configparser</code></a> instead of rolling your own.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def get(param):
    with open(filename, "r") as infile:     #Read file
        for line in infile:                 #Iterate over each line
            if line.startswith(param):      #Check if line starts with input param
                return line.split("=")[1]   #Return Value
print(get("b"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def get(par):
    with open("parameters.txt",'r') as file:
        return next(e for e in file.readlines() if par in e).split("=")[1]
</code></pre>
<p>Try this</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this sould work:</p>
<pre><code>def get(filename,variable):
    with open(filename) as f:
        for line in f.readlines():
            if line[:len(variable)] == variable:
                return line.split("=")[-1]
    return None

print(get("test.txt","b"))
</code></pre>
</div>
<span class="comment-copy">Welcome to SO. Your question is unclear, e.g. what is <code>parameter of a file</code>? Please provide a <b><a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></b>.</span>
<span class="comment-copy">Consider using an existing data serialization module instead of writing your own file format. For example, <code>pickle</code> or <code>json</code>. Or maybe even a proper database.</span>
<span class="comment-copy">Please show what you have already tried. You can read the file by lines and then use split</span>
<span class="comment-copy">In <code>line.split("=")[-1]</code> why -1? Shouldn't it be 1?</span>
<span class="comment-copy">Doesn't really make a difference</span>
<span class="comment-copy">Because <code>[-1]</code> just takes the last element, because the array has just 2 elements both <code>[1]</code> and <code>[-1]</code> would work</span>
<span class="comment-copy">@pasch013 damn I forgot that you can access array elements with negative indexes in python. My bad.</span>
<span class="comment-copy">Thank you, worked perfectly!!</span>
