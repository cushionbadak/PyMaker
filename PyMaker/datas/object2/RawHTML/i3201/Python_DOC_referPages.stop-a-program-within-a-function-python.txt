<div class="post-text" itemprop="text">
<p>I'm kinda new to coding and I'd like to be able to stop the program and if possible throw up a custom error message from within a function</p>
<p>(as in:</p>
<pre><code>def Rounded_square(lots of inputs):
    radius = (calculation)
    if radius &lt; 0:
        stop.program("The radius is negative")
</code></pre>
<p>)</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to <em>raise an exception</em></p>
<pre><code>raise ValueError("radius should be positive")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To throw a custom error message you can do</p>
<pre><code>raise BaseException("my exception text")
</code></pre>
<p>You can view built-in exception types <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow noreferrer">here</a></p>
<p>alternatively to exit the program you can just call</p>
<pre><code>exit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>import os</code>
<code>os.exit("The radius is negative")</code> , the value inside the <code>exit()</code> function will be printed to <code>stderr</code> and the return code will be 1 (thanks to @peter-wood for that revelation)
and just before that you can just use <code>print</code> for the message</p>
</div>
<div class="post-text" itemprop="text">
<p>You can throw exceptions using <code>raise</code> statement in python: </p>
<pre><code>raise Exception('Message') # Exception: Message
</code></pre>
<p>It is also possible to create custom exceptions: </p>
<pre><code>class MyException(Exception):
  pass

raise MyException('Message') # MyException: Message
</code></pre>
<p>So you should use: </p>
<pre><code>raise TypeError('The radius is negative')
</code></pre>
<p>You should read some tutorials, about exceptions: <a href="https://www.tutorialspoint.com/python/python_exceptions.htm" rel="nofollow noreferrer">https://www.tutorialspoint.com/python/python_exceptions.htm</a></p>
</div>
<span class="comment-copy">Are you talking about exceptions?</span>
<span class="comment-copy">Do you really mean stop or pause? Are you in a GUI environment or command line? What operating system are you using?</span>
<span class="comment-copy">Sorry I was just abstracting when i wrote the stop thing. Yeah it looks like exceptions were the way to go, thanks everyone (just using the basic spyder interface nothing fancy).</span>
<span class="comment-copy">The question is not clear enough for this to be a definitive answer.</span>
<span class="comment-copy">@PeterWood: probably, seems the most likely option however, and since the OP says he's new to coding, it's worth looking into exceptions</span>
<span class="comment-copy">If anything other than an integer is passed to <code>exit</code>, Python converts it to a string, prints it to <code>stderr</code>, and exits with code <code>1</code>. See <a href="https://docs.python.org/3/library/sys.html#sys.exit" rel="nofollow noreferrer"><b><code>sys.exit</code></b></a></span>
<span class="comment-copy">did not know that! , thank you , will edit the answer</span>
