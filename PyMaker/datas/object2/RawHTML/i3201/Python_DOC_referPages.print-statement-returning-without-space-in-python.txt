<div class="post-text" itemprop="text">
<p>This is my code:</p>
<pre><code>class Student(Person):

    def __init__(self, firstName, lastName, idNumber,scores):
        self.firstName = firstName
        self.lastName = lastName
        self.idNumber = idNumber
        self.testscores = scores

    def calculate(self):
        average = sum(self.testscores) / len(self.testscores)
        if average&gt;=90 and average&lt;=100 :
            return'O'
        elif average&gt;=80 and average&lt;90 :
            return'E'
        elif average&gt;=70 and average&lt;80 :
            return'A'
        elif average&gt;=55 and average&lt;70 :
            return'P'
        elif average&gt;=40 and average&lt;55 :
            return'D'
        else:
            return'T'
</code></pre>
<p>The statement : <code>print("Grade: ", s.calculate())</code> returns <code>Grade:  O</code> (two spaces) instead of <code>Grade: O</code> (single space).</p>
<p>Since the above print statement is in locked stub code I can't modify it.</p>
<p>Is there anyway I can remove the extra space while returning from calculate function?</p>
<p><strong>Edit</strong>: For better understanding of the problem consider this
<a href="https://i.stack.imgur.com/nS7FE.png" rel="nofollow noreferrer">image</a>
in which the only difference is in my output's and expected output's third statement because of additional space.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>print</code> function prints each of its arguments with a space as a delimiter already, so by adding a space in <code>"Grade: "</code>, you're making it print another space between the colon and the grade. Simply replace <code>"Grade: "</code> with <code>"Grade:"</code> and it will output without the extra space.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can specify <code>sep=''</code>, i.e. an empty string:</p>
<pre><code>print('Grade: ', s.calculate(), sep='')
</code></pre>
<p>Or you can remove the space from your first argument:</p>
<pre><code>print('Grade:', s.calculate())
</code></pre>
<p>Alternatively, you can use string formatting:</p>
<pre><code>print(f'Grade: {s.calculate()}')          # 3.6+
print('Grade: {}'.format(s.calculate()))  # pre-3.6
</code></pre>
<p>To troubleshoot such problems, you can use the built-in <code>help</code>, which tells you the default argument for <code>sep</code> is a single space:</p>
<pre><code>help(print)

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)

    ...
    sep:   string inserted between values, default a space.
    ...
</code></pre>
<p>Interestingly, the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">official docs</a> have got it wrong:</p>
<blockquote>
<p><strong>print</strong>(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)</p>
<p>Print objects to the text stream file, separated by sep and followed
  by end. sep, end, file and flush, if present, must be given as keyword
  arguments.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Since the above print statement is in locked stub code I can't modify it.</p>
<p>Is there anyway I can remove the extra space while returning from calculate function?</p>
</blockquote>
<p>If I not misunderstand, you can change <code>caculate</code> function, but not <code>print</code>, and you want just see one space in output, and you are in python3.</p>
<p>Then you can use backspace <code>\b</code>, change E.g. <code>return 'O'</code> to <code>return '\bO'</code>, and other return need to be changed also.</p>
<p>A simple code for your quick test:</p>
<pre><code>def fun():
  return 'O'

def fun2():
  return '\bO'

print("Grade: ", fun())
print("Grade: ", fun2())
</code></pre>
</div>
<span class="comment-copy">Where exactly is the extra space? How do you see it on screen? Please post a proper <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">Are you sure they are spaces and not line breaks?</span>
<span class="comment-copy">As always, the answer to the question "Can I make someone else's code do something different without changing the code?" is "Not without doing something gross". Contact the author/maintainer of that code and have them fix the double space thing.</span>
<span class="comment-copy">That <code>print</code> inherently produces two spaces: one explicitly from the string literal, one implicitly from the separator between items.  In Python 2.x you could hack out that second space within <code>calculate()</code> (via <code>sys.stdout.softspace = False</code>); in 3.x I don't believe there's any way without modifying the <code>print</code>.</span>
<span class="comment-copy">It does work on my editor but not on the coding platform. There might be some problem with them only. Thanks anyways!</span>
