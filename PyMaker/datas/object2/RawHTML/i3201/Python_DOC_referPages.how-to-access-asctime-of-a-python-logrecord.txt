<div class="post-text" itemprop="text">
<p>I have a logger and a class DuplicateFilter that filters messages that already were logged once. I would like to include the time when the logging happened into my filter but when I try to access the property asctime I get: <code>AttributeError: 'LogRecord' object has no attribute 'asctime'</code></p>
<p>Here a small example how I set up my logger:</p>
<pre><code>import logging
import logging.handlers as log_handlers
def setup_logger(filename):
    class DuplicateFilter(object):
        def __init__(self):
            self.msgs = set()

        def filter(self, record):
            if logger.level == 10:
                return True
            rv = True
            try:
                print(record.asctime)
                msg = record.threadName + " " + record.msg
                if msg in self.msgs:
                    rv = False
            except Exception as e:
                print(traceback.format_exc())
                return rv
            self.msgs.add(msg)
            return rv

    log_formatter = logging.Formatter("%(asctime)s [%(levelname)-5.5s] [%(threadName)-30.30s]   %(message)s")
    file_handler = log_handlers.TimedRotatingFileHandler(filename, encoding="UTF-8", when='W6', backupCount=12)
    file_handler.setFormatter(log_formatter)

    console_handler = logging.StreamHandler()
    console_handler.setFormatter(log_formatter)

    logger = logging.getLogger(filename)
    logger.propagate = False

    logger.addHandler(console_handler)
    logger.addHandler(file_handler)

    logger.setLevel(logging.INFO)

    dup_filter = DuplicateFilter()
    logger.addFilter(dup_filter)
    return logger


log = setup_logger("test.log")
for i in range(3):
    log.info("wow")
</code></pre>
<p>Now my records look like this: <code>2018-07-18 14:34:49,642 [INFO ] [MainThread                    ]   wow</code> They clearly have an asctime and I explicitly set the asctime property in the constructor of my Formatter. The only <a href="https://stackoverflow.com/questions/32301522/logrecord-does-not-have-expected-fields">question</a> similar to mine I found says </p>
<blockquote>
<p>To have message and asctime set, you must first call self.format(record) inside the emit method</p>
</blockquote>
<p>but doesn't the logging.Formatter do that when you specify the log string the way I did with <code>%(asctime)s</code>?</p>
<p>EDIT: running.t was right, I just didn't understand what the documentation meant. I solved it by adding my formater to my filter and calling the format function at the beginning:</p>
<pre><code> def __init__(self, formatter):
     self.msgs = {}
     self.formatter = formatter

 def filter(self, record):
     self.formatter.format(record)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <a href="https://docs.python.org/3/library/logging.html#filter-objects" rel="nofollow noreferrer">filter objects section</a> of pyton logging module documentation I found following note: </p>
<blockquote>
<p>Note that filters attached to handlers are consulted before an event is emitted by the handler, whereas filters attached to loggers are consulted whenever an event is logged (using debug(), info(), etc.), <strong>before sending an event to handlers</strong>. This means that events which have been generated by descendant loggers will not be filtered by a logger’s filter setting, unless the filter has also been applied to those descendant loggers.</p>
</blockquote>
<p>Your filter is added to logger, while formatters are added to handlers. So in my opinion your <code>filter</code> method is applied before any of formatter you specified.</p>
<p>BTW, shouldn't your <code>DuplicateFilter</code> inherit from <code>logging.Filter</code>?</p>
</div>
<span class="comment-copy">But doesn't the line logger.addFilter(dup_filter) add it to the logger and not the handlers? I saw that line and I suspect this is the problem, but I'm unsure of the wording and how to fix it. And the docu says You don’t actually need to subclass Filter: you can pass any instance which has a filter method with the same semantics. so no need to inherit.</span>
<span class="comment-copy"><i>filters attached to loggers are consulted (...) before sending an event to handlers</i> . What is not clear in that sentence? First log record is emmited, then it is filtered using your <code>DuplicateFilter.filter()</code> method. And after that it is passed to handlers, and formatters are used inside handlers so <b>after</b> filter is executed. It means that <code>self.format(record)</code> was not executed by the time <code>filter</code> is run</span>
<span class="comment-copy">I don't know, but that is the struggle of not understanding, you don't understand what you don't understand. But with your wording I understood the process behind and could solve the problem, if you don't mind accept my edit to your answer and I can accept your answer.</span>
<span class="comment-copy">Please edit your answer in the direction of my suggestion, if you refuse to add a code example please atleast verbally describe the answer. Currently this answer points in the right direction but is missing. If you improve it I will accept it.</span>
