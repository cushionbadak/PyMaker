<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15889131/how-to-find-the-cumulative-sum-of-numbers-in-a-list">How to find the cumulative sum of numbers in a list?</a>
<span class="question-originals-answer-count">
                    18 answers
                </span>
</li>
</ul>
</div>
<p>I have a list that contain days count in each month:</p>
<pre><code>month = [31,28,31,30,31,30,31,31,30,31,30,31]
</code></pre>
<p>I want to transform list above. Each element of the new list is equal to the sum of all elements in a particular position. For example, first element should be the same (31), second = 28+31, third = 31+28+31 and so on.
Desired output:</p>
<pre><code>month = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365]
</code></pre>
<p>How to do it? I tried variations with a for loop and append method, but I did not succeed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Though this isn't tagged <code>numpy</code>, I think you would greatly benefit from <code>np.cumsum</code> (cumulative sum) rather than looping:</p>
<pre><code>import numpy as np

np.cumsum(month)

array([ 31,  59,  90, 120, 151, 181, 212, 243, 273, 304, 334, 365])
</code></pre>
<p>Alternatively, you could use this list comprehension:</p>
<pre><code>[sum(month[:i+1]) for i in range(len(month))]

[31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365]
</code></pre>
<p>As pointed out by @PatrickHaugh, you could also use <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer">itertools.accumulate</a>:</p>
<pre><code>import itertools

# Cast it to list to see results (not necessary depending upon what you want to do with your results)
list(itertools.accumulate(month))

[31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365]
</code></pre>
</div>
<span class="comment-copy">thanks, that` s exactly what i need (list comprehension)</span>
<span class="comment-copy">Glad I could help!</span>
<span class="comment-copy">I would use <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer"><code>itertools.accumulate</code></a> over importing <code>numpy</code> (Assuming you're using Python &gt;= 3.2)</span>
<span class="comment-copy">Thanks @PatrickHaugh, I included it in my edited answer (with credit :))</span>
