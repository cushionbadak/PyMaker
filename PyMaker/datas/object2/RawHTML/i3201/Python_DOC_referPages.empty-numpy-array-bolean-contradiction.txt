<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19389490/how-do-pythons-any-and-all-functions-work">How do Python's any and all functions work?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I accidentally found something in Numpy, which I can't really understand. If I check an empty Numpy array for any true value</p>
<pre><code>    np.array([]).any()
</code></pre>
<p>it will evaluate to false, whereas if I check all values to be true</p>
<pre><code>    np.array([]).all()
</code></pre>
<p>it evaluates to true. This appears weird to me since no value is true but at the same time all values are true...</p>
</div>
<div class="post-text" itemprop="text">
<p>The logic you are seeing is not specific to NumPy. This is a Python convention which has been implemented in NumPy:</p>
<ul>
<li><code>any</code> returns <code>True</code> if any value is <code>True</code>. Otherwise <code>False</code>.</li>
<li><code>all</code> returns <code>True</code> if no value is <code>False</code>. Otherwise <code>True</code>.</li>
</ul>
<p>See the <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">pseuedo-code in the docs</a> to see the logic in pure Python.</p>
<p>In the case of <code>np.array([]).any()</code> or <code>any([])</code>, there are no <code>True</code> values, because you have a 0-dimensional array or a 0-length list. Therefore, the result is <code>False</code>.</p>
<p>In the case of <code>np.array([]).all()</code> or <code>all([])</code>, there are no <code>False</code> values, because you have a 0-dimensional array or a 0-length list. Therefore, the result is <code>True</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This isn't a bug, it returns <code>True</code> because all values are not equal to zero which is the criteria for returning <code>True</code> see the following <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.all.html" rel="nofollow noreferrer">note</a>:</p>
<blockquote>
<p>Not a Number (NaN), positive infinity and negative infinity evaluate
  to True because these are not equal to zero.</p>
</blockquote>
<p>compare with the following:</p>
<pre><code>In[102]:

np.array([True,]).all()
Out[102]: True
</code></pre>
<p>This would be equivalent to an array full of <code>NaN</code> which would return <code>True</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This is a normal behavior.</p>
<p>It is not possible to find a value that is true, so <code>np.array([]).any()</code> is False</p>
<p>For every value in the array, this value is False (It is easy to check, because there are no values in the array, so you don't have to check anything).</p>
</div>
<span class="comment-copy">I didn't think it was a bug. I just could not understand it. But now it makes sense. So while any() is searching for true's all() is searching for false's. Thank you for your help...</span>
<span class="comment-copy">I think the possible dupe: <a href="https://stackoverflow.com/questions/19389490/how-do-pythons-any-and-all-functions-work" title="how do pythons any and all functions work">stackoverflow.com/questions/19389490/â€¦</a> explains the behaviour, so I think this is the convention that <code>numpy</code> is following, we could mark this as a dupe but let's see if others agree</span>
