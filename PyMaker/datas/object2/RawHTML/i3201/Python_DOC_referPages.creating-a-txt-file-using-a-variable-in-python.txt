<div class="post-text" itemprop="text">
<p>I'm working on a program for school that asks the user what they would like to name a file and then I'm supposed to write to that file.</p>
<p>So far I have this:</p>
<pre><code>dream_file = input("What file name would you like to save the cards? ")
dream_file = open(dream_file, 'w')

dream_file.write(str(dream_hand1))
print(dream_file)

dream_file.close()
</code></pre>
<p>When I run it I get this error: 
&lt;_io.TextIOWrapper name='dream' mode='w' encoding='US-ASCII'&gt;</p>
<p>And as far as I know the file never gets created. </p>
</div>
<div class="post-text" itemprop="text">
<p>A file is definitely being written, but as others have mentioned you are simply printing out the string representation of the file handle's python representation. If you want to print the file contents, you only need to make a couple changes.</p>
<pre><code># it is poor practice to reuse variable names
# for completely different things. It is best
# to differentiate your file path and the file
# handler itself.
dream_file_path = input("What file name would you like to save the cards? ")

# w+ allows reading and writing of files
dream_file = open(dream_file_path, 'w+')

dream_file.write(str(dream_hand1))

# seek 0 brings you back from where you just
# wrote (end of the file), to the beginning
dream_file.seek(0)

# .read() simply reads the entire file as a string
print(dream_file.read())

dream_file.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That's not an error. An error would come with a clear error message and it would have a stack trace, along with lines of code and whatnot. I think that what you have here is what comes out when you do</p>
<pre><code>print(dream_file)
</code></pre>
<p>That statement doesn't print the file contents. In fact, it can't, because you're opening the file in <code>write</code> mode. Instead, it prints the string representation of the <code>dream_file</code>, which is an object of type <code>_io.TextIOWrapper</code>. If you want to print the string you just put into the file, you can instead do</p>
<pre><code>print(str(dream_hand1))
</code></pre>
<p>Try looking for the new file in the folder your code is located in, or exploring the <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">input and output</a> functionality of python to get a better understanding of how it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>your file was created by using the <code>'w'</code> in the open function , and " &lt;_io.TextIOWrapper name='dream' mode='w' encoding='US-ASCII'&gt; " comes from <code>print(dream_file)</code> wich means dream_file is a _io.textIOWrapper Object.</p>
<p>check the directory in that your python is, you should find a file named as you input and with <code>dream_hand1</code> data inside.</p>
</div>
<span class="comment-copy">What  is <code>dream_hand1</code>? Are you sure this is your entire relevant code?</span>
<span class="comment-copy">What is dream_hand1?</span>
<span class="comment-copy">It's a variable that I have to write to the file.</span>
<span class="comment-copy">the rest of the code is in a function. seems like it's too long for me to post the whole thing.</span>
<span class="comment-copy"><code>&lt;_io.TextIOWrapper name='dream' mode='w' encoding='US-ASCII'&gt;</code> is not an error; it's the output of <code>print(dream_file)</code></span>
<span class="comment-copy">'w' and 'w+' do the same thing, right?</span>
<span class="comment-copy">also we haven't learned about "seek" so i'm not able to use that.</span>
<span class="comment-copy">'w' opens a file for writing, and 'w+' opens for reading and writing.</span>
<span class="comment-copy">but thanks for clearing that up for me!</span>
<span class="comment-copy">No problem. Although you say you haven't learned it yet, your professor is not likely to think you were cheating or something for using the .seek() method on a file in python. Seek is only one of a handful of commonly used methods for a file handle including read, readlines, write, writelines, and seek, and all of these are described well in the python io documentation here: <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/inputoutput.html</a>. If anything not already taught was expressly forbidden then alright, but the use of .seek() is unlikely to cause any suspicion of cheating.</span>
