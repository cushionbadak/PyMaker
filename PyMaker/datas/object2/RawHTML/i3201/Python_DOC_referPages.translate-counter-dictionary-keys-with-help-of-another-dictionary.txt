<div class="post-text" itemprop="text">
<p>I'm new to Python and haven't been able to find the answer to it on the web.</p>
<p><strong>Problem:</strong> </p>
<p>I have a supposedly simple problem translating keys in one dictionary with help of another dictionary. </p>
<p><strong>This is what I try to do</strong></p>
<p>I have a counter dictionary called "cnt_domains" that includes a number of entries who look like this:</p>
<pre><code>[('p_1002095', 5405), ('p_1002780', 4719), ('p_1002590', 3410), ('p_1200050', 2615), ('', 2514), ('p_1002770', 2256), ('p_1001910', 1726), ('p_1002330', 1178), ('p_1002120', 960), ('p_100
2350', 896), ('p_1002980', 677), ('p_1002810', 592), ('p_1001460', 413), ('p_1002680', 335), ('p_1002630', 188), ('p_1002090', 144), ('p_1002490', 70), ('pc_1175', 43), ('TTTBT"', 26)]
</code></pre>
<p>Then I have a another dictionary containing the clear text values for keys in the dictionary above called "DictionaryReplaceValues" who looks like this:</p>
<pre><code>{'p_1002560': 'Utskr-Tätortskarta_Text', 'p_1002600': 'Stadskarta Utskrift', 'p_1002640': 'ESBO', 'p_1002660': 'Kartkombination Baskarta Husnummer', 'p_1002690': 'Ortofoto länet', '
p_442': 'Kulturhistorisk klassificering', 'p_1002730': 'Husnummer', 'p_1002760': 'Tekniska nämndhuset', 'p_1002380': 'Utskr-Kultur_Historisk', 'p_446': 'SB Byggnader och fastigheter', 'p_
1200015': '1930', 'p_1200016': '1934', 'p_1200017': '1940', 'p_1200018': '1956', 'p_1200019': '1976', 'p_1200020': '1855', 'p_1200053': 'K Byggnadsgeologisk karta ca 1980', 'p_1200063': '
K Underlagskarta för grundvattenskydd 1997', 'p_447': 'SB Stockholmskarta o BF', 'p_1200050': 'Park', 'p_1002980': 'Ortofoto 2017', 'p_1002790': 'Stockholmskarta_hybrid_raster', 'p_100281
0': 'Stockholmskarta_gra_forenklad_nt_raster', 'p_1002870': 'Utskr-Markdetaljer_Markhojder_1000', 'p_1001455': 'Fysisk modell', 'p_470': 'FB Byggnader och fastigheter', 'p_471': 'SH Byggn
ader och fastigheter', 'p_448': 'SHAB Karta', 'p_473': 'IDR Idrottsanläggningar', 'p_1002442': 'Kartkombination Planmodul', 'p_422': 'Kartblad', 'p_1200173': 'Kartblad Sweref99 18 00 1000
m-rutor', 'p_1005020': 'Stadens manér', 'p_1003030': 'Kartkombination Fysisk modell', 'p_478': 'SB Parkering nivå ', 'p_490': 'FSK Byggnader och fastigheter', 'p_1200300': 'FB Ackvisition
skarta', 'p_1200301': 'SB Ackvisitionskarta', 'p_1200302': 'SH Ackvisitionskarta', 'p_1002272': 'DigitalOP data', 'p_1004000': 'Kartkombination SHAB', 'p_1200520': 'Stadens manér utokad',
 'p_1001951': 'MF Naturvårdsprio', 'p_1005010': 'Kartkombination Stadens manér Total', 'p_1200303': 'Områdesskötsel', 'p_1002570': 'Stockholmskarta_Grå_Public_TS', 'p_1002590': 'Stockholm
skarta_Grå_nedtonad', 'p_1002620': 'Baskarta med fastigheter - utskrift', 'p_419': 'Fastighetskartan WMS', 'p_443': 'TK Upphandlingsområden', 'p_1002710': 'Bygglovkartan', 'p_1200000': '1
625', 'p_1200001': '1642', 'p_1200002': '1702', 'p_1200003': '1733', 'p_1200004': '1751', 'p_1200005': '1805', 'p_1200006': '1828', 'p_1200007': '1863', 'p_1200009': '1899', 'p_1200010': 
'1640', 'p_1200012': '1909', 'p_1200013': '1913', 'p_1200023': 'UTGÅR: xxxxxOrtofoto_natbutiken', 'p_1200033': 'K Grundvattenkartan 1996', 'p_1200043': 'K Geotekniska undersökningar', 'p_
1200073': 'K Räddningsverkets stabilitetsutredning 1998', 'p_1200051': 'Kartkombination Park', 'p_1002625': 'Baskarta med fastigheter för VA', 'p_1002780': 'Stockholmskarta_Gra_forenklad_
nedtonad', 'p_1002930': 'Regionskarta_Ajourföring', 'p_1002940': 'Signalering Tk_till_RN', 'p_1200163': 'UTGÅR:DELETEV7-BK-HJD_RH2000', 'p_1002800': 'Stockholmskarta_gra_forenklad_raster'
, 'p_1002820': 'Ortofoto 2015', 'p_1002830': 'Ortofoto 2006', 'p_1002840': 'Ortofoto 2005', 'p_1002850': 'Stadskarta_raster', 'p_1200153': 'Kartkombination Stockholms fastigheter'}
</code></pre>
<p>What I try to do is to replace the keys in the counter dictionary with the value for the corresbonding key in the cleartext dictionary. For example replacing 'p_1002095' with 'Stockholmskarta_hybrid_intern' as a key leaving the value count intact. </p>
<p>So the result should look like this:</p>
<pre><code>   [('Stockholmskarta_hybrid_intern', 5405), ('Stockholmskarta_Gra_forenklad_nedtonad', 4719), ('Stockholmskarta_Grå_nedtonad', 3410),.... , ('TTTBT', 26)]
</code></pre>
<p><strong>Please note</strong> that there is a number of keys ( for example "TTTBT") that is just in my counter dictionary "cnt_domains" but not in my "DictionaryReplaceValues" dictionary. I would like to include them in my new translated list "cnt_domains_newname" but they should of course not be translated into something else.       </p>
<p><strong>Here is my code for it:</strong></p>
<pre><code>cnt_domains_newname = dict((DictionaryReplaceValues[key], value) for (key, value) in cnt_domains.items())
</code></pre>
<p>But when I run it, it creates an KeyError: 'TTTBT' when I reach a key in my cnt_domains dictionary (like 'TTTBT') that doesn't exist in the DictionaryReplaceValues dictionary </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><code>dict.get</code></a> method. It gives you the possibility to define a default value in case the key is not present in the dictionary. Therefore your code should look like:</p>
<pre><code>cnt_domains_newname = dict((DictionaryReplaceValues.get(key, key), value) for (key, value) in cnt_domains.items())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if <code>cnt_domains</code> is actually a dictionary you could use a dictionary comprehension and use the <code>get()</code> method of dictionaries to "safely" try get the replacement value:</p>
<pre><code>cnt_domains_newname = {DictionaryReplaceValues.get(key, key):value for key, value in cnt_domains.items()}
</code></pre>
<p>Let us know if you want your result to actually be a dictionary or a list of tuples.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you want to loop over every tuple in cnt_domains (which is a list, not a dictionary as you said) and create a new dictionary with the right name and corresponding value. </p>
<pre><code>new_dict = dict()
for user, val in cnt_domains:
    username = DictionaryReplaceValues.get(user) # returns None if user is not found
    if username:
        # runs only if username is not None (i.e. it was found)
        new_dict(username) = val
</code></pre>
<p>The error that you're getting about TTTBT not being found is because you have to "safely" try to get the values from DictionaryReplaceValues. If a key is not found, you want to handle the case by not doing anything. By default if you try to index a dict with a key it doesn't have, an error will be thrown. The <code>.get()</code> method solves this by assigning a value (<code>None</code> by default) to be returned instead of an error if whatever you are trying to find is not in the dictionary. </p>
</div>
<span class="comment-copy">Hm ... i'm trying to understand the get function.</span>
<span class="comment-copy">It's like <code>d[key]</code>, except instead of raising a <code>KeyError</code> it can return a default value.  So <code>{}.get(key, 0)</code> will always be <code>0</code>, and <code>d.get(key, key)</code> will return <code>key</code> if there is no value for <code>key</code> in <code>d</code></span>
<span class="comment-copy">That was an elegant solution and it almost works with my other code. Do you know if there any posibility to create a new counter dictionary instead of a normal dictionary?</span>
<span class="comment-copy">Counter object can be instantiated by passing a dictionary to the constructor, i.e. in your example: new_counter = Counter(cnt_domains_newname)</span>
<span class="comment-copy">That works great! Thank you!</span>
