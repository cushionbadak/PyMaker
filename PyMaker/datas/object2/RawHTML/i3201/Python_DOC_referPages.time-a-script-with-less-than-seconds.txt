<div class="post-text" itemprop="text">
<p>i have this script but counts from seconds while the scripts ends in less than a second.</p>
<pre><code>import time
start = time.time()
p=[1,2,3,4,5]
print('It took {0:0.1f} seconds'.format(time.time() - start))
</code></pre>
<p><code>python 3.7</code> uses a new function that can do that. I have 3.6.5. How do i do that?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.perf_counter" rel="nofollow noreferrer"><code>time.perf_counter()</code>, available since Python 3.3</a>, lets you access a high-resolution wallclock.</p>
<pre><code>t0 = time.perf_counter()
time.sleep(.1)
print(time.perf_counter() - t0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It doesn't count in seconds. It counts in fractions of a second, it's just that the script ends faster than the precision allowed by the string formatted float, ie. much less than a second.</p>
<p>Try:</p>
<pre><code>import time
start = time.time()
p=[1,2,3,4,5]
time.sleep(0.5)
print('It took {0:0.1f} seconds'.format(time.time() - start))
</code></pre>
<p>Also, for shorter sleep you may want to increase the precision of your float formatter (eg <code>{0:0.3f}</code>), so that for shorter sleeps (eg <code>0.007</code>) you don't have a <code>0.0</code> printed to console.</p>
<pre><code>import time
start = time.time()
p=[1,2,3,4,5]
time.sleep(0.007)
print('It took {0:0.3f} seconds'.format(time.time() - start))
</code></pre>
<p>Or just remove the formatter entirely (As commented by Inder):</p>
<pre><code>import time
start = time.time()
p=[1,2,3,4,5]
time.sleep(0.007)
print ('It took ' + str(time.time()-start) + ' seconds')
</code></pre>
<p>See here for more details of timer resolution: <a href="https://docs.python.org/2/library/time.html" rel="nofollow noreferrer">https://docs.python.org/2/library/time.html</a></p>
</div>
<span class="comment-copy">Try <code>time.clock()</code></span>
<span class="comment-copy">@RohithS98 <code>time.clock()</code> is not wallclock time on UNIX systems.</span>
<span class="comment-copy">well really stupid thing i will say but if you just do a print(time.time()-start), its giving me results just fine</span>
<span class="comment-copy">@AKX Noted. Thanks</span>
<span class="comment-copy">why the sleep part?</span>
<span class="comment-copy">@user10092387 For demonstration purposes.</span>
