<div class="post-text" itemprop="text">
<p>I have lists <code>a</code> and <code>b</code></p>
<pre><code>a = [0.1, 0.3, 0.1, 0.2, 0.1, 0.1, 0.1]

b = [apple, gun, pizza, sword, pasta, chicken, elephant]
</code></pre>
<p>Now I want to create a new list c of 3 items</p>
<p>the 3 items are chosen form list b based on the probabilities in list a </p>
<p>the items should not repeat in list c </p>
<p>for example- output I am  looking for</p>
<pre><code>c = [gun,sword,pizza]
</code></pre>
<p>or</p>
<pre><code>c = [apple, pizza, pasta]
</code></pre>
<p><strong>note</strong>
(sum of all values of list a is 1,number of items in list a and b is the same, actually i have a thousand items in both list a and b and i want to select hundred items from the list based on probability assigned to them,python3  )</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>random.choices</code>:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; print(random.choices(
...     ['apple', 'gun', 'pizza', 'sword', 'pasta', 'chicken', 'elephant'], 
...     [0.1, 0.3, 0.1, 0.2, 0.1, 0.1, 0.1],
...     k=3
... ))
['gun', 'pasta', 'sword']
</code></pre>
<p>Edit: To avoid replacement, you can remove the selected item from the population:</p>
<pre><code>def choices_no_replacement(population, weights, k=1):
    population = list(population)
    weigths = list(weights)    
    result = []
    for n in range(k):
        pos = random.choices(
            range(len(population)), 
            weights,
            k=1
        )[0]
        result.append(population[pos])
        del population[pos], weights[pos]
    return result
</code></pre>
<p>Testing:</p>
<pre><code>&gt;&gt;&gt; print(choices_no_replacement(
...     ['apple', 'gun', 'pizza', 'sword', 'pasta', 'chicken', 'elephant'],
...     [0.1, 0.3, 0.1, 0.2, 0.1, 0.1, 0.1],
...     k=3
... ))
['gun', 'pizza', 'sword']
</code></pre>
</div>
<span class="comment-copy">If you're open to numpy then the answer is easy. Are you?</span>
<span class="comment-copy">Also, I'm not sure what this has to do with genetic algorithms or <code>fuzzywuzzy</code> so I'm removing those tags.</span>
<span class="comment-copy">yes open to numpy</span>
<span class="comment-copy">I'm not sure you need Numpy, just <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices()</code></a>.</span>
<span class="comment-copy">@Delgan the docs suggest that it uses replacement and there doesn't seem to be an argument to avoid it?</span>
<span class="comment-copy">The documentation suggests that this picks with replacement and I can't see a way to avoid that.</span>
<span class="comment-copy">@roganjosh added a way to do it</span>
<span class="comment-copy">I think it's just easier to use the numpy approach :) My "can't see a way to avoid that" was more in reference to <code>choices</code> not having an argument to prevent replacement. It seems some way behind the numpy method, but it's getting there :) Maybe Python 3.8 will fix it.</span>
