<div class="post-text" itemprop="text">
<p>I have this image:</p>
<p><a href="https://i.stack.imgur.com/DPm4x.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DPm4x.png"/></a></p>
<p>And I'm trying to write a function in Python that will return <code>True</code> if the image contains blue pixels, or <code>False</code> otherwise.
That image is just an example. I will have others were the blue colour can be slightly different. But they will always be blue letters over a black background.</p>
<p>So far I have this:</p>
<pre class="lang-py prettyprint-override"><code>def contains_blue(img):
    # Convert the image to HSV colour space
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    # Define a range for blue color
    hsv_l = np.array([100, 150, 0])
    hsv_h = np.array([140, 255, 255])
    # Find blue pixels in the image
    #
    # cv2.inRange will create a mask (binary array) where the 1 values
    # are blue pixels and 0 values are any other colour out of the blue
    # range defined by hsv_l and hsv_h
    return 1 in cv2.inRange(hsv, hsv_l, hsv_h)
</code></pre>
<p>The function always returns <code>False</code> because no <code>1</code> values are found in the array returned by <code>cv2.inRange</code>. Maybe the range defined by <code>hsv_l</code> and <code>hsv_h</code> is not good? I took it from here: <a href="https://stackoverflow.com/questions/17878254/opencv-python-cant-detect-blue-objects">OpenCV &amp; Python -- Can't detect blue objects</a></p>
<p>Any help is appreciated. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are not reading the <a href="https://docs.opencv.org/trunk/d2/de8/group__core__array.html#ga48af0ab51e36436c5d04340e036ce981" rel="nofollow noreferrer">documentation of inRange</a> :D</p>
<p>Which tells the following:</p>
<blockquote>
<p>That is, dst (I) is set to 255 (all 1 -bits) if src (I) is within the
  specified 1D, 2D, 3D, ... box and 0 otherwise.</p>
</blockquote>
<p>and you check for 1</p>
<pre><code># cv2.inRange will create a mask (binary array) where the 1 values
# are blue pixels and 0 values are any other colour out of the blue
# range defined by hsv_l and hsv_h
return 1 in cv2.inRange(hsv, hsv_l, hsv_h)
</code></pre>
<p>So the solution is to change it to:</p>
<pre><code>return 255 in cv2.inRange(hsv, hsv_l, hsv_h)
</code></pre>
<p>I tested it with your image and returns true, also with a black and white image (BGR though) and returns false.</p>
<p>In my opinion the blue ranges you have chosen are a little far to the violet side... You may use a hsv colorpicker like this one <a href="http://colorizer.org/" rel="nofollow noreferrer">http://colorizer.org/</a> and select the ranges you will like. Just rememeber OpenCV uses H -&gt; Hue / 2 and  S and V are like percentages (0-100) and you just divide them by 100 (0-1.) and multiply them by 255.  </p>
</div>
<div class="post-text" itemprop="text">
<p>You could have just used <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.any.html" rel="nofollow noreferrer"><code>np.any()</code></a> instead. It will return <code>True</code> if any one pixel has a value of 255.</p>
<p>So instead of </p>
<p><code>return 1 in cv2.inRange(hsv, hsv_l, hsv_h)</code>,</p>
<p>you can just add the following:</p>
<p><code>return np.any(cv2.inRange(hsv, hsv_l, hsv_h))</code></p>
<p><strong>Update:</strong></p>
<p>As @AKX mentioned in the comments you could rather try out the following:</p>
<p><code>return cv2.inRange(hsv, hsv_l, hsv_h).any()</code></p>
</div>
<span class="comment-copy">You don't need numpy's <code>np.any</code> for this, just regular ol' Python standard library <code>any()</code> will do.</span>
<span class="comment-copy">@AKX updated the answer! thanks!</span>
<span class="comment-copy">I meant the any global (<a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#any</a>) but that works too! :D</span>
