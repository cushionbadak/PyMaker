<div class="post-text" itemprop="text">
<p>I have a function that will open a terminal:</p>
<pre><code>def open_next_terminal():
    import subprocess

    def rand(path="/tmp"):
        acc = string.ascii_letters
        retval = []
        for _ in range(7):
            retval.append(random.choice(acc))
        return "{}/{}.sh".format(path, ''.join(retval))

    file_path = rand()
    with open(file_path, "a+") as data:
        data.write(
'''
#!/bin/bash
"$@"
exec $SHELL
'''
        )
    subprocess.call(["sudo", "bash", "{}".format(file_path)])
    return file_path
</code></pre>
<p>I want to run a command in this newly opened terminal before anything is done in it. For example:</p>
<pre><code>subprocess.call(["sudo", "bash", "{}".format(file_path)]) #&lt;= is called
ls #&lt;= is run
 #&lt;= some output of files and folders
root@host:~#  #&lt;= the shell is now available
</code></pre>
<p>Does subprocess allow a way for me to run a "first command" during the initialization of the shell?</p>
</div>
<div class="post-text" itemprop="text">
<p>Simply pass the <code>shell=True</code> parameter to <code>subprocess.call</code>, and you can run multiple commands (delimited by semicolons or newlines) as a single string.</p>
<pre><code>subprocess.call('your_first_command.sh; your_real_work.sh', shell=True)
</code></pre>
</div>
<span class="comment-copy">this allows command injection.</span>
<span class="comment-copy">Command injection is possible only if your command string is derived from user inputs. And even it is derived from user inputs, you can use <a href="https://docs.python.org/3/library/shlex.html#shlex.quote" rel="nofollow noreferrer"><code>shlex.quote</code></a> to escape the portions that are from user inputs.</span>
<span class="comment-copy">So other then this, there is no way to run a "first command"?</span>
<span class="comment-copy">Not that I can think of, unfortunately.</span>
