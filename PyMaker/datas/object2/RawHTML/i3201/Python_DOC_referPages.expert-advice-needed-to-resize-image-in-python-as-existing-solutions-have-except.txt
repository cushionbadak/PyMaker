<div class="post-text" itemprop="text">
<p>Now there are 3 solutions to resize a image:
1st: </p>
<pre><code>        img = Image.open('C:\\Users\\Vishal\\Desktop\\Test\\xyx.jpg')
        img = img.resize((90, 90), Image.ANTIALIAS)
        img.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg')
</code></pre>
<p>2nd :</p>
<pre><code>        img = Image.open('C:\\Users\\Vishal\\Desktop\\Test\\xyx.jpg')
        bg = Image.new("RGB", img.size, (255, 255, 255))
        bg.paste(img, img)
        bg = bg.resize((90, 90), Image.ANTIALIAS)
        bg.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg')
</code></pre>
<p>and the 3rd:</p>
<pre><code>        img = Image.open('C:\\Users\\Vishal\\Desktop\\Test\\xyx.jpg')
        img = img.convert('RGB')
        img = img.resize((90, 90), Image.ANTIALIAS)
        img.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg')
</code></pre>
<p>For cases, The problems with 1st comes as error "cannot write mode RGBA as JPEG",
for 2nd it comes as "bad transparency mask" and the problem with third is that it works in all cases but the images with transparency after resizing get their background as black which is not acceptable,also distorted colors pixels can be seen near the edges.
So what can be the universal solution to these problems?</p>
<p>Note:(The output format required is .jpg and the images to be resized varies in the format as they are getting scraped, mostly .png with transparent background)</p>
<p><strong>Update:</strong>
As per comments I have placed an if else based on alpha condition as:</p>
<pre><code>img = Image.open('C:\\Users\\Vishal\\Desktop\\Test\\xyx.jpg")
has_alpha = img.mode == 'RGBA'
print(has_alpha)
if has_alpha == True:
    bg = Image.new("RGB", img.size, (255, 255, 255))
    bg.paste(img, img)
    bg = bg.resize((80, 80), Image.ANTIALIAS)
    bg.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg", quality=92)
else:
    img.resize((80, 80), Image.ANTIALIAS)
    img.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg", quality=92)
</code></pre>
<p>It is working fine, <strong>But In some rare cases</strong>, has_alpha being false, I'm getting following error.</p>
<pre><code>False
Traceback (most recent call last):
  File "C:\Intel\lib\site-packages\PIL\JpegImagePlugin.py", line 620, in _save
    rawmode = RAWMODE[im.mode]
KeyError: 'P'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "resize.py", line 33, in &lt;module&gt;
    img.save('C:\\Users\\Vishal\\Desktop\\Test\\xyz.jpg", quality=92)
  File "C:\Intel\lib\site-packages\PIL\Image.py", line 1935, in save
    save_handler(self, fp, filename)
  File "C:\Intel\lib\site-packages\PIL\JpegImagePlugin.py", line 622, in _save
    raise IOError("cannot write mode %s as JPEG" % im.mode)
OSError: cannot write mode P as JPEG
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As the PIL error message points out, JPEG does not support transparency. To handle images that use transparency you need to paste them onto a RGB background image. That's what your 2nd option does: <code>Image.new("RGB", img.size, (255, 255, 255))</code> creates a new image of the same size as <code>img</code>, with all the pixels set to <code>(255, 255, 255)</code>, which is white. (You can also use strings to specify colors to PIL).</p>
<p>So to do this resizing and conversion task correctly you need to determine whether or not the image has transparency. You do that by checking the <code>Image.mode</code> string. If it's "RGBA", then the image has transparency. Here's a short demo, which uses a medium light grey for the background. I use the <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.suffix" rel="nofollow noreferrer"><code>pathlib</code></a> module to create the JPEG file name from the input file name. This module is available in Python 3.4+.</p>
<h3>Update</h3>
<p>The original version of this code did not handle palette-mapped images, but this new version does, including palette-mapped images with transparency.</p>
<pre><code>def resize_to_jpg(fname, newsize, background):
    img = Image.open(fname)
    #img.show()

    print('Resizing', fname, 'Mode =', img.mode) 

    if img.mode == "P":
        # Handle palette-mapped images
        if 'transparency' in img.info:
            img = img.convert('RGBA')
        else:
            img = img.convert('RGB')

    if img.mode == "RGBA":
        # The image has transparency
        out = Image.new("RGB", img.size, background)
        # Use the image's own alpha channel as the mask
        out.paste(img, mask=img)
    else:
        out = img
    out = out.resize(newsize, Image.ANTIALIAS)
    #out.show()

    # Construct output file name
    outname = str(PurePath(fname).with_suffix('.jpg'))
    out.save(outname, quality=90, optimize=True)
    print(outname, 'saved')

newsize = (120, 120)
background = (192, 192, 192)

files = (
    'RhombicPlain.png', 
    'RhombicAlpha.png', 
)
for fname in files:
    resize_to_jpg(fname, newsize, background)       
</code></pre>
<p><strong>output</strong></p>
<pre><code>Resizing RhombicPlain.png Mode = RGB
RhombicPlain.jpg saved
Resizing RhombicAlpha.png Mode = RGBA
RhombicAlpha.jpg saved
</code></pre>
<p>Here are the input images, RhombicPlain.png and RhombicAlpha.png, which I created using POV-Ray.</p>
<p><a href="https://i.stack.imgur.com/OOxCO.png" rel="nofollow noreferrer"><img alt="RhombicPlain.png" src="https://i.stack.imgur.com/OOxCO.png"/></a>
<a href="https://i.stack.imgur.com/jgypE.png" rel="nofollow noreferrer"><img alt="RhombicAlpha.png" src="https://i.stack.imgur.com/jgypE.png"/></a></p>
<p>Here are the output images, RhombicPlain.jpg and RhombicAlpha.jpg</p>
<p><a href="https://i.stack.imgur.com/6VyR6.jpg" rel="nofollow noreferrer"><img alt="RhombicPlain.jpg" src="https://i.stack.imgur.com/6VyR6.jpg"/></a>
<a href="https://i.stack.imgur.com/FLw9U.jpg" rel="nofollow noreferrer"><img alt="RhombicAlpha.jpg" src="https://i.stack.imgur.com/FLw9U.jpg"/></a></p>
</div>
<span class="comment-copy">How can there be a universal solution? If you convert images with transparency to a form without transparency then you're throwing away information and something has to change. If the default black background is unacceptable then you need to select a different background. Would a white &amp; grey checkered background be acceptable?</span>
<span class="comment-copy">I didn't gave a try to different background yet, what do I need to change to do that? please suggest.</span>
<span class="comment-copy">Applied the solution but some exceptions are still there.</span>
<span class="comment-copy">Will Wait ...Thanks BTW, for your time.</span>
<span class="comment-copy">Got the Same Error with this code ..: <code>Mode = P Traceback (most recent call last):   File "C:\Intel\lib\site-packages\PIL\JpegImagePlugin.py", line 620, in _save     rawmode = RAWMODE[im.mode] KeyError: 'P'  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File "resize.py", line 62, in &lt;module&gt;     resize_to_jpg(fname, newsize, background)   File "resize.py", line 53, in resize_to_jpg     out.save(outname, quality=90, optimize=True)  OSError: cannot write mode P as JPEG</code></span>
<span class="comment-copy">Worked Perfectly.... Thanks Again.. I think this sums up to the universal.</span>
