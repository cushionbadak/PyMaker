<div class="post-text" itemprop="text">
<h3>Context</h3>
<p><a href="http://mypy-lang.org" rel="nofollow noreferrer"><code>mypy</code></a> is great to check whether types are handled correctly.</p>
<pre><code># example.py

def test(string: str):
    return str

if __name__ == '__main__':
    test('19')
    test(19)
</code></pre>
<p>This will work for the first case, but not for the second one.</p>
<pre><code>&gt;&gt; mypy example.py
example.py:6: error: Argument 1 to "test" has incompatible type "int"; expected "str"
</code></pre>
<p>However, just running this via</p>
<pre><code>&gt;&gt; python example.py
</code></pre>
<p>does not raise any errors.</p>
<h3>Question</h3>
<p>Is it possible to use the optional static typing in python to raise errors when the code is actually executed?</p>
<p>I was hoping to use this e.g. to check variable types in <a href="https://docs.python.org/3/library/unittest.html#module-unittest" rel="nofollow noreferrer"><code>unittests</code></a>, where it would be much easier than having various <code>if not isinstance(...)</code> statements.</p>
</div>
<div class="post-text" itemprop="text">
<p>In short: Python does not check your types even if you have included type-hints.</p>
<p>Type-Hinting has been introduced to provide the option for <strong>static</strong> type-checking. This helps you get rid of many errors before even running your code. But you will need to use a static type-checker like <a href="https://mypy.readthedocs.io/en/latest/" rel="nofollow noreferrer">mypy</a> to do this. Python is still a dynamically typed language and therefore doesn't do any type-checking itself.</p>
</div>
