<div class="post-text" itemprop="text">
<p>Running python 2.7 and trying to calculate the hash of two different files into variables so I can compare and use in a boolean loop.  To start off I generate content in file1, then I copy file1 to file2 and run against both file1 and file2, I get different hashes with python hashlib, but running powershell get-filehash against the two different filenames I get the same hash (as I expected).</p>
<p>There is no content difference between file1 and file2, just create file1 with content and copy to file2.</p>
<pre><code>import sys
import hashlib

goldresulthashVar = None
testresulthashVar = None


def sha256hashcheck1():
    with open( 'goldresult.txt' ,"rb") as f:
        # Read and update hash string value in blocks of 4K
        for byte_block in iter(lambda: f.read(4096),b""):
            sha256_hash.update(byte_block)
        goldresulthashVar = sha256_hash.hexdigest()
        print goldresulthashVar

def sha256hashcheck2():
    with open( 'test.txt' ,"rb") as f2:
        # Read and update hash string value in blocks of 4K
        for byte_block in iter(lambda: f2.read(4096),b""):
            sha256_hash.update(byte_block)
        testresulthashVar = sha256_hash.hexdigest()
        print testresulthashVar     

sha256hashcheck1()
sha256hashcheck2()
</code></pre>
<p>Any pointers or suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Verified the size of the text files my script was intending to hash and switched to a small single file read with no update per Andrej's pointe to the docs.</p>
<pre><code>def sha256hashcheck1():
    with open( 'goldresult.txt' ,"rb") as f:
        bytes = f.read() # read entire file as bytes
        goldresulthashVar = hashlib.sha256(bytes).hexdigest();
        print(goldresulthashVar)
</code></pre>
<p>Getting good confirm able hashes across multiple files now.</p>
</div>
<span class="comment-copy">What is this <code>sha256_hash</code>? If you call consecutive <code>update(a)</code> and <code>update(b)</code> you just doing <code>update(a+b)</code> <a href="https://docs.python.org/3/library/hashlib.html#hashlib.hash.update" rel="nofollow noreferrer">docs.python.org/3/library/hashlib.html#hashlib.hash.update</a>. Try <code>hashlib.sha256(byte_block).hexdigest()</code></span>
<span class="comment-copy">Sorry - missed one var declare when I pasted my script, also doing: sha256_hash = hashlib.sha256() as a declared var at the start of the script ... reading through your hashlib citation now, ty</span>
