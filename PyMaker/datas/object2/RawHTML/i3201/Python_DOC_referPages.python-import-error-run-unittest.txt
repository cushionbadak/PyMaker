<div class="post-text" itemprop="text">
<p>Why am I getting import error for a module I have in the project. All the packages are under the project, they all have __init __.py and other scripts do not give the same error. Python version is 3.6. Code was written in Unix environment.</p>
<p>Here is the import error I get. I am trying to run a test here.</p>
<pre><code>Ran 1 test in 0.001s

FAILED (errors=1)

Error
Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/usr/lib/python3.6/unittest/loader.py", line 34, in testFailure
    raise self._exception
ImportError: Failed to import test module: test_SMSHandler
Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/loader.py", line 153, in loadTestsFromName
    module = __import__(module_name)
  File "/home/sevvalboylu/server/app/api/test_SMSHandler.py", line 11, in &lt;module&gt;
    from middleware.services import Sender
ModuleNotFoundError: No module named 'middleware'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you are missing a project's root path in <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow noreferrer">PYTHONPATH</a></p>
<p>From the docs (<a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">Modules - The Module Source Path</a>)</p>
<blockquote>
<p>When a module named spam is imported, the interpreter first searches
  for a built-in module with that name. If not found, it then searches
  for a file named spam.py in a list of directories given by the
  variable sys.path. sys.path is initialized from these locations:</p>
<ul>
<li>The directory containing the input script (or the current directory
  when no file is specified). </li>
<li>PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH). </li>
<li>The installation-dependent default.</li>
</ul>
</blockquote>
<p>If this solution doesn't work for you, please post the project's tree to make it easier find the problem.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/32230490/django-importerror-no-module-named-middleware">Django ImportError: No module named middleware</a></span>
<span class="comment-copy">middleware is not found. Try "pip install middleware" first</span>
<span class="comment-copy">Middleware is a pyhton package and it is under the project path. Im afraid its not the problem here :/</span>
<span class="comment-copy">I didn't actually understand your suggestion here, do you mean I don't have middleware in my PYTHONPATH? How would I check that?</span>
<span class="comment-copy">@sevcodes yes, I mean just that. You can get PYTHONPATH content with the following command:  <code>python -c "import sys; print(sys.path)"</code></span>
<span class="comment-copy">check if your proejct's root directory, that contains <code>middleware</code> is there</span>
<span class="comment-copy">Okay I checked it, middleware is not there. How can I add it to path?</span>
<span class="comment-copy">Nvm I found the way, thanks for the idea! Tagging this one as the answer now</span>
