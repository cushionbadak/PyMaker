<div class="post-text" itemprop="text">
<p>Have created a simple text file with the contents bellow:</p>
<pre><code>1001
bread
20
10
1002
sugar
10
7
1003
ice
14
10
</code></pre>
<p>The following Python script bellow was meant to search and find a string within the text file and display the result. Where is the error coming from? what amendments can i do to the code?</p>
<pre><code>import re
with open('dbase.txt', 'r') as x:
    y=x.readlines()
    z=list(y)

    word = ['ice']
    for i in word:
        if re.search(i, z):
            print('found a match!')
        else:
            print('not found')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
FOUND = False
with open('dbase.txt', 'r') as x:
    for line in x.readlines():
        if line.strip() == 'ice':
            FOUND = True
            break

if FOUND:
    print("Found the ICE")
else:
    print("Couldn't find the ICE")
</code></pre>
<p>And the error you are seeing is because of the incorrect argument passed to the re.search function. It doesn't accept an array/list as an argument </p>
<p>see the doc <a href="https://docs.python.org/2/library/re.html#re.search" rel="nofollow noreferrer">here</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>You're searching a list but you probably want to search a string.</p>
<p>You don't need regex for this. In your case the best solution is probably.</p>
<pre><code>with open('dbase.txt') as file:
    words = ['ice']
    for line_number, line in enumerate(file, 1):
         split_line = line.split()  # a list of all words on that line
         for word in words:
              if word in split_line:
                  print('found "{}" on line {}'.format(word, line_number))
              else:
                  print('did not find "{}" on line {}'.format(word, line_number))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>readlines() is returning a list so <code>z=list(y)</code> is unnecessary.
If you want to read the file one line at a time you can simply use a for loop on it:</p>
<pre><code>import re
with open('dbase.txt', 'r') as x:
    word = ['ice'] #Â put it there to avoid redefining it for each line
    for line in x:
            for i in word:
                if re.search(i, line):
                    print('found a match!')
                else:
                    print('not found')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(blah.txt, "rt") as f:
#your code here
</code></pre>
<p>Read it all as text.</p>
</div>
<span class="comment-copy">With <code>y=x.readlines()</code> you already have a list, <code>z=list(y)</code> looks redundant. To read the whole file into a variable, you ned <code>z=x.read()</code> (remove <code>y=x.readlines()</code>). Do you mean to display <i>line</i> where <code>word</code>s are found or just <code>match!</code> for each <code>word</code> found in the whole text?</span>
<span class="comment-copy"><code>y = x.read()</code> and <code>for i in word: i in y</code> should be enough.</span>
<span class="comment-copy">Your <code>re.search</code> needs a pattern to match. <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.search</a></span>
<span class="comment-copy">Not necessarily showing line in which its found, but just finding it. Thank you.</span>
<span class="comment-copy">I would suggest changing the code and adding a split() to text because "dice" would return true</span>
<span class="comment-copy">Good point, edited</span>
