<div class="post-text" itemprop="text">
<p>Hi I have looked up a few recursive multiplication of 2 numbers in python, but none of them take into account the possibility of negative numbers or if they do they don't explain the entire steps.</p>
<p>I have coded the following the program but I am getting an error, can someone please let me know what is wrong with it?</p>
<pre><code>def mult(a,b):
    if a==0 | b==0:
        return 0
    elif a==1:
        return b
    elif a &gt; 0 &amp; b &gt;0:
        return b + mult(a-1,b)
    elif  a &lt; 0 &amp; b &gt; 0:
        return - b + mult(a+1,b))
    elif a &gt; 0 &amp; b &lt; 0:
        return - b + mult(a-1, b))
    else:
        return -b + mult(a+1, b)

print(mult(-4,5))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>|</code> and <code>&amp;</code> are bitwise operators, not logical operators, and their <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">(relatively) high precedence</a> means that <code>a &gt; 0 &amp; b &gt;0</code> is parsed as <code>a &gt; (0 &amp; b) &gt; 0</code>, which is not what you want.  Use <code>or</code> and <code>and</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have some python syntax errors and some sign problems. This works for mult(-4,5) and mult(5,-4).</p>
<pre><code>def mult(a,b):
    if a == 0 or b == 0:
         return 0
    elif a == 1:
        return b
    elif b == 1:
        return a
    elif a &gt;0 and b &gt; 0:
        return b + mult(a-1,b)
    elif a &lt; 0 and b &gt; 0:
        return -b+mult(a+1,b)
    elif a &gt; 0 and b &lt; 0:
        return b+mult(a-1,b)
    else:
        return b + mult(a+1,b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your elif statement, you're using a bitwise "and" operator rather than the logical and operator. Everywhere that you have "&amp;" replace it with "and"</p>
</div>
<span class="comment-copy">What is the error you are getting?</span>
<span class="comment-copy">Apart from anything else, the relevant operators in Python are <code>and</code> and <code>or</code>, not <code>&amp;</code> and <code>|</code>.</span>
<span class="comment-copy">I was getting "maximum recursion depth exceeded in comparison" but this was because my elif statements were not getting evaluated.</span>
<span class="comment-copy">Thanks I was looking for a JS equivalent for and &amp; and the first thing that came up on google search was &amp;, same goes for or (|| in JS).</span>
<span class="comment-copy">As mentioned above technically using &amp; isn't a "syntax error" and more just using something you shouldn't (bitwise operators versus logical operators)</span>
<span class="comment-copy">Yes I realized that, thanks for pointing out though. for a&lt;0 and b&gt;0 the correct statement should have been -b + mult(a+1,b). Thanks again!</span>
<span class="comment-copy">Also the in the else block it should be else: return -b + mult(a+1,b)</span>
<span class="comment-copy">This is Python.  There is no <code>&amp;&amp;</code>.</span>
<span class="comment-copy">My bad. Just edited</span>
