<div class="post-text" itemprop="text">
<p>Is there any Python equivalent of Scala's Case Class? Like automatically generating constructors that assign to fields without writing out boilerplate. </p>
</div>
<div class="post-text" itemprop="text">
<p>The current, modern way to do this (as of Python 3.7) is with a <a href="https://www.python.org/dev/peps/pep-0557" rel="noreferrer">data class</a>. For example, the Scala <code>case class Point(x: Int, y: Int)</code> becomes:</p>
<pre><code>from dataclasses import dataclass

@dataclass(frozen=True)
class Point:
    x: int
    y: int
</code></pre>
<p>The <code>frozen=True</code> part is optional; you can omit it to get a mutable data class. I've included it for parity with Scala's case class.</p>
<p>Before Python 3.7, there's <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="noreferrer"><code>collections.namedtuple</code></a>:</p>
<pre><code>from collections import namedtuple
Point = namedtuple('Point', ['x', 'y'])
</code></pre>
<p>Namedtuples are immutable, as they are tuples. If you want to add methods, you can extend the namedtuple:</p>
<pre><code>class Point(namedtuple('Point', ['x', 'y'])):
    def foo():
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>If you use <code>python3.7</code> you get data classes as <code>@dataclass</code>. Official doc here - <a href="https://docs.python.org/3/library/dataclasses.html" rel="nofollow noreferrer">30.6. dataclasses â€” Data Classes</a></strong></p>
<pre><code>from dataclasses import dataclass

@dataclass
class CustomerOrder(object):
  order_id: int
  customer_id: str
  item_name: str

order = CustomerOrder(1, '001', 'Guitar')
print(order)
</code></pre>
<p>Make sure to upgrade python3 to python 3.7.</p>
<p>In macos: <code>brew upgrade python3</code></p>
<p><strong>While above data class in scala looks like,</strong> </p>
<pre><code>scala&gt; final case class CustomerOrder(id: Int, customerID: String, itemName: String)
defined class CustomerOrder
</code></pre>
</div>
<span class="comment-copy">What do you mean by "implementing Scala's Case Class"? Are you writing a Scala compiler in Python? What do you mean by "equivalent of Scala case class"? Which if the myriad of properties of a Scala case class do you want to be equivalent? The static type checking? What do you mean by "class variables"? Scala doesn't have class variables. What do you mean by "without creating class instances"? In Scala, every value is an object, and every object is an instance of a class.</span>
<span class="comment-copy">I've edited your question to be more clear in the hope that it can be reopened. Feel free to roll back or edit if the new question doesn't match what you mean.</span>
<span class="comment-copy">And can <b><i>deeply</i></b> nested <code>dataclasses</code> or <code>namedtuples</code> be copied similarly to Scala's <code>case</code> <code>class</code>, e.g. like Scala can do using <a href="https://www.slideshare.net/knoldus/scala-lens-an-introduction" rel="nofollow noreferrer">lenses</a>?</span>
<span class="comment-copy">@ecoe I don't know lenses, but you can always post another question to find out.</span>
