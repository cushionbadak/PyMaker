<div class="post-text" itemprop="text">
<p>The python module <code>datetime.datetime</code> provides <code>strftime</code> and <code>strptime</code>.</p>
<p><code>datetime.date</code> provides only <code>strftime</code>.</p>
<p>Why is that?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.strptime</code></a> is a <em>class method</em> that <em>generates</em> <code>datetime</code> objects. Since a <code>datetime</code> is more general than a <code>date</code> object and the latter can be retrieved from the former via <code>.date()</code> and there is no need to reimplement this method (besides having a method called <code>date.strptime</code> would be quite confusing since it mixes terms "date" and "time" while it's actually just a date).</p>
<p>On the other hand <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime" rel="nofollow noreferrer"><code>datetime.strftime</code></a> and <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="nofollow noreferrer"><code>date.strftime</code></a> are <em>instance methods</em> that transform a given object. In order to provide the same functionality for <code>date</code> objects this methods needs to reimplemented (also because mapping <code>date -&gt; datetime</code> is ambiguous).</p>
<p>Note that in Python 3.7 there was the <a href="https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat" rel="nofollow noreferrer"><code>date.fromisoformat</code></a> <em>classmethod</em> added, as a convenience method for parsing specific date strings (inverse to <a href="https://docs.python.org/3/library/datetime.html#datetime.date.isoformat" rel="nofollow noreferrer"><code>date.isoformat</code></a>).</p>
</div>
<span class="comment-copy">In the <code>datetime.datetime</code> you are getting date <b>and time</b>. But in <code>datetime.date</code> you get <b>only the date part</b> of the datetime.</span>
<span class="comment-copy">I can only speculate, but I suppose it's probably because they didn't see the need to implement a dumbed down copy of <code>strptime</code> when you can simply do <code>datetime.strptime(...).date()</code>.</span>
