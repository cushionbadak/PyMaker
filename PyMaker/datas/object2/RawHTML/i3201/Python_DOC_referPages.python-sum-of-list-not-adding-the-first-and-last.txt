<div class="post-text" itemprop="text">
<pre><code>def sumfirstlast(num):
new_list = list(num)
for sum in new_list:
    total = int(new_list.pop(0)) + int(new_list.pop())
return(total)


number = input("Input number")
display = sumfirstlast(number)
print(display)
</code></pre>
<p>Why when i type 43682 it return 11 instead of 6 ? Since im adding the first and last number in the list</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe <code>total = int(new_list[0])) + int(new_list[len(new_list) - 1])</code> should work.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is the unnecessary <code>for</code> loop, combined with modifying the list:</p>
<pre><code>for sum in new_list:
    total = int(new_list.pop(0)) + int(new_list.pop())
</code></pre>
<p>If <code>new_list</code> is <code>['4', '3', '6', '8', '2']</code>, on the first iteration the total is correctly set to 6. However, you're still in the loop - total will be set once again, this time adding 3 and 8 together.</p>
<p>So your method should instead just add the first and last elements together, without any loop:</p>
<pre><code>total = int(new_list[0]) + int(new_list[-1])
</code></pre>
<p>Most of the time you should be getting items from a list using indexes, rather than with <code>pop()</code>. <code>pop</code> is primarily for removing items from the list; it only returns the item removed as a convenience.</p>
</div>
<span class="comment-copy">You need to convert your strings to integers, right now you are doing string concatenation</span>
<span class="comment-copy">oml simple stuff ! Thanks totally missed that !</span>
<span class="comment-copy">It's bad practice to use <code>sum</code> as a variable name, since there's already a builtin function called <code>sum()</code>. <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#sum</a>  (this is not the cause of this particular bug, but it is a common beginner mistake that can easily lead to hard to understand bugs)</span>
<span class="comment-copy">You problem is that you've got it in a <code>for</code> loop - you add the first and last elements together and remove them from the list, then do it again. So instead of adding the 4 and 2, you add the 3 and 8 together.</span>
<span class="comment-copy">Hello this works ! But can i ask what does this code mean ? int(new_list[len(new_list) - 1]) Sorry i'm pretty new to python and im having a hard time with list :(</span>
<span class="comment-copy"><code>new_list[-1]</code> is a better way to get the last element of the list.</span>
<span class="comment-copy">@RobWatts can i ask why new_list.pop() doesn't work in this case ?</span>
<span class="comment-copy"><code>new_list.pop()</code> will work but modifies <code>new_list</code> in the process which isn't really necessary and can make things confusing</span>
<span class="comment-copy">@RobWatts I see the change, don't want to basically copy your answer though</span>
