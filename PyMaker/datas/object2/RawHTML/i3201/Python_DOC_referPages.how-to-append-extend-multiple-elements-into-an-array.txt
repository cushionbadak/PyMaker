<div class="post-text" itemprop="text">
<p>I'm having issues trying to input headers into my array, I cannot append the array with headers of the values within the array. I've also attempted to use .extend, but it's also giving me issues.</p>
<pre><code>mylist = []

for i in jsonResponse['M']:
     if i['x'] == 'n':
          x = ((i['x']))
          y = ((i['x']['y']))
          z = ((i['x']['z']))

          mylist.append([x,y,z])

          import pandas as pd

          #panda related stuff
          df0 = pd.DataFrame(data=mylist)
          df0.to_excel(writer, sheet_name='Sheet1', header=True, index=False)
</code></pre>
<p>I'm trying to have: </p>
<pre><code>mylist.append('Header1': [x],['Header2': [y],['Header3': [z])
</code></pre>
<p>I've tried using the <code>.extend</code> as I would think it's the most appropriate, but it's giving me error. </p>
<p>The purpose of this is when I write the data to excel, it would be most ideal to have a header. The problem stems from opening the array from the very beginning above the JSON pull, I think i have to open the array, because it's a means to allocate memory to store the values. </p>
<p>I was thinking as a solution would be to create an array for value from the JSON pull meaning:</p>
<pre><code>x = []
y = []
z = []
for i in jsonResponse['M']:
     if i['x'] == 'n':
          x = ((i['x']))
          y = ((i['x']['y']))
          z = ((i['x']['z']))

          x.append('header1':[x])
          y.append('header2':[y])
          z.append('header3':[z]) 
</code></pre>
<p>But I don't know if that's going to work; I really don't want to go through that as it's a bit labor intensive, because I have a lot of json objects. </p>
<p>I'm new to Python and never wrote anything in a language before. I'm trying, I've spent most my time copying script from the documentation and other users attempting to parse together a workable code and at the same time trying to understand what i'm trying to do. </p>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is called a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> (or dict) in Python.</p>
<p>A <code>dict</code> allows you to create mappings like this:</p>
<pre><code>{'name': 'John', 'age': 30}
</code></pre>
<hr/>
<p>So, now all you have to do is you need to create a <code>dict</code> inside your for loop and then append that <code>dict</code> to <code>mylist</code>. </p>
<pre><code>for i in jsonResponse['M']:
    ...
    mylist.append({'Header1': x, 'Header2': y, 'Header3': z})
</code></pre>
</div>
<span class="comment-copy">Awesome, this really worked, I see my problem, I did try this at first, but it didn't work that's because i was implementing it like this:    mylist.append('header1':[x],'header2':[y],'header3':[z])  So my question, the brackets dictates the list is an array(list) or dictionary?</span>
<span class="comment-copy">@UsualSuspect7 Yes, most of the times it depends on the brackets. <code>tuple - (1, 2, 3)</code>, <code>list - [1, 2, 3]</code>, <code>dict - {'a': 1, 'b': 2, 'c': 3}</code>. There's another data type in Python called a <code>set</code>. It has the curly brackets similar to a <code>dict</code> but it doesn't have the mapping -  <code>set - {1, 2, 3}</code>.</span>
