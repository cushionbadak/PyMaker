<div class="post-text" itemprop="text">
<p>I have a nested dictionary like </p>
<pre><code>{  'A' : { 100 : [ 'apple' , 'mango'] , 
            98 : [ 'banana', 'grapes'], 
           101 : [ 'melon', 'peach'] }  , 
  'Bb' : {  16 : [ 'a' , 'm'] , 
            67 : [ 'b', 's'], 
             0 : [ 'm', 'p'] } }
</code></pre>
<p>I want the dictionary to be arranged according to the numbers..like 98 , 100 and 101 in ascended order. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try the following. First, iterate your dictionary and create a <code>OrderedDict</code> sorting the elements by key, and then create another <code>OrderedDictionary</code> using your outter dictionary:</p>
<pre><code>d = { 'A' : { 100 : [ 'apple' , 'mango'] , 98: [ 'banana', 'grapes'], 101: ['melon', 'peach'] }  , 'Bb' :  { 16 : [ 'a' , 'm'] , 67: [ 'b', 's'], 0: ['m', 'p'] }  }
for key, value in d.items():
    d[key] = OrderedDict(sorted(value.items()))
d = OrderedDict(sorted(d.items()))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>print(d)
OrderedDict([('A',
              OrderedDict([(98, ['banana', 'grapes']),
                           (100, ['apple', 'mango']),
                           (101, ['melon', 'peach'])])),
             ('Bb',
              OrderedDict([(0, ['m', 'p']),
                           (16, ['a', 'm']),
                           (67, ['b', 's'])]))])
</code></pre>
</div>
<span class="comment-copy">Dictionaries are not ordered data types, therefore can not be sorted.</span>
<span class="comment-copy">Also, what do you imagine would be a result of sorting a nested structure? e.g. <code>{"A": { 1: [], 3: [] }, "B": { 2: [] } }</code>? Because I really can't figure out what kind of result you expect.</span>
<span class="comment-copy">Perhaps you can shed some light on <i>why</i> you want to sort the dictionary? Do you want to <i>output</i> it in a sorted way?</span>
<span class="comment-copy">(@BcK: You could sort a dictionary by transforming it into a <code>collections.OrderedDict</code>, though.)</span>
<span class="comment-copy">FWIW, <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionaries in Python 3.7</a> now retain insertion order.</span>
