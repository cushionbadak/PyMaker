<div class="post-text" itemprop="text">
<p>need help on the highlighted lines in the python code:</p>
<pre><code>n = int(input())
student_marks = {}
for _ in range(n):
    name, *line = input().split() &lt;--- doubt
    scores = list(map(float, line)) &lt;--- doubt
    student_marks[name] = scores

print (student_marks)
</code></pre>
<p>The output which i get is below:</p>
<pre><code>2
abc 23 34 45
def 45 46 47
{'abc': [23.0, 34.0, 45.0], 'def': [45.0, 46.0, 47.0]}
</code></pre>
<p>Can you guys please help me explain the need for the marked line in the code. Couldn't quite get the concept.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>name, *line = input().split() &lt;--- doubt

input()  # reads single line of input
# 'abc 23 34 45'

.split()  # splits it into a list of whitespace separated tokens
# ['abc', '23', '34', '45']

name, *line = ...  # name is assigned first token, line a list of the remaining tokens
name  # 'abc'
line  #  ['23', '34', '45']

scores = list(map(float, line))  # maps float function onto the list of strings
scores  # [23.0, 34.0, 45.0]
</code></pre>
<p>Some references:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">str.split</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">input</a></li>
<li><a href="https://www.python.org/dev/peps/pep-3132/#id4" rel="nofollow noreferrer">starred assignment</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The line <code>name, *line = input().split()</code> splits the input by white spaces, assigning the first item into <code>name</code>, and the rest of the items are assigned to <code>line</code> as a list, which, in the next line <code>scores = list(map(float, line))</code>, gets mapped to a list of floating numbers into <code>scores</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>name, *line = "foo 23 34 45".split()
assert(name == "foo");
assert(line == ["23", "34", "45"])
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists</a></p>
<pre><code>scores = list(map(float, line))
assert(scores == [23.0, 34.0, 45.0])
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html</a></p>
</div>
<span class="comment-copy">Try to print them during execution</span>
<span class="comment-copy">why <code>line</code> needs to be unpacked before applying <code>map</code> function?</span>
<span class="comment-copy"><code>name, line = ...</code> will only work if you have an iterable with exactly two elements on the right hand side. That's why you need to assign line a dynamic length list.</span>
<span class="comment-copy">@raviraja <code>*line</code> isn't unpacking semantics here, rather it's more like arbitrary length assignment, meaning take the rest of the rvalues after the first, and assign it to a tuple called <code>line</code>.</span>
