<div class="post-text" itemprop="text">
<p>we can use if-else like this: <code>statement if condition else statement</code>,but there are some problems here I can't understand why?</p>
<ol>
<li><p>if i run <code>count += 1 if True else l = []</code>(count is defined already), then raise a error:</p>
<pre><code>File "&lt;ipython-input-5-d65dfb3e9f1c&gt;", line 1
count += 1 if True else l = []
                          ^
SyntaxError: invalid syntax
</code></pre></li>
</ol>
<p>Can not it be assigned value after else?</p>
<ol start="2">
<li><p>when run <code>count += 1 if False else l.append(count+1)</code>(note: count = 0, l = []), there is a error will be raise:</p>
<pre><code>TypeError    Traceback (most recent call last)
&lt;ipython-input-38-84cb28b02a03&gt; in &lt;module&gt;()
----&gt; 1 count += 1 if False else l.append(count+1)

TypeError: unsupported operand type(s) for +=: 'int' and 'NoneType'
</code></pre></li>
</ol>
<p>and the result of l is <code>[1]</code>.</p>
<p>As same condition, if I use if-else blockï¼Œthere are no error. Can you explain it the difference.</p>
</div>
<div class="post-text" itemprop="text">
<p>The "conditional expression" <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="noreferrer"><code>A if C else B</code></a> is not a one-line version of the if/else statement <a href="https://docs.python.org/3/reference/compound_stmts.html#the-if-statement" rel="noreferrer"><code>if C: A; else: B</code></a>, but something entirely different. The first will evaluate the <em>expressions</em> <code>A</code> or <code>B</code> and then return the result, whereas the latter will just execute either of the <em>statements</em> <code>A</code> or <code>B</code>.</p>
<p>More clearly, <code>count += 1 if True else l = []</code> is <em>not</em> <code>(count += 1) if True else (l = [])</code>, but <code>count += (1 if True else l = [])</code>, but <code>l = []</code> is not an expression, hence the syntax error.</p>
<p>Likewise, <code>count += 1 if False else l.append(count+1)</code> is not <code>(count += 1) if False else (l.append(count+1))</code> but <code>count += (1 if False else l.append(count+1))</code>. Syntactically, this is okay, but <code>append</code> returns <code>None</code>, which can not be added to <code>count</code>, hence the TypeError.</p>
</div>
<div class="post-text" itemprop="text">
<p>For your first error, you are trying to misuse a ternary expression. In Python, ternary expressions cannot contain <em>statements</em> they contain <strong>expressions</strong>. </p>
<p>As can be seen <a href="https://github.com/python/cpython/blob/master/Grammar/Grammar" rel="nofollow noreferrer">in Python's official grammar</a>, an assignment is a <strong>statement</strong>, and a method call is an <strong>expression</strong>.</p>
<p>In your samples, <code>l = []</code> is considered a statement, whereas <code>l.append(...)</code> is an expression.</p>
<p>For your second error, <code>list.append</code> returns <code>None</code>, not the list. Therefore, you are essentially trying to add <code>None</code> to either an integer, which is not permitted, hence the <code>TypeError</code>.</p>
<p>Lastly, please don't use the lowercase L's (<code>l</code>) or uppercase o's (<code>O</code>) as variable names. As stated in <a href="https://www.python.org/dev/peps/pep-0008/#id38" rel="nofollow noreferrer">PEP 8</a>, these can be extremely confusing variable names due to their similarity to 1's and 0's.</p>
</div>
<div class="post-text" itemprop="text">
<p>The one-line <code>if-else</code> statement in python is more like the ternary operator in other languages. It is not just a more compact version of an <code>if-else</code> block. The one-line <code>if-else</code> evaluates to a value, while the <code>if-else</code> block specifies conditions under which different actions should be taken. The single-line <code>if-else</code> statement is like a function that returns one value under some condition and another value if the condition is <code>False</code>.</p>
<p>So in your example, when you write <code>count += 1 if True else l = []</code>, what i think you mean is: </p>
<pre><code>if True:
    count += 1
else:
    l = []
</code></pre>
<p>But what this line is really doing is something like:</p>
<pre><code>if True:
    count += 1
else:
    count += l = []
</code></pre>
<p>Hence the syntax error.</p>
</div>
<span class="comment-copy"><code>... if ... else ...</code> is not a shorthand/one-line <code>if ...: ... else: ...</code>, but something entirely different.</span>
<span class="comment-copy">Related: <a href="//stackoverflow.com/q/394809">Does Python have a ternary conditional operator?</a> (The accepted answer actually explains the reason for this error)</span>
<span class="comment-copy"><code>x if y else z</code> is requires <i>expressions</i>, and you provide it an augmented assignment <i>statement</i>. Your fundamental misunderstanding is that it takes the form <code>statement if condition else statement</code>, rather it should always be <code>&lt;expression&gt; if &lt;expression&gt; else &lt;expression&gt;</code></span>
