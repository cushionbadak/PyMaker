<div class="post-text" itemprop="text">
<p>I am trying to construct a JSON variable <code>data</code>as below from two lists <code>component_list</code>and <code>exclude_component_list</code>as below,somehow I dont get the expected output shown below,where am I going wrong?how to fix this?</p>
<pre><code>component_list = ['%WiFi%', '%Fire%']
exclude_component_list =  ['%Marconi%', '%Server%']

data = {}
cname =""
ename =""
for name in component_list:
    cname += "\"name\"\:{\"like:%s\"%name}"

print cname
for name in exclude_component_list:
    ename += "\"name\":{\"like:%s\"%name}"

print ename

data = "\"component\":{\"any\":[{cname}],\"none\":[{ename}]}"

print data
</code></pre>
<p>CURRENT OUTPUT:-</p>
<pre><code>"name"\:{"like:%s"%name}"name"\:{"like:%s"%name}
"name":{"like:%s"%name}"name":{"like:%s"%name}
"component":{"any":[{cname}],"none":[{ename}]}
</code></pre>
<p>EXPECTED OUTPUT:-</p>
<pre><code>{
    "component": {
        "any": [{
                "name": {
                    "like": "%WiFi%"
                }
            },
            {
                "name": {
                    "like": "%Fire WiFi%"
                }
            }
        ],
        "none": [{
                "name": {
                    "like": "%Marconi%"
                }
            },
            {
                "name": {
                    "like": "%Server%"
                }
            }
        ]
    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>json</code> library to create a <code>json</code> string from a <code>dict</code></p>
<pre><code>In [234]: data = {'component':{}}

In [236]: component_list = ['%WiFi%', '%Fire%']
     ...: exclude_component_list =  ['%Marconi%', '%Server%']
     ...:
     ...:

In [237]: data['component']['any'] = [{'name': {'like': component}} for component in component_list]

In [238]: data['component']['none'] = [{'name': {'like': component}} for component in exclude_component
     ...: _list]

In [239]: data
Out[239]:
{'component': {'any': [{'name': {'like': '%WiFi%'}},
   {'name': {'like': '%Fire%'}}],
  'none': [{'name': {'like': '%Marconi%'}}, {'name': {'like': '%Server%'}}]}}

In [240]: import json

In [241]: json.dumps(data)
Out[241]: '{"component": {"any": [{"name": {"like": "%WiFi%"}}, {"name": {"like": "%Fire%"}}], "none": [{"name": {"like": "%Marconi%"}}, {"name": {"like": "%Server%"}}]}}'
</code></pre>
</div>
<span class="comment-copy">You are not using any new line or tab characters (i.e. <code>\n</code> or <code>\t</code>). So python will just print everything on one line. Have you thought about using the <code>json</code> and <code>pprint</code> module?</span>
<span class="comment-copy">@kstullich - No,havent thought about it,can you please be more specific on how to use them?</span>
<span class="comment-copy">Are you doing this as an exercise to teach yourself string formatting, or because you actually want some data encoded as JSON? If you just want some data encoded as JSON, just create a dict or list or whatever, then do <code>j = json.dumps(data)</code>. See <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">the docs</a> for more, but there's really not that much more to it.</span>
<span class="comment-copy">Why are you trying to construct the JSON encoded string manually? Why not build the data structure you desire and use the <code>json</code> module to produce the serialized data?</span>
<span class="comment-copy">Take a look at @aydow answer. In the end you can just call <code>pprint.pprint(data)</code> to prettify the output. Where <code>data</code> is the JSON string.</span>
<span class="comment-copy">I dont want to wrap <code>data</code> around {} in the final output ,is there a way to simply do this?</span>
<span class="comment-copy">if you don't have either <code>[]</code> or <code>{}</code> then it wouldn't be valid <code>json</code></span>
<span class="comment-copy">I know but I need fit in this into another bigger json object,for whatever reasons ,is there a way I can remove the <code>{}</code> and save it like a string variable</span>
<span class="comment-copy">a <i>bad</i> way to do it would be to go <code>json_data = json.dumps(data)[1:-1]</code></span>
<span class="comment-copy">alternatively, you could convert both json strings to <code>dict</code>s and then use <code>update</code> and convert back to json. i.e. <code>old_j = json.loads(old_json); old_j.update(data); new_json = json.dumps(old_j)</code></span>
