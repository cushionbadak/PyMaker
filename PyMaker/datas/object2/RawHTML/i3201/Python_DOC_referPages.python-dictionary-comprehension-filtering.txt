<div class="post-text" itemprop="text">
<p>I have a list of dictionaries, for instance :</p>
<pre><code>movies = [
{
"name": "The Help",
"imdb": 8.0,
"category": "Drama"
},
{
"name": "The Choice",
"imdb": 6.2,
"category": "Romance"
},
{
"name": "Colonia",
"imdb": 7.4,
"category": "Romance"
},
{
"name": "Love",
"imdb": 6.0,
"category": "Romance"
},
{
"name": "Bride Wars",
"imdb": 5.4,
"category": "Romance"
},
{
"name": "AlphaJet",
"imdb": 3.2,
"category": "War"
},
{
"name": "Ringing Crime",
"imdb": 4.0,
"category": "Crime"
}
]
</code></pre>
<p>I want to filter them by IMDB &gt; 5.5 :</p>
<p>I try this code:</p>
<pre><code> [ { k:v for (k,v) in i.items() if i.get("imdb") &gt; 5.5 } for i in movies]
</code></pre>
<p>and the output:</p>
<pre><code>[{'name': 'The Help', 'imdb': 8.0, 'category': 'Drama'},
 {'name': 'The Choice', 'imdb': 6.2, 'category': 'Romance'},
 {'name': 'Colonia', 'imdb': 7.4, 'category': 'Romance'},
 {'name': 'Love', 'imdb': 6.0, 'category': 'Romance'},
 {},
 {},
 {}]
</code></pre>
<p>When the IMDB is lower than 5.5, It returns an empty dictionary. any ideas? thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>A dictionary comprehension is not necessary to filter a list of dictionaries.</p>
<p>You can just use a list comprehension with a condition based on a dictionary value:</p>
<pre><code>res = [d for d in movies if d['imdb'] &gt; 5.5]
</code></pre>
<p>The way your code is written, the dictionary comprehension produces an empty dictionary in cases where <code>i['imdb'] &lt;= 5.5</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative to using list comprehension is using the <code>filter</code> function from the Python <code>builtins</code>. This takes in a function and an iterable, and returns a "filter object" that only keeps the items which, when passed through the function return True.</p>
<p>In this case, it would be:</p>
<pre><code>list(filter(lambda x:x["imdb"]&gt;5.5, movies))
</code></pre>
<p>I included the <code>list()</code> around everything to convert the filter object to a list you can use. If you want to learn more about the <code>filter</code> builtin, you can read about it <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Other answers have already provided better alternative ways of doing this but let's look at the way you were going about it and look at what was going on.</p>
<p>If I delete some things from your code, I get:</p>
<pre><code>[{} for i in movies}]
</code></pre>
<p>Looking at just that, should make it clear why a dictionary is created for each movie. You do have an <code>if</code> statement inside that dictionary, but because it is inside, it doesn't change whether it is being created.</p>
<p>To do this the way you were going about it, you'd essentially need to check twice making the first check irrelevant:</p>
<pre><code>[
   { k:v for (k,v) in i.items() if i.get("imdb") &gt; 5.5 } for i in movies if i.get("imdb") &gt; 5.5 
]
</code></pre>
<p>which can be simplified to just</p>
<pre><code>[
   { k:v for (k,v) in i.items()} for i in movies if i.get("imdb") &gt; 5.5
]
</code></pre>
<p>and now, since we aren't changing the item, just:</p>
<pre><code>[
   i for i in movies if i.get("imdb") &gt; 5.5
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are happy to use a 3rd party library, Pandas accepts a list of dictionaries via the <code>pd.DataFrame</code> constructor:</p>
<pre><code>import pandas as pd

df = pd.DataFrame(movies)
res = df[df['imdb'] &gt; 5.5].to_dict('records')
</code></pre>
<p>Result:</p>
<pre><code>[{'category': 'Drama', 'imdb': 8.0, 'name': 'The Help'},
 {'category': 'Romance', 'imdb': 6.2, 'name': 'The Choice'},
 {'category': 'Romance', 'imdb': 7.4, 'name': 'Colonia'},
 {'category': 'Romance', 'imdb': 6.0, 'name': 'Love'}]
</code></pre>
</div>
