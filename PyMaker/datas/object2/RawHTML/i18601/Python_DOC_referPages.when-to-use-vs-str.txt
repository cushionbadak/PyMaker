<div class="post-text" itemprop="text">
<pre><code>def mymath(a, b):
    print("Add: " + str(a+b))
    print("Multiply: " + str(a*b))
    print("Divide: ", a/b)
    print("Subtract: ", a-b)

mymath(10, 15)
</code></pre>
<p>I was wondering if it makes a difference in using <code>+ str(var1 + var2)</code> vs <code>, var1, var2</code>?  If it does, when should I be using one or the other?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/functions.html#print" rel="nofollow">Read the manual</a>:</p>
<blockquote>
<p>All non-keyword arguments are converted to strings like <code>str()</code> does and written to the stream, separated by <code>sep</code> and followed by <code>end</code>.</p>
</blockquote>
<p>So if you pass a <em>single</em> argument to <code>print</code> (e.g., <code>"Multiply: " + str(a*b)</code>), <code>sep</code> is not inserted between them. (So no extra space character.)</p>
<p>All these lines are the same (the difference being how many times <code>str</code> is called behind-the-scenes and how many intermediate strings are constructed):</p>
<pre><code>print("Multiply:", a*b)
print("Multiply: " + str(a*b))
print("Multiply: ", a*b, sep="")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This use of <code>,</code> is specific to the <code>print</code> function. It automatically inserts a space. It is best to use for readability's sake when the space is desired, because it avoids the <code>str</code> call.</p>
<p>But, if you need a string (e.g. to put in a variable), you need to use <code>+str(...)</code>.</p>
</div>
<span class="comment-copy">For one thing, the comma adds another space in between (notice the two spaces in the Subtract and Divide lines). You can fix that with <code>print("Subtract:", a-b)</code> or <code>print("Subtract: ", a-b, sep="")</code></span>
<span class="comment-copy">Oh okay, thank you.  So does it make a difference which one I use?</span>
<span class="comment-copy">It doesn't avoid the <code>str</code> call, it just hides it.</span>
<span class="comment-copy">@dom0: It avoids it from the readability point of view. That's all that matters when considering style.</span>
