<div class="post-text" itemprop="text">
<p>I need to send this JSON array in a GET request</p>
<pre><code>{"user": "jähn", "id": 3}
</code></pre>
<p>I tried to use</p>
<pre><code>data = '{"user": "jähn", "id": 3}'
headers = {
    'Content-type': 'application/json',
    'Accept': 'text/plain'
}
request = urllib.request.Request(self.update_url, data=data,
    headers=headers, method='GET')
response = urllib.request.urlopen(request)
</code></pre>
<p>But its failing with: TypeError: POST data should be bytes or an iterable of bytes. It cannot be of type str.</p>
<p>Another thing that I find quite weird is that it tells me about POST data although I set the method on the Request to GET.</p>
<p>Since this is a simple script I'd prefer not to use a library like python-requests</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot make a GET request with a JSON-encoded body, as a GET request only ever consists of the URL and the headers. Parameters are encoded into the URL using URL encoding instead, there is no option to encode such parameters to JSON instead.</p>
<p>You create URL-encoded parameters with the <a href="http://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode" rel="nofollow"><code>urllib.parse.urlencode()</code> function</a>, then appended to the URL with <code>?</code>.</p>
<pre><code>from request.parse import urlencode

data = {"user": "jähn", "id": 3}  # note, a Python dictionary, not a JSON string
parameters = urlencode(data)
response = urllib.request.urlopen('?'.join((self.update_url, parameters)))
</code></pre>
<p>Do not use the <code>data</code> parameter; using that keyword argument forces a request to use the POST method:</p>
<blockquote>
<p><em>data</em> must be a <code>bytes</code> object specifying additional data to send to the server, or <code>None</code> if no such data is needed. Currently HTTP requests are the only ones that use data; the HTTP request will be a POST instead of a GET when the data parameter is provided. <em>data</em> should be a buffer in the standard <em>application/x-www-form-urlencoded</em> format.</p>
</blockquote>
</div>
<span class="comment-copy">A GET request would never be a JSON request; it'd be a URL-encoded request.</span>
<span class="comment-copy">In other words, there is <b>no</b> request body when making a GET request. There is only the URL and the headers.</span>
<span class="comment-copy">I had to change '?'.join(self.update_url, parameters) to url = '%s?%s' % (self.update_url, data) but now it works thanks!</span>
<span class="comment-copy">Sorry, forgot a pair of parens. Glad to have been of help!</span>
