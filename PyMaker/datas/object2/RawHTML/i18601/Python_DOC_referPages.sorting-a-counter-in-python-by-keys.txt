<div class="post-text" itemprop="text">
<p>I have a counter that looks a bit like this:</p>
<pre><code>Counter: {('A': 10), ('C':5), ('H':4)}
</code></pre>
<p>I want to sort on keys specifically in an alphabetical order, NOT by <code>counter.most_common()</code></p>
<p>is there any way to achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use <a href="http://docs.python.org/2/library/functions.html#sorted" rel="noreferrer">sorted</a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; counter = Counter({'A': 10, 'C': 5, 'H': 7})
&gt;&gt;&gt; counter.most_common()
[('A', 10), ('H', 7), ('C', 5)]
&gt;&gt;&gt; sorted(counter.items())
[('A', 10), ('C', 5), ('H', 7)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; c = Counter({'A': 10, 'C':5, 'H':4})
&gt;&gt;&gt; sorted(c.items(), key=itemgetter(0))
[('A', 10), ('C', 5), ('H', 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, you can use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer">most_common</a> function of collections.Counter: </p>
<pre><code>x = ['a', 'b', 'c', 'c', 'c', 'd', 'd']
counts = collections.Counter(x)
counts.most_common(len(counts))
</code></pre>
<p>This uses the most_common function available in collections.Counter, which allows you to find the keys and counts of <code>n</code> most common keys.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get values as list in sorted order</p>
<pre><code>array              = [1, 2, 3, 4, 5]
counter            = collections.Counter(array)
sorted_occurrences = list(dict(sorted(counter.items())).values())
</code></pre>
</div>
<span class="comment-copy">A Counter is basically just a dictionary, so this should really be considered a duplicate of this: <a href="http://stackoverflow.com/questions/9001509/python-dictionary-sort-by-key" title="python dictionary sort by key">stackoverflow.com/questions/9001509/â€¦</a></span>
<span class="comment-copy">Do you want to print them in a sorted order?</span>
<span class="comment-copy">I agree, knowing that the iterator on a dict yields the keys, not the values, then the keys will get sorted.</span>
<span class="comment-copy">This works, however, itemgetter is useful to sort a list of tuples or a list of list, but on a dict it is useless, sorted(c) is equivalent to sorted(c.keys())</span>
