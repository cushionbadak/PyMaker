<div class="post-text" itemprop="text">
<p>I have a list something like the following:</p>
<pre><code>[{'modified': 'Thu, 08 Aug 2013 18:28:13 +0000', 'path': '/test4.txt'},
 {'modified': 'Thu, 06 Aug 2013 18:28:17 +0000', 'path': '/test5.txt'},
 ...
]
</code></pre>
<p>and so on.
I want to sort the list by 'modified', in chronological (or reverse chronological) order What is the best way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your sort function needs to understand the dates first, else it will just sort by the letters of the weekday.</p>
<p>The <a href="http://labix.org/python-dateutil" rel="nofollow">dateutil</a> package is perfect for this task. It will automatically identify the date and doesn't require a format string like <code>datetime.strptime</code>.</p>
<pre><code>from dateutil import parser

# sort ascending
print sorted(yourlist, key=lambda k: parser.parse(k['modified']))

# sort descending
print sorted(yourlist, key=lambda k: parser.parse(k['modified']), reverse=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
strfmt = '%a, %d %b %Y %H:%M:%S +0000'
res = sorted(files, key=lambda e: datetime.strptime(e['modified'], strfmt))
</code></pre>
<p>For the reverse, use the optional boolean <code>reverse</code> argument:</p>
<pre><code>rev = sorted(files, key=..., reverse=True)
</code></pre>
<p>See <a href="http://docs.python.org/3/library/functions.html#sorted" rel="nofollow"><code>sorted()</code></a> for more information.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the "key" argument for <a href="http://docs.python.org/2/howto/sorting.html" rel="nofollow">python's sorted function</a>.  If you really want chronological order, you'll also have to parse the date strings somehow.  I used datetime below (can't seem to get it to handle the time zone correctly):</p>
<p>import datetime as dt</p>
<p>list = [{'modified': 'Thu, 08 Aug 2013 18:28:13 +0000', 'path': '/test4.txt'}, {'modified': 'Thu, 06 Aug 2013 18:28:17 +0000', 'path': '/test5.txt'}]</p>
<p>list.sort(key=lambda d:dt.datetime.strptime(d['modified'], '%a, %d %b %Y %H:%M:%S +0000'))</p>
<p>print list</p>
<p>output:</p>
<pre><code>[{'path': '/test5.txt', 'modified': 'Thu, 06 Aug 2013 18:28:17 +0000'}, {'path': '/test4.txt', 'modified': 'Thu, 08 Aug 2013 18:28:13 +0000'}]
</code></pre>
</div>
<span class="comment-copy">+1 for figuring out that dates should not be sorted alphabetically. :)</span>
<span class="comment-copy">obvious, but one answer hadn't figured that out when I first posted that...</span>
<span class="comment-copy"><code>sorted(...)</code> takes in a <code>reverse</code> argument, no need to slice the list. :)</span>
<span class="comment-copy">Thank you @SukritKalra, amended.</span>
<span class="comment-copy">+1 for using <code>strptime</code>. Although, you should not use <code>format</code> as a variable name, since there is a built in function of that name.</span>
<span class="comment-copy">Good point, thanks again.</span>
