<div class="post-text" itemprop="text">
<p>I understand, we can execute Linux Shell Commands using subprocess</p>
<pre><code>  import subprocess
  subprocess.call(["ls", "-l"])
</code></pre>
<p>What if i want to run <kbd>CTRL</kbd>+<kbd>C</kbd> action over the terminal?</p>
<p>My Use Case is:</p>
<pre><code>   1&gt; Open a linux screen
   2&gt; Run a command over first window
   3&gt; Then create a window in the same screen
   4&gt; Run another command over the second window
</code></pre>
<p>It is pretty obvious i want to automate some part of my daily routine.</p>
</div>
<div class="post-text" itemprop="text">
<p>Aah! found a solution for you;</p>
<p>if you use ubuntu or backtrack (a debian based linux flavour)
then you can install this: <code>apt-get install xautomation</code></p>
<p>and invoking keystrokes with this is a little easier, for people who like coding in English, but slightly more complicated:</p>
<pre><code>from subprocess import Popen, PIPE

control_f4_sequence = '''keydown Control_L
key F4
keyup Control_L
'''

shift_a_sequence = '''keydown Shift_L
key A
keyup Shift_L
'''

def keypress(sequence):
    p = Popen(['xte'], stdin=PIPE)
    p.communicate(input=sequence)

keypress(shift_a_sequence)
keypress(control_f4_sequence)
</code></pre>
</div>
<span class="comment-copy">I don't know if this can be done through a shell script, you're probably better off finding the module in python that you can use to invoke keystrokes, then you'll invoke the value '^c' where ^=CTRL, %=ALT and I haven't done it in a long time, but there are special characters for the other special keys also</span>
<span class="comment-copy">You may have a look at <a href="http://docs.python.org/3/library/os.html" rel="nofollow noreferrer">os.kill</a> and <a href="http://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">signals</a> in Python. Finding the pid is another matter, but anyway, you need a way to identify the command you want to close.</span>
<span class="comment-copy">This seems doable. And specifically to achieve my usecase, of creating a screen and passing commands to it. For example we want to mimick pressing Ctrl+C in the xc session, we can run screen -x xc -X   eval "stuff \\003". Typing a word followed by the enter key would be screen -X -S xc eval "stuff Hello\\012". This worked brilliantly to automate my task. [link] (<a href="http://www.gnu.org/software/screen/manual/screen.html#Paste" rel="nofollow noreferrer">gnu.org/software/screen/manual/screen.html#Paste</a>)</span>
<span class="comment-copy">yea, me and my uni buddies made people super scared scheduling scripts that would just do random thing, people would go on in the communal computer labs and scream, "someone's hacking into this computer!" lmfu</span>
