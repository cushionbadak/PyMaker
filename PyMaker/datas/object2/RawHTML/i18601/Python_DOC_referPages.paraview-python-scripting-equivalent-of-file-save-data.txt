<div class="post-text" itemprop="text">
<p>I would like to automate exporting csv files from vtk/vtu files. </p>
<p>Right now, the steps I take are:</p>
<ul>
<li>open paraview</li>
<li>load in the pvd file that stores the information about all vtu files (one for each time steps in my PDE simulation)</li>
<li>goto Properties tab on the left, hit 'apply'</li>
<li>File-&gt;save Data...  provide a base file name, select 'points' and 'write all timesteps'</li>
</ul>
<p>this writes a csv file for each timesteps with the name basefilename#timestepno#.csv</p>
<p>Is there a way to do this from the commandline (there's no X server on the computer that's doing the computations), eg using the python interface?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the following in either the Python Shell in the UI or using the <strong>pvpython</strong> or <strong>pvbatch</strong> Python executables.</p>
<pre><code>from paraview import simple
reader = simple.OpenDataFile("..../foo.pvd")
writer = simple.CreateWriter("..../foo.csv", reader)
writer.WriteAllTimeSteps = 1
writer.FieldAssociation = "Points"
writer.UpdatePipeline()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I had a similar problem with pvtu files and solved it with the script below. I run the script using execfile("SCRIPTNAME") in Paraview -&gt; Tools -&gt; Python Shell. I hope this helps.</p>
<p>-- Reinhard</p>
<pre><code>from paraview.simple import *
import os

"""Function that counts number of files
with specific extension in directory """
def directory(path,extension):
  list_dir = []
  list_dir = os.listdir(path)
  count = 0
  for file in list_dir:
    if file.endswith(extension): # eg: '.txt'
      count += 1
  return count

"""Choose input/output directory and filenames"""
pvtu_input_directory = "thin_1000_0.4/mesh/"
csv_output_directory = "thin_1000_0.4/csv/"
input_filename_root = "output"
output_filename_root = "output"

""" Create output directory """
os.system('mkdir '+csv_output_directory)

"""Start Loop over all files """
number_of_pvtu = directory(pvtu_input_directory,'.pvtu')
for index in range(1,number_of_pvtu):
    in_filename = input_filename_root + "%0.4d" % index+".pvtu"
    out_filename = output_filename_root + "%0.4d" % index +".csv"
    loadfile = pvtu_input_directory + in_filename
    writefile = csv_output_directory + out_filename
    r = XMLPartitionedUnstructuredGridReader( FileName=loadfile)
    writer = CreateWriter(writefile,r)
    writer.FieldAssociation = "Points"
    writer.UpdatePipeline()

""" That's it. """"
</code></pre>
</div>
<span class="comment-copy">Thanks! It just has to say "CreateWriter('foo.csv', reader)", then it works for me</span>
<span class="comment-copy">For <code>directory</code> you could use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob</code></a>.</span>
