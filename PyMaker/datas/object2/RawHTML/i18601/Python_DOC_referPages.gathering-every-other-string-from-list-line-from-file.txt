<div class="post-text" itemprop="text">
<p>I have been scripting for around two weeks, and have just learnt about reading from a file.</p>
<p>What I want to do is get every other entry from my original list and store it in a new list. Is this the best way to do it?</p>
<pre><code>with open("test.txt",mode="r") as myfile:
File = myfile.read().splitlines()

Username = []

for i in range (len(File)):
    if File.index(File[i])%2 == 0 or File.index(File[i]) == 0:
        Username.append(File[i])
print(Username)
</code></pre>
<p>Please bear in mind that I have only studied Python for around ten hours so far - I'm quite happy that this even seemed to work.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are at least a couple ways to accomplish the same thing with less code.</p>
<h2>Slice Notation</h2>
<p>Python has a way of iterating over every nth element of an array called <a href="https://stackoverflow.com/questions/509211/the-python-slice-notation">slice notation</a>.  You can replace the entire loop with the following line</p>
<pre><code>Username.extend(File[0::2])
</code></pre>
<p>What this basically means is to grab every <code>2</code>nd element starting at index <code>0</code> and add it to the <code>Username</code> array.</p>
<h2>The <code>range()</code> function</h2>
<p>You can also use a different version of the <code>range()</code> function, that allows you to specify a start, end and step, list so.</p>
<pre><code>for i in range(0, len(File), 2):
    Username.append(File[i])
</code></pre>
<p>The <code>range()</code> function is documented <a href="http://docs.python.org/release/1.5.1p1/tut/range.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<p><strong><code>input_file</code>:</strong></p>
<pre><code>Line 1
Line 2
Line 3
Line 4
Line 5
Line 6
Line 7
Line 8
Line 9
Line 10
</code></pre>
<p><strong>Python:</strong></p>
<pre><code>&gt;&gt;&gt; with open("input_file") as f:
...     alternates = [line for i, line in enumerate(f) if not i % 2]
... 
&gt;&gt;&gt; alternates
['Line 1\n', 'Line 3\n', 'Line 5\n', 'Line 7\n', 'Line 9\n']
</code></pre>
<p>Further reading: <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow">the <code>enumerate()</code> built-in function</a>.</p>
</div>
<span class="comment-copy">How about <code>Username = myfile.read().splitlines()[0::2]</code></span>
<span class="comment-copy">ok thanks, would it have also worked if I just used range(0,len(File),2) or would that not work?</span>
<span class="comment-copy">That would work, though it results in more code.  Choose what is most readable for you. :)  I updated my answer to mention using the <code>range()</code> function.</span>
<span class="comment-copy">This seems a bit complex compared to the other methods, however I will look it up for some learning :D</span>
<span class="comment-copy">@KieranLavelle one advantage of this method is that it doesn't store the whole file in a temporary list (which can be useful with large files), because iterating over a file is <a href="http://en.wikipedia.org/wiki/Lazy_evaluation" rel="nofollow noreferrer">lazy</a>, and the lines you aren't interested in are just thrown away as the file is read.</span>
