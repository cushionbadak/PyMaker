<div class="post-text" itemprop="text">
<p>I use python2.7 mostly, but I wanted to use python3.3 for a specific task. I referred to the existing questions <a href="https://stackoverflow.com/questions/341184/can-i-install-python-3-x-and-2-x-on-the-same-computer">Python 3x and python 2.x</a> The solution suggested there did not work for me. I have couple of questions based on the issues I have been facing.</p>
<ol>
<li><p>Adding python3.3 to the path variable.Some post(<a href="https://stackoverflow.com/questions/16925038/add-python27-to-windows-path-while-using-python-3-3">add python27_path</a>) suggested to   copy the file and rename it. I tried renaming C:\Python3.3\python.exe to C:\Python3.3\python3.exe. But this did not work for me.</p></li>
<li><p>Adding libraries to PYTHONPATH: Had added C:\Python33\Lib\site-packages to the PYTHONPATH. When I ran the code with Python3.3, it was using libraries of python2.7. Is it possible for the libraries to coexist on the same machine and if I call python2.7 it should look only for its modules?</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Those lovely people over at python have come up with the perfect solution for you as a part of python 3.3 - a launcher for windows that works all this out for you take a look about half way down <a href="http://docs.python.org/3/using/windows.html" rel="nofollow">this</a> page.</p>
<p>The other option is to have a switcher script which changes your path and pythonpath variables for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, you can explicitly specify which version of python to use by making sure that you add the appropriate python location to the beginning of the path before you invoke the python command. Something like this.</p>
<p>Let's assume that you PATH variable in Windows is : <strong>c:\windows\system32;c:\python27\;...</strong></p>
<p>Execute your python scripts using 3.3  this way :</p>
<pre><code>SET PATH = "c:\python33\";%PATH%
python yourscript.py
</code></pre>
<p>Execute your python scripts using 2.7  this way :</p>
<pre><code>SET PATH = "c:\python27\";%PATH%
python yourscript.py
</code></pre>
<p>This is a good way to execute scripts without having to install too many third party software products. A simple BAT file can then solve your requirement.</p>
</div>
<div class="post-text" itemprop="text">
<p>The variant </p>
<pre><code> SET PATH = "c:\python27\";%PATH%
</code></pre>
<p>is invalid. You should use  </p>
<pre><code> SET PATH=C:\python33\;%PATH%
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On windows, if you already added both versions of python to the PATH, you can use:</p>
<pre><code>py -2.7
</code></pre>
<p>or</p>
<pre><code>py -3.6
</code></pre>
</div>
<span class="comment-copy">Install Cygwin and run <code>python3</code> and <code>python2</code> like you would on *nix</span>
<span class="comment-copy">What did not work in the first case? Couldn't rename, or will it run the wrong Python, or...?</span>
<span class="comment-copy">@JoachimIsaksson I added the it to the path. But when i called python3 in my command prompt. It could still not find. was a bit surprising to me.</span>
<span class="comment-copy">@karthikbharadwaj Did you update the path and start a new command window? Existing windows don't get the path update, only newly launched ones.</span>
