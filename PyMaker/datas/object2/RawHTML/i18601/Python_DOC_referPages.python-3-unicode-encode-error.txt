<div class="post-text" itemprop="text">
<p>I'm using glob.glob to get a list of files from a directory input. When trying to open said files, Python fights me back with this error:</p>
<blockquote>
<p>UnicodeEncodeError: 'charmap' codec can't encode character '\xf8' in position 18: character maps to &lt; undefined &gt;</p>
</blockquote>
<p>By defining a string variable first, I can do this:</p>
<pre><code>filePath = r"C:\Users\Jørgen\Tables\\"
</code></pre>
<p>Is there some way to get the 'r' encoding for a variable?</p>
<p>EDIT:</p>
<pre><code>import glob

di = r"C:\Users\Jørgen\Tables\\"

def main():
    fileList = getAllFileURLsInDirectory(di)
    print(fileList)

def getAllFileURLsInDirectory(directory):
    return glob.glob(directory + '*.xls*')
</code></pre>
<p>There is a lot more code, but this problem stops the process.</p>
</div>
<div class="post-text" itemprop="text">
<p>Independently on whether you use the raw string literal or a normal string literal, Python interpreter must know the source code encoding. It seems you use some 8-bit encoding, not the UTF-8. Therefore you have to add the line like</p>
<pre><code># -*- coding: cp1252 -*-
</code></pre>
<p>at the beginning of the file (or using another encoding used for the source files). It need not to be the first line, but it usually is the first or second (the first should contain <code>#!python3</code> for the script used on Windows).</p>
<p>Anyway, it is usually better not to use non ASCII characters in the file/directory names.</p>
<p>You can also use normal slashes in the path (the same way as in Unix-based systems). Also, have a look at <a href="http://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow">os.path.join</a> when you need to compose the paths.</p>
<p><strong>Updated</strong></p>
<p>The problem is probably not where you search it for. My guess is that the error manifests only when you want to display the resulting list via <code>print</code>. This is usually because the console by default uses non-unicode encoding that is not capable to display the character. Try the <code>chcp</code> command without arguments in your <code>cmd</code> window.</p>
<p>You can modify the print command in your <code>main()</code> function to convert the string representation to the ASCII one that can always be displayed:</p>
<pre><code>print(ascii(fileList))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please also see:</p>
<p><a href="https://stackoverflow.com/questions/1052225/convert-python-filenames-to-unicode">Convert python filenames to unicode</a>
and
<a href="https://stackoverflow.com/questions/11306262/listing-chinese-filenames-in-directory-with-python">Listing chinese filenames in directory with python</a></p>
<p>You can tell Python to explicitly handle strings as unicode -- but you have to maintain that from the first string onward.</p>
<p>In this case passing a u'somepath' to os.walk.</p>
</div>
<span class="comment-copy">There is <i>no</i> <code>r</code> encoding. You are defining a raw string literal, saving you having to use too many backslashes. Your file encoding took care of the <code>ø</code>, so you defined a <i>unicode</i> value.</span>
<span class="comment-copy"><code>"C:\\Users\\Jørgen\\Tables\\"</code> <i>also</i> works. Your editor saved that as UTF-8, the default encoding Python uses when interpreting your source code.</span>
<span class="comment-copy">Please show us your code that produces that error.</span>
<span class="comment-copy">I would prefer to be able to use non ASCII characters like <code>æ</code>, <code>ø</code> and <code>å</code>. The goal is to input a folder path, and manipulate every file of a certain type within that folder. For this to work on other users, I can't guarantee that the path will not contain any "illegal" characters.  I did have <code>#-*- coding: utf-8 -*-</code> on top, but neither that nor your "coding" suggestion worked.</span>
<span class="comment-copy">OK. That is fine if it is not under your control. But you have to guarantee there are no illegal characters anyway. Letters are OK, even the Unicode ones if the system supports Unicode paths. Do you use Python 3 or Python 2?</span>
<span class="comment-copy">I use Python 3.3</span>
<span class="comment-copy">OK. Did the <code># -*- coding: ... -*-</code> line help to remove the error?</span>
<span class="comment-copy">When I define <code>di = r"C:\Users\Jørgen\Tables\\"</code> in the code, the <code>coding</code> line works. But when I try to take the folder path as an input everything goes wrong again.</span>
