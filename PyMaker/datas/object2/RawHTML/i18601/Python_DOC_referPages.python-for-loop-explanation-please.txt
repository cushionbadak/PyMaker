<div class="post-text" itemprop="text">
<p>I am new to programming but I have gone over tutorials in Java, C++, Javascript, PHP and have never comes across something like this.
Can you please explain this code, especially the isinstance</p>
<pre><code>for each_item in movies:
    if isinstance(each_item, list):
        for nested_item in each_item:
            if isinstance(nested_item, list):
                for deeper_item in nested_item:
                    print(deeper_item)
            else:
                print(nested_item)
    else:
        print(each_item)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># loop through each item in "movies"
for each_item in movies:

    # if the current item item is a list...
    if isinstance(each_item, list):

        # then loop through all the subitems...
        for nested_item in each_item:

            # and if yet again we meet a list...
            if isinstance(nested_item, list):

                # then loop through the items in this list
                for deeper_item in nested_item:
                    # and print the 3rd level item
                    print(deeper_item)

            # ... or print 2nd level item
            else:
                print(nested_item)

    # or print the 1st level item
    else:
        print(each_item)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're familiar with Java you can construct a nearly identical series of loops and checks like this:</p>
<pre><code>for (Object each_item: movies){
    if (each_item instanceof Collection){
        for (Object nested_item: each_item){
            if (nested_item instanceof Collection){
                for (Object deeper_item: nested_item){
                    System.out.println(deeper_item);
                }
            } 
            else{
                  System.out.println(nested_item);
            }
        else{
            System.out.println(each_item);
        }
    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for each_item in movies:  #each_item will be each movie
    if isinstance(each_item, list):  #check if each_item is a list
        for nested_item in each_item:  #if so, then nested_item will be each item in each_item
            if isinstance(nested_item, list): #check if nested_item is list
                for deeper_item in nested_item: # if so, deeper_item will be each item in nested_list
                    print(deeper_item)  #print out deeper_item
            else:
                print(nested_item) #print out nested_item
    else:
        print(each_item)  #print out each_item
</code></pre>
<p>So if <code>movies = [1,2,3]</code>, then <code>each_item</code> will take on the values 1,2,3 in the loop.  Since 1,2,3 are not lists, the values just get printed out.</p>
<p>If <code>movies = [1,[2,3]]</code>, then <code>each_item</code> will take on the values 1 and <code>[2,3]</code> in loop.  Since <code>[2,3]</code> is a list, it enters inner for loop.  So <code>nested_item</code> will take on the values 2,3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your code is this:</p>
<pre><code>for each_item in movies:
    if isinstance(each_item, list):
        for nested_item in each_item:
            if isinstance(nested_item, list):
                for deeper_item in nested_item:
                    print(deeper_item)
            else:
                print(nested_item)
    else:
        print(each_item)
</code></pre>
<p>It looks like you're printing out each item in a potentially nested list. isinstance(object, classinfo) returns true if the object (the first parameter) is an instance of the class (the second parameter). So the first time you call isinstance, you're testing to see if each_item is a list. If it is a list, you're for-looping through the list.</p>
<p>Essentially, you're looking at the first item in a list. If it itself is a list, you look at the first item in it. If that item is a list, you look at the first item in it. If at any point you find an item that is not a list, you print out that item.</p>
<p>So a list like this: [1, 2, [3, 4, [5, 6]]] would print out </p>
<pre><code>1
2
3
4
5
6
</code></pre>
<p>given your current code.</p>
<p>If you were to just do</p>
<pre><code>list = [1, 2, [3, 4, [5, 6]]]
for item in list:
    print(item)
</code></pre>
<p>it would print</p>
<pre><code>1
2
[3, 4, [5, 6]]]
</code></pre>
<p>And if you were to do</p>
<pre><code>list = [1, 2, [3, 4, [5, 6]]]

for item in list:
   for num in item:
       for i in num:
           print i
</code></pre>
<p>you'll get an error telling you that you can't for loop over a number, because it is not an iterable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Understanding <code>isinstance(each_item,list)</code> requires getting these two things:</p>
<ol>
<li><code>isinstance(A,B)</code> answers the question "Is A an instance of B?"</li>
<li><p><code>list</code> is a python type (like <code>dict</code>, <code>tuple</code>, <code>set</code>, <code>str</code> and <code>int</code>) and can be used a couple of different ways:</p>
<ul>
<li><p>to convert things into lists:</p>
<ul>
<li><code>list("oink")</code>  # ==&gt; ['o', 'i', 'n', 'k']  <em>convert a string to a list of characters</em></li>
<li><code>list((1,2,3))</code> # ==&gt; [1, 2, 3]             <em>convert a tuple to a list</em></li>
</ul></li>
<li><p>to help figure out the type of things</p>
<ul>
<li><code>type([1,2,3]) == list</code>  # ==&gt; True         <em>discover the type of something</em></li>
<li><code>isinstance([1,2,3],list)</code> # ==&gt; True</li>
</ul></li>
</ul></li>
</ol>
</div>
<span class="comment-copy">In python, you need to indent your code, otherwise it doesn't make sense</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#isinstance</a></span>
<span class="comment-copy">What part don't you understand? Note that Python <code>for</code> loops are really <code>for each</code> loops; that is, they loop over an iterable and give you access to each element in that iterable in turn.</span>
<span class="comment-copy"><code>isinstance()</code> is easily looked up in the documentation; test if a given object is an instance of a given type. In other words, test if the item is a list. If so, loop over it, otherwise print it.</span>
<span class="comment-copy">Hello @UstadFirstNameHgff. Since your first questions didn't go to well on Stackoverflow, please take a look at the "Asking" section on the help page <a href="http://stackoverflow.com/help">stackoverflow.com/help</a> on what and how to ask (and how not).</span>
