<div class="post-text" itemprop="text">
<p>How do you use the @patch decorator to patch the built-in input() function?</p>
<p>For example, here's a function in question.py that I'd like to test, which contains a call to input():</p>
<pre><code>def query_yes_no(question, default="yes"):
""" Adapted from http://stackoverflow.com/questions/3041986/python-command-line-yes-no-input """

    valid = {"yes": True, "y": True, "ye": True, "no": False, "n": False}
    if default is None:
        prompt = " [y/n] "
    elif default == "yes":
        prompt = " [Y/n] "
    elif default == "no":
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while True:
        sys.stdout.write(question + prompt)
        choice = input().lower()

        if default is not None and choice == '':
            return valid[default]
        elif choice in valid:
            return valid[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "
                             "(or 'y' or 'n').\n")
</code></pre>
<p>Here's my test, which gives me the error "ImportError: No module named '<strong>builtins</strong>'":</p>
<pre><code>import unittest
from unittest.mock import patch

import question

class TestQueryYesNo(unittest.TestCase):

    @patch('__builtins__.input.return_value', 'y')
    def test_query_y(self):
        answer = question.query_yes_no("Blah?")
        self.assertTrue(answer)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/2/library/__builtin__.html" rel="nofollow noreferrer">__builtin__</a> module is renamed to <a href="http://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer">builtins</a> in Python 3. Replace as follow:</p>
<pre><code>@patch('builtins.input', lambda *args: 'y')
</code></pre>
<p><strong>UPDATE</strong></p>
<p><code>input</code> has an optional parameter. updated the code to accept the optional parameter.</p>
</div>
<div class="post-text" itemprop="text">
<p>Or use Mock's <code>return_value</code> attribute. I couldn't get it to work as a decorator, but here's how to do it with a context manager:</p>
<pre><code>&gt;&gt;&gt; import unittest.mock
&gt;&gt;&gt; def test_input_mocking():
...     with unittest.mock.patch('builtins.input', return_value='y'):
...         assert input() == 'y'
...
&gt;&gt;&gt; def test_input_mocking():
...     with unittest.mock.patch('builtins.input', return_value='y'):
...         assert input() == 'y'
...         print('we got here, so the ad hoc test succeeded')
...
&gt;&gt;&gt; test_input_mocking()
we got here, so the ad hoc test succeeded
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For Python 2.x:</p>
<pre><code>@patch('__builtin__.input')
</code></pre>
<p>worked for me.</p>
</div>
<span class="comment-copy">Doesn't seem to work with Python 3.5.</span>
<span class="comment-copy">@IlanBiala, It works for me: <a href="http://ideone.com/kdAjEd" rel="nofollow noreferrer">ideone.com/kdAjEd</a>  (tested on Python 3.5.1, Ubuntu 16.04 beta, WIndows 7,  simplified for brevity)</span>
<span class="comment-copy">input takes one positional argument, so: <code>@patch('builtins.input', lambda _ : 'y')</code></span>
<span class="comment-copy">@SeF, Thank you for the comment. <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input</code>'s argument is optional</a>; so I used <code>*args</code> instead of <code>_</code>.</span>
