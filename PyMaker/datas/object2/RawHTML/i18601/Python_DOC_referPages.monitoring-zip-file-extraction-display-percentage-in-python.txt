<div class="post-text" itemprop="text">
<p>I have a hundred zipfiles in a directory and so I did a python script to unzip all files, but I needed to display a percentage status of each file inside of anyone huge zipfile (actually each zipfile has only one file).</p>
<p>I found some examples here but in all of them each zipfile had several files inside it therefore the percentage was about the number of files inside of zipfile and not about one of them (my case).</p>
<p>So, I wrote the code below, but for each zipfile I just got to show "100% completed" but I should showing for each file, something like that:</p>
<p>10% Completed
12% Completed
16% Completed
...
100% Completed</p>
<p>I really appreciate any suggestion.</p>
<pre><code># -- coding: utf-8 --

import glob, zipfile, sys, threading
from os.path import getsize

class Extract(threading.Thread):
      def __init__(self, z, fname, base, lock):
          threading.Thread.__init__(self)
          self.z = z
          self.fname = fname
          self.base = base
          self.lock = lock

      def run(self):
          self.lock.acquire()
          self.z.extract(self.fname, self.base)
          self.lock.release()

if len(sys.argv) &lt; 2:
   sys.exit("""
Sintaxe : python %s [Nome da Pasta]
""" % sys.argv[0])

base = sys.argv[1]
if base[len(base)-1:] != '/':
   base += '/'

for fs in glob.glob(base + '*.zip'):
    if 'BR' not in fs.split('.'):
       f = open(fs,'rb')
       z = zipfile.ZipFile(f)
       for fname in z.namelist():
           size = [s.file_size for s in z.infolist() if s.filename == fname][0]
           lock = threading.Lock()
           background = Extract(z, fname, base, lock)
           background.start()
           print fname + ' =&gt; ' + str(size)
           while True:
                 lock.acquire()
                 filesize = getsize(base + fname)
                 lock.release()
                 print "%s %% completed\r" % str(filesize * 100.0 / size)
                 if filesize == size:
                    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/2/library/zipfile.html#zipfile.ZipFile.extract" rel="nofollow">The <code>extract</code> method</a> writes directly to disk. That's okay, but you want to hook into that. Rather than using <code>extract</code>, you might want to use <a href="http://docs.python.org/2/library/zipfile.html#zipfile.ZipFile.open" rel="nofollow"><code>open</code></a>. With <code>open</code>, you'll get a file-like object out of it, and you can copy from that file to the file on disk, writing out progress as you go.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's an example snippet of code you can use to modify yours. It uses the <a href="http://docs.python.org/3/library/zipfile.html#zipinfo-objects" rel="nofollow">ZipInfo object</a> to find the uncompressed size of the member file. As you read it out you can report how close to finished you are.</p>
<p>Note that this is written for Python 3.2 and above; the <code>with</code> statement support was added then. With previous versions you would need to open the zip file and close it manually.</p>
<pre><code>from zipfile import ZipFile

chunk_size = 1024 * 1024
zip_path = "test_zip.zip"
with ZipFile(zip_path, 'r') as infile:
    for member_info in infile.infolist():
        filename = member_info.filename
        file_size = member_info.file_size
        with open("{}_{}".format(zip_path, filename), 'wb') as outfile:
            member_fd = infile.open(filename)
            total_bytes = 0
            while 1:
                x = member_fd.read(chunk_size)
                if not x:
                    break
                total_bytes +=outfile.write(x)
                print("{0}% completed".format(100 * total_bytes / file_size))
</code></pre>
</div>
<span class="comment-copy">Hi ! Thanks for your suggestion. It's really great but I think that in my case wouldn't work because in my code the thread is blocking file until it finish and I needed read it at same time that it is unpacking. Do you have some idea of how to resolve this ?</span>
<span class="comment-copy">Could you add everything after my for loop into your <code>run</code> method? You could test that and re-factor it once you see how it's working.</span>
