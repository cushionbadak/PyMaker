<div class="post-text" itemprop="text">
<p>I don't understand the result of the code below. Why is the result <code>None</code>?</p>
<pre><code> m = {(1,2):1.0, (5,4):0.5, (3,4):0.75}

print(m.clear())
result: **None**
</code></pre>
<p>But if I write as </p>
<pre><code>   m.clear()
    print(m)
   result : **{}**
</code></pre>
<p>I have other result.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>print(m.clear())</code> prints the value returned by the call <code>m.clear()</code>. <code>print m</code> prints the object <code>m</code>; clearly two very different things, and so it's unsurprising that they produce different output.</p>
<p>The <a href="http://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow">documentation</a> for dictionary types simply says of <code>clear</code>:</p>
<blockquote>
<p>Remove all items from the dictionary.</p>
</blockquote>
<p>That's what it does. It's not documented as returning anything, while all the documentation for all the methods that <em>do</em> return something are explicit about what they return (usually methods that alter a collection only return <code>None</code>). So there's no reason to expect it to return anything.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are printing the return value of <code>m.clear()</code>, which returns <code>None</code>. It returns <code>None</code> because the <code>.clear()</code> method clears the dictionary <em>in place</em>.</p>
<p>By convention, any method on a default Python type that alters the mutable structure in-place, returns <code>None</code>. The same applies to <code>list.sort()</code> or to <code>set.add()</code>, for example.</p>
<p>Your second sample does not print the return value of <code>m.clear()</code>. It prints the empty dictionary after you cleared it.</p>
</div>
