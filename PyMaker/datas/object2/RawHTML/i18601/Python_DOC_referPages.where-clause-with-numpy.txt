<div class="post-text" itemprop="text">
<p>Here's my array:</p>
<pre><code>a = [[0.,0.,0.1,0.2], [0.,0.3,0.4,0.3], [0.,0.,0.1,0.]]
</code></pre>
<p>I would like to do a where clause which will return the indices of the elements in 'a' where the sum of the values for this element is equal to 1.
Something like : <code>where(sum(a) == 1)</code></p>
<p>Can someone guide me ?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/2/library/functions.html#enumerate" rel="nofollow">enumerate</a>, <a href="http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; a = [[0.,0.,0.1,0.2], [0.,0.3,0.4,0.3], [0.,0.,0.1,0.]]
&gt;&gt;&gt; [i for i, xs in enumerate(a) if sum(xs) == 1]
[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [1]: import numpy as np

In [2]: a = np.array([[0.,0.,0.1,0.2], [0.,0.3,0.4,0.3], [0.,0.,0.1,0.]])

In [3]: a
Out[3]:
array([[ 0. ,  0. ,  0.1,  0.2],
       [ 0. ,  0.3,  0.4,  0.3],
       [ 0. ,  0. ,  0.1,  0. ]])

In [4]: np.where(np.sum(a,axis=1) == 1)
Out[4]: (array([1]),)
</code></pre>
<p>So the sum of the 2nd row (index == 1) is 1.0. <code>np.sum(a, axis=1)</code> takes the sums across the rows, which are equivalent to the elements of your original list of lists. Without specifying an explicit axis, numpy takes the sum of all elements of the array. Note, there is a difference between the python builtin <code>sum</code> and <code>np.sum</code>. This is a good reason not to do <code>from numpy import *</code> and keep things explicit.</p>
<p><strong>Update:</strong></p>
<p>As @Jaime suggested doing a comparison with the equality is not safe. Ideally <code>np.allclose</code> would have an <code>axis</code> option, but it doesn't. You can still recreate this using:</p>
<pre><code>np.where(np.abs(np.sum(a,1) - 1.0) &lt;= 1E-5)
</code></pre>
<p>See the <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.allclose.html" rel="nofollow" title="np.allclose">docs</a> for <code>np.allclose</code> for more info.</p>
</div>
<span class="comment-copy">The content of your question (<code>numpy</code> tag, use of <code>np.where</code>, the title) looks like you are asking about <code>np.array</code>, while your example and accepted answer suggest that you asking about python <code>list</code>. Please be careful.</span>
<span class="comment-copy"><code>[3]</code> seems like a strange answer here. On my machine, it's <code>[1]</code> which should be correct.</span>
<span class="comment-copy">Thanks! Exactly what I wanted. I am new in Python, could you explain to me what is the "i for i" ?</span>
<span class="comment-copy">@JoshAdel, Stackoverflow editor's link feature (ctrl+l) replaced <code>[1]</code> with <code>[3]</code>. I corrected the output. Thank you for comment.</span>
<span class="comment-copy">This is <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> not i for i. You'd better refer the link.@HectorTwist</span>
<span class="comment-copy">+1 This would indeed be the numpy construct, but you should of course not check equality of floating point numbers with <code>==</code>, would be nice if <code>np.allclose</code> took an axis argument.</span>
<span class="comment-copy">@Jaime - you're totally right. I updated my solution to reflect this.</span>
