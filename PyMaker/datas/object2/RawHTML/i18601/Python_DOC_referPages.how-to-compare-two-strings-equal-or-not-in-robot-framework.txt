<div class="post-text" itemprop="text">
<p>How to compare two strings equal or not in Robot Framework.  For example:</p>
<pre><code>${xyz}=    Get Text    xpath=/html/body/div/div[2]/div[3]/div/div/div/div/h3
${abc}=    Get Text    xpath=/html/body/div/div[2]/div[4]/div/div/div/div/h3
</code></pre>
<p>These xpath values are getting different strings. So how to compare there strings equal or not?</p>
<p>Is it correct way to storing the values in variable in Robot Framework?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, that is the correct way of storing variables.  Though you can also do it without the equal sign:</p>
<pre><code>${xyz}    Get Text    xpath=/html/body/div/div[2]/div[3]/div/div/div/div/h3
${abc}    Get Text    xpath=/html/body/div/div[2]/div[4]/div/div/div/div/h3
</code></pre>
<p>Now that you have the two different strings assigned to variables, you can simply do:</p>
<pre><code>Should Be Equal As Strings    ${xyz}    ${abc}
</code></pre>
<p>You can see the documentation for <code>Should Be Equal As Strings</code> <a href="http://robotframework.org/robotframework/2.7.5/libraries/BuiltIn.html#Should%20Be%20Equal%20As%20Strings" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative to <code>Should Be Equal As Strings</code> is to use <a href="http://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Should%20Be%20True" rel="nofollow noreferrer"><code>Should Be True</code></a> - it evaluates the provided argument as python expression (e.g. "something that can be substituted with a value") and fails if it turns up <code>False</code>:</p>
<pre><code>Should Be True     """${variable 1}""" == """${variable 1}"""
</code></pre>
<p>It's a good practice to use <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">triple quotes</a> when you don't have control over the values (e.g. when taken from external source - a web page) - this construct permits the value to have quotes or newlines in it, without causing syntax error.</p>
<p>Though this approach can be a bit cumbersome for simple checks, it is quite powerful - you can use whatever python provides. For example, if the check should be case insensitive:</p>
<pre><code>Should Be True     """${variable 1}""".lower() == """${variable 1}""".lower()
</code></pre>
<p>Or if any starting/trailing whitespace is insignificant:</p>
<pre><code>Should Be True     """${variable 1}""".strip() == """${variable 1}""".strip()
</code></pre>
<p>Or, is one string a part of another:</p>
<pre><code>Should Be True     """${variable 1}""" in """${variable 1}"""
</code></pre>
</div>
<span class="comment-copy">Have you done any research? There are many built-in keywords for comparing things.</span>
