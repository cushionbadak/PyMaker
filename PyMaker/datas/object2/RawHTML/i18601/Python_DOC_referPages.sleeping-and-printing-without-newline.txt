<div class="post-text" itemprop="text">
<p>If I run this code:</p>
<pre><code>for x in range(10):
    time.sleep(1)
    print("a")
</code></pre>
<p>It will do exactly what it should. But if I run this:</p>
<pre><code>for x in range(10):
    time.sleep(1)
    print("a", end="")
</code></pre>
<p>It will wait the entire 10 seconds and then print the 10 <code>a</code>'s.</p>
<p>How can I prevent this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Flush stdout after print.</p>
<pre><code>import time
import sys

for x in range(10):
    time.sleep(1)
    print("a", end="")
    sys.stdout.flush()
</code></pre>
<hr/>
<p>Python 3.3 <a href="http://docs.python.org/3/library/functions.html#print">print</a> function has optional <code>flush</code> parameter; You can write as follow in Python 3.3+.</p>
<pre><code>import time

for x in range(10):
    time.sleep(1)
    print("a", end="", flush=True)
</code></pre>
</div>
<span class="comment-copy">Definitely not a library bug. Always assume your own code is at fault first (it's seen a lot less testing).  The problem is that <a href="http://www.pixelbeat.org/programming/stdio_buffering/" rel="nofollow noreferrer"><code>stdout</code> is line-buffered</a>.</span>
<span class="comment-copy">@JonathonReinhart that certainly seems logical, but this behavior seemed really eratic. Having to flush stdout certainly doesn't seem very "Python". They're probably very rare, but I have encountered bugs in the standard Python libraries before (zipfile in 2.6, apparently infamous)</span>
