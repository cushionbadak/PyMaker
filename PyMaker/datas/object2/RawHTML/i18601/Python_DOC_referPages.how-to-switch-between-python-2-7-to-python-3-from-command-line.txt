<div class="post-text" itemprop="text">
<p>I'm trying to find the best way to switch between the two python compilers  2.7 to 3.3
If I run python from cmd, I would you use something like</p>
<blockquote>
<p><code>python ex1.py</code></p>
</blockquote>
<p>where I set "python" from window environment variable from my computer properties to point to either python 3.3 or 2.7 one or another.</p>
<p>I am wondering there is an easy way to switch between the two from cmd line ? </p>
</div>
<div class="post-text" itemprop="text">
<p>For Windows 7, I just rename the <code>python.exe</code> from the Python 3 folder to <code>python3.exe</code> and add the path into the environment variables. Using that, I can execute <code>python test_script.py</code> and the script runs with Python 2.7 and when I do <code>python3 test_script.py</code>, it runs the script in Python 3.</p>
<p>To add <code>Python 3</code> to the environment variables, follow these steps - </p>
<ol>
<li>Right Click on My Computer and go to <code>Properties</code>.</li>
<li>Go to <code>Advanced System Settings</code>.</li>
<li>Click on <code>Environment Variables</code> and edit <code>PATH</code> and add the path to your Python 3 installation directory.</li>
</ol>
<p>For example, </p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/k6mzc.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>No need for "tricks".  Python 3.3 comes with PyLauncher "py.exe", installs it in the path, and registers it as the ".py" extension handler.  With it, a special comment at the top of a script tells the launcher which version of Python to run:</p>
<pre><code>#!python2
print "hello"
</code></pre>
<p>Or</p>
<pre><code>#!python3
print("hello")
</code></pre>
<p>From the command line:</p>
<pre><code>Py -3 hello.py
</code></pre>
<p>Or</p>
<pre><code>Py -2 hello.py
</code></pre>
<p>See <a href="http://docs.python.org/3/using/windows.html">3.4. Python Launcher for Windows</a></p>
</div>
<div class="post-text" itemprop="text">
<p>They are 3 ways you can achieve this using the py command (py-launcher) in python 3, virtual environment or configuring your default python system path. For illustration purpose, you may see tutorial <a href="https://www.youtube.com/watch?v=ynDlb0n27cw&amp;t=38s" rel="nofollow noreferrer">https://www.youtube.com/watch?v=ynDlb0n27cw&amp;t=38s</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In case you have both python 2 and 3 in your path, you can move up the Python27 folder in your path, so it search and executes python 2 first.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try to rename the python executable in the python3 folder to python3, that is if it was named python formally... it worked for me</p>
</div>
<span class="comment-copy">Are you on Windows?</span>
<span class="comment-copy">Yes, i'm on window 7</span>
<span class="comment-copy">it is better to copy python.exe and name the copy python3.exe, this way you avoid errors when you use python 3's IDLE, console and other things that depend on python.exe</span>
<span class="comment-copy">It's better not to use renaming tricks and use the PyLauncher installed with Python.  See my answer.</span>
<span class="comment-copy">Being compatible with Unix shebang, you can also use <code>#!/usr/bin/env python2</code> or <code>#!/usr/bin/python2</code>. However, <code>#!/usr/bin/python</code> will not make PyLauncher use Python 2.</span>
<span class="comment-copy">This does not seem to add anything new to the existing answers.</span>
