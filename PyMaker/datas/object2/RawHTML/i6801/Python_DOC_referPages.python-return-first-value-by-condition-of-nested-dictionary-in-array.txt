<div class="post-text" itemprop="text">
<p>Have some array with nested dictionaries:<br/>
<code>data = [{'id':1, 'name':'test'}, {'id':2, 'name':'test'}, ....., {'id':N, 'name':'test'}]</code></p>
<p>Trying to return first <code>id</code> value where <code>name=test</code>:  </p>
<p><code>val = [x['id'] for x in data if x['name'] == 'test'][0]</code> </p>
<p>expected result: <code>val = 1</code></p>
<p>But having exception: <code>list index out of range</code><br/>
What's wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code works fine for me using your (slightly edited) sample data:</p>
<pre><code>data = [{'id': 1, 'name': 'test'}, {'id': 2, 'name': 'test'}, {'id': 3, 'name': 'test'}]
val = [x['id'] for x in data if x['name'] == 'test'][0]

&gt;&gt;&gt; print(val)
1
</code></pre>
<p>However, if there is no dictionary containing a name that matches the target string:</p>
<pre><code>&gt;&gt;&gt; val = [x['id'] for x in data if x['name'] == 'blah'][0]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
IndexError: list index out of range
</code></pre>
<p>This is because the list comprehension will create an empty list because there are no dictionaries with <code>d['name']</code> set to <code>'blah'</code>. Indexing an empty list results in the <code>IndexError</code> exception. It's the same as doing this:</p>
<pre><code>&gt;&gt;&gt; [][0]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
IndexError: list index out of range
</code></pre>
<hr/>
<p>A simple way to fix this is to check the list before indexing it:</p>
<pre><code>matches = [x['id'] for x in data if x['name'] == 'test']
val = matches[0] if matches else None
</code></pre>
<p>here it is assumed that <code>None</code> can not be used as the value for an <code>id</code>.</p>
<p>Another, more efficient way, again assuming that <code>None</code> is not a valid <code>id</code> is to use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> with a default value:</p>
<pre><code>val = next((x['id'] for x in data if x['name'] == 'test'), None)
</code></pre>
<p>This uses a generator expression which avoids generating a whole list containing the matched dictionaries. Instead it will iterate over the <code>data</code> list only until the first match is found, or the <code>data</code> list is exhausted.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def getFirstMatchingId(data):
    val = [x['id'] for x in data if x['name'] == 'test'] 
    if len(val) &gt;= 1:
        val = val[0]
        print "Matching ID:--&gt;",val

data = [{'id':1, 'name':'test'}, {'id':2, 'name':'test'}, {'id':3, 'name':'test'}]
getFirstMatchingId(data)

data = [{'id':1, 'name':'test1'}, {'id':2, 'name':'test'}, {'id':3, 'name':'test1'}]
getFirstMatchingId(data)

data = [{'id':1, 'name':'test1'}, {'id':2, 'name':'test1'}, {'id':3, 'name':'test1'}]
getFirstMatchingId(data)

data = []
getFirstMatchingId(data)
</code></pre>
<p>Above program will give output</p>
<p>Matching ID:--&gt; 1
Matching ID:--&gt; 2</p>
</div>
<span class="comment-copy">Please show us the full traceback</span>
<span class="comment-copy">It means there's no dict with <code>name == 'test'</code> in your list.</span>
<span class="comment-copy">Try next method</span>
<span class="comment-copy">@TerryA, this is a full trace, line and exception</span>
<span class="comment-copy">Alternative fix is to use <code>next</code> with generator expression which would also avoid constructing potentially long list: <code>next((x['id'] for x in data if x['name'] == 'test'), None)</code></span>
<span class="comment-copy">@niemmi: Thanks. It looks like I added that to my answer while you were commenting.</span>
