<div class="post-text" itemprop="text">
<p>I'm trying to follow this guide on pipenv and virtualenv: <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/" rel="nofollow noreferrer">http://docs.python-guide.org/en/latest/dev/virtualenvs/</a> . The problem is, I run into a problem when trying to <code>$ pipenv install requests</code> (which in my case I think should be <code>$python3 -m pipenv install requests</code> since simply <code>pipenv</code> returns command not found.)</p>
<p>Why is permission denied? </p>
<p>I'm a terminal noob so bear with me.</p>
<pre><code>$ pip3 install --user pipenv

$ python3 -m pipenv

Usage: __main__.py [OPTIONS] COMMAND [ARGS]...

$ python3 -m pipenv install requests

Creating a Pipfile for this project...
Traceback (most recent call last):
  File "/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/__main__.py", line 4, in &lt;module&gt;
    cli()
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/cli.py", line 895, in install
    ensure_project(three=three, python=python)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/cli.py", line 180, in ensure_project
    ensure_pipfile(validate=validate)
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/cli.py", line 141, in ensure_pipfile
    project.create_pipfile()
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/project.py", line 219, in create_pipfile
    self.write_toml(data, 'Pipfile')
  File "/Users/sahandzarrinkoub/Library/Python/3.6/lib/python/site-packages/pipenv/project.py", line 226, in write_toml
    with open(path, 'w') as f:
PermissionError: [Errno 13] Permission denied: 'Pipfile'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Make sure you've added the <a href="https://docs.python.org/3/library/site.html#site.USER_BASE" rel="nofollow noreferrer">UserBase</a>'s bin directory to your path (follow the Note box at the <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs#installing-pipenv" rel="nofollow noreferrer">documentation</a> you were following to see how to do this).</p>
<p>The third command you mentioned should just be: <code>pipenv install requests</code>.</p>
<hr/>
<p>Longer version:</p>
<p>I'll go a little more in depth for some of the command line concepts since you're getting started with the command line (and for others who would like a little more in depth reference).</p>
<p>You show three commands:</p>
<ul>
<li><code>pip3 install --user pipenv</code>
<ul>
<li>This is perfect, in installs pipenv as a user package (not avalible to the entire system)</li>
</ul></li>
<li><code>python3 -m pipenv</code>
<ul>
<li>This doesn't do anything.  What you see returned is a "<a href="https://en.wikipedia.org/wiki/Usage_message" rel="nofollow noreferrer">Usage message</a>". It's saying this command expects some main.py program, options (optional because in parenthesis), a command (mandatory) and potentially more arguments. If you see a usage message it means you did not call that program the way its author intended.</li>
</ul></li>
<li><code>python3 -m pipenv install requests</code>
<ul>
<li>This should just be <code>pipenv install requests</code>. But it won't work until you've added UserBase's bin to your path (you'll get a <code>pipenv: command not found</code> error).</li>
</ul></li>
</ul>
<p>Your <a href="http://www.linfo.org/path_env_var.html" rel="nofollow noreferrer"><code>PATH</code></a> is where your shell will search for the command you've listed. See changing your path on <a href="https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux/14638025#14638025">Mac or Linux</a> or <a href="http://windowsitpro.com/systems-management/how-can-i-add-new-folder-my-system-path" rel="nofollow noreferrer">Windows</a>.</p>
<p>As the <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs#installing-pipenv" rel="nofollow noreferrer">documentation</a> you were following mentions, you want to run <code>python3 -m site</code>, you'll get output something like the following:</p>
<pre><code>$ python -m site
  .
  .
  .
USER_BASE: '/Users/&lt;myusername&gt;/Library/Python/3.6' (exists)
USER_SITE: '/Users/&lt;myusername&gt;/Library/Python/3.6/lib/python/site-packages' (exists)
ENABLE_USER_SITE: True
</code></pre>
<p>Now that you know where your <code>USER_BASE</code> is, add a <code>/bin</code> onto the end and add it to your PATH.  Again see OS specific instructions but on OSX you can add <code>export PATH="$PATH:/Users/&lt;myusername&gt;/Library/Python/3.6/bin</code> to your <code>~/.profile</code>, run <code>source ~/.profile</code>, and your shell will now search that directory when you enter the command <code>pipenv</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same symptoms:</p>
<pre><code>with open(path, 'w') as f:
PermissionError: [Errno 13] Permission denied: 'Pipfile'
</code></pre>
<p>the problem was that I had a <code>Pipfile</code> in one of the parent directories and with different permissions (in my case, created by <code>root</code> while experimenting). Deleting this <code>Pipfile</code> resolved the issue. The same issue is discussed <a href="https://github.com/pypa/pipenv/issues/1102" rel="nofollow noreferrer" title="in this pipenv issue">Pipenv issue</a>.</p>
<p>More details: when trying to install/create a new virtual environment, pipenv looks into all the parent directories to see if there already is a <code>Pipfile</code> in there. If there is a <code>Pipfile</code>, and was created with different permissions (e.g. under <code>root</code> via <code>sudo</code> in my case), pipenv will not have permissions to write to this <code>Pipfile</code>, creating a somewhat unclear error message.</p>
<p>A tell tale sing is that <code>pipenv --where</code> prints a different directory name than you'd expect (or prints a directory path when you're just creating a new environment instead of "No pipfile present at project home...")</p>
</div>
<span class="comment-copy">try with <code>sudo</code></span>
<span class="comment-copy">I've heard that that is bad practice.</span>
<span class="comment-copy">and have you tried with <code>apt-get install python-YourPackage</code></span>
<span class="comment-copy">@Sandi <code>sudo</code> runs the app in root mode. You can use <code>sudo</code> unless or otherwise you are aware of what you are doing. Otherwise, it may harm the core.</span>
<span class="comment-copy">I don't know what I'm doing, so it feels like a bad idea using <code>sudo</code>. If you think it's okay in this case I'd be glad to know why.</span>
