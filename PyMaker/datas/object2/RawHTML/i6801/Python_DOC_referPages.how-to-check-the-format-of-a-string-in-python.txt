<div class="post-text" itemprop="text">
<p>I want to check the format of a string such as a registration plate, but I have no idea where to start.</p>
<p>I want the program to detect whether a string follows the format 'LLNN LLL', where L is a letter and N is a number.</p>
<p>I have seen multiple other questions about checking a string's format, but they where for a different programming language.</p>
</div>
<div class="post-text" itemprop="text">
<p>Pattern matching such as this is solved by <strong>regular expressions</strong>.</p>
<p>A <em>regular expression</em> – or <em>regex</em> – is a string defining a search pattern for use on other strings.</p>
<p>In python, they are covered by <a href="https://docs.python.org/3.6/library/re.html" rel="nofollow noreferrer">the <code>re</code> module</a>.</p>
<p>As an example, the following uses the set-matching <code>[]</code> to search for <em>either</em> an <code>a</code> or a <code>b</code>, followed by a <code>c</code>. It will return <code>None</code> in the first case, as it does not match <code>cc</code>. In the second case, one match is found: the <code>bc</code> between the <code>z</code>s and the <code>x</code>s. It would therefore evaluate to <code>True</code> in an <code>if</code> statement.</p>
<pre><code>matches_none = re.search('[ab]c', 'cc')
matches_once = re.search('[ab]c', 'qqqzzzbcxxx')
</code></pre>
<p>As the Python docs state, there are certain special sequences which match sets or certain conditions. <code>\d</code>, for example, will match any digit, and <code>\w</code> will match any alphanumeric. All of the following find a match.</p>
<pre><code>re.search('\w\d', '!!!54???')
re.search('\d\w', '!!5a?@#[ff')
re.search('[abc]\d\w', 'a5a')
</code></pre>
<p>There's a whole host of other features of regular expressions, including the ability to pick out matching groups, lookaheads, start- and end-of-string matching, and various ways of handling counts and multiplicity.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think this what you are looking for</p>
<pre><code>In [1]: import re

In [2]: temp = 'LL22 LLL'

In [3]: re.findall(r'[a-zA-Z][a-zA-Z]\d\d [a-zA-Z]+',temp)
Out[3]: ['LL22 LLL']
</code></pre>
</div>
<span class="comment-copy">you can always code it yourself, look into regex.</span>
<span class="comment-copy">This is a job for regular expressions, see the <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regex howto</a>.</span>
<span class="comment-copy">I still don't understand how to integrate something like that into my code...</span>
<span class="comment-copy">An explanation of what regexps are would have been more helpful than just a code snippet solving the problem at hand without any explanation.</span>
<span class="comment-copy">@brunodesthuilliers already 1st answer was a explanation of regular expression. Answering some thing doesn't make any sense. Therefore I wrote a solution for a problem</span>
<span class="comment-copy">Then you might have posted this as a comment to the first answer.</span>
<span class="comment-copy">@brunodesthuilliers sorry I am new to stackoverflow but I don't know how to post multi-line code as comment..</span>
