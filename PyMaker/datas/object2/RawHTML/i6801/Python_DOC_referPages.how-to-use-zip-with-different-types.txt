<div class="post-text" itemprop="text">
<p>I have the following code #1:</p>
<pre><code>await cur.execute(query)
async for row in cur:
   if row[1] not in banned_doorbots:
      result.append({
            'ding_id': row[0],
            'doorbot_id': row[1],
            'kind': row[2]
})
return result
</code></pre>
<p>I'm refactored it to #2:</p>
<pre><code>await cur.execute(query)
keys = ('ding_id', 'doorbot_id', 'kind')
return [dict(zip(keys, row)) async for row in cur
           if row[1] not in banned_doorbots]
</code></pre>
<p>But now I have a problem, my <code>ding_id</code> should contain <code>str</code> type,
like this <code>'ding_id': str(row[0])</code></p>
<p>How can I use my #2 solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>return [dict(zip(keys, [str(row[0])] + row[1:])) async for row in cur
           if row[1] not in banned_doorbots]
</code></pre>
<p>If <code>row</code> is a tuple, convert into a list first:</p>
<pre><code>return [dict(zip(keys, [str(row[0])] + list(row[1:]))) async for row in cur
       if row[1] not in banned_doorbots]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> doesn't care about types and surely doesn't convert integers to a strings. The only thing that matters is that the arguments should be iterables (which seems to be the case in your example). The elements inside those iterables are left untouched, though.</p>
<pre><code>keys = ('ding_id', 'doorbot_id', 'kind')
cur = [[1, 1000, 'a'], [2, 1002, 'b']]
print([dict(zip(keys, row)) for row in cur])
# [{'ding_id': 1, 'doorbot_id': 1000, 'kind': 'a'}, {'ding_id': 2, 'doorbot_id': 1002, 'kind': 'b'}]
</code></pre>
<p>You'll need to provide concrete examples of <code>row</code> and <code>cur</code>, but I really don't think that <code>zip</code> is the problem.</p>
<p>If you have a list of integers and want to convert it to strings, you can use <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>:</p>
<pre><code>&gt;&gt;&gt; map(str, [1, 2, 3])
['1', '2', '3']
</code></pre>
</div>
<span class="comment-copy">Do you have any example for <code>row</code>? Right now, it's impossible to test your code.</span>
<span class="comment-copy">Are you trying to convert <code>row[0]</code> to a string, or is <code>row[0]</code> a string when you don't want it to be?</span>
<span class="comment-copy">@jwodder convert <code>row[0]</code> to a string</span>
<span class="comment-copy">You seem to have a parenthesis missing.</span>
<span class="comment-copy">Thanks. Copy-paste problem. Fixed.</span>
<span class="comment-copy">I have the following error: <code>TypeError: can only concatenate list (not "tuple") to list</code></span>
<span class="comment-copy">Convert the rest of <code>row</code> into a list first. See my update answer.</span>
