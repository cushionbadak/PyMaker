<div class="post-text" itemprop="text">
<p>I'm making a program that takes currency from a string and converts it in to other currencies. For example, if the string was <code>'the car cost me $13,250'</code> I would need to get <code>$</code> and <code>13250</code>. I have this regex already <code>(?:\£|\$|\€)(?:.{1,})</code> that sort of does it, however there is a reasonably large possibility that the string might have more than one price, all using different currencies. This is something that I do no know how to do effectively. </p>
<p>What I need to know is how to extract all of the prices from a string. I think even if the regex just returns something like <code>['$12,250,000','£14,500,123','£120.25']</code> then it is fine because I can use something like this to get the number:</p>
<pre><code>prices = ['$12,250','£14,500','£120']
for value in prices:
    value.replace(',','')
</code></pre>
<p>And something like this to get the currency:</p>
<pre><code>for c in prices:
     currency = c[0]
</code></pre>
<p>Then there is the problem that the price might not be a whole number, and might be something like <code>$12.54</code>. Any help on how to get that initial list of prices would be great.</p>
</div>
<div class="post-text" itemprop="text">
<p>This regular expression will work better for your purposes:</p>
<p><code>(?:[\£\$\€]{1}[,\d]+.?\d*)</code></p>
<p>Try it out <a href="https://regex101.com/r/X5SPDK/1" rel="nofollow noreferrer">here</a>.</p>
<p>Then as sainoba notes, you can use <code>re.findall</code> or <code>re.finditer</code> to get the matches.</p>
<p>Then you can extract the currency from the first character, remove commas, and finally split on a decimal point if needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>re.findall</code> or <code>re.finditer</code>:</p>
<p><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall(pattern, string)</code></a> returns a list of matching strings.</p>
<p><a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow noreferrer"><code>re.finditer(pattern, string)</code></a> returns an iterator.</p>
</div>
<div class="post-text" itemprop="text">
<p>When dealing with currencies, you cannot use simple approaches like replacing commas and periods. There are a multitude of language and regional differences. The Euro may use commas or periods as the decimal separator. Some locales may have two or three digits between grouping separators. The currency symbol may be on the left or right. A symbol may represent any one of a dozen different currencies, depending on the user's locale.</p>
<p>Make use of a library to handle this work for you. This issue has been discussed in detail in other posts, such as <a href="https://stackoverflow.com/questions/37580151/parse-currency-into-numbers-in-python">this one</a>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/37580151/parse-currency-into-numbers-in-python">Parse currency into numbers in Python</a></span>
<span class="comment-copy">No I am fine with converting currency in to numbers as I showed, but I need to know how I can extract all of the price values from a string first.</span>
<span class="comment-copy">use <code>re.findall</code>? Something like <code>re.findall(r"(?:\£|\$|\€)(?:[\d\.\,]{1,})",s)</code> It won't be perfect, but maybe it will be easier to just filter false-positives later</span>
<span class="comment-copy">This is a duplicate. The problem you are having, and the solution to your problem (with a working example) are both in the link I posted.</span>
<span class="comment-copy">Thanks, this is exactly what I needed.</span>
