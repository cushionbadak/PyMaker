<div class="post-text" itemprop="text">
<p>When "if" is combined with "or", which one Python prioritize first:
for example:</p>
<pre><code>if a == b or c
</code></pre>
<p>is it <code>(a == b) or c</code>  or is it <code>a == (b or c)</code>.
I assume the correct logical form should be the former one but I accidentally used:</p>
<pre><code>if gender == "m' or "M" 
</code></pre>
<p>and to my surprise, it did not generate any errors and did the purpose.  </p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The following table summarizes the operator precedence in Python, from
  lowest precedence (least binding) to highest precedence (most
  binding).</p>
<pre><code>lambda
if â€“ else 
or    
and
not x 
in, not in, is, is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==  
...
</code></pre>
</blockquote>
<p>So, to answer your question,</p>
<pre><code>a == b or c
</code></pre>
<p>Is equivalent to </p>
<pre><code>(a == b) or (c)
</code></pre>
<hr/>
<p>The code <code>if gender == "m" or "M"</code> will work like this: Is <code>gender == 'm"</code>? If yes, the result is <code>True</code>. Otherwise, test the "truthiness" of <code>"M"</code>. Is <code>"M"</code> "true"? If it is, the result is true. To understand how this works, you should know that all objects have a truthiness associated to it. All non-zero integers, non-empty strings and data structures are <code>True</code>. <code>0</code>, <code>0.0</code>, <code>''</code>, <code>None</code>, <code>False</code>, <code>[]</code>, <code>{}</code> and <code>set()</code> are all <code>False</code>.</p>
<p>For more details, visit <a href="https://stackoverflow.com/questions/15112125/how-do-i-test-one-variable-against-multiple-values">How do I test one variable against multiple values?</a></p>
</div>
<span class="comment-copy">Question shows no research effort.  A simple SO or Google search would reveal the answer. Please read and follow the posting guidelines: what kinds of questions can I ask <a href="https://stackoverflow.com/help/on-topic">stackoverflow.com/help/on-topic</a>, and How to ask: <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a>.  Remember to also to include Minimal, complete, verifiable examples:  <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a>.  Then, click <code>edit</code> to edit your question so that we may help.</span>
<span class="comment-copy">Thank you, It is what seems logic to me and I have always used. But could you please explain how did what I used in my code work:</span>
<span class="comment-copy">@COLDSPEED: Thank you again. I appreciate such a clear explanation.</span>
