<div class="post-text" itemprop="text">
<p>I have a large CSV file with multiple columns of integer values:</p>
<pre class="lang-none prettyprint-override"><code>1122  2222 3333 6664
4588  2122 5555 7747
1155  8844 1147 8895
....  .... .... ....
</code></pre>
<p>I want to generate for each column a specific file in this format. Let's have an example of column 1:</p>
<pre><code>sudo google-chrome -c -a tt1
sudo google-chrome -a tt1 -d 1122 -u 1122

sudo google-chrome -c -a tt1
sudo google-chrome -a tt1 -d 4588 -u 4588

sudo google-chrome -c -a tt1
sudo google-chrome -a tt1 -d 1155 -u 1155
</code></pre>
<p>Until values of column 1 finish and we store it in specific file.</p>
<p>The same process should be repeated for all columns. At the end, each column will have its corresponding file in format 'columnx.sh'. </p>
<p>How can we reach this functionality using Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>I will give an explanation of a possible way (there are many, of course), without coding that for you. I think it's more valuable compared to a bare code snippet. This example assumes you don't have memory constraints in reading the entire file before writing yours.</p>
<p>Assuming you already know the language foundations, you should start from here, where the module <code>csv</code> is explained:</p>
<ul>
<li>Python 2: <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/2/library/csv.html</a> </li>
<li>Python 3: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html</a></li>
</ul>
<p>Module <code>csv</code> is the reference module to manipulate CSV files and it's integrated in your standard Python distribution from <a href="http://python.org" rel="nofollow noreferrer">http://python.org</a>.</p>
<p>Once its usage is clear to you, work with context managers to open and handle the CSV file, as explained in this Python 2 example on the documentation site:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('largefile.csv', 'rb') as csvfile:
...     spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
...     for row in spamreader:
...         # Store data in your data structure
</code></pre>
<p>You'll need to specify the delimiter parameter of <code>csv.reader</code> that is used in your specific CSV file. It could be a comma, or a tab, or a group of spaces. </p>
<p>While the spamreader reads each row of the input file you can store each value of each row in a data structure you prepared before your reading operation. In your case a list of list, basically a matrix, is a good choice as later you'll need to fetch your data in a serial-fashion.</p>
<p>You can use the <code>list.append</code> method to push each item of each row to the list tail. As you need to scan the values by column and the spamreader will work by rows create a list of list so you can represent the table in this matrix very easily.</p>
<p>Once the matrix is ready write your file, possibly using context managers. </p>
<pre><code>&gt;&gt;&gt; with open('columnx.sh', 'a') as the_file:
...     the_file.write('Hello\n')
</code></pre>
<p>This is an example of a file write from another question on Stackoverflow, at <a href="https://stackoverflow.com/a/6160082/3789324">https://stackoverflow.com/a/6160082/3789324</a></p>
<p>In this case you need to insert a nested <code>for</code> loop before the <code>file.write</code> method in which you can loop all your columns and all elements of columns.</p>
<p>The <code>file.write</code> method shall write the </p>
<pre><code>s1 = "sudo google-chrome -c -a tt1"
</code></pre>
<p>string first and then the string</p>
<pre><code>s2 = "sudo google-chrome -a tt1 -d item -u item"
</code></pre>
<p>where item is the number you just obtained from the list.</p>
<p>To substitute the item number in the string you can concatenate numbers to the substrings, this way:</p>
<pre><code>s = "sudo google-chrome -a tt1 -d " + str(item) + " -u " + str(item)"
</code></pre>
<p>So now you can pass s1 and s2 to the <code>file.write</code> write method at each different iteration for each element of the column:</p>
<pre><code>this_file.write(s1 + "\n" + s2 + "\n")
</code></pre>
<p>And you have your code snippet.</p>
</div>
<span class="comment-copy">I think you cannot ask people to do code for you...</span>
<span class="comment-copy">Learn about writing data to file, with modes. Also try reading a file and appending data to it. It will be helpful to start writing code</span>
<span class="comment-copy">I don't ask to code for me, I just want some suggestions and hints that's all bro</span>
<span class="comment-copy">Let me suggest a solution, maybe it's ok for you, but I won't write the code. I'll just explain a possible easy solution.</span>
