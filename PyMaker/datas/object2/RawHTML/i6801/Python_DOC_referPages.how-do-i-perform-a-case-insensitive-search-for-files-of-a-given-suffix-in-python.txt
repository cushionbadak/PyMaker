<div class="post-text" itemprop="text">
<p>I'm looking for the equivalent of <code>find $DIR -iname '*.mp3'</code>, and I don't want to do the kooky <code>['mp3', 'Mp3', MP3', etc]</code> thing. But I can't figure out how to combine the <code>re*.IGNORECASE</code> stuff with the simple <code>endswith()</code> approach. My goal is to not miss a single file, and I'd like to eventually expand this to other media/file types/suffixes.</p>
<pre><code>import os
import re
suffix = ".mp3"

mp3_count = 0

for root, dirs, files in os.walk("/Volumes/audio"):
    for file in files:
        # if file.endswith(suffix):
        if re.findall('mp3', suffix, flags=re.IGNORECASE):
            mp3_count += 1

print(mp3_count)
</code></pre>
<p>TIA for any feedback</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this :)</p>
<pre><code>import os
# import re
suffix = "mp3"

mp3_count = 0

for root, dirs, files in os.walk("/Volumes/audio"):
    for file in files:
        # if file.endswith(suffix):
        if file.split('.')[-1].lower() == suffix:
            mp3_count += 1

print(mp3_count)
</code></pre>
<p>Python's <code>string.split()</code> will separate the string into a list, depending on what parameter is given, and you can access the suffix by <code>[-1]</code>, the last element in the list</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't bother with <code>os.walk</code>. Learn to use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">the easier, awesome <code>pathlib.Path</code></a> instead. Like so:</p>
<pre><code>from pathlib import Path

suffix = ".mp3"

mp3_count = 0

p = Path('Volumes')/'audio': # note the easy path creation syntax
# OR even:
p = Path()/'Volumes'/'audio': 

for subp in p.rglob('*'): #  recursively iterate all items matching the glob pattern
    # .suffix property refers to .ext extension
    ext = subp.suffix
    # use the .lower() method to get lowercase version of extension
    if ext.lower() == suffix: 
        mp3_count += 1

print(mp3_count)
</code></pre>
<p>"One-liner", if you're into that sort of thing (multiple lines for clarity):</p>
<pre><code>sum([1 for subp in (Path('Volumes')/'audio').rglob('*')
     if subp.suffix.lower() == suffix])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The regex equivalent of <code>.endswith</code> is the <code>$</code> sign.</p>
<p>To use your example above, you could do this;</p>
<pre><code>re.findall('mp3$', suffix, flags=re.IGNORECASE):
</code></pre>
<p>Though it might be more accurate to do this;</p>
<pre><code>re.findall(r'\.mp3$', suffix, flags=re.IGNORECASE):
</code></pre>
<p>which makes sure that the filename ends with <code>.mp3</code> rather than picking up files such as <code>test.amp3</code>.</p>
<p>This is a pretty good example of a situation that doesn't really require regex - so while you're welcome to learn from these examples, it's worth considering the alternatives provided by other answerers.</p>
</div>
<span class="comment-copy">Does it have to be a regex solution? Why not <code>pathlib.Path(file).suffix.lower() == '.mp3'</code>?</span>
<span class="comment-copy">Thanks. Simple, and it was the only suggestion I could get to actually work.</span>
<span class="comment-copy">Great suggestion by @Rawing to use <code>.rglob()</code> rather than <code>iterdir()</code>. I've edited the answer to do that instead.</span>
