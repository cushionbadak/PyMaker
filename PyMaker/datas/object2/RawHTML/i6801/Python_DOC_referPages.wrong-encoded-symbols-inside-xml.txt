<div class="post-text" itemprop="text">
<p>I'm trying to get data from some web-service with python 3.4 via 'requests' lib. I need to get a valid xml-string for parsing with 'lxml' library. But for some reason data inside xml encoded uncorrectly:</p>
<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
    &lt;soap:Body&gt;
         &lt;xmlData&gt;
         &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&amp;lt;Response&amp;gt;&amp;lt;Data&amp;    gt;&amp;lt;Company&amp;gt;... etc.
         &lt;/xmlData&gt;
    &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</code></pre>
<p>With following code:</p>
<pre><code>ssession = requests.Session()
session.get(target_url)
exml = session.post(target_url, data=__xml, headers=headers)
print(exml.text)
</code></pre>
<p>How can I extract data without symbols like '&gt;' inside XML? Is this possible without manual replacing <code>&amp;gt;</code> symbols to its equivalent?</p>
</div>
<div class="post-text" itemprop="text">
<p>Currently your SOAP response is valid, well-formed XML. The reason for the character entities is because you have an embedded XML document and hence actual markup cannot show for that inner XML in order for entire response to remain valid. </p>
<p>Simply parse out the embedded XML, encode it as a bytes object to accept the special declaration characters, and parse at its own XML tree. </p>
<pre><code>from io import BytesIO
import lxml.etree as ET

# same SOAP response code...

# ORIGINAL TREE
soap_doc = ET.parse(BytesIO(exml.text.encode('utf-8')))
embedded_data = soap_doc.findall(".//xmlData")[0].text.strip().encode('utf-8')

# NEW TREE
tree = ET.parse(BytesIO(embedded_data))

# OUTPUT TO FILE
with open('output.xml', 'wb') as f:
    f.write(ET.tostring(tree, xml_declaration=True, 
                        pretty_print=True, encoding='utf-8'))

#&lt;?xml version='1.0' encoding='utf-8'?&gt;
#&lt;Response&gt;
#  &lt;Data&gt;
#    &lt;Company&gt; &lt;/Company&gt;
#  &lt;/Data&gt;
#&lt;/Response&gt;
</code></pre>
<p>Above code tested on this string which completes a valid <code>&lt;xmlData&gt;</code> as OP omits the rest of embedded XML:</p>
<pre><code>'''&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
    &lt;soap:Body&gt;
         &lt;xmlData&gt;
          &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&amp;lt;Response&amp;gt;&amp;lt;Data&amp;gt;&amp;lt;Company&amp;gt; &amp;lt;/Company&amp;gt;&amp;lt;/Data&amp;gt;&amp;lt;/Response&amp;gt;
         &lt;/xmlData&gt;
    &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
'''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There might be another way to do this, but a coarse grained approach is to create a table of characters you want to convert and just replace them;</p>
<pre><code>replacements = {
    "&amp;gt;" : "&gt;",
    "&amp;lt;" : "&lt;"
    }

def replace(xml):
    repl_str = xml
    for char in replacements:
        repl_str = repl_str.replace(char, replacements[char])
    return repl_str
</code></pre>
<p>Added note; a small table can be found here <a href="https://www.w3schools.com/HTML/html_entities.asp" rel="nofollow noreferrer">w3schools entities</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>unescape</code> function from the standard library's <a href="https://docs.python.org/3/library/xml.sax.utils.html#module-xml.sax.saxutils" rel="nofollow noreferrer">sax</a> package.</p>
<pre><code>&gt;&gt;&gt; from xml.sax.saxutils import unescape
&gt;&gt;&gt; escaped = """&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&amp;lt;Response&amp;gt;&amp;lt;Data&amp;gt;&amp;lt;Company&amp;gt;"""
&gt;&gt;&gt; unescape(escaped)
'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;Response&gt;&lt;Data&gt;&lt;Company&gt;'
</code></pre>
<p><code>unescape</code> handles ampersands and angle brackets by default; you can pass a dictionary to handle other replacements. From the <a href="https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.unescape" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>xml.sax.saxutils.unescape(data, entities={})</p>
<p>Unescape '&amp;', '&lt;', and '&gt;' in a string of data.</p>
<p>You can unescape other strings of data by passing a dictionary as the optional entities parameter. The keys and values must all be
  strings; each key will be replaced with its corresponding value.
  '&amp;amp', '&lt;', and '&gt;' are always unescaped, even if entities is
  provided.</p>
</blockquote>
</div>
<span class="comment-copy">That's all I need and it works. Thanks!</span>
<span class="comment-copy">This will not yield a valid XML according to W3C standards as opening declaration repeats in document: <code>&lt;?xml ... ?&gt;</code>, rendering a not a well-formed XML. Remember XML is not a simple text file but maintains markup rules.</span>
