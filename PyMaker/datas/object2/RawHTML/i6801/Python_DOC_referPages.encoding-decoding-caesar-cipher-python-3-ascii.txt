<div class="post-text" itemprop="text">
<p>I am learning to code through the introduction to computer science book written by John Zelle. I am stuck on exercise 5.8. I need to somehow modify this solution where the next character after "z" is "a" in order to make it circular. Any help would be great :)</p>
<pre><code>def main():
    print("This program can encode and decode Caesar Ciphers") #e.g. if key value is 2 --&gt; word shifted 2 up e.g. a would be c
    #input from user
    inputText = input("Please enter a string of plaintext:").lower()
    inputValue = eval(input("Please enter the value of the key:"))
    inputEorD = input("Please enter e (to encrypt) or d (to decrypt) ")
    #initate empty list
    codedMessage = ""

    #for character in the string
    if inputEorD == "e":
        for ch in inputText:
            codedMessage += chr(ord(ch) + inputValue) #encode hence plus
    elif inputEorD =="d":
            codedMessage += chr(ord(ch) - inputValue) #decode hence minus
    else:
        print("You did not enter E/D! Try again!!")
    print("The text inputed:", inputText,  ".Is:", inputEorD, ".By the key of",inputValue, ".To make the message", codedMessage)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you're dealing with <code>.lower()</code>-case letters, it's fair to know that their ASCII range is [97-122].</p>
<p>A good way to make the shifting circular would be to represent each letter with the range [0-25], which is done by <code>ord(ch) - 97</code>, and then add the key, then modulo the result with 26 so it becomes <code>(ord(ch) - 97 + key)%26</code>, we'll then have a result in range [0-25], adding 97 will then get it's ASCII code:</p>
<pre><code>def main():
    print("This program can encode and decode Caesar Ciphers")
    inputText = input("Please enter a string of plaintext:").lower()
    inputValue = int(input("Please enter the value of the key:")) # use int(), don't eval unless you read more about it
    inputEorD = input("Please enter e (to encrypt) or d (to decrypt) ")
    codedMessage = ""

    if inputEorD == "e":
        for ch in inputText:
            codedMessage += chr((ord(ch) - 97 + inputValue)%26 + 97)
    elif inputEorD =="d":
            codedMessage += chr((ord(ch) - 97 - inputValue)%26 + 97)
    else:
        print("You did not enter E/D! Try again!!")
    print("The text inputed:", inputText,  ".Is:", inputEorD, ".By the key of",inputValue, ".To make the message", codedMessage)

main()
</code></pre>
</div>
<span class="comment-copy">Hint: use the <a href="https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations" rel="nofollow noreferrer">modulo</a> operator.</span>
<span class="comment-copy">Brilliant - thanks for the help on this one :)</span>
<span class="comment-copy">@karan Glad to help :).</span>
