<div class="post-text" itemprop="text">
<p>I am using Watson Personality Insights to get results from a body of text. The results I am getting from the Node.js Personality insights demo are different from the results I get when using the Python SDK.</p>
<p>Python script:</p>
<pre><code>with open('input_file.txt', encoding='utf-8') as input_file:
    profile = personality_insights.profile(
        input_file.read(), content_type='text/plain;charset=utf-8',
        raw_scores=True, consumption_preferences=True)

    print(profile)
</code></pre>
<p>Python output: (adding only agreeableness scores to stay under character limit)</p>
<pre><code>{
        "trait_id": "big5_agreeableness",
        "name": "Agreeableness",
        "category": "personality",
        "percentile": 0.2641097108346445,
        "raw_score": 0.717124182764663,
        "children": [{
                "trait_id": "facet_altruism",
                "name": "Altruism",
                "category": "personality",
                "percentile": 0.5930367181429955,
                "raw_score": 0.7133462509414262
            },
            {
                "trait_id": "facet_cooperation",
                "name": "Cooperation",
                "category": "personality",
                "percentile": 0.49207238025136585,
                "raw_score": 0.5781918028043768
            },
            {
                "trait_id": "facet_modesty",
                "name": "Modesty",
                "category": "personality",
                "percentile": 0.7504251965616365,
                "raw_score": 0.4840369062774408
            },
            {
                "trait_id": "facet_morality",
                "name": "Uncompromising",
                "category": "personality",
                "percentile": 0.4144135962141314,
                "raw_score": 0.6156094284542545
            },
            {
                "trait_id": "facet_sympathy",
                "name": "Sympathy",
                "category": "personality",
                "percentile": 0.8204286367393345,
                "raw_score": 0.6984933017082747
            },
            {
                "trait_id": "facet_trust",
                "name": "Trust",
                "category": "personality",
                "percentile": 0.5357101531393991,
                "raw_score": 0.5894943830064112
            }
        ]
    }
</code></pre>
<p>Node.js script:</p>
<pre><code>fs.readFile('input_file.txt', 'utf-8', function (err,data) {
   var params={};
   params.text=data;
   params.content_type='text/plain; charset=utf-8';
   params.raw_scores=true;
   params.consumption_preferences=true;

   personality_insights.profile(params, function(error, response) {
    console.log(JSON.stringify(response));
   });
});
</code></pre>
<p>Node.js output:</p>
<pre><code>{
                "id": "Agreeableness",
                "name": "Agreeableness",
                "category": "personality",
                "percentage": 0.2798027409516949,
                "sampling_error": 0.101059064,
                "children": [{
                    "id": "Altruism",
                    "name": "Altruism",
                    "category": "personality",
                    "percentage": 0.597937110939136,
                    "sampling_error": 0.07455418080000001
                }, {
                    "id": "Cooperation",
                    "name": "Cooperation",
                    "category": "personality",
                    "percentage": 0.46813215597029234,
                    "sampling_error": 0.0832951302
                }, {
                    "id": "Modesty",
                    "name": "Modesty",
                    "category": "personality",
                    "percentage": 0.7661123497302398,
                    "sampling_error": 0.0594182198
                }, {
                    "id": "Morality",
                    "name": "Uncompromising",
                    "category": "personality",
                    "percentage": 0.42178661415240626,
                    "sampling_error": 0.0662383546
                }, {
                    "id": "Sympathy",
                    "name": "Sympathy",
                    "category": "personality",
                    "percentage": 0.8252000440378008,
                    "sampling_error": 0.1022423736
                }, {
                    "id": "Trust",
                    "name": "Trust",
                    "category": "personality",
                    "percentage": 0.5190032062613837,
                    "sampling_error": 0.0600995984
                }]
            }
</code></pre>
<p>The input file for both is the same:</p>
<pre><code>Operations at ports in the U.S. Southeast are shut as the region copes with the changing path of one hurricane even as another is churning toward the region. Hurricane Irma was downgraded to a Category 1 storm as it pushed up through western and central Florida, the WSJ’s Arian Campo-Flores and Joseph De Avila report. That put the Port Tampa Bay in its path but left major trade gateways on the Atlantic coast, including Jacksonville, Georgia’s Port of Savannah and South Carolina Port of Charleston largely outside the storm’s strongest force. The second Category 4 storm to reach the U.S. this season lashed the Miami area with powerful winds and sheets of rain, and both Florida coasts were preparing for severe storm surges and flooding as it headed north and likely toward Georgia. With the storm following so soon after Hurricane Harvey hit the Gulf Coast and a third storm, Jose, heading north, the U.S. issued a rare waiver of the Jones Act, the federal law that prohibits foreign ships from operating in domestic sea routes, the WSJ’s Costas Paris reports. The action will allow foreign tankers to distribute fuel to hurricane-stricken areas.
</code></pre>
<p>There is a mismatch in the values received from the two approaches. The values are the same for both the scripts when <code>content_type=text/plain</code> the addition of the <code>charset=utf-8</code> attribute does not seem to make a difference in the results received through the Python code.</p>
</div>
<div class="post-text" itemprop="text">
<p>As you can see, when the params are set for text/plain, Watson API suggest to use the param: <code>Accept: application/json</code> because is the desired content type of the <code>response</code>, you can choose <code>CSV</code> or <code>JSON</code> format.</p>
<p><strong>For example:</strong></p>
<pre><code>profile(text, content_type='text/plain', content_language=None,
  accept='application/json', accept_language=None, raw_scores=False,
  consumption_preferences=False, csv_headers=False)
</code></pre>
<p><strong>Important:</strong> In your example with Python, you set just to <code>print</code> the <code>profile</code>, and not use the <code>indent</code> for getting the basic pretty printing result like the Node return. <em>I think maybe it is your problem with the return.</em> </p>
<p><strong>So</strong> try to use <code>print(json.dumps(profile, indent=2))</code> instead of <code>print(profile)</code></p>
<p>I did the example from the API Reference with <a href="https://www.ibm.com/watson/developercloud/personality-insights/api/v3/?python#profile" rel="nofollow noreferrer">Python</a> and <a href="https://www.ibm.com/watson/developercloud/personality-insights/api/v3/?node#profile" rel="nofollow noreferrer">Node</a>, and I get the <em>same result</em>.</p>
<p><strong>Python example for using Personality Insight:</strong></p>
<pre><code>personality_insights = PersonalityInsightsV3(
  version='2016-10-20',
  username='{username}',
  password='{password}')

with open(join(dirname(__file__), './profile.json')) as profile_json:
  profile = personality_insights.profile(
    profile_json.read(), content_type='application/json',
    raw_scores=True, consumption_preferences=True)

print(json.dumps(profile, indent=2))
</code></pre>
<p><strong>Node example for using Personality Insight:</strong></p>
<pre><code>var PersonalityInsightsV3 = require('watson-developer-cloud/personality-insights/v3');
var personality_insights = new PersonalityInsightsV3({
  username: '{username}',
  password: '{password}',
  version_date: '2016-10-20'
});

var params = {
  // Get the content items from the JSON file.
  content_items: require('./profile.json').contentItems,
  consumption_preferences: true,
  raw_scores: true,
  headers: {
    'accept-language': 'en',
    'accept': 'application/json'
  }
};

personality_insights.profile(params, function(error, response) {
  if (error)
    console.log('Error:', error);
  else
    console.log(JSON.stringify(response, null, 2));
  }
);
</code></pre>
<ul>
<li>Reference for <a href="https://stackoverflow.com/questions/12943819/how-to-prettyprint-a-json-file">JSON</a> return with <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">Python</a>.</li>
<li><a href="https://www.ibm.com/watson/developercloud/personality-insights/api/v3/?python#methods" rel="nofollow noreferrer">API Reference</a> for use Personality Insights.</li>
</ul>
</div>
<span class="comment-copy">Can you please added the return for each code example?</span>
<span class="comment-copy">Thanks for the reply. I have added the output for both. The issue seems to be with the reading of the input file as the number of words sent to WPI is different even when reading the same file.</span>
<span class="comment-copy">Try to Test my IMPORTANT marked in bold</span>
