<div class="post-text" itemprop="text">
<p>I have a simple library distributed as a .py file.  I would like to raise an exception if the library is called from Python 2 instead of Python 3:</p>
<pre><code>def _check_version():
    if sys.version_info &lt; (3,):
        raise _____Exception('This library depends on Python 3 strings. Please ensure you are using Python 3 instead of Python 2')
</code></pre>
<p>What built-in exception should I raise? (How do I fill in the blank above?) The closest exception I can find among the <a href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy" rel="nofollow noreferrer">builtin Exceptions</a> is NotImplementedError. The DeprecationWarning feels close, but an exception is more appropriate in this case.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use <a href="https://docs.python.org/3/library/exceptions.html#RuntimeError" rel="noreferrer"><code>RuntimeError</code></a> for this; there is no more specific exception.</p>
</div>
<span class="comment-copy">why would you want to raise an exception in this case instead of just exiting?</span>
<span class="comment-copy">Raising an exception might help the user trace it back to the right library, or to some intermediate code that depends on the library.  Although that sounds highly unlikely in this case. I also want my students to get into the habit of raising exceptions instead of just exiting.</span>
