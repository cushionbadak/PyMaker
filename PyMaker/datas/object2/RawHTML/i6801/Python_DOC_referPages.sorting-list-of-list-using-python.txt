<div class="post-text" itemprop="text">
<p>I have list </p>
<pre><code>value =[(22, 11, 195, 37), (19, 11, 184, 45), (300, 17, 12, 19), (210, 18, 128, 30) (100, 18, 128, 30)]
</code></pre>
<p>Now i Need to sort the list in combination of first two values in the list of ascending order.</p>
<p>like this </p>
<pre><code>s = [(19, 11, 184, 45), (22, 11, 195, 37), (300, 17, 12, 19),(100, 18, 128, 30), (210, 18, 128, 30) ]
</code></pre>
<p>I used </p>
<pre><code>s = sorted(value, key = lambda x: (x[1], x[0]))
</code></pre>
<p>And i ended up sorting the list for 2nd (x[1]) value of the list like this,</p>
<pre><code>s = [(22, 11, 195, 37), (19, 11, 184, 45), (300, 17, 12, 19), (210, 18, 128, 30) (100, 18, 128, 30)]
</code></pre>
<p>Are there any methods? I have also tried with operator library, it gives me the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>Okay after a lot of fiddleing i think I did it. Here is my code:</p>
<pre><code>sorted(s, key=lambda x: (x[1] * 1, x[0]))
</code></pre>
<p>output is: </p>
<pre><code>[(19, 11, 184, 45), (22, 11, 195, 37), (300, 17, 12, 19), (100, 18, 128, 30), (210, 18, 128, 30)]
</code></pre>
<p>Basically what this does is sorts the tuples by index 1 but if two or more tuples have the same number on index 1 it checks their index 0 numbers and sorts them ascendingly.</p>
</div>
<div class="post-text" itemprop="text">
<p>As you understood, the <code>sorted</code> function (and the <code>list.sort</code> method as well) takes a key as optional argument, which tells how to sort the elements.</p>
<p>You're using <code>lambda x: (x[0], x[1])</code> as key, but your output clearly shows that you want the second member to have more priority than the first.
Try with this key:</p>
<pre><code>l = sorted(l, key=lambda t: (t[1], t[0]))
</code></pre>
<p>This will give a higher importance to the second member of each tuple.</p>
<p>As expected, the output is:</p>
<pre><code>[(0, 0, 559, 225),
(19, 11, 184, 45),
(22, 11, 195, 37),
(300, 17, 12, 19),
(210, 18, 128, 30)]
</code></pre>
</div>
<span class="comment-copy"><code>sorted(value, key = lambda x: (x[1], x[0]))</code> returns the desired result not the list that starts with <code>(22, 11, 195, 37)</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/9376384/sort-a-list-of-tuples-depending-on-two-elements">Sort a list of tuples depending on two elements</a></span>
<span class="comment-copy">Actually the list was big, so i made my own list,  here is the full list  [(0, 0, 559, 225), (344, 11, 195, 37), (19, 11, 184, 45), (209, 18, 128, 30), (517, 20, 12, 19), (492, 20, 16, 5), (354, 20, 9, 4), (476, 21, 7, 15), (435, 21, 21, 17), (404, 21, 15, 17), (30, 21, 15, 17), (305, 28, 8, 10), (242, 28, 2, 1), (128, 28, 7, 10), (83, 28, 13, 10), (61, 28, 12, 10), (354, 32, 11, 7), (492, 33, 16, 6), (285, 37, 1, 1), (242, 37, 3, 1), (221, 37, 1, 1), (152, 37, 2, 1), (291, 64, 138, 46), (132, 65, 154, 37), (142, 74, 10, 5), (403, 81, 3, 11), (379, 82, 15, 10), (360, 82, 2, 1)]</span>
<span class="comment-copy">Even this is a part of list.  I want to sort for first two values from the list</span>
<span class="comment-copy">@DeepanRaj yeah but how do you want it to be sorted? What do you mean by first two values. The question is unclear...</span>
<span class="comment-copy">The first two values in the list say [(0,0,559,225)] in this the first two values 0 and 0, based on the ascending order combination of these two values i need to sort the list</span>
<span class="comment-copy">your question is in contradiction with the example you provided</span>
<span class="comment-copy">Side-note: <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer">Using <code>operator.itemgetter</code></a> can be a bit more self-documenting here (and a titch faster as a bonus), e.g. <code>key=itemgetter(1, 0)</code>.</span>
<span class="comment-copy">@ShadowRanger That's smart. I did not know of <code>itemgetter</code>.</span>
<span class="comment-copy">I used the same s = sorted(calculation, key = lambda x: (x[1], x[0])) And i still not getting sorted for my original list. which i have commented below</span>
<span class="comment-copy">[(0, 0, 559, 225), (344, 11, 195, 37), (19, 11, 184, 45), (209, 18, 128, 30), (517, 20, 12, 19), (492, 20, 16, 5), (354, 20, 9, 4), (476, 21, 7, 15), (435, 21, 21, 17), (404, 21, 15, 17), (30, 21, 15, 17), (305, 28, 8, 10), (242, 28, 2, 1), (128, 28, 7, 10), (83, 28, 13, 10), (61, 28, 12, 10), (354, 32, 11, 7), (492, 33, 16, 6), (285, 37, 1, 1), (242, 37, 3, 1), (221, 37, 1, 1), (152, 37, 2, 1), (291, 64, 138, 46), (132, 65, 154, 37), (142, 74, 10, 5), (403, 81, 3, 11), (379, 82, 15, 10), (360, 82, 2, 1)]  This is a part of my list</span>
<span class="comment-copy">@DeepanRaj I think that the problem is that your criterion is not well-defined. What you asked is rather unclear, but the solution I provided you does work for the sample list you gave. Could you try and define more precisely what behaviour you're expecting?</span>
