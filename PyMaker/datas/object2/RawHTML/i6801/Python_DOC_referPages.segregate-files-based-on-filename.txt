<div class="post-text" itemprop="text">
<p>I've got a directory containing multiple images, and I need to separate them into two folders based on a portion of the file name. Here's a sample of the file names:</p>
<ol>
<li>22DEC16<strong>7603</strong>520981127600_03.jpg</li>
<li>13NOV16<strong>2302</strong>999230157801_07.jpg</li>
<li>08JAN14<strong>7603</strong>811108236510_02.jpg</li>
<li>21OCT15<strong>2302</strong>197661710099_07.jpg</li>
<li>07MAR17<strong>2302</strong>551529900521_01.jpg</li>
<li>19FEB17<strong>3211</strong>074174309177_09.jpg</li>
<li>19FEB17<strong>3211</strong>881209232440_02.jpg</li>
<li>19FEB17<strong>2302</strong>491000265198_04.jpg</li>
</ol>
<p>I need to move the files into two folders according to the numbers in bold after the date - so files containing 2302 and 3211 would go into an existing folder named "panchromatic" and files with 7603 would go into another folder named "sepia". </p>
<p>I've tried multiple examples from other questions, and none seem to fit this problem. I'm very new to Python, so I'm not sure what example to post. Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this the easy way or the hard way.</p>
<h1>Easy way</h1>
<p>Test if your filename contains the substring you're looking for.</p>
<pre><code>import os
import shutil
files = os.listdir('.')
for f in files:
    # skip non-jpeg files
    if not f.endswith('.jpg'):
        continue
    # move if panchromatic
    if '2302' in f or '3211' in f:
        shutil.move(f, os.path.join('panchromatic', f))
    # move if sepia
    elif '7603' in f:
        shutil.move(f, os.path.join('sepia', f))
    # notify if something else
    else:
        print('Could not categorize file with name %s' % f)
</code></pre>
<p>This solution in its current form is susceptible to mis-classification, as the number we're looking for can appear by chance later in the string. I'll leave you to find ways to mitigate this.</p>
<h1>Hard way</h1>
<p>Regular expressions. Match the four letter digits after the date with a regular expression. Left for you to explore!</p>
</div>
<div class="post-text" itemprop="text">
<p>Without giving you the solution, here's what I'd recommend.</p>
<ol>
<li><p>Use <code>os.listdir</code> to iterate over files in your directory.</p>
<pre><code>path = '/path/to/dir/'
for file in os.listdir(path):
...
</code></pre></li>
<li><p>Check the 4 digits by slicing your string. By the looks of it, you'd need to get <code>file[6:10]</code></p></li>
<li><p>Check <code>if int(file[6:10]) in {2302, 2311}</code>. If yes, <code>dst = /path/to/panchromatic</code>. Else, <code>dst = /path/to/sepia/</code></p></li>
<li><p>Use <code>shutil.move</code> to move files. Something like <code>shutil.move(os.path.join(path, file), dst)</code>, where <code>os.path.join</code> joins path artefacts.</p></li>
<li><p>Make sure you <code>import os</code> and <code>import shutil</code> at the top of your script.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Self explanative, with Python 3, or Python 2 + backport <code>pathlib</code>:</p>
<pre><code>import pathlib
import shutil

# Directory paths. Tailor this to your files layout
# see https://docs.python.org/3/library/pathlib.html#module-pathlib
source_dir = pathlib.Path('.')
sepia_dir = source_dir / 'sepia'
panchro_dir = source_dir / 'panchromatic'

assert sepia_dir.is_dir()
assert panchro_dir.is_dir()

destinations = {
    ('2302', '3211'): panchro_dir,
    ('7603',): sepia_dir
}

for filename in source_dir.glob('*.jpg'):
    marker = str(filename)[7:11]
    for key, value in destinations.items():
        if marker in key:
            filepath = source_dir / filename
            shutil.move(str(filepath), str(value))
</code></pre>
</div>
<span class="comment-copy">Please share what you have tried so far? regex? direct matching of a substring?</span>
<span class="comment-copy">which multiple examples you tried? Describe here so one can point out issue.</span>
<span class="comment-copy">The idea here is to help OP learn, not spoon feed code...</span>
<span class="comment-copy">@COLDsPEED I believe a good way to learn is by example. However, I took your advice to heart and added some pointers where he can improve the solution himself.</span>
<span class="comment-copy">Thanks for sharing this - I've edited slightly, however, I get some errors from the shutil.py (I'm using 2.7) - line 299, in more Copy2(src, real-dst), line 128, in Copy2 copyfile (src, dst), and line 82, in Copyfile with open (src, 'rb') as fsrc: IOError: [Errno2] no such file or directory</span>
<span class="comment-copy">I got this to work, thanks for your help. I found out that I needed to change the shutil.move(f,os.path.join('sepia',f)) to shutil.move(os.path.join(path,f),sepia), otherwise, I was getting an error stating that there was no such file or directory</span>
<span class="comment-copy">thanks for adding this - I'm going to add in these tips to the previous solution to slice the string just in case one of my .jpg names contains the values that weren't expected</span>
<span class="comment-copy">@frumble It's actually easier and much faster to vomit code into an answer than explain every step so you can understand. I'm sure the answer you just accepted taught you nothing.</span>
<span class="comment-copy">thank you very much for posting, however, it wouldn't work because I can't access the pathlib module and must rely on our tech support to do this because of policy. As soon as they add the module, I will try this way as well.</span>
