<div class="post-text" itemprop="text">
<p>I often find some functions defined like <code>open(name[, mode[, buffering]])</code> and I know it means optional parameters.<br/>
Python document says it's module-level function. When I try to define a function with this style, it always failed.<br/>
For example<br/>
<code>def f([a[,b]]): print('123')</code><br/>
does not work.<br/>
Can someone tell me what the module-level means and how can I define a function with this style? </p>
</div>
<div class="post-text" itemprop="text">
<p>"<em>1. if we can define optional parameters using this way(no at present)</em>" </p>
<p>The square bracket notation not python syntax, it is Backus-Naur form - it is a documentation standard only.  </p>
<ol start="2">
<li>A module-level function is a function defined in a module (including <code>__main__</code>) - this is in contrast to a function defined within a class (a method).</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you are looking for?</p>
<pre><code>&gt;&gt;&gt; def abc(a=None,b=None):
...  if a is not None: print a
...  if b is not None: print b
... 
&gt;&gt;&gt; abc("a")
a
&gt;&gt;&gt; abc("a","b")
a
b
&gt;&gt;&gt; abc()
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Up to now, I still don't get an answer expected. Initially, when I saw this way of expression <code>open(name[, mode[, buffering]])</code>, I really want to know what does that mean. It means optional parameters obviously. At that moment, I found it may be a different way(different from normal way like <code>f(a,b,c=None,d='balabala')</code>) to define a function with optional parameters but not only tell us it's optional parameters. The benefit of this writing can help us use optional parameters but no default value, so I think it's a more clear and more simple way to define optional parameters.<br/>
What I really want to know is about 2 things: 1. if we can define optional parameters using this way(no at present) 2. It will be nice if someone could explain what does the module-level function mean?
I am really appreciated for the above answers and comments! THANKS A LOT</p>
</div>
<span class="comment-copy">i think you are speaking about the doc representation, like it was for <a href="https://docs.python.org/2/library/functions.html?highlight=open#open" rel="nofollow noreferrer">python2</a>, maybe the <a href="https://docs.python.org/3/library/functions.html?highlight=open#open" rel="nofollow noreferrer">python3</a> doc is more clear ? It's about optional parameters, like <code>def f(a=None, b=None)</code></span>
<span class="comment-copy">See this answer to <a href="https://stackoverflow.com/questions/9539921/function-with-optional-arguments#9539977">Function with optional arguments?</a>.</span>
<span class="comment-copy">The square bracket notation is not code, it is a way of describing language syntax called Backus-Naur form.  It is used extensively for the documentation of many languages, not just python. <a href="https://en.wikipedia.org/wiki/Augmented_Backus-Naur_form" rel="nofollow noreferrer">en.wikipedia.org/wiki/Augmented_Backus-Naur_form</a></span>
<span class="comment-copy">It seems there is no real coding with this style, so the doc representation is just representation and it does not represent the real code?</span>
<span class="comment-copy">exactly ! Now what was your goal, to write a function accepting optional parameters ? Do you know some ways to achieve that ?</span>
<span class="comment-copy">Not a good idea to equate <code>None</code> with <code>False</code> in this case.  What if <code>a</code> or <code>b</code> had the value <code>0</code> (zero) or <code>""</code> (empty string)?</span>
<span class="comment-copy"><code>!=</code> has its dangers as well.  Test for not <code>None</code> might be better as <code>if not a is None:</code></span>
<span class="comment-copy">About <code>is None</code> vs. <code>== None</code>: <a href="https://stackoverflow.com/questions/14247373/python-none-comparison-should-i-use-is-or" title="python none comparison should i use is or">stackoverflow.com/questions/14247373/â€¦</a>, <a href="https://stackoverflow.com/questions/2209755/python-operation-vs-is-not" title="python operation vs is not">stackoverflow.com/questions/2209755/python-operation-vs-is-not</a>, <a href="https://www.python.org/dev/peps/pep-0290/#testing-for-none" rel="nofollow noreferrer">python.org/dev/peps/pep-0290/#testing-for-none</a>, <a href="https://www.python.org/dev/peps/pep-0008/#programming-recommendations" rel="nofollow noreferrer">python.org/dev/peps/pep-0008/#programming-recommendations</a></span>
<span class="comment-copy">@cdarke "comparisons to singletons like None should always be done with is or is not, never the equality operators." Thank you, we live and learn.</span>
<span class="comment-copy">By default python uses a memory reference to check equality of <code>Object</code> instances (different than primitives). However, operators in python can be overwritten such as <code>__eq__</code>. This means that <code>a</code> and <code>b</code> are not guaranteed to be a simple reference check. It could possibly try to access a field within the <code>None</code> instance and then error out. The <code>is</code> keyword on the other hand will only ever do a reference test- removing the potential error. (it will also perform quicker as a result of the simpler operation)</span>
<span class="comment-copy">"<i>1. if we can define optional parameters using this way(no at present)</i>" - using which way?  Do you mean using the square bracket notation?  As I tried to explain, that is not python syntax, it is Backus-Naur form - it is a documentation standard only.  2.  A module-level function is a function defined in a module (including <code>__main__</code>) - this is in contrast to a function defined within a class (a method).</span>
<span class="comment-copy">Thank you.  You can write this as an answer and I'll accept it.</span>
