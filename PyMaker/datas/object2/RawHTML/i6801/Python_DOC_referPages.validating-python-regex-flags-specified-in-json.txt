<div class="post-text" itemprop="text">
<p>I am writing a tool which accepts user configuration via a json file. One piece of this config is a python regular expression and some optional regex flags. Currently the configuration for the regex flags is an array of integers which will all be run through a bitwise or (|) and sent to the re compile method.</p>
<p>My question is how can I validate these integers to ensure that they are valid re flags?</p>
<p>EDIT: Or potentially another solution to my problem... Is it possible for the user to specify the actual re flags in the JSON? I.e., [re.DEBUG, re.IGNORECASE] etc etc and then somehow translate those from the JSON file in my python script?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can define a dictionary of all possible flags (they are really few, see <code>re</code> <a href="https://docs.python.org/3/library/re.html#module-contents" rel="nofollow noreferrer"><em>6.2.2. Module Contents</em></a>), and just get the value by the corresponding key.</p>
<p>A <a href="https://ideone.com/7G8DXD" rel="nofollow noreferrer">Python demo</a>:</p>
<pre><code>import re
re_flags = { 're.A' : re.A, 
    're.ASCII' : re.ASCII,
    're.DEBUG' : re.DEBUG,
    're.I' : re.I,
    're.IGNORECASE' : re.IGNORECASE,
    're.L' : re.L,
    're.LOCALE' : re.LOCALE,
    're.M' : re.M,
    're.MULTILINE' : re.MULTILINE,
    're.S' : re.S,
    're.DOTALL' : re.DOTALL,
    're.X' : re.X,
    're.VERBOSE' : re.VERBOSE }
flg = 're.I'                      # User input
if flg in re_flags:               # If the dict contains the key
    print(re_flags[flg])          # Print the value (re.I = 2)
</code></pre>
<p>If you still want to go with numbers instead:</p>
<pre><code>import re
print(re.A)           # 256
print(re.ASCII)       # 256
print(re.DEBUG)       # 128
print(re.I)           # 2
print(re.IGNORECASE)  # 2
print(re.L)           # 4
print(re.LOCALE)      # 4
print(re.M)           # 8
print(re.MULTILINE)   # 8
print(re.S)           # 16
print(re.DOTALL)      # 16
print(re.X)           # 64
print(re.VERBOSE)     # 64
</code></pre>
</div>
<span class="comment-copy">Is it for Python 2 or 3?</span>
<span class="comment-copy">@WiktorStribiżew Ideally I would like both to be supported</span>
<span class="comment-copy">It seems you may use <code>if option in [2, 4, 8, 16, 32, 64, 128, 256]</code> to validate these. Just note that <code>re.ASCII</code> (256) is only present in Python 3 <code>re</code>.</span>
<span class="comment-copy">@WiktorStribiżew what about my edit? Do you think its possible to allow the user to specify the name of the flag instead? That would be a lot more descriptive and helpful</span>
<span class="comment-copy">Then you may create a dictionary and map the names with the real flags, i.e. <code>option_dct = { 're.I' : re.I, etc. }</code></span>
<span class="comment-copy">Yeah I assigned them to the raw numbers because i don't know whether my script will be being run in python 2 or 3 so if I try to use the re module there are some flags which do not exist in python 2 etc</span>
