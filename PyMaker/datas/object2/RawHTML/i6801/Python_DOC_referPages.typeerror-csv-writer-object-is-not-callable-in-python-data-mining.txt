<div class="post-text" itemprop="text">
<p>Attempting to run simple Text mining from twitter with sentiment analysis and can not figure out this error: TypeError: '_csv.writer' object is not callable</p>
<p>It roots from this section of my code: </p>
<pre><code>  with io.open('trumpTweets.csv', 'w', encoding='utf8', newline='') as csvfile:
        csv_writer = csv.writer(csvfile) 
        csv_writer("Tweet", " Sentiment")
        with io.open("trumpTweets.txt", 'r', encoding='utf8') as f:
                for tweet in f.readlines():
                        tweet = tweet.strip()
</code></pre>
<p>In whole, my code looks like this. </p>
<pre><code>import tweepy, codecs
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
from aylienapiclient import textapi
import csv, io
import matplotlib.pyplot as plt
import pandas as pd
from collections import Counter

consumer_key = ''
consumer_secret = ''
access_token = ''
access_secret = ''


auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)
api = tweepy.API(auth)
user = api.get_user('ballondebruyne')
kyle = api.get_user('KKopchak')
results = api.user_timeline(user_id='25073877', count=20)
file = codecs.open("trumpTweets.txt", "w", "utf-8")
for tweet in results:
        file.write("trumpTweets.txt")
        file.write("\n")
file.close()
client = textapi.Client("276a6096", "66cf9c66a25a398c6c6f8c9b33abc771")

with io.open('trumpTweets.csv', 'w', encoding='utf8', newline='') as csvfile:
        csv_writer = csv.writer(csvfile) 
        csv_writer("Tweet", " Sentiment")
        with io.open("trumpTweets.txt", 'r', encoding='utf8') as f:
                for tweet in f.readlines():
                        tweet = tweet.strip()

                        if len(tweet) == 0:
                                print('skipped')
                                continue
                print(tweet)

                        sentiment = client.Sentiment({'text': tweet})

                        csv_writer.writerow([sentiment['text'], sentiment['polarity']])

with open('trumpTweets.csv', 'r', encoding = 'utf8') as csvfile:
        df = pd.read_csv(csvfile)
        sent = df["Sentiment"]

        counter = Counter(sent)
        positive = counter['positive']
        negative = counter['negative']
        neutral = counter['neutral']

labels = 'Positive', 'Negative', 'Neutral'
sizes = [positive, negative, neutral]
colors = ['green', 'red', 'grey']
yourtext = "President Trump"

plt.pie(sizes, labels = labels, colors = colors, shadow = True, startangle = 90)
plt.title("Sentiment of 200 Tweets about "+yourtext)
plt.show()
</code></pre>
<p>Am trying to do some data visualization with the result, but first just want to be able to see something happen when I run it. After all, I did pull most of this fro ma tutorial. </p>
</div>
<div class="post-text" itemprop="text">
<p>The code should correctly look like:</p>
<pre><code>with io.open('trumpTweets.csv', 'w', encoding='utf8', newline='') as csvfile:
    csv_writer = csv.writer(csvfile) 
    csv_writer.writerow(["Tweet", " Sentiment"])
    with io.open("trumpTweets.txt", 'r', encoding='utf8') as f:
        for tweet in f.readlines():
            tweet = tweet.strip()
</code></pre>
<p>Note that in this code the third line was changed to <code>csv_writer.writerow("Tweet", "Sentiment")</code>. In your original code you try to use the csv_writer object as a callable object whereas you need to call the correct method on the object.</p>
<p>You can find the documentation for csv.writer and examples at<a href="https://docs.python.org/3/library/csv.html#writer-objects" rel="nofollow noreferrer"> https://docs.python.org/3/library/csv.html#writer-objects</a>.</p>
</div>
<span class="comment-copy">You should really remove your secret auth tokens before posting this - hopefully those where fake because they're in google now. If they where real, change your token and password now.</span>
<span class="comment-copy">You do need to post the full stack trace. Otherwise it is hard for us to work out exactly where the problem arises.</span>
<span class="comment-copy">@BoarGules Didn't think all of the rest was necessary, but edited and put the rest. Sorry about that.</span>
<span class="comment-copy">@DanielleM. Obviously meant to do that beforehand and forgot. Edited.</span>
<span class="comment-copy">Really regenerate the tokens, too. A lot of people <i>can</i> see the edit history, too.</span>
<span class="comment-copy">Thanks for the response. I was pulling this off of a tutorial mostly and weirdly they didn't have writerow in it. Additionally, I just tried it with writerow() however it is now saying it only takes one argument whilst I have two. Weirdly enough it looks like in the documentation it allows two... any ideas here?</span>
<span class="comment-copy">Let me fix this. Should have been an array.</span>
