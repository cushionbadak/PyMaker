<div class="post-text" itemprop="text">
<p>I was recently playing around with the following piece of code:</p>
<pre><code>print(getattr(__builtins__, "__import__")("random"))
</code></pre>
<p>On my local version of Python, it seemed to work as expected:</p>
<pre><code>&lt;module 'random' from 'C:\\Users\\lkfjsa\\Programs\\Python3.6.1\\lib\\random.py'&gt;
</code></pre>
<p>My version is:</p>
<pre><code>Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)] on win32
</code></pre>
<p>Then I proceeded to try the same thing on repl.it: <a href="https://repl.it/KpQW/3" rel="nofollow noreferrer">Code Here</a></p>
<p>The most information I could find about the version is:</p>
<pre><code>Python 3.6.1 (default, Dec 2015, 13:05:11)
[GCC 4.8.2] on linux
</code></pre>
<p>Which then gives this output:</p>
<pre><code>Traceback (most recent call last):
  File "python", line 1, in &lt;module&gt;
AttributeError: 'dict' object has no attribute '__import__'
</code></pre>
<p>I am absolutely baffled... anyone care to explain?</p>
</div>
<div class="post-text" itemprop="text">
<p>The value of the name <code>__builtins__</code> is an implementation detail:</p>
<blockquote>
<p>As an implementation detail, most modules have the name <code>__builtins__</code> made available as part of their globals. The value of <code>__builtins__</code> is normally either this module [the <code>builtins</code> module] or the value of this moduleâ€™s <code>__dict__</code> attribute. Since this is an implementation detail, it may not be used by alternate implementations of Python.</p>
</blockquote>
<p>(<a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer">https://docs.python.org/3/library/builtins.html</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Because possibly due to repl.it's sandboxing implementation or something along those lines, their version of <code>__builtins__</code> is actually a <code>dict</code>.</p>
<pre><code>   type(__builtins__)
=&gt; &lt;class 'dict'&gt;
   __builtins__['__import__']
=&gt; &lt;built-in function __import__&gt;
   __builtins__['__import__']('random')
=&gt; &lt;module 'random' from '/usr/local/lib/python3.6/random.py'&gt;
</code></pre>
</div>
<span class="comment-copy">Ahh I see. I was wondering whether there was a way to import files without import <b>import</b> or eval</span>
