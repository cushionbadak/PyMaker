<div class="post-text" itemprop="text">
<p>I am trying to convert the current time ('Wed Sep  6 15:31:35 2017') that returns Python3.5 to Unix time stamp.</p>
<pre><code>time.ctime.astype(np.int64)
</code></pre>
<p>I am getting this error:</p>
<blockquote>
<p>AttributeError: 'builtin_function_or_method' object has no attribute 'astype'</p>
</blockquote>
<p>when I try </p>
<pre><code>np.int64(time.ctime())
</code></pre>
<p>I get:</p>
<blockquote>
<p>ValueError: invalid literal for int() with base 10: 'Wed Sep  6 15:34:08 2017'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.ctime" rel="nofollow noreferrer"><code>time.ctime()</code></a> returns a <em>string</em> representation of the current time, as returned (in seconds since the epoch) by <code>time.time()</code>.</p>
<p>You can cut out the middleman and use <a href="https://docs.python.org/3/library/time.html#time.time" rel="nofollow noreferrer"><code>time.time()</code></a> on its own, which returns a floating point representation of the seconds:</p>
<pre><code>t = int(time.time())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>time.ctime()</code> returns a string representation of the time</p>
<p>use <code>strptime</code> from module <code>datetime</code> to parse string to a datetime object</p>
<pre><code>import datetime
import time
t = datetime.datetime.strptime(time.ctime(), "%a %b %d %H:%M:%S %Y")
print(t.timestamp()) #1504730409.0
</code></pre>
<p><a href="https://docs.python.org/3.6/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">https://docs.python.org/3.6/library/datetime.html#strftime-strptime-behavior</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it more easily this way:</p>
<pre><code>import time
math.floor(time.time())
</code></pre>
</div>
<span class="comment-copy">Why not <a href="https://docs.python.org/3/library/time.html#time.time" rel="nofollow noreferrer"><code>time.time()</code></a>? <code>time.ctime()</code> returns a string.</span>
<span class="comment-copy">thanks, it worked with int(time.time())</span>
<span class="comment-copy">Also note that your first error is attempting to cast a function, <code>time.ctime</code>, and not the return of the function, <code>time.ctime()</code>. It's still going to error out, but it's important to recognize the difference in returns between the two syntax.</span>
