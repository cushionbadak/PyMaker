<div class="post-text" itemprop="text">
<p>I am in need of a function that retricts the input of the user to numeric values.
I've been looking for an answer but the one I've found does not allow for '-', '+' and ','(comma).
Here's the code for the validation method:</p>
<pre><code>   def __init__(self, master1):
    self.panel2 = tk.Frame(master1)
    self.panel2.grid()
    vcmd = (master1.register(self.validate),
            '%d', '%i', '%P', '%s', '%S', '%v', '%V', '%W')
    self.text1 = tk.Entry(self.panel2, validate = 'key', validatecommand = vcmd)
    self.text1.grid()
    self.text1.focus()



def validate(self, action, index, value_if_allowed,
    prior_value, text, validation_type, trigger_type, widget_name):
    # action=1 -&gt; insert
    if(action=='1'):
        if text in '0123456789,-+':
            try:
                float(value_if_allowed)
                return True
            except ValueError:
                return False
        else:
            return False
    else:
        return True
</code></pre>
<p>Again, this only seems to work with numbers, but restricts commas and plus and minus signs, which is not intended.
How could this be fixed?</p>
</div>
<div class="post-text" itemprop="text">
<p>The right tool is definitely the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> module.</p>
<p>Here is a regular expression that should do the job:</p>
<pre><code>(\+|\-)?\d+(,\d+)?$
</code></pre>
<p>Let's break it down:</p>
<pre><code>(\+|\-)?\d+(,\d+)?$

 \+|\-                  Starts with a + or a -...
(     )?                ... but not necessarily
        \d+             Contains a repetition of at least one digits
            ,\d+        Is followed by a comma and at least one digits...
           (    )?      ... but not necessarily
                  $     Stops here: nothing follows the trailing digits
</code></pre>
<p>Now, your <code>validate</code> function only has to return <code>True</code> if the input matches that regex, and <code>False</code> if it does not.</p>
<pre><code>def validate(string):
    result = re.match(r"(\+|\-)?\d+(,\d+)?$", string)
    return result is not None
</code></pre>
<p>Some tests:</p>
<pre><code># Valid inputs
&gt;&gt;&gt; validate("123")
True
&gt;&gt;&gt; validate("123,2")
True
&gt;&gt;&gt; validate("+123,2")
True
&gt;&gt;&gt; validate("-123,2")
True

# Invalid inputs
&gt;&gt;&gt; validate("123,")
False
&gt;&gt;&gt; validate("123,2,")
False
&gt;&gt;&gt; validate("+123,2,")
False
&gt;&gt;&gt; validate("hello")
False
</code></pre>
<hr/>
<h3>Edit</h3>
<p>I understand now that you want to check in real-time if the input is valid.
So here is an example of what you can do:</p>
<pre><code>import tkinter as tk
import re

def validate(string):
    regex = re.compile(r"(\+|\-)?[0-9,]*$")
    result = regex.match(string)
    return (string == ""
            or (string.count('+') &lt;= 1
                and string.count('-') &lt;= 1
                and string.count(',') &lt;= 1
                and result is not None
                and result.group(0) != ""))

def on_validate(P):
    return validate(P)    

root = tk.Tk()
entry = tk.Entry(root, validate="key")
vcmd = (entry.register(on_validate), '%P')
entry.config(validatecommand=vcmd)
entry.pack()
root.mainloop()
</code></pre>
<p>The <code>validate</code> function now checks more or less the same thing, but more loosely.
Then if the regex results in a match, some additional checks are performed:</p>
<ul>
<li>Allow the input to be empty;</li>
<li>Prevent the input to have more than one <code>'+'</code>/<code>'-'</code>, and more than one <code>','</code>;</li>
<li>Ignore a match against the empty string, because the pattern allows it, so <code>"a"</code> would result in a match but we don't want it.</li>
</ul>
<p>The command is registered, and works with the <code>'%P'</code> parameter, that corresponds to the string if the input were accepted.</p>
<p>Please not however that forcing the input to be <em>always</em> correct is somewhat harsh, and might be counter-intuitive.
A more commonly used approach is to update a string next to the entry, and have the user know when their input is valid or invalid.</p>
</div>
<span class="comment-copy">What have you done to debug this? I see you have a try/except where you're ignoring the error. Perhaps you should print out the error so that you understand why it's rejecting your characters.</span>
<span class="comment-copy">If the user types <code>5,</code>, is that allowed?</span>
<span class="comment-copy">@BryanOakley The five would be allowed, but the comma woud not appear on the entry widget on the GUI. This script does not print out an error. What it does is, it does not allow non numerical characters as well as commas, + and - to be displayed.</span>
<span class="comment-copy">I don't quite understand that response. Your question implies that commas are allowed.</span>
<span class="comment-copy">I want them to be allowed, but they are not. That's the issue.</span>
<span class="comment-copy">The OP mentions wanting to support commas, which your code doesn't do.</span>
<span class="comment-copy">@BryanOakley Ah, my bad. I eventually got used to that dot...</span>
<span class="comment-copy">This still doesn't seem to address what the user is needing. They are trying to validate characters as they are being typed (the notion is flawed, but that's what they are asking). If the OP plugs your function into their code, it will prevent the user from typing <code>123,456</code> because it will prevent them from typing <code>123,</code> which they must type before <code>123,45</code> and <code>123,456</code>. Your answer needs to address the fact that your code can't be used in the context of the original code.</span>
<span class="comment-copy">'def validate(string):     result = re.match(r"(\+|\-)?\d+(,\d+)?$", string)     return result is not None root = Tk() v1_1 = StringVar() userInput = Entry(root, textvariable=v1_1) userInput.bind('key', validate(v1_1)) userInput.pack()'  This script returns the following error:  TypeError: expected string or bytes-like object How am I to convert the input to string or bytes-like object? Thanks for your help.</span>
<span class="comment-copy">@AlBud I edited my answer. This should produce the result you're expecting.</span>
