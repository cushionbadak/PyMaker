<div class="post-text" itemprop="text">
<p>What's the difference between list[index, :] and list[index:]??</p>
<pre><code>for line in arraylines:
   line  = line.strip()
   listFromLine = line.split('\t')
   returnMat[index, :] = listFromLine[0:3]
</code></pre>
<p>At the beginning, returnMat is a zero matrix.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>returnMat[index, :]</code> is an example of numpy's <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.indexing.html" rel="nofollow noreferrer">array slicing</a> syntax. It would retrieve rows (different rows correspond to the first index) of the matrix (<code>:</code> means "get all of this index"). Example:</p>
<pre><code>import numpy as np

mat = np.zeros((3, 5))

print(mat)  # 3 rows and 5 columns of zeros
mat[1, :] = 1
print(mat)  # all of second row is now ones
</code></pre>
<hr/>
<p>To go a bit further, it looks like you're constructing a matrix row-by-row from a file in your code snippet, which means you probably need to be doing something with <code>index</code> as well. I would suggest looking into <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list[index,:]: starts from index number till the end
list[index:]: it has ranged between numbers which are the output.
</code></pre>
</div>
<span class="comment-copy">The former is <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.indexing.html" rel="nofollow noreferrer">specific to <code>numpy</code> arrays</a> which can be multidimensional</span>
<span class="comment-copy">Do you mean <code>line.strip()</code>?</span>
<span class="comment-copy"><code>list[index, :]</code> is not valid syntax if <code>list</code> is a python list; you should explain what data structures you are using.</span>
<span class="comment-copy">@Akavall just to be pedantic, the <i>syntax</i> is fine, actually, but it will throw a <code>TypeError</code> because you passed a <code>tuple</code>, and the <code>list.__getitem__</code> method only accepts <code>int</code> and <code>slice</code> objects...</span>
<span class="comment-copy"><code>list[index,:]</code> is not valid Python syntax if <code>list</code> is a standard Python list (it raises a <code>TypeError</code> because you're trying to index with a tuple). The <code>list</code> needs to be a numpy array (or something else which has a special <code>__getitem__</code> that allows tuples on slice objects.</span>
<span class="comment-copy">but these are the standard convention followed in python.</span>
<span class="comment-copy">This is a spectacularly wrong answer in that it completely fails to explain what multiple slices or indices separated by commas mean in numpy.</span>
