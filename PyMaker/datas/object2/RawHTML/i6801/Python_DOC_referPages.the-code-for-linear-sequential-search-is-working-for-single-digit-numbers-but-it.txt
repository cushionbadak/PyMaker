<div class="post-text" itemprop="text">
<pre><code>def search(arr, x):
   for i in range(len(arr)):

      if arr[i] == x:
          return i

     return -1



num=input("enter the elements\n")
input_numbers_list = [int(n) for n in num.split()]

value=input("enter the element to be searched")
print(input_numbers_list)
print(value)
i = search(num,value)
if i is -1:
   print("element not found")
else:
   print("element found at specific position "+str(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Right now you pass strings to the search. You iterate over characters in the input string, and check if a character equals second string. Consider this:</p>
<pre><code>'12345'[2] == '3'
</code></pre>
<p>Convert <code>value</code> to <code>int</code>:</p>
<pre><code>value = int(input('enter the element to be searched'))
</code></pre>
<p>Pass integers to the search, not the input:</p>
<pre><code>i = search(input_numbers_list, value)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Danil squared you away with your problem, I just wanted to add another way to do your function. There is a built in method called enumerate which returns the index and item which you can assign to variables like so:</p>
<pre><code>for index,item in enumerate(somelist):
    if item == 'dragon':
        print('The dragon was found in the following index: {}'.format(index))
</code></pre>
<p>Another thing to add is with your split attribute. You should explicitly state how you want to split your strings. My favorite is by commas but you can use spaces too. </p>
<pre><code>somelist = input('Enter your items comma separated\n')
somelist = [ i for i in somelist.split(',') ] 
</code></pre>
<p>or</p>
<pre><code>somelist = input('Enter your items space seperated\n')
somelist = [ i for i in somelist.split(' ') ]
</code></pre>
</div>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer"><code>index()</code></a> as <code>print(input_number_list.index(int(value)))</code> would also work. You would need to catch a <code>ValueError</code> exception for the case where the value is not present.</span>
<span class="comment-copy">@VedantBari Please, don't forget to accept an answer, if it helps, there is a sign <code>V</code> under the answer's score.</span>
