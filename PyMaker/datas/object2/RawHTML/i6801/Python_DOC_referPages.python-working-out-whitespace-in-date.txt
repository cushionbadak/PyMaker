<div class="post-text" itemprop="text">
<p>I have a log file <code>file.txt</code> and it has the date format as <code>'%b %_d %H:%M:%S'</code>.
When the day of the month is between the 1st and 9th, it pads out the field with a space.</p>
<p>I'm just wondering if my code is the best way to check if this includes a space or not as I'm just trying to pull out the date/time from each line</p>
<p>file.txt</p>
<pre><code>Sep  8 16:13:02 blah
Sep  8 16:14:02 blahblah
Sep  8 16:15:02 blablahblah
</code></pre>
<p>Code: </p>
<pre><code>with open('file.txt','r') as f:
    for line in f:
        if int(line.split()[1]) &lt; 10:
            d = line.split()[0] + '  ' + line.split()[1] + ' ' + line.split()[2] #double space after [0]
        else:
            d = line.split()[0] + ' ' + line.split()[1] + ' ' + line.split()[2] #single space after [0]
        print d
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want your output field to be padded with spaces, you can use python <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">string formatting spec</a>.</p>
<pre><code>&gt;&gt;&gt; for line in 'Sep 8 16:13:02 blah', 'Sep 12 16:13:02 blah':
&gt;&gt;&gt;     print('{0} {1:&gt;2} {2}'.format(*line.split()))

Sep  8 16:13:02
Sep 12 16:13:02
</code></pre>
<p><code>{1:&gt;2}</code> means that field 1 should be right aligned and at least 2 characters wide. Missing characters will be padded with spaces.</p>
<p>In python 3.6+ you can also use f-strings to make it more self-explanatory.</p>
<pre><code>&gt;&gt;&gt; for line in 'Sep 8 16:13:02 blah', 'Sep 12 16:13:02 blah blah blah':
&gt;&gt;&gt;     month, date, time, *rest  = line.split() 
&gt;&gt;&gt;     print(f'date: {month} {date:&gt;2} {time}\ncomment: {" ".join(rest)}')

date: Sep  8 16:13:02
comment: blah
date: Sep 12 16:13:02
comment: blah blah blah
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on the comment by jedwards:</p>
<pre><code>from datetime import datetime

f = '''Sep  8 16:13:02 blah
Sep  8 16:14:02 blahblah
Sep  8 16:15:02 blablahblah'''.splitlines()

for line in f:
    d = datetime.strptime(line[:15], '%b %d %H:%M:%S')
    print(d)
</code></pre>
<p>Output:</p>
<pre><code>1900-09-08 16:13:02
1900-09-08 16:14:02
1900-09-08 16:15:02
</code></pre>
</div>
<span class="comment-copy">There's probably a better way to grab it into a timestamp/datetime variable, I'd continue looking if you really want to improve this..</span>
<span class="comment-copy">datetime's <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>strptime</code></a> handles the extra space without issue: <code>print(datetime.strptime("Sep  8 16:13:02", '%b %d %H:%M:%S'))</code> (double space present, just hidden in HTML) -- just adjust the year after parsing.</span>
<span class="comment-copy">This worked a treat! Thanks</span>
