<div class="post-text" itemprop="text">
<p>I am trying to match strings which can be typed from a normal english keyboard.</p>
<p>So, it should include alphabets, digits, and all symbols present on our keyboard. </p>
<pre><code>Corresponding regex : "[a-zA-Z0-9\t ./,&lt;&gt;?;:\"'`!@#$%^&amp;*()\[\]{}_+=|\\-]+"
</code></pre>
<p>I verfied this regex on <a href="http://www.regexr.com" rel="nofollow noreferrer">regexr.com</a>. </p>
<p>In python, on matching I am getting following error : </p>
<pre><code>&gt;&gt;&gt; a=re.match("+how to block a website in edge",pattern)

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\re.py", line 163, in match
    return _compile(pattern, flags).match(string)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\re.py", line 293, in _compile
    p = sre_compile.compile(pattern, flags)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\sre_compile.py", line 536, in compile
    p = sre_parse.parse(p, flags)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\sre_parse.py", line 829, in parse
    p = _parse_sub(source, pattern, 0)
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\sre_parse.py", line 437, in _parse_sub
    itemsappend(_parse(source, state, nested + 1))
  File "C:\local\Anaconda3-4.1.1-Windows-x86_64\envs\tf_1.2\lib\sre_parse.py", line 638, in _parse
    source.tell() - here + len(this))
sre_constants.error: nothing to repeat at position 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have your arguments for <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re.match</code></a> backward: it should be</p>
<p><code>re.match(pattern, "+how to block a website in edge")</code></p>
</div>
<span class="comment-copy">seriously ? a python bug ?</span>
<span class="comment-copy">Note that your pattern can be shorten to <code>[ -}\t]+</code> <i>(see the ascii table)</i>. Except if it is a special requirement, the characters <code>~</code> and <code>\n</code> are missing, you can add them like this: <code>[ -~\t\n]+</code></span>
<span class="comment-copy">Quantifier <code>+</code> as first character is causing regex engine to complain about <b>nothing to repeat at position 0</b> and poor <code>python</code> is getting blamed :)</span>
