<div class="post-text" itemprop="text">
<p>For a project.
I have created a login using a database in a text file.</p>
<pre><code>Username|Password|Name|Year|Gender
</code></pre>
<p>That is how its saved in the text file.
I need to create a checker which checks if the username is already in use.</p>
<pre><code>def menu():
    menuAnswer = input("Would you like to login or register? 1 For Login. 2 For Register &gt;&gt; ")
    print ("---------------------")
    if menuAnswer == "1":
        login()
    if menuAnswer == "2":
        register()
    if menuAnswer != "1" or "2":
        print ("Invalid Option. Try Again.")
        menu()

def register():
    global nameInput
    nameInput = str(input("What is your first name? &gt;&gt; "))
    global yearInput
    yearInput = str(input("What year was you born in? &gt;&gt; "))
    global passwordInput
    passwordInput = str(input("What is your password? &gt;&gt; "))
    global genderInput
    genderInput = str(input("What is your gender? M/F &gt;&gt; "))
    print ("---------------------")
    nameForUN = nameInput[:3]
    nameForUN = nameForUN.upper()
    yearForUN = yearInput[-2:]
    global UNToSave
    UNToSave = nameForUN + yearForUN
    UNToSave = str(UNToSave)
    UNChecker()

def saveToFile():
    print ("Creating your account")
    DB = open("DB.txt", "a")
    DB.write("\n" + UNToSave + fileSpacer + passwordInput + fileSpacer + nameInput + fileSpacer + yearInput + fileSpacer + genderInput)
    DB.close
    DB = open("DB.txt", "a")
    DB.write("\n" + UNToSave + fileSpacer + passwordInput + fileSpacer + nameInput + fileSpacer + yearInput + fileSpacer + genderInput)
    print ("Account created")
    print ("Please write down your username and password as it will not be given back.")
    print ("Account details;")
    print ("Username &gt;&gt; " + UNToSave)
    print ("Password &gt;&gt; " + passwordInput)
    DB.close
    print ("---------------------")
    print ("Returning you to the main menu")
    menu()



def UNChecker():
    DB = open("DB.txt").read().split("\n")
    print (UNToSave)
    for i in range(len(DB)): DB[i] = DB[i].split("|")
    while True:
        for user in DB:
            UNToCheck = user[0]
            if UNToSave == UNToCheck:
                print ("Your username has already been registered.")
                print ("Returning you back to the register menu.")
                DB.close
                register()
                return (" ")
            print ("Your username is valid")
            print ("---------------------")
            saveToFile()


def login():
    DB = open("DB.txt").read().split("\n")
    for i in range(len(DB)): DB[i] = DB[i].split("|")
    while True:
        UN = str(input("Username &gt;&gt; "))
        PW = str(input("Password &gt;&gt; "))

        for user in DB:
            #Remember it starts at 0.
            UNCheck = user[0]
            PWCheck = user[1]

            if UN == UNCheck and PW == PWCheck:
                print("Hello " + user[0] + ".")
                print("You are logged in as " + user[2] + ".")
                menu()
                return (" ")
                DB.close

        print("Wrong username/password.")
        print("Try again!\n\n")


fileSpacer = ("|")
UNToSave = ("Hi")

menu()
</code></pre>
<p>However it always gives a false positive. I need it to check if there is the username already exsists.
I declared UNToSave as a global variable in a different function. For use</p>
<pre><code>UNToSave = "Jon01"
</code></pre>
<p>Any help as to why it never returns the user back to the register menu and tells them that the username as been registered.</p>
<p>Python(3.5.2)</p>
</div>
<div class="post-text" itemprop="text">
<h2>Read the users</h2>
<p>The more simple way to read your file is to consider that it is a CSV file with a "|" as delimiter. To read a CSV file, you can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> standard module. Here, it is more appropriate to use a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>DictReader</code></a> to get each row as a Python <code>dict</code>.</p>
<p>Here is an exemple with a file in memory:</p>
<pre><code>import io

data = """\
Username|Password|Name|Year|Gender
jdoe|S3cret|John DOE|2017|M
jadoe|Secr3t|Jane DOE|2018|F
"""


import csv

with io.StringIO(data) as csvfile:
    reader = csv.DictReader(csvfile, delimiter='|')
    for row in reader:
        print(row['Username'], row['Name'])
</code></pre>
<p>It prints:</p>
<pre><code>jdoe John DOE
jadoe Jane DOE
</code></pre>
<p>So, to read your file and get all the records, you can write:</p>
<pre><code>records = []
with io.open("DB.txt", mode="r", encoding="UTF-8") as csvfile:
    reader = csv.DictReader(csvfile, delimiter='|')
    for row in reader:
        records.append(row)
</code></pre>
<p>The result is <code>records</code>: a list of (ordered) dictionaries. For instance:</p>
<pre><code>[OrderedDict([('Username', 'jdoe'),
              ('Password', 'S3cret'),
              ('Name', 'John DOE'),
              ('Year', '2017'),
              ('Gender', 'M')]),
 OrderedDict([('Username', 'jadoe'),
              ('Password', 'Secr3t'),
              ('Name', 'Jane DOE'),
              ('Year', '2018'),
              ('Gender', 'F')])]
</code></pre>
<h2>Search a user</h2>
<p>Given a <em>username</em>, you want to search it on your records.
You can use a simple loop (since our records are not indexed).</p>
<pre><code>username = "jdoe"

for record in records:
    if record["Username"] == username:
        print("Found: {0}".format(record))
        break
else:
    print("Not found!")
</code></pre>
<p>Note: we use <code>break</code> to stop the loop when it is found. The <code>else</code> statement is only called when the <em>username</em> is not found.</p>
<h2>Append a new user</h2>
<p>All you need to append a user is to create a new <code>dict</code> with the required values. And append this <code>dict</code> in the <em>records</em> <code>list</code>:</p>
<pre><code>user = {'Username': "me",
        'Password': "0@&amp;foz1p",
        'Name': "My NAME",
        'Year': "2010",  # it's a string
        'Gender': "M"}
records.append(user)
</code></pre>
<h2>Save the users</h2>
<p>To save the users, you can use a <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>DictWriter</code></a> (similar to the <code>DictReader</code>).</p>
<pre><code>headers = "Username|Password|Name|Year|Gender".split("|")
with open("DB.txt", mode='w', encoding="UTF-8") as csvfile:
    writer = csv.DictWriter(csvfile, fieldnames=headers)
    writer.writeheader()
    for record in records:
        writer.writerow(record)
</code></pre>
<p>Now, it's time to read the documentation. Then you can create some functions (or a class) to handle your DB.</p>
</div>
<span class="comment-copy"><code>for i in range(len(DB)): DB[i] = DB[i].split("|")</code> not possible if <code>DB</code> is a file handle. Can you post your real, indented code? also next issue you're reusing the handle, closing it without calling <code>close()</code>, etc...</span>
<span class="comment-copy">not in your comment. <a href="https://stackoverflow.com/posts/46131123/edit">edit</a> your post and create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. Because it cannot work that way.</span>
<span class="comment-copy">I re editted it with the whole program.</span>
<span class="comment-copy"><code>DB.close</code> =&gt; <code>DB.close()</code></span>
<span class="comment-copy">in login: DB.close cannot work it's not a filehandle</span>
