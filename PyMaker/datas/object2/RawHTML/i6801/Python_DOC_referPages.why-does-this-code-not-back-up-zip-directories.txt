<div class="post-text" itemprop="text">
<p>I'm making a program to ZIP files. In this scenario, I am trying to ZIP a directory, with a subdirectory inside of it. I'm using the following function if the program has to ZIP a directory, yet it doesn't ZIP subdirectories, it just takes the files from the subdirectory and puts them with all the others. </p>
<pre><code>zipper = zipfile.ZipFile(systemDate + ".zip", "w")

def zipdir(path, ziph):
    logging.info("ZIP function has been called.")
    for root, dirs, files in os.walk(path):
        for file in files:
            fileNom = os.path.join(root, file)
            print("file nom: " + fileNom)
            zipper.write(fileNom, basename(fileNom))
</code></pre>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>The second argument to <code>ZipFile.write</code> is the archive name, i.e. the filename of the file inside the archive. Since the ZIP file does not contain any folder information on its own, <em>that</em> is where that has to go. So in order to put a file inside a subdirectory, you have to adjust the <code>arcname</code> to include a directory name.</p>
<p>You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.relpath" rel="nofollow noreferrer"><code>os.path.relpath</code></a> to calculate a path relative to your <code>path</code> which appears to be the root of the ZIP file:</p>
<pre><code>zipper.write(fileNom, os.path.relpath(fileNom, path))
</code></pre>
</div>
<span class="comment-copy">You have to give a bit more context. How does the rest of the program look like?</span>
<span class="comment-copy">This function is the only part of the program which handles the zipping of directories, I don't think the rest of the program would be beneficial. Thanks for your response.</span>
<span class="comment-copy">Thanks. I'll give this a go.</span>
