<div class="post-text" itemprop="text">
<p>I want a logging module that parses the log message and sends it to a database for later analysis (I'm using the Elasticsearch database). My current implementation uses the <code>logging</code> module and has all the standard debug levels. To do this, I need access to the log message. Is there a method in Python's <code>logging</code> module that would get me access to the message?</p>
<p>I feel like this boils down to writing a log handler that fits within Python's <code>logging</code> module. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<h2>Python 2</h2>
<pre><code>class StoredLogger(logging.Logger):

    def makeRecord(self, *args, **kwargs):
        ...
        return logging.LogRecord(*args, **kwargs)

logging.setLoggerClass(StoredLogger)
</code></pre>
<p>Within <code>makeRecord</code>, you could add a call to a function like <code>store_message</code>, whose behavior you define.</p>
<pre><code>def store_message(*args, **kwargs):
    """Write a message to the database"""
    ...
</code></pre>
<h2>Python 3.2+</h2>
<p>You can write your own record factory, which you can use to store messages as they occur.</p>
<p><a href="https://docs.python.org/3/library/logging.html#logging.LogRecord" rel="nofollow noreferrer"><pre>
old_factory = logging.getLogRecordFactory()<br/>
def record_factory(*args, **kwargs):
    record = old_factory(*args, **kwargs)
    record.custom_attribute = 0xdecafbad
    return record<br/>
logging.setLogRecordFactory(record_factory)
</pre></a></p>
<p>You would add your call to <code>store_message</code> into your <code>record_factory</code>.</p>
<pre><code>def record_factory(*args, **kwargs):
    store_message(*args, **kwargs)

    global old_factory
    return old_factory(*args, **kwargs)
</code></pre>
<p>Then, when you use something like <code>logging.info('foo')</code>, it will pass through <code>store_message</code>, then resume its normal behavior by writing to its out-stream. You may want to consider renaming <code>record_factory</code> to something more descriptive like <code>stored_record_factory</code>.</p>
</div>
<span class="comment-copy">Looks like the "getMessage()" method might be what I want (<a href="https://docs.python.org/3/library/logging.html#logging.LogRecord" rel="nofollow noreferrer">docs.python.org/3/library/logging.html#logging.LogRecord</a>).</span>
<span class="comment-copy">I suppose I should have said that I am using python 2.7.5. According to <a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">docs.python.org/3/library/logging.html</a>: "Changed in version 3.2: The creation of a LogRecord has been made more configurable by providing a factory which is used to create the record." Is what I want to do possible under python 2.7.5? I'm still working through your code. Thanks!</span>
<span class="comment-copy">@CheesePita: In Python 2, you'll need to override <code>Logger.makeRecord</code> in a <code>Logger</code> subclass. I'll add an example of that to my answer when I get a chance.</span>
<span class="comment-copy">@CheesePita: I've added distinct sections for Python 2/3 to my answer.</span>
