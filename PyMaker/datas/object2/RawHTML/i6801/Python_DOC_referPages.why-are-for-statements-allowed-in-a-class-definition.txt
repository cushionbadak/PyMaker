<div class="post-text" itemprop="text">
<p>Python allows to execute a <code>for</code> statement in the body of a class, as well as other common statements and function calls.
The following two class definitions code thus are legal in Python:</p>
<p><strong>Function call</strong></p>
<pre><code>class X(object):
    print('xyz')
</code></pre>
<p>Output:</p>
<pre><code>xyz
</code></pre>
<p><strong><code>for</code> statement</strong></p>
<pre><code>class Y(object):
    for item in range(4):
        print(item)
</code></pre>
<p>Output:</p>
<pre><code>0
1
2
3
</code></pre>
<p>However, it most of the time makes little sense to do something else than defining instance or class methods with a <code>def</code> statement, or class variables.</p>
<p>Why are such statements and function calls allowed in the body of a class?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Why are such statements and function calls allowed in the body of a class?</p>
</blockquote>
<p>The body of a class statement is a series of Python statements, like the body of any other block statement. The purpose of a class body is to prepare the class's namespace, filling it with methods and class variables and properties and stuff. For that purpose, it's obviously useful to allow function definitions and assignment statements, but the purpose of allowing all other statement types is less clear.</p>
<p>However, there's no compelling reason to <em>disallow</em> other statements. It just takes more work and makes the language less flexible with no clear benefit.</p>
<p>With <code>for</code> loops, you can do something like</p>
<pre><code>class Foo:
    __slots__ = []
    for name in some_list:
        __slots__.append(name.lower())
    del name
</code></pre>
<p>With function calls, you can do something like</p>
<pre><code>class Foo:
    some_variable = something()
    validate_and_filter(some_variable)
</code></pre>
<p>So why not allow them?</p>
</div>
<span class="comment-copy">While you <i>can</i> do something like that, it's a really weird thing to do and not at all what <code>class</code> statements are for.</span>
<span class="comment-copy">Don't do what you just did.</span>
<span class="comment-copy">classes are the same namespaces in general. If you really bad guy, you can do any weird things here,</span>
<span class="comment-copy">...huh. You actually clarified your question without prompting.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/reference/compound_stmts.html#class-definitions" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
