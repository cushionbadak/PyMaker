<div class="post-text" itemprop="text">
<p>I am a newbie to Python programming which you will most likely decipher seeing my code anyways. I would like to know how to improve my code to improve negative testing?</p>
<pre><code>ageinmonths = input("Enter your age in months: ")

age = int(ageinmonths,10)
if type(age) == float:
    print("Invalid age format entered")

if type(age) == str:
    print("Invalid age format entered")


years = int(age/12)
months = age%12

print("Your exact age in years and months is",years,"years",months,"months")
</code></pre>
<p>The Problem with the above line of code is it works fine when I enter the proper value ex: 56 , 48 etc. in months.</p>
<p>But if I happen to enter an invalid value, I get an error message shown below:</p>
<pre><code>Enter your age in months: Welcome
Traceback (most recent call last):
  File "C:\Users\Srinivas\Documents\python\guess_age.py", line 2, in &lt;module&gt;
    age = int(ageinmonths,10)
ValueError: invalid literal for int() with base 10: 'Welcome'
&gt;&gt;&gt; 
</code></pre>
<p>I would like to know how to improve my code to add a proper error message for negative testing for invalid search criteria such as Strings, Special characters, floats etc.</p>
<p>I am using Python 3.6 (32 bit version).</p>
</div>
<div class="post-text" itemprop="text">
<p>As <strong>Reut Sharabani</strong> mentioned, you could use a <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer"><code>try ... except</code></a> block.
You could do something like:</p>
<pre><code>try:
    int("whatever")
except ValueError:
    print("Upss there was a problem")
</code></pre>
<p>Note that I'm just catching a <strong>ValueError</strong> exception, and not all exceptions.</p>
</div>
<div class="post-text" itemprop="text">
<p>As Reut Sharabani said, the way to do this is with try/except blocks. For example: </p>
<pre><code>ageinmonths = input("Enter your age in months: ")
try:
    age = int(ageinmonths,10)
    years = int(age/12)
    months = age%12
    print("Your exact age in years and months is",years,"years",months,"months")
except:
    print("Invalid age format entered")
</code></pre>
<p>Besides that, you're missing some basic concepts of error handling:</p>
<ol>
<li><p>Do your check <em>before</em> using data. Why are you taking int(ageinmonths), and <em>then</em> checking whether the data is valid?</p></li>
<li><p>Check to see whether you have what you want, rather than checking whether you don't have what you don't want. There are lots of data types other than floats, ints, and str. What happens if ageinmonths is a list? </p></li>
<li><p>You're confusing two issues: whether ageinmonths <em>is</em> an int, and whether it can be <em>coerced</em> into an int. If someone types "12", that's a str. int(ageinmonths) will work, because "12" can be coerced into an int, but type(ageinmonths) == str will return True. And "type(age) == str" will <em>never</em> evaluate to True in your original code, because if ageinmonths can be coerced into an int, then age won't be a str, and if ageinmonths can't be coerced to an int, then your code will fail before getting to "type(age) == str".</p></li>
<li><p>Also, a side note: if two "if" statements have the same code block, you can combine them into one. </p></li>
</ol>
</div>
<span class="comment-copy">You want to use exception handling. The attempt to create an integer from <code>"Welcome"</code> obviously fails, you want to wrap it with a <code>try ... except</code> block. See more here: <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html</a></span>
<span class="comment-copy">@ReutSharabani Thanks that worked !!</span>
