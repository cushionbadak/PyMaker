<div class="post-text" itemprop="text">
<p>Does Python have a capability to use a Match object as input to a string with backreferences, eg:</p>
<pre><code>match = re.match("ab(.*)", "abcd")
print re.some_replace_function("match is: \1", match) // prints "match is: cd"
</code></pre>
<p>You could implement yourself using usual string replace functions, but I'm sure the obvious implementation will miss edge cases resulting in subtle bugs.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.sub</code> (instead of <code>re.match</code>) to search and replace strings.</p>
<p>To use back-references, the best practices is to use raw strings, e.g.: <code>r"\1"</code>, or double-escaped string, e.g. <code>"\\1"</code>:</p>
<pre><code>import re

result = re.sub(r"ab(.*)", r"match is: \1", "abcd")
print(result)
# -&gt; match is: cd
</code></pre>
<p>But, if you already have a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">Match Object</a> , you can use the <code>expand()</code> method:</p>
<pre><code>mo = re.match(r"ab(.*)", "abcd")
result = mo.expand(r"match is: \1")
print(result)
# -&gt; match is: cd
</code></pre>
</div>
<span class="comment-copy">Was there anything in the documentation?</span>
