<div class="post-text" itemprop="text">
<p>I am creating my own api interface for my python application (for whatever reason :))</p>
<p>I am able to get my <strong>request body</strong> in a form-data string e.g</p>
<pre><code>"name=prakashraman&amp;tvshows%5B%5D=lost&amp;tvshows%5B%5D=buffy"
</code></pre>
<p>I would like that be converted to </p>
<pre><code>{ 
   "name": "prakashraman",
   "tvshows": ["lost", "buffy"]
}
</code></pre>
<p>Any ideas on how I could go about this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one naive way to do this:</p>
<pre><code>s = "name=prakashraman&amp;tvshows%5B%5D=lost&amp;tvshows%5B%5D=buffy"

d = {}
for x in s.split('&amp;'):
    k, sep, v = x.partition('=')
    if sep != '=':
       raise ValueError('malformed query')
    k = k.split('%')[0]
    if k in d:
       if isinstance(d[k], list): d[k].append(v)
       else: d[k] = [d[k], v]
    else:
      d[k] = v

print(d)
# {'name': 'prakashraman', 'tvshows': ['lost', 'buffy']}
</code></pre>
<p>However, if you need to keep your output standardised as a QueryDict, the easy way is to use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer"><code>urllib.parse.parse_qs</code></a> (in Python 2: <a href="https://docs.python.org/2/library/urlparse.html#urlparse.parse_qs" rel="nofollow noreferrer"><code>urlparse.parse_qs</code></a>) on the string:</p>
<pre><code>&gt;&gt;&gt; from urllib import parse
&gt;&gt;&gt; s = "name=prakashraman&amp;tvshows%5B%5D=lost&amp;tvshows%5B%5D=buffy"
&gt;&gt;&gt; parse.parse_qs(s)
{'name': ['prakashraman'], 'tvshows[]': ['lost', 'buffy']}
</code></pre>
</div>
<span class="comment-copy">Wonderful thanks! I think I might use it :) Although, would it work for deeper next [] arrays?</span>
<span class="comment-copy">@PrakashRaman Yes, it should. The <code>isinstance(d[k], list)</code> branch handles continuous <i>appends</i> to an existing key.</span>
<span class="comment-copy">Wonderful, thanks! I guess, this is my best option for now!</span>
<span class="comment-copy">Surprising there isn't a support library for this operation.</span>
<span class="comment-copy">@PrakashRaman There's <code>urllib</code>. And if the answer helped, you may consdier accepting it.</span>
