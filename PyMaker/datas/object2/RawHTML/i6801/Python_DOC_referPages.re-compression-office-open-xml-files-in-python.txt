<div class="post-text" itemprop="text">
<p>I'm writing a quick application to edit Office files using python, however I can't seem to find a good way to repack them once I'm done. OOXML is a good library but is tailored towards unzipping and exploring them, and likewise Powershell and the Open XML APIs both provide compression functions but not in Python.</p>
<p>I'm trying to avoid using C Types (I'd like to run this on Linux if I could) but the default zipfile module isn't acceptable to rebuild the applications with either.</p>
<p>Is there some library or algorithm available to general-purpose python that I"m missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/shutil.html#shutil.make_archive" rel="nofollow noreferrer">shutil.make_archive</a> to compress your directory:</p>
<pre><code>&gt;&gt;&gt; from shutil import make_archive
&gt;&gt;&gt; import os
&gt;&gt;&gt; archive_name = os.path.expanduser(os.path.join('~', 'myarchive'))
&gt;&gt;&gt; root_dir = os.path.expanduser(os.path.join('~', '.ssh'))
&gt;&gt;&gt; make_archive(archive_name, 'gztar', root_dir)
'/Users/tarek/myarchive.tar.gz'
</code></pre>
</div>
<span class="comment-copy">"isn't acceptable" how? That is to say -- how are you trying to use the zipfile module, and how is it failing?</span>
<span class="comment-copy">I should have been clearer, I meant that office doesn't recognize the rezipped file. Laurent's answer is close enough for what I need though</span>
<span class="comment-copy">If you'd showed us actual code you were trying to use to regenerate the file, we <i>might</i> have been in a position to try to reproduce the behavior. As it is, someone gave you different code, but because we don't know what your original code was, we can do nothing but speculate about how the behavior differs.</span>
<span class="comment-copy">This almost did it; fyi gztar results in a file that can't be recognized or opened by office, but if I use 'zip' instead of 'gztar' it'll work. Not sure why this is different than zipfile but oh well</span>
<span class="comment-copy"><code>shutil.make_archive()</code> with <code>zip</code> uses <code>zipfile</code> when it's available. Thus, if you <i>have</i> a <code>zipfile</code> module, and <code>make_archive()</code> was able to create a good zip file, then the zipfile module is clearly able to create a ZIP file that works for your purposes when used correctly.</span>
