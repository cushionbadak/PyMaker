<div class="post-text" itemprop="text">
<p>if I want to assign 2 values, would it be considered more pythonic to assign:</p>
<pre><code>speed, acceleration = 10, 9.8
</code></pre>
<p>or just use plain</p>
<pre><code>speed = 10
acceleration = 9.8
</code></pre>
<p>I know that the two are not identical and that in the first version all the expressions are evaluated before the assignment and so it would make sense to use the first variant for cases where this distinction effects the results. (e.g.  for swapping value <code>a,b=b,a</code> is just great).</p>
<p>In cases where the choice between the two variants does not change the results, when would you still go with the multi assignment and when will you consider multiple assignments to be more in the spirit of python ?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think this is "primarily opinion-based", but if there is no special reason to use multiple assignments (such as the swapping example or return value unpacking) I'd stick to the simple way because:</p>
<ul>
<li>It is harder to miss the assignment.</li>
<li>It is easier to read (less surprising or confusing) for people coming from other languages.</li>
<li>While it may be okay for a couple of variables, it doesn't really scale much further. Three is surely too much in most cases. So your code convention would have to be something like "assign variables in one line if you have a couple of them or each in one line if you have more", or "assign variables in pairs" (?).</li>
<li>Changing a value for one of the variables doesn't affect the line of the other variables (which can be seen as positive from a source control perspective).</li>
</ul>
<p>That said, there are cases where I think multiple assignment may be better. It is rather subjective, but if I think the values are closely related (i.e. one doesn't make sense without the other), then I'll probably put them in one line. Examples include minimum and maximum values in a range or a set of three coordinates. There are less clear-cut cases, like "coefficients in a polynomial" (which are tightly related, but their meaning and relation is much less intuitive) or your own velocity and acceleration example, which are also very related but still do have a meaning on their own. Probably, my subconscious rule of thumb is that I may put them together if I feel they could belong in the same <code>tuple</code> or <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><code>namedtuple</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>As with most questions like this, it's all about <strong>readability</strong> and <strong>changeability</strong>.</p>
<p>Assigning each variable on its own line usually scores higher for changeability, but there are a few cases where multiple-assignment makes understanding easier (in my opinion) by conveying relationships through proximity.</p>
<p>For example:</p>
<pre><code>coords = (18, 32)
x, y = coords
</code></pre>
<p>or:</p>
<pre><code>string = "I am a big string."
a, b, c = string[:7], string[7:11], string[11:]
</code></pre>
<p>But, of course, it's all situational, and I would err on the side of one assignment per line if you're in doubt because it's easier to change later.</p>
<p><strong>Edit:</strong> I forgot one major reason not to do multiple assignments per line, and I just recently ran into the problem so I thought I'd update the answer.</p>
<p>It's harder to debug if an error occurs on a line with multiple assignments. Sometimes you can be assigning values to multiple variables using a complex list comprehension and several function calls, and it's just extra work to separate the lines and debug again to figure out where the problem is occurring.</p>
<p>+1 for individual assignments.</p>
</div>
<div class="post-text" itemprop="text">
<p>Swapping value would be a very convincing reason to do this.
But for simple value assignment, I would go the 2nd way.
It's easier to read (image if you have 10 variables).</p>
<p>Also it's easier to change. (Again if you have 10 variables, and now you need to change the value of 6th variable).</p>
<p>Also from editing perspective, editing each line is much easier than trying to find variable with its value...</p>
</div>
<span class="comment-copy">i think the second is more effective when you need to change the values many times</span>
<span class="comment-copy">you mean performance-wise ?</span>
<span class="comment-copy">no rather for the handy part, and the readability</span>
