<div class="post-text" itemprop="text">
<p><code>stat.py</code> has <a href="https://github.com/python/cpython/blob/1f06a680de465be0c24a78ea3b610053955daa99/Lib/stat.py#L139-L149" rel="nofollow noreferrer">a helper function</a> to go from the <code>st_mode</code> (integer) as reported by <a href="https://docs.python.org/3/library/os.html#os.stat" rel="nofollow noreferrer"><code>os.stat</code></a> into the familiar "stringy" format (I don't know if this representation has a proper name).</p>
<pre><code>&gt;&gt;&gt; stat.filemode(0o100644)
'-rw-r--r--'
</code></pre>
<p>Is there a helper function to go the other way?  </p>
<pre><code>&gt;&gt;&gt; filemode_inv('-rw-r--r--')
33188
</code></pre>
<p>This is what I tried, but it's producing wrong results.  That's not treating the first character denoting file type correctly, and not handling sticky bits etc</p>
<pre><code>table = {ord('r'): '1', ord('w'): '1', ord('-'): '0'}

def filemode_inv(s):
    return int(s.translate(table), 2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python is open-source, you can just read the source code for the <code>stat</code> module and write the inverse function.</p>
<p>See: <a href="https://github.com/python/cpython/blob/master/Lib/stat.py#L112" rel="nofollow noreferrer">https://github.com/python/cpython/blob/master/Lib/stat.py#L112</a></p>
<pre><code>import stat

def un_filemode(mode_str):
    mode = 0
    for char, table in zip(mode_str, stat._filemode_table):
        for bit, bitchar in table:
            if char == bitchar:
                mode |= bit
                break
    return mode
</code></pre>
<p>Note that I'm being "naughty" and accessing private members of the <code>stat</code> module. The usual caveats apply.</p>
<p>Also note that the documentation for <code>stat.filemode</code> is incorrect anyway, since <code>0o100000</code> is technically not part of the file mode, it is the file type <code>S_IFREG</code>. From <a href="http://man7.org/linux/man-pages/man7/inode.7.html" rel="nofollow noreferrer">inode(7)</a>:</p>
<blockquote>
<p>POSIX refers to the stat.st_mode bits corresponding to the mask        <code>S_IFMT</code> (see below) as the file type, the 12 bits corresponding to the mask 07777 as the file mode bits and the least significant 9 bits (0777) as the file permission bits.</p>
</blockquote>
</div>
<span class="comment-copy">What are you getting the string from, and can that thing provide you with an alternate format instead?</span>
<span class="comment-copy">On my platform, the Python implementation of filemode is blown away by that <a href="https://github.com/python/cpython/blob/1f06a680de465be0c24a78ea3b610053955daa99/Lib/stat.py#L176" rel="nofollow noreferrer">* import</a> of a C implementation, and the behaviour of each implementation differs somewhat.  Go figure ..</span>
<span class="comment-copy">@wim: That explains why it works correctly, since the Python code doesn't.</span>
