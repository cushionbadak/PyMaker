<div class="post-text" itemprop="text">
<p>I stumbled upon an interesting and unexpected feature of Python:</p>
<pre><code>def fun():
    """Foo’s docstring"""
</code></pre>
<p>is a valid function? According to <a href="https://www.python.org/dev/peps/pep-0257/" rel="nofollow noreferrer">PEP 257</a>, “<em>A docstring is a string literal that occurs as the first statement in a module, function, class, or method definition</em>” meaning that the docstring itself is considered a statement?</p>
<p>I would have expected that at least a <a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements" rel="nofollow noreferrer"><code>pass</code></a> statement is required here. The above example contradicts the <a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">Python Zen</a> of “explicit is better than implicit” as <code>pass</code> states an explicit intent, and a docstring does not.</p>
<p>Can anybody shed some light on the intent?</p>
</div>
<div class="post-text" itemprop="text">
<p>A string literal is just like any other literal. It also works if you just put in an integer:</p>
<pre><code>def func():
    1
</code></pre>
<p>However, it doesn't work if you only use a comment:</p>
<pre><code>def func():
    # test

# IndentationError: expected an indented block
</code></pre>
<p>Even though it's also added as docstring (saved in the <code>__doc__</code> attribute) it's also a function level constant:</p>
<pre><code>def func():
    """I'm a function"""

&gt;&gt;&gt; func.__code__.co_consts
("I'm a function", None)
</code></pre>
<p>So the presence of a string literal as only content of a function doesn't change <em>how</em> the function is actually "parsed" and "compiled" itself. Well, apart from the fact that it also got a not-None <code>__doc__</code> attribute.</p>
<p>It's actually very handy for <code>abstractmethod</code>s (see for example <a href="https://stackoverflow.com/a/45826761/5393381">"Body of abstract method in Python"</a>), where you don't need an actual function body.</p>
</div>
<span class="comment-copy">What's unclear? As that quote tells you, the string is the first statement, only one statement is required by <a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow noreferrer">the grammar</a> for the function to be syntactically valid. That's <i>not</i> an empty function, in other words.</span>
<span class="comment-copy">What exactly do you mean by 'intent'?</span>
<span class="comment-copy">I’ve extended the question...</span>
<span class="comment-copy">The Zen of Python doesn't tell you about the grammar. If you think a <code>pass</code> statement after the docstring makes the code clearer in intent then by all means add one, but it isn't <i>required</i> for the code to run. It would only complicate the parser to have the requirement that <code>suite</code> contains at least one statement, except in the case that it's in a <code>funcdef</code> and that first statement is a string literal, in which case it must contain at least two. <i>"Simple is better than complex."</i></span>
<span class="comment-copy">What do you mean <i>"considered a statement when placed in a certain location"</i>? A string literal on its own is an expression, thus an expression statement. The fact that this is <i>also</i> special-cased as a docstring when such a statement is the first in a function/class/module/method doesn't change that.</span>
