<div class="post-text" itemprop="text">
<p>I'm trying to find an elegant, yet efficient method of outputting <code>[1,0]</code> and <code>[0,1]</code> depending on a value <code>v</code> which can be <code>0</code> or <code>1</code> respectively.</p>
<p><strong>To be clear</strong></p>
<pre><code>i/o
0 &gt;&gt;&gt; [1,0]
1 &gt;&gt;&gt; [0,1]
</code></pre>
<p>Very simple task, though I wonder what the most 'pythonic' way of accomplishing this would be.</p>
<p><strong>What are your thoughts?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Well, for readability, I actually like your solution. But you want something shorter:</p>
<pre><code>[1-v, v]
</code></pre>
<p>does the trick.</p>
</div>
<div class="post-text" itemprop="text">
<p>A few options (no error handling here). I would opt for <code>g()</code> or <code>h()</code> depending on the situation, and <code>f()</code> is silly.</p>
<pre><code>PAIRS = {
    0 : [1,0],
    1 : [0,1],
}

def f(n):
    return sorted(range(2), reverse = not n)

def g(n):
    return PAIRS[n]

def h(n):
    return [0,1] if n else [1,0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types" rel="nofollow noreferrer">bitwise exclusive or (XOR)</a> works as well.</p>
<pre><code>[v^1, v]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use this:</p>
<pre><code>[(v+1) % 2, v]
</code></pre>
</div>
<span class="comment-copy">So far <code>[0,1] if v else [1,0]</code> is my best shot. I'd imagine there's a shorter way perhaps.</span>
<span class="comment-copy"><code>v and [0, 1] or [1, 0]</code> would be one character less, but also less clear.</span>
<span class="comment-copy">I like the dictionary.</span>
