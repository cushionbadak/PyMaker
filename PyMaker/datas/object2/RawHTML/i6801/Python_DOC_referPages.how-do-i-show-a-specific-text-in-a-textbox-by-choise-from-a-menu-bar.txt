<div class="post-text" itemprop="text">
<p>I have created a menu bar and a textbox, in the textbox I like to show the info in the variable that belongs to the chooice that been made in the menu.</p>
<p>But I can not figure out how.</p>
<p>Heres what I managed to put together by different guides on the web. Im verry new to python and Im still struggeling with the concept on objects and classes so any help at all will be greatly appriciated.</p>
<pre><code>from tkinter import Tk, Frame, Menu
from tkinter import *

class Example(Frame):
  def __init__(self):
    super().__init__()   
    self.initUI()

  def initUI(self):
    self.master.title("syntax explenation for shopfloor")

    menubar = Menu(self.master)
    self.master.config(menu=menubar)

    syntaxMenu = Menu(menubar, tearoff=False)       
    submenu = Menu(syntaxMenu)
    syntaxMenu.add_cascade(label='Math', menu=submenu, underline=0)
    submenu.add_command(label="abs()", command=self.onSyntaxabs)
    submenu.add_command(label="cos()", command=self.onSyntaxcos)
    submenu.add_command(label="sin()", command=self.onSyntaxsin)
    submenu.add_cascade(label="log()", command=self.onSyntaxlog)
    submenu = Menu(syntaxMenu)
    syntaxMenu.add_cascade(label='Inqurie', menu=submenu, underline=0)
    submenu.add_command(label="inqiureText()", command=self.onSyntaxinquire)

    menubar.add_cascade(label="Syntax", underline=0, menu=syntaxMenu)

  def onSyntaxabs():
    info="Convert to absolute value, abs(-10) will respond with 10."
  def onSyntaxcos():
    info="Returns cosinus value in decimal degrees"
  def onSyntaxcos():
    info="Returns cosinus value in decimal degrees"
  def onSyntaxlog():
    info="Returns the natural logarithm"
  def onSyntaxinquire():
    info="Creates a pop-up box that you can enter text in."


def main():

root = Tk()
root.geometry("500x600")
app = Example() 
S = Scrollbar(root)
T = Text(root, height=20, width=60, bg="lightblue")
S.pack(side=RIGHT, fill=Y)
T.pack(side=LEFT, fill=BOTH)
T.pack(side=RIGHT, fill=BOTH)
S.config(command=T.yview)
T.config(yscrollcommand=S.set)
info=?
T.insert(END, info)
mainloop(  )

if __name__ == '__main__':
main() 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a little push forward:</p>
<pre><code>from tkinter import Tk, Frame, Menu, Scrollbar, Text
from tkinter import RIGHT, LEFT, BOTH, END, Y
from tkinter import StringVar

class Example(Frame):
    def __init__(self, master):
        super().__init__(master)
        self.pack(fill=BOTH, expand=True)
        self.initUI()

    def initUI(self):
        self.master.title("syntax explenation for shopfloor")

        menubar = Menu(self.master)
        self.master.config(menu=menubar)

        syntaxMenu = Menu(menubar, tearoff=False)
        submenu = Menu(syntaxMenu)
        syntaxMenu.add_cascade(label='Math', menu=submenu, underline=0)
        submenu.add_command(label="abs()", command=self.onSyntaxabs)
        submenu.add_command(label="cos()", command=self.onSyntaxcos)
        submenu.add_command(label="sin()", command=self.onSyntaxsin)
        submenu.add_cascade(label="log()", command=self.onSyntaxlog)
        submenu = Menu(syntaxMenu)
        syntaxMenu.add_cascade(label='Inqurie', menu=submenu, underline=0)
        submenu.add_command(label="inqiureText()", command=self.onSyntaxinquire)

        menubar.add_cascade(label="Syntax", underline=0, menu=syntaxMenu)


        S = Scrollbar(self)                             # Should probably be an instance member as well
        self.text = Text(self, height=20, width=60, bg="lightblue")
        S.pack(side=RIGHT, fill=Y)
        self.text.pack(side=LEFT, fill=BOTH)
        self.text.pack(side=RIGHT, fill=BOTH)
        S.config(command=self.text.yview)
        self.text.config(yscrollcommand=S.set)

        self.setText("?")

    def setText(self, text):
        self.text.delete(1.0,END)
        self.text.insert(END, text)


    def onSyntaxabs(self):
        self.setText("Convert to absolute value, abs(-10) will respond with 10.")

    def onSyntaxsin(self):
        self.setText("Returns sinus value in decimal degrees")

    def onSyntaxcos(self):
        self.setText("Returns cosinus value in decimal degrees")

    def onSyntaxlog(self):
        self.setText("Returns the natural logarithm")

    def onSyntaxinquire(self):
        self.setText("Creates a pop-up box that you can enter text in.")


def main():
    root = Tk()
    root.geometry("500x600")
    app = Example(master=root)
    app.mainloop()

if __name__ == '__main__':
    main()
</code></pre>
<p>In general, I'd try to avoid importing all those symbols and just do something like</p>
<pre><code>import tkinter as tk
</code></pre>
<p>then where you write <code>Frame</code> or <code>RIGHT</code> you'd use <code>tk.Frame</code> or <code>tk.RIGHT</code>.</p>
<p>Also, I moved all your widget creation inside of the class.  So now your Text widget is a class member (<code>self.text</code>) and can be accessed and controlled easily from within the class -- all of your <code>onSyntax___</code> methods call <code>setText</code> (another class method) which sets the Text widget's contents.</p>
<p>Hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thank you all for your input.</p>
<p>And I'll will continue to work with your post jedward.
I'll look in to Eclipse and Py Charm since I really need something like that.</p>
</div>
<span class="comment-copy">There are many problems with your code. You need to fix your indention. You are importing from tkinter twice for no reason. <code>info=?</code> is not a valid statement I would imaging you meant <code>info="?"</code>. You have defined <code>def onSyntaxcos():</code> twice and so on.</span>
<span class="comment-copy">You first need to understand what is a <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer"><code>class</code></a> in Python. Then you could continue with a tutorial about <a href="https://docs.python.org/3/library/tkinter.html" rel="nofollow noreferrer"><code>tkinter</code></a>.</span>
<span class="comment-copy">you might benefit from using a good IDE that will error check for you so you can avoid simple problems like indention and missing quotes. Maybe something like Eclipse or Py Charm.</span>
<span class="comment-copy">Would it not be best to import as <code>tk</code>.  Importing on several lines from the same library seams like bad practice to me. For so many imports I would think using <code>tk</code> would be better</span>
<span class="comment-copy">@SierraMountainTech I agree - I hope my note under the code wasn't confusing.  Not as much due to the three lines of imports I used, but because it's a <i>ton</i> of globals to be importing, many of which are common (<code>Y</code>) and could be the source of unexpected issues if they're redefined.</span>
<span class="comment-copy">Ya. I guess the imports are good to visualize what is actually being used from tkinter.</span>
