<div class="post-text" itemprop="text">
<p>I have been thinking to run a script/code on a time that I want. Like we say etc. I want to run a program at 00:00 (I enter it in the code that I want to start at that time) meanwhile it's 23:21. So it should wait until that time and then run the method/function or whatever it should do.</p>
<p>What would be in that case the best way to run something like this in that case :) ?</p>
<p>EDIT: Exemple - </p>
<blockquote>
<p>I was thinking like to do it through a code. Like etc. I have a code
  with we say 3 functions. At the time 23:50 I want function nr 1 to
  run. Then at 23:55 i want the function nr 2 to run and then 00:05 i
  want the function nr3 to run and all that in the same py file.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can use <b>crontab</b>.</p>
<p>To edit:<br/></p>
<pre><code>crontab -e
</code></pre>
<p>To add initial time:<br/></p>
<pre><code>50 23 * * * /usr/bin/python /your/file.py function1
55 23 * * * /usr/bin/python /your/file.py function2
05 00 * * * /usr/bin/python /your/file.py function3
</code></pre>
<p>And it should be like this your file.</p>
<pre><code>import sys

def function1():
    print "function 1 running"
def function2():
    print "function 2 running"
def function3():
    print "function 3 running"

if sys.argv[1]:
    run = sys.argv[1]
    if run == "function1":
      function1()
    elif run == "function2":
       function2()
    elif run == "function3":
       function3()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs" rel="nofollow noreferrer">sched</a> library is what you are looking for. No site-packages or another utilities like cron are required.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this:</p>
<pre><code>import time
starttimes = { (23, 50): func1, (23, 55): func2, (0, 5): func3 }

while True:
    now = tuple(time.gmtime()[3:5])
    if now in starttimes:
        starttimes[now]() # call a function 
    time.sleep(60)
</code></pre>
<p>Mind that it is a very crude solution, assuming in particular that none of <code>func1</code>â€¦<code>func3</code> functions will run for longer time than the period left to the starting time of the next function. Also: you need to start your program and leave it running all the time. You kill it (or reboot your system), you need to start it again.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for a dedicated task scheduler like <a href="http://www.celeryproject.org/" rel="nofollow noreferrer">Celer</a>y.</p>
<p>Or to do it simply, you can put a crontab to run a python script to run every minute.
Store method name and time to run in a database. When the task runs, it sees if there is any task to be run for the minute,and executes the method specified in the database.</p>
</div>
<span class="comment-copy">If it's an isolated program you could use Task Scheduler (for Windows) or cron (for Linux)</span>
<span class="comment-copy">Oh. Well it is not a program itself I would say. My bad for saying it. I would just assume it is a code and I want the method/function to start at a time given.</span>
<span class="comment-copy">There is no way for a program to start <b>itself</b>. Either you use a system service (like aforementioned cron) to start your program, <b>or</b> you start your program by hand, but code it so it sleeps until the right time, then does something and goes to sleep again.</span>
<span class="comment-copy">I edited my post. Maybe that will give a another ideas through that :)?</span>
<span class="comment-copy">I think I was missunderstood with my question. Well basically what I want is that I have etc  we say 3 functions. At the time 23:50 I want function nr 1 to run. Then at 23:55 i want the function nr 2 to run and then 00:05 i want the function nr3 to run and all that in the same py file</span>
<span class="comment-copy">If you use arguments, you can do it. Like this: <code>python file.py function1</code></span>
<span class="comment-copy">Oh dang, Will that work? I thought more like inside my code, Im not really good at python (Beginner only) and I thought there is a function like to be easier way already inbuilt. Then I just add it inside the code. But I assume there isnt anything like that?</span>
<span class="comment-copy">@WhenInThis There is, but in its simplest form, it does consumes a bit of ressource, not much, but it is far to be optimal. In a bit more complicated way, you use a thread for each of your function.</span>
<span class="comment-copy">Looks awesome! I think its something that im looking for!</span>
<span class="comment-copy">I think I was missunderstood with my question. Well basically what I want is that I have etc  we say 3 functions. At the time 23:50 I want function nr 1 to run. Then at 23:55 i want the function nr 2 to run and then 00:05 i want the function nr3 to run and all that in the same py file</span>
<span class="comment-copy">And what does make you thinking that i missunderstood you? If you want to run code from itself without sleeping in process list - you can't do it without cron or task scheduller. If sleeping process is acceptable for you - why don't use sched?</span>
<span class="comment-copy">Oh well. You might be right. I havent checked the library clearly but I will look into it now. It might be the one im looking for :)</span>
<span class="comment-copy">You should put this snippet in a thread, would be less resource consuming, regardless the OP needs to do something else with his program in the meanwhile or not.</span>
<span class="comment-copy">Oh okey. Yeah you are right. I will most def. Look into it. but I thought also Thread might be a sort of solution.</span>
<span class="comment-copy">Oh okey but I was thinking like to do it through a code. Like etc. I have a code with we say 3 functions. At the time 23:50 I want function nr 1 to run. Then at 23:55 i want the function nr 2 to run and then 00:05 i want the function nr3 to run and all that in the same py file.</span>
