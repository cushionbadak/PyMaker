<div class="post-text" itemprop="text">
<p>Please help me with this.</p>
<p>For example, if I have <code>a = [2, 5, 8, 4]</code> and <code>b = [1, 3, 6, 9]</code>.
how would I used "for" loop to pick an element in 'a' and its corresponding element in 'b' to use in other function? For instance, pick 2 in 'a' and pick 1 in 'b' then next pick 5 in 'a' and 3 in 'b'. </p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip()</a> function:</p>
<blockquote>
<p>Make an iterator that aggregates elements from each of the iterables.</p>
</blockquote>
<p>You can use it like this:</p>
<pre><code>a = [2, 5, 8, 4]
b = [1, 3, 6, 9]


def another_function(x, y):
    print(x, y)


for item_a, item_b in zip(a, b):
    another_function(item_a, item_b)
</code></pre>
<p>You get:</p>
<pre><code>(2, 1)
(5, 3)
(8, 6)
(4, 9)
</code></pre>
<p>You can also use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map()</a> function:</p>
<blockquote>
<p>Return an iterator that applies function to every item of <em>iterable</em>, yielding the results.</p>
</blockquote>
<p>Your function should return a value:</p>
<pre><code>def another_function(x, y):
    return x, y


result = map(another_function, a, b)

for item in result:
    print(item)
</code></pre>
<p>You get the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>The situation you are facing is called "Parallel Arrays".  Wikipedia has <a href="https://en.wikipedia.org/wiki/Parallel_array" rel="nofollow noreferrer">a great explanation and example code</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you know the lists are the same length, just use <code>zip</code>:</p>
<pre><code>for a_elem, b_elem in zip(a, b):
    # do stuff with the elements
</code></pre>
<p>If your lists might be different lengths, <code>zip</code> will give you a sequence the length of your shortest iterable. Use <code>itertools.izip_longest</code> if you need a sequence the length of your longest iterable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Can't you just access one element after another using the same position in one for loop defining a function?</p>
<pre><code>def access_A_and_B(a,b,number)
for i in range(len(a)): #itterate through a until you find your number
   if(a[i] == number and len(b) &gt; i): # if a at position i is your number 
      return b[i] #ask b what the corresponding value is and return it
return -1 #default value if number not in a
</code></pre>
<blockquote>
<blockquote>
<p>number: is the number you want to search</p>
</blockquote>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>for x, y in zip(a, b):
    some_func(x, y)
</code></pre>
</div>
<span class="comment-copy"><code>another_function(a[i], b[i])</code> where <code>i</code> is the index you want to access ?</span>
<span class="comment-copy">As usual with these types of questions..what have you tried so far? Why Hasn't it worked? We're not here to just give you answers for your homework without you at least trying it first etc etc</span>
<span class="comment-copy">to pick 2 in 'a' and pick 1 in 'b', just use zip function. no double looping required. &gt;&gt;&gt; zip(a,b) [(2, 1), (3, 2), (4, 3), (5, 4)]</span>
