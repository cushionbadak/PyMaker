<div class="post-text" itemprop="text">
<p>In my python function I want to use (read,query (if statement check) and then perform other statements) on a global variable within a function.
To do so within the function I have to declare the variable as global.
I want to pass the function a variable then use the passed variable to declare the correct global variable as global.</p>
<pre><code>current_data_list = []
current_data_list_length = len(current_data_list)

#the list is filled with each line from a file

def listtousable(listname):
    local_list_name = listname
    local_list_length = local_list_name + "_length"

    global local_list_name
    global local_list_length

    if local_list_name[0] == "firstlinevariable":
        local_list_length = len(local_list_name)
        print local_list_length
    else:
        print "wtf"
#fill into list
listtousable("current_data_list")
</code></pre>
<p>Any help would be greatly appreciated :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to create the global state var in your function; you can just change its value,</p>
<pre><code>program_state = "processing"

state_files = {
    "loading":    "loading.txt",
    "filtering":  "filtered.txt",
    "processing": "process_data.txt",
    "done":       "final.txt"
}

def processing_function(data):
    global program_state
    program_state = "processing"
    output_file = state_files[program_state]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The comment by Hugh is right, but if you still want to do that you can:</p>
<p></p>
<pre><code>exec('global ' + var_name_from_list)
</code></pre>
<p>See docs <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">here</a> for python 3.6</p>
<p>EDIT</p>
<p>For python 2.7 see <a href="https://docs.python.org/2.7/library/functions.html#exec" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">Globals are generally a bad idea - they make it harder to localize bugs in your program. Can you describe what you are actually trying to accomplish with this? There is almost certainly a better way to do it.</span>
<span class="comment-copy">I am using global variables to maintain a global state of where the program is &amp; as a temp storage data to then write to the correct text file (known from the state) once done.</span>
<span class="comment-copy">By state I meant a almost "understanding" of the text file (eg first line means each object in the text file has 3 values, then for (len -1)/object-length of the file/now-list that has currently been selected to then create more lists with (name)+ iterated-value as name and 3 values inside list so then i can access a specific object within the file by name+iter-val-needed[0/1/2], do whatever through ui using the file data as list's and then write the data upon whatever changes I make to the list/data. So a dynamic code execution seems like what I need.</span>
<span class="comment-copy">Your explanation is just making me more confused! Can you give ie the first 10 lines of a sample data file? Maybe you should think about using a database like sqlite instead of trying to shoehorn this into a flat file? Trying to implement "dynamic code execution" via variable global variables sounds like five kinds of headache at once.</span>
<span class="comment-copy">no doubt im gonna use sqlite 3 in the future of my project but for learning purposes I wana be able to use flat files also.      file-variable parent-location parent-name child-name child-location child-description child2-name child2-location child2-description</span>
<span class="comment-copy">Could you link the python 2.7 equivalent please that would be great.</span>
