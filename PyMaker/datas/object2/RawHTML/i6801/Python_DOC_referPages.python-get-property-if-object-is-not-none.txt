<div class="post-text" itemprop="text">
<p>Is there a Pythonic way to grab a property if an object exists on one line of code? Currently in the code below if someone passes in a None type object the code will break, so I need some clean way to check that it is not None, but on one line of code. C# has the <code>?.</code> syntax that works really well, so looking for something like that.</p>
<pre><code>class MyClass:
    def __init__():
        self.my_property = "Hello, World!"

def print_class_property(myClassInstance):
    print(myClassInstance???.my_property) # Here is where I need something inline
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in function <a href="https://docs.python.org/3/library/functions.html#getattr" rel="noreferrer"><code>getattr</code></a>. It allows an optional third argument that will be returned if the object passed in doesn't have the specified attribute. From the docs:</p>
<blockquote>
<p><em><h2>getattr(object, name[, default])</h2></em></p>
<p>Return the value of the named attribute of object. name must be a string. If the string is the name of one of the objectâ€™s attributes, the result is the value of that attribute. For example, <code>getattr(x, 'foobar')</code> is equivalent to <code>x.foobar</code>. <strong>If the named attribute does not exist, <em>default</em> is returned if provided</strong>, otherwise AttributeError is raised.</p>
</blockquote>
<p>Bold emphasis mine.</p>
<pre><code>&gt;&gt;&gt; getattr(None, 'attr', 'default')
'default'
</code></pre>
<p>Here's an example pertaining more to your problem:</p>
<pre><code>&gt;&gt;&gt; class Class:
    def __init__(self):
        self.attr = 'attr'


&gt;&gt;&gt; def func(obj):
    return getattr(obj, 'attr', 'default')

&gt;&gt;&gt; func(Class())
'attr'
&gt;&gt;&gt; func(None)
'default'
</code></pre>
<p>As @juanpa.arrivillaga said in the comments, another common idiom when dealing with cases such as this is to use <a href="https://docs.python.org/3/reference/compound_stmts.html?highlight=try#try" rel="noreferrer"><code>try/except</code></a>. See <a href="https://stackoverflow.com/questions/11360858/what-is-the-eafp-principle-in-python"><em>What is the EAFP principle in Python?</em></a>.</p>
</div>
<span class="comment-copy">Why one line? Just because something terse doesn't make it better. Anyway, you can use <code>getattr</code>.</span>
<span class="comment-copy">If someone passes None to your <code>print_class_property</code>, that's their bug, not yours. That said, Python doesn't have a null-coalescing operator or anything like that.</span>
<span class="comment-copy">Because these objects are properties on a list of objects and I have to do this check about 20 times. I can do a null check everytime but it feels like Python should have something.</span>
<span class="comment-copy">@CamJohnson26 See my answer.</span>
<span class="comment-copy">why not <code>b = a.attr if a is not None else 'some default value'</code>?</span>
<span class="comment-copy">This worked great for me, thanks. Any idea why the 3rd parameter isn't documented?</span>
<span class="comment-copy">Ah I see, thank you</span>
<span class="comment-copy">@ChristianDean: Those are square brackets. Angle brackets are <code>&lt;&gt;</code>.</span>
<span class="comment-copy">@user2357112 That's what I meant. Thanks for the correct.</span>
