<div class="post-text" itemprop="text">
<p>I have a tuple of numbers, and I want to choose a random number from my tuple in addition with a certain number. For example:</p>
<pre><code>my_tuple = (1,2,3)
</code></pre>
<p>and I have the number 4. I want to choose a random number from the numbers 1,2,3,4 (without changing the tuple of course).</p>
<p>I tried:</p>
<pre><code>my_tp = (1, 2, 3)
a = random.choice(list(my_tp).append(4))
print(a)
</code></pre>
<p>I'm new to python. I tried converting the tuple to a list, and then performing the random function.
The code above didn't work. Got the error </p>
<blockquote>
<p>object of type 'NoneType' has no len()</p>
</blockquote>
<p>Would love some help.</p>
</div>
<div class="post-text" itemprop="text">
<h1><code>list.append</code> returns <code>none</code></h1>
<p>Once converting to a <code>list</code> as you have done, appending will modify that <code>list</code> but return <code>none</code> so that is the source of your <code>error</code>.</p>
<p>To get round that you can either convert the <code>tuple</code> to a <code>list</code> then <code>append 4</code> to it, then use <code>random.choice</code>, or in just one step, you can concatenate a list of <code>[4]</code> with the <code>+</code> operand. </p>
<p>This approach is much simpler:</p>
<pre><code>import random

my_tuple = (1,2,3)
random.choice(list(my_tuple) + [4])
</code></pre>
<p>Hope this helps and clears some things up! :)</p>
<p><strong>Update:</strong></p>
<p>If you want to just randomly select from the tuple without the last item, then just <code>slice</code> the list with the normal syntax:</p>
<pre><code>random.choice(list(my_tuple)[:-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The method <code>list.append</code> alters the provided list and returns <code>None</code>, which explains the exception you got. To get the desired result, you can implicitly use the <code>tuple.__add__</code> method, which will return a new tuple.</p>
<pre><code>values = (1, 2, 3)
random.choice(values + (4,))
</code></pre>
<p>If you want to remove values in a concise-ish fashion, using a <code>set</code> might be appropriate.</p>
<pre><code>values = {1, 2, 3}
random.choice(list(values - {3}))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try:</p>
<pre><code>my_tuple = (1,2,3)
random.choice((*my_tuple, 4))
</code></pre>
<p>Where <code>(*my_tuple, 4)</code> creates a new tuple with the unpacked content of <code>my_tuple</code> and <code>4</code>.</p>
</div>
<span class="comment-copy">Thanks. And If I want to perform subtraction? a simple '-' won't do it</span>
<span class="comment-copy">what do you mean? here you aren't using addition, the <code>+</code> is concatenating the lists.</span>
<span class="comment-copy">Yes. If the tuple is (1,2,3), and i want to subtract the number 3, and choose from a random number in (1,2)</span>
<span class="comment-copy">Then just slice up to the last value with <code>list(my_tuple)[:-1]</code> :)</span>
<span class="comment-copy">Thanks. And If I want to perform subtraction? a simple '-' won't do it</span>
<span class="comment-copy">@sheldonzy The only built-in which allows "subtraction" in this manner is <code>set</code>. I have added an option showing this usage.</span>
<span class="comment-copy">It might be worth noting that that unpacking syntax is <a href="https://www.python.org/dev/peps/pep-3132/" rel="nofollow noreferrer">new in Python 3.0</a></span>
<span class="comment-copy">That was introduced with <a href="https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations" rel="nofollow noreferrer">python3.5</a>, in September 2015. Not exactly what I would call new.</span>
