<div class="post-text" itemprop="text">
<p>I am trying to parse lists, like <code>[1.0, 3.9]</code>, and I would like to raise a custom exception when the list is empty. I followed this <a href="https://stackoverflow.com/a/13409786/2528668">https://stackoverflow.com/a/13409786/2528668</a> but without much success.
Here is what I have so far:</p>
<pre class="lang-py prettyprint-override"><code>class EmptyListError(ParseFatalException):
    """Exception raised by the parser for empty lists."""

    def __init__(self, s, loc, msg):
        super().__init__(s, loc, 'Empty lists not allowed \'{}\''.format(msg))


def hell_raiser(s, loc, toks):
    raise EmptyListError(s, loc, toks[0])


START, END = map(Suppress, '[]')
list_t = START + delimitedList(pyparsing_common.sci_real).setParseAction(lambda s, loc, toks: hell_raiser(s, loc, toks) if not toks else toks) + END


tests = """
[1.0, 1.0, 1.0]
[]
[     ]
""".splitlines()

for test in tests:
    if not test.strip():
        continue
    try:
        print(test.strip())
        result = list_t.parseString(test)
    except ParseBaseException as pe:
        print(pe)
    else:
        print(result)
</code></pre>
<p>which prints:</p>
<pre><code>[1.0, 1.0, 1.0]
[1.0, 1.0, 1.0]
[]
Expected real number with scientific notation (at char 1), (line:1, col:2)
[     ]
Expected real number with scientific notation (at char 6), (line:1, col:7)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>delimitedList</code> will not match an empty list, so your parse action will never run. I changed your parser slightly to make the list inside <code>[]</code>'s optional, and then run your <code>hellRaiser</code> parse action:</p>
<pre><code>list_t = START + Optional(delimitedList(pyparsing_common.sci_real)) + END

list_t.setParseAction(lambda s, loc, toks: hell_raiser(s, loc, toks) if not toks else toks)
</code></pre>
<p>Gets your desired output:</p>
<pre><code>[1.0, 1.0, 1.0]
[1.0, 1.0, 1.0]
[]
Empty lists not allowed '[]' (at char 0), (line:1, col:1)
[     ]
Empty lists not allowed '[]' (at char 0), (line:1, col:1)
</code></pre>
<p>You could also replace your parse action with a boolean condition, in this case, simply <code>bool</code> - the built-in method will evaluate against the list of tokens, and if empty will fail the condition.</p>
<pre><code>list_t.addCondition(bool, message="Empty lists not allowed", fatal=True)
</code></pre>
<p>Gets this:</p>
<pre><code>[1.0, 1.0, 1.0]
[1.0, 1.0, 1.0]
[]
Empty lists not allowed (at char 0), (line:1, col:1)
[     ]
Empty lists not allowed (at char 0), (line:1, col:1)
</code></pre>
<p>Lastly, check out the <code>runTests()</code> method on <code>ParserElement</code>. I was writing that "test-the-string-and-dump-the-results-or-catch-the-exception" loop so many times, I decided to just add a testing convenience function.</p>
</div>
<span class="comment-copy">Fantastic! Thanks for your help and very valuable suggestions on using <code>pyparsing</code>!</span>
