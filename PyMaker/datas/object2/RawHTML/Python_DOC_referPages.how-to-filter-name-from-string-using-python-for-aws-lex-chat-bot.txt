<div class="post-text" itemprop="text">
<p>I have a AWS Lex chat bot and in which chat bot when asks name of customer, if customer enters only his name then no issue but what if customer enters "my name is <strong>sudhir</strong>" or "am <strong>sagar</strong>" or "this is <strong>hari</strong>".</p>
<p>How to filter name from above response in python code ?</p>
<p>I tried using modules like <strong>SpellChecker</strong>,<strong>nltk</strong> &amp; <strong>Spacy</strong> nothing worked to handle this.</p>
<p>Please help if any one done already.</p>
</div>
<div class="post-text" itemprop="text">
<p>While adding slots you have , near the prompt you have a setting pan, click that you have this:</p>
<p><a href="https://i.stack.imgur.com/8Wnhs.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/8Wnhs.png"/></a></p>
<p>Then add a corresponding utterance according to the image. </p>
<p><a href="https://tutorials.botsfloor.com/say-hello-to-your-own-amazon-lex-chat-bot-9f22e7a0f9b0" rel="nofollow noreferrer">https://tutorials.botsfloor.com/say-hello-to-your-own-amazon-lex-chat-bot-9f22e7a0f9b0</a></p>
<p>Read full article there.</p>
<p>Thanks for your question. </p>
</div>
<span class="comment-copy">In your Lex console, you will build your utterances to accommodate, as an example I am {name} or my name is {name} or this is {name} and name will be a slot you can try to associate an AMAZON.US_FIRST_NAME corpus to (no current support for IN  and the returned value would be the slot name.</span>
<span class="comment-copy">@ChuckLaPress I would expand on your comment, format the example utterances, maybe add a screenshot of the Lex console for where to add the utterances and submit that as the answer. Lex handles this very well, so there should be no need to parse it much further in python.</span>
<span class="comment-copy">i just gave an example , in the end we won't be having any idea what user gonna answer for each question, so i was seeking such kind of solution as per u guys i need to specify all the answers we may get from end user. which is not so easy</span>
<span class="comment-copy">@sudhirtataraju It is probably easier than you think. It should only take 5-10 minutes to brainstorm all the natural ways someone might answer, and type those into a list of utterances. Lex is built to take those utterances as a guide, not a strict format to match. So training Lex with many examples is key to capturing more accurate slot values. If you ignore this and do all the input parsing youself, you might as well build a chatbot from scratch because you are ignoring the core strengths of Lex.</span>
