<div class="post-text" itemprop="text">
<p>If you look at this:-</p>
<pre><code>&gt;&gt;&gt;a = "hello"
&gt;&gt;&gt;b = "world"
&gt;&gt;&gt;print a and b 
world
&gt;&gt;&gt;print b and a
hello
</code></pre>
<p>and this:-</p>
<pre><code>&gt;&gt;&gt;a = "hello"
&gt;&gt;&gt;b = "world"
&gt;&gt;&gt;print a or b 
hello
&gt;&gt;&gt;print b or a
world
</code></pre>
<p>Both are almost similar. So how are they different?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>or</code> and <code>and</code> operators <em>short-circuit</em>. They return early when the outcome is a given.</p>
<p>For <code>or</code> that means that if the first expression is <code>True</code>, then there is no point in looking at the second expression as it doesn't matter:</p>
<pre><code>&gt;&gt;&gt; 'a' or 'b'
'a'
&gt;&gt;&gt; False or 'b'
'b'
</code></pre>
<p>The same goes for <code>and</code>, but only when the first value evaluates to <code>False</code>; in that case the expression is <em>always</em> going to evaluate to <code>False</code> whatever the second expression is going to come to:</p>
<pre><code>&gt;&gt;&gt; False and 'b'
False
&gt;&gt;&gt; 'a' and 'b'
'b'
</code></pre>
<p>See <a href="http://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow">Boolean expressions</a>:</p>
<blockquote>
<p>The expression <code>x and y</code> first evaluates <code>x</code>; if <code>x</code> is false, its value is returned; otherwise, <code>y</code> is evaluated and the resulting value is returned.</p>
<p>The expression <code>x or y</code> first evaluates <code>x</code>; if <code>x</code> is true, its value is returned; otherwise, <code>y</code> is evaluated and the resulting value is returned.</p>
</blockquote>
</div>
<span class="comment-copy">The last one is a typo, isn't it? To get that output, it should be <code>print b or a</code>.</span>
<span class="comment-copy">Yes. Sorry. Gonna edit it.</span>
<span class="comment-copy">Got it. Thanks.</span>
