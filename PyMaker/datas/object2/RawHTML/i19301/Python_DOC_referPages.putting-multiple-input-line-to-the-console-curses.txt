<div class="post-text" itemprop="text">
<p>I have started to write console with Python language. It is amazing. But, I have tried to create input box with <code>curses</code> as shown below. I have stucked in how I can put input line and get the input written on the input place on the console. Can you help me for this part ? I forget to ask _<em>is it possible to create input box as shown below with <strong>curses</strong> ? If not, what should I use ?</em></p>
<p>I just want to see the methods/algorithms not the whole and complete code.</p>
<pre><code>                  sketch of console 

 |------------------------------------------------------|
 |                                                      |
 |                                                      |
 |                                                      |
 |                                                      |
 |     username  ===&gt;                                   | // user can write name
 |     password  ===&gt;                                   | // user can write password
 |     procedure ===&gt;                                   | // user can write proc name
 |                                                      |
 |                                                      |
 |                                                      |
 |                                                      |
 |                                                      |
 |------------------------------------------------------|
</code></pre>
<p>I am developing on the Linux platform ( Ubuntu 12.04 lts ) </p>
</div>
<div class="post-text" itemprop="text">
<p>Somehow my previous answer got deleted...</p>
<p>To get user input in Python, assign a variable to the results of the built-in <a href="http://docs.python.org/3/library/functions.html?#input" rel="nofollow"><code>input()</code></a> function:</p>
<pre><code>user_input = input("Type something: ")
print("You typed: " + user_input)
</code></pre>
<p>In Python 2, the <a href="http://docs.python.org/2/library/functions.html?#raw_input" rel="nofollow"><code>raw_input()</code></a> function is also available, and is preferred over <code>input()</code>.</p>
<p>To get the password without it echoing back to the screen, use the <a href="http://docs.python.org/3/library/getpass.html" rel="nofollow"><code>getpass</code></a> module:</p>
<pre><code>import getpass
user_password = getpass.getpass("Enter password: ")
</code></pre>
<p>I'm not that familiar with <code>curses</code>, but it would seem that you could position your cursor, then call <code>input()</code> or <code>getpass.getpass()</code>. Just briefly reading over the <a href="http://docs.python.org/2/howto/curses.html" rel="nofollow">documentation</a>, there are apparently options to turn screen echoing on and off at will, so those may be better options. Read The Fine Manual :)</p>
</div>
<span class="comment-copy">@GeorgeStocker why was my answer deleted? The OP asked me (in a now-deleted question) to put it there. No, I didn't put the details of drawing the box with <code>curses</code>, but I gave him help that he needed...</span>
<span class="comment-copy">@GeorgeStocker I wonder the reason why it is deleted.</span>
<span class="comment-copy">What you want is the <a href="http://invisible-island.net/ncurses/ncurses-intro.html#form" rel="nofollow noreferrer">ncurses forms library</a>. Unfortunately, a python binding is not part of the python standard library.  I don't know if one is available elsewhere.</span>
<span class="comment-copy">@Craig is it portable with Python ? IF yes, do you have tutorial link for Python ? Can you share it with me ?</span>
<span class="comment-copy">I am not aware of python bindings for the forms library. You would need to build your own. I have only used it in C and C++.</span>
<span class="comment-copy">@mavzey please remember to accept the answer when you're ready...</span>
<span class="comment-copy">Mixing input() with curses will almost certainly cause problems.  curses expects to control all input and output to properly manage the screen since input() bypasses curses you will get undefined behaviour.</span>
