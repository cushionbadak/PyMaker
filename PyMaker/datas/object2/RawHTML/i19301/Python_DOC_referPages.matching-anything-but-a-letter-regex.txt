<div class="post-text" itemprop="text">
<p>How to match anything BUT a letter? i thought <code>[^a-z]+</code> will do but not really. </p>
<p>I have this string to search in:</p>
<pre><code>"price":"7.99","opt":{"1":[1.01,1.02]},"mixedId":0,"price":"8.99","opt":{"3":[1.03],"4":[1.04,1.05]}
</code></pre>
<p>I want to get these values <code>8.99</code> and <code>1.04,1.05</code> but it can't match <code>7.99</code></p>
<p>I did like this:</p>
<pre><code>'"price":"(.+?)","opt":\{"[^a-z]*"4":\[(.+?)]'
</code></pre>
<p>but it finds nothing. Need some support :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Your fixed RegEx should look something like this:  </p>
<p><code>"price":"([\d\.]+?)","opt":\{"[^a-z]*"4":\[(.+?)\]</code> </p>
<p>Live demo here: <a href="http://regex101.com/r/iU3oT7" rel="nofollow">http://regex101.com/r/iU3oT7</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The following regex will match what you want (digits and periods), including '1':</p>
<pre><code>[\d\.]+
</code></pre>
<p>If you only want to match digits that contain a period and two decimals you can use the following pattern:</p>
<pre><code>\d+\.\d{2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import json

def handle_duplicates(pairs):    
    d = {}
    for k, v in pairs:
        if k in d:
           d[k].append(v)
        else:
           d.setdefault(k,[]).append(v)
    return d

s = '{"price":"7.99","opt":{"1":[1.01,1.02]},"mixedId":0,"price":"8.99","opt":{"3":[1.03],"4":[1.04,1.05]}}'

d = json.loads(s, object_pairs_hook=handle_duplicates)
print d
</code></pre>
<p>out:</p>
<pre><code>{u'mixedId': [0],
 u'opt': [{u'1': [[1.01, 1.02]]}, {u'3': [[1.03]], u'4': [[1.04, 1.05]]}],
 u'price': [u'7.99', u'8.99']}
</code></pre>
<p>As you now have a dict, you can get the price list like <code>d['price']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>To match everything that is not a letter (as in the original question), use this character class, which is a modification of <code>\w</code> from <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">the documentation</a>:</p>
<pre><code>[^a-zA-Z]
</code></pre>
<p>Reading from the follow-up comments, it sounds like you are more interested in group 1 of this character class similar to @Mauritz Hansen:</p>
<pre><code>'\[([\d\.,]*)\]
</code></pre>
<p>I'm confused what you mean by "I need to match : as well." This Python code finds the prices <code>1.01</code> to <code>1.05</code>:</p>
<pre><code>import re

txt = '"price":"7.99","opt":{"1":[1.01,1.02]},"mixedId":0,"price":"8.99","opt":{"3":[1.03],"4":[1.04,1.05]}'

pattern = '\\[([\d\\.,]*)\\]'

for m in re.finditer(pattern2, txt):
    print m.group(1)
</code></pre>
<p>Output:</p>
<pre><code>1.01,1.02
1.03
1.04,1.05
</code></pre>
</div>
<span class="comment-copy">you mean match everything but a digit? <a href="http://regex101.com/r/nJ5qP8" rel="nofollow noreferrer">regex101.com/r/nJ5qP8</a> ?</span>
<span class="comment-copy">Your data almost looks like JSON (apart from the double <code>"price"</code> key and the missing outer <code>{ .. }</code> braces. Why search through that as a string? Why not instead interpret that as JSON?</span>
<span class="comment-copy">Thanks for answers! @kaáµ  this site looks great, thanks a million. @Martijn, as far as I know this is not JSON but a simply text/html. @Rob ahh, my bad I want to get <code>1.04,1.05</code> not <code>1.01,1.02</code> thanks for pinting that out.</span>
<span class="comment-copy">But what about <code>:</code>? I still need to match those.</span>
<span class="comment-copy">Thank you v much for this detailed explanation. I'll have to dive into json as this looks pretty handy. THX!</span>
