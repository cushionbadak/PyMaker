<div class="post-text" itemprop="text">
<p>I'm seeing a lot of the following pattern in a codebase I'm checking out at the moment:</p>
<pre><code>try:
    import moduleA
    import moduleB
    from custom.module.A import AX
    from custom.module.A import AY
except KeyboardInterrupt:
    sys.exit()
</code></pre>
<p>Haven't seen it before. What's this guarding against?</p>
</div>
<div class="post-text" itemprop="text">
<p>The only way I can think of that makes sense is if some of those <code>modules</code> for some reason have <code>input</code>/<code>raw_input</code> that run inside of them, or otherwise deliberately <code>raise KeyboardInterrupt</code> for some reason.</p>
<p>Otherwise, really not quite sure what it's meant to do... (unless some of the imports take hours to run, and if you get fed up, can abandon it without seeing a traceback - but that doesn't make much sense either)</p>
</div>
<div class="post-text" itemprop="text">
<p>Whenever you press <kbd>ctrl</kbd>+<kbd>C</kbd> from your keyboard, a KeyboardInterrupt is sent to the python process. If not caught, it will cause an exception in the code so that the code exits wherever it is currently. In this case, there is no special action being taken, but, just a call to <code>sys.exit()</code>, which again causes the program to exit, but, without displaying the stack traceback</p>
<p>From the documentation:</p>
<p><a href="http://docs.python.org/2/library/exceptions.html?highlight=keyboardinterrupt#exceptions.KeyboardInterrupt" rel="nofollow">http://docs.python.org/2/library/exceptions.html?highlight=keyboardinterrupt#exceptions.KeyboardInterrupt</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It's not guarding against anything, at least not obviously. It's catching a <a href="http://docs.python.org/3/library/exceptions.html?highlight=keyboardinterrupt#KeyboardInterrupt" rel="nofollow">KeyboardInterrupt</a>:</p>
<blockquote>
<p>Raised when the user hits the interrupt key (normally Control-C or
  Delete). During execution, a check for interrupts is made regularly.
  The exception inherits from BaseException so as to not be accidentally
  caught by code that catches Exception and thus prevent the interpreter
  from exiting.</p>
</blockquote>
<p>Then simply exiting, which is what an interrupt would do anyway.</p>
</div>
<span class="comment-copy">Absolutely, fixed.</span>
<span class="comment-copy">Well, that's pretty much all I wanted to know. Thanks!</span>
<span class="comment-copy">Should've stated this in the question: I understand what exceptions are. I know how a <code>KeyboardInterrupt</code> is usually handled. I was wondering why the default handling of <code>KeyboardInterrupt</code> was something to be replaced by a <code>sys.exit()</code> in this context.</span>
