<div class="post-text" itemprop="text">
<p>I've created a class containing several members.</p>
<p>I would like to create hash table, containing 'objects' of this class and to be able to search (use the hashmap :) )  </p>
<p>As I know I should overload the <code>__eq__</code> operator  </p>
<p>what should I go from there?  </p>
<p>I wasn't able to find any references for creating an hash table in python ... especially not for 'my class' </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to implement the <a href="http://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow"><code>.__hash__()</code> method</a> as well as the <code>.__eq__()</code> method.</p>
<p>The method should return an integer, and for any two objects where <code>.__eq__()</code> returns <code>True</code>, <code>.__hash__()</code> <em>must</em> return the same integer value.</p>
<p>The easiest way to accomplish this is to use the built-in <a href="http://docs.python.org/2/library/functions.html#hash" rel="nofollow"><code>hash()</code> function</a> on each and every attribute of your instance that makes it unique, and return the XORed result of those values.</p>
<p>Example:</p>
<pre><code>class Foo(object):
    def __init__(self, bar, baz):
        self.bar = bar
        self.baz = baz

    def __eq__(self, other):
        if isinstance(other, type(self)):
            return self.bar == other.bar and self.baz == other.baz
        return False

    def __hash__(self):
        return hash(self.bar) ^ hash(self.baz)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; foo1 = Foo('ham', 'eggs')
&gt;&gt;&gt; foo2 = Foo('ham', 'eggs')
&gt;&gt;&gt; foo3 = Foo('spam', 'vikings')
&gt;&gt;&gt; foo1 == foo2
True
&gt;&gt;&gt; foo1 == foo3
False
&gt;&gt;&gt; hash(foo1)
1838536788654183919
&gt;&gt;&gt; hash(foo1) == hash(foo2)
True
&gt;&gt;&gt; hash(foo1) == hash(foo3)
False
&gt;&gt;&gt; mapping = {}
&gt;&gt;&gt; mapping[foo1] = 'Monty Python'
&gt;&gt;&gt; foo1 in mapping
True
&gt;&gt;&gt; foo2 in mapping
True
&gt;&gt;&gt; foo3 in mapping
False
&gt;&gt;&gt; mapping[foo2]
'Monty Python'
</code></pre>
</div>
<span class="comment-copy">It is called a python <code>dict</code>.</span>
<span class="comment-copy">Looks good, but does it save the 'hashmap' O(1) complexity ?</span>
<span class="comment-copy">@SagiLow: The python <code>dict</code> <i>is</i> a hashmap under the hood and insertion and lookup on those has O(1) complexity. All <code>__hash__</code> does is make it possible for you to use your custom type as a key. We did not create the hash table itself here.</span>
<span class="comment-copy">Great. Thank you</span>
