<div class="post-text" itemprop="text">
<p>Python 2.7.1
I am trying to use python regular expression to extract words inside of a pattern</p>
<p>I have some string that looks like this</p>
<pre><code>someline abc
someother line
name my_user_name is valid
some more lines
</code></pre>
<p>I want to extract the word "my_user_name". I do something like</p>
<pre><code>import re
s = #that big string
p = re.compile("name .* is valid", re.flags)
p.match(s) #this gives me &lt;_sre.SRE_Match object at 0x026B6838&gt;
</code></pre>
<p>How do I extract my_user_name now?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to capture from regex. <code>search</code> for the pattern, if found, retrieve the string using <code>group(index)</code>. Assuming valid checks are performed:</p>
<pre><code>&gt;&gt;&gt; p = re.compile("name (.*) is valid")
&gt;&gt;&gt; result = p.search(s)
&gt;&gt;&gt; result
&lt;_sre.SRE_Match object at 0x10555e738&gt;
&gt;&gt;&gt; result.group(1)     # group(1) will return the 1st capture.
'my_user_name'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use matching groups:</p>
<pre><code>p = re.compile('name (.*) is valid')
</code></pre>
<p>e.g.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; p = re.compile('name (.*) is valid')
&gt;&gt;&gt; s = """
... someline abc
... someother line
... name my_user_name is valid
... some more lines"""
&gt;&gt;&gt; p.findall(s)
['my_user_name']
</code></pre>
<p>Here I use <code>re.findall</code> rather than <code>re.search</code> to get all instances of <code>my_user_name</code>.  Using <code>re.search</code>, you'd need to get the data from the group on the match object:</p>
<pre><code>&gt;&gt;&gt; p.search(s)   #gives a match object or None if no match is found
&lt;_sre.SRE_Match object at 0xf5c60&gt;
&gt;&gt;&gt; p.search(s).group() #entire string that matched
'name my_user_name is valid'
&gt;&gt;&gt; p.search(s).group(1) #first group that match in the string that matched
'my_user_name'
</code></pre>
<hr/>
<p>As mentioned in the comments, you might want to make your regex non-greedy:</p>
<pre><code>p = re.compile('name (.*?) is valid')
</code></pre>
<p>to only pick up the stuff between <code>'name '</code> and the next <code>' is valid'</code> (rather than allowing your regex to pick up other <code>' is valid'</code> in your group.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use something like this:</p>
<pre><code>import re
s = #that big string
# the parenthesis create a group with what was matched
# and '\w' matches only alphanumeric charactes
p = re.compile("name +(\w+) +is valid", re.flags)
# use search(), so the match doesn't have to happen 
# at the beginning of "big string"
m = p.search(s)
# search() returns a Match object with information about what was matched
if m:
    name = m.group(1)
else:
    raise Exception('name not found')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want a <a href="http://docs.python.org/2/howto/regex.html#grouping" rel="noreferrer">capture group</a>.</p>
<pre><code>p = re.compile("name (.*) is valid", re.flags) # parentheses for capture groups
print p.match(s).groups() # This gives you a tuple of your matches.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe that's a bit shorter and easier to understand:</p>
<pre><code>import re
text = '... someline abc... someother line... name my_user_name is valid.. some more lines'
&gt;&gt;&gt; re.search('name (.*) is valid', text).group(1)
'my_user_name'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.6+ you can <a href="https://docs.python.org/3/library/re.html#re.Match.__getitem__" rel="nofollow noreferrer">index</a> into a match object instead of using <code>group()</code>, e.g.:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'name my_user_name is valid'
&gt;&gt;&gt; match = re.search('name (.*) is valid', s)
&gt;&gt;&gt; match[0]  # the entire match 
'name my_user_name is valid'
&gt;&gt;&gt; match[1]  # the first parenthesized subgroup
'my_user_name'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a way to do it without using groups (Python 3.6 or above):</p>
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; re.search('2\d\d\d[01]\d[0-3]\d', 'report_20191207.xml')[0]
'20191207'
</code></pre>
</div>
<span class="comment-copy">Are you sure that's not <code>group(0)</code> for the first match?</span>
<span class="comment-copy">Kind of late, but both yes and no. <code>group(0)</code> returns the matched text, not the first capture group. The code comment is correct, while you seem to be confusing capture groups and matches. <code>group(1)</code> returns the first capture group.</span>
<span class="comment-copy">I get <code>NameError: name '_' is not defined</code></span>
<span class="comment-copy">Your second line I think should read <code>_ = p.search(s)</code>. I see it mentions setting the result to <code>_</code> but the code doesn't reflect that. I changed to <code>_ = p.search(s)</code> for that second line and it works.</span>
<span class="comment-copy">@IanG I'm sorry, I'll update my answer. BTW, with a standard python REPL, the last result is stored in a special variable called <code>_</code>. It isn't valid outside anywhere else.</span>
<span class="comment-copy">It's possible a non-greedy match is required... (unless a username can be multiple words...)</span>
<span class="comment-copy">@JonClements -- You mean <code>(.*?)</code>?  Yeah, that's possible, although not necessary unless OP us using <code>re.DOTALL</code></span>
<span class="comment-copy">yeah - <code>re.findall('name (.*) is valid', 'name jon clements is valid is valid is valid')</code> probably won't yield desired results...</span>
<span class="comment-copy">This does not work for Python 2.7.1? It just prints a pattern object?</span>
<span class="comment-copy">@CalmStorm -- Which part doesn't work (I tested on python2.7.3)?  The part where I use <code>.group</code> is exactly the same as the answer you accepted...</span>
<span class="comment-copy">This is a dupe of the already existing <a href="https://stackoverflow.com/a/54310990/244297">answer</a>.</span>
