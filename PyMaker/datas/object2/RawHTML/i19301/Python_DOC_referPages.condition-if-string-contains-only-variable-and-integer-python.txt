<div class="post-text" itemprop="text">
<p>So, I'm working on a script in Python 3, and I need something like this</p>
<pre><code>control_input=input(prompt_029)
if only string_029 and int in control_input:
    #do something
else:
    #do something else
</code></pre>
<p>Basically, I am asking for code that would have condition like this:</p>
<pre><code>if control_input == "[EXACT_string_here] [ANY_integer_here]"
</code></pre>
<p>How would the code look like in Python 3?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is to do a <a href="http://www.regular-expressions.info/" rel="nofollow">regular expression</a> match. Take a look at the <a href="http://docs.python.org/2/library/re.html" rel="nofollow">re module</a>. </p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; control_input="prompt_029"
&gt;&gt;&gt; if re.match('^prompt_[0-9]+$',control_input):
...     print("Matches Format")
... else:
...     print("Doesn't Match Format")
... 
Matches Format
</code></pre>
<p>The regular expression <code>^prompt_[0-9]+$</code>  matches the following:</p>
<pre><code>^        # The start of the string 
prompt_  # The literal string 'prompt_'
[0-9]+   # One or more digit 
$        # The end of the string 
</code></pre>
<p>If the number must contain exactly three digits then you could use <code>^prompt_[0-9]{3}$</code> or for a maximum of three then try <code>^prompt_[0-9]{1,3}$</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Without regular expression</p>
<pre><code>&gt;&gt;&gt; myvar = raw_input("input: ")
input: string 1
&gt;&gt;&gt; myvar
'string 1'
&gt;&gt;&gt; string, integer = myvar.strip().split()
&gt;&gt;&gt; "[EXACT_string_here] [ANY_integer_here]" == "{} {}".format(string, integer)
True
</code></pre>
</div>
<span class="comment-copy">Use <a href="http://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">regular expressions</a>.</span>
<span class="comment-copy">This doesn't really do what the OP asked for - the integer part in the input is variable, not constantly 1, and there's no straightforward way to modify your code to allow for that.</span>
