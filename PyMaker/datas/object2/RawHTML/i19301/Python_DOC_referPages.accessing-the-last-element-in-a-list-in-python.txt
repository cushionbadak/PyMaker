<div class="post-text" itemprop="text">
<p>I have a list for example: list_a = [0,1,3,1]</p>
<p>and I am trying to iterate through each number this loop, and if it hits the last "1" in the list, print "this is the last number in the list"</p>
<p>since there are two 1's, what is a way to access the last 1 in the list?</p>
<p>I tried:</p>
<pre><code> if list_a[-1] == 1:
      print "this is the last"  
   else:
     # not the last
</code></pre>
<p>This does not work since the second element is also a 1.
Tried:</p>
<pre><code>if list_a.index(3) == list_a[i] is True:
   print "this is the last"
</code></pre>
<p>also did not work, since there are two 1's</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/functions.html?highlight=enumerate#enumerate" rel="noreferrer">enumerate</a> to iterate through both the items in the list, and the indices of those items.</p>
<pre><code>for idx, item in enumerate(list_a):
    if idx == len(list_a) - 1:
        print item, "is the last"
    else:
        print item, "is not the last"
</code></pre>
<p>Result:</p>
<pre><code>0 is not the last
1 is not the last
3 is not the last
1 is the last
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list_a[-1]</code> is the way to access the last element</p>
</div>
<div class="post-text" itemprop="text">
<p><em><strong>Tested on Python 2.7.3</strong></em></p></div>
<div class="post-text" itemprop="text">
<pre><code>a = [1, 2, 3, 4, 1, 'not a number']
index_of_last_number = 0

for index, item in enumerate(a):
    if type(item) == type(2):
        index_of_last_number = index
</code></pre>
<p>The output is 4, the index in array a of the last integer. If you want to include types other than integers, you can change the type(2) to type(2.2) or something.</p>
</div>
<div class="post-text" itemprop="text">
<p>To be absolutely sure you find the last instance of "1" you have to look at all the items in the list.  There is a possibility that the last "1" will not be the last item in the list.  So, you have to look through the list, and remember the index of the last one found, then you can use this index.</p>
<pre><code>list_a = [2, 1, 3, 4, 1, 5, 6]

lastIndex = 0

for index, item in enumerate(list_a):
    if item == 1:
        lastIndex = index

print lastIndex
</code></pre>
<p>output:</p>
<pre><code>4
</code></pre>
</div>
<span class="comment-copy">Are you looking for the last item, or for the last <code>1</code>?  They're not necessarily the same thing.</span>
<span class="comment-copy">So what do you want? Accessing the last <b>number</b> or the last <b>1</b>?</span>
<span class="comment-copy">the last number, not the last 1</span>
<span class="comment-copy">The thing is, in Python, you just can't distinguish between those two 1, they are the same object and both list positions point to the same object.</span>
<span class="comment-copy">How did your first solution not work? I surely print out <code>this is the last</code>. Should it print this sentence if the last number is 1? If so, it works.</span>
<span class="comment-copy">the question explicity states that that didn't work, consider remove this answer as it is wrong</span>
<span class="comment-copy">@F.C. The questions says that comparing the last element to 1 didn't work: <code>list_a[-1] == 1</code>, which is not the same thing as this answer.</span>
<span class="comment-copy">@F.C. Come on Man! You know that in lists list_a[-1] always refers to the last element. The OP is confused on this as there are two elements with the same value in the list. This does not mean that list_a[-1] is wrong. Just that we need to re-affirm to the OP saying that he should not be confused and that list_a[-1] is the correct way to access the last element</span>
<span class="comment-copy">@GodMan ok, maybe you should add some explanation to your answer, I don't think it would help much as it is.</span>
<span class="comment-copy">It would help if you would format your code by indenting it.</span>
<span class="comment-copy">@askewchan Thanks so much - didn't notice that!</span>
