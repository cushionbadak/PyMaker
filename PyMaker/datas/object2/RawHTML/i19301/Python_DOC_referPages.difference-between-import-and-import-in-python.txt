<div class="post-text" itemprop="text">
<p>I was taking a look at some commit of a project, and I see the following change in a file:</p>
<pre><code>-       import dataFile
+       dataFile = __import__(dataFile)
</code></pre>
<p>The coder replaced <code>import dataFile</code> by <code>dataFile = __import__(dataFile)</code>.</p>
<p>What exactly is the difference between them?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import dataFile 
</code></pre>
<p>translates roughly to </p>
<pre><code>dataFile = __import__('dataFile')
</code></pre>
<p>Apparently the developer decided that they wanted to use strings to identify the modules they wanted to import.  This is presumably so they could dynamically change what module they wanted to import ...</p>
</div>
<span class="comment-copy">Use this - <a href="http://docs.python.org/2/library/functions.html#__import__" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#__import__</a>,</span>
<span class="comment-copy">In 2.7 and 3.x, you're encouraged to instead use <a href="http://docs.python.org/3/library/importlib#importlib.import_module" rel="nofollow noreferrer"><code>importlib.import_module</code></a>.</span>
<span class="comment-copy">You're correct. The thing is that <code>dataFile</code> is a parameter of some function, and it seems to point to some python file, so I think <code>import dataFile</code> wasn't working in the 1st place, and he just fixed the bug in the next commit by writing it using the other way :)</span>
