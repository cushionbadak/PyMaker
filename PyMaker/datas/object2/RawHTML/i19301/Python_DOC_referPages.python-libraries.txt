<div class="post-text" itemprop="text">
<p>I'm in desperate need of a cross platform framework as I have vast numbers of .NET products that I'm trying to port to Linux. I have started to work with Python/pyQt and the standard library and all was going well until I try to import non-standard libraries. I'm hearing about pip and easy_install and I'm completely confused about this. </p>
<p>My products need to ship with everything required to execute them, so in the .NET world I simply package my DLLs (or licensed DLLs) with my product. </p>
<p>As a test bed I'm trying to import this library called requests: <a href="https://github.com/kennethreitz/requests" rel="nofollow">https://github.com/kennethreitz/requests</a></p>
<p>I've got an <code>__init__.py</code> file and the library source in my program directory but it isn't working. Please tell me that there is a simple way to include libraries without needing any kind of extra package installer. </p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest you start by familiarizing yourself with python packages (see <a href="http://docs.python.org/3/distutils/introduction.html" rel="nofollow">the distutils docs</a>.  Pip is simply a manager that install packages directly from the internet repository, so that you don't need to manually go and download them.  So for, example, as stated under "Installing" on the <code>requests</code> homepage, you simply run <code>pip install requests</code> in a terminal, without manually downloading anything.</p>
<p>Packaging your product is a different story, and the way you do it depends on the target system.  On windows, the easiest might be to create an installer using <a href="http://nsis.sourceforge.net/Main_Page" rel="nofollow">NSIS</a> which will install all dependencies.  You might also want to use <a href="http://cx_freeze.readthedocs.org/en/latest/" rel="nofollow">cx-freeze</a> to pull all the dependencies (including the python interpreter) into a single package.  </p>
<p>On linux, many of the dependencies will already be including in most distributions. so you should just list them as requirements when creating your package (e.g. <code>deb</code> for ubuntu).  Other dependencies might not be included in the distro's repo, but you can still list them as requirements in <code>setup.py</code>.</p>
<p>I can't really comment on Mac, since I've never used python on one, but I think that it would be similar to the linux approach.</p>
</div>
<span class="comment-copy">change <code>init.py</code> to <code>__init__.py</code>.</span>
<span class="comment-copy">yes, it is <code>__init__.py</code>. I need to know that I can include 3rd party libraries in the same directory as my code and it will work without the need of some 3rd party package downloader</span>
<span class="comment-copy">Re: "Please tell me that there is a simple way to include libraries without needing any kind of extra package installer.": It's common to include a <code>setup.py</code> file that describes the installation, pulling in all required packages. Does that count? Here is the <code>setup.py</code> for <code>requests</code>: <a href="https://github.com/kennethreitz/requests/blob/master/setup.py" rel="nofollow noreferrer">github.com/kennethreitz/requests/blob/master/setup.py</a></span>
<span class="comment-copy">Packaging isn't a problem, I prefer WiX over NSIS due to it's tight .NET integration so no issues there. It sounds like you're saying that I can indeed package and deliver other libraries in Python and users are not required to use a packaging engine to obtain these dependencies. That's enough for me to continue investigating Python as a viable alternative. Thanks!</span>
