<div class="post-text" itemprop="text">
<p>I have to replace a word in a multiline  text at specific location specified by a line number
and word number in this line. All words all aligned in columns. </p>
<p>I'm using an algorithm where I'm finding word by it's coordinates.</p>
<p>I'm fetching a line at specified line number, splitting it in separate substrins 
and replacing a word at specified location with another word.
Then I do join (" ".join() ) and writing the modified line back into a file.
My problem is i'm loosing words alignment in modified line.
How can I justify and join at the same time? (Other words in a line also lose
alignment, not just modified word)</p>
<p>I think I could do it if I have used a little bit different approach by splitting a line
just at the location of the word to be modified, but I did not realized that I will lose
alignment after splitting a line at word boundaries.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can apply formatting (with <a href="http://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format()</code></a> or <a href="http://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format()</code></a>) inside a list comprehension before joining:</p>
<pre><code>''.join([format(el, '&lt;10') for el in list_of_strings])
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; list_of_strings = ['foo', 'barbaz', 'spam-ham']
&gt;&gt;&gt; ''.join([format(el, '&lt;10') for el in list_of_strings])
'foo       barbaz    spam-ham  '
</code></pre>
<p><code>&lt;</code> left-aligns, <code>&gt;</code> right-aligns and <code>^</code> centers the text in the given width (10 in the above example). For more detail on how formatting works, see the <a href="http://docs.python.org/2/library/string.html#format-specification-mini-language" rel="nofollow">format specification documentation</a>.</p>
<p>Demo with right-adjustment to 4 spaces:</p>
<pre><code>&gt;&gt;&gt; list_of_strings = ['foo', 'ba', 'a']
&gt;&gt;&gt; ''.join([format(el, '&gt;4') for el in list_of_strings])
' foo  ba   a'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>str = "this is a sample statement";

print str.rjust(50, ' '); # right justification
</code></pre>
<p>this will produce the following result:<br/>
                                                   this is a sample statement  </p>
<p><strong>50 blank spaces</strong> followed by your statement</p>
<p>you can try  </p>
<pre><code>print str.rjust(0, ' ')
</code></pre>
<p>to force sentences to be right justified.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try splitting with <a href="http://docs.python.org/2/library/re.html#re.split" rel="nofollow"><code>re.split</code></a> instead. If you use <code>/(?&lt;= )\w/</code> as Regex, it'll split before each word, while preserving the whitespace. You can then join them with <code>''.join(...)</code> after replacing the word. You can append the new word with as much spaces as needed, just ask the length of the old word.</p>
<p>Note that this will bug if the new word is longer then the column is wide.</p>
<p>If I write this out in code:</p>
<pre><code>col = 1                              # replacing second word
line = "hello  there    friend    "  # we've already fetched the line
new_word = "here"                    # the new word
word_list = re.split('(?&lt;= )\w', line)
length = len(word_list[col])
word_list[col] = col + ((length - len(new_word)) * ' ')
new_line = ''.join(word_list)
</code></pre>
</div>
<span class="comment-copy">Thank you for reply</span>
<span class="comment-copy">This is what I have now</span>
<span class="comment-copy">You'll have to edit your question if you want to add an example.</span>
<span class="comment-copy">This is what I have now: ar_str = " ".join(format(el, 'rjust(4)') for el in ar) (I used rjust(4) to create original file. Unfortunately it ddid not help</span>
<span class="comment-copy">@OpenCV_fan: That is not a proper formatting specification. Use <code>format(el, '&gt;4')</code> instead.</span>
<span class="comment-copy">I'm dealing  not with a string, but with many sub-strings after splitting a line. I'm modifying one of sub-strings and then join them</span>
<span class="comment-copy">Thank you. I will try it</span>
