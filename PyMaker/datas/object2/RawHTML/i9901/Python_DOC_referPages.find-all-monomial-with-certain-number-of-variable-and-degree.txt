<div class="post-text" itemprop="text">
<p>suppose we have a list like [x,y,z] and a number like 2.
i need an algorithm to find all monomials with this 3 variable and degree=2</p>
<p>my algorithm:</p>
<pre><code>def mul(x:list, y:list) -&gt; list:
        return ["".join(elm) for elm in product(x, y)]

def f(x:list, n:int) -&gt; list:
    r = x;
    for i in range(n-1):
        r = mul(r, x)
    return r

&gt;&gt;&gt; f(['x','y','z'],2)
['xx', 'xy', 'xz', 'yx', 'yy', 'yz', 'zx', 'zy', 'zz']
</code></pre>
<p>is there any better algorithm to do this?</p>
<p><strong>EDIT:</strong></p>
<p>1) suppose 'xz' != 'zx'
2) suppose 'xx' = 'x^2'</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe what you're looking for is called <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>product</code></a> from <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a> module</p>
<pre><code>from itertools import product

a=product(['x','y','z'], repeat=2)
list(map(lambda x: ''.join(x), a))
</code></pre>
<p>Output:</p>
<pre><code>['xx', 'xy', 'xz', 'yx', 'yy', 'yz', 'zx', 'zy', 'zz']
</code></pre>
</div>
<span class="comment-copy">The question is too broad. One can imagine lots of algorithms to do this and it is not clear what are the desired properties of an algorithm you are looking for. (Do you really need ALL the algorithms that solve this problem?) Please, clarify.</span>
<span class="comment-copy">sorry, i need to do this with a better algorithm, i cant find any other solution for my problem.</span>
<span class="comment-copy">What do you mean by 'better'? What are your exact requirements? Do you need faster algorithm? How fast should it be?</span>
<span class="comment-copy">@IlyaV.Schurov lowest time complexity!</span>
<span class="comment-copy">I doubt there is any way to do it faster then <code>itertools.product</code> (which is designed exactly for solving this problem), like in the answer by vishes_shell.</span>
<span class="comment-copy">I need another algorithm to do this.anyway  your answer is very good, thanks</span>
