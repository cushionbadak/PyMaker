<div class="post-text" itemprop="text">
<p>The input:</p>
<pre><code> lst=[ '  22774080.570 7                   1762178.392 7   1346501.808 8  22774088.434 8\n',
     '  20194290.688 8                  -2867460.044 8  -2213132.457 9  20194298.629 9\n']
</code></pre>
<p>The desired output:</p>
<pre><code>['22774080.570 7','none','1762178.392 7','1346501.808 8','22774088.434 8'],
['20194290.688 8','none','-2867460.044 8', .... ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've made a few assumptions here, and this is probably not the most elegant solution, but given that your matching None based on the length of space, this will work</p>
<pre><code>[[(None if a.strip() == 'None' else a.strip()) 
    for a in l.replace('                  ', '  None  ').split('  ')  if a != ''
    ] for l in lst]
</code></pre>
<p>this is currently implemented as a list comprehension, but could easily be spread over multiple lines for readability as such</p>
<pre><code>new_list = []
for l in lst:
    sub_list = []
    for a in l.replace('                  ', '  None  ').split('  '):
        if a != '':
            item = a.strip()
            sub_list.append(None if item == 'None' else item)
    new_list.append(sub_list)
</code></pre>
<p>either method yields the same result:</p>
<pre><code>[
 [
  '22774080.570 7', None, '1762178.392 7', '1346501.808 8', '22774088.434 8'
 ], 
 [
  '20194290.688 8', None, '-2867460.044 8', '-2213132.457 9', '20194298.629 9'
 ]
]
</code></pre>
<p>Bear in mind that any changes to the width of spaces used to define 'None' will impact the function of this implementation.</p>
</div>
<div class="post-text" itemprop="text">
<p>I will not answer your question right away because it is not how stackoverflow works but I will give you some hints.</p>
<p><strong>HINTS</strong></p>
<ul>
<li><p>First, you can iterate over each line of your first list <code>lst</code> using a <a href="https://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow noreferrer"><code>for</code> loop</a>.</p></li>
<li><p>Then, you need to split every numbers of this line, luckily for you, it took always 16 characters. 
In python, there is severals way to do so. A good training for you will be to use the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=range#ranges" rel="nofollow noreferrer"><code>range</code> function</a> in a <code>for</code> loop. Then use <a href="https://docs.python.org/3.6/tutorial/introduction.html#strings" rel="nofollow noreferrer">slicing</a> in python strings.</p></li>
<li><p>Now, it could remains some extra spaces in the beginning of every numbers. A good way to remove them is to use the <a href="https://docs.python.org/3.6/library/stdtypes.html?highlight=strip#str.strip" rel="nofollow noreferrer"><code>strip()</code> function</a>. </p></li>
<li><p>Last thing you need to do is to <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer"><code>append</code></a> every <em>clean strings</em> to a new list (e.g. <code>result</code>)</p></li>
</ul>
<p><strong>END</strong></p>
<p>I will edit my answer with a working function as soon as you edit yours with a proper try. Good luck!</p>
<p><strong>EDIT</strong> </p>
<p>Since my namesake @Max Chesterfield already gave an answer, I'll give mine. Instead of using lists of list, you can use a <a href="https://docs.python.org/3/reference/expressions.html#examples" rel="nofollow noreferrer">generator</a> to match exactly the desired output</p>
<pre><code>def extract_line():
    for line in lst:
        result = []
        for i in range(0, len(line) - 1, 16):
            numbers = line[i:i + 16].strip()
            result.append(numbers if numbers else None)
        yield result

for result in extract_line():
    print(result)
</code></pre>
<p>Will output:</p>
<pre><code>['22774080.570 7', None, '1762178.392 7', '1346501.808 8', '22774088.434 8']
['20194290.688 8', None, '-2867460.044 8', '-2213132.457 9', '20194298.629 9']
</code></pre>
</div>
<span class="comment-copy">What have you tried, you'll get a better response if you show some attempt at solving the problem.</span>
<span class="comment-copy">It's more for you than @Enna because I doubt she will edit or <a href="http://stackoverflow.com/help/accepted-answer">accept the answer</a> but you can use an <code>generator</code> instead of sub lists inside list (see my answer) to match the desired output.</span>
<span class="comment-copy">@Max Chretein, i didnt know that! Thanks for the info :)</span>
