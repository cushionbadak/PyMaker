<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/104420/how-to-generate-all-permutations-of-a-list-in-python">How to generate all permutations of a list in Python</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>I am currently working on a simple project on my own, and I stumbled on a problem:<br/>
I need to have a list of 4 numbers: say </p>
<pre><code>L=[1,3,4,6]  
</code></pre>
<p>I need a full list of rearrangements of the Numbers so:  </p>
<pre><code>L_arranged=[[1,3,4,6],[1,3,6,4],[1,6,3,4],...,[3,4,1,6]]  
</code></pre>
<p>Any Ideas?<br/>
Even a theory would be useful, thank you :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations</code></a>.</p>
<pre><code>&gt;&gt;&gt; from itertools import permutations
&gt;&gt;&gt; [list(p) for p in permutations([1,3,4,6])]
[[1, 3, 4, 6], [1, 3, 6, 4], [1, 6, 3, 4], ..., [3, 4, 1, 6]]
</code></pre>
<p>If you don't need to mutate (edit) the results, you can cast the return straight to a list, yielding tuples</p>
<pre><code>&gt;&gt;&gt; list(permutations([1,3,4,6]))
[(1, 3, 4, 6), (1, 3, 6, 4), (1, 6, 3, 4), ..., (3, 4, 1, 6)]
</code></pre>
<p>Even faster, if you plan on using the results solely as an iterator, you don't need to cast it at all</p>
<pre><code>&gt;&gt;&gt; for p in permutations([1,3,4,6]):
...     print(p)
(1, 3, 4, 6)
(1, 3, 6, 4)
(1, 6, 3, 4)
    ...
(3, 4, 1, 6)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/library/itertools.html#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations()</code></a>.</span>
