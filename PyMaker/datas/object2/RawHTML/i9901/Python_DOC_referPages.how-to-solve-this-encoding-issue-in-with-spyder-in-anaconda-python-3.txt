<div class="post-text" itemprop="text">
<p>I'm trying to run the following:</p>
<pre><code>import json
path = 'ch02/usagov_bitly_data2012-03-16-1331923249.txt' 
records = [json.loads(line) for line in open(path)]
</code></pre>
<p>But I get the following error :</p>
<blockquote>
<p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position
  6987: ordinal not in range(128)</p>
</blockquote>
<p>From the internet I've found that it should be because the encoding needs to be set to utf-8, but my issue is that it's already in utf-8.</p>
<pre><code>sys.getdefaultencoding() 
Out[43]: 'utf-8'
</code></pre>
<p>Also, it looks like my file is in utf-8, so I'm really confused
Also, the following code works :</p>
<pre><code>In [15]: path = 'ch02/usagov_bitly_data2012-03-16-1331923249.txt'
In [16]: open(path).readline()
</code></pre>
<p>Is there a way to solve this ?</p>
<p>Thanks !</p>
<p><strong><em>EDIT:</em></strong></p>
<p>When I run the code in my console it works, but not when I run it in Spyder provided by Anaconda (<a href="https://www.continuum.io/downloads" rel="nofollow noreferrer">https://www.continuum.io/downloads</a>)</p>
<p>Do you know what can go wrong ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The text file contains some non-ascii characters on a line somewhere. Somehow on your setup the default file encoding is set to ascii instead of utf-8 so do the following and specify the file's encoding explicitly:</p>
<pre><code>import json
path = 'ch02/usagov_bitly_data2012-03-16-1331923249.txt' 
records = [json.loads(line.strip()) for line in open(path, encoding="utf-8"))]
</code></pre>
<p>(Doing this is a good idea anyway even when the default works)</p>
</div>
<div class="post-text" itemprop="text">
<p>I try to ran this program with one additional line at the top: </p>
<pre><code># -*- coding: utf-8 -*-
</code></pre>
<p>It fetches the lines and shows the output (with u' prefixed strings; probably a conversion might be required after this). But, it didn't throw any error as you mentioned.</p>
</div>
<span class="comment-copy">Did you try actually <i>opening</i> the file using the encoding?</span>
<span class="comment-copy">What do you mean ?   open(path).readline() works well</span>
<span class="comment-copy">You must have downloaded the file incorrectly Are you sure you downloaded it as-is not copy-pasted it through a text editor or something? Your code runs without errors on my system on the exact same file I just downloaded from the location you gave. I've tried Python 3.5.1 on both Windows 7 and Linux.</span>
<span class="comment-copy">I also downloaded that file &amp; had no problem calling <code>json.loads</code> on each of its lines, running Python 3.6 on Linux, and it also works fine   on Python 2.6 (with minor changes to account for the way Python 2 does Unicode). FWIW, I got a list of 3560 objects.</span>
<span class="comment-copy">Is it possible that something is wrong with my setup? I had python 2 installed on my machine, and then I installed python 3 and then anaconda, but when I open my terminal and type 'python' it says still Python 2.7.10 , even if I have anaconda with Python 3 ?</span>
<span class="comment-copy">Thanks, it made it work! But I still don't understand how I can get the error in the first place in spyder and not in my normal terminal. Especially because my env variable PYTHONIOENCODING = UTF-8, and in both spyder and system console I have sys.getdefaultencoding() giving me utf-8</span>
<span class="comment-copy">because PYTHONIOENCODING has nothing to do with file i/o, it controls the encoding of stdin/stdout/stderr <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING" rel="nofollow noreferrer">docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING</a> .     Tip: read this <a href="http://python-notes.curiousefficiency.org/en/latest/python3/text_file_processing.html" rel="nofollow noreferrer">python-notes.curiousefficiency.org/en/latest/python3/â€¦</a></span>
<span class="comment-copy">The coding directive has <i>no</i> effect on how a script processes external Unicode data. It's purely used to tell the Python interpreter which encoding has been used for the script itself.</span>
