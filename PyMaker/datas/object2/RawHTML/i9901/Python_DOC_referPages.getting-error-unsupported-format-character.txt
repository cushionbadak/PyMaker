<div class="post-text" itemprop="text">
<p>My query is to write a function that calculates and computes the balance of a bank account with a given initial balance and interest rate, after a given number of years. Assume interest is compounded yearly.</p>
<p>Here is the code I have so far but I am getting the following error traceback </p>
<pre><code>(most recent call last):
  File "C:\Users\Brandon\Desktop\Assignment 5\Assignment 5 question 4.py", line 46, in &lt;module&gt;
    Compount_Interest(B, I, N, T)
  File "C:\Users\Brandon\Desktop\Assignment 5\Assignment 5 question 4.py", line 40, in Compount_Interest
    print("The compound interest for %.InputT years is %.Cinterest" %Cinterest)
ValueError: unsupported format character 'I' (0x49) at index 28
</code></pre>
<p>and I have no clue why. Please help. Here is my code:</p>
<pre><code>def main():
    # Getting input for Balance
    balance = float(input("Balance: $ "))
    # Getting input for Interest Rate
    intRate = float(input("Interest Rate (%) : "))
    # Getting input for Number of Years
    years = int(input("Years: "))
    newBalance = calcBalance(balance, intRate, years)

    print ("New baance:  $%.2f"  %(newBalance))

def calcBalance(bal, int, yrs):
    newBal = bal
    for i in range(yrs):
        newBal = newBal + newBal * int/100
    return newBal

# Program run
main()

def BankBalance():
    InputB = 1000
    return InputB
    print("Your initial balance is $1000")

def Interest():
    InputI = 0.05
    return InputI
    print("The rate of interest is 5%")

def CountNumber():
    InputN = float(input("Please enter the number of times per year you would like your interest to be compounded: "))
    return InputN

def Time():
    InputT = float(input("Please enter the number of years you need to compund interest for:"))
    return InputT

def Compount_Interest(InputB, InputI, InputT, InputN):
    Cinterest = (InputB * (1+(InputI % InputN))**(InputN * InputT))
    print("The compound interest for %.InputT years is %.Cinterest" %Cinterest)

B = BankBalance()
I = Interest()
N = CountNumber()
T = Time()
Compount_Interest(B, I, N, T)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error <code>unsupported format character 'I'</code> means that you are using the wrong (an unknown) conversion type for your string formatting. </p>
<p>By using the <em>interpolation operator</em> <code>%</code> (also known as <em>string formatting operator</em>) it will give you access to a conversion type which is also expected to be named after setting the operator. As you can see in the <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">documentation</a> there are more optional characters you can include to refine the behavior/result of the operator but the last one (the character which represents the conversion type) is mandatory.</p>
<p>Your problem can be boiled down to this code which will give the same error:</p>
<pre><code>&gt;&gt;&gt; "%.InputT" % "foo"
ValueError: unsupported format character 'I' (0x49) at index 2
</code></pre>
<p>As you can see here (index 2 references to the <code>I</code> in the left string) the <code>I</code> is used as an identifier for the conversion type to be used. This is because the <code>.</code> is interpreted as optional <em>precision</em> of the minimum field width. And so the next character is the <em>format character</em>. </p>
<p>If you want to refer to a string you can simply use <code>%s</code> (or other format characters leading to a specific conversion type: <code>int</code> with <code>%d</code> and <code>float</code> with <code>%f</code>) like this:</p>
<pre><code>&gt;&gt;&gt; "%s got $%d, now he has $%f total." % ("Peter", 12, 12.55)
'Peter got $12, now he has $12.550000 total.'
</code></pre>
<p>But it seems that you trying to name your placeholders. So you have to use parentheses for that and refer to it via a dictionary:</p>
<pre><code>&gt;&gt;&gt; "%(name)s got $%(dollars)d" % {"name": "Maria", "dollars": 50}
'Maria got $50'
</code></pre>
<p>For your code there is another obvious problem. You're naming <code>InputT</code> and <code>Cinterest</code> but only give a resolution to <code>InputT</code>. I think you want to do something like this:</p>
<pre><code>print("The compound interest for %(InputT)s years is %(Cinterest)s" % {
    "InputT": InputT, "Cinterest": Cinterest})

# or without naming it explicitly
print("The compound interest for %s years is %s" % (InputT, Cinterest))
</code></pre>
<p>BTW: You're using old-style string formatting by using <code>%</code>-operator instead of <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">new-style method <code>.format()</code></a> or since Python3.6 even <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a> like <code>f"â€¦"</code>. This can make your live much simpler.</p>
</div>
<span class="comment-copy">Read about Python string formatting. The error is quite clear.</span>
<span class="comment-copy">print("The compound interest for {0} years is {1}" .format(InputN,Cinterest)</span>
<span class="comment-copy">python variable names should begin with a lower case letter</span>
<span class="comment-copy"><code>%</code> has special meaning in string formating so Python tries to use <code>%.I</code> as formatting information. Use <code>%%</code> and Python will prints <code>%</code> as normal char.</span>
<span class="comment-copy">read <a href="https://pyformat.info/" rel="nofollow noreferrer">PyFormat.info</a></span>
