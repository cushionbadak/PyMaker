<div class="post-text" itemprop="text">
<p>I am trying to communicate with my module by using a Python file. I create  line-break point to be sure that I will have an interruption while writing in the module. </p>
<p>But, I don't have any result for reading from the port communication. I need to display all data in my cmd.exe and that already diplayed on COM4 by using my python file</p>
<pre><code>import serial
ser = serial.Serial(
    port='COM4',\
    baudrate= 230400,\
    parity=serial.PARITY_NONE,\
    stopbits=serial.STOPBITS_ONE,\
    bytesize=serial.EIGHTBITS,\
        timeout=0)  # open serial port
print(ser.name)         # check which port was really used
ser.write(b'hello')     # write a string
str=ser.readline()
print str
ser.close()             # close ports
</code></pre>
<p>That means that these two lines:</p>
<pre><code>str=ser.readline() 
print str
</code></pre>
<p>don't give me any results.</p>
</div>
<div class="post-text" itemprop="text">
<p>What's most likely happening is that <code>ser.readline()</code> is waiting for a newline char (<code>\n</code>) to be received on the serial port, but isn't getting it so it hangs.  If your serial port is set to echo what you're sending it, you likely need to include the newline char with the data you send it, i.e.</p>
<pre><code>ser.write(b'Hello\n')
</code></pre>
<p>or, if your serial device is expecting Windows style newlines:</p>
<pre><code>ser.write(b'Hello\r\n')
</code></pre>
<p>If you're stilll not getting any response, you can try debugging after your <code>ser.write</code> statement with</p>
<pre><code>while True:
    print(ser.read(1).decode())
</code></pre>
<p>in order to display every byte as it comes back  <strong>Note:  only use the above for debugging, it will hang until the device is closed outside your script.</strong></p>
<p>If you see nothing, then there's probably something more fundamental going on, like the serial port setup.  I notice that your baud rate is not a <a href="https://electronics.stackexchange.com/questions/9264/what-standard-uart-rates-are-there">standard baud rate</a>, are you sure that's right?  </p>
<p>Side note:  there's no need for the backslashes after each argument in your <code>serial.Serial</code> declaration, the fact that the text is within enclosed parentheses makes the code valid.  Also, you're supplying the default arguments for most of the parameters, so there's no need to include them at all.</p>
<p>Another aside: working with I/O devices that block on <code>read</code>s can be tricky, and it might be useful setting up a reader thread that pushes data received into a <code>queue.Queue</code> object like what's described <a href="https://stackoverflow.com/questions/375427/non-blocking-read-on-a-subprocess-pipe-in-python">here</a>.  Or if you're feeling adventerous, try using the <code>asyncio</code> module.</p>
</div>
<span class="comment-copy">From which device are you trying to read? Is it a Windows OS (I guess so)? If you use the ser.readline() method, it will wait until a breakline ('\n') is introduced. Use better the ser.read() method. Moreover, you don't need to use the backslashes () on the <i>ser</i> assigning instruction.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer"><code>str</code></a> is a Python datatype/class - assigning something else to that name could lead you astray later if you try to use <code>str</code> and it is no longer a datatype/class but  just a variable name.</span>
<span class="comment-copy">Dear Jalo, 	 I need to display all data already diplayed on COM4 in my cmd.exe by using my python file. I use Windows, my UART is included in an FPGA device.</span>
<span class="comment-copy">You mean, that you already have data in your CMD window, and you want to run a Python script to read it? I'm not sure that's possible, at least not the way you want to.</span>
<span class="comment-copy">I mean that I have  data in my COM4 and i want to display it  in my cmd.</span>
<span class="comment-copy">I need to display all data already diplayed on COM4 in my cmd.exe by using my python file</span>
<span class="comment-copy">Dear @Bill, I try  what you ask me to do, however , i don't understand this note: Note: only use the above for debugging, it will hang until the device is closed outside your script.</span>
<span class="comment-copy">import serial ser = serial.Serial(     port='COM4',\     baudrate= 230400)  # open serial port print(ser.name)         # check which port was really used ser.write(b'hello')     # write a string  #str=ser.readline() while True:     print(ser.read(1).decode()) ser.close()             # close ports</span>
<span class="comment-copy">did you try <code>ser.write(b'hello\n')</code>?</span>
<span class="comment-copy">Yes and it works perfectly,</span>
