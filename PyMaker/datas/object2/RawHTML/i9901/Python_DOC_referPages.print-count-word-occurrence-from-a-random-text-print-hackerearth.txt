<div class="post-text" itemprop="text">
<p>I am trying to find the count of occurrence of fixed word from any given string.</p>
<p>Fixed word = '<strong>hackerearth</strong>'</p>
<p>Random string may be s = '<strong>aahkcreeatrhaaahkcreeatrha</strong>'</p>
<p>Now from string we can generate 2-times hackerearth.</p>
<p>I have written some code to find the count of (h,a,e,r,c,k,t) letters in string:</p>
<p>Code:</p>
<pre><code>word = list(raw_input())
print word

h = word.count('h') 
a = word.count('a')
c = word.count('c')
k = word.count('k')
e = word.count('e')
r = word.count('r')
t = word.count('t')

if (h &gt;= 2 and a &gt;= 2 and e &gt;= 2 and r &gt;=2) and (c &gt;= 1 and k &gt;= 1 and t &gt;=1 ):
    hc = h/2
    ac = a/2
    ec = e/2
    rc = r/2

    num_words = []
    num_words.append(hc)
    num_words.append(ac)
    num_words.append(ec)
    num_words.append(rc)
    num_words.append(c)
    num_words.append(k)
    num_words.append(t)

print num_words
</code></pre>
<p>Output:  </p>
<pre><code>[2, 4, 2, 2, 2, 2, 2]
</code></pre>
<p>From above output list, I want to calculate the total occurrence of word.</p>
<p>How can I get total count of fixed word and any other way to make this code easier?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could utilize <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>from collections import Counter

s = 'aahkcreeatrhaaahkcreeatrha'
word = 'hackerearth'

wd = Counter(word)
sd = Counter(s)

print(min((sd.get(c, 0) // wd[c] for c in wd), default=0))
</code></pre>
<p>Output:</p>
<pre><code>2
</code></pre>
<p>Above code will create two <code>dict</code> like counters where letters are keys and their occurrence are values. Then it will use generator expression to iterate over the letters found in the word and for each letter generate the ratio. <code>min</code> will pick the lowest ratio and <code>default</code> value of <code>0</code> is used for case where <code>word</code> is empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>When looking for a substring, you need to account for the character order, and not just the counts</p>
<p>something like this should work:</p>
<pre><code>def subword(lookup,whole):
    if len(whole)&lt;len(lookup):
          return 0
    if lookup==whole:
          return 1
    if lookup=='':
          return 1
    if lookup[0]==whole[0]:
         return subword(lookup[1:],whole[1:])+subword(lookup,whole[1:])
    return subword(lookup,whole[1:])
</code></pre>
<p>For example:</p>
<pre><code>In [21]: subword('hello','hhhello')
Out[21]: 3
</code></pre>
<p>Because you can choose each of the 3 <code>h</code>s and construct the word hello with the remainder</p>
</div>
<span class="comment-copy">total count of what? Fixed_word or s. You please clarify your objective.</span>
<span class="comment-copy">@Chandan  I want to find the no. of times 'hackerearth' can be found in any given text</span>
