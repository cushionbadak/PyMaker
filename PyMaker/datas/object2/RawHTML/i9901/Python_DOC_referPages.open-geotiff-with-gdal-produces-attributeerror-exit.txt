<div class="post-text" itemprop="text">
<p>I have a raster image and would like to open it with gdal to pull some information about the projection.</p>
<p>Opening with the following code works fine:</p>
<pre><code>from osgeo import gdal
gtiff = gdal.Open(filename)
prj = gtiff.GetProjection()
# do some work
</code></pre>
<p>However, the following doesn't work:</p>
<pre><code>with gdal.Open(filename) as gtiff:
    prj = gtiff.GetProjection()
</code></pre>
<p>Instead an attribute error is displayed:</p>
<pre><code>AttributeError: __exit__
</code></pre>
<p>I thought the latter is commonly accepted as better style. I'm using Python 3.4.5 :: Continuum Analytics, Inc. (anaconda).</p>
</div>
<div class="post-text" itemprop="text">
<p>Python relies on "magic methods" for many of its paradigms. The call to <code>len(x)</code>, for instance, calls <code>x.__len__()</code>. Equalities like <code>&gt;</code> or <code>&gt;=</code> also use magic methods that are double-underscored. </p>
<p>The <code>with X as x</code> paradigm of Python relies on two magic methods: <code>X.__enter__</code> and <code>X.__exit__</code>. The class returned by <code>gdal.Open</code> is a <code>gdal.Dataset</code>, which does not have these methods. It therefore throws an error when using a <code>with as</code> statement like you provided.</p>
<p>The proper way to open and close a <code>gdal.Dataset</code> is:</p>
<pre><code>import gdal
ds = gdal.Open('filename.tif', gdal.GA_Update)
# do something
del ds
</code></pre>
<p>Deleting the <code>Dataset</code> will ensure that changes were written to the file. You can also write those changes by running <code>ds.FlushCache()</code></p>
<p><a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">Doc about Python's <code>with as</code> statements</a></p>
<p><a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">Python's special methods</a></p>
</div>
<span class="comment-copy">It looks like whoever created that library didn't implement the context manager protocol on that type.</span>
<span class="comment-copy">Just to make the answer complete: Is there a specific reason why these methods don't exist? Or is this sth that could be relatively easy added (I guess conserving backward compatinility wouldn't be a problem)?</span>
