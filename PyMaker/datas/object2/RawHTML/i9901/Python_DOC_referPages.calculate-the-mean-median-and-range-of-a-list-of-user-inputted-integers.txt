<div class="post-text" itemprop="text">
<p>This is my code so far:</p>
<pre><code>print ("Type '0' at any time to end program.")
while True:
    try:
        x=int(input("Enter a positive integer. "))
        while x&lt;0:
            print ("Enter a POSITIVE integer.")
            x=int(input("Enter a positive integer. "))
    except ValueError:
        print ("Invalid character entered. Enter a positive integer.")
    if x==0:
        break
</code></pre>
<p>I need to take the inputted integers, and calculate the mean, median, and range of them. How would I go about doing this? Thanks!</p>
<p>P.S Using Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you should store your numbers in a list:</p>
<pre><code>my_numbers = [] # at the start
...
my_numbers.append(x) # when you get a valid x
</code></pre>
<p>Then the <a href="https://docs.python.org/3/library/statistics.html" rel="nofollow noreferrer"><code>statistics</code></a> module provides <code>mean</code> and <code>median</code> functions.</p>
<p>For the mean, you could also use <code>sum(my_numbers) / len(my_numbers)</code>, but the <code>statistics.mean</code> function is better-optimized for large data sets and only iterates over the inputs once.</p>
<p>For the range, you can use <code>max(my_numbers) - min(my_numbers)</code>.</p>
</div>
<span class="comment-copy">Welcome to Stack Overflow! Your question is <i>Too Broad</i>: There are either too many possible answers, or good answers would be too long for this format. Please add details to narrow the answer set or to isolate an issue that can be answered in a few paragraphs. See <a href="http://stackoverflow.com/help/how-to-ask">How do I ask a good question?</a>.</span>
<span class="comment-copy">You need to store each valid integer entered into a container, such as a <code>list</code>, and then go through its contents—possibly multiple times—and compute the various values you want.</span>
<span class="comment-copy">I believe the range would be from <code>min(my_numbers)</code> to <code>max(my_numbers)</code> because <code>max(my_numbers) - min(my_numbers)</code> computes the size of the range.</span>
