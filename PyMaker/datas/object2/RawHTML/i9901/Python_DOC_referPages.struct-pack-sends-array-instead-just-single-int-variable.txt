<div class="post-text" itemprop="text">
<p>I have</p>
<pre><code>check_paket = 0

check_paket = fragIndex                
check_header = struct.pack('!I', check_paket)
sock.sendto(check_header, (host, port))
</code></pre>
<p>And when I receive and unpack</p>
<pre><code>check_fragIndex = 0

data, addr = self.sock.recvfrom(65489)
check_header = data[:4]
(check_fragIndex) = struct.unpack('!I', check_header)
print('SENDER: check_fragIndex:' +str(check_fragIndex))
</code></pre>
<p><code>fragIndex</code> is set for example to <code>1</code> when sending so it prints this</p>
<pre><code>SENDER: check_fragIndex:(1,)
</code></pre>
<p>Instead of <code>SENDER: check_fragIndex: 1</code></p>
<p>It creates a string I guess, but why? I need that <code>fragIndex</code> as 4 byte integer number...</p>
</div>
<div class="post-text" itemprop="text">
<p><code>struct.unpack()</code> <em>always</em> returns a tuple. From the <a href="https://docs.python.org/3/library/struct.html#struct.unpack" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The result is a tuple even if it contains exactly one item.</p>
</blockquote>
<p>You <em>appear</em> to try to use assignment to extract the one value, but you only used parentheses:</p>
<pre><code>(check_fragIndex) = struct.unpack('!I', check_header)
</code></pre>
<p><code>(check_fragIndex)</code> is just a parenthesised name, not a tuple, so no extraction is taking place; <code>check_fragIndex</code> is bound to the whole tuple that <code>struct.unpack()</code> returns. You need a <em>comma</em> to get that effect:</p>
<pre><code>(check_fragIndex,) = struct.unpack('!I', check_header)
#               ^ the comma is crucial here
</code></pre>
<p>You can omit the parentheses altogether:</p>
<pre><code>check_fragIndex, = struct.unpack('!I', check_header)
</code></pre>
<p>or just use indexing to extract the one result:</p>
<pre><code>check_fragIndex = struct.unpack('!I', check_header)[0]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/library/struct.html#struct.unpack" rel="nofollow noreferrer">Docs</a>: <i>The result is a</i> <b>tuple</b> <i>even if it contains exactly one item</i></span>
<span class="comment-copy">Oh my :D its really just that freakin comma? :D gotta be kiddin me :D thanks man</span>
