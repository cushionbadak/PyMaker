<div class="post-text" itemprop="text">
<p>Recently I got the requirement to format the string dynamically based on the tuples of varying length. The idea is to repeatedly fill the string based on the tuple value until string formatting is completed. For example, let say the format of my string is as:</p>
<pre><code>"{} {} {} {} {} {}"
</code></pre>
<p>I want to insert the content into the string like:</p>
<pre><code># For: ("hello",)
'hello hello hello hello hello'  # &lt;- repeated "hello"

# For: ("hello", "world")
'hello world hello world hello'  # &lt;- repeated "hello world"

# For: ("hello", "world", "2017")
'hello world 2017 hello world'   # &lt;- repeated "hello world 2017"
</code></pre>
<p>I searched over here but could not find any good approach to do it, so thought of sharing it here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain

&gt;&gt;&gt; my_string = "{} {} {} {} {}"
&gt;&gt;&gt; my_tuple = ("hello", "world")  # tuple of length 2
&gt;&gt;&gt; my_string.format(*chain(my_tuple*6)) # here 6 is some value equal to
'hello world hello world hello'          # maximum number of time for which
                                         # formatting is allowed
</code></pre>
<p>Alternatively, we may also do it using <a href="https://docs.python.org/2/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterator()</code></a> and <a href="https://docs.python.org/2/library/itertools.html#itertools.repeat" rel="nofollow noreferrer"><code>itertools.repeat()</code></a> as:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain, repeat

&gt;&gt;&gt; my_string.format(*chain.from_iterable(repeat(my_tuple, 6)))
'hello world hello world hello'
</code></pre>
<p>Tuple will keep on repeating itself, until it fills all the formatting string. </p>
<hr/>
<p>Few other sample runs:</p>
<pre><code># format string of 5
&gt;&gt;&gt; my_string = "{} {} {} {} {}"

### Tuple of length 1
&gt;&gt;&gt; my_tuple = ("hello",)
&gt;&gt;&gt; my_string.format(*chain(my_tuple*6))
'hello hello hello hello hello'

### Tuple of length 2
&gt;&gt;&gt; my_tuple = ("hello", "world")
&gt;&gt;&gt; my_string.format(*chain(my_tuple*6))
'hello world hello world hello'

### Tuple of length 3
&gt;&gt;&gt; my_tuple = ("hello", "world", "2016")
&gt;&gt;&gt; my_string.format(*chain(my_tuple*6))
'hello world 2016 hello world'
</code></pre>
</div>
<span class="comment-copy">Rather than multiplying the tuple, one could also use <code>chain.from_iterable(repeat(my_tuple))</code></span>
<span class="comment-copy">@AlexHall On doing this <code>my_string.format(*chain.from_iterable(repeat(my_tuple)))</code>, my console gets <i>freezed</i>. checked in both 2.7 and 3</span>
<span class="comment-copy">However it works on specifying the <code>'n'</code> number of time tuple should be repeated like <code>repeat(my_tuple, 4)</code></span>
<span class="comment-copy">oops, didn't think of what would happen when one tries putting it into <code>format</code>. Indeed it tried to expand an infinite iterable which obviously failed. You'd need <code>islice</code> as well, which kind of defeats the point.</span>
<span class="comment-copy">@AlexHall No need of <code>islice()</code> as <code>repeat()</code> has a parameter as <code>times</code> which limits the iterator to limit repetition.</span>
