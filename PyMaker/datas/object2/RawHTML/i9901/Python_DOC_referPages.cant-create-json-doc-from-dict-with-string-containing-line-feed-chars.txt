<div class="post-text" itemprop="text">
<p>I'm creating a JSON structure which I ultimately need to save to a file but am having problems with embedded line feed characters.</p>
<p>I first create a dictionary:</p>
<pre><code>changes = {
   "20161101": "Added logging",
    "20161027": "Fixed scrolling bug",
    "20161024": "Added summary functionality"
}
</code></pre>
<p>and then convert it to a single line-feed separated string:</p>
<pre><code>changes_str = '\n'.join([ "{0} - {1}".format(x, y) for x, y in changes.items() ])
print changes_str
'20161101 - Added logging\n20161027 - Fixed scrolling bug\n20161024 - Added summary functionality'
</code></pre>
<p>So far, so good. Now I add it into string (which in reality would come from a text template):</p>
<pre><code>changes_str_json_str = '{ "version": 1.1, "changes": "' + changes_str + '" }'
print changes_str_json_str
'{ "version": 1.1, "changes": 20161101 - Added logging\n20161027 - Fixed scrolling bug\n20161024 - Added summary functionality }'
</code></pre>
<p>but when I come to create / encode a JSON object from this using loads, I hit problems:</p>
<pre><code>json_obj = json.loads(changes_str_json_str)

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/opt/python2.7/json/__init__.py", line 339, in loads
    return _default_decoder.decode(s)
  File "/opt/python2.7/json/decoder.py", line 364, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/opt/python2.7/json/decoder.py", line 380, in raw_decode
    obj, end = self.scan_once(s, idx)
ValueError: Invalid control character at: line 1 column 55 (char 54)
</code></pre>
<p>Changing the line feed to another character does fix the problem so clearly that's where the problem lies, however, I do need the character to be a line feed as ultimately the data in the file needs to be formatted like this (the file is passed on to another system over which I have no control. Also, as far as I know, line feed is a supported character in JSON strings.</p>
<p>What exactly is the problem here and how can I work around it?</p>
</div>
<div class="post-text" itemprop="text">
<p>In JSON you need to properly escape the control characters including <code>\n</code>. Here's example on what's currently happening:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; json.loads('"foo\nbar"')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\python35\lib\json\__init__.py", line 319, in loads
    return _default_decoder.decode(s)
  File "C:\python35\lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\python35\lib\json\decoder.py", line 355, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Invalid control character at: line 1 column 5 (char 4)
</code></pre>
<p>If you properly escape the newline character with backslash it will work as expected:</p>
<pre><code>&gt;&gt;&gt; json.loads('"foo\\nbar"')
'foo\nbar'
</code></pre>
<p>So you could fix your code by doing following:</p>
<pre><code>changes_str = '\\n'.join([ "{0} - {1}".format(x, y) for x, y in changes.items() ])
</code></pre>
<p>The better alternative would be to first construct the object you want to output and then use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>dumps</code></a> so you wouldn't have to worry about escaping at all:</p>
<pre><code>obj = {
    'version': 1.1,
    'changes': changes_str
}
changes_str_json_str = json.dumps(obj)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To convert it to a single line-feed separated string:</p>
<pre><code>import json
changes_str = json.dumps(changes)
</code></pre>
<p>To load a string JSON in dict python:</p>
<pre><code>dict_changes = json.loads(changes_str)
</code></pre>
</div>
<span class="comment-copy">That doesn't really address the issue. For example, try <code>dict_changes = json.loads('{ "message": "hello\nworld" }')</code> and you'll get the same <code>Invalid control character</code> error. <a href="http://www.json.org/" rel="nofollow noreferrer">json.org</a> indicates that <code>\n</code> is a valid character to have in a string.</span>
<span class="comment-copy">To be fair, re-reading the JSON page, it actually says that <code>\ </code> followed by <code>n</code> is valid rather than the <code>\n</code> control character - which probably is the root of my question.</span>
