<div class="post-text" itemprop="text">
<p>I was wondering how would you find the index of a element in a list if you only had part of it. For example </p>
<pre><code>list = ["this", "is", "an", "example", "for", "python"]
</code></pre>
<p>how would you find it if you only had <code>"pyt"</code> and needed the index for python???</p>
</div>
<div class="post-text" itemprop="text">
<p>Straightforward for loop:</p>
<pre><code>def find_starts(val, my_list):
    for i, v in my_list:
       if v.startswith(val):
           return i
</code></pre>
<p>(If there is no match then this returns <code>None</code>.) This could be made neater with a list comprehension: see <a href="https://stackoverflow.com/questions/2361426/what-is-the-best-way-to-get-the-first-item-from-an-iterable-matching-a-condition">this related question</a> for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p>As the question is not 100% clear i assume you want to find all items that include the specified string.</p>
<pre><code>alist = ["this", "is", "an", "example", "for", "python"]

val = 'is'

def find_in_list(alist, val):
    res = []
    for e, v in enumerate(alist):
       if val in v:
           res.append(e)
    return res

find_in_list(alist, val)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to work with a solution that work when some element are similar (for example <code>["foo", "asd", "foobar"]</code> and you have <code>"foo"</code> what would be detected as a correct element?)</p>
<p>The given function will return a list of indexes, which were identified as a correct element.</p>
<pre><code>def find(foo, list):
   #Find similar elements
   similarElements = [e for e in list if foo in e]
   #Find their indexes
   indexes = [similarElements.index(i) for i in similarElements]
   return indexes
</code></pre>
<p>This solution isn't the fastest way, but an easy and understandable.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; list = ["this", "is", "an", "example", "for", "python"]
&gt;&gt;&gt; word = "python"
&gt;&gt;&gt; y = [i for i,j in enumerate(list) if j == word]
&gt;&gt;&gt; y
[5]
</code></pre>
<p>However, this is for the whole word, try this aswell.</p>
<pre><code>&gt;&gt;&gt; word = "py"
&gt;&gt;&gt; for w in list:
...     if word in w:
...             sus.append(w)
...             print(sus)
...
['python']
</code></pre>
</div>
<span class="comment-copy">It depends how you want a match to be decided.  For example, would <code>is</code> match "is" or "this" or both?</span>
<span class="comment-copy">as @user2699 mentioned, what kind of result are you expecting: only the index of the first matched element or list of indexes by all matches?</span>
<span class="comment-copy">Thanks for the help however I was thinking this. ["Bob smith","Garry Taylor"] how would I find the index if I just gave it Bob??? Thx</span>
<span class="comment-copy">alist = ["Bob smith","Garry Taylor"] val = 'Bob'</span>
<span class="comment-copy">dear @Richy this doesn't work as bob is not the whole element any way to get around it???</span>
<span class="comment-copy">@adamtsang this works fine for me, the check is <code>if val in v</code> so Bob has just to be in Bob smith, and that's the case. <a href="https://docs.python.org/3/reference/expressions.html#in" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#in</a></span>
