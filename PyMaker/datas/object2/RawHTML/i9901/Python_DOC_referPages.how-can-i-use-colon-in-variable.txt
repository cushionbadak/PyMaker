<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/38179060/can-i-store-slicers-in-a-variable-pandas-python">Can I store slicers in a variable? (Pandas/Python) [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I want to write code like this:</p>
<pre><code>index = 0:2
print(list[index])
</code></pre>
<p>but this does not work.</p>
<p>Is there any way I can store all parts of the <code>[...:...]</code> syntax in a variable?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want a <a href="https://docs.python.org/3/library/functions.html#slice" rel="noreferrer"><code>slice()</code> object</a>:</p>
<pre><code>index = slice(0, 2)
print(somelist[index])
</code></pre>
<p><code>slice()</code> models the start, stop and stride values you can specify in the  <code>[start:stop:stride]</code> subscription syntax, as an object.</p>
<p>From the documentation:</p>
<blockquote>
<p>Return a <a href="https://docs.python.org/3/glossary.html#term-slice" rel="noreferrer">slice</a> object representing the set of indices specified by <code>range(start, stop, step)</code>. The start and step arguments default to <code>None</code>. Slice objects have read-only data attributes <code>start</code>, <code>stop</code> and <code>step</code> which merely return the argument values (or their default).</p>
</blockquote>
<p>Under the covers, Python actually translates subscriptions to a <code>slice()</code> object when calling custom <code>__getitem__</code> methods:</p>
<pre><code>&gt;&gt;&gt; class Foo(object):
...     def __getitem__(self, item):
...         return item
...
&gt;&gt;&gt; Foo()[42:81:7]
slice(42, 81, 7)
&gt;&gt;&gt; Foo()[:42]
slice(None, 42, None)
</code></pre>
<p>A viable alternative would be to store start and stop as separate values:</p>
<pre><code>startindex = 0
stopindex = 2
print(somelist[start:stop])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can instead create a <a href="https://docs.python.org/2/library/functions.html#slice" rel="noreferrer"><code>slice</code></a> object:</p>
<pre><code>index = slice(0,2)
print(lst[index])
</code></pre>
<p>Be careful not to use <code>list</code> as name to avoid shadowing the builtin <code>list</code> function.</p>
<p>From the docs:</p>
<blockquote>
<p><code>slice(start, stop[, step])</code></p>
<p>Return a slice object representing the set of indices specified by
  <code>range(start, stop, step)</code></p>
</blockquote>
</div>
<span class="comment-copy">No you cannot. That is not valid Python Syntax.</span>
<span class="comment-copy">No , in Python its not possible to do that for integers/floats. You can use them for string (Ex :  index = "0:2").</span>
<span class="comment-copy">@leaf: there is valid syntax to express the <i>intent</i> however.</span>
<span class="comment-copy">@Turry: but that string can not be used in a subscription.</span>
<span class="comment-copy">Related post and a nice read <a href="http://stackoverflow.com/questions/3911483/python-slice-how-to-i-know-the-python-slice-but-how-can-i-use-built-in-slice-ob" title="python slice how to i know the python slice but how can i use built in slice ob">stackoverflow.com/questions/3911483/â€¦</a></span>
<span class="comment-copy">thanks, but what about "index = -2:"</span>
<span class="comment-copy">@giorgishengelaia: that be <code>slice(-2, None)</code>. Try out my <code>Foo()</code> example; <code>Foo()[-2:]</code> returns <code>slice(-2, None, None)</code>.</span>
<span class="comment-copy">@leaf: what if you wanted to model <code>-2:</code> at one time, and <code>:4</code> another?</span>
<span class="comment-copy">@leaf: your approach, <code>index = -2</code> and <code>somelist[index:]</code> limits you to only making the starting point variable. You could use <i>three</i> variables, one for start, stop and stride, respectively, then use <code>somelist[start:stop:stride]</code> everywhere, but that's very verbose. Using a <code>slice()</code> object is far more elegant here.</span>
<span class="comment-copy">@leaf: Yes, in their example they only had a start variable. Yet in the question they had an <i>end variable</i> (ignoring the start defaulting to <code>0</code>). So this is clearly a question about modelling all portions of a slice, not just a single value in a slice.</span>
