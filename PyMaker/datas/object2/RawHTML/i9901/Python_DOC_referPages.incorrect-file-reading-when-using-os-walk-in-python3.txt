<div class="post-text" itemprop="text">
<p>I am crawling through folders using the <code>os.walk()</code> method. In one of the folders, there is a large number of files, around 100,000 of them. The files look like: <code>p_123_456.zip</code>. But they are read as <code>p123456.zip</code>. Indeed, when I open windows explorer to browse the folder, for the first several seconds the files look like <code>p123456.zip</code>, but then change their appearance to <code>p_123_456.zip</code>. This is a strange scenario.</p>
<p>Now, I can't use <code>time.sleep()</code> because all folders and and files are being read into python variables in the looping line. Here is a snippet of the code:</p>
<pre><code>    for root, dirs, files in os.walk(srcFolder):
        os.chdir(root)
        for file in files:
            shutil.copy(file, storeFolder)
</code></pre>
<p>In the last line, I get a file not found exception, saying that the file <code>p123456.zip</code> does not exist. Has anyone run into this mysterious issue? Anyway to bypass this? What is the cause of this? Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't seem to be concatenating the actual folder name with the filenames. Try changing your code to:</p>
<pre><code>for root, dirs, files in os.walk(srcFolder):
    for file in files:
        shutil.copy(os.path.join(root, file), storeFolder)
</code></pre>
<p><code>os.chdir</code> should be avoided like the plague. For one thing - if the changes suceeeds, it won't be the directory from which you are running your os.walk anymore - and then, a second <code>chdir</code> on another folder will fail (either stop your porgram or change you to an unexpected folder).</p>
<p>Just add the folder name as prefixes, and don't try using chdir. </p>
<p>Moreover, as for the comment from ShadowRanger above, <code>os.walk</code> officially breaks if you <code>chdir</code> inside its iteration - <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">https://docs.python.org/3/library/os.html#os.walk</a> - that is likely the root of the problem you had.</p>
</div>
<span class="comment-copy">What's incorrect about this?  Are you getting an exception when you try to open the files?  If so what is the exception and traceback?  Or are you just assuming that Python is going to pull the wrong names? Is it possible that the folder has both <code>p_123_456.zip</code> and <code>p123456.zip</code> in it and it just takes windows explorer some time to sort the filenames for display?</span>
<span class="comment-copy">I want to move the files to other folders. So when the name is read it is without '_'. But when I call the moving operation it says such a file does not exist.</span>
<span class="comment-copy">When you move the files are you giving the full path of the source file? <code>source_full_path = os.path.join(root, fname)</code></span>
<span class="comment-copy">Please, add the line(s) where you actually try to open/rename the files.</span>
<span class="comment-copy">@StevenRumbalski: Yeah, I reopened on that basis. That said, if <code>srcFolder</code> or <code>storeFolder</code> is a relative path, <code>os.chdir</code> will break things; <code>os.walk</code> relies on a consistent working directory in that case, per <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">the docs</a>: "Note: If you pass a relative pathname, don’t change the current working directory between resumptions of <code>walk()</code>. <code>walk()</code> never changes the current directory, and assumes that its caller doesn’t either." This code violates that assumption.</span>
