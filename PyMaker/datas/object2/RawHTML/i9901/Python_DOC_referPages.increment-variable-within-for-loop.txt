<div class="post-text" itemprop="text">
<p>I am new to Python and am trying to figure out how to address the following issue. I have two lists, list1 looks like this:</p>
<pre><code>['10','12','12','23]
</code></pre>
<p>And list2 looks like this:</p>
<pre><code>['15','16','13','15']
</code></pre>
<p>I also have a dictionary consisting of the following key-values:</p>
<pre><code>dictionary = {
'10': 'AATGCGTAAGCTAGCGATAGATGCAACGTT', 
'12': 'GGTCAGAGTTTATCGGTATGTTAGCATGGA', 
'23': 'ATGGGCGCGTATATTAAAGGCGCCGCCCTG'
}
</code></pre>
<p>The keys in this dictionary consist of those elements in list1. Each element in list1 is also associated with a single element in list2 (in order, such that '10' in list1 is associated with '15' in list2, '12' in list1 with '16' in list2, etc.). </p>
<p>For each element in list1, I would like to take the associated dictionary value, and insert characters into specific positions using the associated element in list2 to determine the positions. So far I've been working on a for loop to do this:</p>
<pre><code>for i in list1:
    dict_key = dictionary.get(i)
    pos = int(list2[0])
    full = dict_key[:pos] + '[' + dict_key[pos] + ']' +  dict_key[(pos+1):]
    print(full)
</code></pre>
<p>I would like my final output to look like this:</p>
<pre><code>AATGCGTAAGCTAGC[G]ATAGATGCAACGTT
GGTCAGAGTTTATCGG[T]ATGTTAGCATGGA
GGTCAGAGTTTAT[C]GGTATGTTAGCATGGA
ATGGGCGCGTATATT[A]AAGGCGCCGCCCTG
</code></pre>
<p>But my output currently looks like this because I am specifically calling for only index 0 from list2:</p>
<pre><code>AATGCGTAAGCTAGC[G]ATAGATGCAACGTT
GGTCAGAGTTTATCG[G]TATGTTAGCATGGA
GGTCAGAGTTTATCG[G]TATGTTAGCATGGA
ATGGGCGCGTATATT[A]AAGGCGCCGCCCTG
</code></pre>
<p>I want to increase the element that's called for in list2 by 1 with each iteration of the loop, but I can't seem to figure it out. Should I define a new variable using range? Any comments will be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just change <code>for i in list1:</code> to <code>for i, pos in zip(list1, list2):</code> and remove the assignment of <code>pos</code> in the second line of the loop. <code>zip</code> will let you iterate through both lists at once.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> is helpful in situations like this - it gives you a tuple containing the position of each element, and the element itself. Note, I've changed your meaning of <code>i</code> to mean the element's position rather than the element.</p>
<p>Your variable <code>dict_key</code> would probably be better called <code>dict_value</code>, since the element in <code>list1</code> is actually the key that you are looking up in <code>dictionary</code>.</p>
<pre><code>for i, el in enumerate(list1):
    dict_value = dictionary.get(el)
    pos = int(list2[i])
    full = dict_value[:pos] + '[' + dict_value[pos] + ']' +  dict_value[(pos+1):]
    print(full)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can build iterators for your lists (<code>int(i) for i in list2</code> for instance iterates <code>list2</code>, converting its values to <code>int</code> on the way) and use <code>zip</code> to read them in pairs.</p>
<pre><code>list1 = ['10','12','12','23']
list2 = ['15','16','13','15']

dictionary = {
'10': 'AATGCGTAAGCTAGCGATAGATGCAACGTT', 
'12': 'GGTCAGAGTTTATCGGTATGTTAGCATGGA', 
'23': 'ATGGGCGCGTATATTAAAGGCGCCGCCCTG'
}

for val, pos in zip((dictionary[j] for j in list1), (int(i) for i in list2)):
    full = val[:pos] + '[' + val[pos] + ']' +  val[(pos+1):]
    print(full)
</code></pre>
<p>Some people would prefer string formatting to build the resulting string </p>
<pre><code>full = '{}[{}]{}'.format(val[:pos], val[pos], val[pos+1:]) 
</code></pre>
<p>but that's personal taste.</p>
</div>
<span class="comment-copy">Thanks for this solution @Randy C! Very simple and does what I wanted, will also be helpful to know in general. Thanks again!</span>
<span class="comment-copy">Also very helpful, thanks @enigma, I had not previously used enumerate.</span>
<span class="comment-copy">Thanks @tdelaney, gives me what I want and I now know about list iterators.</span>
