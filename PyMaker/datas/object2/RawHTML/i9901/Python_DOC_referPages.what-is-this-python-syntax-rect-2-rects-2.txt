<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2725750/slicing-arrays-in-numpy-scipy">slicing arrays in numpy/scipy</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>In BlackHatPython, Chapter 4 has this function:</p>
<pre><code>def face_detect(path,file_name):
  img = cv2.imread(path)
  cascade = cv2.CascadeClassifier("haarcascade_frontalface_alt.xml")
  rects = cascade.detectMultiScale(img, 1.3, 4, cv2.cv.CV_HAAR_SCALE_IMAGE, (20,20))
  if len(rects) == 0:
    return False
  rects[:, 2:] += rects[:, :2]
  # highlight the faces in the image
  for x1,y1,x2,y2 in rects:
    cv2.rectangle(img,(x1,y1),(x2,y2),(127,255,0),2)
  cv2.imwrite("%s/%s-%s" % (faces_directory,pcap_file,file_name),img)
  return True
</code></pre>
<p>What is the meaning of</p>
<pre><code>rect[:, 2:] += rects[:, :2]  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is slicing arrays in python, as e.g. explained here: <a href="https://stackoverflow.com/questions/509211/explain-pythons-slice-notation">Explain Python's slice notation</a></p>
<p>In you specific case, you have a numpy array, which is a 2D structure, so there are two dimensions on which you can slice. The individual slices are separated by the comma. Look at this code for a visualization:</p>
<pre><code>In [7]: np.diag([3,4,5])
Out[7]: 
array([[3, 0, 0],
       [0, 4, 0],
       [0, 0, 5]])

In [8]: np.diag([3,4,5])[:2]
Out[8]: 
array([[3, 0, 0],
       [0, 4, 0]])

In [9]: np.diag([3,4,5])[:2, :]
Out[9]: 
array([[3, 0, 0],
       [0, 4, 0]])

In [10]: np.diag([3,4,5])[:2, :1]
Out[10]: 
array([[3],
       [0]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To dissect what the expression is you have to consult the <a href="https://docs.python.org/3/reference/index.html" rel="nofollow noreferrer">Python Language Reference</a>. What it is is that the subexpressions <code>:</code> and <code>2:</code> are slicings, then the expression <code>:, 2:</code> is two slicings joined by the comma operator (creating a tuple of two slicings). Then that is used to subscribe <code>rect</code> and <code>rects</code> and whatever that results in will be applied to the <code>+=</code> operator.</p>
</div>
<span class="comment-copy">That syntax is array slicing</span>
<span class="comment-copy">That is is not any syntax. That would raise a <code>TypeError</code></span>
<span class="comment-copy">looks like <code>numpy</code> to me. <a href="https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html" rel="nofollow noreferrer">docs.scipy.org/doc/numpy/reference/arrays.indexing.html</a></span>
<span class="comment-copy">@Farhan.K A slice can consist of a comma-separated sequence of <i>proper</i> slices, which have the general form <code>start:step:stop</code>. Built-in types only accept proper slices; the full form was added to the language for <code>numpy</code>. Any user-defined class, though, can accept them.</span>
<span class="comment-copy">With <code>rects[:, :2]</code>, the argument to <code>type(rects).__getitem__()</code> would be a tuple of <code>slice</code> objects: <code>((slice(None, None, None), slice(None, 2, None))</code>.</span>
