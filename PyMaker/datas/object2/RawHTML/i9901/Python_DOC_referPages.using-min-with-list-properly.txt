<div class="post-text" itemprop="text">
<pre><code>text = input("enter string:")
text.lower()
counta = text.count ("a")
counte = text.count ("e")
counti = text.count ("i")
counto = text.count ("o")
countu = text.count ("u")

if counta &gt; 0:
print ("'a'",counta)

if counte &gt; 0:
print ("'e'",counte)

if counti&gt; 0:
print ("'i'",counti)

if counto &gt; 0:
print ("'o'",counto)

if countu &gt; 0:
print ("'u':",countu)


leastFreq = [counta,counte,counti,counto,countu]
leastFreq.sort()
while 0 in leastFreq: leastFreq.remove(0)
print (leastFreq)
</code></pre>
<p>task = count vowels in word, print least frequent vowels that occur. in this case, "potato" would print:</p>
<pre><code>'a' = 1
'0' = 2
</code></pre>
<p>how do I make it so that it prints just 'a'? I could use min(leastFreq) but that would only return the value "1". how do I do it so that it prints using the format 'a' = 1 or if there is more than one vowel with the same number of occurences.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min</code></a> with an <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">additional filter condition</a>, testing whether the element is <code>&gt; 0</code>:</p>
<pre><code>&gt;&gt;&gt; leastFreq = [4, 2, 1, 0, 3, 0]
&gt;&gt;&gt; min(x for x in leastFreq if x &gt; 0)
1
</code></pre>
<p>But this way, you lose the information what character this count belongs to. Instead of your five different variables, you could create a <a href="https://docs.python.org/3/library/stdtypes.html#typesmapping" rel="nofollow noreferrer">dictionary</a>, mapping vowels to their respective counts:</p>
<pre><code>&gt;&gt;&gt; text = "potato"
&gt;&gt;&gt; counts = {c: text.count(c) for c in "aeiou"}
&gt;&gt;&gt; counts
{'a': 1, 'i': 0, 'e': 0, 'u': 0, 'o': 2}
&gt;&gt;&gt; counts["o"]
2
</code></pre>
<p>And then again use <code>min</code> with a generator expression and a specific <code>key</code> function (to sort by the count, not by the vowel itself).</p>
<pre><code>&gt;&gt;&gt; min((c for c in counts if counts[c] &gt; 0), key=counts.get)
'a'
</code></pre>
<p>If you are interested in the counts of all the letters, you could also use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>To minimally change your code:</p>
<pre><code>leastFreq = [(counta, 'a'),(counte, 'e'),(counti, 'i'),(counto, 'o'),(countu, 'u')]
leastvowel = min(leastFreq)[1]
</code></pre>
<p>But you should use <code>collections.Counter</code> instead</p>
<pre><code>from collections import Counter
text = input("Enter text: ")
c = Counter(character for character in text if character in 'aeiou') #get counts of vowels
least_frequent = c.most_common()[-1]
</code></pre>
<p><code>least_frequent</code> will then be a tuple like <code>('a', 1)</code></p>
<p>EDIT:  If you want all of the most frequent items you can use <code>itertools.groupby</code></p>
<pre><code>lestfreq=list(next(itertools.groupby(c.most_common()[::-1], key=lambda x:x[1]))[1])
</code></pre>
<p>This looks complicated, but all it's saying is take a list in sorted order and take all the tuples with the same second value and put them in a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>A combination of Counter and operator might do the trick:</p>
<pre><code>from collections import Counter
import operator
text = raw_input("enter string:")
freq = Counter(i for i in text if i in 'aeiou')
items = sorted(freq.items(),key=operator.itemgetter(1))
min = items[0][1]
for character,frequency in items:
    if frequency == min:
        print character,frequency
</code></pre>
</div>
<span class="comment-copy">Not directly related to your question, but <code>text.lower()</code> doesn't do anything on its own. You need to assign it to something.</span>
<span class="comment-copy">I assume that the indentation errors here are a result of copy/paste into stack overflow's editor?</span>
<span class="comment-copy">neat. this wouldn't capture if two vowels have the same (minimum) frequency though.</span>
<span class="comment-copy">@PrateekDewan good point, see my edit for one possible solution</span>
