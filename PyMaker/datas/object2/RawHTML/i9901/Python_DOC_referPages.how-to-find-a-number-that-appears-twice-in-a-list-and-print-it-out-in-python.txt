<div class="post-text" itemprop="text">
<p>I need some help with my homework for school. I am supposed to write a program in python that ask the person for a list of numbers, in my case:</p>
<pre><code>[53,16,22,81,43,16,88,55,43,5]
</code></pre>
<p>and print out the numbers that appear twice in it in the same order they appeared. I am also supposed so use the <code>eval</code> function in my program. </p>
<p>All I have currently is this:</p>
<pre><code>list= eval(input("Input your list: "))
</code></pre>
<p>The end result is supposed to look like this in python shell:                        <code>Input a list: [53,16,22,81,43,16,88,55,43,5]</code>
<code>[16, 43]</code></p>
<p>Please help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Edit: from the comments I got to understand the numbers in the output should be listed in order of their <em>second</em> occurrence in the input, as the description apparently says:</p>
<blockquote>
<p>The numbers should be in [the] order [of] when the students went to get their extra piece of cake.</p>
</blockquote>
<p>You could use list comprehension with <code>inp[:i].count(inp[i]) == 1</code> as filter condition, meaning the current number should appear <em>once before</em> the current index:</p>
<pre><code>inp = eval(input('Input your list:'))
print([j for i, j in enumerate(inp) if inp[:i].count(j) == 1])
</code></pre>
<p>Don't use <code>list</code> as a variable name, as it is an <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow noreferrer">existing function</a> in Python.</p>
<p>As stated by others: using <a href="https://stackoverflow.com/questions/1832940/is-using-eval-in-python-a-bad-practice"><code>eval</code> is frowned upon</a>, certainly when the argument is provided by the user.</p>
<h3>Basic alternative (not efficient)</h3>
<p>This implements the same algorithm, but just uses the most basic constructs:</p>
<pre><code>result = []
n = len(inp)
for i in range(n):
    count = 0
    # only look at number preceding the one at i
    for j in range(i): 
        if inp[i] == inp[j]:
            count += 1
            # we look for cases where there is exactly one match
            # so we know that at i it is the 2nd occurrence
            if count == 2:
                break
    if count == 1:
        result.append(inp[i])
print(result)
</code></pre>
</div>
<span class="comment-copy">Suppose I give you a list of 1000 numbers on paper and ask you to find the number that appears twice. Ignoring the problem of how long it would take you and how boring it would be, how would you do it? Imagine it and describe it to me in simple terms.</span>
<span class="comment-copy">Don't use <code>eval</code>! It's a very dangerous function combined with parsing user input. use <code>ast.literal_eval</code> instead. Why? <a href="http://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval" title="using pythons eval vs ast literal eval">stackoverflow.com/questions/15197673/â€¦</a></span>
<span class="comment-copy">Alex Hall I think that I would go through all the numbers and than write down the ones that appear twice. The problem is that I don't knwo what to say to python to do this.</span>
<span class="comment-copy">Thank you for your suggestion woockashek, but I am supposed to use this function because the homework is tested by a program that checks explicitly which functions did I use and I have to use this one.</span>
<span class="comment-copy">Don't name your variable <code>list</code> as it is a function in Python.</span>
<span class="comment-copy">Thanks for you help! Your program works, but do you by any chance know a way  to do this task with simpler functions, such as <code>for</code> and <code>if</code> because we haven't used the <code>inp.count</code> function yet.</span>
<span class="comment-copy">So what else can you use? Dictionaries? <code>index()</code>? <code>find()</code>?</span>
<span class="comment-copy">We haven't learned any of those. In our last few classes we were just using <code>for</code> and <code>if</code> functions, however I have to admit I don't really know what <code>for</code> function means... :/</span>
<span class="comment-copy">They are not functions, but statements. I added a non-efficient alternative, that uses <code>for</code> and <code>if</code>, but needs one method to add to the result: <code>append</code>. I hope you know that one...</span>
<span class="comment-copy">Just to be sure: do you need to list the numbers that occur twice, or all those that occur <i>at least</i> twice?</span>
