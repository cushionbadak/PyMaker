<div class="post-text" itemprop="text">
<p>I am receiving data from a radar on different contacts. each contact has a lat, lon, direction, range and time stamp. and each time hit on a contact will be ID'd such as 1,2,3 etc. for one contact this suggests a dictionary over time. therefore, my dictionary for one contact will look something like this: </p>
<pre><code>{1:[data @ t1], 2:[data @ t2], 3:[data @ t3]}
</code></pre>
<p>And as time goes on the dictionary will fill up until ...But there will not be only one contact. there will be several, maybe many. this suggests a dictionary of dictionaries: </p>
<pre><code>{'SSHornblower': {1:[data], 2:[data], 3:[data]},
 'Lustania': {1:[], 2:[], 3:[]},
 'Queen Mary': {1:[], 2:[], 3:[], 4:[]}} 
</code></pre>
<p>It is not possible to know before hand how many contacts my radar will find, maybe 3 maybe 300. I cannot come up with names ahead of time for all the possible contacts and names for all the possible dictionaries. Therefore, I came up with the idea that once i nested a dictionary inside the larger dictionary, i could clear it and start over with the new contact. but when i do a clear after i nest one inside another, it clears everything inside the larger dictionary! Is there a way to get around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>For filling up nested dictionaries a <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer">defaultdict</a> can be very useful.</p>
<p>Let's assume you have a function <code>radar()</code> that returns three values:</p>
<ol>
<li>contact_name </li>
<li>contact_id </li>
<li>contact_data</li>
</ol>
<p>Then the following would do the job:</p>
<pre><code>from collections import defaultdict

store = defaultdict(dict)

while True:
    contact_name, contact_id, contact_data = radar()
    store[contact_name][contact_id] = contact_data
</code></pre>
<p>So even if there will be a new contact_name that is not yet present in the <code>store</code>, the magic of defaultdict will make sure that an empty nested dict will already be there when you access the <code>store</code> with the new key . Therefore <code>store[new_contact_name][new_contact_id] = new_contact_data</code> will work.</p>
</div>
<span class="comment-copy">What code do you have so far? Can you also format your code/data. That block of text is an eyesore.</span>
<span class="comment-copy">Do you need the O(1) access time of a dictionary?  If not, you could store your contacts in a list.  If you <i>do</i> need a dictionary, then you'll need a system of assigning guaranteed-unique identifiers (probably integers --- don't assume the names are unique) to unknown contacts.  (Also, consider using a list or a <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict</code></a> to store the radar "pings", since the obvious use of a bunch of timestamped data is to iterate it in chronological order... and maybe drop all pings older than <i>n</i> seconds.)</span>
<span class="comment-copy">Not sure I understand your problem. In particular, why are you thinking of clearing things. Can't you just add a new entry in your main dictionary when you encounter a new contact?</span>
