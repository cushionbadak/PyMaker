<div class="post-text" itemprop="text">
<p>I'm writing a function that counts the number of times a country appears in a dictionary and returns the country that appeared the most. If more then one country appears the most then it should return a list of the countries.</p>
<p>Example dictionary: </p>
<pre><code>{'Leonardo da Vinci': [("Portrait of Isabella d'Este", 1499, 63.0, 46.0, 'chalk', 'France'), ('The Last 
  Supper', 1495, 460.0, 880.0, 'tempera', 'Italy')], 'Pablo Picasso': [('Guernica', 1937, 
  349.0, 776.0, 'oil paint', 'Spain')]}
</code></pre>
<p>Since France, Italy, and Spain all only appear once in this dictionary the function should return</p>
<pre><code>countries_appeared_most(dictionary1())

['France', 'Italy', 'Spain']
</code></pre>
<p>If one of those countries had instead appeared 2 or 3 times the function would return just that country. The current code I have below instead searches for the artist that appears the most but I believe a couple small changes could help me instead return the country that appears the most. Does anyone have advice on how to do this? Thanks for the help</p>
<p>Code:</p>
<pre><code>def countries_appeared_most(db):
    if not db:
            return None
    maxcount = max(len(v) for v in db.values())
    themax = [k for k, v in db.items() if len(v) == maxcount]
    themax.sort()
    return themax
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>counter = {}
for painting_list in db.values():
    for painting in painting_list:
        country = painting[-1]
        counter[country] = counter.get(country, 0) + 1
maxcount = max(counter.values())
themax = [k for k, count in counter.items() if count == maxcount]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Flatten the values to get a list of the countries:</p>
<pre><code>&gt;&gt;&gt; [x[-1] for X in d.values() for x in X]
['Spain', 'France', 'Italy']
</code></pre>
<p>And a <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer"><code>Counter</code></a> can give you the most frequent ones directly:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; countries = [x[-1] for X in d.values() for x in X]
&gt;&gt;&gt; Counter(countries).most_common()
[('Italy', 1), ('Spain', 1), ('France', 1)]
</code></pre>
</div>
<span class="comment-copy">Thanks is there a way to do this without importing Counter? I should have made this clear in the question but my code cant rely on imports</span>
<span class="comment-copy">@warrior4223 edited.</span>
<span class="comment-copy">Thanks I appreciate it. I'm getting the error counter is not defined I'll try changing the name to something else</span>
<span class="comment-copy">Is there a way to do this without counter? Sorry I should have mentioned this in the question but my code needs to be simple and not rely on imports</span>
<span class="comment-copy">Sorry, but I don't answer questions with arbitrary restrictions.  The collections module is a core library, so there is no reason not to import and use it.</span>
<span class="comment-copy">@warrior4223 <i>"my code needs to be <b>simple and not rely on imports</b>"</i> - What do you mean? Part of making your code simple <i>is</i> relying on imports. imports save you from "reinventing the wheel" each time you need a certain function/class.</span>
