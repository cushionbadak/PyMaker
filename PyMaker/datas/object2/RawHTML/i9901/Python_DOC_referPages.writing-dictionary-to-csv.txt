<div class="post-text" itemprop="text">
<p>After looking around for about a week, I have been unable to find an answer that I can get to work. I am making an assignment manager for a project for my first year CS class. Everything else works how I'd like it to (no GUI, just text) except that I cannot save data to use each time you reopen it. Basically, I would like to save my classes dictionary:</p>
<pre><code>classes = {period_1:assignment_1, period_2:assignment_2, period_3:assignment_3, period_4:assignment_4, period_5:assignment_5, period_6:assignment_6, period_7:assignment_7}
</code></pre>
<p>after the program closes so that I can retain the data stored in the dictionary. However, I cannot get anything I have found to work. Again, this is a beginner CS class, so I don't need anything fancy, just something basic that will work. I am using a school-licensed form of Canopy for the purposes of the class.</p>
</div>
<div class="post-text" itemprop="text">
<p>Either use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv library</a>, or do something simple like:</p>
<pre><code>with open("assignments.csv", "w") as f:
    for key, value in classes.items():
        f.write(key + "," + value + "\n")
</code></pre>
<hr/>
<p>Edit: Since it seems that you can't read or write files in your system, here's an alternative solution (with pickle and base85):</p>
<pre><code>import pickle, base64

def save(something):
    pklobj = pickle.dumps(something)
    print(base64.b85encode(pklobj).decode('utf-8'))

def load():
    pklobj = base64.b85decode(input("&gt; ").encode('utf-8'))
    return pickle.loads(pklobj)
</code></pre>
<p>To save something, you call <code>save</code> on your object, and copy the string that is printed to your clipboard, then you can save it in a file, for instance.</p>
<pre><code>&gt;&gt;&gt; save(classes)  # in my case: {34: ['foo#', 3]}
fCGJT081iWaRDe;1ONa4W^ZpJaRN&amp;NWpge
</code></pre>
<p>To load, you call <code>load()</code> and enter the string:</p>
<pre><code>&gt;&gt;&gt; load()
&gt; fCGJT081iWaRDe;1ONa4W^ZpJaRN&amp;NWpge
{34: ['foo#', 3]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>L3viathan's post might be direct answer to this question, but I would suggest the following for your purpose: using <a href="https://wiki.python.org/moin/UsingPickle" rel="nofollow noreferrer"><code>pickle</code></a>.</p>
<pre><code>import pickle

# To save a dictionary to a pickle file:
pickle.dump(classes, open("assignments.p", "wb"))

# To load from a pickle file:
classes = pickle.load(open("assignments.p", "rb"))
</code></pre>
<p>By this method, the variable would retain its original structure without having to write and convert to different formats manually.</p>
</div>
<div class="post-text" itemprop="text">
<p>The pickle approach described by @Ébe Isaac and @L3viathan is the way to go. In case you also want to do something else with the data, you might want to consider pandas (which you should only use IF you do something else than just exporting the data).</p>
<p>As there are only basic strings in your dictionary according to your comment below your question, it is straightforward to use; if you have more complicated data structures, then you should use the pickle approach:</p>
<pre><code>import pandas as pd

classes = {'period_1':'assignment_1', 'period_2':'assignment_2', 'period_3':'assignment_3', 'period_4':'assignment_4', 'period_5':'assignment_5', 'period_6':'assignment_6', 'period_7':'assignment_7'}

pd.DataFrame.from_dict(classes, orient='index').sort_index().rename(columns={0: 'assignments'}).to_csv('my_csv.csv')
</code></pre>
<p>That gives you the following output:</p>
<pre><code>           assignments
period_1  assignment_1
period_2  assignment_2
period_3  assignment_3
period_4  assignment_4
period_5  assignment_5
period_6  assignment_6
period_7  assignment_7
</code></pre>
<p>In detail:</p>
<p><code>.from_dict(classes, orient='index')</code> creates the actual dataframe using the dictionary as in input</p>
<p><code>.sort_index()</code> sorts the index which is not sorted as you use a dictionary for the creation of the dataframe</p>
<p><code>.rename(columns={0: 'assignments'})</code> that just assigns a more reasonable name to your column (by default '0' is used)</p>
<p><code>.to_csv('my_csv.csv')</code> that finally exports the dataframe to a csv</p>
<p>If you want to read in the file again you can do it as follows:</p>
<pre><code>df2 = pd.read_csv('my_csv.csv', index_col=0)
</code></pre>
</div>
<span class="comment-copy">What are the keys and values of the dictionary? Just strings?</span>
<span class="comment-copy">Yes, just basic strings for both classes and assignments.</span>
<span class="comment-copy">This gives out an issue of: TypeError: cannot concatenate 'str' and 'list' objects. As with the above comment, I am probably just missing something basic. Any advice? And thanks!</span>
<span class="comment-copy">I see, that means your <code>value</code>s are lists. In that case, I would say that csv is probably the wrong format to use.</span>
<span class="comment-copy">Alright, that's what I was afraid of. Thank you for the help!</span>
<span class="comment-copy">I misunderstood you and thought you were using the interactive shell on Python, that's what my new solution is based on now. But if you have Python installed on your computer you should be able to get it working (just call <code>os.chdir</code> with a folder you have rights for.)</span>
<span class="comment-copy">Changing the directory and using your edited code worked. Thank you!</span>
<span class="comment-copy">The only issue I have had with pickle is that I cannot get it to create a file in the directory. Each time I have tried pickle, I get: [Errno 2] No such file or directory: 'assignments' Any advice, or am I just missing something basic? And thank you!</span>
<span class="comment-copy">@jdmonroe29 Did you use it <i>exactly</i> as I posted? It's working fine for me.</span>
<span class="comment-copy">Yes, it still gives out the "No such file or directory" error. I should have mentioned, I am using a school-licensed version of Canopy because of the class. I will edit the main topic to mention that. Could that have anything to do with it?</span>
<span class="comment-copy">@jdmonroe29: I think I might figure out your problem. How are you running Python: calling from a terminal/cmd-prompt, from a server, or from an IPython instance/notebook?</span>
<span class="comment-copy">I am trying to run it from the window that opens when using basic python from python.org. Like I said, I know its probably very basic, but that's all I need for the purpose of this class, although I can download something else, no problem.</span>
<span class="comment-copy">Why <code>pandas</code> for something so simple?</span>
<span class="comment-copy">@ÉbeIsaac Just as an alternative. I would also go with your pickle approach (which I now also upvoted) but in case he/she wants to do something else with the data, it might be worth considering it. I should make this more clear in the text, thanks for the question!</span>
