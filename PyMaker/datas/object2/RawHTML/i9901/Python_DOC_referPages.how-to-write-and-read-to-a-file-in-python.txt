<div class="post-text" itemprop="text">
<p>Below is what my code looks like so far:</p>
<pre><code>restart = 'y'
while (True):
    sentence = input("What is your sentence?: ")
    sentence_split = sentence.split() 
    sentence2 = [0]
    print(sentence)
    for count, i in enumerate(sentence_split): 
        if sentence_split.count(i) &lt; 2:
            sentence2.append(max(sentence2) + 1)
        else:
            sentence2.append(sentence_split.index(i) +1)
    sentence2.remove(0)
    print(sentence2)
    outfile = open("testing.txt", "wt")
    outfile.write(sentence)
    outfile.close()
    print (outfile)
    restart = input("would you like restart the programme y/n?").lower()
    if (restart == "n"):
            print ("programme terminated")
            break
    elif (restart == "y"):
        pass
    else:
        print ("Please enter y or n")
</code></pre>
<p>I need to know what to do so that my programme opens a file, saves the sentence entered and the numbers that recreate the sentence and then be able print the file. (im guessing this is the read part). As you can probably tell, i know nothing about reading and writing to files, so please write your answer so a noob can understand. Also the one part of the code that is related to files is a complete stab in the dark and taken from different websites so don't think that i have knowledge on this. </p>
</div>
<div class="post-text" itemprop="text">
<p>Basically, you create a file object by opening it and then do read or write operation</p>
<p>To read a line from a file</p>
<pre><code>#open("filename","mode")
outfile = open("testing.txt", "r")
outfile.readline(sentence)
</code></pre>
<p>To read all lines from file</p>
<pre><code>for line in fileobject:
    print(line, end='')
</code></pre>
<p>To write a file using python</p>
<pre><code>outfile = open("testing.txt", "w")
outfile.write(sentence)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>to put it simple, to read a file in python, you need to "open" the file in read mode:</p>
<pre><code>f = open("testing.txt", "r")
</code></pre>
<p>The second argument "r" signifies that we open the file to read. After having the file object "f" the content of the file can be accessed by:</p>
<pre><code>content = f.read()
</code></pre>
<p>To write a file in python, you need to "open" the file in write mode ("w") or append mode ("a"). If you choose write mode, the old content in the file is lost. If you choose append mode, the new content will be written at the end of the file:</p>
<pre><code>f = open("testing.txt", "w")
</code></pre>
<p>To write a string s to that file, we use the write command:</p>
<pre><code>f.write(s)
</code></pre>
<p>In your case, it would probably something like:</p>
<pre><code>outfile = open("testing.txt", "a")
outfile.write(sentence)
outfile.close()

readfile = open("testing.txt", "r")
print (readfile.read())
readfile.close()
</code></pre>
<p>I would recommend follow the official documentation as pointed out by cricket_007 : <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files</a></p>
</div>
<span class="comment-copy">Don't take from random websites, use <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">the official tutorial</a></span>
<span class="comment-copy">Anyways, you probably want to open the files before the while loop, and close them afterwards.</span>
<span class="comment-copy">It seems that the OP is using Python 3.x, so using the context manager <code>with</code> would be a better option to open the file and close it.</span>
