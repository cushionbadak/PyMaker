<div class="post-text" itemprop="text">
<p>Given list:</p>
<pre><code>a = [["b", "a", 3], ["a", "b", 4], ["y", "a", 2], ["b", "a", "b"]]
</code></pre>
<p>I want to produce a 2D list of unique elements at index [1] and their count. Executing on list a would produce:</p>
<pre><code>[["a", 3], ["b", 1]]
</code></pre>
<p>I've gotten as far as writing this code:</p>
<pre><code>[(item[1], sum(x[1].count(item[1]) for x in a)) for item in a]
</code></pre>
<p>...however, it produces the list:</p>
<pre><code>[('a', 3), ('b', 1), ('a', 3), ('a', 3)]
</code></pre>
<p>I'd love to solve it using a one liner if possible :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could get a set from your code which would provide just unique entries</p>
<pre><code>a = [["b", "a", 3], ["a", "b", 4], ["y", "a", 2], ["b", "a", "b"]]
set([(item[1], sum(x[1].count(item[1]) for x in a)) for item in a])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your code is that you are looping over all sub-lists and preserve the count of the second item within the whole list which certainly would produce the duplicate result for same items. Instead, you can use <code>zip()</code> function to get the second column and then use <code>collections.Counter</code> to count the number of items within second column:</p>
<pre><code>In [3]: from collections import Counter

In [5]: Counter(zip(*a)[1]).items()
Out[5]: [('a', 3), ('b', 1)]
</code></pre>
<p>In python 3.X:</p>
<pre><code>z = zip(*a)
next(z)
Counter(next(z)).items()
[('a', 3), ('b', 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> combining with <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a>, you can get counts of items:</p>
<pre><code>&gt;&gt;&gt; a = [["b", "a", 3], ["a", "b", 4], ["y", "a", 2], ["b", "a", "b"]]
&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; Counter(item[1] for item in a)  # gen-expr to yields 2nd ([1]) items
Counter({'a': 3, 'b': 1})
</code></pre>
<p>To get result as a list of sequences:</p>
<pre><code>&gt;&gt;&gt; Counter(item[1] for item in a).most_common()
[('a', 3), ('b', 1)]
&gt;&gt;&gt; [list(x) for x in Counter(item[1] for item in a).most_common()]
[['a', 3], ['b', 1]]
</code></pre>
</div>
<span class="comment-copy"><code>set(your code)</code></span>
