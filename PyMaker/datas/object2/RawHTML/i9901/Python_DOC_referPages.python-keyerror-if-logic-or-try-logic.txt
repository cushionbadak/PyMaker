<div class="post-text" itemprop="text">
<p>I'm trying to loop through some JSON data to export to CSV and all is going well until I get to a portion of the data that I need to get certain field values where these fields do not always exist beneath "tags".</p>
<p><strong>I'm getting the error of:</strong></p>
<pre><code>for alarm in tag["alarmst"]:
        KeyError: 'alarmst'</code></pre>
<p>I believe from <a href="https://docs.python.org/3/library/exceptions.html#KeyError" rel="nofollow noreferrer">Built-in Exceptions</a> reading that this means the key/field just does not exist. </p>
<p>I read in <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">Errors and Exceptions</a> that I can put this logic in a <strong>try statement</strong> to say, if this key does not exist, don't give me the error and do something else or move onto the next set of records beneath "tag" where "alarmst" is and just dump that (and the other fields specified) to the file.</p>
<p>I'm having trouble figuring out how to tell this logic to stop giving me this error and to only use the <code>csv_file.writerow()</code> function with all the field values if only the "alarmst" exist. </p>
<p>Since I will be working with one file and processes before this Python process runs will get the "devs" and the "tags" to their own CSV files, I cannot parse the data and cut down on the for loops within the other for loops.</p>
<p>I'm not sure if the issue with the <code>if tag["alarmst"] in tag:</code> is due to there being so many for loops within others, or if I need to use a try statement somehow instead, or if I'm just not doing something else correctly since I'm new to Python at this level of coding but it seems to work for the need thus far.</p>
<p>I'm running this on Windows 10 OS if that makes any difference but I assume it doesn't.</p>
<h2>Starting Code:</h2>
<pre><code>import json
import csv

with open('C:\\folder\\dev\\TagAlarms.txt',"r") as file:
    data = json.load(file)

with open('C:\\folder\\dev\\TagAlarms.csv',"w",newline='') as file:
    csv_file = csv.writer(file)
    for dev in data["devs"]:
        for tag in dev["tags"]:
            for alarm in tag["alarmst"]:
                csv_file.writerow(alarm['dateStatus'],[alarm['dateStart'], alarm['status'], alarm['type']])
</code></pre>
<h2>If Code:</h2>
<pre><code>import json
import csv

with open('C:\\folder\\dev\\TagAlarms.txt',"r") as file:
    data = json.load(file)

with open('C:\\folder\\dev\\TagAlarms.csv',"w",newline='') as file:
    csv_file = csv.writer(file)
    for dev in data["devs"]:
        for tag in dev["tags"]:
            for alarm in tag["alarmst"]:
                if tag["alarmst"] in tag:
                    csv_file.writerow(alarm['dateStatus'],[alarm['dateStart'], alarm['status'], alarm['type']])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>tag["alarmst"]</code> is what throws the error. It means getting the value from <code>tag</code> associated with the key <code>"alarmst"</code> and there is no such key so it fails. <code>if tag["alarmst"] in tag</code> will throw the same error, and moreover you won't even reach that point if it's below <code>for alarm in tag["alarmst"]:</code>. What you want is:</p>
<pre><code>if "alarmst" in tag:
    for alarm in tag["alarmst"]:
</code></pre>
<p>But much nicer is:</p>
<pre><code>for alarm in tag.get("alarmst", []):
</code></pre>
<p><code>get</code> is similar to usual square bracket access but the second argument is a default if the key is not found. So if <code>"alarmst"</code> is not in the dictionary this will essentially be:</p>
<pre><code>for alarm in []:
</code></pre>
<p>which is just an empty loop that won't run at all.</p>
</div>
<span class="comment-copy">You have a typo: <code>alarmSt</code> should be <code>alarmst</code>?</span>
