<div class="post-text" itemprop="text">
<p>I need to get total space and used space of a SAN volume in Windows. There are too many volumes on the server to mount using the Windows letter mount points. Instead the server software mounts all available volumes in C:\Volumes path.</p>
<pre><code>wmic logicaldisk get volumename, size, freespace
</code></pre>
<p>is fast and works great, but it only lists the volumes mounted as Windows letters.</p>
<pre><code>dir \s \a C:\Volumes\SomeVolumeName
</code></pre>
<p>returns the information I need, but it's very slow as it recurses through all the files. I have hundreds of thousands of files on each volume.</p>
<pre><code>du C:\Volumes\SomeVolumeName
</code></pre>
<p>is slow for the same reason as the dir command.</p>
<p>Is there any other way to get fast stats on a volume from the Windows command line or even better from Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are looking for <code>psutil</code> </p>
<blockquote>
<p>psutil (python system and process utilities) is a cross-platform
  library for retrieving information on running processes and system
  utilization (CPU, memory, disks, network) in Python. It is useful
  mainly for system monitoring, profiling and limiting process resources
  and management of running processes. It implements many
  functionalities offered by command line tools such as: ps, top, lsof,
  netstat, ifconfig, who, df, kill, free, nice, ionice, iostat, iotop,
  uptime, pidof, tty, taskset, pmap. It currently supports Linux,
  Windows, OSX, Sun Solaris, FreeBSD, OpenBSD and NetBSD, both 32-bit
  and 64-bit architectures, with Python versions from 2.6 to 3.5 (users
  of Python 2.4 and 2.5 may use 2.1.3 version). PyPy is also known to
  work.</p>
</blockquote>
<p><a href="https://pythonhosted.org/psutil/" rel="nofollow noreferrer">https://pythonhosted.org/psutil/</a></p>
<p>And for you, particulary this part of the documentation : <a href="https://pythonhosted.org/psutil/#disks" rel="nofollow noreferrer">https://pythonhosted.org/psutil/#disks</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can get the requried data from the below script. Enter all the volumes in your system in the array $DriveLetter and  it doesn't take much time to execute   </p>
<pre><code>$DriveLetter="C,D"
$DriveLetters=$DriveLetter.Split(',')
foreach ($item in $DriveLetters)
{
$data=Get-PSDrive $item | Select-Object Used,Free
$UsedData=$data.Used
$FreeSPace=$data.Free
"Used Space in Drive $item : $UsedData"
"Free space in Drive $item : $FreeSPace"
}
</code></pre>
<p>Hope it HElps.</p>
</div>
<span class="comment-copy">This should give you all volumes: <code>wmic volume get Capacity, FreeSpace, Label, Name</code>.</span>
<span class="comment-copy">wmic works only with volumes that have a letter assigned. That doesn't work in my case. I have more volumes than the letters in the alphabet.</span>
<span class="comment-copy">It's using <code>volume</code>, not <code>logicaldisk</code>. It worked for me on a disk mounted in a folder without a drive letter. I wouldn't have suggested it otherwise. The <code>Name</code> field should be the folder where the volume is mounted.</span>
<span class="comment-copy">Sorry, I missed the "volume" argument in your comment. It's odd. It lists some of the volumes but not all.</span>
<span class="comment-copy">As noted in the docs, if you're using Python 3, then you can use <a href="https://docs.python.org/3/library/shutil.html#shutil.disk_usage" rel="nofollow noreferrer"><code>shutil.disk_usage</code></a>. This works with volume mountpoints on Windows.</span>
<span class="comment-copy"><code>psutil.disk_partitions</code> only lists volumes that have a DOS drive letter. That's disappointing.</span>
<span class="comment-copy">@eryksun you tried with <code>psutil.disk_partitions(all=True)</code> ?</span>
<span class="comment-copy">I think this will work perfectly in my script: psutil.disk_usage(someVolumePath). It's very fast too. Thanks.</span>
<span class="comment-copy">Yes, in the <a href="https://github.com/giampaolo/psutil/blob/release-5.0.0/psutil/_psutil_windows.c#L2434" rel="nofollow noreferrer">source</a> you can see that it only iterates over "logical" drives (i.e. volumes mounted with a DOS drive letter) and that <code>all=True</code> means to include all drive types.</span>
<span class="comment-copy">The volumes are mounted in subdirectories of <code>C:\Volumes</code>. They are not assigned DOS drive letters.</span>
<span class="comment-copy">PowerShell has <a href="https://technet.microsoft.com/en-us/library/hh848646" rel="nofollow noreferrer"><code>Get-Volume</code></a>, e.g. <code>foreach ($v in Get-Volume -FilePath C:\Volumes) {Write-Output ("Name: {0}`nSize: {1}`nFree: {2}`n" -f ($v.FileSystemLabel, $v.Size, $v.SizeRemaining))}</code>.</span>
<span class="comment-copy">My PS does not have Get-Volume. There is Get-WMIObject though, but it doesn't see all my volumes, kind of like wmic discussed above.</span>
