<div class="post-text" itemprop="text">
<p>I have to write a Python application to read a CSV input file (appsUsage.csv) and generate an output file counting the frequency of the apps usage per user. The first column of the input file contains user id (user_id) and the second column contains the name of the app (app_name).  From appsUsage.csv, I have to count the frequency of apps usage on individual user basis to generate app_Rank, and transform to a new data set named appsIndividualUsage.csv with the following columns: user_id; app_name; app_Rank.</p>
<p>For example if appsUsage.csv has following events</p>
<pre><code>a  facebook
a  facebook
a  linkedin
b  google
b  yahoo
b  yahoo
</code></pre>
<p>Then appsIndividualUsage.csv would be:</p>
<pre><code>a  facebook  2;
a  linkedin  1;
b  google  1;
b  yahoo  2;
</code></pre>
<p>Here is my code that I am struggling with :</p>
<pre><code>import csv 
with open("C:\\Users\\anne\\Desktop\\appsUsage.csv", mode='r') as f_in,
open("C:\\Users\\anne\\Desktop\\appsIndividualUsage.csv", mode='w', newline='')
as f_out:
        f_reader = csv.reader(f_in, dialect=csv.excel_tab)
        f_writer = csv.writer(f_out, dialect=csv.excel_tab)
         for line in reader:
             if line is equal then write it in writer and add a row of frequency
</code></pre>
<p>I totally don't know how to write the last line of my code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python provides a <a href="https://docs.python.org/3/library/collections.html?highlight=counter#collections.Counter" rel="nofollow noreferrer"><code>Counter()</code></a> for doing this. It is a dictionary like object which can be used to count keys added to it. In this case the key for the dictionary is a combination of the user's name and the application.</p>
<p>First read all of the entries in from the input CSV file and count them. Then write the sorted counts to the output CSV file as follows:</p>
<pre><code>from collections import Counter    
import csv 

usage_counts = Counter()

with open('appsUsage.csv') as f_in:
    f_reader = csv.reader(f_in, dialect=csv.excel_tab)

    for user, application in f_reader:
        usage_counts[(user, application)] += 1

with open("appsIndividualUsage.csv", mode='w', newline='') as f_out:
    f_writer = csv.writer(f_out, dialect=csv.excel_tab)

    for (user, application), count in sorted(usage_counts.items(), key=lambda x: (x[0], x[1])):
        f_writer.writerow([user, application, count])
</code></pre>
<p>This would give you a CSV file as follows:</p>
<pre class="lang-none prettyprint-override"><code>a   facebook    2
a   linkedin    1
b   google  1
b   yahoo   2
</code></pre>
<p>If you are not allowed to use a <code>Counter()</code>, then you would need to use a normal dictionary, and add 1 to any existing key.</p>
</div>
<span class="comment-copy">How about Parsing data from <code>appsUsage.csv</code> first store the required data and then create <code>appsIndividualUsage.csv</code> and writing data in one go.</span>
