<div class="post-text" itemprop="text">
<p>My goal is to provide user with ability to dynamicaly choose some <code>strategy</code>, that he can provide as python file in command line. <em>(Ex: myApp -s /some_path/SomeStrategy.py)</em> strategy with proper interface and all other OOP stuff.</p>
<p>So, is there any ability to implement this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Import a <code>module</code>. The name argument specifies what module to import in absolute or relative terms </p>
<blockquote>
<p>(e.g. either pkg.mod or ..mod).</p>
</blockquote>
<p>If the name is specified in relative terms, then the package argument must be set to the name of the package which is to act as the anchor for resolving the package name </p>
<blockquote>
<p>(e.g. import_module('..mod', 'pkg.subpkg') will import pkg.mod).</p>
</blockquote>
<pre><code>importlib.import_module('os.path')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Say in all your code you interact with a <code>Strategy</code> class, but you never implement it. I think a <code>load</code> method as following should do the trick:</p>
<pre><code>def load(class) :
    global Strategy
    Strategy = class
</code></pre>
<p>This way, you just make the variable <code>Strategy</code> point to another class, so in all the code, <code>Strategy</code> refers to the class that the user loaded.
<p>
Of course a better way to do this would to have a <code>Application</code> class, with a <code>strategyClass</code> attribute, but the same idea applies.
<p>
If you want to load it from the command file, it becomes a little more tricky, but from Python's point of view, the idea stays the same.</p>
</p></p></div>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow noreferrer"><code>importlib</code></a>. Use the name of the class <code>SomeStrategy</code> as a command line argument, import it using <code>importlib</code>.</span>
