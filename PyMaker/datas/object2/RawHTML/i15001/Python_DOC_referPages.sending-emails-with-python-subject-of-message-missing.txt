<div class="post-text" itemprop="text">
<p>all. I have encountered a bit of a problem while trying to send emails with python's <code>email</code> package along with <code>smtplib</code>. I have set up a function that send an email and it works well, with the exception that the email always comes without the subject. I am not new to python, but I am new to using it for internet-related things such as this one. I have set up the following from several answer in this forum as well as the examples in the <a href="https://docs.python.org/2/library/email-examples.html" rel="nofollow">documentation</a>.</p>
<pre><code>import smtplib
from os.path import basename
from email import encoders
from email.mime.application import MIMEApplication
from email.mime.base import MIMEBase
from email.mime.audio import MIMEAudio
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import COMMASPACE, formatdate
def send_mail(send_from, send_to, subject, text, files=None, server="smtp.gmail.com"):
    import mimetypes
    assert isinstance(send_to, list)
    msg = MIMEMultipart(From=send_from, To=COMMASPACE.join(send_to), Date=formatdate(localtime=True), Subject=subject)
    msg.attach(MIMEText(text))
    for f in files or []:
            print f
            ctype,encoding=mimetypes.guess_type(f)
            if ctype is None or encoding is not None:
                    ctype = 'application/octet-stream'
            maintype, subtype = ctype.split('/', 1)
            if maintype == 'text':
                    fp = open(f)
                    msg = MIMEText(fp.read(), _subtype=subtype)
                    fp.close()
            elif maintype == 'image':
                    fp = open(f, 'rb')
                    msg = MIMEImage(fp.read(), _subtype=subtype)
                    fp.close()
            elif maintype == 'audio':
                    fp = open(f, 'rb')
                    msg = MIMEAudio(fp.read(), _subtype=subtype)
                    fp.close()
            else:
                    fp = open(f, 'rb')
                    msg = MIMEBase(maintype, subtype)
                    msg.set_payload(fp.read())
                    fp.close()
                    encoders.encode_base64(msg)
            msg.add_header('Content-Disposition', 'attachment', filename=basename(f))
    smtp = smtplib.SMTP(server)
    smtp.starttls()
    usrname=send_from
    pwd=raw_input("Type your password:")
    smtp.login(usrname,pwd)
    smtp.sendmail(send_from, send_to, msg.as_string())
    smtp.close()
</code></pre>
<p>Calling the function as <code>send_mail('john@doe.com',['john@doe.com'],'This is the subject','Hello, World!')</code> results in an email sent correctly but without a subject.</p>
<p>The output with or without files is the same. Also, reading the docs also didn't help me.</p>
<p>I appreciate any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of passing subject as an argument to MIMEMultipart, try assigning the value to msg:</p>
<p><code>msg['Subject'] = subject</code></p>
<p>Great examples in the docs: <a href="https://docs.python.org/3/library/email-examples.html" rel="nofollow">https://docs.python.org/3/library/email-examples.html</a></p>
</div>
<span class="comment-copy">I had tried that and didn't work at first. Sorry I forgot to mention that in the message. However, since you said it I tried again and it worked. I realized that the difference was that I had only added your line to the code, therefore I was setting the subject in the first call to <code>MIMEMultipart</code> and then again by doing <code>msg['Subject'] = subject</code>, and it didn't work. Removing the <code>Subject=subject</code> option from my <code>MIMEMultipart</code> call and then adding your line, however, did work. Do you know why that happens?</span>
<span class="comment-copy">MIMEMultipart subclasses the Message class. That class has a method called <a href="https://docs.python.org/3/library/email.message.html#email.message.Message.keys" rel="nofollow noreferrer">keys</a> that, when called, displays the headers for the message. I believe subject must be added as a header for the message, which you do by assigning the value of the subject to the "Subject" key as shown above.</span>
