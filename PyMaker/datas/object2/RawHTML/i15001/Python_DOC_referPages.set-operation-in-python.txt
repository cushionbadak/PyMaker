<div class="post-text" itemprop="text">
<p>I have a two list of objects say example </p>
<pre><code>L1 = [2,3,4]
L2 = [1,2]
</code></pre>
<p>i want to have two different list. </p>
<p>1) matching items 
2) not matching items </p>
<p>I am able to get the matching element #1 like below</p>
<pre><code>match = [x for x in L1 if x in L2]
</code></pre>
<p>but how can i get the not matching elements in a efficient way. </p>
<p>I can use not in but is there any other way of doing this. </p>
<p>Thanks ,</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the various <code>set</code> methods such as <a href="https://docs.python.org/3/library/stdtypes.html#set.intersection" rel="nofollow"><code>intersection</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#set.https://docs.python.org/3/library/stdtypes.html#set.difference" rel="nofollow"><code>difference</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#set.symmetric_difference" rel="nofollow"><code>symmetric_difference</code></a>, and <a href="https://docs.python.org/3/library/stdtypes.html#set.union" rel="nofollow"><code>union</code></a></p>
<pre><code>&gt;&gt;&gt; L1 = [2,3,4]
&gt;&gt;&gt; L2 = [1,2]
&gt;&gt;&gt; set(L1).intersection(L2)
{2}
&gt;&gt;&gt; set(L1).difference(L2)
{3, 4}
&gt;&gt;&gt; set(L1).symmetric_difference(L2)
{1, 3, 4}
&gt;&gt;&gt; set(L1).union(L2)
{1, 2, 3, 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get it by using <code>match</code>:</p>
<pre><code>no_match = [x for x in L1 + L2 if x not in match]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a possibility:</p>
<pre><code>not_match=[x for x in L1 if x not in L2] + [x for x in L2 if x not in L1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>set is best way to get matching and non matching items.</li>
</ol>
<p>By List compression:</p>
<pre><code>&gt;&gt;&gt; L1 = [2,3,4]
&gt;&gt;&gt; L2 = [1,2]
&gt;&gt;&gt; [i for i in L1 if i not in  L2]
[3, 4]
&gt;&gt;&gt; [i for i in L1 if i in L2]
[2]
&gt;&gt;&gt; [i for x in L2 if i not in L1]
[1]
&gt;&gt;&gt; [i for i in L1 if i not in  L2] +  [i for i in L2 if i not in L1]
[3, 4, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you can take advantage of the <a href="https://docs.python.org/3.7/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">built-in type <code>set</code></a> which basically has unordered distinct elements. I also encourage you to try the shorthand notation to perform the operations <code>union</code>, <code>intersection</code>, and <code>difference</code>.</p>
<pre><code>&gt;&gt;&gt; s1 = set(L1)
&gt;&gt;&gt; s2 = set(L2)
&gt;&gt;&gt; s1 | s2 # union
{1, 2, 3, 4}
&gt;&gt;&gt; s1 &amp; s2 # intersection
{2}
&gt;&gt;&gt; s1 - s2 # difference
{3, 4}
&gt;&gt;&gt; s1 ^ s2 # symmetric difference
{1, 3, 4}
</code></pre>
<h2>A refresher of set operations from a math perspective</h2>
<p>Suppose <code>A</code> and <code>B</code> are sets.</p>
<ul>
<li>The <strong>union</strong> of A and B is the set <code>A∪B = {x: x ∈ A or x ∈ B}</code></li>
<li>The <strong>intersection</strong> of A and B is the set <code>A∩B = {x: x ∈ A and x ∈ B}</code></li>
<li>The <strong>difference</strong> of A and B is the set <code>A-B = {x: x ∈ A and x ∉ B}</code></li>
<li>The symmetric difference of A and B is the set <code>A∆B = A∪B - A∩B</code></li>
</ul>
</div>
<span class="comment-copy">does order matter?</span>
<span class="comment-copy">@PadraicCunningham no. I want just an efficient way of doing this</span>
<span class="comment-copy">Ahhh, you saved me. I forgot this ...:(</span>
<span class="comment-copy">Is there a way to get both match and not match in a single iteration meaning without using two loops like,   match , not_match = [something]</span>
<span class="comment-copy">@Backtrack See <a href="https://stackoverflow.com/questions/949098/python-split-a-list-based-on-a-condition">here</a></span>
