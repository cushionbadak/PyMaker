<div class="post-text" itemprop="text">
<p>I have a folder with .csv files all the files have the same ids but different contet, like this:</p>
<p>File one:</p>
<pre><code>id, content
jdhfs_SDGSD_9403, bla bla bla bla
aadaaSDFDS__ASdas_asad_342, bla bla
...
asdkjASDAS_asdasSFSF_sdf, bla bla
</code></pre>
<p>File two:</p>
<pre><code>id, content
jdhfs_SDGSD_9403, string string string
aadaaSDFDS__ASdas_asad_342, string string string
...
asdkjASDAS_asdasSFSF_sdf, string string string
</code></pre>
<p>I would like to leave the id column but merge in one new file the content, something like this(i.e. generate a new file):</p>
<pre><code>id, content
jdhfs_SDGSD_9403, bla bla bla bla string string string
aadaaSDFDS__ASdas_asad_342, bla bla string string string
...
asdkjASDAS_asdasSFSF_sdf, bla bla string string string
</code></pre>
<p>This is what I tried:</p>
<pre><code>from itertools import izip_longest
with open('path/file1.csv', 'w') as res, \
        open('/path/file1.csv') as f1,\
        open('path/file1.csv') as f2:
    for line1, line2 in izip_longest(f1, f2, fillvalue=""):
        res.write("{} {}".format(line1.rstrip(), line2))
</code></pre>
<p>The problem with this is that is merging everthing in one line. Any idea of how to do this in a more pythonic way?.</p>
<p>Edit:</p>
<pre><code>import pandas as pd

df1= pd.read_csv('path/file1.csv')
df2=pd.read_csv('path/file2.csv')    

new_df = pd.concat([df1, df2], axis=1)
print new_df


new_df.to_csv('/path/new.csv')
</code></pre>
<p>Then the header was merged like this:</p>
<p><code>,id,content,id,content</code> </p>
<p>And the content like this:</p>
<p><code>0jdhfs_SDGSD_9403, bla bla bla bla jdhfs_SDGSD_9403, string string string</code>. </p>
<p>How can I get something like this?:</p>
<p><code>jdhfs_SDGSD_9403, bla bla bla bla string string string</code></p>
<p>Without the index number of the dataframe?.</p>
</div>
<div class="post-text" itemprop="text">
<p>read the csvs's in using pd.read_csv(FILE)</p>
<p>Then do this:</p>
<pre><code>import pandas as pd
pd.concat([df1, df2], axis=1)
</code></pre>
<p>Or merge them (pd.merge())</p>
<p>See this question:</p>
<p><a href="https://stackoverflow.com/questions/28773683/combine-two-pandas-dataframes-with-the-same-index/28773733#comment45827623_28773733">Combine two Pandas dataframes with the same index</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> standard python module</a></p>
<p>i.e.</p>
<pre><code>import csv

with open(filename1) as file1, open(filename2) as file2, open(newname, "w") as newfile:
    csv1 = csv.reader(file1)
    csv2 = csv.reader(file2)
    newcsv = csv.writer(newfile)

    header = next(csv1)
    next(csv2) # Skip the header

    newcsv.writerow(header)

    for row1, row2 in zip(csv1, csv2):
        id, content1 = row1
        id, content2 = row2
        newcsv.writerow((id, " ".join((content1, content2))))
</code></pre>
</div>
<span class="comment-copy">Thanks for the help. Do pandas can generate a new file?.</span>
<span class="comment-copy">@johndoe  YOURDF.to_csv('filename.csv')</span>
<span class="comment-copy">Thanks for the support, any idea of how to remove the dataframe's index number from the new file?.</span>
<span class="comment-copy">@johndoe look into the reset_index and set_index methods.</span>
<span class="comment-copy">I tried this: <code>new_df = pd.concat([df1['content'], df2['content']], axis=1)  new_df.reset_index(drop=True)  new_df['content'].to_csv('path/new.csv') </code> but the index number still in the new file thanks for the feedback!</span>
<span class="comment-copy">I got this:`   newcsv.write(header) AttributeError: '_csv.writer' object has no attribute 'write' ` thanks for the help.`</span>
<span class="comment-copy">@johndoe That should be writerow, sorry.</span>
