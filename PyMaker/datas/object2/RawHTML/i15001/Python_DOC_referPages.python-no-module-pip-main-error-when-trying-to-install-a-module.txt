<div class="post-text" itemprop="text">
<p>I am getting the following error on my Raspberry Pi: <code>No module named pip__main__; 'pip' is a package and cannot be directly executed</code></p>
<p>When I type in to the terminal: <code>sudo python3 -m pip install mp3play</code></p>
<p>What is causing this and how can I fix it so that I can install the module <code>mp3play</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pip is not only a standalone executable, it is also a python module. </p>
<p>In fact in the python docs it directly recommends using the <code>-m</code> syntax for installing a package using pip. </p>
<p>See <a href="https://docs.python.org/3.5/installing/index.html#basic-usage" rel="nofollow noreferrer">https://docs.python.org/3.5/installing/index.html#basic-usage</a>:</p>
<blockquote>
<p>The standard packaging tools are all designed to be used from the command line.</p>
<p>The following command will install the latest version of a module and its dependencies from the Python Packaging Index:</p>
<pre><code>python -m pip install SomePackage
</code></pre>
</blockquote>
<p>My guess would have been that your system's <code>pip</code> (the executable) was being shadowed by the python2 version of the <code>pip</code> executable. But it sounds like you don't have pip (the module) installed such that your python3 executable can find it, so you may need to reinstall pip (the module) specifically. </p>
<p>For that use <code>python3 -m ensurepip</code>  (<a href="https://docs.python.org/3/library/ensurepip.html#command-line-interface" rel="nofollow noreferrer">docs for ensurepip</a>) which will install pip if it is not present from the persepctive of your python3 interpreter.</p>
<p>The other issue could be that it's finding a file, executable or directory called <code>pip</code> in your current directory, and it is trying to treat that <code>pip</code> as a module, and it is not in fact a module.</p>
<p>If it's not that I'm not sure. But it is definitely not because pip is not a module. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>pip</code> is a standalone executable. If <code>pip</code> if in your path, you can just execute</p>
<pre><code>pip install mp3play
</code></pre>
<p>If <code>pip</code> is not in your path, then you need to navigate to the directory where <code>pip</code> is located and then execute the above.</p>
<p>If needed, add <code>sudo</code> to the command.</p>
<p>The precise error you are encountered is due to <code>pip</code> being a package, but <code>-m</code> is used for executing modules.</p>
<p>EDIT: <code>pip</code> also comes with several helpful alias functions that point to different Python installs. In general, <code>pip</code> points to your main Python install (the one you enter when simply executing <code>python</code>), <code>pipV</code> where <code>V</code> is a number such as <code>2</code> or <code>3</code> adds the install to your primary Python of version <code>V</code> (<code>pip3</code> adds to your <code>python3</code> environment). Finally there is <code>pipV.S</code> where <code>V</code> is the same as before and <code>S</code> is the subversion. For instance <code>pip3.4</code> installs for Python 3.4.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem.  I found that an old pip directory was left over from a python 2.7 install, at <code>C:\Users\my-username\pip</code>.  This was causing python to try to load pip from there and fail.</p>
<p>I removed that directory and my error has just become <code>No module named pip</code>.</p>
<p>I haven't solved the problem yet, but I'm working through it at <a href="http://bugs.python.org/issue29586" rel="nofollow noreferrer">http://bugs.python.org/issue29586</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same issue and none of the previous answers solved it for me.</p>
<p>The error appeared when I uninstalled and reinstalled python to my PC. As it appears the previous existing version of pip wasn't completely removed and when I was trying to import it with <code>python -m pip install package</code> it was actually trying to call the previous version.</p>
<p>To solve it first <strong>manually delete</strong> the pip folders in the following locations:</p>
<pre><code>C:\Users\username\pip
C:\Users\username\AppData\Local\pip
C:\Users\username\AppData\Local\Programs\Python\Python**\lib\site-packages\pip***
C:\Python**\pip
</code></pre>
<p>Then download <a href="https://bootstrap.pypa.io/get-pip.py" rel="nofollow noreferrer">get-pip.py</a>.</p>
<p>Finally, navigate to the folder where you downloaded it and run:</p>
<pre><code>python get-pip.py
</code></pre>
<p>This procedure should reinstall pip and fix the issue.</p>
</div>
<span class="comment-copy">Seems like command from God: to save people from broken pip problems.</span>
<span class="comment-copy">I have tried <code>pip install mp3play</code> and I am told that the requirement is already satisfied for Python 2.7, however the reason I was doing <code>sudo python3 -m pip install mp3play</code> is because I want to install it specifically for Python 3.x.</span>
<span class="comment-copy">@TheHarpoon Added an edit explaining about <code>pip</code> versions. Hope it helps. :)</span>
<span class="comment-copy">sudo: pip2: command not found</span>
<span class="comment-copy">@Sven You might be running in an environment where <code>pip</code> is not installed by default, or you might not have Python2. Try <code>which pip</code> and see if that gives you any results. For me, <code>pip</code> is located at <code>/usr/local/bin/pip</code>, so you might also try checking there.</span>
<span class="comment-copy">I am running in ubuntu12.04 and in /usr/local/bib/pip python3 is used. I solved the issue by editing the file, till the next update will come in. Very annoying. I think I will switch to virtualenv soon.</span>
