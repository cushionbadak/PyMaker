<div class="post-text" itemprop="text">
<p>is there a build-in equivalent of such function in python:</p>
<pre><code>def foo(a_func,a_list):
    if len(a_list)==2:
        return a_func(*[a_list])
    else:
        return a_func(a_list[0],foo(a_func,a_list[0:]))
</code></pre>
<p>in other words <code>foo(lambda x,y:x+y,[1,2,3,4])</code> would add <code>1+2+3+4</code>
and <code>foo(lambda x,y:x-y,[1,2,3,4])</code> would do <code>((1-2)-3)-4</code> etc.</p>
<p>And i know you can make it faster and prevent stack overflow ( :D ) but i think i remember such function but have no idea what the name is and dunno what to google.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are describing the <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow"><code>reduce()</code> function</a>; in Python 3 it has been moved to the <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow"><code>functools</code> module</a>:</p>
<blockquote>
<p>Apply <em>function</em> of two arguments cumulatively to the items of sequence, from left to right, so as to reduce the sequence to a single value. For example, <code>reduce(lambda x, y: x+y, [1, 2, 3, 4, 5])</code> calculates <code>((((1+2)+3)+4)+5)</code>. </p>
</blockquote>
<p>You can of course use any callable; the <a href="https://docs.python.org/3/library/operator.html" rel="nofollow"><code>operator</code> module</a> offers several handy options:</p>
<pre><code>&gt;&gt;&gt; from functools import reduce
&gt;&gt;&gt; import operator
&gt;&gt;&gt; reduce(operator.add, [1,2,3,4])
10
&gt;&gt;&gt; reduce(operator.sub, [1,2,3,4])
-8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Its what that <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow"><code>reduce</code></a> function is for!</p>
<blockquote>
<p>Apply function of two arguments cumulatively to the items of iterable, from left to right, so as to reduce the iterable to a single value</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you're looking for <a href="https://docs.python.org/2/library/functools.html#functools.reduce" rel="nofollow">https://docs.python.org/2/library/functools.html#functools.reduce</a> (AKA <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow">https://docs.python.org/2/library/functions.html#reduce</a> in Python 2), assuming there's a bug in your code and by <code>a_list[0:]</code> you actually mean <code>a_list[1:]</code> (otherwise you're looking for a never-ending loop:-).</p>
</div>
<span class="comment-copy">ah oc. :) thank you</span>
<span class="comment-copy">@Kazz you're welcome!</span>
