<div class="post-text" itemprop="text">
<p>I have a library, which similar to this sample code:</p>
<pre><code>class PlayBook(object):
    def __init__(self, playbook= None, host_list= None, module_path= None,):
        print "playbook %s host_list %s module_path %s" % (playbook,host_list,module_path)
</code></pre>
<p>I need chose named parameters, that I will pass to function:
If I try to do this:</p>
<pre><code>a=1
b=2
c=3

PlayBook(
    if a&gt;1:
        module_path=a,
        playbook=b,
    elif b&lt;1:
        playbook=b,
    else:    
        host_list=c,
        playbook="playbook",

)
</code></pre>
<p>I got:</p>
<pre><code>    if a&gt;1:
     ^
SyntaxError: invalid syntax
</code></pre>
<p>Question: how to choose named parameters and pass them to function?</p>
<p>PS:
I know that I can do like this:</p>
<pre><code>if a&gt;1:
    PlayBook(module_path=a,
        playbook=b,)
elif b&lt;1:
    PlayBook(  playbook=b,)
else:    
    PlayBook( host_list=c,
        playbook="playbook",)
</code></pre>
<p>Sorry for my English</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd collect the parameters into <code>dict</code> and <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">unpack</a> it afterwards:</p>
<pre><code>if a &gt; 1:
    params = dict(module_path=a, playbook=b)
elif b &lt; 1:
    params = dict(playbook=b)
else:
    params = dict(host_list=c, playbook="playbook")

PlayBook(**params) # ** for keyword arguments
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, you can't do that. Move the instantiation into each clause.</p>
<pre><code>if a&gt;1:
  PlayBook(
    module_path=a,
    playbook=b,
  )
elif b&lt;1:
  PlayBook(
    playbook=b,
  )
else:    
  PlayBook(
    host_list=c,
    playbook="playbook",
  )
)
</code></pre>
</div>
<span class="comment-copy">You can't do that.</span>
<span class="comment-copy">And I'd even link right to the doc just for the record : <a href="https://docs.python.org/3.4/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">docs.python.org/3.4/tutorial/â€¦</a></span>
<span class="comment-copy">@d6bels yep, added the link. Thanks.</span>
