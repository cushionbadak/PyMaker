<div class="post-text" itemprop="text">
<p>I'm new to Python and am really liking the code. I am trying to recreate a human population simulator that I saw my friend make in Python. It's REALLY basic and is currently only using 3 variables. Here is my code:</p>
<pre><code>pop = 7000000000
int = 5

#Clear
def cls():
    print "\n" * 80

#Main script
def MS():
    cls()
    print "Population =", pop, "Intelligence =", int
    print ""
    print "Do You:"
    print "A) Increase Population"
    print "B) Increase Intelligence"
    choice = raw_input("Option:")
    if choice == "a" :
        print "option a"
    elif choice == "A" :
        print "option A"
    elif choice == "b" :
        intel()
    elif choice == "B" :
        intel()

#Increase Intelligence
def intel():
    int = int + 3

MS()
</code></pre>
<p>I am learning Python at Code-Academy and am testing my code with their labs using Python version 2.7.2 . Int is my intelligence variable and intel my intelligence increase function name. I want to know why I am getting the "local variable 'int' referenced before assignment" Error when I call the int() function and how to fix it and be able to use my variables in multiple functions. I just want to modify the int variable and increase it by three, and do similar in another function. Bear in mind that im only 15, so try and simplify you answer so I understand, because I find a lot of stuff confusing when I searched up solutions. I haven't yet created option A function but it will have similar properties.</p>
<p>EDIT: Thank you guys for your fast responses. I understand now. It really helped!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>pop</code> and <code>int</code> and assigned outside any function and are called <em>global variables</em>.  Variables assigned inside functions are called <em>local variables</em>.  To assign to a global variable inside a function, it must be declared global first:</p>
<pre><code>def intel():
    global int
    int = int + 3
</code></pre>
<p>Note that <code>int</code> is the name of a type in Python, and shouldn't be used as a variable name:  This will cause problems later:</p>
<pre><code>&gt;&gt;&gt; int
&lt;type 'int'&gt;
&gt;&gt;&gt; int(5.1)      # this works
5
&gt;&gt;&gt; int=1
&gt;&gt;&gt; int(5.1)      # now it is broken
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'int' object is not callable
</code></pre>
<p>This is called <em>shadowing builtins</em> and should be avoided.  Use a different variable name.</p>
</div>
<div class="post-text" itemprop="text">
<p>In <a href="https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python" rel="nofollow">Python</a> , variables that are only referenced inside a function are implicitly global. If a variable is assigned a new value anywhere within the function’s body, it’s assumed to be a local. If a variable is ever assigned a new value inside the function, the variable is implicitly local, and you need to explicitly declare it as ‘global’.</p>
<p>Modify your intel() as shown below</p>
<pre><code>def intel():
    global int
    int = int + 3
</code></pre>
</div>
<span class="comment-copy">Please don't shadow the name <code>int</code>.  Use a different name for that variable.  It'll make things safer.</span>
<span class="comment-copy">Okay, and say for example, I create a variable inside a function, how would I access that variable a) in other functions? b) when I'm not inside a function? I' now trying to create a reset feature, that gets my variables back to their original by putting them in a function. But I am getting more errors.</span>
