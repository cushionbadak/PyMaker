<div class="post-text" itemprop="text">
<p>I have a file which contains configurations. I need to find a pattern to match multiple lines in the configuration file.</p>
<p>Basically, I am looking for the following types of line:</p>
<pre><code>class-map match-any virtualserver1
     description virtualserver1.aaa.com
     2 match virtual-address 172.16.211.153 tcp eq https
     3 match virtual-address 172.16.211.153 tcp eq https
class-map match-any virtual-server2
     2 match virtual-address 172.16.211.154 tcp eq http
class-map match-any vip-helloworld
     description vs-yyy.com
class-map match-any vip-myvirtualServer
</code></pre>
<p>In file the block is as:</p>
<pre><code>class-map match-any virtualserver1
  description virtualserver1.aaa.com
  2 match virtual-address 172.16.211.153 tcp eq https
  3 match virtual-address 172.16.211.153 tcp eq https
</code></pre>
<p>Later on, I need to get the name of virtual server: virtualserver1
description (virtualserver1.aaa.com) if present
and the multiple virtual-addresses and port (172.16.211.153 and https) if present.</p>
<p>I tried various combinations trying to match the blocks but was not successful.</p>
<pre><code>import re
fh = open('config_file.txt')
fileData = fh.read()
vipData = re.findall('^class-map match-.*\n.+', fileData,re.MULTILINE)
finalList = sorted(set(vipData))
i = 1
for data in finalList:
    print str(i) +" "+ str(data)
    i = i + 1
</code></pre>
<p>This gives me only first line and second line as output for all the configurations present.</p>
<p>What pattern should I use to match all blocks?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, <strong>in case your blocks can have no more than 2 'match'es</strong>, you can try using this regex:</p>
<pre><code>class\-map\s+match\-any\s+(?P&lt;servername&gt;[\w-]+)(?:\s*description\s*(?P&lt;description&gt;[\w\.-]+))?(?:\s*\d+\s+match\s*virtual-address\s*(?P&lt;IP&gt;\d+\.\d+\.\d+\.\d+)\s+[^\r\n]*(?P&lt;HTTP1&gt;https?))?(?:\s*\d+\s+match\s*virtual-address\s*(?P&lt;IP2&gt;\d+\.\d+\.\d+\.\d+)\s+[^\r\n]*(?P&lt;HTTP2&gt;https?))?
</code></pre>
<p>These named groups will hold corresponding data:</p>
<pre><code>servername
description
IP
HTTP1
HTTP2
</code></pre>
<p>See <a href="https://regex101.com/r/uN8sB9/1" rel="nofollow">demo here</a>.</p>
<pre><code>import re
p = re.compile(ur'class\-map\s+match\-any\s+(?P&lt;servername&gt;[\w-]+)(?:\s*description\s*(?P&lt;description&gt;[\w\.-]+))?(?:\s*\d+\s+match\s*virtual-address\s*(?P&lt;IP&gt;\d+\.\d+\.\d+\.\d+)\s+[^\r\n]*(?P&lt;HTTP1&gt;https?))?(?:\s*\d+\s+match\s*virtual-address\s*(?P&lt;IP2&gt;\d+\.\d+\.\d+\.\d+)\s+[^\r\n]*(?P&lt;HTTP2&gt;https?))?', re.MULTILINE | re.DOTALL)
str = u"YOUR_STRING"

re.findall(p, str)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>re.findall(r'(?&lt;=class-map match-any).*?(?=class-map match-any|$)', my_str, re.DOTALL)
</code></pre>
<p>Regex <a href="https://docs.python.org/3/library/re.html" rel="nofollow">documentation</a>: </p>
<p><code>(?=...)</code> matches if <code>...</code> matches next, but <strong>doesnâ€™t consume</strong> any of the string. This is called a lookahead assertion.</p>
<p><code>(?&lt;=...)</code> matches if the current position in the string is preceded by a match for <code>...</code> that ends at the current position. This is called a positive lookbehind assertion. </p>
<p><code>$</code> is used so that last match is captured as well. </p>
</div>
<span class="comment-copy">You can't do this in one go with a regular expression because it's not a programming language and has no concept of loops and so no ability to capture the same sequence more than once. Instead you need to write your loop in Python and capture one block at a time. Also, because you want to capture an unspecified number of IP addresses, you will need a second regex to extract those in a Python loop.</span>
<span class="comment-copy">@Arkanon Capture of all blocks with a single pass is possible.</span>
