<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26342769/meaning-of-with-statement-without-as-keyword">Meaning of “with” statement without “as” keyword</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I learnt recently the 'with' statement in python and its usage, mainly from the article <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow">Understanding Python's "with" statement</a> and the <a href="https://docs.python.org/2/reference/compound_stmts.html#with" rel="nofollow">official documentation for with statement</a>.</p>
<p>The most used example is understandable for me</p>
<pre><code>with open("x.txt") as f:
    data = f.read()
    do something with data
</code></pre>
<p>ok so we open the file <code>x.txt</code>, we perform some tasks with it and it is automatically closed. The <code>f</code> variable is used to read in the file and do other tasks.</p>
<p>But in the official documentation, the target variable after the expression is optional:</p>
<pre><code>with_stmt ::=  "with" with_item ("," with_item)* ":" suite
with_item ::=  expression ["as" target]
</code></pre>
<p>I didn't find any example of with statement used without a target variable. Is there cases where this variable is not necessary?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes there are, you can find a couple of them in this answer :   <a href="https://stackoverflow.com/questions/3012488/what-is-the-python-with-statement-designed-for">What is the python "with" statement designed for?</a></p>
<p>The most straightforward I can think of is the thread lock (also listed in the previous link):</p>
<pre><code>lock = threading.Lock()
with lock:
    # Critical section of code
</code></pre>
<p>For the record I'd also quote <a href="https://docs.python.org/3.4/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer">the <code>with</code> doc</a> :</p>
<blockquote>
<p>The with statement is used to wrap the execution of a block with methods [...]. This allows common try...except...finally usage patterns to be encapsulated for convenient reuse.</p>
</blockquote>
<p>As you don't always need a variable in <code>try...except...finally</code>, you do not absolutely need a target variable in a <code>with</code> statement.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from threading import Lock

lock = Lock()

with lock:
    # access critical data

# continue
</code></pre>
<p>hope it helps.</p>
</div>
<span class="comment-copy">multiprocessing.Lock is an example <a href="http://eli.thegreenplace.net/2012/01/04/shared-counter-with-pythons-multiprocessing" rel="nofollow noreferrer">eli.thegreenplace.net/2012/01/04/…</a></span>
<span class="comment-copy">Anecdote: I once wrote a <code>with silenced_output():</code> statement, which redirected all <code>stdout</code> messages to dev/null. <code>with silenced_output() as x:</code> wouldn't make much sense, because I didn't need to do anything with x.</span>
<span class="comment-copy">See also <a href="https://docs.python.org/3/library/contextlib.html#contextlib.suppress" rel="nofollow noreferrer"><code>contextlib.suppress</code></a>.</span>
<span class="comment-copy">Ok, I didn't noticed that this question have already been answerd <a href="http://stackoverflow.com/a/26342829/1887976">here</a>. Sorry about that</span>
