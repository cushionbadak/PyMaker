<div class="post-text" itemprop="text">
<p>I would like to execute the MySQL query <code>source FileName.sql</code> in a Python script on Linux.</p>
<p>I am able to execute other queries like <code>SELECT * FROM table_name</code> but this one is giving an error. I am executing this on a Linux server with a MySQL database using Python. The frontend I am using is Putty.</p>
<p>The Python script I have used is:</p>
<pre><code>import MySQLdb
db = MySQLdb.connect("hostname","username","pswrd","dbname")
cursor = db.cursor()
cursor.execute("source FileName.sql")
db.close()
</code></pre>
<p>How can I execute the query <code>source FileName.sql</code> on the location where this file-&gt; <code>FileName.sql</code> is located?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>source</code> is not a SQL command. It's a MySQL CLI command, it only exists in the console application <code>mysql</code> (and wherever else implemented). All it does is to read the contents of FileName.sql and issue the SQL commands inside.</p>
<p>To do this in python, you can use something like</p>
<p><strong>Edit: This assumes you have 1 query per line! If you have multi-line queries, you'll have to find the means to extract each query from the file.</strong></p>
<pre><code>import MySQLdb
db = MySQLdb.connect("hostname","user","pass","db")
cursor = db.cursor()
for line in open("FileName.sql"):
    cursor.execute(line)
db.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can execute a bash command with Python and import your SQL file.</p>
<p>This exemple is for MySQL</p>
<pre><code>import subprocess
command = "mysql -u username --password=p@55W0rD database_name &lt; file.sql".split()
p = subprocess.Popen(command, stdout=subprocess.PIPE)
p.communicate()  # you can see if errors are returned
</code></pre>
<p>if your SQL file creates a database, remove <em>database_name</em>.</p>
<p>sources: </p>
<p><a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html#popen-constructor</a>
<a href="https://dev.mysql.com/doc/refman/8.0/en/mysql-batch-commands.html" rel="nofollow noreferrer">https://dev.mysql.com/doc/refman/8.0/en/mysql-batch-commands.html</a></p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Separate the scripts in SQL file in python using ";" as delimiter </li>
<li>Execute each command iteratively. </li>
<li>awesome5team had developed a nice solution in <a href="https://github.com/awesome5team/General-Resources-Box/issues/7" rel="nofollow noreferrer">https://github.com/awesome5team/General-Resources-Box/issues/7</a></li>
</ol>
<p>Code snippet from the same:</p>
<pre><code>import mysql.connector
cnx = mysql.connector.connect(user='root',
                             password='YOUR-PASSWORD-FOR-MYSQL',
                             host='localhost',
                             database='YOUR-DATABASE-NAME')
cursor =cnx.cursor()

def executeScriptsFromFile(filename):
    fd = open(filename, 'r')
    sqlFile = fd.read()
    fd.close()
    sqlCommands = sqlFile.split(';')

    for command in sqlCommands:
        try:
            if command.strip() != '':
                cursor.execute(command)
        except IOError, msg:
            print "Command skipped: ", msg

executeScriptsFromFile('SQL-FILE-LOCATION')
cnx.commit()
</code></pre>
</div>
<span class="comment-copy"><code>source FileName.sql</code> is not a valid SQL statement. So I am not surprised it is not working.</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/4408714/execute-sql-file-with-python-mysqldb">execute *.sql file with python MySQLdb</a></span>
<span class="comment-copy">but when I am executing this SQL statement outside python script, then its working.</span>
<span class="comment-copy">thanks but its still not working</span>
<span class="comment-copy">its giving below error:  File "test6.py", line 5, in &lt;module&gt;     cursor.execute(line)   File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 174, in execute     self.errorhandler(self, exc, value)   File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler     raise errorclass, errorvalue _mysql_exceptions.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '/*' at line 1") root@ubuntu:/#</span>
<span class="comment-copy">I've added a comment in the answer, see above. Also, if you have any external commands for the <code>mysql</code> CLI tool it won't work.</span>
