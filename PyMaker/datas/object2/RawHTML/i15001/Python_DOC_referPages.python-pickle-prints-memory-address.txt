<div class="post-text" itemprop="text">
<p>I wrote one application for phone and email addresses but when I want to print the data I got memory address instead of the data.</p>
<p>The code is following:</p>
<pre><code>import pickle

class Person:

    def __init__(self, name, lastName, phone, email):
        self.name=name;
        self.lastName=lastName;
        self.phone=phone;
        self.email=email;

class Adressar:

    def __init__(self,):
        print('telefonski imenik');

    def interface(self):
        print('Upišite broj od 1 do 4 za izbor funkcije');#write No from 1  to 4 for function selection
        print('Upiši 1 za upis novog kontakta');#No 1 for adding new conntact
        print('Upiši 2 za pretragu kontakta');#No 2 for contact search
        print('Upiši 3 za brisanje kontakta');#No 3 for contact erasing
        print('Upiši 4 za izlistavanje svih kontakata');#No 4 for giving list of all contacts
        num=int(input('Upis odgovarajućeg broja... '));#input number
        if num&gt;4:
            print('Greška! Upisi broj od 1 do 4!');#no is larger than 4
        else:
            return num;

    def addPerson(self):
        with open("adresar.pickle", 'wb') as fileIn:

            name=input('Upiši ime: ');#write name
            lastName=input('Upiši prezime: ');#write last name
            phone=input('Upiši broj telefona: ');#write phone no
            email=input('Upiši email: ');#write email

            pickle.dump(Person(name, lastName, phone, email), fileIn);


start=Adressar();
num=start.interface();
storedList=[];

if num==1:
    start.addPerson();

with open("adresar.pickle", 'rb') as f:
    storedList=pickle.load(f);
    print(storedList);
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <em>default</em> representation for custom classes is to print their name and their <code>id()</code>:</p>
<pre><code>&gt;&gt;&gt; class Foo: pass
... 
&gt;&gt;&gt; Foo()
&lt;__main__.Foo instance at 0x106aeab90&gt;
</code></pre>
<p>You can give a class a <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow"><code>__repr__</code> method</a> to change the default representation, or a <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow"><code>__str__</code> method</a> to control how  instances are converted to strings (such as by the <code>print</code> function).</p>
<p>Note that when printing a <em>list</em> or other container, the contents of that list will be shown by representations (<code>repr()</code> is used, not <code>str()</code>).</p>
<p>Note that in your code, you only ever load the first person in the file; you never store a list of instances, you instead <em>replace</em> the contents of the file  with a new <code>pickle</code> every time you call <code>addPerson()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This isn't anything to do with pickle; if you just created a Person directly and printed it you would get the same result. That's because you haven't told Python how it should print that type of object, and so it uses the default which is the memory address.</p>
<p>To fix this, add a <code>__str__</code> method to the class:</p>
<pre><code>class Person:
    ...
    def __str__(self):
        return 'This is {} and their email is {}'.format(self.name, self.email)
</code></pre>
</div>
<span class="comment-copy">You need to override <code>__str__</code> and <code>__repr__</code> to be specific to your class. Read this: <a href="http://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python" title="difference between str and repr in python">stackoverflow.com/questions/1436703/…</a></span>
<span class="comment-copy">Thank you. I made it. Now I also can add new data.</span>
<span class="comment-copy">Correct answer +1. Or use <code>_unicode__</code></span>
<span class="comment-copy"><code>__unicode__</code> is for Python 2 only; I think OP is using Python 3.</span>
<span class="comment-copy">Fair enough : )</span>
<span class="comment-copy">Ah, no, they are loading just the first pickle here.</span>
<span class="comment-copy">Thank you! Now it is working.</span>
