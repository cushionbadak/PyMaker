<div class="post-text" itemprop="text">
<p>I want to call <code>ping</code> from Python and get the output.  I tried the following:</p>
<pre><code>response = os.system("ping "+ "- c")
</code></pre>
<p>However, this prints to the console, which I don't want.</p>
<pre class="lang-none prettyprint-override"><code>PING 10.10.0.100 (10.10.0.100) 56(86) bytes of data.
64 bytes from 10.10.0.100: icmp_seq=1 ttl=63 time=0.713 ms
64 bytes from 10.10.0.100: icmp_seq=2 ttl=63 time=1.15 ms
</code></pre>
<p>Is there a way to not print to the console and just get the result?</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the output of a command, use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="noreferrer"><code>subprocess.check_output</code></a>.  It raises an error if the command fails, so surround it in a <code>try</code> block.</p>
<pre><code>import subprocess

try:
    response = subprocess.check_output(
        ['ping', '-c', '3', '10.10.0.100'],
        stderr=subprocess.STDOUT,  # get all output
        universal_newlines=True  # return string not bytes
    )
except subprocess.CalledProcessError:
    response = None
</code></pre>
<hr/>
<p>To use <code>ping</code> to know whether an address is responding, use its return value, which is 0 for success.  <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_call" rel="noreferrer"><code>subprocess.check_call</code></a> will raise and error if the return value is not 0.  To suppress output, redirect <code>stdout</code> and <code>stderr</code>.  With Python 3 you can use <code>subprocess.DEVNULL</code> rather than opening the null file in a block.</p>
<pre><code>import os
import subprocess

with open(os.devnull, 'w') as DEVNULL:
    try:
        subprocess.check_call(
            ['ping', '-c', '3', '10.10.0.100'],
            stdout=DEVNULL,  # suppress output
            stderr=DEVNULL
        )
        is_up = True
    except subprocess.CalledProcessError:
        is_up = False
</code></pre>
<hr/>
<p><sub>In general, use <code>subprocess</code> calls, which, as the docs describe, are intended to replace <code>os.system</code>.</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>If you only need to check if the ping was successful, look at the status code; <code>ping</code> returns <code>2</code> for a failed ping, <code>0</code> for a success.</p>
<p>I'd use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow"><code>subprocess.Popen()</code></a> (and <em>not</em> <code>subprocess.check_call()</code> as that raises an exception when <code>ping</code> reports the host is down, complicating handling). Redirect <code>stdout</code> to a pipe so you can read it from Python:</p>
<pre><code>ipaddress = '198.252.206.140'  # guess who
proc = subprocess.Popen(
    ['ping', '-c', '3', ipaddress],
    stdout=subprocess.PIPE)
stdout, stderr = proc.communicate()
if proc.returncode == 0:
    print('{} is UP'.format(ipaddress))
    print('ping output:')
    print(stdout.decode('ASCII'))
</code></pre>
<p>You can switch to <a href="https://docs.python.org/3/library/subprocess.html#subprocess.DEVNULL" rel="nofollow"><code>subprocess.DEVNULL</code></a><sup>*</sup> if you want to ignore the output; use <code>proc.wait()</code> to wait for <code>ping</code> to exit; you can add <code>-q</code> to have <code>ping</code> do less work, as it'll produce less output with that switch:</p>
<pre><code>proc = subprocess.Popen(
    ['ping', '-q', '-c', '3', ipaddress],
    stdout=subprocess.DEVNULL)
proc.wait()
if proc.returncode == 0:
    print('{} is UP'.format(ipaddress))
</code></pre>
<p>In both cases, <code>proc.returncode</code> can tell you more about why the ping failed, depending on your <code>ping</code> implementation. See <code>man ping</code> for details. On OS X the manpage states:</p>
<pre><code>EXIT STATUS
     The ping utility exits with one of the following values:

     0       At least one response was heard from the specified host.

     2       The transmission was successful but no responses were received.

     any other value
             An error occurred.  These values are defined in &lt;sysexits.h&gt;.
</code></pre>
<p>and <code>man sysexits</code> lists further error codes.</p>
<p>The latter form (ignoring the output) can be simplified by using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow"><code>subprocess.call()</code></a>, which combines the <code>proc.wait()</code> with a <code>proc.returncode</code> return:</p>
<pre><code>status = subprocess.call(
    ['ping', '-q', '-c', '3', ipaddress],
    stdout=subprocess.DEVNULL)
if status == 0:
    print('{} is UP'.format(ipaddress))
</code></pre>
<hr/>
<p><sup>*</sup> <code>subprocess.DEVNULL</code> is new in Python 3.3; use <code>open(os.devnull, 'wb')</code> in it's place in older Python versions, making use of the <a href="https://docs.python.org/3/library/os.html#os.devnull" rel="nofollow"><code>os.devnull</code> value</a>, e.g.:</p>
<pre><code>status = subprocess.call(
    ['ping', '-q', '-c', '3', ipaddress],
    stdout=open(os.devnull, 'wb'))
</code></pre>
</div>
<span class="comment-copy">Get <i>what</i> result? The ping stdout output or the status code of the process?</span>
<span class="comment-copy">I  just want to know if the machine is up or not.</span>
<span class="comment-copy">@user1704282 What if the machine is up, but not responding to ping?</span>
<span class="comment-copy">You will get an error if the command is not successful so the if check if redundant.</span>
<span class="comment-copy">@PadraicCunningham: argh, <code>check_call()</code> raises it too. Check.</span>
<span class="comment-copy">Yes, you either PIPE or catch the error, if you use <code>call</code> in  the first example it will work as just it returns the return code  regardless.</span>
<span class="comment-copy">i got this error at the end.                                                                     File "/usr/lib64/python2.7/subprocess.py", line 1115, in _get_handles     c2pwrite = stdout.fileno() AttributeError: 'str' object has no attribute 'fileno'</span>
<span class="comment-copy">status = subprocess.call( 		    ['ping', '-q', '-c', '3', self.ip_adress], 		    stdout=subprocess.os.devnull)  		if status == 0: 			return True 		else: 			return False</span>
