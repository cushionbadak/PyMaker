<div class="post-text" itemprop="text">
<p>A function like this:</p>
<pre><code>getElementDom("root.child.grandchild")
</code></pre>
<p>returning the <code>grandchild</code> element.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yeah, it's called XPath:</p>
<pre><code>from cStringIO import StringIO
import xml.etree.ElementTree 
from xml.etree import ElementTree as ET

doc = StringIO("""
&lt;document&gt;
 &lt;title&gt;People working for me&lt;/title&gt;
 &lt;person xmlns:foaf="http://xmlns.com/foaf/0.1/"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"&gt;
   &lt;name&gt;Jim&lt;/name&gt;
   &lt;title&gt;Porch Light Switcher&lt;/title&gt;
   &lt;foaf:homepage rdf:resource="http://example.com/his_page" /&gt;
 &lt;/person&gt;&lt;person&gt;
   &lt;name&gt;Joe&lt;/name&gt;
   &lt;title&gt;Bottle Washer, 3rd class&lt;/title&gt;
   &lt;nick xmlns="http://xmlns.com/foaf/0.1/"&gt;Joe-Joe&lt;/nick&gt;
 &lt;/person&gt;
&lt;/document&gt;
""")

tree = ET.parse(doc)
print tree.findall("person/title")
</code></pre>
<p>Of course, <a href="http://lxml.de/xpathxslt.html#xpath" rel="nofollow">lxml</a> is a lot better:</p>
<pre><code>f = StringIO('&lt;foo&gt;&lt;bar&gt;&lt;/bar&gt;&lt;/foo&gt;')
tree = etree.parse(f)
r = tree.xpath('/foo/bar')
</code></pre>
<ul>
<li><a href="http://effbot.org/zone/element-xpath.htm" rel="nofollow">XPath Support in ElementTree</a></li>
<li><a href="https://docs.python.org/2/library/xml.etree.elementtree.html#elementtree-xpath" rel="nofollow">XPath support</a></li>
<li><a href="http://www.w3.org/TR/xpath/" rel="nofollow">XML Path Language (XPath)</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>There is no such function in the DOM standard, no. You probably want to use the <a href="http://lxml.de/" rel="nofollow"><code>lxml</code> library</a> instead and use XPath expressions:</p>
<pre><code>from lxml import etree

tree = etree.parse(filename)
for element in tree.xpath('./root/child/grandchild'):
</code></pre>
<p><code>lxml</code> builds on top of the <a href="https://docs.python.org/2/library/xml.etree.elementtree.html" rel="nofollow">ElementTree API</a> rather than the (archaic) DOM APIs. The standard library ElementTree API implementation supports limited XPath expression searching too:</p>
<pre><code>from xml.etree import ElementTree

tree = ElementTree.parse(filename):
for element in tree.find('./root/child/grandchild'):
</code></pre>
</div>
<span class="comment-copy">can you show the corresponding html code?  you might be looking for something called "jQuery selectors"</span>
<span class="comment-copy">Use XPath, for example with <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xpath-support" rel="nofollow noreferrer">ElementTree</a>.</span>
