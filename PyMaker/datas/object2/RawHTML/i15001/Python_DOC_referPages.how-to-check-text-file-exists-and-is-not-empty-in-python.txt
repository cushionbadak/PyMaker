<div class="post-text" itemprop="text">
<p>I wrote a script to read text file in python.</p>
<p>Here is the code.    </p>
<pre><code>parser = argparse.ArgumentParser(description='script')    
parser.add_argument('-in', required=True, help='input file',
type=argparse.FileType('r'))
parser.add_argument('-out', required=True, help='outputfile',
type=argparse.FileType('w'))     
args = parser.parse_args()    

try:
    reader = csv.reader(args.in)
    for row in reader:
        print "good"
except csv.Error as e:
    sys.exit('file %s, line %d: %s' % (args.in, reader.line_num, e))

for ln in args.in:
    a, b = ln.rstrip().split(':')
</code></pre>
<p>I would like to check if the file exists and is not empty file but this code gives me an error.</p>
<p>I would also like to check if program can write to output file. </p>
<p><strong>Command:</strong> </p>
<pre><code>python script.py -in file1.txt -out file2.txt 
</code></pre>
<p><strong>ERROR:</strong></p>
<pre><code>good
Traceback (most recent call last):
  File "scritp.py", line 80, in &lt;module&gt;
    first_cluster = clusters[0]
IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To check whether file is present and is not empty, you need to call the combination of <a href="https://docs.python.org/3/library/os.path.html#os.path.exists" rel="noreferrer"><strong><code>os.path.exists</code></strong></a> and <a href="https://docs.python.org/3/library/os.path.html#os.path.getsize" rel="noreferrer"><strong><code>os.path.getsize</code></strong></a> with the "and" condition. For example:</p>
<pre><code>import os
my_path = "/path/to/file"

if os.path.exists(my_path) and os.path.getsize(my_path) &gt; 0:
    # Non empty file exists
    # ... your code ...
else:
    # ... your code for else case ...
</code></pre>
<p>As an <strong>alternative</strong>, you may also use <code>try/except</code> with the <a href="https://docs.python.org/3/library/os.path.html#os.path.getsize" rel="noreferrer"><code>os.path.getsize</code></a> <em>(without using <code>os.path.exists</code>)</em> because it raises
<a href="https://docs.python.org/3/library/exceptions.html#OSError" rel="noreferrer"><code>OSError</code></a> if the file does not exist or if you do not have the permission to access the file. For example:  </p>
<pre><code>try:
    if os.path.getsize(my_path) &gt; 0:
        # Non empty file exists
        # ... your code ...
    else:
        # Empty file exists
        # ... your code ...
except OSError as e:
    # File does not exists or is non accessible
    # ... your code ...
</code></pre>
<hr/>
<p><strong>References</strong> from the Python 3 document </p>
<ul>
<li><p><a href="https://docs.python.org/3/library/os.path.html#os.path.getsize" rel="noreferrer"><strong><code>os.path.getsize()</code></strong></a> will:</p>
<blockquote>
<p>Return the size, in bytes, of path. Raise <a href="https://docs.python.org/3/library/exceptions.html#OSError" rel="noreferrer"><code>OSError</code></a> if the file does not exist or is inaccessible.</p>
</blockquote>
<p>For empty file, it will return <code>0</code>. For example:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.path.getsize('README.md')
0
</code></pre></li>
<li><p>whereas <a href="https://docs.python.org/3/library/os.path.html#os.path.exists" rel="noreferrer"><strong><code>os.path.exists(path)</code></strong></a> will:</p>
<blockquote>
<p>Return <code>True</code> if path refers to an existing path or an open file descriptor. Returns <code>False</code> for broken symbolic links. </p>
<p>On some platforms, this function may return <code>False</code> if permission is not granted to execute <a href="https://docs.python.org/3/library/os.html#os.stat" rel="noreferrer"><code>os.stat()</code></a> on the requested file, even if the path physically exists.</p>
</blockquote></li>
</ul>
</div>
<span class="comment-copy">Check this link: <a href="http://stackoverflow.com/questions/2259382/pythonic-way-to-check-if-a-file-exists" title="pythonic way to check if a file exists">stackoverflow.com/questions/2259382/â€¦</a></span>
<span class="comment-copy">that code does not even parse, <code>in</code> is not a valid identifier (in <code>args.in</code>)</span>
<span class="comment-copy">Where does <code>first_cluster = clusters[0]</code> appear in your code?</span>
<span class="comment-copy">The script gives an error because the FOR loop gets failed. When it start reading file it failed to read file from args.in . how do i read file using argument parser?</span>
<span class="comment-copy">clear answer, elegant text formatting.</span>
<span class="comment-copy">I use this to check if I must download a file: <code>must_be_downloaded = not os.path.isfile(file_path) or os.path.getsize(file_path) == 0</code> and it works w/o try/catch in python 3.6. Or use the opposite: <code>exists_for_real = os.path.isfile(file_path) and os.path.getsize(file_path) &gt; 0</code> you can make your own checked and add more conditions, but I just scripted the same and this simple check works well in my case.</span>
