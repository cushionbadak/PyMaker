<div class="post-text" itemprop="text">
<p>Here is how my logging.ini file looks like: </p>
<pre><code>[loggers]
keys=teja

[handlers]
keys=fileHandler

[formatters]
keys=simpleFormatter

[logger_teja]
level=DEBUG
handlers=fileHandler
qualname=tejaLogger

[handler_fileHandler]
class=logging.FileHandler
level=DEBUG
formatter=simpleFormatter
args=("error.log", "w")

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
</code></pre>
<p>I am getting the follwing error:</p>
<pre><code>File "test.py", line 22, in &lt;module&gt;
    logging.config.fileConfig('logging.ini')
  File "/usr/lib/python2.7/logging/config.py", line 79, in fileConfig
    _install_loggers(cp, handlers, disable_existing_loggers)
  File "/usr/lib/python2.7/logging/config.py", line 183, in _install_loggers
    llist.remove("root")
ValueError: list.remove(x): x not in list
</code></pre>
<p>Please help me to figure the problem.
Or
Please explain me "Why there is always a need to include root logger at all?"</p>
</div>
<div class="post-text" itemprop="text">
<p>If you <a href="https://github.com/python/cpython/blob/master/Lib/logging/config.py#L185" rel="nofollow">use the source</a>, you'll see that you <strong>must</strong> configure a root logger:</p>
<pre><code># configure the root first
llist = cp["loggers"]["keys"]
llist = llist.split(",")
llist = list(map(lambda x: x.strip(), llist))
llist.remove("root")
section = cp["logger_root"]
root = logging.root
log = root
</code></pre>
<p>(where <code>cp</code> is the <a href="http://legacy.python.org/dev/peps/pep-0020/" rel="nofollow"><code>configparser</code></a> that loads the <code>.ini</code> file you passed in)</p>
<p>The only reason I can think of is that <a href="http://legacy.python.org/dev/peps/pep-0020/" rel="nofollow">explicit is better than implicit</a>, so it forces you to declare exactly what you want to do with the root logger, in case you thought it would do some magic. Though I don't thinkg that's a particularly good reason. It was probably just the way someone thought to do it at the time. If you do some <a href="http://legacy.python.org/dev/peps/pep-0020/" rel="nofollow">further reading</a>:</p>
<blockquote>
<p>The fileConfig() API is older than the dictConfig() API and does not provide functionality to cover certain aspects of logging [... N]ote that future enhancements to configuration functionality will be added to dictConfig(), so it’s worth considering transitioning to this newer API when it’s convenient to do so.</p>
</blockquote>
<p>And if you consider the <a href="https://docs.python.org/3/library/logging.config.html#logging-config-dictschema" rel="nofollow"><code>dictConfig</code> docs</a>, it appears that you don't have to provide a <code>root</code> logger.</p>
<p>So it appears that you <em>are</em> required to specify a root handler, with no really good reason besides backwards compatibility. If you want to get around that, you'll have to either specify your settings in a Python file or import a JSON file and use the <code>dictConfig</code> method.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just in case it happens to someone else, check that you have commas separating all the logger entries, as you may be missing one, having both fields' names merged.</p>
</div>
