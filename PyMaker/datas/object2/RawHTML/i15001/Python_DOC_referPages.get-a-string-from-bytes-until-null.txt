<div class="post-text" itemprop="text">
<p>Given a bytes object and an index, I want to read a string from the bytes between the index and the next null(\x00). For example:</p>
<pre><code>bstr=b'abc\x00defg'
addr_to_str(bstr,0) # 'abc'
addr_to_str(bstr,1) # 'bc'
addr_to_str(bstr,4) # 'defg'
</code></pre>
<p>I can do the following:</p>
<pre><code>def addr_to_str(bstr,i):
    return bstr[i:].split(b'\x00')[0].decode('utf-8')
</code></pre>
<p>Since the bytes object is very large, I would like an efficient version of <code>addr_to_str</code>. I am new to Python and not knowing how the interpreter treats the <code>split()</code> call when I only want to access the first split result. Or is the <code>.decode()</code> necessary?</p>
<p><strong>Question:</strong> Is there a better and pythonic way to do <code>addr_to_str()</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>How about (in Python 2):</p>
<pre><code>def addr_to_str(s, pos):
   end = s.find('\0', pos + 1)
   if end != -1:
      return s[pos:end]
   else:
      return s[pos:]
</code></pre>
<p>This scans the string once looking for a null, and then creates a slice.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html?highlight=split#bytes.split" rel="nofollow noreferrer"><code>bytes.split()</code></a> has an optional <code>maxsplit</code> argument...or you could use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=partition#bytes.partition" rel="nofollow noreferrer"><code>bytes.partition()</code></a> which only does one.</span>
<span class="comment-copy"><code>s</code> is a bytes not a string. It complains s.find('\0',). The function should take a bytes and return a string.</span>
<span class="comment-copy">Works for me in Python 2.7. If you're using Python 3, you might want to specify that.</span>
<span class="comment-copy">So, in Python 3, seem that the .decode() needs to be explicitly called.</span>
<span class="comment-copy">In python 3, for bytes, use <code>s.find(b'\0', pos + 1)</code></span>
