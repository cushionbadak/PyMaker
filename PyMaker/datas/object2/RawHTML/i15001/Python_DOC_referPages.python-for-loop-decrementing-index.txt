<div class="post-text" itemprop="text">
<p>So I wrote a for loop like this:</p>
<pre><code>for i in range(size):
  if(.....)
    ....
    i-=1
  else:
    ....
</code></pre>
<p>I try to decrease the index by 1 if it is inside the <code>if</code> statement, but apparently I can't do that. Is there any other way that I can decrease <code>i</code> in a for loop?</p>
</div>
<div class="post-text" itemprop="text">
<p>I would like to go over the range() function yet again through the documentation as provided here: <a href="https://docs.python.org/3/library/functions.html#func-range" rel="noreferrer">Python 3.4.1 Documentation for range(start, stop[, step])</a></p>
<p>As shown in the documentation above, you may enter three parameters for the range function 'start', 'stop', and 'step', and in the end it will give you an <strong>immutable sequence</strong>.</p>
<p>The 'start' parameter defines when the counter variable for your case 'i' should begin at. The 'end' parameter is essentially what the size parameter does in your case. And as for what you want, being that you wish to decrease the variable 'i' by 1 every loop, you can have the parameter 'step' be -1 which signifies that on each iteration of the for loop, the variable 'i' will go down by 1.</p>
<p>You can set the 'step' to be -2 or -4 as well, which would make the for loop count 'i' down on every increment 2 down or 4 down respectively.</p>
<p><strong>Example:</strong></p>
<pre><code>for x in range(9, 3, -3):
    print(x)
</code></pre>
<p>Prints out: 9, 6. It starts at 9, ends at 3, and steps down by a counter of 3. By the time it reaches 3, it will stop and hence why '3' itself is not printed.</p>
<p><strong>EDIT:</strong> Just noticed the fact that it appears you may want to decrease the 'i' value in the for loop...? What I would do for that then is simply have a while loop instead where you would have a variable exposed that you can modify at your whim.</p>
<pre><code>test = 0
size = 50
while (test &lt; size)
    test += 1
    if (some condition):
        test -= 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For such a construct, where you need to vary the loop index, a <code>for</code> loop might not be the best option.</p>
<p><code>for &lt;var&gt; in &lt;iterable&gt;</code> merely runs the loop body with the <code>&lt;var&gt;</code> taking each value available from the <code>iterable</code>. Changing the <code>&lt;var&gt;</code> will have no effect on the ensuing iterations.</p>
<p>However, since it is usually tricky to work out the sequence of values <code>i</code> will take beforehand, you can use a <a href="https://wiki.python.org/moin/WhileLoop" rel="nofollow"><code>while</code> loop</a>.</p>
<pre><code>i = 0
while i &lt; size:
    if condition:
        ...
        i -= 1
    else:
        ...
        i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should not mutate <code>i</code>. The <code>for i in range(size):</code> is kind of special. Instead you should probably use a list comprehension:</p>
<pre><code>size_range = [x-1 if condition else x for x in range(size)]
</code></pre>
<p>Actually probably better:</p>
<pre><code>def f(x):
    ... #Do else stuff here.

decrement = lambda x: x-1
size_range = [decrement(x) if condition else f(x) for x in range(size)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here you can find some more examples on <a href="http://www.pythoncentral.io/pythons-range-function-explained/" rel="nofollow"><code>range</code></a></p>
<p>But what you probably want is something like this: <code>for i in range(size, 0):</code>.</p>
</div>
<span class="comment-copy">Do not use <code>i</code> or it'll run forever as you try to decrease the <code>i</code> and <code>range()</code> increases it.</span>
<span class="comment-copy">If you would like constructive help, please post some real python code instead of some pseudo gibberish.</span>
<span class="comment-copy">@ForceBru That is not how <code>range()</code> works. <code>range()</code> merely creates a list and the <code>for &lt;var&gt; in &lt;iterable&gt;</code> construction runs the loop assigning <code>&lt;var&gt;</code> each value from the <code>&lt;iterable&gt;</code>. If <code>&lt;var&gt;</code> is changed inside the loop, it has no bearing on the next iteration.</span>
<span class="comment-copy">@SH.C: Hi. Welcome to SO. The question you have posted is a bit underspecified (which may explain the down-votes). We need some more information about what you want to do. If you are not tied to using <code>for</code> loops, then it seems that a <a href="https://wiki.python.org/moin/WhileLoop" rel="nofollow noreferrer"><code>while</code> loop</a> may suit your use-case better.</span>
<span class="comment-copy">@musically_ut: Sorry about the confusion, It's my first time use this website. I think I already got the answer.You are right, I should use a while loop instead of for loop.</span>
