<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/835092/python-dictionary-are-keys-and-values-always-the-same-order">Python dictionary: are keys() and values() always the same order?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>The <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="noreferrer">collections.OrderedDict</a> documentation describes an <code>OrderedDict</code> as a </p>
<blockquote>
<p>a dict that remembers the order that keys were first inserted</p>
</blockquote>
<p>so the order of</p>
<pre><code>for k in dict:
  ...

for k in dict.keys():
  ...
</code></pre>
<p>is predictable.</p>
<p>However, it does not say anything about values. If I only need to iterate over the values as follows, will the results respect the ordering-by-insert as well?</p>
<pre><code>for v in dict.values():
  ...
</code></pre>
<p>A few quick tests here in CPython showed that to be the case, but that could just be coinicidental with the current implementation (I haven't tested any others).</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, the lists by <code>keys()</code> and <code>values()</code> are arranged in corresponding orders in all dicts, <a href="https://docs.python.org/2/library/stdtypes.html#dict.items" rel="nofollow noreferrer">not just in ordered ones</a>.</p>
<p>Prior to Python 3.6, the order was arbitrary for normal dicts, but it was <strong>the same</strong> arbitrary order returned by <code>keys()</code>, <code>values()</code> and <code>items()</code>, provided the dict wasn't modified between calls to those methods.</p>
<p>As of Python 3.6, dict respects insertion order. Beginning with 3.7, it has become a <a href="https://docs.python.org/3.7/library/stdtypes.html#dict" rel="nofollow noreferrer">documented</a> guarantee.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, they are sorted in the same order as the keys are. This is the same with all <code>dict</code> implementations.</p>
<blockquote>
<p>Keys and values are iterated over in an arbitrary order which is
  non-random, varies across Python implementations, and depends on the
  dictionaryâ€™s history of insertions and deletions. If keys, values and
  items views are iterated over with no intervening modifications to the
  dictionary, the order of items will directly correspond. This allows
  the creation of <code>(value, key)</code> pairs using <code>zip()</code>: <code>pairs =
  zip(d.values(), d.keys())</code>. Another way to create the same list is
  <code>pairs = [(v, k) for (k, v) in d.items()]</code>.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#dict-views" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#dict-views</a></p>
</div>
