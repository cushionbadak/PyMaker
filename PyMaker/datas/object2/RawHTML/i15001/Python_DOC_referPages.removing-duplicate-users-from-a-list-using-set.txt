<div class="post-text" itemprop="text">
<p>Trying to remove duplicate users from list with set in python. The problem is that it is not removing the duplicate users:</p>
<pre><code>with open ('live.txt') as file: 
        for line in file.readlines(): 
                word = line.split()
                users = (word[word.index('user')+1]) 
                        l  = users.split() 
                        l = set(l)
                        l = sorted(l)
                        print " ".join(l)
</code></pre>
<p>Here's the contents of <code>live.txt</code>:</p>
<pre class="lang-none prettyprint-override"><code>Sep 15 04:34:24 li146-252 sshd[13320]: Failed password for invalid user ronda from 212.58.111.170 port 42201 ssh2
Sep 15 04:34:26 li146-252 sshd[13322]: Failed password for invalid user ronda from 212.58.111.170 port 42330 ssh2
Sep 15 04:34:28 li146-252 sshd[13324]: Failed password for invalid user ronda from 212.58.111.170 port 42454 ssh2
Sep 15 04:34:31 li146-252 sshd[13326]: Failed password for invalid user ronda from 212.58.111.170 port 42579 ssh2
Sep 15 04:34:33 li146-252 sshd[13328]: Failed password for invalid user romero from 212.58.111.170 port 42715 ssh2
Sep 15 04:34:36 li146-252 sshd[13330]: Failed password for invalid user romero from 212.58.111.170 port 42838 ssh2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is the code you want:</p>
<pre><code>with open ('live.txt') as file: 
    users = []
    for line in file.readlines(): 
        word = line.split()
        users.append(word[word.index('user') + 1])
    unique_users = list(set(users))
print " ".join(unique_users)
</code></pre>
<p>Output:</p>
<pre><code>romero ronda
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try a much simpler way as </p>
<pre><code>list(set(&lt;Your user list&gt;))
</code></pre>
<p>This will return list with no duplicate. Python has datatype <code>set</code> which is collection of unique element. So just by typecasting your <code>list</code> to <code>set</code> will automatically remove the duplicates</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; users = ['john', 'mike', 'ross', 'john','obama','mike']
&gt;&gt;&gt; list(set(users))
['mike', 'john', 'obama', 'ross']
&gt;&gt;&gt;
</code></pre>
<p>I hope this will solve your problem:</p>
<pre><code>import re
def remove_me():
    all_users = []
    with open ('live.txt') as file:
        for line in file.readlines():
            pattern = re.compile('(.*user\s*)([a-zA-Z0-9]*)')
            stmt = pattern.match(line)
            all_users.append(stmt.groups()[1])
    unique_users = list(set(all_users))
    print unique_users

if __name__ == "__main__":
    remove_me()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If duplicate user lines are consecutive; you could use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby()</code></a> to remove duplicates:</p>
<pre><code>#!/usr/bin/env python
from itertools import groupby
from operator import itemgetter

def extract_user(line):
    return line.partition('user')[2].partition('from')[0].strip()

with open('live.txt') as file:
    print(" ".join(map(itemgetter(0), groupby(file, key=extract_user))))
    # -&gt; ronda romero
</code></pre>
</div>
<span class="comment-copy">this should a one time activity.There should not be a need for a loop</span>
<span class="comment-copy">Please add a sample value for <code>users</code>!</span>
<span class="comment-copy">Do you mind adding your users here. And what output is expected</span>
<span class="comment-copy">Updated with the whole code. @Optimus</span>
<span class="comment-copy">Is it like that you want to get all unique users from the live.txt ? so from above screen you want [ronda, romero]</span>
<span class="comment-copy">How would it be if you want to use dictionary to count how many times a user appears?</span>
<span class="comment-copy">@user3270211: Please, do not use <code>for line in file.readlines()</code>, use <code>for line in file</code> instead. btw, <code>word</code> is missleading -- it should be <code>words</code> instead. And you do not need to call <code>list()</code> here.</span>
<span class="comment-copy">@user3270211 Just do control if user is in dict. If they are not in dict, add value 1 to dict[user]. If they are already in dict, change the value to dict[user] + 1.</span>
<span class="comment-copy">This is what I get in return:['a', 'e', 'k', 'm', '3', 'p', 's', 't'] ['a', 'e', 'k', 'm', '3', 'p', 's', 't'] ['a', 'e', 'k', 'm', '3', 'p', 's', 't'] ['a', 'e', 'k', 'm', '3', 'p', 's', 't'] ['a', 'e', 'k', 'm', '3', 'p', 's', 't']</span>
<span class="comment-copy">@user3270211 good grief, <i>say</i> what your input data is!</span>
<span class="comment-copy">I forgot to mention that every user is in a own list.</span>
