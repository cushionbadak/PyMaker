<div class="post-text" itemprop="text">
<p>I have two dataframes each containing two columns of American states and towns. I want to create a new column in the first dataframe that has boolean values that indicate if which the towns paired with their states are in the second dataframe.</p>
<p>example:</p>
<pre><code>df = pd.DataFrame({'countries':['france', 'germany', 'spain', 'uk', 'norway', 'italy'], 
                   'capitals':['paris', 'berlin', 'madrid', 'london', 'oslo', 'rome']})

df2 = pd.DataFrame({'countries':['france', 'spain', 'uk', 'italy'], 
                   'capitals':['paris', 'madrid', 'london', 'rome']})

df

  countries capitals
0    france    paris
1   germany   berlin
2     spain   madrid
3        uk   london
4    norway     oslo
5     italy     rome

df2

  countries capitals
0    france    paris
1     spain   madrid
2        uk   london
3     italy     rome
</code></pre>
<p>what I want to do is</p>
<pre><code>df&gt; countries  capitals  bool
    france     paris     True
    germany    berlin    False
    spain      madrid    True
    uk         london    True
    norway     oslo      False
    italy      rome      True
</code></pre>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Perform a FULL OUTER JOIN with an indicator.</p>
<pre><code>u = df.merge(df2, how='outer', indicator='bool')
u['bool'] = u['bool'] == 'both'
u

  countries capitals   bool
0    france    paris   True
1   germany   berlin  False
2     spain   madrid   True
3        uk   london   True
4    norway     oslo  False
5     italy     rome   True
</code></pre>
<hr/>
<p>In the intermediate step, we see</p>
<pre><code>df.merge(df2, how='outer', indicator='bool')

  countries capitals       bool
0    france    paris       both
1   germany   berlin  left_only
2     spain   madrid       both
3        uk   london       both
4    norway     oslo  left_only
5     italy     rome       both
</code></pre>
<p><code>indicator</code> specifies where the row is present. We now want to mark all the rows where "bool" shows "both" (to get your intended output).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>df = pd.DataFrame({'countries':['france', 'germany', 'spain', 'uk', 'norway', 'italy'], 
                   'capitals':['paris', 'berlin', 'madrid', 'london', 'oslo', 'rome']})

df2 = pd.DataFrame({'countries':['france', 'spain', 'uk', 'italy'], 
                   'capitals':['paris', 'madrid', 'london', 'rome']})

df['bool'] = False

# Loop efficiently through pandas data frame
for idx, row in df.iterrows():
    if row.countries in df2.countries.values:
        df.loc[idx, 'bool'] = True 

print(df)
</code></pre>
<pre><code>  countries capitals   bool
0    france    paris   True
1   germany   berlin  False
2     spain   madrid   True
3        uk   london   True
4    norway     oslo  False
5     italy     rome   True
</code></pre>
</div>
<span class="comment-copy">Not the downvoter, but the list comparisons inside a for loop with <code>iterrows()</code> will make for a pretty inefficient solution.</span>
<span class="comment-copy">I agree your answer is more efficient.</span>
