<div class="post-text" itemprop="text">
<p>executor.map()    TypeError: zip argument #2 must support iteration</p>
<p>when I run it ,just generated TypeError: zip argument #2 must support iteration.
can anyone help me fix this problem ?</p>
<pre><code>import time, concurrent.futures
lst100=[i for i in range(100)]

t1=time.clock()
print(list(map(str,lst100)))
t2=time.clock()
print(t2-t1)

t3=time.clock()
with concurrent.futures.ThreadPoolExecutor(max_workers=100) as executor:
    future_to_url = executor.map(str,lst100, 60)
    print(list(future_to_url))
t4=time.clock()
print(t4-t3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.map" rel="nofollow"><code>concurrent.futures.Executor.map</code></a> is semantically identical to the built-in function <a href="http://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map</code></a>.  The second and subsequent <em>non-keyword</em> arguments specify the iterables to apply the given function to.</p>
<p>In your case, you're saying "Here are two iterables: a list of 100 elements (<code>lst100</code>) and the integer 60.  Please call the function <code>str()</code> on each pair of elements <code>a</code> and <code>b</code> coming form the two iterables respectively, and return the list of results."  But since the integer 60 is not actually an iterable object, it fails.</p>
<p>Assuming you wanted to specify a timeout of 60 seconds, you need to pass it as a keyword argument like so:</p>
<pre><code>future_to_url = executor.map(str, lst100, timeout=60)
</code></pre>
<p>Keyword arguments are distinguished from positional arguments by the presence of the <code>name=</code> prefix before the value being passed.  In this case, the argument name is <code>timeout</code>.</p>
</div>
<span class="comment-copy">thanks for  clarification.  I thought argument 2 is lst100</span>
