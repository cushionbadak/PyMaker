<div class="post-text" itemprop="text">
<p><strong>Goal</strong></p>
<p>I have downloaded a CSV file from hotmail, but it has a lot of duplicates in it. These duplicates are complete copies and I don't know why my phone created them. </p>
<p>I want to get rid of the duplicates.</p>
<p><strong>Approach</strong></p>
<p>Write a python script to remove duplicates.</p>
<p><strong>Technical specification</strong></p>
<pre>

Windows XP SP 3
Python 2.7
CSV file with 400 contacts

</pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>UPDATE: 2016</strong></p>
<p>If you are happy to use the helpful <a href="https://pythonhosted.org/more-itertools/api.html#more_itertools.unique_everseen" rel="noreferrer"><code>more_itertools</code></a> external library:</p>
<pre><code>from more_itertools import unique_everseen
with open('1.csv','r') as f, open('2.csv','w') as out_file:
    out_file.writelines(unique_everseen(f))
</code></pre>
<hr/>
<p>A more efficient version of @IcyFlame's solution</p>
<pre><code>with open('1.csv','r') as in_file, open('2.csv','w') as out_file:
    seen = set() # set for fast O(1) amortized lookup
    for line in in_file:
        if line in seen: continue # skip duplicate

        seen.add(line)
        out_file.write(line)
</code></pre>
<p>To edit the same file in-place you could use this</p>
<pre><code>import fileinput
seen = set() # set for fast O(1) amortized lookup
for line in fileinput.FileInput('1.csv', inplace=1):
    if line in seen: continue # skip duplicate

    seen.add(line)
    print line, # standard output is now redirected to the file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can achieve deduplicaiton efficiently using Pandas:</p>
<pre><code>import pandas as pd
file_name = "my_file_with_dupes.csv"
file_name_output = "my_file_without_dupes.csv"

df = pd.read_csv(file_name, sep="\t or ,")

# Notes:
# - the `subset=None` means that every column is used 
#    to determine if two rows are different; to change that specify
#    the columns as an array
# - the `inplace=True` means that the data structure is changed and
#   the duplicate rows are gone  
df.drop_duplicates(subset=None, inplace=True)

# Write the results to a different file
df.to_csv(file_name_output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following script:</p>
<p><strong>pre-condition:</strong></p>
<ol>
<li><code>1.csv</code> is the file that consists the duplicates</li>
<li><code>2.csv</code> is the output file that will be devoid of the duplicates once this script is executed.</li>
</ol>
<p><strong>code</strong></p>
<pre>
<code>

inFile = open('1.csv','r')

outFile = open('2.csv','w')

listLines = []

for line in inFile:

    if line in listLines:
        continue

    else:
        outFile.write(line)
        listLines.append(line)

outFile.close()

inFile.close()
</code></pre>
<p></p></div>
<div class="post-text" itemprop="text">
<p>A more efficient version of @jamylak's solution: (with one less instruction)</p>
<pre><code>with open('1.csv','r') as in_file, open('2.csv','w') as out_file:
    seen = set() # set for fast O(1) amortized lookup
    for line in in_file:
        if line not in seen: 
            seen.add(line)
            out_file.write(line)
</code></pre>
<p>To edit the same file in-place you could use this</p>
<pre><code>import fileinput
seen = set() # set for fast O(1) amortized lookup
for line in fileinput.FileInput('1.csv', inplace=1):
    if line not in seen:
        seen.add(line)
        print line, # standard output is now redirected to the file   
</code></pre>
</div>
<span class="comment-copy">thank you in 2016</span>
<span class="comment-copy">@Eddwinn You're welcome</span>
<span class="comment-copy">I get <code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 28: invalid start byte</code> when trying to open my file</span>
<span class="comment-copy">@ykombinator you can pass the "encoding" parameter to the "read_csv" function -- see <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html#standard-encodings</a></span>
<span class="comment-copy">df.to_csv(file_name_output, index=False)</span>
