<div class="post-text" itemprop="text">
<p>In the below sample code, i intend to get the stack frames for the callee of the decorated function. Suppose, the decorated function, power(below), calls pwr function and there is an exception in that, i would like to get stack frame (to print function arguments) for pwr. For the functions that are exposed in api, its arguments and response are printed but the functions that are internal to module and those that api calls, i would like to get those stack frames.</p>
<pre><code>import inspect
def api(func):
    def decor(*args, **kwargs):
        try:
            print "Request %s %s %s" % ( func.__name__, args, kwargs)
            response = func(*args,**kwargs)
            print "response %s", response
            return response
        except Exception, e:
            print "exception in %s", func.__name__
            for frame in inspect.stack():
                print frame[3]
            raise e
    return decor

@api
def power(a,b):
    return pwr(a,b)

def pwr():
   ...
   ...
</code></pre>
<p>when i run the code, during exception, i am getting stack frame from decor and up but not func or below. Can anyone suggest?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to look at the context in which the exception occurred, you need to look at the third value (the "traceback object") returned from <a href="http://docs.python.org/3/library/sys.html#sys.exc_info" rel="nofollow"><code>sys.exc_info()</code></a>. The <a href="http://docs.python.org/3/library/traceback.html" rel="nofollow"><code>traceback</code> module</a> has some useful functions for handling these objects: you might be able to make use of <a href="http://docs.python.org/3/library/traceback.html#traceback.print_tb" rel="nofollow"><code>traceback.print_tb</code></a>.</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; import sys, traceback
&gt;&gt;&gt; try: raise Exception()
... except: traceback.print_tb(sys.exc_info()[2])
... 
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't access the frame after the function returned or raised and exceptions since the frame simply no longer exists. If you really want to access a function frames for some debugging/profiling purposes and can't modify the function, consider using <a href="http://docs.python.org/2/library/sys.html#sys.setprofile" rel="nofollow"><code>sys.setprofile</code></a> or <a href="http://docs.python.org/2/library/sys.html#sys.settrace" rel="nofollow"><code>sys.settrace</code></a>. The callback will be passed the frame as an argument.</p>
</div>
<span class="comment-copy">Thanks @bereal, i guess i have to satisfy with that.</span>
