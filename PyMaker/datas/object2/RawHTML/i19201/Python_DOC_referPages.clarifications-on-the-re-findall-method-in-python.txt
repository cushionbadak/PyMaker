<div class="post-text" itemprop="text">
<p>I wanted to strip a string of punctuation marks and I ended up using </p>
<pre><code>re.findall(r"[\w]+|[^\s\w]", text)
</code></pre>
<p>It works fine and it does solve my problem. What I don't understand is the details within the parentheses and the whole <em>pattern</em> thing. What does <code>r"[\w]+|[^\s\w]"</code> really mean? I looked it up in the Python standard library and it says:</p>
<pre><code>re.findall(pattern, string, flags=0)
</code></pre>
<blockquote>
<p>Return all non-overlapping matches of pattern in string, as a list of
  strings. The string is scanned left-to-right, and matches are returned
  in the order found. If one or more groups are present in the pattern,
  return a list of groups; this will be a list of tuples if the pattern
  has more than one group. Empty matches are included in the result
  unless they touch the beginning of another match.</p>
</blockquote>
<p>I am not sure if I get this and the clarification sounds a little vague to me. Can anyone please tell me what a pattern in this context means and how exactly it is defined in the findall() method?</p>
</div>
<div class="post-text" itemprop="text">
<p>To break it down, <code>[]</code> creates a <a href="http://www.regular-expressions.info/charclass.html" rel="nofollow"><em>character class</em></a>.  You'll often see things like <code>[abc]</code> which will match <code>a</code>, <code>b</code> or <code>c</code>.  Conversely, you also might see <code>[^abc]</code> will will match anything that <em>isn't</em> <code>a</code>, <code>b</code> or <code>c</code>.  Finally, you'll also see character ranges:  <code>[a-cA-C]</code>.  This introduces two ranges and it will match any of <code>a</code>, <code>b</code>, <code>c</code>, <code>A</code>, <code>B</code>, <code>C</code>.  </p>
<p>In this case, your character class contains special tokens.  <code>\w</code> and <code>\s</code>.  <code>\w</code> matches anything letter-like.  <code>\w</code> actually depends on your locale, but it is usually the same thing as <code>[a-zA-Z0-9_]</code> matches anything in the ranges <code>a-z</code>, <code>A-Z</code>, <code>0-9</code> or <code>_</code>.  <code>\s</code> is similar, but it matches anything that can be considered whitespace.</p>
<p>The <code>+</code> means that you can repeat the previous match 1 or more times.  so <code>[a]+</code> will match the entire string <code>aaaaaaaaaaa</code>.  In your case, you're matching alphanumeric characters that are next to each other.</p>
<p>the <code>|</code> is basically like "or".  match the stuff on the left, <em>or</em> match the stuff on the right if the left stuff doesn't match.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\w</code> means Alphanumeric characters plus "_". And <code>\s</code> means Whitespace characters including " \t\r\n\v\f" and space character " ". So, <code>[\w]+|[^\s\w]</code> means a string which contains only words and "_".</p>
</div>
<span class="comment-copy">you want to learn about <a href="http://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regex</a></span>
