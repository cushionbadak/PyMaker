<div class="post-text" itemprop="text">
<p>I have been reviewing <a href="http://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow">the tutorial for file management in Python 3</a> but it doesn't mention how to create a file if one doesn't exist. How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just open the file in write mode:</p>
<pre><code>f = open('fileToWrite.txt', 'w')
</code></pre>
<p>Note that this will clobber an existing file. The safest approach is to use append mode:</p>
<pre><code>f = open('fileToWrite.txt', 'a')
</code></pre>
<p>As mentioned in <a href="https://stackoverflow.com/a/15823854/129655">this answer</a>, it's generally better to use a <code>with</code> statement to ensure that the file is closed when you have finished with it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just <code>open</code> the file in <code>w</code> mode, and it will be created it.</p>
<p>If you want to open an existing file if possible, but create a new file otherwise (and don't want to truncate an existing file), read the paragraph in your link that lists the modes. Or, for complete details, see the <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open</code></a> reference docs. For example, if you want to append to the end instead of overwriting from the start, use <code>a</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A new file is only created in write or append modes.</p>
<pre><code>open('file', 'w')
</code></pre>
<p>In shell:</p>
<pre><code>$ ls
$ python -c 'open("file", "w")'
$ ls
file
$
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Of course.</p>
<pre><code>   with open('newfile.txt', 'w') as f:
        f.write('Text in a new file!')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are two types of files you can make. a text and a binary.
to make a text file just use <code>file = open('(file name and location goes here).txt', 'w')</code>.
to make a binary file you first <code>import pickle</code>, then to put data (like lists numbers ect..) in them you will need to use 'wb' and <code>pickle.dump(data, file_variable)</code> to take out you will need to use 'rb' and <code>pickle.load(file_variable)</code> and give that a variable becuase that is how you refrence the data.
Here is a exaple:</p>
<pre><code>import pickle #bring in pickle
shoplistfile = 'shoplist.data'
shoplist = ['apple', 'peach', 'carrot', 'spice'] #create data
f = open(shoplistfile, 'wb') # the 'wb'
pickle.dump(shoplist, f) #put data in
f.close
del shoplist #delete data
f = open(shoplistfile, 'rb') #open data remember 'rb'
storedlist = pickle.load(f)
print (storedlist) #output
</code></pre>
<p>note that if such a file exists it will be writen over.</p>
</div>
<span class="comment-copy">Did you try to use " f = open('workfile', 'w') " and see if python create the file itself ? I know In some languages this is a normal behavior.</span>
<span class="comment-copy">Right, but even if you use a with statement don't you have to do <code>f.close()</code> to close the file?</span>
<span class="comment-copy">@Nathan2055: It's kind of the whole point of <code>with</code> that you don't need <code>f.close()</code> (or, for other types, <code>lock.release()</code>, etc.)</span>
<span class="comment-copy">Ah, okay. Thanks!</span>
<span class="comment-copy">Thanks @jordanm for the edit. I usually do footnote links but I was rushed today.</span>
