<div class="post-text" itemprop="text">
<p>I have the following recursive solution for the nth fibonacci number:</p>
<pre><code>def fib(n):
if n == 0:
    return 0
elif n == 1:
    return 1
else:
    return fib(n-1) + fib(n-2)
x=input('which fibonnaci do you want?')
print fib(x)
</code></pre>
<p>I need to change this, so that it uses a stored memory cache and gets stuff out of that to speed up the process. I really don't know how to do this and google isn't helping.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is not the most elegant solution, but will help you learn how this works.</p>
<pre><code>import memcache

def fib(n):
    v = mc.get(str(n))
    if not v is None:
        print "Hit on cache: %s = %s" %(n, v)
        return v

    print "Miss on cache"
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        v = fib(n-1) + fib(n-2)
        mc.set(str(n), v)
        return v

mc = memcache.Client(['127.0.0.1:11211'], debug=0)
x=input('which fibonnaci do you want?')
print fib(x)
</code></pre>
<p>If you are on Ubuntu: sudo apt-get install python-memcache to run this code</p>
</div>
<div class="post-text" itemprop="text">
<p>decorate your function with this:</p>
<p><a href="http://docs.python.org/3/library/functools.html#functools.lru_cache" rel="nofollow">http://docs.python.org/3/library/functools.html#functools.lru_cache</a></p>
<p>one of the examples in the docs is, in fact, fibonacci:</p>
<pre><code>@lru_cache(maxsize=None)
def fib(n):
    if n &lt; 2:
        return n
    return fib(n-1) + fib(n-2)
</code></pre>
<p>Which gives:</p>
<pre><code>&gt;&gt;&gt; [fib(n) for n in range(16)]
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610]

&gt;&gt;&gt; fib.cache_info()
CacheInfo(hits=28, misses=16, maxsize=None, currsize=16)
</code></pre>
<p><strong>UPDATE</strong></p>
<p>This only works in Python3.2+</p>
<p>For a backport, checkout this page: <a href="http://code.activestate.com/recipes/578078-py26-and-py30-backport-of-python-33s-lru-cache/" rel="nofollow">http://code.activestate.com/recipes/578078-py26-and-py30-backport-of-python-33s-lru-cache/</a></p>
</div>
<span class="comment-copy">it is a task, and the task requires me to do it recursively. can you still tell me how to use memory caches though??</span>
<span class="comment-copy">@lru_cache returns as undefined</span>
<span class="comment-copy">it is a python3.2+ feature. based on your print statement i see you are using 2.x... sorry about that.</span>
<span class="comment-copy">Or use a memoize decorator <a href="http://code.activestate.com/recipes/578231-probably-the-fastest-memoization-decorator-in-the-/" rel="nofollow noreferrer">code.activestate.com/recipes/â€¦</a></span>
