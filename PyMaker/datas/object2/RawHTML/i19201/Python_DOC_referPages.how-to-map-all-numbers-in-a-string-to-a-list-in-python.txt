<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4289331/python-extract-numbers-from-a-string">Python: Extract numbers from a string</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>Say I have a string like</p>
<pre><code>"There are LJFK$(#@$34)(,0,ksdjf apples in the (4,5)"  
</code></pre>
<p>I want to be able to dynamically extract the numbers into a list: <code>[34, 0, 4, 5]</code>.<br/>
Is there an easy way to do this in Python?</p>
<p>In other words,<br/>
Is there some way to extract contiguous numeric clusters separated by any delimiter?</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure, use <a href="http://docs.python.org/3/library/re.html#re.findall">regular expressions</a>:</p>
<pre><code>&gt;&gt;&gt; s = "There are LJFK$(#@$34)(,0,ksdjf apples in the (4,5)"
&gt;&gt;&gt; import re
&gt;&gt;&gt; list(map(int, re.findall(r'[0-9]+', s)))
[34, 0, 4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do this without regular expressions, although it requires some more work:</p>
<pre><code>&gt;&gt;&gt; s = "There are LJFK$(#@$34)(,0,ksdjf apples in the (4,5)"
&gt;&gt;&gt; #replace nondigit characters with a space
... s = "".join(x if x.isdigit() else " " for x in s)
&gt;&gt;&gt; print s
                   34   0                      4 5
&gt;&gt;&gt; #get the separate digit strings
... digitStrings = s.split()
&gt;&gt;&gt; print digitStrings
['34', '0', '4', '5']
&gt;&gt;&gt; #convert strings to numbers
... numbers = map(int, digitStrings)
&gt;&gt;&gt; print numbers
[34, 0, 4, 5]
</code></pre>
</div>
<span class="comment-copy">Possible dup <a href="http://stackoverflow.com/questions/4289331/python-extract-numbers-of-a-string" title="python extract numbers of a string">stackoverflow.com/questions/4289331/…</a></span>
<span class="comment-copy">If the string were <code>"12.34"</code>, would you want <code>[12, 34]</code> or <code>[12.34]</code>?  IOW, is it only contiguous-digit integers you want?</span>
<span class="comment-copy">In this case it would be [12, 34], integers. The current answer works as desired (I just can't accept it yet)</span>
<span class="comment-copy">Using a list comprehension is usually preferable to using <code>map</code>. Especially since you're just casting the result to a list anyway.</span>
<span class="comment-copy">@Cairnarvon It usually is, except if you can simply call an existing function (because then you don't have to figure out the name of a temporary variable). The list creation is just for the nice output. If you were to iterate over the result, you could obviously skip it.</span>
<span class="comment-copy">You could have use <code>\d+</code> for the regex too.</span>
<span class="comment-copy">@Schoolboy Yes, but then one would have to use something significantly more complicated than <code>int</code> to support inputs like <code>٣٤</code>.</span>
<span class="comment-copy">@phihag Why is that?? how will those inputs get through the filter??</span>
<span class="comment-copy">I think I like this even better than the <code>itertools.groupby</code> solution I was going to propose.</span>
<span class="comment-copy">This is a great solution too</span>
