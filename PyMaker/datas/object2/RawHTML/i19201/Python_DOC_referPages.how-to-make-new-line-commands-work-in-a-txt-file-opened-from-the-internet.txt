<div class="post-text" itemprop="text">
<p>I just started using Python, I am trying to make a program that writes the lyrics of a song on the screen opened from the internet "www....../lyrics.txt".
My first code:</p>
<pre><code>    import urllib.request
    lyrics=urllib.request.urlopen("http://hereIsMyUrl/lyrics.txt")
    text=lyrics.read()
    print(text)
</code></pre>
<p>When I activated this code, it didn't give me the lyrics as they are written on the website, it gave me new line commands '\r\n' at all the places that should have been new lines and gave me all the lyrics in a long messy string. For example:
Some lyrics here\r\nthis should already be the next line\r\nand so on.</p>
<p>I searched the internet for codes to replace the '\r\n' commands with new lines and tried the following:</p>
<pre><code>    import urllib.request
    lyrics=urllib.request.urlopen("http://hereIsMyUrl/lyrics.txt")
    text=lyrics.read()
    text=text.replace("\r\n","\n")
    print(text)
</code></pre>
<p>I hoped it would atleast replace something, but instead it gave me a runtime-error:</p>
<pre><code>    TypeError: expected bytes, bytearray or buffer compatible object
</code></pre>
<p>I searched the internet about that error, but I didn't find anything connected to opening files from the internet.</p>
<p>I have been stuck at this point for hours and have no idea how to continue.
Please help!
Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your example is not working because the data returned by the <code>read</code> statement is a "bytes object". You need to decode it using an appropriate encoding. See also the docs for <a href="http://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="noreferrer"><code>request.urlopen</code></a>, <a href="http://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="noreferrer"><code>file.read</code></a> and <a href="http://docs.python.org/3/library/stdtypes.html#bytes-and-bytearray-operations" rel="noreferrer">byte array operations</a>.</p>
<p>A complete working example is given below:</p>
<pre><code>#!/usr/bin/env python3

import urllib.request

# Example URL
url="http://ntl.matrix.com.br/pfilho/oldies_list/top/lyrics/black_or_white.txt"

# Open URL: returns file-like object
lyrics=urllib.request.urlopen(url)

# Read raw data, this will return a "bytes object"
text=lyrics.read()

# Print raw data
print(text)

# Print decoded data:
print(text.decode('utf-8'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, bytes are treated differently from text strings. After the line</p>
<pre><code>text=lyrics.read()
</code></pre>
<p>If you try this</p>
<pre><code>print(type(text))
</code></pre>
<p>It returns</p>
<pre><code>&lt;class 'bytes'&gt;
</code></pre>
<p>So it is not a string, it's a list of bytes.</p>
<p>When you're calling <code>text=text.replace("\r\n","\n")</code> you're passing it strings, which is the reason for the error message. So you have two options.</p>
<ol>
<li><p>Convert variable "text" from bytes to text by adding this line after the
<code>text=lyrics.read()</code> line.</p>
<pre><code>text = text.decode("utf-8")
</code></pre></li>
<li><p>Change the <code>replace</code> call to use bytes instead of strings</p>
<pre><code>    text=text.replace(b"\r\n",b"\n")
</code></pre></li>
</ol>
<p>I recommend option 1 just in case you have more string manipulation to do on the text.</p>
</div>
<div class="post-text" itemprop="text">
<p>The following works for me in Python 3.2:</p>
<pre><code>import urllib.request
lyrics=urllib.request.urlopen("http://google.com/")
text=str(lyrics.read())
text=text.replace("\r\n","\n")
print(text)
</code></pre>
<p>Key difference was that lyrics.read() was returning a bytes object, rather than a string, which the replace() did not know how to handle. Wrapping this in str() before performing the replace works.</p>
</div>
<span class="comment-copy">"\r\n" is the Windows newline, "\n" is Linux and "\r" is Mac. So what do you mean with "it didn't give me any newlines"?</span>
<span class="comment-copy">You're welcome!</span>
<span class="comment-copy">I tried both options. First option worked perfectly and very easy to use. Unfortunately, the second one didn't work, it displayed the text same way with the '\r\n' things in it. But thank you very much!!! I love the first option!</span>
<span class="comment-copy">that's very strange...method 2 works when I try it. Make sure that you've got the <code>text=</code> part in there, is all I can think of. :/</span>
<span class="comment-copy">I don't know about Python 3.2, but it doesn't work for me in 3.3! But thanks for answering! :)</span>
