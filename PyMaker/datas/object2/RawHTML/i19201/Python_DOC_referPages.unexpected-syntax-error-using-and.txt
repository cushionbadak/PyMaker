<div class="post-text" itemprop="text">
<p>I have been set a simple task:</p>
<p>Write a program for a game where the computer generates a
random starting number between 20 and 30.
The player and the computer can remove 1,2 or 3 from the number
in turns. Something like this...
Starting number : 25
How many do you want to remove? 3
22 left
Computer removes 2
20 left
The player who has to remove the last value to bring the number
down to 0 is the loser.
1 left
Computer removes 1
You win!</p>
<p>I am trying to create it so that the player can only enter numbers 1, 2 or 3 to remove.</p>
<p>I get the syntax error of invalid syntax where the if statement is:</p>
<pre><code>import random
import time

start=random.randint(20,30)

print('Starting number is',start)

personremove=int(input('How many do you want to remove? '))

if personremove=&lt;3 or &gt;1:
    print('Enter a number between 1 and 3')
    personremove=int(input('How many do you want to remove? '))


current=start-personremove

print(current,'left')

compremove=random.randint(1,3)

current=start-personremove-compremove

print('Computer removes',compremove)

print(current,'left')
</code></pre>
<p>Any help would be greatly appreciated, I am only a beginner to python as you can probably tell.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>if personremove=&lt;3 or &gt;1:</code> should be</p>
<pre><code>if personremove &lt;= 3 or personremove &gt; 1:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to re-order those statements:</p>
<pre><code>if 1 &lt; personremove &lt;= 3:
</code></pre>
<p>python's <code>or</code> operator requires an object or expression on both the left and the right.  As you've written it, you have another <em>operator</em> on the right which is illegal.  also, <code>=&lt;</code> isn't a python operator.  It is <code>&lt;=</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>personremove=&lt;3 or &gt;1</code>  is not a legal expression. Use:</p>
<pre><code>if not (1 &lt;= personremove &lt;= 3):
</code></pre>
<p>This makes use of <a href="http://docs.python.org/3/reference/expressions.html#not-in" rel="nofollow">chained comparison operators</a>; it roughly means the same as:</p>
<pre><code>if personremove &lt; 1 or personremove &gt; 3:
</code></pre>
<p>but <code>personremove</code> is evaluated only once, and we made it clearer that the number is outside the range 1 - 3.</p>
<p>You probably wanted to use a <code>while</code> loop instead, to keep asking for a correct number:</p>
<pre><code>personremove = 0
while not (1 &lt;= personremove &lt;= 3):
    print('Enter a number between 1 and 3')
    try:
        personremove = int(input('How many do you want to remove? '))
    except ValueError:
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>your <code>if</code> statement only needs sligthly tweaking. Try:</p>
<pre><code>if 1 &lt;= personremove &lt;= 3:
    ...
</code></pre>
<p>Hope that helps</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several errors:</p>
<ol>
<li>Your instructions are inconsistent. The only whole integer that is <em>Between</em> 1 and 3 is 2. But surely that is not what you meant. You meant Enter either 1, 2 or 3. </li>
<li>You have the syntax of the greater than backward. It should be <code>personremove &gt; 3</code> read personremove is greater than 3.</li>
<li><p>You cannot just add on <code>&gt;1</code> after the <code>or</code>, you must again state what variable should be related to <code>1</code>. This will work <code>personremove &lt; 1</code> </p>
<p>if personremove &lt; 1 or personremove &gt; 3:</p></li>
</ol>
<p>There are also better ways to code this in general. Putting this section into a loop, for example.</p>
</div>
<span class="comment-copy">what do you think this is supposed to do? <code>if personremove=&lt;3 or &gt;1:</code> this isn't valid Python.</span>
<span class="comment-copy">The logic is incorrect. The statement should only be True if the number is <i>outside</i> the range of 1 - 3..</span>
<span class="comment-copy">I'm with @MartijnPieters here ... I'm pretty sure this test will be true for <i>any number</i>.  Although, with OP's original statement, it's a little ambiguous to try to parse out what was originally meant.</span>
<span class="comment-copy">This will be true for <code>personremove</code> equal to 2 or 3, which is not what the OP wanted, I think. He wants it to be true when the value is <i>outside</i> the values 1, 2 or 3..</span>
<span class="comment-copy">@MartijnPieters -- I honestly don't know.  I suppose if I can't parse it, it makes it pretty easy to argue why python's interpreter can't parse it either :)</span>
<span class="comment-copy">@mgilson: Clearly it's time to get some sleep for me..</span>
<span class="comment-copy"><code>Martijn.personmove(where=BED)</code></span>
