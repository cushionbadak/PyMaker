<div class="post-text" itemprop="text">
<p>I am using Python 3.3.  I have tried this:</p>
<pre><code># beginning and ending quotes are to compensate for Microsoft kludge
emuleappfile = '"'+os.environ['ProgramFiles']+'\\eMule\\emule.exe'+'"'
os.system(emuleappfile)
# vvv beginning and ending quotes are to compensate for Microsoft kludge
vuzeappfile = '"'+os.environ['ProgramFiles']+'\\Vuze\\azureus.exe'+'"'
os.system(vuzeappfile )
</code></pre>
<p>and this</p>
<pre><code># beginning and ending quotes are to compensate for Microsoft kludge
emuleappfile = '"'+os.environ['ProgramFiles']+'\\eMule\\emule.exe'+'"'
itran = os.system(emuleappfile)
# vvv beginning and ending quotes are to compensate for Microsoft kludge
vuzeappfile = '"'+os.environ['ProgramFiles']+'\\Vuze\\azureus.exe'+'"'
itran = os.system(vuzeappfile)
</code></pre>
<p>emule opens, but the program does not open vuze until after emule has been closed. grr.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>os.system(''.join(['start "', os.environ['ProgramFiles'], '\\eMule\\emule.exe', '"']))</code> (specifically the <code>start</code> part) will run the executable in a separate window, therefore not blocking the current one.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>subprocess.Popen</code>. On Windows this calls the Win32 API function <code>CreateProcess</code>.  </p>
<p><a href="http://docs.python.org/3/library/subprocess" rel="nofollow">http://docs.python.org/3/library/subprocess</a></p>
<pre><code>import os
import subprocess

emuleappfile = os.path.join(os.environ['ProgramFiles'], 'eMule', 'emule.exe')
vuzeappfile = os.path.join(os.environ['ProgramFiles'], 'Vuze', 'azureus.exe')
proc_emule = subprocess.Popen([emuleappfile])
proc_vuze = subprocess.Popen([vuzeappfile])
</code></pre>
<p><strong>Edit:</strong></p>
<p>Popen exposes a few fields of the <a href="http://msdn.microsoft.com/en-us/library/ms686331" rel="nofollow"><code>STARTUPINFO</code></a> structure for setting process and window properties. See the section <a href="http://docs.python.org/3/library/subprocess#windows-popen-helpers" rel="nofollow">Windows Popen Helpers</a> in the subprocess documentation. For example, use the following to start vuze in a hidden window, which will also be the window's default state for Win32 <a href="http://msdn.microsoft.com/en-us/library/ms633548" rel="nofollow">ShowWindow</a>:</p>
<pre><code>si = subprocess.STARTUPINFO()
si.dwFlags = subprocess.STARTF_USESHOWWINDOW
si.wShowWindow = subprocess.SW_HIDE
proc_vuze = subprocess.Popen([vuzeappfile], startupinfo=si)
</code></pre>
</div>
<span class="comment-copy">I will try this method over the weekend...</span>
<span class="comment-copy">after some experimenting, I found this works: os.system('start /d"'+vuzepath+'" /b azureus.exe')</span>
<span class="comment-copy">that did it!  thank you.</span>
<span class="comment-copy">Having let this run for a while, I have noticed a problem.  emule stays in the task tray as expected.  vuze, though pops up out of the task tray periodically (I have not figured out exactly how long yet...) and its window takes focus??</span>
