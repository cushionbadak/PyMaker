<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2187135/range-and-xrange-for-13-digit-numbers-in-python">range and xrange for 13-digit numbers in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I want to iterate a large number such as 600851475143 using the range() function in Python. But whenever I run the program it gives me an OverflowError.
I have used the following code - </p>
<pre><code>um = long(raw_input())
for j in range(1,num):
....
</code></pre>
<p>I have tried it many times but it is not working!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>itertools.islice()</code> if your indices are long numbers:</p>
<pre class="lang-py prettyprint-override"><code>from itertools import islice, count
islice(count(start, step), (stop-start+step-1+2*(step&lt;0))//step)
</code></pre>
<p>Python 3's <code>range()</code> can handle python longs as well. </p>
<p>Simplified to your case:</p>
<pre><code>for j in islice(count(1), num - 1):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Although <code>xrange</code> seems to achieve what you want, it can't handle numbers that large. You may need to use this recipe from <a href="http://docs.python.org/2/library/functions.html" rel="nofollow">here</a></p>
<blockquote>
<p>CPython implementation detail: xrange() is intended to be simple and fast. Implementations may impose restrictions to achieve this. The C implementation of Python restricts all arguments to native C longs (“short” Python integers), and also requires that the number of elements fit in a native C long. If a larger range is needed, an alternate version can be crafted using the itertools module: <code>islice(count(start, step), (stop-start+step-1+2*(step&lt;0))//step)</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>don't use for, use while</p>
<pre><code>counter = long(1)
while counter &lt; num:
    ...
</code></pre>
</div>
<span class="comment-copy">What do you want to do with these numbers? You almost certainly want <code>xrange</code> instead of range</span>
<span class="comment-copy">@Thomas The number is too big for <code>xrange</code></span>
<span class="comment-copy">You may want to try this:  [range too large][1]        [1]: <a href="http://stackoverflow.com/questions/9816603/range-is-too-large-python" title="range is too large python">stackoverflow.com/questions/9816603/range-is-too-large-python</a>    Hope it helps</span>
<span class="comment-copy"><i>Hint</i>: If you think the solution involves <code>range(1, 600851475143)</code>, you might need a different solution. That's going to be rather painfully slow.</span>
<span class="comment-copy">Can you then correct my code?</span>
<span class="comment-copy">Ah, I'm using 64bit Python so I didn't notice</span>
<span class="comment-copy">in python 3 you can use range, in python2 use xrange as advised <a href="http://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#typesseq-range</a></span>
