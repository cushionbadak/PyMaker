<div class="post-text" itemprop="text">
<p>I am attempting to loop over all the columns in a dataframe, titled "Struct.DF" and generate a histogram plot for each column.</p>
<pre><code>#This is a summary of columns

Struct_DF.columns

Index(['ID', 'lh_BA1_ExV_Area', 'lh_BA2_ExV_Area', 'lh_BA3a_ExV_Area',
   'lh_BA3b_ExV_Area', 'lh_BA4a_ExV_Area', 'lh_BA4p_ExV_Area',
   'lh_BA6_ExV_Area', 'lh_BA44_ExV_Area', 'lh_BA45_ExV_Area',
   ...
   'R_presubiculum_Vol_Adj', 'R_parasubiculum_Vol_Adj',
   'R_molecular_layer_HP_Vol_Adj', 'R_GC_ML_DG_Vol_Adj', 
'R_CA3_Vol_Adj',
   'R_CA4_Vol_Adj', 'R_fimbria_Vol_Adj', 'R_HATA_Vol_Adj',
   'R_Whole_hippocampus_Vol_Adj', 'eTIV'],
  dtype='object', length=735)

# Check for normalcy of distribution of each variable.

# Set the column names

columns= Struct_DF.columns

# Loop over all columns
#using 2x2 matrix representation of histrogram specified by firs two 
#digits of subplot index and third index specifies the plot number (eg. #221)

i = 221
for col in columns:
    plt.subplot(i)
    plt.hist(Struct_DF[col])
    i+=1
</code></pre>
<p>I get the following Error message:</p>
<pre><code>ValueError: num must be 1 &lt;= num &lt;= 4, not 5
</code></pre>
<p>Is there a way to generate these plots side by side?</p>
<p>Note: the question has been edited based on a suggested answer.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Struct_DF.col</code> is equivalent to <code>Struct_DF['col']</code> that's why you get the error, there is no column <code>'col'</code>, what you want to do is <code>Struct_DF[col]</code></p>
<p>To plot the histograms you can do:</p>
<pre><code>fig, axs = plt.subplots(len(df.columns), figsize=(5, 25))
for n, col in enumerate(df.columns):
    df[col].hist(ax=axs[n])
</code></pre>
<p>If you want to use a 2x2 grid you can instead do like this, but you need to specify the 4 columns you want to plot:</p>
<pre><code>cols_to_plot = ['lh_BA4a_ExV_Area', 'lh_BA4p_ExV_Area',
   'lh_BA6_ExV_Area', 'lh_BA44_ExV_Area']


fig, axs = plt.subplots(2, 2)
for n, col in enumerate(cols_to_plot):
    i, j = [int(l) for l in "{0:02b}".format(n)]
    df[col].hist(ax=axs[i][j])
</code></pre>
<p>You can also use <code>ax[i].hist(df[col])</code> instead of <code>df[col].hist(ax=ax[i])</code> or:</p>
<pre><code>for i in range(4):
    plt.subplot(2, 2, i)
    plt.hist(df[cols_to_plot[i]])
</code></pre>
</div>
<span class="comment-copy">thanks! Using the syntax you suggested advances the loop, however, it errors out based on plotting. I get the following error: ValueError: num must be 1 &lt;= num &lt;= 4, not 5. Do you know if there is a way to set for the plots to be side by side?</span>
<span class="comment-copy">@dzang was right. I edited my question based on his helpful suggestion.</span>
