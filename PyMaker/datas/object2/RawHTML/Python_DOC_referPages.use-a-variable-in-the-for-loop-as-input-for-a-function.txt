<div class="post-text" itemprop="text">
<p>Suppose I have a function that sums:</p>
<pre><code>def sum(x=10, y=15):
    return x + y
</code></pre>
<p>And then a for loop:</p>
<pre><code>for i in range(5):
    a = sum() # 25
    b = sum(a) # 40
    c = sum(b) # 55
    d = sum(c) # 70
</code></pre>
<p>The above is not right, but hopefully gives the idea that first "a" is assigned 25.  Then I would like the second iteration to call the sum function, but use the first iteration as input for the first parameter in the sum function.  Then in a third iteration, there would be a call to the sum function, with the second interation's value.  I just added letters to make the example more clear, <strong>but those letters would actually refer to the iterations of the for loop.</strong></p>
<p>Does anyone know how can I implement something like this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def sum(x, y=15):
    return x + y

a = 10
for i in range(5):
  a = sum(a)
  print("Output of "+str(i)+" iteration is : "+str(a))

print("Final output is : "+str(a))
</code></pre>
<p>As you explained in question:<br/>
You just need to assign one variable <strong>(i.e a=10)</strong> and pass it to function, then in first iteration function take first parameter as 10 and second parameter 15 which is default, it return 25. then in second iteration it pass 25 as first parameter and and default parameter as 15, it return 40 and so on <strong>...</strong> this loop iterate for five time and at the end you will get result. </p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative using a <code>while</code> loop:</p>
<pre><code>def sum_(x, n, y=15):
    counter = 0
    while n &gt; counter:
      x += y
      print(x)
      counter += 1

sum_(10, 5)
</code></pre>
<p>By passing another variable <code>n</code>, you can define the range of the loop which will run until the counter matches. I've added the <code>_</code> to the function name as it is generally frowned upon to overwrite the built-in functions.</p>
</div>
<span class="comment-copy">So what's your problem?  What trouble are you having with implementing such a loop?  What have you tried?</span>
<span class="comment-copy">I read about several operations, such as +=, but I don't know how to integrate it with the function call.</span>
<span class="comment-copy">I can see no reason to prefer a <code>while</code> loop here.</span>
