<div class="post-text" itemprop="text">
<p>I'm trying to use multiprocessing on my script. But it doesn't work. what am I doing wrong? I searched too much but I didn't find the solution. Can you help me guys? </p>
<p>It seems <strong>HistogramMerger</strong> working with multiprocessing. I saw some print-out when I run the script but I don't get any result file which I normally getting with for loop. </p>
<p><strong>I'm getting this error message:</strong></p>
<pre><code>AttributeError: 'module' object has no attribute 'histogramAdd'
</code></pre>
<p>ps: This histogram merger script merging multiple files to one single file. And, I'm trying to run this script faster than normal. If you know better solution, please let me know.</p>
<p><strong>without multiprocessing (working)</strong></p>
<pre><code>from histogram_merger import HistogramMerger

var1=697
var2=722
with HistogramMerger("results/resMergedHistograms_"+str(var1)+"_"+str(var1)+".root") as hm:
    for i in xrange(var1,var2+1):
        print "Run Number : " +str(i)
        hm.addHistogramFile("../results/run"+str(i)+"/run"+str(i)+"_histo.root")
</code></pre>
<p><strong>with MultiProcessing</strong></p>
<pre><code>from histogram_merger import HistogramMerger
from multiprocessing import Pool

var1=697
var2=722

##################################################

arrayOfNumbers = [xx for xx in range(var1, var2+1)]
print(arrayOfNumbers)
pool = Pool(8) 

def histogramAdd(run):
    print("Run Number : "+str(run))
    hm.addHistogramFile("../results/run"+str(run)+"/run"+str(run)+"_histo.root")

if __name__ == '__main__':
    with HistogramMerger("results/resMergedHistograms_"+str(var1)+"_"+str(var2)+".root") as hm: 
        pool.map(histogramAdd, arrayOfNumbers)
        pool.join()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error message is odd. <code>hm</code> is not in scope within the function <code>histogramAdd</code>. I would expect something like <code>NameError: name 'hm' is not defined</code>. Perhaps there is some <code>hm</code> import you are not showing.</p>
<p>Regardless, you need to pass the object to the function. You can use <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial</code></a> for this. E.g.</p>
<pre><code>from functools import partial

# ...

def histogramAdd(run, hm):  # &lt;- extra parameter!
    print("Run Number : "+str(run))
    hm.addHistogramFile("../results/run"+str(run)+"/run"+str(run)+"_histo.root")

if __name__ == '__main__':
    with HistogramMerger("results/resMergedHistograms_"+str(var1)+"_"+str(var2)+".root") as hm: 
        pool.map(partial(histogramAdd, hm), arrayOfNumbers)
        pool.join()
</code></pre>
</div>
