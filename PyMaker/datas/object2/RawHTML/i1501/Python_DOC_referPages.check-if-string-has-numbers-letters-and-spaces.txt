<div class="post-text" itemprop="text">
<p>I'm trying to come up with an assert statement that checks whether a nonempty string, s, contains alphanumeric characters and spaces:</p>
<pre><code>    assert s.isalnum()
</code></pre>
<p>I understand that this will return False if there are spaces because it checks that whether every character is either a letter or number.  How do I fix this?</p>
<p>EDIT: For clarification, I'm trying to create an assert statement that checks whether a nonempty string contains alphanumeric characters and/or spaces.  For example, "    a 4    bc  " and "ab" should both return True.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe this is what you want:</p>
<pre><code>assert any(substr.issapce() or substr.isdigit() or substr.isalpha() for substr in s)
</code></pre>
<p>Strings for testing:</p>
<pre><code>&gt;&gt;&gt; s1 = '123 45    abc  67  d'
&gt;&gt;&gt; s2 = '123456'
&gt;&gt;&gt; s3 = 'abcd'
&gt;&gt;&gt; s4 = ':?--==++'
</code></pre>
<p>Check whether a string contains any space:</p>
<pre><code>&gt;&gt;&gt; def hasAnySpace(str):
...   return ' ' in str
...
&gt;&gt;&gt; hasAnySpace(s1)
True
&gt;&gt;&gt; hasAnySpace(s2)
False
&gt;&gt;&gt; hasAnySpace(s3)
False
&gt;&gt;&gt; hasAnySpace(s4)
False
</code></pre>
<p>Check whether a string contains any digit, you can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any</a> function and <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer">str.isdigit</a> function:</p>
<pre><code>&gt;&gt;&gt; def hasAnyDigit(str):
...   return any (substr.isdigit() for substr in str)
...
&gt;&gt;&gt; hasAnyDigit(s1)
True
&gt;&gt;&gt; hasAnyDigit(s2)
True
&gt;&gt;&gt; hasAnyDigit(s3)
False
&gt;&gt;&gt; hasAnyDigit(s4)
False
</code></pre>
<p>Check whether a string contains any alphabetic character, you can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any</a> function and <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer">str.isalpha</a> function:</p>
<pre><code>&gt;&gt;&gt; def hasAnyAlpha(str):
...   return any(substr.isalpha() for substr in str)
...
&gt;&gt;&gt; hasAnyAlpha(s1)
True
&gt;&gt;&gt; hasAnyAlpha(s2)
False
&gt;&gt;&gt; hasAnyAlpha(s3)
True
&gt;&gt;&gt; hasAnyAlpha(s4)
False
</code></pre>
<p><strong>Check whether a string contains any number, or any alphabetic character or any space</strong>:</p>
<pre><code>&gt;&gt;&gt; def hasAnyAlNumSpace(str):
...   return any(substr.isalpha() or substr.isdigit() or substr.isspace() for substr in str)
...
&gt;&gt;&gt; hasAnyAlNumSpace(s1)
True
&gt;&gt;&gt; hasAnyAlNumSpace(s2)
True
&gt;&gt;&gt; hasAnyAlNumSpace(s3)
True
&gt;&gt;&gt; hasAnyAlNumSpace(s4)
False
</code></pre>
<p>If you want to use assert statement, you can use any combination of them:</p>
<pre><code>&gt;&gt;&gt; assert hasAnySpace(s1) or hasAnyDigit(s1) or hasAnyAlpha(s1) 
&gt;&gt;&gt; assert hasAnySpace(s2) or hasAnyDigit(s2) or hasAnyAlpha(s2)
&gt;&gt;&gt; assert hasAnySpace(s3) or hasAnyDigit(s3) or hasAnyAlpha(s3)
&gt;&gt;&gt; assert hasAnySpace(s4) or hasAnyDigit(s4) or hasAnyAlpha(s4)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AssertionError
&gt;&gt;&gt;
&gt;&gt;&gt; assert hasAnySpace(s1)
&gt;&gt;&gt; assert hasAnySpace(s2)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AssertionError
&gt;&gt;&gt;
&gt;&gt;&gt; assert hasAnyAlNumSpace(s1)
&gt;&gt;&gt; assert hasAnyAlNumSpace(s2)
&gt;&gt;&gt; assert hasAnyAlNumSpace(s3)
&gt;&gt;&gt; assert hasAnyAlNumSpace(s4)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AssertionError
</code></pre>
<p>Of course, if you don't like these methods, you can simply use assert like this:</p>
<pre><code>assert ' ' in s1    
assert any(substr.isdigit() for substr in s1)
assert any(substr.isalpha() for substr in s1)
assert (' ' in s1) or any(substr.isdigit() or substr.isalpha() for substr in s1)
assert any(substr.issapce() or substr.isdigit() or substr.isalpha() for substr in s1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">all</a>, to check if every character is alphanumeric or space:</p>
<pre><code>text = "apple and 123"

result = all(c.isalnum() or c.isspace() for c in text)
print(result)

text = "with ."

result = all(c.isalnum() or c.isspace() for c in text)
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>True
False
</code></pre>
<p>If it most contain spaces <em>and</em> alphanumeric characters, you can do:</p>
<pre><code>def only_alnum_and_spaces(t):
    counts = {"spaces" : 0, "alnums": 0}
    for c in t:
        if c.isalnum():
            counts["alnums"] += 1
        elif c.isspace():
            counts["spaces"] += 1
        else:
            return False
    return counts["alnums"] &gt; 0 and counts["spaces"] &gt; 0

print(only_alnum_and_spaces("apple and 123"))
print(only_alnum_and_spaces("with ."))
print(only_alnum_and_spaces("appleand123"))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>True
False
False
</code></pre>
<p>Also note, as mentioned by @Chris_Rands that this .isspace considers tabs as whitespaces.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could remove the spaces to test:</p>
<pre><code>assert s.replace(" ","").isalnum()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This would be one way</p>
<pre><code>def customIsAlnum(String[] words):
    if(len(words) &gt; 1):
       for(word in words):
           if(!word.isalnum()):
               return false
    else:
        return false
    return true


String str = "chelsea scored 3 goals"
String[] words = str.split()
print customIsAlnum(words)
</code></pre>
</div>
<span class="comment-copy">Please provide some examples to help us understand your problem</span>
<span class="comment-copy">Side note: <code>assert</code> is almost certainly wrong for this, you should <code>raise</code> an exception to valid inputs, <code>assert</code> is for sanity checks that conceptually can't fail</span>
<span class="comment-copy"><code>if s.replace(' ','').isalnum() and ' ' in s: print('valid input')</code></span>
<span class="comment-copy">What is exactly your requirement? In your title you say <i>numbers, letters OR spaces</i>, but in the question you say <i>AND spaces</i>. So is your string supposed to contain all these (numbers, letters and spaces) or just one of them?</span>
<span class="comment-copy">Sorry, my question is for numbers, letters, AND spaces.  My string may contain any of them (numbers, letters and spaces).  This is for a class and I'm supposed to use an assert statement to check for this.</span>
<span class="comment-copy">note <code>is.space()</code> also returns true for tabs and other whitespace</span>
<span class="comment-copy">@usr2564301 Updated the answer. Also the title of the question says if must check if the string contains number, letters <b>or</b> spaces.</span>
<span class="comment-copy">@usr2564301 requirement is not clear, in the title the OP says "OR spaces".</span>
