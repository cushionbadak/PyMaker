<div class="post-text" itemprop="text">
<p>I want to use more than one word in !=, but I can't for the life of me understand or google my way how to. 
Can anyone help, and explain why I can't just do it like:
!= "No" != "no" !="n" !="N":             etc etc</p>
<pre><code>answers = ["Yes", "Not now not ever.", "Unclear answer, try again.", "Maybe.", "Probably not.", "Try again later.",
           "My sources says no.", "My sources says yes.", "Only when there is a full moon.", "It is certain.",
           "Cannot predict now.", "Outlook not so good", "Very doubtful.", "You may rely on it.",
           "Yes - definitely.", "As I see it, yes.", "Signs point to yes."]    

while str(input("Do you want to ask the Magic 8Ball a question?  Yes or No?  ")) != "No" != "no": # &lt;-- problematic line
    str(input("Ask the mighty 8Ball your question:  "))
    randomanswer = answers[random.randint(0, len(answers) -1)]
    print("\n","The Magic 8Ball says: ")
    print(randomanswer, "\n")    
else:
    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a tuple of sentinel-values, e.g.</p>
<pre><code>while foo not in ('No', 'no', 'N', 'n'):
    # code
</code></pre>
<p>or </p>
<pre><code>while foo.lower() not in ('no', 'n'):
    # code
</code></pre>
<p>If there are a huge amount of sentinels, a <code>set</code> will perform faster than a tuple (for low amounts of values, hashing is not worth it). </p>
<p>You might also want to look into the <a href="https://docs.python.org/3/library/re.html" rel="noreferrer"><code>re</code></a> module for more sophisticated pattern matching.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<pre><code>while str(input("Do you want to ask the Magic 8Ball a question?  Yes or No?  ")) not in ["No", "no"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for a way to chain together <em>conditional statements</em>. Unfortunately you cannot do it the way you're trying to do. However, you can use <code>and</code> and <code>or</code> to chain them together, which is how it's normally done. For example:</p>
<pre><code>userinput = str(input("Do you want to ask the Magic 8Ball a question?  Yes or No?  "))

while userinput != "No" and userinput != "no":
    # have to get user input again at end of loop
</code></pre>
<p>But an even better approach is to find how to logically turn this into a single conditional, in this case using <code>lower</code> on the user input:</p>
<pre><code>userinput = str(input("Do you want to ask the Magic 8Ball a question?  Yes or No?  "))
userinput = userinput.lower() # make it lowercase

while userinput != "no":
    # have to get user input again at end of loop
</code></pre>
<p>Finally, you can use <code>random.choice</code> to provide a random element from your answers array.</p>
</div>
<div class="post-text" itemprop="text">
<p>Change your problematic line to:</p>
<pre><code>while input("Do you want to ask the Magic 8Ball a question?  Yes or No?  ").strip().lower() != "no":
</code></pre>
<p>This way, you convert the input string to lowercase (<code>lower()</code>) while also stripping any space the user might have typed in (<code>strip()</code>)</p>
<p>Then, if user types: "No", <code>lower()</code> will convert it to all lowercase, "no" and then check it towards your <code>!= 'no'</code>.</p>
<p>Anything typed into <code>input()</code> is a string, so can omit the <code>str()</code>.</p>
</div>
<span class="comment-copy">The language just isn't designed this way. Assign the input to a variable and compare this variable then to one after another.</span>
<span class="comment-copy">Maybe you could use <code>not in</code> instead? e.g. <code>while answer not in ['no', 'No']</code></span>
