<div class="post-text" itemprop="text">
<p>I have a .csv dataset of a large collection of idioms. Each line contains three elements (seperated by commas) that I would like to seperate:</p>
<p>1) The Index Number (0,1,2,3...)</p>
<p>2) The idiom itself</p>
<p>3) If the idiom is positive/negative/neutral</p>
<p>Here's a small example of what the .csv file looks like:</p>
<pre><code>0,"I did touch them one time you see but of course there was nothing doing, he wanted me.",neutral

1,We find that choice theorists admit that they introduce a style of moral paternalism at odds with liberal values.,neutral

2,"Well, here I am with an olive branch.",positive

3,"Its rudder and fin were both knocked out, and a four-foot-long gash in the shell meant even repairs on the bank were out of the question.",negative
</code></pre>
<p>As you can see, sometimes the idiom will contain quotation marks, while other times it wont. However, I don't think that will be difficult to sort.</p>
<p>I think the best way to organize this in Python would be through a dictionary, like so:</p>
<pre><code>example_dict = {0: ['This is an idiom.', 'neutral']}
</code></pre>
<p>So how can I split each line into three different strings (based on the comma), and then use the first string as the key number, and the last two as the corresponding list items within the dict?</p>
<p>What I initially had in mind was to try to split the commas with this code:</p>
<pre><code>for line in file:    
    new_item = ','.join(line.split(',')[1:])
</code></pre>
<p>But all it does is remove everything up to the first comma in a line, and I don't think doing a bunch of iterations through it would be efficient.</p>
<p>I'd like to get some advice on what the best method to organize data like this would be?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">an entire module</a> specifically dedicated to working with <code>csv</code> files. In this case, you can use it to make a list of lists out of your file. Let's call your file <code>idioms.csv</code> for now:</p>
<pre><code>import csv
with open('idioms.csv', newline='') as idioms_file:
    reader = csv.reader(idioms_file, delimiter=',', quotechar='"')
    idioms_list = [line for line in reader]

# Now you have a list that looks like this:
# [[0, "I did touch them...", "neutral"],
#  [1, "We find that choice...", "neutral"],
#  ...
# ]
</code></pre>
<p>and you can now sort the data or organize it however you like. </p>
</div>
