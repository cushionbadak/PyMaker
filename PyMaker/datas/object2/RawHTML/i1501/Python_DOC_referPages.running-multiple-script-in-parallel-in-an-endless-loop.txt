<div class="post-text" itemprop="text">
<p>I have 20 python scripts and i want to run them in parallel in different bash window, that i can do with the below command and run them in backend parallel:- </p>
<pre><code>python testv.py &amp;
python testv1.py &amp;
python testv2.py &amp;
python testv3.py &amp;
python testv4.py &amp;
python testv5.py &amp;
python testv6.py &amp;
python testv7.py &amp;
python testv8.py &amp;
python testv9.py &amp;
python testv10.py &amp;
python testv11.py &amp;
python testv12.py &amp;
python testv13.py &amp;
python testv14.py &amp;
python testv15.py &amp;
python testv16.py &amp;
python testv17.py &amp;
python testv18.py &amp;
python testv19.py &amp;
python testv20.py &amp;
</code></pre>
<p>I converted the above in a bash script :- <strong>vaa.sh</strong></p>
<pre><code>#!/bin/bash
python testv.py &amp;
python testv1.py &amp;
python testv2.py &amp;
python testv3.py &amp;
python testv4.py &amp;
python testv5.py &amp;
python testv6.py &amp;
python testv7.py &amp;
python testv8.py &amp;
python testv9.py &amp;
python testv10.py &amp;
python testv11.py &amp;
python testv12.py &amp;
python testv15.py &amp;
python testv16.py &amp;
python testv17.py &amp;
python testv18.py &amp;
python testv19.py &amp;
python testv20.py &amp;
</code></pre>
<p>I want to run this for 2 3 hours or say forever till the intervention. How can i achieve this.</p>
<p>I tried to add the <strong>vaa.sh</strong> in a cronjob for 15 minutes but i want to do it in a way so that as soon as the scripts will finish it should again start whether the total time is 15 mint or 20 min.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do that using <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">multiprocessing</a></p>
<pre><code>import os
import time
from multiprocessing import Process

def run_program(cmd):
    # Function that processes will run
    os.system(cmd)

# Creating command to run
commands = ['python testv.py']
commands.extend(['python testv{}.py'.format(i) for i in range(1, 21)])

# Amount of times your programs will run
runs = 1

for run in range(runs):
    # Initiating Processes with desired arguments
    running_programs = []
    for command in commands:
        running_programs.append(Process(target=run_program, args=(command,)))
        running_programs[-1].daemon = True

    # Start our processes simultaneously
    for program in running_programs:
        program.start()

    # Wait untill all programs are done
    while any(program.is_alive() for program in running_programs):
        time.sleep(1)
</code></pre>
<hr/>
<p>If you want to stop executing your programs after some desired time you could do this like so.</p>
<pre><code>desired_time = 2 * 60 * 60 # 2 Hours into seconds
start_time = time.time()

while True:
    # Initiating Processes with desired arguments
    running_programs = []
    for command in commands:
        running_programs.append(Process(target=run_program, args=(command,)))
        running_programs[-1].daemon = True

    # Start our processes simultaneously
    for program in running_programs:
        program.start()

    # Wait untill all programs are done or time has passed
    while any(program.is_alive() for program in running_programs) and time.time() - start_time &lt; desired_time:
        time.sleep(1)

    # If desired time has passed exit main loop
    if time.time() - start_time &gt; desired_time:
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>while true; do
   vaa.sh &amp;;
   #wait till the background process is done it will loop again.
   wait;
done;
</code></pre>
</div>
<span class="comment-copy">You can't fool me - that's 21 programs, not 20. So you want all 20 to start and then you wait till all 20 have finished before starting all 20 again? Or you want to keep all running all the time? So if program9 dies it gets restarted immediately regardless of the others?</span>
<span class="comment-copy">yes you got me right. and sorry for trying to fool you hehe.</span>
<span class="comment-copy">hey really nice solution. so if i wanna run it 1000 times i will do runs = 10000 but what if i wanna run it for one hour or something or 2 hours like that</span>
<span class="comment-copy">Yes, they all will run in parallel and if you set <code>runs</code> to 1000 each of your programs will be executed exactly 1000 times. If you want your program to execute for some amount of time you'd need to add condition that would break the loop if certain amount of time have passed. I'll try to implement it to my aswer in hour because I can't right now.</span>
<span class="comment-copy">I get it thanks a lto @Filip</span>
<span class="comment-copy">i need one more help... can you help me in getting answer of this question :-  <a href="https://stackoverflow.com/questions/53561794/iteration-over-a-pandas-df-in-parallel" title="iteration over a pandas df in parallel">stackoverflow.com/questions/53561794/â€¦</a></span>
