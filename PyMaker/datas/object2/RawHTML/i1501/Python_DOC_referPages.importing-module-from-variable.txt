<div class="post-text" itemprop="text">
<p>I have different config files which are basically python files that define variables and I want to import them in my main program.</p>
<p>Usually I will have a "config_file1.py" and do something like:</p>
<pre><code>import config_file1 as params

# and then I can access the different parameters as
params.var1
params.var2
</code></pre>
<p>Now I want to be able to select which config_file I want to use, so I want to pass a parameter when calling my program that tells which config file to use. Something like:</p>
<pre><code>config_filename = sys.argv[1]
import config_filename as params
</code></pre>
<p>However this looks for a file named "config_filename". </p>
<p>I want instead to import the file referenced by the value of config_filename</p>
<p>EDIT:</p>
<p>Basically my program will run a set of experiments, and those experiments need a set of parameters to run.</p>
<p>Eg:</p>
<pre><code>*** config1.py ****
num_iterations = 100
initial_value1 = 10
initial_value2 = 20 
</code></pre>
<p>So I can run my program loading those variables into memory.</p>
<p>However another config file (config2.py) might have another set of parameters, so I want to be able to select which experiment I want to run by loading the desired config file.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you <strong>really</strong> want to do this, you can use the importlib module:</p>
<pre><code>import importlib
params = importlib.import_module(sys.argv[1])
</code></pre>
<p>Then you can use the var like this</p>
<pre><code>params.var1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is in response to your details and not the question.</p>
<p>If you want to load variables such as <code>num_iterations = 100</code>, <code>initial_value1 = 10</code>, <code>initial_value2 = 20</code> from a file, then I'd really recommend some sort of config instead of abusing imports for global variables.</p>
<p>Json would be the easiest way, where you'd load the file and you'd straight up get a dict:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; params = json.loads(config_file1)
{'num_iterations': 100, 'initial_value1': 10, 'initial_value2': 20}
</code></pre>
<p>Alternatively you could use ConfigParser, which looks nicer, but I've found it to be quite prone to breaking.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do like this:</p>
<pre><code>config_filename = sys.argv[1]
params = __import__(config_filename)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I wouldn't recommend such a risky approach.  You relinquish all controls over at the point of the <code>sys.argv</code> and your script can fail if any one of the named attribute doesn't exist within your module.</p>
<p>Instead I would suggest explicitly controlling what are the supported modules being passed in:</p>
<pre><code>config_filename = sys.argv[1].lower()

if config_filename == 'os':
    import os as params
elif config_filename == 'shutil':
    import shutil as params
else:   # unhandled modules
    raise ImportError("Unknown module")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using <code>import</code> statement, you can use <code>__import__</code> function, like this:</p>
<pre><code>params = __import__('module_name')
</code></pre>
<p>Definition:</p>
<pre><code>importlib.__import__(name, globals=None, locals=None, fromlist=(), level=0)
</code></pre>
<p>Reference:
<a href="https://docs.python.org/3/library/importlib.html#importlib.__import__" rel="nofollow noreferrer">https://docs.python.org/3/library/importlib.html#importlib.<strong>import</strong></a></p>
</div>
<span class="comment-copy">This looks like an incredibly risky design, provided even if this was doable, what if you load up a config where <code>params.var1</code> doesn't exist? Your entire script would fail.</span>
<span class="comment-copy">I handle the cases where some variable might not exist. I just want to be able to define variables outside my program and to be able to select which set of variables I want to load.</span>
<span class="comment-copy">Won't work for me. Maybe you could suggest a better approach. Basically I have some experiment configurations that I want to run. Each experiment must have some parameters set to certain values. So I define those variables in a config.py file and import it. But I want to be able to select different configs</span>
<span class="comment-copy">Thank you for the code snippet, which might provide some limited, immediate help. A proper explanation would greatly improve its <a href="https://meta.stackexchange.com/q/114762/206345">long-term value</a> by describing why this is a good solution to the problem, and would make it more useful to future readers with other similar questions. Please edit your answer to add some explanation, including the assumptions you've made.</span>
<span class="comment-copy">@sepehr, too late, man, too late!</span>
