<div class="post-text" itemprop="text">
<p>I would like to retrieve an index of the element that matches a particular value
For e.g. I have an array of the format:</p>
<pre><code>data = [
  {
    type: &lt;string&gt;,
    texts: [ 
             text: &lt;String&gt;,
             locations: [
                           {
                             x: &lt;int&gt;,
                             y: &lt;int&gt;
                           }  
                        ]
           ]
  }

]
</code></pre>
<p>I'm using below to find whether an type exists:</p>
<pre><code>matching_data = next((item for item in data if item["type"] == "fruit"), None) 
</code></pre>
<p>If type exists, I'm checking whether a specific 'text' exists using the below:</p>
<pre><code>if macthing_data == None:
   &lt;do some thing&gt;
else:
   type_idx = 0
   for idx, item in matching_data:
       if item["type"] == "fruit":
          type_idx = idx
          break
</code></pre>
<p>then writing another generator (similar to above) to check whether matching 'text' exists.</p>
<p>Is there any way I retrieve the matching <code>idx</code> as well when checking whether a matching value exists?
I would be using the index to update the value in the array.
Sorry in case the post is not as legible as expected by the community.
thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>.</p>
<pre><code>def example_generator():
  yield 'a'
  yield 'b'
  yield 'c'

for index, value in enumerate(example_generator()):
  print(index, value)
</code></pre>
<p>outputs</p>
<pre><code>0 a
1 b
2 c
</code></pre>
</div>
<span class="comment-copy">Thank you. My assumption was that the value would be the same whether I use 'for index, value in enumerate(generator)' or 'for value in enumerate(generator)'. However, when I test this in my code, they seem  to work differently.  'for index, value in enumerate(generator)' seems to retrieve 'type' and 'texts'  where as 'for  value in enumerate(generator)' seem to return the dictionary of (An element of) data. My preference is to get the latter value but have the index as well. Did I miss something here.</span>
<span class="comment-copy">I could not get it working by using next() but was able to get it working by using list comprehension within the enumerate. I was able to retrieve both the index and the corresponding entity. Thank you for your help.</span>
