<div class="post-text" itemprop="text">
<p>I have the following in my urls.py:</p>
<p><code>url(r'^prstatus/(?P&lt;pk&gt;\d+)/(?P&lt;organization&gt;.+)/' +
        '(?P&lt;repository&gt;.+)/(?P&lt;pr&gt;\d+)/$',PRStatus.get_pr_status, name="one_pr_in_repo"),</code></p>
<p>The url that I enter is:
<code>localhost:8000/api/v1/prstatus/1/myrepo/docker-react/1</code></p>
<p>But if I <code>print(organization, repository, pr)</code>.<br/>
I get <code>myrepo/docker-react 2 None</code></p>
<p>Organization gets assigned <strong>myrepo/docker-react</strong> instead of <strong>myrepo</strong>.</p>
<p>Can someone help on this?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that </p>
<pre><code>r'^prstatus/(?P&lt;pk&gt;\d+)/(?P&lt;organization&gt;.+)/' + '(?P&lt;repository&gt;.+)/(?P&lt;pr&gt;\d+)/$'
</code></pre>
<p>is regular expression. The <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">python documentation for regular expressions</a> explains:</p>
<blockquote>
<p>The '*', '+', and '?' qualifiers are all greedy; they match as much text as possible. Sometimes this behaviour isn’t desired; if the RE <code>&lt;.*&gt;</code> is matched against <code>'&lt;a&gt; b &lt;c&gt;'</code>, it will match the entire string, and not just <code>'&lt;a&gt;'</code>. Adding ? after the qualifier makes it perform the match in non-greedy or minimal fashion; as few characters as possible will be matched. Using the RE <code>&lt;.*?&gt;</code> will match only <code>'&lt;a&gt;'</code>.</p>
</blockquote>
<p>Because <code>.</code> matches any character, including <code>\</code>, you need to replace <code>.+</code> by <code>.+?</code></p>
<p>Another option is to change <code>.</code> to something that better reflects which characters should be matched. Every organization and repository name I know of only contains alphanumeric characters, underscores and whitespaces (which are replaced by dashes in urls), so this will probably work:</p>
<pre><code>r'^prstatus/(?P&lt;pk&gt;\d+)/(?P&lt;organization&gt;[\w-]+)/(?P&lt;repository&gt;[\w-]+)/(?P&lt;pr&gt;\d+)/$'
</code></pre>
</div>
<span class="comment-copy">I tried the above one still gave me the same issue. I did notice one thing that the regex works a few times and doesn't work the rest of the times. If I keep hitting the same API call again and again 1 out of 10 requests get processed correctly: paramaters get correct values, but rest of the times it gives me the issue mentioned in the question. I added a workaround where I split the value in organization into organization and repository. :( Not sure if this is a bug.</span>
<span class="comment-copy">@AratiKulkarni I do not know if you are experiencing a bug, but be sure to debug every parameter. A regular expression should match the same string in the same way every time. Maybe there is only a difference of a `` at the end of a string, that decides wether it works like you want it to or not.</span>
