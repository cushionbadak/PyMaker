<div class="post-text" itemprop="text">
<p>I need to check for missing items between two lists. Show me what accounts are in the check, but not in account_codes list. I think i need regex here. </p>
<pre><code>Account_codes = ['55555', '000002255a1', '98123a026', '4561b', '0000012e5', '987654321']
Check = ['55555', '2255a1', '123a', '0004561b', '00000012e56', '0987654321']
</code></pre>
<ul>
<li>in this example, only two items are not a match. 12e56 &amp; 123a</li>
</ul>
<p>My difficulty, as you can see, is the data on both sides are not identical. Padding appears to have occured at some point and then stopped. Some data is padded with zeros, others isn't. The actual data set is large so I need to keep that in mind with any solution. </p>
<p>My immediate thought is to strip all leading zeros from both sides like so:</p>
<pre><code>stripped_acct = [item.lstrip('0') for item in Account_codes]
stripped_check = [item.lstrip('0') for item in Check]
matches = []
missing_from_acct = []
for item in stripped_check:
    if item in stripped_acct:
        matches.append(item)
    else:
        missing_from_account.append(item)
</code></pre>
<p>Is there a better solution to this problem or do you see any inefficiencies in my existing code? </p>
</div>
<div class="post-text" itemprop="text">
<p>Sets are the most efficient for such operations:</p>
<pre><code>a_set = set([i.lstrip('0') for i in Account_codes])
c_set = set([i.lstrip('0') for i in Check])
list(c_set - a_set)

&gt;&gt; ['123a', '12e56']
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">more on python sets here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try these:</p>
<pre><code>missing_from_account = list(set([item.lstrip('0') for item in Check])-set([item.lstrip('0') for item in Account_codes]))


matches = list(set([item.lstrip('0') for item in Check]).intersection(set([item.lstrip('0') for item in Account_codes])))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I will remove all '0' in front of main string by using regex, then use difference set to figure out what i missed.</p>
<pre><code>import re
Account_codes = ['55555', '000002255a1', '98123a026', '4561b', '0000012e5', '987654321']
Check = ['55555', '2255a1', '123a', '0004561b', '00000012e56', '0987654321']

Check_nozero = [re.findall(r"([0]+|0?)(\w+)",ele)[0][-1]  for ele in Check]
Account_codes_nozero = [re.findall(r"([0]+|0?)(\w+)",ele)[0][-1]  for ele in Account_codes]
print( list(set(Check_nozero) - set(Account_codes_nozero)) )
</code></pre>
</div>
<span class="comment-copy">why don't you use simple set operations like difference?</span>
<span class="comment-copy">You basically are comparing whether either of the <code>i</code>th element on the array end with the other element. Like, <code>00000251</code> and <code>251</code> is a match, whereas <code>0000251</code> and <code>2510</code> is not. I am not sure about Python regex, but in Bash (shell) we usually compare it with the <code>*</code> character. Something like, if <code>firstVar == *secondVar</code> &lt;&lt; This is in Bash. It can be similarly translated to Python, I guess.</span>
<span class="comment-copy">In <code>Check</code> there is a value ` '00000012e56'` and in <code>Account_codes</code> there is a value <code>'0000012e5'</code>. Should they be a match? I ask because you seem unsure of how the strings were padded or otherwise altered. It seems an account code was truncated so I thought you might still want that check value to match.</span>
<span class="comment-copy">also your values look much like hex, so if they are, you can convert them by casting to int:  <code>int(i, 16)</code> instead of stripping</span>
