<div class="post-text" itemprop="text">
<p>I have a list that is:</p>
<blockquote>
<p>a = [100, 200, 200, 400, 500, 600, 600, 700, 900, 1000, 400, 200, 500]</p>
</blockquote>
<p>if I try to find indices of the values in 'a' using:</p>
<pre><code>xlist=[]
for value in a:
    x = np.array(a.index(value), value)
    xlist.append(x)
print(xlist)
</code></pre>
<p>it gives me</p>
<blockquote>
<p>xlist = [0, 1, 1, 3, 4, 5, 5, 7, 8, 9, 3, 1, 4]</p>
</blockquote>
<p>Instead I want a list that gives me unique indices for every repeated value as well. Something like this:</p>
<blockquote>
<p>xlist = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]</p>
</blockquote>
<p>Something that jumps the index if it's already used and moves on to index the next duplicate value and does it further.
Any help would be appreciated. Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this could work:</p>
<pre><code>In [1030]: a = [100, 200, 200, 400, 500, 600, 600, 700, 900, 1000, 400, 200, 500]
In [1036]: idx = []

In [1037]: for index, val in enumerate(a):
      ...:     idx.append(index)

In [1038]: idx
Out[1038]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
<p>OR use <code>list comprehensions</code> for a 1-line command:</p>
<pre><code>In [1042]: idx = [index for index,val in enumerate(a)]
</code></pre>
<p>Works for both python2 and python3.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly, you are overthinking this. Duplicates or not, you seem to just want a list going from <code>0</code> to the last index of <code>a</code>.</p>
<p>If that's the case, simply issue</p>
<pre><code>&gt;&gt;&gt; list(range(len(a))) # Python 3
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
<p>or </p>
<pre><code>&gt;&gt;&gt; range(len(a)) # Python 2
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
</div>
<span class="comment-copy">Do you mean <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>?</span>
<span class="comment-copy">Thanks a lot, it works. I can't believe I didn't think of it.</span>
