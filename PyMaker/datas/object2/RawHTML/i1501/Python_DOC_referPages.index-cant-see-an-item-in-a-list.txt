<div class="post-text" itemprop="text">
<p>New to the index function. I am trying to display the hostname and IP address of my PC, but I'm stuck at this index part. If I comment it out and print the whole list, what I'm looking for is right there. So why can't .index see it?</p>
<pre><code>#!/usr/bin/python3.6

import socket 
import string
import subprocess
import tkinter
from tkinter import *

hostname = socket.gethostname()

arg='ip route list'    
p=subprocess.Popen(arg,shell=True,stdout=subprocess.PIPE)
data = p.communicate()
sdata = data[0].split()
ipaddr = sdata[ sdata.index('src')+1 ]


root = tkinter.Tk()
root.title(hostname)

L1 = Label(root, text=ipaddr)
L1.grid(row=1,column=2,sticky=W+E,padx=100,pady=10)

root.mainloop()
</code></pre>
<p>Contents of sdata:</p>
<pre><code>[b'default', b'via', b'10.30.5.1', b'dev', b'ens33', b'proto', b'dhcp', 
b'metric', b'100', b'10.30.5.0/24', b'dev', b'ens33', b'proto', b'kernel', 
b'scope', b'link', b'src', b'10.30.5.7', b'metric', b'100', b'169.254.0.0/16', 
b'dev', b'ens33', b'scope', b'link', b'metric', b'1000']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at what is returned by <code>p.communicate()</code>:</p>
<pre><code>&gt;&gt;&gt; p=subprocess.Popen(arg,shell=True,stdout=subprocess.PIPE)
&gt;&gt;&gt; data = p.communicate()
&gt;&gt;&gt; data
(b'default via 107.170.96.1 dev eth0 onlink \n10.8.0.0/24 via 10.8.0.2 dev tun0 \n10.8.0.2 dev tun0 proto kernel scope link src 10.8.0.1 \n107.170.96.0/20 dev eth0 proto kernel scope link src 107.170.105.131 \n', None)
</code></pre>
<p>Note the <code>b</code> prefixing the stdout output, this means it is not a Unicode-encoded string, but rather a sequence of bytes. This is called out in the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">documentation</a> for <code>POpen.communicate</code></p>
<blockquote>
<p>communicate() returns a tuple (stdout_data, stderr_data). The data
  will be strings if streams were opened in text mode; otherwise, bytes.</p>
</blockquote>
<p>When you split <code>data</code>, it will thus return a list of byte sequences (see how each item is also prefixed with <code>b</code>?):</p>
<pre><code>&gt;&gt;&gt; sdata = data[0].split()
&gt;&gt;&gt; sdata
[b'default', b'via', b'107.170.96.1', b'dev', b'eth0', b'onlink', b'10.8.0.0/24', b'via', b'10.8.0.2', b'dev', b'tun0', b'10.8.0.2', b'dev', b'tun0', b'proto', b'kernel', b'scope', b'link', b'src', b'10.8.0.1', b'107.170.96.0/20', b'dev', b'eth0', b'proto', b'kernel', b'scope', b'link', b'src', b'107.170.105.131']
</code></pre>
<p>What you're passing to <code>index</code>, <code>'src'</code>, is a string, not a byte sequence. These two are not equal:</p>
<pre><code>&gt;&gt;&gt; 'src' == 'src'
True
&gt;&gt;&gt; 'src' == b'src'
False
</code></pre>
<p>So, one solution to your problem is to pass the byte sequence <code>b'src'</code> to <code>index</code>:</p>
<pre><code>&gt;&gt;&gt; sdata.index(b'src')
18 
</code></pre>
<p>See <a href="https://stackoverflow.com/questions/6269765/what-does-the-b-character-do-in-front-of-a-string-literal">this SO question</a> for further information.</p>
</div>
<span class="comment-copy">Please show the contents of sdata.</span>
<span class="comment-copy">[b'default', b'via', b'10.30.5.1', b'dev', b'ens33', b'proto', b'dhcp', b'metric', b'100', b'10.30.5.0/24', b'dev', b'ens33', b'proto', b'kernel', b'scope', b'link', b'src', b'10.30.5.7', b'metric', b'100', b'169.254.0.0/16', b'dev', b'ens33', b'scope', b'link', b'metric', b'1000']</span>
<span class="comment-copy">PERFECT. And I learned stuff.</span>
