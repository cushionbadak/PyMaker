<div class="post-text" itemprop="text">
<p>I have an integer column(int64) in a dataframe with values as 20170811. (yyyymmdd)
Now i need to extract 08 only and store it as a new column.</p>
<pre><code>df['key'].floordiv(10000) 
</code></pre>
<p>gives me 2017. But i wanted 08 - how to get it ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Probably the most robust way is:</p>
<pre><code>import datetime
import pandas as pd

df = pd.DataFrame({'date': [20180201, 20180302, 20180403]})
df['month'] = pd.to_datetime(df['date'].astype(str), format='%Y%m%d').map(lambda x: x.strftime('%m'))
</code></pre>
<p>If you wanted the <code>df['month']</code> to be integer, just cast it with <code>col.astype(int)</code>.</p>
<p>Edit:
If you wanted your month in a format of Apr, May, etc., use <code>x.strftime('%b')</code>. You may want to look at <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">strftime documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Or use:</p>
<pre><code>df['key']=df.astype(str)['key'].map(lambda x: x[4:6]).astype(int)
</code></pre>
<p>As you said to @Stefan, do:</p>
<pre><code>import calendar
df['key']=df.astype(str)['key'].map(lambda x: x[4:6]).astype(int).apply(lambda x: calendar.month_name[int(x)-1])
</code></pre>
<p>Or <code>apply</code>:</p>
<pre><code>df['key']=df.astype(str)['key'].apply(lambda x: x[4:6]).astype(int)
</code></pre>
<p>As you said to @Stefan, do:</p>
<pre><code>import calendar
df['key']=df.astype(str)['key'].apply(lambda x: x[4:6]).astype(int).apply(lambda x: calendar.month_name[int(x)-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>New Answer</strong> (as requested in comments)</p>
<p>Converting to <code>Datetime</code> has several advantages if you want to format your datetime string. In order to do so you can use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.strftime.html" rel="nofollow noreferrer"><code>DataFrame.dt.strftime</code></a>. For more information on how to format strings and create custmo formats take a look at <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">this</a>.</p>
<pre><code>import pandas as pd

df = pd.DataFrame({'key': ['20181201', '20180302', '20180403']})

pd.to_datetime(df.key).dt.strftime('%b')
</code></pre>
<p>This will output:</p>
<pre><code>0    Dec
1    Mar
2    Apr
Name: key, dtype: object
</code></pre>
<hr/>
<p><strong>Old Answer</strong></p>
<p>What you can do is take the module of the value, divide it by 100 and drop the decimals:</p>
<pre><code>import pandas as pd

df = pd.DataFrame({'key': ['20181201', '20180302', '20180403']}).astype(int)

df['key'].map(lambda x: int((x % 10000) / 100))
</code></pre>
<p>Which outputs:</p>
<pre><code>0    12
1     3
2     4
Name: key, dtype: int64
</code></pre>
<p>In case you have strings, you could convert it to <code>Datetime</code> objects and simply access <code>month</code>:</p>
<pre><code>import pandas as pd

df = pd.DataFrame({'key': ['20181201', '20180302', '20180403']})

pd.to_datetime(df.key).map(lambda x: x.month)
</code></pre>
<p>giving you the same output.</p>
<hr/>
</div>
<div class="post-text" itemprop="text">
<p>You can convert your series to a string and then slice using Pandas <code>str</code> methods:</p>
<pre><code>df = pd.DataFrame({'date': [20180201, 20180302, 20180403]})

df['key'] = df['date'].astype(str).str[4:6]

print(df)

       date key
0  20180201  02
1  20180302  03
2  20180403  04
</code></pre>
<p>A much better alternative is to convert to <code>datetime</code> and extract months as integers:</p>
<pre><code>df['key'] = pd.to_datetime(df['date'].astype(str)).dt.month

print(df)

       date  key
0  20180201    2
1  20180302    3
2  20180403    4
</code></pre>
</div>
<span class="comment-copy">It might be better to treat that value as a string rather than integer.</span>
<span class="comment-copy">Thanks Stefan, just wanted to add bit more now. Instead of giving the output as 12, 3, 4. Is it possible to display the month ? Like Dec, Mar, Apr ?</span>
<span class="comment-copy">@Sheriff Yes ofc. I've updated my answer and references some links you might want to checkout.</span>
