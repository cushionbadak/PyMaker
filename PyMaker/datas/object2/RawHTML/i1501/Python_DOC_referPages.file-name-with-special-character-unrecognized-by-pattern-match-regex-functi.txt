<div class="post-text" itemprop="text">
<p>I'm working with Python 3.6.5 on a Winows 10.</p>
<p>I can not verify if a file exists in a directory or not.
The problem seems to come from the special character "^".</p>
<p>When I run the code below, the "WITHOUT_CIRCUMFLEX" and "^WITH_CIRCUMFLEX" files are well listed by the os.listdir () function.
However, the file "^ WITH_CIRCUMFLEX" is not recognized by the function pattern.match (file) ... while it exists!</p>
<p>Would anyone have an idea to solve this problem?
Thanks for your help</p>
<p><pre># coding: utf-8</pre></p>
<p>import pandas as pd
import os.path
import regex
path = "C:\Users\David\test"
list_name = ['WITHOUT_CIRCUMFLEX', '^WITH_CIRCUMFLEX']</p>
<p>df_empty = pd.DataFrame()</p>
<p>for name in list_name:
    df_empty.to_pickle('{path}\{name}.pkl'.format(**locals()))
    pattern = regex.compile('{name}.pkl'.format(**locals()))</p>
<code># Check if file already exist
check = False
for file in os.listdir(path):
    print("I found this file\t" + file)
    if pattern.match(file):
        check = True

if check is True:
    print("\t" + name + " file exist" + "\n")
else:
    print("\t" + name + " does not exist")
</code></div>
<div class="post-text" itemprop="text">
<p><code>^</code> is a regex meta character, so it'll not match a literal <code>^</code> character in text. You'd need to <em>escape</em> such characters:</p>
<pre><code>'\^WITH_CIRCUMFLEX'
</code></pre>
<p>If your inputs are generated or taken from another source, use the <code>regex.escape()</code> function to escape meta characters for you:</p>
<pre><code>for name in list_name:
    df_empty.to_pickle('{path}\{name}.pkl'.format(**locals()))
    name = regex.escape(name, special_only=True)
    pattern = regex.compile('{name}.pkl'.format(**locals()))
</code></pre>
<p>However, if you are looking to match files, you currently are not using any of the reasons you'd use a regular expression. Your pattern will at best match any filename that ends with <code>{name}.pkl</code>. You'd be much better off using the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob module</a>:</p>
<pre><code>import glob

for name in list_name:
    ...
    escaped_name = glob.escape(name)
    files = glob.glob('*{}.pkl'.format(escaped_name))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>^</code> is a regex metacharacter, so you have to escape it. The easiest way to do this is to use the <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>regex.escape</code></a> function, which automatically escapes metacharacters in an arbitrary string.</p>
<p>So instead of </p>
<pre><code>pattern = regex.compile('{name}.pkl'.format(**locals()))
</code></pre>
<p>use </p>
<pre><code>pattern = regex.compile(regex.escape('{name}.pkl').format(**locals()))
</code></pre>
</div>
<span class="comment-copy">What's the regex module? I think your meaning is <code>import re</code>. And <code>^</code> is a metacharacter. You have to use <code>\^</code>.</span>
<span class="comment-copy">Python has an inbuilt regex module, but the name is "re". to use it, type import re. I have not seen the import regex statement before.</span>
<span class="comment-copy"><code>^</code> is a <i>regex meta character</i>, meaning "match at the start of the string". You'd need to escape it if you wanted to use it in a regex.</span>
<span class="comment-copy">Why use a regex for this though? Are you looking for files that end in <code>{name}.pkl</code>, or files that consist entirely of <code>{name}.pkl</code>? Neither match requires a regex.</span>
<span class="comment-copy">@ParitoshSingh: there are legitimate uses for the <a href="https://pypi.org/project/regex/" rel="nofollow noreferrer"><code>regex</code> module</a>. I don't see those here, but it could very well be <i>intentional</i>.</span>
<span class="comment-copy">Thanks a lot, it works perfectly with your regex.escape function solution :-)</span>
<span class="comment-copy"><code>regex</code> is the next-generation version, installable from PyPI: <a href="https://pypi.org/project/regex/" rel="nofollow noreferrer">pypi.org/project/regex</a></span>
<span class="comment-copy">Not that they are using the features of the library here.</span>
<span class="comment-copy">Didn't know that, I'll change my answer. Thanks!</span>
