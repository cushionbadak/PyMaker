<div class="post-text" itemprop="text">
<p>I am using Mido (<a href="https://mido.readthedocs.io/en/latest/" rel="nofollow noreferrer">https://mido.readthedocs.io/en/latest/</a>) for receiving Midi messages in Python. 
I would like to be able to keep a counter of how many messages are being receiving every time there is a new input.</p>
<p>Questions: </p>
<p>How can I wrap all inputs in a list?</p>
<p>How do I then append new input items to the list? </p>
<p>How can I then count the number of items in that list as that list is continually changing?  </p>
<pre><code>class MyThread(threading.Thread):
def run(self):
    for msg in inport:
        print msg       
m = MyThread()
m.start()
</code></pre>
<p>This produces an output like this:</p>
<pre><code>control_change channel=0 control=16 value=1 time=0
control_change channel=0 control=16 value=2 time=0
control_change channel=0 control=16 value=3 time=0
control_change channel=0 control=16 value=4 time=0
control_change channel=0 control=16 value=5 time=0
control_change channel=0 control=16 value=6 time=0
control_change channel=0 control=16 value=7 time=0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just modify your thread class to do operations on the <code>inport</code> list, like this: </p>
<pre><code>class MyThread(threading.Thread):
    inport = []

    def add(ele):
        inport.append(ele)
    def count(): 
        return len(inport)
    def run(self):
        for msg in self.inport:
            print msg       
    m = MyThread()
    m.start() 
</code></pre>
<p>If you're running multithreads on the list, you can use a synchronized structure like <code>Queue</code>. Learn more <a href="https://docs.python.org/3/library/queue.html" rel="nofollow noreferrer">here</a></p>
</div>
