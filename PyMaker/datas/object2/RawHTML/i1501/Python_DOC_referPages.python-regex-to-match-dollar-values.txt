<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31915018/re-findall-behaves-weird">re.findall behaves weird</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to come up with a regex for dollar value search in Python. I have looked and tried lots of solutions on SO posts, but none of them is quite working.</p>
<p>The regex I came up with is:</p>
<pre><code>[Ss]        # OCR will mess up with dollar signs, so I'm specifically looking for S and s as the starting of what I'm looking for
\d+         # any digits to start off
(,\d{3})*   # include comma for thousand splits, can have multiple commas
(.\d{2})?   # include dot and 2 decimals, but only one occurrence of this part
</code></pre>
<p>I have tried this on the following example:</p>
<pre><code>t = "sixteen thousand three hundred and thirty dollars (s16,330.00)"
r = "[Ss]\d+(,\d{3})*(.\d{2})?"

re.findall(pattern=r, string=t)
</code></pre>
<p>And I got:</p>
<pre><code>[(',330', '.00')]
</code></pre>
<p>Regex doc says that:</p>
<blockquote>
<p>If one or more groups are present in the pattern, return a list of
  groups; this will be a list of tuples if the pattern has more than one
  group. Empty matches are included in the result.</p>
</blockquote>
<p>But it is not even getting the whole number part.</p>
<p>My question is: I really want to find <code>s16,330.00</code> as a single piece. Is there a solution? </p>
</div>
<div class="post-text" itemprop="text">
<p>Remove capture groups to allow <code>findall</code> to return full matched string:</p>
<pre><code>&gt;&gt;&gt; t = "sixteen thousand three hundred and thirty dollars (s16,330.00)"
&gt;&gt;&gt; r = r"[Ss]\d+(?:,\d{3})*(?:\.\d{2})?"
&gt;&gt;&gt; re.findall(pattern=r, string=t)
['s16,330.00']
</code></pre>
<p>Also note that dot needs to be escaped in your regex</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow noreferrer">finditer</a>:</p>
<pre><code>import re

t = "sixteen thousand three hundred and thirty dollars (s16,330.00)"
r = "[Ss]\d+(,\d{3})*(.\d{2})?"

result = [match.group() for match in re.finditer(pattern=r, string=t)]
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>['s16,330.00']
</code></pre>
<p>The function <code>finditer</code> returns an iterator yielding <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match objects</a>. The method group of a match object without arguments returns the whole match.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a capturing group for the whole pattern, and non-capturing for subpatterns:</p>
<pre><code>t = "sixteen thousand three hundred and thirty dollars (s16,330.00)"
re.findall(r"([Ss]\d+(?:,\d{3})*(?:.\d{2})?)", t)
['s16,330.00']
</code></pre>
<blockquote>
<p><code>re.findall(pattern, string, flags=0)</code></p>
<p>Return all non-overlapping matches of pattern in string, as a list of strings. The string is scanned left-to-right, and matches are returned in the order found. <strong>If one or more groups are present in the pattern, return a list of groups</strong>; this will be a list of tuples if the pattern has more than one group. Empty matches are included in the result.</p>
</blockquote>
<p><a href="https://docs.python.org/2/library/re.html#re.findall" rel="nofollow noreferrer">https://docs.python.org/2/library/re.html#re.findall</a></p>
</div>
<span class="comment-copy">Remove capture groups: <code>r = "[Ss]\d+(?:,\d{3})*(?:\.\d{2})?"</code></span>
<span class="comment-copy">See all explanations <a href="https://stackoverflow.com/a/31915134/3832970">here</a>.</span>
<span class="comment-copy">I think the key was I was missing the "?:", is that for disabling subpattern matching?</span>
<span class="comment-copy"><code>(?:..)</code> is called non-capture group. Read more about it: <a href="https://www.regular-expressions.info/refcapture.html" rel="nofollow noreferrer">regular-expressions.info/refcapture.html</a></span>
<span class="comment-copy">Can you explain a little bit on why this will work? I have looked at <code>finditer</code> before and didn't know that this will work.</span>
<span class="comment-copy">@YilunZhang Updated the answer!</span>
<span class="comment-copy">Thank you for your quick answer, but I think anubhava's solution is a more straight forward one :).</span>
