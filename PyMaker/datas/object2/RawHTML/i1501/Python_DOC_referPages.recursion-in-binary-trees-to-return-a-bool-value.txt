<div class="post-text" itemprop="text">
<p>I want to create a recursive function that takes a binary tree as its parameter and returns True if every leaf below a node is greater than its parent.  If just one node fails to meet this condition, the entire function should return False. </p>
<p>However, I am struggling to come up with a base case, as well as fully understanding how to stop the function and return False if even just one part of the tree does not meet the condition.  Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>When recurring through the tree, the base case would be a leaf node - that is, a node with no children. For such a node, you would assume that it has met the test (since otherwise, you algorithm should have already returned false), so you would return true.</p>
<p>For the general case, you would want to check if the node is smaller than both itâ€™s children, and if not, return False. Otherwise, to ensure that the condition holds for both children, you would return the result of recurring down the left side <code>and</code> the result of recurring down the right:</p>
<pre><code>return check(node.left) and check(node.right)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using recursion, something like this should work:</p>
<pre><code>def children_gt_parent(node, parent_val):
    if node is None:
        return True
    if node.value &lt;= parent_val:
        return False
    return children_gt_parent(node.left, node.value) and children_gt_parent(node.right, node.value)
</code></pre>
<p>You then call it like:</p>
<pre><code>tf = children_gt_parent(root, root.value)
</code></pre>
</div>
<span class="comment-copy">In Python <a href="https://docs.python.org/3/reference/expressions.html#and" rel="nofollow noreferrer"><code>and</code> is short-cutting</a> and hence naturally "stops" the function. Hence you can just <code>and</code> the condition for the two leafs of each node.</span>
