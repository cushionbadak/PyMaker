<div class="post-text" itemprop="text">
<p>I'm trying to scrape reviews which are only year old from tripadvisor for a specific airline Spicejet.
Link : <a href="https://www.tripadvisor.com/Airline_Review-d8728949-Reviews-or60-SpiceJet#REVIEWS" rel="nofollow noreferrer">https://www.tripadvisor.com/Airline_Review-d8728949-Reviews-or60-SpiceJet#REVIEWS</a></p>
<p>But there is an inconsistency in storing the dates of the reviews as some are in span class value : <code>&lt;span class="ratingDate"&gt;
 Reviewed October 22, 2018
&lt;/span&gt;</code></p>
<p>And some are in the title:</p>
<p><code>&lt;span class="ratingDate relativeDate" title="October 23, 2018"&gt;
 Reviewed 5 weeks ago
&lt;/span&gt;</code></p>
<p>I want to extract dates and set a condition that extract reviews which are only a year old. I'm facing difficulty in handling two date formats so how should i compare it.</p>
<p>Code : </p>
<p><code>date = items.find(class_="ratingDate").get("title")
 date = dt.strptime(date, "%B %d, %Y")
 if (date &gt; dt.strptime(('November 26 2017'),"%B %d %Y")):
      date = items.find('span', class_='ratingDate')['title']</code></p>
<p>Output : </p>
<p>“its manageable” </p>
<h2> ('October 23, 2018',)</h2>
<pre><code>&lt;ipython-input-72-3d5de04a2794&gt; in get_info()
  6         for items in soup.find_all(class_="innerBubble"):
  7             date = items.find(class_="ratingDate").get("title")
  ----&gt; 8             date = dt.strptime(date, "%B %d, %Y")
  9             if (date &gt; dt.strptime(('November 26 2017'),"%B %d %Y")):
 10                 print("===========================================")

 TypeError: strptime() argument 1 must be str, not None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do a lot of work, or you can track down where the data's coming from and fuzz the source a little until it spits out something more likeable. Here it looks like the data is being loaded from:<br/>
<code>https://www.tripadvisor.com/AirlineTips</code><br/>
which, as you've noted, is ugly as hell.  </p>
<p>The exact call it made for me was:<br/>
<code>https://www.tripadvisor.com/AirlineTips?d=8728949&amp;inline=true</code> </p>
<p>Which spits out:  </p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;div class="page page1"&gt;
&lt;div class="tip"&gt;
&lt;div class="memberOverlayLink" id="UID_-SRC_635739734" onmouseover="requireCallIfReady('members/memberOverlay', 'initMemberOverlay', event, this, this.id, 'Reviews', 'user_name_photo');" data-anchorWidth="30"&gt;
&lt;div class="circularAvWrap smallCircularAvWrap profile_UID_-SRC_635739734"&gt;
&lt;img src="https://media-cdn.tripadvisor.com/media/photo-l/01/2e/70/85/avatar006.jpg" class="avatar" width="28" height="28"/&gt;
&lt;/div&gt;
&lt;/div&gt; &lt;div class="tipText"&gt;
&lt;blockquote&gt;&amp;#x201c;Value for Money&amp;#x201d;&lt;/blockquote&gt;
&lt;span class="ui_bubble_rating bubble_4" alt="4.0 of 5 bubbles"&gt;&lt;/span&gt;
Santhoshpp, 2 days ago
&lt;span class="pipe"&gt;|&lt;/span&gt; &lt;a href="/ShowUserReviews-g1-d8728949-r635739734-SpiceJet-World.html" onclick="ta.trackEventOnPage('Tab Content', 'read_review', 'Read Review');"&gt;Read review&lt;/a&gt; &lt;/div&gt; &lt;/div&gt;
&lt;div class="tip"&gt;
&lt;div class="memberOverlayLink" id="UID_-SRC_635711432" onmouseover="requireCallIfReady('members/memberOverlay', 'initMemberOverlay', event, this, this.id, 'Reviews', 'user_name_photo');" data-anchorWidth="30"&gt;
&lt;div class="circularAvWrap smallCircularAvWrap profile_UID_-SRC_635711432"&gt;
&lt;img src="https://media-cdn.tripadvisor.com/media/photo-l/01/2e/70/99/avatar025.jpg" class="avatar" width="28" height="28"/&gt;
&lt;/div&gt;
&lt;/div&gt; &lt;div class="tipText"&gt;</code></pre>
</div>
</div>
</p>
<p>Mmm, hideous.  </p>
<p>Let's try changing <code>inline=false</code> on that request...
<code>https://www.tripadvisor.com/AirlineTips?d=8728949&amp;inline=false</code><br/>
gives us  </p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>script&gt; new Asset.css('https://static.tacdn.com/css2/accommodations/room_tips_overlay-v22801712797b.css');&lt;/script&gt;
&lt;div id="TIPSOVERLAY" class="wrap"&gt;
&lt;div class="title"&gt;
&lt;span class="fl"&gt;
See travel tips for airlines &lt;/span&gt;
&lt;/div&gt;
&lt;div class="content"&gt;
&lt;div class="tip"&gt;&lt;span class="tipBody"&gt;&amp;#x201c;Value for Money&amp;#x201d; (Santhoshpp) &lt;/span&gt;
&lt;div class="rsImg"&gt;
&lt;span class="ui_bubble_rating bubble_4"&gt;&lt;/span&gt;
&lt;span class="dateAuthor"&gt;Nov 25, 2018&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="tip"&gt;&lt;span class="tipBody"&gt;&amp;#x201c;carry your own entertainment stuff and be ready if your flight gets delayed&amp;#x201d; (vbroams) &lt;/span&gt;
&lt;div class="rsImg"&gt;
&lt;span class="ui_bubble_rating bubble_3"&gt;&lt;/span&gt;
&lt;span class="dateAuthor"&gt;Nov 25, 2018&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
<p>Oh, sexy barnacles, Batman! There it is. Now we don't have to fight with dates in Python or whatever.  </p>
<p><strong>tl;dr</strong><br/>
Don't scrape the soup, scrape the source. There's an API under any dynamic content.</p>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand, you don't have to compare both date values since they will both mean the same date. So for each review, check if either the span class date or the title date exists. If both exists, just check one. The checking can be done with <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">strptime</a>. </p>
<p>For the title date, you will need <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">timedelta</a>.</p>
<pre><code>span_date = None
title_date = None
one_year_ago_date = datetime.now().replace(year=dt.year-3)

# ADD CODE HERE to get date strings for span_date and title_date

# Assume span_date = "October 22, 2018"
review_date = None
if span_date is not None:
    review_date = datetime.datetime.strptime(span_date, "%B %d, %Y").date()

# Assume title_date = "5 weeks ago"
elif title_date is not None:
    title_date = [title_date .split()[:2]]
    time_dict = dict((fmt, float(amount)) for amount,fmt in title_date)
    dt = datetime.timedelta(**time_dict)
    review_date = datetime.datetime.today() - dt

# Check if review_date is earlier than one year ago
if review_date.date() &lt; one_year_ago_date:
    print("Save this review")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can leverage the way CSS matches on class to pull be back all review dates with class selector <code>.ratingDate</code>. It will match on <code>.ratingDate</code> and <code>.ratingDate.relativeDate</code>.  You will find that the len of the matched element classes will be 2 for where the date is in the title attribute of the element ie. elements with class <code>ratingDate relativeDate</code>.</p>
<pre><code>&lt;span class="ratingDate relativeDate" title="October 26, 2018"&gt;Reviewed 4 weeks ago
&lt;/span&gt;
</code></pre>
<p>You can grab the review text by class selector as well. Zip and turn to a list.</p>
<p>Below is outline without date filtering.  Filter on dates either earlier than this (but then you will need an index to link across lists to match up date and review text) or from here. The dates are all in consistent format.</p>
<pre><code>import requests
from bs4 import BeautifulSoup
url = 'https://www.tripadvisor.com/Airline_Review-d8728949-Reviews-or60-SpiceJet#REVIEWS'
data = requests.get(url).content
soup = BeautifulSoup(data,'lxml')
dateStrings = soup.select('.ratingDate')  
reviewStrings = soup.select('.partial_entry')
reviewDates = [date['title'].strip() if len(date['class']) == 2 else date.text.strip().replace('Reviewed ','') for date in dateStrings]
reviews = [review.text.strip() for review in reviewStrings]
allInfo = list(zip(updatedDates,reviews))
</code></pre>
</div>
<span class="comment-copy">Congratulation - you met one of the joy's of CS: inconsistent data. If you have a <i>specific</i> question, show your code AND data - else you need to research more before asking here - because your question is too broad. One answer f.e. could be: convert them into the same date format and compare them.</span>
<span class="comment-copy">Hi there! Can you show use that you have at least attempted to type or put your code in the question? We are here to help but we have to meet somewhere in between!</span>
<span class="comment-copy">You're looking for a date parser. I hear good things about natty.</span>
<span class="comment-copy">Did you try any of the answers given?</span>
<span class="comment-copy">+ for the sexy barnacles... there would be another plus for the =false.</span>
