<div class="post-text" itemprop="text">
<p>I want to automate multiple file generation. I have a working Python script to generate a single file with sentences that mimic a domain of language I'm interested in (code from <a href="https://github.com/jsvine/markovify" rel="nofollow noreferrer">here</a>). The code below takes the text my_domain.txt as input, trains a Markov language model on it, then outputs a file with 10 fake sentences that read pretty similarly to the ones in the input text. </p>
<pre><code>import pandas as pd
import markovify #Markov Chain Generator
import sys

with open(r'/my_domain.txt') as f:
    text = f.read()

text_model = markovify.Text(text) #creates a language model from the input text

sys.stdout = open('fake.txt', 'w') #redirects my print() statement below to a file

for i in range(10): #10 lines of fake sentences.
    print(text_model.make_sentence())
</code></pre>
<p>What I want to do now is use this method to generate 1000+ files, each with a slightly unique name, like this:</p>
<p>fake1.txt</p>
<p>fake2.txt</p>
<p>fake3.txt</p>
<p>I'm guessing that I may need a different method of printing to a file. But when I search on techniques, I don't find anything that helps me run the markovify method repeatedly AND gives unique names to each successive output file. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use a loop that creates filenames,
use with open(..) syntax to make sure they get closed ok even if exception arises.</p>
<pre><code>for nr in range(100):
    with open("file{:04}.txt".format(nr), "w") as f:
        for i in range(10): #10 lines of fake sentences.
            f.write(text_model.make_sentence() + "\n")
</code></pre>
<ul>
<li><a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">string format mini language</a></li>
<li><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">with open(...)</a>  ( and the more abstract <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">with-statement</a> ingeneral )</li>
</ul>
</div>
<span class="comment-copy">Nice! This worked as expected, first time. Thanks!</span>
