<div class="post-text" itemprop="text">
<p>I am extracting content with the help of scrapy into an array. Each element has the unwanted characters ": " inside which I would like to remove as efficient as possible.</p>
<pre><code>v = response.xpath('//div[@id="tab"]/text()').extract()
&gt;&gt;&gt; v
['Marke:', 'Modell:']
&gt;&gt;&gt; for i in v : re.sub(r'[^\w]', '', i)
... 
'Marke'
'Modell'
</code></pre>
<p>Now that seems to work, but how can I retain the result?
In my code, <code>v</code> hasn't changed:</p>
<pre><code>&gt;&gt;&gt; v
['Marke:', 'Modell:']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can solve this with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; v = response.xpath('//div[@id="tab"]/text()').extract()
&gt;&gt;&gt;
&gt;&gt;&gt; import re
&gt;&gt;&gt; v = [re.sub(r'[^\w]', '', i) for i in v]
&gt;&gt;&gt; v
['Marke', 'Modell']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think that pulling in <code>regex</code> for this is a little overkill: use the string <code>replace</code> method:</p>
<pre><code>v = ['Marke:', 'Modell:']
v = [str.replace(':', '') for str in v]
print(v)
</code></pre>
<p>Output:</p>
<pre><code>['Marke', 'Modell']
</code></pre>
</div>
