<div class="post-text" itemprop="text">
<p>I have two loops iterating over different lists. How can I write a multi-thread python program in a way that all the iterations of inner loop for each element of outer loop happen in different threads?
For example we have two following lists:</p>
<pre><code>A = [1,2,3]
B = [4,5,6]
C = []
for i in A:
   for j in B:
      C.append(i+j)
</code></pre>
<p>Here, we have nine iterations in total. Every time that the first iterator is on one of the A's elements, the other iterator, iterates over all the elements of B. And, this operation repeats three times. I want to know how I can put these three operations in three separated threads.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd suggest using Numba's prange for these kind of tasks. <a href="http://numba.pydata.org/" rel="nofollow noreferrer">http://numba.pydata.org/</a> </p>
<p>Vanilla CPython doesn't handle parallel processing well due to GIL. </p>
<pre><code>import numba

@numba.njit(parallel=True)
def work():
    A = [1,2,3]
    B = [4,5,6]
    X = [[0 for x in range(0)] for _ in A]
    for idx in numba.prange(len(A)):
       i = A[idx]
       for j in B:
          X[idx].append(i+j)
    C = [0 for x in range(0)]
    for x in X:
       C = C + x
    print(C)

work()
</code></pre>
</div>
<span class="comment-copy">Have a look at the <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">threading library</a> or <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">multiprocessing</a> or <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer">asyncio</a></span>
<span class="comment-copy">you need to be aware that with threads you won't get an ordered result (if expected)</span>
<span class="comment-copy">Threading very likely won't speed this code up at all any because the GIL (Global Interpreter Lock)  will prevent both threads from actually running concurrently. It's generally not very helpful for compute-bound tasks.</span>
