<div class="post-text" itemprop="text">
<p>Instead of using:</p>
<pre><code>import sqlite3
conn = sqlite3.connect(':memory:')
c = conn.cursor()
c.execute(...)
c.close()
</code></pre>
<p>would it be possible to use the Pythonic idiom:</p>
<pre><code>with conn.cursor() as c:
    c.execute(...)
</code></pre>
<p>It doesn't seem to work:</p>
<pre><code>AttributeError: __exit__
</code></pre>
<p>Note: it's important to close a cursor because of <a href="https://stackoverflow.com/questions/53270520/how-to-know-which-process-is-responsible-for-a-operationalerror-database-is-lo/53470118#53470118">this</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A simpler alternative would be to use the connection object with the context manager, as specified in the <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">docs</a>.</p>
<pre><code>with con:
    con.execute(...)
</code></pre>
<hr/>
<p>If you insist on working with the cursor (because reasons), then why not make your own wrapper class?</p>
<pre><code>class SafeCursor:
    def __init__(self, connection):
        self.con = connection

    def __enter__(self):
        self.cursor = self.con.cursor()
        return self.cursor

    def __exit__(self, typ, value, traceback):
        self.cursor.close()
</code></pre>
<p>You'll then call your class like this:</p>
<pre><code>with SafeCursor(conn) as c:
    c.execute(...)
</code></pre>
</div>
<span class="comment-copy">Have you checked the docs? <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">@DeepSpace Please read my 2 comments after the current answer. I <i>did</i> read the doc, of course. But it seems different to what I want... Please see the details in the comments: context manager for cursor vs. context manager for connection.</span>
<span class="comment-copy">@downvoter: can you help how to improve the question? (I did read the doc, but here it's slightly different)</span>
<span class="comment-copy">There is a built-in way: <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">@DeepSpace Thanks, will edit, didn't know about that. Additionally, I'm wondering if there's a reason OP is trying to set up a context manager for the cursor aside from them simply not having read the docs.</span>
<span class="comment-copy">@DeepSpace This is a context manager for the connection object, not the cursor. <code>Connection objects can be used as context managers that automatically commit or rollback transactions</code>: Let's say I want to do a SELECT query and then a few <code>cur.fetchone()</code>, I need a cursor object, don't you think so?</span>
<span class="comment-copy">@coldspeed No no, I read the doc, but (see my previous comment), the doc explains it automatically commits, and also it doesn't speak about a cursor. It's not exactly what I want: I don't want to commit, and I need a cursor to fetch rows. Or do you mean there's another way to do it?</span>
<span class="comment-copy">@Basj If you just need something that can close the cursor under any circumstances (because you don't trust someone else to do it), then my wrapper class suggestion would work for you.</span>
