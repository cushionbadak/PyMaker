<div class="post-text" itemprop="text">
<p>I didn't really find an example related to my question as I don't know Pandas so I post it here. Let me know if this is not clear or already have been responded.</p>
<p>I have a CSV input which I import like this </p>
<pre><code>def import_csv(csvfilename):
    data = []
    with open(csvfilename, "r", encoding="utf-8", errors="ignore") as scraped:
        reader = csv.reader(scraped, delimiter=',')
        row_index = 0
        for row in reader:
            if row:  # avoid blank lines
                row_index += 1
                columns = [str(row_index), row[0], row[1], row[2]]
                data.append(columns)

    return data
</code></pre>
<p>I index rows with input_rows (there is probably a better way for this?)</p>
<p>Input example :</p>
<pre><code>[['1',
  '[FirstValue]',
  'FirstText',
  'AB'],

 [...]

 ['12',
  "['LastValue']",
  "LastText",
  'YZ']]
</code></pre>
<p>I'm looking to get the last row of this insput list. Is there a simple way to do that without iterating over all the rows ?</p>
<p>Thank you !</p>
</div>
<div class="post-text" itemprop="text">
<p>You can get the last element in an array like so:</p>
<p><code>some_list[-1]</code></p>
<p>In fact, you can do much more with this syntax. The <code>some_list[-n]</code> syntax gets the nth-to-last element. So <code>some_list[-1]</code> gets the last element, <code>some_list[-2]</code> gets the second to last, etc</p>
<p>So in your case, it would be:</p>
<pre><code>import csv    

def import_csv(csvfilename):
    data = []
    with open(csvfilename, "r", encoding="utf-8", errors="ignore") as scraped:
        reader = csv.reader(scraped, delimiter=',')
        for row in reader:
        if row:  # avoid blank lines
            row_index += 1
            columns = [str(row_index), row[0], row[1], row[2]]
            data.append(columns)
return data

data = import_csv(file_name)
last_row = data[-1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python supports negative indexing.</p>
<pre><code>your_list[-1] # Fetch the last value in your list.
</code></pre>
<p>Without knowing your use case and more about the data and how you typically access the data, it's hard to say what data structure would be better for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's worth noting that <code>csv.reader</code> is an <a href="https://docs.python.org/3/library/stdtypes.html#iterator-types" rel="nofollow noreferrer">Iterator</a> and doesn't contain your data until iterated through.  Same is true for the <code>scraped</code> opened I/O Stream object which is also an iterator.  The question to "Can I get the last row without iterating through the file/data" is unfortunately no, unless there is a specific stream point that you know can jump to (using <code>scraped.seek()</code>), then you will not be able to get the very last row until all the data have been iterated through.</p>
<p>Once you have consumed all the data however, you can retrieve in your code with <code>data[-1]</code> by means of negative indexing, i.e. returning the last row of the <code>list</code>.</p>
<p><a href="https://stackoverflow.com/questions/2301789/read-a-file-in-reverse-order-using-python">Here is a related question that might be of interest to you</a>, but again, the answers all consume the data (reading the entirety as a list) prior to allowing the <code>reverse()</code> operation, hence, all the data must be read through once at least.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12523044/how-can-i-tail-a-log-file-in-python">How can I tail a log file in Python?</a></span>
<span class="comment-copy">your <i>input example</i> looks like output <code>data</code> list, doesn't it?</span>
<span class="comment-copy"><code>data[-1]</code> should do the trick.</span>
<span class="comment-copy"><code>csv.reader</code> is an iterator and cannot be subscripted like that.</span>
<span class="comment-copy">@Idlehands You're right, good catch. I've corrected the answer.</span>
<span class="comment-copy">Odd that it locked my vote in even after your edit... If you would edit the answer again I would gladly retract my downvote.</span>
<span class="comment-copy">Thank you very much for your answer ! I had a mistake while doing reader[-1] but not its ok! :)</span>
<span class="comment-copy">Thanks for your explanation ! No there is no specific point so I'll be going with data[-1]</span>
