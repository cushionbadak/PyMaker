<div class="post-text" itemprop="text">
<p>I use OS LUbuntu</p>
<p>I installed Python3.4 using the Lubuntu software center;
<a href="https://i.stack.imgur.com/rLohx.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/rLohx.png"/></a></p>
<p>Next thing I want to do is to install some modules.
Best way I can think of would be <code>pip install</code>. But I can't find it on the computer (I'm quite new to Linux). </p>
<p>Please help reaching the pip? or other way to install modules except pip?</p>
<p>I tried <code>sudo apt-get install ...</code> , but It installs it on <code>python2.7</code> instead of <code>python3.4</code> (I have 2 interpreters). Removing <code>python2.7</code> off the computer is not an option..</p>
</div>
<div class="post-text" itemprop="text">
<p>You have stated that you want to use <code>apt-get</code> instead of <code>pip</code>, so:</p>
<pre><code>sudo apt-get install python3-&lt;package_name&gt;
</code></pre>
<p>The important part of this is the <code>3</code>. But honestly, <code>pip</code> is easier to use and more "meant" for Python, so I don't see a reason not to use it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried sudo apt-get install pip3?</p>
<p>Ok, as someone has pointed out it is not actually pip3, it is a symlink. For a better answer we can look at the official python documentation.
<a href="https://docs.python.org/3/installing/index.html" rel="nofollow noreferrer">https://docs.python.org/3/installing/index.html</a>
and here we find:
python2   -m pip install SomePackage  # default Python 2
python2.7 -m pip install SomePackage  # specifically Python 2.7
python3   -m pip install SomePackage  # default Python 3
python3.4 -m pip install SomePackage  # specifically Python 3.4</p>
<p>So, if you want to install the Python 3 version of a package use</p>
<p>python3   -m pip install SomePackage  # default Python 3 </p>
</div>
<span class="comment-copy">See <a href="https://packaging.python.org/tutorials/installing-packages/" rel="nofollow noreferrer">this</a>.</span>
<span class="comment-copy">@Tomothy32 This is another option but I'd rather use the "sudo apt-get install..." option. But once I do it, it installs it on 2.7. I need it on 3.4</span>
<span class="comment-copy">@Tomothy32 - The python3 libraries in ubuntu have a <code>python3</code> prefix, e.g.: <code>sudo apt-get install python3-pil</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/37188623/ubuntu-how-to-install-opencv-for-python3">Ubuntu, how to install OpenCV for python3?</a></span>
<span class="comment-copy"><a href="https://stackoverflow.com/search?q=%5Bpython%5D+%5Bubuntu%5D+install+opencv">stackoverflow.com/â€¦</a></span>
<span class="comment-copy">Thanks. I'll try it later. I rather use "apt-get" because this is temporary usage of python. I only need 1 module.</span>
<span class="comment-copy">Update: Reading package lists... done ; building dependency tree ; reading state information... done; E: Unable to locate package python3-opencv  This is the error I got after trying this</span>
<span class="comment-copy">Try <code>sudo apt-get install libopencv-dev python3-opencv</code> and see what happens.</span>
<span class="comment-copy">Same error.....</span>
<span class="comment-copy">Honestly, sorry, but <code>pip</code> is the easiest way to solve your problems.</span>
<span class="comment-copy">I have yet to try, because I still try to use "sudo apt-get install &lt;module&gt;" rather than using pip3. Because I only need one module for temporary usage. Problem is, once I do this "sudo..." it installs it with 2.7. I need it to be installed with 3.7</span>
<span class="comment-copy">@mikeg There is no <code>pip3</code> in Debian/Ubuntu.</span>
<span class="comment-copy">Sorry, you are correct, there is no actual pip3. It is just a symlink to pip. So, lets look at the documentation. <a href="https://docs.python.org/3/installing/index.html" rel="nofollow noreferrer">docs.python.org/3/installing/index.html</a>.  Here we see : py -2   -m pip install SomePackage  # default Python 2 py -2.7 -m pip install SomePackage  # specifically Python 2.7 py -3   -m pip install SomePackage  # default Python 3 py -3.4 -m pip install SomePackage  # specifically Python 3.4</span>
