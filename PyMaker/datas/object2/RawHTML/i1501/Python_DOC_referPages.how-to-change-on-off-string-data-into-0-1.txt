<div class="post-text" itemprop="text">
<p>I am monitoring and controlling a smart light bulb from my dashboard(User Interface   Dashboard) and every time I open or close the light bulb it sends back a data that shows the light bulb is on or off, what I want to do is to change this "ON/OFF" data string in to binary of 1/0, is there anyway I can get 1 or 0 instead of 'ON/OFF'.</p>
<p>this is some of the API code I have used to control the light bulb</p>
<pre><code> def identifyDevice(self):
    identifyDeviceResult = False
    print(" {0}Agent for {1} is identifying itself by doing colorloop. Please observe your lights"
          .format(self.variables.get('agent_id', None), self.variables.get('model', None)))
    try:
        devicewasoff = 0
        if self.get_variable('status') == "OFF":
            devicewasoff = 1
            self.setDeviceStatus({"status": "ON"})
        elif self.only_white_bulb:
            self.setDeviceStatus({"status": "OFF"})
        if self.only_white_bulb is False:
            self.setDeviceStatus({"effect": "colorloop"})
        if self.only_white_bulb:
            time_iden = 3
        else:
            time_iden = 10  # time to do identification
        t0 = time.time()
        self.seconds = time_iden
        while time.time() - t0 &lt;= time_iden:
            self.seconds = self.seconds - 1
            print("wait: {} sec".format(self.seconds))
            time.sleep(1)
        self.setDeviceStatus({"effect": "none"})
        if devicewasoff == 1:
            self.setDeviceStatus({"status": "OFF"})
        else:
            self.setDeviceStatus({"status": "ON"})
        identifyDeviceResult = True
    except:
        print("ERROR: classAPI_PhilipsHue connection failure! @ identifyDevice")
    return identifyDeviceResult
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can guarantee that the returned value is always one of 'ON' or 'OFF', you can use the fact that <a href="https://docs.python.org/3/library/stdtypes.html#bltin-boolean-values" rel="nofollow noreferrer"><code>True</code> and <code>1</code> are interchangeable</a></p>
<pre><code>result = state == 'ON'
</code></pre>
<p>If you need some error handling, something like this might work.</p>
<pre><code>if state in {'ON', 'OFF'}:
    result = state == 'ON'
else:
    # handle error state
</code></pre>
<p>If you need an <code>int</code> to serialise, call <code>int</code> with the result</p>
<pre><code>&gt;&gt;&gt; state_on = 'ON'
&gt;&gt;&gt; state_off = 'OFF'
&gt;&gt;&gt; int(state_on == 'ON')
1
&gt;&gt;&gt; int(state_off == 'ON')
0
</code></pre>
</div>
<span class="comment-copy">FYI, <code>('on' == 'on')*1</code> = 1 and <code>('on' == 'off')*1</code> = 0</span>
<span class="comment-copy">it didn't work, Am still getting on/off message! is there any other way possible to get the binary data of 1 and 0</span>
<span class="comment-copy">What do you mean binary data of 1 and 0? Is that just the int? Where are you getting the on/off message?</span>
<span class="comment-copy">Yeah I need the int of 1 and 0 instead of on and off, I am sending the data of a smart bulb to a local gateway with MQTT protocol, which published on and off message.</span>
<span class="comment-copy">If you need to ensure it's an actual integer instead of just being usable as one (for sending out of Python) call <code>int</code>. I'll update the answer.</span>
