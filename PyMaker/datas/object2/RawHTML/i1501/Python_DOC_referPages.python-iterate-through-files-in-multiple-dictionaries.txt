<div class="post-text" itemprop="text">
<p>I have a number of files in a dictionary that I want to run a script on.
Ordinarily, I would us 'os.listdir()' to list the files in my current working directory, and then tell my script to run on those files.</p>
<p>For instance:</p>
<pre><code>dir = os.listdir():
for i in dir:
  do stuff
</code></pre>
<p>However, I want to run the script on these files when i am not in the current working directory. This will be so I can iterate through multiple folders later on.
Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>listdir()</code> takes a <code>path</code> parameter. You could use something like this:</p>
<pre><code>filelist1 = os.listdir("/home/user/directory1")
filelist2 = os.listdir("/home/user/directory2")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In order to read all files that are available under a directory:</p>
<pre><code>from os import listdir
from os.path import isfile, join
onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
</code></pre>
<p>To list all available subdirs in a directory:</p>
<pre><code>from os import listdir
from os.path import isdir, join

subdirs = [name for name in listdir(parent_dir) if isdir(join(parent_dir, name))]
</code></pre>
<p>Now let's combine those puzzles to list files only from sub-dirs of parent directory:</p>
<pre><code>from os import listdir
from os.path import isfile, join, isdir

parent_dir = "/foo/bar"
dirs = [name for name in listdir(parent_dir) if isdir(join(parent_dir, name))]
onlyfiles = []

for dir in dirs:
    f = [f for f in listdir(dir) if isfile(join(dir, f))]
    onlyfiles += f

print(onlyfiles)
</code></pre>
<p>Example output:</p>
<pre><code>$ python dummy.py 
['Dockerfile', 'docker-compose.yml', '53009790.py', 'MOCK_DATA.csv', '53021557.py', '53023079.py']
$ python3 dummy.py 
['Dockerfile', 'docker-compose.yml', '53009790.py', 'MOCK_DATA.csv', '53021557.py', '53023079.py']
</code></pre>
<p>You can also try use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> module, as it does pattern matching.</p>
<pre><code>&gt;&gt;&gt; import glob
&gt;&gt;&gt; print(glob.glob('/home/rszamszur/*.sh'))
['/home/rszamszur/work-monitors.sh', '/home/rszamszur/default-monitor.sh', '/home/rszamszur/home-monitors.sh']
</code></pre>
<p>Key difference between OS module and glob is that OS will work for all systems, where glob only for Unix like.</p>
</div>
<span class="comment-copy"><code>os.listdir()</code> takes a path parameter.  You can tell it to list files in any directory, regardless of your current working directory.  See documentation here: <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">docs.python.org/3/library/os.html</a></span>
<span class="comment-copy">The issue seems to be that when I list the files, I cannot load them in the same way.  For instance: dir = os.listdir('path to dictionary') for data in dir:     something = load_file and do things  The above wont work, as it reads the file as a string in a list (i think)</span>
<span class="comment-copy">@Wychh It's unclear what your issue is. <code>os.listdir()</code> will give you a list of filenames in a specified path, then you can just <code>open()</code> each of these files and do something with them. Perhaps you can show an example of what your trying to do.</span>
