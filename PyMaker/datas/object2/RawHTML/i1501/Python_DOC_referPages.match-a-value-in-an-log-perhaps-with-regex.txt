<div class="post-text" itemprop="text">
<p>I would like to match the 'ReturnValue' of 'ElemNum':13 (as this changes everytime I open this string)</p>
<p>What I'm guessing is that I need to split the string, then with some Regex BlackMagic extract it? </p>
<p>Here's a log of what it looks, essentially on the last line you can see I'm after 19695 but those figures will change.</p>
<pre><code> {'ButtonTileArts': [],
 'CheckBoxes': [],
 'ChekerTrans': [],
 'CroppedText': [],
 'EndGroups': [],
 'GumpButtons': 
[{'ElemNum': 1, 'Page': 0, 'PageID': 0, 'PressedID': 22153, 'Quit': 1, 'ReleasedID': 22153, 'ReturnValue': 2488, 'X': 5, 'Y': 5},
 {'ElemNum': 2, 'Page': 0, 'PageID': 0, 'PressedID': 2435, 'Quit': 1, 'ReleasedID': 2435, 'ReturnValue': 18369, 'X': 30, 'Y': 9},
 {'ElemNum': 3, 'Page': 0, 'PageID': 0, 'PressedID': 2437, 'Quit': 1, 'ReleasedID': 2437, 'ReturnValue': 6405, 'X': 40, 'Y': 9},
 {'ElemNum': 4, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 15019, 'X': 120, 'Y': 5},
 {'ElemNum': 6, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 18606, 'X': 135, 'Y': 5},
 {'ElemNum': 8, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 13612, 'X': 150, 'Y': 5},
 {'ElemNum': 10, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 19094, 'X': 165, 'Y': 5},
 {'ElemNum': 12, 'Page': 0, 'PageID': 0, 'PressedID': 9701, 'Quit': 1, 'ReleasedID': 9700, 'ReturnValue': 9537, 'X': 80, 'Y': 7},
 {'ElemNum': 13, 'Page': 0, 'PageID': 0, 'PressedID': 9705, 'Quit': 1, 'ReleasedID': 9704, 'ReturnValue': 19695, 'X': 100, 'Y': 7},
</code></pre>
<p>And so forth,</p>
<p>{<strong>'ElemNum': 13</strong>, 'Page': 0, 'PageID': 0, 'PressedID': 9705, 'Quit': 1, 'ReleasedID': 9704, 'ReturnValue': <strong>19695</strong>, 'X': 100, 'Y': 7},</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't think any regex magic is needed here since we can simply extract that value by iterating over <code>GumpButtons</code> and looking for dict whose <code>ElemNum</code> is equal to 13 and then print its <code>ReturnValue</code>.</p>
<pre><code>x = {'ButtonTileArts': [],
 'CheckBoxes': [],
 'ChekerTrans': [],
 'CroppedText': [],
 'EndGroups': [],
 'GumpButtons': 
[{'ElemNum': 1, 'Page': 0, 'PageID': 0, 'PressedID': 22153, 'Quit': 1, 'ReleasedID': 22153, 'ReturnValue': 2488, 'X': 5, 'Y': 5},
 {'ElemNum': 2, 'Page': 0, 'PageID': 0, 'PressedID': 2435, 'Quit': 1, 'ReleasedID': 2435, 'ReturnValue': 18369, 'X': 30, 'Y': 9},
 {'ElemNum': 3, 'Page': 0, 'PageID': 0, 'PressedID': 2437, 'Quit': 1, 'ReleasedID': 2437, 'ReturnValue': 6405, 'X': 40, 'Y': 9},
 {'ElemNum': 4, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 15019, 'X': 120, 'Y': 5},
 {'ElemNum': 6, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 18606, 'X': 135, 'Y': 5},
 {'ElemNum': 8, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 13612, 'X': 150, 'Y': 5},
 {'ElemNum': 10, 'Page': 0, 'PageID': 0, 'PressedID': 1896, 'Quit': 1, 'ReleasedID': 1896, 'ReturnValue': 19094, 'X': 165, 'Y': 5},
 {'ElemNum': 12, 'Page': 0, 'PageID': 0, 'PressedID': 9701, 'Quit': 1, 'ReleasedID': 9700, 'ReturnValue': 9537, 'X': 80, 'Y': 7},
 {'ElemNum': 13, 'Page': 0, 'PageID': 0, 'PressedID': 9705, 'Quit': 1, 'ReleasedID': 9704, 'ReturnValue': 19695, 'X': 100, 'Y': 7}]}

for dicts in x['GumpButtons']:
    if dicts['ElemNum'] == 13:
        print(dicts['ReturnValue']) # -&gt; 19695
</code></pre>
<p>Or if your data is stored in file you could load it using <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> like so:</p>
<pre><code>file = open('text_log.txt', 'r')
x = eval(''.join(file.read().splitlines()))
file.close()
</code></pre>
</div>
<span class="comment-copy">Updated my answer with example how you can load your data from file into python dict.</span>
<span class="comment-copy">Thanks! it was very helpful and make perfect sense.</span>
