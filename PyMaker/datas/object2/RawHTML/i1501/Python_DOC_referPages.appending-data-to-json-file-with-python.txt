<div class="post-text" itemprop="text">
<p>I have written the following python code to populate a JSON file.</p>
<pre><code>import json

data = {}  
data['people'] = []

for i in range(0,3):
    data['people'].append({
    'name': 'C%d'%(i),
    'div':i,
    'from': 'City%d'%(i)
})

with open('data.txt', 'w') as outfile:  
    json.dump(data, outfile)
</code></pre>
<p>However, my JSON file looks something like this:</p>
<pre><code>{"people": [{"div":0,"from":,"City0":"name":"C0"},{"div":0,"from":,"City0":"name":"C0"}]}
</code></pre>
<p>My order of input is different from the output's. What is the reason and how do I rectify this?</p>
</div>
<div class="post-text" itemprop="text">
<p>What python version do you use? You create a dict, but before python 3.6 order of insertion is not preserved. <a href="https://docs.python.org/3/whatsnew/3.6.html" rel="nofollow noreferrer">In python 3.6</a> order of insertion is preserved, but it's considered implementation detail and should not be relied upon. <a href="https://docs.python.org/3/whatsnew/3.7.html" rel="nofollow noreferrer">In python 3.7</a> the insertion-order preservation nature of dict objects has been declared to be an official part of the Python language spec.
If you are using python version lower than 3.7 use OrderedDict from collections.</p>
<pre><code>import json
from collections import OrderedDict

data = {}
data['people'] = []
for i in range(0,3):
    data['people'].append(OrderedDict((
    ('name', 'C%d' %(i)),
    ('div', i),
    ('from', 'City%d'%(i))
    )))

with open('data.json', 'w') as outfile:  
    json.dump(data, outfile)
</code></pre>
<p>By the way, why the extension of the file is txt and not json? It doesn't matter and is not related to your problem, but I am curious.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason your output is like that is because json files don't really care what order they are in, they hold data and are used in comparison with a file directory. As long as you can get to the file and it actually be the file, its all good. You more or less want it to be exactly how you input it which would be impossible with json.dumps, If you absolutely need it that way, Id just make a string like<br/>
<code>string='''{"people": [{#arange in order you want it}]}'''</code><br/>and save it how you would any other file.</p>
<p>If your looking to sort your json, try something i found here <a href="https://stackoverflow.com/questions/72899/how-do-i-sort-a-list-of-dictionaries-by-a-value-of-the-dictionary">Sorting Json</a></p>
</div>
<span class="comment-copy">What order? Do you mean the order of the keys in your objects? Why should it matter to you? AFAIK, according to the JSON spec, objects are inherently unordered, and you certainly shouldn't be relying on any particular order. If you <i>do</i> care about order, use a  JSON array</span>
