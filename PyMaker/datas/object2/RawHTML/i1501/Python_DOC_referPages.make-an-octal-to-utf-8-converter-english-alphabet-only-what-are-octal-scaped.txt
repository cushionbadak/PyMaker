<div class="post-text" itemprop="text">
<p>I'm doing a discord bot in python (using discord.py API) and have been make it work with hex, morse and base64/32 strings, I'm now trying to make it decode octal strings.</p>
<p>I've been doing some research and found this post <a href="https://stackoverflow.com/questions/43675989/python-convert-octal-to-non-english-text-from-file">Python - Convert Octal to non-English Text from file</a> and other similar posts that try to convert non-english characters with something called 'octal escape characters'. I understand what an escaped character is, I know what an octal character is, but what I don't know is what those escaped characters do.</p>
<p>Anyway, I just need it to read a plain octal string and decode it to words. There are no foreign characters involved, so I really hope there is an easier way to do it</p>
<p>110 145 154 154 157 40 151 156 164 145 162 156 145 164 for example should be translated to 'hello internet'</p>
<p>I found other posts with english charaters only but they are all for java. This is what i've got so far:</p>
<pre><code>    #Bot is listening for message. If it finds one message which starts with !decodeoctal It'll execute the inside of the conditional (the decoder itself)
    if message.content.startswith('!decodeoctal'):

        #The content of the message is now a list inside a variable called msglist               
        msglist = message.content.split()

        #The first item of the list (the one that contains the !decodeoctal string) is discarded leaving the rest of list, that contains the octal string intact
        msglist = msglist[1:]                       
            try:    
                #Code dor decoding the string goes here                                                 
            except:                         
                msg = '''Decoding error.'''
                await client.send_message(message.channel, msg)
</code></pre>
<p>The code is one level indented because it goes inside another if statement. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need <a href="https://docs.python.org/3/library/functions.html#chr" rel="nofollow noreferrer"><code>chr</code></a> to convert numbers to characters.</p>
<p><code>msglist</code> is a list of strings with the string values <code>'110'</code>, <code>'145'</code>, <code>'154'</code> and so on. If you want feed them to <code>chr</code> you have to create numbers from those values. That's where <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int</code></a> comes in. <code>int</code> has a parameter for the base which has to be <code>8</code> because you have octal values.</p>
<pre><code>values = []
for octal_string in msglist:
    number = int(octal_string, base=8)
    values.append(number)
print(''.join(chr(value) for value in values))
</code></pre>
<p>Short version:</p>
<pre><code>print(''.join(chr(int(octal_string, base=8)) for octal_string in msglist))
</code></pre>
<hr/>
<p>As requested in the comment here is some more information about <code>int</code>. <code>int</code> converts a string to a number. <code>'100'</code>  and <code>100</code> are two different things. Just try <code>print(99 &lt; 100)</code> and <code>print('99' &lt; '100')</code>. Using <code>int</code> is simple: <code>int('100')</code> will give us <code>100</code>. </p>
<p>But what if <code>'100'</code> wasn't meant to be a decimal number but <a href="https://en.wikipedia.org/wiki/Binary_number" rel="nofollow noreferrer">binary</a>? <code>int</code> still can do the conversion but we will have to specify the base (which is <code>10</code> by default). So now we use <code>int('100', base=2)</code> and get <code>4</code>.</p>
<p>In an <a href="https://en.wikipedia.org/wiki/Octal" rel="nofollow noreferrer">octal system</a> <code>'100'</code> would lead to the decimal value <code>64</code> (<code>int('100', base=8)</code>) and <code>100</code> in <a href="https://en.wikipedia.org/wiki/Hexadecimal" rel="nofollow noreferrer">hexadecimal</a> would be the decimal value <code>256</code> (<code>int('100', base=16)</code>).</p>
</div>
<span class="comment-copy">It worked perfectly. But can you elaborate a little more on the int part? I didn't quite understand that</span>
<span class="comment-copy">I added some more explanation.</span>
