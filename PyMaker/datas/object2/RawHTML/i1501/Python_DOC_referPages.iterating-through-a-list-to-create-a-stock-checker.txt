<div class="post-text" itemprop="text">
<p>So to begin I am new to programming in general (3 months or so in) and although learning through books is good I do like to try and apply my knowledge and learn through experience. </p>
<p>At my work our warehouse staff often pick orders wrong so I am trying to develop something that will pull an order list from a .txt file and check it against the picked item. I feel this is a task I can use to consolidate some of my current knowledge whilst also learning new things.</p>
<pre><code>from tkinter.filedialog import askopenfilename
#This splits the order .txt file into a list
def picklist(ordernum):
    with open(ordernum, "r") as f:
        mylist = [line.strip() for line in f]

return mylist

def test(list):
    pickeditem = input("Please scan the first item")
    for i in range(len(list)):
        if list[i] == pickeditem:
            print("Correct item.")
        else:
            while list[i] != pickeditem:
                input("Wrong item! Please scan again:")
            if list[i] == pickeditem:
                print("Correct item.")

def order():
    print("Please pick the order you want to complete")
    order = askopenfilename() #gets order .txt from user
    pcklist = picklist(order)
    print("You pick list is: ",pcklist)
    test(pcklist)

order()
</code></pre>
<p>So the general idea is to creata a .txt file with a list of item serial codes that need pulling and then get that in python within the order function that I created. I then use the picklist function to split the items that are stored in the .txt file into a list so that I can get the user to scan one item at a time to verify it is the correct one. </p>
<p>This is where I'm trying to call on what is currently called the test function. I want this function to take each item within the list and if it is equal to the item scanned to print that is is the correct item. This works kind of fine, well perfectly fine for the first item. </p>
<p>The problem is getting it to iterate onto the next item in the list. So if item one is 2155 and item 2155 is scanned it will say correct item. The issue is it will then say "Wrong item! Please scan again:" because I assume pythong has now moved onto item 2 in the list. But, if I then input the code for 2 it will say wrong item! Please scan again.</p>
<p>I've tried using list indexing to no avial - maybe I should be doing this in a single function and not splitting it as I am.</p>
<p>I am certainly not looking for anyone to finish the code for me but really point me in the right direction of what I need to learn. The final goal of the project is for it also to hold information regarding the warehouse location for each item, the amount of each item needed, and the ability to pull the picklist off of our internal order system. However, they're things I want to integrate bit by bit as I learn. </p>
<p>I understand this probably is not the slickest, most pythonic code ever but really im after something easy to read, understand and edit in the future.</p>
<p>For now I just need to understand what I need to learn / how I need to think about this issue so that I can check each item in the .txt file provided matches each item scanned by the user.</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>For each item in the list you want to scan a <em>picked</em> item and compare them; if the comparison fails you want to <em>continually</em> scan picked items until they match.   </p>
<p>You are really close - in the <code>else</code> suite the comparison with the new scanned item needs to be <em>in</em> the loop, the indentation is wrong; you also need to assign <code>input</code>'s return value to <code>pickeditem</code>, </p>
<pre><code>            while list[i] != pickeditem:
                pickeditem = input("Wrong item! Please scan again:")
                if list[i] == pickeditem:
                    print("Correct item.")
</code></pre>
<p>Then at the bottom of the for loop, you need to scan the next item picked to compare it to the next item in the list.</p>
<pre><code>def test(list):
    pickeditem = input("Please scan the first item")
    for i in range(len(list)):
        if list[i] == pickeditem:
            print("Correct item.")
        else:
            while list[i] != pickeditem:
                pickeditem = input("Wrong item! Please scan again:")
                if list[i] == pickeditem:
                    print("Correct item.")
        pickeditem = input("Please scan the next item")
</code></pre>
<p>The <code>else</code> suite could be simplified a bit - the while statement makes the comparison for you so you don't need to check it again with the <code>if</code> statement:</p>
<pre><code>def test(list):
    pickeditem = input("Please scan the first item")
    for i in range(len(list)):
        if list[i] == pickeditem:
            print("Correct item.")
        else:
            while list[i] != pickeditem:
                pickeditem = input("Wrong item! Please scan again:")
            print("Correct item.")
        pickeditem = input("Please scan the next item")
</code></pre>
<p>You should always try to simplify the logic to minimize potential for problems/errors and it can make the code easier to read.  The <code>if/else</code> statement is not really needed because the comparison is being made with the while statement.</p>
<pre><code>def test(list):
    pickeditem = input("Please scan the first item")
    for i in range(len(list)):
        while list[i] != pickeditem:
            pickeditem = input("Wrong item! Please scan again:")
        print("Correct item.")
        pickeditem = input("Please scan the next item")
</code></pre>
<hr/>
<p>When <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">iterating with a for loop</a> you don't need to use indices, you can iterate over the sequence items directly.  You shouldn't use python keywords, function or class names for your variable names, i changed the list name to <code>a_list</code>.</p>
<pre><code>def test(a_list):
    pickeditem = input("Please scan the first item")
    for item in a_list:
        while item != pickeditem:
            pickeditem = input("Wrong item! Please scan again:")
        print("Correct item.")
        pickeditem = input("Please scan the next item")
</code></pre>
<p>If you need to keep track of the item indices while iterating, use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>.</p>
<hr/>
<p>You might be interested in the SO answer for: <a href="https://stackoverflow.com/a/23294659/2823755">Asking a user for input till they give a valid response</a>.</p>
</div>
<span class="comment-copy">Hello, wwii thank you for such a detailed response.  I will be adding these amendments to my programme and though process moving forward. I see now you mention it that the while statment already processes the comparison so I'm writing too much with the next if statement.  I tried for ages without using indices and its just the only way I could get it to work so will have to look back at that.</span>
