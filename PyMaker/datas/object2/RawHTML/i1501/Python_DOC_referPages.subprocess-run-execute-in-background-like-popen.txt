<div class="post-text" itemprop="text">
<p>The <code>subprocess</code> docs say </p>
<blockquote>
<p>The recommended approach to invoking subprocesses is to use the run() function for all use cases it can handle.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run</code></a> executes in the foreground, waiting for the subprocess to exit. <code>subprocess.Popen</code> executes in the background, immediately returning a Popen object. Can I make <code>subprocess.run</code> immediately return a Popen object running in the background?</p>
<pre><code>In [3]: subprocess.Popen(['sleep', '10'])                                       
# Immediately
Out[3]: &lt;subprocess.Popen object at 0x7f70b38609b0&gt;

In [4]: subprocess.run(['sleep', '10'])                                         
# 10 seconds later
Out[4]: CompletedProcess(args=['sleep', '10'], returncode=0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No. The docs for <code>run</code> specifically call out that it waits:</p>
<blockquote>
<p>Run the command described by args. Wait for command to complete, then
  return a CompletedProcess instance.</p>
</blockquote>
<p>It was introduced in Python 3.5 as a simplification of Popen/communicate for use cases where waiting for the process to finish is acceptable.</p>
</div>
