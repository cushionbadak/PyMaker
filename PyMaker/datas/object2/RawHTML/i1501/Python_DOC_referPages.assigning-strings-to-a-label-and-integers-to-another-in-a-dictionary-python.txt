<div class="post-text" itemprop="text">
<p>I need to be able to take a string (a sentence with nothing but letters and spaces) and split it into a dictionary where every term either has the label "spaces" (where i = " ") or "integers (where i = any number). So far i've managed this:</p>
<pre><code>shiftInt = {}
message = "HELLO THERE SIR"
alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
            "O", "P", "Q", "R", "S", "T", "U","V", "W", "X", "Y", "Z"]

for char in message:
    if char == " ":
        shiftInt["spaces"] = char
    else:
        shiftInt["integers"] = alphabet.index(char)
print(shiftInt)
</code></pre>
<p>I am aware this only gives me 2 items in my dictionary, but just to clarity i want an entry for every character, independantly assigned to the same label (my knowledge of dictionaries and python in general is not very good sorry)</p>
<p>I have tried to do this using a list instead of a string but struggled to get around an issue later in my program where i try to reassign the list to another list (I always got the error <em>TypeError: list indices must be integers or slices, not str</em>)</p>
<p>Thanks for the help, really</p>
</div>
<div class="post-text" itemprop="text">
<p>This seems to be the beginning to a ceasar cipher -- a beginners programming task. Use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a> to collect all characters into a list. Use a lookup dict instead of <code>.index()</code> to get the "number" that belongs to each character:</p>
<pre><code>from collections import defaultdict
from string import ascii_uppercase

shiftInt = defaultdict(list)
message = "HELLO THERE SIR"
mapper ={c:i for i,c in enumerate(ascii_uppercase)}
for i,c in enumerate(message):
    if c == " ":
        shiftInt["spaces"].append(i) # this a ppends the POSITION of spaces
    else:
        shiftInt["integers"].append(mapper.get(c,c)) # this appends the CHARACTER-POS 
                                               # in alphabet starting with A=0 to Z = 25
                                               # or the character if unknown and not mapped

print(mapper)

# convert to normal dict
shiftInt = dict(shiftInt)
print ( shiftInt ) 
</code></pre>
<p>Output:</p>
<pre><code># mapper
{'A': 0, 'C': 2, 'B': 1, 'E': 4, 'D': 3, 'G': 6, 'F': 5, 'I': 8, 'H': 7, 'K': 10, 'J': 9, 
'M': 12, 'L': 11, 'O': 14, 'N': 13, 'Q': 16, 'P': 15, 'S': 18, 'R': 17, 'U': 20, 'T': 19, 
'W': 22, 'V': 21, 'Y': 24, 'X': 23, 'Z': 25}

# shiftInt
{'integers': [7, 4, 11, 11, 14, 19, 7, 4, 17, 4, 18, 8, 17], 'spaces': [5, 11]}
</code></pre>
<p><code>shiftInt</code> holds different things: Indexes into the string <code>'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</code> for the key <code>integers</code> and the position in the original string for the key <code>spaces</code>.</p>
<hr/>
<p>If it's going to be a ceasar cipher - look up related posts, f.e.:  <a href="https://stackoverflow.com/questions/26791977/python-caesar-cipher">Python Caesar Cipher</a></p>
</div>
<span class="comment-copy">you'll end up with a dict that contains  2 keys+values - one being a space, the other the index of <code>'R'</code> in your list. To me this makes not much sense - what are you trying to accomplish here?</span>
<span class="comment-copy">Can you provide an example of the output, because we cannot figure out what you want to accomplish based on your description.</span>
