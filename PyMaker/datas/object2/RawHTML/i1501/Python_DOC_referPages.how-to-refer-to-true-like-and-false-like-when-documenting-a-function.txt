<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/questions/10372312/how-to-describe-function-arguments-in-dynamic-typed-languages">Strongly related question</a>.</p>
<p>When writing docstrings for my functions in python, I sometimes want to write something like this about argument specifications:</p>
<pre><code>def foo(bar):
    """
    Do some stuff.

    bar : callable
        must return True if XXX and False otherwise.
    """

    if bar(...):
        ...  # code goes here
</code></pre>
<p>However, this is not perfectly precise, because in this example <code>bar</code> could be returning any object that will be evaluated to <code>True</code> in the if-statement when the conditions XXX is fulfilled. Such a callable would be a perfectly valid argument to pass to <code>foo</code>.</p>
<p><strong>How should I formulate my documentation to reflect that <code>foo</code> does not strictly requires <code>bar</code>'s output to be a boolean?</strong></p>
<p>My first move was to write something like "[...] must return an object that will be evaluated to True if ...", but I find it obfuscated.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a slang question! I've always wanted to answer one of these!</p>
<p>Ahem.</p>
<hr/>
<p>The term for something that evaluates to <code>True</code> when used in an <code>if</code> statement is "truthy". The term for something that evaluates to <code>False</code> when used in an <code>if</code> statement is "falsy" or "falsey". So, your documentation can be written like this:</p>
<pre><code>def foo(bar):
    """
    Do some stuff.

    bar : callable
        must return a truthy value iff XXX.
    """

    if bar(...):
        ...  # code goes here
</code></pre>
<p>"Iff" is more slang, this time from the mathematical world. It means "if and only if". These words are commonly used in programming contexts, so I expect most programmers will understand them; if not, <a href="https://duckduckgo.com/?q=truthy+meaning" rel="nofollow noreferrer">truthy</a>, <a href="https://duckduckgo.com/?q=falsy+meaning" rel="nofollow noreferrer">falsy</a>, <a href="https://duckduckgo.com/?q=falsey+meaning" rel="nofollow noreferrer">falsey</a> and <a href="https://duckduckgo.com/?q=iff+meaning" rel="nofollow noreferrer">iff</a> all come up with their respective correct meanings when searched in a search engine.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if there's a standard for this, but based on python's <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">Truth Value Testing</a> you would probably be safe writing something like</p>
<pre><code>def foo(bar):
    """
    Do some stuff.

    bar : callable
        when tested for truth value, return value should evaluate to True if and only if XXX.
    """

    if bar(...):
        ...  # code goes here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest that is is just fine to say "must return True if XXX and False otherwise." Because of duck typing, I read this the way you intend. Further, this seems to be standard in how the Python standard library documents things.</p>
<p>In fact, if you <em>do</em> strictly require the value to be <code>True</code> or <code>False</code> and use this language, I will have a very bad day tracking down this bug!</p>
<p>As others have said, "truthy" and "falsy" are fine, well-understood alternatives if you are still concerned.</p>
</div>
<span class="comment-copy">A common way to refer to this is <i>truthy</i> and <i>falsey</i>.  However, this is really no requirement at all, because <i>any</i> value returned by <code>bar()</code> will be either truthy or falsey.</span>
<span class="comment-copy">How objects evaluate to true or false is often called "truthiness". Also, <a href="https://english.stackexchange.com/questions/109996/is-it-falsy-or-falsey">falsey is often spelled falsy</a>.</span>
<span class="comment-copy">@JohnGordon there are exceptions like numpy arrays. See <a href="https://stackoverflow.com/questions/52862526/can-the-python-bool-function-raise-an-exception-for-an-invalid-argument">this</a> for further context.</span>
<span class="comment-copy">@timgeb Fair enough.</span>
<span class="comment-copy">You can say <code>bool(bar())</code> must evaluate to <code>True</code> or <code>False</code>?</span>
<span class="comment-copy">@John Gordon: I did see your comment but I am glad to mark the question as solved.</span>
<span class="comment-copy">Verbose, but safe. Good in some contexts.</span>
<span class="comment-copy">"evaluates to True (False)" would be also my anwer</span>
