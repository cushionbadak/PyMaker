<div class="post-text" itemprop="text">
<p>What is the best method to slice a list (here: lst_num) into (more than two) parts of variable length according to another list containing the indices?</p>
<p>A string of numbers has to be split into sublists that contain the numbers standing between all subsequent occurrences of a certain number. E.g.: "30 24 17 30 22 1 67 2 4 3 30 24 95 34 29 56 30 43 24" and "30" yields: [24, 17], [22, 1, 22, 1, 67, 2, 4, 3 ]  and [24, 95, 34, 29, 56]</p>
<pre><code>str_num="30 24 17 30 22 1 67 2 4 3 30 24 95 34 29 56 30 43 24"
lst_num=[int(x) for x in ciphtext.split()]
idx=[i for i, x in enumerate(lst_num) if x==30]
for i in idx: ???
</code></pre>
<p>To slice the list, the first argument should be "i+1", but how to obtain the subsequent index from idx as stop index? Is there a way to give each sublist a unique name in the iteration? </p>
</div>
<div class="post-text" itemprop="text">
<p>One little step to go:</p>
<pre><code>&gt;&gt;&gt; [lst_num[start+1:end] for start, end in zip(idx, idx[1:])]
[[24, 17], [22, 1, 67, 2, 4, 3], [24, 95, 34, 29, 56]]
</code></pre>
<p>Just <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> the indexes into pairs of slice boundaries.</p>
</div>
<span class="comment-copy">list slicing. keep slicing till you run out of your number.</span>
<span class="comment-copy">I can't understand the pattern. You also aren't starting with 2 lists, you're starting with a single string</span>
