<div class="post-text" itemprop="text">
<p>I have two lists of lists, and I would like to create a new list of list, containing each list average(averaging the values in each spot).
for example: if I have the following lists:</p>
<pre><code> file1 = [[1, -1], [2, -2], [3, -3], [4, -4]]
 file2 = [[20, -40], [2, 0], [-50, 7], [30150, -200]]
</code></pre>
<p>the average list outcome will be: (using int to round)</p>
<pre><code>avg = [[10, -20], [2, -1], [-23, 2], [15077, -102]]
</code></pre>
<p>once I've done that, if the lists aren't the same length, I must add the components of the long list as is. for example:</p>
<pre><code>file1 = [[1, -1], [2, -2], [3, -3], [4, -4],[100, 100]
 file2 = [[20, -40], [2, 0], [-50, 7], [30150, -200]]
</code></pre>
<p>the outcome will be:</p>
<pre><code>[[10, -20], [2, -1], [-23, 2], [15077, -102],[100, 100]]
</code></pre>
<p>I was thinking of using nested loops but it seems like too much of operations. 
(since these lists are just examples, and I'm using a very long list instead..)
thx for the help! </p>
</div>
<div class="post-text" itemprop="text">
<p>We can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> to merge our files to then append average of our tuple values to <code>avg</code>.</p>
<pre><code>file1 = [[1, -1], [2, -2], [3, -3], [4, -4],[100, 100]]
file2 = [[20, -40], [2, 0], [-50, 7], [30150, -200]]
avg = []

for x1, x2 in zip(file1, file2):
    avg.append([(x1[0] + x2[0])//2, (x1[1] + x2[1])//2])

if len(avg) &lt; len(file1):
    avg.extend(file1[len(avg):])
elif len(avg) &lt; len(file2):
    avg.extend(file2[len(avg):])

print(avg) # -&gt; [[10, -21], [2, -1], [-24, 2], [15077, -102], [100, 100]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">zip_longest</a>:</p>
<pre><code>from itertools import zip_longest

lst1 = [[1, -1], [2, -2], [3, -3], [4, -4], [100, 100]]
lst2 = [[20, -40], [2, 0], [-50, 7], [30150, -200]]


def avg(numbers):
    not_none = [n for n in numbers if n is not None]
    return sum(not_none) // len(not_none)


result = [[avg(e) for e in zip_longest(il, jl)] for il, jl in zip_longest(lst1, lst2, fillvalue=[])]

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[[10, -21], [2, -1], [-24, 2], [15077, -102], [100, 100]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to do it in one line, you can do something like:</p>
<pre><code>&gt;&gt;&gt; [ [ int(sum(l2)/len(l2)) for l2 in zip(*l)] for l in zip(file1, file2) ]
[[10, -20], [2, -1], [-23, 2], [15077, -102]]
</code></pre>
<p>And we can do ugly things with <code>zip_longest</code>, too:</p>
<pre><code>&gt;&gt;&gt; [ [ int(sum([x for x in l2 if x is not None])/len([x for x in l2 if x is not None])) for l2 in zip_longest(*l)] for l in zip_longest(file1, file2, fillvalue=[]) ]
[[10, -20], [2, -1], [-23, 2], [15077, -102], [100, 100]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this is a good solution:</p>
<pre><code>def averageList(list1, list2):
    avg = []
    n = 0
    while n &lt; max(len(list1), len(list2)):
        if n &lt; min(len(list1), len(list2)):
            avg.append([int((list1[n][0]+list2[n][0])/2), int((list1[n][1]+list2[n][1])/2)])
        elif len(list1) &gt; len(list2):
            avg.append(list1[n])
        elif len(list1) &lt; len(list2):
            avg.append(list2[n])
        n = n+1
    return avg
</code></pre>
</div>
<span class="comment-copy">I don't understand your numbers. What are you averaging?</span>
<span class="comment-copy">all numbers that are in the same position. 1 and 20, -1 and 40 and so on @cha0site</span>
<span class="comment-copy">They are no averaged in any way I can conceive of</span>
<span class="comment-copy">so how come -1 and -40 average to 10?</span>
<span class="comment-copy">oh sry ! ive added a wrong list. Fixed it.. thanks @roganjosh</span>
<span class="comment-copy">Updated, thanks!</span>
<span class="comment-copy">Clean! thanks alot</span>
