<div class="post-text" itemprop="text">
<p>Say, I have the directories structure like:</p>
<pre><code>foo1/
├── bar2/
│   └── ...
└── bar4/
    └── ...
</code></pre>
<p>I want to write a function that will find the directory I am looking for and it's parent directory, like</p>
<pre><code>def directory_find(atom):
    # ....

directory_find(bar4)
</code></pre>
<p>so this would return me <code>foo3/bar4</code> as a result, the parent directory may not be known initially, so that's why I am thinking of the recursive search.</p>
<p>It seems the <code>os</code> module does not do what I want as it works only for files this way.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's what <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk()</code></a> does for you; it'll traverse a nested directory structure, and tell you at each step what the filenames and directories are.</p>
<p>Your search can be implemented as:</p>
<pre><code>def directory_find(atom, root='.'):
    for path, dirs, files in os.walk(root):
        if atom in dirs:
            return os.path.join(path, atom)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.makedirs("foo1/bar2", exist_ok=True)
&gt;&gt;&gt; os.makedirs("foo1/bar4", exist_ok=True)
&gt;&gt;&gt; directory_find('bar2')
'./foo1/bar2'
&gt;&gt;&gt; directory_find('bar4')
'./foo1/bar4'
</code></pre>
</div>
<span class="comment-copy">Look at the os.walk() method or the pathlib module: <a href="https://docs.python.org/3/library/index.html" rel="nofollow noreferrer">docs.python.org/3/library/index.html</a></span>
