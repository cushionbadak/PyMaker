<div class="post-text" itemprop="text">
<p>I have used Python for years. I have used pickle extensively. I cannot figure out what this is doing:</p>
<pre><code>with codecs.open("huge_picklefile.pc", "rb") as f:
    data = pickle.load(f)
    print(len(data))
    data = pickle.load(f)
    print(len(data))
    data = pickle.load(f)
    print(len(data))
</code></pre>
<p>This returns to me:</p>
<pre><code>335
59
12
</code></pre>
<p>I am beyond confused. I am use to pickle loading the massive file into memory. The object itself is a massive array of arrays (I assume). Could it be comprised of multiple pickle objects? Unfortunately, I didn't create the pickle object and I don't have access to who did. </p>
<p>I cannot figure out why pickle is splitting up my file into chunks, which isn't the default, and I am not telling it to. What does reloading the same file do? I honestly never tried or even came across a use case until now. </p>
<p>I spent a good 5 hours trying to figure out how to even ask this question on Google. Unsurprisingly, trying "multiple pickle loads on the same document" doesn't yield anything too useful. The Python 3.7 pickle docs does not describe this behavior. I can't figure out how repeatedly loading a pickle document doesn't (a) crash or (b) load the entire thing into memory and then just reference itself. In my 15 years of using python I have never run into this problem... so I am taking a leap of faith that this is just weird and we should probably just use a database instead. </p>
</div>
<div class="post-text" itemprop="text">
<p>This file is not quite a pickle file. Someone has dumped multiple pickles into the same file, resulting in the file contents being a concatenation of multiple pickles. When you call <code>pickle.load(f)</code>, <code>pickle</code> will read the file from the current file position until it finds a pickle end, so each <code>pickle.load</code> call will load the next pickle.</p>
<p>You can create such a file yourself by calling <code>pickle.dump</code> repeatedly:</p>
<pre><code>with open('demofile', 'wb') as f:
    pickle.dump([1, 2, 3], f)
    pickle.dump([10, 20], f)
    pickle.dump([0, 0, 0], f)
</code></pre>
</div>
<span class="comment-copy">Unsure if this will work but by looking at the documentation at <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">Python 3.7 Pickle</a> the answer could be to call <code>pickle.load(f, *)</code> to load all object files at once?</span>
<span class="comment-copy">@MaxCollier: That's not valid syntax. I think you're misreading the function signatures. A <code>*</code> in a function signature specifies the beginning of keyword-only arguments. You can't pass <code>*</code> as an argument to a function.</span>
<span class="comment-copy"><code>pickle</code> will load one object at a time. there may be further serialized objects if someone has done <code>pickle.dump(f, obj)</code> ob the file to create it. Some people do this, for some odd reason. I suppose, it is easy to serialize various objects and read them in and process them lazily this way, but it is likely better to use something like <code>shelve</code></span>
<span class="comment-copy">I believe this is part of the design of pickle, but in any event, one should probably use <code>shelve</code> for this</span>
