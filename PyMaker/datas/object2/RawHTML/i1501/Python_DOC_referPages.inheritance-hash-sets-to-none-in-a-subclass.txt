<div class="post-text" itemprop="text">
<p>I managed to reproduce this on both Python 3.4 and 3.7.</p>
<p>Consider:</p>
<pre><code>class Comparable:
    def _key(self):
        raise NotImplementedError

    def __hash__(self):
        return hash(self._key())

    def __eq__(self, other):
        ...

    def __lt__(self, other):
        ...


class A(Comparable): pass

class B(A):
    def __str__(self):
        return "d"

    def __eq__(self, other):
        return isinstance(self, type(other))

    def _key(self):
        return str(self),

b = B()
</code></pre>
<p>Clearly one would expect <code>b.__hash__</code> to be defined here, since it is defined under <code>Comparable</code> which <code>B</code> is a subclass of.</p>
<p>Lo and behold, it is defined, but evaluates to <code>None</code>. What gives?</p>
<pre><code>&gt;&gt; b
&lt;__main__.B object at 0x00000183C9734978&gt;
&gt;&gt; '__hash__' in dir(b)
True
&gt;&gt; b.__hash__

&gt;&gt; b.__hash__ is None
True
&gt;&gt; B.__mro__
(&lt;class '__main__.B'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.Comparable'&gt;, &lt;class 'object'&gt;)
&gt;&gt; isinstance(b, Comparable)
True
</code></pre>
<p>The same behavior is reproduced if implementing <code>__init__</code> as <code>super().__init__()</code> in <code>Comparable</code> and <code>A</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Found it in <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer">the docs</a>:</p>
<blockquote>
<p>A class that overrides <code>__eq__()</code> and does not define <code>__hash__()</code> will have its <code>__hash__()</code> implicitly set to None. </p>
</blockquote>
<p>and</p>
<blockquote>
<p>If a class that overrides <code>__eq__()</code> needs to retain the implementation of <code>__hash__()</code> from a parent class, the interpreter must be told this explicitly by setting <code>__hash__ = &lt;ParentClass&gt;.__hash__</code></p>
</blockquote>
<p>From ticket <a href="https://bugs.python.org/issue1549" rel="nofollow noreferrer">1549</a>:</p>
<blockquote>
<p>This was done intentionally -- if you define a comparison without
  defining a hash, the default hash will not match your comparison, and
  your objects will misbehave when used as dictionary keys.</p>
</blockquote>
<p>(Guido van Rossum)</p>
</div>
<span class="comment-copy">Where is <code>d</code> coming from?</span>
<span class="comment-copy">@kabanus from a typo :) fixed</span>
<span class="comment-copy">It is already not available in <code>A</code></span>
<span class="comment-copy">In 2.7 : <code>b.__hash__ is None</code> =&gt; True</span>
<span class="comment-copy">This is a good catch!</span>
<span class="comment-copy">@Netwave Thanks, I am looking for the reasoning now.</span>
<span class="comment-copy">Maybe comes from this early bug: <a href="https://bugs.python.org/issue2235" rel="nofollow noreferrer">bugs.python.org/issue2235</a></span>
<span class="comment-copy">Ah, should have checked the docs myself. Guess I was too busy smashing my head on the wall.</span>
<span class="comment-copy">@DeepSpace Understandable, this is a bizarre one.</span>
