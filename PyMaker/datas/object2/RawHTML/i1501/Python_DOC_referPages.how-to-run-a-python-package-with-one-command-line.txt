<div class="post-text" itemprop="text">
<p>I'm a newbie in Python. And I don't know how to run a python package with only one command line. I have been searched it on GG but I have no key-word. 
There is my folder:</p>
<pre><code>├── config.json
└── my_source
    ├──__init__.py
    ├──filter.py
    └──get_new_users.py
</code></pre>
<p>And config.json contains 3 parameters and able change by the user. So, I want to run this my_source package with one command line like this:</p>
<blockquote>
<p>my_source -c config.json</p>
</blockquote>
<p>Could I able to run my code in this way? 
If it's possible. Could anyone give me a key-word or a way to do it? If you need more info, please leave a comment. Thank you.  </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>To run a python module/package specify the <a href="https://docs.python.org/2/using/cmdline.html#cmdoption-m" rel="nofollow noreferrer">-m flag</a>.</strong></p>
</blockquote>
<p>For example in your situation it will be something like:</p>
<pre><code>python -m my_course.filter
</code></pre>
<p>See this <a href="https://stackoverflow.com/questions/22241420/execution-of-python-code-with-m-option-or-not">SO question</a> for more info.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not clear what you mean "run a folder". Rather you can import the folder as a module, in other code, say <code>app.py</code></p>
<pre><code>├── config.json
├── app.py
└── my_source
    ├──__init__.py
    ├──filter.py
    └──get_new_users.py
</code></pre>
<p>And do <code>from my_source import *</code> within <code>app.py</code> to use the function/variables defined there</p>
<p>Then, run <code>python app.py</code>, and pass <code>config.json</code> somehow depending on the internals of that code</p>
</div>
<span class="comment-copy">you mean execute the script?</span>
<span class="comment-copy">you are right. @KunalMukherjee</span>
<span class="comment-copy">Thank you.  In case if I want to make it as a package. How can I run it?</span>
<span class="comment-copy">Perhaps you can check some documentation about packages? <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a></span>
