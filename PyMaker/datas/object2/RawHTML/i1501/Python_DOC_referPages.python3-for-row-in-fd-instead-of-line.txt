<div class="post-text" itemprop="text">
<p>Is it possible to split something by ", " on a row and print it out as a separate line</p>
<pre><code>fd = open("data.txt", "r").readlines()

i = 0

for line in fd:
    line = line.lstrip().rstrip().split(", ")[i]
    print("Subject-%d: %s" % (i, line))
    print("Name-%d: %s" % (i, line))
    print("Fruit-%d: %s" % (i, line))
    i += 1
</code></pre>
<p>Text file contains this:</p>
<pre><code>People, Zeref, Apple
Greeks, Zues, Apricot
</code></pre>
<p>Basically what I want the code to do is split the text file by ", " and print each one onto a new line so it says this</p>
<pre><code>Subject-0: People
Name-0: Zeref
Fruit-0: Apple
Subject-1: Greeks
Name-1: Zues
Fruit-1: Apricot
</code></pre>
<p>For some reason it just says </p>
<pre><code>Subject-0: People
Name-0: People
Fruit-0: People
Subject-1: Greeks
Name-1: Greeks
Fruit-1: Greeks
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>line = line.lstrip().rstrip().split(", ")[i]
</code></pre>
<p>This line splits the line by comma and takes the i'th element (it works for i=0,1 and probably 2 but you'll get an exception once i will be bigger) </p>
<p>What you would actually like to do is - </p>
<pre><code>subject, name, fruit = line.lstrip().rstrip().split(", ")
</code></pre>
<p>And then print each variable but a more elegant way would be to use <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv reader</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The reason your code doesn't currently work, is because in the example you give, you are taking a fixed item per line (<code>line = ...[i]</code>) where <code>i</code> does not change in between you printing the different lines.</p>
<p>Assuming your file always contains the same structure <code>Subject, Name, Fruit</code>, I would use <code>zip()</code> to loop over the line:</p>
<pre><code>fd = open("data.txt", "r").readlines()
labels = ['Subject', 'Name', 'Fruit']

for line_num, line in enumerate(fd):
    line = line.lstrip().rstrip()
    for label, item in zip(labels, line.split(', '):
        print("%s-%d: %s" % (label, line_num, item))
</code></pre>
<p>Additionally, I would replace your print statement with a 'more modern' version:</p>
<pre><code>print(f'{label}-{line_num}: {item}')
</code></pre>
<p>or if you work in a version &lt; 3.6</p>
<pre><code>print('{}-{}: {}'.format(label, line_num, item)
</code></pre>
<p>but that is mostly personal preference.</p>
</div>
<span class="comment-copy"><code>.lstrip().rstrip()</code> is surely exactly equal to <code>.strip()</code>?</span>
<span class="comment-copy">We can use strip() only instead of lstrip() and rstrip() both.</span>
