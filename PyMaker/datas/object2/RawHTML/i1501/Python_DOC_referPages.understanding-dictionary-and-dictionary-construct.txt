<div class="post-text" itemprop="text">
<p>I'm just started into the python learning and trying to understand the different construct of dictionary while going through dictionary reading i know it has key and Values format but i have few doubts to understand.</p>
<p>I have Below two dictionary called <code>d1</code> and <code>d2</code></p>
<pre><code>&gt;&gt;&gt; d1
{'A': 'one', 'B': 'two', 'C': 'three'}
&gt;&gt;&gt; type(d1)
&lt;class 'dict'&gt;
</code></pre>
<p>In the above sample i see proper dictionary key and value format and while looking at type it says <code>class dict</code></p>
<pre><code>&gt;&gt;&gt; d2
{'A': ['B', 'C']}
&gt;&gt;&gt; type(d2)
&lt;class 'dict'&gt;
</code></pre>
<p>While the above sample i see dictionary key is okay but values are in list format and while looking at type it also says <code>class dict</code></p>
<p>So, How could i process the <code>d2</code> into a proper dictionary format <code>key and value</code>. saying that i want to process <code>d2</code> so it looks like as <code>d1</code> then how could that be achieved.</p>
<p>Apologies if something i could not make clear.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python Dictionary are an unordered set of key: value pairs.</p>
<p>Keys are unique within a dictionary while values may not be. The values of a dictionary can be of <strong>any type</strong>, but the keys must be of an immutable data type such as strings, numbers, or tuples.</p>
<p>so you can store any type of object in value.</p>
<p>in first example you are storing string in value.
In second example you are storing list in value.</p>
<p>you can access the key value pair using below code.</p>
<pre><code>d1 = {'A': 'one', 'B': 'two', 'C': 'three'}
d2 = {'A' : ['B', 'C'], 'D':['E','F']}

for k,v in d1.items():
    print("key = {} value = {}".format(k,v))


for k,v in d2.items():
    print("key = {} value = {}".format(k,v))
</code></pre>
<p>Output:</p>
<pre><code>key = A value = one
key = B value = two
key = C value = three
key = A value = ['B', 'C']
key = D value = ['E', 'F']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, you can just use <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow noreferrer"><code>.items() function</code></a> over the <code>d2</code> dictionary as follows:</p>
<pre><code>&gt;&gt;&gt; for key, value in d2.items():
...     print(f"{key} : {value}")
</code></pre>
<p>Try using the <a href="https://github.com/collin5/python-n2w" rel="nofollow noreferrer">n2w</a> python library to convert the number to words and flatten the dictionary to get the desired output.</p>
</div>
<span class="comment-copy">They are both "proper" dictionaries. The type of a dictionary variable tells you nothing about the type of the values. If you'd like to see what the type of the values are, simply do something like <code>type(next(iter(d2.values())))</code> (or just index the dictionary with a key that you know). What do you want to get as output? I don't understand at all what you're asking to do.</span>
<span class="comment-copy">@AlexanderReynolds, i tried that it does not work and says <code>TypeError: 'dict_values' object is not an iterator</code></span>
<span class="comment-copy">Yes, I edited the comment as I realized I left out part of it.</span>
<span class="comment-copy">@AlexanderReynolds, thnx for edit, i have edited my question just to make it more claer as i could.</span>
<span class="comment-copy">Sach, thnx for your answer , can i get the d2 as <code>{'A': 'B', 'A': 'C'}</code></span>
<span class="comment-copy">No, as I mentioned the key should be unique within dictionary so you can not have two value associated with same key.</span>
<span class="comment-copy">But it can be converted reverse way like <code>{Val:key for key, Value in d2.items() for Val  in Value}</code> just i see</span>
