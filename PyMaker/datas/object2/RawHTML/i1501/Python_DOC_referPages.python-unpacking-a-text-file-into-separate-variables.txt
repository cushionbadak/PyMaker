<div class="post-text" itemprop="text">
<p>I have a .txt file formatted like this</p>
<p>60<br/>
4<br/>
20<br/>
YF<br/>
X : YF+XF+Y<br/>
Y : XF-YF-X  </p>
<p>I need each line to be a separate variable and the last two to be broken into a key and value in a dictionary. I currently have this:</p>
<pre><code>class LSystem:
    def __init__(self,filename):

        #complete this method
        self.rules = {}
        file = open(filename)
        for i, line in enumerate(filename):
            if i == 0:
                self.angle = line
            elif i == 1:
                self.iteration = line
            elif i == 2:
                self.distance = line
            elif i == 3:
                self.axiom = line
            elif i &gt;= 4:
                (key,val)= line.split
                self.rules[key] = val

        file.close()
</code></pre>
<p>This gives me this error:</p>
<pre><code>Traceback (most recent call last):
  File "lab10.py", line 65, in &lt;module&gt;
    main()
  File "lab10.py", line 10, in main
    sys = lsystem.LSystem("arrowheadcurve.txt")
  File "/Users/alongo/Dropbox/Freshman Fall Semester/CS 110/Labs/lab-10-fall18-antmelon/lsystem.py", line 17, in __init__
(key,val)= line.split
TypeError: cannot unpack non-iterable builtin_function_or_method object
</code></pre>
<p>How do you go about fixing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>As @Carcigenicate commented, <code>line.split</code> does not actually call the <code>split()</code> function. You need to invoke it by including the parentheses:</p>
<pre><code>(key,val) = line.split()
</code></pre>
<p>But note that <a href="https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split" rel="nofollow noreferrer"><code>split()</code></a> will split on white space characters. For your input this will result in a list containing <em>three</em> items, and unpacking that into only <em>two</em> variables will also fail.</p>
<p>I assume that you should be splitting on the <code>:</code> (further assuming that <code>:</code> can not be present else where in the expression). Try this:</p>
<pre><code>(key, val) = line.split(' : ')
</code></pre>
<p>I have included the surrounding spaces in the delimiter to the leading and trailing spaces are not present in the result. If the white space is inconsistent you can handle it like this:</p>
<pre><code>key, val = [s.strip() for s in line.split(':')]
</code></pre>
<p>Also, fix the file iteration by using the file object, not the filename string, and open it in a <code>with</code> statement (so that it will be guaranteed to be properly closed):</p>
<pre><code>    with open(filename) as f:
        for i, line in enumerate(f):
            line = line.strip()    # remove leading and trailing white space
            if i == 0:
                self.angle = line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You've missed few small things that I'm commenting in the following code:</p>
<pre><code>class LSystem:
    def __init__(self, filename):
        self.rules = {}
        your_file = open(filename) # Try to avoid using keyword as variable names
        for i, line in enumerate(your_file): # you should enumerate over your file object not its string name
            if i == 0:
                self.angle = line
            elif i == 1:
                self.iteration = line
            elif i == 2:
                self.distance = line
            elif i == 3:
                self.axiom = line
            elif i &gt;= 4:
                key, val = line.split(' : ') # You should call split passing your desired separator
        f.close()
</code></pre>
</div>
<span class="comment-copy">You're not calling the function. You need <code>(key,val) = line.split()</code> (note the end). Voting to close as a typo.</span>
<span class="comment-copy">Although, there's other problems with the code. You're iterating the filename, not the file contents. This also shouldn't be done with a loop. You would be better off doing something like reading all the lines into a <code>lines</code> variable and doing <code>self.angle = lines[0]; self.iteration = lines[1]; self.distance = lines[2]...</code>.</span>
