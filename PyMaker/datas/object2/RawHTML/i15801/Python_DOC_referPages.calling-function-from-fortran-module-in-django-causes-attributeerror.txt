<div class="post-text" itemprop="text">
<p>I have a simple subroutine written in <code>Fortran</code>. Just for testing reasons it is as simple as this:</p>
<pre><code>!test.f90
subroutine test()
end subroutine test
</code></pre>
<p>It compiles well with <code>gfortran</code> and with <code>f2py</code>. I compile it with <code>f2py</code> like so:</p>
<pre><code>$ f2py -m test -c test.f90
</code></pre>
<p>If I go to <code>python</code>, I can import it and everything works ok:</p>
<pre><code>&gt;&gt;&gt; import test
&gt;&gt;&gt; test.test() # ok. nothing as expected and with no errors
</code></pre>
<p>In <code>django</code> I have an app called just <code>myapp</code>. It has a view which looks like this:</p>
<pre><code>from django.shortcuts import render
from django.http import HttpResponse
from django.template import RequestContext, loader
from numpy import *
from test import *  # the module itself imports ok, I get no errors

def index(request):
    template = loader.get_template('myapp/index.html')
    #test.test() # but if I try to call a function from it, I get an error
    context = RequestContext(request,{})
    return HttpResponse(template.render(context))
</code></pre>
<p>The error message is: <code>AttrubuteError at /myapp/ test</code>. PS. I'm a <code>python</code> and <code>django</code> newbee, so I guess I could make some "stupid" error. </p>
<p><strong>EDIT</strong></p>
<p>Now, thanks to <code>laike9m</code>, I manage to call a fortran function, at least I do not have error any longer. But at the same time it seems as if the function does nothing. I mean this. I changed my fortran function a little bit, so that it now writes some stuff to a file. If I check it in pure <code>python</code>, I see that it works - a file is modified. But if I call it in django, it does not modify it. So, my codes now look like this:</p>
<pre><code>!fortran code
!test.f90
subroutine test()
  open(1,file='test.txt',status='replace')
  write(1,*) "Hello, Django! My name is Fortran."
  close(1)
end subroutine test


from django.shortcuts import render
from django.http import HttpResponse
from django.template import RequestContext, loader
from numpy import *
from test import * # it's ok

def index(request):
    template = loader.get_template('myapp/index.html')
    test() # no error any longer, but the function itself does nothing
    context = RequestContext(request,{})
    return HttpResponse(template.render(context))
</code></pre>
<p>So, my question is how to check whether fortran module works or not?</p>
<p><strong>EDIT</strong></p>
<p>Thanks to <strong>laike9m</strong> and <strong>Vladimir</strong>, I finally did it. The problem was in the path to the file. I had to put the file right in the root folder of the project. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you <code>import test</code>, then it's <code>test.test()</code><br/>
If you <code>from test import *</code>, then it's <code>test()</code></p>
<p>See <a href="https://docs.python.org/3/reference/import.html" rel="nofollow">The import system</a></p>
</div>
<span class="comment-copy">Don't use unit number <code>1</code> or anything smaller than 11. They can have a special purpose and be pre-connected.</span>
<span class="comment-copy">Thanks, Vladimir, I will check it now</span>
<span class="comment-copy">@Vladimir Unfortunately, that does not help. It still has no effect</span>
<span class="comment-copy">Thanks, I will check it now!</span>
<span class="comment-copy">Yes, that is absolutely right! Thank you, sir!</span>
<span class="comment-copy">@Jacobian I'm glad it helps.</span>
<span class="comment-copy">Could you, please, have a look at my updated question?</span>
<span class="comment-copy">@Jacobian I'm sorry but I'm not familiar with fotran. Is it working when you type in REPL?</span>
