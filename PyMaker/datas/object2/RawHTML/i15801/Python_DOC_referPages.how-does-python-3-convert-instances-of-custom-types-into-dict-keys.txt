<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4901815/object-of-custom-type-as-dictionary-key">Object of custom type as dictionary key</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>How is an instance of a custom type (i.e. a user-written class) converted to a dict key in Python 3?</p>
<p>Consider for example the following code, where a class has a single variable that should define whether instances are alike:</p>
<pre><code>class MyClass:
    def __init__(self, x):
        self.x = x


d = {MyClass(1): 1}
assert d[MyClass(1)] == 1
</code></pre>
<p>The assert fails because the two different MyClass instances don't resolve to the same dict key, even though they are alike.</p>
</div>
<div class="post-text" itemprop="text">
<p>To make custom types usable as dict keys, they must define <code>__hash__</code> and <code>__eq__</code>. I don't know if this is documented anywhere, I wasn't able to find any definition at least, but I've been told so informally:</p>
<pre><code>class MyClass:
    def __init__(self, x):
        self.x = x

    def __hash__(self):
        return hash(self.x)

    def __eq__(self, rhs):
        return rhs.x == self.x


d = {MyClass(1): 1}
assert d[MyClass(1)] == 1
</code></pre>
</div>
<span class="comment-copy">And in the documentation: <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__hash__</a></span>
<span class="comment-copy">@jonrsharpe That's only useful if you're looking into the __hash__ method, my problem was the <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dict tutorial</a> only states that keys should be "immutable". I can see now however that the <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">dict reference itself</a> states that keys must be <a href="https://docs.python.org/3/glossary.html#term-hashable" rel="nofollow noreferrer">hashable</a>.</span>
<span class="comment-copy">That documentation is referring to the built-in types (as the tutorial necessarily doesn't cover everything in full detail, and classes haven't been introduced by section 5); all built-in types implement <code>__eq__</code> and <code>__hash__</code>, the mutable types raise <code>TypeError</code> for the latter.</span>
<span class="comment-copy">@jonrsharpe Yeah, I understand it refers implicitly to builtin types, but that is not what it is saying. It makes a general statement of what index keys may be, which leads to confusion (as in my case).</span>
