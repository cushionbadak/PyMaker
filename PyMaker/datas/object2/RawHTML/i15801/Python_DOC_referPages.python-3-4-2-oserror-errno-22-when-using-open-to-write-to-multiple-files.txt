<div class="post-text" itemprop="text">
<p>hello im trying to write a game about having a village and keep it alive for 100 days but<br/>
 while writing the save system i came across an error this is my code:  </p>
<pre><code>filename = input("name of file: ").strip()  
filename = '"'+filename+'"'  
os.system("md "+filename)  
filename = filename.replace('"',"")  
file = open(filename+"\population.txt","w")  
file.write(str(population))  
file.close()  
file = open(filename+"\name.txt","w")  
file.write(str(name))  
file.close()  
file = open(filename+"\days.txt","w")  
file.write(str(days))  
file.close()  
file = open(filename+"\food.txt","w")  
file.write(str(food))  
file.close()  
file = open(filename+"\hours.txt","w")  
file.write(str(hours))  
file.close()  
file = open(filename+"\villagerskilled.txt","w")  
file.write(str(villagerskilled))  
file.close()  
</code></pre>
<p>the population one works but when it gets to name it gives me the error  </p>
<pre><code>Traceback (most recent call last):  
file 'C:\Users\user\Desktop\survivor village.py', line 147 in &lt;module&gt;  
file = open(filename+"\name.txt","w")  
OSError: [Errno 22] Invalid argument: "test\name.txt"  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is because <code>"\n"</code> is a new line.  Try <code>"\\n"</code> or <code>r"\n"</code> and this should solve your problem.  Also python accepts forward slashes <code>"/"</code> for paths on Windows, so it is probably safer to use those.</p>
<p>Read about escape characters <a href="http://www.tutorialspoint.com/python/python_strings.htm" rel="nofollow">here.</a></p>
<p>Also, it is generally bad form to name a variable "file" because <code>file()</code> is a <a href="https://docs.python.org/2/library/functions.html#file" rel="nofollow">built-in function</a> in python.</p>
</div>
<span class="comment-copy">The reason your formatting didn't work is that you need to leave a blank line before and after code blocks. I've fixed it for you.</span>
<span class="comment-copy">A few side notes: This code is crying out for a loop instead of repeating the exact same 3 lines of code 6 times, varying only in one string. Also, look at the methods in the <code>os</code> module; <code>os.mkdir</code> makes your <code>system</code> call unnecessary, and all the problems that go with it (like needing to quote <code>filename</code>â€”and your solution to that isn't very robust), and <code>os.path.join</code> would eliminate the possibility of the bug you ran into here. And if you do need to execute other programs, use <code>subprocess</code>, not <code>system</code> (which also eliminates the need for quoting).</span>
<span class="comment-copy">thank you i added the extra backslash and it worked but i didnt know forward slashes worked</span>
<span class="comment-copy">By the way, <code>file</code> isn't a built-in function in Python 3. And even in 2.x, it's a function that's rarely used (it was added in 2.2 for completeness, when most of the built-in types became classes and therefore usable as constructors, and its use was specifically recommended against from the beginning), and the docs have variables named <code>file</code> all over the place. It can occasionally be useful to test, e.g., <code>isinstance(f, file)</code>, so maybe better safe than sorry, but it's not the same as calling a variable <code>list</code> or <code>str</code>.</span>
<span class="comment-copy">@abarnert Thanks for the info!</span>
<span class="comment-copy">You should use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join</code></a> to concatenate path components.</span>
