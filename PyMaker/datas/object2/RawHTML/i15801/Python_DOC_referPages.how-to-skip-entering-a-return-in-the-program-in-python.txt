<div class="post-text" itemprop="text">
<p>I have a python program that SSH's into a system, runs a .py script and has to cat a file.</p>
<p>Once it has run the .py script after SSHing into the remote system, I have to manually hit "return" for the cat program to display the contents of the file. This is because the program is stuck at that point.</p>
<p>What I have looks like this:</p>
<pre><code>s = subprocess.Popen(["../../run.py", "cat", "../../file.xml")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly you want to run a python script, wait for it to finish, and then cat a file?  If that is correct, you would have to use two subprocess calls.  Your line as written is running run.py with arguments cat and ../../file.xml</p>
<p>Why does run.py wait for user input?  My first choice would be to change that.  With that not being an option, I may go for something like</p>
<pre><code>echo "/n" &gt; python ../../run.py
</code></pre>
<p>I am not sure what your plan is behind all of this :)  If this is the extent of what you are trying to do, a shell script would be a better choice.  Something like this-</p>
<pre><code>ssh user@myserver -c "echo "/n" &gt; python ../../run.py; cat ../../file.xml"
</code></pre>
<p>If it is something else, the docs for the subprocess module can explain lots of different ways of entering input into and reading output from a subprocess.</p>
<p><a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">https://docs.python.org/3/library/subprocess.html</a></p>
</div>
<span class="comment-copy">You forgot to show us what <code>../../run.py</code> is. And the majority of your script.</span>
<span class="comment-copy">That script does nothing, but just SSH's into a remote machine. Just to clarify, the SSH is a password less login (configured using SSH-keygen)</span>
