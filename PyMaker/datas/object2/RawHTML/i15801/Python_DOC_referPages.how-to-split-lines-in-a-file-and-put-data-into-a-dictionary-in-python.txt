<div class="post-text" itemprop="text">
<p>I am trying read a txt file and put the data into a dictionary. My file looks something like this:</p>
<pre><code>Alex:3
John:6
Sam:8
</code></pre>
<p>Basically, a word and integer separated by a colon. I want to open and read the file, split each line where the colon is, and put the data into a dictionary like this:</p>
<p>{'Alex':3, 'John':6, 'Sam':8}</p>
<p>So far my code looks like this:</p>
<pre><code>d = {}
f = open('scores.txt', 'r')
for line in f.readlines():
    line = line.strip()
    name = line.split(":")
</code></pre>
<p>How do I assign the name as the key and the integer as the value and put it into the dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<p>Like this:</p>
<pre><code>d = {}
f = open('scores.txt', 'r')
for line in f.readlines():
    name,score = line.split(":")
    d[name] = int(score)
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow">str.split()</a> returns a list of all the tokens in the string.  You can grab both of these values using the syntax I showed.</p>
<p>You can then index it in the dictionary via the name variable, as you can see.</p>
<p>Edit: As @MauroBaraldi in the comments points out, you don't need the <code>line.strip()</code> anymore as <code>int()</code> will do that work for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is with </p>
<pre><code>name = line.split(":")
</code></pre>
<p><code>split()</code> will return a list.  You can unpack the list like this:</p>
<pre><code>name, othervalue = line.split(":")
</code></pre>
<p>And then do:</p>
<pre><code>mydict[name] = othervalue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here are another approach to solve the problem.</p>
<pre><code>with open('scores.txt') as fp:
    result = {}
    for line in fp.readlines():
        key, value = line.split(':')
        result[key] = int(value)
</code></pre>
<p>A good practice is open files using <code>with</code>. It closes automatically when get out of context.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use following code to get desired output. You can separate the words by using <strong>split</strong> . <strong>rstrip</strong> is used to remove the newline.</p>
<pre><code> f = open('file name')

 dic = {}

 for l in f:

     k,v = l.split(':')
     v=v.rstrip('\n')

     if k in dic:

         dict.update({k:v })

     else:

         dic[k] = [v]
  print dic
</code></pre>
<p>output:</p>
<pre><code>   {'John': ['6'], 'Alex': ['3'], 'Sam': ['8']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>d = {}
f = open('scores.txt', 'r')
for line in f:
    line = line.strip()
    name,age= line.strip(":")
    d[name]=age
</code></pre>
<p>In the above code, <code>line.strip()</code> will remove the new line character, <code>line.split(":")</code> will split the string on ":", so you will get two value name and age that will be stored.   <code>d[name]=age</code> name is key and age will be the value stored</p>
</div>
<span class="comment-copy"><code>d = dict(line.strip().split(':') for line in open('scores.txt'))</code></span>
<span class="comment-copy">Answers containing only code and no explanation are usually not helpful.</span>
<span class="comment-copy">@ErlVolton I usually post code first then edit a more detailed description in immediately after.  Sorry.</span>
<span class="comment-copy">That's OK, after your edit I upvoted your answer.</span>
<span class="comment-copy">score is not int, but str</span>
<span class="comment-copy">You could remove <code>line = line.strip()</code> line too, <code>int</code> does the work.</span>
<span class="comment-copy">Answers containing only code and no explanation are usually not helpful.</span>
