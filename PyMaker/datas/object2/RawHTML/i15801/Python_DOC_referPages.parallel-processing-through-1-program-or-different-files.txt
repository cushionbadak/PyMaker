<div class="post-text" itemprop="text">
<p>I have a python program in which i need to run a particular function for different parameter values.</p>
<p>So to increase cpu usage, I tried two different methods,</p>
<ol>
<li><p>I created many copies of my file and ran each each one on separate
terminals.    ( cpu usage : 30 % for one file .
     Thus cpu usage for 3 files = 90% )</p></li>
<li><p>I used the library multithreading and created as many threads as no of cores on my test machine.  ( cpu usage : 33 % only.) I tried increasing no. of threads but performance did not increase.</p></li>
</ol>
<p>Can anyone tell what could be the possibly wrong in 2nd method?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's because of the <a href="https://docs.python.org/3/glossary.html#term-global-interpreter-lock" rel="nofollow">Global interpreter lock</a> (GIL). It's a global lock locking the whole memory to prevent multiple threads accesing it at the same time. It's not the feature of python itself, but of CPython, the default python implementation. See the link at the start of my answer.</p>
<p>To use all cores, look at the <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow">multiprocessing</a> module which creates different processes running in different pythons, hence not needing the GIL.</p>
</div>
