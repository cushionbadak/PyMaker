<div class="post-text" itemprop="text">
<p>I have a list of dictionaries:</p>
<pre><code>[
    {'student_id': 'john', 'exercise_id': '3', 'answer': 20},
    {'student_id': 'john', 'exercise_id': '2', 'answer': 10},
    {'student_id': 'jane', 'exercise_id': '2', 'answer': 30},
]
</code></pre>
<p>What is an elegant/short way to convert that into a [exercise x student] "mapping table" dictionary? 
Like so:</p>
<pre><code>{
    '3':{
        'john': {'student_id': 'john', 'exercise_id': '3', 'answer': 20}
    },
    '2': {
        'john': {'student_id': 'john', 'exercise_id': '2', 'answer': 10},
        'jane': {'student_id': 'jane', 'exercise_id': '2', 'answer': 30}
    }
}
</code></pre>
<p>You can assume the map contains at most one answer per exercise per student.</p>
</div>
<div class="post-text" itemprop="text">
<p>This generates the output you want:    </p>
<pre><code>output = {}
for value in data:
    output.setdefault(value['exercise_id'], {})[value['student_id']] = value

print output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The straight forward way would be to gather them in a dictionary, like this</p>
<pre><code>d = {}
for item in l:
    d.setdefault(item["exercise_id"], {}).setdefault(item["student_id"], []).append(item)
print(d)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'2': {'jane': [{'answer': 30, 'exercise_id': '2', 'student_id': 'jane'}],
       'john': [{'answer': 10, 'exercise_id': '2', 'student_id': 'john'}]},
 '3': {'john': [{'answer': 20, 'exercise_id': '3', 'student_id': 'john'}]}}
</code></pre>
<p>First, if the <code>item["exercise_id"]</code> is not there in <code>d</code>, then a new dictionary will be set as the value and then in that dictionary, if <code>item["student_id"]</code> is not there, we set an empty list as the value and we append the current dictionary in that list.</p>
</div>
<span class="comment-copy">As always, what have you tried?</span>
<span class="comment-copy">Try <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.groupby</a></span>
<span class="comment-copy">Perfect, thanks!</span>
<span class="comment-copy">Instead of calling <code>setdefault(_, {})</code> you can use change type of <code>output</code> from <code>dict</code> to <code>defaultdict(dict)</code>, see more in docs <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a></span>
<span class="comment-copy">Upvoted for short answer plus explanation. Will mark friedi's answer as correct though because it produces the exact desired output. Although this construct will probably be useful in the future too. Thanks!!!!</span>
