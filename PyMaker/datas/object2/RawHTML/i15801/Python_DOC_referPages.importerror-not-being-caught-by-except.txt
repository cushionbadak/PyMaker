<div class="post-text" itemprop="text">
<p>I am fairly new to python and playing around with the code when I noticed something interesting.</p>
<p>File atomicPast.rb version 1:</p>
<pre><code>import datetime

datatime.now()
</code></pre>
<p>I would like to run this code from a python prompt ( not a Windows prompt ). This is how I do it:</p>
<pre><code>&gt;&gt;import sys
&gt;&gt;sys.path.append("C:\\Users\\Myname\\Desktop\\Python")   
&gt;&gt;import atomicPast
</code></pre>
<p>And I get the time printed. However, executing import atomicPast again won't work as it is already imported.  So I found about this:</p>
<pre><code>&gt;&gt;del sys.modules['atomicPast']
</code></pre>
<p>For me this is an unimport and it behaves like it because subsequent import atomicPast will get me my time ( as long as it is unimported again ). However, I want to be able to execute import atomicPast and not worry about whether it is already unimported. I decided to add the unimport bit to the end of my code to act as a cleanup.</p>
<p>File atomicPast.rb version 2:</p>
<pre><code>import sys, inspect, os  

print datetime.datetime.now()

del sys.modules[    inspect.getfile(inspect.currentframe())[0:-3] ]    #1
</code></pre>
<p>In #1 I am  getting the name of the file without the extension ( atomicPast ) and passing it into the del sys.modules[...]. </p>
<p>However, at this point atomicPast is not fully imported (I guess?) so trying to unimport it does not really make sense and throws an exception:</p>
<blockquote>
<blockquote>
<p>import atomicPast
    2014-10-31 10:42:32.368000
    Traceback (most recent call last):
      File "", line 1, in 
    ImportError: Loaded module atomicPast not found in sys.modules</p>
</blockquote>
</blockquote>
<p>Interestingly though, the unimport works and I can repeatedly execute import atomicPast.</p>
<p>I thought I could just handle the exception and get rid of the error print.</p>
<p>Within the file:</p>
<pre><code>...
try: 
    del sys.modules[    inspect.getfile(inspect.currentframe())[0:-3] ]    #1
except ImportError:
    pass
</code></pre>
<p>This does NOT work. I still get the same exception.</p>
<p>Analysing further: </p>
<pre><code>try:     
    #del sys.modules[   inspect.getfile(inspect.currentframe())[0:-3] ] 
    import cowabunga
except ImportError:
    print "in except"
</code></pre>
<p>the above works as expected, importing cowabunga results in an ImportError and is caught.</p>
<p>So I am stuck with the realization that some exceptions in some scenarios might not be catchable. </p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use import to execute the commands or call functions. The correct way is to write something like this:
atomicPast.py</p>
<pre><code>import datetime
def time_now():
    print datetime.now()
</code></pre>
<p>then from python console just do import atomicPast() and then time_now()
Import command is for importing libraries not to execute code, it doesn't work as php import. Read here
<a href="https://docs.python.org/3/reference/import.html" rel="nofollow">https://docs.python.org/3/reference/import.html</a>
and also here <a href="https://docs.python.org/2/library/sys.html#sys.modules" rel="nofollow">https://docs.python.org/2/library/sys.html#sys.modules</a></p>
<p>My advice is to play with sys.modules only if you know what are you doing.</p>
</div>
<span class="comment-copy">First of all, importing a module for side effects is extremely bad style; put the code into a function and import and execute that function. Second, the import error does not arise from your <code>del</code> (this would lead to a KeyError if the module didn't exist, not an ImportError), but rather from the internals of the python import machinery which can't find the module anymore after it loaded the file (as you've deleted it). Thus, you can't catch that exception inside the module; you could catch it around the import, but that would still be bad style.</span>
