<div class="post-text" itemprop="text">
<p>I'm actually trying to calculate a SLA from a csv file in python 2.7.8.
here's an example of my csv file:</p>
<pre><code>2014-09-24 23:57:43;0000B169;20
2014-09-24 23:58:05;00012223;20
2014-09-24 23:58:49;00012200;20
2014-09-24 23:59:33;0000B0EA;21
2014-09-25 00:00:17;000121FF;21
2014-09-25 00:00:39;00012217;21
2014-09-25 00:01:01;00012176;20
2014-09-25 00:01:23;00012175;20
</code></pre>
<p>As you can see there are two different days on my CSV file and I want my program to read them and calculate the SLA daily.
here's my program:</p>
<pre><code>#V1.1 du programme de Calcul du SLA
import csv
import datetime
with open("/home/maxime/Bureau/Dev/Exports/export2.csv", 'rb') as f:            #import the required modules
    reader = csv.reader(f, delimiter=';')
    count=0              #variable of the date "number"
    for row in reader:
    if row[0] !="Dispatch date":                # we don't want to include the first line of the first column
        date = datetime.datetime.strptime (row [0],"%Y-%m-%d %H:%M:%S")             #creating the datetime object with the string agrument
        if date &lt; datetime.datetime.strptime ("2014-09-26 00:00:00", "%Y-%m-%d %H:%M:%S")and date &gt; datetime.datetime.strptime ("2014-09-25 00:00:00", "%Y-%m-%d %H:%M:%S"):        #loop to calcul if the date is correct or not
        count = count+1                 #increment the date to perform the SLA calcul
    result = (count/3927.2)*100                 #SLA calcul
    print "Le fichier date du", date                #
    print "Le SLA est de :", result, "%"            #Display the SLA and the date of the file
</code></pre>
<p>I don't know how to use correctly the "datetime" function in python so could you help me to resolve my problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try to read with the module named "pandas":</p>
<pre><code>import pandas as pd
def importdict(filename):#creates a function to read the csv
    #create data frame from csv with pandas module
    df=pd.read_csv(filename+'.csv', names=['systemtime', 'Var1', 'var2'],sep=';',parse_dates=[0]) #or:, infer_datetime_format=True)
    fileDATES=df.T.to_dict().values()#export the data frame to a python dictionary
    return fileDATES #return the dictionary to work with it outside the function
if __name__ == '__main__':
    fileDATES = importdict('dates') #start the function with the name of the file
</code></pre>
<p>This function returns a dictionary with all the columns and the data such in a format you can work with. I named your csv "dates" in my system. Once the dict is created you can print the info that you want or work with the data.</p>
<p>Hope this can help you, I was in a problem similar to yours a week ago.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found the Solution of my problem so i'm posting it here.</p>
<pre><code>#V1.2 du calcul de SLA
#Cette version est op√©rationnelle   
import csv                         #
from datetime import datetime           #import the librairies   
from collections import defaultdict     #

with open('/home/maxime/Bureau/Dev/Exports/export2.csv', 'rb') as fil:
    values = defaultdict(int)               #create a dict

    reader = csv.DictReader(fil, delimiter=';')         #read the csv file
    for row in reader:
        date = datetime.strptime(row['Dispatch date'], '%Y-%m-%d %H:%M:%S')     #datetime value in the right date format
        values[date.strftime('%Y-%m-%d')] += 1          #increment the date with a step of 1

    for date, value in sorted(values.items()):
        result = (value/ 3927.2) * 100          #Sla calcul with the theoritic number of line
        print 'Le fichier date du %s' % date        #SLA display
        print 'Le SLA est de : %d%%' % result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the data for the same day is grouped in the file then you could use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby()</code></a>, to compute SLA:</p>
<pre><code>#!/usr/bin/env python
import sys
from datetime import datetime
from itertools import groupby

for day, group in groupby(sys.stdin, key=lambda line: line.partition(' ')[0]):
    try:
        date = datetime.strptime(day, '%Y-%m-%d')
    except ValueError:
        pass # ignore
    else:
        count = sum(1 for _ in group)
        print('Le fichier date du {date:%Y-%m-%d}'.format(date=date))
        print('Le SLA est de {result:.2%}'.format(result=count / 3927.2))
</code></pre>
<p>Example:</p>
<pre><code>$ python compute-daily-sla.py &lt; export2.csv
</code></pre>
</div>
<span class="comment-copy">What is the output of your program? Any error messages?</span>
<span class="comment-copy">You don't need to use <code>datetime.datetime.strptime()</code> to create constant date values.. <code>datetime.datetime(2014, 9, 26)</code> would do, for example.</span>
<span class="comment-copy">However, you failed to tell us what your actual <i>problem</i> is. Are there errors? Unexpected output? What output <i>did</i> you expect?</span>
<span class="comment-copy">And how can i make my program automatically calculate the SLA daily ?</span>
<span class="comment-copy">There are no errors but i don't know how to calculate Daily SLA form the csv file. I can export a csv file with random days range ( I don't know the days in the csv file) so  I just want to let my program read all the date and tell me the SLA day per day.</span>
<span class="comment-copy">my csv file is called ("export"). Could you add comments to let me understand your code please i'm quite a noob in python.</span>
<span class="comment-copy">I add the comments to easy understand the code. The name of the file is not important, you only have to change it in the code, from "dates" to "export". You can find some extra info about pandas datetime module in: <a href="http://pandas.pydata.org/pandas-docs/stable/timeseries.html" rel="nofollow noreferrer">Time Series / Date functionality</a></span>
<span class="comment-copy">So i tired your program and i didn't had an output error which is nice. This seems to work properly with my SLA calcul and the date is always correct. Thank you very much :)</span>
