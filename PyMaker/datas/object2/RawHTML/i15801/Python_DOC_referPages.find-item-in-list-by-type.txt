<div class="post-text" itemprop="text">
<p>I have a list that can contain several elements of different types.
I need to check if in this list there is one or more elements of a specific type and get its index.</p>
<pre><code>l = [1, 2, 3, myobj, 4, 5]
</code></pre>
<p>I can achieve this goal by simply iterate over my list and check the type of each element:</p>
<pre><code>for i, v in enumerate(l):
  if type(v) == Mytype:
    return i
</code></pre>
<p>Is there a more pythonic way to accomplish the same result?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#next"><code>next</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression">generator expression</a>:</p>
<pre><code>return next(i for i, v in enumerate(l) if isinstance(v, Mytype)):
</code></pre>
<p>The advantage of this solution is that it is lazy like your current one: it will only check as many items as are necessary.</p>
<p>Also, I used <code>isinstance(v, Mytype)</code> instead of <code>type(v) == Mytype</code> because it is the preferred method of typechecking in Python. See <a href="http://legacy.python.org/dev/peps/pep-0008/#programming-recommendations">PEP 0008</a>.</p>
<p>Finally, it should be noted that this solution will raise a <code>StopIteration</code> exception if the desired item is not found.  You can catch this with a try/except, or you can specify a default value to return:</p>
<pre><code>return next((i for i, v in enumerate(l) if isinstance(v, Mytype)), None):
</code></pre>
<p>In this case, <code>None</code> will be returned if nothing is found.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension.</p>
<p>Get all elements of type string:</p>
<pre><code>b = [x for x in a if isinstance(x,str)]
</code></pre>
<p>Get all indexes of elements of type string:</p>
<pre><code>b = [x[0] for x in enumerate(a) if isinstance(x[1],str)]
</code></pre>
</div>
<span class="comment-copy">Do you need the indices of all elements of that type, or just the first one?</span>
<span class="comment-copy">@BrenBarn In my specific case I need only the first one, but a "general" solution would be appreciated.</span>
<span class="comment-copy">You can use a comprehension or a generator exp - however that would mean you have to go through the entire list to see if there is atleast one. Your method is more efficient IMO.</span>
<span class="comment-copy"><code>if is instance(v, Mytype):</code> would be better, but otherwise this seems fine.</span>
<span class="comment-copy">And how can I get the index of the element in this way?</span>
<span class="comment-copy">@Nick - I'm sorry, I misread your question.  Please see my edit.</span>
