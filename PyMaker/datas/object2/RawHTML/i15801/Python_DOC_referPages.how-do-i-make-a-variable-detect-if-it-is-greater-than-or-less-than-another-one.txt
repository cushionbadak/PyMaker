<div class="post-text" itemprop="text">
<p>I am currently learning Python, and I decided to build a small "Guess the Number" type of game. I am using the random feature, and trying to make it so it will detect if the user's input is equal the the random number. This is my code:</p>
<pre><code>irand = randrange(1, 10)
while True:
    number = input ("Pick a number 1-10: ")
    if number &lt; irand:
        print ("    ")
        print ("That's too high, try again.")
    if number &gt; irand:
        print ("    ")
        print ("That's too low, try again.")
    if number == irand:
        print ("    ")
        print ("You got it right! You won!")
        break
</code></pre>
<p>I am not exactly sure how to make it detect if <code>number</code> is equal to, less than or greater than <code>irand</code>. Any help? Thank you! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code to check "equal to, less than, or greater than" is correct, but you've got a problem <em>earlier</em> in the code.</p>
<p>In Python (3.0 and later), <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> returns a string. So, you're comparing <code>number</code>, a string, to <code>irand</code>, a number. Some languages might convert one way or the other automatically, but that can be confusing,*, so Python refuses to do so, and instead raises a <code>TypeError: unorderable types: int() &lt; str()</code>.</p>
<p>The solution is to parse the input into a number, like this:</p>
<pre><code>number = int(number)
</code></pre>
<p>This will raise a <code>ValueError</code> if the user gives you invalid input, like the letter <code>c</code> instead of a number from 1 to 10. If you want to deal with that more nicely, you use a <code>try</code> statement.</p>
<p>As a side note, you probably want <code>elif</code> instead of <code>if</code>. If you've got everything right, this doesn't make any difference, but if you've made a mistake, it helps catch the mistake.</p>
<p>So, putting it all together:</p>
<pre><code>while True:
    number = input("Pick a number 1-10: ")
    try:
        number = int(number)
    except ValueError:
        print(number, 'is not a number, try again.')
        continue
    if number &lt; irand:
        print("    ")
        print("That's too high, try again.")
    elif number &gt; irand:
        print("    ")
        print("That's too low, try again.")
    else:
        print("    ")
        print("You got it right! You won!")
        break
</code></pre>
<p>(Notice that I used <code>continue</code> in the <code>except</code> clause, so we skip over the rest of the loop and don't have to worry about <code>number</code> not being a number anymore. We could also move the whole loop into an <code>else</code> cause on the <code>try</code>, or add an <code>isinstance</code> check on each <code>if</code>, etc., but that gets a bit clumsy.)</p>
<hr/>
<p><sub>* Consider comparing the string <code>"2"</code> to the number <code>10</code>. A language that converts the string to a number will say that <code>2 &lt; 10</code>; a language that converts the number to a string will say that <code>"10" &lt; "2"</code>. Neither one is "right" or "wrong", but both are surprising half the time…</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following code:</p>
<pre><code>while True:
    number = input("Pick a number 1-10: ")
    try:
        number = int(number)
    except ValueError:
        print(number, 'is not a number, try again.')
        continue
    if number &gt; 10:
        print("    ")
        print("That's too high, try again.")
    elif number &lt; 1:
        print("    ")
        print("That's too low, try again.")
    else:
        print("    ")
        print("You got it right! You won!")
        break
</code></pre>
</div>
<span class="comment-copy">Is this python2.x or python3.x?  <code>input</code> behaves differently on those . . .</span>
<span class="comment-copy">As a side note: don't put a space between a function name and the parentheses around its arguments; it looks a little off and makes it a little harder to read your code. Also, <code>print("    ")</code> doesn't do anything visibly different than just <code>print()</code>. (If you have a program reading its output instead of a person, it's different, but to a person, a space looks like nothing was typed there.)</span>
<span class="comment-copy">Please explain explicitly what you're asking, providing the error/problem will help others who may have the same problem later one</span>
<span class="comment-copy">Okay, thank you! This code works very well. :) Thanks so much.</span>
<span class="comment-copy">you could also use <code>else:</code> instead of/in addition to <code>'    continue'</code> and indent the following conditions appropriately.</span>
<span class="comment-copy">@J.F.Sebastian: That's already explained in the answer: "We could also move the whole loop body into an <code>else</code> clause on the <code>try</code>, or…"</span>
<span class="comment-copy">Please format your answer.</span>
