<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26437426/python-2-7-init-takes-exactly-2-arguments-3-given">Python 2.7 __init__() takes exactly 2 arguments (3 given)</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I don't quite understand if I need the <code>self</code> argument in the call to the <code>super</code> class method when inheriting, as I'm having trouble with repeated parameter definition errors when using it.</p>
<p>The code is basically:</p>
<pre><code>class MyClass(ParentClass):
    def method(self, arg=None):
        arg=f(arg)
        super(MyClass, self).method(self, arg=None)
</code></pre>
<p>With <code>self</code> in the <code>super</code> call, I get that:</p>
<blockquote>
<p>TypeError: method() got multiple values for keyword argument 'arg'`</p>
</blockquote>
<p>Without, it seems to work, but I don't know whether I will miss out on any side-effects that I need. Is it that <code>self</code> is in the <code>super</code> statement?</p>
</div>
<div class="post-text" itemprop="text">
<p>Read the <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow">docs</a>!</p>
<p>Here's how you should use <code>super</code>:</p>
<pre><code>super(MyClass, self).method(arg=None)
</code></pre>
<p>You have to pass <code>self</code> to the <code>super</code> call, not the method call.</p>
<p>Also, If you are using Python 3, it's even simpler:</p>
<pre><code>super().method(arg=None)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't supply the self explicitly in the arguments of <code>method</code>, it is not needed.  </p>
<p>In python 2 it is still needed where you have it in the arguments of <code>super</code>.  Note in python3 this would just be <code>super()</code>.  </p>
</div>
<span class="comment-copy">Which python version is this, as in python 3, its just <code>super().method(arg=None)</code>.</span>
<span class="comment-copy">You shouldn't need to supply <code>self</code> in the call to <code>method</code>; it should work completely fine without. (Is that your question?)</span>
<span class="comment-copy">Yes. So is it that <code>self</code> is in <code>super(MyClass, self)</code> thereby making the call to the self instance in the superclass?</span>
<span class="comment-copy">@DavidBoshton <code>super(MyClass, self).method(arg=None)</code> would be fine.</span>
<span class="comment-copy">Hence the error. <code>self</code> is passed to <code>arg</code>, <code>arg</code> is then defined again as <code>None</code> and python hence raises an error.</span>
<span class="comment-copy">I wanted to put my comment as an answer, but I wasn't sure if it was sufficient. I suppose this really is all there is to it.</span>
