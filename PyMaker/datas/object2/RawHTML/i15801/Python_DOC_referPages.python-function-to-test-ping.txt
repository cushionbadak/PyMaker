<div class="post-text" itemprop="text">
<p>I'm trying to create a function that I can call on a timed basis to check for good ping and return the result so I can update the on-screen display. I am new to python so I don't fully understand how to return a value or set a variable in a function.</p>
<p>Here is my code that works:</p>
<pre><code>import os
hostname = "google.com"
response = os.system("ping -c 1 " + hostname)
if response == 0:
    pingstatus = "Network Active"
else:
    pingstatus = "Network Error"
</code></pre>
<p>Here is my attempt at creating a function:</p>
<pre><code>def check_ping():
    hostname = "google.com"
    response = os.system("ping -c 1 " + hostname)
    # and then check the response...
    if response == 0:
        pingstatus = "Network Active"
    else:
        pingstatus = "Network Error"
</code></pre>
<p>And here is how I display <code>pingstatus</code>:</p>
<pre><code>label = font_status.render("%s" % pingstatus, 1, (0,0,0))
</code></pre>
<p>So what I am looking for is how to return pingstatus from the function. Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you want the <code>return</code> keyword</p>
<pre><code>def check_ping():
    hostname = "taylor"
    response = os.system("ping -c 1 " + hostname)
    # and then check the response...
    if response == 0:
        pingstatus = "Network Active"
    else:
        pingstatus = "Network Error"

    return pingstatus
</code></pre>
<p>You need to capture/'receive' the return value of the function(pingstatus) in a variable with something like:</p>
<pre><code>pingstatus = check_ping()
</code></pre>
<p>Some info on python functions:</p>
<p><a href="http://www.tutorialspoint.com/python/python_functions.htm" rel="noreferrer">http://www.tutorialspoint.com/python/python_functions.htm</a></p>
<p><a href="http://www.learnpython.org/en/Functions" rel="noreferrer">http://www.learnpython.org/en/Functions</a></p>
<p>It's probably worth going through a good introductory tutorial to Python, which will cover all the fundamentals. I recommend investigating <a href="https://www.udacity.com/courses#!/all" rel="noreferrer">Udacity.com</a> and <a href="http://www.codecademy.com/tracks/python" rel="noreferrer">codeacademy.com</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simplified function that returns a boolean and has no output pushed to stdout:</p>
<pre><code>import subprocess, platform
def pingOk(sHost):
    try:
        output = subprocess.check_output("ping -{} 1 {}".format('n' if platform.system().lower()=="windows" else 'c', sHost), shell=True)

    except Exception, e:
        return False

    return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Adding on to these two answers, you can check the OS and decide whether to use "-c" or "-n":</p>
<pre><code>import os, platform
host = "8.8.8.8"
os.system("ping " + ("-n 1 " if  platform.system().lower()=="windows" else "-c 1 ") + host)
</code></pre>
<p>This will work on Windows, OS X, and Linux</p>
<p>You can also use <code>sys</code>:</p>
<pre><code>import os, sys
host = "8.8.8.8"
os.system("ping " + ("-n 1 " if  sys.platform().lower()=="win32" else "-c 1 ") + host)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>def ping(server='example.com', count=1, wait_sec=1):
    """

    :rtype: dict or None
    """
    cmd = "ping -c {} -W {} {}".format(count, wait_sec, server).split(' ')
    try:
        output = subprocess.check_output(cmd).decode().strip()
        lines = output.split("\n")
        total = lines[-2].split(',')[3].split()[1]
        loss = lines[-2].split(',')[2].split()[0]
        timing = lines[-1].split()[3].split('/')
        return {
            'type': 'rtt',
            'min': timing[0],
            'avg': timing[1],
            'max': timing[2],
            'mdev': timing[3],
            'total': total,
            'loss': loss,
        }
    except Exception as e:
        print(e)
        return None
</code></pre>
</div>
<span class="comment-copy">...<code>return pingstatus</code>?</span>
<span class="comment-copy">To learn how to call functions and return values, I recommend the <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">Python Tutorial</a>.</span>
<span class="comment-copy">With this code I get "NameError: name 'pingstatus' is not defined"</span>
<span class="comment-copy">please see my edit</span>
<span class="comment-copy">@Totem Your edit is <i>not</i> necessary.</span>
<span class="comment-copy">@user72055 While <code>check_ping</code> now returns a result, you still need to capture that result by assigning it to a variable before you can access the value: <code>pingstatus = check_ping()</code>.</span>
<span class="comment-copy">Thank you! Light just went off overhead. I now understand. :-)</span>
<span class="comment-copy">I've added your ideas to my answer and gave you an upvoat for the good idea.</span>
