<div class="post-text" itemprop="text">
<p>I'm fairly confused as to the proper implementation of command line arguments in a program.  I've looked around and am confused whether or not a for loop is necessary.  I know for sure that there will always be only two arguments passed to this program.  Ultimately, is a for loop necessary in this situation?  Here's the code in the main function:</p>
<pre><code>def main():
try:
    if len(sys.argv) &gt; 1:
        filename = sys.argv[1]
        length = int(sys.argv[2])
    wordDict = readFile(filename)
except IOError:
    print("Error: file not found.")
</code></pre>
<p>Thank you all for your input!    </p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to use a loop if you know exactly how many arguments you want.</p>
<p>I have noticed that in your code that you check the number of sys.argv is greater than 1, you need to check that it is greater than 2 as the first sys.argv (sys.argv[0]) is the name script that you are running <a href="https://docs.python.org/3/library/sys.html?highlight=sys.argv#sys.argv" rel="nofollow">https://docs.python.org/3/library/sys.html?highlight=sys.argv#sys.argv</a></p>
<p>If only one argument is passed to your program it will currently result in an IndexError.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can try argparse:
<a href="https://docs.python.org/2/library/argparse.html" rel="nofollow">https://docs.python.org/2/library/argparse.html</a></p>
<pre><code>import argparse


parser = argparse.ArgumentParser(description='What ever the purpose of the script is')

parser.add_argument('filename', type=str,
                   help='path to the file')

parser.add_argument('length', type=int,
                   help='some length')

args = parser.parse_args()
print args.filename
print args.length
</code></pre>
</div>
<span class="comment-copy">Also, if <code>len(sys.argv)</code> is less than 2, it will raise a NameError.</span>
