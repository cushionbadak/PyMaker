<div class="post-text" itemprop="text">
<p>It is straight forward creating a string parameter  such as <code>--test_email_address</code> below.</p>
<pre><code>   class Command(BaseCommand):
        option_list = BaseCommand.option_list + (
            make_option('--test_email_address',
                        action='store',
                        type="string",
                        dest='test_email_address',
                        help="Specifies test email address."),
            make_option('--vpds',
                        action='store',
                        type='list',           /// ??? Throws exception
                        dest='vpds',
                        help="vpds list [,]"),
        )
</code></pre>
<p>But how can I define a list to be passed in? such as <code>[1, 3, 5]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You should add a default value and change the action to <code>'append'</code>:</p>
<pre><code>make_option('--vpds',
            action='append',
            default=[],
            dest='vpds',
            help="vpds list [,]"),
</code></pre>
<p>The usage is as follows:</p>
<pre><code>python manage.py my_command --vpds arg1 --vpds arg2
</code></pre>
</div>
<span class="comment-copy">did you try just <code>list</code> - without the quotes ? From the <a href="https://docs.python.org/3/library/argparse.html#type" rel="nofollow noreferrer">documentation</a>, it looks like <code>type</code> can be <i>any</i> valid simple types. The other (hacky) way is to read the arguments as string, and parse it using <code>ast.literal_eval</code> or something.</span>
<span class="comment-copy">yeah I tried without the quotes and its the same problem.</span>
<span class="comment-copy">sorry, thats an interesting idea, but it throws an exception: <code>optparse.OptionError: option --vpds: invalid option type: 'list'</code></span>
<span class="comment-copy">Removing <code>type='list'</code> fixes it. Updated the answer.</span>
<span class="comment-copy">+1, This is it, many thanks</span>
