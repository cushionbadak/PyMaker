<div class="post-text" itemprop="text">
<p>I have an application written in Python that stores many lists of basic datatypes (int, floats etc) which are in turn rarely accessed. I was looking at some libraries that could compress this data before further processing.</p>
<p>I looked at <a href="https://docs.python.org/2/library/gzip.html" rel="nofollow">gzip</a> and other similar libraries. It seems to me that they all work on strings. Why is that? Is there any limitation at applying LZ77 to a list of int rather than a list of chars? </p>
<p>Is there a python library out there that will do what I want? </p>
</div>
<div class="post-text" itemprop="text">
<p>You will first need to serialize the Python object(s) using <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow">pickle or cPickle</a>, which will convert it to a series of bytes.  Then you can use any compressor, such as <a href="https://docs.python.org/2/library/zlib.html" rel="nofollow">zlib</a>, to compress it.  Then you can use zlib and pickle to turn the data back into objects.  Both pickle and zlib can work solely in memory.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you have python 3.4, you can do this with the <a href="https://docs.python.org/3/library/lzma.html" rel="nofollow">lzma library</a>.  </p>
<p>If you are in python 2.7 you can use the <a href="http://pymotw.com/2/bz2/" rel="nofollow">bz2</a> library to compress data in memory.</p>
<p>The examples in the links look pretty good so I won't re-write them here.</p>
</div>
<span class="comment-copy">well you could compress the ints to chars(perhaps with <code>struct.pack</code>... then gzip the chars or something</span>
<span class="comment-copy">That should work but I was wondering if there is a more fundamental reason why they only compress strings. Moreover if I use struct.pack will it be as efficient as compressing the raw binary data?</span>
<span class="comment-copy">the raw binary data is likely what struct pack would generate ... the raw binary data is what you should gzip</span>
<span class="comment-copy">I want to compress data in memory.</span>
<span class="comment-copy">@igon, updated answer.</span>
<span class="comment-copy">It still requires data to be in str format..</span>
