<div class="post-text" itemprop="text">
<p>I have an integer value <code>x</code>, and I need to check if it is between a <code>start</code> and <code>end</code> values, so I write the following statements:</p>
<pre><code>if x &gt;= start and x &lt;= end:
    # do stuff
</code></pre>
<p>This statement gets underlined, and the tooltip tells me that I must </p>
<blockquote>
<p>simplify chained comparison</p>
</blockquote>
<p>As far as I can tell, that comparison is about as simple as they come.  What have I missed here?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python you can <a href="https://docs.python.org/2/reference/expressions.html#comparisons" rel="noreferrer">"chain" comparison operations</a> which just means they are "and"ed together.  In your case, it'd be like this:</p>
<pre><code>if start &lt;= x &lt;= end:
</code></pre>
<p>Reference: <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="noreferrer">https://docs.python.org/3/reference/expressions.html#comparisons</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It can be rewritten as:</p>
<pre><code>start &lt;= x &lt;= end:
</code></pre>
<p>Or:</p>
<pre><code>r = range(start, end + 1) # (!) if integers
if x in r:
    ....
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simplification of the code</p>
<pre><code>if start &lt;= x &lt;= end: # start x is between start and end 
# do stuff
</code></pre>
</div>
<span class="comment-copy">Thanks, I didn't know you could do that in Python.  Was really scratching my head on this one.</span>
<span class="comment-copy">Man this is how things should be. But coming from other languages you forget your ideals and don't even think, that things could be the way they should be. But this is why python is amazing, exactly because of such things :)</span>
<span class="comment-copy">Do you know of any "official" sources that recommends the chained style over the other? Which one is more "idiomatic" Python?</span>
<span class="comment-copy">I dunno, sometimes I wish python threw up more guardrails. x == y == z fails with a ValueError when x, y, z are Pandas series</span>
<span class="comment-copy">@BallpointBen: lots of things don't work the way you might expect in Pandas, not even <code>x == y and y == z</code>.</span>
<span class="comment-copy">The range is a poor choice because for large start and end you are creating an unnecessary list.</span>
<span class="comment-copy">@BurhanKhalid Indeed,but I guess it's worth mentioning for OP.</span>
<span class="comment-copy">In python3, range handles "<b>contains</b>" nicely, so no list is generated.</span>
<span class="comment-copy">@MarounMaroun since python 3, range function behaves like former xrange, it is also worth mentioning</span>
<span class="comment-copy">For details regarding the use of <code>if x in range(...)</code>, see "<a href="https://stackoverflow.com/questions/30081275">Why is “1000000000000000 in range(1000000000000001)” so fast in Python 3?</a>".</span>
<span class="comment-copy">How is this different from <a href="https://stackoverflow.com/a/26502847/1383035">this</a> answer?</span>
