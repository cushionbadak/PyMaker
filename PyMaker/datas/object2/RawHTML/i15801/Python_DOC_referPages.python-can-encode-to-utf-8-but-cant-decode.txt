<div class="post-text" itemprop="text">
<p>The Code Below Can Encode A String To Utf-8 :</p>
<pre><code>#!/usr/bin/python
# -*- coding: utf-8 -*-

str = 'ورود'
print(str.encode('utf-8'))
</code></pre>
<p>That Prints:</p>
<pre><code>b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
</code></pre>
<p>But I can't Decode This String With This Code :</p>
<pre><code>#!/usr/bin/python
# -*- coding: utf-8 -*-

str = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
print(str.decode('utf-8'))
</code></pre>
<p>The error is:</p>
<pre><code>Traceback (most recent call last):
  File "C:\test.py", line 5, in &lt;module&gt;
    print(str.decode('utf-8'))
AttributeError: 'str' object has no attribute 'decode'
</code></pre>
<p>Please Help Me ...</p>
<h3>Edit</h3>
<p>From the answers switched to a byte string:</p>
<pre><code>#!/usr/bin/python
# -*- coding: utf-8 -*-

str = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
print(str.decode('utf-8'))
</code></pre>
<p>Now the error is:</p>
<pre><code>Traceback (most recent call last):
  File "C:\test.py", line 5, in &lt;module&gt;
    print(str.decode('utf-8'))
  File "C:\Python34\lib\encodings\cp437.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_map)[0]
UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-3: character maps to &lt;undefined&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you're using Python 3.X.  You <code>.encode()</code> Unicode strings (<code>u'xxx'</code> or <code>'xxx'</code>).  You <code>.decode()</code> byte strings <code>b'xxxx'</code>.</p>
<pre><code>#!/usr/bin/python
# -*- coding: utf-8 -*-

s = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
#   ^
#   Need a 'b'
#
print(s.decode('utf-8'))
</code></pre>
<p>Note your terminal may not be able to display the Unicode string.  Mine Windows console doesn't:</p>
<pre><code>Python 3.3.5 (v3.3.5:62cf4e77f785, Mar  9 2014, 10:35:05) [MSC v.1600 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; s = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
&gt;&gt;&gt; #   ^
... #   Need a 'b'
... #
... print(s.decode('utf-8'))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 4, in &lt;module&gt;
  File "D:\dev\Python33x64\lib\encodings\cp437.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_map)[0]
UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-3: character maps to &lt;undefined&gt;
</code></pre>
<p>But it <em>does</em> do the decode.  <code>'\uxxxx'</code> represents a Unicode code point.</p>
<pre><code>&gt;&gt;&gt; s.decode('utf-8')
'\u0648\u0631\u0648\u062f'
</code></pre>
<p>My PythonWin IDE supports UTF-8 and can display the characters:</p>
<pre><code>&gt;&gt;&gt; s = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
&gt;&gt;&gt; print(s.decode('utf-8'))
ورود
</code></pre>
<p>You can also write the data to a file and display it in an editor that supports UTF-8, like Notepad.  since your original string is already UTF-8, just write it to a file directly as bytes.  <code>'wb'</code> opens the file in binary mode and the bytes are written as is:</p>
<pre><code>&gt;&gt;&gt; with open('out.txt','wb') as f:
...     f.write(s)
</code></pre>
<p>If you have a Unicode string, you can write it as UTF-8 with:</p>
<pre><code>&gt;&gt;&gt; with open('out.txt','w',encoding='utf8') as f:
...     f.write(u)  # assuming "u" is already a decoded Unicode string.
</code></pre>
<p>P.S. <code>str</code> is a built-in type.  Don't use it for variable names.</p>
<p>Python 2.x works differently.  <code>'xxxx'</code> is a byte string and <code>u'xxxx'</code> is a Unicode string, but you still <code>.encode()</code> the Unicode string and <code>.decode()</code> the byte string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use following code:</p>
<pre><code>str = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'
print(str.decode('utf-8'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a first class unicode type that you can use in place of the plain bytestring
str type. It’s easy, once you accept the need to explicitly convert between a
bytestring and a Unicode string:</p>
<pre><code>&gt;&gt;&gt; persian_enter = unicode('\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf', 'utf8')
&gt;&gt;&gt; print persian_enter
ورود
</code></pre>
<p>Python 2 had two global functions to coerce objects into strings: unicode() to coerce them into Unicode strings, and str() to coerce them into non-Unicode strings. Python 3 has only one string type, <a href="http://www.diveintopython3.net/strings.html#divingin" rel="nofollow">Unicode strings</a>, so the str() function is all you need. (The unicode() function no longer exists.) </p>
<p>read more about <a href="https://docs.python.org/3/howto/unicode.html#reading-and-writing-unicode-data" rel="nofollow">reading and writing unicode data</a></p>
</div>
<span class="comment-copy"><code>str = b'\xd9\x88\xd8\xb1\xd9\x88\xd8\xaf'; print(str.decode('utf-8'))</code></span>
<span class="comment-copy">no that's not work</span>
<span class="comment-copy">I have tested it in my interpreter, it worked.</span>
<span class="comment-copy">it works for me. check if your python is installed</span>
<span class="comment-copy">Which version of python? python3 and python2 different way treat with unicode chars.</span>
<span class="comment-copy">no this code not work</span>
<span class="comment-copy">What does <code>not work</code> mean?  Show an error message.  Most likely, your terminal cannot display the characters you are trying to print.  Are you getting a <code>UnicodeEncodeError</code>?  That is the terminal complaining that it doesn't support the characters you are printing.</span>
<span class="comment-copy">thats the error :  File "D:\Python34\lib\encodings\cp1252.py", line 19, in encode     return codecs.charmap_encode(input,self.errors,encoding_table)[0] UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-3: cha racter maps to &lt;undefined&gt;</span>
<span class="comment-copy">Whatever IDE you are using is mapping to code page 1252 (US English Windows).  It can't display those foreign characters.  Use an IDE that supports UTF-8.  See my updated example.</span>
<span class="comment-copy">yes your code can decode but can't print ... How i can save this decoded string to a file with python ?</span>
<span class="comment-copy">his original code works, think he doesnt have python installed properly. (on mac it does)</span>
<span class="comment-copy">no this code not work... i runned this on windows 7 and python 3.4</span>
<span class="comment-copy">thats print error : unicode is not defined</span>
<span class="comment-copy">whats your python version ?</span>
<span class="comment-copy">Python 2 had two global functions to coerce objects into strings: unicode() to coerce them into Unicode strings, and str() to coerce them into non-Unicode strings. Python 3 has only one string type, Unicode strings, so the str() function is all you need. (The unicode() function no longer exists.)</span>
<span class="comment-copy">i used python 3.4</span>
<span class="comment-copy">yep, so , alongside the good answer by @Mark i suggest read more about unicode in <code>python3.x</code> in that link i added to my answer !</span>
