<div class="post-text" itemprop="text">
<p>Five params can have various len (including empty). I wrote long code for first three params, for more params it icrement for bigger code with repeats. How minimize code?</p>
<pre><code>params1 = [1,2]
params2 = []
params3 = [3,4,5,6]
# ...
params5 = [7,8]

# for 3 params example:
summary = {}
if 0 &lt; len(params1):
    for param1 in params1:
        summary['param1'] = param1
        if 0 &lt; len(params2):
            for param2 in params2:
                summary['param2'] = param2
                if 0 &lt; len(params3):
                    for param3 in params3:
                        summary['param3'] = param3
                        print summary
                else:
                    print summary
        else:
            if 0 &lt; len(params3):
                for param3 in params3:
                    summary['param3'] = param3
                    print summary
            else:
                print summary
else:
    if 0 &lt; len(params2):
        for param2 in params2:
            summary['param2'] = param2
            if 0 &lt; len(param3):
                for param3 in params3:
                    summary['param3'] = param3
                    print summary
            else:
                print summary
    else:
        if 0 &lt; len(params3):
            for param3 in params3:
                summary['param3'] = param3
                print summary
        else:
            print summary
</code></pre>
<p>Need get dict with combinations non empty params, output of example code:</p>
<pre><code>{'param3': 3, 'param1': 1}
{'param3': 4, 'param1': 1}
{'param3': 5, 'param1': 1}
{'param3': 6, 'param1': 1}
{'param3': 3, 'param1': 2}
{'param3': 4, 'param1': 2}
{'param3': 5, 'param1': 2}
{'param3': 6, 'param1': 2}
</code></pre>
<p>How to replace example code to smallest lines?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it using recursion :</p>
<pre><code>def affich(params, summary = None):
#print(params, summary )
if len(params) == 0:
    print summary
else:
    if summary is None: summary = {}
    name, pars = params[0]
    if len(pars) == 0:
        affich(params[1:], summary )
    else:
        for p in pars:
            cur[name] = p
            affich(params[1:], summary )

affich((('params1', [1, 2]), ('params2', []), ('params3', [3, 4, 5, 6]), ('params5', [7, 8]))
</code></pre>
<p>gives : </p>
<pre><code>{'params5': 7, 'params1': 1, 'params3': 3}
{'params5': 8, 'params1': 1, 'params3': 3}
{'params5': 7, 'params1': 1, 'params3': 4}
{'params5': 8, 'params1': 1, 'params3': 4}
{'params5': 7, 'params1': 1, 'params3': 5}
{'params5': 8, 'params1': 1, 'params3': 5}
{'params5': 7, 'params1': 1, 'params3': 6}
{'params5': 8, 'params1': 1, 'params3': 6}
{'params5': 7, 'params1': 2, 'params3': 3}
{'params5': 8, 'params1': 2, 'params3': 3}
{'params5': 7, 'params1': 2, 'params3': 4}
{'params5': 8, 'params1': 2, 'params3': 4}
{'params5': 7, 'params1': 2, 'params3': 5}
{'params5': 8, 'params1': 2, 'params3': 5}
{'params5': 7, 'params1': 2, 'params3': 6}
{'params5': 8, 'params1': 2, 'params3': 6}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import itertools    
&gt;&gt;&gt; params1 = [1,2]
&gt;&gt;&gt; params2 = [None]
&gt;&gt;&gt; params3 = [3,4,5,6]
&gt;&gt;&gt; # ...
&gt;&gt;&gt; params5 = [7,8]
&gt;&gt;&gt; print [x for x in itertools.product(params1, params2, ... , params5)]
[(1, None, 3), (1, None, 4), (1, None, 5), (1, None, 6), (2, None, 3), (2, None, 4), (2, None, 5), (2, None, 6)]
</code></pre>
</div>
<span class="comment-copy">what exactly are you trying to do, what are params?</span>
<span class="comment-copy">Do you want all the <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">combinations</a> of those parameters?</span>
<span class="comment-copy">Have you ever played <a href="http://codegolf.stackexchange.com/">code golf</a>?</span>
<span class="comment-copy">What happened to <code>param5</code>?  Why don't its values appear in the output?</span>
<span class="comment-copy">I'm trying to send JSON format to server</span>
<span class="comment-copy">Thanks! This is shortest solution</span>
<span class="comment-copy">yes, this is I will use if no other code can't find</span>
