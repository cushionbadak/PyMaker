<div class="post-text" itemprop="text">
<p>I have a file that has a lot of lines that look like the below:</p>
<pre><code>interface GigabitEthernet0/5/0/0.1 l2transport
blah
blah

interface TenGigabitEthernet0/5/0/0.1 
blah
blah
</code></pre>
<p>I want to parse this file, line by line, to count the number of occurrences of an item. </p>
<p>This line I showed above has many details I want to parse/count/recognize:</p>
<ul>
<li><p>If the line has Gigabit increase counter by 1, it it is a TenGig, increase another counter</p></li>
<li><p>If the line has a dot(.) then also increase counter number 2.</p></li>
<li><p>If the line has a a dot(.) and a <code>l2transport</code> in the end, then also increase counter number 3.</p></li>
<li><p>If the line has a dot(.) and no <code>l2transport</code> in the end, then increase counter number 4.</p></li>
</ul>
<p>What would be a good way to do the above without using CPU expensive Regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use the <a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" rel="nofollow"><code>in</code> operator</a> to test for membership:</p>
<pre><code>In [12]: s = "interface GigabitEthernet0/5/0/0.1 l2transport"

In [13]: "." in s and not s.endswith('l2transport')
Out[13]: False

In [14]: "." in s and  s.endswith('l2transport')
Out[14]: True
</code></pre>
<p>something like the following:</p>
<pre><code>with open(infile) as f:
    for line in f:
        if " Gigabit" in line: 
            # inc counter 1
        if "TenGig" in line:
            # inc other counter
        if  "." in s and line.rstrip().endswith('l2transport'):
            # inc counter 3 and 2 as we know . is in the line also
        elif "." in s and not line.rstrip().endswith('l2transport'):
            # inc counter 4 and 2  as we know . is in the line also
</code></pre>
<p>The checks for  <code>Gigabit</code>,<code>TenGig</code> and <code>line.endswith('l2transport')</code> are independent of each other so we need all <code>if's</code>, the line will either end in <code>l2transport</code> or not so an <code>if/elif</code> will work, we also cover the check for <code>.</code> in both cases so we don't need an if or elif  for that.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://metacpan.org/release/Marpa-R2" rel="nofollow">Marpa::R2</a>, a <a href="http://www.perl.org/" rel="nofollow">Perl</a> interface to <a href="http://savage.net.au/Marpa.html" rel="nofollow">Marpa, a general BNF parser</a>, can be useful for such things.</p>
<p>This <a href="https://gist.github.com/rns/6c31757a8222a7036cd0" rel="nofollow">script</a> outputs</p>
<pre><code>counters: 1, 1, 2, 1, 1
</code></pre>
<p>Note how general BNF parsing allows both (1) making sure that input conforms to the spec (otherwise it won't parse) and (2) getting just the results directly relevant to the problem (the counting code is just a couple of <code>if</code>'s, just like with string search functions above.</p>
</div>
<span class="comment-copy">Python string splitting will be your friend here. <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#str.split</a></span>
<span class="comment-copy">can you please give me an example on how to split this line ?</span>
<span class="comment-copy">@Kasper, you don't need to split the line just use in to check if the string contains what you are looking for</span>
<span class="comment-copy">What is a better(less CPU) way to count, split and count or evaluate line by line with ANDed if conditions?</span>
<span class="comment-copy">@Kasper, checking for membership using <code>in</code> means you don't have to change the line at all, why would you even consider re? You are not looking for patterns, just if certain words or characters are in the string</span>
<span class="comment-copy">@Lukas Graf, thanks I forgot to add the link</span>
<span class="comment-copy">@LukasGraf, lol indeed, been a long day</span>
<span class="comment-copy">$ cat example     interface Bundle-Ether30.2038 l2transport      $cat test_bundle.py     for line in sys.stdin:     	if line.endswith('l2transport'):     		print "hi"      $ python test_bundle.py &lt; example $  It seems that it is not matching the string 'l2transport'.</span>
<span class="comment-copy">use <code>line.rstrip()</code></span>
<span class="comment-copy">I really dont know what to do here, endswith is not working for me ? what am i doing wrong ?</span>
<span class="comment-copy">can you please provide an example for the above line ?</span>
<span class="comment-copy">When you test string for 'Gigabit' you only know that 'Gigabit' is here; when you parse the whole line you know that all elements in the grammar are in the line -- hope I got the question right, feel free to  explain otherwise.</span>
