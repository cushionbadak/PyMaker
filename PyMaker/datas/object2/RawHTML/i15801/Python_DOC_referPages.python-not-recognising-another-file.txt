<div class="post-text" itemprop="text">
<p>I am creating a python module. To test it i put the file in the same directory and then wrote the code</p>
<pre><code>import mymodule
mymodule.dofunction
</code></pre>
<p>python then said <code>&gt;&gt;&gt;no module named mymodule</code> but they are in the same directory. </p>
</div>
<div class="post-text" itemprop="text">
<p>Adapting from previous answer <a href="https://stackoverflow.com/questions/279237/import-a-module-from-a-relative-path">here</a>. Explicitly state that you want to use the current directory.</p>
<p>Also, consider that you need an "__init__.py" file in each directory you are importing from.</p>
<pre><code>import os, sys
lib_path = os.path.abspath('.')
sys.path.append(lib_path)

import mymodule
</code></pre>
<p>More information on the import system <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/2349991/python-how-to-import-other-python-files">CHECK THIS LINK</a></span>
<span class="comment-copy">What file name did you use for your module? <code>mymodule.py</code> or just <code>mymodule</code>. The former is correct, the latter not.</span>
<span class="comment-copy">did you try: from FILENAME import YOU'REMODULE</span>
<span class="comment-copy">Is your module in the python path?</span>
<span class="comment-copy">In os.path.abspath(.) do I edit what goes in the bracket?</span>
<span class="comment-copy">You can put any directory you want there. '.' is the current directory.</span>
<span class="comment-copy">Also, I can't stress enough that you should learn the import system better.</span>
