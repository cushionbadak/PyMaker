<div class="post-text" itemprop="text">
<p>At this moment I wrote this code:</p>
<pre><code>class device:
    naam_device = ''
    stroomverbuirk = 0

aantal_devices = int(input("geef het aantal devices op: "))

i = aantal_devices
x = 0

voorwerp = {}
while i &gt; 0:
    voorwerp[x] = device()
    i = i - 1
    x = x + 1

i = 0

while i &lt; aantal_devices :
    voorwerp[i].naam_device = input("Wat is device %d voor een device: " % (i+1))
    # hier moet nog gekeken worden naar afvang van foute invoer bijv. als gebruiker een string of char invoert ipv een float
    voorwerp[i].stroomverbruik = float(input("hoeveel ampére is uw device?: "))
    i += 1

i = 0
totaal = 0.0

##test while print
while i &lt; aantal_devices:
    print(voorwerp[i].naam_device,voorwerp[i].stroomverbruik)
    #dit totaal moet nog worden geschreven naar een bestand zodat je na 256 invoeren een totaal kan bepalen.
    totaal = totaal + voorwerp[i].stroomverbruik
    i = i + 1

print("totaal ampére = ",totaal)


aantal_koelbox = int(input("Hoeveel koelboxen neemt u mee?: "))

if aantal_koelbox &lt;= 2 or aantal_koelbox &gt; aantal_devices:

    if aantal_koelbox &gt; aantal_devices:
        toestaan = input("Deelt u de overige koelboxen met mede-deelnemers (ja/nee)?: ")
        if toestaan == "ja":
            print("Uw gegevens worden opgeslagen! u bent succesvol geregistreerd.")
        if toestaan == "nee":
            print("Uw gegevens worden niet opgeslagen! u voldoet niet aan de eisen.")
else:
    print("Uw gegevens worden niet opgeslagen! u voldoet niet aan de eisen.")
</code></pre>
<p>Now I want to write the value of <code>totaal</code> to a file, and later when I saved 256 of these inputs I want to write another program to read the 256 inputs and give the sum of those and divide that number by 14. If someone could help me on the right track with writing the values and later read them I can try to find out how to do the last part. </p>
<p>But I've been trying for 2 days now and still found no good solution for writing and reading.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">The tutorial</a> covers this very nicely, as <a href="https://stackoverflow.com/users/1426065/mattdmo">MattDMo</a> points out. But I'll summarize the relevant part here.</p>
<p>The key idea is to open a file, then write each <code>totaal</code> in some format, then make sure the file gets closed at the end.</p>
<p>What format? Well, that depends on your data. Sometimes you have fixed-shape records, which you can store as CSV rows. Sometimes you have arbitrary Python objects, which you can store as pickles. But in this case, you can get away with using the simplest format at all: a line of text. As long as your data are single values that can be unambiguously converted to text and back, and don't have any newline or other special characters in them, this works. So:</p>
<pre><code>with open('thefile.txt', 'w') as f:
    while i &lt; aantal_devices:
        print(voorwerp[i].naam_device,voorwerp[i].stroomverbruik)
        #dit totaal moet nog worden geschreven naar een bestand zodat je na 256 invoeren een totaal kan bepalen.
        totaal = totaal + voorwerp[i].stroomverbruik
        f.write('{}\n'.format(totaal))
        i = i + 1
</code></pre>
<p>That's it. The <code>open</code> opens the file, creating it if necessary. The <code>with</code> makes sure it gets closed at the end of the block. The <code>write</code> writes a line consisting of whatever's in <code>totaal</code>, formatted as a string, followed by a newline character.</p>
<p>To read it back later is even simpler:</p>
<pre><code>with open('thefile.txt') as f:
    for line in f:
        totaal = int(line)
        # now do stuff with totaal
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use serialization to store the data in the files and then de-serialize  them back in to the original state for computation. </p>
<p>By serializing the data you can restore the data to the original state (value and type, i.e. <code>1234</code> as a <code>int</code> and not as string) </p>
<p>Off you go to the docs :) : <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow">https://docs.python.org/2/library/pickle.html</a>
P.S. For people to be able to help you he code needs to be readable, That way you can get a better answer in the future.  </p>
</div>
<div class="post-text" itemprop="text">
<p>You can write them to a file like so:</p>
<pre><code>with open(os.path.join(output_dir, filename), 'w') as output_file:
    output_file.write("%s" % totaal)
</code></pre>
<p>And then sum them like this:</p>
<pre><code>sum = 0
for input_file in os.listdir(output_dir):
    if os.path.isfile(input_file):
        with open(os.path.join(output_dir, input_file), 'r') as infile:
            sum += int(infile.read())
print sum/14
</code></pre>
<p>However, I would consider whether you really need to write each <code>totaal</code> to a separate file. There's probably a better way to solve your problem, but I think this should do what you asked for.</p>
<p>P.S. I would try to read your code and make a more educated attempt to help you, but I don't know Dutch!</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/2/tutorial/…</a></span>
<span class="comment-copy">Can you provide an example of one of your attempts, presumably the best one?</span>
<span class="comment-copy">Also, instead of asking how to do both parts, just focus on getting the writing to work first. Once you've got it writing a file (which you can verify is correct by, say, looking at it in a text editor), then you can try to deal with the reading in your other script.</span>
<span class="comment-copy">Wow thanks this was a great help, just what does this part do ? f.write('{}\n'.format(totaal))   and I ain't that new to programming, but I have been programming in other languages in another part so I still need to learn a lot :) ... the problem was that I needed to know how to write and read and implement it in my coding before tommorrow ...   So really thanks for the great help ! &lt;3</span>
<span class="comment-copy">@RicoDutchboyYTBOtto: The answer says "The <code>write</code> writes a line consisting of whatever's in <code>totaal</code>, formatted as a string, followed by a newline character." What part of that did you not understand?</span>
<span class="comment-copy">thanks for the comments, I will have the code in english next time ! :)</span>
<span class="comment-copy">oops hehe yeah usually I write english comments, but a classmate of me wanted it to be dutch so he could understand what I wanted to do )</span>
