<div class="post-text" itemprop="text">
<p>I need to create a wrapper script that gets parameters from the shell and that passes all of them as they are, to another script.</p>
<p>In Perl, I would do:</p>
<pre><code>system("/path/to/subprocess", @ARGV);
</code></pre>
<p>Is there a way to do the same thing in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Call <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="noreferrer"><code>subprocess.call</code></a> with <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="noreferrer"><code>sys.argv</code></a> minus the first element, which is the name of your Python script.</p>
<pre><code>import subprocess
import sys

subprocess.call(["/path/to/subprocess"] + sys.argv[1:])
</code></pre>
<p>Example with <code>date</code> as the subprocess:</p>
<pre><code>$ python3 s.py
Tue Oct 21 09:25:00 CEST 2014
$ python3 s.py -R
Tue, 21 Oct 2014 09:25:01 +0200
</code></pre>
</div>
<span class="comment-copy">Amazing! By the way, does subprocess.call() works like subprocess.Popen() ?</span>
<span class="comment-copy">Please read the linked documentation about the various functions in <code>subprocess</code>.</span>
<span class="comment-copy">@user3322273: use <code>check_call()</code> unless you expect non-zero exit status</span>
<span class="comment-copy">It doesn't work with <code>shell = True</code>. Is there anything to do?</span>
<span class="comment-copy">What is the command you are calling? What do you mean in detail by "it doesn't work"?</span>
