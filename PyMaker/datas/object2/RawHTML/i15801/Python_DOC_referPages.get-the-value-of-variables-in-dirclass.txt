<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2612610/how-to-access-object-attribute-given-string-corresponding-to-name-of-that-attrib">How to access object attribute given string corresponding to name of that attribute</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I'm writing a class in python that groups a bunch of similar variables together and then assembles them into a string. I'm hoping to avoid having to manually type out each variable in the generateString method, so I want to use something like: </p>
<pre><code>for variable in dir(class):
    if variable[:1] == '_':
        recordString += variable
</code></pre>
<p>But currently it just returns a string that has all of the variable names. Is there a way to get at the value of the variable? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>getattr()</code> function</a> to dynamically access attributes:</p>
<pre><code>recordString += getattr(classobj, variable)
</code></pre>
<p>However, you probably do <em>not</em> want to use <code>dir()</code> here. <code>dir()</code> provides you with a list of attributes on the instance, class and base classes, while you appear to want to find only attributes found directly on the object.</p>
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow"><code>vars()</code> function</a> instead, which returns a <em>dictionary</em>, letting you use <code>items()</code> to get both name and value:</p>
<pre><code>for variable, value in vars(classobj).items():
    if variable[:1] == '_':
        recordString += value
</code></pre>
</div>
<span class="comment-copy"><code>getattr(class, variable)</code>?</span>
<span class="comment-copy"><a href="https://docs.python.org/2/library/functions.html#getattr" rel="nofollow noreferrer">getattr()</a></span>
<span class="comment-copy">Yup, that does it. Thanks.</span>
<span class="comment-copy">This looks much better than what I have. The only problem is that I'm getting a Runtime Error saying that the size of the dictionary is changing during iteration.</span>
<span class="comment-copy">@mpthrapp: are you altering attributes on the class itself? You can get a copy of the items first (with <code>list()</code>).</span>
