<div class="post-text" itemprop="text">
<p>Python newbie here. Am using Anaconda (on Windows 7) by recommendation of a friend. </p>
<p>What I want to be able to do is make a change to my class in Notepad++ and then test it in my Python command prompt window immediately. </p>
<p>This is a simple question that I can't seem to find the answer: in what directory does a default installation of Anaconda expect me to be storing my .py files (so that I can easily load them using <code>import &lt;MODULE NAME&gt;</code>)? </p>
<p>My PATH variable is set to:
<code>C:\USERS\&lt;USERNAME&gt;\Anaconda3;C:\USERS\&lt;USERNAME&gt;\Anaconda3\Scripts</code></p>
<p>(this is the default)</p>
<p>Am I supposed to be working out of the <code>Scripts</code> directory...? There's already a lot of files in there. </p>
<p>What do most people do? Perhaps add another folder to the PATH variable and work out of there? Do you add a new folder to PATH for each project or is there a way that makes more sense? I already have a Projects directory I use for everything else. I'd like to just be able to work out of there. </p>
<p>I am coding in Notepad++. I don't really want to bother setting up/learning an IDE (I'm just doing relatively simple I/O file manipulation that I have previously been doing in Excel... the horror). </p>
<p>Sorry for the extremely newbie question. I searched and could not find anything relevant. </p>
<p>EDIT AFTER ACCEPTED ANSWER:</p>
<p>The problem was that I was running python.exe from the Start menu. I did not realize that you are supposed to open a CMD window in the folder (SHIFT+RIGHT CLICK) you are working in (such as <code>C:\USERS\&lt;USERNAME&gt;\MY PYTHON STUFF</code>) and run python from there. </p>
</div>
<div class="post-text" itemprop="text">
<p>This might be what you're attempting. Note that I also use Anaconda.</p>
<p><strong>My path:</strong></p>
<pre><code>C:\Users\...\Documents\Python Scripts\
</code></pre>
<p><strong>import_sample.py</strong></p>
<pre><code>class class_sample(object):

    def __init__(self):
        self.x = ["I", "am", "doing", "something", "with", "Python"]
</code></pre>
<p><strong>test.py</strong></p>
<pre><code>from import_sample import class_sample

c = class_sample()
y = c.x
print " ".join(y)
</code></pre>
<p><strong>Result:</strong></p>
<pre><code>I am doing something with Python
[Finished in 0.1s]
</code></pre>
<p>Notice how being in the same folder allows me to import without having to <em>install</em>, per se. Basically, just make sure that the modules you need are in the same folder as your <code>main.py</code> and you're good.</p>
<p><strong>EDIT:</strong></p>
<p>Done from the terminal.</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/LiVDZ.png"/></p>
<p>Notice how I <code>cd</code> into the above folder and activated <code>python</code> there. Since I was inside that folder, any modules inside it can be imported without any problems, alongside other system-wide modules installed as well.</p>
</div>
<span class="comment-copy">I would recommend against this because it's a fairly advanced issue, but if you really want to do it... <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">link</a>. Otherwise, just keep to working inside your folder. The "custom" modules I use just reside in a generic folder that handles my snippets and I copy them to my project folders if needed. Saves me the hassle of having to deal with the <code>import</code> system (which I don't really need to mess around with).</span>
<span class="comment-copy">How do I "work inside my folder"? I am coding in Notepad++. I don't really want to bother setting up/learning an IDE (I'm just doing relatively simple I/O file manipulation that I have previously been doing in Excel... the horror). I want to make a change to my class in Notepad++ and then test it in my Python command prompt window.</span>
<span class="comment-copy">You're skipping an awful lot of tutorials for a beginner. Just save the <code>.py</code> file <i>anywhere</i>, go to that directory from the terminal, then use <code>python &lt;name of file&gt;.py</code>. Another option is to just double-click the file if it's supposed to run right away without any arguments.</span>
<span class="comment-copy">Thanks, I already know how to do that but the problem is my file defines a class. It doesn't do anything. I want to create an object and use its methods to test it without writing testing procedures inside the module that I have to clean up later.</span>
<span class="comment-copy">What I want to do is simply run python.exe and use my class there, easily, the same as I would <code>Input: x = 1</code> and <code>Input: x</code> then <code>Output: 1</code>. But it's beginning to seem like that isn't a simple thing to do.</span>
<span class="comment-copy">Is there a way to do this from the python command window and skip the test.py step? I want to just be able to quickly create an object and test a method I just wrote by typing the lines <code>import mymodule</code>, <code>myobject = mymodule.myclass()</code>, <code>myobject.mymethod()</code> and then getting some output in the same window.</span>
<span class="comment-copy">Go into your folder containing the module, type <code>python</code>, and <code>import</code> from there. Don't run <code>python.exe</code>, that's defeating the purpose of Python being on the path. You're perfectly allowed to do it from virtually any folder. I'll be editing my answer with an example.</span>
<span class="comment-copy">Glad to help. I love Anaconda to bits and pieces and it's always nice to help out someone using the distro. Enjoy!</span>
<span class="comment-copy">I just realized that you spend an awful lot of time with Excel, similar to myself. If that is so, I sincerely recommend the <code>pandas</code> library. Since you're using Anaconda, it's supposed to be installed right away. It's far and wide much better to use Pandas than VBA.</span>
<span class="comment-copy">It's also worth looking at the IPython notebook (also comes with Anaconda).</span>
