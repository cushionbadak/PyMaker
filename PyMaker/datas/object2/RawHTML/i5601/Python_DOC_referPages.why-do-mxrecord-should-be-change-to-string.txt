<div class="post-text" itemprop="text">
<p>I was trying to connect SMTP server to domain name</p>
<pre><code>import socket()
import smtplib
import dns.resolver

getdomain = user_email.split('@')

            check_domain = dns.resolver.query(getdomain[1], 'MX')
            mxrecords=check_domain[0].exchange

            host=socket.gethostname()
            server=SMTP()
            server.connect(mxrecords)
</code></pre>
<p>This throws me error </p>
<pre><code>if not port and (host.find(':') == host.rfind(':')):
AttributeError: 'Name' object has no attribute 'find'
</code></pre>
<p>But when I change mxrecords to string it works</p>
<pre><code>mxrecords=str(check_domain[0].exchange)
</code></pre>
<p>Can anyone explain me why it accept string?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/smtplib.html" rel="nofollow noreferrer">https://docs.python.org/3/library/smtplib.html</a></p>
<p>You can know the <code>connect()</code> needs a string param <code>host</code>.</p>
<blockquote>
<p>An SMTP instance encapsulates an SMTP connection. It has methods that support a full repertoire of SMTP and ESMTP operations. If the optional host and port parameters are given, the SMTP connect() method is called with those parameters during initialization. </p>
</blockquote>
<p>The <code>connect()</code> can click then redirect to a link, then you can see:</p>
<blockquote>
<p><strong>SMTP.connect(host='localhost', port=0)</strong><br/>
  Connect to a host on a given port. The defaults are to connect to the local host at the standard SMTP port (25). If the hostname ends with a colon (':') followed by a number, that suffix will be stripped off and the number interpreted as the port number to use. This method is automatically invoked by the constructor if a host is specified during instantiation. Returns a 2-tuple of the response code and message sent by the server in its connection response. </p>
</blockquote>
<p>There you can know the param <code>host='localhost'</code> default is a string. </p>
<hr/>
<p><strong>EDIT</strong></p>
<p>I checked your code, the </p>
<pre><code>print(type(mxrecords)) 
</code></pre>
<p>prints </p>
<pre><code>&lt;class 'dns.name.Name'&gt;
</code></pre>
<p>which states that the <code>mxrecords</code> object is a <code>dns.name.Name</code> object, not a string.</p>
<p>If you click the <code>connect</code> method's source code, you will find the <code>host</code> should be a string:</p>
<pre><code>def connect(self, host='localhost', port=0, source_address=None):
    """Connect to a host on a given port.

    If the hostname ends with a colon (`:') followed by a number, and
    there is no port specified, that suffix will be stripped off and the
    number interpreted as the port number to use.

    Note: This method is automatically invoked by __init__, if a host is
    specified during instantiation.

    """

    if source_address:
        self.source_address = source_address

    if not port and (host.find(':') == host.rfind(':')):
        i = host.rfind(':')
        if i &gt;= 0:
            host, port = host[:i], host[i + 1:]
            try:
                port = int(port)
            except ValueError:
                raise OSError("nonnumeric port")
    if not port:
        port = self.default_port
    if self.debuglevel &gt; 0:
        self._print_debug('connect:', (host, port))
    self.sock = self._get_socket(host, port, self.timeout)
    self.file = None
    (code, msg) = self.getreply()
    if self.debuglevel &gt; 0:
        self._print_debug('connect:', repr(msg))
    return (code, msg)
</code></pre>
<p>and in the code you can find <code>host.find(':') == host.rfind(':')</code>, which matches your error. </p>
<hr/>
<p>Check the <code>dns.name.Name</code> source code, you will find the <code>Name</code> class has a <code>to_text</code> method:</p>
<pre><code>def to_text(self, omit_final_dot=False):
    """Convert name to text format.
    @param omit_final_dot: If True, don't emit the final dot (denoting the
    root label) for absolute names.  The default is False.
    @rtype: string
    """

    if len(self.labels) == 0:
        return maybe_decode(b'@')
    if len(self.labels) == 1 and self.labels[0] == b'':
        return maybe_decode(b'.')
    if omit_final_dot and self.is_absolute():
        l = self.labels[:-1]
    else:
        l = self.labels
    s = b'.'.join(map(_escapify, l))
    return maybe_decode(s)
</code></pre>
<p>So you should use <code>mxrecords.to_text()</code> to get the MX server name.</p>
</div>
<div class="post-text" itemprop="text">
<p>The object returned by the third-party <code>dns.resolver</code> package is not a type (or class, if that helps) which the standard library <code>smtplib</code> knows anything about.</p>
<p>Many times, when interfacing library APIs, your task as a programmer is to convert from a custom representation which one API returns as output, to a different representation which is suitable as input for another API call.</p>
<p>System libraries need to pay special attention to this. If <code>smtplib</code> (or even <code>socket</code>) knew about your particular resolver, it would be harder to use with other resolvers. Even if your resolver was also part of the Python standard library, such an internal dependency would introduce unwelcome rigidity, internal coupling, and potentially some nasty internal versioning issues.</p>
</div>
<span class="comment-copy">Please post proper working code <b>including</b> the import statements.</span>
<span class="comment-copy">Done...now explain</span>
<span class="comment-copy">I have edited que... mxrecords=check_domain[0].exchange now this is not tupple.. can u please explai me</span>
<span class="comment-copy">@Awesome whats the <code>print(type(mxrecords))</code> prints?</span>
<span class="comment-copy">This question is tagged <a href="https://stackoverflow.com/questions/tagged/python-3.x">python-3.x</a> so linking to Python 2 library documentation isn't really adequate.</span>
<span class="comment-copy">was just checking ..it's type..I will edit it..</span>
<span class="comment-copy">@tripleee I have edited my answer, check it. sorry about my bad English.</span>
<span class="comment-copy">Can u please answer my question?</span>
<span class="comment-copy">Having said that, the <code>dns.resolver</code> author <i>could</i> have given the object a <code>str()</code> representation; but an MX record does not straightforwardly translate to a single host name. It is a list of hosts, each with a numeic preference.</span>
<span class="comment-copy">What I posted here <i>is</i> an attempt at answering the question at the top of the page. If you think it lacks something crucial, could you please elaborate on how exactly I should improve it? Which part of your question do you feel remains unanswered?</span>
