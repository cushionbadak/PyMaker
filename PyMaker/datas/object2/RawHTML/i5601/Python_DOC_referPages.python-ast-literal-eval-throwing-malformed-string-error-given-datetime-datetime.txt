<div class="post-text" itemprop="text">
<p>I need to evaluate the string before assigning it, so I am using eval. But I read eval is not good to use and instead use ast.literal_eval. But when using ast.literal_eval, I am getting malformed string error.</p>
<pre><code>import datetime
x = eval('datetime.datetime.now()')
print x
</code></pre>
<p>Result:</p>
<pre><code>2017-12-29 11:15:22.191322
</code></pre>
<p>Code with Ast</p>
<pre><code>import datetime
import ast
x = ast.literal_eval('datetime.datetime.now()')
</code></pre>
<p>Result:</p>
<blockquote>
<p>Malformed String</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> document clearly says:</p>
<blockquote>
<p>Safely evaluate an expression node or a string containing a Python literal or container display. </p>
<p>The string or node provided <strong>may <em>only</em> consist of the following Python literal structures: strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None.</strong></p>
</blockquote>
</div>
<span class="comment-copy"><code>literal_eval</code> is not a magical unicorn. There are limits to its uses. The only thing it can parse is string representations of data structures, not expressions like this.</span>
<span class="comment-copy"><code>datetime.datetime.now()</code> is not a literal. <code>literal_eval()</code> is only supposed to evaluate literals -- this is a security measure, ensuring that code can't be sneaked in in places where data is expected.</span>
<span class="comment-copy">Err, my bad. I did mean that function only.</span>
<span class="comment-copy">@CharlesDuffy : In my scenario to evalute, I can use only eval ??</span>
<span class="comment-copy">This sounds like it might be an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>. You want to do something (X) and <code>eval</code>ing a string may be a way to do it (Y), and you're asking for a better way to do Y (like <code>literal_eval</code>). That specific alternative solution doesn't work, but since you haven't actually described what X is (that is, why you are <code>eval</code>ing a string in the first place) we can't offer any suggestions for different approaches that might be better at solving the problem.</span>
