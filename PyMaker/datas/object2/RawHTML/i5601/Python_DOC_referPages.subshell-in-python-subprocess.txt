<div class="post-text" itemprop="text">
<p>Within a python script I need to launch a command such as </p>
<pre><code>kill $(ps aux | grep httpd | awk '{print $2}')
</code></pre>
<p>Using <strong>subprocess</strong>
I have tried to split the command using a function from <a href="https://stackoverflow.com/a/29755431/1355628">https://stackoverflow.com/a/29755431/1355628</a>)</p>
<p>The function is fine with simple commands with pipe but unfortunately with the one above it does not seem to work (the return code seems to be completely random...)</p>
<p>Thanks is advance</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module" rel="nofollow noreferrer"><code>subprocess.run</code></a> takes an optional <code>shell=True</code> argument, which will run your command in a subshell.
Please do read the <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">Security Considerations</a> however, if you're handling user input.</p>
<p>Another (better, imo) solution, would be to use the <a href="https://pypi.python.org/pypi/psutil/" rel="nofollow noreferrer">psutil</a> package and <code>os.kill</code>, like this:</p>
<pre><code>import psutil
processes = [p for p in psutil.pids() if 'httpd' in psutil.Process(p).name()]
for process in processes:
    os.kill(...)
</code></pre>
</div>
<span class="comment-copy">What's your end goal here, do you want to kill a running process using python ?</span>
<span class="comment-copy">I need to handle multiple ways to stop a process. Sometimes a simple "service xxx stop" is fine but for some processes it is not enough (kill needed)</span>
<span class="comment-copy">I have tried something like :   <code>cmd = "kill $(ps aux | grep proces[s] | awk '{print $2}');rm -f /var/lock/process &amp;&amp; service process start" pop = subprocess.Popen(cmd, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, shell=True) pop.wait() print "return code is : %d" % pop.returncode</code>  Executing the command in a bash is fine, but within python it results in a failure : "return code is -15" (instead of 0)</span>
