<div class="post-text" itemprop="text">
<p>I have this json and I was wondering if someone can help me figure out to just get the '1. open' values for the following json. Using python. Thanks</p>
<pre><code>{
"Meta Data": {
    "1. Information": "Daily Prices (open, high, low, close) and Volumes",
    "2. Symbol": "AAPL",
    "3. Last Refreshed": "2017-12-26",
    "4. Output Size": "Compact",
    "5. Time Zone": "US/Eastern"
},
"Time Series (Daily)": {
    "2017-12-26": {
        "1. open": "170.8000",
        "2. high": "171.4700",
        "3. low": "169.6790",
        "4. close": "170.5700",
        "5. volume": "33106577"
    },
    "2017-12-22": {
        "1. open": "174.6800",
        "2. high": "175.4240",
        "3. low": "174.5000",
        "4. close": "175.0100",
        "5. volume": "16052615"
    },
    "2017-12-21": {
        "1. open": "174.1700",
        "2. high": "176.0200",
        "3. low": "174.1000",
        "4. close": "175.0100",
        "5. volume": "20356826"
    },
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>json</code> module to convert JSON into python's dictionary. And then it is easy.</p>
<pre><code>data = '''{
    "Meta Data": {
        "1. Information": "Daily Prices (open, high, low, close) and Volumes",
        "2. Symbol": "AAPL",
        "3. Last Refreshed": "2017-12-26",
        "4. Output Size": "Compact",
        "5. Time Zone": "US/Eastern"
    },
    "Time Series (Daily)": {
        "2017-12-26": {
            "1. open": "170.8000",
            "2. high": "171.4700",
            "3. low": "169.6790",
            "4. close": "170.5700",
            "5. volume": "33106577"
        },
        "2017-12-22": {
            "1. open": "174.6800",
            "2. high": "175.4240",
            "3. low": "174.5000",
            "4. close": "175.0100",
            "5. volume": "16052615"
        },
        "2017-12-21": {
            "1. open": "174.1700",
            "2. high": "176.0200",
            "3. low": "174.1000",
            "4. close": "175.0100",
            "5. volume": "20356826"
        }
    }
}'''

import json

data = json.loads(data)

for key, val in data['Time Series (Daily)'].items():
    print(key, val["1. open"])
</code></pre>
<p>Result:</p>
<pre><code>2017-12-26 170.8000
2017-12-22 174.6800
2017-12-21 174.1700
</code></pre>
<p>If you have problem with structure then you can alwasy use <code>print(item)</code> and <code>print(type(item))</code> to display item and its type, and <code>print(item.keys())</code> to see keys if it is dictionary.</p>
<pre><code>print(type(data))
print(data.keys())

# &lt;class 'dict'&gt;
# dict_keys(['Meta Data', 'Time Series (Daily)'])

print(type(data['Time Series (Daily)']))
print(data['Time Series (Daily)'].keys())

# &lt;class 'dict'&gt;
# dict_keys(['2017-12-26', '2017-12-22', '2017-12-21'])
</code></pre>
</div>
<span class="comment-copy">use module <code>json</code> to convert it into python's dictionary</span>
<span class="comment-copy">Have you read up on the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> module? It's pretty self explanatory. It just converts json text into <code>list</code> and <code>dict</code> structures and you can retrieve the data as a normal nested dictionary.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/7771011/parse-json-in-python">Parse JSON in Python</a></span>
<span class="comment-copy">Thanks! This worked</span>
