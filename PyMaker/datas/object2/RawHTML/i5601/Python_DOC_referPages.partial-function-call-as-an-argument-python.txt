<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2347388/python-passing-a-function-with-parameters-as-parameter">Python: passing a function with parameters as parameter [duplicate]</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/3258756/creating-python-function-with-partial-parameters">Creating Python function with partial parameters</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/14994484/pass-function-to-function-with-different-number-of-variables">pass function to function with different number of variables</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/22028640/pass-a-function-as-a-variable-with-one-input-fixed">Pass a function as a variable with one input fixed</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>Is there any way a following code works?</p>
<pre><code>def f1(f2, x):
    return f2(x)

def f2(y, z):
    return y + z

f1(f2(10, ), 20)
output 30
</code></pre>
<p><code>f2</code> function misses <code>z</code>. So, I want <code>f1</code> to pass an argument, <code>x</code>, to <code>f2</code> as <code>z</code>.
I will appreciate any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, this is what <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><strong><code>functools.partial</code></strong></a> is all about:</p>
<pre><code><b>from functools import partial</b>

f1(<b>partial(</b>f2<b>, </b>10<b>)</b>, 20)</code></pre>
<p><code>partial</code> takes as input a function <code>f</code>, an an arbitrary number of <em>unnamed</em> and <em>named</em> parameters. It constructs a new function where the unnamed and named parameters are filled in already.</p>
<p>It is somewhat equivalent to:</p>
<pre><code>def partial(func, *partialargs, **partialkwargs):
    def g(*args, **kwargs):
        fargs = partialargs + args
        fkwargs = partialkwargs.copy()
        fkwargs.update(kwargs)
        return func(*farg, **fkwargs)
    return g
</code></pre>
<p>But <code>functools</code> will reduce the overhead significantly compared with the above implementation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another option showing  <code>lambda</code> expressions:</p>
<pre><code>f1(lambda x: f2(10,x), 20)
</code></pre>
<p>Partial as shown by @Willem is more suited for your specific problem, but <code>lambda</code> expressions are good to know for flexibility - the expression can become much more complex then just a partial call.</p>
</div>
<span class="comment-copy">You have to pass a callable that takes a single argument, created using <code>def</code>, <code>lambda</code> or <code>functools.partial</code>, e.g.: <code>f1(lambda z: f2(10, z), 20)</code>.</span>
<span class="comment-copy">@jonrsharpe The dupe target here is focussed on passing the arguments from one function to the another functions, however this question is focussed on passing the argument partially while making the call. I don't think this is the right dupe target</span>
<span class="comment-copy">OP FYI many of those are also findable by Googling your question title plus <code>site:stackoverflow.com</code>, so please do your research before asking in the future.</span>
<span class="comment-copy">Thank you. It worked!</span>
