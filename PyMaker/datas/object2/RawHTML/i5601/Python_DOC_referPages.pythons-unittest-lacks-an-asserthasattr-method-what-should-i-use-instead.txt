<div class="post-text" itemprop="text">
<p>Of the many, many assert methods in <a href="https://docs.python.org/3/library/unittest.html" rel="noreferrer">Python's standard <code>unittest</code> package</a>, <code>.assertHasAttr()</code> is curiously absent. While writing some unit tests I've run into a case in which I'd like to test for the presence of an attribute in an object instance.</p>
<p>What's a safe/correct alternative for the missing <code>.assertHasAttr()</code> method?</p>
</div>
<div class="post-text" itemprop="text">
<p>Came up with an answer as I was writing the question. Given a class/test case that inherits from <code>unittest.TestCase</code>, you can just add a method based on <code>.assertTrue()</code>:</p>
<pre><code>def assertHasAttr(self, obj, intendedAttr):
    testBool = hasattr(obj, intendedAttr)

    self.assertTrue(testBool, msg='obj lacking an attribute. obj: %s, intendedAttr: %s' % (obj, intendedAttr))
</code></pre>
<p>Duh. </p>
<p>I didn't find anything on google when I was searching before, so I'll leave this here in case anyone else runs into a similar issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can write your own:</p>
<pre><code>HAS_ATTR_MESSAGE = '{} should have an attribute {}'

class BaseTestCase(TestCase):

    def assertHasAttr(self, obj, attrname, message=None):
        if not hasattr(obj, attrname):
            if message is not None:
                self.fail(message)
            else:
                self.fail(HAS_ATTR_MESSAGE.format(obj, attrname))
</code></pre>
<p>Then you can subclass <code>BaseTestCase</code> insteadof <code>TestCase</code> with tests. For example:</p>
<pre><code>class TestDict(BaseTestCase):

    def test_dictionary_attributes(self):
        self.assertHasAttr({}, 'pop')  # will succeed
        self.assertHasAttr({}, 'blablablablabla')  # will fail
</code></pre>
</div>
<span class="comment-copy">Just use <code>assert hasattr(...)</code></span>
<span class="comment-copy">Nice. I was not aware of <code>TestCase.fail()</code></span>
