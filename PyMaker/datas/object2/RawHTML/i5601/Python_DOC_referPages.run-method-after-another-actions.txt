<div class="post-text" itemprop="text">
<h2>1. Summary</h2>
<p>I don't understand, how I can run Python method after another actions.</p>
<hr/>
<h2>2. File</h2>
<p>Example of my <code>.py</code> file:</p>
<pre class="lang-python prettyprint-override"><code># First test
for filename in first_folder:

    if "Sasha Great" in open(filename).read():
        log.debug(filename + " Done")
    else:
        print("First test failure for " + filename)
</code></pre>
<hr/>
<h2>3. Expected algoritm</h2>
<h3>3.1. Tests passed</h3>
<p><strong>If</strong> all tests passed, print to console:</p>
<pre class="lang-python prettyprint-override"><code>Test for all files successful passed
</code></pre>
<h3>3.2. Tests failed</h3>
<p><strong>If</strong>, for example, one of my tests failure for <code>SashaExample.txt</code>:</p>
<ol>
<li>print <code>First test failure for SashaExample.txt</code>;</li>
<li>continue first test for another files;

<ol>
<li><strong>if</strong> there are more errors as <code>First test failure for AnotherExample.txt</code>, print errors to console and continue test;</li>
</ol></li>
<li><code>exit(1)</code> after running all tests.</li>
</ol>
<p>I need <code>exit(1)</code>, that I can see, that I have errors in my tests, if I use Travis CI or AppVeyor.</p>
<hr/>
<h2>4. Not helped</h2>
<h3>4.1. exit(1) after else</h3>
<p><strong>If</strong>:</p>
<pre class="lang-python prettyprint-override"><code>for filename in first_folder:

    if "Sasha Great" in open(filename).read():
        log.debug(filename + " Done")
    else:
        print("First test failure for " + filename)
        exit(1)
</code></pre>
<p>Program end after first error. But I need to see all errors.</p>
<h3>4.2. Another attempts</h3>
<ol>
<li>I don't find, how I can solve my problem, in Google;</li>
<li>I read about Python functions, methods, <a href="https://docs.python.org/3/library/atexit.html" rel="nofollow noreferrer"><strong><code>atexit</code></strong></a>, but I don't understand, how I can solve this problem.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>This is a simple programming concept called FLAGS. Google it a bit and you will see is quite simple.</p>
<pre><code>all_passed = True
# First test
for filename in first_folder:

    if "Sasha Great" in open(filename).read():
        log.debug(filename + " Done")
    else:
        print("First test failure for " + filename)
        all_passed=False
        continue

if all_passed:
    print('All test passed')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem appears to be that you need to call <code>exit(1)</code> at the end of the program if there were any failures.  If that is the case, you can use a variable, say <code>failureFound</code>, initialized to <code>False</code> (because you haven't found any yet) and set to <code>True</code> whenever you find a failure.  Then, at the end of the program, if <code>failureFound</code> is true, call <code>exit(1)</code>.</p>
</div>
<span class="comment-copy">Are those unit tests or integration tests? For the former one, one test should be atomic and it should test one thing, e.g. "folder is good" -&gt; (True or False). <a href="https://stackoverflow.com/a/235032/4621324">stackoverflow.com/a/235032/4621324</a> If one file fails, then "folder is bad" and there's no much sense in checking other files. If you really want to check all the files, you can "autogenerate" those methods-tests and run one after another or just make a method (not test) that will print "failing" info about all the files first and then run a test, that will fail after a first issue.</span>
<span class="comment-copy">@Axalix: thanks for the comment. My <code>.py</code> file check many <code>.txt</code> files for errors, that <code>.txt</code> files consistent with the rules of a one service. For example, it check, contains mandatory word in a file or no — as in example. // If I see all errors immediately, I can quickly fix them. I don't think, that exit program after each fail — is a good behavior in my case.</span>
<span class="comment-copy">@Axalix: <code>If you really want to check all the files, you can "autogenerate" those methods-tests and run one after another or just make a method (not test) that will print "failing" info about all the files first and then run a test, that will fail after a first issue.</code> — now warnings and errors only print to console for me, but tests still considered as <code>passed</code>. I can see all warnings and errors. Also I can write another <code>.py</code> file, where program will exit with exit code 1 after each fail. This file will run it after first file. But then I will have a lot of duplicated code. Thanks.</span>
<span class="comment-copy">@Axalix: I <a href="https://stackoverflow.com/posts/48051166/revisions"><b>simplify example</b></a>. Thanks.</span>
<span class="comment-copy">@Саша-Черных You can read more about it here <a href="https://www.computerhope.com/jargon/f/flag.htm" rel="nofollow noreferrer">computerhope.com/jargon/f/flag.htm</a></span>
<span class="comment-copy">I'm sorry, can you add an example or link, where I can read, how I can realize it? Thanks.</span>
<span class="comment-copy">What part of this do you not understand?  How did you try to implement it, and where did it go wrong?</span>
