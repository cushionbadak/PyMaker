<div class="post-text" itemprop="text">
<p>I would like my final list to be of this form:</p>
<pre><code>index_list=[(slice(170, 255), slice(22, 32)),
(slice(170, 255), slice(69, 79)),
(slice(170, 255), slice(118, 128)),
(slice(170, 255), slice(163, 173)),
etc
etc
etc]
</code></pre>
<p>But I want to store the tuple values in excel, so for instance, cell A1 might be</p>
<pre><code>(slice(170, 255), slice(22, 32))
</code></pre>
<p>... and so on for all the slice tuple values. Or the cells in excel may simply have the numbered values </p>
<pre><code>170, 255, 22, 32
</code></pre>
<p>which python could use to create tuples. I don't care what the format is in excel, I would just like to store the values there and read them as a list of tuples with that string format. The following is about as far as I was able to get:</p>
<pre><code>with open('index_values.csv') as infile:
    reader = csv.reader(infile)
    next(reader, None)  # skip the headers
    for row in reader:
        index_list.append(tuple(str(row).replace('[','').replace(']','').replace('"','').split(', ')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could just take one line of the CSV in the <strong>second</strong> format and use the ast module in python to parse it:</p>
<pre><code>import ast
index_list = ast.literal_eval("["+first_row+"]")
</code></pre>
<p>Then <code>index_list</code> contains what you want and you just need to take each element in pairs:</p>
<pre><code>new_list = []
for i in range(0,index_list,2):
    new_list.append(slice(index_list[i],index_list[i+1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you csv looks something like this:</p>
<pre><code>170, 255, 22, 32
125, 320, 14, 24
</code></pre>
<p>You can just read every two values, and store the <code>slice()</code> of these two values in your list:</p>
<pre><code>import csv

index_list = []
with open('index_values.csv') as infile:
    reader = csv.reader(infile)
    for row in reader:
        line = [x.strip() for x in row]
        slices = [slice(int(x), int(y)) for x, y in zip(line[::2], line[1::2])]

        index_list.append(tuple(slices))

print(index_list)
</code></pre>
<p>Which Outputs:</p>
<pre><code>[(slice(170, 255, None), slice(22, 32, None)), (slice(125, 320, None), slice(14, 24, None))]
</code></pre>
<p><strong>Note:</strong> <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice()</code></a> has a default step size which is <code>None</code> if not specified. </p>
</div>
<span class="comment-copy">added in main body</span>
<span class="comment-copy">Can you add what you get with your (admittedly incomplete) code?</span>
<span class="comment-copy">For me this is simply returning:</span>
<span class="comment-copy">[(), ()]  ,,, any ideas? thanks for the help</span>
