<div class="post-text" itemprop="text">
<p>I got the following list called "phonenumbers". I struggle to remove the elements which contain '\n\t\t\t' and '\n\t\t\t\t'.
I tried "try and except"-methode and remove('\n\t\t\t\t') but couldnt make it work.
Any tips?</p>
<blockquote>
<p>['(02271) 6 79', ' 70', '\n\t\t\t', '(02271) 6 79', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(02181) 27 0', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02181) 27 0', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02161) 24 19', '\n\t\t\t\t', ' 40', '\n\t\t\t', '\n\t\t\t', '(02161) 24 19', '\n\t\t\t\t', ' 40', '\n\t\t\t', '\n\t\t\t', '(02131) 66 67', '\n\t\t\t\t', ' 10', '\n\t\t\t', '\n\t\t\t', '(02131) 66 67', '\n\t\t\t\t', ' 10', '\n\t\t\t', '\n\t\t\t', '(02103) 39 00', '\n\t\t\t\t', ' 93', '\n\t\t\t', '\n\t\t\t', '(02103) 39 00', '\n\t\t\t\t', ' 93', '\n\t\t\t', '\n\t\t\t', '(02173) 2 04 7', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02173) 2 04 7', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 04', '\n\t\t\t\t', ' 30', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 04', '\n\t\t\t\t', ' 30', '\n\t\t\t', '\n\t\t\t', '\n\t\t\t\t', '(0221) 3 46 79 40', '\n\t\t\t', '\n\t\t\t', '\n\t\t\t\t', '(0221) 3 46 79 40', '\n\t\t\t', '\n\t\t\t', '(02232) 4 23', '\n\t\t\t\t', ' 05', '\n\t\t\t', '\n\t\t\t', '(02232) 4 23', '\n\t\t\t\t', ' 05', '\n\t\t\t', '\n\t\t\t', '(0157) 86 85 74', '\n\t\t\t\t', ' 43', '\n\t\t\t', '\n\t\t\t', '(0157) 86 85 74', '\n\t\t\t\t', ' 43', '\n\t\t\t', '\n\t\t\t', '(02181) 2 78 11', '\n\t\t\t\t', ' 47', '\n\t\t\t', '\n\t\t\t', '(02181) 2 78 11', '\n\t\t\t\t', ' 47', '\n\t\t\t', '\n\t\t\t', '(02181) 47 49 0', '\n\t\t\t\t', '0-0', '\n\t\t\t', '\n\t\t\t', '(02181) 47 49 0', '\n\t\t\t\t', '0-0', '\n\t\t\t', '\n\t\t\t', '(02202) 1 88', '\n\t\t\t\t', ' 60', '\n\t\t\t', '\n\t\t\t', '(02202) 1 88', '\n\t\t\t\t', ' 60', '\n\t\t\t', '\n\t\t\t', '(0211) 23 80', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(0211) 23 80', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 0', '\n\t\t\t\t', '4-0', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 0', '\n\t\t\t\t', '4-0', '\n\t\t\t']</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You could go for a simple expression like</p>
<pre><code>^\s+$
</code></pre>
<p>In <code>Python</code>:</p>
<pre><code>import re

lst = ['(02271) 6 79', ' 70', '\n\t\t\t', '(02271) 6 79', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(02181) 27 0', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02181) 27 0', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02161) 24 19', '\n\t\t\t\t', ' 40', '\n\t\t\t', '\n\t\t\t', '(02161) 24 19', '\n\t\t\t\t', ' 40', '\n\t\t\t', '\n\t\t\t', '(02131) 66 67', '\n\t\t\t\t', ' 10', '\n\t\t\t', '\n\t\t\t', '(02131) 66 67', '\n\t\t\t\t', ' 10', '\n\t\t\t', '\n\t\t\t', '(02103) 39 00', '\n\t\t\t\t', ' 93', '\n\t\t\t', '\n\t\t\t', '(02103) 39 00', '\n\t\t\t\t', ' 93', '\n\t\t\t', '\n\t\t\t', '(02173) 2 04 7', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02173) 2 04 7', '\n\t\t\t\t', '3-0', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 04', '\n\t\t\t\t', ' 30', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 04', '\n\t\t\t\t', ' 30', '\n\t\t\t', '\n\t\t\t', '\n\t\t\t\t', '(0221) 3 46 79 40', '\n\t\t\t', '\n\t\t\t', '\n\t\t\t\t', '(0221) 3 46 79 40', '\n\t\t\t', '\n\t\t\t', '(02232) 4 23', '\n\t\t\t\t', ' 05', '\n\t\t\t', '\n\t\t\t', '(02232) 4 23', '\n\t\t\t\t', ' 05', '\n\t\t\t', '\n\t\t\t', '(0157) 86 85 74', '\n\t\t\t\t', ' 43', '\n\t\t\t', '\n\t\t\t', '(0157) 86 85 74', '\n\t\t\t\t', ' 43', '\n\t\t\t', '\n\t\t\t', '(02181) 2 78 11', '\n\t\t\t\t', ' 47', '\n\t\t\t', '\n\t\t\t', '(02181) 2 78 11', '\n\t\t\t\t', ' 47', '\n\t\t\t', '\n\t\t\t', '(02181) 47 49 0', '\n\t\t\t\t', '0-0', '\n\t\t\t', '\n\t\t\t', '(02181) 47 49 0', '\n\t\t\t\t', '0-0', '\n\t\t\t', '\n\t\t\t', '(02202) 1 88', '\n\t\t\t\t', ' 60', '\n\t\t\t', '\n\t\t\t', '(02202) 1 88', '\n\t\t\t\t', ' 60', '\n\t\t\t', '\n\t\t\t', '(0211) 23 80', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(0211) 23 80', '\n\t\t\t\t', ' 70', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 0', '\n\t\t\t\t', '4-0', '\n\t\t\t', '\n\t\t\t', '(02235) 9 23 0', '\n\t\t\t\t', '4-0', '\n\t\t\t']

rx = re.compile(r'^\s+$')

lst = [item.strip() for item in lst if not rx.match(item)]
print(lst)
</code></pre>
<p>This yields and strips all numbers that are not only whitespaces from start to end:</p>
<pre><code>['(02271) 6 79', '70', '(02271) 6 79', '70', '(02181) 27 0', '3-0', '(02181) 27 0', '3-0', '(02161) 24 19', '40', '(02161) 24 19', '40', '(02131) 66 67', '10', '(02131) 66 67', '10', '(02103) 39 00', '93', '(02103) 39 00', '93', '(02173) 2 04 7', '3-0', '(02173) 2 04 7', '3-0', '(02235) 9 23 04', '30', '(02235) 9 23 04', '30', '(0221) 3 46 79 40', '(0221) 3 46 79 40', '(02232) 4 23', '05', '(02232) 4 23', '05', '(0157) 86 85 74', '43', '(0157) 86 85 74', '43', '(02181) 2 78 11', '47', '(02181) 2 78 11', '47', '(02181) 47 49 0', '0-0', '(02181) 47 49 0', '0-0', '(02202) 1 88', '60', '(02202) 1 88', '60', '(0211) 23 80', '70', '(0211) 23 80', '70', '(02235) 9 23 0', '4-0', '(02235) 9 23 0', '4-0']
</code></pre>
<p><hr/>
As @dawg points out, a regular expression is not really needed, actually:</p>
<pre><code>lst = [number for item in lst for number in [item.strip()] if number]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try like this,</p>
<pre><code>result = [i for i in lst if not i.endswith('\t\t')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <code>list-comprehension</code> to create a list of <code>strings</code> where each one has to past the test that <code>all</code> of the characters (<code>c</code>) in the <code>string</code> are <code>in</code>: <code>'\t\n'</code>. I think that this is the most efficient, general purpose solution that will work for <code>strings</code> that only contain <code>tabs</code> and <code>newlines</code>, it is also extremely readable in Python:</p>
<pre><code>[i for i in lst if all(c not in '\t\n' for c in i)]
</code></pre>
<p>which gives the correct result of:</p>
<pre><code>['(02271) 6 79', ' 70', '(02271) 6 79', ' 70', '(02181) 27 0', '3-0', '(02181) 27 0', '3-0', '(02161) 24 19', ' 40', '(02161) 24 19', ' 40', '(02131) 66 67', ' 10', '(02131) 66 67', ' 10', '(02103) 39 00', ' 93', '(02103) 39 00', ' 93', '(02173) 2 04 7', '3-0', '(02173) 2 04 7', '3-0', '(02235) 9 23 04', ' 30', '(02235) 9 23 04', ' 30', '(0221) 3 46 79 40', '(0221) 3 46 79 40', '(02232) 4 23', ' 05', '(02232) 4 23', ' 05', '(0157) 86 85 74', ' 43', '(0157) 86 85 74', ' 43', '(02181) 2 78 11', ' 47', '(02181) 2 78 11', ' 47', '(02181) 47 49 0', '0-0', '(02181) 47 49 0', '0-0', '(02202) 1 88', ' 60', '(02202) 1 88', ' 60', '(0211) 23 80', ' 70', '(0211) 23 80', ' 70', '(02235) 9 23 0', '4-0', '(02235) 9 23 0', '4-0']
</code></pre>
<hr/>
<p>You could also use <a href="https://docs.python.org/3/library/stdtypes.html#str.isspace" rel="nofollow noreferrer"><strong><code>str.isspace()</code></strong></a> which is shorter but would probably (I'm not <code>100%</code> sure) be <em>slightly</em> slower as it checks <em>all</em> <code>whitespace</code> characters:</p>
<pre><code>[i for i in lst if not i.isspace()]
</code></pre>
<p>which gives the same result.</p>
</div>
<span class="comment-copy">Post what you have tried, and someone might help you fix it.</span>
<span class="comment-copy">Perhaps instead of removing the items, you should modify the code that generates the list to not insert them in the first place. How is this list being generated?</span>
<span class="comment-copy">@Bryan Oakley its done by rendering the page with Qt first and then use lxml to extract the list via tree.xpath: phonenumbers = tree.xpath('//span[@class="text nummer_ganz"]//text()') -- website is: <a href="https://www.gelbeseiten.de/schluesselfertigbau/bergheim,,,,,umkreis-50000/s1" rel="nofollow noreferrer">gelbeseiten.de/schluesselfertigbau/bergheim,,,,,umkreis-50000/…</a></span>
<span class="comment-copy"><code>str.strip()</code> will remove all of <code>'\n\t\t\t\t'</code> so you can do <code>[e for e in ur_lst if e.strip()]</code> to filter out the elements that are all whitespace. No regex needed.</span>
<span class="comment-copy">@dawg: Very good point, though I'd even use <code>lst = [number for item in lst for number in [item.strip()] if number]</code> to have the items stripped in the resulting list. Have updated my answer below.</span>
<span class="comment-copy">Thanks for all your answers guys. I tried them all, but none worked for me. Probably my list isnt a "real" list? @Jan when i use the list "lst" which u defined, it works. But when i write lst = phonenumbers it doesnt... my list is created by rendering the page with Qt first and then use lxml to extract the list via tree.xpath: phonenumbers = tree.xpath('//span[@class="text nummer_ganz"]//text()') -- website is: gelbeseiten.de/schluesselfertigbau/bergheim,,,,,umkreis-5000‌​0/s1</span>
<span class="comment-copy">Why down vote, Please comment while down voting.</span>
<span class="comment-copy">why the downvote?</span>
