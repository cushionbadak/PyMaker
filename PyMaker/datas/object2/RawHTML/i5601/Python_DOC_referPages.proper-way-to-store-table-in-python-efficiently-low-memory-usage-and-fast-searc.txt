<div class="post-text" itemprop="text">
<p>I need to store few tables of strings in python (each table contains few million records). Let the header be ("A", "B", "C") and ("A, "B") is the data primary key. Then I need following operations to proceed fast:</p>
<ol>
<li>Add new record (need O(1) complexity).</li>
<li>Find / update, delete record with (A="spam", B="eggs") (need O(1) complexity).</li>
<li>Find all records with (A="spam", C="foo") (need O(k) complexity, where k is the number of result rows).</li>
</ol>
<p>I see a solution based on nested dicts structure for each index. It fits my needs, but I think, there is a better existing solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested in the comments use a database. <code>sqlite3</code> is small and fairly easy. It creates a database that exists in a single file and you interact with it.</p>
<p>Here is an adapted example from <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">the API</a></p>
<pre><code>import sqlite3
# Connect to your database (or create it if it was not there)
db = sqlite3.connect('data.db')

# Create the table
conn = db.cursor()
conn.execute("""
CREATE TABLE my_table
A text,
B text,
C text
""")

# Add an entry to the db 
conn.execute("INSERT INTO my_table VALUES ('spam','eggs','foo')")

# Read all the entries under a condition
for row in conn.execute("SELECT * FROM my_table WHERE A='spam' AND C='foo'"):
    print(row)


#safely close the db connection
conn.close()
</code></pre>
<p>Note: example is in python3</p>
</div>
<span class="comment-copy">Why not use a database? Those are systems optimizd for exactly that. Like for instance a MySQL database.</span>
<span class="comment-copy">If you don't store the items on an external location (such as a database) then you'll lose everything when the application exits. Is this what you want? There is also a size contraint if you opt to store everything on memory.</span>
<span class="comment-copy">Or even just sqlite3, which is part of the Python standard library.</span>
<span class="comment-copy">I get data from external key-value storage and cache it in memory: that storage is not fast enough and stable to proceed by requests, so, I am not afraid to loose the data. I was afraid, mysql and sqlite would not be fast enough in comparation with python. Am I wrong?</span>
