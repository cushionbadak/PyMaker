<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/24285306/python-compare-lines-in-a-file-with-a-string">python compare lines in a file with a string</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p><code>pathway.txt</code> contains lines like this (below)</p>
<pre><code>a,
b,0
c,8
d,
</code></pre>
<p><code>dummy</code> should print <code>[a,d]</code></p>
<pre><code>#!/usr/bin/python3.6
def pathway(file):
    dict={}
    dummy=[]
    file_object=open(file, "r+")
    for line in file_object:
        a, b = line.split(',')
        if b == '':
            dummy.append(a)
    print (dummy)

pathway("pathway.txt")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are not handling the line separator. All but perhaps the last <code>line</code> string will end in a <code>\n</code> newline character. This makes <code>b</code> equal to <code>'\n'</code>, not the empty string.</p>
<p>You should strip whitespace from <code>b</code> first:</p>
<pre><code>for line in file_object:
    a, b = line.split(',')
    if not b.strip():
        dummy.append(a)
</code></pre>
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip()</code> method</a> returns a new string with all whitespace (newlines included) from the start and end removed. You could also apply it to the <code>line</code> first, before splitting:</p>
<pre><code>a, b = line.strip().split(',')
</code></pre>
<p>but then you would leave whitespace after the comma in place, as well as remove whitespace at the start of the value assigned to <code>a</code>.</p>
<p>You should really use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> to read comma-separated data:</p>
<pre><code>def pathway(file):
    dummy = []

    with open(file) as file_object:
        reader = csv.reader(file_object)
        for row in reader:
            if len(row) == 1:
                dummy.append(row[0])

    print(dummy)
</code></pre>
</div>
<span class="comment-copy">So what <i>does</i> it print? You should, at the very least, get <code>[]</code> printed.</span>
<span class="comment-copy"><code>b</code> will <i>never</i> be equal to <code>''</code>; it'll be equal to <code>'\n'</code> instead.</span>
<span class="comment-copy">or <code>b.rstrip()</code></span>
