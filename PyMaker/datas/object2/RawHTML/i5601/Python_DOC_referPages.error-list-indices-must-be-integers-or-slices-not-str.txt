<div class="post-text" itemprop="text">
<p>Based on the title, help me solve the error.
i've tried to print the countryCode based on country_name which is in 'rv' variable.
country_found is list of data that have the same value on countries list,
and then i try to retrieve countryCode and there i got the error</p>
<pre><code>rv = "Indonesia"
country_lower = rv.lower()
countries = {
  "DATA": {
    "data": [{
        "countryId": "26",
        "countryCode": "AU",
        "name": "Australia"
    }, {
        "countryId": "17",
        "countryCode": "ID",
        "name": "Indonesia"
    }]
   }
} 
def take_first(predicate, iterable):
 for element in iterable:
    if predicate(element):
        yield element
        break

country_found = list(
 take_first(
    lambda e: e['name'].lower() == country_lower, 
    countries['DATA']['data']
 )
)

default_country_code = 'US'
country_code = (
  country_found['countryCode'] 
  if country_found 
  else default_country_code
)
print (country_code)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em><code>country_found</code> is a list</em>, but you are trying to get an item by a string index:</p>
<pre><code>country_found['countryCode']
</code></pre>
<p>You've probably meant to get the first result of a match:</p>
<pre><code>country_code = country_found[0]['countryCode'] if country_found else default_country_code
</code></pre>
<p>But, do you actually need to have the result as a list, what if you would just use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a>:</p>
<pre><code>result = take_first(lambda e: e['name'].lower() == country_lower, 
                    countries['DATA']['data'])
try:
    country_code = next(result)['countryCode']
except StopIteration:
    country_code = default_country_code
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I get your question correctly, below is what you might want to look into. </p>
<pre><code>default_country_code = 'US'
print(country_found) # ==&gt; list [{'countryId': '17', 'name': 'Indonesia', 'countryCode': 'IN'}]
print(country_found[0]) # ==&gt; dictionary {'countryId': '17', 'name': 'Indonesia', 'countryCode': 'IN'}
print(country_found[0].get('countryCode',default_country_code)) # get countryCode. If countryCode is not there, get the default_country_code
</code></pre>
</div>
