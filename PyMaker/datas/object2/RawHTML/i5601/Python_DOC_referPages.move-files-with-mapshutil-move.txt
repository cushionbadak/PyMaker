<div class="post-text" itemprop="text">
<p>I'd like to move following books to specified <code>DirHTML</code> directory.</p>
<pre><code>books = ['HTML-Head First HTML and CSS - 2nd Ed.pdf',
 'HTML and CSS - Design and Build Websites - Jon Duckett - November 2011.pdf',
 "Murach's HTML5 and CSS3 3rd Edition (2015).pdf",
 'HTML5-cheat-sheet.pdf']
</code></pre>
<p>Easily they can be moved to <code>DirHTML</code> with codes:</p>
<pre><code>import shutil
for book in books:
    shutil.move(book, 'DirHTML')
</code></pre>
<p>When I tried</p>
<pre><code>map(shutil.move, books, 'DirHTML')
</code></pre>
<p>There's no files moved.
How to enable the code working?</p>
</div>
<div class="post-text" itemprop="text">
<p>Each argument to <code>map</code> after the first should be an <code>iterable</code>. Indeed, <code>'DirHTML'</code> <em>is</em> an iterable, but iterating it obtains <code>['D', 'i', 'r', 'H', 'T', 'M', 'L']</code> which is obviously not what you want.</p>
<p>If you insist on using <code>map</code> here, try</p>
<pre><code>map(lambda x: shutil.move(x, 'DirHTML'), books)
</code></pre>
<p>or maybe</p>
<pre><code>map(shutil.move, books, ['DirHTML'] * len(books))
</code></pre>
<p>neither of which is particularly transparent or elegant, and in the latter case, unnecessarily inefficient.</p>
</div>
<div class="post-text" itemprop="text">
<p>First let me say this: you can use <code>map</code> this way, but I don't think it's a good idea. It's meant to transform iterables, not to have side effects. When used for the side effects, as you do, the original imperative code is IMO much clearer.</p>
<p>Now, if you insist to use map, read on. There are potentially two issues here.</p>
<p>First, as explained in other answers, you can't pass the destination directory the way you do. tripleee shows some solutions/workarounds; here's another one:</p>
<pre><code>from functools import partial
map(partial(shutil.move, dst='DirHTML'), books)
</code></pre>
<p>Second, if you're using Python 3: map is lazy. It only evaluates its result when you iterate over it. For example, you could pass the result to <code>list()</code>:</p>
<pre><code>list(map(partial(shutil.move, dst='DirHTML'), books))
</code></pre>
<p>Tip: write a little wrapper around <code>shutil.move</code> that prints its arguments, to better see exactly what's going on.</p>
</div>
<div class="post-text" itemprop="text">
<p>from the official python doc <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">here</a></p>
<blockquote>
<p>If additional iterable arguments are passed, function must take that
  many arguments and is applied to the items from all iterables in
  parallel</p>
</blockquote>
<p>In your <code>map</code> snippet, it will act as:</p>
<pre><code>for i, j in zip(books, 'DirHTML'):
    shutil.move(i, j)
</code></pre>
<p>the <code>DirHTML</code> argument is as work as you expected passed whole string into <code>move</code> but pass each character in sequence.</p>
</div>
<span class="comment-copy">Read the documentation</span>
<span class="comment-copy">Examining the error message you get in the traceback should reveal the problem to a reader, and would be important to include in your question even if you cannot make sense of it yourself. "Code does not work" is not a good question.</span>
<span class="comment-copy">What's the purpose of the <code>zip</code> here? Just <code>for book in books: shutil.move(book, 'DirHtml')</code> would be a lot simpler, clearer, and more efficient.</span>
<span class="comment-copy">just tried to translate his map snippet to make him understand why it not work as expected.</span>
