<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/CU9ui.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/CU9ui.png"/></a></p>
<p>Every even column has a name of "sales.xxxxxxxx" in my data frame. </p>
<p>I'd like to just read in right before column and this(odd) column only contains one information - 3 unique digit code, such as AAA, AAB...etc.</p>
<p>I'd like to change the name of even column into "AAA.xxxxxxx" just replacing the string "sales".</p>
<p>How could I do this?</p>
<hr/>
<p>What I have tried:</p>
<p>first, I had dropped first column(I don't need that)</p>
<pre><code>del df["Unnamed: 0"]
</code></pre>
<p>Second, I had make each cate_level column into list and just take a string element as a loop statment(but I think it also quite computationally inefficient..it takes too long) And then, concatenate with next column name.</p>
<pre><code>for i in range(1, 6905, 2): #there exist 6905 columns, so loop over every 2 columns
    for k in range(11293): #each column has 11293 rows
        tri_codes = df[str(df.columns[i])].tolist() #check which tri_code that cate column have
        if type(tri_codes[k]) == str: #once catch the string
            column_cat = tri_codes[k]
            break #done, quickly finish the loop
    df.rename(columns={ df.columns[i+1] : column_cat + "."+ df.columns[i+1].split(".")[1]}) #change col name
</code></pre>
<p>add. What I try to do:
change every sales.xxxx column_name into tricode.xxxx like following:
<a href="https://i.stack.imgur.com/DVILJ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DVILJ.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could loop through the column names, use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.dropna.html" rel="nofollow noreferrer">dropna</a> and <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iloc.html" rel="nofollow noreferrer">iloc</a> to get a non-Nan value from the <code>cate_level</code> columns and build a dictionary. That dictionary could be passed to the <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.rename.html" rel="nofollow noreferrer">rename</a> function to rename the columns. It would look something like this:</p>
<pre><code>import pandas as pd
from numpy import nan

df = pd.DataFrame({'customer_code': [1023506, 1036996, 1072231, 1003937, 1048230, 1010773],
                   'cate_level_1.22212113': ['AHA', 'AHA', nan, 'AHA', 'AHA', 'AHA'],
                   'sales.22212113': [15065904, 2317445, 0, 1078560, 4848960, 252720],
                   'cate_level_1.22212118': ['AHA', 'AHA', nan, 'AHA', 'AHA', 'AHA'],
                   'sales.22212118': [13837150, 1247550, 9435310, 1080660, 2160528, 2609750]})

df = df[['customer_code', 'cate_level_1.22212113', 'sales.22212113', 'cate_level_1.22212118', 'sales.22212118']]

dic = {}
for col in df:
    if col.startswith('cate'):
        num = col[12:]
        dic['sales' + num] = df[col].dropna().iloc[0] + num

print('Input DF:\n' + str(df))
df.rename(mapper=dic, axis='columns', inplace=True)
print('\nOutput DF:\n' + str(df))
</code></pre>
<p>The results look like:</p>
<pre><code>Input DF:
   customer_code cate_level_1.22212113  sales.22212113 cate_level_1.22212118  sales.22212118
0        1023506                   AHA        15065904                   AHA        13837150
1        1036996                   AHA         2317445                   AHA         1247550
2        1072231                   NaN               0                   NaN         9435310
3        1003937                   AHA         1078560                   AHA         1080660
4        1048230                   AHA         4848960                   AHA         2160528
5        1010773                   AHA          252720                   AHA         2609750


Output DF:
   customer_code cate_level_1.22212113  AHA.22212113 cate_level_1.22212118  AHA.22212118
0        1023506                   AHA      15065904                   AHA      13837150
1        1036996                   AHA       2317445                   AHA       1247550
2        1072231                   NaN             0                   NaN       9435310
3        1003937                   AHA       1078560                   AHA       1080660
4        1048230                   AHA       4848960                   AHA       2160528
5        1010773                   AHA        252720                   AHA       2609750
</code></pre>
</div>
<span class="comment-copy">@JoeT.Boka I did my best, I think the code is correct, but the problem is, it takes too long and my computer is not that super computer..</span>
<span class="comment-copy">Might be easier if you showed a sample of <code>df.columns</code> and what the expected output is... At the moment - it's unclear why you've got a doubly nested loop and what you're trying to do as it appears it's not just to rename columns but rather other stuff which'll be why it's slow... renaming a set of columns is not...</span>
<span class="comment-copy">@JoeClements No, I just wants to rename the column. I added a another picture that 3rd column just changed into AHA.22212113 from sales.22212113. Every cate_level_1 column only has one value or nans.. please feel free to ask me if there's any other unclear things. thanks</span>
<span class="comment-copy">@Coincidence_Alpha it doesn't help posting images - it's much more readable and findable if you post text in a codeblock. That aside - that first AHA. column would have been called sales.xxxxx - but is now renamed based on the precent column with the same code? How is that just AHA when there's a NaN there and what happens if there's more than one unique code?</span>
<span class="comment-copy">@JonClements no they only have one code, it's unique and just basically tri-code.</span>
<span class="comment-copy">it says : IndexError: single positional indexer is out-of-bounds..</span>
<span class="comment-copy">Is it possible that one of your <code>cate_level</code> columns is all NaN?</span>
<span class="comment-copy">Throw a <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">try/except block</a> around the dictionary assignment that catches <code>IndexError</code>s. Set the <code>except</code> portion to add <code>'???' + num</code> as a value instead.</span>
