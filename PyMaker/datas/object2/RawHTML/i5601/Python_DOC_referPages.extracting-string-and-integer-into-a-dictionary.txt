<div class="post-text" itemprop="text">
<p>I am trying to understand how I can extract a particular type of string into a dictionary with its values.</p>
<p>Ex:  </p>
<blockquote>
<p>item SHIRT 11-14 variance 11-12-13-14-15 color Red</p>
</blockquote>
<p>where </p>
<pre><code>ShirtType: 11, 14
variance: 11,12,13,14,15
color: Red
</code></pre>
<p>Would love the idea of using regexp and see how that can be achieved in Python? All ideas are welcome.</p>
</div>
<div class="post-text" itemprop="text">
<p>if your input is always like that you can use <code>regex</code> to extract the values and insert them into a dictionary:</p>
<pre><code>import re

dic = {}
input = 'item SHIRT 11-14 variance 11-12-13-14-15 color Red'
dic['Shirt Type'] = re.search('(?&lt;=SHIRT\s)[\d-]+', input).group().split('-')
dic['Variance'] = re.search('(?&lt;=variance\s)[\d-]+', input).group().split('-')
dic['Color']= re.search('(?&lt;=color\s)\w+', input).group().split('-')
print(dic)
</code></pre>
<p>the result will be a dictionary with 3 <code>keys</code> and each <code>value</code> will be an array (size of array depends on the input and the number of the <kbd>-</kbd> in it) for example this is the result of your input:</p>
<pre><code>{'Shirt Type': ['11', '14'], 'Variance': ['11', '12', '13', '14', '15'], 'Color': ['Red']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import re
s = "item SHIRT 11-14 variance 11-12-13-14-15 color Red"
new_s = s.split()[1:]
final_data = {"ShirtType" if a == "SHIRT" else a:map(int, b.split('-')) if re.findall('\d\-', b) else b for a, b in [(new_s[i], new_s[i+1]) for i in range(0, len(new_s)-1, 2)]}
</code></pre>
<p>Output:</p>
<pre><code>{'color': 'Red', 'ShirtType': [11, 14], 'variance': [11, 12, 13, 14, 15]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use below <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>regex</code></a> expressions to extract the required values from the string. Here's the one-liner to get the desired <code>dict</code>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; my_str = "item SHIRT 11-14 variance 11-12-13-14-15 color Red"
&gt;&gt;&gt; keys = ["shirt", "variance", "color"]

&gt;&gt;&gt; {k: v.split('-') if '-' in v else v for k, v in zip(keys, re.findall(
        '(?&lt;=SHIRT\s)[\d-]+|(?&lt;=variance\s)[\d-]+|(?&lt;=color\s)\w+',my_str))}
</code></pre>
<p>which will return the <code>dict</code> object as:</p>
<pre><code>{'color': 'Red', 'variance': ['11', '12', '13', '14', '15'], 'shirt': ['11', '14']}
</code></pre>
<p><strong>Explanation</strong> of each regex pattern:</p>
<pre><code># For shirt: 
#     This regex matches the number and hyphen "-" 
#     preceded by "variance" and space " "
&gt;&gt;&gt; re.search('(?&lt;=SHIRT\s)[\d-]+', my_str).group()
'11-14'       

# For variance:
#     Same as the above regex, it matches the number and hyphen "-" 
#     preceded by "SHIRT" and space " "
&gt;&gt;&gt; re.search('(?&lt;=variance\s)[\d-]+', my_str).group()
'11-12-13-14-15'

# For color:
#     This regex matches the alphabets followed by "color" and space " "
&gt;&gt;&gt; re.search('(?&lt;=color\s)\w+', my_str).group()
'Red'
</code></pre>
<p>Using this you can assign each key individually to your <code>dict</code> explicitly too. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can also try without using regex:</p>
<p>One line solution:</p>
<pre><code>print({line.split()[1:][i:i+2][0]:line.split()[1:][i:i+2][1] for line in open('file.txt','r') for i in range(0,len(line.split()[1:]),2)})
</code></pre>
<p>output:</p>
<pre><code>{'color': 'Red', 'variance': '11-12-13-14-15', 'SHIRT': '11-14'}
</code></pre>
<p>Detailed version:</p>
<pre><code>with open('file.txt','r') as f:
    for line in f:
        chunk=line.split()[1:]
        print({chunk[i:i+2][0]:chunk[i:i+2][1] for i in range(0,len(chunk),2)})
</code></pre>
</div>
<span class="comment-copy">Only use python2/python3 tags for <b>version specifc questions</b>.</span>
<span class="comment-copy">is the text always static for the <code>item SHIRT</code>, <code>variance</code>, <code>color</code> part ?</span>
<span class="comment-copy">Added <a href="https://stackoverflow.com/a/48045525/2063361">one-liner solution</a> to get your desired result</span>
<span class="comment-copy">I tried dic['Color']= re.search('(?&lt;=color\s)\w+', input).group().split('-'), but getting an error as TypeError: expected string or bytes-like object. Can it not be an array type for color? since it will always have one color</span>
<span class="comment-copy">remove the <code>split('-')</code> so it returns a string</span>
<span class="comment-copy">great, got it working, actually I was using input and should have replaced with the declared string itself.</span>
