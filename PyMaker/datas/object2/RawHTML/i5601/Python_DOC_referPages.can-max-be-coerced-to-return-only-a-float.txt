<div class="post-text" itemprop="text">
<p>I have a class that has two attributes (index and value).  I want to be able to call max and return only the value(which is a float).</p>
<pre><code>p = [Point(1, 23.33), Point(2, 12.3)]
max(p)
#&lt;Point object at 0x1052d4eb8&gt; 
# I would like to see 23.33
# float(max(p)) returns the float but I want to be able to use the max function by it self
</code></pre>
<p>Is there a method in the data model that I can override to force <code>max</code> to return just the float?  The entire class below.</p>
<p>Python 3.6</p>
<pre><code>class Point:                                                                                                                                                                                                                                                                                                                
      """ a set of data indexed by time """                                                                                                                                                                                                                                                                                   
      def __init__(self, index, value):                                                                                                                                                                                                                                                                                       
          self._index = index                                                                                                                                                                                                                                                                                                 
          self._value = value                                                                                                                                                                                                                                                                                                 

      def __float__(self):                                                                                                                                                                                                                                                                                                    
          return float(self._value)                                                                                                                                                                                                                                                                                           

      def __add__(self, other):                                                                                                                                                                                                                                                                                               
          return float(self._value) + other                                                                                                                                                                                                                                                                                   

      def __radd__(self, other):                                                                                                                                                                                                                                                                                              
          return self.__add__(other)                                                                                                                                                                                                                                                                                          

      def __lt__(self, other):                                                                                                                                                                                                                                                                                                
          return self._value &lt; float(other)                                                                                                                                                                                                                                                                                   

      def ___le__(self, other):                                                                                                                                                                                                                                                                                               
          return self._value &lt;= float(other)                                                                                                                                                                                                                                                                                  

      def __eq__(self, other):                                                                                                                                                                                                                                                                                                
          return self._value == float(other)                                                                                                                                                                                                                                                                                  

      def __ne__(self, other):                                                                                                                                                                                                                                                                                                
          return self._value != float(other)                                                                                                                                                                                                                                                                                  

      def __gt__(self, other):                                                                                                                                                                                                                                                                                                
          return self._value &gt; float(other)                                                                                                                                                                                                                                                                                   

      def __ge__(self, other):                                                                                                                                                                                                                                                                                                
          return self._value &gt;= float(other) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">documentation</a>, you can use any iterable: for instance you can iterate the values like this:</p>
<pre><code>points = [Point(1, 23.33), Point(2, 12.3)]
m = max(p._value for p in points)
</code></pre>
<p>Or iterate using <code>float</code>:</p>
<pre><code>m = max(float(p) for p in points)
</code></pre>
</div>
<span class="comment-copy">This sounds like a really bad idea. Just call <code>float</code>.</span>
<span class="comment-copy">do you have have a method to override? why not just define a function that does the coercion as a member function so you can then do: <code>p.max()</code> ?</span>
<span class="comment-copy">Also, <code>___le__</code> has an extra <code>_</code>, and you should check the type of the other operand in your operator overloads (and return <code>NotImplemented</code> for unsupported other operands).</span>
<span class="comment-copy">I'm curious. Why you do need this weird behavior?</span>
<span class="comment-copy"><code>max</code> is going to give the maximum of the objects you feed to it, it isn't going to do an automatic conversion - that's not its job.</span>
