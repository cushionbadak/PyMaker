<div class="post-text" itemprop="text">
<p>I am trying to remove parentheses and the text that resides in these parentheses, as well as hyphen characters. Some string examples look like the following:<br/>
<code>example = 'Year 1.2 Q4.1 (Section 1.5 Report (#222))'</code><br/>
<code>example2 = 'Year 2-7 Q4.8 - Data markets and phases' ##there are two hyphens</code> </p>
<p>I would like the results to be:  </p>
<pre><code>example = 'Year 1.2 Q4.1'  
example2 = 'Year 2-7 Q4.8'  
</code></pre>
<p>How can I remove text residing within or following parentheses and special characters? I could only find <code>str.strip()</code> method. I am new to Python, so any feedback is greatly appreciated! </p>
</div>
<div class="post-text" itemprop="text">
<p>You may use below regex to get the desired result:</p>
<pre><code>"\(.*\)|\s-\s.*"
#   ^     ^  Pattern 2: everything followed by space, '-' hyphen, space
#   ^   Pattern 1: everything within brackets (....)
</code></pre>
<p>Sample run:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; my_regex = "\(.*\)|\s-\s.*"

&gt;&gt;&gt; example = 'Year 1.2 Q4.1 (Section 1.5 Report (#222))'
&gt;&gt;&gt; example2 = 'Year 2-7 Q4.8 - Data markets and phases'

&gt;&gt;&gt; re.sub(my_regex, "", example)
'Year 1.2 Q4.1'
&gt;&gt;&gt; re.sub(my_regex, "", example2)
'Year 2-7 Q4.8'
</code></pre>
<p>Here I am using <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><strong><code>re.sub(pattern, repl, string, ...)</code></strong></a> which as the document says:</p>
<blockquote>
<p>Return the string obtained by replacing the leftmost non-overlapping
  occurrences of pattern in string by the replacement <em>repl</em>. If the
  pattern isnâ€™t found, <em>string</em> is returned unchanged. <em>repl</em> can be a
  string or a function; if it is a string, any backslash escapes in it
  are processed.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>We can do this using a * and a throwaway variable.</p>
<pre><code>example = 'Year 1.2 Q4.1 (Section 1.5 Report (#222))'
display,*_ = example.split('(')
print(display)

example2 = 'Year 2-7 Q4.8 - Data markets and phases' ##there are two hyphens
part_1,part_2,*_ = example2.split('-')
display = part_1 + '-'+ part_2
print(display)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try something like this , you will need little data cleaning after you fetch result to make it as your desired output: </p>
<pre><code>import re
data=[]
pattern=r'\(.+\)|\s\-.+'
with open('file.txt','r') as f:
    for line in f:
        match=re.search(pattern,line)
        data.append(line.replace(match.group(),'').strip())

print(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is an example without regex (just to show you have good regex can be):</p>
<p>The code adds strings until a string starts with <code>Q</code>:</p>
<pre><code>example = 'Year 1.2 Q4.1 (Section 1.5 Report (#222))'

def clean_string(s):
    for item in s.split():
        yield item
        if item.startswith('Q'):
            break

print(' '.join(clean_string(example)))
</code></pre>
</div>
<span class="comment-copy">There are many ways. You should have a look at doing it with regex. I tagged it with regex and soon the regex sharks will be here.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/4697006/python-split-string-by-list-of-separators">Python: Split string by list of separators</a></span>
<span class="comment-copy">@AntonvBR lol.  The regex sharks are circling the waters</span>
