<div class="post-text" itemprop="text">
<p>I know that this question will be maybe marked as a duplicate, but I already read the other ones and they didnÂ´t help me. </p>
<p>I have files that looks like this. I want to delete every character before the 
<code>&lt;?xml</code></p>
<p>The example text.</p>
<pre><code>21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.
</code></pre>
<p>I tried to do it with:</p>
<pre><code>sep = "&lt;?xml"
result = text.split(sep, 1)[-1]
</code></pre>
<p>But the result cuts away my delimiter.
The resulting text.</p>
<pre><code>version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.
</code></pre>
<p>Any suggestions of how to avoid that so that the final result looks like this.</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't really need to use <code>split</code> for this.  Just find the substring, then use the result to index into the string:</p>
<pre><code>s = "21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;soapenv:Env ..."
r = s[s.index("&lt;?xml"):]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just append it before the result of split e.g.</p>
<pre><code>text = '21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.'
sep = "&lt;?xml"
result = sep + text.split(sep, 1)[-1]
print(result)
</code></pre>
<p>prints </p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Refer some ways below:</p>
<h1>1. Just concate seperator with split result</h1>
<pre><code>In [2]: text
Out[2]: '21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.\n'

In [3]: sep = "&lt;?xml"

In [4]: result = sep + text.split(sep, 1)[-1]

In [5]: result
Out[5]: '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.\n'
</code></pre>
<h1>2. get index an print rest of content</h1>
<pre><code>In [8]: text[text.index(sep):]
Out[8]: '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.\n'
</code></pre>
<h1>3. Using regex</h1>
<pre><code>In [9]: import re
In [10]: re.sub(r'(.*)&lt;?xml', r'&lt;?xml', text)
Out[10]: '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this,
We will add custom unique delimiter with our usual delimiter, and then split with this custom delimiter in this case <code>$</code>, keeping our original delimiter intact.</p>
<pre><code>text = '21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.'
result = text.replace("&lt;?xml", "&lt;?xml$").split('$')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Unless there is a particular requirement to split the string and use regex then I would perform simple string manipulation. Find where <code>?xml</code> begins and get the characters to the left of this position:</p>
<pre><code>str = "21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;soapenv:Env etc. etc."

ind = str.index("?xml")
print(ind)
print(str[0:ind - 1])


45
21.12.2017 18:31    1   CI-99   1   403-26 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>unless you have use <code>split</code> for some reason you can find the <code>index</code> of <code>&lt;?xml</code> and start the <code>string</code> from there:</p>
<pre><code>text = '21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.'
index = text.index('&lt;?xml')
text = text[index:]
print(text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i can think of 2 ways to keep the<code>&lt;?xml</code> after the split:</p>
<p>add sep to the start of the string manually </p>
<pre><code>sep = "&lt;?xml"
result = sep + text.split(sep, 1)[-1]
</code></pre>
<p>or maybe a more elegant solution would be to find the <code>&lt;?xml</code> and slice the string just before it (assuming you know that it is actually there)</p>
<pre><code>sep = "&lt;?xml"
index = text.find(sep)
result = text[index:]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could find the start of <code>'&lt;?xml'</code> with <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">str.find()</a>, then slice the string at this index:</p>
<pre><code>&gt;&gt;&gt; text = '21.12.2017 18:31    1   CI-99   1   403-26  &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.'
&gt;&gt;&gt; text[text.find('&lt;?xml'):]
'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;soapenv:Env etc. etc.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just search for your sep in text with <code>index</code> method:</p>
<pre><code>sep = '&lt;?xml'
result = text[text.index(sep):]
</code></pre>
</div>
<span class="comment-copy">WOW thank you very much i thought it would be more difficult. Thany you all who wrote me i will document the answers</span>
<span class="comment-copy">BTW is there something like a Closed button for the topic ? My answer is perfectly 	answered. Even more i can even choose.</span>
<span class="comment-copy">@Computer85 You can "accept" the anwer that best resolves your problem.</span>
<span class="comment-copy">Can i accept more than one answer ? Because there are some that are great.</span>
<span class="comment-copy">@Computer85 No, you can only accept one answer.</span>
<span class="comment-copy">WOW thank you very much i thought it would be more difficult.</span>
<span class="comment-copy">Thank you too for the hard work and for giving a few possibilities.</span>
<span class="comment-copy">If it helps you, you can upvote and/or accept as answer</span>
