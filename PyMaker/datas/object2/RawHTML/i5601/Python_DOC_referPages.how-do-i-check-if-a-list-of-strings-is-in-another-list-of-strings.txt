<div class="post-text" itemprop="text">
<p>Example</p>
<pre><code>description = ['This is a random sentence. I like to travel and stuff','Hello world', 'Things on my bucket list, travel']

my_list = ['travel','fire']
</code></pre>
<p>I would like to check if ANY of the words on my_list is in description, if so don't do anything. If my_list is not in description I would like to return the string 'Keywords not found'. </p>
<p>How would I go about writing this code?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>all</code> with a double list comprehension:</p>
<pre><code>description = ['This is a random sentence. I like to travel and stuff','Hello world', 'Things on my bucket list, travel']
my_list = ['travel','fire']
def response():
   return "found" if any(i in b for i in my_list for b in description) else "Keywords not found"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Save words in a set and check whether a word in <code>my_list</code> is in the set. This <strong>only</strong> works when there is no phrases in <code>my_list</code>. i.e. all words in <code>my_list</code> is a unigram.</p>
<pre><code>description = ['This is a random sentence. I like to travel and stuff','Hello world', 'Things on my bucket list, travel']
my_list = ['travel','fire']
set_words_in_description = set()
for s in description:  
    # add new words in set_words_in_description
    set_words_in_description.update(set(w for w in s.split())) 
</code></pre>
<p>Using <code>isdisjoint</code> </p>
<pre><code>def find_word_method_disjoint(my_list, set_words_in_description):
    # check if my_list is disjoint with set_wrods_in_description
    return not set_words_in_description.isdisjoint(my_list)

%timeit find_word_method_disjoint(my_list, set_words_in_description)
189 ns ± 1.53 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)

%timeit response()  # function given by the accepted answer.
572 ns ± 9.3 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall()</code></a> to extract all the words from the sentences in <code>description</code>, and check if any of the words from <code>my_list</code> exist in it:</p>
<pre><code>import re

def find_words(words, text):
    desc_words = re.findall(r'[^\s,.]+', "".join(text))

    for word in words:
        if word in desc_words:
            return "found"

    return "Keywords not found"
</code></pre>
<p>Which outputs:</p>
<pre><code>&gt;&gt;&gt; description = ['This is a random sentence. I like to travel and stuff','Hello world', 'Things on my bucket list, travel']
&gt;&gt;&gt; my_list = ['travel','fire']
&gt;&gt;&gt; find_words(my_list, description)
found
</code></pre>
<p>Or you could use this <code>set()</code> approach:</p>
<pre><code>def find_words(words, text):
    return "found" if set(words).intersection(re.findall(r'[^\s,.]+', "".join(text))) else "Keywords not found"
</code></pre>
<p><strong>Note:</strong> You will have to update your regular expression if you come across sentences with different punctuation other than <code>,.</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try set something like this ? </p>
<pre><code>description = ['This is a random sentence. I like to travel and stuff','Hello world', 'Things on my bucket list, travel']

my_list = ['travel','fire']

flat=[k for i in description for k in i.split()]


print(any({i}.issubset(set(flat))for i in my_list))
</code></pre>
<p>output:</p>
<pre><code>True
</code></pre>
</div>
<span class="comment-copy">Does "the usual way" help you?</span>
<span class="comment-copy">Will your words in <code>my_list</code> contain phrases?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3271478/check-list-of-words-in-another-string">Check list of words in another string</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/11328940">Check if list item contains items from another list</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/4843158">Check if a python list item contains a string inside another string</a></span>
<span class="comment-copy">Any comment downvoter?</span>
<span class="comment-copy">i think he downvoted everyone :P strange peoples.</span>
<span class="comment-copy">@AyodhyankitPaul Yeah unfortunately. I don't understand downvoters who don't comment.</span>
<span class="comment-copy">Yeah, I upvoted the other answers because It looks silly to have all the answers downvoted.</span>
<span class="comment-copy">yup i also did that , good work.</span>
