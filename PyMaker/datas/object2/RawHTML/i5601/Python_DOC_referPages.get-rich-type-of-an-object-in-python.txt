<div class="post-text" itemprop="text">
<p>Builtin type() only returns basic types. Is there a corresponding version that supports rich types as in the typing module? I'm trying to check whether a variable is of a specific type. For example:</p>
<pre><code># This function doesn't exist
&gt;&gt;&gt; typing.type(ConnectionOptions)
&gt;&gt;&gt; Dict[str, str]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can check variable name with error handling. Use  <em>try-except</em> statement.</p>
<pre><code>try:
  Dict[str, str]

except NameError:
   print("Oops!  That was not a variable name")
</code></pre>
<p>There is more information here. <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/errors.html</a></p>
</div>
<span class="comment-copy">look at the <code>isinstance (object, type)</code> function, <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#isinstance</a>. <code>isinstance (your_own_object, ConnectionOptions)</code>, true if your_own_object is type of ConnectionOptions</span>
<span class="comment-copy">This doesn't return the type, though. Is there a way to actually check the type of a variable? There must be, since IDE displays it. Or do they test for all possible types?</span>
<span class="comment-copy">@Nijan Could you describe why you need this functionality? Checking for types in Python is generally considered an anti-pattern. The IDE is likely doing meta-analysis by reading your source code.</span>
<span class="comment-copy">I see, the same thing you use type() for. To check if a parameter to a public class method call is of the right type. If not type(connect) != Connection: raise ValueError</span>
<span class="comment-copy">I don't think this answers the question. That runs, but it doesn't do anything.</span>
