<div class="post-text" itemprop="text">
<p>I have a XML file which has to be parsed for the following conditions . </p>
<ol>
<li><p>G1, G22, G15 in section D1 From D4 section, extract PARAMCODE,
    UNIT AND VALUE for all the IP INTERVAL only for "30-11-2017". Do not
    hard code this date but store in a variable for comparison</p></li>
<li><p>Calculate Time value from INTERVAL value of IP section for the date.
    for E.g. if interval = 1, TIME = 00:30:00 and increment by 30 min's.
    If INTERVAL = 2, TIME = 01:00:00, if INTERVAL =3 TIME = 01:30:00 so
    on.</p></li>
</ol>
<p>I am able to parse into its main directory but not able to deep down
    further. Can anyone help me with this.
This is something I tried.</p>
<pre><code>from xml.etree import ElementTree 
with open('input.XML', 'rt') as f:
tree = ElementTree.parse(f)
for node in tree.iter():
print(node.tag, node.attrib)
</code></pre>
<p>This is my input file looks like</p>
</div>
<div class="post-text" itemprop="text">
<p>Values can be obtained using XPath, like this (Linux command line, XPath works or python too) for PARAMCODE attribute</p>
<pre><code>xmllint --xpath '//D4/DAYPROFILE[@DATE="30-11-2017"]/IP[@INTERVAL]/PARAMETER/@PARAMCODE' your_file.xml
</code></pre>
<p>Output sample:</p>
<pre><code>PARAMCODE="P7-3-5-2-0" PARAMCODE="P7-1-5-2-0" PARAMCODE="P7-2-1-2-0" PARAMCODE="P7-2-4-2-0" PARAMCODE="P1-2-1-4-0"
</code></pre>
<p>Then you can do any calculation you want with those values.
If you want interval=1, the XPath could be:</p>
<pre><code>'//D4/DAYPROFILE[@DATE="30-11-2017"]/IP[@INTERVAL="1"]/PARAMETER/@PARAMCODE'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, we need to add your missing closing tags:</p>
<pre class="lang-xml prettyprint-override"><code>        &lt;/IP&gt;
      &lt;/DAYPROFILE&gt;
    &lt;/D4&gt;
  &lt;/UTILITYTYPE&gt;
&lt;/CDF&gt;
</code></pre>
<p>Now, you can use either the <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.find" rel="nofollow noreferrer"><code>.find()</code></a>
 or the <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findall" rel="nofollow noreferrer"><code>.findall()</code></a>
method (<code>.find()</code> will return a single element, while <code>.findall()</code> will return
multiple elements). The syntax for finding elements is a little weird, but
this should work:</p>
<pre><code>d1 = tree.find('.//D1') # D1 is a decendant of the tree.
d4 = tree.find('.//D4') # D4 is a decendant of the tree.
</code></pre>
<p>From here you can find your G values:</p>
<pre><code>g1 = d1.find('G1') # G1 is a direct child of D1.
g1_value = g1.text

# Handle the value however you need, and do something similar for the
# remaining G elements.
</code></pre>
<p>Now to find your IP values:</p>
<pre><code>for ip in d4.findall('.//IP'): # IPs are decendants of D4.
    # Get each parameter.
    for param in ip.findall('PARAMETER'): # PARAMETERs are direct children of IPs.
        # Get parameter attributes.
        param_code = param.attrib['PARAMCODE']
        param_value = param.attrib['VALUE']
        param_unit = param.attrib['UNIT']

        # Handle the IP parameters.

    # Handle any final things for the IP element. 
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/1319385/369450">Using XPath in ElementTree</a>.</span>
<span class="comment-copy">@cpburnz I want to get details of how to parse down further without knowing structure of xml in first hand or any other way.</span>
<span class="comment-copy">It will be very hard to write code to parse XML without knowing the structure. On the other hand, when it comes to XML question it's better to post short examples that are valid XML (your is incomplete, which makes a bit harder to help you) and must be properly formatted.</span>
<span class="comment-copy">your answer could be improved starting at //D4/DAYPROFILE[@DATE="30-11-2017"] instead of //D4 ;)</span>
<span class="comment-copy">@LuisMuñoz Good point. I see you already have that in your answer so I'll leave it out of mine. I was trying to give a more general answer for how to navigate through elements instead of doing the whole homework problem.</span>
<span class="comment-copy">your answer is good in that adds python specifics ;).  Noumi should be able to get something from both answers. It's an XML question to me, not python specific.</span>
<span class="comment-copy">@LuisMuñoz How to use Xpath to calculate interval , didn't get from this xmllint --xpath '//D4/DAYPROFILE[@DATE="30-11-2017"]/IP[@INTERVAL]/PARAMETER/@PARAMCODE' 'input.xml'</span>
<span class="comment-copy">XPath helps to extract specific data from the XML code but calculations are better on python side. You can mix @cpburnz answer and mine for example to get the day you are interested in as "d4 = tree.find('//D4/DAYPROFILE[@DATE="30-11-2017"]')". Then iterate all interval attributes as "for ip in d4.findall('IP/@INTERVAL')" and do your calculations. And so on. Hope that helps.</span>
