<div class="post-text" itemprop="text">
<p>I'm doing this code excercise for trying out functional programming in python, and I ran into problems with sum(), list(), and map objects. I don't understand what I'm doing wrong, but the list() function seems to be screwing with my map object.</p>
<p>This is the code I have:</p>
<pre><code>people = [{'name': 'Mary', 'height': 160},
          {'name': 'Isla', 'height': 80},
          {'name': 'Sam'}]

heights = map(lambda x: x['height'], filter(lambda x: 'height' in x, people))

print(len(list(heights)))
print(sum(list(heights)))
print(len(list(heights)))

average_height = sum(list(heights)) / len(list(heights))
print(average_height)
</code></pre>
<p>heights should be a map object containing (or resulting in) a list of the two existing height entries: [160, 80].</p>
<p>printing the length should give 2, the sum of the two should obviously be 240, and the average should be 120.</p>
<p>The problem I'm facing, though, is that I get this error message:</p>
<pre><code>2
0
0
Traceback (most recent call last):
  File "C:\Users\Hugo\Dropbox\Programmering\PythonProjekt\exercise2.py", line 12, in &lt;module&gt;
    average_height = sum(list(heights)) / len(list(heights))
ZeroDivisionError: division by zero
</code></pre>
<p>Yes, the length is right, but the sum is 0, and the second length print is 0 aswell. The whole zero-division fault must come from something there, and it seems that the list() function is causing it. Changing the print order still only lets through the first print statement correctly:</p>
<pre><code>print(sum(list(heights)))
print(len(list(heights)))
print(len(list(heights)))
</code></pre>
<p>Gives:</p>
<pre><code>240
0
0
Traceback (most recent call last):
  File "C:\Users\Hugo\Dropbox\Programmering\PythonProjekt\exercise2.py", line 12, in &lt;module&gt;
    average_height = sum(list(heights)) / len(list(heights))
ZeroDivisionError: division by zero
</code></pre>
<p>and removing the list() function:</p>
<pre><code>print(sum(list(heights)))
print(len(heights))
print(len(list(heights)))
</code></pre>
<p>gives me:</p>
<pre><code>240
Traceback (most recent call last):
  File "C:\Users\Hugo\Dropbox\Programmering\PythonProjekt\exercise2.py", line 9, in &lt;module&gt;
    print(len(heights))
TypeError: object of type 'map' has no len()
</code></pre>
<p>So I have no idea what's going on. The list() function should not be changing the map object in any way, right? And it stays a map object, but calling list() on it more than once seems to change its behaviour. I am confuse.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, calling <code>list</code> does change your <code>map</code> object. <code>map</code> is an iterator, not a data structure (in Python3). After it has been looped over once, it is exhausted. To reproduce the result, you need to recreate the map object.</p>
<p>In your case, what you probably want to do is create a list from the map to store the result, then perform the <code>sum</code>.</p>
<pre><code>heights = list(heights)
average = sum(heights) / len(heights)
</code></pre>
<h3>Edit: another approach.</h3>
<p>You can calculate arithmetic mean (and other statistics) directly from iterators using the statistics module. Check out <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer">the docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a list by iterating over your <code>map</code> structure to avoid exhausting the iterator with every list call:</p>
<pre><code>people = [{'name': 'Mary', 'height': 160},
      {'name': 'Isla', 'height': 80},
      {'name': 'Sam'}]

heights = [i for i in map(lambda x: x['height'], filter(lambda x: 'height' in x, people))]
average_height = sum(heights)/len(heights)
</code></pre>
<p>Output:</p>
<pre><code>120.0
</code></pre>
</div>
<span class="comment-copy">What are you trying to get? the average height?</span>
<span class="comment-copy">You exhausted the <code>map</code> iterator, and never saved the result...</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/47936065/why-this-print-changing-the-following-result">Why this print changing the following result?</a></span>
<span class="comment-copy">I would like to add the idea of a 'generator' to this answer. Here is some food for though <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">wiki.python.org/moin/Generators</a>.</span>
<span class="comment-copy">Good thought @ziyad, understanding the difference between lists, iterators and generators is essential python knowledge!</span>
<span class="comment-copy">When I run the code given in the question, heights does give me a list of [160, 80], why is that? Why does the code run perfectly for me? I am using Python 2.7.</span>
<span class="comment-copy">@FatihAkici In Python 2.7 <code>map</code> would return a list. See <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#map</a></span>
<span class="comment-copy">@ZiyadEdher just to be clear, <code>map</code> is not generator...</span>
