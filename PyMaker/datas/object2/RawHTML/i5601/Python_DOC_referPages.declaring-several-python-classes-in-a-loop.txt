<div class="post-text" itemprop="text">
<p>I have a generic class definition, something like this -  </p>
<pre><code>class Foo(object):
    property = 1
    def __init__(self, ...):
    ...
</code></pre>
<p>I wish to create a large number of classes, each of which has a different value of <code>property</code>, and store these classes in a list. The classes in this list will be subsequently used to create several objects.</p>
<p>What is the best way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>While I doubt that there isn't a better solution to whatever your underlying problem might be, you can create classes dynamically using <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer"><code>type</code></a>:</p>
<pre><code>class Foo(object):
  def __init__(self, x):
    self.x = x

#  class-name---vvvvvvvvvvvvvvvvv          vvvvvvvvvvvvvvv--class-attributes  
klasses = [type('Foo{}'.format(n), (Foo,), {'property': n}) for n in range(5)]
#                   parent-classes ^^^^^^

klasses[4]
# &lt;class '__main__.Foo4'&gt;

klasses[4].property
# 4

inst = klasses[4]('bar')
inst.x
# 'bar'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>c = []
for i in range(5):
  class X(object):
    property = i
    def __init__(self):
      print(self.property)
  c.append(X)

c[0]()  # will print 0
c[4]()  # will print 4
</code></pre>
<p>But this has a bunch of drawbacks.  I also think that the comment given below the question is remarkable.  Very likely you strive for a solution which is not the best for your original problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to do it, then sure you can create classes dynamically using <code>type</code></p>
<pre><code>class BaseClass(object):
    # the code that needs to be common among all classes

properties = [1, 2, 3]
classes = [type("class_{0}".format(i), (BaseClass,), {'property': property}) for i, property in enumerate(properties)]
</code></pre>
<p>However, you probably need to think about your design. I don't know about the problem you want to solve, but perhaps keeping the property variable as instance one would make more sense.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the best way would just be to iterate i=0 to n-1, appending a new object to the end of the list. You can then use i to index into the list and change the value of <code>property</code> that way.</p>
</div>
<span class="comment-copy">If that's the only difference between the classes, what's the point in having multiple classes at all? This smells like an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>.</span>
<span class="comment-copy">The code will be consistent. My list is already populated with a number of classes (different from the template above), and I would like to populate this list with classes rather than the values of <code>property</code></span>
<span class="comment-copy">Is it possible to keep the class definition outside the <code>for</code> loop?</span>
<span class="comment-copy">Not if you want to have a <i>bunch of classes</i>.  Which is very questionable to begin with.  Maybe metaclasses are an approach for your task.  There's a very popular question about them here with a magnificent answer explaining them in great detail.</span>
