<div class="post-text" itemprop="text">
<p>I have an Employee class with a Manager class, and each employee created will get the attributes of the Employee class and even the Manager too.</p>
<p>My question is that I want to create an input option that will ask the manager to input the employee that he would like to add to its supervision (to add it to its list of employees) and it will add the employees attributes as well
(I know the last 3 lines are at fault, I just can't figure it out).</p>
<pre><code>class Employee:

        def __init__(self,first,last,pay):    
                self.first = first
                self.last = last
                self.pay = pay
                self.email = first+'.'+last+'@company.com'

        def fullname(self):
                return '{} {}'.format(self.first,self.last)

class Manager(Employee): 

        def __init__(self,first,last,pay,employees=None):
                super().__init__(first,last,pay)
                if employees is None:
                    self.employees = []
                else:
                    self.employees = employees

        def add_emps(self,emp):
                if emp not in self.employees:
                    self.employees.append(emp)
                else:
                    print('the employee is already in your supervise')

        def print_emps(self):
                for em in self.employees:
                    print('--&gt;',em.fullname())

emp_1 = Employee('Mohamad','Ibrahim',90000)

emp_2 = Employee('Bilal','Tanbouzeh',110000)

emp_3 = Employee('Ghalia','Awick',190000)

emp_4 = Employee('Khaled','Sayadi',80000)

mngr_1 = Manager('Ibrahim','othman',200000,[emp_1,emp_2])

mngr_2 = Manager('Rayan','Mina',200000,[emp_3,emp_4])

add_them = input('enter the employee you would like to add')

mngr_1.add_emps(add_them)

mngr_1.print_emps()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're not familiar with dictionaries, I'll give you a quick run down, but you should really read up on <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">PyDocs</a>, and the general Wikipedia entry on <a href="https://en.wikipedia.org/wiki/Hash_table" rel="nofollow noreferrer">Hash Tables</a>.</p>
<pre><code>a = {} # create an empty dictionary
a['some_key'] = "Some value" # Equivalent of creating it as a = {'some_key': "Some value"}
# Dictionaries are stored in "key, value pairs" that means one key has one value.
# To access the value for a key, we just have to call it
print(a['some_key'])
# What if we want to print all values and keys?
for key in a.keys():
    print("Key: " + key + ", Value: " + str(a[key]))
</code></pre>
<p>Now to answer your actual question. I constructed a dictionary of employees and just added the employee's key to the manager from the dictionary. I also showed two ways of constructing the dictionary: one where you add values when you're creating the <code>dict</code>, and the other with adding values later.</p>
<pre><code>class Employee:

        def __init__(self,first,last,pay):
                self.first = first
                self.last = last
                self.pay = pay
                self.email = first+'.'+last+'@company.com'

        def fullname(self):
                return '{} {}'.format(self.first,self.last)

class Manager(Employee):

        def __init__(self,first,last,pay,employees=None):
                super().__init__(first,last,pay)
                if employees is None:
                    self.employees = []
                else:
                    self.employees = employees

        def add_emps(self,emp):
                if emp not in self.employees:
                    self.employees.append(emp)
                else:
                    print('the employee is already in your supervise')

        def print_emps(self):
                for em in self.employees:
                    print('--&gt;',em.fullname())


employee_dict = {
    'Mohamad_Ibrahim': Employee('Mohamad','Ibrahim',90000),
    'Bilal_Tanbouzeh': Employee('Bilal','Tanbouzeh',110000)
}
employee_dict['Ghalia_Awick'] = Employee('Ghalia','Awick',190000)
employee_dict['Khaled_Sayadi'] = Employee('Khaled','Sayadi',80000)

mngr_1 = Manager('Ibrahim','othman',200000,[employee_dict['Mohamad_Ibrahim'],employee_dict['Bilal_Tanbouzeh']])
mngr_2 = Manager('Rayan','Mina',200000,[employee_dict['Ghalia_Awick'],employee_dict['Khaled_Sayadi']])

add_them = input('enter the employee you would like to add') # Expects the name like the keys are Firstname_Lastname

mngr_1.add_emps(employee_dict[add_them])

mngr_1.print_emps()
</code></pre>
</div>
<span class="comment-copy">You have four employees but no manager yet.</span>
<span class="comment-copy">mngr_1 is the manager which supervises emp_1 and emp_2, but i would like to have an input option that will ask him which emp that he would like to add to its list of supervision</span>
<span class="comment-copy">You have to get an Employee instance from the input. It might be a good idea to put all employees into a dictionary to retrieve them easily.</span>
<span class="comment-copy">do you have any idea how to get an Employee instance from the input? and for the other solution even if i put them all in a dictionary, how am i suppose to check them and take them out?</span>
<span class="comment-copy">thank you so so so much !!</span>
<span class="comment-copy">No problem, if the answer satisfies your question, make sure to mark it as "Answered"</span>
