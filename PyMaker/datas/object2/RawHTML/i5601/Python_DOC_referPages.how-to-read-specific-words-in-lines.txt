<div class="post-text" itemprop="text">
<p>I'm new to this and currently I'm trying to create a sign up and log in system for my assignment and I did this. </p>
<pre><code>def signUp(): #USER SIGN UP
    name=(str(input("Name: ")))
    intake=(str(input("Intake: ")))
    hp=(str(input("Phone Number: ")))
    email=(str(input("E-mail: ")))
    tp=(str(input("Student ID: ")))
    pw=(str(input("Password: ")))
    OccupantsData=[name,intake,hp,email,tp,pw]
    file=open("Database.txt","a")
    file.write(str(OccupantsData)+"\n")
    file.close()
</code></pre>
<p>When I run this code, it'll save all the inputs into 'Database.txt' like this</p>
<pre><code>    ['James', 'Jul17', '1234', 'etc@etc.com', 'TP1234', 'password']

    ['Jon', 'Sep17', '5567', 'etc1@etc.com', 'TP2345', 'passwords']

    ['Han', 'Oct17', '7554', 'etc2@etc.com', 'TP5546', 'passwords1']

    ['Klye', 'Oct17', '2234', 'etc3@etc.com', 'TP0094', 'passwords2']
</code></pre>
<p>Now, i'm not sure how code the login... It should take in the TPnumber and make sure it matches the password on the line... When I code it this way, it only works for the TPnumber and password on the first line and it will not work for others...</p>
<pre><code>def logIn(): #USER SIGN IN
    TP=str(input("Please input TP Number:"))
    password=input("Please input password:")
    f=open("Database.txt","r")
    user=f.read()
    if (TP) in user:
        if password in user:
            print("Welcome")
        else:
            print ("Username or Password doesn't match")
            logIn()
    else:
        print("Error")
        logIn()
</code></pre>
<p>What can I do to make it read the input username and password and not just the first line?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd recommend outputting a json file instead of a text file and look up data as a dictionary.  However, since you write lines that look like lists, you can evaluate the string as if it were an actual list with <code>ast.literal_eval()</code>.</p>
<p><strong>Given</strong></p>
<p>A file <code>Database.txt</code></p>
<pre><code>['James', 'Jul17', '1234', 'etc@etc.com', 'TP1234', 'password']
['Jon', 'Sep17', '5567', 'etc1@etc.com', 'TP2345', 'passwords']
['Han', 'Oct17', '7554', 'etc2@etc.com', 'TP5546', 'passwords1']
['Klye', 'Oct17', '2234', 'etc3@etc.com', 'TP0094', 'passwords2']
</code></pre>
<p>created from this refactored function:</p>
<pre><code>def signup():
    """User sign up."""
    name  = str(input("Name: "))
    intake = (str(input("Intake: ")))
    hp = str(input("Phone Number: "))
    email = str(input("E-mail: "))
    tp = str(input("Student ID: "))
    pw = str(input("Password: "))
    occupants_data = [name, intake, hp, email, tp, pw]

    # Safely open/close files
    with open("Database.txt", "a") as f:
        f.write(str(occupants_data) + "\n")
</code></pre>
<p><strong>Code</strong></p>
<pre><code>from ast import literal_eval


def login(): 
    """User sign in."""
    tp = str(input("Please input TP Number: "))
    password = str(input("Please input password: "))

    with open("Database.txt", "r") as f:
        for line in f.readlines():
            if not line or line =="\n":
                continue

            user_data = literal_eval(line)         # convert string-list to a list
            if tp == user_data[-2]:
                if password == user_data[-1]:
                    print("Welcome")
                    return
                else:
                    print ("Username or Password doesn't match")
                    return
        print("Error")
</code></pre>
<p><strong>Demo</strong></p>
<p><a href="https://i.stack.imgur.com/tMi4a.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/tMi4a.png"/></a></p>
<hr/>
<p><strong>Details</strong></p>
<p>The <code>signup()</code> function was refactored by:</p>
<ul>
<li>lowercase function name according to PEP8</li>
<li>extra parentheses removed</li>
<li>the <code>with</code> statement was used to safely open and close files</li>
</ul>
<p>This can be used to generate the <code>Database.txt</code> file.</p>
<p>The <code>login()</code> function was refactored by:</p>
<ul>
<li>lowercase function and variable names</li>
<li>converting the password input to a string</li>
<li>using a <code>with</code> statement to handle the file</li>
<li>iterating each line of the file, ignoring blank lines and newlines</li>
<li>list-like lines are converted to lists</li>
<li>rather than search lists, data is more quickly pulled from fixed indices</li>
<li>the loop short-circuits if an input is successful, otherwise an error is printed</li>
</ul>
<p>The next concept you might consider is <a href="https://www.tutorialspoint.com/python/python_exceptions.htm" rel="nofollow noreferrer">exception handling</a> raising errors instead of printing them and handling user <code>KeyboardInterupt</code> to quit a prompt.</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to match the input with one or more of the <em>txt</em> file content, you need to loop over it. Moreover, to check if password is in the list you have to cast it into <em>string</em> . So your login code would become:</p>
<pre><code>def logIn():  # USER SIGN IN
TP = str(input("Please input TP Number:"))
password = str(input("Please input password:"))
f = open("Database.txt", "r")
for line in f.readlines():
    if (TP) in line:
        if password in line:
            print("Welcome")
        else:
            print ("Username or Password doesn't match")
            logIn()
    else:
        print("Error")
</code></pre>
<p>Good Luck!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>input()</code> returns a string, so no need for explicit conversion with <code>str()</code>.  Better use <code>with statement</code> when dealing with file objects as it closes them automatically.</p>
<p>Defining <code>signUp()</code>:</p>
<pre><code>def signUp(): #USER SIGN UP    
    name = input("Name: ")
    intake = input("Intake: ")
    hp = input("Phone Number: ")
    email = input("E-mail: ")
    tp = input("Student ID: ")
    pw = input("Password: ")

    OccupantsData = [name, intake, hp, email, tp, pw]

    with open("Database.txt", "a") as db:
        db.write(' '.join(OccupantsData)) # Writing it as a string
</code></pre>
<p>Calling <code>signUp()</code>:</p>
<pre><code>signUp()

Name: x
Intake: something
Phone Number: 123-456-7890
E-mail: x@email.com
Student ID: x123
Password: password
&gt;&gt;&gt; 
</code></pre>
<p>Defining <code>logIn()</code>:</p>
<pre><code>def logIn(): #USER SIGN IN
    TP = input("Please input TP Number: ")
    password = input("Please input password: ")

    with open("Database.txt") as db:
        for line in db:
            line = line.split(' ') # Making it a list

            if TP in line:
                if password in line:
                    print("Welcome")
                else:
                    print ("Username or Password doesn't match")
                    logIn()
            else:
                print("Error")
                logIn()
</code></pre>
<p>Calling <code>logIn()</code>:    </p>
<pre><code>logIn()

Please input TP Number: x123
Please input password: pass
Username or Password doesn't match
Please input TP Number: x123
Please input password: password
Welcome
&gt;&gt;&gt; 
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">Python Tutorial</a> says:</p>
<blockquote>
<p>It is good practice to use the <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">with</a> keyword when dealing with file objects. The advantage is that the file is properly closed after its suite finishes, even if an exception is raised at some point.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>In your code:</p>
<pre><code>user = f.Read()
</code></pre>
<p>you are reading all the file, so you have to separate all the lines, an idea is using splitlines() to put them in a list:</p>
<pre><code>allData = f.read()
users = allData.splitlines() 
f.close()
</code></pre>
<p>After that users will be a list of strings.</p>
<pre><code>(['carlos', '1234', '5443', 'cvkk', 'TP1234', 'hello'],[...])
</code></pre>
<p>That list you can iterate through it using this:</p>
<pre><code>for user in users:
    #Look for TP in user and then see if password is correct
</code></pre>
<p>I hope you find this useful.</p>
<p>EDIT:</p>
<p>Your method can get bypassed if you only input 1 letter contained in the string, have pictures so you know what I mean:</p>
<p><a href="https://i.stack.imgur.com/DsDjn.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DsDjn.png"/></a></p>
<p>With your method I just need 1 letter of the student id and 1 letter of the password to get in (In fact I only need 1 space since the string "user" has spaces in it, to get in), and in a log in that's not good jaja. Use this method instead: </p>
<pre><code>def logIn(): #USER SIGN IN
TP=str(input("Please input TP Number:"))
password=input("Please input password:")
f=open("Database.txt","r")
allData=f.read()
users = allData.splitlines()
print (users)
for user in users:
    if "'"+TP+"'" in user:
        if "'"+password+"'" in user:
            print("Welcome")
        else:
            print ("Username or Password doesn't match")
            logIn()
    else:
        print("Error")
        logIn()
return
</code></pre>
<p>Let me know if this works for you.</p>
</div>
<span class="comment-copy">1) You should add db.write ('\n') to the code; otherwise, you'll end up with "password&lt;name&gt;" in your list.  Example:  ['Ted', 'something', '123-456-7890', 'x@email.com', 'x134', 'passwordTom', 'somethingelse', '321-111-5555', 'y@email.com', 'y123' 2) If you do add a new line, make sure to include in line = line.strip ().split (' ') 3)  If you add the following 2 suggestions, the logIn () code will need to be rewrite because if line [0] doesn't have the correct credential but line [1] does, you'll keep getting repeated "error" even though the loop hasn't fully traverse through the list.</span>
<span class="comment-copy">..or leave the fun to the OPS.</span>
<span class="comment-copy">Currently, when I save the inputs I take form the sign up form, it'll save into Database.txt like this ['James', 'Jul17', '1234', 'etc@etc.com', 'TP1234', 'password']</span>
<span class="comment-copy">check my edit please, now you may find it useful.</span>
