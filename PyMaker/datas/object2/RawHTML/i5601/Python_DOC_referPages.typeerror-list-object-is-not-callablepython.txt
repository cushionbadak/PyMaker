<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31087111/typeerror-list-object-is-not-callable-in-python">TypeError: 'list' object is not callable in python</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I have a simple script:</p>
<pre><code>list = [1, 2, 3, 4, 5]
myrange = list(range(1, 10))

for number in list:
    if number in myrange:
        print(number, 'is between 1 and 10')
</code></pre>
<p>However, whenever I attempt to run my script, Python raises an error:</p>
<pre><code>Traceback (most recent call last):
  File "python", line 2, in &lt;module&gt;
TypeError: 'list' object is not callable
</code></pre>
<p>What does this error mean? Why am I getting it? And how can I fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Before you can fully understand what the error means and how to solve, it is important to understand what a built-in name is in Python.</p>
<h2>What is a built-in name?</h2>
<p>In Python, a built-in name is a <strong>name that the Python interpreter already has assigned a predefined value</strong>. The value can be either a <em>function</em> or <em>class</em> object. These names are always made available by default, no matter the scope. Some of the values assigned to these names represent fundamental types of the Python language, while others are simple useful. </p>
<p>As of the latest version of Python - <a href="https://docs.python.org/3/" rel="noreferrer">3.6.2</a> - there are currently <em>61</em> built-in names. A full list of the names and how they should be used, can be found in the documentation section <a href="https://docs.python.org/3/library/functions.html#built-in-functions" rel="noreferrer"><em>Built-in Functions</em></a>.</p>
<p>An important point to note however, is that <strong>Python <em>will not</em> stop you from <em>re</em>-assigning builtin names</strong>. Built-in names are not reserved, and Python allows them to be used as variable names as well.</p>
<p>Here is an example using the <a href="https://docs.python.org/3/library/functions.html?highlight=dict#func-dict" rel="noreferrer"><code>dict</code></a> built-in:</p>
<pre><code>&gt;&gt;&gt; dict = {}
&gt;&gt;&gt; dict
{}
&gt;&gt;&gt;
</code></pre>
<p>As you can see, Python allowed us to assign the <code>dict</code> name, to <em>reference a dictionary object</em>.</p>
<h2>What does "TypeError: 'list' object is not callable" mean?</h2>
<p>To put it simply, the reason the error is occurring is because you <strong><em>re-assigned</em></strong> the <em>builtin name</em> <code>list</code> in the script:</p>
<pre><code>list = [1, 2, 3, 4, 5]
</code></pre>
<p>When you did this, <strong>you overwrote the predefined value of the built-in name</strong>. This means you can no longer use the predefined value of <code>list</code>, which is a class object representing Python list.</p>
<p>Thus, when you tried to use the <code>list</code> class to create a new list from a <code>range</code> object:</p>
<pre><code>myrange = list(range(1, 10))
</code></pre>
<p>Python raised an error. The reason the error says "'list' object is not callable", is because as said above, the name <code>list</code> was referring to a list object. So the above would be the equivalent of doing:</p>
<pre><code>[1, 2, 3, 4, 5](range(1, 10))
</code></pre>
<p>Which of course makes no sense. You cannot call a list object.</p>
<h2>How can I fix the error?</h2>
<p>If you are getting a similar error such as this one saying an "object is not callable", chances are you used a builtin name as a variable in your code. In this case the fix is as simple as renaming the offending variable. For example, to fix the above code, we could rename our <code>list</code> variable to <code>ints</code>:</p>
<pre><code>ints = [1, 2, 3, 4, 5] # Rename "list" to "ints"
myrange = list(range(1, 10))

for number in ints: # Renamed "list" to "ints"
    if number in myrange:
        print(number, 'is between 1 and 10')
</code></pre>
<p><a href="https://www.python.org/dev/peps/pep-0008/#naming-conventions" rel="noreferrer">PEP8</a> - the official Python style guide - includes many recommendations on naming variables.</p>
<p>This is a very common error new and old Python users make. This is why it's important to always avoid using built-in names as variables such as <code>str</code>, <code>dict</code>, <code>list</code>, <code>range</code>, etc.</p>
<p>Many linters and IDEs will warn you when you attempt to use a built-in name as a variable. If your frequently make this mistake, it may be worth your time to invest in one of these programs.</p>
<h2>I didn't rename a built-in name, but I'm still getting "TypeError: 'list' object is not callable". What gives?</h2>
<p>Another common cause for the above error is attempting to index a list using parenthesis (<code>()</code>) rather than square brackets (<code>[]</code>). For example:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2]
&gt;&gt;&gt; lst(0)

Traceback (most recent call last):
  File "&lt;pyshell#32&gt;", line 1, in &lt;module&gt;
    lst(0)
TypeError: 'list' object is not callable
</code></pre>
<p>For an explanation of the full problem and what can be done to fix it, see <a href="https://stackoverflow.com/questions/5735841/typeerror-list-object-is-not-callable-while-trying-to-access-a-list">TypeError: 'list' object is not callable while trying to access a list</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have overriden the Python's inbuilt method <code>list</code>.</p>
<pre><code>mylist = [1, 2, 3, 4, 5] # just use any other name than `list`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is the <a href="https://stackoverflow.com/help/mcve">mcve</a>!</p>
<pre><code>&gt;&gt;&gt; []()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'list' object is not callable
</code></pre>
<p>Try also <code>{}()</code> and <code>()()</code>. The message <code>TypeError: 'X' object is not callable</code> means that you wrote <code>expression(some_arguments)</code> where <code>expression</code> is an instance of the <code>X</code> type, and this type <em>doesn't support</em> to be used in a function call syntax. Most of the time you wrote this because you thought <code>expression</code> was a function or some other callable type.</p>
</div>
<span class="comment-copy">make sure your question comes up first in google! nice Q&amp;A</span>
<span class="comment-copy">I agree that this is a good error case to have a canonical Q&amp;A for. But I also think your answer should mention other scenarios that can lead to the same error message. Stuff like <code>a=[1]; b=a(0)</code> is pretty common, although I guess we <i>could</i> class such usage as a typo...</span>
<span class="comment-copy">What about the existing <a href="https://stackoverflow.com/questions/31087111/typeerror-list-object-is-not-callable-in-python" title="typeerror list object is not callable in python">stackoverflow.com/questions/31087111/â€¦</a>? Second google hit for me with the error message.</span>
<span class="comment-copy">Your dislike for an <i>answer</i> is not a valid reason to make your own Q&amp;A pair. If the <i>question</i> is bad (no MCVE, or similar) and can't be edited into shape without invalidating existing answers, then I fully support the creation of a new, better, canonical Q&amp;A. But that does not apply to <i>answers</i>. We have a voting system in place that lets the community decide which answer is best. If you write a better answer, yours will eventually rise to the top. By creating your own Q&amp;A you're invalidating all the effort people have put into writing the existing answers and all the votes people have cast.</span>
<span class="comment-copy">By the way, I forgot to mention: This question is being <a href="https://meta.stackoverflow.com/q/381064/1222951">discussed on Meta</a>. You may want to post your rationale there.</span>
<span class="comment-copy">Yes, I know. This post is meant as a canonical Q&amp;A :-)</span>
<span class="comment-copy">@ChristianDean Inbuilt <code>list</code> is a method or a callable class. While the list you defined is an instance of that class, and is not callable.</span>
<span class="comment-copy">@hspandher If you'll notice, the person who asked and answered are the same.</span>
<span class="comment-copy">I know, I know. As I said above, I made this post as a canoical Q&amp;A. See <a href="https://meta.stackoverflow.com/questions/291992/what-is-a-canonical-question-answer-and-what-is-their-purpose">here</a>.</span>
<span class="comment-copy">It certainly is encouraged. See <a href="https://stackoverflow.com/help/self-answer">stackoverflow.com/help/self-answer</a></span>
