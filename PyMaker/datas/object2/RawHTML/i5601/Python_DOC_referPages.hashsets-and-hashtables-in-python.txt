<div class="post-text" itemprop="text">
<p>Is there any <strong>HashSet</strong> implementation in Python? I know <strong>HashTable</strong> can be represented using dictionaries, but how do we represent <strong>HashSet</strong> implementation.</p>
<p>I am NOT looking for a data structure with the same methods as <strong>HashSets</strong> but rather someone with  a CONSTANT lookup time, or the order of O(1);</p>
<p>Also, I want to know if the lookup time in a Python <code>Dictionary</code> is constant aka O(1)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the HashSet implementation you are looking is set(). 
This answer may help you: <a href="https://stackoverflow.com/questions/1963507/time-complexity-of-accessing-a-python-dict">https://stackoverflow.com/questions/5139724/whats-the-difference-between-hashset-and-set</a></p>
<p>And yes, the average time complexity for python dictionary O(1). You may read on why we use the term: "Average time complexity":
<a href="https://stackoverflow.com/questions/1963507/time-complexity-of-accessing-a-python-dict">Time complexity of accessing a Python dict</a></p>
</div>
<span class="comment-copy">Are you looking for <code>set()</code>? And for complexity, read this: <a href="https://wiki.python.org/moin/TimeComplexity" rel="nofollow noreferrer">wiki.python.org/moin/TimeComplexity</a></span>
<span class="comment-copy"><code>set</code> is HashSets and for your "also", yes.</span>
<span class="comment-copy">does <code>set()</code> have a <code>has</code> method to check whether a given value exists in the set? I saw <code>x in s</code>in the docs, but I'm not sure if it can be used to in <code>if</code> or only in a <code>for</code>. I'm new to python so haven't really used <code>set()</code> before</span>
<span class="comment-copy">Both are constants, and yeah, <code>set</code> ~ <code>HashSet</code> and <code>dict</code> is <code>HashTable</code></span>
<span class="comment-copy"><i>I'm not sure if it can be used to in if</i>. Yes, and it's actually <code>if x in set()</code> is the Pythonic (the "recommended") way of testing belonging (<code>if x in dict()</code> checks if <code>x</code> is among the dictionary <code>keys</code>). Take a look to <a href="https://docs.python.org/3/reference/datamodel.html#object.__hash__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__hash__</a> (there's a lot of interesting information and links to other juicy parts of the documentation in that page)</span>
<span class="comment-copy">This answer could be improved by adding the key message from the linked items to it in case the links die.</span>
