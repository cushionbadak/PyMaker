<div class="post-text" itemprop="text">
<p>I would personally like to know the semantic difference between using Pass and None. I could not able to find any difference in execution.</p>
<p>PS: I could not able to find any similar questions in SO. If you find one, please point it out.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/simple_stmts.html#the-pass-statement" rel="noreferrer"><code>pass</code></a> is a <strong>statement</strong>. As such it can be used everywhere a statement can be used to do nothing.</p>
<p><a href="https://docs.python.org/3/library/constants.html#None" rel="noreferrer"><code>None</code></a> is an <a href="https://docs.python.org/3/reference/grammar.html" rel="noreferrer">atom</a> and as such an <strong>expression</strong> in its simplest form. It is also a keyword and a constant value for “nothing” (the only instance of the <code>NoneType</code>). Since it is an expression, it is valid in every place an expression is expected.</p>
<p>Usually, <code>pass</code> is used to signify an empty function body as in the following example:</p>
<pre><code>def foo():
    pass
</code></pre>
<p>This function does nothing since its only statement is the no-operation statement <code>pass</code>.</p>
<p>Since an expression is also a valid function body, you could also write this using <code>None</code>:</p>
<pre><code>def foo():
    None
</code></pre>
<p>While the function will behave identically, it is a bit different since the expression (while constant) will still be evaluated (although immediately discarded).</p>
</div>
<div class="post-text" itemprop="text">
<p>In simple terms, <code>None</code> is a value that you can assign to a variable that signifies emptiness. It can be useful as a default state:</p>
<pre><code>a = None
def f():
   a = 5
f()
</code></pre>
<p><code>pass</code> is a statement that is like a nop. It can be useful when you are defining function stubs, for instance:</p>
<pre><code>def f():
    pass
</code></pre>
<p>In C-like languages, you would be able to define empty functions by simply putting nothing between the braces <code>void f() { }</code>, but since Python uses indentation instead of braces to define blocks, you must put <em>something</em> in the body, and <code>pass</code> is the idiomatic thing to put there.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's absolute difference between <code>pass</code> and <code>None</code></p>
<p><strong>The <code>pass</code> (without upper case P)</strong>:</p>
<p>Because python be the indent base language, so if you define a new method, you should have some code after that.</p>
<pre><code>def method_a():
    some_thing = 1  # Have to do some thing
</code></pre>
<p>If not, an exception should be raised so you could use the <code>pass</code> keyword for hacks this problem.</p>
<pre><code>def method_a():
    pass  # Do nothing
</code></pre>
<p><strong>The <code>None</code></strong>:</p>
<p>So very different, the <code>None</code> keyword has a little bit same to the <code>null</code> keywords from another language like Java or C. That may be the empty data or not assign data like that.</p>
<pre><code>[] == None
null == None
() == None
...
</code></pre>
</div>
<span class="comment-copy">Just to add some more details: What is the difference between method 1 and method2:  method1: for i in range(10):     if i == 6:         None         print("hola!!")     print(i)  method2: for i in range(10):     if i == 6:         pass         print("hola!!")     print(i)</span>
<span class="comment-copy">Thank you @poke, that's the exact difference I was looking for.</span>
<span class="comment-copy">Wow! This's a good explain "In C-like languages, you would be able to define empty functions by simply putting nothing between the braces void f() { }, but since Python uses indentation instead of braces to define blocks, you must put something in the body, and pass is the idiomatic thing to put there." Thanks.</span>
