<div class="post-text" itemprop="text">
<p>I'm running <code>MacOS Sierra 10.12.6</code> </p>
<p>By default the system came with <code>Python 2.7.10</code></p>
<p>I installed <code>Python 3.6.3</code> (with IDLE) so I can learn Python (3). I understand that this is normal as MacOS may rely on Python 2.x for some programs. Either way, Python3 runs just fine if I run <code>python3</code> from the command line/terminal, or if I use IDLE (which defaults to Python 3).</p>
<p>Now I want to install some libraries like <em>Beautiful Soup</em>.</p>
<p>And I believe I can install it as follows:</p>
<pre><code>pip3 install beautifulsoup4
</code></pre>
<p>which should automatically install it. However, I read that it's recommended to use <code>virtualenv</code> on Mac BEFORE I run the above command. As a newbie, I don't want to mess anything up on my PC, so can anyone point me out how I can do this correctly?</p>
<p>For example, I can follow this link: <a href="http://sourabhbajaj.com/mac-setup/Python/virtualenv.html" rel="nofollow noreferrer">http://sourabhbajaj.com/mac-setup/Python/virtualenv.html</a></p>
<p>But I just want to write here to make sure I'm following the right article/commands before I do it. Just being super careful!</p>
<p>Also, can I make a folder with my "virtual environment" and then add sub-folders inside that for each project? Meaning, I don't need to do this everytime, I have one virtual environment and any project that I do just is a subfolder within that space so I can use any libraries that I installed. Just trying to grasp the concept.</p>
<p>Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>Sorry to add confusion.. this can be a tough subject for someone starting out. </p>
<p>The official docs recommend <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">venv</a>, which is similar to,  but slightly different than virtualenv.</p>
<p>I would strongly recommend pycharm. It will create your venv for you as part of your project,  which you might find helpful.</p>
<p>[Edit: Some other virtual environment features of pycharm that will help you]. </p>
<ul>
<li>If you type in an import statement for a package that isn't installed, it will offer to install it for you.</li>
<li>typing alt-F12 will bring you up a console with your virtual environment active</li>
<li>It syncs up your requirements.txt document for you</li>
<li>It manages your virtual environment path for you (as long as you are running inside pycharm), helping avoid import problems that many newcomers have with virtual environments. </li>
</ul>
<p>I am not affiliated with pycharm, btw -- I just think it is a great tool for python developers, especially for newcomers, and its treatment of virtual environments is especially helpful. </p>
</div>
<div class="post-text" itemprop="text">
<p>You create one virtualenv for each project as a way of keeping track of the specific dependencies to keep them minimal which then makes it easier when you want to share projects with other people.</p>
<p>But this is not something you need. No harm comes from installing packages in your real environment as well. So you can safely run</p>
<pre><code>pip3 install beautifulsoup4
</code></pre>
</div>
<span class="comment-copy">Just a note in response to an answer below, also not trying to be rude, but virtual environments are almost never an overkill. The reasons are too long to list here, but almost immediately when you want to use python 3.x in a machine that has python 3.(x-1) installed, many things are just going to work better and easier if you maintain isolation. virtual environments are easy to set up once you do it a few times, and well worth it -- just get yourself in the habit early on. Also, if your question was answered, can you mark it as such?</span>
<span class="comment-copy">Thanks for your comment. With Pycharm, would it therefore be possible to say take your Pycharm projects from one machine to another, that has a different version of Python, and attempt to run them? I assume that the venv from Pycharm is maintained, I'm not sure about the actual version of Pycharm here but basically the venv carries forward any libraries you imported for that venv without having to install them. Is that correct? I love Pycharm by the way, thank you :)</span>
<span class="comment-copy">My suggestion for Pycharm, among other things, was that it created the virtual machine for you. However, you wouldn't generally share you virtual environments because your activate script sets your PATH variable to the location of the venv -- which may differ. For sharing projects -- look at "requirements.txt", and setup.py.</span>
<span class="comment-copy">Understood, thank you SteveJ</span>
<span class="comment-copy">Thanks for this! For Pycharm, does the free version also create your venv for you? I'll try it out.</span>
<span class="comment-copy">I'm 95% sure it does, but I haven't used the free version in a while so I can't say with complete confidence. Also, it does some other nice things for you with respect to virtual environments (I'll add that to my answer).</span>
<span class="comment-copy">Thank you so much SteveJ. Much appreciated! Also, would you happen to know if this could potentially clash with NodeJS npm? Or could I use npm for my needs instead here? (as I already have it on my mac for a different project) Sorry, still getting a grasp on package managers. I'm not starting out on programming, but certainly new/behind on this topic.</span>
<span class="comment-copy">sorry, don't know anything about nodejs.</span>
<span class="comment-copy">No problem, thanks a lot SteveJ for your help</span>
<span class="comment-copy">Thank you! For the purpose of learning I feel I should try a virtualenv. Would you advise the article I pasted above, since I am trying this / Python virtualenv for the first time?</span>
<span class="comment-copy">Not trying to be rude, but if your purpose is to learn then why spend two days trying to figure out if you should <i>read</i> an article? Unless you are running multiple enterprise projects on your machine I doubt you will have any conflicts with different package versions. So then virtualenv is complete overkill. I would advise you to learn to use python/pip without it first, and then next time you will have a clearer understanding of what is virtualenv and what is just regular python package management. Learn by doing.</span>
<span class="comment-copy">Thanks for this Harald. Totally agree, I'm just asking my question early as I plan to do this on Friday. And so, I just want to be sure of my path before I try it on my machine - again, just being safe before I run commands on terminal :) Thanks for all your help!</span>
