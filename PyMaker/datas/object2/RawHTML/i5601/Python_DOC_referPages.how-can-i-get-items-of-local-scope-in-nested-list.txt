<div class="post-text" itemprop="text">
<p>I am trying to find consecutive and identical elements in a list:</p>
<pre><code>a = [1, 1, 1, 2, 3, 2, 2, 2, 1, 2, 3, 4, 1, 1, 1, 5, 5, 5]

new_list_1 = []
new_list_2 = []

def hello(x):
    for j, i in enumerate(x):
        try:
            if x[j] == x[j + 1] or x[j] == x[j-1]:
                new_list_1.append((i, j))
            else:
                new_list_2.append((i, j))
        except IndexError:
            if x[j]==x[j-1]:
                new_list_1.append((i, j))

print(hello(a))
print(new_list_1)
</code></pre>
<p>It's returning:</p>
<pre><code>[(1, 0), (1, 1), (1, 2), (2, 5), (2, 6), (2, 7), (1, 12), (1, 13), (1, 14), (5, 15), (5, 16), (5, 17)]
</code></pre>
<p>But I want something like this:</p>
<pre><code>[[(1, 0), (1, 1), (1, 2)], [(2, 5), (2, 6), (2, 7)], [(1, 12), (1, 13), (1, 14)], [(5, 15), (5, 16), (5, 17)]]
</code></pre>
<p>I don't want to use any external module like <strong>itertools</strong>' <code>chain</code> or <code>groupby</code>. How can I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a <a href="https://docs.python.org/3/howto/functional.html#generators" rel="nofollow noreferrer">generator</a>-based approach:</p>
<pre><code>def indexed_groups(lst):
    ret_val, crnt = [], None
    for i, x in enumerate(lst):
        if x != crnt:  # for every new item
            if len(ret_val) &gt; 1:  # check if there is a group to yield
                yield ret_val
            ret_val, crnt = [], x  # reset group and current
        ret_val.append((x, i))  # collect (item, index) pairs
    if len(ret_val) &gt; 1:  # check last group
        yield ret_val

&gt;&gt;&gt; list(indexed_groups(a))
[[(1, 0), (1, 1), (1, 2)], 
 [(2, 5), (2, 6), (2, 7)], 
 [(1, 12), (1, 13), (1, 14)], 
 [(5, 15), (5, 16), (5, 17)]]
</code></pre>
</div>
<span class="comment-copy">Why the arbitrary module restriction? Itertools is part of the standard library.</span>
<span class="comment-copy"><i>"I don't want to use any external module like itertools chain or groupby , How can i achieve this ?"</i> - Why not? Is this simply for practice?</span>
<span class="comment-copy">How do you determine which pairs are in each list?</span>
<span class="comment-copy">can you please read my last line in question ? you can get downvote for this.</span>
<span class="comment-copy">Sure thing, edited it to work without any imports ;)</span>
