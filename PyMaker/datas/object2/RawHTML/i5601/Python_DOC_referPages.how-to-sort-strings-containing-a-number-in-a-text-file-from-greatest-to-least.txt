<div class="post-text" itemprop="text">
<p>I have a text file that looks like:</p>
<pre><code>Joe Smith: 200 dollars
Marcus: 150 dollars
Sally Mae: 300 dollars
</code></pre>
<p>etc etc..</p>
<p>What I want is to have them sorted from greatest to least in a list, so:</p>
<pre><code>["Sally Mae: 300 dollars", "Joe Smith: 200 dollars", "Marcus: 150 dollars"]
</code></pre>
<p>Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> function with the below <em>lambda function</em> as key to extract the numbers and then sort them.</p>
<pre><code>#                         v to only match numbers preceded with colon ':' and space
lambda x: int(re.search('(?&lt;=:\s)\d+', x).group())
#          ^                       ^ match the pattern with continuing numbers
#          ^  type-cast the string of number to int
# `sorted` will use this returned int to sort the elements 
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; my_list = ["Joe Smith32: 200 dollars", "Marcus: 150 dollars", "Sally Mae: 300 dollars"]

&gt;&gt;&gt; sorted(my_list, key=lambda x: int(re.search('(?&lt;=:\s)\d+', x).group()), reverse=True)
['Sally Mae: 300 dollars', 'Joe Smith32: 200 dollars', 'Marcus: 150 dollars']
</code></pre>
<p>By default <code>sorted</code> sorts in ascending order. Use <code>reverse=True</code> for sorting in descending order.</p>
<p>For opening the file, and reading the content as list, all you need is:</p>
<pre><code>with open('/path/tofile.txt') as f:
    my_list = f.readlines()
</code></pre>
<p><strong>Note:</strong> As mentioned in the comment, OP clarified that apart from the numbers on which sorting is need to be done, the only other place where these number could be present is the username. Hence, it is safe to use this expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply try something like this:</p>
<pre><code>import re
pattern=r'\d+'
sort_dict=[]
with open('file.txt','r') as f:
    for line in f:
        match=re.search(pattern,line)
        sort_dict.append((int(match.group()),line.strip()))
for i in sorted(sort_dict)[::-1]:
    print(i[1])
</code></pre>
<p>output:</p>
<pre><code>Sally Mae: 300 dollars
Joe Smith: 200 dollars
Marcus: 150 dollars
</code></pre>
</div>
<span class="comment-copy">show what you tried to solve it ...</span>
<span class="comment-copy">what to do if a text contains 2 numbers</span>
<span class="comment-copy">Actually, a name may contain a number. They are usernames, so it could be something like Joe Smith21 or something like that. Thank you for the answer!</span>
<span class="comment-copy">@DevinGP Updated the answer to take care off the numbers in username. Hope it helped!</span>
<span class="comment-copy">Hey, I am getting the error  <code>AttributeError: 'NoneType' object has no attribute 'group'</code>  How do I fix this? I think you misread your question because I did not want to sort a list but I wanted to sort a text file INTO a list. It is fine though, I converted my file into a string by:  <code>lbList = []  leaderboardListRaw = open("bank.txt", "rt") leaderboardList = leaderboardListRaw.read()leaderboardListRaw.close()  for line in leaderboardList.split("\n"): lbList.append(line)</code>  I am still getting the error though, so any help to fix would be appreciated, thanks!</span>
<span class="comment-copy">Addition: I think its because some usernames may contain special characters like <code>[</code> <code>]</code> <code>-</code> <code>_</code> etc. What can I add to the regex to include everything? Thank you</span>
<span class="comment-copy">Hi @DevinGP, you don't need all that to extract the text from file as list, added sample code to achieve that. And the regex won't be failing due to special characters in the username, as far as your string contains ": 200" in it. Can you print the list and check whether any of the line is empty (which si my guess)? As far as there is colon ":" followed by space and then your number, your regex will work.</span>
