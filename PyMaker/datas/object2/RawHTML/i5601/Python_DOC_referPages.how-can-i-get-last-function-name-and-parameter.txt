<div class="post-text" itemprop="text">
<p>Such as:</p>
<pre><code>def A(a):
    print a

def B(func):
   ...

if __name__ = "__main__":
    B(A(a))
</code></pre>
<p>I want get the message:</p>
<pre><code>A(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure why you want to do this, but the module <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> can help here:</p>
<pre><code>import inspect

def A(a):
    print(a)

def B(func, arg):
    print('{}({})'.format(func.__name__, inspect.getargs(func.__code__)[0][0]))
    return func(arg)

if(__name__ == "__main__"):
    a = 1
    B(A, a)
</code></pre>
<p>Output:</p>
<pre><code>A(a)
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, since you specifically stated that you use Python 3, I have to comment that your syntax is incorrect. Parenthesis are required for <code>print(a)</code> since Python 3 changed <code>print</code> to a function. Also, there should be a double equal sign in the second to last line, because you are checking an equality.</p>
<p>This code should work perfectly fine:</p>
<pre><code>def A(a):
    print(a)

def B(func):
   ...

if(__name__ == "__main__"):
    a = 1
    B(A(a))
</code></pre>
<p>where you can assign anything you want to <code>a</code> before printing it.</p>
<p>EDIT: After looking at the question again, I am quite unsure why you would expect/want the output to be <code>"A(a)"</code>. You pass a function that is called <code>A()</code> to function <code>B()</code>, usually to do something with it.
You can get the name of the function <code>A()</code> out by rewriting <code>B</code> to:</p>
<pre><code>def B(func):
    print(func.__name__)
</code></pre>
<p>However, as far as I know, there is no way for function <code>B()</code> to know which parameters function <code>A()</code> can take in this scenario.</p>
</div>
<span class="comment-copy">Whatever you're trying to do, this is not the way to do it.</span>
<span class="comment-copy">Then you should maybe consider accpeting somebody's answer such that this question is marked as 'answered'.</span>
<span class="comment-copy">Below code is my resolve: import inspect     stack_info = inspect.getframeinfo(inspect.currentframe().f_back) This stack_info contain last function info</span>
