<div class="post-text" itemprop="text">
<p>I want to write a programm of counting sentences. The border is (!|.|?|...). The python counts only ! and . and ?. What should I do to count ... too? I tried to write it in usual form but it counts every dot in ellipsis. Please, give me an advice.</p>
<pre><code>   f = input ("text") 
   znak = 0 
   for s in f: 
i = s.find('.') 
if i &gt; -1: 
    znak += 1 
else:
    i = s.find('!') 
    if i &gt; -1:
        znak += 1
    else:
        i = s.find('?') 
        if i &gt; -1: 
            znak += 1
        else:
            i = s.find('...')
            if i&gt; -1:
                znak +=1
  print('Предложений:', znak)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly, you can do this with <code>string.count(substring)</code>:</p>
<pre><code>punctuation = ["!", "?", "...", "."]
s = "Hello. World? This is a... Test!"

punc_count = [s.count(i) for i in punctuation]

# Take into account for "." matching multiple times when "..." occours
punc_count[3] -= punc_count[2] * 3

for index, value in enumerate(punc_count):
    print(punctuation[index], "occours", value, "times")

total = sum(punc_count)
print("There are", total, "sentences in the string")
</code></pre>
<h3>This outputs:</h3>
<pre><code>! occours 1 times
? occours 1 times
... occours 1 times
. occours 1 times
There are 4 sentences in the string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3.5/library/re.html" rel="nofollow noreferrer">regular expression</a> like <code>...|.|!|?</code> for this, although you have to escape most characters as they have special meaning in a regular expression. Important: The regex has to contain <code>...</code> <em>before</em> <code>.</code>, or it will match <code>...</code> as three <code>.</code> instead one <code>...</code>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "sentence with ! and ? and ... and ."
&gt;&gt;&gt; p = re.compile(r"\.\.\.|\.|\!|\?")
&gt;&gt;&gt; p.findall(s)
['!', '?', '...', '.']
&gt;&gt;&gt; sum(1 for _ in p.finditer(s))
4
</code></pre>
<p>Or combine with <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; Counter({'!': 1, '...': 1, '?': 1, '.': 1})
Counter({'!': 1, '...': 1, '?': 1, '.': 1})
</code></pre>
</div>
<span class="comment-copy">Your current code appears to be iterating over the input text one character at a time. A single character will never contain <code>...</code>, since that's three characters long. You also have the issue that <code>...</code> consists of <code>.</code> characters, so you'll end up double counting them unless you take special care.</span>
<span class="comment-copy">You use <code>else</code> so this only counts the first item from your list that it finds. Which is a single dot. The rest of your code is never executed. (You also need a loop. Look up how to use <code>find</code>.)</span>
<span class="comment-copy">OP's own attempt is still salvageable, although (of course) this is the "better" way to do it.</span>
<span class="comment-copy">@usr2564301 I know this isn't the <i><b>best</b></i> answer, I'm sure this could be done much easier with regex. Sadly my regex-fu isn't the best..But it is much more readable than OP's post.</span>
<span class="comment-copy">No problem, alternatives are always appreciated. It's just that your code is <i>enitrely</i> different from OP's  – and it introduces concepts OP may not have yet covered. ...I think a regex could do this but then you can't use list comprehensions.</span>
<span class="comment-copy">Thank You so much! It's really useful!</span>
<span class="comment-copy">No problem. If you have found a solution, please click the check mark next to the answer that you found the most helpful.</span>
<span class="comment-copy">I tried to use regex but failed((( I don't know the python's syntax so good.</span>
