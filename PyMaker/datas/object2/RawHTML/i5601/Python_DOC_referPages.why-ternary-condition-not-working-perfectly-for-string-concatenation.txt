<div class="post-text" itemprop="text">
<p>I saw a peculiar behavior in python when using ternary operator in string concatenation -</p>
<pre><code>&gt;&gt;&gt; foo = "foo"
&gt;&gt;&gt; foo.upper()
'FOO'
&gt;&gt;&gt; bar = 2
&gt;&gt;&gt; "" if bar is 0 else str(bar)
'2'
&gt;&gt;&gt; foo.upper() + "_" + "" if bar is 0 else str(bar)
'2'
</code></pre>
<p>With the above code I was expecting it should output as <code>FOO_2</code> but only showing <code>2</code>. Though I can achieve the output with the below code. Can anyone explain why it is not working with <code>+</code> ?</p>
<pre><code>&gt;&gt;&gt; "{}_{}".format(foo.upper(), "" if bar is 0 else str(bar))
'FOO_2'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a> plays a crucial role here. The expression is evaluated as:</p>
<pre><code>(foo.upper() + "_" + "") if bar is 0 else str(bar)
</code></pre>
<p>This is because conditional expressions precede addition and subtraction.</p>
<p>Use parenthesis to enforce your desired evaluation order:</p>
<pre><code>foo.upper() + "_" + ("" if bar is 0 else str(bar))
</code></pre>
<p>Or, what is probably even better is to decrease complexity by <a href="https://refactoring.com/catalog/extractVariable.html" rel="nofollow noreferrer">extracting a variable</a> to avoid any possible confusion:</p>
<pre><code>postfix = "" if bar is 0 else str(bar)
print(foo.upper() + "_" + postfix)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">Aside: it's not relevant to your issue, but don't use <code>is</code> where you mean <code>==</code> -- see <a href="https://stackoverflow.com/questions/306313/is-operator-behaves-unexpectedly-with-integers">here</a> or <a href="https://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python">here</a>.</span>
