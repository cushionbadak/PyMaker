<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36298231/python-if-multiple-and-or-in-one-statement">Python IF multiple “and” “or” in one statement</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I'm having some trouble with AND and OR within if else statements. This is my code:</p>
<pre><code>if subject == 'history' or subject == 'History' and unit == 'WWII' or unit == 'ww2':
</code></pre>
<p>Any ideas how to fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Read up on <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator-precedence</a> - some operators bind stronnger then others - to get your desired logical output you should use <code>(</code> <code>)</code> to structure your logical conditions.</p>
<p>Summarization:</p>
<blockquote>
<pre><code>Operator                              Description
lambda                                Lambda expression
if – else                             Conditional expression
or                                    Boolean OR
and                                   Boolean AND
not x                                 Boolean NOT
in, not in, is, is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==  Comparisons, including membership tests and identity tests
|                                     Bitwise OR
^                                     Bitwise XOR
&amp;                                     Bitwise AND
&lt;&lt;, &gt;&gt;                                Shifts
+, -                                  Addition and subtraction
*, @, /, //, %                        Multiplication, matrix multiplication, division, floor division, remainder [5]
+x, -x, ~x                            Positive, negative, bitwise NOT
**                                    Exponentiation [6]
await x                               Await expression
x[index], x[index:index], x(arguments...), x.attribute       Subscription, slicing, call, attribute reference
(expressions...), [expressions...], {key: value...}, {expressions...}     Binding or tuple display, list display, dictionary display, set display
</code></pre>
</blockquote>
<p>The ealier the operator the higher it binds. Please see the linked doku for subscription context</p>
</div>
<span class="comment-copy">coding hint: <code>userName, subject, unit, score, grade = hisWw2[:5]</code></span>
<span class="comment-copy">At first you should use parentheses to group the logical operators (<code>and</code>, <code>or</code>). The may not always be necessary but in complex expressions they are helpful to understand the expression</span>
<span class="comment-copy">also, consider <code>elif</code></span>
<span class="comment-copy">all operators have a "weight" and "assosiativity" - they bind differently strong. Use ( ) to reformulate your logical assumptions so they bind in a way that fits.     FALSE and TRUE or FALSE  is always FALSE bexause <code>and</code> binds stronger then <code>or</code> does .... use () -- weight is the wrong word - brb - see answer for doku on pythons operators.</span>
<span class="comment-copy">Yep the brackets are working thanks! I never knew you could put brackets around logic operators.</span>
