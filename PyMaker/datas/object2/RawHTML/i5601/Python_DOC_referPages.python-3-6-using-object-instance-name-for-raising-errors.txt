<div class="post-text" itemprop="text">
<p>I'm attempting to create a 3-d graphics engine using Python 3.6, Tkinter, and specifically NOT pygame (or any other 3d graphics engines) as part of a university assignment.</p>
<p>Within this project, I have had to create a "matrix" class, which allows me to easily create and manipulate mxn matrices. I believe this to be crucial for transforming vectors in order to display items on a 2d display.</p>
<p>One method I would like my Matrix class to contain is matrix multiplication. I figured the first (and most important) thing to check when performing this method is to ensure that the width of the first matrix is equal to the height of the second matrix, as that is necessary for multiplying two matrices together.</p>
<p>If the two matrices cannot be multiplied together, I raise an TypeError, in which I want to say </p>
<p>"<em>Matrix multiplication not possible. Width of <strong>{first matrix's name}</strong>:
 (<strong>{value}</strong>) is not equal to height of <strong>{second matrix's name}</strong>: (<strong>{value}</strong>)</em>".</p>
<p>eg</p>
<pre><code>apple = Matrix(2, 3, List_of_values)
#creates a matrix instance that is 2x3 and contains 6 values from a list

pear = Matrix(4, 3, Another_list_of_values)
#creates a matrix that is 4x3 and contains 12 values from another list

apple.multiply(pear)
</code></pre>
<p>This should, when all is working, attempt to perform {apple x pear} mathematical operation, <strong>specifically with apple first and pear second</strong></p>
<p>In this case, multiplication is obviously not possible: apple is 2 high and 3 wide, and pear is 5 high and 3 wide. I would like to raise an error like:</p>
<pre><code>TypeError: Matrix multiplication not possible: Width of apple (3) is not equal to height of pear (4)
</code></pre>
<p>Instead, I get this:</p>
<pre><code>TypeError: Matrix multiplication not possible: Width of &lt;__main__.Matrix object at 0x1056117b8&gt; (3) is not equal to height of &lt;__main__.Matrix object at 0x105618e80&gt; (4)
</code></pre>
<p>I believe I need to define the __name__ attribute within my matrix class, such that when apple.__name__ is called, it returns a string that contains the name "apple". Is this possible? Is this even a good idea? Is there a better coding practise I should follow instead?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>I wanted to mark this question as answered: <a href="https://stackoverflow.com/users/3001761/jonrsharpe">jonrsharpe</a>'s answer in the comments explained it well, and <a href="https://stackoverflow.com/users/7432/bryan-oakley">Bryan Oakley</a> added some helpful extra information. Thanks to you both.</p>
</div>
<span class="comment-copy">That isn't a good idea. What if the object is assigned to more than one name, or none (e.g. if it's only accessible via a collection like a list or dictionary)? Specifically using <code>__name__</code> is a bad idea, don't invent your own usages for the reserved identifiers. Just give a sensible <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer"><code>__repr__</code> implementation</a> so you can see what the values are if needed.</span>
<span class="comment-copy">Hi Jon, thanks for the reply,  So you think its generally just a bad route to go down? I thought it would be important to be able to identify if incompatible matrices were multiplied together, but I don't think it's crucial.  Generally, I just want to learn better coding practices, so your reply was really helpful - even though the short answer was "don't"!  Cheers</span>
<span class="comment-copy">the variable names used when saving a reference to the object are not part of the object. The same object can go by multiple names.</span>
