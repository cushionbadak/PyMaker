<div class="post-text" itemprop="text">
<p>I have a list of multiple list-of-lists in python:</p>
<pre><code>a = [[[0,1,2], [10,11,12]],
     [[3,4,5], [13,14,15]]]
</code></pre>
<p>And I would like to merge all the first lists together, the second lists together, and so forth:</p>
<pre><code>final = [[0,1,2,3,4,5],
         [10,11,12,13,14,15]]
</code></pre>
<p>The furthest I've got is to try to unzip the outer lists:</p>
<pre><code>zip(*a) = [([0,1,2], [3,4,5]), 
           ([10,11,12], [13,14,15])]
</code></pre>
<p>I suppose one could loop through these and then chain each together, but that seems wasteful. What's a pythonic way to fix this?</p>
<p><strong>NOTE</strong>: 
There might be more than two sublists in each "row".</p>
</div>
<div class="post-text" itemprop="text">
<p>A combination of <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain()</code></a> would do it:</p>
<pre><code>In [1]: from itertools import chain

In [2]: [list(chain(*lists)) for lists in zip(*a)]
Out[2]: [[0, 1, 2, 3, 4, 5], [10, 11, 12, 13, 14, 15]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>reduce</code> function is the perfect fit for this kind of problems:</p>
<pre><code>[reduce((lambda x,y: x[i]+y[i]), a) for i,_ in enumerate(a)]
</code></pre>
<p>Result:</p>
<pre><code>[[0, 1, 2, 3, 4, 5], [10, 11, 12, 13, 14, 15]]
</code></pre>
<p>This code reads: For each index <code>i</code>, collect all the <code>i</code>th items of the elements of <code>a</code> together.</p>
</div>
