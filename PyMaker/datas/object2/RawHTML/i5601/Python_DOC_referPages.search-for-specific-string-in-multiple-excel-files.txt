<div class="post-text" itemprop="text">
<p>I'm new to python, so bear with me on this one.
I want to make a script that searches within all excel files in a specific folder, to see if they contain an '@' sign. If it finds a match it should write to a log.txt files with the name of the excel file. I don't have the name of the excel files in advance.</p>
<p>So far I'm stuck at just read in one file, and return true if it finds the string. What I got is</p>
<pre><code>import pandas as pd

df = pd.read_excel(open('test.xlsx','rb'), sheetname=0)
print(df)

if '@' in df:
    print("true")
else:
    print("false")
</code></pre>
<p>This returns the content of sheet1 in the excel file correctly, but the search to find a match, doesn't seem to work. Any ideas? Maybe Im doing it all wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should read through <a href="https://pandas.pydata.org/pandas-docs/stable/text.html#testing-for-strings-that-match-or-contain-a-pattern" rel="nofollow noreferrer">Pandas - Working with Text Data</a> specifically the section on strings that match or contain a pattern.</p>
<p>Unfortunately you cannot search a DataFrame with the string methods common to core Python. Instead you would use a StringMethod, like so:</p>
<pre><code>out = False
for col in df.columns:
    if df[col].str.contains('@').any():
        out = 'True'
        break
print(out)
</code></pre>
<p>Also, I don't believe it is necessary to use <code>open</code> when using <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html" rel="nofollow noreferrer"><code>pd.read_excel</code></a>. E.g </p>
<pre><code>df = pd.read_excel(open('test.xlsx','rb'), sheetname=0)
</code></pre>
<p>Can be rewritten:</p>
<pre><code>df = pd.read_excel('test.xlsx', sheetname=0)
</code></pre>
<p>As far as iterating over files in a folder take a look at the builtin module <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This an answer without using pandas</p>
<pre><code>import logging

LOG_FILENAME = r'file_output_location_path\log.txt'
logging.basicConfig(filename=LOG_FILENAME,
                    level=logging.WARNING,
                    format='%(asctime)s %(message)s'
                    )


source_folder = r'excel_file_folder_path'

def containsString():
    for somefile in os.listdir(source_folder):
        if'@' in somefile:
            logging.warning(somefile)
</code></pre>
</div>
<span class="comment-copy">Beginner questions: what the r' stand do? and 'excel_file_folder_path' should that be './foldername'?</span>
<span class="comment-copy">Dosnt seems like this is working, it can find the files, but it dosnt find any @'s when the xlsx file contains it.</span>
