<div class="post-text" itemprop="text">
<p>A number, a, is a power of b if it is divisible by b and a/b is a power of b. Write a function called is_power that takes parameters a and b and returns True if a is a power of b. Note: you will have to think about the base case.
I found this peace of code as it's solution:</p>
<pre><code>def is_power(a,b):
    if (a % b == 0):
        return True
        if (a/b == 1):
            return True
        else:
            (is_power (a/b, b) )
    else:
        return False
</code></pre>
<p>But I guess some lines are not necessary. Here is my own code:</p>
<pre><code>def is_power(a,b):
    if (a % b == 0):
        return True
    else:
        return False
</code></pre>
<ol>
<li>What is the reason of existence of extra lines?</li>
<li>Both codes don't work for float numbers such as is_power(2.25, 1.5). Both, return False.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>your second code is not correct, take the example of 6 and two your function will return true, but 6 is not a power of two .</p>
<pre><code>def is_power(a, b):
    while a % b == 0:
        if a == b: return True
        a /= b
    return False

print(is_power(6, 2))
print(is_power(8, 2))
</code></pre>
<p>for the second example, comparing if two doubles are equal is usually done to a given magnitude like given eps = 0.0000001
a == b =&gt; abs(a - b) &lt; eps . </p>
</div>
<div class="post-text" itemprop="text">
<p>@mehdi maick thanks for your correct answer. Here's recursive version, by help of your answer, which I was looking for.</p>
<pre><code>def is_power2(a, b):
if a % b == 0 :
    if a == b:
        return True
    else:
        return is_power(a/b, b)
return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What is the reason of existence of extra lines?</p>
</blockquote>
<ul>
<li>The question asks you to think about "Edge Cases". This part of the code "if (a/b == 1)" is handling an edge case. </li>
<li>Also, the question says "True if a is a power of b". By removing the else part of the loop, you are avoiding this from happening. </li>
</ul>
</div>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/math.html#math.isclose" rel="nofollow noreferrer"><code>math.isclose</code></a> to compare within a specific margin of error.</span>
<span class="comment-copy">The indentation of this code is wrong.</span>
