<div class="post-text" itemprop="text">
<p>I am working on program that reads items from one queue, modify that and push it to second queue. This should be done by multiple CPU due to computationally expensive modify function. Program is stuck in printing loop print(qOut.get()).</p>
<pre><code>from multiprocessing import Pool, Queue

def update(qIn,qOut):
   temp=qIn.get()
   #this is going to be computationally expensive function
   qOut.put(temp+1)


def main():

    #input queue
    qIn=Queue()

    #output queue
    qOut=Queue()

    #set input queue
    for i in range(10):
        qIn.put(i)

    #set number of CPU cores
    p=Pool(6)

    #update each item in qIn and push it to qOut
    for i in range(10):
        p.apply_async(update, args=(qIn,qOut))

    p.close()
    p.join()

    #check qOut
    for i  in range(10):
         print(qOut.get())


if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In order to be able to share your queues between processes you must create them using a <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing-managers" rel="nofollow noreferrer">Manager</a>:</p>
<pre><code>manager = multiprocessing.Manager()
qIn = manager.Queue()
qOut = manager.Queue()
</code></pre>
<p><em>Managers provide a way to create data which can be shared between different processes, including sharing over a network between processes running on different machines</em>. </p>
</div>
