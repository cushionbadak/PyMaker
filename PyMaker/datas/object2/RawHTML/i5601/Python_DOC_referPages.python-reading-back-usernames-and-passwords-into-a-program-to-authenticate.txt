<div class="post-text" itemprop="text">
<p>I am currently writing a program in Python that asks if you have a log in. If no, they proceed to create a username and password. If yes, they log in and their details are checked against a text file. The text file looks like this (Username then password):</p>
<pre><code>whitehallj27
EXpass%20
Username2
EXPASSWORD%%%
james_27
password1234
</code></pre>
<p>I am trying to figure out a way of programming this as simply as possible. It seems to work, but isn't nearly as simple and doesn't really work how I thought it would. Here is the code snippet:</p>
<pre><code>logins={}
usernames_passwords=open("UsernamesAndPasswords.txt","r")
count=0
for line in usernames_passwords:
    count=count+1
count=count/2    
usernames_passwords.close()
usernames_passwords=open("UsernamesAndPasswords.txt","r")

try:
    for x in range(count):
        username=usernames_passwords.readline()
        password=usernames_passwords.readline()
        logins[username]=password
except TypeError:
    count=int(count+0.5)
    for x in range(count):
        username=usernames_passwords.readline()
        password=usernames_passwords.readline()
        logins[username]=password

usernames_passwords.close()
print(logins)
</code></pre>
<p>Also, how would I go about authenticating the username and password to check it's correct.</p>
<p>Many thanks,
James Duxbury</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that variables <code>user</code> and <code>passwd</code> have the username and password provided by the user, then just read the file in two lines:</p>
<pre><code>file_contents = []
with open("UsernamesAndPasswords.txt","r") as f:  #use "with", it will auotamtically close the file
    file_contents = f.readlines()
usernames = file_contents[0::2]  #step by 2, take all elements starting at index 0
passwords = file_contents[1::2]  #step by 2, take all elements starting at index 1
found_at_index = -1
for i in range(0,len(usernames)):
    if user == usernames[i] and passwd == passwrods[i]:
        found_at_index = i
        break
if found_at_index &gt;= 0 :
     #do whatever you want, there is match
else:
     #I don't know what you wanted to do in this case
</code></pre>
<p>Please read this for the <a href="https://docs.python.org/2/reference/compound_stmts.html#with" rel="nofollow noreferrer">with</a> keyword and <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">this</a> for how to read a file nicelly. </p>
<p>Also <a href="https://www.pythoncentral.io/how-to-slice-listsarrays-and-tuples-in-python/" rel="nofollow noreferrer">this</a> about the <code>[::]</code> syntax.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could create a dictionary with the user names and passwords like this:</p>
<pre><code>dict = {
    'user-name': 'password-hashing',
    'another-user': 'another-password'
}
</code></pre>
<p>after you've done it you can save this dict in a json file, and load its content when the user asks for login.</p>
<p>the docs for handling json files with python: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">https://docs.python.org/3/library/json.html</a></p>
<p>obs.: it will look simpler, but its not the best way of doing this king of thing</p>
</div>
<span class="comment-copy">I really hope this is for some homework thing, because storing passwords like that is a very, very, VERY bad idea</span>
<span class="comment-copy">As mentioned by CBredlow, passwords are <i>never</i> to be stored as plaintext. Even storing an unsalted hash of a password is fraught with peril, but it's a good place to start.</span>
<span class="comment-copy">I mean, if you're choosing to do this, why not store them as some sort of dictionary/tuples in the text file and read them in.</span>
<span class="comment-copy"><i>doesn't really work how I thought it would</i> Please explain what you want it to do, and what it's doing instead.  Don't just tell us "it isn't working".</span>
