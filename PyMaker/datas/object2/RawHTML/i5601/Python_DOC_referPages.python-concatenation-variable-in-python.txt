<div class="post-text" itemprop="text">
<p>I have 3 <code>variable</code> </p>
<pre><code>print(obj.col1_expense.text) #test1
print(obj.col2_expense.text) #test2
print(obj.col3_expense.text) #test3
</code></pre>
<p>how to print it dynamic?
now i am trying like this </p>
<pre><code>    for x in range(1, 4):
        print("obj.col"+str(x)+"_expense".text)
</code></pre>
<p>But it gives <strong>error</strong>.<br/></p>
<pre><code>AttributeError: 'str' object has no attribute 'text'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">[Python]: <strong>getattr</strong>(<em>object, name[, default]</em>)</a>:</p>
<pre><code>for x in range(1, 4):
    print(getattr(obj, "col{}_expense".format(x)).text)
</code></pre>
<p>or, to ensure you won't get <code>AttributeError</code> if messing up indexes, you could replace the <code>print</code> to this (not as easy to read) form:</p>
<pre><code>print(getattr(getattr(obj, "col{}_expense".format(x), None), "text", None))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I hope this will help you:</p>
<pre><code>for x in range(1,4):
    col_text = 'col' + str(x) + '_expense'
    print(getattr(obj,col_text).text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure but if you want to create variables and corresponding values. 
It will depend where you want to use variables.</p>
<pre><code>import pandas as pd
var = []
for x in range(1, 4):
    var.append("obj.col%s_expense.text" %(x))
print(var)
print(var[0])
print(var[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>for x in range(1, 4):
    var = "obj.col"+str(x)+"_expense.text"      
    print(var)
</code></pre>
</div>
<span class="comment-copy">Read docs about <code>getattr()</code></span>
<span class="comment-copy">include <code>.text</code> extention inside the formatting like <code>print("obj.col"+str(x)+"_expense.text")</code></span>
<span class="comment-copy">You could also consider to use <code>eval("print(obj.col"+str(x)+"_expense.text)")</code></span>
<span class="comment-copy">@AmosEgel yes OP could.  not a good or robust approach, tho, especially for someone new to python.</span>
<span class="comment-copy">@Sanket I think the issue with your suggestion is that the string <code>"obj.col1_expense.text"</code> would be printed, but not the text stored in that variable ...</span>
<span class="comment-copy">Quote <code>col</code> in the 2nd line.</span>
<span class="comment-copy">@CristiFati Done.Thank you..!</span>
<span class="comment-copy">won't work.   python does not provide for manufacturing variable names, at least not directly</span>
