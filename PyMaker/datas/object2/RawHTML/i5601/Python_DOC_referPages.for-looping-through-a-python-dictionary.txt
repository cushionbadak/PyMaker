<div class="post-text" itemprop="text">
<p>I'm trying to for loop through a dictionary and print the first float value of every row but I have no idea how to choose that I want just those values.</p>
<p>My dictionary:</p>
<pre><code>{'abc': 123123, 'defg': [
    ['123.4', '10'],
    ['567.8', '10'],
    ['91011.12', '10']
]}
</code></pre>
<p>I want the output to be:</p>
<pre><code>123.4
567.8
91011.12
</code></pre>
<p>Also I want to sum those values. Is there easier way to do that with SUM method without looping?</p>
<p>Thanks for the help! I'm really lost with this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Ok I think I got it. Thanks to Ajax1234 and Jerfov2 for tips!</p>
<pre><code>s = {'abc': 123123, 'defg': [
['123.4', '10'],
['567.8', '10'],
['91011.12', '10']
]}
</code></pre>
<p>For loop and print:</p>
<pre><code>for x in s['defg']:
    print(x[0])
</code></pre>
<p>Outputs:</p>
<pre><code>123.4
567.8
91011.12
</code></pre>
<p>And the summing with for loop:</p>
<pre><code>summed = 0
for x in s['defg']:
    summed = summed + float(x[0])
print("%.2f" % summed)
</code></pre>
<p>Outputs:</p>
<pre><code>91702.32
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At the very end any functional approach in Python is just syntactic sugar, here are my 2 cents in a non-functional fashion:</p>
<pre><code>import ast
import itertools

s = {'abc': 123123, 'defg': [
    ['123.4', '10'],
    ['567.8', '10'],
    ['91011.12', '10']
]}

def str_is_float(value):
    if isinstance(value, str):
        value = ast.literal_eval(value)
    if isinstance(value, float):
        return True
    else:
        return False

def get_floats(d):
    for k, v in d.items():
        if isinstance(v, list):
            for n in itertools.chain.from_iterable(v):
                if str_is_float(n):
                    yield float(n) 
        elif str_is_float(v):
            yield float(v)

floats = list(get_floats(s))

# Print all the floats
print(floats) 
# sum the floats
print(sum(x for x in floats))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>reduce</code> for a more functional solution:</p>
<pre><code>import re
import itertools
from functools import reduce
s = {'abc': 123123, 'defg': [
 ['123.4', '10'],
['567.8', '10'],
['91011.12', '10']
]}
new_s = list(itertools.chain(*[[float(c) for c in itertools.chain(*b) if re.findall('^\d+\.\d+$', c)] for a, b in s.items() if isinstance(b, list)]))
print(new_s)
print(reduce(lambda x, y:x+y, new_s))
</code></pre>
<p>Output:</p>
<pre><code>[123.4, 567.8, 91011.12]
91702.32
</code></pre>
</div>
<span class="comment-copy">But the item of <code>'abc'</code> is not a list (nor a list of list)... Should we only process items of the dictionary that are lists of lists? What have you tried?</span>
<span class="comment-copy">Ever seen the <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum</a> function?</span>
<span class="comment-copy"><code>sum(x[0] for x in mydict['defg'])</code></span>
<span class="comment-copy">There's nothing wrong with looping, just give it a try.</span>
