<div class="post-text" itemprop="text">
<p>How can I parse filenames with spaces, parentheses etc. into a variable?
Ex.</p>
<pre><code>'Album Artist - Song name (feat Musician) [Year]'
</code></pre>
<p>to</p>
<pre><code>'Album\ Artist\ \- Song\ name\ \(feat\ Musician\)\ \[Year\]'
</code></pre>
<p>I get the right format with <code>re.escape(filename)</code>. However if I store the print from <code>re.escape</code> into a variable it gets reversed to the initial naming. I know that I could use the <code>"string".replace('x', 'y')</code> method. But it does not appeal safe to me.</p>
<p>Does anybody know how I can fix this or work around this problem?
Using Python 3.5.3 btw.</p>
<p>EDIT example code:</p>
<pre><code>&gt;&gt;&gt; import re 
&gt;&gt;&gt; # this is an example array in the format how my filenames are named stored in files                                                                  &gt;&gt;&gt; files = ['AA - BB (CC) [DD]', 'EE - FF (GG) [HH]', 'II - JJ (KK) [LL]']
&gt;&gt;&gt; for f in files:
...     print(f)
...
AA - BB (CC) [DD]
EE - FF (GG) [HH]
II - JJ (KK) [LL]
&gt;&gt;&gt; for f in files:
...     print(re.escape(f))
...
AA\ \-\ BB\ \(CC\)\ \[DD\] # desired format
EE\ \-\ FF\ \(GG\)\ \[HH\]
II\ \-\ JJ\ \(KK\)\ \[LL\]
&gt;&gt;&gt; escaped = re.escape(files[0])
&gt;&gt;&gt; escaped
'AA\\ \\-\\ BB\\ \\(CC\\)\\ \\[DD\\]' # actual result
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The underlying problem sounds like passing file names that may contain characters that would need to be escaped as arguments to another program. I suggest looking at <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a>.</p>
<p>Specifically, see <a href="https://docs.python.org/3/library/subprocess.html#frequently-used-arguments" rel="nofollow noreferrer">frequently used arguments</a>:</p>
<blockquote>
<p><code>args</code> is required for all calls and should be a string, or a sequence of program arguments. <strong>Providing a sequence of arguments is generally preferred, as it allows the module to take care of any required escaping and quoting of arguments (e.g. to permit spaces in file names)</strong>. If passing a single string, either shell must be True (see below) or else the string must simply name the program to be executed without specifying any arguments.</p>
</blockquote>
<p>For example:</p>
<pre><code>import subprocess

file_names = [r'AA - BB (CC) [DD]', r'EE - FF (GG) [HH]', r'II - JJ (KK) [LL]']

for file_name in file_names:
    subprocess.call([r'touch', file_name])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your variable is ok. Try using <code>print(escaped)</code> not <code>escaped</code> alone.</p>
</div>
<span class="comment-copy">Could you show the code how you're doing this? I cannot replicate your problem</span>
<span class="comment-copy">@Mangohero1 added the code in the question. :)</span>
<span class="comment-copy">What are you trying to accomplish with this string?</span>
<span class="comment-copy">@Galen My script is downloading files and the class used does save them in the initial format. With the formatted code it is possible for me to do shell operations (i.e. with os.system()) which is only usable with the formatted string</span>
<span class="comment-copy">I suggest looking at <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a>. For example: <code>subprocess.call([r'rm', r'some name with spaces'])</code> From the documentation: "<code>args</code> is required for all calls and should be a string, or a sequence of program arguments. <b>Providing a sequence of arguments is generally preferred, as it allows the module to take care of any required escaping and quoting of arguments (e.g. to permit spaces in file names)</b>."</span>
