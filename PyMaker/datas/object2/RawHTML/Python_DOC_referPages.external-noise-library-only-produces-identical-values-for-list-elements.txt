<div class="post-text" itemprop="text">
<p>I am trying to teach myself how to use the Python external "noise" library that can be found on GitHub <a href="https://github.com/caseman/noise" rel="nofollow noreferrer">here</a>. I'm trying to work through the tutorial on the Red Blob Games website <a href="https://www.redblobgames.com/maps/terrain-from-noise/" rel="nofollow noreferrer">here</a>. However, I'm not sure how to actually make it do anything. I've read the help text that appears when I type <code>help(noise)</code> into the console, but there doesn't seem to be much information available.</p>
<p>Right now, it just prints 50 rows and columns worth of 0.0 float elements. If I change the arguments I put into <code>noise.pnoise2(nx, ny)</code> I can get different values, but all the values are still identical. I have checked the addresses of each row in the 2D list I create, and they aren't pointing the same place.</p>
<p>I am just beginning to learn about Perlin Noise, and I don't need it to actually do anything useful. I just want to see the numbers it generates. </p>
<p><em>How can I get my code to produce different float values?</em></p>
<pre><code>import noise

height = 50
width = 50

mapList = []

for y in range(height):

    row = []

    for x in range(width):

        nx = x/width - 0.5
        ny = y/height - 0.5

        row.append(noise.pnoise2(nx, ny))

    mapList.append(row)

for row in mapList:
    print(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you're on Python 2, the regular <code>/</code> division floors the answer. You'll need to use <code>from __future__ import division</code> to get the true decimal result when using <code>/</code>.</p>
</div>
<span class="comment-copy">Your code is working for me on Python 3. Did you try <code>from __future__ import division</code>?</span>
<span class="comment-copy">@BrendanMartin Hey! That worked! Thanks! Add an answer, and I'll approve it.</span>
<span class="comment-copy">You are passing <code>-0.5</code> as both the <code>nx</code> and <code>ny</code> parameters on every single call to <code>.pnoise2()</code>, thus a constant result is to be expected.  <code>/</code> on integers returns an integer (always zero) in Python 2.x!</span>
<span class="comment-copy">@jasonharper I had forgotten about that. Thank you.</span>
