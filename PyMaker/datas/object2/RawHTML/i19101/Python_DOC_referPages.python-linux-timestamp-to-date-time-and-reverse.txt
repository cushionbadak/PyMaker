<div class="post-text" itemprop="text">
<p>i would like to know how to convert datetime <code>Wed Apr 24 19:25:06 2013 GMT</code> into Linux timestamp <code>1366831506000</code> (13 digits)] and reverse using python.</p>
<p>for example:</p>
<pre><code>Wed Apr 24 19:25:06 2013 GMT
</code></pre>
<p>to</p>
<pre><code>1366831506000
</code></pre>
<p>and from</p>
<pre><code>1366831506000
</code></pre>
<p>to</p>
<pre><code>Wed Apr 24 19:25:06 2013 GMT
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From string to timestamp, use <a href="http://docs.python.org/3/library/time.html#time.strptime" rel="noreferrer"><code>time.strptime()</code></a>, passing the resulting <code>struct_time</code> tuple to <a href="http://docs.python.org/3/library/time.html#time.mktime" rel="noreferrer"><code>time.mktime()</code></a>; your timestamp uses <em>milliseconds</em>, not the UNIX seconds-as-floating-point value, so you need to multiply by 1000:</p>
<pre><code>import time

datestr = "Wed Apr 24 19:25:06 2013 GMT"
time.mktime(time.strptime(datestr, "%a %b %d %H:%M:%S %Y %Z")) * 1000
</code></pre>
<p>In the other direction, use <a href="http://docs.python.org/3/library/time.html#time.strftime" rel="noreferrer"><code>time.strptime()</code></a>, passing in a <code>struct_time</code> tuple created by <a href="http://docs.python.org/3/library/time.html#time.gmtime" rel="noreferrer"><code>time.gmtime()</code></a>, dividing the timestamp by 1000 first:</p>
<pre><code>timestamp = 1366831506000
time.strftime("%a %d %b %Y %H:%M:%S GMT", time.gmtime(timestamp / 1000.0))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; datestr = "Wed Apr 24 19:25:06 2013 GMT"
&gt;&gt;&gt; time.mktime(time.strptime(datestr, "%a %b %d %H:%M:%S %Y %Z")) * 1000
1366827906000.0
&gt;&gt;&gt; timestamp = 1366831506000
&gt;&gt;&gt; time.strftime("%a %d %b %Y %H:%M:%S GMT", time.gmtime(timestamp / 1000.0))
'Wed 24 Apr 2013 19:25:06 GMT'
</code></pre>
</div>
<span class="comment-copy"><code>import time</code> <code>str(time.strftime("%a %b %d %H:%M:%S %Y GMT", time.gmtime()))</code> to get <code>Wed Apr 24 19:25:06 2013 GMT</code> from the program directly</span>
<span class="comment-copy">thank you so much for your help Martijn Pieters</span>
<span class="comment-copy">hi i am really sorry i was not clear with my question before, i am trying to convert 'datestr = "Wed Apr 24 19:25:06 2013 +7200"' [+7200 = offset in seconds for GMT+2 (Europe/Berlin Time Zone)] into linux timestamp but this didn't work with the demo you have given above</span>
<span class="comment-copy">@sanjayanravi: No, to handle timezones you need an external library. Use <a href="https://pypi.python.org/pypi/python-dateutil" rel="nofollow noreferrer"><code>python-dateutil</code></a>.</span>
<span class="comment-copy">@sanjayanravi: <code>+7200</code> is a <i>weird</i> offset, expressed in seconds instead of hours and minutes. <code>+0200</code> would be the correct UTC offset.</span>
<span class="comment-copy">python program is not accepting  hours and minutes +0200 for GMT+2 it is accepting only the Epoch (reference date) format according to the following link <a href="http://www.epochconverter.com/epoch/timezones.php?epoch=1366888990" rel="nofollow noreferrer">epochconverter.com/epoch/timezones.php?epoch=1366888990</a></span>
