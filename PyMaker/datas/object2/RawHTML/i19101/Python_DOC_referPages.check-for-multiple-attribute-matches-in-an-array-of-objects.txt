<div class="post-text" itemprop="text">
<p>I have an array of objects (they are all the same object type) and they have multiple attributes, is there a way to return a smaller array of objects where all the attributes match a test case, string, what ever that attribute type is.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a list comprehension with <a href="http://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all()</code></a>; the following presumes that a <code>list_of_attributes</code> has been predefined to enumerate what attributes you wanted to test:</p>
<pre><code>sublist = [ob for ob in larger_list if all(getattr(ob, attr) == 'some test string' for attr in list_of_attributes)]
</code></pre>
<p>Alternatively, if your input list is large, and you only need to access the matching elements one by one, use a generator expression:</p>
<pre><code>filtered = (ob for ob in larger_list if all(getattr(ob, attr) == 'some test string' for attr in list_of_attributes))
for match in filtered:
    # do something with match
</code></pre>
<p>or you can use the <a href="http://docs.python.org/3/library/functions.html#filter" rel="nofollow"><code>filter()</code> function</a>:</p>
<pre><code>filtered = filter(lambda ob: all(getattr(ob, attr) == 'some test string' for attr in list_of_attributes)
for match in filtered:
    # do something with match
</code></pre>
<p>Instead of using a pre-defined <code>list_of_attributes</code>, you could test all the attributes with the <a href="http://docs.python.org/3/library/functions.html#vars" rel="nofollow"><code>vars()</code> function</a>; this presumes that <strong>all</strong> instance attributes need to be tested:</p>
<pre><code>all(value == 'some test string' for key, value in vars(ob))
</code></pre>
</div>
<span class="comment-copy">Did you mean list perhaps, instead of array? The default <code>[]</code> type is a list, but the <code>numpy</code> library has arrays.</span>
<span class="comment-copy">In my case and list is as good as an array, you answer below solves my immediate problem. (which I have to wait 10 minutes to accept apparently)</span>
<span class="comment-copy">This answers my question, I find it a bit slow as I have a smallish list on one side and a large list on the other (the small list is fairly large itself)</span>
