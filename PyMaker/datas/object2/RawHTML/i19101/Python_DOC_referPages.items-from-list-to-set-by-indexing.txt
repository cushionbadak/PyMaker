<div class="post-text" itemprop="text">
<p>Given a list,</p>
<pre><code>a_list=['chicken','pizza','burger','beer','vodka','potato','fries','mustache']
</code></pre>
<p>I'm attempting to make a new set of each six word phrase...</p>
<pre><code>a_set=(['chicken','pizza','burger','beer','vodka','potato'],['pizza','burger','beer','vodka','potato','fries],['burger','beer','vodka','potato','fries','mustache'])
</code></pre>
<p>I'm attempting to do this by indexing..</p>
<pre><code>index1=0
index2=6
a_set=[]
while True:
    a_set.append(a_list[index1:index2])
    index1+=1
    index2+=1
print (a_set)
</code></pre>
<p>I can't seem to figure out what I'm doing wrong. Also, how would I go about ending the loop once it has gone through and created all of the six word phrases and gotten to the end of the list so that it doesn't start from the beginning and do it all again? Thanks for any and all help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for a <a href="https://stackoverflow.com/questions/6822725/rolling-or-sliding-window-iterator-in-python">sliding window generator</a> instead:</p>
<pre><code>from itertools import islice

def window(seq, n=2):
    "Returns a sliding window (of width n) over data from the iterable"
    "   s -&gt; (s0,s1,...s[n-1]), (s1,s2,...,sn), ...                   "
    it = iter(seq)
    result = tuple(islice(it, n))
    if len(result) == n:
        yield result    
    for elem in it:
        result = result[1:] + (elem,)
        yield result

list(window(a_list, 6))    
</code></pre>
<p>which gives:</p>
<pre><code>&gt;&gt;&gt; list(window(a_list, 6)) 
[('chicken', 'pizza', 'burger', 'beer', 'vodka', 'potato'), ('pizza', 'burger', 'beer', 'vodka', 'potato', 'fries'), ('burger', 'beer', 'vodka', 'potato', 'fries', 'mustache')]
</code></pre>
<p>You are not creating <a href="http://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">python <code>set</code>s</a> here, you need to be careful with your terminology.</p>
<p>Specifically, you are not testing when the second index reaches the end of the list:</p>
<pre><code>a_windows = []
index1 = 0
index2 = 6

while index2 &lt;= len(a_list):
    a_windows.append(a_list[index1:index2])
    index1 += 1
    index2 += 1
</code></pre>
<p>which works:</p>
<pre><code>&gt;&gt;&gt; a_windows
[['chicken', 'pizza', 'burger', 'beer', 'vodka', 'potato'], ['pizza', 'burger', 'beer', 'vodka', 'potato', 'fries'], ['burger', 'beer', 'vodka', 'potato', 'fries', 'mustache']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps this would help</p>
<pre><code>def get_set(li, phrase_len):
    l = len(li)
    for i in range(l):
        if phrase_len &lt;= l-i:
            yield(li[i:i+phrase_len])

a_list=['chicken','pizza','burger','beer','vodka','potato','fries','mustache']
print list(get_set(a_list, 6))
</code></pre>
<p>Run the code here <a href="http://codebunk.com/bunk#-IsxjI9Up1AgOfi0nuCd" rel="nofollow">http://codebunk.com/bunk#-IsxjI9Up1AgOfi0nuCd</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you correctly, you want all the possible combinations of six items of your list. <code>itertools.combinations</code> should make this very easy:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; a_list=['chicken','pizza','burger','beer','vodka','potato','fries','mustache']
&gt;&gt;&gt; a_set=set(itertools.combinations(a_list, 6))
&gt;&gt;&gt; pprint(a_set)
{('burger', 'beer', 'vodka', 'potato', 'fries', 'mustache'),
 ('chicken', 'beer', 'vodka', 'potato', 'fries', 'mustache'),
 ('chicken', 'burger', 'beer', 'potato', 'fries', 'mustache'),
 ('chicken', 'burger', 'beer', 'vodka', 'fries', 'mustache'),
 ('chicken', 'burger', 'beer', 'vodka', 'potato', 'fries'),
 ('chicken', 'burger', 'beer', 'vodka', 'potato', 'mustache'),
 ('chicken', 'burger', 'vodka', 'potato', 'fries', 'mustache'),
 ('chicken', 'pizza', 'beer', 'potato', 'fries', 'mustache'),
 ('chicken', 'pizza', 'beer', 'vodka', 'fries', 'mustache'),
 ('chicken', 'pizza', 'beer', 'vodka', 'potato', 'fries'),
 ('chicken', 'pizza', 'beer', 'vodka', 'potato', 'mustache'),
 ('chicken', 'pizza', 'burger', 'beer', 'fries', 'mustache'),
 ('chicken', 'pizza', 'burger', 'beer', 'potato', 'fries'),
 ('chicken', 'pizza', 'burger', 'beer', 'potato', 'mustache'),
 ('chicken', 'pizza', 'burger', 'beer', 'vodka', 'fries'),
 ('chicken', 'pizza', 'burger', 'beer', 'vodka', 'mustache'),
 ('chicken', 'pizza', 'burger', 'beer', 'vodka', 'potato'),
 ('chicken', 'pizza', 'burger', 'potato', 'fries', 'mustache'),
 ('chicken', 'pizza', 'burger', 'vodka', 'fries', 'mustache'),
 ('chicken', 'pizza', 'burger', 'vodka', 'potato', 'fries'),
 ('chicken', 'pizza', 'burger', 'vodka', 'potato', 'mustache'),
 ('chicken', 'pizza', 'vodka', 'potato', 'fries', 'mustache'),
 ('pizza', 'beer', 'vodka', 'potato', 'fries', 'mustache'),
 ('pizza', 'burger', 'beer', 'potato', 'fries', 'mustache'),
 ('pizza', 'burger', 'beer', 'vodka', 'fries', 'mustache'),
 ('pizza', 'burger', 'beer', 'vodka', 'potato', 'fries'),
 ('pizza', 'burger', 'beer', 'vodka', 'potato', 'mustache'),
 ('pizza', 'burger', 'vodka', 'potato', 'fries', 'mustache')}
</code></pre>
</div>
<span class="comment-copy">I don't see any sets. I only see lists in your examples. Are you certain you are not confused about the <a href="http://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">Python <code>set</code> type</a>? You set <code>a_set</code> to a <i><code>list</code></i>.</span>
