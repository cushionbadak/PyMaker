<div class="post-text" itemprop="text">
<p>So I am querying a database that is called golfDB and it consists of one table called players with 5 fields:</p>
<ul>
<li>name (player's name)</li>
<li>totalGross (sum of the gross scores from each round)</li>
<li>totalRounds (number of rounds played)</li>
<li>pars (total number of pars made)</li>
<li>birdies (total number of birdies made)</li>
</ul>
<p>In this function below I am trying to find the player/ players with the most pars.  It turns out that there are two players, so I am trying to figure out a way to make this print out better because currently it is printing the print statement twice but with the different player at the end.  I want to be able to make what I have designated as players be a list of both players, and then somehow print the players in the print statement more coherently.  Any ideas?</p>
<pre><code>def queryDBpars(cursor):
    """find out which player had the most pars"""
    cursor.execute('select name, pars from players where pars = (select max(pars) from players)')
    playerPars= cursor.fetchall()
    for items in playerPars:
        players= (items[0])
        print('The player(s) with the most pars is/are', players)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could store the players in a list, and use <a href="http://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow">join</a> in the print statement to show combine the list.</p>
<pre><code>players = list()
for items in playerPars:
    players.append(items[0])
print('The player(s) with the most pars is/are', ', '.join(players))
</code></pre>
<p>If you want to make it more elegant you could use <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow">list comprehension</a>.</p>
<pre><code>players = [player[0] for player in playerPars]
</code></pre>
<p>It would output: <code>The player(s) with the most pars is/are player1, player2</code></p>
<p>If you want to check the number of players so that you can format the text properly you could do something like this.</p>
<pre><code>if len(players) &gt; 1:
    print('The player(s) with the most pars are', ', '.join(players))
elif len(players) == 1:
    print('The player with the most pars is %s' % players[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="http://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join()</code></a> to combine the names:</p>
<pre><code>playerPars = cursor.fetchall()
print('The player(s) with the most pars is/are',
      ', '.join(p[0] for p in playerPars))
</code></pre>
<p>This joins the names with commas between them.</p>
</div>
<span class="comment-copy">A list comprehension would've been nicer.</span>
<span class="comment-copy">True @ThijsvanDien. But, I intentionally wanted to keep it simple and easy to understand. If I get time I might update my answer later.</span>
<span class="comment-copy">Perfectly valid reason, but still I wanted it mentioned. ;) I don't suggest to get rid of <code>playerPars</code> completely, for the sake of checking if it's empty. Just the looping seemed unnecessary.</span>
<span class="comment-copy">+1: Obviously the cleaner solution. ;)</span>
