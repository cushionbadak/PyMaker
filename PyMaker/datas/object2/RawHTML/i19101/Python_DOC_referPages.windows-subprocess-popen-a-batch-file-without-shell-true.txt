<div class="post-text" itemprop="text">
<p>I have a function that runs <code>lessc</code> (installed with <code>npm install -g less</code>):</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; subprocess.Popen(['lessc'])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\Python27\lib\subprocess.py", line 679, in __init__
    errread, errwrite)
  File "C:\Python27\lib\subprocess.py", line 896, in _execute_child
    startupinfo)
WindowsError: [Error 2] The system cannot find the file specified
</code></pre>
<p>Unfortunately, it doesn't work unless I add <code>shell=True</code>:</p>
<pre><code>&gt;&gt;&gt; subprocess.Popen(['lessc'], shell=True)
&lt;subprocess.Popen object at 0x01F619D0&gt;
</code></pre>
<p>What can I do to make <code>lessc</code> run without using <code>shell=True</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Change the file to lessc.bat, or create .bat file that calls lessc. That way the file will be recognized by Windows as a batch file and will be executed properly.</p>
<p>You may also need to set cwd in addition to this depending on where the .bat file is.</p>
</div>
<div class="post-text" itemprop="text">
<p>From both <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html#subprocess.Popen</a> and <a href="https://docs.python.org/2/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">https://docs.python.org/2/library/subprocess.html#subprocess.Popen</a>:</p>
<blockquote>
<p>You do not need <code>shell=True</code> to run a batch file or console-based executable.</p>
</blockquote>
<p>as already <a href="https://stackoverflow.com/questions/16137556/windows-subprocess-popen-a-batch-file-without-shell-true#comment23054228_16137556">cited by @JBernardo</a>.</p>
<p>So, lets try:</p>
<p><code>where lessc</code> actually tells</p>
<pre><code>C:\Users\myname\AppData\Roaming\npm\lessc
C:\Users\myname\AppData\Roaming\npm\lessc.cmd
</code></pre>
<p>That means, the file to execute is <code>lessc.cmd</code>, not some <code>.bat</code> file. And indeed:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; subprocess.Popen([r'C:\Users\myname\AppData\Roaming\npm\lessc.cmd'])
&lt;subprocess.Popen object at 0x035BA070&gt;
&gt;&gt;&gt; lessc: no input files

usage: lessc [option option=parameter ...] &lt;source&gt; [destination]
</code></pre>
<p>So, this <em>does</em> work if you specify the full path. I assume there was a typo involved when you had <a href="https://stackoverflow.com/questions/16137556/windows-subprocess-popen-a-batch-file-without-shell-true#comment23054022_16137556">this experience</a>. May be you wrote <code>.bat</code> instead of <code>.cmd</code>?</p>
<hr/>
<p>If you don't want to patch the full path of <code>lessc</code> into your script, you can bake yourself a <code>where</code>:</p>
<pre><code>import plaform
import os

def where(file_name):
    # inspired by http://nedbatchelder.com/code/utilities/wh.py
    # see also: http://stackoverflow.com/questions/11210104/
    path_sep = ":" if platform.system() == "Linux" else ";"
    path_ext = [''] if platform.system() == "Linux" or '.' in file_name else os.environ["PATHEXT"].split(path_sep)
    for d in os.environ["PATH"].split(path_sep):
        for e in path_ext:
            file_path = os.path.join(d, file_name + e)
            if os.path.exists(file_path):
                return file_path
    raise Exception(file_name + " not found")
</code></pre>
<p>Then you can write:</p>
<pre><code>import subprocess
subprocess.Popen([where('lessc')])
</code></pre>
</div>
<span class="comment-copy">Can you call the binary explicitly with its full path name without using <code>shell=True</code>?</span>
<span class="comment-copy">@kragniz: <code>lessc</code> is a batch file (which might actually be the problem) and the same error occurs when I run it with the full path.</span>
<span class="comment-copy">Is the error generated by the subprocess module itself or by the batch script? You can add <code>cwd=r'c:\path\to\script\'</code> argument on Popen call</span>
<span class="comment-copy">@JBernardo: The <code>subprocess</code> module. So there's no way to get around this problem without editing the script itself (it's part of an asset bundler for a web framework)?</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">The docs</a>: On Windows with <code>shell=True</code>, the COMSPEC environment variable specifies the default shell. The only time you need to specify <code>shell=True</code> on Windows is when the command you wish to execute is built into the shell (e.g. dir or copy). You do not need <code>shell=True</code> to run a batch file or console-based executable.</span>
<span class="comment-copy"><code>lessc</code> would have been at version 1.3.3 and <code>npm</code> at 1.2.18 when I asked this question five years ago. I don't have a Windows environment to test this with at the moment so perhaps something changed since then?</span>
