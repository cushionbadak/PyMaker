<div class="post-text" itemprop="text">
<p>I'm having trouble printing a message after checking if variables are true or false. What I want to do is print variables that are true out of a selecton of variables. There must be an easier way of doing it than the below but this is all I can come up with. I need a better solution or a modification on the below to make it work.</p>
<p>Here is my code:</p>
<pre><code>if (quirk) and not (minor, creator, nature):
    print (quirk, item)
elif (minor) and not (quirk, creator, nature):
    print (minor, item)
elif (creator) and not (minor, quirk, nature):
    print (creator, item)
elif (nature) and not (minor, quirk, creator):
    print (item, nature)
else:
    print ("Something went wrong! Properties out of range! Nature =",nature,"Quirk =",quirk,"Minor =",minor,"Creator =",creator)
</code></pre>
<p>In this case, I always get the error and never any of the prints. The error always shows that one of the variables is true.</p>
<p>Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are checking if a non-empty tuple is falsish - which is never true. Use <a href="http://docs.python.org/2/library/functions.html#any" rel="noreferrer"><code>any</code></a> instead.</p>
<pre><code>if quirk and not any([minor, creator, nature]):
    print (quirk, item)
# and so on
</code></pre>
<p><code>any([minor, creator, nature])</code> returns <code>True</code> if any of the elements in the collection are <code>True</code>, <code>False</code> otherwise.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>(minor, creator, nature)
</code></pre>
<p>is a tuple. And it always evaluates to <code>True</code> in a boolean context, irrespective of the values of <code>minor</code>, <code>creator</code> and <code>nature</code>. </p>
<p>This is what the <a href="http://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">documentation for Truth Value Testing</a> has to say:</p>
<blockquote>
<p>Any object can be tested for truth value, for use in an if or while
  condition or as operand of the Boolean operations below. The following
  values are considered false:</p>
<ul>
<li>None</li>
<li>False</li>
<li>zero of any numeric type, for example, 0, 0.0, 0j.</li>
<li>any empty sequence, for example, '', (), [].</li>
<li>any empty mapping, for example, {}.</li>
<li>instances of user-defined classes, if the class defines a <strong>bool</strong>() or <strong>len</strong>() method, when that method returns the integer zero or bool value False.</li>
</ul>
<p>All other values are considered true â€” so objects of many types are
  always true.</p>
</blockquote>
<p>Your non-empty sequence falls into the <em>"All other values"</em> category and so is regarded as being true.</p>
<hr/>
<p>To express your condition using plain Python logic, you need to write:</p>
<pre><code>if quirk and not minor and not creator and not nature:
</code></pre>
<p>As @Volatility points out, the <code>any()</code> utility function can be used to simplify your code and make it read more clearly.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>any</code> feels like overkill here:</p>
<pre><code>if quirk and not (minor or creator or nature):
    print (quirk, item)
elif minor and not (quirk or creator or nature):
    print (minor, item)
elif creator and not (minor or quirk or nature):
    print (creator, item)
elif nature and not (minor or quirk or creator):
    print (item, nature)
else:
    print ("Something went wrong! Properties out of range! Nature =",nature,"Quirk =",quirk,"Minor =",minor,"Creator =",creator)
</code></pre>
</div>
<span class="comment-copy">That totally worked! I'll accept the anser when the system will allow me to. Thanks! I think I need to read up on 'any'.</span>
<span class="comment-copy">@Simkill while you're at it, you might also want to read up on <a href="http://docs.python.org/2/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a>, which is a closely related function.</span>
