<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3503879/assign-output-of-os-system-to-a-variable-and-prevent-it-from-being-displayed-on">Assign output of os.system to a variable and prevent it from being displayed on the screen</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to get the output of <code>pwd</code>:</p>
<pre><code>#!python
import os
pwd = os.system("pwd")
print (pwd)
</code></pre>
<p>it prints 0 which is the successful exit status instead the path.
How can i get the path instead?</p>
</div>
<div class="post-text" itemprop="text">
<p>Running system commands is better done with <a href="http://docs.python.org/3/library/subprocess.html"><code>subprocess</code></a>, but if you are using <code>os</code> already, why not just do</p>
<pre><code>pwd = os.getcwd()
</code></pre>
<p><a href="http://docs.python.org/3/library/os.html#os.getcwd"><code>os.getcwd()</code></a> is available on Windows and Unix.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the current working directory, use <a href="http://docs.python.org/2/library/os.html#os.getcwd" rel="nofollow">os.getcwd()</a>. But in general, if you want both the output and the return code:</p>
<pre><code>import subprocess
PIPE = subprocess.PIPE
proc = subprocess.Popen(['pwd'], stdout=PIPE, stderr=PIPE)
out, err = proc.communicate()
errcode = proc.returncode
print(out)
print(errcode)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't do that with <code>os.system</code>, although <code>os.popen</code> does return that value for you:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.popen('pwd').read()
'/c/Python27\n'
</code></pre>
<p>However the <code>subprocess</code> module is much more powerful and should be used instead:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; p = subprocess.Popen('pwd', stdout=subprocess.PIPE)
&gt;&gt;&gt; p.communicate()[0]
'/c/Python27\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Current directory full path:</p>
<pre><code>import os
print os.getcwd()
</code></pre>
</div>
<span class="comment-copy">With <code>subprocess.Popen</code> you can store stdout/stderr in variables.</span>
<span class="comment-copy">I hope you understand that for that particular purpose you should use os.getcwd() .</span>
<span class="comment-copy">Also on MAC! (also Unix like - but just in case...) I've just used it :)</span>
