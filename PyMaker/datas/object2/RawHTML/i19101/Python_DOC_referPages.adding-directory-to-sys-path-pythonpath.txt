<div class="post-text" itemprop="text">
<p>I am trying to import a module from a particular directory. </p>
<p>The problem is that if I use <code>sys.path.append(mod_directory)</code> to append the path and then open the python interpreter, the directory <code>mod_directory</code> gets added to the end of the list sys.path. If I export the <code>PYTHONPATH</code> variable before opening the python interpreter, the  directory gets added to the start of the list. In the latter case I can import the module but in the former, I cannot.</p>
<p>Can somebody explain why this is happening and give me a solution to add the <code>mod_directory</code> to the start, <em>inside</em> a python script ?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is working as documented.  Any paths specified in <code>PYTHONPATH</code> are documented as normally coming after the working directory but before the standard interpreter-supplied paths.  <code>sys.path.append()</code> appends to the existing path.  See <a href="http://docs.python.org/2/using/cmdline.html#envvar-PYTHONPATH" rel="noreferrer">here</a> and <a href="http://docs.python.org/2/library/sys.html#sys.path" rel="noreferrer">here</a>.  If you want a particular directory to come first, simply insert it at the head of sys.path:</p>
<pre><code>import sys
sys.path.insert(0,'/path/to/mod_directory')
</code></pre>
<p>That said, there are usually better ways to manage imports than either using <code>PYTHONPATH</code> or manipulating <code>sys.path</code> directly.  See, for example, the answers to <a href="https://stackoverflow.com/questions/1893598/pythonpath-vs-sys-path">this question</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use:</p>
<pre><code>import os
path = 'the path you want'
os.environ['PATH'] += ':'+path
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As to me, i need to caffe to my python path. I can add it's path to the file 
 <code>/home/xy/.bashrc</code> by add </p>
<p><code>export PYTHONPATH=/home/xy/caffe-master/python:$PYTHONPATH</code>.</p>
<p>to my <code>/home/xy/.bashrc</code> file.</p>
<p>But when I use pycharm, the path is still not in.</p>
<p>So I can add path to <code>PYTHONPATH</code> variable, by run -&gt; edit Configuration.</p>
<p><a href="https://i.stack.imgur.com/Ze73X.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Ze73X.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Temporarily changing dirs works well for importing:</p>
<pre><code>cwd = os.getcwd()
os.chdir(&lt;module_path&gt;)
import &lt;module&gt;
os.chdir(cwd)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When running a Python script from Powershell under Windows, this should work:</p>
<pre><code>$pathToSourceRoot = "C:/Users/Steve/YourCode"
$env:PYTHONPATH = "$($pathToSourceRoot);$($pathToSourceRoot)/subdirs_if_required"

# Now run the actual script
python your_script.py
</code></pre>
</div>
<span class="comment-copy">I have tried <a href="https://docs.python.org/3/library/site.html#site.addsitedir" rel="nofollow noreferrer"><code>site</code> module</a>.</span>
<span class="comment-copy">thanks for the reply. The problem was that I didn't realize that to add module packaged as a .egg file you have to include the filename instead of just the directory in python 2.6</span>
<span class="comment-copy">Hey man, this broke my django.  Are you sure you mean to tell people to put it at the top?!?!!?</span>
<span class="comment-copy">@RClaven, sorry, it's hard to tell what action and results you are referring to: "put it at the top" and "broke my django" aren't very precise.  Can you elaborate?</span>
<span class="comment-copy">For more about how sys.path works, see this answer <a href="http://stackoverflow.com/a/38403654/850326">stackoverflow.com/a/38403654/850326</a></span>
<span class="comment-copy">just a side note: <code>sys.path</code> is zero-indexed as any list, so it should be <code>sys.path.insert(0, '/path/to/mod_directory')</code></span>
<span class="comment-copy">The simplest is the best answer, add this for development will make the autocomplete work</span>
<span class="comment-copy">I have updated the .bashrc as explained above but did not reflect in the jupyter notebook. Jupyter notebook still says module not found.</span>
