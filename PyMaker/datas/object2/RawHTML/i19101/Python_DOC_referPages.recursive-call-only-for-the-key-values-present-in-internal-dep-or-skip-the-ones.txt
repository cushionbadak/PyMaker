<div class="post-text" itemprop="text">
<p>I have the following code which recursively calls each value in internal_dep,is there a way the function call can be changed to call only for the keys present in internal_dep or skip the call for the ones in skip list?</p>
<pre><code>internal_dep = {'313115': ['313113'], '313117': ['313115'], '313137': ['313136'], '313136': ['313119'], '313119': ['313118'], '313118': ['313117']}
mainlist = ['313137', '317152' , '314449']
skip = ['313113']

def _getdep(item):
    local_list, temp_list = [], []
    temp_list.extend(internal_dep[item])
    local_list.extend(temp_list)
    for new_item in temp_list:
        local_list.extend(_getdep(new_item))
    return local_list

build_dep_list = []
for item in mainlist:
    build_dep_list.append(item)
    build_dep_list.extend(_getdep(item))

print build_dep_list
</code></pre>
<p>ERROR:-</p>
<pre><code>Traceback (most recent call last):
  File "test.py", line 16, in &lt;module&gt;
    build_dep_list.extend(_getdep(item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 10, in _getdep
    local_list.extend(_getdep(new_item))
  File "test.py", line 6, in _getdep
    temp_list.extend(internal_dep[item])
KeyError: '313113'

EXPECTED OUTPUT:-
['313115', '313113', '313117','313137','313136','313119','313118','313117']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would modify the _getdep function to something like this:</p>
<pre><code>def _getdep(item):
    final_dep = []
    dep = internal_dep.get(item, [])
    final_dep.extend(internal_dep.get(item, []))
    for i in [d for d in dep if d not in skip]:
        final_dep.extend(_getdep(i))
    return final_dep
</code></pre>
<p>For the use of internal_dep.get(item, []) see: <a href="http://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow">http://docs.python.org/3/library/stdtypes.html#dict.get</a> (it returns either the value of internal_dep[item] or if there is no such key an empty list)<br/>
<strong>Output:</strong> </p>
<pre><code>['313137', '313136', '313119', '313118', '313117', '313115', '313113', '317152', '314449']
</code></pre>
</div>
<span class="comment-copy">You mean call only the ones that are in <code>mainlist</code> and skip keys that are in <code>skip</code> list?</span>
<span class="comment-copy">@AshwiniChaudhary - yes,call the ones in the mainlist and its dependencies ,only the keys mentioned in internal_dep</span>
<span class="comment-copy">See my edited solution.</span>
<span class="comment-copy">- thanks for your inputs..but my output is correct,in your output "313113" is missing..still need that to be printed...</span>
<span class="comment-copy">Thanks, i modify it. In your question you use <code>build_dep_list.append(item)</code>. Then '317152' and '314449' have to be in the output.</span>
<span class="comment-copy">you are right in that part but your output is missing "313113"</span>
<span class="comment-copy">Not anymore, I have modified it (it is the 3rd entry from the end)</span>
<span class="comment-copy">how is this different from the original one you provided..i created a pastie link for the original one <a href="http://pastie.org/7732621" rel="nofollow noreferrer">pastie.org/7732621</a> ...both are giving the same output/</span>
