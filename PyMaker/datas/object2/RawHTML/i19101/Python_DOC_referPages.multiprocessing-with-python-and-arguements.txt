<div class="post-text" itemprop="text">
<p>related to my last post (Which somehow got marked off and closed),
I wrote some code to create a thread for a command handler for my python TCP listener. What basically happens is that I send in some data and it goes in the TCP connecter. Then the TCP connector creates another process and sends the data that it received through the process to the function in the command listener. I do not know what is going on. Please help!</p>
<pre><code>            import socket
    import sys
    import errno
    from multiprocessing import Process, Queue  # @UnresolvedImport
    import CommandHandler


    class tcpconnection:
        def tcp(self):
            data = ''
            q = Queue()
            p = Process(target=CommandHandler.CommandHandler.commands(), args=(self, data))
            #
            HOST = ''                 # Symbolic name meaning all available interfaces
            PORT = 9999              # Arbitrary non-privileged port
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.bind((HOST, PORT))
            s.listen(1)
            conn, addr = s.accept()
            print('Connected by', addr)
            while True:
                data = conn.recv(1024)
                p.start()
                p.join()
                if not data: break
                conn.send(data)
            conn.close()
</code></pre>
<p>Says that:</p>
<pre><code>    p = Process(target=CommandHandler.CommandHandler.commands(), args=(self, data))
    TypeError: unbound method commands() must be called with CommandHandler instance as first argument (got nothing instead)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>target=CommandHandler.CommandHandler.commands()</code> sets the <code>target</code> argument to the result of the invocation of the <code>commands</code> method. What you probably intended to do was to use that method as tharget, so you should use:</p>
<pre><code>p = Process(target=CommandHandler.CommandHandler.commands, args=(self, data))
</code></pre>
<p>Also the error tells you that you're trying to call an unbound method on a class, but you need an object to call it on, probably:</p>
<pre><code>p = Process(target=CommandHandler.CommandHandler().commands, args=(self, data))
</code></pre>
<p>but that's not your only issue:</p>
<pre><code>while True:
    data = conn.recv(1024)
    p.start()
    p.join()
</code></pre>
<p>This loop will fail after the first invocation, because you can't restart an already started process.</p>
</div>
<span class="comment-copy">But how do I create a new Process or close the old one?</span>
<span class="comment-copy">you need to create a new process instance each time. do you really want to start a new process for every received packet? typically you would do that for every accepted connection...</span>
<span class="comment-copy">mata , how would I still transfer strings to the other process? With using one process? Thx</span>
<span class="comment-copy">usually you would use a queue or other ipc mechanisms to exchange data between processes( check the <a href="http://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes" rel="nofollow noreferrer">docs</a>), or <a href="http://docs.python.org/3/library/multiprocessing.html#managers" rel="nofollow noreferrer">managers</a>...</span>
