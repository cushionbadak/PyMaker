<div class="post-text" itemprop="text">
<p>I have my code but it doesn't seem to work as expected. It needs to ask the user for input to search a file once found doesn't ask again but keeps asking. But I want it to ask the user again if the file hasn't been found. My code is as followed:</p>
<pre><code>import os, sys
from stat import *
from os.path import join

while True:
    lookfor=input("\nPlease enter file name and extension for search? \n")
    for root, dirs, files in os.walk("C:\\"):
        print("Searching", root)
        if lookfor in files:
            print("Found %s" % join(root, lookfor))
            break
        else:
            print ("File not found, please try again")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is you're only breaking the inner loop (the <code>for</code>).</p>
<p>You can put this in a function and return instead of breaking, or raise and catch an exception, as suggested here: <a href="https://stackoverflow.com/questions/653509/breaking-out-of-nested-loops">Breaking out of nested loops</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>break</code> just aborts the inner for loop. You can simply use a helper variable:</p>
<pre><code>import os, sys

while True:
    lookfor=input("\nPlease enter file name and extension for search? \n")
    found = False
    for root, dirs, files in os.walk("C:\\"):
        print("Searching", root)
        if lookfor in files:
            print("Found %s" % os.path.join(root, lookfor))
            found = True
            break
     if found:
         break
     print ("File not found, please try again")
</code></pre>
<p>Alternatively, make it a function and use <code>return</code>:</p>
<pre><code>def search():
    while True:
        lookfor=input("\nPlease enter file name and extension for search? \n")
        for root, dirs, files in os.walk("C:\\"):
            print("Searching", root)
            if lookfor in files:
                print("Found %s" % os.path.join(root, lookfor))
                return
        print ("File not found, please try again")
search()
</code></pre>
<p>You can also use the <a href="http://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow"><code>for..else</code> construct</a>:</p>
<pre><code>while True:
    lookfor=input("\nPlease enter file name and extension for search? \n")
    for root, dirs, files in os.walk("C:\\"):
        print("Searching", root)
        if lookfor in files:
            print("Found %s" % os.path.join(root, lookfor))
            break
    else:
        print ("File not found, please try again")
        continue
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>break</code> is inside the for-loop so it only breaks you out of the for-loop not the <code>while</code> loop.</p>
<pre><code>import os, sys
from stat import *
from os.path import join

condition=True 

while condition:
    lookfor=input("\nPlease enter file name and extension for search? \n")
    for root, dirs, files in os.walk("C:\\"):
        print("Searching", root)
        if lookfor in files:
            print("Found %s" % join(root, lookfor))
            condition = False      #set condition to False and then break
            break
        else:
            print ("File not found, please try again")
</code></pre>
</div>
