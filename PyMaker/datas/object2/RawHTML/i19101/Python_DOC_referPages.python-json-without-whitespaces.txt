<div class="post-text" itemprop="text">
<p>I just realized that <code>json.dumps()</code> adds spaces in the JSON object</p>
<p>e.g.</p>
<pre><code>{'duration': '02:55', 'name': 'flower', 'chg': 0}
</code></pre>
<p>how can remove the spaces in order to make the JSON more compact and save bytes to be sent via HTTP?</p>
<p>such as:</p>
<pre><code>{'duration':'02:55','name':'flower','chg':0}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>json.dumps(separators=(',', ':'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In some cases you may want to get rid of the <strong>trailing whitespaces</strong> only.
You can then use</p>
<pre><code>json.dumps(separators=(',', ': '))
</code></pre>
<p>There is a space after <code>:</code> but not after <code>,</code>.</p>
<p>This is useful for diff'ing your JSON files (in version control such as <code>git diff</code>), where some editors will get rid of the trailing whitespace but python json.dump will add it back.</p>
<p><em>Note: This does not exactly answers the question on top, but I came here looking for this answer specifically. I don't think that it deserves its own QA, so I'm adding it here.</em></p>
</div>
<span class="comment-copy">Python 3.4 fixes this: <code>Changed in version 3.4: Use (',', ': ') as default if indent is not None.</code> <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer">docs.python.org/3/library/json.html#json.dump</a></span>
<span class="comment-copy">Very useful for doctests with json validation.</span>
<span class="comment-copy">And also note that <code>indent=0</code> generates newlines, while <code>indent=None</code> (default) does not in 2.7. All is clearly stated at: <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer">docs.python.org/3/library/json.html#json.dump</a></span>
<span class="comment-copy"><code>ujson</code> defaults to dumps without whitespace but sadly it doesn't support <code>separators</code> keyword so can't add space back if desired. It is a lot faster though vs built in <code>json</code>!</span>
