<div class="post-text" itemprop="text">
<p>Is there an objective definition? Is it implemented as a fragment of python's source code? If so, could someone produce the exact code lines? Have all languages with, say, a 'for' statement iterator protocols of their own?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's located <a href="http://docs.python.org/2/library/stdtypes.html#iterator-types">here</a> in the docs:</p>
<p>One method needs to be defined for container objects to provide iteration support:</p>
<p><code>container.__iter__()</code></p>
<p>Return an iterator object. The object is required to support the iterator protocol described below. If a container supports different types of iteration, additional methods can be provided to specifically request iterators for those iteration types. (An example of an object supporting multiple forms of iteration would be a tree structure which supports both breadth-first and depth-first traversal.) This method corresponds to the <code>tp_iter</code> slot of the type structure for Python objects in the Python/C API.</p>
<p>The iterator objects themselves are required to support the following two methods, which together form the iterator protocol:</p>
<p><code>iterator.__iter__()</code></p>
<p>Return the iterator object itself. This is required to allow both containers and iterators to be used with the for and in statements. This method corresponds to the <code>tp_iter</code> slot of the type structure for Python objects in the Python/C API.</p>
<p><code>iterator.next()</code></p>
<p>Return the next item from the container. If there are no further items, raise the StopIteration exception. This method corresponds to the <code>tp_iternext</code> slot of the type structure for Python objects in the Python/C API.</p>
</div>
<span class="comment-copy"><a href="http://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">Most languages don't implement Python-like for statements (which are really best described as "foreach"). The C-standard <code>for(init,cond,incr)</code> is nothing like Python's for loop.</span>
<span class="comment-copy">Also <code>next</code> is <code>__next__</code> in py3</span>
<span class="comment-copy">If you add an example I'll vote up. ;-)</span>
