<div class="post-text" itemprop="text">
<p>I have a list with some book names and their authors, but I want it to look organized, so I want it to take the book title, then complete it with spaces so it ends up with 100 characters, independent of the length of the book title. It would, then, add the book title.<br/>
So far I've tried this:</p>
<pre><code>for i in range(0, len(bookList)):
    t = 100 - len(bookList[i])
    numbofspaces = ""
    for j in range(0, t):
        numbofspaces += " "

    s.append(bookList[i] + numbofspaces + authorList[i])
</code></pre>
<p>When I tried it in the python shell it worked pretty well, but when it takes the titles from the list, it doesn't work, why is that?</p>
</div>
<div class="post-text" itemprop="text">
<p>use string method : <code>str.rjust(100)</code></p>
<pre><code>&gt;&gt;&gt; x = [ 'charles dickens','shakespeare','j k rowling']
&gt;&gt;&gt; for name in x:
...     print(name.rjust(50))
... 
                                   charles dickens
                                       shakespeare
                                       j k rowling
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While <code>str.ljust()</code>/<code>str.rjust()</code> are good, simple solutions if this is all you want to do, it's worth noting that if you are doing other formatting, you can do this as a part of string formatting:</p>
<pre><code>&gt;&gt;&gt; '{:&lt;30}'.format('left aligned')
'left aligned                  '
&gt;&gt;&gt; '{:&gt;30}'.format('right aligned')
'                 right aligned'
</code></pre>
<p>From <a href="http://docs.python.org/3/library/string.html#format-string-syntax">the docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>while this might not really be the answer to your question, you could just use</p>
<pre><code>booklist[i].ljust(100)
</code></pre>
<p>and be done with it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Besides from the unexplained failure, you have some really complicated code where you don't need it:</p>
<p><code>range(0, i)</code> can be written as <code>range(i)</code></p>
<p>You can write the for loop better:</p>
<pre><code>for i, book in enumerate(bookList):
    t = 100 - len(book)
    numbofspaces = ""
    for j in range(t):
        numbofspaces += " "

    s.append(book + spaces + authorList[i])
</code></pre>
<p>You can multiply a string: <code>'a' * 10 == 'aaaaaaaaaa'</code></p>
<p>And, like @DhruvPathak said, you can just use <code>''.r/ljust()</code>.</p>
</div>
<span class="comment-copy">maybe the list is empty?</span>
<span class="comment-copy">no, it's not. I mean, it prints the book title, and the author name, but the number of spaces in between doesn't make it complete 100 characters</span>
<span class="comment-copy">Are there unicode characters? I'm not sure how python handles the length of them, this could possibly cause it.</span>
<span class="comment-copy">There are line breakers ('\n') and appearently they are the cause of the problem.</span>
<span class="comment-copy">I think <code>ljust</code> may be more appropriate if the spaces should be on the right of the variable-length part. Also, neither of the justification methods will fix a name that is too long, so if there's a risk of a title longer than 100 characters in the list of books, you'll need to trim it before justifying.</span>
<span class="comment-copy">The thing is, it works when I try it on the shell, printing the string, but when I actually use it on my code it just doesn't do it right.</span>
<span class="comment-copy">for the specific question, this method seems like the best fit.</span>
<span class="comment-copy">Or use <code>zip</code> to iterate over the book and author lists together.</span>
