<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1720421/how-do-i-concatenate-two-lists-in-python">How do I concatenate two lists in Python?</a>
<span class="question-originals-answer-count">
                    30 answers
                </span>
</li>
</ul>
</div>
<p>I would like to take the following lists:</p>
<pre><code>matrix1 = [
[1, 2, 3, 4],
[5, 6, 7, 8],
[9, 10, 11, 12]
]

matrix2 = [
[A, B, C, D],
[E, F, G, H]
]
</code></pre>
<p>and combine them into:</p>
<pre><code>new_matrix = [
[A, B, C, D],
[E, F, G, H],
[1, 2, 3, 4],
[5, 6, 7, 8],
[9, 10, 11, 12]
]
</code></pre>
<p>And I can't seem to figure out a good method. Insert() puts the whole list in, resulting in a list of lists of lists. Any suggestions would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just ADD them!</p>
<pre><code>new_matrix = matrix1 + matrix2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>+</code> to add them:</p>
<pre><code>In [59]: new_matrix = matrix2 + matrix1

In [60]: new_matrix
Out[60]: 
[['A', 'B', 'C', 'D'],
 ['E', 'F', 'G', 'H'],
 [1, 2, 3, 4],
 [5, 6, 7, 8],
 [9, 10, 11, 12]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <code>extend</code> it extends the list with another rather than inserting it inside.</p>
<pre><code>&gt;&gt;&gt; matrix2.extend(matrix1)
</code></pre>
<p>However, this will make the changes in place rather than creating a new list, which might be what you want. If you would rather create a new one, then <code>+</code> is what you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use the <code>+</code> operator</p>
<pre><code>&gt;&gt;&gt; a = [[1],[2],[3]]
&gt;&gt;&gt; b = [[4],[5],[6]]
&gt;&gt;&gt; a+b
[[1], [2], [3], [4], [5], [6]]
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generic solutions for many lists:</p>
<p>Either:</p>
<pre><code>new_matrix = list(itertools.chain(matrix1, matrix2, matrix3, ...)
</code></pre>
<p>Or:</p>
<pre><code>new_matrix = sum(matrix1, matrix2, matrix3, ..., default=[])
</code></pre>
<p>Or with a list of lists:</p>
<pre><code>new_matrix = list(itertools.chain(*matrices)
</code></pre>
<p>Or:</p>
<pre><code>new_matrix = sum(*matrices, default=[])
</code></pre>
</div>
<span class="comment-copy">Well don't I feel stupid. Thanks :)</span>
<span class="comment-copy">+1, It's worth noting that, while this is correct, the OP shows a new variable holding the values, while this modifies the list in-place. It obviously depends which is wanted.</span>
<span class="comment-copy">@Lattyware thanks for noting that. I have updated the answer to make that clear.</span>
<span class="comment-copy">-1, <a href="http://docs.python.org/3.3/library/functions.html#sum" rel="nofollow noreferrer">the documentation for <code>sum()</code> specifically recommends against this usage</a>. <a href="http://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain()</code></a> is the better solution.</span>
<span class="comment-copy">@Lattyware: please specify what part of that is recommending against this in the case of wanting a <code>list</code> as an endresult? The OP isn't asking for an iterable, is he?</span>
<span class="comment-copy">@Lattyware: would you prefer <code>list(itertools.chain(*matrices))</code> instead?</span>
<span class="comment-copy">Yes, a list is an iterable like any other, <code>itertools.chain()</code> is the better solution for it. As to getting a list out, as you have stated, the conversion to a list is easy - if it's necessary.</span>
<span class="comment-copy">@Lattyware: I repeat the question, where does it say that <code>itertools.chain</code> is recommended over <code>sum</code> if you want to make a list?` It says that there are good alternatives, that does not imply that the former is wrong...</span>
