<div class="post-text" itemprop="text">
<p>I want to load list in list from text file. I went through many examples but no solution. This is what I want to do
I am new bee to python</p>
<pre><code>def main()
    mainlist = [[]]
    infile = open('listtxt.txt','r')
    for line in infile:
        mainlist.append(line)

    infile.close()

    print mainlist

`[[],['abc','def', 1],['ghi','jkl',2]]`
</code></pre>
<p>however what I want is something like this</p>
<pre><code>[['abc','def',1],['ghi','jkl',2]]
</code></pre>
<p>my list contains</p>
<pre><code>'abc','def',1
'ghi','jkl',2
'mno','pqr',3
</code></pre>
<p>what I want is when I access the list 
<code>print mainlist[0]</code>
should return</p>
<pre><code>'abc','def',1
</code></pre>
<p>any help will be highly appreciated
Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems to me that you could do this as:</p>
<pre><code>from ast import literal_eval
with open('listtxt.txt') as f:
    mainlist = [list(literal_eval(line)) for line in f]
</code></pre>
<p>This is the easist way to make sure that the types of the elements are preserved.  e.g. a line like:</p>
<pre><code>"foo","bar",3
</code></pre>
<p>will be transformed into 2 strings and an integer.  Of course, the lines themselves need to be formatted as a python tuple... and this probably isn't the <em>fastest</em> approach due to it's generality and simplicity.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe something like this. </p>
<pre><code>mainlist = []
infile = open('listtxt.txt','r')
for line in infile:
    mainlist.append(line.strip().split(','))

infile.close()

print mainlist
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're initializing <code>mainlist</code> with an empty list as first element, rather than as an empty list itself.  Change:</p>
<pre><code>mainlist = [[]]
</code></pre>
<p>to</p>
<pre><code>mainlist = []
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>mainlist = []
infile = open('filelist.txt', 'r')
for line in infile:
    line = line.replace('\n', '').replace('[', '').replace(']', '').replace("'", "").replace(' ', '')
    mainlist.append(line.split(','))
infile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd try something like:</p>
<pre><code>with open('listtxt.txt', 'r') as f:
    mainlist = [line for line in f]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>json</code> module like below (Python 3.x):</p>
<pre><code>import json

def main()
    mainlist = [[]]
    infile = open('listtxt.txt','r')

    data = json.loads(infile.read())

    mainlist.append(data)

    infile.close()

    print(mainlist)

&gt;&gt;&gt; [[],['abc','def', 1],['ghi','jkl',2]]
</code></pre>
<p>Your "listtxt.txt" file should look like this:</p>
<pre><code>[["abc","def", 1],["ghi","jkl",2]]
</code></pre>
<p>To export your list, do this:</p>
<pre><code>def export():
        with open("listtxt.txt", 'w') as export_file:
             json.dump(mainlist, export_file)
</code></pre>
<p>JSON module can load lists, found <a href="https://docs.python.org/3/tutorial/inputoutput.html#saving-structured-data-with-json" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">For your expected output : <code>[['abc','def',1],['ghi','jkl',2]]</code>, <code>print  mainlist[0]</code> will return <code>['abc','def',1]</code></span>
<span class="comment-copy">everything is fine, you just have an extra bracket to start your mainlist! change <code>mainlist = [[]]</code> to <code>mainlist = []</code> and then <code>print mainlist[0]</code> will return <code>['abc','def',1]</code></span>
<span class="comment-copy">This is it, script above worked. The way I wanted it this is perfect, Thank-you very much BTW same thing I could have done very quickly using array in C# or delphi etc.</span>
<span class="comment-copy">out put of above ["'abc','def',1", "'ghi','jkl',2", "'mno','pqr',3"]</span>
<span class="comment-copy">No it's not, split return a list. infile = ["'abc','def',1", "'ghi','jkl',2", "'mno','pqr',3"] I tried it, the output is [["'abc'", "'def'", '1'], ["'ghi'", "'jkl'", '2'], ["'mno'", "'pqr'", '3']]</span>
<span class="comment-copy">funny thing is when I create list manually everything work fine def main():     mainlist = [['abc','def',1],['ghi','jkl',2]]      print mainlist[0][0]      output is 'abc' why samething not happen when I load list from text file It seems I am missing some point</span>
<span class="comment-copy">out put of above ["'abc','def',1", "'ghi','jkl',2", "'mno','pqr',3"] why there are double quotes</span>
<span class="comment-copy">@user2330294 your input has quotes which are part of the string</span>
