<div class="post-text" itemprop="text">
<p>Is it possible to use a single data structure to pass into a function with multiple arguments? I'd like to do something like the following but it doesn't appear to work.</p>
<pre><code>foo_bar = (123, 546)

def a(foo, bar):
    print(foo)
    print(bar)
</code></pre>
<p>Is it possible to do something like the following:</p>
<pre><code>a(foo_bar)
</code></pre>
<p>instead of:</p>
<pre><code>a(foo_bar[0], foo_bar[1])
</code></pre>
<p>What is the pythonic way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is:</p>
<pre><code>a(*foo_bar)
</code></pre>
<p>See <a href="http://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="noreferrer">Unpacking Argument Lists</a> in the tutorial for details… but there really isn't much more to it than this.</p>
<p>For completeness, the reference documentation is in <a href="http://docs.python.org/3/reference/expressions.html#calls" rel="noreferrer">Calls</a>:</p>
<blockquote>
<p>If the syntax <code>*expression</code> appears in the function call, <code>expression</code> must evaluate to an iterable. Elements from this iterable are treated as if they were additional positional arguments; if there are positional arguments x1, ..., xN, and <code>expression</code> evaluates to a sequence y1, ..., yM, this is equivalent to a call with M+N positional arguments x1, ..., xN, y1, ..., yM.</p>
</blockquote>
</div>
<span class="comment-copy">see <a href="http://stackoverflow.com/questions/817087/call-a-function-with-argument-list-in-python" title="call a function with argument list in python">stackoverflow.com/questions/817087/…</a></span>
