<div class="post-text" itemprop="text">
<p>I am trying to create a conversion program that automatically copies converted text to windows clipboard. I am trying to make it so that if the user inputs a number that is taken out to 2 decimal places or less it copies the converted results taken out to 3 places to the clipboard. If the user inputs a number that is taken out to 3 decimal places or more it copies the converted results to the clipboard taken out to 4 decimal places. When I run the code I get a ValueError but I cant figure out why. Here is the error I am getting</p>
<pre><code>line 88, in con
  if float_number &gt;= ("%.3f" % float_number):
ValueError: incomplete format
</code></pre>
<p>Heres the part of the code thats giving me trouble(and I put in comments to explain things that might look like they are missing for you guys/gals)</p>
<pre><code>def con():
    While True:
        print("Return = Main Menu, Surface = RA Conversion")
        print(MM_break) #This is defined globally elsewhere
        number = (input())
        if number in('Return', 'return'):
            break
        elif number in('Surface', 'surface'):
            surf() #I have a def surf() elsewhere in the program
        elif number in('help', 'Help'):
            help() #I have a def for help() elsewhere
        elif number in('end', 'exit', 'quit')
            break
        else:
             try:
                 float(number)
             except ValueError:
                 print(sys_Error) #I have a global variable for sys_Error elsewhere
                 break
             else:
                 float_number = float(number)
             Convert = float_number/Inches
             Results_3 = ("%.3f" % Convert)#converts 3 decimals
             Results_4 = ("%.4f" % Convert)#converts to 4 decimals
             print(line_break)
                 print(" ")
             print('\t', Results_3)
             print('\t', Results_4)
             print(line_break)
             print(" ")
             if float_number &gt;= ("%.3f%" % float_number):
                 r = Tk()
                 r.withdraw()
                 r.clipboard_clear()
                 r.clipboard_append(Results_4)#appends Results_4 to clipboard
             else:
                 r = Tk()
                 r.withdraw()
                 r.clipboard_clear()
                 r.clipboard_append(Results_3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your error indicates you have an error in the string template, you are missing a <code>%</code>:</p>
<pre><code>if float_number &gt;= (".3f" % float_number):
</code></pre>
<p>should be</p>
<pre><code>if float_number &gt;= ("%.3f" % float_number):
</code></pre>
<p><strong>Hovever</strong>, now you are trying to compare a <code>float</code> value with a string:</p>
<pre><code>if float_number &gt;= ("%.3f" % float_number):
</code></pre>
<p>That will throw a <code>TypeError</code>:</p>
<pre><code>&gt;&gt;&gt; 0.123 &gt;= '0.123'
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unorderable types: float() &gt;= str()
</code></pre>
<p>Don't do that. Compare floats to floats, use <a href="http://docs.python.org/3/library/functions.html#round" rel="nofollow"><code>round()</code></a> to create rounded values:</p>
<pre><code>if float_number &gt;= round(float_number, 3):
</code></pre>
</div>
<span class="comment-copy">Please do give us the <i>full</i> traceback of the error and not ask us to guess where the error occurs.</span>
<span class="comment-copy">You don't need to call <code>float(number)</code> twice. Simply move <code>float_number = float(number)</code> inside the <code>try</code>/<code>except ..:</code> and remove the <code>else:</code> suite altogether.</span>
<span class="comment-copy">I can see where your code would throw a <code>TypeError</code>, not a <code>ValueError</code>. Is that what you see?</span>
<span class="comment-copy">I just added the Error its giving me to the question</span>
<span class="comment-copy">Your error does not match your source code, but even if you fixed that it'd give a TypeError.</span>
<span class="comment-copy">You need to think more carefully about your conditions here; perhaps you could compare <code>round(float_number, 3) &gt;= 0.01</code> for example.</span>
<span class="comment-copy">@Inhale.Py: How about you take the original string input by the user, split on the decimal point and measure? <code>len(number.split('.')[1].strip())</code>.</span>
<span class="comment-copy">Python has excellent documentation and an excellent interactive interpreter. Why don't you try out the individual components in the interpreter (<a href="http://docs.python.org/2/library/functions.html#len" rel="nofollow noreferrer"><code>len()</code> function</a>, <a href="http://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split()</code> method</a>, <a href="http://docs.python.org/2/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip()</code> method</a>).</span>
<span class="comment-copy">Store the result of <code>len(number.split('.')[1].strip())</code> in a variable (<code>decimals_count</code> perhaps), then compare <i>that</i> number (an integer) to how many decimal places you expect. <code>if decimals_count &lt;= 3:</code> is <code>True</code> if the user entered 3 or fewer decimals.</span>
<span class="comment-copy">@Inhale.Py: Use something like <code>try: decimals_count = len(number.split('.')[1].strip())</code>, <code>except IndexError: decimals_count = 0</code>; exception handling is the easiest way to handle that situation.</span>
