<div class="post-text" itemprop="text">
<p>I was trying to find a max of element in a list but noticed something strange when the list contains another list item.</p>
<p>code.py</p>
<pre><code>a=[[1,2],3,4]
max(a)
[1,2]
</code></pre>
<p>how does the max function works in the above works?</p>
<p>How does the list element is assumed as the max element...</p>
<p>Thanks for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, comparisons between incomparable types return a meaningless (but consistent) result:</p>
<pre><code>&gt;&gt;&gt; [1,2] &gt; 3
True
</code></pre>
<p><code>max</code> uses these comparisons to find the largest element, which in this case happens to be the list.</p>
<p>This <a href="http://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons" rel="nofollow">has been fixed</a> in Python 3, where you'd get:</p>
<pre><code>&gt;&gt;&gt; max([1,2], 3, 4)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unorderable types: int() &gt; list()
</code></pre>
</div>
<span class="comment-copy">If it’s a consistent, i.e. deterministic, result, it’s not really random.</span>
<span class="comment-copy">@poke Fair point. Switched out with meaningless.</span>
<span class="comment-copy">Perhaps you could extend this answer to explain the behavior as it will apply to the max() function?</span>
<span class="comment-copy">@BlackVegetable Sorry, I thought that was obvious - <code>max</code> goes over the iterable, and compares each value with the current maximum. Added to the answer.</span>
<span class="comment-copy">Thanks; it isn't for my sake but I could imagine our Google viewers appreciating the connection.</span>
