<div class="post-text" itemprop="text">
<p>I've been trying to extract names from a string, but don't seem to be close to success. </p>
<p>Here is the code:</p>
<pre><code>string = "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555 -6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
regex = re.compile(r'([A-Z][a-z]+(?: [A-Z][a-z]\.)? [A-Z][a-z]+)')
print(regex.findall(string))
</code></pre>
<p>This is the output, I'm getting.<code>['Moe Szyslak', 'Timothy Lovejoy', 'Ned Flanders', 'Julius Hibbert']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Fancy regexes take time to compose and are difficult to maintain. In this case, I'd tend to keep it simple: </p>
<p><code>re.findall(r"[^()0-9-]+", string)</code></p>
<p>output: </p>
<p><code>['Moe Szyslak', ' ', 'Burns, C. Montgomery', ' ', 'Rev. Timothy Lovejoy', ' ', 'Ned Flanders', 'Simpson, Homer', 'Dr. Julius Hibbert']</code></p>
<p>If the blanks are an issue, I'd filter the <code>list(filter(str.strip,list))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Extracting human names even in English is notoriously hard. The following regex solves your particular problem but may fail on other inputs (e.g., it does not capture names with dashes):</p>
<pre><code>re.findall(r"[A-Z][a-z]+,?\s+(?:[A-Z][a-z]*\.?\s*)?[A-Z][a-z]+", string)
#['Moe Szyslak', 'Burns, C. Montgomery', 'Timothy Lovejoy', 
# 'Ned Flanders', 'Simpson, Homer', 'Julius Hibbert']
</code></pre>
<p>And with titles:</p>
<pre><code>TITLE = r"(?:[A-Z][a-z]*\.\s*)?"
NAME1 = r"[A-Z][a-z]+,?\s+"
MIDDLE_I = r"(?:[A-Z][a-z]*\.?\s*)?"
NAME2 = r"[A-Z][a-z]+"

re.findall(TITLE + NAME1 + MIDDLE_I + NAME2, string)
#['Moe Szyslak', 'Burns, C. Montgomery', 'Rev. Timothy Lovejoy', 
# 'Ned Flanders', 'Simpson, Homer', 'Dr. Julius Hibbert']
</code></pre>
<p>As a side note, there is no need to compile a regex unless you plan to reuse it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is one approach using zero width lookarounds to isolate each name:</p>
<pre><code>string = "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555 -6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
result = re.findall(r'(?:(?&lt;=^)|(?&lt;=[^A-Za-z.,]))[A-Za-z.,]+(?: [A-Za-z.,]+)*(?:(?=[^A-Za-z.,])|(?=$))', string)

print(result)

['Moe Szyslak', 'Burns, C. Montgomery', 'Rev. Timothy Lovejoy', 'Ned Flanders',
 'Simpson, Homer', 'Dr. Julius Hibbert']
</code></pre>
<p>The actual pattern matched is this:</p>
<pre><code>[A-Za-z.,]+(?: [A-Za-z.,]+)*
</code></pre>
<p>This says to match any uppercase or lowercase letter, dot, or period, followed by a space and one or more of the same character, zero or more times.</p>
<p>In addition, we use the following lookarounds on the left and right of this pattern:</p>
<pre><code>(?:(?&lt;=^)|(?&lt;=[^A-Za-z.,]))
Lookbehind and assert either the start of the string, or a non matching character
(?:(?=[^A-Za-z.,])|(?=$))
Lookahead and asser either the end of the string or a non matching character
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am extracting entities for instance names with spacy in no time. With spacy you can rely on pretrained language models, which have a massive knowledge about common names and titles.</p>
<ol>
<li><p>Step: set up spacy and download pretrained English language model
<code>import spacy<br/>
import en_core_web_sm
nlp = en_core_web_sm.load()</code></p></li>
<li><p>Step: create spacy document 
<code>doc = nlp('555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555 -6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert')</code></p></li>
<li><p>Step: get tags for all tokens in document which are labelled as person 
<code>print([(X.text, X.label_) for X in doc.ents if X.label_ == PERSON])</code></p></li>
</ol>
</div>
<span class="comment-copy">But some names do have dashes, keep them.</span>
<span class="comment-copy">Thanks alot, Sir. But how do I get the titles? Dr. and Rev. etc</span>
<span class="comment-copy">You never mentioned the titles in your question. See updated answer.</span>
<span class="comment-copy"><code>(555, 555, C. Montgomery555, Timothy Lovejoy555, Flanders636, 555, Julius Hibbert)</code> - does not look right.</span>
