<div class="post-text" itemprop="text">
<p>Lets say in python</p>
<pre><code>StateA = 1
StateB = 2
StateC = StateA | StateB

...
instance.state = StateA
</code></pre>
<p>in C# there is a HasFlag function in Enum, which tells me an object's flag is part of StateC</p>
<p>Is there a equivalent version in python?</p>
<p>Right now I can only think (as bitwise noob) of this and not even sure if it supposed to work:</p>
<pre><code>if instance.state | StateC == StateC:
    # yes in StateC
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Testing for a flag:</p>
<pre><code>value &amp; flag == flag
</code></pre>
<p>Adding a flag:</p>
<pre><code>value |= flag
</code></pre>
<p>Clearing a flag:</p>
<pre><code>value &amp;= ~flag
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://msdn.microsoft.com/en-us/library/system.enum.hasflag(v=vs.110).aspx" rel="nofollow">HasFlag</a> is basically bitwise operation.</p>
<pre><code>&gt;&gt;&gt; a = 0b01
&gt;&gt;&gt; b = 0b10
&gt;&gt;&gt; "{0:b}".format(a | b,)
'11'
&gt;&gt;&gt; def has_flag(v, flag): return v &amp; flag == flag
...
&gt;&gt;&gt; has_flag(0b111, a)
True
&gt;&gt;&gt; has_flag(0b111, a|b)
True
&gt;&gt;&gt; has_flag(0b1, a|b)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Python 3.4</strong> has an <a href="https://docs.python.org/3/library/enum.html#module-enum" rel="nofollow noreferrer"><code>Enum</code> data type</a>, which <a href="https://pypi.python.org/pypi/enum34" rel="nofollow noreferrer">has been backported</a>.</p>
<pre><code>from enum import Enum

class States(Enum):
    StateA = 1
    StateB = 2
    StateC = StateA | StateB
    def has_flag(self, flag):
        return self.value &amp; flag.value

if States.StateC.has_flag(States.StateA):
    print("yup, it's there!")
</code></pre>
<hr/>
<p><strong>Python 3.6</strong> has the <a href="https://docs.python.org/3/library/enum.html#intflag" rel="nofollow noreferrer"><code>(Int)Flag</code> data type</a>, which is also present in <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer">the <code>aenum</code><sup>1</sup> library</a>:</p>
<pre><code>from enum import Flag  # or from aenum import Flag

class States(Flag):
    StateA = 1
    StateB = 2
    StateC = StateA | StateB

if States.StateA in States.StateC:
    print("yup, it's there!")
</code></pre>
<hr/>
<p><sup>1</sup> Disclosure:  I am the author of the <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">Python stdlib <code>Enum</code></a>, the <a href="https://pypi.python.org/pypi/enum34" rel="nofollow noreferrer"><code>enum34</code> backport</a>, and the <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer">Advanced Enumeration (<code>aenum</code>)</a>  library.</p>
</div>
