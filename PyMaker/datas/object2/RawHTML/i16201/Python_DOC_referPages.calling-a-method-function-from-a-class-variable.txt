<div class="post-text" itemprop="text">
<p>lets say I have a class like:</p>
<pre><code>class Foo:

   foo_list = [{'foo1':foo1,'foo2':foo2}] #issue here..Can't use foo1 or self.foo1 here

   def __init__(self):
       pass

   def run(self):
     responses = [func() for func_name, func in Foo.foo_list.items()]

   def foo1(self):
    return True
</code></pre>
<p>So basically, I  want to use class methods in class variable as well.. 
How do i do this?
Am I making any sense?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, you can actually ... you just need to reorder them so that they are defined by the time you use them:</p>
<pre><code>class Foo:

   def run(self):
      responses = [func(self) for func_name, func in Foo.foo_dict.items()]

   def foo1(self):
      return True

   def foo2(self):
      return False

   foo_dict = {'foo1':foo1,'foo2':foo2}
</code></pre>
</div>
<span class="comment-copy">You want a static method. Try the <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer"><code>staticmethod</code> decorator</a>.</span>
<span class="comment-copy">Right. One of the hidden flaws of Python's interpreter model. It feels like I'm writing C, sometimes!</span>
<span class="comment-copy">Ah.. I see.. works.. :)</span>
