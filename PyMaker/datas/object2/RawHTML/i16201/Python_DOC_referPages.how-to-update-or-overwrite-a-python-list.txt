<div class="post-text" itemprop="text">
<pre><code>aList = [123, 'xyz', 'zara', 'abc']
aList.append(2014)
print aList
</code></pre>
<p>which produces o/p  <code>[123, 'xyz', 'zara', 'abc', 2014]</code></p>
<p>What should be done to overwrite/update this list.
I want the o/p to be </p>
<p><code>[2014, 'xyz', 'zara', 'abc']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You may try this </p>
<pre><code>alist[0] = 2014
</code></pre>
<p>but if you are not sure about the position of 123 then you may try like this:</p>
<pre><code>for idx, item in enumerate(alist):
   if 123 in item:
       alist[idx] = 2014
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about replace the item if you know the position:</p>
<pre><code>aList[0]=2014
</code></pre>
<p>Or if you don't know the position loop in the list, find the item and then replace it</p>
<pre><code>aList = [123, 'xyz', 'zara', 'abc']
for i,item in enumerate(aList):
  if item==123:
    aList[i]=2014

print aList
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would prefer it without enumerate and instead use "range" like this:</p>
<pre><code>for item in range(0, len(alist)):
   if 123 in item:
      alist[item] = 2014
</code></pre>
<p>For those who are new to python it might be more readable and a little smarter to recap. </p>
<p>Regards P.  </p>
</div>
<div class="post-text" itemprop="text">
<p>I think it is more pythonic:</p>
<pre><code>aList.remove(123)
aList.insert(0, 2014)
</code></pre>
<p>more useful:</p>
<pre><code>def shuffle(list, to_delete, to_shuffle, index):
    list.remove(to_delete)
    list.insert(index, to_shuffle)
    return

list = ['a', 'b']
shuffle(list, 'a', 'c', 0)
print list
&gt;&gt; ['c', 'b']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm learning to code and I found this same problem. I believe the easier way to solve this is literaly overwriting the list like @kerby82 said:</p>
<p>An item in a list in Python can be set to a value using the form</p>
<p><strong>x[n] = v</strong></p>
<p>Where <strong>x</strong> is the name of the list, <strong>n</strong> is the index in the array and <strong>v</strong> is the value you want to set.</p>
<p>In your exemple:</p>
<pre><code>aList = [123, 'xyz', 'zara', 'abc']
aList[0] = 2014
print aList
&gt;&gt;[2014, 'xyz', 'zara', 'abc']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are trying to take a value from the same array and trying to update it, you can use the following code. </p>
<pre><code>{  'condition': { 
                     'ts': [   '5a81625ba0ff65023c729022',
                               '5a8161ada0ff65023c728f51',
                               '5a815fb4a0ff65023c728dcd']}
</code></pre>
<p>If the collection is userData['condition']['ts'] and we need to </p>
<pre><code>    for i,supplier in enumerate(userData['condition']['ts']): 
        supplier = ObjectId(supplier)
        userData['condition']['ts'][i] = supplier
</code></pre>
<p>The output will be </p>
<pre><code>{'condition': {   'ts': [   ObjectId('5a81625ba0ff65023c729022'),
                            ObjectId('5a8161ada0ff65023c728f51'),
                            ObjectId('5a815fb4a0ff65023c728dcd')]}
</code></pre>
</div>
<span class="comment-copy"><code>aList[0] = 2014</code></span>
<span class="comment-copy">what is the logic ?</span>
<span class="comment-copy">It gives TypeError - 'type' object is not iterable.</span>
<span class="comment-copy">@pyLearner: You didn't call your list <code>list</code>. Calling a list <code>list</code> is a bad idea anyway because you're going to overwrite the built-in <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow noreferrer">list</a>.</span>
<span class="comment-copy">@pyLearner:- Updated my code. Please check now!</span>
<span class="comment-copy">@R.T. Yeah sorry it was my mistake.</span>
<span class="comment-copy">@pyLearner:- You may accept the answer if that worked for you!</span>
<span class="comment-copy">This works only for integers not if I want to insert def in place of abc. I wanted a generic solution.. not hardcoded.</span>
<span class="comment-copy">I don't know why you think that, pyLearner. Please spend some time with the documentation for Python lists.</span>
