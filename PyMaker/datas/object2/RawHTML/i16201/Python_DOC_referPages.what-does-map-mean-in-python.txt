<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4979542/python-use-list-as-function-parameters">Python - use list as function parameters</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I know function <code>map</code>. It is used something like </p>
<p><code>new_list = map(func, list)</code></p>
<p>But what does <code>*map(func, list)</code> mean? It was used like </p>
<pre><code>hands = set(best_hand(h) for h in itertools.product( *map(replacements, hand)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It means that the iterable returned from <code>map()</code> will be <em>unpacked</em> as arguments to the function.  That is, rather than calling the function and passing the iterable object as a single parameter, the individual elements of the iterable are passed as individual parameters.</p>
<p>An illustration of this technique:</p>
<pre><code>&gt;&gt;&gt; def foo(a, b, c): print "a:%s b:%s c:%s" % (a, b, c)
...
&gt;&gt;&gt; x = [1,2,3]
&gt;&gt;&gt; foo(*x)
a:1 b:2 c:3
</code></pre>
<p>But calling <code>foo()</code> without unpacking <code>x</code> means you are passing one argument where three are expected:</p>
<pre><code>&gt;&gt;&gt; foo(x)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: foo() takes exactly 3 arguments (1 given)
</code></pre>
<hr/>
<p>From the <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow">Python 3 reference §6.3.4</a>:</p>
<blockquote>
<p>If the syntax <code>*expression</code> appears in the function call, <code>expression</code> must evaluate to an iterable. Elements from this iterable are treated as if they were additional positional arguments ...</p>
</blockquote>
</div>
<span class="comment-copy">In what context did you see it?  Perhaps as an argument for a function, so: <code>result = f(*map(other_f, l))</code>?</span>
<span class="comment-copy"><a href="https://docs.python.org/2/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">docs.python.org/2/tutorial/…</a></span>
<span class="comment-copy">Yes, it was used  as an argument for a function</span>
