<div class="post-text" itemprop="text">
<p>We are building a web crawler, and the task was to create a function that outputs a keyword and the url's attached to the keyword. The keyword cannot be duplicated in the list. This is the final code:</p>
<pre><code>index = []
def add_to_index(index,keyword,url):
    for entry in index:
        if entry[0] == keyword: 
            entry[1].append(url) 
                return
    index.append([keyword,[url]])    
</code></pre>
<p>inputs:     </p>
<blockquote>
<p>add_to_index(index,'udacity','<a href="http://udacity.com" rel="nofollow">http://udacity.com</a>')</p>
<p>add_to_index(index,'computing','<a href="http://acm.org" rel="nofollow">http://acm.org</a>')</p>
<p>add_to_index(index,'udacity','<a href="http://npr.org" rel="nofollow">http://npr.org</a>')</p>
</blockquote>
<p>These are the correct results:</p>
<pre><code>[['udacity', ['http://udacity.com', 'http://npr.org']], 

['computing', ['http://acm.org']]]
</code></pre>
<p>There are a couple of things i am really struggling to understand about this function. The first thing is where in the function does it say to not duplicate the <code>keyword</code>?</p>
<p>As far as i can tell, the statement <code>index.append([keyword,[url]])</code> should add the <code>keyword</code> Udacity twice to the <code>index</code> list, and it fact it does add it twice if i put the statement above the <code>for</code> loop. So, i really don't understand where in the <code>for</code> loop it is specifing to not duplicate <code>keyword</code> in the list? </p>
<p>The function just seems to be saying: append a <code>url</code> to the <code>index</code> list if a <code>keyword</code> matches, and if not, go out of the loop and add a <code>keyword</code> and its <code>url</code>. </p>
<p>And the second thing i really don't understand is why <code>index.append([keyword,[url]])</code> statement is at the bottom of the <code>for</code> loop, and not above it. If i put it at the top it gives me completely different results. Shown here:</p>
<pre><code>index = []
def add_to_index(index,keyword,url):
    index.append([keyword,[url]])
    for entry in index:
        if entry[0] == keyword: 
            entry[1].append(url) 
                return



[['udacity', ['http://udacity.com', 'http://udacity.com', 'http://npr.org']],

['computing', ['http://acm.org', 'http://acm.org']], 

['udacity', ['http://npr.org']]]
</code></pre>
<p>Why? When the statement is after the <code>for</code> loop, nothing is returned because <code>index</code> is empty. So, i don't understand why putting the statement at the top would not produce the same results? </p>
<p>I have really struggled to understand this and i am at a complete blank. Any help would be much appreciated. Many thanks! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a <code>return</code> statement which causes the function to exit once it has found a matching keyword. This means that <code>index.append([keyword,[url]])</code> can only ever be executed if the function could not find a matching keyword in the collection.</p>
<pre><code>index = []
def add_to_index(index,keyword,url):
    for entry in index:
        if entry[0] == keyword: 
            # We have found a matching keyword, so add the url to list of urls and exit the function
            entry[1].append(url) 
            return
    # We didn't find a matching keyword so add a new keyword, url list to the collection
    index.append([keyword,[url]])   
</code></pre>
</div>
<span class="comment-copy">This might be beyond the scope of that course (I think it was CS 101, was it?) but you really should use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> mapping keywords to lists of URLs...</span>
<span class="comment-copy">since this is such a simple function, the best way to understand it is to take pencil and paper and walk through every step of the function, writing it down as you go. then you'll understand it.</span>
<span class="comment-copy">however, you should you use a dictionary.</span>
<span class="comment-copy">Many thanks for the answer. But i still don't know why <code>index.append([keyword,[url]])</code> does not add the 'udacity' keyword twice to the index?</span>
<span class="comment-copy">Because when 'udacity' is run for the second time <code>entry[1].append(url)</code> is executed and the function then exits. This means that <code>index.append([keyword,[url]])</code> is only ever run the <i>first</i> time a keyword is encountered.  I would recommend reading up on the 'return' keyword and early function termination.  Also step through the code with a debugger and you will be able to see each statement that gets executed.</span>
<span class="comment-copy">Many thanks! Really appreciate the answer!</span>
