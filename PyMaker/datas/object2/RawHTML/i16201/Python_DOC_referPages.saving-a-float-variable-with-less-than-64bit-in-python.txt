<div class="post-text" itemprop="text">
<p>In my PYTHON program, I am loading a lot of (floating) numbers for later use. I am talking about 100 Million numbers or more. It seems that I run into problems with memory space on RAM. Since the numbers I am saving do not need to have a high precision (3-4 digits would be more than enough) and are usually small (in the range -1000 .. 1000) I do not use the precision provided by a 64bit float. </p>
<p>Is there a possibility to save a floating number using less memory (maybe 8 or 16 bit)? </p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use the types in the numpy library, which provides the following types of interest:</p>
<pre><code>float_
float16
float32
float64
</code></pre>
<p>So, if you wanted a 16-bit floating point number (1 sign bit, 5 exponent, and 
10 for the mantissa), you could use the following:</p>
<pre><code>import numpy as np
x = np.float16(10.0)
</code></pre>
<p>See also, <a href="http://docs.scipy.org/doc/numpy/user/basics.types.html" rel="nofollow">data types in NumPy</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Pack them into arrays of float-format values using the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow">struct</a> package's <code>f</code> format.</p>
</div>
<span class="comment-copy">"...100 Million numbers or more. It seems I run into problems with memory space on RAM." Really? You expected to be able to compute more than 100 Million numbers with, say, 8 gigs of ram?</span>
