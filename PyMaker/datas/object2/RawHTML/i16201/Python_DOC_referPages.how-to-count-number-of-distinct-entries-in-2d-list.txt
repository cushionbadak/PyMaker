<div class="post-text" itemprop="text">
<p>I have a 2D list and I want to learn how to return the number of distinct entries there are in the table.</p>
<pre><code>numbers = [[32, 12, 52, 63], [32, 64, 67, 52], [64,64,17,34], [17, 76, 98]]
</code></pre>
<p>since there are 10 numbers that are not the same I want it to return that number, how do I go about that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Convert your nested list into a set and take the length of it, as below:</p>
<pre><code>numbers = [[32, 12, 52, 63], [32, 64, 67, 52], [64,64,17,34], [17, 76, 98]]

numbers_set = set(i for j in numbers for i in j)
print(len(numbers_set)) # 10
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow">Sets</a> are containers with no duplicate elements, this means that <code>set([1, 1, 2]) -&gt; {1, 2}</code>. The length of the set can then be used to find the number of distinct values originally in your nested lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>Flatten the list in a set comprehension to remove the dups</p>
<pre><code>print len({x for y in numbers for x in y})
10
</code></pre>
<p>Or create a set and use <code>set.update</code>:</p>
<pre><code>s = set()

s.update(*numbers)
print len(s)
10


In [1]: numbers = [[32, 12, 52, 63], [32, 64, 67, 52], [64,64,17,34], [17, 76, 98]]

In [2]: s = set()

In [3]: s.update(*numbers)

In [4]: s
Out[4]: {12, 17, 32, 34, 52, 63, 64, 67, 76, 98}
</code></pre>
<p><a href="https://docs.python.org/2/library/sets.html" rel="nofollow">python sets</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Below is the easiest way to get distinct number count</p>
<p><code>len(set(sum(numbers, [])))</code></p>
</div>
