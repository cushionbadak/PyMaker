<div class="post-text" itemprop="text">
<p>My application server's requirements are as follows:</p>
<ol>
<li>Receive sensor data from mobile phones (using HTTP)</li>
<li>Process them (python libraries)</li>
<li>Send notification to the mobile devices (rendered as notifications on Android devices)</li>
</ol>
<p><strong>Implementation Setup:</strong></p>
<p>In order to do the above, my server has three modules: </p>
<ul>
<li><strong>Django app module</strong>:  Provides an HTTP interface to the inference library to cater to the HTTP requests sent by the Android devices to the server.</li>
<li><strong>Python Inference Library</strong>: Processes the sensor data received from the phones</li>
<li><strong>GCM App Server Module</strong>: explained below</li>
</ul>
<p><strong>GCM App Server Module</strong>: I have implemented <a href="https://developer.android.com/google/gcm/ccs.html" rel="nofollow">GCM Message App Server using CCS</a> that talks to the Google's servers (that sits between the app server and Android devices) for delivering messages to/from mobile devices running Android. Following is from their official website (previous link):</p>
<blockquote>
<p>The GCM Cloud Connection Server (CCS) is an XMPP endpoint that provides a persistent, asynchronous, bidirectional connection to Google servers. The connection can be used to send and receive messages between your server and your users' GCM-connected devices.</p>
</blockquote>
<p>In the documentation, they have given a sample python script that I have referred and used to implement my GCM App server. This implementation is executed as a standalone script that runs forever.</p>
<p><strong>Python Inference Library and Django app module</strong>: I have implemented the inference library in python that processes sensor data received from the phones. It has a Django interface to talk to the Android devices. The inference library resides inside the Django app server. </p>
<p><strong>PROBLEM:</strong></p>
<p>The GCM App Server script contains a few functions, one of them being <code>send_message(),</code> that sends messages to the Android devices. I need to refer this function in my inference library scripts when some processed data is available to be sent to the devices. Or I need to refer to the persistent open XMPP connection client to send messages. I want to avoid putting the processing code in the GCM app server script. I have been stuck for weeks to find a way to do the above. </p>
<p><strong>Is there a way to do this with my current setup or do I need to add some other layer/module?</strong> </p>
<p>Any help or suggestions would be greatly appreciated. </p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your idea here is valid. That you want clear separation between processing code and communication code. There are many ways to solve this problem, one simple way I can think of is to have a Queue object in your GCMApp Server and make a thread block on the Queue.get() method. Have the same Queue object shared with the processing django app, and whenever processed data is available push it in the Queue. The blocked thread would wake up and send it to the devices. Other way are instead of using the Queue you can use socket. Another way is having a eventloop, <a href="https://docs.python.org/3/library/asyncio-eventloop.html" rel="nofollow">https://docs.python.org/3/library/asyncio-eventloop.html</a> , this is available in python 3.0 but you can look at eventloops in general. I would suggest you to start from something simple and get it working and then start making it beautiful.
Let me know if it makes sense.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is there a way to do this with my current setup?</p>
</blockquote>
<p>Yes! Using <a href="https://docs.python.org/2/library/multiprocessing.html#managers" rel="nofollow noreferrer"><code>multiprocessing</code></a>. See answer of this question - <a href="https://stackoverflow.com/questions/25607909/accessing-python-class-variable-defined-inside-the-main-module-of-a-script/">Accessing python class variable defined inside the main module of a script</a></p>
</div>
<span class="comment-copy">Thanks. It does make sense. I'll try out some of the suggestions you gave and see what works. Will keep everyone posted with updates.</span>
