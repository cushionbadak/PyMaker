<div class="post-text" itemprop="text">
<p>a few weeks ago i have started learning python.</p>
<p>Now i have started to create a program to create a dictionary, add an item1 as a string, add an item2 wich consists of numbers and save it after that. But it is not working the way i want it to. It seems like the saving is not working properly it seems to be overwriting the existing items.</p>
<p>Before posting this, i have thoroughly searched here on Stackoverflow to find a solution, but i cant get it to work.</p>
<p>Here is my code:</p>
<pre><code>import pickle
import os


if not os.path.exists( 'C:\path' ):  
    os.makedirs( 'C:\path' )        

dict = {}
dict = pickle.load( open( "dict.txt", "rb" ) )

def add_dict(item):

    for item in dict:

        if not item in dict:
            dict.update({item1 : item2})
            print ("thx")
            print (dict)
            print ("added")

        if item in dict:
            print("item already exists.")

        return

    return



item1 = input("insert Item1: ")
item1 = item1.lower()
item2 = input("insert item2: ")


pickle.dump(dict, open("C:\path\dict.txt", "wb"))
</code></pre>
<p>I hope this is not a too specific case.</p>
<p>edit: I have edited my code, to make it less specific and made two mistakes which are fixed now.</p>
<pre><code>import pickle
import os

if not os.path.exists( 'C:\path' ):
    os.makedirs( 'C:\path' )

dict = {}
item1 = input('insert item1 ')
item1 = buch.lower()
item2 = input('insert item2: ')
dict.update({item1: item2})
print("thx")
print(dict)
print("added")
pickle.dump(dict, open("C:\path\dict.txt", "wb"))
</code></pre>
<p>this was the code without the function.</p>
</div>
<div class="post-text" itemprop="text">
<p>The edited code still has errors.</p>
<p>I rewrote the whole thing to be more pythonic.</p>
<pre><code>import os
import pickle


def read_data(filename):
    try:
        return pickle.load(open(filename, 'rb'))
    except FileNotFoundError:
        return {}


def write_data(filename, data):
    try:
        os.makedirs(os.path.dirname(filename))
    except FileExistsError:
        pass
    pickle.dump(data, open(filename, 'wb'))


def main():
    filename = os.path.join(os.path.dirname(__file__), 'dict.txt')
    data = read_data(filename)

    key = input('insert item1 ').lower()
    value = input('insert item2: ')
    data[key] = value
    print(data)

    write_data(filename, data)


if __name__ == '__main__':
    main()
</code></pre>
<p>I used meaningful names and didn't call a variable <code>dict</code> because <a href="https://docs.python.org/3/library/functions.html#func-dict" rel="nofollow">dict</a> is a builtin you don't want to overwrite.</p>
<p>First we read the file. If it doesn't exist we catch the error and use an empty dictionary for the data.</p>
<p>Second we get the new data and update the dictionary.</p>
<p>Last we write the dictionary back to disk and create the target folder if it doesn't exist.</p>
</div>
<span class="comment-copy">Could you post a runnable example please. <code>isbn_liste</code> is not defined anywhere and <code>add_dict</code> is never called. That code is just trash.</span>
<span class="comment-copy"><code>it seems to be overwriting the existing items</code> do you mean existing items in text file ?</span>
<span class="comment-copy">You define add_dict(n) but it is not used. In addition the two if <code>if item in dict</code> and <code>if not item in dict</code>are superfluous since they are in <code>for item in dict</code> loop.</span>
<span class="comment-copy">see this <a href="https://wiki.python.org/moin/UsingPickle" rel="nofollow noreferrer">wiki.python.org/moin/UsingPickle</a></span>
<span class="comment-copy">@Matthias isbn_liste was something from my unedited code, i have fixed it now.   I had some different code without a function in it, i will add that one as well.</span>
<span class="comment-copy">Thank you very much, i am not too familiar yet with python so i was bound to make mistakes. I didnt run into errors when compiling, so i thought i was doing fine. The naming the dictionary dict was stupid, but it was just made up for posting here. Anyways, thank you for the fast response, i will try it right away! Can i post you my code later on, since i dont know anybody else who is familiar with python and i am pretty sure that i will make mistakes later on.</span>
<span class="comment-copy">It worked, i made the variables and functions more meaningfull to me, and after reading up on how to use the os.path properly, i think i understand how i can use this in the future. Thank you again, i was very frustrated, when it didnt work the way i wanted.</span>
