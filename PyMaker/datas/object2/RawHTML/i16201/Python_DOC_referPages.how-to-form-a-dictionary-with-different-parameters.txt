<div class="post-text" itemprop="text">
<p>I have a <code>class Test</code> with class parameter </p>
<p><code>parameters = {'first': [1,2,3,4], 'second': [5,6,7]}</code>. I want to convert it into a dictionary so that it will be <code>"{'Test': 'first':1 'second':5}"</code></p>
<p>what I tried is:
<code>
di = {}
di = dict(itertools.izip(name, vals))</code></p>
<p>where I'm getting Test i.e classnane in variable name i.e <code>name = Test</code> and</p>
<p><code>vals = {'first': [1,2,3,4], 'second': [5,6,7]}</code>
Though I want it as <code>"{'Test': 'first':1 'second':5}"</code>, shouldn't this print <code>"{'Test': 'first':[1,2,3,4] 'second':[5,6,7]}"</code>?? Instead what I'm getting when I'm printing <code>di</code> is <code>{'Test': 'first'}</code>. I'm not getting where my logic is going wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="http://legacy.python.org/dev/peps/pep-0274/" rel="nofollow">dictionary comprehension</a>:</p>
<pre><code>subjects = ['Physics', 'Chemistry', 'Maths']
{subject: {} for subject in subjects}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are working with Python 2, you can use <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow"><code>dict()</code></a> constructor:</p>
<pre><code>subjects =  ['Physics', 'Chemistry', 'Maths']
dict(((subject, {}) for subject  in subjects))
</code></pre>
<p>If you are using Python 3, you can use <a href="http://python-3-patterns-idioms-test.readthedocs.org/en/latest/Comprehensions.html#dictionary-comprehensions" rel="nofollow">dictionary comprehension</a>:</p>
<pre><code>subjects =  ['Physics', 'Chemistry', 'Maths']
{subject: {} for subject in subjects}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using dict comprehension:</p>
<p>Input:    </p>
<pre><code>{x: {} for x in ['Physics', 'Chemistry', 'Maths']}
</code></pre>
<p>Output:</p>
<pre><code>{'Maths': {}, 'Chemistry': {}, 'Physics': {}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is a basic for loop. Itertools is way to complex for this kind of stuff. </p>
<pre><code>&gt;&gt;&gt; l = ['Physics', 'Chemistry', 'Maths']
&gt;&gt;&gt; d = {}
&gt;&gt;&gt; for i in l:
    d[i] ={}


&gt;&gt;&gt; d
{'Chemistry': {}, 'Physics': {}, 'Maths': {}}
</code></pre>
</div>
<span class="comment-copy">This one gives TypeError: unhashable type: 'list'</span>
<span class="comment-copy">Are you using Python 2 or 3?</span>
<span class="comment-copy">2.7.7. I tried it with {subject: {} for subject in subjects} even with dict(((subject, {}) for subject  in subjects)) still same error.</span>
<span class="comment-copy">It should work.  I think the error is referring to something else.  Maybe you have nested lists in your subjects list?</span>
<span class="comment-copy">Nope, it's not nested list.</span>
<span class="comment-copy">It looks like OP wants the items to be empty dicts -- If OP really wants an empty string, then <code>dict.fromkeys</code> is a great option.  c.f. <a href="http://stackoverflow.com/q/14507591/748858">stackoverflow.com/q/14507591/748858</a></span>
<span class="comment-copy">right, i realized that fact. dict comprehension is the solution to the question @mgilson</span>
<span class="comment-copy">Hey I tried it and got working but I have one question why it's in different order? Instead of  {'Physics': {}, 'Chemistry': {}, 'Maths': {}} why we have -  {'Chemistry': {}, 'Physics': {}, 'Maths': {}} ?? What I need to do to get it in right order?</span>
<span class="comment-copy">In python a dict is not sorted. If you really need to go through the dict sorted, just use <code>for key in sorted(d):</code>. P.S. this is just a simple for loop, the other answers are more efficient, faster and generally better.</span>
