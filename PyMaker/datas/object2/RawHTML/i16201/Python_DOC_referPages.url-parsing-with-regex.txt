<div class="post-text" itemprop="text">
<p>I have several urls. I want to parse a certain number, so that I can save it to a variable like:</p>
<pre><code>if number ==15 : 
    category ='tree'
elif number ==20:
    category ='flower'
elif number ==3:
    category ='bird'
</code></pre>
<p>The urls are of the form:</p>
<pre><code>http://www.test.tw/in/15   
http://www.test.tw/in/15?page=2  
http://www.test.tw/in/15/#/?page=3
http://www.test.tw/in/20/#/?page=2
http://www.test.tw/in/3/?page=5
</code></pre>
<p>So far, the method I'm using:</p>
<pre><code>urls = (
    ('http://www.test.tw/in/15','tree'),    #category =x[1]
    ('http://www.test.tw/in/20','flower'),   
    ('http://www.test.tw/in/3','bird'),   
)
</code></pre>
<p>But when the url has something like this <code>?page=2</code> it doesn't work.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex to search your pattern, and then use a dictionary instead of the <code>if-else</code> chain:</p>
<pre><code>import re

pattern = re.compile(r'/in/(\d+)')
categories = {'15': 'tree', '20': 'flower', '3': 'bird'}

def getcategory(url):
    category = pattern.search(url).group(1)
    return categories[category]
</code></pre>
<h2>Example</h2>
<pre><code>urls = ['http://www.test.tw/in/15',
        'http://www.test.tw/in/15?page=2',
        'http://www.test.tw/in/15/#/?page=3',
        'http://www.test.tw/in/20/#/?page=2',
        'http://www.test.tw/in/3/?page=5']

print [(url, getcategory(url)) for url in urls]
</code></pre>
<p><em>Output</em>:</p>
<pre><code>[('http://www.test.tw/in/15', 'tree'),
 ('http://www.test.tw/in/15?page=2', 'tree'),
 ('http://www.test.tw/in/15/#/?page=3', 'tree'),
 ('http://www.test.tw/in/20/#/?page=2', 'flower'),
 ('http://www.test.tw/in/3/?page=5', 'bird')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to use regular expression.</p>
<p>Use <a href="https://docs.python.org/2/library/urlparse.html#urlparse.urlparse" rel="nofollow"><code>urlparse.urlparse</code></a> (<a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow"><code>urllib.parse.urlparse</code></a> in Python 3.x):</p>
<pre><code>&gt;&gt;&gt; import urlparse
&gt;&gt;&gt; urlparse.urlparse('http://www.test.tw/in/15/#/?page=3')
ParseResult(scheme='http', netloc='www.test.tw', path='/in/15/', params='', query='', fragment='/?page=3')
&gt;&gt;&gt; urlparse.urlparse('http://www.test.tw/in/15/#/?page=3').path.rstrip('/').rsplit('/')[-1]
'15'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>urlparse</code> as suggested by others and look into regex as last resort.</p>
<pre><code>(?&lt;=\/)\d+(?=\/|\?|$)
</code></pre>
<p>Here is <a href="http://regex101.com/r/rZ7lQ2/6" rel="nofollow noreferrer">online demo</a></p>
<p>sample code:</p>
<pre><code>import re
p = re.compile(ur'(?&lt;=\/)\d+(?=\/|\?|$)', re.MULTILINE)
test_str = u"URLs"

re.findall(p, test_str)
</code></pre>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/GVoG9.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a regular expression as well, but urlparse is needed still.
Combining the two you could do this:</p>
<pre><code>import urlparse
import re
my_url = urlparse.urlparse('http://www.test.tw/in/15/#/?page=3')
my_match = re.match(r"/in/(?P&lt;num&gt;\d+)/$", my_url.path)
my_match.group("num")
&gt;&gt; 15
</code></pre>
<p>However you can really see that this is brittle and reliant on that all of the urls look the "same", but it works for Django :)</p>
</div>
<div class="post-text" itemprop="text">
<p>for a regex-based approach:</p>
<pre><code>import re
list = ["http://www.test.tw/in/15", "http://www.test.tw/in/15?page=2",
        "http://www.test.tw/in/15/#/?page=3",
        "http://www.test.tw/in/20/#/?page=2", "http://www.test.tw/in/3/?page=5"]
urls = ()
categories = {"tree": [], "flower": [], "bird": []}
for i in list:
    category = int(re.search("(http\:\/\/.+)\/(\d+)", i).group(2))

    if category == 15:
        urls += ((i, "tree"),)
    elif category == 20:
        urls += ((i, "flower"),)
    elif category == 3:
        urls += ((i, "bird"),)

print urls
</code></pre>
<p><strong>output</strong></p>
<pre><code>(('http://www.test.tw/in/15', 'tree'), ('http://www.test.tw/in/15?page=2', 'tree'), ('http://www.test.tw/in/15/#/?page=3', 'tree'), ('http://www.test.tw/in/20/#/?page=2', 'flower'), ('http://www.test.tw/in/3/?page=5', 'bird'))
</code></pre>
</div>
<span class="comment-copy">Do you want the regex for that?</span>
<span class="comment-copy">I think yes.Just can let me save to the variable: category</span>
