<div class="post-text" itemprop="text">
<p>I have a text file (CSV) which acts as a database for my application formatted as follows:</p>
<pre><code>ID(INT),NAME(STRING),AGE(INT)
1,John,23
2,Paul,34
3,Jack,12
</code></pre>
<p>Before you ask, I cannot get away from a CSV text file (imposed) but I can remove/change the first row (header) into another format or into another file all together (I added it to keep track of the schema).</p>
<p>When I start my application I want to read-in all the data in-memory so I can then query it and change it and stuff. I need to extra:</p>
<pre><code>- Schema (column names and types)
- Data
</code></pre>
<p>I am trying to figure out what would be the best way to store this in memory using Python (very new to the language and its constructs) - any suggestions/recommendations?
Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>If you use a <a href="http://pandas.pydata.org/" rel="nofollow">Pandas</a> <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html#pandas.DataFrame" rel="nofollow">DataFrame</a> you can query it like it was an SQL table, and read it directly from CSV and write it back out as well. I think that this is the best option for you. It's very fast and performant, and builds on solid, proven technologies.</p>
</div>
<span class="comment-copy">Maybe as a pandas data frame?</span>
<span class="comment-copy">@EdgarAroutiounian was a great idea but it looks like I need to code something myself using only native stuff (can't import anything not already in Python3.0) - any suggestions?</span>
<span class="comment-copy">If you have to stay in the native library, then what about looking up the standard library, <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a></span>
<span class="comment-copy">@EdgarAroutiounian now that is awesome!!!!</span>
<span class="comment-copy">Great idea - not sure I will be allowed to use it (this is for a project - and it seems to powerful - prof wants me to hand-write this out) but it does exactly give me what I asked for it the question :)</span>
<span class="comment-copy">Understood. In that case, I'd just use the CSV module. You can come up with a few different ways to query it. If there is a column that can be used as an index, you can use that column as a key to a <code>dict</code>, and store the rest of the data from the row as a <code>list</code>as the value for that key.</span>
