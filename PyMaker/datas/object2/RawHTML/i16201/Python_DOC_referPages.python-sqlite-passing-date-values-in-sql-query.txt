<div class="post-text" itemprop="text">
<p>I have having a problem with inserting date values into an SQL query. I am using sqlite3 and python. The query is: </p>
<pre><code>c.execute("""SELECT tweeterHash.* FROM tweeterHash, tweetDates WHERE
        Date(tweetDates.start) &gt; Date(?) AND
        Date(tweetDates.end) &gt; Date(?)""",
          (start,end,))
</code></pre>
<p>The query doesn't return any values, and there is no error message. If I use this query:</p>
<pre><code>c.execute("""SELECT tweeterHash.* FROM tweeterHash, tweetDates WHERE
        Date(tweetDates.start) &gt; Date(2014-01-01) AND
        Date(tweetDates.end) &gt; Date(2015-01-01)""")
</code></pre>
<p>Then I get the values that I want, which is as expected?</p>
<p>The values start and end come from a text file:</p>
<pre><code>f = open('dates.txt','r')
start = f.readline().strip('\n')
end = f.readline().strip('\n')
</code></pre>
<p>but I have also just tried declaring it as well:</p>
<pre><code>start = '2014-01-01'
end = '2015-01-01'
</code></pre>
<p>I guess I don't understand why passing the string in from the start and end variables doesn't work? What is the best way to pass a date variable into a SQL query? Any help is greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>These aren't the same dates—and it's the non-parameterized ones you've got wrong.</p>
<p><code>Date(2014-01-01)</code> calculates the arithmetic expression <code>2014 - 01 - 01</code>, then constructs a <code>Date</code> from the resulting number <code>2012</code>, which will get you something in 4707 BC.</p>
<p><code>Date('2014-01-01')</code>, or <code>Date(?)</code> where the parameter is the string <code>'2014-01-01'</code>, constructs the date you want, in 2014 AD.</p>
<p>You can see this more easily by just selecting dates directly:</p>
<pre><code>&gt;&gt;&gt; cur.execute('SELECT Date(2014-01-01), Date(?)', ['2014-01-01'])
&gt;&gt;&gt; print(cur.fetchone())
('-4707-05-28', '2014-01-01')
</code></pre>
<hr/>
<p>Meanwhile:</p>
<blockquote>
<p>What is the best way to pass a date variable into a SQL query?</p>
</blockquote>
<p>Ideally, use actual date objects instead of strings. The <code>sqlite3</code> library knows how to handle <code>datetime.datetime</code> and <code>datetime.date</code>. And don't call <code>Date</code> on the values, just compare them. (Yes, sqlite3 might then compare them as strings instead of dates, but the whole point of using ISO8601-like formats is that this always gives the same result… unless of course you have a bunch of dates from 4707 BC lying around.) So:</p>
<pre><code>start = datetime.date(2014, 1, 1)
end = datetime.date(2015, 1, 1)
c.execute("""SELECT tweeterHash.* FROM tweeterHash, tweetDates WHERE
        tweetDates.start &gt; ? AND
        tweetDates.end &gt; ?""",
          (start,end,))
</code></pre>
<hr/>
<blockquote>
<p>And would this also mean that when I create the table, I would want: " start datetime, end datetime, "?</p>
</blockquote>
<p>That would work, but I wouldn't do that. Python will convert <code>date</code> objects to ISO8601-format strings, but not convert back on <code>SELECT</code>, and SQLite will let you transparently compare those strings to the values returned by the <code>Date</code> function.</p>
<p>You could get the same effect with <code>TEXT</code>, but I believe you'd find it less confusing, <code>DATETIME</code> will set the column affinity to <code>NUMERIC</code>, which can confuse both humans and other tools when you're actually storing strings.</p>
<p>Or you could use the type <code>DATE</code>—which is just as meaningless to SQLite as <code>DATETIME</code>, but it can tell Python to transparently convert return values into <code>datetime.date</code> objects. See <a href="https://docs.python.org/3/library/sqlite3.html#default-adapters-and-converters" rel="nofollow">Default adapters and converters</a> in the <code>sqlite3</code> docs.</p>
<p>Also, if you haven't read <a href="http://www.sqlite.org/datatype3.html" rel="nofollow">Datatypes in SQLite Version 3</a> and <a href="https://docs.python.org/3/library/sqlite3.html#sqlite-and-python-types" rel="nofollow">SQLite and Python types</a>, you really should; there are a lot of things that are both surprising (even—or maybe especially—if you've used other databases), and potentially very useful.</p>
<hr/>
<p>Meanwhile, if you think you're getting the "right" results from passing <code>Date(2014-01-01)</code> around, that means you've actually got a bunch of garbage values in your database. And there's no way to fix them, because the mistake isn't reversible. (After all, 2014-01-01 and 2015-01-02 are both 2012…) Hopefully you either don't need the old data, or can regenerate it. Otherwise, you'll need some kind of workaround that lets you deal with existing data as usefully as possible under the circumstances.</p>
</div>
<span class="comment-copy">Ok, That is great to know. Thanks. So now with your solution, I get no values, as you stated. I add the values as a string as well when I add records into the database. So I'm guessing I would need to re-populate the database so that I pass the datetime.date(x,y,z) into the date fields? And would this also mean that when I create the table, I would want: " start datetime, end datetime, "?</span>
<span class="comment-copy">@user2524674: Yes, you're going to have to repopulate the table. For the rest, I edited the answer, but I think you probably want <code>date</code>, not <code>datetime</code>.</span>
