<div class="post-text" itemprop="text">
<p>I'm having problems finding maximum values for a list inside a list in Python.</p>
<p>Question: <code>maximum_power(data)</code> takes data from a csv file and returns the list of
pairs of array names and max power for a particular day for that array in kW.</p>
<p>The following must be the 'answer' when </p>
<pre><code>data = load_data(date)
maximum_power(data)
</code></pre>
<p>are used in the interpreter for a particular date. So, in a way I have given the answer and I need to provide a code that would give me the following result for all the buildings.</p>
<pre><code>data = load_data(date)
maximum_power(data)
    [('Building 1', 859.45),
     ('Building 2', 129.0),
     ('Building 3', 079.85),
     ('Building 4', 409.05),
</code></pre>
<p>The following is an example of the data which is obtained when only the <code>load_data(date)</code> is used. This is the data in the form <code>(time, temp, sunlight intensity, (power for all the buildings)</code>. </p>
<pre><code>(('18:30', 14.8, 0.0, (0, 0, 19, 29)),
 ('18:31', 14.8, 0.0, (0, 0, 19, 29)),
 ...)
</code></pre>
<p>However, for my part I'm only concerned with the powers to create a list of maximum power for each of the buildings out the power section <code>(0, 0, 19, 29)</code>. However, since the data is for the whole day, I need to know how to find the max value for each element in <code>(a, b, c, d)</code> and also insert the string i.e. Building names in the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>One of the ways to find the building using the most consumption for the day.</p>
<pre><code>maximum_power = [('Building 1', 859.45), ('Building 2', 129.0), ('Building 3', 079.85), ('Building 4', 409.05)]

maximum = 0
building = '' 

for k,v in maximum_power:
if v &gt; maximum:
  maximum = v
  building = k

print building, maximum     
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I correctly understand your problem a solution is:</p>
<pre><code>    def maximum_power(data):
        max = data[0]
        for datum in data :
            if datum[1] &gt; max[1]:
                max = datum
        return max
</code></pre>
<p>Execution give this :</p>
<pre><code>    &gt;&gt;&gt; data = [('Building 1', 859.45),('Building 2', 129.0),('Building 3', 079.85),('Building 4', 409.05)]
    &gt;&gt;&gt; maximum_power(data)
    ('Building 1', 859.45)
</code></pre>
<p>Another solution is to create a class of object and define comparatives method of this class and then use the built-in max function.</p>
<pre><code>    class Building(object):
        def __init__(self, name, power):
            self.name = name                                                        
            self.power = power                                                        

        def __repr__(self):
            return '&lt;Building : {0}, {1}&gt;'.format(self.name, self.power)                                                        

        def __gt__(self, other):
            """ Greter than method """
            return self.power.__gt__(other.power)
</code></pre>
<p>And then at execution time :</p>
<pre><code>    &gt;&gt;&gt; from Building import Building
    &gt;&gt;&gt; data = [Building('Building 1', 859.45),Building('Building 2', 129.0),Building('Building 3', 079.85),Building('Building 4', 409.05)]
    &gt;&gt;&gt; max(data)
    &lt;Building : Building 1, 859.45&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the power-value is always the second entry in the sublist, then I would suggest using <code>max()</code> on a generator expression like this:</p>
<pre><code>maximum_power = [('Building 1', 859.45), ('Building 2', 129.0), ('Building 3', 079.85), ('Building 4', 409.05)]
max((power[1] for power in maximum_power))
</code></pre>
<p>It should be quite fast.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the maximum power for all the buildings, you first have to extract the power values for all the buildings. You can do this by <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>ing the data, getting the last element, then zipping again. Next, you have to get the maximum of all those powers per building. Use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map</code></a> to apply <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow"><code>max</code></a> to each of the lists. Finally, you can combine those with those generic <code>Building X</code> strings using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a>.</p>
<pre><code>def maximum_power(data):
    powers = zip(*zip(*data)[-1])
    maxima = map(max, powers)
    return [("Building %d" % (i+1), m) for i, m in enumerate(maxima)]
</code></pre>
<p>Or, if you have a list of building names, like <code>buildings = ['Building 1', 'Building 2', 'Building 3', 'Building 4']</code>, you can use another <code>zip</code> to assign powers to buildings:</p>
<pre><code>    return zip(buildings, maxima)
</code></pre>
<p>Since you asked for it: You can also do the same without using <code>map</code> and <code>zip</code>, using some very complicated list comprehensions instead. However, I would recommend using <code>zip</code> and <code>map</code>.</p>
<pre><code>def maximum_power(data):
    powers = [[d[-1][i] for d in data] for i in range(len(buildings))]
    maxima = [max(p) for p in powers]
    return [(buildings[i], maxima[i]) for i in range(len(buildings))] 
</code></pre>
<p>Example (same for all those variants):</p>
<pre><code>&gt;&gt;&gt; buildings = ['Building 1', 'Building 2', 'Building 3', 'Building 4']
&gt;&gt;&gt; data = (('18:30', 14.8, 0.0, (0, 0, 19, 29)),
...         ('18:31', 14.8, 0.0, (0, 2, 19, 29)),
...         ('18:32', 14.8, 0.0, (4, 0, 29, 29)),
...         ('18:33', 14.8, 0.0, (3, 0, 19, 39)),
...         ('18:34', 14.8, 0.0, (0, 0, 19, 29))
...        )
&gt;&gt;&gt; maximum_power(data)
[('Building 1', 4), ('Building 2', 2), ('Building 3', 29), ('Building 4', 39)]
</code></pre>
</div>
<span class="comment-copy">If it's just a list of lists of numbers, just do <code>map(max, data)</code>, but that won't get you that string in there. How does <code>data</code> look? And what have you tried so far?</span>
<span class="comment-copy">You should post what your example csv data file looks like - you could iterate over all its rows and check if the power in the current line is greater then the max(other lines), stored somewhere. Then if it is, store it with a name in some other array. Need more details though to answer it fully.</span>
<span class="comment-copy">('18:30', 14.8, 0.0, (0, 0, 19, 29))  This is the data in the form (time, temp, sunlight intensity, (power for all the buildings) and im mostly concerned with the power.</span>
<span class="comment-copy">Thanks for the update @Pythonaddict - but it's made it even more unclear how whatever input is related to whatever output now...</span>
<span class="comment-copy">Does the question make sense now? @ Jon Clements</span>
<span class="comment-copy">@ tobias_k, hey thanks a lot for the reply! Can you tell me what  maximums = map(max, powers) does to the function?</span>
<span class="comment-copy">Also what if I have particular names for all the buildings? How would I assign names to all the buildings?</span>
<span class="comment-copy">also is there another way to do this without using zip and map?</span>
<span class="comment-copy">@Pythonaddict Of course you can do it without <code>map</code> and <code>zip</code>, just implement a bunch of nested loops. But I will not advise you to do so! This is a perfect example for when those functions are useful, and instead of reinventing the wheel, you should take what Python has to offer. Take a look at the links to find out more about those. If you have a list of building names, like <code>buildings = ['Building 1', 'Building 2', 'Building 3', 'Building 4']</code>, you can again use <code>zip</code>: <code>return zip(buildings, maximums)</code></span>
