<div class="post-text" itemprop="text">
<p>I want to get the milliseconds passed since epoch for UTC time. This seems like a very simple task for python but I am kinda stuck here.</p>
<p>I could use </p>
<pre><code>time.time() * 1000 
</code></pre>
<p>but depending on the underlying system, this could either return the value for UTC or local time.</p>
<p>I could also use an approach like </p>
<pre><code>time.mktime(datetime.utcnow().timetuple()) * 1000
</code></pre>
<p>But I can not get millisecond accuracy with this one, multiplying by 1000 only adds three zeros to the end, but I need exact milliseconds because I need to monitor processes that take less then a second.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way of getting milliseconds</p>
<pre><code>ts =  datetime.utcnow()
print ts.microsecond  #prints microseconds
print time.mktime(ts.timetuple()) + ts.microsecond * 1e-6
</code></pre>
<p><strong>output</strong></p>
<pre><code>128852
1409151725.13
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you use Python 3.3+, you can use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp" rel="nofollow"><code>datetime.datetime.timestamp</code></a>:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.datetime.utcnow().timestamp()
1409120835.727991
&gt;&gt;&gt; int(_ * 1000)
1409120835727
</code></pre>
</div>
<span class="comment-copy"><code>time.time()</code> returns the number of seconds since the epoch, which is <i>defined</i> as midnight UTC, Jan 1 1970. The only system-dependent factor is whether it ever returns a value with more than one-second precision.</span>
<span class="comment-copy">This works perfectly, only I wanted the result as an integer, so with a slight edit;   time.mktime(ts.timetuple()) * 1000 + ts.microsecond * 1e-3   works better for my case</span>
