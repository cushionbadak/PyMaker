<div class="post-text" itemprop="text">
<p>The following code can add each element of 2 lists in the same length, however, I want it to add up each list in different length, for example add up list1 = [1, 2] and list2 = [1, 2, 3]. </p>
<p>2ndly, In the 5th line, if I change the code to <code>new_list = [list1[num] + list2[num]]</code>, it will only sum up the total, without adding up each element, I wonder why?</p>
<pre><code>def add_lists_V2(list1, list2):
    new_list = []
    max_list = max(list1, list2)
    for num in range(len(max_list)):
        new_list = new_list + [list1[num] + list2[num]]

    return new_list

def input_integer_list():
    nums = input("Enter integers: ")
    num_list = nums.split()
    for i in range(len(num_list)):
        num_list[i] = int(num_list[i])
    return num_list

def main():
    print("Add two lists of any size.")
    list1 = input_integer_list()
    list2 = input_integer_list()
    new_list = add_lists_V2(list1, list2)
    print("Sum of two lists:", new_list)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.zip_longest">itertools</a> module is your friend.  Specifically, <code>zip_longest</code>, though depending on what your end goal is there might be more there that can help you.</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt;
&gt;&gt;&gt; l1 = range(2)
&gt;&gt;&gt; l2 = range(3)
&gt;&gt;&gt;
&gt;&gt;&gt; map(sum, itertools.zip_longest(l1, l2, fillvalue=0))
[0, 2, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am proposing one solution below but I know it's not the best. Hopefully, someone can avoid the messy if-else and give a more elegant solution.</p>
<p>Firstly, reading and processing input can be simplified. Method <code>map()</code> is useful for operations on each element of the list. Likewise, <code>map()</code> in conjunction with <code>operator.add</code> can be used to add up element-wise multiple lists. To handle lists of different sizes, use pythonic way of making sub-lists.</p>
<pre><code>from operator import add

def add_lists_V2(list1, list2):
    if len(list1) &gt; len(list2):
        m = len(list2)
        r = list1[m:]
    else:
        m = len(list1)
        r = list2[m:]
    return map(add, list1[:m], list2[:m]) + r

def input_integer_list():
    nums = input("Enter integers: ")
    return map(int,nums.split())

def main():
    print("Add two lists of any size.")
    list1 = input_integer_list()
    list2 = input_integer_list()
    new_list = add_lists_V2(list1, list2)
    print("Sum of two lists:", new_list)

main()
</code></pre>
</div>
<span class="comment-copy">What should the result be when you add <code>list</code> and <code>list2</code>? Should <code>[1, 2], [1, 2, 3] -&gt; [2, 4, 3]</code>?</span>
