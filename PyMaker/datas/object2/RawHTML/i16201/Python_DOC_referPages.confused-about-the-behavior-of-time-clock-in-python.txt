<div class="post-text" itemprop="text">
<p>So I can use <code>time.clock()</code> to measure the running time of a function call:</p>
<pre><code>&gt;&gt;&gt; def f() :
  a = time.clock()
  range(pow(10,8))
  b = time.clock()
  print a,b

&gt;&gt;&gt; f()
0.143698 8.345905
</code></pre>
<p>But now if just call <code>time.clock()</code> repeatedly from the interactive shell:  </p>
<pre><code>&gt;&gt;&gt; time.clock()
0.075492
&gt;&gt;&gt; time.clock()
0.075931
&gt;&gt;&gt; time.clock()
0.076354
&gt;&gt;&gt; time.clock()
0.076754
&gt;&gt;&gt; time.clock()
0.077132
...
</code></pre>
<p>What is the meaning of these numbers?</p>
<p>And now if I do this:</p>
<pre><code>&gt;&gt;&gt; def g() :
      a = time.clock()
      time.sleep(10)
      b = time.clock()
      print a,b

&gt;&gt;&gt; g() 
8.361528 8.361625
</code></pre>
<p>Ok I guess that <code>sleep</code> is not counted in processing time, so the two numbers are very close. But what does 8.361528 correspond to?</p>
<p>I did read the documentation, but I still don't understand:</p>
<blockquote>
<p>Help on built-in function clock in module time:</p>
<p>clock(...)
      clock() -&gt; floating point number</p>
<pre><code>Return the CPU time or real time since the start of the process or since
the first call to clock().  This has as much precision as the system
records.
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.clock" rel="nofollow"><code>time.clock()</code> docs</a>:</p>
<blockquote>
<p>On Unix, return the current processor time as a floating point number expressed in seconds...<br/>
  On Windows, this function returns wall-clock seconds elapsed since the first call to this function...</p>
</blockquote>
<p>i.e., the behavior (e.g., what "processor time" means, whether the <code>sleep</code> time is included, what is the precision) depends on platform but units are <em>seconds</em> on all platforms.</p>
<blockquote>
<p>So I can use time.clock() to measure the running time of a function call:</p>
</blockquote>
<p>Use <a href="http://docs.python.org/2/library/timeit.html#timeit.default_timer" rel="nofollow"><code>timeit.default_timer()</code></a> instead. It is assigned to <code>time.time()</code> or <code>time.clock()</code> depending on OS. On Python 3.3+ <code>default_timer</code> is <a href="https://docs.python.org/3/library/time.html#time.perf_counter" rel="nofollow"><code>time.perf_counter()</code></a> on all platforms.</p>
<p>It returns the value in seconds (only relative values are meaningful). It includes "sleep" time. It provides the highest available resolution to measure a short duration. The behavior is consistent across platforms.</p>
</div>
<div class="post-text" itemprop="text">
<p>What system? </p>
<p>"This method returns the current processor time as a floating point number expressed in seconds on Unix and in Windows it returns wall-clock seconds elapsed since the first call to this function, as a floating point number."</p>
<p><a href="http://www.tutorialspoint.com/python/time_clock.htm" rel="nofollow">http://www.tutorialspoint.com/python/time_clock.htm</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>time.clock()</code> appears return the time the Python process has spent computing things. In the interactive console at least, the time it spends waiting for your input is somehow not included in that time.</p>
<p>Here's a snippet you can use to see more expected behavior of <code>time.clock()</code>:</p>
<pre><code>while True: print clock()
</code></pre>
</div>
<span class="comment-copy">See e.g. <a href="http://stackoverflow.com/a/25317322/3001761">stackoverflow.com/a/25317322/3001761</a></span>
<span class="comment-copy">@jonrsharpe: I must be stupid, but I still don't understand the meaning of the numbers 0.077 and 8.36.</span>
<span class="comment-copy">@usualme: don't interpret the absolute values, interpret the <i>relative differences</i>. That's the only think you'd care about.</span>
<span class="comment-copy"><code>time.clock()</code> behavior depends on platform. <a href="http://stackoverflow.com/questions/85451/python-time-clock-vs-time-time-accuracy#comment18341094_85536">Use <code>timeit.default_timer()</code> instead</a>.</span>
<span class="comment-copy">Can it also be used for timing code such as internet requests (<code>requests.get('www.google.com')</code>) or database queries?</span>
<span class="comment-copy">@usualme: yes. <code>timeit.default_timer()</code> measures a wall clock time.</span>
<span class="comment-copy">This is more of a comment than an answer.</span>
<span class="comment-copy">Since the authoring user's reputation does not <a href="http://meta.stackexchange.com/a/25791">suffice</a> to <a href="http://stackoverflow.com/help/privileges/comment">comment</a> at this point, posting an answer seems the only option.</span>
