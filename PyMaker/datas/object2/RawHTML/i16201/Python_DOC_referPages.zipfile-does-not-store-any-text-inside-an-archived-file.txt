<div class="post-text" itemprop="text">
<p>The following code results in the file found in the zip being empty, instead of having <code>some text</code> in it:</p>
<pre><code>def func(path):
    with tempfile.NamedTemporaryFile() as f:
        f.write('some text')
        with zipfile.ZipFile(path + '.zip', 'w', zipfile.ZIP_DEFLATED) as zf:
            zf.write((f.name), path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add <code>flush</code> to the file object:</p>
<pre><code>def func(path):
    with tempfile.NamedTemporaryFile() as f:
        f.write('some text')
        f.flush()  # &lt;-- lifesaver
        with zipfile.ZipFile(path + '.zip', 'w', zipfile.ZIP_DEFLATED) as zf:
            zf.write((f.name), path)
</code></pre>
<p>This problem also affects normal (non-temporary) files, so they'll also need the <code>flush</code> treatment:</p>
<pre><code>def func(path):
    with open(path, 'w') as f:
        f.write('some text')
        f.flush()  # &lt;-- lifesaver
        with zipfile.ZipFile(path + '.zip', 'w', zipfile.ZIP_DEFLATED) as zf:
            zf.write(path)
</code></pre>
<p>Alternatively, de-denting the 2nd <code>with</code> block would avoid having to use <code>flush</code> since a file gets closed automatically when that block exits, increasing the chance of it being flushed:</p>
<pre><code>def func(path):
    with open(path, 'w') as f:
        f.write('some text')
    with zipfile.ZipFile(path + '.zip', 'w', zipfile.ZIP_DEFLATED) as zf:
        zf.write(path)
</code></pre>
<p>Note that this will only work for the 2nd example, but not the 1st; see <a href="https://docs.python.org/3/library/tempfile#tempfile.NamedTemporaryFile" rel="nofollow">tempfile docs</a> for the reason why.</p>
</div>
<span class="comment-copy">Alternately, you could close the file. In your case, you could dedent the second with clause so that the first one exits and closes the file.</span>
<span class="comment-copy">De-denting for the first example would not work, unless I were to ask <code>NamedTemporaryFile</code> not to delete the file, which would defeat my purpose for using it.</span>
<span class="comment-copy">hadn't thought of that - good point.</span>
