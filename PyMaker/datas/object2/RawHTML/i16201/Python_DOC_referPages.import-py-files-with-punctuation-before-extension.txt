<div class="post-text" itemprop="text">
<p>This is relatively a simple question.</p>
<p>Currently, I am trying to import other python files and know that the code is quite simple for  a file in the same directory. </p>
<p>From my knowledge it is just:</p>
<blockquote>
<p>import filename</p>
</blockquote>
<p>Some of my files, however, have punctuation in them such as '4.1' or '4-1'.  Is there anyway to import the files as is or do I need to change the file name?</p>
<p>currently I am running python 3 but my class is using python 2</p>
<p>Thank you so much in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't have extra dots in the filename then this is possible with <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow noreferrer"><code>importlib</code></a>. For example, supposing you have the filename <code>4-1.py</code>:</p>
<pre><code>import importlib
my_module = importlib.import_module('4-1')
</code></pre>
<p>You'll still have to bind the module object to a name which is a <a href="https://docs.python.org/2/reference/lexical_analysis.html#identifiers" rel="nofollow noreferrer">valid python identifier</a>, even though the <code>my_module.__name__</code> attribute itself doesn't actually have such a restriction.</p>
<p>If you have more dots in the filename, the situation is more tricky because dots indicate to Python's import system that you have submodule structure within a <a href="https://docs.python.org/3/glossary.html#term-package" rel="nofollow noreferrer">package</a>.  Nonetheless it is still possible to load such a file with <a href="https://docs.python.org/3/library/imp.html" rel="nofollow noreferrer"><code>imp</code></a>, the predecessor to <code>importlib</code>:</p>
<pre><code>import imp
my_module = imp.load_source('my_module', 'strange.name-1.py')
</code></pre>
<p><code>importlib</code> use is quite normal to use when you have a module name stored in a string variable at runtime. You could use it to ensure the consistency of a collection of module names with some external data source where the names are out of your control, for example. However, it would not be good to use this just to workaround having weird filenames that are within your control - better just to rename the files.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't import names with symbols using the <code>import</code> statement, but you can always use the <code>__import__</code> built-in:</p>
<pre><code>module = __import__("strange-name-1")
</code></pre>
<p><code>import</code> creates variables. It can only work with valid variable identifiers. Using <code>__import__</code>, you assign a different name yourself, and can refer to the target module with a string.</p>
<p>Also, the <code>importlib.import_module()</code> function is less powerful than <code>__import__</code>, but a valid alternative for this use case.</p>
</div>
<span class="comment-copy">it needs to be a package. you have to add a <code>__init__.py</code> file to the directory.</span>
<span class="comment-copy">why have you named modules like that?</span>
<span class="comment-copy">its mostly for a class which asks me to import a previous homework assignment i.e. 4.1 (chapter 4 problem 1)  typically I just name the module based on its function but just for personal tracking purposes and was wondering if there was an easy way to import without having to rename all my files</span>
<span class="comment-copy">why not use <code>my_file_4_1</code>?</span>
<span class="comment-copy">This seems like a much better naming scheme.  Thank you!</span>
<span class="comment-copy">wim, I totally agree with you in this fashion and will just duplicate my file so that I have one that is easily importable -- this is just for homework but was wondering for future purposes on my own projects</span>
<span class="comment-copy">Did you actually try your example?  I don't think it works</span>
<span class="comment-copy">Oops. Doesn't work with dots, does work with hyphens. Removed the dot. Thanks</span>
