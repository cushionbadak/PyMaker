<div class="post-text" itemprop="text">
<p>I have method annotated with <code>@property</code> in <code>athleteModel.py</code> script:</p>
<pre><code>@property
def get_from_store():
    with open(athleteFilePath,'rb') as pickleFile:
        athleteMap = pickle.load(pickleFile)
    print('Loaded athleteMap ',athleteMap)
    return athleteMap
</code></pre>
<p>I use this method in another script:</p>
<pre><code>from athleteModel import get_from_store

athletes = get_from_store
print(yate.u_list(athletes[athName].sortedTimes))
</code></pre>
<p>At last line (<code>print</code> method) I get exception:</p>
<pre><code>TypeError: 'function' object is not subscriptable 
      args = ("'function' object is not subscriptable",) 
      with_traceback = &lt;built-in method with_traceback of TypeError object&gt;
</code></pre>
<p>What is wrong in my code?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>@property</code> only works on <em>methods</em>, not on functions.</p>
<p><code>get_from_store</code> is not a method, it is a function. A <code>property</code> object act as a <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow">descriptor object</a> and descriptors only work in the context of classes and instances.</p>
<p>In your case there is no need to make <code>get_from_store</code> a property, really. Remove the <code>@property</code> decorator and just use it like a function:</p>
<pre><code>athletes = get_from_store()
</code></pre>
<p>You cannot otherwise make top-level functions act like attributes.</p>
</div>
<span class="comment-copy">I thought python generates it instead of me</span>
<span class="comment-copy">How do you differ function and method?</span>
<span class="comment-copy">@VolodymyrLevytskyi: a method is a function bound to an instance.</span>
