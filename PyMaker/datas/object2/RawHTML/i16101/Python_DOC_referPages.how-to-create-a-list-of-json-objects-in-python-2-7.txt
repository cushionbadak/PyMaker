<div class="post-text" itemprop="text">
<p>I am converting an XML file to a JSON file. I do this by opening the xml, use the <code>xmltodict</code> module and then use the .get method to traverse the tree to the level I want. This level is the parents to the leaves. I then check on a certain condition that some of the leaves for each of these <code>task</code> is true and if it is then I use <code>json.dumps()</code> and write it to the file. The issue is (I think this is where it is stemming from) that when I only append one JSON object to the file, it doesn't append a comma to the end of the object because it thinks it is the only object. I tried combating this by appending a ',' at the end of each JSON object but then when I try to use the <code>json.loads()</code> method it gives me an error saying "No JSON object could be decoded". However when I manually append the '[' and ']' to the file it doesn't give me an error. My code is below and I'd appreciate any help/suggestions you have.</p>
<pre><code>def getTasks(filename):
    f = open(filename, 'r')
    a = open('tasksJSON', 'w')
    a.write('[')

    d = xmltodict.parse(f)
    l = d.get('Project').get('Tasks').get('Task')
    for task in l:
        if (task['Name'] == 'dinner'):  #criteria for desirable tasks
            j = json.dumps(task)
            a.write (str(j))   
            a.write(',')         

    a.write(']')
    f.close()
    a.close()
</code></pre>
<p>This works and puts everything in <code>tasksJSON</code> but like I said, when I call</p>
<pre><code>my_file = open('tasksJSON', 'r')
data = json.load(my_file)           # LINE THAT GIVES ME ERROR
</code></pre>
<p>I get an error saying </p>
<pre><code>ValueError: No JSON object could be decoded
</code></pre>
<p>and the output file contains:</p>
<pre><code>[{"UID": "4", "ID": "14", "Name": "Design"},{"UID": "5", "ID": "15", "Name": "Basic Skeleton"}]
                                           ^
                                 this is the comma I manually inserted
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>JSON doesn't allow extra commas at the end of an array or object. But your code adds such an extra comma. If you look at the official grammar <a href="http://json.org/" rel="nofollow">here</a>, you can only have a <code>,</code> before another <em><code>value</code></em>. And Python's <code>json</code> library conforms to that grammar, so:</p>
<pre><code>&gt;&gt;&gt; json.loads('[1, 2, 3, ]')
ValueError: Expecting value: line 1 column 8 (char 7)
</code></pre>
<p>To fix this, you could do something like this:</p>
<pre><code>first = True
for task in l:
    if (task['Name'] == 'dinner'):  #criteria for desirable tasks
        if first:
            first = False
        else:
            a.write(',')
        j = json.dumps(task)
        a.write(str(j))   
</code></pre>
<hr/>
<p>On the other hand, if memory isn't an issue, it might be simpler—and certainly cleaner—to just add all of the objects to a list and then <code>json.dumps</code> that list:</p>
<pre><code>output = []
for task in l:
    if (task['Name'] == 'dinner'):  #criteria for desirable tasks
        output.append(task)
a.write(json.dumps(output))
</code></pre>
<p>Or, more simply:</p>
<pre><code>json.dump([task for task in l if task['Name'] == 'dinner'], a)
</code></pre>
<p>(In fact, even if memory <em>is</em> an issue, you can extend <code>JSONEncoder</code>, as shown in <a href="https://docs.python.org/3/library/json.html" rel="nofollow">the docs</a>, to handle iterators by converting them lazily into JSON arrays, but this is a bit tricky, so I won't show the details unless someone needs them.)</p>
</div>
<div class="post-text" itemprop="text">
<p>make it this way:</p>
<pre><code>def getTasks(filename):
    f = open(filename, 'r')
    a = open('tasksJSON', 'w')
    x = []
    d = xmltodict.parse(f)
    l = d.get('Project').get('Tasks').get('Task')
    for task in l:
        if (task['Name'] == 'dinner'):  #criteria for desirable tasks
            #j = json.dumps(task)
            x.append(task)
            #a.write (str(j))   
            #a.write(',')         

    a.write(json.dumps(x))
    f.close()
    a.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems, that you put into a file several json objects and add your own square brackets. Hence, it can not load as single obj</p>
</div>
<span class="comment-copy">That isn't your output file. If it were, it would work, <a href="http://repl.it/ZBc" rel="nofollow noreferrer">as you can see in this online interpreter</a>. The actual output generated by your code will have an extra comma on the end, which will give you an error <a href="http://repl.it/ZBc/1" rel="nofollow noreferrer">as you can see here</a>.</span>
<span class="comment-copy">this makes sense, thanks @abarnet. However I'm still a bit confused. I will show you what the output file looks like from this code. update above</span>
<span class="comment-copy">@bagelboy: The output file you posted is not your real output file, and doesn't contain the same problem, so of course it works. If you add the same problem as your real output file, you get the same error. See my comment on the question for more details.</span>
<span class="comment-copy">JSON is just strings, and a bunch of valid JSON objects separated by commas and surrounded by brackets makes a valid JSON array.</span>
