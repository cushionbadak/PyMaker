<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/522563/accessing-the-index-in-for-loops">Accessing the index in 'for' loops?</a>
<span class="question-originals-answer-count">
                    23 answers
                </span>
</li>
</ul>
</div>
<p>In Ruby, if I have an array and I want to use both the indexes and the values in a loop, I use <code>each_with_index</code>.</p>
<pre><code>a=['a','b','c']
a.each_with_index{|v,i| puts("#{i} : #{v}") } 
</code></pre>
<p>prints  </p>
<pre><code>0 : a 
1 : b
2 : c
</code></pre>
<p>What is the Pythonic way to do the same thing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like:</p>
<pre><code>for i, v in enumerate(a):
   print "{} : {}".format(i, v)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That'd be <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow">enumerate</a>.</p>
<pre><code>a=['a','b','c']
for i,v in enumerate(a):
    print "%i : %s" % (i, v)
</code></pre>
<p>Prints</p>
<pre><code>0 : a
1 : b
2 : c
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a></span>
<span class="comment-copy">This. You can also use the string format function to remove the coupling on data type and the parameter order <code>print "{} : {}".format(v, i)</code></span>
