<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functools.html#functools.singledispatch"><code>functools.singledispatch</code></a> helps to define a single-dispatch generic method.  Meanwhile, there is <a href="https://docs.python.org/3/library/functions.html#super"><code>super()</code></a> for calling methods or accessing attributes of a superclass.</p>
<p>Is there something like <code>super()</code> that can be used with <code>singledispatch</code>?  I tried the following, but the result of <code>super(Derived, value)</code> is just not instance of <code>Base</code>, so it does not work as I expected:</p>
<pre><code>from functools import singledispatch

@singledispatch
def hello(value):
    return ['default']

@hello.register(Base)
def hello_base(value):
    return hello(super(Base, value)) + ['base']

@hello.register(Derived)
def hello_derived(value):
    return hello(super(Derived, value)) + ['derived']

print(hello(Derived())
# expected ['default', 'base', 'derived'],
# but actually is ['default', 'derived'].
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe that something like this will work, but I can't test it since I don't have Python 3.4 installed:</p>
<pre><code>def getsuperclass(cls):
    try:
        nextclass = cls.__mro__[1]
    except IndexError:
        raise TypeError("No superclass")
    return nextclass

@singledispatch
def hello(value):
    return ['default']

@hello.register(Base)
def hello_base(value):
    return hello.dispatch(getsuperclass(Base))(value) + ['base']

@hello.register(Derived)
def hello_derived(value):
    return hello.dispatch(getsuperclass(Derived))(value) + ['derived']

print(hello(Derived()))
</code></pre>
<p>Note that it doesn't really make sense to call <code>hello</code> with the superclass as the argument, because if you did that you would lose the original argument (<code>value</code>) that was passed.  In your case it doesn't matter because your function doesn't use <code>value</code> at all, but a real dispatch function would probably actually do something with the value, so you need to pass the value as the argument.</p>
</div>
