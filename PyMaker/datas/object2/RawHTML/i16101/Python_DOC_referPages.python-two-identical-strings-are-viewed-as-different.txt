<div class="post-text" itemprop="text">
<p>I have two strings that by all indication look identical:</p>
<pre><code>x1 = 'N C Soft - NCSOFT_Guild Wars 2 December 2013 :: BNLX_AD_Parallax_160x600'
x2 = 'N C Soft - NCSOFT_Guild Wars 2 December 2013 :: BNLX_CT_Parallax_160X600'
</code></pre>
<p>However, checking for equality shows they are not.</p>
<pre><code>In [312]: if x1 != x2:
   .....:     print 'yep'
   .....:
yep
</code></pre>
<p>I also tried copying both strings out of command prompt and them pasting them back in as a new variables but they are still not equal. I'm 80% sure it's because they're encoded in a weird way, with some odd characters inserted that I can't see, but using type() both just show up as string.</p>
<p>Is there any way I can see the "real" string? Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>They are not the same; using <a href="https://docs.python.org/2/library/difflib.html#difflib.ndiff" rel="noreferrer"><code>difflib.ndiff()</code></a> shows how these two values differ very clearly:</p>
<pre><code>&gt;&gt;&gt; import difflib
&gt;&gt;&gt; print '\n'.join(difflib.ndiff([x1], [x2]))
- N C Soft - NCSOFT_Guild Wars 2 December 2013 :: BNLX_AD_Parallax_160x600
?                                                      ^^             ^

+ N C Soft - NCSOFT_Guild Wars 2 December 2013 :: BNLX_CT_Parallax_160X600
?                                                      ^^             ^
</code></pre>
<p>In general, when in doubt use <a href="https://docs.python.org/2/library/functions.html#repr" rel="noreferrer"><code>repr()</code></a> to look at the representation. Python 2 will use escapes for any non-printable or non-ASCII character in the string, any 'funny' characters will stand out like a sore thumb. In Python 3, use the <a href="https://docs.python.org/3/library/functions.html#ascii" rel="noreferrer"><code>ascii()</code> function</a> for the same result as <code>repr()</code> there is less conservative and Unicode is rife with character combinations that look the same at first glance.</p>
<p>For strings where you still cannot see what changes between the two, the above <code>difflib</code> tool can also help point out what exactly changed.</p>
</div>
<span class="comment-copy">Comments aren't working too well in terms of skipping a space but the repr() look identical as well</span>
<span class="comment-copy">Ah you're absolutely right -- I provided the wrong example here for sure. But this problem is still real -- let me find a real example.</span>
<span class="comment-copy">@DavidYang: Python doesn't lie to you. Look at the <code>repr()</code> output and compare those values; differences like non-breaking whitespace are far more visible.</span>
<span class="comment-copy">@DavidYang: updated to use <code>difflib.ndiff</code> to show the precise differences. There is another difference I also missed at first.</span>
<span class="comment-copy">I get that, I don't think python is lying, I just think it's not showing me everything. Finding two strings that appear identical but are not has proven to be quite difficult since I can't exactly search for it. But what I can say is that trying to find common strings between two lists yields nothing, yet I'm 100% positive that the two lists have intersection points since one is created from the other.</span>
<span class="comment-copy">Hmmmm Martijn I believe that second difference is the actual cause of this! Somehow when I created my second list using my first it wasn't case sensitive but now that I'm comparing them, case sensitivity matters!</span>
