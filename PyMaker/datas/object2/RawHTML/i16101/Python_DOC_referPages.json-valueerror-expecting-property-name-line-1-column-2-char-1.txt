<div class="post-text" itemprop="text">
<p>I am having trouble using json.loads to convert to a dict object and I can't figure out what I'm doing wrong.The exact error I get running this is </p>
<pre><code>ValueError: Expecting property name: line 1 column 2 (char 1)
</code></pre>
<p>Here is my code:</p>
<pre><code>from kafka.client import KafkaClient
from kafka.consumer import SimpleConsumer
from kafka.producer import SimpleProducer, KeyedProducer
import pymongo
from pymongo import MongoClient
import json

c = MongoClient("54.210.157.57")
db = c.test_database3
collection = db.tweet_col

kafka = KafkaClient("54.210.157.57:9092")

consumer = SimpleConsumer(kafka,"myconsumer","test")
for tweet in consumer:
    print tweet.message.value
    jsonTweet=json.loads(({u'favorited': False, u'contributors': None})
    collection.insert(jsonTweet)
</code></pre>
<p>I'm pretty sure that the error is occuring at the 2nd to last line </p>
<pre><code>jsonTweet=json.loads({u'favorited': False, u'contributors': None})
</code></pre>
<p>but I do not know what to do to fix it. Any advice would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>json.loads</code> will load a json string into a python <code>dict</code>, <code>json.dumps</code> will dump a python <code>dict</code> to a json string, for example:</p>
<pre><code>&gt;&gt;&gt; json_string = '{"favorited": false, "contributors": null}'
'{"favorited": false, "contributors": null}'
&gt;&gt;&gt; value = json.loads(json_string)
{u'favorited': False, u'contributors': None}
&gt;&gt;&gt; json_dump = json.dumps(value)
'{"favorited": false, "contributors": null}'
</code></pre>
<p>So that line is incorrect since you are trying to <code>load</code> a python <code>dict</code>, and <code>json.loads</code> is expecting a valid <code>json string</code> which should have <code>&lt;type 'str'&gt;</code>. </p>
<p>So if you are trying to load the json, you should change what you are loading to look like the <code>json_string</code> above, or you should be dumping it. This is just my best guess from the given information. What is it that you are trying to accomplish?</p>
<p>Also you don't need to specify the <code>u</code> before your strings, as @Cld  mentioned in the comments.</p>
</div>
<div class="post-text" itemprop="text">
<p>I encountered another problem that returns the same error.</p>
<h2>Single quote issue</h2>
<p>I used a json string with <strong>single quotes</strong> : </p>
<pre><code>{
    'property': 1
}
</code></pre>
<p>But <strong><code>json.loads</code> accepts only double quotes for json properties</strong> : </p>
<pre><code>{
    "property": 1
}
</code></pre>
<h2>Final comma issue</h2>
<p><code>json.loads</code> doesn't accept a final comma:</p>
<pre><code>{
  "property": "text", 
  "property2": "text2",
}
</code></pre>
<h1>Solution: <code>ast</code> to solve single quote and final comma issues</h1>
<p>You can use <code>ast</code> (part of standard library for both Python 2 and 3) for this processing. Here is an example :</p>
<pre><code>import ast
# ast.literal_eval() return a dict object, we must use json.dumps to get JSON string
import json

# Single quote to double with ast.literal_eval()
json_data = "{'property': 'text'}"
json_data = ast.literal_eval(json_data)
print(json.dumps(json_data))
# Displays : {"property": "text"}

# ast.literal_eval() with double quotes
json_data = '{"property": "text"}'
json_data = ast.literal_eval(json_data)
print(json.dumps(json_data))
# Displays : {"property": "text"}

# ast.literal_eval() with final coma
json_data = "{'property': 'text', 'property2': 'text2',}"
json_data = ast.literal_eval(json_data)
print(json.dumps(json_data))
# Displays : {"property2": "text2", "property": "text"}
</code></pre>
<p>Using <code>ast</code> will prevent you from single quote and final comma issues by interpet the JSON like Python dictionnary (so you must follow the Python dictionnary syntax). It's a pretty good and safely alternative of <code>eval()</code> function for literal structures.</p>
<p><a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="noreferrer">Python documentation</a> warned us of using large/complex string : </p>
<blockquote>
<p>Warning It is possible to crash the Python interpreter with a
  sufficiently large/complex string due to stack depth limitations in
  Pythonâ€™s AST compiler.</p>
</blockquote>
<h2>json.dumps with single quotes</h2>
<p>To use <code>json.dumps</code> with single quotes easily you can use this code:</p>
<pre><code>import ast
import json

data = json.dumps(ast.literal_eval(json_data_single_quote))
</code></pre>
<h1><code>ast</code> documentation</h1>
<p><a href="https://docs.python.org/3/library/ast.html" rel="noreferrer">ast Python 3 doc</a></p>
<p><a href="https://docs.python.org/2/library/ast.html" rel="noreferrer">ast Python 2 doc</a></p>
<p>I hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>replace all single quotes with double quotes</li>
<li><p>replace 'u"' from your strings to '"' ... so basically convert internal unicodes to strings before loading the string into json</p>
<p><code>&gt;&gt; strs = "{u'key':u'val'}"</code></p>
<p><code>&gt;&gt; strs = strs.replace("'",'"')</code></p>
<p><code>&gt;&gt; json.loads(strs.replace('u"',''))</code></p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>All other answers may answer your query, but I faced same issue which was due to stray <code>,</code> which I added at the end of my json string like this:</p>
<pre><code>{
 "key":"123sdf",
 "bus_number":"asd234sdf",
}
</code></pre>
<p>I finally got it working when I removed extra <code>,</code> like this:</p>
<pre><code>{
 "key":"123sdf",
 "bus_number":"asd234sdf"
}
</code></pre>
<p>Hope this help! cheers.</p>
</div>
<div class="post-text" itemprop="text">
<p>used ast,
example</p>
<pre><code>In [15]: a = "[{'start_city': '1', 'end_city': 'aaa', 'number': 1},\
...:      {'start_city': '2', 'end_city': 'bbb', 'number': 1},\
...:      {'start_city': '3', 'end_city': 'ccc', 'number': 1}]"
In [16]: import ast
In [17]: ast.literal_eval(a)
Out[17]:
[{'end_city': 'aaa', 'number': 1, 'start_city': '1'},
 {'end_city': 'bbb', 'number': 1, 'start_city': '2'},
 {'end_city': 'ccc', 'number': 1, 'start_city': '3'}]
</code></pre>
</div>
<span class="comment-copy">do you see a syntax error there ? A stray <code>"</code> is that a copy paste error ?</span>
<span class="comment-copy">What was the JSON string printed out by the line <code>print tweet.message.value</code>?</span>
<span class="comment-copy">The <code>ValueError</code> is send because of an error in the JSON input, not a problem in your code. (Beside the missing <code>"</code> who should normally send a <code>SyntaxError</code> so I assume it's just a copy paste error.)</span>
<span class="comment-copy">(By the way, the utf_8 is the default encoding for json.loads so doesn't need to indicate it.)</span>
<span class="comment-copy">Thanks for the input. Edited the question, should be clearer now.</span>
<span class="comment-copy"><i>json.loads will load a --&gt;json object&lt;-- into a python dict</i> -- That is  contrary to what the docs say and even what your own code does--you are using loads() on a string, not a <i>json object</i>.</span>
<span class="comment-copy">Yes @7stud, you're correct, it is loading a string. But it must be a valid json string. I've updated my answer.</span>
<span class="comment-copy">oh, final comma! thank you</span>
<span class="comment-copy">more pythonic way would be to use ast.literal_eval("{u'key':u'val'}"). It will take care of all the format related problems</span>
<span class="comment-copy">json.loads(strs.replace('u"','')) is not working.   Here is the below error, Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt;   File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py", line 338, in loads     return _default_decoder.decode(s)     obj, end = self.scan_once(s, idx) ValueError: Expecting property name: line 1 column 2 (char 1)</span>
<span class="comment-copy">good one, although this is already covered by <a href="https://stackoverflow.com/a/36599122/1983854">jedema's answer</a></span>
<span class="comment-copy">@fedorqui That part was added after my answer (<a href="https://stackoverflow.com/posts/36599122/revisions">stackoverflow.com/posts/36599122/revisions</a>) Now, you might wanna give a +1 :)</span>
<span class="comment-copy">oh, you are right! It was added by Jan 2018. Apologises and +1 :)</span>
