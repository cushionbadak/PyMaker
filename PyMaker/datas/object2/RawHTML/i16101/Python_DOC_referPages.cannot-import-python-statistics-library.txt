<div class="post-text" itemprop="text">
<p>I have a small python script that needs to do some simple stats on some lists of numbers - the sort of thing the statistics.py library seems suitable for.
From what I can make out of the info on <a href="https://docs.python.org/3/library/statistics.html" rel="nofollow">python.org</a>, it should be part of the standard library in python 3.4.1 (on Win 64 bit), but I'm struggling to access the functions.</p>
<p><em>import statistics</em> just gives a 'no module named 'statistics' error</p>
<p>Looking through the python34\Lib directory doesn't seem to show a <em>statistics</em> folder, and creating one and saving the <em>statistics.py</em> file available from python.org doesn't seem to make any difference.</p>
<p>Googling for how to install python libraries gives lots of examples referencing setup.py files and command line sequences, but i don't see how they relate to the statistics.py file available.</p>
<p>I'm obviously missing something (probably obvious!) but being a newbie at this i can't work out what it is. Any pointers?</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem, and instead of:</p>
<p>import statistics</p>
<p>I wrote:</p>
<p>from Lib import statistics</p>
<p>Good Luck!</p>
</div>
<span class="comment-copy">Are you sure that you're running your script with Python 3.4?  What happens if you add <code>import sys; print(sys.version_info)</code> to your script?  There <i>should</i> be a 'statistics.py' file in your Lib directory.</span>
<span class="comment-copy">There should be a version in the startup banner of an interactive session already, but I agree, either that's not the version being used or its environment/installation is messed up. BTW: I think there used to be a "lib" and "libs" folder, one for binary modules, one for Python modules, but that might have been in 2.x only.</span>
<span class="comment-copy">Here's what I get: sys.version_info(major=3, minor=4, micro=1, releaselevel='final', serial=0)</span>
<span class="comment-copy">This answer is not good, since it doesn't explain <i>why</i>  to do so. Please add an Explanation!</span>
<span class="comment-copy">You probably have a name collision. If you created another python file called statistics.py, this file will called instead of the one being in the Lib folder. When you write from Lib, you force to take the file statistics.py in the Lib folder</span>
