<div class="post-text" itemprop="text">
<p>I want to print 'This\' in <strong>Python IDLE</strong> output. I try with the below strings but I couldn't do it :</p>
<p>1:</p>
<pre><code>&gt;&gt;&gt; "This\"
SyntaxError: EOL while scanning string literal
</code></pre>
<p>2:</p>
<pre><code>&gt;&gt;&gt; "This\ "
'This\\ '
</code></pre>
<p><strong>Q1: Why?!</strong></p>
<p><strong>Q2: How I can print 'This\' in output?</strong></p>
<hr/>
<p>I put different letters right after <code>\</code> in the string and the out put make me more confused :</p>
<p>For letters such as <strong>r</strong>,<strong>t</strong> and <strong>n</strong> :</p>
<p>3:</p>
<pre><code>&gt;&gt;&gt; "This\n"
'This\n'
&gt;&gt;&gt; "This\r"
'This\r'
&gt;&gt;&gt; "This\t"
'This\t'
</code></pre>
<p>But for letters such as <strong>w</strong>,<strong>q</strong> and <strong>y</strong> :</p>
<p>4:</p>
<pre><code>&gt;&gt;&gt; "ali\w"
'ali\\w'
&gt;&gt;&gt; "ali\q"
'ali\\q'
&gt;&gt;&gt; "ali\y"
'ali\\y'
</code></pre>
<p>As you see above, we have two <code>\</code> in the output for second group, while it is one <code>\</code> character for first group!</p>
<p><strong>Q3: What is the difference between these letters?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Quoting the <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow">Python tutorial on strings</a>:</p>
<blockquote>
<p>Besides numbers, Python can also manipulate strings, which can be expressed in several ways. They can be enclosed in single quotes (<code>'...'</code>) or double quotes (<code>"..."</code>) with the same result. <strong><code>\</code> can be used to escape quotes.</strong></p>
</blockquote>
<p>Emphasis mine.</p>
<p>The backslash, in regular string literals, is the <em>escape symbol</em>, it signals a special character sequence. See the <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">String literal reference documentation</a> for a full overview, but sequences like <code>\n</code> and <code>\t</code> are used to specify special characters that would otherwise be hard to include in a string value, such as the <a href="http://en.wikipedia.org/wiki/Newline" rel="nofollow">newline character</a> or tabs. As such, the backslash before a quote (<code>\"</code>) <em>escapes the quote</em>, making it possible to include it in a string literal. </p>
<p>You'll need to double the backslash to make it a regular backslash:</p>
<pre><code>&gt;&gt;&gt; print "This\\"
This\
</code></pre>
</div>
<span class="comment-copy">What do you think <code>\</code> in a string <b>means</b>? A big hint is given in the output of <code>print "This\ "</code>; see that the backslash was doubled?</span>
<span class="comment-copy">@MartijnPieters I don't know! What it means?!</span>
<span class="comment-copy">If you took a quick look at the <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">reference documentation for string literals</a>, or the <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">tutorial on strings</a> perhaps the difference became easier to see?</span>
<span class="comment-copy">@MartijnPieters Can I have 'This\' in output or not?</span>
<span class="comment-copy">OK, Thanks. So I'll delete the question :)</span>
<span class="comment-copy">Using <code>print "This\\"</code> solved my problem, Thanks. But I can't have <code>This\` in the output using </code>"This\\"` yet! (without <code>print</code> command)!</span>
<span class="comment-copy">Oops! I can't make comment it also! :D please try to comment `This\`</span>
<span class="comment-copy">@TheGoodUser: the string <i>representation</i> (echoed in the interactive shell or when part of a list or other container or when you explicitly use the <code>repr()</code> function) will try to give you a value you can paste right back into Python code. As such, backslashes in the original string are doubled to make them valid in a string literal again.</span>
