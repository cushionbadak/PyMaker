<div class="post-text" itemprop="text">
<pre><code>for n in range(2,10):
    for x in range(2,n):
        if n%x==0:
            print(n, 'equals to', x, '*', n//x)
            break
        else:
            print(n, 'is a prime number')
</code></pre>
<p>Below is the output I received.</p>
<pre><code>3 is a prime number
4 equals to 2 * 2
5 is a prime number
5 is a prime number
5 is a prime number
6 equals to 2 * 3
7 is a prime number
7 is a prime number
7 is a prime number
7 is a prime number
7 is a prime number
8 equals to 2 * 4
9 is a prime number
9 equals to 3 * 3
</code></pre>
<p>But, it is repeating the values. Moreover 9 is not a prime number.
Please help me on correcting the syntax.</p>
<p>Below is the link:
<a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow">https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As you have it, your program checks if <code>n</code> is divisible by a factor. If it is, great, you correctly print that it is composite. If it's not, you immediately print it's a prime number. The problem is you don't know that until you've checked the rest of the factors. Just because 9 isn't divisible by 2 doesn't mean it's prime. You have to check 3 as well.</p>
<p>That means changing up your logic a bit. You need to check all of the possible factors before declaring <code>n</code> is prime. One way to do that is with an additional boolean variable.</p>
<pre><code>for n in range(2,10):
    is_prime = True

    for x in range(2,n):
        if n%x==0:
            print(n, 'equals to', x, '*', n//x)
            is_prime = False
            break

    if is_prime:
        print(n, 'is a prime number')
</code></pre>
<p>Notice that the "is a prime number" printout isn't inside the inner loop any more, it's outside of it.</p>
<p>Another way to do this is to use a cool Python trick and add an <code>else</code> clause to the inner loop. The <code>else</code> clause only happens if the loop exits without hitting a <code>break</code> statement.    </p>
<pre><code>for n in range(2,10):
    for x in range(2,n):
        if n%x==0:
            print(n, 'equals to', x, '*', n//x)
            break
    else:
        print(n, 'is a prime number')
</code></pre>
<p>Note that this idea of tacking an <code>else</code> clause onto a loop is a Python-ism. It doesn't exist in other languages like C or Java. So while neat, it's good to understand the boolean variable-based solution as well. That technique will work in any language.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the link you have provided,it has a statement just under the sample code which says</p>
<blockquote>
<p>Yes, this is the correct code. Look closely: the else clause belongs to the for loop, not the if statement.</p>
</blockquote>
<p>So you should intent the <code>else</code> clause targeting the inner <code>for</code> not <code>if</code>.</p>
</div>
<span class="comment-copy">There is another question like this on SO, it might help you: <a href="http://stackoverflow.com/questions/18833759/python-prime-number-checker" title="python prime number checker">stackoverflow.com/questions/18833759/â€¦</a></span>
<span class="comment-copy">Its the indentation issue...Thanks for sorting it out.</span>
<span class="comment-copy">Thanks for the help.</span>
