<div class="post-text" itemprop="text">
<p>How can I round up a complex number (e.g. <code>1.9999999999999998-2j</code>) as <code>2-2j</code>?</p>
<p>When I tried using </p>
<pre><code>print(round(x,2))
</code></pre>
<p>it showed</p>
<pre><code>Traceback (most recent call last):
  File "C:\Python34\FFT.py", line 22, in &lt;module&gt;
    print(round(x,2))
TypeError: type complex doesn't define __round__ method
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Round real part and imaginary part separately and combine them:</p>
<pre><code>&gt;&gt;&gt; num = 1.9999999999999998-2j
&gt;&gt;&gt; round(num.real, 2) + round(num.imag, 2) * 1j
(2-2j)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If all you want to do is <em>represent</em> the value rounded as shown, rather than modify the value itself, the following works:</p>
<pre><code>&gt;&gt;&gt; x=1.9999999999999998-2j
&gt;&gt;&gt; print("{:g}".format(x))
2-2j
</code></pre>
<p>See: <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow">Format Specification Mini-Language</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Id say the best way to do it is as such</p>
<pre><code>x = (1.542334+32.5322j)
x = complex(round(x.real),round(x.imag))
</code></pre>
<p>if you don't want to repeat that every time you want to do it, you could put it in a function.  </p>
<pre><code>def round_complex(x):
    return complex(round(x.real),round(x.imag))
</code></pre>
<p>Additional optional arguments can then be added to this, so if you only want to round one part for example, or if you only want to round to a certain number of decimal places on either the real or complex part</p>
<pre><code>def round_complex(x, PlacesReal = 0, PlacesImag = 0, RoundImag = True, RoundReal = True):
     if RoundImag and not RoundReal:
         return complex(x.real,round(x.imag,PlacesImag))

     elif RoundReal and not RoundImag:
         return complex(round(x.real,PlacesReal),x.imag)

     else: #it would be a waste of space to make it do nothing if you set both to false, so it instead does what it would if both were true
         return complex(round(x.real,PlacesReal),round(x.imag,PlacesImag))
</code></pre>
<p>as the variables are auto set to true or 0, you don't need to input them unless you specifically want too. But they are handy to have</p>
</div>
<span class="comment-copy">Do you want to actually change the value, or just print a rounded representation of it?</span>
<span class="comment-copy">i want to change the value</span>
