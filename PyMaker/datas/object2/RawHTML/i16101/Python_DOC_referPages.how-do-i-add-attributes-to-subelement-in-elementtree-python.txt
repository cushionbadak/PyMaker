<div class="post-text" itemprop="text">
<p>I successfully added a new node to an Element using PY's ElementTree.
I now try to give it attributes, which fails, despite I'm following the tutorial.</p>
<p>my example xml:</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xml&gt;
&lt;level01&gt;
&lt;level02&gt;
&lt;level03&gt;
&lt;level04&gt;
&lt;node q="3,4,5,7,8" p="zen"/&gt;
&lt;node q="a,s,e,o,l" p="zen"/&gt;
&lt;/level04&gt;
&lt;/level03&gt;
# &gt;&gt; here will be the new node, called &lt;subi/&gt; &lt;&lt;   
&lt;level03&gt;
&lt;level04&gt;
&lt;node q="x,y" p="zen"/&gt;
&lt;node q="xxx,yyy" p="zen"/&gt;
&lt;/level04&gt;
&lt;/level03&gt;
&lt;/level02&gt;
&lt;/level01&gt;
&lt;/xml&gt;
</code></pre>
<p>The node is created like this:</p>
<pre><code>subi = ETL.SubElement(root[0][0][1][0][0], 'subi')
</code></pre>
<p>which works, it can then be accessed via root001000 and it's tag can be read.</p>
<p>but I fail trying to add attributes. </p>
<p>I tried using the syntax I found in another thread here: (with my names ofc)</p>
<pre><code>&gt;&gt;&gt; myattributes = {"size": "small", "gender": "unknown"}
&gt;&gt;&gt; child = ET.SubElement(parent, "child", attrib=myattributes, age="10" )
</code></pre>
<p>Also I tried it directly, like</p>
<pre><code>subi = ETL.SubElement(root[0][0][1][0][0], 'subi', attrib={"size": "small", "gender": "unknown"})
</code></pre>
<p>Results are always</p>
<pre><code>root[0][0][1][0][0][0].tag
'subi'
</code></pre>
<p>but</p>
<pre><code>root[0][0][1][0][0][0].attrib
{}
</code></pre>
<p>I also found how lxml does it, but this does not work with elementtree</p>
<pre><code>#Any keyword arguments of the form name=value that you supply to the constructor are added #to the element's attributes. For example, this code:

newReed = etree.Element('reed', pitch='440', id='a4')

#will produce an element that looks like this:

&lt;reed pitch='440' id='a4'/&gt;
</code></pre>
<p>What am I doing wrong? How can I do it right? Is there a way to make elementtree do it? Or do I have to use lxml? (which would be dispreferred) ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Isn't this you are trying to do? Assuming that <code>subi</code> is your element and you can access it, you can further use <code>ElementTree</code> method <code>set</code>:</p>
<pre><code>subi.set(attr, value)
</code></pre>
<p>Look here about <code>set</code> method of <code>ElementTree</code> : <a href="https://docs.python.org/2/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set" rel="noreferrer">https://docs.python.org/2/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can specify attributes for an <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" rel="nofollow noreferrer"><code>Element</code></a> or <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.SubElement" rel="nofollow noreferrer"><code>SubElement</code></a> during creation with keyword arguments.</p>
<pre><code>import xml.etree.ElementTree as ET

root = ET.Element('Summary')
ET.SubElement(root, 'TextSummary', Status='Completed')
# &lt;Summary&gt;&lt;TextSummary Status="Completed" /&gt;&lt;/Summary&gt;
</code></pre>
<p>Alternatively, you can use <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set" rel="nofollow noreferrer"><code>.set</code></a> to add an attribute to an element after creation.</p>
<pre><code>import xml.etree.ElementTree as ET

root = ET.Element('Summary')
sub = ET.SubElement(root, 'TextSummary')
sub.set('Status', 'Completed')
# &lt;Summary&gt;&lt;TextSummary Status="Completed" /&gt;&lt;/Summary&gt;
</code></pre>
<p>Generated XML:</p>
<pre class="lang-xml prettyprint-override"><code>&lt;Summary&gt;
    &lt;TextSummary Status="Completed"/&gt;
&lt;/Summary&gt;
</code></pre>
<hr/>
<p><strong>Explanation:</strong></p>
<p>The constructors for <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" rel="nofollow noreferrer"><code>Element</code></a> and <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.SubElement" rel="nofollow noreferrer"><code>SubElement</code></a> include <code>**extra</code>, which accepts attributes as keyword arguments.</p>
<pre><code>xml.etree.ElementTree.Element(tag, attrib={}, **extra)
xml.etree.ElementTree.SubElement(parent, tag, attrib={}, **extra)
</code></pre>
<p>This allows you to add an arbitrary number of attributes.</p>
<pre><code>root = ET.Element('Summary', Date='2018/07/02', Timestamp='11:44am')
# &lt;Summary Date = "2018/07/02" Timestamp = "11:44am"&gt;
</code></pre>
<p>You can also use use <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set" rel="nofollow noreferrer"><code>.set</code></a> to add attributes to a pre-existing element. However, this can only add one element at a time. (<a href="https://stackoverflow.com/a/25807637/3357935">Suggested by German Petrov</a>).</p>
<pre><code>root = ET.Element('Summary')
root.set('Date', '2018/07/02')
root.set('Timestamp', '11:44am')
# &lt;Summary Date = "2018/07/02" Timestamp = "11:44am"&gt;
</code></pre>
<hr/>
<p><strong>Full Example:</strong></p>
<pre><code>import xml.etree.ElementTree as ET

root = ET.Element('school', name='Willow Creek High')
ET.SubElement(root, 'student', name='Jane Doe', grade='9')
print(ET.tostring(root).decode())
# &lt;school name="Willow Creek High"&gt;&lt;student grade="9" name="Jane Doe" /&gt;&lt;/school&gt;
</code></pre>
</div>
<span class="comment-copy">The <code>SubElement(parent,tag,attrib={name:key})</code> syntax works fine for me (Python 2.7.5). Can you provide an example against a short two level XML doc, the exact insertion code and the resulting XML output?</span>
<span class="comment-copy">as posted in the comment below, I can now obtain results by doint subi.attrib. Somehow the root[index].attrib did fail...</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/18796280/how-do-i-set-attributes-for-an-xml-element-with-python">How do I set attributes for an XML element with Python?</a></span>
<span class="comment-copy">Setting attrib values can be done with <code>SubElement</code>. The OP should not have to set them after creating the new element (although that is also possible, for sure).</span>
<span class="comment-copy">I think I want it done in SubElement, but set looks OK too - what would be the exact syntax in my case? If I just do subi.set(xy, "3") it will state that name 'xy' is not defined</span>
<span class="comment-copy">you should <code>subi.set("xy", "3")</code> it should make <code>subi</code> tag as <code>&lt;subi xy="3"&gt;&lt;/subi&gt;</code></span>
<span class="comment-copy">ok, that works. Curiously enough, now also the attribs I tried to set before are displayed. Is there a reason why root000101.attrib won't work and subi.attrib does? (assuming root indexes are spelt properly)</span>
<span class="comment-copy">intersting, for me it worked OK: after setting attribute and value, <code>print tree[0][0][1][0][0][0].tag</code> gives <code>subi</code> and <code>print tree[0][0][1][0][0][0].attrib</code> gives <code>{'xy': '3'}</code></span>
