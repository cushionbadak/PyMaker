<div class="post-text" itemprop="text">
<p>What is the pythonic way to enforce a function to take a specific set of values for a given parameter? For instance there is a function like:</p>
<pre><code>def results(status,data):
</code></pre>
<p>I want to restrict parameter 'status' to a set of values like 0, 1 or 99.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to check the value inside the function:</p>
<pre><code>def results(status, data):
    valid = {0, 1, 99}
    if status not in valid:
        raise ValueError("results: status must be one of %r." % valid)
</code></pre>
<p>Here, <code>valid</code> is a set, because the only thing we care about is whether <code>status</code> is a member of the collection (we aren't interested in order, for example). To avoid recreating the set each time you use the function, you'd probably define it as a "constant"<sup>1</sup> global:</p>
<pre><code>VALID_STATUS = {0, 1, 99}

def results(status, data):
    if status not in VALID_STATUS:
        raise ValueError("results: status must be one of %r." % VALID_STATUS)
</code></pre>
<p>Example usage:</p>
<pre><code>&gt;&gt;&gt; results(7, [...])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 3, in results
ValueError: results: status must be one of {0, 1, 99}.
</code></pre>
<p>Always try to raise <a href="https://docs.python.org/3/library/exceptions.html" rel="noreferrer">the most appropriate exception</a> you can - <a href="https://docs.python.org/3/library/exceptions.html#ValueError" rel="noreferrer"><code>ValueError</code></a> tells the caller of the function what's going on better than <a href="https://docs.python.org/3/library/exceptions.html#Exception" rel="noreferrer"><code>Exception</code></a> does, for example.</p>
<hr/>
<p><sup>1</sup> It's not <em>really</em> constant, but by convention, <code>ALL_UPPERCASE</code> variable names in Python are considered to be intended as constants.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can check within the function itself if <code>status</code> is a valid value and if it is not then raise an exception.</p>
<pre><code>def results(status,data):
    list_valid_status = [0, 1, 99]
    # list_valid_status = (0, 1, 99) # could be a tuple so it doesn't get modified by accident
    if status not in list_valid_status:
        raise ValueError("Wrong status")
</code></pre>
</div>
<span class="comment-copy">You should raise <a href="https://docs.python.org/3/library/exceptions.html#ValueError" rel="nofollow noreferrer"><code>ValueError</code></a> rather than Exception in this case.</span>
<span class="comment-copy">Also, a set is <code>{0, 1, 99}</code> - <code>(0, 1, 99)</code> is a tuple (and the reason for using a set is that the <code>in</code> membership test is faster for a set, not that it doesn't get modified).</span>
<span class="comment-copy">oops I meant tuple.</span>
