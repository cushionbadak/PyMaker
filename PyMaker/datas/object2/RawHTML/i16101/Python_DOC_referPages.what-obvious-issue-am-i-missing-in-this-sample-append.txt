<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/240178/list-of-lists-changes-reflected-across-sublists-unexpectedly">List of lists changes reflected across sublists unexpectedly</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>what am i missing here? it's storing every variable as the same card.  generate the 'cards' in nested loops, i use a commented out print statement to verify the values are legit one step above appending them to a list, yet when I look at the list later, every 'card' is the same card -the last card made-</p>
<pre><code>def PrintCard(i):
    print i.suit,i.value

class CardClass():
    value = 0
    face = ""
    suit = 0
    slot = 0
    onoff = 0

card = []
decks = 1
x = 1
suits = [0,1,2,3]
values = [2,3,4,5,6,7,8,9,10,10,10,10,11]
n = CardClass()
for d in range(decks):    
    for s in suits:
        n.suit = s
        for v in values:
            n.value = v
            "print s,v, n.suit,n.value"
            card.append(n)


for i in range(len(card)):
    PrintCard(card[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You created only one card object, and you append that same object to the list many times.  Every time you do <code>n.value = v</code>, you are modifying the value of that same object, overwriting the earlier values.</p>
<p>To get different card objects, you need to make a separate instance for every suit/value combo, by moving <code>n = CardClass()</code> inside the inner loop, and set the suit and value only on that one object:</p>
<pre><code>for d in range(decks):    
    for s in suits:
        for v in values:
            n = CardClass()
            n.suit = s
            n.value = v
            "print s,v, n.suit,n.value"
            card.append(n)
</code></pre>
</div>
<span class="comment-copy">There are dozens of questions about this problem here. The one I linked to isn't the closest match, but I think it's the "canonical" version of the question, and if you look at the Linked and Related questions on that one, you'll find some that are a more exact match.</span>
<span class="comment-copy">Also see <a href="https://docs.python.org/3/faq/programming.html#how-do-i-create-a-multidimensional-list" rel="nofollow noreferrer">How do I create a multidimensional list</a> in the official Python FAQ.</span>
