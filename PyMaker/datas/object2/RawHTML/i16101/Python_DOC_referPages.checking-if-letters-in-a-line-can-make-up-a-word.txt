<div class="post-text" itemprop="text">
<p>I want to check if each line in an example test file can make up a specific word 'aardvark'.
e.g. given this example text:</p>
<pre><code>No aardv*rks here!  
Only armadillos and anteaters.  
Animals are run down: very awful road kill.  
I prefer a quick guacamole made from avocados.
</code></pre>
<p>It should print out:</p>
<pre><code>Aardvark on line 3
Aardvark on line 4
</code></pre>
<p>Because on line 3 and 4 the letters in that line can make the word 'aardvark'</p>
<p>This is what i have so far, i numbered the lines from 1 to how many lines there are in the example text. I don't know where to go on from there.</p>
<pre><code>lines_counter = 0
with open ('input.txt') as f:
    for line in f:
        if line != '\n':
            lines_counter += 1
for c in range(1,lines_counter+1):
  print( c )
</code></pre>
<p>I also wrote this, i don't think this will work though. But i tried :(</p>
<pre><code>for c in f:
  a = c.count('a')
  r = c.count('r')
  k = c.count('k')
  d = c.count('d')
  v = c.count('v')
  h = a + r + k + d + v
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> like this:</p>
<pre><code>from collections import Counter

with open ('input.txt') as f:
    for idx, line in enumerate(f):
        if line != '\n':
            counter = Counter(line.lower())
            counter.subtract('aardvark')
            if min(counter.values()) &gt;= 0:
                print('Aardvark on line %d' % (idx + 1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's do it with NumPy!  All we need is a simple transformation function:</p>
<pre><code>import numpy as np
def charfreq(s):
    """Return array with the frequency of each ASCII character from 0 to 127."""
    a = np.array(s, 'c').view(np.uint8)
    return np.bincount(a, minlength=128)
</code></pre>
<p>For the string "aardvark" this gives us:</p>
<pre><code>array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2,
       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0])
</code></pre>
<p>Note the <code>3</code> in position 97, which is <code>ord('a')</code>.  So we need three "a"s etc.</p>
<p>Now simply pass your two strings, the needle we want to find and the haystack in which to find it:</p>
<pre><code>needle = charfreq('aardvark')
haystack = charfreq('Animals are run down: very awful road kill.')
</code></pre>
<p>Now we have two arrays, all that's left is to compare them:</p>
<pre><code>np.all(needle &lt;= haystack)
</code></pre>
<p>That returns true...but beware case sensitivity; you may want to lower-case the strings before using them if you want case insensitivity.</p>
</div>
<div class="post-text" itemprop="text">
<p>A bit late but:</p>
<pre><code>with open(file_name, 'r') as f:
    lines = map(set, f.readlines())

for i in range(len(lines)):
    line = lines[i]
    if set('aardvark').issubset(line):
        print('Aardvark on line '+str(i+1))
</code></pre>
<p>This uses sets, which are unordered lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done much easier, since a <code>Counter</code> returns <code>0</code> if you ask it for a key that isn't in it:</p>
<pre><code>from collections import Counter
a = Counter("aardvark")
for pos, string in enumerate(strings):
    c = Counter(string)
    if all(c[letter] &gt;= a[letter] for letter in a):
        print("Aardvark on line", pos+1)
</code></pre>
<p>Output:</p>
<pre><code>Aardvark on line 3
Aardvark on line 4
</code></pre>
</div>
<span class="comment-copy">Is this homework? Write down how you would do this by hand, if you had to. Actually write it down in your question, and then turn that into code. It will help.</span>
<span class="comment-copy">Can you just help me with this code please? And no it isn't homework, just something i want to do :)</span>
<span class="comment-copy"><code>if all(a.count(x) &lt;= line.lower().count(x) for x in a ):</code> would work also where <code>a="aardvark"</code></span>
<span class="comment-copy">More simple with if min(counter.values()) &gt;= 0:</span>
<span class="comment-copy">@Cld yes true, but I am rewriting it to keep it more simple ;)</span>
<span class="comment-copy">Sorry but it's even more complex...</span>
<span class="comment-copy">@Cld but more efficient.. Ok let's rollback</span>
