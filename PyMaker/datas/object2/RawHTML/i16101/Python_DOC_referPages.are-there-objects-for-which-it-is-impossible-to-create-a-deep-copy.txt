<div class="post-text" itemprop="text">
<p>I get an error message when I execute the following line:</p>
<pre><code>img = copy.deepcopy(img_file_obj)
</code></pre>
<p>The <code>img_file_obj</code> has the following type:</p>
<pre><code>&lt;class 'werkzeug.datastructures.FileStorage'&gt;
</code></pre>
<p>Is it not allowed to create a deep copy of a file storage object?</p>
<p><strong>ADDED</strong></p>
<p>I probably need to explain why I am trying to create a copy of a file-storage object. In the end of my code I execute:</p>
<pre><code>img_obj.save(fname)
</code></pre>
<p>But before that I check how big the file is. I do it in the following way:</p>
<pre><code>img_obj.seek(0, os.SEEK_END)
size = img.tell()
</code></pre>
<p>The problem is that the checking of the size "destroys" the file. If I check the file size and then save it, I get an empty file on the disk. It is why I wanted to create a copy of the file-object, check the size of the copy and, if the size is acceptable, save the original file-object on the disk.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Are there objects for which it is impossible to create a deep copy?</p>
</blockquote>
<p>Yes.</p>
<p>Any object whose type overrides the standard <code>__deepcopy__</code> with (or registers with <a href="https://docs.python.org/3/library/copyreg.html#module-copyreg" rel="nofollow"><code>copyreg</code></a>) a function that raises an exception can't be deep-copied.</p>
<p>Any object whose type uses the standard <code>__deepcopy__</code> but can't be (shallow-)copied cannot be deep-copied.</p>
<p>Any object with sub-elements (whether selected by the standard <code>__deepcopy__</code> or its own implementation) that cannot be deep-copied cannot be deep-copied.</p>
<p>And there are many kinds of objects that can't be even shallow-copied. The documentation for the <a href="https://docs.python.org/3/library/copy.html" rel="nofollow"><code>copy</code></a> module gives some examples:</p>
<blockquote>
<p>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types.</p>
</blockquote>
<p>Not that it would be <em>impossible</em> to copy a file, but what it would mean is pretty ambiguous (should it dup the file handle, reopen the file, or share the handle? should it start with the same file pointer? does its buffer or stateful encoder have to be in the same state?), so it would be more misleading than helpful to make them copyable.</p>
<p>Of course the Werkzeug framework could have chosen to make its <code>FileStorage</code> objects copyable even though standard Python file objects aren't, but they presumably had the same reasons not to.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's certainly possible to create a type that can't be deepcopied.  <a href="https://docs.python.org/2/library/copy.html" rel="nofollow">The documentation</a> says:</p>
<blockquote>
<p>In order for a class to define its own copy implementation, it can define special methods <code>__copy__()</code> and <code>__deepcopy__()</code>.</p>
</blockquote>
<p>So a class can make itself undeepcopyable by raising an exception there.</p>
<p>Conceptually, something like a file is just the type of thing that is unlikely to be deepcopyable.  Making a deep copy of something like a file would presumably involve copying the actual file on disk.  If the file is large, that could be expensive; it might not be possible if the user doesn't have the right permissions, or if the disk is full, etc..  There are a whole host of possible problems that could arise when trying to copy some resource that isn't confined to the program itself.  Because of that, objects that reference external resources may not be deep copyable; if you really want to deepcopy them, you'd have to manually copy the external resource and create a new object.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <code>copy</code> module's <a href="https://docs.python.org/3/library/copy.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types.</p>
</blockquote>
<p>Since <code>werkzeug.datastructures.FileStorage</code> is <a href="http://werkzeug.pocoo.org/docs/0.14/datastructures/#others" rel="nofollow noreferrer">"a thin wrapper over incoming files"</a>, I'd say it counts as a "similar type" to a <code>file</code> per the text quoted above.</p>
</div>
<span class="comment-copy">Is this a duplicate of <a href="http://stackoverflow.com/questions/18364284/python-deepcopy-does-not-work-on-user-defined-classes">Python: deepcopy does not work on user-defined classes?</a>?</span>
<span class="comment-copy">It's not a duplicate, because there are different reasons for <code>FileStorage</code> not being deepcopy-able and for that question's deepcopy working but not doing as the OP expected.</span>
