<div class="post-text" itemprop="text">
<p>I have a class that wraps around python <code>deque</code> from <code>collections</code>. When I go and create a deque <code>x=deque()</code>, and I want to reference the first variable....</p>
<pre><code>In[78]: x[0]
Out[78]: 0
</code></pre>
<p>My question is how can use the <code>[]</code> for referencing in the following example wrapper</p>
<pre><code>class deque_wrapper:
    def __init__(self):
        self.data_structure = deque()

    def newCustomAddon(x):
        return len(self.data_structure)

    def __repr__(self):
        return repr(self.data_structure)
</code></pre>
<p>Ie, continuing from above example:</p>
<pre><code>In[75]: x[0]
Out[76]: TypeError: 'deque_wrapper' object does not support indexing
</code></pre>
<p>I want to customize my own referencing, is that possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to implement the <a href="https://docs.python.org/2/reference/datamodel.html#object.__getitem__" rel="nofollow"><code>__getitem__</code> method</a>:</p>
<pre><code>class DequeWrapper:
    def __init__(self):
        self.data_structure = deque()

    def newCustomAddon(x):
        return len(self.data_structure)

    def __repr__(self):
        return repr(self.data_structure)

    def __getitem__(self, index):
        # etc
</code></pre>
<p>Whenever you do <code>my_obj[x]</code>, Python will actually call <code>my_obj.__getitem__(x)</code>.</p>
<p>You may also want to consider implementing the <a href="https://docs.python.org/2/reference/datamodel.html#object.__setitem__" rel="nofollow"><code>__setitem__</code> method</a>, if applicable. (When you write <code>my_obj[x] = y</code>, Python will actually run <code>my_obj.__setitem__(x, y)</code>.</p>
<p>The documentation on <a href="https://docs.python.org/2/reference/datamodel.html" rel="nofollow">Python data models</a> will contain more information on which methods you need to implement in order to make custom data structures in Python.</p>
</div>
<span class="comment-copy">Instead of asking <a href="http://stackoverflow.com/questions/25716437/custom-python-data-structure">a separate question for each method needed to emulate a <code>deque</code></a>, you should skim the <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">Data model</a> section of the docs (that you've now been given links to in both questions). Almost everything you're likely to ask for is going to be there.</span>
<span class="comment-copy">Also see <a href="https://docs.python.org/3/library/collections.abc.html" rel="nofollow noreferrer"><code>collections.abc.MutableSequence</code></a>. If you inherit from that, and implement the give methods listed in the table, it'll automatically give you all the other methods that <code>deque</code>, <code>list</code>, and similar types have. (If you're in Python 2.x, it's called <code>collections.MutableSequence</code>, no <code>abc</code>â€¦ but if you're in 2.x, you shouldn't be declaring a class with no bases like this, as someone else explained on your previous question.)</span>
<span class="comment-copy">If you're going to implement <code>__getitem__</code> and <code>__setitem__</code>, unless you've got an explicitly-fixed-size collection, you probably also want <code>__delitem__</code> (and probably <code>insert</code> and <code>append</code> and so on, too).</span>
