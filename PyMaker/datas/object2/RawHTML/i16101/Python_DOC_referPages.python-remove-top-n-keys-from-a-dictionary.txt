<div class="post-text" itemprop="text">
<p>I have a dictionary dict. For each key in dict, there is a list, that has two items in it. One is another dictionary, the other is an integer.</p>
<pre><code>dict = {
    'hello' : [
      {
         'blah' : 1,
         'dodo' : 2
      },
      3
    ],
    'world' : [
      {
         'foo' : 7,
         'bar' : 1
      },
      8
    ]
 }
</code></pre>
<p>I want to sort the dictionary dict on the second item in the list, the integer. And then remove the first 'n' keys from the dictionary. Is there any way to do it? The sorted function works only on lists.</p>
<p>Here is the function I'm trying to do this in.</p>
<pre><code>def create_inverted_index(inverted_index, corpus_tokens, corpus_files):
for file_tokens in corpus_tokens:
    file_id = corpus_files[file_tokens[0]]
    for token in file_tokens[1]:
        if token in inverted_index.keys():
            inverted_index[token][1] += 1
            if file_id in inverted_index[token][0].keys():
                inverted_index[token][0][file_id] += 1
            else:
                inverted_index[token][0][file_id] = 1
        else:
            inverted_index[token] = [{file_id : 1}, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it by doing this:</p>
<pre><code>d = {1: [1, 2], 3: [2,4], 4:[3,3], 2:[4,1], 0:[5,0]} # dict to remove items from

sorted_list=sorted(d.items(), key=lambda x: x[1][1])
sorted_keys = [key[1] for key in sorted_list]

n=2 # number of items to remove
for key in sorted_keys[0:n]:
    d = dict([(k,v) for k,v in d.items() if v != key ])
</code></pre>
<p>This code copies the dict to a list ordered by the second item in dict values. Then it creates a list with only the sorted keys and iterate over it removing them as values from the dictionary.</p>
<p>For my value of d and <code>n=3</code>, output is:</p>
<pre><code>{3: [2, 4], 4: [3, 3]}
</code></pre>
<p>For n=2:</p>
<pre><code>{1: [1, 2], 3: [2, 4], 4: [3, 3]}
</code></pre>
<p>Ps: Might not be most efficient way of doing this, but does the job</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, dictionaries don't have an order. You cannot sort a <code>dict</code>. However, you can take a look at <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>collections.OrderedDict</code></a>. </p>
</div>
<span class="comment-copy">Is that your actual dict? I get <code>TypeError: unhashable type: 'list'</code> when I try to run it.</span>
<span class="comment-copy">@Kevin seems like the two keys for the main dict are missing.</span>
<span class="comment-copy">Can you post working code please?</span>
<span class="comment-copy">What do you mean <i>"sort the dictionary"</i>? Dictionaries are <i>unordered</i>.</span>
<span class="comment-copy"><code>dict</code>s are not sortable. and you should never name something that shadows a built-in (i.e. don't name it <code>dict</code>)</span>
