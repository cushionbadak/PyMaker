<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19871253/re-match-returns-always-none">Re.match() returns always none</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>In the following example shows weird problem: Python pattern does not work.</p>
<pre><code>import re
data = r'blah blah @Component blah blah'
m = re.match(r'\@Component', data)
print m
</code></pre>
<p>It would print out:</p>
<pre><code>None
</code></pre>
<p>What did I miss here?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/2/library/re.html#re.search" rel="nofollow"><code>re.search</code></a> instead, and <code>@</code> has no special meaning so you do not need to escape it.</p>
<pre><code>&gt;&gt;&gt; re.search(r'@Component', data).group()
'@Component'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow"><code>match</code></a> tries to match the pattern at the beginning of the string. Use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow"><code>search</code></a> instead. Also, <code>@</code> doesn't have any special meaning in Python's regex, so you don't need to escape it.</p>
<p>Working code:</p>
<pre><code>&gt;&gt;&gt; re.search('(@Component)', data).groups()
('@Component',)
</code></pre>
</div>
<span class="comment-copy">Given as the actual problem is in no way specific to <code>@</code>, perhaps the question's title should be changed so that it can better be found by folks to whom it's actually relevant?</span>
