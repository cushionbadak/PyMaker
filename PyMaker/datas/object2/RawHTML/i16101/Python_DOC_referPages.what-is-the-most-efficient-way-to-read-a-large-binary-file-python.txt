<div class="post-text" itemprop="text">
<p>I have a large (21 GByte) file which I want to read into memory and then pass to a subroutine which processes the data transparently to me.  I am on python 2.6.6 on Centos 6.5 so upgrading the operating system or python is not an option.  Currently, I am using</p>
<pre><code>f = open(image_filename, "rb")
image_file_contents=f.read()
f.close()
transparent_subroutine ( image_file_contents )
</code></pre>
<p>which is slow (~15 minutes).  Before I start reading the file, I know how big the file is, because I call 
    os.stat( image_filename ).st_size </p>
<p>so I could pre-allocate some memory if that made sense.</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>To follow Dietrich's suggestion, I measure this mmap technique is 20% faster than one big read for a 1.7GB input file</p>
<pre><code>from zlib import adler32 as compute_cc

n_chunk = 1024**2
crc = 0
with open( fn ) as f:
  mm = mmap.mmap( f.fileno(), 0, prot = mmap.PROT_READ, flags = mmap.MAP_PRIVATE )
  while True:
    buf = mm.read( n_chunk )
    if not buf: break
    crc = compute_crc( buf, crc )
return crc
</code></pre>
</div>
<span class="comment-copy">Use <code>mmap</code>. <a href="https://docs.python.org/3/library/mmap.html" rel="nofollow noreferrer">docs.python.org/3/library/mmap.html</a></span>
<span class="comment-copy">A larger buffer may help <code>open(image_filename, 'rb', 64*1024*1024)</code></span>
<span class="comment-copy">How do you plan on accessing the data?  Random access?  Read a block, process, repeat?  Or do you actually need the entire file in mapped in memory?</span>
<span class="comment-copy">I don't how the data is accessed.  It is the input to the openstack program glance, which uses it to create a volume. I haven't tried changing the buffer size, that's clever.</span>
