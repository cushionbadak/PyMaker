<div class="post-text" itemprop="text">
<p>Basically, I want my <code>throw</code> raw input variable to be skipped so that it can still be accessed and referred to later on, but doesn't need a user input to continue, so what happens is if you type "throw brick" within 5 seconds, it will bring you to the outcome <code>print "good job!"</code></p>
<pre><code>throw = raw_input()
    throw_command = ["throw brick"]
    import time
    me.sleep(5)
    if throw in throw_command:
        print "good job!"
    if throw not in throw_command:
        print "GAME OVER"
        restart
</code></pre>
<p>I know such thing as a <code>goto</code> or <code>jump</code> don't exist in such a structure-based code. So, if anyone could happen to provide an alternative, your assistance would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure I understand what you're trying to do, but it sounds to me like this:</p>
<ul>
<li>Ask the user for input, but timeout after 5 seconds (your <code>time.sleep(5)</code>)</li>
<li>Repeat over and over again (your <code>restart</code>)</li>
</ul>
<p>If so, it looks like this would be one way to do it: <a href="https://stackoverflow.com/questions/1335507/keyboard-input-with-timeout-in-python">Keyboard input with timeout in Python</a></p>
<p>I modified the select-based answer with the details of your code:</p>
<pre><code>import sys
import select

throw_command = ["throw brick"]

while True:
    print "\nEnter command:"
    i, o, e = select.select( [sys.stdin], [], [], 5 ) # times out after 5 seconds

    if i: # If input was provided
        throw = sys.stdin.readline().strip()
        if throw in throw_command:
            print "good job!"
            break
        else:
            print "GAME OVER"
    else:
      print "You didn't enter anything!"
</code></pre>
<p>The use of <code>select</code> is a little advanced (ideally, raw_input should have an optional <code>timeout</code> argument) but it's easier than using threads which is the only way I could think of doing this with raw_input.</p>
<p>The use of a while loop instead of your <code>restart</code> attempt at a go-to should be self-explanatory.</p>
</div>
<span class="comment-copy">To avoid synchronous input processing in a console application look into a library like <a href="https://docs.python.org/3/library/curses.html" rel="nofollow noreferrer">curses</a> (or equivalent, but hopefully at a higher level).</span>
<span class="comment-copy">Your code isn't syntactically correct, so it doesn't do a good job of illustrating what your question is. Try creating a complete but minimal sample program that that tries to implement what you want to do and edit your post to included it. Describe what it should be doing, and what it's actually doing. Cut and paste any output or error messages in generates and include that in your question.</span>
