<div class="post-text" itemprop="text">
<p>I'm a beginner with python (2.7).
So here is my file :</p>
<pre><code>data, 1234, data
data, 6868, data
data, 3545, data
data, 6868, data
data, 7777, data
data, 3545, data
</code></pre>
<p>I want to check duplicate (only in column 2) and increment +1 one of the duplicate, like that :</p>
<pre><code>data, 1234, data
data, 6868, data
data, 3545, data
data, 6869, data
data, 7777, data
data, 3546, data
</code></pre>
<p>I did something like this but it's write only lines where duplicates are :</p>
<pre><code>entries = set()
for row in reader:
    key = row[2] 
    if key in entries:
        aaa = row[2]
        bbb = int(aaa) + 1 
        ccc = str(bbb)
        entries.add(ccc)
    else:
        entries.add(key)
    writer.writerow(row)
</code></pre>
<p>I dont see how do this. </p>
<p>But I asking myself about an other question : if the incremented number is now a duplicate, how I can check that ? It will not create an infinite loop ?</p>
</div>
<div class="post-text" itemprop="text">
<p>As you iterate through your file, store values of column 2 in a <code>set</code>, and when you encounter a repeat value, increment by 1 using <code>while</code> until the value becomes unique. Store the new value, and write the entire line to file using a <code>csv.writer</code>:</p>
<pre><code>import csv

data = set()
with open ('task1.txt', 'rb') as file_in, open ('output.txt', 'wb') as fileout:
    reader = csv.reader(file_in)
    writer = csv.writer(fileout)
    for line in reader:
        idx = int(line[1])
        while idx in data:
            idx += 1
        data.add(idx)
        line[1] = str(idx)

        writer.writerow(line)
</code></pre>
<p>Note: in Python2.7, we open the filehandles <code>buffer</code> mode (i.e. <code>rb</code> instead of <code>r</code>, but this is unnecessary in Python3.</p>
</div>
<div class="post-text" itemprop="text">
<p>It won't create an infinite loop, unless you have infinite data. :) Your code is close - you can handle the incremented number colliding with an existing number by using <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer"><code>while</code> with an <code>else</code> clause</a> instead of <code>if ... else</code>. You also need to update the <code>row</code> with the new key.</p>
<p>Here's a version that reads the data from a string, to make it easier to test.</p>
<pre><code>import csv

table = '''\
data, 6870, data
data, 6869, data
data, 1234, data
data, 6868, data
data, 3545, data
data, 6868, data
data, 7777, data
data, 3545, data
'''

reader = csv.reader(table.splitlines(), skipinitialspace=True)
entries = set()
for row in reader:
    print(' IN', row)
    while row[1] in entries:
        row[1] = str(int(row[1]) + 1) 
    else:
        entries.add(row[1])
    print('OUT', row, end='\n\n')
</code></pre>
<p><strong>output</strong></p>
<pre><code> IN ['data', '6870', 'data']
OUT ['data', '6870', 'data']

 IN ['data', '6869', 'data']
OUT ['data', '6869', 'data']

 IN ['data', '1234', 'data']
OUT ['data', '1234', 'data']

 IN ['data', '6868', 'data']
OUT ['data', '6868', 'data']

 IN ['data', '3545', 'data']
OUT ['data', '3545', 'data']

 IN ['data', '6868', 'data']
OUT ['data', '6871', 'data']

 IN ['data', '7777', 'data']
OUT ['data', '7777', 'data']

 IN ['data', '3545', 'data']
OUT ['data', '3546', 'data']
</code></pre>
<p>To run this code on Python 2 add this at the start of the script:</p>
<pre><code>from __future__ import print_function
</code></pre>
</div>
<span class="comment-copy">If one of the answers below fixes your issue, you should accept it (click the check mark next to the appropriate answer). That does two things. It lets everyone know your issue has been resolved to your satisfaction, and it gives the person that helps you credit for the assist. See <a href="http://meta.stackexchange.com/a/5235">here</a> for a full explanation.</span>
<span class="comment-copy">Thanks for helping. I got error "IndentationError: unindent does not match any outer indentation level" in " idx += 1"</span>
<span class="comment-copy">@csvunleasher python is strict how to indent you code. use consistent indent space when you create blocks. for starter indent using a tab consistently and try again</span>
<span class="comment-copy">Damn, what a shame, I though this was a incrementation error. But, I got this error : "TypeError: 'newline' is an invalid keyword argument for this function "</span>
<span class="comment-copy">use <code>wb</code> mode instead of <code>w</code> and get rid of the <code>newline</code> parameter</span>
<span class="comment-copy">Thank you a lot ! This worked well too @waterboy5281</span>
<span class="comment-copy">Thanks a lot @PM 2Ring, this is the solution. I tried this :   <code>with open ('result4.csv', 'r') as file_in, open ('result5.csv', 'w') as fileout: 	    reader = csv.reader(file_in.splitlines(), skipinitialspace=True) 	    entries = set() 	    for row in reader: 		    while row[4] in entries: 			    row[4] = str(int(row[4]) + 1)  		    else: 			    entries.add(row[4])  		    writer.writerow(row)</code>   but file as not attribute splitlines</span>
<span class="comment-copy">@csvunleasher It's really hard to read multi-line code in comments. In future, you should add it to the bottom of your question, maybe after a <code>&lt;hr&gt;</code> tag. You shouldn't use <code>.splitline()</code> I just used that to convert my <code>table</code> string into a list; the CSV Reader can accept a list or a file (or a file-like object). You should just do <code>reader = csv.reader(file_in, skipinitialspace=True)</code>. But you need to open both the files in binary mode, <code>open('result4.csv', 'rb')</code> and <code>open('result5.csv', 'wb')</code></span>
<span class="comment-copy">@csvunleasher FWIW, the <code>skipinitialspace=True</code> tells the Reader to ignore any spaces immediately after the comma field separator.</span>
<span class="comment-copy">I edited my code to be used in Python2.7</span>
<span class="comment-copy">Thanks ! @PM 2Ring I modified it for my code and its worked</span>
