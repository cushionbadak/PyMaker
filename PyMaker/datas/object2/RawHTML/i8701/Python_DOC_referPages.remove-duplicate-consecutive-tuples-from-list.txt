<div class="post-text" itemprop="text">
<p>Say, I have a list like below:</p>
<pre><code>[(2, 1), (1, 0), (1, 0), (1,0), (2,1), (2, 1)]
</code></pre>
<p>I want to remove duplicate consecutive tuples. So in above example, it should return:</p>
<pre><code>[(2, 1), (1, 0), (2, 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

x = [(2, 1), (1, 0), (1, 0), (1, 0), (2, 1), (2, 1)]
x_grouped = [i for i, j in groupby(x)]
# [(2, 1), (1, 0), (2, 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a generator that only yields elements that are not equal to the preceding one:</p>
<pre><code>def filter_consecutive_duplicates(it):
    prev = object()  # sentinel object, won't be equal to anything else
    for elem in it:
        if elem != prev:
            yield elem
        prev = elem
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; list(filter_consecutive_duplicates([(2, 1), (1, 0), (1, 0),(1,0),(2,1), (2, 1)]))
[(2, 1), (1, 0), (2, 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[(2, 1), (1, 0), (1, 0), (1,0), (2,1), (2, 1)]
a=[elem for count,elem in enumerate(a) if elem!=a[count-1] or count==0]
</code></pre>
<p>How about this list comprehension</p>
</div>
<span class="comment-copy">Do you only want to remove consecutive repeats, or all duplicates in the list?</span>
<span class="comment-copy">@James: only consecutive repeats</span>
