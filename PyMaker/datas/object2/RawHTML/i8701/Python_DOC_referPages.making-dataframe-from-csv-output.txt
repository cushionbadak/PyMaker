<div class="post-text" itemprop="text">
<p>Here is my code:</p>
<pre><code>import requests, re, pandas, csv
from bs4 import BeautifulSoup

r=requests.get("http://www.hltv.org/?pageid=188&amp;statsfilter=2816&amp;offset=0")
c=r.content

table=BeautifulSoup(c,"html.parser")

for row in table.find_all('div', style=re.compile(r'width:606px;height:22px;background-color')):
    data=row.get_text(strip=True, separator=',')
    print(data)
</code></pre>
<p>Here is the scraped output:</p>
<pre><code>5/3 17,Astralis (16),FaZe (13),inferno,IEM Katowice 2017
5/3 17,Astralis (16),FaZe (12),nuke,IEM Katowice 2017
5/3 17,Astralis (16),FaZe (12),overpass,IEM Katowice 2017
5/3 17,FaZe (16),Astralis (9),cache,IEM Katowice 2017
4/3 17,Astralis (16),Heroic (12),nuke,IEM Katowice 2017
4/3 17,Astralis (16),Heroic (12),train,IEM Katowice 2017
4/3 17,Immortals (10),FaZe (16),mirage,IEM Katowice 2017
2/3 17,Virtus.pro (14),Heroic (16),nuke,IEM Katowice 2017
2/3 17,Cloud9 (6),Natus Vincere (16),mirage,IEM Katowice 2017
2/3 17,SK (16),North (8),cbble,IEM Katowice 2017
2/3 17,Cloud9 (12),North (16),cbble,IEM Katowice 2017
2/3 17,Natus Vincere (12),Heroic (16),overpass,IEM Katowice 2017
2/3 17,Virtus.pro (16),SK (14),inferno,IEM Katowice 2017
</code></pre>
<p>What is the good way to make pandas.DataFrame from this output?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the function <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer">pandas.read_csv</a>. If for some reason, you don't want to write your string to an actual file, you can just make pandas think you are passing it one, by wrapping your string in a <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer">StringIO</a> object.</p>
<pre><code>import pandas as pd
from io import StringIO

csv_string = '''
5/3 17,Astralis (16),FaZe (13),inferno,IEM Katowice 2017
5/3 17,Astralis (16),FaZe (12),nuke,IEM Katowice 2017
5/3 17,Astralis (16),FaZe (12),overpass,IEM Katowice 2017
5/3 17,FaZe (16),Astralis (9),cache,IEM Katowice 2017
4/3 17,Astralis (16),Heroic (12),nuke,IEM Katowice 2017
4/3 17,Astralis (16),Heroic (12),train,IEM Katowice 2017
4/3 17,Immortals (10),FaZe (16),mirage,IEM Katowice 2017
2/3 17,Virtus.pro (14),Heroic (16),nuke,IEM Katowice 2017
2/3 17,Cloud9 (6),Natus Vincere (16),mirage,IEM Katowice 2017
2/3 17,SK (16),North (8),cbble,IEM Katowice 2017
2/3 17,Cloud9 (12),North (16),cbble,IEM Katowice 2017
2/3 17,Natus Vincere (12),Heroic (16),overpass,IEM Katowice 2017
2/3 17,Virtus.pro (16),SK (14),inferno,IEM Katowice 2017
'''

csv_string_io = StringIO(csv_string)
frame = pd.read_csv(csv_string_file)
</code></pre>
</div>
<span class="comment-copy">what would you like the data to look like when loaded?</span>
<span class="comment-copy">In first column should be "Date" like 5/3/17 in the output, second column "Team1" like Astralis in the output, third "Team3" like Faze in the output, fourth "Map" like inferno in the output and in fifth column should be "Event" like IEM Katowice in the output.</span>
<span class="comment-copy">Yes, but then I should make some CSV file first. Is there something way to make DataFrame without making csv file first. The scraped output is only in CSV format.</span>
<span class="comment-copy">@JuhoM well you said your data is in csv format. what is the exact format of your data coming from the scrapper</span>
<span class="comment-copy">What format is your data currently in? Do you have it as a string?</span>
<span class="comment-copy">I'm sorry, confusing expression from me. I scraped the data from website and the output datatype is "&lt;class 'str'&gt;". I edited the first post so you can see my code.</span>
<span class="comment-copy">@JuhoM I edited my answer to support converting strings directly</span>
