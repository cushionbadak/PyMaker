<div class="post-text" itemprop="text">
<p>I'm looking for a way, in Python, to get the HTTP message from the status code. Is there a way that is better than building the dictionary yourself?</p>
<p>Something like:</p>
<pre><code>&gt;&gt;&gt; print http.codemap[404]
'Not found'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2.7, the <a href="https://docs.python.org/2/library/httplib.html" rel="nofollow noreferrer">httplib</a> module has what you need:</p>
<pre><code>&gt;&gt;&gt; import httplib
&gt;&gt;&gt; httplib.responses[400]
'Bad Request
</code></pre>
<p>Constants are also available:</p>
<pre><code>httplib.responses[httplib.NOT_FOUND]
httplib.responses[httplib.OK]
</code></pre>
<p>Update</p>
<p><a href="https://stackoverflow.com/users/820013/shao-lo">@shao.lo</a> added a useful comment bellow. The <a href="https://docs.python.org/3/library/http.client.html" rel="nofollow noreferrer">http.client</a> module can be used:</p>
<pre><code># For Python 3 use
import http.client
http.client.responses[http.client.NOT_FOUND]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This problem solved in Python 3.5 onward. Now Python http library has built-in module called <a href="https://docs.python.org/3/library/http.html#http.HTTPStatus" rel="nofollow noreferrer">HTTPStatus</a>. You can easily get the http status details such as status code, description, etc. These are the <a href="https://www.programcreek.com/python/example/93481/http.HTTPStatus" rel="nofollow noreferrer">example</a> code for <a href="https://docs.python.org/3/library/http.html#http.HTTPStatus" rel="nofollow noreferrer">HTTPStatus</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3:</p>
<p>You could use HTTPStatus().phrase to obtain the description for a given code value.  E.g. like this:</p>
<pre><code>try:
    response = opener.open(url, 
except HTTPError as e:
    print(f'In func my_open got HTTP {e.code} {HTTPStatus(e.code).phrase}')
</code></pre>
<p>Would give for example:</p>
<pre><code>In func my_open got HTTP 415 Unsupported Media Type
</code></pre>
<p>Which answers the question. However a much more direct solution can be obtained from HTTPError.reason:</p>
<pre><code>try:
    response = opener.open(url, data)
except HTTPError as e:
    print(f'In func my_open got HTTP {e.code} {e.reason}')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A 404 error indicates that the page may have been moved or taken offline. It differs from a 400 error which would indicate pointing at a page that never existed.</p>
</div>
<span class="comment-copy">For python3 use  <code>import http.client</code> and <code>http.client.responses[http.client.NOT_FOUND]</code></span>
<span class="comment-copy">This answer was already given to this question.</span>
<span class="comment-copy">@JSTL It was, but this answer gives usage examples.</span>
<span class="comment-copy">I changed the message</span>
