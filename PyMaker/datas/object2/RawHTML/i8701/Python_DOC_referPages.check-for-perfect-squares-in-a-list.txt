<div class="post-text" itemprop="text">
<p>I want to identify numbers which are perfect squares in a list of numbers, for example:</p>
<pre><code>a = [3, 4, 8, 16, 21, 58, 144]  # return [4, 16, 144]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Once approach is to build a predicate (a function returning true or false) and apply it with <a href="https://docs.python.org/3/library/functions.html#filter" rel="noreferrer"><em>filter()</em></a>:</p>
<pre><code>&gt;&gt;&gt; def is_perfect_square(n):
        return round(n ** 0.5) ** 2 == n

&gt;&gt;&gt; list(filter(is_perfect_square, [3, 4, 8, 16, 21, 58, 144]))
[4, 16, 144]
</code></pre>
<p>Or for those who prefer list comprehensions over <em>filter()</em>:</p>
<pre><code>&gt;&gt;&gt; [x for x in [3, 4, 8, 16, 21, 58, 144] if is_perfect_square(x)]
[4, 16, 144]
</code></pre>
<p>The perfect square test works by taking the square root of a number and rounding it to the nearest integer, re-squaring it and comparing it to a the original number.  The square root step can suffer a little round-off error, but the re-squaring of the rounded integer will be exact.  This should be somewhat robust except for very large inputs.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can combine <code>math.sqrt()</code> and <code>is_integer()</code> to filter the list, like the following:</p>
<pre><code>import math

a = [3, 4, 8, 16, 21, 58, 144]
print [x for x in a if math.sqrt(x).is_integer()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try:</p>
<pre><code>&gt;&gt;&gt; square_list = []
&gt;&gt;&gt; a = [3, 4, 8, 16, 21, 58, 144]
&gt;&gt;&gt; def perfect_square(number):
    return (number**0.5) % int(number**0.5) == 0

&gt;&gt;&gt; for data in a:
    if perfect_square(data):
        square_list.append(data)


&gt;&gt;&gt; print square_list
[4, 16, 144]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using this test for perfect squares:</p>
<pre><code>def is_square(n):
    for b in range(n):
        n -= (2 * b + 1)
        if n &lt;= 0:
            return not n
</code></pre>
<p>... you can find those that appear in <code>a</code> with a simple list comprehension:</p>
<pre><code>&gt;&gt;&gt; [n for n in a if is_square(n)]
[4, 16, 144]
</code></pre>
</div>
<span class="comment-copy">This is mathematically correct but I worry that it could be thrown-off by tiny round-off errors in the math.sqrt.</span>
<span class="comment-copy">perfect thanks.. @Zero Piraeus</span>
<span class="comment-copy">That test for squares does <i>way</i> too much work.  You should be able to determine when a number is perfect square without looping over a large number of candidates.</span>
<span class="comment-copy">Yeap this is point sir @RaymondHettinger but for every number how to check this.</span>
<span class="comment-copy">@RaymondHettinger well ... yes. This was actually kinda tongue in cheek; it's obviously a homework assignment posted by someone who hasn't put the slightest effort in, so I impishly decided to go find an obscure perfect square test they could present and then be unable to explain. Now that it's accepted, I don't think I can delete it.</span>
<span class="comment-copy">@ZeroPiraeus I commend your impishness and creativity :-)  Well played.</span>
