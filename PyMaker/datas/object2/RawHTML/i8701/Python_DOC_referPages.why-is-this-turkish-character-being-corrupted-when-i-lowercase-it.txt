<div class="post-text" itemprop="text">
<p>I am trying to convert some words that contains Turkish characters to lowercase.</p>
<p>Reading words from a file which is utf-8 encoded:</p>
<pre><code>with open(filepath,'r', encoding='utf8') as f:
            text=f.read().lower()
</code></pre>
<p>When I try to convert to lowercase, the Turkish character İ gets corrupted. However when I try to convert to uppercase it works fine. </p>
<p>Here is example code:</p>
<pre><code>str = 'İşbirliği'
print(str)
print(str.lower())
</code></pre>
<p>Here is how it looks when it is corrupted:</p>
<p><img alt="this is how it is seen when it is corrupted" src="https://i.stack.imgur.com/7J3V6.png"/></p>
<p>What's going on here?</p>
<p>Some info that might be useful:</p>
<ul>
<li>I'm using Windows 10 cmd prompt</li>
<li>Python version 3.6.0</li>
<li>chcp is set to 65001</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>It's not corrupted.</p>
<p>Turkish has both a dotted lowercase <code>i</code> and a dotless lowercase <code>ı</code>, and similarly a dotted uppercase <code>İ</code> and a dotless uppercase <code>I</code>.</p>
<p>This presents a challenge when converting the dotted uppercase <code>İ</code> to lowercase: how to retain the information that, if it needs to be converted back to uppercase, it should be converted back to the dotted <code>İ</code>?</p>
<p>Unicode solves this problem as follows: when <code>İ</code> is converted to lowercase, it's actually converted to the standard latin <code>i</code> <em>plus</em> the combining character <a href="http://graphemica.com/0307" rel="nofollow noreferrer">U+0307 "COMBINING DOT ABOVE"</a>. What you're seeing is your terminal's inability to properly render (or, more to the point, refrain from rendering) the combining character, and has nothing to do with Python.</p>
<p>You can see that this is happening using <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.name" rel="nofollow noreferrer"><code>unicodedata.name()</code></a>:</p>
<pre><code>&gt;&gt;&gt; import unicodedata
&gt;&gt;&gt; [unicodedata.name(c) for c in 'İ']
['LATIN CAPITAL LETTER I WITH DOT ABOVE']
&gt;&gt;&gt; [unicodedata.name(c) for c in 'İ'.lower()]
['LATIN SMALL LETTER I', 'COMBINING DOT ABOVE']
</code></pre>
<p>... although, in a working and correctly configured terminal, it will render without any problems:</p>
<pre><code>&gt;&gt;&gt; 'İ'.lower()
'i̇'
</code></pre>
<p>As a side note, if you <em>do</em> convert it back to uppercase, it will remain in the decomposed form:</p>
<pre><code>&gt;&gt;&gt; [unicodedata.name(c) for c in 'İ'.lower().upper()]
['LATIN CAPITAL LETTER I', 'COMBINING DOT ABOVE']
</code></pre>
<p>… although you can recombine it with <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel="nofollow noreferrer"><code>unicodedata.normalize()</code></a>:</p>
<pre><code>&gt;&gt;&gt; [unicodedata.name(c) for c in unicodedata.normalize('NFC','İ'.lower().upper())]
['LATIN CAPITAL LETTER I WITH DOT ABOVE']
</code></pre>
<p>For more information, see:</p>
<ul>
<li><a href="http://www.i18nguy.com/unicode/turkish-i18n.html" rel="nofollow noreferrer">Internationalization for Turkish: Dotted and Dotless Letter "I"</a></li>
<li><a href="https://blog.codinghorror.com/whats-wrong-with-turkey/" rel="nofollow noreferrer">What's Wrong With Turkey?</a></li>
</ul>
</div>
<span class="comment-copy">Post actual text not image links, otherwise difficult to copy and paste for ourselves to try.</span>
<span class="comment-copy">Please see <a href="http://meta.stackoverflow.com/questions/285551/why-may-i-not-upload-images-of-code-on-so-when-asking-a-question">Why may I not upload images of code on SO when asking a question?</a></span>
<span class="comment-copy">@MarkTolonen in this case, an image is the only reasonable way to demonstrate the problem.</span>
<span class="comment-copy">@zero Ah, OK. It would be nice to also have the text pasted from the console as well, even though it could get transformed a little by the time we see it in our browsers.</span>
<span class="comment-copy">@Zero An image may also be needed, but the actual original text is still helpful for those without a Turkish keyboard.</span>
<span class="comment-copy">Thanks for clear information in your post. If it was only rendering i would not mind. i am using a regular expression that split text to words. since there is an extra character in that word that causes a wrong split.     &gt;&gt;&gt; re.split('\W+','İşbirliği önemlidir') ['İşbirliği', 'önemlidir'] &gt;&gt;&gt; re.split('\W+','İşbirliği önemlidir'.lower()) ['i', 'şbirliği', 'önemlidir']</span>
<span class="comment-copy">I would call this a bug in Python's <code>re.split()</code>. A joining character should not be included in <code>\W</code> although the semantics are a bit complex (what if it was joined to a non-word character? Can you even do that?)</span>
<span class="comment-copy">I agree with @tripleee that this is a bug in <code>re</code>. The more modern <a href="https://pypi.python.org/pypi/regex/" rel="nofollow noreferrer">regex</a> treats combining characters as word characters: <code>regex.split('\W+','İşbirliği önemlidir'.lower())</code> returns <code>['i̇şbirliği', 'önemlidir']</code> as expected, in case that helps.</span>
<span class="comment-copy">thank you @tripleee I was thinking something was wrong with encoding. regex worked as expected.</span>
