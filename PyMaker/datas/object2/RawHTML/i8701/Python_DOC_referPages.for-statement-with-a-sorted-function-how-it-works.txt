<div class="post-text" itemprop="text">
<pre><code>vowels = ['a', 'e', 'i', 'o', 'u']
word = input("Provide a word to search for vowels: ")

found = {}

for letter in word:
    if letter in vowels:
        found.setdefault(letter, 0)
        found[letter] += 1

for k, v in sorted(found.items()):
    print(k, 'was found', v, 'time(s).')
</code></pre>
<p>I’m a beginner in Python and in programming in general. With the input “good” the output “o” was found 2 time(s). The code works fine, however the last block of code confuses me. The variable k produces the letter o and the variable v produces the number 2. This is the key set from the dictionary. How is the code interpreted to produce this output?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code> function</a> produces a sorted list from it's input. That input here is the <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>found.items()</code> object</a>, which itself is an iterable of tuples containing <code>(key, value)</code> pairs from the dictionary. Since tuples are ordered lexicographically (comparing first their first elements, then if equal, the second elements, etc.) you end up with a list of <code>(key, value)</code> pairs sorted in alphabetical order.</p>
<p>You can try this out yourself in the interactive interpreter:</p>
<pre><code>&gt;&gt;&gt; vowels = ['a', 'e', 'i', 'o', 'u']
&gt;&gt;&gt; word = 'good'
&gt;&gt;&gt; found = {}
&gt;&gt;&gt; for letter in word:
...     if letter in vowels:
...         found.setdefault(letter, 0)
...         found[letter] += 1
...
0
1
&gt;&gt;&gt; found
{'o': 2}
&gt;&gt;&gt; list(found.items())
[('o', 2)]
&gt;&gt;&gt; sorted(found.items())
[('o', 2)]
</code></pre>
<p>Of course, since <code>good</code> only contains <strong>one</strong> unique vowel, <code>o</code>, there is little to sort by.  A sorted list with just one <code>(key, value)</code> pair won't show any change in order.</p>
<p>If you tried with a more complex word, like <code>ultrarevolutionaries</code>, you'd get a much more interesting result:</p>
<pre><code>&gt;&gt;&gt; word = 'ultrarevolutionaries'
&gt;&gt;&gt; found = {}
&gt;&gt;&gt; for letter in word:
...     if letter in vowels:
...         found.setdefault(letter, 0)
...         found[letter] += 1
...
0
0
0
0
1
0
1
1
1
1
&gt;&gt;&gt; list(found.items())
[('u', 2), ('a', 2), ('e', 2), ('o', 2), ('i', 2)]
&gt;&gt;&gt; sorted(found.items())
[('a', 2), ('e', 2), ('i', 2), ('o', 2), ('u', 2)]
</code></pre>
<p>The items are out of order first, <code>u</code>, <code>a</code>, <code>e</code>, <code>o</code>, <code>i</code> is not in alphabetical order. <code>a</code>, <code>e</code>, <code>i</code>, <code>o</code>, <code>u</code> on the other hand <em>is</em>.</p>
</div>
<span class="comment-copy">Is it the syntax of the for loop that confuses you, or the way how the actual values end up in the dictionary?</span>
<span class="comment-copy">Why not try <code>print(sorted(found.items()))</code> to see what you are iterating over? Then you might be able to answer your own question. Also -- look into <code>Counter</code> in the <code>collections</code> module for what you are trying to do.</span>
<span class="comment-copy">You have to understand what the <code>.items()</code> dictionary method returns. You can google that.. Forget about the <code>sorted()</code>; it just re-arranges the data.</span>
<span class="comment-copy">My advice to you would be to rewrite the code and use the <code>.count(x)</code> method applied to the input string. Makes your life easier.</span>
<span class="comment-copy">Yes it is clearer to me now. As many have stated and advised further reading about the dictionaries method called “items” which returns a sequence of tuples with a key-pair. These key pair are useful in the iteration in a  for loop.</span>
<span class="comment-copy">Yes it is clearer to me now. As many have stated and advised further reading about the dictionaries method called “items” which returns a sequence of tuples with a key-pair. These key pair are useful in the iteration in a  for loop.</span>
<span class="comment-copy">Glad to have been of help! Feel free to <a href="http://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">accept my answer</a> if you feel it was useful to you. :-)</span>
