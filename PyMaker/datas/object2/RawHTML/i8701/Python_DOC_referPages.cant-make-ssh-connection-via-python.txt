<div class="post-text" itemprop="text">
<p>I followed this <a href="https://stackoverflow.com/questions/20498536/subprocess-ssh-command-fails-for-some-commands-but-not-others-command-works-in">question</a>
I have this function in PostgreSQL:</p>
<pre><code>CREATE OR REPLACE FUNCTION a()
  RETURNS void AS
$BODY$
import subprocess
cmd1 = "usr/bin/ssh usera@192.168.10.5 time"
out1, err1 = subprocess.Popen(cmd1,
                              stdout=subprocess.PIPE,
                              stderr=subprocess.PIPE).communicate()
plpy.notice(out1)
$BODY$
  LANGUAGE plpythonu VOLATILE
</code></pre>
<p>This should login to the server specified and display its <code>time</code>.
No matter what I do I always get :</p>
<blockquote>
<p>ERROR:  OSError: [Errno 2] No such file or directory</p>
</blockquote>
<p>The only time I don't get the error is if 
    cmd1 = "usr/bin/ssh"
but then it does nothing.</p>
<p>How can I make it work?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem you're facing is that <code>Popen()</code> assumes the command to be a list of command+arguments.</p>
<p>There for, <code>cmd1</code> should look more like:</p>
<pre><code>cmd1 = ['/usr/bin/ssh', 'usera@192.168.10.5', 'time']
</code></pre>
<p>(unless <strong>dangerously</strong> supplying <code>shell=True</code>, then you can keep your command string as is).</p>
<p>You can also use:</p>
<pre><code>import shlex
cmd1 = shlex.split("/usr/bin/ssh usera@192.168.10.5 time")
</code></pre>
<p>This is also covered under the docs for <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">Popen()</a>.</p>
<p><strong>Last notes:</strong> I've never used <code>plpythonu</code> or this SQL version of code execution, but I'd assume that you would want to specify the full path for SSH as Lix pointed out, that being <code>/usr/bin/ssh</code> and not <code>usr/bin/ssh</code>. But your main problem is how you pass the arguments to <code>Popen()</code>.</p>
<p>Don't forget to allow SSH to login with a key, otherwise the command might hang asking for a password in the background.</p>
<p>Seeing as many people have issues running system commands that hangs without the programmer understanding why, try the following modification to get output as the command is executed instead of at the end (<code>.communicate()</code> will wait for EOL, meaning hang forever if the process never quits):</p>
<pre><code>CREATE OR REPLACE FUNCTION a()
  RETURNS void AS
$BODY$
import subprocess
cmd1 = ["usr/bin/ssh", "usera@192.168.10.5", "time"]
process = subprocess.Popen(cmd1,
                              stdout=subprocess.PIPE,
                              stderr=subprocess.STDOUT).communicate()
while process.poll() is None:
    plpy.notice(process.stdout.readline())
$BODY$
  LANGUAGE plpythonu VOLATILE
</code></pre>
<p>It's still highly inefficient since i fused STDERR and STDOUT together and using <code>readline()</code> instead of <code>read()</code>. Also <code>import select</code> might be useful here.</p>
<p>But this will give you output "live" from the command instead of bunkered up at the end. It should also print any errors that the command is throwing (but still hanging because the error didn't close the application properly).</p>
<p>This is a common mistake and people aught to read the examples/docs more on this.</p>
</div>
<span class="comment-copy">I think that the path to the <code>ssh</code> command should start with the root folder - <code>/usr/bin/ssh</code>. Without the leading slash it would be a relative path - perhaps this is why the "No such file or directory" error is being raised.</span>
<span class="comment-copy"><code>cmd1</code> should look more like: <code>cmd1 = ['/usr/bin/ssh', 'usera@192.168.10.5', 'time']</code>. This is (if i'm not mistaken) because <code>Popen()</code> assumes the command parameter is a list unless dangerously supplying <code>shell=True</code>. You can also use <code>cmd1 = shlex.split("/usr/bin/ssh usera@192.168.10.5 time")</code>.</span>
<span class="comment-copy">@Torxed this prevent the error however nothing is printed to the screen</span>
<span class="comment-copy">@avi most likely because the host running the script, isn't allowed to SSH without a password - or <code>plpy.notice()</code> wan't a string? If SSH is hanging waiting for a password, <code>.communicate()</code> will hang and wait as per described in the doc as well: <code>Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. &gt;&gt;&gt;Wait for process to terminate.&lt;&lt;&lt;</code>. Have you tried running this command from the server manually once to see what happens?</span>
<span class="comment-copy">I have no actual need for the command to be string. I'll use the list method. How can I know if the option was successful are there any error codes?</span>
<span class="comment-copy">@avi I suggest you try the code and see if there's any errors. The last edit I gave should print any errors. If there are any, correct them. But I can't in advance know if there'll be any errors ^^ If it didn't work, I suggest you create a new question that is in regards to that specific problem, seeing as this was a <code>Popen()</code> usage problem thread :)</span>
