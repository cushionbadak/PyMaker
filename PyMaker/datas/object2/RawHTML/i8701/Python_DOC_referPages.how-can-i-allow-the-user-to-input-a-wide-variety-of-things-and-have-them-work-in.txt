<div class="post-text" itemprop="text">
<p>I have the function</p>
<pre><code>def customop(qstat):
    num1 = float(input("Please input a number (no pi, e, etc) for the first number in your matrix (row 1 column 1): "))
    num2 = float(input("Number for matrix - row 1 column 2: "))
    num3 = float(input("Number for matrix - row 2 column 1: "))
    num4 = float(input("Number for matrix - row 2 column 2: "))
    matrix = np.array([[num1,num3],[num2,num4]])
    matrix2 = matrix.conj().T
    result = np.dot(matrix, matrix2)
    identity = np.identity(2)
    if np.array_equal(result, identity) == True:
        return np.dot(matrix, qstat)
    else:
        print("matrix not unitary, pretending no gate was applied")
        return qstat
</code></pre>
<p>Which merely allows the user to create their own custom gate for a quantum computer. The inputs are put into a numpy array which is then applied to the qubit. However, it currently only takes floats. How can I allow it to take anything from fractions to complex numbers to constants like pi? Is there a way to take a string and make it act as "normal" python code? I.e., if the user inputs math.pi/2, it is recorded as <code>"math.pi/2"</code> which won't compute, but can it be made to act as <code>math.pi/2</code>? The user should be able to input a wide variety of things, which is why I don't necessarily want to just convert it like I am now with <code>float()</code>. </p>
<p>Any help would be appreciated. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the <code>eval</code> function (<a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">doc</a>).</p>
<p>You can evaluate code in the current context or in a custom context:</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; eval('math.pi * 2')
6.283185307179586
</code></pre>
<p>Be aware that using this may have serious security implications: allowing these expressions inside configuration files, or data, that users can potentially share may lead to users of your program allowing execution of arbitrary code on their machines. Depending on the use case (website, local app, configuration files...) this can have security implications. In other cases it is acceptable.</p>
<p>Example: if your application has a web interface, and users are allowed to enter such an expression, they could run arbitrary code on the server under the application's account.</p>
</div>
<span class="comment-copy">Thank you for your detailed answer. +1, I will be accepting this.</span>
<span class="comment-copy">@headther, updated the answer.</span>
