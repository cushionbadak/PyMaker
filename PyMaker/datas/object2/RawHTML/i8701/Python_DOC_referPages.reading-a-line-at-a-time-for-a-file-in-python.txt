<div class="post-text" itemprop="text">
<p>I have the below program which I think reads <code>one line at at time</code> from the file and logs it to the file. It does not read the entire file into memory. This is my understanding. Is there some python generator object implied in the below code? The file handle is of type <code>&lt;class '_io.TextIOWrapper'&gt;</code>. Does it also implement the generator interface?</p>
<pre><code>import logging

logging.basicConfig(filename='debug.log', level=logging.DEBUG)


if __name__ == "__main__":
    path = "TB_data_dictionary_2016-04-15.csv"
    with open(path) as file:
        print(type(file))
        for line in file:
            logging.debug(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can easily test this for yourself by doing <code>iter(file)</code>. This will return an iterator over the object if one can be made for it (try <code>iter("abc")</code>), or throw an exception if not. In the case of on open file object, it will return the exact same object you passed in, because it's already an iterator.</p>
<p>Or you could look at <a href="https://docs.python.org/3/library/io.html#io.IOBase" rel="nofollow noreferrer">the documentation</a>. Spoiler:</p>
<blockquote>
<p>IOBase (and its subclasses) supports the iterator protocol, meaning that an IOBase object can be iterated over yielding the lines in a stream.</p>
</blockquote>
</div>
<span class="comment-copy">The word you are looking for is "iterator protocol". There is no "generator interface", so to speak. Generators are just nice, quick and expressive ways of writing iterators.</span>
<span class="comment-copy">@manvi77 what? Why?</span>
