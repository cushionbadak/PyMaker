<div class="post-text" itemprop="text">
<p>I have a dictionary, for example:</p>
<pre><code>a = {'a':1,'b':2,'c':3}
</code></pre>
<p>And I want it to be saved in a json file.</p>
<p>How can I do this with the original python json library?</p>
<p>Please note that I am running Python 3.5.2, which has a build-in json library.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also dump json file directly using <code>json.dump</code> instead of <code>json.dumps</code>. </p>
<pre><code>import json
a = {'a':1,'b':2,'c':3}
with open("your_json_file", "w") as fp:
    json.dump(a , fp) 
</code></pre>
<p><code>json.dumps</code> is mainly used to display dictionaries as a json format with the type of string. While dump is used for saving to file. Using this to save to file is obsolete.</p>
<p>The previous example only save the file to json but does not make it very pretty. So instead you could do this:</p>
<pre><code>json.dump(a, fp, indent = 4) # you can also do sort_keys=True as well
# this work the same for json.dumps
</code></pre>
<p>This makes the json file more user friendly to read. <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer">the pydoc </a> has some good description on how to use the json module. </p>
<p>To retrieve your data back, you can use the <code>load</code> function.</p>
<pre><code>a = json.load(fp) # load back the original dictionary
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h3>This may help you...</h3>
<pre><code>import json
a = {'name': 'John Doe', 'age': 24}
js = json.dumps(a)

# Open new json file if not exist it will create
fp = open('test.json', 'a')

# write to json file
fp.write(js)

# close the connection
fp.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>show you code</p>
<pre><code>#!/usr/bin/env python
# coding:utf-8
'''黄哥Python'''

import json

a = {'a': 1, 'b': 2, 'c': 3}


with open("json.txt", "w") as f:
    f.write(json.dumps(a))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>check this-</p>
<p>import json</p>
<pre><code>a = {'a':1,'b':2,'c':3}
json_str = json.dumps(a)
</code></pre>
<p>with <code>open('data.json', 'w')</code> as <code>f:json.dump(data, f)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Most of other answers are correct but this will also print data in prettify and sorted manner.</p>
<pre><code>import json
a = {'name': 'John Doe', 'age': 24}
js = json.dumps(a, sort_keys=True, indent=4, separators=(',', ': '))
with open('test.json', 'w+') as f:
    f.write(js)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/12309269/how-do-i-write-json-data-to-a-file-in-python">How do I write JSON data to a file in Python?</a></span>
<span class="comment-copy">should use the with syntax:  with open('test.json', 'a') as f:</span>
<span class="comment-copy">the 6th line: <code>fp = open('test.json', 'a')</code> there is a 'a', what's it doing here?</span>
<span class="comment-copy">'a' for appending with exiting file. You may read <a href="https://www.programiz.com/python-programming/file-operation" rel="nofollow noreferrer">programiz.com/python-programming/file-operation</a></span>
