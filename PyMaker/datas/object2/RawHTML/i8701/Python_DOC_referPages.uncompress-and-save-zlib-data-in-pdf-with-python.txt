<div class="post-text" itemprop="text">
<p>We get PDF files delivered to us daily and we need to get the images out. For example, what I want to do is to get the image back out of <a href="https://github.com/DDecoene/mypublicfiles/raw/master/MDL1703140088.pdf" rel="nofollow noreferrer">this PDF file I have</a>, with python. Most pdf files we get are multipage and we want to export each embedded image to separate files. Most have jpeg files in them, but his one does not.</p>
<p>Object 5 is embedded as a zlib compressed stream. I am pretty sure it is zlib compressed because it is marked as FlateDecode and the start of the stream is \x78\x9c which is typical for zlib. You can see (part of) <a href="https://imgur.com/a/E0rgD" rel="nofollow noreferrer">the hex dump here</a></p>
<p>The question is, how do I 'deflate' it and save the resulting file.</p>
<p>Thank you for sharing your wisdom.</p>
</div>
<div class="post-text" itemprop="text">
<p>I searched everywhere and tried many things but couldn't get to work. I managed to decompress the data like this:</p>
<pre><code>import zlib
with open("MDL1703140088.pdf", "rb") as f:
    pdf = f.read()

image = zlib.decompress(pdf[640:69307])
</code></pre>
<p>640 is zlib header(<code>b'x\x9c'</code>) position and 69307 is the position of something like footer of pdf spec. <code>b'\nendstream\n'</code> is there. Detail is in <a href="http://www.adobe.com/devnet/pdf/pdf_reference.html" rel="nofollow noreferrer">the spec</a> and some helpful Q&amp;A can be found <a href="https://stackoverflow.com/a/12150621/6153990">here</a>. But omitting the end position is allowed in this case because <a href="https://docs.python.org/3/library/zlib.html#zlib.decompress" rel="nofollow noreferrer"><code>decompress()</code></a> seems to ignore following non-compressed data. You can validate this by:</p>
<pre><code>decomp = zlib.decompressobj()
image = decomp.decompress(pdf[640:])
print(decomp.unused_data)  # starts from b'\nendstream\n
</code></pre>
<p>So far so good. But when I write <code>image</code> to a PNG file, it cannot be read by any image viewer. Actually decompressed data looks so quite empty here and there. I attached some PNG header, but no luck. Hey, it's too much...</p>
<p>As I said earlier (strangely my comment was removed by someone), you'd better use some other existing tools. If Acrobat is not your option, what about <a href="http://www.foolabs.com/xpdf/download.html" rel="nofollow noreferrer">pdftopng (part of Xpdf)</a>? <code>pdftopng MDL1703140088.pdf .</code> gave me a valid PNG file flawlessly. Obviously command-line tools can be executed in Python, as you may know.</p>
</div>
<span class="comment-copy">Yes, we get dozens of pdf files per day with at least four pages. We need to automate the extraction, trust me.</span>
<span class="comment-copy">Have you checked <a href="http://stackoverflow.com/questions/2693820/extract-images-from-pdf-without-resampling-in-python">this</a>? And googling gave me <a href="http://mikelynchgames.com/software-development/using-wand-to-extract-pngs-from-pdfs/" rel="nofollow noreferrer">this</a>.</span>
<span class="comment-copy">Yes, when I try to use wand (easiest) my whole macbook crashes without a reason. And also, I'm not permitted to install extra libraries on the server where it will be deployed to anyway. So, I'm using <a href="https://gist.github.com/DDecoene/4e91449572a473b278ec887ce61238b5" rel="nofollow noreferrer">this code for now</a> to extract jpg files but images with "\x78\x9c" I don't know what to do.</span>
<span class="comment-copy">Does the server have inkscape?  It can be run in command line mode.</span>
<span class="comment-copy">No it does not and I cannot install iet either :(</span>
<span class="comment-copy">Using pdftopng is a good idea. For sure. But (there is always a but isn't there ;D) I cannot add libraries or tools on the server it will run. The server is not ours :(</span>
