<div class="post-text" itemprop="text">
<p>I'm reading a Python file in a Python program and I want to get the list of all identifiers, literals, separators and terminator in the Python file being read. Using identifiers as example:</p>
<pre><code>one_var = "something"
two_var = "something else"
other_var = "something different"
</code></pre>
<p>Assuming the variables above are in the file being read, the result should be:</p>
<pre><code>list_of_identifiers = [one_var, two_var, other_var]
</code></pre>
<p>Same thing goes for literals, terminators and separators. Thanks</p>
<p>I already wrote code for all operators and keywords:</p>
<pre><code>import keyword, operator
list_of_operators = []
list_of_keywords = []
more_operators = ['+', '-', '/', '*', '%', '**', '//', '==', '!=', '&gt;', '&lt;', '&gt;=', '&lt;=', '=', '+=', '-=', '*=', '/=', '%=', '**=', '//=', '&amp;', '|', '^', '~', '&lt;&lt;', '&gt;&gt;', 'in', 'not in', 'is', 'is not', 'not', 'or', 'and']
with open('file.py') as data_source:
    for each_line in data_source:
        new_string = str(each_line).split(' ')
        for each_word in new_string:
            if each_word in keyword.kwlist:
                list_of_keywords.append(each_word)
            elif each_word in operator.__all__ or each_word in more_operators:
                list_of_operators.append(each_word)
    print("Operators found:\n", list_of_operators)
    print("Keywords found:\n", list_of_keywords)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import ast

with open('file.py') as data_source:
    ast_root = ast.parse(data_source.read())

identifiers = set()

for node in ast.walk(ast_root):
    if isinstance(node, ast.Name):
        identifiers.add(node.id)

print(identifiers)
</code></pre>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on their own. A good way to demonstrate this effort is to include the code you've written so far (forming a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>), example input (if there is any), the expected output, and the output you actually get (output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the <a href="https://stackoverflow.com/tour">tour</a> and <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">I'm voting to close this question as off-topic because SO is not a free coding service.</span>
<span class="comment-copy">I'm not entirely sure what you're trying to do here, but the <code>ast</code> module would probably help - in particular <a href="https://docs.python.org/3/library/ast.html#ast.parse" rel="nofollow noreferrer"><code>ast.parse</code></a>.</span>
<span class="comment-copy">Thanks. It works</span>
