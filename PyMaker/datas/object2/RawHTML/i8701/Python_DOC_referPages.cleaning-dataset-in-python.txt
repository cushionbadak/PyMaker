<div class="post-text" itemprop="text">
<p>I'm new to Python. I have a CSV-file with tweet entries formatted like this:</p>
<blockquote>
<p>15,Oct
  11,785816454042124288,/realDonaldTrump/status/785816454042124288,False,"Despite
  winning the second debate in a landslide (every poll), it is hard to
  do well when Paul Ryan and others give zero support!",DonaldTrump</p>
</blockquote>
<p>and another</p>
<blockquote>
<p>16,Oct
  10,785563318652178432,/realDonaldTrump/status/785563318652178432,False,"Wow,
  @CNN got caught fixing their ""focus group"" in order to make Crooked
  Hillary look better. Really pathetic and totally
  dishonest!",DonaldTrump</p>
</blockquote>
<p>In Python, I load the contents using Pandas like this:</p>
<pre><code>data = pd.read_csv(arg, sep=',')
</code></pre>
<p>Now, I would like to clean the CSV-file and only save the user ID (3rd entry on each row) and the tweet itself (I think 6th row). As you see I split by using the sep=','. The problem is if some tweets contains commas, I don't want this character to be removed due to the splitting.. If only the separator between tweet number, date, user_id, and so on, would have been something other than comma, it would have been a lot easier. Any suggestions on how to do this? I just want a new CSV-file without the information that I don't need.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The problem is if some tweets contains commas, I don't want this character to be removed due to the splitting.. </p>
</blockquote>
<p>The regular Python standard library <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer">CSV module</a> handles this case rather well:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; s = '''15,Oct 11,785816454042124288,/realDonaldTrump/status/785816454042124288,False,"Despite winning the second debate in a landslide (every poll), it is hard to do well when Paul Ryan and others give zero support!",DonaldTrump
16,Oct 10,785563318652178432,/realDonaldTrump/status/785563318652178432,False,"Wow, @CNN got caught fixing their ""focus group"" in order to make Crooked Hillary look better. Really pathetic and totally dishonest!",DonaldTrump
'''.splitlines()
&gt;&gt;&gt; for fields in csv.reader(s):
        print(fields[2], fields[5])


785816454042124288 Despite winning the second debate in a landslide (every poll), it is hard to do well when Paul Ryan and others give zero support!
785563318652178432 Wow, @CNN got caught fixing their "focus group" in order to make Crooked Hillary look better. Really pathetic and totally dishonest!
</code></pre>
</div>
<span class="comment-copy">Possible duplicate <a href="http://stackoverflow.com/questions/769621/dealing-with-commas-in-a-csv-file">Dealing with commas in a CSV file</a></span>
<span class="comment-copy">Thanks Priyank, but I would like to know if there is a way of dealing with this in Python aswell. I think C# would be easy in this case.. but I want to learn everything in Python too.</span>
<span class="comment-copy">Pandas won't split on the <code>,</code> because it's between <code>"</code> and the <code>"</code>'s within the <code>"</code>s are escaped anyway... so, not quite sure what your concern is here...</span>
<span class="comment-copy">@JonClements wow is that true? In that case my question is really stupid. I realize now that you are right.. Not all rows do have ""s</span>
<span class="comment-copy">Just look at the data loaded... you'll see it's fine... The quotes are only required if the field delimiter appears within a column...</span>
