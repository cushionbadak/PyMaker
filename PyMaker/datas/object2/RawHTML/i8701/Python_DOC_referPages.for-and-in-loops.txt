<div class="post-text" itemprop="text">
<p>I want my program to loop through a given list and return all integars that are below 5.</p>
<p>for some reason it does this but stops as soon as it hits five instead of continuing through the list.</p>
<pre><code>import os
os.system('cls' if os.name == 'nt' else 'clear')


def ace(a):
    d = []
    h = len(a)
    for i in a:
        if i &lt; 5:
            d.append(i)
            continue
        else:
            continue

        return d

m = [1, 2, 4, 3, 3, 5]
print ace(m)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code would work fine, however, your return statement is wrongly placed inside the for loop. For it to work you would have to remove one indent, placing it outside the for loop but still inside the function.
However, there are better and cleaner pythonic ways of doing it.
You can use a filter function with a anonymous lambda function:</p>
<pre><code>def ace(a):  
    return list(filter(lambda x: x &lt; 5, a)) 

m = [1, 2, 4, 3, 3, 5]
print (ace(m))
</code></pre>
<p>Or you can use a list comprehension instead of a filter function:</p>
<pre><code>def ace(a):  
    return [number for number in a if number &lt; 5] 

 m = [1, 2, 4, 3, 3, 5]
print (ace(m))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The return statement should be outside the loop.</p>
<p>The function can be also be written as:</p>
<pre><code>def ace(a):
    return [ i for i in a if i&lt;5 ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use the list comprehension for this, which would be easy. You can return this list. </p>
<p>Read more about list comprehension here 
<a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a>`</p>
<pre><code>m = [1, 2, 4, 3, 3, 5]
new_list = [value for value in m if value &lt; 5]`
</code></pre>
<p>After this new_list will contain <strong>[1, 2, 4, 3, 3]</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>First, to fix <em>your</em> code, the main problem is that the return is inside the loop.  You should return only <em>after</em> the loop is done.  Also, you have useless code in the loop: a <strong>continue</strong> as the last statement does nothing, and you never use the value of <strong>h</strong>.  Shorten it to this:</p>
<pre><code>def ace(a):
    d = []
    for i in a:
        if i &lt; 5:
            d.append(i)

    return d
</code></pre>
<p>That cleans it up <em>your</em> way.  As others have already noted, Python has a structure called a <em>comprehension</em> that allows you to build lists, tuples, dictionaries, and generators from iteration constructs.</p>
<pre><code>return [_ for _ in a if _ &lt; 5]
</code></pre>
<p>Will do the function in a single line.</p>
</div>
<span class="comment-copy">Your <code>return</code> is indented too far</span>
<span class="comment-copy">The indentation's off. Dedent the <code>return</code>, and you're gonna be all right. BTW, your code's really redundant. You could write the same in a <i>much</i> simpler way: <code>d = [i for i in a if i &lt; 5]</code>.</span>
<span class="comment-copy">once you fix the indentation, I imagine you could then get rid of the else and the continues</span>
<span class="comment-copy">Simple list comprehension: <code>d = [num for num in m if num &lt; 5]</code></span>
<span class="comment-copy">@ForceBru is there anywhere I can go to learn how to simplify my code? Writing it out longways is easier for me as this point being new but I want to learn how to make it not so redundant.</span>
<span class="comment-copy">What's that? Please elaborate.</span>
<span class="comment-copy">@Prune, ForceBru's comment was from before this question was edited to provide the details and tutorials</span>
<span class="comment-copy">Ah; thanks.  Comment deleted.</span>
