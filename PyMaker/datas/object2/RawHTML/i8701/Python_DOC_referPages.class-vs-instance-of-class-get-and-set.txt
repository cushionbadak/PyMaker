<div class="post-text" itemprop="text">
<p>Q: why hh.a = 2 is not what I expect but b.a = 2 is Okay?</p>
<p>here's the code:</p>
<pre><code>class D:
    def __init__(self):
        print('this is init')
        self.name = ''

    def __get__(self,instance,owner):
        print('getting')
        return self.name


    def __set__(self,instance,value):
        print('setting')
        self.name = value
        return self.name
</code></pre>
<p>and...</p>
<pre><code>class hh:
    a = D()

b = hh()
</code></pre>
<p>when i set hh.a = 2 it wont call the print('setting') but b.a = 2 is Okay. Can you explain this ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Descriptor setters are only activated when setting the attribute on an instance of the class that owns the descriptor. They don't apply to the class itself or its subclasses. This is documented in the Python <a href="https://docs.python.org/3/reference/datamodel.html#implementing-descriptors" rel="nofollow noreferrer">data model</a>.</p>
<blockquote>
<h3>3.3.2.1. Implementing Descriptors</h3>
<p>...</p>
<p><code>object.__set__(self, instance, value)</code></p>
<p>Called to set the attribute on an instance <em>instance</em> of the owner class to a new value, <em>value</em>.</p>
</blockquote>
</div>
<span class="comment-copy">hh is a class structure wgich act as a structure while declaring objects like b ..</span>
<span class="comment-copy">if <code>hh.a = 2</code> would call your <code>__set__</code> what would you expect the argument <code>instance</code> to be?</span>
<span class="comment-copy">@AnkurJyotiPhukan that doesn't answer the question.</span>
<span class="comment-copy">@TadhgMcDonald-Jensen i can use hh.a and call <b>get</b> while it has ( ,instance, ) too</span>
