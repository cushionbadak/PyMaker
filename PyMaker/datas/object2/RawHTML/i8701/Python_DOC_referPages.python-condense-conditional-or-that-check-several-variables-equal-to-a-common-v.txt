<div class="post-text" itemprop="text">
<p>Say I want to condense the following line of code:</p>
<pre><code>if a == 10 or b == 10 or sum == 10 or diff == 10:
    # do something
</code></pre>
<p>Is there a way to condense all of these ors to point to a single value? </p>
<p>Something like:</p>
<pre><code>if (a or b or sum or diff) == 10:
    # do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Flip it around </p>
<p><code>if 10 in {a, b, sum, diff}</code> should work</p>
<p>To generalize for more values use this:</p>
<p><code>if {val1, val2, val3} &amp; {a, b, sum, diff}</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>if 10 in [a, b, sum, diff]:
</code></pre>
<p>However, note that this works only for a <em>single</em> common value.  If you have two values to compare against four different variables, you don't get the "distributive law" so easily implemented.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not much shorter, but I'd use the built-in <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a>:</p>
<pre><code>any(val == x for val in (a, b, c))
</code></pre>
<p>In your case:</p>
<pre><code>if any(val == 10 for val in (a, b, sum, diff)):
    # do something
</code></pre>
<p>Hope this helps!</p>
</div>
<span class="comment-copy">TypeError: set expected at most 1 arguments, got 4</span>
<span class="comment-copy">Sorry about that. Fixed</span>
<span class="comment-copy">Thank you that does work. I had put set() it should just be {}. Point awarded</span>
<span class="comment-copy">Don't forget to accept one of the answers. Also look at @linusg answer since that might generalize better</span>
<span class="comment-copy">You create two sets one with the vals you are looking for and one with the vals you have and then you do a set intersection between them and check if the resulting set is empty. This will check if any of the vals in the left is included in the vals on the right</span>
<span class="comment-copy">Could you write if (10 or 5) in [...]?</span>
<span class="comment-copy">No you can not do this</span>
<span class="comment-copy">@vampiire Check my answer for something that generalizes to more values.</span>
<span class="comment-copy">Whoa thank you. I didn't know &amp; was even used in python. Learned three things from you today! I will award solution checkmark in 6 minutes it won't let me do it any sooner. Thank you very much.</span>
<span class="comment-copy">Yours is a bit more verbose. Is there a reason to use this approach vs what Giannis or Prude suggested? Not belittling your answer just want to learn why one may be more useful than the other.</span>
<span class="comment-copy">All the answers have their pros and cons ;) No, there's no special reason for this, just came to my mind. You can also do more advanced things with this, like adding something to <code>val</code> or if clause a special value.</span>
