<div class="post-text" itemprop="text">
<p>I'm currently experimenting with some basic Python. I'm trying to import 4 different pieces of information from a .txt document into Python. From there I will split it all up, add it to a record. After that I plan on asking the user whether or not they would like to add another entry to the record. If so, then allow them to enter the required information and save it back to the file, as a new entry.</p>
<p>I wrote a piece of code that will ask the user to enter each piece of information individually, but was entering the same thing every time and it got really annoying. It worked perfectly, here it is:</p>
<pre><code>names = []
ages = []
years = []
schools = []
Member = [] 

for loop in range(0,2):
    name = input("Please enter a name")

    age = int(input("Please enter an age"))
    while age &lt;= 0 or age &gt;= 100:
        age = int(input("Please re-enter your age, between 0 and 100"))

    year = int(input("Please enter your school year"))
    while year &lt;= 1 or year &gt;= 6:
        year = int(input("Please enter a valid school year, between 1 and 6"))

    school = input("Please enter your school")

    names.append(name)
    ages.append(age)
    years.append(year)
    schools.append(school)

    member = [names[loop], ages[loop], years[loop], schools[loop]]
    Member.append(member)

    Members = [Member]

print(Members)
</code></pre>
<hr/>
<p>The problem I encountered was when I tried to enter multiple, individual strings and integers which I was wanting to add to different arrays, like above. Here's the code for that:</p>
<pre><code>with open('Record.txt','r') as scores:
    data = scores.readlines()

names = [""]*len(data)
ages = [0]*len(data)
years = [0]*len(data)
schools = [""]*len(data)
Member = []*len(data)

counter = 0

for loop in range(0,len(data)):
    data[loop] = data[loop][0:-1]
    x = data[loop].rfind(",")
    names[loop] = data[loop][:x]
    print(names)
    ages[loop] = int(data[loop][x:])
    years[loop] = int(data[loop][x+1:])
    schools[loop] = data[loop][x+2:]

    member = [names[loop], ages[loop], years[loop], schools[loop]]
    Member.append(member)
</code></pre>
<p>I error (line 28) I was getting was: </p>
<blockquote>
<p>ValueError: invalid literal for int() with base 10: ', Viewforth'</p>
</blockquote>
<p>Here is the file I was reading from (after "Viewforth" there is a new line):</p>
<blockquote>
<p>Harris, 16, 5, Viewforth</p>
<p>Cody, 16, 5, Viewforth</p>
<p>William, 16, 5, Viewforth</p>
<p>Ross, 17, 6, Viewforth</p>
</blockquote>
<p>Just to clarify, I want to save everything before the first comma to "names", between comma 1 and 2 to "ages", 2 and 3 to "years" and everything after the third to "schools".</p>
<p>Thanks ahead for your help,</p>
<ul>
<li>Harris</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The issue in this line: <code>ages[loop] = int(data[loop][x:])</code> is that <code>data[loop][x:]</code> is a string that ends up being <code>', Viewforth'</code>, which cannot be converted to an <code>int</code>.</p>
<p>I'm not exactly sure what you're trying to do with all the string slicing, but it would be much easier to simply <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a> with the delimiter of commas to get a list of the items in each line. Something line the following:</p>
<pre><code>items_in_line = line.split(',')
names.append(items_in_line[0])
ages.append(items_in_line[1])
years.append(items_in_line[2])
schools.append(items_in_line[3])
</code></pre>
</div>
<span class="comment-copy">Tried your suggestion, but there's a couple things that I ran into. First of all, I believe it should have been "data" instead of "line" as line would need to be declared first. The second of which is I got the error "'list' object has no attribute 'split'". I think this is because Lists in python do not have a split method. Any more feedback would be appreciated.</span>
<span class="comment-copy"><code>line</code> is the actual string you get from a line in the file (using something like <a href="https://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">readline</a>). I would recommend doing each line at a time instead of using readlines() and getting all the lines from the file at once (which is what <code>data</code> is right now).</span>
