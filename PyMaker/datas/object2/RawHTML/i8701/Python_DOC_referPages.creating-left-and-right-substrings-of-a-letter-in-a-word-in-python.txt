<div class="post-text" itemprop="text">
<p>I want to create 2 arrays of the right and left sub strings of a letter in a word in Python, given a maximum length of a sub string in the arrays:
for example in the word 'working', for the letter 'r' and for a maximum length of a sub string equal to 3, the 2 arrays should be:</p>
<p><code>left=[o,wo]</code></p>
<p><code>right=[r,rk,rki]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I came up with this code, maybe it could be simpler:</p>
<pre><code>import re

def get_left_right_substrings(s, divider, max_len):
    pat = re.compile(r'^(.+)(%s.+)$' % divider)

    left, right = [], []

    try:
        before, after = re.findall(pat, s)[0]
    except IndexError:
        return left, right

    before = list(before)[-3:]
    after = list(after)[:3]

    while before:
        left.insert(0, ''.join(before))
        before.pop(0)

    while after:
        right.insert(0, ''.join(after))
        after.pop()

    return left, right

s = 'working'
left, right = get_left_right_substrings(s, 'r', 3)
print left
print right
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=index#str.index" rel="nofollow noreferrer">index</a> to get the location of the letter that's going to be the diving line between your left and right, and traditional array slicing for the rest.</p>
<pre><code>word = "working"
dividing_letter = "r"
msl = 3 #max substring length

index = word.index(dividing_letter)
right, left = [], [] #placeholders
for i in range(msl):
    try:
        right.append(word[index:index+i+1])
    except:
        pass
    try:
        left.append(word[index-i-1:index])
    except:
        pass

left = filter(None, left)
right = filter(None, right)
</code></pre>
<p>This returns:</p>
<pre><code>['o', 'wo']
['r', 'rk', 'rki']
</code></pre>
<p>Be wary of how this deals with words with repeating letters in them! If I choose my dividing letter to be "l" for the word "slacklining" I get:</p>
<pre><code>['s']
['l', 'la', 'lac']
</code></pre>
</div>
<span class="comment-copy">for i in len(word) should avoid the issue of the repeating letters right?</span>
<span class="comment-copy">There's not really an issue to avoid, you just have to be aware that this code will do the split from the first dividing letter. If you want to do something else, you'll need to modify the code.</span>
<span class="comment-copy">How can I eliminate the empty element ' ' in the arrays?</span>
<span class="comment-copy">Did you try googling it before you asked? <code>left = filter(None, left)</code> and <code>right = filter(None, right)</code></span>
<span class="comment-copy">@AriCooper-Davis I remain unconvinced that they did</span>
