<div class="post-text" itemprop="text">
<p>I am totally new to Python. 
I would like to generate a CSV file like the attachement:
<a href="https://i.stack.imgur.com/MZNLw.jpg" rel="nofollow noreferrer">attachement</a></p>
<p>For the moment I am trying to make it work with Numpy and Pandas package, but it isn't working out.</p>
<p>It would be great if anyone could help me out to realize this little project</p>
<p>Kind Regards,</p>
<p>William</p>
</div>
<div class="post-text" itemprop="text">
<p>Welcome to the SO community. For writing to .csv files with Python, as others have said you'll want to use the <code>csv</code> module (link: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html</a>) by <code>import</code>ing it. For example, to help get you started:</p>
<pre><code># Reworked example from the linked Python docs
import csv
my_data = [['First Name','Last Name','Birthday'],\
    ['John',  'Smith',      '01/01/1970'],\
    ['Stan',  'Lee',        '28/12/1922'],\
    ['Guido', 'van Rossum', '31/01/1956']]
with open('data.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerows(my_data)
</code></pre>
<p>results in a .csv file like this: </p>
<pre><code>First Name,Last Name,Birthday
John,Smith,01/01/1970
Stan,Lee,28/12/1922
Guido,van Rossum,31/01/1956
</code></pre>
<p>Without more information on what kind of data object you're working with, it's difficult to give exact details on how to proceed, but you should be able to find what information you need by reviewing the CSV module API in the link.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would map your Pandas table by row to the fields presented by your CSV header as a dictionary, so each label in the header is a key and the corresponding entry is the value. You should end up with a list of dictionaries where each dictionary represents a row of your table. Without knowing how your data is instantiated with Pandas I cannot elaborate further, as I'm not familiar with Pandas or your code at all, but this idiom should help you out if you can iterate over the rows of your table;</p>
<pre><code>dict(zip(field_list, row))
</code></pre>
<p>I would then use the <code>DictWriter</code> class from the <code>csv</code> module to write the CSV file. <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer">An example of this can be found in the Python documentation.</a> Writing the CSV file will then be as simple as iterating over the dictionary list.</p>
<p>If memory is a concern you may wish to convert each row in your table into a dictionary and write the row to the CSV file iteratively instead of instantiating your entire table in memory as a dictionary list before writing it to a file.</p>
</div>
<span class="comment-copy">Use <code>csv</code> module</span>
<span class="comment-copy">as @CS said, <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> is very good. Click <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">here</a> if you need python 2 version.</span>
<span class="comment-copy">You need to tell us what the actual object in your code looks like which you want to export.</span>
<span class="comment-copy">csv is good but Pandas can actually be slightly easier.</span>
<span class="comment-copy">You really don't want to do all that, if you have a pandas table <code>table = DataFrame(...)</code> you can export it as a csv very succinctly with <code>table.to_csv(path)</code>.</span>
<span class="comment-copy">1) I've already said I know nothing about Pandas. 2) Why don't you contribute that as an answer?</span>
<span class="comment-copy">There is no need to take it personally. You don't know Pandas, that's fine. I do and so I happen to know there's a built-in method for doing all of that manual work in 2 seconds. That seems like useful information for the questioner, doesn't it? I have not contributed an answer for the reason I already gave in my comment on the question.</span>
<span class="comment-copy">"csv is good but Pandas can actually be slightly easier" does not remind me of <code>table.to_csv(path)</code>. I also dislike spoonfeeding information, but would it hurt to be a little less cryptic?</span>
<span class="comment-copy">Sorry I meant the other comment, I'm waiting to see their actual code and the data object within it. Can't say much of use 'til then.</span>
