<div class="post-text" itemprop="text">
<p>When I try to port it it errors out asking for key2</p>
<p>Python 2:</p>
<pre><code>def SortItems(self,sorter=cmp):
    items = list(self.itemDataMap.keys())
    items.sort(sorter)
    self.itemIndexMap = items
    self.Refresh()
</code></pre>
<p>Python 3:</p>
<pre><code>try:
    cmp
except NameError:
    def cmp(x, y):
        if x &lt; y:
            return -1
        elif x &gt; y:
           return 1
        else:
            return 0

def SortItems(self,sorter=cmp):
    items = list(self.itemDataMap.keys())
    items.sort(key=sorter)
    self.itemIndexMap = items
    self.Refresh()
</code></pre>
<p>Getting the error:</p>
<pre><code>items.sort(key=sorter)
TypeError: __ColumnSorter() missing 1 required positional argument: 'key2'
</code></pre>
<p>It looks like lambda function needs second argument
Any idea how to make it work?</p>
<p>Also tried functools.cmp_to_key:</p>
<pre><code>def SortItems(self):
    import locale
    items = list(self.itemDataMap.keys())
    items= sorted(items, key=cmp_to_key(locale.strcoll)) 
    self.itemIndexMap = items   
    self.Refresh()
</code></pre>
<p>Getting error:</p>
<pre><code>    items= sorted(items, key=cmp_to_key(locale.strcoll))
TypeError: strcoll() argument 1 must be str, not int
</code></pre>
<p>Probably because I'm sorting integers not strings</p>
<p>How do I make it work for int?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>cmp</code> and <code>key</code> are fundamentally different. However there is a conversion function you can use: <a href="https://docs.python.org/3/library/functools.html#functools.cmp_to_key" rel="nofollow noreferrer"><code>functools.cmp_to_key()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the docs Python3 list.sort():</p>
<blockquote>
<p>sort() accepts two arguments that can only be passed by keyword
  (keyword-only arguments)</p>
<p>key specifies a function of one argument that is used to extract a
  comparison key from each list element (for example, key=str.lower).</p>
</blockquote>
<p>That is, the key callable only takes a single argument in py3. So in this case doing</p>
<p><code>items.sort(int)</code>, or equivalently <code>items.sort(lambda x: x)</code></p>
<p>will sort a list of int in ascending order.</p>
<p>In general <code>cmp</code> should return the comparison property of the each element
of the <code>list</code>.</p>
<pre><code>def cmp(x):
   # code to compute comparison property or value of x
   # eg. return x % 5
</code></pre>
<p>Additionally, you <em>can</em> convert the python2 cmp function:</p>
<blockquote>
<p>The functools.cmp_to_key() utility is available to convert a 2.x style
  cmp function to a key function.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#list.sort</a></p>
</div>
<span class="comment-copy">Tried it, gives different error. TypeError: strcoll() argument 1 must be str, not int. I'm sorting integers. Any idea how to use it for integers?</span>
<span class="comment-copy">What? Why are you using the <code>strcoll</code> function to compare integers? I don't understand what you are trying to do.</span>
