<div class="post-text" itemprop="text">
<p>Hi and many thanks in advance!</p>
<p>I'm working on a Python script handling utf-8 strings and replacing specific characters. Therefore I use <code>msgText.replace(thePair[0], thePair[1])</code> while looping trough a list which defines unicode characters and their desired replacement, as shown below.</p>
<pre><code>theList = [
    ('\U0001F601', '1f601.png'),
    ('\U0001F602', '1f602.png'), ...
]
</code></pre>
<p>Up to here everything works fine. But now consider a <strong>csv file</strong> which contains the characters to be replaced, as shown below.</p>
<pre><code>\U0001F601;1f601.png
\U0001F602;1f602.png
...
</code></pre>
<p>I miserably failed in reading the csv data into the list due to the <strong>escape characters</strong>. I read the data using the <code>csv</code> module like this:</p>
<pre><code>with open('Data.csv', newline='', encoding='utf-8-sig') as theCSV:
    theList=[tuple(line) for line in csv.reader(theCSV, delimiter=';')]
</code></pre>
<p>This results in pairs like <code>('\\U0001F601', '1f601.png')</code> which evade the escape characters (note the double backslash). I tried several methods of modifying the string or other methods of reading the csv data, but I was not able to solve my problem.
How could I accomplish my goal to read csv data into pairs which contain escape characters?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm adding the solution for reading csv data containing escape characters for the sake of completeness. Consider a file <code>Data.csv</code> defining the replacement pattern:</p>
<pre><code>\U0001F601;1f601.png
\U0001F602;1f602.png
</code></pre>
<p>Short version (using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a>):</p>
<pre><code>import csv

# define replacement list (short version)
with open('Data.csv', newline='', encoding='utf-8-sig') as csvFile:
    replList=[(line[0].encode().decode('unicode-escape'), line[1]) \
        for line in csv.reader(csvFile, delimiter=';') if line]
csvFile.close()
</code></pre>
<p>Prolonged version (probably easier to understand):</p>
<pre><code>import csv

# define replacement list (step by step)
replList=[]
with open('Data.csv', newline='', encoding='utf-8-sig') as csvFile:
    for line in csv.reader(csvFile, delimiter=';'):
        if line:  # skip blank lines
            replList.append((line[0].encode().decode('unicode-escape'), line[1]))
csvFile.close()
</code></pre>
</div>
<span class="comment-copy">See: <a href="http://stackoverflow.com/a/22601369/2896976">stackoverflow.com/a/22601369/2896976</a></span>
<span class="comment-copy">From the information you're giving, I am not sure why you'd want to go the detour via csv and not just find a generic function to turn any \U000XXXXX character into xxxxx.png ?</span>
<span class="comment-copy">@trs Unfortunately the pattern is not always the same. (The csv data contains several hundreds of lines.)</span>
<span class="comment-copy">@user2896976 I cannot figure out how to use <code>.encode().decode('unicode-escape')</code> for the list of tuples.</span>
<span class="comment-copy">If your data is always just a pair you can do: <code>theList=[(line[0].encode().decode('unicode-escape'), line[1]) for line in csv.reader(theCSV, delimiter=';') if line]</code> Which will encode the first element. I also added an <code>if</code> in there to skip blank lines</span>
