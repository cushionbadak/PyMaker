<div class="post-text" itemprop="text">
<p>The excerpt from data:</p>
<p>Givent the following example of pandas dataframe:</p>
<pre><code>df = 
       index              date
        7838      2012 January
        7790      2012 January
        7853    2015 September
        7889        2016 March
        7928      2015 October
        7847      1999 January
        7884      2006 January
        7826      1992 January
</code></pre>
<p>Is there a simple (and pythonic) way to convert free text into a standard date time variable? Something like:</p>
<pre><code>df = 
           index              date
            7838        2012-01-01
            7790        2012-01-01
            7853        2015-09-01
            7889        2016-03-01
            7928        2015-10-01
            7847        1999-01-01
            7884        2006-01-01
            7826        1992-01-01
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html" rel="nofollow noreferrer">pd.to_datetime()</a> to convert from text to date type. You can glean the appropriate date types from this <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">list</a>.</p>
<pre><code>df['date'] = pd.to_datetime(df['date'], format='%Y %B')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html" rel="nofollow noreferrer"><code>to_datetime</code></a> handles this fine without any specific format specifier:</p>
<pre><code>In [83]:
pd.to_datetime(df['date'])

Out[83]:
0   2012-01-01
1   2012-01-01
2   2015-09-01
3   2016-03-01
4   2015-10-01
5   1999-01-01
6   2006-01-01
7   1992-01-01
Name: date, dtype: datetime64[ns]
</code></pre>
</div>
