<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/39447138/how-can-i-identify-buttons-created-in-a-loop">How can I identify buttons, created in a loop?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>So I want to print an item's text when item's button is pressed.</p>
<pre><code>from tkinter import *
from tkinter import ttk

root = Tk()
root.title('test')

mainframe = ttk.Frame(root, padding='8')
mainframe.grid(column=0, row=0)

items = [
    {
        'name' : '0001',
        'text' : '1111',
    },{
        'name' : '0002',
        'text' : '2222',
    },{
        'name' : '0003',
        'text' : '3333',
    },
]

rcount = 1 #row count
for item in items:
    ttk.Label(mainframe, text=item['name']).grid(column=1, row=rcount, sticky=W)
    ttk.Button(mainframe, text='-&gt;', command=lambda:print(item['text'])).grid(column=2, row=rcount, sticky=W)
    rcount += 1

root.mainloop()
</code></pre>
<p>Whichever of the three buttons I press I get <code>3333</code>. If I remove lambda I get <code>1111 2222 3333</code> right at start of the program, but then buttons have no effect.</p>
</div>
<div class="post-text" itemprop="text">
<p>An easy change you can do is to use functools.partial instead of lambda. Since lambda evaluates the statement after the button is pressed, the last item would be 3333. partial saves the args and act the same as lambda(evaluate the statement after the button is pressed)</p>
<pre><code>#rest the same
from functools import partial
for rcount, item in enumerate(items, start=1): #use this as row count
    ttk.Label(mainframe, text=item['name']).grid(column=1, row=rcount, sticky=W)
    ttk.Button(mainframe, text='-&gt;', command=partial(print,item['text'])).grid(column=2, row=rcount, sticky=W)
</code></pre>
<p>For more information on how to use partial see <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer">https://docs.python.org/3/library/functools.html#functools.partial</a></p>
</div>
<span class="comment-copy">For example, I expected to see <code>3333 2222 1111 2222 3333</code> if I pressed buttons 3, 2, 1, 2, 3. Instead I get <code>3333 3333 3333 3333 3333</code> (in reply to the person asking what I expected the buttons to do)</span>
<span class="comment-copy">FWIW this problem can be solved with lambda, too. It's not the use of lambda that's wrong, it's the <i>incorrect</i> use of lambda.</span>
<span class="comment-copy">You're right that lambda could also be used to solve this problem, but I believe that it's easier to use partial instead</span>
