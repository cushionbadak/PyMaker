<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/493386/how-to-print-without-newline-or-space">How to print without newline or space?</a>
<span class="question-originals-answer-count">
                    26 answers
                </span>
</li>
</ul>
</div>
<pre><code>def WhichAreCaps(Word):
    for w in Word:
        if w.isupper() == True:
          print (w)

WhichAreCaps("IJkdLenMd")
</code></pre>
<p>Result:</p>
<pre><code>I
J
L
M
</code></pre>
<p>So I'm trying to build a code that finds Capitalized letters in a string and print out the letters. The problem is that I want the result to come out as one line of string, not four. Is there a way to do so? (I'm just a beginner;;)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>print</code> function accepts an <code>end</code> keyword argument to specifies the end of the string after printing. By default it's set to new line (<code>\n</code>), you can simply use a space. Also note that checking the truths value of any expression with <code>== True</code> is wrong since <code>True</code> interprets as 1 and every thing that returns 1 will be interpreted as True. You can simply use <code>if w.isupper()</code>:</p>
<pre><code>def WhichAreCaps(Word):
    for w in Word:
        if w.isupper():
          print(w, end=' ')
</code></pre>
<p>Another way is <code>yield</code>ing the vowels in your function and make it a generator:</p>
<pre><code>def WhichAreCaps(Word):
    for w in Word:
        if w.isupper():
            yield w
</code></pre>
<p>Then you can join the result in any way you like and print it:</p>
<pre><code>print(','.join(WhichAreCaps(Word))) 
</code></pre>
<p>After all, as a more pythonic approach for this ask you can simply use a list comprehension within <code>str.join</code>:</p>
<pre><code>print(' '.join([w for w in Word if w.isupper()]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can Just append the letters to an empty string and then return it.</p>
<pre><code>def WhichAreCaps(Word):
    ans=''
    for w in Word:
        if w.isupper() == True:
          ans+=w
    print(ans)
</code></pre>
</div>
<span class="comment-copy">You <code>''.join(..)</code> the characters together...</span>
<span class="comment-copy">See the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print()</code></a> documentation (especially the <code>end</code> argument).</span>
<span class="comment-copy">@WillemVanOnsem I've tries doing print (" ".join(w)), still the same probelm</span>
<span class="comment-copy">BTW, your function would be more useful if it returns the results as a string instead of printing them. That way, the caller could print the results themself, or do some other processing on the results before printing them.</span>
<span class="comment-copy">@ChikkinMan Change approach: <code>"".join(c for c in word if c.isupper())</code>.</span>
<span class="comment-copy">I would clean it up with an empty <code>print()</code> just before i <code>return</code>.</span>
<span class="comment-copy">@Ev.Kounis Thanks would be good to.</span>
<span class="comment-copy">@Kasramvd Yup, used the end=" " and it worked.! Thank you!</span>
<span class="comment-copy">Oh wow thank you!</span>
<span class="comment-copy">I do not understand the dv.. Can the downvoter explain?</span>
<span class="comment-copy">@Ev.Kounis Maybe it's because it's a code-only answer. Or maybe the down-voter voted on the early version of the answer which used the Python 2 <code>print</code> statement and didn't notice that Akshay fixed that.</span>
<span class="comment-copy">Thanks guys. I'm relatively new to SO.</span>
<span class="comment-copy">I downvoted because 1) it's a code only answer, 2) <code>== True</code> is redundant, and mostly 3) I don't condone string concatenation because it's underperformant.</span>
