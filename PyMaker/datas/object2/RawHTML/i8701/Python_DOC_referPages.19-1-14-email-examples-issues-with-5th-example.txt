<div class="post-text" itemprop="text">
<p>I am trying to extract attachments from .msg files.  The solutions on github are too detailed for me to understand properly, and the answers here are not as complete as I'd like.  This <a href="https://docs.python.org/3/library/email-examples.html" rel="nofollow noreferrer">example</a> was pointed out in another question similar to mine, but I have not been able to figure out how the function works.<br/>
I believe I am close but cannot figure out what it is I shoud be opening with - with open(msgFile) as fp:  Here is my code so far:</p>
<pre><code>import os
import sys
import email
import errno
import mimetypes

from argparse import ArgumentParser

def main():
    parser = ArgumentParser(description = """\
Unpack a MIME message into a directory of files.
""")
    parser.add_argument('-d', '--    C:\\Users\\MikeS\\Documents\\ImproveBKFS\\Python\\msg_extract', required = True, 
                    help = """Unpack the MIME message into the named 
                    directory, which will be created if it doesn't already
                    exist.""")
parser.add_argument('TestFile.msg')
args = parser.parse_args()

with open(args, 'wb') as fp:  #issues with open(args)
    msg = email.message_from_file(fp)

try:
    os.mkdir(args.directory)
except FileExistsError:
    pass

counter = 1
for part in msg.walk():
#multipar/* are just containers
    if part.get_content_maintype()=='multipart':
        continue
    #Applications should really sanitize the given filename so that an
    # email message can't be used to overwrite important files
    filename = part.get_filename()
    if not filename:
        ext = mimetypes.guess_extension(part.get_content_type())
        if not ext:
            #Use a generic bag-of-bit extension
            ext = '.bin'
        filename = 'part-%03d%' % (counter, ext)
    counter +=1
    with open(os.path.join(arg.directory, filename), 'wb') as fp:
        fp.write(part.get_payload(decode=True))

if __name__ == '__main__':
    main()
</code></pre>
<p>I am stuck on line 20. Here is my input and error message.  </p>
<pre><code>PS C:\Users\MikeS\Documents\\Python\msg_extract&gt; py -3       get_payload_3.py -d ^V TestFile.msg
Namespace(C:\Users\MikeS\Documents\Python\msg_extract='\x16',   TestFile.msg='TestFile.msg')
Traceback (most recent call last):
  File "get_payload_3.py", line 53, in &lt;module&gt;
    main()
  File "get_payload_3.py", line 26, in main
    with open(args) as fp:  #something with this line
TypeError: invalid file:     Namespace(C:\Users\MikeS\Documents\Python\msg_extract='\x16',     TestFile.msg='Test
File.msg')
</code></pre>
<p>Any input or clues as to the type of input I need to give the function would be a huge help.  Thanks</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>parser.add_argument('-d', '--    C:\\Users\\MikeS\\Documents\\ImproveBKFS\\Python\\msg_extract', required = True, 
                help = """Unpack the MIME message into the named 
                directory, which will be created if it doesn't already
                exist.""")
</code></pre>
<p>What's the purpose of that string: <code>'--    C:\\Users\\MikeS\\Documents\\ImproveBKFS\\Python\\msg_extract'</code>?</p>
<p>Use something simple, like <code>--dir</code></p>
<pre><code>parser.add_argument('-d', '--directory', required = True, 
                help = """Unpack the MIME message into the named 
                directory, which will be created if it doesn't already
                exist.""")
</code></pre>
<p>After you parse <code>args</code>, print it so you understand what the parser has discovered:</p>
<pre><code>args = parser.parse_args()
print(args)
</code></pre>
<p>Then if you need this 'directory', use something like <code>args.directory</code>.</p>
<p>Change this as well:</p>
<pre><code>parser.add_argument('TestFile.msg')
</code></pre>
<p>to </p>
<pre><code>parser.add_argument('outfile')
</code></pre>
<p>and use:</p>
<pre><code>with open(args.outfile, 'wb') as fp:  #issues with open(args)
msg = email.message_from_file(fp)
</code></pre>
<p>I suspect you are confusing the <code>dest</code> (or long option name) of an argument with the value, either a default or one you'll get from the command line.</p>
<p>'C:\Users\MikeS\Documents\ImproveBKFS\Python\msg_extract' and 'TestFile.msg' look like a directory and file names.  But they are being used in the <code>dest</code> slot of <code>add_argument</code>.  You may need to spend some time reading the <code>argparse</code> docs, and practice with some simpler examples.</p>
</div>
<span class="comment-copy">Thank you, I had taken a look at the python.org argparse documentation, and but was still a little confused how to use it in this instance, but your breaking up of the code has helped me digest it more fully.</span>
