<div class="post-text" itemprop="text">
<p>i'm trying to insert  a node before a node into doubly linked list.After performing the operation i'm not getting the correct results.</p>
<pre><code>class createnode:
  def __init__(self,data):
      self.data=data
      self.next=None
      self.prev=None

class Unordered_list: 
  def __init__(self):
   self.head=None 
######Insertion at the starting###
  def buildlst(self,data):
    node=createnode(data)
    if self.head is None:
     self.head=node
    else:
     node.next=self.head
     node.prev=None
     self.head=node
#######INsertion at the end####
  def buildlstend(self,data):
    node=createnode(data)
    ptr=self.head
    while(ptr.next):
      ptr=ptr.next
    ptr.next=node
    ptr=node.prev

#######INsertion before some node i.e searched node####
  def insertbeforenode(self,data,srch_data):
    node=createnode(data)
    ptr=self.head
    while(ptr):  
      if ptr.data==srch_data:
        node.prev=ptr.prev
        node.next=ptr
        ptr.prev=node 
      ptr=ptr.next


########Printitng the list########      
  def printlist(self):
     temp=self.head      
     while(temp):
      print(temp.data)  
      temp=temp.next    

A=Unordered_list()
A.buildlst(10)
A.buildlst(20)
A.buildlstend(30)
A.printlist()
print("Here i will insert a new node 50 before 10")
A.insertbeforenode(50,10)
A.printlist()
</code></pre>
<p>Mylist look some what like 20,10,30.I want to have the new node before 10.but it prints me the same results.Have been through this link <a href="https://stackoverflow.com/questions/38706745/inserting-a-node-before-a-given-node-in-doubly-linked-list">Inserting a node before a given node in doubly linked list</a> .My program is in python so couldn.t collect much from it.
insertbeforenode is my function from where i'm making a call.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python supports a built-in mechanism to work with lists, you could easily do something like this:</p>
<pre><code>list = []
list.append(10)
list.insert(0, 20)
list.append(30)
list.insert(1, 50)
</code></pre>
<p>See the official documentation for more examples <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html</a>.</p>
<p>Anyway if you want to program a double linked list by your self I have made some changes to your code:</p>
<pre><code>class createnode:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None


class Unordered_list:
    def __init__(self):
        self.head = None

    def buildlst(self, data):
        node = createnode(data)
        if self.head is None:
            self.head = node
        else:
            node.next = self.head
            self.head.prev = node  # &lt;---
            #  node.prev = None  &lt;---- this is not necessary
            self.head = node

    def buildlstend(self, data):
        node = createnode(data)
        ptr = self.head
        while ptr.next:
            ptr = ptr.next
        ptr.next = node
        node.prev = ptr  # &lt;---

    def insertbeforenode(self, data, srch_data):
        if srch_data == self.head.data: # &lt;-- if you try to insert before the head
            self.buildlst(data)
        else:
            node = createnode(data)
            ptr = self.head
            while ptr:
                if ptr.data == srch_data:
                    node.prev = ptr.prev
                    node.next = ptr
                    ptr.prev = node
                    node.prev.next = node  # &lt;--
                    break  # &lt;--- when you find your node you have to quit from the loop
                else:
                    ptr = ptr.next

    def printlist(self):
        temp = self.head
        while (temp):
            print(temp.data)
            temp = temp.next
</code></pre>
<p>I have put an arrow (# &lt;--) where I made the changes. There were a couples of mistakes on working with pointers and others inaccuracies. Please try this and let me know!</p>
</div>
<span class="comment-copy">Why is this cross-posted to both Python and C tags? The "right way" is very different in the two languages, since Python has lists built-in.</span>
<span class="comment-copy">the thing ** node.prev.next = node  ** mentioned by you actually solved my problem.May i know why i need  specifically because what i think it's just a way to link your prev node ,tobe_insertednode,next node.so i thought iwas giving enough links like node.prev = ptr.prev, node.next = ptr, ptr.prev = node.Can you elaborate @Checkinator</span>
<span class="comment-copy">That's because when you have a double linked list and you insert a new node between two nodes you have to move four pointers. First you set the previous and the next of the new inserted node, then you have to change the <i>next-pointer</i> of the node before the new node (<code>node.prev.next = node</code>) and the <i>previous-pointer</i> of the node next to the new node (<code>ptr.prev = node</code>). I'm sorry for the word pun @codaholic</span>
<span class="comment-copy">Thanks for the explanation !!!!</span>
