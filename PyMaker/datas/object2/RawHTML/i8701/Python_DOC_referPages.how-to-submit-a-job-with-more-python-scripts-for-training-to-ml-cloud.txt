<div class="post-text" itemprop="text">
<p>I have a project with more than one file of python code. 
I have a file for model, one for data utility, one for training the model.
I know how to submit  a model with all the code is in one file. 
How can I indicate that T have more file in my project?
Maybe something need to added in the <code>setup.py</code> file or <code>__init__.py</code>.</p>
<p>My directory looks like this:</p>
<pre><code>setup.py
trainer/
  __init__.py
  task.py
  model/
     seq2seq.py
     model.py
  data_utli.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to manually create your own package, though you're welcome to if you want.</p>
<p>There are two important steps in getting the package to work automatically:  </p>
<ol>
<li>Create a proper <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">python package</a></li>
<li>Ensure your <code>setup.py</code> is correct.</li>
</ol>
<p>In your case, the <code>model</code> subdirectory is causing issues. The quick fix is to move <code>trainer/model/*</code> to <code>trainer/</code>. Otherwise, you probably want to make <code>model</code> a proper sub-package by adding a (probably blank) <code>__init__.py</code> file in the <code>model/</code> subdirectory.</p>
<p>Next, ensure your <code>setup.py</code> file is correctly specified. A sample script is provided in <a href="https://cloud.google.com/ml-engine/docs/how-tos/packaging-trainer#recommended_project_structure" rel="nofollow noreferrer">this documentation</a>, repeated here for convenience:</p>
<pre><code>from setuptools import find_packages
from setuptools import setup

setup(name='trainer',
      version='0.1',
      include_package_data=True,
      description='blah',
      packages=find_packages()
)
</code></pre>
<p>You can verify that it worked by running:</p>
<pre><code>python setup.py sdist
</code></pre>
<p>That will create a <code>dist</code> subdirectory with a file <code>trainer-0.1.tar.gz</code>. Extracting the contents of that file shows that all of the files were correctly included:</p>
<pre><code>$ cd dist
$ tar -xvf trainer-0.1.tgz
$ find trainer-0.1/
trainer-0.1/
trainer-0.1/setup.py
trainer-0.1/setup.cfg
trainer-0.1/trainer
trainer-0.1/trainer/data_util.py
trainer-0.1/trainer/task.py
trainer-0.1/trainer/__init__.py
trainer-0.1/trainer/model
trainer-0.1/trainer/model/__init__.py
trainer-0.1/trainer/model/model.py
trainer-0.1/trainer/model/seq2seq.py
trainer-0.1/PKG-INFO
trainer-0.1/trainer.egg-info
trainer-0.1/trainer.egg-info/dependency_links.txt
trainer-0.1/trainer.egg-info/PKG-INFO
trainer-0.1/trainer.egg-info/SOURCES.txt
trainer-0.1/trainer.egg-info/top_level.txt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i found the answer in the ml cloud documentation
<a href="https://cloud.google.com/ml-engine/docs/how-tos/packaging-trainer#to_use_the_gcloud_tool_to_use_an_existing_package_already_in_the_cloud" rel="nofollow noreferrer">https://cloud.google.com/ml-engine/docs/how-tos/packaging-trainer#to_use_the_gcloud_tool_to_use_an_existing_package_already_in_the_cloud</a></p>
</div>
