<div class="post-text" itemprop="text">
<p>I have an index.php file that runs a python script as follows:</p>
<pre><code>shell_exec("/usr/custom/test.py")
</code></pre>
<p>The test.py file tries to write to a file (which by default does not exist in the directory) as follows:</p>
<pre><code>#!/usr/bin/env python

import io

with io.FileIO("foobar.txt, "w") as file:
    file.write("Hello!")
</code></pre>
<p>Now, if I run this file directly as root in Ubuntu, it works fine. The file is created and has "Hello!" inside.</p>
<p>If I run it through the php script (by visiting my index.php page), I get the following error in  /var/log/apache2/error.log</p>
<pre><code>Traceback (most recent call last):
  File "/usr/custom/test.py", line 5, in &lt;module&gt;
    with io.FileIO("foobar.txt", "w") as file:
IOError: [Errno 13] Permission denied: 'foobar.txt'
</code></pre>
<p>now...I tried another python file that just prints something and I was able to get that to run fine. So here's where I'm getting confused.</p>
<p>The permissions of the folder and the test.py file is the same and as follows:</p>
<pre><code>-rwxrwxrwx 1 www-data www-data 102
</code></pre>
<p>I can't figure out why this won't let me write to the file. I even tried to create the file first (touch) and then give it permissions...but it didn't work.</p>
<p>Does anyone know how I can get this to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you call that script from php it tries to create file in the same folder as python file itself (in <code>/usr/custom/</code>), not php file. To solve that problem, you will need to write absolute path for the file:</p>
<pre><code>with open('/var/www/html/foobar.txt', 'w') as file:
    file.write("Hello!\n")
</code></pre>
<p>If you need that file to be created in the same place as your php file, then you will need to pass <code>path</code> as an argument in <code>shell_exec</code> call. Read <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">this</a> documentation for argument parsing. You can use <code>getcwd</code> in php to get path for current directory.</p>
</div>
<span class="comment-copy">Try to get path for file in python to check if it works correctly: create some file inside folder where php file is located, then in python script write <code>import os</code> and <code>print(os.path.abspath("filename.txt"))</code> - What is the output?</span>
<span class="comment-copy">use <code>$output = shell_exec("/usr/custom/test.py");</code> and then print that output to see result of python script.</span>
<span class="comment-copy">Emin, I'm not entirely sure I understand what you are asking me to do.  So I added the import os and print(os.path.abspath("filename.txt")) into my python test.py script. I also created filename.txt in the same folder as my index.php file  (which was in /var/www/html).  So if I run my python script directly as root it displays /var/www/html/filename.txt  As for your second  comment, I have    $output = shell_exec("/usr/custom/test.py");  print ($output);  But there is no output on my webpage when  I navigate to the index.php file.  I also don't see anything in the apache log file.</span>
<span class="comment-copy">The reason why I asked to add that line without complete path was to check where python tries to create file. If as you said, it checks <code>/usr/custom/</code> folder, then it will mean it will try to create <code>foobar.txt</code> also inside that directory. Try to give full path for <code>foobar.txt</code> while opening file. Also it will be better to use <code>with open('/path/to/foobar.txt', 'w') as file</code> instead of <code>io</code>.</span>
<span class="comment-copy">Also, make sure it didn't created file <code>foobar.txt</code> when you executed python script as root. If it created that file, due to root user, the file will need root access to rewrite. In that case, delete current <code>foobar.txt</code> file.</span>
