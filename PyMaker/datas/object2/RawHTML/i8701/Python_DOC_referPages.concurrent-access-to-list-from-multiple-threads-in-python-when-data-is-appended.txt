<div class="post-text" itemprop="text">
<p>We have a list to which data is appended at regular time intervals and this procedure takes time so using usual mutex to protect the entire list during writes is not the most efficient solution. How to organize reads and writes to such list in a more concurrent fashion?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need locking when using <code>list.append()</code> or <code>list.extend()</code> with multiple threads. These operations are thread-safe.</p>
<p>Here is a brief overview of operations that are thread-safe: <a href="https://docs.python.org/3/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe" rel="nofollow noreferrer">https://docs.python.org/3/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe</a></p>
<p>It's also worth mentioning that from a performance standpoint it's much faster to prepare sub-lists in separate threads, and then <code>extend</code> the main list with these sub-lists.</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/6319207/are-lists-thread-safe">Related.</a></span>
