<div class="post-text" itemprop="text">
<pre><code>from flask import Flask, jsonify, render_template
from py2neo import Graph,authenticate

app = Flask(__name__)
authenticate("localhost:7474","neo4j", "neo4j")
graph = Graph("http://localhost:7474/db/data")

def buildNodes(nodeRecord):
    print("............................")
    data = {"id": str(nodeRecord.n._id), "label": next(iter(nodeRecord.n.labels))}
    data.update(nodeRecord.n.properties)
    print(data)
    return {"data": data}

def buildEdges(relationRecord):
    data = {"source": str(relationRecord.r.start_node._id),
            "target": str(relationRecord.r.end_node._id),
            "relationship": relationRecord.r.rel.type}

    return {"data": data}

@app.route('/')
def index():
    print("index")
    return render_template('index.html')

@app.route('/graph')
def get_graph():
    # print(graph.cypher.execute('MATCH (n) RETURN n').columns)
    nodes = map(buildNodes, graph.cypher.execute('MATCH (n) RETURN n'))
    print(nodes)
    edges = map(buildEdges, graph.cypher.execute('MATCH ()-[r]-&gt;() RETURN r'))
    print(edges)
    # json_2={"nodes":nodes,"edges":edges}
    # return json.dumps(json_2, cls=UserEncoder)
    elements = {"nodes": nodes, "edges": edges}
    print(dict(elements))
    return jsonify(elements)
    return jsonify(elements)

if __name__ == '__main__':
    app.run(debug = False)
</code></pre>
<p>When I use Python to connect the graph database(neo4j), I have the problem 
<code>'map object at 0x03D25C50' is not JSON serializable</code>, but <code>map object at 0x03D25C50</code> is the result of method of <code>map()</code>. I don't know how to resolve the problem.</p>
<p>Is there anything obvious I'm dong wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>    @app.route('/graph')
def get_graph():
    print(graph.cypher.execute('MATCH (n) RETURN n'))
    nodes = map(buildNodes, graph.cypher.execute('MATCH (n) RETURN n'))
    print(nodes.__next__())
    edges = map(buildEdges, graph.cypher.execute('MATCH ()-[r]-&gt;() RETURN r'))
    print(edges.__next__())
    # json_2={"nodes":nodes,"edges":edges}
    # return json.dumps(json_2, cls=UserEncoder)

    try:
        elements = {"nodes": nodes.__next__(), "edges": edges.__next__()}
        print(elements)
        return jsonify(elements)
    except StopIteration:
        print("here is end")

if __name__ == '__main__':
    app.run(debug = False)
</code></pre>
<p>I have changed the code and the data of my map method is </p>
<pre><code>{'data': {'id': '526', 'tagline': 'Welcome to the Real World', 'released': 1999, 'title': 'The Matrix', 'label': 'Movie'}}
</code></pre>
<p>and</p>
<pre><code>{'data': {'relationship': 'ACTED_IN', 'source': '527', 'target': '526'}}
</code></pre>
<p>but it also has a problem 
<a href="https://i.stack.imgur.com/72tj7.png" rel="nofollow noreferrer">enter image description here</a></p>
<p>I don't know how to resolve it. I am looking forward your answer, thanks！</p>
</div>
<div class="post-text" itemprop="text">
<p>The quick answer to what the error in your image is saying is that you aren't returning a response from your <code>except</code> block. And thus because the <code>try</code> is failing, your view isn't returning anything. But that doesn't answer the real question. I haven't used <code>map</code> in python. <code>for</code> loops and <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> typically get the job done pretty well. I'm also not familiar at all with <code>neo4j</code>. That being said, I believe the answer is that you're using the <code>__next__</code> method. Is there any reason why you're doing that explicitly? According to the <a href="https://docs.python.org/3/tutorial/classes.html#iterators" rel="nofollow noreferrer">docs</a> this used when iterating over an iterable to get the next set of data. In other words it's implicitly called when you loop over an iterable--with a <code>for</code> loop for instance. What may be happening is that if there is only one set of data, when you call <code>__next__</code> the first time, you get that first and only data set. But when you call it the second time it doesn't have data to return, so you get a <code>map object</code>. This may not be the 100% correct answer, but try removing the <code>__next__</code> calls, and see if that helps. Try to encode simply <code>str(edges)</code> and <code>str(nodes)</code> instead of calling <code>__next__</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, the <code>map</code> built-in returned a list. In Python 3, it returns an iterator instead of a list, which the <code>json</code> module can't serialize. If you need a list, and not an iterator, you should use a list comprehension: <code>[buildNodes(row) for row in graph.cypher.execute(...)]</code>. You can also force-type it by doing <code>list(map(...))</code>, but that's not as clear as a listcomp.</p>
<p>You should be aware that you can't call <code>__next__</code> (or, preferably, <code>next(...)</code>) on a list, however, as that is an iterator method. You can print a whole list without consuming it, though, so unless you're explicitly trying to lazy load, a list is a better option here anyway.</p>
<p>You can read about some of the difference between lists/other sequence types and iterators in the standard docs <a href="https://docs.python.org/3/library/stdtypes.html#iterator-types" rel="nofollow noreferrer">here</a> and about the <code>next</code> built-in function and why it is preferable to <code>__next__</code> <a href="https://www.python.org/dev/peps/pep-3114/#id15" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">I'm not sure if the <code>map</code> object has this implemented, but many objects implement the <code>__str__</code> method so that you can get a string representation of the data. Sometimes it's just the class name, but for instance the <code>dict</code> object will do this: <code>&gt;&gt;&gt; str({'b':2, 'c':3}) "{'c': 3, 'b': 2}"</code></span>
<span class="comment-copy">thanks a lot，I have changed the code，but the problem shows  below，I‘am looking forward your answer. Thanks a ton!</span>
