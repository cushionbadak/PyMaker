<div class="post-text" itemprop="text">
<p>I have two list of dicts say :</p>
<p>rds_detail:</p>
<pre><code>[   {   'rds_name': u'emsclassicldap', 'rds_type': u'db.m3.medium'},
    {   'rds_name': u'fra01-devops-KPX', 'rds_type': u'db.t2.medium'},
    {   'rds_name': u'prodreplica', 'rds_type': u'db.t2.medium'}
]
</code></pre>
<p>cloudwatch_detail:</p>
<pre><code>[   {   'alarm_name': u'emsclassicldap_db_connections', 'alarm_threshold': 380.0},
    {   'alarm_name': u'fra01-devops-KPX_db_connection',
        'alarm_threshold': 266.0},
    {   'alarm_name': u'prodreplica_db_connections',
        'alarm_threshold': 266.0},
]
</code></pre>
<p>The <code>alarm_name</code> actually has <code>rds_name</code> as its substring ;I need to actually combine these two list into one based this condition so that the final result should look like </p>
<pre><code>[
    {   'rds_name': u'emsclassicldap', 'rds_type': u'db.m3.medium','alarm_name': u'classicldap_db_connections', 'alarm_threshold': 380.0}
    .
    .
    So on
    . 
    .
]
</code></pre>
<p>i am writing a simple def to combine :</p>
<pre><code>def combine_rds_cloudwatch(rds_detail,cloudwatch_detail):
    print rds_detail,cloudwatch_detail

    for rds in rds_detail:
        for alarm in cloudwatch_detail:
            if ????????????
</code></pre>
<p>Not sure how to do so</p>
</div>
<div class="post-text" itemprop="text">
<p>A more generic method..</p>
<pre><code>rds_list = [{'rds_name': u'emsclassicldap', 'rds_type': u'db.m3.medium'},
            {'rds_name': u'fra01-devops-KPX', 'rds_type': u'db.t2.medium'},
            {'rds_name': u'goldenprodreplica', 'rds_type': u'db.t2.medium'}
            ]

cloudwatch_list = [{'alarm_name': u'emsclassicldap_db_connections', 'alarm_threshold': 380.0},
                   {'alarm_name': u'fra01-devops-KPX_db_connection', 'alarm_threshold': 266.0},
                   {'alarm_name': u'goldenprodreplica_db_connections', 'alarm_threshold': 266.0},
                   ]


def merge_two_dicts(x, y):
    """Given two dicts, merge them into a new dict as a shallow copy.
       More info here http://stackoverflow.com/questions/38987/how-to-merge-two-python-dictionaries-in-a-single-expression?rq=1
    """
    z = x.copy()
    z.update(y)
    return z


def combine_list(prefix_key_list, prefix_key, keys_list, key):
    combined_list = []

    for short in prefix_key_list:
        for long in keys_list:
            if long[key].startswith(short[prefix_key]):
                result = merge_two_dicts(long, short)
                combined_list.append(result)

    return combined_list


print(combine_list(rds_list, 'rds_name', cloudwatch_list, 'alarm_name'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>And, <a href="https://docs.python.org/3/library/functions.html#func-dict" rel="nofollow noreferrer"><code>dict(one_dict, **other_dict)</code></a> will give you another dictionary with items from both dictionaries:</p>
<pre><code>&gt;&gt;&gt; d1 = {'a': 1, 'b': 2}
&gt;&gt;&gt; d2 = {'c': 3, 'd': 4}
&gt;&gt;&gt; dict(d1, **d2)  # =&gt; dict({'a':1,'b':2}, c=3, d=4)
{'a': 1, 'c': 3, 'b': 2, 'd': 4}
</code></pre>
<p>You can use <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> (two for clause) to make products and filter them using <code>if</code> clause:</p>
<pre><code>def combine_rds_cloudwatch(rds_detail,cloudwatch_detail):
    return [dict(rds, **alarm) for rds in rds_detail
                               for alarm in cloudwatch_detail
                               if rds['rds_name'] in alarm['alarm_name']]
                          # OR if alarm['alarm_name'].startswith(rds['rds_name'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This</p>
<pre><code>from pprint import pprint

pprint([dict(y.items() + next(x.items() for x in rds_detail if x['rds_name'] in y['alarm_name'])) for y in cloudwatch_detail])
</code></pre>
<p>Will give</p>
<pre><code>[{'alarm_name': u'emsclassicldap_db_connections', 
  'alarm_threshold': 380.0,
  'rds_name': u'emsclassicldap',
  'rds_type': u'db.m3.medium'},
 {'alarm_name': u'fra01-devops-KPX_db_connection',
  'alarm_threshold': 266.0,
  'rds_name': u'fra01-devops-KPX',
  'rds_type': u'db.t2.medium'},
 {'alarm_name': u'prodreplica_db_connections',
  'alarm_threshold': 266.0,
  'rds_name': u'prodreplica',
  'rds_type': u'db.t2.medium'}]
</code></pre>
<p>Is it the correct output?</p>
<p>If you know the order of elements in both lists you can also just do</p>
<pre><code>pprint([dict(x.items() + y.items()) for x, y in zip(rds_detail, cloudwatch_detail)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>startswith</code> to check if one string starts with another:</p>
<pre><code>from copy import deepcopy
result = []
for rds in rds_detail:
    temp = deepcopy(rds)
    for cw in cloudwatch_detail:
        # replace the condition with rds['rds_name'] in cw['alarm_name'] if the condition 
        # is substring
        if cw['alarm_name'].startswith(rds['rds_name']):
            temp.update(cw)
    result.append(temp)

result
#[{'alarm_name': 'emsclassicldap_db_connections',
#  'alarm_threshold': 380.0,
#  'rds_name': 'emsclassicldap',
#  'rds_type': 'db.m3.medium'},
# {'alarm_name': 'fra01-devops-KPX_db_connection',
#  'alarm_threshold': 266.0,
#  'rds_name': 'fra01-devops-KPX',
#  'rds_type': 'db.t2.medium'},
# {'alarm_name': 'prodreplica_db_connections',
#  'alarm_threshold': 266.0,
#  'rds_name': 'prodreplica',
#  'rds_type': 'db.t2.medium'}]
</code></pre>
</div>
<span class="comment-copy">I would iterate over the list, get the value of <code>rds_name</code> and use <code>in list2[index]['alarm_name']</code> do a dict update and merge into a new list</span>
<span class="comment-copy">You can use the <code>in</code> operator to search for substrings, e.g. <code>if rds['rds_name'] in alarm['alarm_name']:</code> for that if statement. You'll want to return a new list of dictionaries. Try experimenting with <code>dict.items()</code>, which allows you to iterate a dictionary's entries.</span>
<span class="comment-copy">yeah.. nice, ! saw it now</span>
<span class="comment-copy">but does it check the condition i mentioned ? rds_name is a substring in alarm_name , it has to check that first</span>
<span class="comment-copy">@NishantSingh, I missed that. I updated the answer accordingly.</span>
<span class="comment-copy">I understand, can u just open up the list comprehension ( i need to understand it , still new here)</span>
<span class="comment-copy">@NishantSingh, I added a link to tutorial (list comprehension). I hope it help you understand. The given list comprehension is basically similar to nested for loop with a if statement.</span>
<span class="comment-copy">this is updating in the cw ? i need a seprate list to be returned ,,, so should i just open a new list above the for loop and append ?</span>
