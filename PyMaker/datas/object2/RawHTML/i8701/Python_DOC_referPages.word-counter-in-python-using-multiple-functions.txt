<div class="post-text" itemprop="text">
<p>I'm currently working on a program that I have been assigned that is just getting the word and line count of a sonnet. The first bit of code here works and is the proper output my professor is looking for, even though it includes the first 2 lines of the sonnet.</p>
<pre><code>import string


def main():

    ifName = input("What file would you like to analyze? ")
    ofName = input("What file should the results be written to? ")

    infile = open(ifName, "r")
    outfile = open(ofName, "w")

    lineCount = 0
    wordCount = 0

    for line in infile:
        lineCount +=1
        wordLine = line.split()
        L = len(wordLine)
        wordCount += L


    print("The file", ifName, "had:", file= outfile)
    print("words =", wordCount, file= outfile)
    print("lines =", lineCount, file= outfile)
    print("The results have been printed to:", outfile)

    infile.close
    outfile.close

main()
</code></pre>
<p>However, the next part of the assignment is to get the same results using a second function, "countNum" with the parameter of "line". So countNum(line).</p>
<p>Here is the code I have been messing around with to see if I can get it to work.</p>
<pre><code>import string


def countNum(line):
    wordCount = 0
    wordLine = line.split()
    L = len(wordLine)
    wordCount +=L
    print(wordCount)

def main():

    ifName = input("What file would you like to analyze? ")
    ofName = input("What file should the results be written to? ")

    infile = open(ifName, "r")
    outfile = open(ofName, "w")

    lineCount = 0
    wordCount = 0

    for line in infile:
        lineCount +=1
        wordTotal += countNum(line)
        ##wordLine = line.split()
        ##L = len(wordLine)
        ##wordCount += L


  ##  print("The file", ifName, "had:", file= outfile)
  ##  print("words =", wordCount, file= outfile)
  ##  print("lines =", lineCount, file= outfile)
  ##  print("The results have been printed to:", outfile)

    infile.close
    outfile.close

main()
</code></pre>
<p>If you were wondering, this is the sonnet.txt file:</p>
<pre>
Shakespeareâ€™s Sonnet 18

Shall I compare thee to a summer's day?
Thou art more lovely and more temperate:
Rough winds do shake the darling buds of May,
And summer's lease hath all too short a date:
Sometime too hot the eye of heaven shines,
And often is his gold complexion dimm'd;
And every fair from fair sometime declines,
By chance or nature's changing course untrimm'd;
But thy eternal summer shall not fade
Nor lose possession of that fair thou owest;
Nor shall Death brag thou wander'st in his shade,
When in eternal lines to time thou growest:
So long as men can breathe or eyes can see,
So long lives this, and this gives life to thee.
</pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>countNum</code> is printing the result instead of returning it:</p>
<pre><code>def countNum(line):
    return len(line.split())
</code></pre>
<p>Also, your close methods need to have <code>()</code> after them. They aren't actually executing:</p>
<pre><code>infile.close
outfile.close
</code></pre>
<p>to</p>
<pre><code>infile.close()
outfile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def count(line):
    return len(line.split())

def main():
    infile = open(input("File to analyse: "), "r")
    file = infile.read().splitlines()
    infile.close()

    lineCount = len(file)
    wordTotal = 0

    for line in file:
        words = count(line)

        wordTotal += words

    print("Lines:", lineCount)
    print("Words:", wordTotal)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>len</code> to get the length of a list. The list of rows is given by <code>f.readlines()</code> and the list of words in a line is given by <code>line.split()</code>. And we can use the builtin <code>sum</code> to sum across a list and be super pythonic
<a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#sum</a></p>
<p>You should use Python's automatic closing by using the <code>with</code> keyword. <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html</a></p>
<p>so we'd have:</p>
<pre><code>with open(infilename, "r") as infile, open(outfilename, "w") as outfile:
    lines = infile.readlines()
    linecount = len(lines)
    wordcount = sum([len(line.split()) for line in lines])
    print(linecount)
    print(wordcount)
</code></pre>
<p>See <a href="https://docs.python.org/3.6/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3.6/tutorial/datastructures.html#list-comprehensions</a> for list comprehensions</p>
</div>
<span class="comment-copy">Are you trying to count the occurrences of each word in a line?</span>
<span class="comment-copy">You would simply need to return wordCount from the function? 'return wordCount'</span>
<span class="comment-copy">you're not really closing your files BTW.</span>
