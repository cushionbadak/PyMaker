<div class="post-text" itemprop="text">
<p>I have some challenges loading <code>olympicmedal.csv</code> file into Jupiter notebook (Using Anaconda3). 
I do not know what is the  problem because  I was able to load others csv files.</p>
<p>This the error I have while try to upload CSV file into Jupyter notebook. </p>
<p><strong>Code:</strong></p>
<pre><code>olym=pd.read_csv('data/olympicmedals.csv')
</code></pre>
<p><strong>Error:</strong></p>
<pre><code>UnicodeDecodeError                        Traceback (most recent call last)
&lt;ipython-input-12-64f15f4c3016&gt; in &lt;module&gt;()
----&gt; 1 olym=pd.read_csv('data/olympicmedals.csv')

C:\ProgramData\Anaconda3\lib\site-packages\pandas\io\parsers.py in parser_f(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, escapechar, comment, encoding, dialect, tupleize_cols, error_bad_lines, warn_bad_lines, skipfooter, skip_footer, doublequote, delim_whitespace, as_recarray, compact_ints, use_unsigned, low_memory, buffer_lines, memory_map, float_precision)
    644                     skip_blank_lines=skip_blank_lines)
    645 
--&gt; 646         return _read(filepath_or_buffer, kwds)
    647 
    648     parser_f.__name__ = name

C:\ProgramData\Anaconda3\lib\site-packages\pandas\io\parsers.py in _read(filepath_or_buffer, kwds)
    399         return parser
    400 
--&gt; 401     data = parser.read()
    402     parser.close()
    403     return data

C:\ProgramData\Anaconda3\lib\site-packages\pandas\io\parsers.py in read(self, nrows)
    937                 raise ValueError('skipfooter not supported for iteration')
    938 
--&gt; 939         ret = self._engine.read(nrows)
    940 
    941         if self.options.get('as_recarray'):

C:\ProgramData\Anaconda3\lib\site-packages\pandas\io\parsers.py in read(self, nrows)
   1506     def read(self, nrows=None):
   1507         try:
-&gt; 1508             data = self._reader.read(nrows)
   1509         except StopIteration:
   1510             if self._first_chunk:

pandas\parser.pyx in pandas.parser.TextReader.read (pandas\parser.c:10415)()

pandas\parser.pyx in pandas.parser.TextReader._read_low_memory (pandas\parser.c:10691)()

pandas\parser.pyx in pandas.parser.TextReader._read_rows (pandas\parser.c:11728)()

pandas\parser.pyx in pandas.parser.TextReader._convert_column_data (pandas\parser.c:13162)()

pandas\parser.pyx in pandas.parser.TextReader._convert_tokens (pandas\parser.c:14116)()

pandas\parser.pyx in pandas.parser.TextReader._convert_with_dtype (pandas\parser.c:16172)()

pandas\parser.pyx in pandas.parser.TextReader._string_convert (pandas\parser.c:16400)()

pandas\parser.pyx in pandas.parser._string_box_utf8 (pandas\parser.c:22072)()

UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8e in position 10: invalid start byte
</code></pre>
<p>​</p>
</div>
<div class="post-text" itemprop="text">
<p>You're getting an <code>UnicodeError</code>, this means Python Interpreter can't translate the sequence of bits passed to it using it's default encoding. This happens because there is some non-ascii character in the file and it can't be encoded/decoded</p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8e in position 10: invalid start byte
</code></pre>
<p>According to <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer"><code>read_csv()</code></a> docs, you can specify the encoding type of your file. For example:</p>
<pre><code>#1
olym = pd.read_csv('data/olympicmedals.csv', encoding='utf-8')

#2
olym = pd.read_csv('data/olympicmedals.csv', encoding='cp1252')

#3
olym = pd.read_csv('data/olympicmedals.csv', encoding='latin_1')
</code></pre>
<p>If <code>utf-8</code> don't work, you can try to specify other encoding types. A few files that I've worked with were encoded with <code>cp1252</code>, but I've already worked with <code>latin_1</code> and <code>iso8859</code>, for example.</p>
<p>Take a look at <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">Python Standard Encodings</a>.</p>
<p>Setting the correct encoding type will allow Python Interpreter to fetch the correct translation of each set of bits in your file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting a UnicodeError which means your file encoding is different than unicode. Pandas use utf-8 as default encoding.</p>
<p>In case you want to detect encoding of a file in Python you can try the below code:</p>
<pre><code>from chardet.universaldetector import UniversalDetector
usock = open('data/olympicmedals.csv', 'rb')
detector = UniversalDetector()
for line in usock.readlines():
    detector.feed(line)
    if detector.done: break
detector.close()
usock.close()
print (detector.result)
</code></pre>
<p>This also shows the confidence with which the detector predicted your file encoding.</p>
<p>Once you know the encoding you can try this:</p>
<pre><code>olym = pd.read_csv('data/olympicmedals.csv', encoding='&lt;encoding-type&gt;')
</code></pre>
<p>You can find standard encodings in Python <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">here</a>.</p>
<p>In Windows if you open your file with Notepad++ you will find these invalid characters highlighted (in case file is utf-8). It also determines what encoding your file has.</p>
</div>
<span class="comment-copy">That means that one line of the file contains a non ascii character of code 0x8e. What is the file encoding?</span>
<span class="comment-copy"><code>latin1</code> or <code>iso-8859-1</code> are known to accept any byte value. But it is not the actual encoding, you just will end with wrong character.</span>
<span class="comment-copy">Is there any way to know the file encoding just by the <code>UnicodeDecodeError</code> message? I mean, maybe by looking in which table I can find <code>0x8e</code> or something like this?</span>
<span class="comment-copy">Well it would be simpler if we knew what 0x8e is supposed to be... It is a <code>Ž</code> in cp1252, a <code>Ä</code> in cp437 and cp850. Sorry but I cannot say much more...</span>
