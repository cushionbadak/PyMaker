<div class="post-text" itemprop="text">
<p>Here is the code so far<br/>
Notes regarding the variables:<br/>
<code>'ports'</code> - there could be any number of ports in the 'ports' list<br/>
<code>'nodes_u'</code> this will contain any number of server names and IP address pairs<br/>
<code>'serv_name_u'</code> could be anything but is static once defined<br/>
<code>'port_qty'</code> is equal to the number of ports listed in 'ports'   </p>
<pre><code>ports = ['443', '80']
nodes_u = ['SERVER1', '10.0.0.1', 'SERVER2', '10.0.0.2']
serv_name_u = "TESTING"
port_qty = 2

for i in range(0, len(ports)):
    print("ltm pool "+serv_name_u+"_{0}_pool {{ \n    members {{"
          .format(ports[i]))
    for i in range(0, len(nodes_u), 2):
        print("        {0} {{ \n            address {1} \n        }}"
              .format(nodes_u[i], nodes_u[i+1]))
</code></pre>
<p>Here is an example of the output</p>
<pre><code>ltm pool TESTING_443_pool { 
    members {
        SERVER1 { 
            address 10.0.0.1 
        }
        SERVER2 { 
            address 10.0.0.2 
        }
ltm pool TESTING_80_pool { 
    members {
        SERVER1 { 
            address 10.0.0.1 
        }
        SERVER2 { 
            address 10.0.0.2 
        }
</code></pre>
<p>My question or what I am trying to figure out is how I can get the port number displayed after the server name in the pool section only! so the output is like this e.g.</p>
<pre><code>ltm pool TESTING_443_pool { 
    members {
        SERVER1:443 { &lt;&lt;&lt;Port Number Here!
            address 10.0.0.1 
        }
        SERVER2:443 { &lt;&lt;&lt;Port Number Here!
            address 10.0.0.2 
        }
ltm pool TESTING_80_pool { 
    members {
        SERVER1:80 { &lt;&lt;&lt;Port Number Here!
            address 10.0.0.1 
        }
        SERVER2:80 { &lt;&lt;&lt;Port Number Here!
            address 10.0.0.2 
        }
</code></pre>
<p>Every time I try something I just end up with both ports listed or the iteration jumps past the index range for the 'ports' list. Also if there is a better way to capture the input or generate the output I am all ears! </p>
</div>
<div class="post-text" itemprop="text">
<p>Remove the nested <code>for</code>-loop and just include both print statements in the outer <code>for</code>-loop, with the <code>port</code> number inserted at index <code>:{1}</code>:</p>
<pre><code>for i in range(0, len(ports)):
    print("ltm pool "+serv_name_u+"_{0}_pool {{ \n    members {{"
          .format(ports[i]))
    # for i in range(0, len(nodes_u), 2):
    print("        {0}:{1} {{ \n            address {2} \n        }}"
          .format(nodes_u[i], ports[i], nodes_u[i+1]))
</code></pre>
<p>Output:</p>
<pre><code>List of nodes:
ltm node SERVER1 { 
    address 10.0.0.1 
    }
ltm node SERVER2 { 
    address 10.0.0.2 
    }
ltm pool TESTING_443_pool { 
    members {
        SERVER1:443 { 
            address 10.0.0.1 
        }
ltm pool TESTING_80_pool { 
    members {
        10.0.0.1:80 { 
            address SERVER2 
        }
</code></pre>
<p><strong>Attempt #2</strong>:
Using different incrementer names (<code>i</code> and <code>j</code>) in the nested <code>for</code>-loops to differentiate between the two lists may get the desired output:</p>
<pre><code>for i in range(0, len(ports)):
    print("ltm pool "+serv_name_u+"_{0}_pool {{ \n    members {{"
          .format(ports[i]))
    for j in range(0, len(nodes_u), 2):
        print("        {0}:{1} {{ \n            address {2} \n        }}"
              .format(nodes_u[j], ports[i], nodes_u[j+1]))
</code></pre>
<p>Output:</p>
<pre><code>ltm pool TESTING_443_pool { 
    members {
        SERVER1:443 { 
            address 10.0.0.1 
        }
        SERVER2:443 { 
            address 10.0.0.2 
        }
ltm pool TESTING_80_pool { 
    members {
        SERVER1:80 { 
            address 10.0.0.1 
        }
        SERVER2:80 { 
            address 10.0.0.2 
        }
</code></pre>
<p>As for a better way to capture the input or generate the output, consider using a different data structure for your inputs, like a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> with the <code>keys</code> as <code>name</code>, and <code>port</code>, and <code>values</code> as their respective <code>values</code>.</p>
</div>
<span class="comment-copy">Welcome to StackOverflow. Please read <a href="http://stackoverflow.com/help/how-to-ask">How do I ask a good question?</a> and <a href="http://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>, then come back and rephrase your question</span>
<span class="comment-copy">Nice response to the feedback :) Is there a reason you're building these strings in such a disjointed way? Is the issue that you want the particular indentation levels on the printed output?</span>
<span class="comment-copy">yeah essentially I am trying to write a small script that outputs code that can be pasted into an F5 load balancer. There is probably an API for the F5 but I havent got that advanced yet! :) anyways there is a specific syntax that it expects and that is the output I am trying to produce.</span>
<span class="comment-copy">Almost but not quite! I tried that and got the same output as you, each pool should include both servers as members, Also if you look closely at the TESTING_80_pool instead of printing the name of the server it has printed the IP and then for the address it has printed the name of server. I believe this is to do with the step size of 2.</span>
<span class="comment-copy">Ah yes, my mistake, I used your second output as my target output instead of your first output example. Thanks for pointing that out! :) I'll try to correct it.</span>
<span class="comment-copy">@Charles Crosland I think you were right, the problem seems similar to what you suggested, so I gave it another shot.</span>
<span class="comment-copy">Thanks dude, I'll test it tomorrow and if it works (which it looks like it should) I'll validate this as the answer! Thanks for your help again...</span>
<span class="comment-copy">Sounds good, welcome anytime. Cheers!</span>
