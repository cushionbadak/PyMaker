<div class="post-text" itemprop="text">
<p>i am trying convert <code>json</code> string to <code>model</code></p>
<p>then it is easy to get value with <code>.</code> </p>
<p>i have checked  <a href="https://stackoverflow.com/questions/11590190/is-there-a-python-json-library-can-convert-json-to-model-objects-similar-to-goo">another question</a> </p>
<p>but different, my json sting looks like,</p>
<pre><code>{
   "id":"123",
   "name":"name",
   "key":{
      "id":"345",
      "des":"des"
    },
}
</code></pre>
<p>i prefer to use 2 class like,</p>
<pre><code>class A:
    id = ''
    name = ''
    key = new B()


class B:
    id = ''
    des = ''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are few libraries that might help:</p>
<ul>
<li><a href="http://marshmallow.readthedocs.io/" rel="nofollow noreferrer">marshmallow</a> is nice</li>
<li><a href="https://github.com/Pylons/colander" rel="nofollow noreferrer">colander</a> from Pylons</li>
<li><a href="http://schematics.readthedocs.io/" rel="nofollow noreferrer">schematics</a></li>
</ul>
<p>For easier cases you can also use something from standard library like</p>
<ul>
<li><a href="https://docs.python.org/3/library/typing.html#typing.NamedTuple" rel="nofollow noreferrer">named tuples</a> and one from <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">collections</a> which is available also in py2</li>
<li><a href="https://docs.python.org/3/library/types.html?highlight=simplenamespace#types.SimpleNamespace" rel="nofollow noreferrer">SimpleNamespace</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>In order to do that you should provide your custom callback as an <code>object_hook</code> argument to the <code>json.loads</code> function.</p>
<blockquote>
<p><code>object_hook</code> is an optional function that will be called with the
  result of any object literal decode (a <code>dict</code>). The return value of
  <code>object_hook</code> will be used instead of the <code>dict</code>. This feature
  can be used to implement custom decoders (e.g. JSON-RPC class hinting).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Consider using <a href="https://docs.python.org/3.6/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><strong><em>collections.namestuple</em></strong></a> subclasses:</p>
<pre><code>json_str = '''
{
   "id":"123",
   "name":"name",
   "key":{
      "id":"345",
      "des":"des"
    }
}'''

B = collections.namedtuple('B', 'id des')
A = collections.namedtuple('A', 'id name key')

def make_models(o):
    if 'key' in o:
        return A(o['id'], o['name'], B(id=o['key']['id'], des=o['key']['des']))
    else:
        return o

result = json.loads(json_str, object_hook=make_models)

print(type(result))    # outputs: &lt;class '__main__.A'&gt;
print(result.id)       # outputs: 123
print(result.key.id)   # outputs: 345
</code></pre>
</div>
<span class="comment-copy">of course you will first need to <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">parse json</a></span>
<span class="comment-copy">thanks @code22  can you give me some libs support 3.6?</span>
<span class="comment-copy">yes. Marshmallow supports &gt;= 3.4</span>
<span class="comment-copy">thanks i give it a try</span>
<span class="comment-copy">how if i got heaps of properties, i am new to python, and on python 3.6 , thanks</span>
<span class="comment-copy">as you saw <code>collections.namedtuple('B', 'id des')</code> : <code>id</code> and <code>des</code> are properties. Add new properties in same way</span>
<span class="comment-copy">yes, i got what you mean, but some times the key from json is a keyword, like <code>class</code> or <code>str</code>, and how about i got 100 properties.</span>
