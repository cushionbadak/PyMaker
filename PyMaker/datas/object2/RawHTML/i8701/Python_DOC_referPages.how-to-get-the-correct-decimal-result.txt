<div class="post-text" itemprop="text">
<p>I'm trying to write a program to search for duplicate representations of integers in fractional number bases. Consequently, I have to do things like this:</p>
<pre><code>1.1**7
</code></pre>
<p>which equals 1.9487171. However, python automatically represents that result as a float, whereas the given value is <em>exact</em>. This is what I need, which is not the same as rounding a float. I also must allow the program to specify how many decimal places there are. I've tried using the decimal module but can't quite get it to work. What would be the best way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/decimal.html#module-decimal" rel="nofollow noreferrer">decimal module</a> will give you exact results:</p>
<pre><code>&gt;&gt;&gt; Decimal('1.1') ** 7
Decimal('1.9487171')
</code></pre>
<p>For non-decimal bases, the <a href="https://docs.python.org/3/library/fractions.html#module-fractions" rel="nofollow noreferrer">fractions module</a> will do the exact arithmetic.  The only issue though is that the output is in fractional form rather than indicating the decimal notation (likely with repeating, non-terminating sequences) that you seem to be looking for:</p>
<pre><code>&gt;&gt;&gt; Fraction(3, 7) ** 5
Fraction(243, 16807)
&gt;&gt;&gt; Context(prec=200).divide(243, 16807)
Decimal('0.014458261438686261676682334741476765633367049443684179211043017790206461593383709168798714821205450110073183792467424287499256262271672517403462842863092758969477003629440114238115071101326828107336229')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>decimal.Decimal</code> arguments should be <em>strings</em>. If you use a <code>float</code>, it carries along it's imprecision:</p>
<pre><code>&gt;&gt;&gt; decimal.Decimal('1.1')**7
Decimal('1.9487171')
&gt;&gt;&gt;
</code></pre>
<p>VS</p>
<pre><code>&gt;&gt;&gt; decimal.Decimal(1.1)**7
Decimal('1.948717100000001101423574568')
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>fractional number bases</p>
</blockquote>
<p>Sounds like <code>fractions</code>, no?</p>
<pre><code>&gt;&gt;&gt; import fractions
&gt;&gt;&gt; fractions.Fraction(11, 10) ** 7
Fraction(19487171, 10000000)
&gt;&gt;&gt; fractions.Fraction(13, 11) ** 7
Fraction(62748517, 19487171)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried checking for equality to within a tolerance? E.g.</p>
<pre><code>def approx(left, right, tolerance=1**10-6):
    if left - right &lt; tolerance:
        return True
    else:
        return False
</code></pre>
</div>
<span class="comment-copy">The answer is almost certainly in the decimal module. In what way can't you get it to work? The <code>fractions</code> module might also prove helpful.</span>
<span class="comment-copy">Please read this: <a href="https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html" rel="nofollow noreferrer">docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html</a> . The best way to deal with this is to use the <code>decimal</code> module. How did it not "quite work"?</span>
<span class="comment-copy">I did Decimal('1.1**7') and got an error message.</span>
<span class="comment-copy">Haven't used the decimal module myself, but my guess would be that the syntax is more likely <code>Decimal(1.1)**7</code>. In your code, you try first to calculate <code>1.1**7</code> before passing it into <code>Decimal()</code>.</span>
<span class="comment-copy">@P.Gerber Doesn't work...</span>
<span class="comment-copy">That's the one!</span>
<span class="comment-copy">Yes, upon rereading the question I think this should be the accepted answer.</span>
