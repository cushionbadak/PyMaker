<div class="post-text" itemprop="text">
<p>I want to make a lambda function of x such that takes the maximum between the results of all lambda functions in a list for that given x.</p>
<p>Any ideas on how to make this functional for any size of list?</p>
<pre><code>a = lambda(x): someprocess0(x)
b = lambda(x): someprocess1(x)
c = lambda(x): someprocess2(x)

funcList = [a, b, c]

function = lambda(x): max(funcList[0](x), funcList[1](x), funcList[2](x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> to apply <code>x</code> to each function:</p>
<pre><code>function = lambda x: max(f(x) for f in funcList)
</code></pre>
<p>This avoids keeping all function results in memory in a list, when you only need to track the highest value found so far.</p>
<p>You might be interested in the <a href="https://docs.python.org/3/howto/functional.html" rel="nofollow noreferrer">Python <em>Functional Programming HOWTO</em></a> included in the Python documentation, which teaches about generator expressions and other functional techniques.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using the following function:</p>
<pre><code>def computeResults(functions, value):
    res = []
    for f in functions:
        res.append(f(value))
    return res

function = lambda x: max(computeResults(funcList, x))
</code></pre>
</div>
