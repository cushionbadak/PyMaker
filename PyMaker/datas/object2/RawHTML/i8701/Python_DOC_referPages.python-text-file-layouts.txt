<div class="post-text" itemprop="text">
<p>I want to be able to read and write on a text file in a good well set layout. </p>
<p>Here is what I have so far to read and write on files. Very basic but does the job perfectly. </p>
<p>Writing files:</p>
<pre><code>def writefile():
    file = open("database.txt","w") 
    file.write("Testing.. Testing.. 123.") 
    file.close()
    print("Written on file [database.txt] successful")
</code></pre>
<p>Reading files:</p>
<pre><code>def readfile():
    file = open("database.txt","r") 
    print(file.read())
    file.close()
</code></pre>
<p>However, I need it so that I can handle an ID and a TEAMNAME properly in one file.
I need it in this layout or similar.</p>
<p>This layout in a textfile called database.txt</p>
<pre><code>TEAMNAME: MISFITS, ID: 250
TEAMNAME: BLUES, ID: 170
TEAMNAME: EAZY, ID: 154
TEAMNAME: SUPER, ID: 124
</code></pre>
<p>The program must be able to write in this layout and read in this layout. </p>
<p>Thanks for your help in advance! :) </p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is either a simple .ini file or a proper database file.</p>
<p>A .ini file can look like this:</p>
<pre><code>[Team1]
name=x
foo=1
bar=2

[Team2]
...
</code></pre>
<p>.ini files can be read in Python with the configparser module:</p>
<pre><code>&gt;&gt;&gt; import configparser
&gt;&gt;&gt; config = configparser.ConfigParser()
&gt;&gt;&gt; config.sections()
[]
&gt;&gt;&gt; config.read('example.ini')
['example.ini']
&gt;&gt;&gt; config.sections()
['bitbucket.org', 'topsecret.server.com']
&gt;&gt;&gt; 'bitbucket.org' in config
True
&gt;&gt;&gt; 'bytebong.com' in config
False
&gt;&gt;&gt; config['bitbucket.org']['User']
'hg'
&gt;&gt;&gt; config['DEFAULT']['Compression']
'yes'
&gt;&gt;&gt; topsecret = config['topsecret.server.com']
&gt;&gt;&gt; topsecret['ForwardX11']
'no'
&gt;&gt;&gt; topsecret['Port']
'50022'
&gt;&gt;&gt; for key in config['bitbucket.org']: print(key)
...
</code></pre>
<p>Read more here: <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">https://docs.python.org/3/library/configparser.html</a></p>
<p>More information on database files and how to use them in Python: <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">https://docs.python.org/3/library/sqlite3.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To read in the layout you have posted, you can read the file line by line, and then split each line at the comma. This information can then be stored in a dictionary.</p>
<pre><code>def readfile():
    datalist = []       #create a list to store the dictionaries in

    file = open('database.txt', 'r')
    lines = file.read().split('\n')      #this creates a list containing each line

    for entry in lines:             #scan over all of the lines
        parts = entry.split(',')    #split it at the comma
        dictionary = dict()
        for part in parts:
           dictionary[part.split(':')[0].strip()] = part.split(':')[1].strip()

        datalist.append(dictionary)

    file.close()
    return datalist
</code></pre>
<p><code>datalist</code> is a list containing dictionaries, which contain the information. It can be used like so:</p>
<pre><code>for item in datalist:
    print('Team Name:', item['TEAMNAME'])
    print('Id:', item['ID'])
</code></pre>
<p>To write back to the file you can use this:</p>
<pre><code>def writefile(datalist):
    file = open('database.txt', 'w')
    for entry in datalist:
        output = ''
        for key in entry.keys():
            output += key
            output += ': '
            output += entry[key]
            output += ', '

        file.write(output[:-2] + '\n')      #get rid of the trailing comma
    file.close()
</code></pre>
<p>You can add new entries to the list like this:</p>
<pre><code>data = readfile()     #get the data
data.append({'TEAMNAME': 'COOL', 'ID': '444'})
writefile(data)       #update the file
</code></pre>
</div>
<span class="comment-copy">Welcome to Stackoverflow! <a href="https://stackoverflow.com/help/mcve">How to Ask</a></span>
<span class="comment-copy">Thanks man! Just what I needed. :)</span>
