<div class="post-text" itemprop="text">
<p>I want to sum the costsum attribute for all the instances of an object.</p>
<pre><code>class ActivityCenter:

    def __init__(self, costpool, costsum, costdriver, cdunits):
        self.costpool = costpool
        self.costsum = costsum
        self.costdriver = costdriver
        self.cdunits = cdunits

cp1 = ActivityCenter("Material Handling", 480000, "Pounds", 160000)
cp2 = ActivityCenter("Production orders", 90000, "Num of POs", 200)

# I am looking to add up the costsum values for all instances, similar to:
costsumtotal = (cp1.__dict__.get("costsum")) + (cp2.__dict__.get("costsum"))
</code></pre>
<p>So far I've tried using sum() with comprehension as follows, referring to <a href="https://stackoverflow.com/questions/18626012/adding-up-instance-variables-of-a-class-object">this solution</a>:</p>
<pre><code>B = []
for i in range(10):
    B.append(ActivityCenter())

s = sum(i.costsum for i in B)
</code></pre>
<p>But I am having trouble overcoming the TypeError that I'm missing 4 required positional arguments.</p>
</div>
<div class="post-text" itemprop="text">
<p>To utilize <code>sum</code> built-in function in Python for member variables of objects, you need to make a sequence (e.g, tuple or list) of the member variables of the objects. The following snippet shows how to make a list of objects' member variables. The code you posted omits the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">comprehension expression</a>. I hope it will be helpful :)</p>
<pre><code>class ActivityCenter:

    def __init__(self, costpool, costsum, costdriver, cdunits):
        self.costpool = costpool
        self.costsum = costsum
        self.costdriver = costdriver
        self.cdunits = cdunits

"""
Create some objects

objs = []
for i in range(num_obj):
    objs.append(ActivityCenter(&lt;some value&gt;,&lt;...&gt;,&lt;...&gt;,&lt;...&gt;))

Or use objects to make a list
"""
cp1 = ActivityCenter("Material Handling", 480000, 160000, "Pounds")
cp2 = ActivityCenter("Production orders", 90000, 200, "Num of POs")
cp3 = ActivityCenter("Marketing", 120000, 1000, "Num of events")

objs = [cp1, cp2, cp3]

total_cost = sum([obj.costsum for obj in objs])  # List comprehension
print("Total cost: ", total_cost)
</code></pre>
</div>
<span class="comment-copy">The first code block sends four arguments to the constructor. The second code block sends zero. Are you surprised that one of them is wrong? What avenue do you think you should investigate to fix it?</span>
<span class="comment-copy">You are having the error when initializing new Activity objects. Your class requires you to give 4 parameters <code>costpool, costsum, costdriver, cdunits</code> and you are giving none <code>B.append(ActivityCenter())</code>. Otherwise it should work.</span>
<span class="comment-copy">There's no explanation, so unfortunately it won't be helpful. This isn't a snippet-trading site.</span>
<span class="comment-copy">@TigerhawkT3 Thanks for your advice. I made it more explanatory.</span>
