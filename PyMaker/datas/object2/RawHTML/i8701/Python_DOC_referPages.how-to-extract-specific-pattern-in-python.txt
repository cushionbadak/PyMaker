<div class="post-text" itemprop="text">
<p>I am new to python<br/>
I want to extract specific pattern in python 3.5<br/>
pattern: <b>digit character digit</b><br/>
characters can be <b>* + - / x X</b><br/><br/></p>
<p>how can I do this?</p>
<p>I have tried to use pattern [0-9\*/+-xX\0-9] but it returns either of the characters present in a string.</p>
<p>example: 2*3 or 2x3 or 2+3 or 2-3 should be matched<br/>
but asdXyz should not </p>
</div>
<div class="post-text" itemprop="text">
<p>You may use</p>
<pre><code>[0-9][*+/xX-][0-9]
</code></pre>
<p>Or to match a whole string:</p>
<pre><code>^[0-9][*+/xX-][0-9]$
</code></pre>
<p>In Python 3.x, you may discard the <code>^</code> (start of string anchor) and <code>$</code> (end of string anchor) if you use the pattern in <a href="https://docs.python.org/3/library/re.html#re.fullmatch" rel="nofollow noreferrer"><code>re.fullmatch</code></a> (<a href="https://ideone.com/5CbyIJ" rel="nofollow noreferrer">demo</a>):</p>
<pre><code>if re.fullmatch(r'[0-9][*+/xX-][0-9]', '5+5'):
    print('5+5 string found!')
if re.fullmatch(r'[0-9][*+/xX-][0-9]', '5+56'):
    print('5+56 string found!')
# =&gt; 5+5 string found!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><em>re.match()</em></a> function will limit the search to the start and end of the string to prevent false positives.  </p>
<ul>
<li>A digit can be matched with <code>\d</code>. </li>
<li>The operator can be matched with <code>[x/+\-]</code> which matches exactly one of <code>x</code>, <code>/</code>, <code>+</code>, or <code>-</code> (which is escaped because it is a special regex character). </li>
<li>The last digit can be matched with <code>\d</code>.</li>
<li>Putting parentheses around each part allows the parts to extracted as separate subgroups.</li>
</ul>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; re.match(r'(\d)([x/+\-])(\d)', '3/4').groups()
('3', '/', '4')
</code></pre>
</div>
<span class="comment-copy">please provide some valid examples.</span>
<span class="comment-copy">I think you can just do <code>[0-9][\*+-/xX][0-9]</code>.</span>
<span class="comment-copy">regex = r"[0-9][*+/xX-][0-9]" this worked. let me do some testing. thanks a lot :)</span>
<span class="comment-copy">Ok, I see, I removed the unnecessary answer part. BTW, your pattern just matched a single char from the defined set/ranges. Depending on what method you used, there could be different matching scenarios, but the problem was that you put everything into a single character class.</span>
