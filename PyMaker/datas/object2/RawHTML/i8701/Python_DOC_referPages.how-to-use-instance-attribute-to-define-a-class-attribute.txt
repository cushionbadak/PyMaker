<div class="post-text" itemprop="text">
<p>I'm trying to use the name in my <strong>init</strong> for my class attribute, <code>attr</code> but it seems that's impossible.
here's the code:</p>
<pre><code>class B:

    def __init__(self, val):
        self.val = val

    def __get__(self, instance, owner):
        return owner.valEditNew(self.val)

    def __set__(self, instance, value):
        return


class A:

    def __init__(self, name = 'def_name'):
        self.name = name

    attr = B('G120')

    def valEditNew(val):
        val += ' @edited'
        return val

a = A('JJ')
print(a.attr)
</code></pre>
<p>that's it if i use self.name or name or ... in place of <code>G120</code>&gt;&gt;&gt;
<code>builtins.NameError: name 'self' is not defined</code>
if that's not possible, can you show me the way?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to access attribute of the instance that contains the descriptor object, use <code>instance</code> parameter of <code>__get__</code> / <code>__set__</code>:</p>
<pre><code>class B:

    def __get__(self, instance, owner):
        return instance.valEditNew(instance.name)  # &lt;---

    def __set__(self, instance, value):
        return


class A:

    attr = B()

    def __init__(self, name='def_name'):
        self.name = name

    def valEditNew(self, val):
        val += ' @edited'
        return val


a = A('JJ')
print(a.attr)
# prints =&gt; JJ @edited
</code></pre>
</div>
<span class="comment-copy">I know that I'm overriding <b>get</b> and <b>set</b> methods here... where can I find the original ones ?</span>
<span class="comment-copy">@shiyonsufa, I recommend you to read <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow noreferrer">docs.python.org/3/howto/descriptor.html</a> or <a href="https://docs.python.org/3/reference/datamodel.html#descriptors" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#descriptors</a></span>
<span class="comment-copy">@shiyonsufa, B is not subclass of any class, but <code>object</code> which does not have <code>__get__</code>, <code>__set__</code>; no overriding is done.  Try <code>object.__get__</code> in interactive shell.</span>
