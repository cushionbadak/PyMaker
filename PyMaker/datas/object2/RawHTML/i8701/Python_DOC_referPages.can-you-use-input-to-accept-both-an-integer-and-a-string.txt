<div class="post-text" itemprop="text">
<p>I have a small script I have been working on for practice with Python. I am having trouble getting my input to accept a number for an if statement and also accept string as lower case.</p>
<p>I want to tell my script for any input if the user types '99' then close the program. So far it works where I have <code>int(input())</code>, but it won't work where I have <code>input()</code>. What am I doing wrong or is it not something I can do?</p>
<p>Right now my <code>if</code> statement looks like:</p>
<pre><code>if choice1 == 99:
    break
</code></pre>
<p>Should I just make 99 into a string by quoting it?</p>
<p>Maybe something like this:</p>
<pre><code>if choice1 == "99":
    break
</code></pre>
<p>Here is the script:</p>
<pre><code>global flip
flip = True
global prun
prun = False

def note_finder(word):
    prun = True
    while prun == True:
        print ('\n','\n','Type one of the following keywords: ','\n','\n', keywords,)
        choice2 = input('--&gt; ').lower()
        if choice2 == 'exit':
            print ('Exiting Function')
            prun = False
            start_over(input)
        elif choice2 == 99:   # this is where the scrip doesnt work
            break             # for some reason it skips this elif
        elif choice2 in notes:
            print (notes[choice2],'\n')
        else:
            print ('\n',"Not a Keyword",'\n')

def start_over(word):
    flip = True
    while flip == True:
        print ('# Type one of the following options:\n# 1 \n# Type "99" to exit the program')
        choice1 = int(input('--&gt; '))
        if choice1 == 99:
            break
        elif choice1 &lt; 1 or choice1 &gt; 1:
            print ("Not an option")
        else:
            flip = False
            note_finder(input)


while flip == True:
    print ('# Type one of the following options:\n# 1 \n# Type "99" to exit the program')
    choice1 = int(input('--&gt; '))
    if choice1 == 99:
        break
    elif choice1 &lt; 1 or choice1 &gt; 1:
        print ("Not an option")
    else:
        flip = False
        note_finder(input)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So <code>input()</code> always returns a string. You can see the docs here:</p>
<p><a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#input</a></p>
<p>What you could do is something like this:</p>
<pre><code>choice2 = input('--&gt; ')

if choice2.isnumeric() and (int(choice2) == 99):
    break
</code></pre>
<p>this avoids you to type check and catch errors that aren't important.</p>
<p>see below for how isnumeric works with different numeric types:</p>
<pre><code>In [12]: a='1'

In [13]: a.isnumeric()
Out[13]: True

In [14]: a='1.0'

In [15]: a.isnumeric()
Out[15]: False

In [16]: a='a'

In [17]: a.isnumeric()
Out[17]: False
</code></pre>
</div>
<span class="comment-copy">If you don't specify a type then it will default to string so numbers can also be accepted.</span>
<span class="comment-copy">EDIT: my last comment half answered itself. All <code>input()</code> is a string until you convert it. Re-reading your question, there is nothing fundamentally wrong with your approach, but you're going to need to shore it up with <code>try</code>/<code>except</code> etc. for invalid inputs that can't be converted to an <code>int</code></span>
<span class="comment-copy">You could always check what data type it is before the if statement using 'isinstance(var, type)' or 'type(var) == int'</span>
<span class="comment-copy">I added some notes in the scrip to show where the problem is. For some reason the scrip skips the elif choice2 == 99: statement</span>
<span class="comment-copy">In that case, then yes, I'd probably use <code>elif choice2 == '99':</code> purely because your code seems set up to expect <code>"exit"</code> first, and any string will throw an error for <code>elif int(choice2) == 99:</code>. It's perhaps not the cleanest approach</span>
<span class="comment-copy">You just explained in your answer that the result of <code>input</code> is a string. Why do you suggest do compare it to a number then?</span>
<span class="comment-copy">@mkrieger1 typo, good catch. made the change above.</span>
