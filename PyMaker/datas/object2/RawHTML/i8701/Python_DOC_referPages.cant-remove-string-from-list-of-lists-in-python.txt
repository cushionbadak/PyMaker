<div class="post-text" itemprop="text">
<p>Struggling big time with this. The user makes a guess and i'm trying to match to the list of lists with a HIT or a MISS.  I also am trying to remove the string from the list if there is a HIT.  </p>
<pre><code>player_ships = [['a1','b1','c1'],['a2','a3']]
print(player_ships)
guess = input("guess")
while any(guess in ship for ship in player_ships):
    print("HIT")
    for ship in player_ships:
        ship.remove(guess)
else:
    print("Miss!")
</code></pre>
<p>If i enter a valid value from the list for a guess --example: a1--i'm getting a traceback error to the ship.remove(guess) line with a "ValueError: list.remove(x): x not in list error"  Any help is appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python <code>list</code> is a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=list#mutable-sequence-types" rel="nofollow noreferrer">Mutable Sequence Type</a>, and its <code>remove</code> method is documented there. See footnote 3, which states: <em>"remove raises ValueError when x is not found in s."</em></p>
<p>You want to remove the guess from the ship-list that contains the guess. You can either <strong>ask permission</strong> by first checking for containment (not recommended):</p>
<pre><code>for ship in player_ships:
    if guess in ship:
        ship.remove(guess)
</code></pre>
<p>Or, you can <strong>beg forgiveness</strong> by catching the exception. Unlike many other languages, Python's exceptions are considered <em>cheap,</em> and therefore you are encouraged to rely on trying something, catching the exception, and moving on:</p>
<pre><code>for ship in player_ships:
    try:
        ship.remove(guess)
    except ValueError:
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't <code>remove</code> an element from a list if it's not there. Otherwise Python will throw an exception, as you see.</p>
<p>Say <code>guess = "a1"</code>.</p>
<p>Your code iterates over <code>player_ships</code>.</p>
<p>The first element of which is <code>['a1','b1','c1']</code>. You can remove <code>a1</code> from this without an error because it's there.</p>
<p>But the second element in the loop is <code>['a2','a3']</code>. This does not contain <code>a1</code> and so you get the error.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting this error because in the case of "HIT", you are trying to remove <code>guess</code> from the all the sub-lists of <code>player_ships</code>. But it is present in only one of the sub-list.</p>
<p>You should make a <code>if</code> check to verify <code>guess</code> is within the <code>ship</code> before you remove it.</p>
<p>Easier way to achieve this is to flatten <code>player_ships</code>. Even better to store it as a <code>set</code>. For example:</p>
<pre><code>&gt;&gt;&gt; player_ships = [['a1','b1','c1'],['a2','a3']]
&gt;&gt;&gt; flatten_set = set(ship for ships in player_ships for ship in ships)
&gt;&gt;&gt; flatten_set
set(['a1', 'c1', 'a2', 'a3', 'b1'])
</code></pre>
<p>Then, rest of your code logic could be written as:</p>
<pre><code>guess = input("guess")

while guess in flatten_set:
    print("HIT")
    flatten_set.remove(guess)
else:
    print("Miss!")
</code></pre>
</div>
<span class="comment-copy">well Mr. Hastings, once again you've come to my rescue.  i need to get my head around more about why this is actually working but thank you for your help here.</span>
<span class="comment-copy">I think the important part is that there are several lists, one per ship. When you do a remove on a list that <i>doesn't</i> contain a match, it raises. You need to either avoid that, or eat the exception.</span>
