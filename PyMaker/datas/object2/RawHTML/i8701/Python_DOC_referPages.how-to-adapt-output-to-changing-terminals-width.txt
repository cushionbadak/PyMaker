<div class="post-text" itemprop="text">
<p>I'm trying to write a function that would produce a simple widget when run in Python's console. This widget should be terminal-size-aware. After displaying the widget I will wait for user's keyboard input and adjust the content according to what the types. The difficulty that I have right now is how to make that widget adjust its display <strong>when the user resizes the terminal</strong>. Here's a simplified version of the code that I have right now:</p>
<pre><code>def test():
    import blessed
    import signal

    def draw():
        n = term.width - 3
        print("+" + "=" * n + "+" + term.clear_eol)
        print("|" + " " * (n//2 - 2) + 
              "TEST" + " " * (n - n//2 - 2) + "|" + term.clear_eol)
        print("+" + "=" * n + "+" + term.clear_eol)

    def redraw(_, __):
        print(term.move_up * 3, end="")
        draw()

    term = blessed.Terminal()
    draw()
    signal.signal(signal.SIGWINCH, redraw)
    with term.cbreak():
        term.inkey()
</code></pre>
<p>This works fine if the user expands the terminal, or if he shrinks the terminal but very slowly (1 character at a time). However reducing the terminal width quickly will cause long lines to wrap, corrupting the output. Is there a way to address this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>The question refers to something like <a href="https://pypi.python.org/pypi/blessed/1.9.1" rel="nofollow noreferrer"><em>blessed</em> 1.9.1</a>, which asserts that it is a simplified wrapper to <a href="https://docs.python.org/3/library/curses.html#height-and-width" rel="nofollow noreferrer"><strong>curses</strong></a>.   Since Python curses provides support for repainting on <code>SIGWINCH</code>, the assertion would carry forward to this package.  Actually the features described are for <strong>terminfo</strong>.  curses does a lot more than that page shows.</p>
<p>To handle <code>SIGWINCH</code> using <em>blessed</em>, you'll have to catch that in your script and trigger a repaint of the screen.  The example shown in <a href="https://pypi.python.org/pypi/blessed/1.9.1" rel="nofollow noreferrer"><em>Height and Width</em></a> should be enough to get started.</p>
<p>Or you could use curses, where you'd do the repaint after reading a <code>KEY_RESIZE</code> from <code>getch</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/566746/how-to-get-console-window-width-in-python">How to get console window width in python</a></span>
<span class="comment-copy">Thanks Thomas, however that does not help me to solve the problem. I tried <code>curses</code> at first, but the problem is that it puts terminal into the "fullscreen" mode (similar to <code>man</code> command), whereas I want my output to appear alongside all other output in the terminal. The <code>blessed</code> package does just that. And the only remaining problem is how to properly prevent line wraps when terminal is shrinking.</span>
