<div class="post-text" itemprop="text">
<p>I need to crypt/decrypt using a <code>lambda</code> and I got some problem with it. My function <code>create_rot13()</code> must not receive an argument, only my lambda should.</p>
<p>This my current code so far, not using any <code>lambda</code> as I couldn't find one (after several days of looking around). How to put so lines of code into it.</p>
<pre><code>def create_rot13(message):
    crypted = ""
    letters = "abcdefghijklmnopqrstuvwxyz"

    for car in message:
        if car in letters:
            num = letters.find(car)
            num = num + 13
            if num &gt;= len(letters):
                num = num - len(letters)
            crypted = crypted + letters[num]
    else:
        crypted = crypted + car

    crypted = crypted[:-1]
    return crypted

print(create_rot13("jbeyq"))
print(create_rot13("world"))
</code></pre>
<p>Anyone have tips or something to help me out to find the solution to my problem?</p>
<p>It should look sort of like that, except this 1 change only a number:</p>
<pre><code>def create_rot13():
 my_fonction = lambda x : x + 13
 return my_fonction

coding = create_rot13()
print(coding(4))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple one which (ab)uses the <a href="https://docs.python.org/3/library/codecs.html#codecs.encode" rel="nofollow noreferrer"><code>codecs</code> module</a> (and a lambda).  Note that you need the codecs module here instead of just a normal call to <code>.encode('rot13')</code> as you're doing a text -&gt; text encoding.</p>
<pre><code>import codecs
rot13 = lambda s: codecs.encode(s, 'rot13')
</code></pre>
<p>Here's some sample usage:</p>
<pre><code>&gt;&gt;&gt; rot13('foo')
'sbb'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to do it with a lambda, then you need to capture the <code>letters</code> variable with the lambda and also use <code>map</code>. You want something like this:</p>
<pre><code>def encode_rot13(message):
    offset = ord('a')
    result = map(lambda c: chr((ord(c) + 13 - offset) % 26 + offset), message)
    return "".join(result)
</code></pre>
<p>I use <code>chr</code> and <code>ord</code> so we don't need to keep around a string with all letters. The idea here is that we are getting an integer that represents the codepoint for any given character, so we can do some math instead of using <code>find</code>.</p>
</div>
<span class="comment-copy">Why do you need a lambda for this? Python's lambda is only really useful when you're passing a function as an argument to some other function (otherwise you could just use a nested <code>def</code>). It's also not clear why you need to write a function factory. That would make sense if the function returned by the factory was different each time, but ROT13 is ROT13.</span>
<span class="comment-copy">It for a homework and its how we are forcing to do it haha, else I would do it in another ways for sure.. kinda why I ask for tip to find out a solution instead of the full solution haha. and I also use this code (with some modifications) for others encryption method</span>
