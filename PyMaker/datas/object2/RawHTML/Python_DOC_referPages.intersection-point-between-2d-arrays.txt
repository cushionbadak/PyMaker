<div class="post-text" itemprop="text">
<p>I have two arrays as follows:</p>
<pre><code>X1 = np.array([[x11, x12, x13 ... x1n],[y11, y12, y13, ... , y1n]])

X2 = np.array([[x21, x22, x23 ... x2n],[y21, y22, y23, ... , y2n]])
</code></pre>
<p>I would like to basically conceptualize these as piecewise linear functions and come up with an intersection point <code>intercept</code>:</p>
<pre><code>intercept = (x_int, y_int)
</code></pre>
<p>Every search I do regarding array intersection gives entirely unrelated results, since the intersection of two arrays also has the meaning of finding elements common to both arrays (rather than an intersection point).</p>
<p>I also found this <a href="http://kitchingroup.cheme.cmu.edu/blog/2013/07/04/Estimating-where-two-functions-intersect-using-data/" rel="nofollow noreferrer">interesting post</a>, but it seems too complex for my application. If I had to implement this, I think I could since it would involve repeated calculations of line equations and intersections of points between line equations. However I'm first trying to check if some robust implementation already exists in a well-tested library, since my poor attempt might take hours/days to achieve and then not necessarily be applicable for any dataset.</p>
<p>Has this already been implemented in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Step 1: work with the union of x1 and x2.<br/>
Step 2: linearly interpolate to find y1 and y2 for each point in the union.<br/>
Step 3: find where y1 - y2 changes sign.<br/>
Step 4: solve the linear equations for the intersection.  </p>
<pre class="lang-py prettyprint-override"><code>import numpy as np

def intersect_piecewise(X1, X2):
    x = np.union1d(X1[0], X2[0])
    y1 = np.interp(x, X1[0], X1[1])
    y2 = np.interp(x, X2[0], X2[1])
    dy = y1 - y2

    ind = (dy[:-1] * dy[1:] &lt; 0).nonzero()[0]
    x1, x2 = x[ind], x[ind+1]
    dy1, dy2 = dy[ind], dy[ind+1]
    y11, y12 = y1[ind], y1[ind+1]
    y21, y22 = y2[ind], y2[ind+1]

    x_int = x1 - (x2 - x1) * dy1 / (dy2 - dy1)
    y_int = y11 + (y12 - y11) * (x_int - x1) / (x2 - x1)
    return x_int, y_int
</code></pre>
<p>the equations you need to solve are<br/>
(x_int - x1) / (x2 - x1) = (0 - dy1) / (dy2 - dy1)<br/>
= (y_int - y11) / (y12 - y11) = (y_int - y21) / (y22 - y21)</p>
<p><strong>Edit:</strong> Let's try it out</p>
<pre><code>import matplotlib.pyplot as plt

x = np.linspace(-2, 2, 17)
X1 = np.stack((x[::2], x[::2]**2))
X2 = np.stack((x[1::2], 4 - x[1::2]**2))
x_int, y_int = intersect_piecewise(X1, X2)

plt.plot(X1[0], X1[1], 'bo-', X2[0], X2[1], 'bo-', x_int, y_int, 'rs')
</code></pre>
<p><a href="https://i.stack.imgur.com/gEvq5.png" rel="nofollow noreferrer"><img alt="Plot of intersection" src="https://i.stack.imgur.com/gEvq5.png"/></a></p>
</div>
<span class="comment-copy">If you can convert your Numpy arrays to functions, maybe this is useful? <a href="https://scipy-cookbook.readthedocs.io/items/Intersection.html" rel="nofollow noreferrer">scipy-cookbook.readthedocs.io/items/Intersection.html</a></span>
<span class="comment-copy">This post is also helpful <a href="https://stackoverflow.com/questions/43016174/finding-the-intersection-point-between-line-and-piecewise-linear-curves" title="finding the intersection point between line and piecewise linear curves">stackoverflow.com/questions/43016174/â€¦</a></span>
<span class="comment-copy">Your phrasing seems to suggest the existence of a single intersection point; but that cannot be assumed for the general case. As for strategies to tackle this, it really depends on the expected size of the arrays. If they are small or assumptions can be made, such as x always sorted and increasing, simple solutions may apply. But if these are arbitrary piecewise curves, a separate broad-phase collision algorithm to avoid O(n^2) performance is almost mandatory.</span>
<span class="comment-copy">It doesnt have to be one intersection point. It can be an array of intersection points</span>
<span class="comment-copy">This sssumes there is only 1 intersection point?</span>
<span class="comment-copy">I think it will work with multiple intersections. If <code>ind</code> is an array, everything else will be too. I guess I should try it out.</span>
