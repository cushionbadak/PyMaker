<div class="post-text" itemprop="text">
<p>I have a word docx file that I would like to print the words that are in <strong>Bold</strong> looking through the document in xml format it seems the words I'm looking to print have the following attribute.</p>
<pre><code>&lt;w:r w:rsidRPr="00510F21"&gt;
  &lt;w:rPr&gt;&lt;w:b/&gt;
     &lt;w:noProof/&gt;
     &lt;w:sz w:val="22"/&gt;
     &lt;w:szCs w:val="22"/&gt;
  &lt;/w:rPr&gt;
  &lt;w:t&gt;Print this Sentence&lt;/w:t&gt;
&lt;/w:r&gt;
</code></pre>
<p>Specifically the <code>w:rsidRPr="00510F21"</code> attribute which specifies that the text is bold.  Below is more of the XML document give a better idea of the structure.</p>
<pre><code>&lt;w:p w14:paraId="64E19BC3" w14:textId="4D8C930F" w:rsidR="00FF6AD1" w:rsidRDefault="00FF6AD1" w:rsidP="00C11B48"&gt;
&lt;w:pPr&gt;
   &lt;w:ind w:left="360" w:hanging="360"/&gt;
   &lt;w:jc w:val="both"/&gt;
   &lt;w:rPr&gt;
       &lt;w:sz w:val="22"/&gt;
       &lt;w:szCs w:val="22"/&gt;
   &lt;/w:rPr&gt;
 &lt;/w:pPr&gt;
 &lt;w:r&gt;
    &lt;w:rPr&gt;&lt;w:b/&gt;
       &lt;w:noProof/&gt;&lt;w:sz w:val="22"/&gt;
       &lt;w:szCs w:val="22"/&gt;
    &lt;/w:rPr&gt;&lt;w:t xml:space="preserve"&gt;Some text&lt;/w:t&gt;
 &lt;/w:r&gt;
 &lt;w:r w:rsidRPr="0009466D"&gt;
     &lt;w:rPr&gt;&lt;w:i/&gt;&lt;w:noProof/&gt;
          &lt;w:sz w:val="22"/&gt;&lt;w:szCs w:val="22"/&gt;
     &lt;/w:rPr&gt;
     &lt;w:t&gt;For example&lt;/w:t&gt;
 &lt;/w:r&gt;
 &lt;w:r&gt;
     &lt;w:rPr&gt;
        &lt;w:noProof/&gt;
        &lt;w:sz w:val="22"/&gt;
        &lt;w:szCs w:val="22"/&gt;
     &lt;/w:rPr&gt;&lt;w:t xml:space="preserve"&gt;
     &lt;/w:t&gt;
 &lt;/w:r&gt;
 &lt;w:r w:rsidRPr="00510F21"&gt;
     &lt;w:rPr&gt;
         &lt;w:b/&gt;
         &lt;w:noProof/&gt;
         &lt;w:sz w:val="22"/&gt;
         &lt;w:szCs w:val="22"/&gt;
     &lt;/w:rPr&gt;
     &lt;w:t&gt;Print this stuff&lt;/w:t&gt;
 &lt;/w:r&gt;
</code></pre>
<p>After doing some research and trying to do this with the Python-docx library I've decided to try using <code>lxml</code>.  I was getting an error about the namespace and tried to add that namespace but it's returning an empty set.  Below is some of the namespace stuff from the document.</p>
<pre><code>&lt;w:document
xmlns:wpc="http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas" 
xmlns:mo="http://schemas.microsoft.com/office/mac/office/2008/main" 
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
xmlns:mv="urn:schemas-microsoft-com:mac:vml" 
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" 
xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"
xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:wp14="http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing"  xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing" 
xmlns:w10="urn:schemas-microsoft-com:office:word" 
xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"
xmlns:w14="http://schemas.microsoft.com/office/word/2010/wordml" 
xmlns:w15="http://schemas.microsoft.com/office/word/2012/wordml"
xmlns:wpg="http://schemas.microsoft.com/office/word/2010/wordprocessingGroup"            xmlns:wpi="http://schemas.microsoft.com/office/word/2010/wordprocessingInk"
xmlns:wne="http://schemas.microsoft.com/office/word/2006/wordml" 
xmlns:wps="http://schemas.microsoft.com/office/word/2010/wordprocessingShape"
mc:Ignorable="w14 w15 wp14"&gt;
</code></pre>
<p>Below is the code I'm using.  Again I'd like to print if the attribute is <code>w:rsidRPr="00510F21"</code>.</p>
<pre><code>from lxml import etree
root = etree.parse("document.xml")

namespaces = {'w':'http://schemas.openxmlformats.org/wordprocessingml/2006/main'}

wr_roots = root.findall('w:r', namespaces)
print wr_roots # prints empty set

for atype in wr_roots:
   if w:rsidRPr == '00510F21':
       print(atype.get('w:t'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to find all the bold text you can use <code>findall()</code> with an <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xpath-support" rel="nofollow"><code>xpath</code></a> expression:</p>
<pre><code>from lxml import etree

namespaces = {'w':'http://schemas.openxmlformats.org/wordprocessingml/2006/main'}

root = etree.parse('document.xml').getroot()
for e in root.findall('.//w:r/w:rPr/w:b/../../w:t', namespaces):
    print(e.text)
</code></pre>
<p>Instead of looking for <code>w:r</code> nodes with <code>w:rsidRPr="00510F21"</code> as an attribute (which I am not convinced denotes bolded text), look for run nodes (<code>w:r</code>) with <code>w:b</code> in the run properties tag (<code>w:rPr</code>), and then access the text tag (<code>w:t</code>) within. The <code>w:b</code> tag is the bold property as <a href="http://officeopenxml.com/WPtextFormatting.php" rel="nofollow">documented here</a>.</p>
<p>The xpath expression can be simplified to <code>'.//w:b/../../w:t'</code> although this is less rigorous and might result in false matches.</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider lxml's <code>xpath()</code> method. Recall <code>.get()</code> retrieves attributes and <code>.find()</code> retrieves nodes. And because the XML has namespaces in attributes, you will need to prefix the URI in the <code>.get()</code> call. Finally, use the <code>.nsmap</code> object to retrieve all namespaces at the root of the document.</p>
<pre><code>from lxml import etree
doc = etree.parse("document.xml")
root = doc.getroot()

for wr_roots in doc.xpath('//w:r', namespaces=root.nsmap):
    if wr_roots.get('{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rsidRPr')\
       == '00510F21':
        print(wr_roots.find('w:t', namespaces=root.nsmap).text)

# Print this stuff
</code></pre>
</div>
<span class="comment-copy">Why not use python-docx?</span>
