<div class="post-text" itemprop="text">
<p>I am just starting out learning Python and for my project we need to take a file and create a table listing the team name in one column and wins in another column with header and have in alphabetical order and have to use set method. As a side note the class I took was a complete disaster and we never even covered this information, so I apologize ahead of time for my ignorance. Thank you.</p>
<p>I don't believe this is in set method.</p>
<pre><code>inputFile = open('WorldSeriesWinners.txt', 'r')
lineList = inputFile.readlines()
for line in sorted(lineList):
    sorted (inputFile)
    print(line.rstrip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So this probably isn't the fastest or the pretiest solution to this particular problem but I usually do something like this.</p>
<pre><code>def ReadCsv(fileToRead,colDelim = ",", rowDelim = "\n"):
    fileHandle = open(fileToRead,"r")
    fileContent = fileHandle.read()
    fileLines = fileContent.split(rowDelim)
    fileAsListOfLists = [k.split(colDelim) for k in fileLines]
    return fileAsListOfLists
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>so you've got a file like this:</p>
<pre><code>Yankees
Redsox
Yankees
Cardinals
Dodgers
Redsox
Yankees
</code></pre>
<p>and you need this:</p>
<pre><code>Yankees   3
Redsox    2
Dodgers   1
Cardinals 1
</code></pre>
<p>firstly, I still don't understand how you'd use <code>set</code> here. you want to count things, but items in a <code>set</code> are unique, so it's useless for counting how many times an item appears. You're probably meant to use a <code>dict</code>. note that while you are reading the file, it's useless to sort it, since a <code>dict</code> cannot be sorted:</p>
<pre><code>winners = {}
for team_name in open('WorldSeriesWinners.txt'):
    team_name = team_name.strip() # get rid of the newlines
    winners[team_name] = winners.get(team_name, 0) + 1
</code></pre>
<p><code>team_name</code> is the key, and <code>winners.get(team_name, 0)</code> will return the value for that team, unless it hasn't been added yet, in which case it will return <code>0</code>. you add <code>1</code> to the value that was already there, and put the new value back in <code>winners</code>. after doing that for every line, you'll have a dict like <code>{"Yankees":3, "Dodgers":1, ... }</code>. Alternately, you could use a module that does the counting for you.</p>
<p><a href="https://docs.python.org/3.3/library/stdtypes.html#dict.get" rel="nofollow">https://docs.python.org/3.3/library/stdtypes.html#dict.get</a>
<a href="https://docs.python.org/3.3/library/collections.html#collections.Counter" rel="nofollow">https://docs.python.org/3.3/library/collections.html#collections.Counter</a></p>
<p>this is how you can solve the first part of your problem. The second part, you'll need to turn it back into a list that can be sorted. <code>winners.items()</code> will give you a list like <code>[("Yankees", 3), ("Dodgers", 1) ... ]</code></p>
<p><a href="https://docs.python.org/3.3/library/stdtypes.html#dict.items" rel="nofollow">https://docs.python.org/3.3/library/stdtypes.html#dict.items</a></p>
<p><code>sorted</code> can take a <code>key</code> argument that tells it what to look at on each item to decide where it goes, which is how you can tell it to look at the number of wins.</p>
<p><a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow">https://docs.python.org/3/library/functions.html#sorted</a></p>
<p>to print it out in columns, take a look at <code>format</code>, which will allow you make sure each column has the same amount of space</p>
<p><a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow">https://docs.python.org/3/library/functions.html#format</a></p>
<p>I think you'll find that the examples in the linked documentation will be a good starting point for the remaining parts of your problem.</p>
</div>
<span class="comment-copy">What do you think this code is doing? <code>sorted(inputFile)</code> won't sort anything (because you already exhausted the input file), and even if it did, it wouldn't do anything useful, because you didn't assign the return value anywhere to use it... Seems like <code>with open('...') as f: sys.stdout.writelines(sorted(f))</code> would sort as you want (since you're sorting by the first field), but file format concerns might affect whether that works.</span>
<span class="comment-copy">Can you post more information as to your requirements and the format of the file?  At first glance, I assume that each line contains a team name, and you'll need to count the number of times each team appears, then, using that, you'll need to output the team name and the number of wins, sorted by the number of wins. I don't want to assume though, so please clarify if you can.</span>
<span class="comment-copy">Also, do you really mean 3. <i>6</i>? 3.6 is still in beta...</span>
<span class="comment-copy">also,  I'm not sure what <code>set</code> method you're referring to... doesn't sound like <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#sets</a> would be useful here.</span>
<span class="comment-copy">The code as it is written does print out the list in alphabetical order that is all it does, and yes I'm sure 3.6.   Your assumption is correct it is just a text file that lists the teams individually and the output should be by team with their number of wins. Now that I read the instructions for the umpteenth time it just referring to methods.</span>
