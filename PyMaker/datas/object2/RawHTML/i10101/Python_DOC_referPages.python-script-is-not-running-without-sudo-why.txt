<div class="post-text" itemprop="text">
<p>This is my python script which downloads the most recent image from my S3 bucket. When I run this script using <code>sudo python script.py</code> it does as expected, 
but not when I run it as <code>python script.py</code>. In this case, the script finishes cleanly without exceptions or process lockup, but there is no image file.</p>
<p>Why does this happen? Is there something I could do at boto's library end or any other thing?</p>
<pre><code>import boto
import logging


def s3_download():
    bucket_name = 'cloudadic'
    conn = boto.connect_s3('XXXXXX', 'YYYYYYY')
    bucket = conn.get_bucket(bucket_name)

    for key in bucket.list('ocr/uploads'):
        try:
            l = [(k.last_modified, k) for k in bucket]
            key = sorted(l, cmp=lambda x, y: cmp(x[0], y[0]))[-1][1]
            res = key.get_contents_to_filename(key.name)
        except:
            logging.info(key.name + ":" + "FAILED")

if __name__ == "__main__":
     s3_download()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @Nearoo in comments had suggested to use <code>except Exception as inst</code> to catch exceptions. </p>
<p>catching the exception like this </p>
<pre><code>except Exception as inst:
            print(type(inst))
            print(inst.args)
            print(inst)
</code></pre>
<p>Should fetch you this error if the script is compiled using python 3x
If you would compile your script using python 2.7, this error wouldn't come.</p>
<p>Probably you might be having multiple versions of python on your system,
which should be the reason for your difference in behavior of <code>python script.py</code> and <code>sudo python script.py</code> and for the same @mootmoot answer suggests to use <code>virtualenv</code></p>
<p><code>'cmp' is an invalid keyword argument for this function</code>. </p>
<p>Now if you would have googled this error, you should find that <code>cmp</code> has been deprecated in python 3x and suggestions would be to use <code>key</code> instead.</p>
<p>add these imports</p>
<pre><code>import functools
from functools import cmp_to_key
</code></pre>
<p>and replace 
with these</p>
<pre><code>key2 = sorted(l, key = cmp_to_key(lambda x,y: (x[0] &gt; y[0]) - (x[0] &lt; y[0])))[-1][1]
res = key2.get_contents_to_filename(key2.name)
</code></pre>
<p><code>(x[0] &gt; y[0]) - (x[0] &lt; y[0])</code> is an alternate to <code>cmp(x[0], y[0])</code></p>
<p><code>cmp</code> is replaced by <code>key</code> and <code>cmp_to_key</code> is used from functools <code>lib</code> </p>
<p><a href="https://stackoverflow.com/questions/20202418/why-is-the-cmp-parameter-removed-from-sort-sorted-in-python3-0">Check this out</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Presumably the problem is that you try to store things somewhere your user doesn't have permission to. The second issue is that your script is hiding the error. The <code>except</code> block completely ignores what sort of exceptions occur (and of course consumes them so you never see them), and uses <code>logging.info</code> which by default doesn't show; that should probably be at least a warning and would be better if it showed something about what went wrong. By the way, odds are you shouldn't be posting S3 authentication keys here. </p>
</div>
<div class="post-text" itemprop="text">
<p>Always install <a href="https://virtualenv.pypa.io/en/stable/" rel="nofollow">virtual environment</a> before you start development in python. </p>
<p>The issue you face is typical python newbie problem : use <code>sudo</code> to install all the pypi package. </p>
<p>When you do <code>sudo pip install boto3</code>, it will install pypi package to system workspace and only accessible by <code>sudo</code>. In such case, <code>sudo python script.py</code> will works, because it has the rights to access the package.</p>
<p>To resolve this issues and isolation of development environment (so you don't pollute different project with differnt pypi package), python developer will install python virtual environment (from above link), then use <code>mkvirtualenv</code> to create your project workspace, run <code>pip install</code> and <code>python setup.py install</code> to install required package to the environment, then you can run python without the <code>sudo python</code>.</p>
<p>Python virtualenv is also deployed inside production environment for the same reason.</p>
<p><strong>Important Note</strong> : avoid boto and boto2. AWS no longer support them nor with bug fixing(AWS is not officially support boto2, use it at your own risk). Switch to boto3.  </p>
<hr/>
<p>For the exceptional handling issues, @Yann Vernier has mentioned it. And exception error will not logged by <code>logging.info</code>.  You may try with <code>logging.debug</code> or simple use <code>raise</code> to raise the actual exception error.</p>
</div>
<span class="comment-copy">What is "doesn't run" supposed to mean? And why do I even have to keep asking that?</span>
<span class="comment-copy">Do you get an exception? Do you get a zero-length file? Does the process lock up? WHAT DOES IT MEAN?</span>
<span class="comment-copy">@Guru Update your question with this information.</span>
<span class="comment-copy">Have you considered getting rid of the garbage exception "handling" so you can see what's actually happening?</span>
<span class="comment-copy">Also, you're definitely not just running <code>python script.py</code> on <i>this</i> script since it just defines a function without calling it. Please post a minimal, complete and verifiable example.</span>
<span class="comment-copy">Thanks man it worked. Actually I was working on openCV lib so installed Anaconda which installed different version python</span>
<span class="comment-copy">@Guru : In such case, you need to install <code>conda</code> for Anaconda to enable your  virtual environment.   Because many package under <code>conda install</code> is not up to date, it end up no clear advatanges using <code>conda</code> vs <code>virtualenv</code> for those who not using Anaconda.   <a href="http://kylepurdon.com/blog/using-continuum-analytics-conda-as-a-replacement-for-virtualenv-pyenv-and-more.html" rel="nofollow noreferrer">kylepurdon.com/blog/â€¦</a></span>
<span class="comment-copy">yes I am doing that</span>
<span class="comment-copy">that should not be directory permission issue, I have already done <code>chmod -R 777</code> plus these are not actual S3 authentication key for exception handling I am triying, but how do I know which exception is occuring? I</span>
<span class="comment-copy">If you don't catch the exception it will abort the script and produce a stack trace. If you want to keep running, a call to <a href="https://docs.python.org/3/library/traceback.html#traceback.print_exc" rel="nofollow noreferrer">traceback.print_exc</a> in your except block will print that same traceback for you but allow the script to continue. The logging message can be shown by either increasing severity (use <code>warning</code> rather than <code>info</code>) or <a href="https://docs.python.org/2/howto/logging.html#configuring-logging" rel="nofollow noreferrer">configuring logging</a> to be more verbose.</span>
<span class="comment-copy">your suggestions were really insightful thanks</span>
