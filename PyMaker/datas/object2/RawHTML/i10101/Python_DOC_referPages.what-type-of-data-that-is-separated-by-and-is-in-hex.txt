<div class="post-text" itemprop="text">
<p>I have a data set that is pulled from a pixhawk. I am trying to parse this data and plot some of them vs time. The issue is when I use this code to open one of the bin files:</p>
<pre><code>with open("px4log.bin", "rb") as binary_file:
    # Read the whole file at once
    data = binary_file.read()
    print(data)
</code></pre>
<p>I get data that looks like this:</p>
<pre><code>b'\xa3\x95\x80\x80YFMT\x00BBnNZ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Type,Length,Name,Format,Columns\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa3\x95\x80\x81\x17PARMNf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Name,Value\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa3\x95\x80\x82-GPS\x00BIHBcLLeeEefI\x00\x00\x00Status,TimeMS,Week,NSats,HDop,Lat,Lng,RelAlt,Alt,Spd,GCrs,VZ,T\x00\x00\xa3\x95\x80\x83\x1fIMU\x00Iffffff\x00\x00\x00\x00\x00\x00\x00\x00\x00TimeMS,GyrX,GyrY,GyrZ,AccX,AccY,AccZ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0
</code></pre>
<p>I was told it is supposed to be in binary, but it's not. Unless python is doing something to the data set when it is opening it?</p>
<p>You can download this sample data set if you would from:</p>
<pre><code>https://pixhawk.org/_media/downloads/px4log_sample_1.px4log.zip
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python is showing you the binary data represented in <a href="https://en.wikipedia.org/wiki/Hexadecimal" rel="nofollow">hexadecimal</a> when the characters do not correspond with a regular <a href="https://en.wikipedia.org/wiki/ASCII" rel="nofollow">ascii</a> character. For example <code>\xa3</code> is a byte of hexidecimal value <code>A3</code> which is <code>10100011</code> in binary. <code>T</code> on the other hand could be printed as <code>\x54</code> which is a byte of binary value <code>01010100</code>. Since you used the <code>print</code> function, python assumes you are trying to convert the binary data to a human readable string, so instead of <code>\x54</code> it showed the corresponding character <code>T</code>.</p>
<p>You can use the following code to get an array of binary strings that represent your data:</p>
<pre><code>data = '\xa3\x95\x80\x80YFMT\x00BBnNZ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Type,Length,Name,Format,Columns'

decimalArray = map(ord,data)
byteArray = map(lambda x: "{0:b}".format(x), decimalArray)
print byteArray
</code></pre>
<p>Here is the output:</p>
<pre><code>['10100011', '10010101', '10000000', '10000000', '1011001', '1000110', '1001101', '1010100', '0', '1000010', '1000010', '1101110', '1001110', '1011010', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1010100', '1111001', '1110000', '1100101', '101100', '1001100', '1100101', '1101110', '1100111', '1110100', '1101000', '101100', '1001110', '1100001', '1101101', '1100101', '101100', '1000110', '1101111', '1110010', '1101101', '1100001', '1110100', '101100', '1000011', '1101111', '1101100', '1110101', '1101101', '1101110', '1110011']
</code></pre>
</div>
<span class="comment-copy"><i>"<code>'b'</code> appended to the mode opens the file in binary mode: now the data is read and written in the form of bytes objects."</i> <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">From the docs</a></span>
<span class="comment-copy">To which your next question would be "but what am I supposed to do with these bytes?", and the answer would be <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">you unpack them</a></span>
<span class="comment-copy">@CoryKramer Do I know know the location of each byte? Like is there a key for how the data is structured? or I don't need to know that?</span>
<span class="comment-copy">the phrase "binary" usually means "non-text" - of course <i>everything</i> is binary in the end.  The <code>b'</code> prefix means that this is a byte-object, the bytes are displayed as best they can, in hexadecimal when they don't map to single byte characters.  Why do you say it is not binary?  The <code>\x00</code> termination bytes looks like it has come from C.</span>
<span class="comment-copy">and this one:  <a href="https://github.com/PX4/Firmware/blob/master/Tools/sdlog2/sdlog2_dump.py" rel="nofollow noreferrer">github.com/PX4/Firmware/blob/master/Tools/sdlog2/sdlog2_dump.py</a></span>
<span class="comment-copy">I see, but doesn't this kind of make the data harder to parse?</span>
<span class="comment-copy">@J.Jones: Alden is trying to explain something to you, not show you a way of setting about parsing the data.</span>
<span class="comment-copy">@BillBell Gotcha, so it is just the way python is reading. What I still don't understand from the other comments is, how do I tell python what the data structure is. I tried reading on unpack.struct but it am hitting a brick wall trying to do this.</span>
<span class="comment-copy">@J.Jones: Ah, you have to tell us something first! At least those of us that no nothing about pixhawk. What's the structure of the data that it produces? If you can give us that then someone here can probably tell you how to throw up a Python structure to match it.</span>
<span class="comment-copy">@J.Jones I suggest creating a new question for that issue since this one only asks about the hex representation in the printed string.</span>
