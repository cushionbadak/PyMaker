<div class="post-text" itemprop="text">
<p>I'd like to change the thousands separator such that <code>{:,}.format(1234)</code> in Python uses a different character. The separator should be <code>'\u066c'</code>.</p>
<p>How can I set this without affecting any other locals settings?</p>
<p>EDIT: Any other suggestion for a unimposing separator viable in a fixed with font is welcome!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your options are to either take the <code>,</code> formatted output and replace the commas, switch locales and use the <code>'n'</code> number format (which will format the number based on the current locale), or use a third party library like <a href="http://babel.pocoo.org/" rel="nofollow">babel</a>. The latter gives you full locale control over <a href="http://babel.pocoo.org/en/latest/numbers.html#numbers" rel="nofollow">number formatting</a>, for example, provided there is a locale that uses U+066C as the thousands separator.</p>
<p>With the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format()</code> function</a>, the first option is quite straight-forward really:</p>
<pre><code>&gt;&gt;&gt; format(1234, ',').replace(',', '\u066c')
'1٬234'
</code></pre>
<p>I have yet to find a locale that directly would use <code>\u066c</code> for <em>Western</em> Arabic numerals however; U+066C is commonly used only with Eastern Arabic numerals instead. Babel doesn't include any such locale data, at least.</p>
<p>You can pass any babel <code>Locale</code> object in to the <a href="http://babel.pocoo.org/en/latest/api/numbers.html#babel.numbers.format_number" rel="nofollow"><code>babel.numbers.format_number()</code> function</a>, so if you need a custom separator you can clone an existing locale and set the <code>Locale.number_symbols['group']</code> value:</p>
<pre><code>from copy import deepcopy
from babel import Locale

altered_locale = deepcopy(Locale('en', 'US'))
altered_locale.number_symbols['group'] = '\u066c'
</code></pre>
<p>which results in the expected output:</p>
<pre><code>&gt;&gt;&gt; from babel.numbers import format_number
&gt;&gt;&gt; format_number(1234, locale=altered_locale)
'1٬234'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Taking Martijn's excellent answer further for use in Django, on how to override a locale in a Django template.</p>
<p>File <code>myapp/templatetags/extra.py</code></p>
<pre><code>from django import template
from django.utils.translation import get_language
from copy import deepcopy
from babel import Locale
from babel.numbers import format_number

register = template.Library()

@register.filter
def currency(value):
    lang = get_language()
    locale = deepcopy(Locale(lang))
    if lang == 'ru':  # for example if russian
        locale.number_symbols['group'] = '.'
    return format_number(value, locale=locale)
</code></pre>
<p>In template:</p>
<pre><code>{% load extra %}
{{ price|currency }}
</code></pre>
</div>
<span class="comment-copy">See <a href="http://stackoverflow.com/questions/5513615/add-decimal-mark-thousands-separators-to-a-number">this very similar question</a> and <a href="https://www.python.org/dev/peps/pep-0378/" rel="nofollow noreferrer">PEP 378 - Format Specifier for Thousands Separator</a></span>
<span class="comment-copy">Thanks. And there is no easy way I can tell the default Python <code>.format()</code> command to behave differently without explicitly using external functions instead (without modifying system locales outside Python)? Or how do I modify the locale in Python to switch the separator?</span>
<span class="comment-copy">@Gerenuk: you can set the locale <i>in</i> Python with the <code>locale</code> module, but I can't find <i>any</i> locale that would format <i>decimal</i> numbers using the arabic thousands separator.</span>
<span class="comment-copy">Oh, that's what I meant. I saw how to set a proper locale, but I didn't know how to modify a locale to some custom funky setting from inside Python. I guess I will use your other suggestions now.</span>
<span class="comment-copy">Btw, any other suggestion for a unimposing separator viable in a fixed with font is welcome!</span>
<span class="comment-copy">What if we patch the <code>format()</code> function to take an optional <code>locale</code> argument and do the corresponding <code>replace</code> on digit-separator?</span>
