<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7225168/testing-divisibility-by-multiple-numbers">Testing divisibility by multiple numbers</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Is there a more idiomatic way to accomplish the following in Python3?</p>
<pre><code>if i%1 == 0 and i%2 == 0 and i%3 == 0 and i%4 == 0 and i%5 == 0 and i%6 == 0 and i%7 == 0 and i%8 == 0 and i%9 == 0 and i%10 == 0 and i%11 == 0 and i%12 == 0 and i%13 == 0 and i%14 == 0 and i%15 == 0 and i%16 == 0 and i%17 == 0 and i%18 == 0 and i%19 == 0 and i%20 == 0:
</code></pre>
<p>I'm trying to find the smallest positive number that is evenly divisible by all of the numbers from 1 to 20. I'm not looking for a new solution. I'm looking for a neater way to express what I am doing above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow"><em>all</em></a> with <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow"><em>range</em></a>:</p>
<pre><code>if all(i % j == 0 for j in range(1, 21)): # python2 -&gt; xrange(2, 21) 
   # do whatever
</code></pre>
<p>If all <code>i % j == 0</code>, it will return <em>True</em> otherwise it will <em>short circuit</em> and return <em>False</em> if there is any remainder for <code>i % j</code>. Also, checking <code>if i % 1</code> is redundant so you can start at 2.</p>
<p>Or conversly, check if there is <em>not</em> <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow">any</a> <code>i % j</code> with a remainder. </p>
<pre><code>if not any(i % j for j in range(2, 21)):
</code></pre>
<p>Or if you prefer <em>functional</em>:</p>
<pre><code>if not any(map(i.__mod__, range(2, 21)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>all</code> function combined with a list comprehension - or better yet - a generator expression:</p>
<pre><code>if all(i%(1 + j) == 0 for j in range(20)):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a for loop in a while loop.</p>
<pre><code>num = 1;
while(True): #keeps going until it finds the number
    b = True #remains true as long as it is divisible by div
    for div in range(1,21):
        if not (num % div == 0):
            b = False #number was not divisible, therefore b is now false
            num += 1
            break
    if(b): #b means num was divisible by all numbers.
        break
print(num)
</code></pre>
</div>
<span class="comment-copy">Try using a <code>for</code> loop. Also, please format your code.</span>
<span class="comment-copy">Or on Py2, for mild perf benefits, <code>xrange</code>. Not a big deal either way though, given the range is small.</span>
<span class="comment-copy">@ShadowRanger, true, added a comment.</span>
