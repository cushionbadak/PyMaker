<div class="post-text" itemprop="text">
<p>I want to import a python script in to another script. </p>
<pre><code>$ cat py1.py
test=("hi", "hello")

print test[0]

$ cat py2.py
from py1 import test

print test
</code></pre>
<p>If I execute <code>py2.py</code>:</p>
<pre><code>$ python py2.py 
hi
('hi', 'hello')
</code></pre>
<p>Can I anyway mute the first <code>print</code> which is coming from the <code>from py1 import test</code>?</p>
<p>I can't comment the <code>print</code> in <code>py1</code>, since it is being used somewhere else. </p>
</div>
<div class="post-text" itemprop="text">
<p>py1.py use an <code>if __name__=="__main__":</code></p>
<p>So like your py1.py would look like: </p>
<pre><code>def main():
    test=("hi", "hello")

    print test[0]

if __name__=="__main__":
    main()  
</code></pre>
<p>This will allow you to still use py1.py normally, but when you import it, it won't run the <code>main()</code> function unless you call it.</p>
<p><a href="https://docs.python.org/3/library/__main__.html" rel="nofollow">This explains what's going on</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Simply open the /dev/null device and overwrite the <code>sys.stdout</code> variable to that value when you need it to be quiet.</p>
<pre><code>import os
import sys

old_stdout = sys.stdout
sys.stdout = open(os.devnull, "w")

from py1 import test

sys.stdout = old_stdout
print test
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You might want to consider changing the other script to still print when its run 'in the other place' - if you're running py1 as a shell command, try to make sure all "executable statements" in a file are inside a block.</p>
<pre><code>if __name__ == "__main__":
    print test
</code></pre>
<p>(see <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do">What does if __name__ == "__main__": do?</a>)</p>
<p>This would fix the underlying issue without having you do weird things (which would be redirecting the standard out, and then putting it back etc), or opening the file and executing line by line on an if block.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could implement this functionality with methods:</p>
<p><code>py1.py</code></p>
<pre><code>test=("hi", "hello")

def print_test():
    print(test)

def print_first_index():
    print(test[0])
</code></pre>
<p><code>py2.py</code></p>
<pre><code>import py1
py1.print_test()
</code></pre>
<p>As MooingRawr pointed out, this would require you to change whichever classes use <code>py1.py</code> to import it and call the <code>py1.print_first_index()</code> function which may not be to your liking.</p>
</div>
<span class="comment-copy">this is really probable the right answer imho .... everything else is a "work around"</span>
<span class="comment-copy"><code>os.devnull</code> thats what i was looking for eariler when i answered almost identically just after you posted your solution(I deleted mine)</span>
<span class="comment-copy">Thanks a Lot, thats worked for me.</span>
<span class="comment-copy">not sure why the downvote as this is a pretty reasonable solution (I guess because its basically the same as the other solution..)</span>
<span class="comment-copy">And if I had typed faster and not looked up references, I would have beaten you all.... Ahh well</span>
<span class="comment-copy">meh it happens to everyone ... (I had to delete an answer of mine since someone posted the same solution 10 seconds before me)</span>
<span class="comment-copy">what do i do.. delete? leave this conversation for prosperity? Move on and just forget about it?</span>
<span class="comment-copy">This works, for py2.py, but it doesn't allow him to call py1.py, the script itself, if he needs too.</span>
<span class="comment-copy">Good point, edited to clarify.</span>
