<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11950819/python-math-is-wrong">Python math is wrong [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>t is array of two <code>float64</code> numbers. 
On typing <code>t</code> in Ipython 2.7, it is giving following output:</p>
<pre><code>array([ 60.211127, 71.08120185])
</code></pre>
<p><code>print t</code> gives </p>
<pre><code>[ 60.211127, 71.08120185]
</code></pre>
<p><code>print t[0]</code> gives</p>
<pre><code>60.211127
</code></pre>
<p>but...
<code>t[0]</code> gives </p>
<pre><code>60.211126999999998
</code></pre>
<p>as an output.</p>
<p>P.S. </p>
<pre><code>from decimal import *
Decimal(t[0])
</code></pre>
<p>gives</p>
<pre><code>Decimal('60.21112699999999762212610221467912197113037109375')
</code></pre>
<p>as output.Why is it happening so?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue I think you are having is because there is no way to approximate some values in some data formats. (the same way you can't show 1/3 because you would just have .3333333333333... forever) There is more info <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="nofollow">here</a> </p>
<p>a useful function might be <code>repr()</code> more info <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow">here</a></p>
</div>
<span class="comment-copy"><code>print</code> uses the <code>str</code> format, plain interactive <code>out</code> uses the <code>repr</code> version.  Add on top of that the different display conventions for <code>array</code> (<code>numpy</code>?) and Python floats.</span>
