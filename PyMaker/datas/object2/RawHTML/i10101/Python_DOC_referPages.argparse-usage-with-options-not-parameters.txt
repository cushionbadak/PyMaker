<div class="post-text" itemprop="text">
<p>If I am passing an boolean option to my script, which is basically true if the option is supplied and false if not, how do I process it differently with <code>argparse</code> than a parameter that holds value.</p>
<p>For example, my script takes a parameter <strong>propFile</strong>, which holds a value and an option <strong>clean</strong>, which is just a true/false flag. The usage is</p>
<blockquote>
<p>myScript.py --propFile=path/to/my/prop.file -clean</p>
</blockquote>
<p>Note that I try to differentiate between parameters and options on the user level by assigning two dashes to the former and a single dash to the latter, which shouldn't matter to the interpreter.</p>
<p>I want to assign <code>scrptVarClean=True</code> if <code>-clean</code> is provided and <code>False</code> if not.</p>
<p>What I tried is:</p>
<pre><code>argparser = argparse.ArgumentParser()
argparser.add_argument('--propFile', help='Properties file path')
argparser.add_argument('-clean', help='Clean?')
args = argparser.parse_args();
propFile = args.props
clean = args.clean
</code></pre>
<p>but I got</p>
<blockquote>
<p>pgCloner.py: error: argument -clean: expected one argument</p>
</blockquote>
<p>How can I use an optional boolean argument with argparse?</p>
</div>
<div class="post-text" itemprop="text">
<p>Value of <code>clean</code> will be <code>True</code> if "--clean" or "-c" is supplied, else <code>False</code></p>
<pre><code>parser.add_argument('-c', '--clean', action="store_true")
</code></pre>
</div>
<span class="comment-copy">Note that it's conventional to use single dashes for short versions of flags (e.g. <code>-c</code> for <code>--clean</code>); although it doesn't matter to the interpreter, it may not be what consumers of your CLI expect.</span>
<span class="comment-copy">I know but so, for the parameter arg, I just avoid providing a shorter version, to differentiate</span>
<span class="comment-copy">That is what I read into <i>"I try to differentiate between parameters and options on the user level by assigning two dashes to the former and a single dash to the latter"</i>, I'm just saying: don't.</span>
<span class="comment-copy">this kind of discussion on semantics is pretty pointless. you will never have a single convention just like the world will never speak only one langugage</span>
<span class="comment-copy">There certainly won't be if people refuse to adopt the ones that already exist and insist on making up their own, but you do you.</span>
<span class="comment-copy">Beat me to it. Very nice.</span>
<span class="comment-copy">Otherwise known as "read the <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">argparse docs</a>".</span>
<span class="comment-copy">@MadPhysicist yeah I noticed, but that didn't seem good. Let's provide better option...</span>
<span class="comment-copy">@jatinderjit. It's purely a matter of taste, and the OP's reasoning was sensible.</span>
<span class="comment-copy">it's a matter of personal preferences, variations among which is reasonable as @MadPhysicist noted. trying to enforce a global standard on trivial conventions like this would be pedantic to say the least.</span>
