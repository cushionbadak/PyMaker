<div class="post-text" itemprop="text">
<p>Let me have a arbitrary list of positive integers:</p>
<pre><code>[2, 2, 3, 5]
</code></pre>
<p>I need to write a code, which will generate me a list of all products of those integers, enumerated like that:</p>
<pre><code>1111, ..., 1115, 1121, ..., 1125, ... 1135, 1235, 2235.
</code></pre>
<p>How do I do that?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools
itertools.product(range(1,3), range(1,3), range(1,4), range(1,6))
</code></pre>
<p>Docs here: <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow">https://docs.python.org/3/library/itertools.html#itertools.product</a></p>
<p>A more general solution:</p>
<pre><code>itertools.product(*[range(1, n+1) for n in list_nums])
</code></pre>
</div>
<span class="comment-copy">What do you mean variants?</span>
<span class="comment-copy">Where is the 1 coming from?</span>
<span class="comment-copy">In what way is <code>1111</code> a "variant" of <code>[2, 2, 3, 5]</code>?</span>
<span class="comment-copy">look at itertools package</span>
<span class="comment-copy">a) State the question clearly, i.e. define "variant". b) Post us your code so far and state what's wrong with it. Or else this deserves to be closed as a <i>'Give me teh codez'</i> for lack of effort.</span>
<span class="comment-copy">In python 3 it will produce iterator ?!</span>
<span class="comment-copy">@volcano is that a question or an objection?  Yes, in Python 3 this will produce an <code>itertools.product</code> object, which is a generator.  I think it does something similar in Python 2</span>
<span class="comment-copy">The problem is that I have to do it with a arbitrary list.</span>
<span class="comment-copy">You can cast this to a list with <code>list(...)</code></span>
<span class="comment-copy">I mean that I have an arbitrary number of numbers in this list. I could have 5, or 10, or 100, or more.</span>
