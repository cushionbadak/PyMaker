<div class="post-text" itemprop="text">
<p>Is there a cleaner way to get an integer value of the position of a list item in this code:</p>
<pre><code>a = ['m', 'rt', 'paaq', 'panc']
loc = [i for i, x in enumerate(a) if x == 'rt']
loc_str = str(loc).strip('[]')
loc_int = int(loc_str)
id_list = a[loc_int + 1:]
print id_list
</code></pre>
<p>Returns all items after 'rt' as a list ['paaq', 'panc']</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, use <code>list.index()</code>.</p>
<pre><code>a = ['m', 'rt', 'paaq', 'panc']
id_list = a[a.index('rt')+1:]
assert id_list == ['paaq', 'panc']
</code></pre>
<p>Or, to minimally change your program:</p>
<pre><code>a = ['m', 'rt', 'paaq', 'panc']
loc_int = a.index('rt')
id_list = a[loc_int + 1:]
print id_list
</code></pre>
<p>References:</p>
<ul>
<li><a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow">https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange</a></li>
<li><a href="https://docs.python.org/2/tutorial/datastructures.html#more-on-lists" rel="nofollow">https://docs.python.org/2/tutorial/datastructures.html#more-on-lists</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>a[a.index('rt') + 1:]
</code></pre>
<p>What this is doing is <a href="https://docs.python.org/2.3/whatsnew/section-slices.html" rel="nofollow">slicing</a> the array, starting at where <code>a.index('rt')</code>. not specifying an end <code>:]</code> means we want until the end of the list.</p>
</div>
<span class="comment-copy">I think it's important that you realize that you don't need to convert your list <code>loc</code> to <code>str</code> just to get the first element. Just use <code>a[loc[0]+1:]</code>.</span>
<span class="comment-copy">You know <code>enumerate</code>, you work with list comprehensions and you don't know about slicing which is covered in the first parts of the <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">Python Tutorial</a>? That's truly wondrous.</span>
