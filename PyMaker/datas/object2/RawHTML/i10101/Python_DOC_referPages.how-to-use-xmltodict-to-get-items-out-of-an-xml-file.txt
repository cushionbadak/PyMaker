<div class="post-text" itemprop="text">
<p>I am trying to easily access values from an xml file.</p>
<pre><code>&lt;artikelen&gt;
    &lt;artikel nummer="121"&gt;
        &lt;code&gt;ABC123&lt;/code&gt;
        &lt;naam&gt;Highlight pen&lt;/naam&gt;
        &lt;voorraad&gt;231&lt;/voorraad&gt;
        &lt;prijs&gt;0.56&lt;/prijs&gt;
    &lt;/artikel&gt;
    &lt;artikel nummer="123"&gt;
        &lt;code&gt;PQR678&lt;/code&gt;
        &lt;naam&gt;Nietmachine&lt;/naam&gt;
        &lt;voorraad&gt;587&lt;/voorraad&gt;
        &lt;prijs&gt;9.99&lt;/prijs&gt;
    &lt;/artikel&gt;
..... etc
</code></pre>
<p>If i want to acces the value ABC123, how do I get it?</p>
<pre><code>import xmltodict

with open('8_1.html') as fd:
    doc = xmltodict.parse(fd.read())
    print(doc[fd]['code'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using your example:</p>
<pre><code>import xmltodict

with open('artikelen.xml') as fd:
    doc = xmltodict.parse(fd.read())
</code></pre>
<p>If you examine <code>doc</code>, you'll see it's an <code>OrderedDict</code>, ordered by tag:</p>
<pre><code>&gt;&gt;&gt; doc
OrderedDict([('artikelen',
              OrderedDict([('artikel',
                            [OrderedDict([('@nummer', '121'),
                                          ('code', 'ABC123'),
                                          ('naam', 'Highlight pen'),
                                          ('voorraad', '231'),
                                          ('prijs', '0.56')]),
                             OrderedDict([('@nummer', '123'),
                                          ('code', 'PQR678'),
                                          ('naam', 'Nietmachine'),
                                          ('voorraad', '587'),
                                          ('prijs', '9.99')])])]))])
</code></pre>
<p>The root node is called <code>artikelen</code>, and there a subnode <code>artikel</code> which is a list of <code>OrderedDict</code> objects, so if you want the <code>code</code> for every article, you would do:</p>
<pre><code>codes = []
for artikel in doc['artikelen']['artikel']:
    codes.append(artikel['code'])

# &gt;&gt;&gt; codes
# ['ABC123', 'PQR678']
</code></pre>
<p>If you specifically want the <code>code</code> only when <code>nummer</code> is <code>121</code>, you could do this:</p>
<pre><code>code = None
for artikel in doc['artikelen']['artikel']:
    if artikel['@nummer'] == '121':
        code = artikel['code']
        break
</code></pre>
<p>That said, if you're parsing XML documents and want to search for a specific value like that, I would consider using <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#elementtree-xpath" rel="noreferrer">XPath expressions</a>, which are supported by <code>ElementTree</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is using xml.etree
You can try this:</p>
<pre><code>for artikelobj in root.findall('artikel'):
    print artikelobj.find('code')
</code></pre>
<p>if you want to extract a specific code based on the attribute 'nummer' of artikel, then you can try this:</p>
<pre><code>for artikelobj in root.findall('artikel'):
    if artikel.get('nummer') == 121:
        print artikelobj.find('code')
</code></pre>
<p>this will print only the code you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>To read .xml files :</p>
<pre><code>import lxml.etree as ET
root = ET.parse(filename).getroot()
value = root.node1.node2.variable_name.text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use lxml package using XPath Expression. </p>
<pre><code>from lxml import etree
f = open("8_1.html", "r")
tree = etree.parse(f)
expression = "/artikelen/artikel[1]/code"
l = tree.xpath(expression)
code = next(i.text for i in l)
print code

# ABC123
</code></pre>
<p>The thing to notice here is the expression. <code>/artikelen</code> is the root element. <code>/artikel[1]</code> chooses the first <code>artikel</code> element under <code>root</code>(Notice first element is not at index 0). <code>/code</code> is the child element under <code>artikel[1]</code>. You can read more about at <a href="http://lxml.de/tutorial.html#using-xpath-to-find-text" rel="nofollow">lxml</a> and <a href="http://www.w3schools.com/xml/xpath_syntax.asp" rel="nofollow">xpath syntax</a>.</p>
</div>
<span class="comment-copy">In your example : <code>result = root.artikel.code.text</code></span>
<span class="comment-copy">the import is not correct because python gives an error</span>
<span class="comment-copy">What's the error message ? Did you install lxml package ?</span>
