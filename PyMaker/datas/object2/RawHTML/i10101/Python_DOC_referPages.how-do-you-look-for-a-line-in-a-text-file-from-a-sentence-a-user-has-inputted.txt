<div class="post-text" itemprop="text">
<pre><code>a=input("Please enter your problem?")
problem= ()

with open('solutions.txt', 'r') as searchfile:
    for line in searchfile:
        if problem in line:
            print (line)
</code></pre>
<p>Can someone please help me on how to get the keywords from the inputed string by the user. Thanks. I need help on how to look for some of the words the users inputed in to =a and search for them on the textfile and print the line</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume your keywords is meant to be a list? </p>
<p>Then you use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code></a> to check if any word out of the keywords is in the line. </p>
<pre><code>a=input("Please enter your problem?")
problem= ['#keywords', 'not', 'sure', 'how']

with open('solutions.txt', 'r') as searchfile:
    for line in searchfile:
        if any(word in line for word in problem):
            print (line)
</code></pre>
<p>Though, you may want to <code>split()</code> your line to improve that detection. </p>
<p>Otherwise, you have <code>a</code>, which stores the user's input, so you can use that. </p>
<pre><code>a=input("Please enter your problem?")
problem= a.split()
</code></pre>
<p>Then, again <code>problem</code> is a list, so you use <code>any()</code> as before</p>
<p>Or, if you want to check if the entire entered value is in a line, then </p>
<pre><code>if a in line:
    print(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure I understood the question but is this what you want?. this will take the line containing the most words from the user input:</p>
<pre><code>problem = a.split(' ')
max_num, current_num = 0,0  #max_num count the maximum apparition of words from the input in the line| current_num count the current number of apparition of words of the user input in the line
chosen_line = ''

with open('solutions.txt', 'r') as searchfile:
    for line in searchfile:
        for word in problem:
            if word in line:
                current_num+=1
        if current_num&gt;max_num:
            print line,max_num,current_num
            max_num=current_num
            chosen_line = line
        current_num = 0
    print chosen_line
</code></pre>
<p>but it seems to me the easiest way to do what you want is to store at the start of each answer the question, or even easier - just ask the user the question number and return this corresponding answer.</p>
</div>
<span class="comment-copy">python 2 or 3. You have to choose (<code>input</code> won't work for you in python 2). And what do you want to find: all the keywords of <code>problem</code> or only some, one?? unclear.</span>
<span class="comment-copy">your solution is correct, in will handle what you want</span>
<span class="comment-copy">What is wrong with your solution?</span>
<span class="comment-copy">@leaf I do not know how to get the keywords from the users input in to the variable = problem</span>
<span class="comment-copy">@JoeyMcFee You already are getting user input into the <code>a</code> variable. Why do you need <code>problem</code>?</span>
<span class="comment-copy">Please check the code again. The problem variable is not a list. What I need the program to do is, from the users input, print the line with most of the users inputed words</span>
<span class="comment-copy">There isn't a straightforward way to find the "most of the users inputed words". You can do <code>if a in line:</code> to test the entered string. I still do not see the need for the <code>problem</code> variable if it is not a list</span>
<span class="comment-copy">isnt there a way to even some of the users inputed wordsand look for them in the textfile</span>
<span class="comment-copy">What do you mean "even some of the words"? If I understood correctly, that is what option 2 here is showing <code>problem = a.split()</code></span>
<span class="comment-copy">with this it just prints the top line on the text file no matter what the input from the user is</span>
<span class="comment-copy">@JoeyMcFee oups! - instead of print line the last line should have been print chosen_line I'v fixed it now, does it work?</span>
