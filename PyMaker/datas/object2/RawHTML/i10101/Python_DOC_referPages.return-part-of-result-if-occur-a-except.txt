<div class="post-text" itemprop="text">
<p>I am using python. I have a function (getAll) that call other function in a loop (getPart) and in each step the return value is updated. In some case when I call the function that is inside the loop, this fail. I need return the result in this moment.</p>
<pre><code>def getAll(m, d, v, t, s, tn, type):
  result = []
  flag = 0
  while flag == 0:
    tempResult = getPart(m, d, v)
    for i in range(0, len(tempResult)):
      result.append(tempResult[i])
    flag = tempResult[0]
  return result

print getAll(5,4,1,'ds',8,'data')
</code></pre>
<p>I need print the result partial value,  if occur a except in some step when I call tempResult in getAll</p>
</div>
<div class="post-text" itemprop="text">
<p>Sounds like you need to use try, except blocks</p>
<pre><code>def getAll(m, d, v, t, s, tn, type):
    result = []
    flag = 0
    while flag == 0:
        try: #start of the try block. 
            tempResult = getPart(m, d, v)
            for i in range(0, len(tempResult)):
                result.append(tempResult[i])
            flag = tempResult[0]
        except: #handle what ever errors comes here
            return tempResult
    return tempResult
</code></pre>
<p>Basically when you catch an error or an error is raised it will run what ever is in the except block, since we are putting <code>return tempResult</code> it will return the value. </p>
<p>Like the comment says, catching all exceptions is a bad idea since you might hit an error that has nothing to do with your code and it will catch it, for specific exceptions you should do: </p>
<pre><code>try:
    #do something
except &lt;Error name like "ValueError"&gt;
    #handle it
</code></pre>
<p>You can also see more error details like:</p>
<pre><code>try:
    #do something
except ValueError as e:
    #handle it
    print(e) #prints the error
</code></pre>
<p>So find out what errors will cause your program to stop and put it there. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can handle the exception by wrapping the code that raises the error with a <code>try/except</code> and <em>printing</em> the result in the <code>except</code> block:</p>
<pre><code>def getAll(m, d, v, t, s, tn, type):
    result = []
    flag = 0
    while flag == 0:
        try:
            tempResult = getPart(m, d, v)
        except SomeError: # specify error type
            print('The partial result is', result)
            raise  # re-raise error
        for i in range(0, len(tempResult)):
            result.append(tempResult[i])
        flag = tempResult[0]
    return result

print getAll(5,4,1,'ds',8,'data')
</code></pre>
<p>On another note, since you already know calling <code>getPart</code> might raise an error, you may move the <code>try/except</code> block into the function. This depends of course on what exactly you're trying to achieve.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is not necessarily the best solution, since depending on the error, it may be better to prevent it than to handle it in this way. However, you can <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow">try</a> (no pun originally intended...) the following (where <code>WhateverError</code> is the error that is raised in your case):</p>
<pre><code>def getAll(m, d, v, t, s, tn, type):
  result = []
  flag = 0
  while flag == 0:
    try:
      tempResult = getPart(m, d, v)
    except WhateverError:
      return result
    for i in range(0, len(tempResult)):
      result.append(tempResult[i])
    flag = tempResult[0]
  return result

print getAll(5,4,1,'ds',8,'data')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Wrap your method in a try, except block. You might want to raise an exception so you can respond to it too. </p>
<pre><code>def getAll(m, d, v, t, s, tn, type):
    result = []
    flag = 0
    try:
        while flag == 0:
            tempResult = getPart(m, d, v)
            for i in range(0, len(tempResult)):
              result.append(tempResult[i])
            flag = tempResult[0]
        return result
    except Exception as e:
        print e
        return result
</code></pre>
</div>
<span class="comment-copy">The OP needs to specify what exception(s) he is catching, because it's a bad idea to have a blanket <code>except</code></span>
<span class="comment-copy">I agree will update.</span>
