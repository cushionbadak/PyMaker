<div class="post-text" itemprop="text">
<p>This is all I have so far: </p>
<pre><code>def anagram(str1, str2):

    print("String 1 : %s" %str1) 
    print("String 2 : %s" %str2)
    s1 = sorted(str1.lower()) 
    s2 = sorted(str2.lower())

    if s1 == s2:
       print("This is an anagram") 
       return True

def test_anagram():

    print( "\n** Testing example anagrams **\n")

    tests = [["dog", "cat"]]

    num_anagrams = 0

    for test in tests:
       answer = anagram(test[0] , test[1])
       print("For inputs " + test[0] + " and " + test[1] + " answer is: ", answer, end ="")
       if answer == test[0]:
          print("This test is correct")
          num_anagrams += 1
</code></pre>
<p>I don't think this is close to right. I want it to compare the actual result to what the function previously gives out as a result, then output whether the result was the same, being 'correct' or not 'incorrect' then output how many tests worked correctly against the function. I can't get my head around the if statement.</p>
<p>Thanks for the help!   </p>
</div>
<div class="post-text" itemprop="text">
<p>Fixed your code based on what I thought you wanted to do with some comments on what was changed and why:</p>
<pre><code>def anagrams(str1, str2):
    print("String 1 : %s" %str1) #you wanted to print it right this is how you can format the string with variables
    print("String 2 : %s" %str2) #you wanted to print it right this is how you can format the string with variables
    s1 = sorted(str1.lower()) #lower function call to remove the capital letters since it matters
    s2 = sorted(str2.lower()) #lower function call to remove the capital letters since it matters

    if s1 == s2:
        print("This is an anagram") # you don't call a bool value with parameter. You use print functions instead and then return True
        return True #you wanted to return True here right? 



anagrams("Cat", "Tac") # no need to assign variables to match parameter names
</code></pre>
<p>This prints out:</p>
<pre><code>String 1 : Cat
String 2 : Tac
This is an anagram
</code></pre>
<p>I think you were mistaking on how to print things out with variable assignment to the string, I vaguely remember a language that had that had a similar syntax with what you were doing. </p>
<p>You error is basically trying to call a <code>str</code> object like a function. Since you took other programming language, I think you should know what's wrong with that statement</p>
<p>Edited:</p>
<pre><code>def anagram(str1, str2):

    print("String 1 : %s" %str1) 
    print("String 2 : %s" %str2)
    s1 = sorted(str1.lower()) 
    s2 = sorted(str2.lower())

    if s1 == s2:
        print("This is an anagram") 
        return True

def test_anagram():

    print( "\n** Testing example anagrams **\n")

    tests = [["dog", "cat"],["tac","cat"],["dog","god"]]

    num_anagrams = 0

    for test in tests:
        answer = anagram(test[0] , test[1])
        print("For inputs " + test[0] + " and " + test[1] + " answer is: " + str(answer))
        if answer:
            print("This test is correct")
            num_anagrams += 1
    print(num_anagrams)

test_anagram()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're treating <code>str1</code> and <code>str2</code> like functions, when you're really just passing <code>str</code> objects, which, according to your error, are not callable (i.e. don't work as functions).</p>
<p>Are you trying to accept input? If so, use <code>str1 = input("String 1 : ")</code> and so on.</p>
<p>Otherwise, if you're trying to format output, use this:</p>
<pre><code>print("String 1 : {}".format(str1))
</code></pre>
</div>
<span class="comment-copy">The statement <code>str1("String 1 : ")</code> generates this error. What did you mean to do there?</span>
<span class="comment-copy">Do the first couple of chapters of the official python tutorial: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a></span>
<span class="comment-copy">You also don't need to put the variable names in your function call, use <code>anagrams("Cat", "Tac")</code></span>
<span class="comment-copy">Looks like you just want to <code>print</code> the two strings before sorting them, if so, just change those two lines to <code>print ("String 1 : ", str1)</code> and similarly for str2</span>
<span class="comment-copy">brilliant! That's cleared it up. One last question if you don't mind. I have to create a function with no arguments that tests whether or not the above function works correctly. I have been given this code:</span>
<span class="comment-copy">I've been asked to  call the ’anagram’ function with different strings to test if it is working correctly. The function should print out in a human readable format the tests that it is running and whether it passed or not and should report on the total number of tests passed.</span>
<span class="comment-copy">how are you getting the different strings? are they pre enter into the script like above ? all you need is a for loop and just a counter and check if it returns true or false.</span>
<span class="comment-copy">I think Im supposed to do something that uses any sort of words as tests.</span>
<span class="comment-copy">something like:    tests = [["dog", "cat"]] but about 5 or 6 seperate tests</span>
<span class="comment-copy">I don't think it's inputs because he is passing them in as parameters, but who knows need more details from OP.</span>
