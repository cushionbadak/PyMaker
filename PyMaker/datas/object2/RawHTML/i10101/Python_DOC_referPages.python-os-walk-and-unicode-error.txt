<div class="post-text" itemprop="text">
<p>two questions:
1. why does </p>
<pre><code>In [21]:                                                                                   
   ....:     for root, dir, file in os.walk(spath):
   ....:         print(root)
</code></pre>
<p>print the whole tree but</p>
<pre><code>In [6]: for dirs in os.walk(spath):                             
...:     print(dirs)    
</code></pre>
<p>chokes on this unicode error?</p>
<pre><code>UnicodeEncodeError: 'charmap' codec can't encode character '\u2122' in position 1477: character maps to &lt;undefined&gt;
</code></pre>
<p>[NOTE: this is the TM symbol]</p>
<ol start="2">
<li>I looked at these answers</li>
</ol>
<p><a href="https://stackoverflow.com/questions/22184178/scraping-works-well-until-i-get-this-error-ascii-codec-cant-encode-character">Scraping works well until I get this error: 'ascii' codec can't encode character u'\u2122' in position</a></p>
<p><a href="https://stackoverflow.com/questions/30539882/whats-the-deal-with-python-3-4-unicode-different-languages-and-windows/30551552#30551552">What's the deal with Python 3.4, Unicode, different languages and Windows?</a></p>
<p><a href="https://stackoverflow.com/questions/16346914/python-3-2-unicodeencodeerror-charmap-codec-cant-encode-character-u2013-i?noredirect=1&amp;lq=1">python 3.2 UnicodeEncodeError: 'charmap' codec can't encode character '\u2013' in position 9629: character maps to &lt;undefined&gt;</a></p>
<p><a href="https://github.com/Drekin/win-unicode-console" rel="nofollow noreferrer">https://github.com/Drekin/win-unicode-console</a></p>
<p><a href="https://docs.python.org/3/search.html?q=IncrementalDecoder&amp;check_keywords=yes&amp;area=default" rel="nofollow noreferrer">https://docs.python.org/3/search.html?q=IncrementalDecoder&amp;check_keywords=yes&amp;area=default</a></p>
<p>and tried these variations</p>
<pre><code>----&gt; 1 print(dirs, encoding='utf-8')                                                           
TypeError: 'encoding' is an invalid keyword argument for this function       
In [11]: &gt;&gt;&gt; u'\u2122'.encode('ascii', 'ignore')                                                
Out[11]: b''                       

print(dirs).encode(‘utf=8’)
</code></pre>
<p>all to no effect.</p>
<p>This was done with python 3.4.3 and visual studio code 1.6.1 on Windows 10.  The default settings in Visual Studio Code include:</p>
<blockquote>
<p>// The default character set encoding to use when reading and writing
  files.
      "files.encoding": "utf8",</p>
</blockquote>
<p>python 3.4.3
visual studio code 1.6.1
ipython 3.0.0</p>
<p><strong>UPDATE EDIT</strong>
I tried this again in the Sublime Text REPL, running a script. Here's what I got:</p>
<pre><code># -*- coding: utf-8 -*-
import os

spath = 'C:/Users/Semantic/Documents/Align' 

with open('os_walk4_align.txt', 'w') as f:
    for path, dirs, filenames in os.walk(spath):
        print(path, dirs, filenames, file=f)

Traceback (most recent call last):
File "listdir_test1.py", line 8, in &lt;module&gt;
print(path, dirs, filenames, file=f)
File "C:\Python34\lib\encodings\cp1252.py", line 19, in encode
return codecs.charmap_encode(input,self.errors,encoding_table)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\u2605' in position 300: character maps to &lt;undefined&gt;
</code></pre>
<p>This code is only 217 characters long, so where does ‘position 300’ come from?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a test case:</p>
<pre><code>C:\TEST
├───dir1
│       file1™
│
└───dir2
        file2
</code></pre>
<p>Here's a script (Python 3.x):</p>
<pre><code>import os

spath = r'c:\test'

for root,dirs,files in os.walk(spath):
    print(root)

for dirs in os.walk(spath):                             
    print(dirs)
</code></pre>
<p>Here's the output, on an IDE that supports UTF-8 (PythonWin, in this case):</p>
<pre><code>c:\test
c:\test\dir1
c:\test\dir2
('c:\\test', ['dir1', 'dir2'], [])
('c:\\test\\dir1', [], ['file1™'])
('c:\\test\\dir2', [], ['file2'])
</code></pre>
<p>Here's the output, on my Windows console, which defaults to <code>cp437</code>:</p>
<pre><code>c:\test
c:\test\dir1
c:\test\dir2
('c:\\test', ['dir1', 'dir2'], [])
Traceback (most recent call last):
  File "C:\test.py", line 9, in &lt;module&gt;
    print(dirs)
  File "C:\Python33\lib\encodings\cp437.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_map)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\u2122' in position 47: character maps to &lt;undefined&gt;
</code></pre>
<p>For Question 1, the reason <code>print(root)</code> works is that no directory had a character that wasn't supported by the output encoding, but <code>print(dirs)</code> is now printing a tuple containing <code>(root,dirs,files)</code> and one of the files has an unsupported character in the Windows console.</p>
<p>For Question 2, the first example misspelled <code>utf-8</code> as <code>utf=8</code>, and the second example didn't declare an encoding for the file the output was written to, so it used a default that didn't support the character.</p>
<p>Try this:</p>
<pre><code>import os

spath = r'c:\test'

with open('os_walk4_align.txt', 'w', encoding='utf8') as f:
    for path, dirs, filenames in os.walk(spath):
        print(path, dirs, filenames, file=f)
</code></pre>
<p>Content of <code>os_walk4_align.txt</code>, encoded in UTF-8:</p>
<pre><code>c:\test ['dir1', 'dir2'] []
c:\test\dir1 [] ['file1™']
c:\test\dir2 [] ['file2']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The console you're outputting to doesn't support non-ASCII by default. You need to use <code>str.encode('utf-8')</code>.</p>
<p>That works on strings not on lists. So <code>print(dirs).encode(‘utf=8’)</code> won't works, and it's <code>utf-8</code>, not <code>utf=8</code>.</p>
<p>Print your lists with list comprehension like:</p>
<pre><code>&gt;&gt;&gt; print([s.encode('utf-8') for s in ['a', 'b']])
['a', 'b']
&gt;&gt;&gt; print([d.encode('utf-8') for d in dirs])  # to print `dirs`
</code></pre>
</div>
<span class="comment-copy">I assume you mean 'unicode', not 'unicorn'. I am testing out the new Visual Studio Code on Windows 10, that is why I am using it, and as I said, the default is already set to utf-8. Furthermore, I tried this in Sublime Text, and I am STILL getting unicode errors, albeit different ones.</span>
<span class="comment-copy">Setting the source encoding (<code>#coding:utf8</code>) has nothing to do with the output encoding.  As you can see from your error <code>cp1252</code> is the output encoding and doesn't support the characters being printed to the terminal.  The easiest way around this is to write to a file with UTF-8 encoding insteading of printing to a display, or use an Python IDE that supports UTF-8 output.  I'm not familiar with Sublime Text, but it probably has a way to adjust the output encoding as well.</span>
<span class="comment-copy">Ding! Ding! Ding! We have a winner!  My own '=' typo aside, I had the encoding on the print line, when it should have been in the arguments. Your detailed answer helped a great deal. Thanks.</span>
