<div class="post-text" itemprop="text">
<p>I am a programming newbie, and half of my problem is that I cannot find the right questions to ask - I have looked at lots of Stack Overflow posts to try to work through my issues, but I've not been able to apply what I've found to my situation. Consequently, I need your help, internet. </p>
<p>I'm trying to make a program that runs once a week using Windows Scheduler. When it runs, it should:</p>
<ul>
<li>consult an excel file, </li>
<li>extract some information from the last forty rows,</li>
<li>draw up a form email,</li>
<li>include the extracted information in the form email,</li>
<li>send the form email to a specific recipient.</li>
</ul>
<p>I've got <em>SMTP</em> working fine, including the form email generator, and I can get the stats out of the excel sheet using <em>openpyxl</em>, but I cannot wrestle the information into a useable format to send. </p>
<p>The code I've got so far (for handling that info) looks like this: </p>
<pre><code># Open stats sheet
wb = openpyxl.load_workbook('Stats.xlsx')
sheet = wb.get_sheet_by_name('DATA')

# Get the author, title and price of last forty sales
ultimateRow = sheet.max_row + 1
limitRow = sheet.max_row - 40
recentList = []
for row in range(limitRow, ultimateRow):
    recentSales = []
    for column in 'GHI':
        cell_name = '{}{}'.format(column, row)
        recentSales.append(sheet[cell_name].value)
    recentList.append(recentSales)

print(*recentList)
</code></pre>
<p>What I get from that is a whole ream of text, like this:</p>
<blockquote>
<p>['DEIGHTON, Len (born 1929).', 'Twinkle Twinkle Little Spy.', 20] ['BROOKE, Rupert (1887-1915); ABERCROMBIE, Lascelles (1881-1938); DRINKWATER, John (1882-1937); GIBSON, Wilfrid Wilson (1878-1962).', 'New Numbers Volume 1 Number 3.', 76] ['SHUTE, Nevil.', 'A Town Like Alice.', 100] ['SWINBURNE, Algernon Charles (1837-1909).', 'A Song of Italy.', 15]</p>
</blockquote>
<p>Ideally what I would want to send in an email would look like this, with a new line for each individual sale item: </p>
<blockquote>
<p>DEIGHTON, Len (born 1929). - Twinkle Twinkle Little Spy.-  20</p>
<p>BROOKE, Rupert (1887-1915); ABERCROMBIE, Lascelles (1881-1938); DRINKWATER, John (1882-1937); GIBSON, Wilfrid Wilson (1878-1962) - New Numbers Volume 1 Number 3. - 76</p>
</blockquote>
<p>I've written an email body, which is set up to include the list of info using a format like the following:</p>
<pre><code>body = ''' This is an email. Here's the list: {}'''.format(list)
</code></pre>
<p>Any pointers on the no doubt hideous code above would be gratefully received. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>for ls in recentList:
    line = " - ".join([str(x) for x in ls])
    print(line + "\n")
</code></pre>
<p><a href="https://www.diffchecker.com/EEJcuu1W" rel="nofollow">https://www.diffchecker.com/EEJcuu1W</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As others have said, use join. </p>
<p>You could, in place of 
<code>recentList.append(recentSales)</code> 
do something like: 
<code>recentList.append(' '.join([str(x) for x in recentSales)</code> 
which will result in a nicely-formatted list of strings in <code>recentList</code>.</p>
<p>The line to generate your email body could then be something like:</p>
<pre><code>&gt;&gt;&gt; body = 'This is an email. Here is the list\n' + '\n'.join('{}'.format(l) for l in recentList)
&gt;&gt;&gt; print body
This is an email. Here is the list
DEIGHTON, Len (born 1929). Twinkle Twinkle Little Spy. 20
BROOKE, Rupert (1887-1915); ABERCROMBIE, Lascelles (1881-1938); DRINKWATER, John (1882-1937); GIBSON, Wilfrid Wilson (1878-1962). New Numbers Volume 1 Number 3. 76
SHUTE, Nevil. A Town Like Alice. 100
SWINBURNE, Algernon Charles (1837-1909). A Song of Italy. 15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe something like this will produce what you need.</p>
<pre><code>for ls in recentList:
    line = " ".join([str(x) for x in ls])
    print(line + "\n")
</code></pre>
</div>
<span class="comment-copy">Look at using " ".join(recentSales) to turn lists into strings. And please look at the most recent openpyxl documentation.</span>
<span class="comment-copy">Elements in a list will automatically be converted to strings so there is no need for the nested comprehension.</span>
<span class="comment-copy">@CharlieClark <code>&gt;&gt;&gt; mylist ['DEIGHTON, Len (born 1929).', 'Twinkle Twinkle Little Spy.', 20] &gt;&gt;&gt; " ".join(mylist) Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; TypeError: sequence item 2: expected string, int found</code></span>
<span class="comment-copy">@CharlieClark <a href="https://docs.python.org/3/library/stdtypes.html?highlight=join#str.join" rel="nofollow noreferrer">python docs</a> says it only takes strings</span>
<span class="comment-copy">@SeahChinYing This approach produces the line format required, but only when printed. I need this information to appear in this format when introduced as part of</span>
<span class="comment-copy">@SeahChinYing as part of body = '''email contents. List here: {}'''.format(recentList) where recentlist is in the proper format.</span>
