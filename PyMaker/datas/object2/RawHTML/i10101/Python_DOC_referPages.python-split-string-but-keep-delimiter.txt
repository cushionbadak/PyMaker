<div class="post-text" itemprop="text">
<p>In python I can easily read a file line by line into a set, just be using:</p>
<pre><code>file = open("filename.txt", 'r')
content = set(file)
</code></pre>
<p>each of the elements in the set consists of the actual line and also the trailing line-break.</p>
<p>Now I have a string with multiple lines, which I want to compare to the content by using the normal set operations.</p>
<p>Is there any way of transforming a string into a <code>set</code> just the same way, such, that it also contains the line-breaks?</p>
<hr/>
<p>Edit:</p>
<p>The question <a href="https://stackoverflow.com/questions/2136556/in-python-how-do-i-split-a-string-and-keep-the-separators">"In Python, how do I split a string and keep the separators?"</a> deals with a similar problem, but the answer doesn't make it easy to adopt to other use-cases.</p>
<pre><code>import re
content = re.split("(\n)", string)
</code></pre>
<p>doesn't have the expected effect.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple generator that does the job:</p>
<pre><code>content = set(e + "\n" for e in s.split("\n"))
</code></pre>
<p>This solution adds an additional newline at the end though.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines"><code>str.splitlines()</code></a> method does exactly what you want if you pass <code>True</code> as the optional <code>keepends</code> parameter. It keeps the newlines on the end of each line, and doesn't add one to the last line if there was no newline at the end of the string.</p>
<pre><code>text = "foo\nbar\nbaz"
lines = text.splitlines(True)
print(lines) # prints ['foo\n', 'bar\n', 'baz']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can also do it the other way round, remove line endings when reading file lines, assuming you open the file with <code>U</code> for universal line endings:</p>
<pre><code>file = open("filename.txt", 'rU')
content = set(line.rstrip('\n') for line in file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Could this be what you mean?</p>
<pre><code>&gt;&gt;&gt; from io import StringIO
&gt;&gt;&gt; someLines=StringIO('''\
... line1
... line2
... line3
... ''')
&gt;&gt;&gt; content=set(someLines)
&gt;&gt;&gt; content
{'line1\n', 'line2\n', 'line3\n'}
</code></pre>
</div>
<span class="comment-copy">Are you sure this is what you want? Would it be easier to write file.read().split('\n') and compare that to your string?</span>
<span class="comment-copy">Most of the time the wright thing to do is to ignore white space, you can do <code>set(line.strip() for line in file)</code></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/2136556/in-python-how-do-i-split-a-string-and-keep-the-separators">In Python, how do I split a string and keep the separators?</a></span>
<span class="comment-copy">@xenteros actually not, because the answers there are not very portable to other use-cases. I've added a statement to that in the bottom part of the question.</span>
<span class="comment-copy">Worse than adding a newline to the last line if it didn't have one already, this code adds an entire extra string with only a newline in it if the last line of the original text <i>did</i> have a trailing newline. So if <code>s</code> is <code>"foo\nbar\n\baz\n"</code>, your code will make <code>content</code> into a set equal to <code>{'foo\n', 'bar\n', 'baz\n', '\n'}</code>.</span>
