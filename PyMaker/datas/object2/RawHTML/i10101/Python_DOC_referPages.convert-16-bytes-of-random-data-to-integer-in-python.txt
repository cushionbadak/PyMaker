<div class="post-text" itemprop="text">
<p>I have generated a random 16 byte string. It looks like this:</p>
<pre><code>b'\xb68 \xe9L\xbd\x97\xe0\xd6Q\x91c\t\xc3z\\'
</code></pre>
<p>I want to convert this to a (positive) integer. What's the best way to do this in Python?</p>
<p>I appreciate the help.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.2+, you can use <code>int.from_bytes()</code>:</p>
<pre><code>&gt;&gt;&gt; int.from_bytes(b'\xb68 \xe9L\xbd\x97\xe0\xd6Q\x91c\t\xc3z\\', byteorder='little')
122926391642694380673571917327050487990
</code></pre>
<p>You can also use 'big' byteorder:</p>
<pre><code>&gt;&gt;&gt; int.from_bytes(b'\xb68 \xe9L\xbd\x97\xe0\xd6Q\x91c\t\xc3z\\', byteorder='big')
242210931377951886843917078789492013660
</code></pre>
<p>You can also specify if you want to use two's complement representation. For more info: <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow">https://docs.python.org/3/library/stdtypes.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>A solution compatible both with Python 2 and Python 3 is to use struct.unpack:</p>
<pre><code>import struct
n = b'\xb68 \xe9L\xbd\x97\xe0\xd6Q\x91c\t\xc3z\\'
m = struct.unpack("&lt;QQ", n)
res = (m[0] &lt;&lt; 64) | m[1]
print(res)
</code></pre>
<p>Result: 298534947350364316483256053893818307030L</p>
</div>
<span class="comment-copy">What's its intended endianness?</span>
<span class="comment-copy">Possibly related: <a href="http://stackoverflow.com/questions/444591/convert-a-string-of-bytes-into-an-int-python" title="convert a string of bytes into an int python">stackoverflow.com/questions/444591/â€¦</a></span>
<span class="comment-copy">@Logan I saw that post too, but I don't understand why to use struct? That can't be the solution.</span>
<span class="comment-copy">@kindall Little Endian</span>
<span class="comment-copy">Oh I think that's exactly what I need. If my data is random, I think it does not matter if I use little or big endian, it will just shuffle the number, right?</span>
<span class="comment-copy">I guess it would depend on what exactly you're planning on doing with the integer, but yes, the number will be different if you change the byteorder.</span>
<span class="comment-copy">What is the command to go back to the original string from that number?</span>
<span class="comment-copy">Looks like you could use int.to_bytes(): <a href="https://docs.python.org/3/library/stdtypes.html#int.to_bytes" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#int.to_bytes</a></span>
