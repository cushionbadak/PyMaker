<div class="post-text" itemprop="text">
<p>so this is what I'm doing: I'm pulling up a file and having the program read it. Every time it encounters a letter, it'll add the letter to list1 and add '1' to list2. Every time it encounters a letter in list1, it'll increment list2 by 1. </p>
<pre><code>txt = open("Nameoffile.txt")
wordcount = 0
Charcount = 0
letterlist = [] #list 1
lettercount = [] #list 2

for words in txt:
    print(words)
    for letters in words:
        if letters not in letterlist:
           letterlist.append(letters)
           lettercount[letters] = 1
        else:
           lettercount[letters] += 1

        Charcount += 1
        print(letters)
        if letters == ' ':
           wordcount += 1
        if letters == '.':
           wordcount += 1
        if letters == '\n':
           Charcount -= 1
           wordcount += 1

#down here it would print the results
</code></pre>
<p>the problem I'm running into is that when running this, I get the following error:
line 14, lettercount[letters] = 1
TypeError: list indices must be integers or slices, not str</p>
<p>I assumed I could get away with stating that at list[letter] set that value to a number, but it isn't liking it. any possible hints on what to do?</p>
</div>
<div class="post-text" itemprop="text">
<p>That line of your function essentially tries to do something like this:</p>
<pre><code>lettercount['a'] += 1
</code></pre>
<p>which doesn't really make any sense. Lists are ordered collections and are only accessible via numerical index, which is why you get an error telling you that an integer is required (not a string). As the other answers mentioned, you really want to store the count for each letter in a dict. The Python standard library provides a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>Counter</code></a> dict subclass which is actually perfect for your needs - it'll count the characters for you and make it easy to remove duplicates:</p>
<pre><code>import collections

lettercount = collections.Counter(yourtext)

letterlist = set(lettercount)
charcount = len(list(c for c in lettercount.elements() if c != '\n'))
wordcount = lettercount[' '] + lettercount['.'] + lettercount['\n']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Lists work with integer indexes, you can use a dictionary instead:</p>
<pre><code>lettercount = {} #list 2
</code></pre>
<p>Dictionaries have the capacity to store key, values objects, so you can use not numeric keys to acees values. Their use is similar to the lists so you can still use:</p>
<pre><code>lettercount[letters] = 1
</code></pre>
<p>to add or update a key in the dictionary, however they are not iterable as lists, you have to iterate them using keys or iteritems methods.
To print the results you can iterate over the keys and display the count:</p>
<pre><code>for e in lettercount.keys():
    print (e, str(lettercount[e]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>lettercount should be type dict, not list. 
Type dict maps a unique key to a value, while list just contains values.
The value within brackets for a list should be an integer referring to a position in the list, while a dictionary will reference the key in brackets. </p>
</div>
<span class="comment-copy">Are you looking for <code>lettercount[lettercount.index(letters)]</code>?</span>
<span class="comment-copy">the error is telling me that it's coming up with a str and it won't add that integer value. will adding that '.index' end up fixing the issue?</span>
<span class="comment-copy">The error is telling you that when accessing the list, indices must be integers, like <code>list_here[1]</code>, not <code>list_here["string"]</code>. If you want to get the index where the string appears, use <code>index</code> but that may not be what you want. Maybe a dictionary to store counts?</span>
<span class="comment-copy">after changing the lettercount[letters] += 1 after the else, it's giving me this error: ValueError: 't' is not in list</span>
<span class="comment-copy">solid response, I appreciate it Noah!</span>
<span class="comment-copy">Thanks for the comment Andrew, my intention was to be very concise and address how to solve the problem, not to give a full explanation about the use and capabilities of dictionaries in python. Anyway I will take it into account for my next comment.</span>
<span class="comment-copy">Care to elaborate?</span>
