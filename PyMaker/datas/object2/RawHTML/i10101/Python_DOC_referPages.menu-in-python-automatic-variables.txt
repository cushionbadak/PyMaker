<div class="post-text" itemprop="text">
<p>I'm working on a program but I'm stuck. I have created a menu with multiple options. Now I'm wondering is it possible to automatically create variables if you add a team. I.E.: normally you would enter the variable at the top and do it like teamA = input. Is it possible to do this automatically without any given variables and use of a database?</p>
<pre><code>loop=True
while loop:
    print("""
    LAN-Party 2017:
    ---------------

    1. Add a team.
    2. Look at the teams.
    3. Look at the scores for the teams.
    4. Add scores for the team.
    5. Quit.
     """)
loop=input("What do you want to do?")
if loop=="1":
#what goes here?
</code></pre>
<p>I've tried looking around on google and on this site but couldn't find anything. Also sorry for the vague description, this is the best I could do. 
Thanks in advance :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Lets say this variable you want is just a team name, you could just put all the team names in a list, and if you need to refer to them, you could do so by indexing.</p>
<pre><code>teams = []
if loop == 1:
    team = input("enter team name")
    teams.append(team)
</code></pre>
<p>Personally, I would make a team class that could hold things like members, score, or whatever you want. </p>
</div>
<div class="post-text" itemprop="text">
<p>You don't exactly 'create a new variable', but what you're wanting to do is store a list of teams and then add to it when the user selects the first option.  The following will get you started in the right direction...</p>
<pre><code>teams = list()
loop = True

while True:
    print("Lan-Party 2017")
    print("---------------")
    print("\n1. Add a team")

    choice = raw_input("Action: ")

    if int(choice) == 1:
        team_name = raw_input("Team Name: ")
        teams.append(team_name)

    print(teams)
</code></pre>
<p>You should do some reading on python lists and python dictionaries.  <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>sure ...</p>
<pre><code>db = {}

def add_team(team_name):
    db[team_name]={"members":[],"score":0}

def get_team(team_name):
    return db.get(team_name,None)

def add_member(member_name,team_name):
    try:
      db[team_name]['members'].append(member_name)
    except KeyError:
      print "That team doesnt exist"
def remove_member(member_name,team_name):
    try:
       return db[team_name]['members'].remove(member_name)
    except (KeyError,ValueError):
       return None
# you will need to implement try excepts or some check to ensure that team is registered          
def record_win(team_name):
    db[team_name]['score'] += 1

def record_loss(team_name)
    db[team_name]['members'] -= 1
</code></pre>
<p>in this case i just used a simple dictionary as my database (I know its not a real database... but its plenty good for this) ... </p>
</div>
<span class="comment-copy">What would the variable represent? What information does a 'team' contain?</span>
<span class="comment-copy">Just the teamname, nothing more.</span>
<span class="comment-copy">This is really vague - what exactly would this be and how is it supposed to be better than a "normal" variable? Also this code will never exit the first <code>while</code> loop</span>
<span class="comment-copy">Thanks, this helped a lot :)</span>
<span class="comment-copy">@JoranBeasley Good point, the code has been updated</span>
<span class="comment-copy">Thanks, I'll definetly do that!</span>
<span class="comment-copy">@L.Kappa Not a problem.  You may also want to create a Team class and then have a scores list inside of it.  That will allow for you easily to keep track of the relation between them.  If you need the data to be normalized, when you input a score you will want to track the index of the team and store it with the score.  I.e. scores = [(1, 50), (1, 25), (2,30)] where it is (team index, team score)</span>
