<div class="post-text" itemprop="text">
<p>if this is duplicate, already answered then sorry, i didn't came across this question </p>
<p>as i was reading itertools count, generating an iterator using for loop is easy, and i was trying to do that in list comprehension but i am facing this problem</p>
<pre><code>from itertools import *
</code></pre>
<p>by using for loop</p>
<pre><code>for x in itertools.count(5,2):
    if x &gt; 20:
        break
    else: 
        print(x)
5
7
9
11
13
15
17
19
</code></pre>
<p>i tried to do this in list comprehension</p>
<pre><code>[x if x&lt;20 else break for x in count(5,2)]
  File "&lt;ipython-input-9-436737c82775&gt;", line 1
    [x if x&lt;20 else break for x in count(5,2)]
                    ^
SyntaxError: invalid syntax
</code></pre>
<p>i tried with islice method and i got the answer</p>
<pre><code>[x for x in itertools.islice(itertools.count(5),10)]
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
</code></pre>
<p>without using islice method, how can I exit(using break or any thing) by using only count method?</p>
<p>additionally how to implement <code>break</code> in <code>list comprehensions</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's no <code>break</code> inside list comprehensions or generator expressions, but if you want to stop on a certain condition, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>takewhile</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import takewhile, count
&gt;&gt;&gt; list(takewhile(lambda x: x &lt; 20, count(5, 2)))
[5, 7, 9, 11, 13, 15, 17, 19]
</code></pre>
</div>
<span class="comment-copy">Why don't you like <code>islice</code>? There's definitely no <code>break</code> inside list comprehension, but there's <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>takewhile</code></a>.</span>
<span class="comment-copy">Why don't you use <code>range(5, 20, 2)</code> or <code>range(5, 15)</code> ?</span>
<span class="comment-copy">it's not about liking, i just want to know that "can i do in this way or not?" @bereal</span>
<span class="comment-copy">i can use range, as i was reading itertools, i tried to do with itertools @falsetru</span>
<span class="comment-copy">takewhile ha, thank you</span>
<span class="comment-copy">You can <code>list(takewhile(int(20).__gt__, count(5, 2)))</code> to remove the ugly lambda and it will be quite a but faster.</span>
<span class="comment-copy">@PadraicCunningham faster yes, but I would perhaps question the comparative ugliness.</span>
<span class="comment-copy">I meant ugly as much for the overhead as the visual representation, a lambda with any functional code is the kiss of death for performance which is generally what you are trying to achieve when using itertools, map, filter etc.</span>
<span class="comment-copy">@avimatta You can also accept the answer, this is the greatest "Thank you, it works!"</span>
