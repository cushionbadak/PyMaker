<div class="post-text" itemprop="text">
<p>User's input are the names of the experiments and a file with data. After data manipulation I have saved in a dict which sample (row) in the file corresponds to which experiment.
For example, (sometimes sample can belong to either several experiments, or one or none)</p>
<pre><code>exp_sample["sample1"]=['experiment5','experiment6']
exp_sample["sample3"]=['experiment5']
</code></pre>
<p>While parsing the datafile again (for the second time) I want to write the sample row into the corresponding experiment file. Meaning, all experiment files should be opened while I am parsing through the datafile. My idea is following:</p>
<pre><code>experiment_files = {exp: open(exp+".fastq",'w') for exp in experiments}
for read in SeqIO.parse(fastq, 'fastq'):
    experiment = exp_sample[sample.id]
    #if sample belongs only to one experiment
    #or sample belongs to two the same experiments
    if len(experiment)==1 or (len(exp)==2 and (exp[0]==exp[1]))
        SeqIO.write(read,exp_files[experiment[0]],'fastq')
(x.close() for x in experiment_files.values())
</code></pre>
<p>My question is, is it legit to open the files saved in the <code>dict</code> and then close them in that way? Or is there any other cleverer way of doing it?</p>
<p>PS. I know, I could have saved the sample rows into the lists of corresponding experiments and then write all experiment record in an experiment file but the datafile can be of several GB. </p>
</div>
<div class="post-text" itemprop="text">
<p>After we discussed at the comment I update my original answer.</p>
<p>If you want to open multiple files, you can do it with the context manager <a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow"><code>ExitStack</code></a>. </p>
<p>Here is an example code:</p>
<pre><code>with ExitStack() as stack:
    files = [stack.enter_context(open(fname)) for fname in filenames]
</code></pre>
<p>Each element in the <code>files</code> list represent one file that you open.</p>
</div>
<span class="comment-copy">I think you should use context manager in a loop over <code>experiments</code>, instead of iterating twice on <code>experiments</code> using the <code>with</code> statement</span>
<span class="comment-copy">@OrDuan I do not iterate twice on experiments, I iterate twice over datafile, namely SeqIO.parse(fastq, 'fastq')</span>
<span class="comment-copy">It should be legal to do so, although using a generator expression like that at the end, just for its side-effects, is considered a poor practice. You can formalize it by using what is shown in this <a href="http://stackoverflow.com/a/21683192/355230">answer of mine</a> to another question.</span>
<span class="comment-copy">That generator expression won't do anything. The equivalent list comprehension <code>[x.close() for x in experiment_files.values()]</code> <i>will</i> work, but it's bad practice to make a list that you immediately throw away. Just use a plain <code>for</code>  loop: <code>for x in experiment_files.values():  x.close()</code></span>
<span class="comment-copy">It would have been better if you'd just modified your original answer. Remember, deleted answers aren't actually deleted: anyone with 10k+ rep can see them.</span>
<span class="comment-copy">@OrDuan I am saving the the opened files in the dictionary because I need access to them according to the experiment name <code>SeqIO.write(read,exp_files[experiment[0]],'fastq')</code></span>
<span class="comment-copy">@Anni you still can use the dict you created. something like this: <code>{exp: stack.enter_context(open(exp+".fastq",'w')) for exp in experiments}</code> so you won't have to use the <code>close</code> method</span>
