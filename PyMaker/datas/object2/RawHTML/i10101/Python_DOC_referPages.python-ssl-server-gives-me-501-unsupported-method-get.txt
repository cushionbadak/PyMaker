<div class="post-text" itemprop="text">
<p>I've followed <a href="https://anvileight.com/blog/2016/03/20/simple-http-server-with-python/" rel="nofollow">this link</a> to build a simple file server with SSL.</p>
<pre><code>from http.server import HTTPServer, BaseHTTPRequestHandler
import ssl

httpd = HTTPServer(('localhost', 4443), BaseHTTPRequestHandler)

# openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365
httpd.socket = ssl.wrap_socket (httpd.socket, keyfile="key.pem", certfile='cert.pem', server_side=True)

httpd.serve_forever()
</code></pre>
<p>I have created a certificate successfully, <code>key.pem</code> and <code>cert.pem</code> file paths are cool and I can start the server using <code>python server.py</code>. I am asked for a password, enter it, then it freezes for a bit and then it seems to run.</p>
<p>However, when I enter some URL such as <code>https://localhost:4443/index.html</code> I get <strong>500 Unsupported method GET. Error code explanation: HTTPStatus.NOT_IMPLEMENTED - Server does not support this operation.</strong> Do I need to do something more to make my server serve the current directory? Until now I have just used <code>python -m http.server 8000</code> (<code>SimpleHTTPServer</code> when on Mac.) I am using Python 3.</p>
<p>This is an will stay local so don't worry about the <code>PEM</code> files and the server script being exposed through it (if it worked!). I am also okay with the certificate being untrusted and instructed Chrome to visit the page anyway. I just need it to allow me to access camera without having to deploy my app somewhere with a legit cert.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/http.server.html#module-http.server" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>class http.server.BaseHTTPRequestHandler(request, client_address, server)</p>
<blockquote>
<p>This class is used to handle the HTTP requests that arrive at the server. By itself, it cannot respond to any actual HTTP requests; it must be subclassed to handle each request method (e.g. GET or POST).</p>
</blockquote>
</blockquote>
<p>Try using <a href="https://docs.python.org/3/library/http.server.html#http.server.SimpleHTTPRequestHandler" rel="nofollow noreferrer">SimpleHTTPRequestHandler</a> instead, eg,</p>
<pre><code>httpd = socketserver.TCPServer(('localhost', 4443), SimpleHTTPRequestHandler)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please, use </p>
<pre><code>httpd = HTTPServer(('localhost', 4443), BaseHTTPRequestHandler)
</code></pre>
<p>instead to get the same as SimpleHttpServer behavior.</p>
</div>
<span class="comment-copy">The link contains code that is not legit, for python3. What you want is the SimpleHTTPRequestHandler and you try to use the BaseHTTPRequestHandler, so maybe it's a bogus article, and not that simple as the author claims. Tried and make it work but it didn't work for python 2 or 3 following the link. DIY!</span>
<span class="comment-copy">That's literally the line from the original script in my answer?</span>
