<div class="post-text" itemprop="text">
<p>What I am trying to do is read from a text file that has a list of names that corresponds to three grades.  In the program the file is read and entered into one dictionary.  From the dictionary I am to compare scores and print which is the highest, lowest, etc.  I'm trying to use a for loop, but I keep running into several issues.  This time I ran into error type 1 when I try to compile.  What is the best way to compare dictionary values in a for loop?  Any Suggestions?</p>
<p>Here is a same of the text file:</p>
<pre><code>Brian,94,89,92
Rachel,100,90,65
Jon,67.5,95,100
Brit,0,78,80
Greg,65,100,78
Andrea,55.5,67,79
</code></pre>
<p>Here is my code so far: Error output at the bottom.</p>
<pre><code>def examMod ():

    students = {}

    infile = open("studentGrades.txt","r")
    for aline in infile:
        key, val1, val2, val3 = aline.split(',')
        students[key] = float(val1), float(val2), float(val3)

    for z in students.keys():   
        for x in students.items():
            if students[1] &gt; students[2] &amp; students[1] &gt; students[3]:
                print("For %s test 1 is the highest scored." % z)
            elif students[2] &gt; students[1] &amp; students[2] &gt; students[3]:
                print("For %s test 2 is the highest scored." % z)
            elif students[3] &gt; students[1] &amp; students[3] &gt; students[2]:
                print("For %s test 2 is the highest scored." % z)


Traceback (most recent call last):
  File "&lt;pyshell#1&gt;", line 1, in &lt;module&gt;
    examMod()
  File "E:\Python\Lib\idlelib\redoMidterm.py", line 12, in examMod
    if students[1] &gt; students[2] &amp; students[1] &gt; students[3]:
KeyError: 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't think you're pulling out the details you think you are. I'd take a double check at what <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow"><code>keys()</code> and <code>items()</code> do</a>.</p>
<p>Your first hint is the <code>KeyError: 1</code>. What that means, is you've checked in a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionary</a> for the key <code>1</code> but it doesn't exist (Confusing, but it's not error type 1, it's just the value 1 is what caused the error). Looking at the line returned: <code>if students[1] &gt; students[2] &amp; students[1] &gt; students[3]:</code> it's going to come from students. That means <code>students</code> is a dictionary and <code>1</code> is not a key in it.</p>
<p>Secondly, you're not using those loops correctly. A good tip for checking how you're using it is calling the function with a print statement in there. E.g.</p>
<pre><code>for z in students.keys():
    for x in students.items():
        print(z, x)
        # Then comment out the rest of this loop
</code></pre>
<p>Based on the first three lines of example data you've given us, this will return:</p>
<pre><code>Brian ('Brian', (94.0, 89.0, 92.0))
Brian ('Rachel', (100.0, 90.0, 65.0))
Brian ('Jon', (67.5, 95.0, 100.0))
Rachel ('Brian', (94.0, 89.0, 92.0))
Rachel ('Rachel', (100.0, 90.0, 65.0))
Rachel ('Jon', (67.5, 95.0, 100.0))
Jon ('Brian', (94.0, 89.0, 92.0))
Jon ('Rachel', (100.0, 90.0, 65.0))
Jon ('Jon', (67.5, 95.0, 100.0))
</code></pre>
<p>Why's that? Because you're looping through each student's name with <code>students.keys()</code> and for each student, you're then looping through each student again, providing the key, and the value, with <code>students.items()</code>. I'd spend a bit of time figuring this out, because this is actually the biggest part of your problem.</p>
<p>The reason why you're getting the key error? Because you're only checking the original dictionary with <code>students[...]</code>.</p>
<p>Once you've sorted that out, you're going to come to a third problem. An <code>IndexError</code> because you're accessing the 4th element of the 3 element score array with <code>whatever_you_are_checking[3]</code>. Because the first element of an array is Index <code>0</code>, the second <code>1</code>, the third <code>2</code>. Computer Scientists count from 0.</p>
<p>So. Ultimately, you need:</p>
<ol>
<li>Only a single loop over the students. You only need to check each name once</li>
<li>To look at the scores, not at the student arrays when you're doing your checks</li>
<li>Make your comparisons from base-0, not base-1</li>
</ol>
<p>Basically, something like:</p>
<pre><code>for z in students.keys():
    if students[z][0] &gt; students[z][1] and students[z][0] &gt; students[z][2]:
        print("...")
</code></pre>
<hr/>
<p>The following is non-essential, but just some stuff I want to show off because python is really cool.</p>
<ul>
<li><p>As you figured out in your <code>split</code> statement, you can break apart returns from lists or tuples into multiple variables in one go. You could use this to make life for your for loop easier:</p>
<pre><code>for student_name, score in students.items():
# or event
for student_name, (score1, score2, score3) in students.items():
    print(student_name, score1, score2, score3)
    #: Brian 94.0 89.0 92.0
</code></pre></li>
<li><p>Multiple comparison in a single statement is a thing... And useful in your case.</p>
<pre><code># For example:
5 &lt; 10 &gt; 7 # will return True
# So use this like:
if score2 &lt; score1 &gt; score3:
    # score 1 is the highest
</code></pre></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>There are several mistakes in your code :</p>
<ol>
<li>the biggest one is how you try to get each exam mark. <code>students</code> is the whole dict, so to access one mark you have to call <code>students[student_name][exam_number]</code>. That what your error says, that <code>students[1]</code> doesn't exist.</li>
<li>You are looping the wrong way : your first loop goes over students name (<code>students.keys()</code>), then the second loop goes over the whole dict, students name and along with their marks. It is redundant and you don't actually use the second loop.</li>
<li>List indices start at <code>0</code> so in <code>l=[6,7]</code> you can call <code>l[0]</code> (6) and <code>l[1]</code> (7); but <code>l[2]</code> is outside the list.</li>
<li>You have to had some parenthesis around your marks comparisons.</li>
<li>Those aren't mistakes but suggestions: You shouldn't have a <code>print</code> for each case, there are ways just to get index of the max. You should also try to name your looping variables more clearly <code>z</code> is not very explicit whereas <code>student</code> or <code>student_name</code> is.</li>
</ol>
<p>Here is a first correction that stays close to your original code: </p>
<pre><code>students = {'Brian': (94,89,92), 'Rachel': (100,90,65), 'Jon': (67.5,95,100)}

for student,exams in students.items():  #students.iteritems() in python2
    if (exams[0] &gt; exams[1]) &amp; (exams[0] &gt; exams[2]):
        print("For %s test 1 is the highest scored." % student)
    elif (exams[1] &gt; exams[0]) &amp; (exams[1] &gt; exams[2]):
        print("For %s test 2 is the highest scored." % student)
    elif (exams[2] &gt; exams[0]) &amp; (exams[2] &gt; exams[1]):
        print("For %s test 3 is the highest scored." % student)
</code></pre>
<p>Here is a better version :</p>
<pre><code>for student,exams in students.items():  #students.iteritems() in python2
    best_exam = 1+exams.index(max(exams))
    print("For %s test %s is the highest scored." % (student,best_exam))
</code></pre>
</div>
<span class="comment-copy">Can you include the error? What's the stack trace that it outputs?</span>
<span class="comment-copy">Added that in now.  Forgot to add that, probably would help right?</span>
