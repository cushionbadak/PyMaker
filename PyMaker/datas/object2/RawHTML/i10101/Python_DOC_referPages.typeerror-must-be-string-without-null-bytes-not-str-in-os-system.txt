<div class="post-text" itemprop="text">
<p>I am trying to write a python code which executes a C executable using the following line </p>
<pre><code>os.system("./a.out \"%s\"" % payload)
</code></pre>
<p>where ./a.out is a C executable, and payload is a string (without spaces) given as command line argument. (The link is <a href="http://codearcana.com/posts/2013/05/28/introduction-to-return-oriented-programming-rop.html" rel="nofollow">this</a>. I am trying to follow example under section chaining functions)
<br/> Now I have written another C code but it takes 3 command line arguments. So my string should be arg[1] + " " + arg[2] + " " + payloadString. 
(The c code is converting the arg[1] and arg[2] into integer to use it in its functions). Here is the snippet of my python code:</p>
<pre><code>p = "10 "  #arg[1]
p += "10 " #arg[2]
p += "string without spaces which I need as payload" #arg[3]
os.system("./a.out \"%s\"" % p)
</code></pre>
<p><br/> where ./a.out is executable of my C code which takes 3 command line arguments. When I run the python code I get error:</p>
<pre><code>Traceback (most recent call last):
File "this_file.py", line XX, in &lt;module&gt;
os.system("./a.out \"%s\"" % p)
TypeError: must be string without null bytes, not str
</code></pre>
<p><br/>Can anyone help me?
<br/>P.S. I am new to python. Similar questions were there in stack overflow, but I am not sure how to use their answers to solve my problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Put an <code>r</code> in the <code>os.system</code> call. </p>
<pre><code>os.system(r"./a.out \"%s\"" % p)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why don't you use call for this purpose. I guess it will do the work
You can provide the arguments in the list
Example:</p>
<pre><code>from subprocess import call
call(["./a.out","10","10","string without spaces which I need as payload"])
</code></pre>
<p>here in your case it is equivalent to </p>
<pre><code>call(["./a.out",arg[0],arg[1],arg[2]])
</code></pre>
<p>I think this should work</p>
</div>
<span class="comment-copy">I advise you to use the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code> module</a> instead.</span>
<span class="comment-copy">You don't need <code>os.system</code> to do that. Use <code>subprocess.call</code>: <code>subprocess.call(['./a.out', p])</code> no need of escaping anything. Also: the error message is about <b>null</b> characters, i.e. <code>\0</code>, not <i>whitespace</i> characters... are you sure that the <code>p</code> you are using is exactly the one you have shown us?</span>
<span class="comment-copy">Are you sure that's the exact command line you're using? From what I've read, this error would happen if you have <code>\0</code> somewhere in the command line.</span>
<span class="comment-copy">The same error(TypeError: must be string without null bytes, not str ) comes again.</span>
<span class="comment-copy">I ran this line call(["./a.out","10","10",p]) where p is my payload string, I got error : TypeError: execv() arg 2 must contain only strings.</span>
<span class="comment-copy">you constructed your payload using the three arguments. I already passed your arguments as elements in the list. You need to pass the three arguments as elements in the list like I did. Or maybe there can be some type mismatch in your c program also. Please check it once.</span>
<span class="comment-copy">while using "call", I modifed my string p not to include the arg[1] and arg[2]. I will check my C code to check for mismatches.</span>
<span class="comment-copy">My payload string was using struct.pack() method. This was leading to the error message of "must contain only strings."</span>
