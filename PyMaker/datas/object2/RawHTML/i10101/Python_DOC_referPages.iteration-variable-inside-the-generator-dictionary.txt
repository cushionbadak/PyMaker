<div class="post-text" itemprop="text">
<p>Good day!
There is a question about iterating inside the generator dictionaries in python:</p>
<pre><code>sort_dict = {select_keys: {rows: {j: item for item in self.csv_dict.values() if item.get(select_keys) == rows} for rows in keys}}
</code></pre>
<p>It is necessary that the variable <code>j</code> increases until it vyrozhenie data are recorded:</p>
<pre><code>for item in self.csv_dict.values () if item.get (select_keys) == rows}
</code></pre>
<p>I'm new to python, so I apologize for the stupid question. I for a long time I fight over this trivial issue, but it should perform - because this problem needs to be put now.</p>
<p>There is a class that deals piercing file csv:</p>
<p>`import csv</p>
<p>class CSV():</p>
<pre><code>def __init__(self, file_path):
    super().__init__()
    self.file_path = file_path
    self.csv_dict = {}

"""Данный метод парсит переданный в класс CSV файл"""
def parseeCSV(self):
    print('\n')
    self.getDictCSV()
    print(self.getListKeysCSV())
    unic_key = self.getUnicValFromCustomKeys('zip')
    sort_csv = self.getCsvSortForKeys(unic_key, 'zip')

"""Данный метод создает словарь из переданного в класс CSV файла
Словарь вида {Номер строки(записи){строка(запись)}}
"""
def getDictCSV(self):
    i = 0
    with open(self.file_path, 'r') as csv_desctiptor:
        csv_obj = csv.DictReader(csv_desctiptor)
        for csv_dict in csv_obj:
            self.csv_dict[i] = csv_dict
            i = i + 1
    del csv_desctiptor
    return True

"""Данный метод возвращает все ключи из словаря self.csv_dict[0]"""
def getListKeysCSV(self):
    return dict.keys(self.csv_dict[0])

"""Данный метод возвращает уникальные значения по выбранным полям"""
def getUnicValFromCustomKeys(self, keys):
    i = 0
    val_key = {}
    while i &lt; len(self.csv_dict):
        val_key[i] = self.csv_dict[i].get(keys)
        unic_val_key = set(val_key.values())
        i = i + 1
    return unic_val_key

def getCsvSortForKeys(self, keys, select_keys):
    #sort_dict = {select_keys: {rows: '' for rows in keys}}
    i = 0`
</code></pre>
<p>It parses the CSV type of file:</p>
<p><code>street,city,zip,state,beds,baths,sq__ft,type,sale_date,price,latitude,longitude
3526 HIGH ST,SACRAMENTO,95838,CA,2,1,836,Residential,Wed May 21 00:00:00 EDT 2008,59222,38.631913,-121.434879</code></p>
<p>At the same time he has to do Dictionary type:</p>
<p><code>csv_dict[key_select][key_select_val][num-element][element_csv_string]</code></p>
<p>For example: <code>csv_dict['zip']['95838'][1][3526 HIGH ST,SACRAMENTO,95838,CA,2,1,836,Residential,Wed May 21 00:00:00 EDT 2008,59222,38.631913,-121.434879</code></p>
<p>Thanks in advance, and I apologize for the stupid questions.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please , explain your question. </p>
<p>I am not able to collect any reference of j in your code. And also the code seems wrongly constructed. </p>
<pre><code>sort_dict = {select_keys: {rows: 
    {j: item for j,item in enumerate(self.csv_dict.values()) 
        if item.get(select_keys) == rows} for rows in keys}}
</code></pre>
<p>Hope that helps!</p>
</div>
<span class="comment-copy">what is <code>j</code>? how is <code>j</code> supposed to increment like <code>0..n</code>, or are there any specific incrementation.</span>
<span class="comment-copy">I don't quite understand your question, but you can probably use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> to produce the <code>j</code> values.</span>
<span class="comment-copy">@SSj.Luffy J - this is the usual variable of type integer. At each iteration, it should be increased by 1 and as soon as all contributions in rows dictionary item run to take the value 0, and start all over again</span>
<span class="comment-copy">@PM2Ring I just need to increase the <code>J</code> as I said earlier. The problem is that I do not know in advance how much should be increased J. Its final value may be either 5 or 10 depending on the number of elements satisfying <code>item</code></span>
<span class="comment-copy">There is a class that deals piercing file csv:</span>
<span class="comment-copy">sort_dict = {select_keys: {rows: {j: item for j,item in enumerate( self.csv_dict.values()) if item.get(select_keys) == rows} for rows in keys}}</span>
<span class="comment-copy">I'm sorry, I was the first time on stackoverflow. I answered your question by expanding topic</span>
<span class="comment-copy">Thank you - like a problem with the J solved, but the array is duplicated: <code>sort_dict = {select_keys: {rows: {j: item for j,item in enumerate(self.csv_dict.values()) if item.get(select_keys) == rows} for rows in keys}}         for roww in keys:             print(sort_dict[select_keys].keys())</code>  Result:  <code>dict_keys(['95663', '95747', '95835'....]) dict_keys(['95663', '95747', '95835'...])</code></span>
<span class="comment-copy">I apologize. Problem solved. Thank you so much. duplication problem is caused by my inattention. Thanks again!</span>
