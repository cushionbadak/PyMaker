<div class="post-text" itemprop="text">
<p>I am attempting to implement the <code>rfind</code> function in Python without using the built-in <code>rfind</code> method. It should work like the following:
Unlike the original method, takes an input string and a character as a parameter and returns the first index from the right where the character is found. Now I am getting stuck on what to do next..</p>
<pre><code># main function
inputString = input("Enter here: ")
inputChar = input("Which character would you like to find?")
print(Myrfind(inputString, inputChar))

def Myrfind(text,aChar):
    reverseString = text[::-1]
    for ch in reverseString:
        if ch == aChar:
            print()
        else:
            return -1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest approach, IMHO, would be to just iterate over the string backwards and compare each character:</p>
<pre><code>def myrfind(text, aChar):
    for i in range(len(text) - 1, -1, -1):
        if text[i]  == aChar:
            return i
    return -1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your function should be like (with minimal changes in current code):</p>
<pre><code>def Myrfind(text,aChar):
    reverseString = text[::-1]
    for i, c in enumerate(reverseString):  # enumerate() to iterate along with index
        if c == aChar:
            return len(text) - i - 1  # Return len(char) - i -1 since reverse string
    else:          # Return -1 if function is not
        return -1  # exited by for loop
</code></pre>
<p>Sample run: </p>
<pre><code>&gt;&gt;&gt; Myrfind('Hello', 'o')
4
&gt;&gt;&gt; Myrfind('Hello', 'l')
3
&gt;&gt;&gt; Myrfind('Hello', 'e')
1
&gt;&gt;&gt; Myrfind('Hello', 'a')  # 'a' not in string
-1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, in <code>ch</code> you have the <em>character</em>, not the <em>index of the character</em>, so even if you find it, you won't be able to know its index (you just know that the character is in your <code>text</code> string, nothing else)</p>
<p>Also, when you find a coincidence, you print... nothing (in <code>print()</code>)</p>
<p>And since the <code>return -1</code> (when not found) is within the <code>for</code> loop, you will stop the execution (returning <code>-1</code>) as soon as a character doesn't match the looked up character (you should be very familiar with the <a href="http://www.computerhope.com/jargon/r/returnst.htm" rel="nofollow">return</a> statement)</p>
<p>You reverse the string, but that is probably not very... "adviseable", because then your indexes get reversed. For instance, let's say you want to find the last <code>l</code> in <code>Hello</code>. You are expecting:</p>
<pre><code>       H e l l o
Index  0 1 2 3 4
</code></pre>
<p>And that should be <code>3</code>, but since you reverse it, and start walking it from left to right, you get:</p>
<pre><code>       o l l e H
Index  0 1 2 3 4
</code></pre>
<p>And the first match is in <code>1</code>, now... You can still do it, though... You can substract that index to the total lenght, and you should get it.</p>
<p>Firstly, I would recommend you read what the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> built-in does (to not only get the character, but also the index)</p>
<p>A pretty close thing to what you have could be:</p>
<pre><code>inputString = input("Enter here: ")
inputChar = input("Which character would you like to find?")


def Myrfind(text,aChar):
    reverseString = text[::-1]
    for i, ch in enumerate(reverseString):
        if ch == aChar:
            return len(text) - 1 - i
    return -1


print(Myrfind(inputString, inputChar))
</code></pre>
<p>Or, instead of inverting the array, just start reading from the right (see what <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range</a> does)</p>
<pre><code>def Myrfind(text,aChar):
    for i in range(len(text) - 1, -1, -1):
        ch = text[i]
        if ch == aChar:
            return i
    return -1
</code></pre>
</div>
<span class="comment-copy">why do you use <code>print()</code> instead of <code>return</code> ?</span>
<span class="comment-copy">@furas he wants to see the value of the variable, maybe? Yet maybe there's <code>return</code> missing <i>after</i> the print function.</span>
