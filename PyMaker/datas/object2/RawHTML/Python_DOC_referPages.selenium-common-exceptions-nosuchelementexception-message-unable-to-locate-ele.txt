<div class="post-text" itemprop="text">
<p>I'm working on a Python program that will run through ubuntu terminal. After calling the program, it supposed to open firefox and login to my email, and automatically fill in the username and then move to the next page and then fill in the password and then login and send send an email.
When I run the program from Python IDLE one command line at a time, it works. but when I run it though the terminal so it execute the whole program, it stops before filling in the password. This line is executed</p>
<pre><code>emailElem.send_keys('my user name')
emailElem.submit()
</code></pre>
<p>and then it does not fill in the password as it supposed.</p>
<pre><code>passElem = browser.find_element_by_id('login-passwd')
passElem.clear()
passElem.send_keys('my password')
</code></pre>
<p>This is my whole code:</p>
<pre><code>#! /usr/bin/python3
# commandLineEmailer.py takes and email address and
# a string and logs into your email account and sends 
# an email of the string to the provided address. 

from selenium import webdriver
# getting the details from the user.
email = input('Email Address: ')
subject = input('Subject: ')
message = input('Your message: ')

browser = webdriver.Firefox()
browser.get('https://mail.yahoo.com')
emailElem = browser.find_element_by_id('login-username')
emailElem.clear()
emailElem.send_keys('my user name')
emailElem.submit()
passElem = browser.find_element_by_id('login-passwd')
passElem.clear()
passElem.send_keys('my password')
browser.find_element_by_id('login-signin').click()
browser.find_element_by_link_text('Compose').click()
to = browser.find_element_by_id('message-to-field')
to.send_keys(email)
subElem = browser.find_element_by_tag_name('input[aria-label="Subject"]')
subElem.send_keys(subject)
messElem = browser.find_element_by_tag_name('div[aria-label="Message body"]')
messElem.send_keys(message)
browser.find_element_by_tag_name('button[title="Send this email"]').click()
browser.quit()
</code></pre>
<p>This is the error message:</p>
<pre><code>Traceback (most recent call last):
  File "./commandLineEmailer.py", line 18, in &lt;module&gt;
    passElem = browser.find_element_by_id('login-passwd')
  File "/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py", line 360, in find_element_by_id
    return self.find_element(by=By.ID, value=id_)
  File "/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py", line 978, in find_element
    'value': value})['value']
  File "/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
  File "/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [id="login-passwd"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://stackoverflow.com/a/55223683/2255764">@Asyranok</a> mentioned you must wait for the element to be appeared:</p>
<pre><code>from selenium import webdriver
import selenium.webdriver.support.ui as ui

driver = webdriver.Firefox()
wait = ui.WebDriverWait(driver, 10)
driver.get('https://mail.yahoo.com')
login = driver.find_element_by_id('login-username')
login.clear()
login.send_keys('johndoe')
login.submit()
wait.until(lambda driver: driver.find_element_by_id('login-passwd'))
pwd = driver.find_element_by_id('login-passwd')
pwd.send_keys('12345')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no wait in there. Any time you submit something, and a page needs to load, you need to have some sort of wait. It is literally trying to find the password element while the former username and submit button are still likely rendered on the DOM. Certainly before the password field has rendered. </p>
<p>This is why running it one command at a time works. The page has time to load when you are manually stepping through the code.</p>
<p>Here is a recent question with several examples about waits in Selenium. Just convert it to python. It is all the same logic, if different syntax.</p>
<p><a href="https://stackoverflow.com/questions/55219695/check-if-a-button-is-available-if-not-wait-5-seconds-and-check-again/55223191#55223191">check if a button is available? if not wait 5 seconds and check again?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Selenium is faster than the web page.
So it is trying to find the element(Password text field) before it is loaded.
so the code is throwing element  not found exception.
You can use 
<code>Thread.sleep(2000)</code>
or external wait.</p>
</div>
<span class="comment-copy">utilize the selenium waits</span>
