<div class="post-text" itemprop="text">
<p>I am reading csv using pandas to perform some analysis on it. Where I am getting this error</p>
<pre><code>ValueError: could not convert string to float: 'none'
</code></pre>
<p>I checked, I am getting this error due to <code>shift_zip</code> parameter. I manually went to csv file and openoffce and converted this column to numeric. But still it gives this error.</p>
<p>Data looks like this </p>
<p><a href="https://i.stack.imgur.com/UCQZK.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/UCQZK.png"/></a></p>
<p>I manually checked <code>shift_zip</code> column but can not find none value in it. </p>
<p>I also tried to print this column data and it's data type, which gives <code>&lt;class int&gt;</code>. </p>
<pre><code>for val in data['nurse_zip']:
#     print((val))
    if type(val) != 'int':
        print(type((val)))
</code></pre>
<p>output</p>
<pre><code>&lt;class 'int'&gt;
&lt;class 'int'&gt;
&lt;class 'int'&gt;
</code></pre>
<p>How to I correctly identify which is none value in this column is causing this issue?</p>
<p>Edit 1: Adding more code for better understanding:</p>
<pre><code>dataset = pd.read_csv("model__newdata.csv",header = 0)


#Data Pre-processing
data = dataset.drop('shift_location_id',1)
data = data.drop('status',1)
data = data.drop('city',1)
data = data.drop('open_positions',1)
# data = data.drop('shift_id',1)
# data = data.drop('role_id',1)
# data = data.drop('specialty_id',1)
# data = data.drop('years_of_experience',1)
# data = data.drop('shifts_zip',1)
# data = data.drop('nurse_zip',1)
# data = data.drop('shift_department_id',1)
# data = data.drop('shift_organization_id',1)
# data = data.drop('user_id',1)


#Find median for features having NaN
median_role_id, median_specialty_id = data['role_id'].median(),data['specialty_id'].median() 
median_shift_id = data['shift_id'].median()
median_specialty_id = data['specialty_id'].median()

data['shift_id'].fillna(median_shift_id, inplace=True)
data['role_id'].fillna(median_role_id, inplace=True)
data['specialty_id'].fillna(median_specialty_id, inplace=True)
data['years_of_experience'].fillna(0, inplace=True)
data['shifts_zip'].fillna(0, inplace=True) #Gives none value error
data['nurse_zip'].fillna(0, inplace=True)
data['shift_department_id'].fillna(0, inplace=True)
data['shift_organization_id'].fillna(0, inplace=True)
data['user_id'].fillna(0, inplace=True)

print (data[data['nurse_zip'] == 'none'])
</code></pre>
<p>Output </p>
<pre><code>Empty DataFrame
Columns: [shift_id, user_id, shift_organization_id, shift_department_id, role_id, specialty_id, years_of_experience, nurse_zip, shifts_zip]
Index: []
</code></pre>
<p><strong>Edit 1</strong></p>
<p>Result on jezrael answer</p>
<p>It give <code>False</code> or <code>True</code> as per condition. Can not check which particular row is none or empty.</p>
</div>
<div class="post-text" itemprop="text">
<p>If finding the Na or null value is the objective then simply use </p>
<pre><code>df.info()
</code></pre>
<p>and you will be able to see the datatype of the column as well as the None value count also.</p>
<p>But I think, in your dataset the value which making noise is not in null format.
You can give a try to below points.
1:Better you visualize the particular column using historical plot or any other plot.<br/>
2:Use df[column].astype to force change the dtype of column</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try:</p>
<pre><code>#check string none
print (data[data['nurse_zip'] == 'none'])

#check non integer values
print (data[data['nurse_zip'].apply(type) != int])

#check strings values
print (data[data['nurse_zip'].apply(type) == str])

#check missing values values
print (data[data['nurse_zip'].isnull()])
</code></pre>
</div>
<span class="comment-copy">Please paste the output of <code>data['shifts_zip'].dtypes</code></span>
<span class="comment-copy">@hacker315: it gives <code>object </code></span>
<span class="comment-copy">it gives <code>AttributeError: 'Series' object has no attribute 'info'</code> when I tried <code>ata['nurse_zip'].info()</code></span>
<span class="comment-copy">Use data.info() or you can also use data['feature_name'].describe() and share the output.</span>
<span class="comment-copy">@JhonPatric - are data confidental?</span>
<span class="comment-copy">@JhonPatric - Do you test all 3 my solutions?</span>
<span class="comment-copy">@JhonPatric - So is necessary check missing values? <code>print (data[data['nurse_zip'].isnull()])</code> ?</span>
<span class="comment-copy">@JhonPatric - yes, but my code is different, not <code>print (data['nurse_zip'].isnull())</code>, but <code>print (data[data['nurse_zip'].isnull()])</code> - filtering by <a href="http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#boolean-indexing" rel="nofollow noreferrer"><code>boolean indexing</code></a></span>
<span class="comment-copy">@JhonPatric - So all my solution return empty df ?</span>
