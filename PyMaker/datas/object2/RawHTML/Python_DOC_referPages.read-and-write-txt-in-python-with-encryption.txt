<div class="post-text" itemprop="text">
<p>I have the following file test.txt:</p>
<pre><code>'campo1','campo2','campo3','campo4'    
'2222','34563434','547348568765756556','78967756K      '
'2222','34564232','343575876567567584','65876566W      '
'2222','54754456','234223144675987666','43453534A      '
</code></pre>
<p>I need to encrypt campo2, campo3 and campo4 with the function DES3 of the Crypto.Cipher library. I have written the following code:</p>
<pre><code>import pandas as pd
from Crypto.Cipher import DES3
infile = mainpath + "/" + "Prueba Encriptacion.txt"
outfile = mainpath + "/" + "Prueba Encriptacion out.txt"
cipher = DES3.new("4QGdtHLBSKmAJaOJY5BW")
df = pd.read_csv(infile, ',')
for row in df.iterrows():
    campo2_out= cipher.encrypt(campo2)
    campo3_out=cipher.encrypt(campo3)
    campo4_out=cipher.encrypt(campo4)
</code></pre>
<p>My problem is that I do not know how I can correctly traverse the rows of the file and write in the outfile the result of the cipher.encrypt function.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can read the csv using python csv.reader write using csv.writer</p>
<p>Here is the code:</p>
<pre><code>import csv
from Crypto.Cipher import DES3

cipher = DES3.new("4QGdtHLBSKmAJaOJY5BW")
infile = mainpath + "/" + "Prueba Encriptacion.txt"
outfile = mainpath + "/" + "Prueba Encriptacion out.txt"


def encrypt_csv(file_name):
    with open(file_name, 'r') as csv_file:
        with open(outfile, 'w') as out_file:
            reader = csv.reader(csv_file, delimiter=",")
            writer = csv.writer(out_file, delimiter=",")
            for row in reader:
                encrypted_data = [cipher.encrypt(data) for data in row]
                writer.writerow(encrypted_data)


if __name__ == '__main__':
    encrypt_csv(infile)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In pandas you don't normally traverse the rows. You apply your function to the required cells and then save the resulting dataframe.</p>
<p>So your code should be:</p>
<pre><code>#... read frame as normal...
df["campo2"] = df["campo2"].apply(cipher.encrypt)
df["campo3"] = df["campo3"].apply(cipher.encrypt)
df["campo4"] = df["campo4"].apply(cipher.encrypt)
df.to_csv("outputfile)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I had to modify your code a bit to get it to reproduce. But once that worked, I could use <code>applymap</code>, like so:</p>
<pre><code>from Crypto.Cipher import DES3
from Crypto.Random import get_random_bytes

key = DES3.adjust_key_parity(get_random_bytes(24))
cipher = DES3.new(key, DES3.MODE_CFB)

df = pd.read_csv('test.txt', ',')
df = df.astype(str)
df = df.applymap(lambda x: cipher.encrypt(x.encode('UTF-8')))
</code></pre>
<p>Giving you:</p>
<pre><code>campo1               campo2                                 campo3                                              campo4
0   b'\xe1#[\xd3'           b'\xe2\x9ee\xb4\xf1\xc4o\xa4'   b'w\xc0:\\Cn\xc7\x9f\xc4A\x93\x1e\x8c\xde\xa0\...   b'm&gt;\xc2\xb3\xe3\xeb\xe6\\('
1   b'\x95\xea\xac\xed'     b'\xa6;\xfd\xb2\x98e\xd0\x8d'   b'01sVHg2j\xd0\x8f\xee\x90\x1a&amp;\xd0\xae\xeb\xb3'    b'\xdb\x06\xcdh\x01\xce\xfdv\xca'
2   b'[\xfd\xf5A'           b'|\x85W\xe4\x19\x83(X'         b'\xb9E+\x00\xcf\\\xa2\r,\xa6\x9a\xf9\x0b[g\xe...   b'\xa4\xd2\x14&amp;\x8c:\xf8N\xdc'
</code></pre>
</div>
<span class="comment-copy">How can I apply encryption only to campo2, campo3 and campo4?</span>
<span class="comment-copy">you can loop over `                encrypted_data = [cipher.encrypt(data) for data in row] ` instead of using list comprehension and selectively encrypt the data</span>
