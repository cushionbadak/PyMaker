<div class="post-text" itemprop="text">
<p>I installed Python 2.6 and Python 3 on Windows 7 and set environment variable: <code>path = d:\python2.6</code>. </p>
<p>When I run <code>python</code> in cmd, it displays the python version is 2.6, which is right! </p>
<p>But when I wrote a script in a bat file and ran it, the displayed python version was 3.1. </p>
<p>What is wrong here?    </p>
<p>The script code in bat file: </p>
<pre><code>import sys
print (sys.version)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The last Python you install that registers itself in the environment is the default (I can't remember the exact wording in the installer, but it is the first option).  There are a number of settings so to make sure they are all registered consistently just reinstall the version you want to be the default.</p>
<p>If you want to install another version but don't want it as the default just disable the registration option during installation.</p>
<p><strong>Edit (May 19, 2012)</strong></p>
<p>Starting with Python 3.3, the Python installer installs <a href="http://docs.python.org/3/using/windows.html?highlight=python%20launcher#python-launcher-for-windows" rel="noreferrer">Python Launcher for Windows</a>.  This program (<code>py.exe</code>) is associated with the Python file extensions and looks for a "shebang" comment to specify the python version to run.  This allows many versions of Python to co-exist and allows Python scripts to explicitly specify which version to use, if desired.  If it is not specified, the default is to use the latest Python 2.X version for the current architecture (x86 or x64).  This default can be customized through a <code>py.ini</code> file or <code>PY_PYTHON</code> environment variable.  See the <a href="http://docs.python.org/3/using/windows.html?highlight=python%20launcher#python-launcher-for-windows" rel="noreferrer">docs</a> for more details.</p>
<p>Just make sure the Python 3.3 is the last Python installed that registered itself with Windows.  If other versions of Python are installed later be sure <strong>not</strong> to register them with the environment, so the launcher will remain the default.</p>
<p>Here's how to check if the launcher is registered correctly from the console:</p>
<pre><code>C:\&gt;assoc .py
.py=Python.File

C:\&gt;ftype Python.File
Python.File="C:\Windows\py.exe" "%1" %*
</code></pre>
<p>Above, <code>.py</code> files are associated with the <code>Python.File</code> type.  The command line for <code>Python.File</code> is the Python Launcher, which is installed in the Windows directory since it is always in the PATH.</p>
<p>For the association to work, run scripts from the command line with <code>script.py</code>, not "python script.py", otherwise <code>python</code> will be run instead of <code>py</code>.  <code>py.exe</code> can also be run with switches to force a Python version:</p>
<pre><code>py -3 script.py    # force latest Python 3.X version to be used.
</code></pre>
<p>Additionally, add <code>.py;.pyw;.pyc;.pyo</code> to the <code>PATHEXT</code> environment variable and then the command line can just be <code>script</code> with no extension.</p>
</div>
<div class="post-text" itemprop="text">
<p>Running 'py' command will tell you what version you have running. If you currently running 3.x and you need to switch to 2.x, you will need to use switch '-2'</p>
<pre><code>py -2
</code></pre>
<p>If you need to switch from python 2.x to python 3.x you will have to use '-3' switch</p>
<pre><code>py -3
</code></pre>
<p>If you would like to have Python 3.x as a default version, then you will need to create environment variable 'PY_PYTHON' and set it's value to 3.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://bitbucket.org/vinay.sajip/pylauncher/src/5f5925aa4820/py.ini.template" rel="noreferrer">See here for original post</a></p>
<pre><code>;
; This is an example of how a Python Launcher .ini file is structured.
; If you want to use it, copy it to py.ini and make your changes there,
; after removing this header comment.
; This file will be removed on launcher uninstallation and overwritten
; when the launcher is installed or upgraded, so don't edit this file
; as your changes will be lost.
;
[defaults]
; Uncomment out the following line to have Python 3 be the default.
;python=3

[commands]
; Put in any customised commands you want here, in the format
; that's shown in the example line. You only need quotes around the
; executable if the path has spaces in it.
;
; You can then use e.g. #!myprog as your shebang line in scripts, and
; the launcher would invoke e.g.
;
; "c:\Program Files\MyCustom.exe" -a -b -c myscript.py
;
;myprog="c:\Program Files\MyCustom.exe" -a -b -c
</code></pre>
<p>Thus, on my system I made a <code>py.ini</code> file under <code>c:\windows\</code> where py.exe exists, with the following contents:</p>
<pre><code>[defaults]
python=3
</code></pre>
<p>Now when you Double-click on a .py file, it will be run by the new default version. Now I'm only using the Shebang <code>#! python2</code> on my old scripts.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Edit registry key <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\python.exe\default</code></li>
<li>Set default program to open <code>.py</code> files to <code>python.exe</code></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>This is if you have both the versions installed. </p>
<p>Go to <code>This PC -&gt; Right-click -&gt; Click on Properties -&gt; Advanced System Settings.</code></p>
<p>You will see the <code>System Properties</code>. From here navigate to the <code>"Advanced"</code> Tab -&gt; Click on <code>Environment Variables</code>.</p>
<p>You will see a top half for the user variables and the <strong>bottom half</strong> for <code>System variables</code>. </p>
<p>Check the <code>System Variables</code> and double-click on the <code>Path</code>(to edit the Path).</p>
<p>Check for the path of Python(which you wish to run i.e. Python 2.x or 3.x) and <strong>move it to the top</strong> of the Path list. </p>
<p><strong>Restart</strong> the Command Prompt, and now when you check the version of Python, it should correctly display the required version.</p>
</div>
<div class="post-text" itemprop="text">
<p>This worked for me:</p>
<p>Go to</p>
<pre><code>Control Panel\System and Security\System
</code></pre>
<p>select</p>
<pre><code>Advanced system settings from the left panel
from Advanced tab click on Environment Variables
</code></pre>
<p>In the System variables section search for (<strong>create if doesn't exist</strong>)</p>
<pre><code>PYTHONPATH
</code></pre>
<p>and set</p>
<pre><code>C:\Python27\;C:\Python27\Scripts;
</code></pre>
<p>or your desired version</p>
<p>You need to restart CMD.</p>
<p>In case it still doesn't work you might want to leave in the PATH variable only your desired version.</p>
</div>
<div class="post-text" itemprop="text">
<p>Now that Python 3.3 is released it is easiest to use the py.exe utility described here:
<a href="http://www.python.org/dev/peps/pep-0397/" rel="nofollow">http://www.python.org/dev/peps/pep-0397/</a></p>
<p>It allows you to specify a Python version in your script file using a UNIX style directive.  There are also command line and environment variable options for controlling which version of Python is run.</p>
<p>The easiest way to get this utility is to install Python 3.3 or later.</p>
</div>
<div class="post-text" itemprop="text">
<p>Nothing above worked, this is what worked for me: </p>
<pre><code>ftype Python.File=C:\Path\to\python.exe "%1" %*
</code></pre>
<p>This command should be run in Command prompt launched as administrator</p>
<p>Warning: even if the path in this command is set to python35,  if you have python36 installed it's going to set the default to python36. To prevent this, you can temporarily change the folder name from <code>Python36</code> to <code>xxPython36</code>, run the command and then remove the change to the Python 36 folder. </p>
</div>
<div class="post-text" itemprop="text">
<p>Check which one the system is currently using:</p>
<pre><code>python --version
</code></pre>
<p>Add the main folder location (e.g. C/ProgramFiles) and Scripts location (C/ProgramFiles/Scripts) to Environment Variables of the system. Add both 3.x version and 2.x version</p>
<p>Path location is ranked inside environment variable. If you want to use Python 2.x simply put path of python 2.x first, if you want for Python 3.x simply put 3.x first</p>
<p><a href="https://i.stack.imgur.com/cooJR.png" rel="nofollow noreferrer">This uses python 2</a></p>
</div>
<div class="post-text" itemprop="text">
<h1>This work for me.</h1>
<p>If you want to use the python 3.6 you must move the python3.6 on the top of the list.</p>
<p>The same applies to the python2.7
If you want to have the 2.7 as default then make sure you move the python2.7 on the very top on the list.</p>
<blockquote>
<p>step 1</p>
</blockquote>
<p><a href="https://i.stack.imgur.com/LEneU.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/LEneU.png"/></a></p>
<blockquote>
<p>step 2</p>
</blockquote>
<p><a href="https://i.stack.imgur.com/PabrC.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/PabrC.png"/></a></p>
<blockquote>
<p>step 3</p>
</blockquote>
<p><a href="https://i.stack.imgur.com/z6LVf.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/z6LVf.png"/></a></p>
<h2>then close any cmd command prompt and opened again, it should work as expected.</h2>
<blockquote>
<p>python --version</p>
</blockquote>
<pre><code>&gt;&gt;&gt; Python 3.6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>SET</code> command in Windows CMD to temporarily set the default python for the current session.</p>
<pre><code>SET PATH=C:\Program Files\Python 3.5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try modifying the path in the windows registry (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment).</p>
<p>Caveat: Don't break the registry :)</p>
</div>
<span class="comment-copy">Python code in a .bat file won't be interpreted by Python, instead cmd.exe tries to interpret it which won't work. Put the Python code in a .py file and then in the .bat put <code>python scriptfile.py</code>.</span>
<span class="comment-copy">thank you anyway!I find the right way,I modify the value of the registry item in HKEY_LOCAL_CLASS\Applications\Python.exe\shell\open\command，and then it works right for bat file</span>
<span class="comment-copy">+1 While I would hope that there is a better way, this worked for me. Thanks.</span>
<span class="comment-copy">Rather than completely reinstalling the version of Python that you want as the default, if you repair it from the control panel add/remove programs it has the same effect, but is much quicker.</span>
<span class="comment-copy">This advice is incorrect. Python 2.7.5 did no such thing when I installed it just now. I just had to change my PATH manually.</span>
<span class="comment-copy">@TomW, next time I'll use my crystal ball.  It is quite possible the installer is different for a version just released.  This is a two-year old answer.  Anymore, I'd use the <code>py.exe</code> launcher that comes with Python 3.3 to control the version of Python a script uses via a shebang comment.</span>
<span class="comment-copy">In hindsight the tone wasn't really appropriate so I apologise - I'd like to amend my comment, which I don't seem to be able to do - although the point of StackOverflow is to be helpful, so I think it's appropriate to point out that the behaviour doesn't seem to be the same anymore.</span>
<span class="comment-copy">this one is very useful, no need to edit registry keys...when running python 2 scripts in command line... one can do <code>py -2 test.py</code> ...then by default <code>python test.py</code> if it's python 3 based code</span>
<span class="comment-copy">This is the best answer. Simplicity is best</span>
<span class="comment-copy">Forgot to mention that this also works when using prompt</span>
<span class="comment-copy">This is a great and easy solution. Keeps all of your Python locations (e.g. versions 2.7, 3.7, etc.) on the path. Thanks!</span>
<span class="comment-copy">This doesn't change the behavior when <code>python</code> is called in the command prompt.</span>
<span class="comment-copy">this will work when we run python with its name only</span>
<span class="comment-copy">I have already set the environment var correctly,for my question,it doesn't work in the bat file</span>
<span class="comment-copy">Have you tried turning it off and on again?</span>
<span class="comment-copy">thank you anyway!I find the right way,I modify the value of the registry item in HKEY_LOCAL_CLASS\Applications\Python.exe\shell\open\command，and then it works right for bat file</span>
