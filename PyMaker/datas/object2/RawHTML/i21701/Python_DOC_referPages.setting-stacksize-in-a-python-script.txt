<div class="post-text" itemprop="text">
<p>I am converting a csh script to a python script. The script calls a memory-intensive executable which requires a very large stack, so the csh script sets the stacksize to unlimited:</p>
<pre><code>limit stacksize unlimited
</code></pre>
<p>When I try to reproduce this script in python, I execute them in a very naive manner, using <code>os.system</code>, e.g.:</p>
<pre><code>os.system('some_executable')
</code></pre>
<p>But I do not know how to tell the OS to run these executables with unlimited stacksize. Is there a way to specify stacksize for calls within a python script? Is there some low-level system call that I should be using? And is there a module (similar to shutil) which controls this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can just use the (u)limit command of your shell, if you want:</p>
<pre><code>os.system('ulimit -s unlimited; some_executable')
</code></pre>
<p>Or (probably better) use <a href="http://docs.python.org/library/resource.html" rel="noreferrer">resource.setrlimit</a>:</p>
<pre><code>resource.setrlimit(resource.RLIMIT_STACK, (resource.RLIM_INFINITY, resource.RLIM_INFINITY))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have good experience with the following code. It doesn't require any special user permissions:</p>
<pre><code>import resource, sys
resource.setrlimit(resource.RLIMIT_STACK, (2**29,-1))
sys.setrecursionlimit(10**6)
</code></pre>
<p>It does however not seem to work with pypy.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for the Python <a href="http://docs.python.org/library/resource.html">setrlimit</a> interface, <code>resource.RLIMIT_STACK</code>.</p>
<p>Note that standard users cannot raise their hard limits, only root (well, a process with the <code>CAP_SYS_RESOURCE</code> capability (see capabilities(7)) processes can raise their limits; so you may need to use the PAM pam_limits(8) <code>limits.conf(5)</code> file to raise the hard limits for the users in question.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can alter the stack size of the current process via <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer"><code>thread.stack_size</code></a>, but I don't know if that will be correctly inherited by subprocesses. That interface also requires a specific stack size - "unlimited" isn't an option.</p>
</div>
<span class="comment-copy">Attempting to set <code>rlimit_stack</code> after <a href="http://www.openwall.com/lists/oss-security/2017/06/19/1" rel="nofollow noreferrer">Stack Clash</a> remediations may result in failure or related problems. Also see Red Hat <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1463241" rel="nofollow noreferrer">Issue 1463241</a></span>
<span class="comment-copy">The first option doesn't work for me; I believe it is because os.system executes commands in the basic shell, sh, rather than bash or tcsh. But your second option is exactly what I needed, thank you. (I can't tell who suggested <code>setrlimit</code> first so I am awarding this one, since it includes the explicit code. I am grateful for everyone's answers, though).</span>
<span class="comment-copy">Yeah, I should have mentioned that - some shells use limit, some use ulimit, some allow both; the explicit invocation is a much better idea.</span>
<span class="comment-copy"><code>sys.setrecursionlimit(10**6)</code> will make the Python interpreter segfault if you overflow the stack.</span>
<span class="comment-copy">Note that, as of this moment, the resource module is not available for Windows OS.</span>
<span class="comment-copy">@ofer.sheffer Still better than the accepted answer which uses <code>os.system</code>.</span>
<span class="comment-copy">@ThomasAhle I am <code>getting the error no module named resource</code></span>
<span class="comment-copy">Try installing it. I have resource  module</span>
