<div class="post-text" itemprop="text">
<p>I'm using Python to open a text document:</p>
<pre><code>text_file = open("Output.txt", "w")

text_file.write("Purchase Amount: " 'TotalAmount')

text_file.close()
</code></pre>
<p>I want to substitute the value of a string variable <code>TotalAmount</code> into the text document. Can someone please let me know how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>text_file = open("Output.txt", "w")
text_file.write("Purchase Amount: %s" % TotalAmount)
text_file.close()
</code></pre>
<p>If you use a context manager, the file is closed automatically for you</p>
<pre><code>with open("Output.txt", "w") as text_file:
    text_file.write("Purchase Amount: %s" % TotalAmount)
</code></pre>
<p>If you're using Python2.6 or higher, it's preferred to use <code>str.format()</code></p>
<pre><code>with open("Output.txt", "w") as text_file:
    text_file.write("Purchase Amount: {0}".format(TotalAmount))
</code></pre>
<p>For python2.7 and higher you can use <code>{}</code> instead of <code>{0}</code></p>
<p>In Python3, there is an optional <code>file</code> parameter to the <code>print</code> function</p>
<pre><code>with open("Output.txt", "w") as text_file:
    print("Purchase Amount: {}".format(TotalAmount), file=text_file)
</code></pre>
<p>Python3.6 introduced <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="noreferrer">f-strings</a> for another alternative</p>
<pre><code>with open("Output.txt", "w") as text_file:
    print(f"Purchase Amount: {TotalAmount}", file=text_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case you want to pass multiple arguments you can use a tuple</p>
<pre><code>price = 33.3
with open("Output.txt", "w") as text_file:
    text_file.write("Purchase Amount: %s price %f" % (TotalAmount, price))
</code></pre>
<p>More: <a href="https://stackoverflow.com/questions/15286401/print-multiple-arguments-in-python">Print multiple arguments in python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using numpy, printing a single (or multiply) strings to a file can be done with just one line:</p>
<pre><code>numpy.savetxt('Output.txt', ["Purchase Amount: %s" % TotalAmount], fmt='%s')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>If you are using Python3.</p>
</blockquote>
<p>then you can use <a href="https://docs.python.org/3/library/functions.html#print" rel="noreferrer">Print Function</a> :</p>
<pre><code>your_data = {"Purchase Amount": 'TotalAmount'}
print(your_data,  file=open('D:\log.txt', 'w'))
</code></pre>
<blockquote>
<p>For python2</p>
</blockquote>
<p>this is the example of Python Print String To Text File</p>
<pre><code>def my_func():
    """
    this function return some value
    :return:
    """
    return 25.256


def write_file(data):
    """
    this function write data to file
    :param data:
    :return:
    """
    file_name = r'D:\log.txt'
    with open(file_name, 'w') as x_file:
        x_file.write('{} TotalAmount'.format(data))


def run():
    data = my_func()
    write_file(data)


run()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With using pathlib module, indentation isn't needed.</p>
<pre><code>import pathlib
pathlib.Path("output.txt").write_text("Purchase Amount: {}" .format(TotalAmount))
</code></pre>
<p>As of python 3.6, f-strings is available.</p>
<pre><code>pathlib.Path("output.txt").write_text(f"Purchase Amount: {TotalAmount}")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the easier way to do that is via appending the text you want to set to the file using </p>
<blockquote>
<p>open('file_name','a')</p>
</blockquote>
<p>here is an example for that </p>
<pre><code>file=open('file','a')
file.write("Purchase Amount: " 'TotalAmount')
file.close()
</code></pre>
<p>"a" refer to append mood , it will append the text you want to write to the end of the text in the your file </p>
</div>
<span class="comment-copy">Assuming TotalAmount is an integer, shouldn't the "%s" be a "%d"?</span>
<span class="comment-copy">@RuiCurado, if <code>TotalAmount</code> is an <code>int</code>, either <code>%d</code> or <code>%s</code> will do the same thing.</span>
<span class="comment-copy">Great answer. I'm seeing a syntax error with a nearly identical use case: <code>with . . .: print('{0}'.format(some_var), file=text_file)</code> is throwing: <code>SyntaxError: invalid syntax</code> at the equal sign...</span>
<span class="comment-copy">@nicorellius, if you wish to use that with Python2.x you need to put <code>from __future__ import print_function</code> at the top of the file. Note that this will transform <i>all</i> of the print statements in the file to the newer function calls.</span>
<span class="comment-copy">Thanks. The reason I was confused is because my virtual environment is using Python 3.x. I ran some debug code in my fabfile, and sure enough, it's using the system Python, eg, 2.7. I overlooked that Fabric doesn't support Python 3 yet.</span>
<span class="comment-copy">This is like <code>print</code></span>
