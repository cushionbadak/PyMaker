<div class="post-text" itemprop="text">
<p>Write a class and implement a list using embedded python list.</p>
<p>Input like : 4 9 3 5</p>
<p>Output should be like: 3 4 5 9</p>
<p>I use this code for taking the input values and split it to the list</p>
<pre><code>s = input()
numbers = map(int, s.split()) 
</code></pre>
<p>How can i build up a class for this listPQ that takes the lists values and put, get and check if the list is empty?</p>
<p>To try if your queue works:</p>
<pre><code>   q = ListPQ()
   q.put(3)
   q.put(4)
   x = q.get()
   y = q.get()
   print(x,y)   #it should print 3 4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <a href="http://docs.python.org/3.3/library/heapq.html" rel="nofollow">heapq</a> module from the python standard library. Then it is even possible without a class.</p>
<p>Without class:</p>
<pre><code>import heapq
h = []
heapq.heappush(h, 4)
heapq.heappush(h, 3)
heapq.heappush(h, 9)
heapq.heappush(h, 5)
print(heapq.heappop(h))
print(heapq.heappop(h))
print(heapq.heappop(h))
print(heapq.heappop(h))
</code></pre>
<p>the output would be (space instead of newline):</p>
<pre><code>3 4 9 5
</code></pre>
<p>If you need a class you can do it as follows:</p>
<pre><code>class ListPQ():
    def __init__(self):
        self.h = []

    def put(self, item):
        heapq.heappush(self.h, item)

    def get(self):
        return heapq.heappop(self.h)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class ListPQ():
    def __init__(self):
        self.pq = []

    def put(self, val):
        # Write code to put the number and keep it in sorted way, however you decide to
        # you can use self.pq to access the list and add stuff to it... this instance
        # of the class will have it saved.
        self.pq.append(val)
        self.pq.sort() # This is just for brevity, you can use your own algo for this

    def get(self):
        # likewise, use the self.pq to pop it out like,
        return self.pq.pop(-1)

    def is_empty(self):
        return len(self.pq) == 0

    def __repr__(self):
        return "&lt;ListPQ: %r&gt;" % self.pq
</code></pre>
<p>Now you can go ahead and use <code>print(instance_of_listpq)</code> and this will print out the list as it's written in the <code>__repr__</code> method.</p>
<p>Hope this helps now!</p>
</div>
<span class="comment-copy">I don't get how you put 1 and 2 but then get 3 and 4 ?</span>
<span class="comment-copy">Wrote wrong numbers</span>
<span class="comment-copy">can you define (e.g. via a link) what do you mean by <code>embedded list</code> exactly, please? <a href="http://docs.python.org/2/library/collections.html#collections.deque" rel="nofollow noreferrer">double ended queue</a> by any chance?</span>
<span class="comment-copy">What they mean with embedded list functions is linked to: <a href="http://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html</a></span>
<span class="comment-copy">native python lists? never heard about them as being "embedded" previously, huh. in that case, adarsh answer looks good</span>
<span class="comment-copy">How can i use def put function to put the values in a abstract data queue? I use the input value and then split the list. And how can i try if the queue works on that list?</span>
<span class="comment-copy">I'll modify it to show you there... you can pass the value you want to be entered there and also you can use <b>repr</b> method be able to use the print on an instance of this class</span>
