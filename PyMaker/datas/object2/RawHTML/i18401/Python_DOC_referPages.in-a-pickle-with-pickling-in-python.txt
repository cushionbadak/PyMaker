<div class="post-text" itemprop="text">
<p>I have gone through this website and many others but no one seems to give me the simplest possible answer. In the scrip bellow there are 2 different variables that need to be placed into a single pickle (aka 'test1' and 'test2'); but I am wholly unable to get even the simpler one of the two to load. There are no error messages or anything, and it does appear that something is being written to the pickle but then I close the 'program', re open it, try to load the pickle but the value of 'test1' does not change.</p>
<p>The second question is how to save both to the same pickle? at first i tried using the allStuff variable to store both test1 and test2 then dumping allStuff...the dump seems to be a success but loading does jack. Ive tried a variation where you list each file that should be loaded but this just caused a whole lot of errors and caused me to assault my poor old keyboard...</p>
<p>Please Help.</p>
<pre><code>import pickle

class testing():

    test1 = 1000
    test2 = {'Dogs' : 0, 'Cats' : 0, 'Birds' : 0, 'Mive' : 0}


    def saveload():
            check = int(input(' 1. Save  :  2. Load  : 3. Print  : 4. Add'))
            allStuff = testing.test1, testing.test2
            saveFile = 'TestingSaveLoad.data'

            if check == 1:
                f = open(saveFile, 'wb')
                pickle.dump(testing.test1, f)
                f.close()
                print()
                print('Saved.')
                testing.saveload()


            elif check == 2:
                f = open(saveFile, 'rb')
                pickle.load(f)
                print()
                print('Loaded.')
                testing.saveload()        


            elif check == 3:
                print(allStuff)
                testing.saveload()

            else:
                testing.test1 += 234
                testing.saveload()


testing.saveload()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/3.3/library/pickle.html#pickle.load" rel="nofollow"><code>pickle.load</code></a> documentation states:</p>
<blockquote>
<p>Read a pickled object representation from the open file object file and <strong>return</strong> the reconstituted object hierarchy specified therein.</p>
</blockquote>
<p>So you would need something like this:</p>
<pre><code>testing.test1 = pickle.load(f)
</code></pre>
<p>However, to save and load multiple objects, you can use</p>
<pre><code># to save
pickle.dump(allStuff, f)

# to load
allStuff = pickle.load(f)
testing.test1, testing.test2 = allStuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dump them as a tuple, and when loading, unpack the result back into the two variables.</p>
<pre><code>pickle.dump((testing.test1,testing.test2), f)
</code></pre>
<p>and</p>
<pre><code>testing.test1, testing.test2 = pickle.load(f)
</code></pre>
<p>Then change the print to print the two items and forget about <code>allStuff</code>, since you would have to keep updating <code>allStuff</code> every time you loaded/reassigned (depending on the type of item you are storing).</p>
<pre><code>print(testing.test1, testing.test2)
</code></pre>
<p>I'd also remove the recursive call to <code>saveLoad()</code> and wrap whatever should be repeated in a <code>while</code> loop with an option to exit</p>
<pre><code>if check == 0:
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You aren't saving the reconstituted pickled object currently. The documentation states that <a href="http://docs.python.org/3/library/pickle.html#pickle.load" rel="nofollow noreferrer"><code>pickle.load()</code></a> returns the reconstituted object. </p>
<p>You should have something like:</p>
<pre><code>f = open(saveFile, 'rb')
testing.test1 = pickle.load(f)
</code></pre>
<p>To save multiple objects, use the approach recommended in <a href="https://stackoverflow.com/a/6568859/264775">this answer</a>:</p>
<blockquote>
<p>If you need to save multiple objects, you can simply put them in a single list, or tuple</p>
</blockquote>
<p>Also, I recommend using the <a href="http://docs.python.org/2/whatsnew/2.6.html#pep-343-the-with-statement" rel="nofollow noreferrer"><code>with</code></a> keyword to open the file. That will ensure the file is closed even if something goes wrong. An example of a final output:</p>
<pre><code>with open(saveFile, 'wb') as f:
    pickle.dump((testing1, testing2), f)

...

with open(saveFile, 'rb') as f:
    testing1, testing2 = pickle.load(f) # Implicit unpacking of the tuple
</code></pre>
<p>You might also want a <code>while</code> loop instead of the multiple calls to <code>saveload()</code> - it will be a bit cleaner. Note that right now you have no way out of your loop, short of quitting the program.</p>
</div>
<span class="comment-copy">What are you expecting to happen when you use <a href="http://docs.python.org/3/library/pickle.html#pickle.load" rel="nofollow noreferrer"><code>pickle.load(f)</code></a>? It returns the reconstituted object and you aren't saving the return value.</span>
<span class="comment-copy">As stated bellow, I believe my problem was that 'return' and 'assign', somehow appeared to me as the exact same thing.</span>
<span class="comment-copy">My first few attempts where very close to "pickle.dump((testing.test1,testing.test2), f)", except that I did not tuple them, this of course lead to the problem of to many arguments...and so on. I will also definitely consider the "if check == 0:  break" idea. Thanks.</span>
<span class="comment-copy">As simple as that. I assumed that load() actually LOADS the files, because open(), well, opens them... But now upon rethinking the whole thing it is quite obvious that one should assign the stuff saved in the pickle to the variables in the script. I realize that my confusion is with the concept of 'return' vs 'assign'; in my mingled up cranium they appeared to be synonymous. Thanks a lot, this has cleared up a lot more than you might imagine.</span>
