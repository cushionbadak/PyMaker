<div class="post-text" itemprop="text">
<p>In a <strong>command-line</strong> application, I'm using the following code (from <a href="https://gist.github.com/IQAndreas/6570952" rel="nofollow">Andreas Renberg</a>) to ask the user a yes/no question (it just uses the standard <code>input</code>):</p>
<pre><code># Taken from http://code.activestate.com/recipes/577058-query-yesno/
#  with some personal modifications
def yes_no(question, default=True):
    valid = {"yes":True, "y":True, "ye":True,
             "no":False, "n":False }
    if default == None:
        prompt = " [y/n] "
    elif default == True:
        prompt = " [Y/n] "
    elif default == False:
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while 1:
        sys.stdout.write(question + prompt)
        choice = input().lower()
        if default is not None and choice == '':
            return default
        elif choice in valid.keys():
            return valid[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "\
                             "(or 'y' or 'n').\n")
</code></pre>
<p>If the user types <code>yes</code> (or an equivalent) the function returns <code>True</code>, and <code>no</code> returns <code>False</code>. If they just press <code>Enter</code>, the <code>default</code> value is chosen.</p>
<p>However, if user presses <code>ESC</code> on their keyboard, it gets treated as a character. Is there instead a way to cause the function to return <code>False</code> if that key is pressed? The few results I have found in my own searches seem overly complicated or only work on some operating systems.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to catch the <code>Esc</code> keyboard press you have to implement something like <code>getch</code> method which will get you one character at a time.</p>
<p>Here is a simplistic implementation that works.</p>
<pre><code>if platform_is_windows:
    from msvcrt import getch

elif platform_is_posix:
    import sys
    import tty
    import termios

    def getch():
        fd = sys.stdin.fileno()
        old_settings = termios.tcgetattr(fd)
        try:
            tty.setraw(sys.stdin.fileno())
            ch = sys.stdin.read(1)
        finally:
            termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
        return ch
</code></pre>
<p>Then you just have a <code>while</code> loop with <code>getch</code> until you get an <code>Esc</code> or <code>Return</code>.</p>
<p><em>Note: I haven't specified a way to determine the platform since there are multiple ways to do that, and there are a lot answers on SO on that topic.</em></p>
</div>
<span class="comment-copy"><code>it gets treated as a character</code> - that's not really true, it depends on which underlying library is used. On my system (linux, which uses readline if available), pressing <code>Esc</code> at an <code>input()</code> promt doesn't do anything.</span>
<span class="comment-copy">If you're on windows then <a href="http://docs.python.org/2/library/msvcrt.html" rel="nofollow noreferrer">msvcrt</a> module may help.</span>
<span class="comment-copy">@AshwiniChaudhary I'm in Ubuntu, and since this code is for an open-source tool, the code needs to work reliably across platforms.</span>
<span class="comment-copy">For windows there is <code>getch()</code> in the python standard module <a href="http://docs.python.org/3/library/msvcrt.html" rel="nofollow noreferrer">msvcrt</a>.</span>
<span class="comment-copy">@TobiMarg Thanks for the hint. Fixed. It's a really old peace of code and I have no idea why I used that instead of <code>msvcrt</code> module.</span>
<span class="comment-copy">This will not work because hitting any special key that starts with <code>\x1b</code> will fire this...</span>
