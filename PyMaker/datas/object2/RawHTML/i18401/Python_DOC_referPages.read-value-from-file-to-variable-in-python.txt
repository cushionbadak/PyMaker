<div class="post-text" itemprop="text">
<p>I have text file with text as shown below. I want to write the value in the first column of the 8th row i.e. 226 to a variable using a function in python. Could someone help to do this?</p>
<pre><code>## net.sf.picard.metrics.StringHeader
# net.sf.picard.analysis.CollectInsertSizeMetrics 
## net.sf.picard.metrics.StringHeader
# Started on: Mon Sep 16 22:48:21 EEST 2013

## METRICS CLASS        net.sf.picard.analysis.InsertSizeMetrics
MEDIAN_INSERT_SIZE      MEDIAN_ABSOLUTE_DEVIATION       MIN_INSERT_SIZE MAX_INSERT_SIZE       
226     41      2       121947929       235.101052      64.322693       43832988
FR      17      33      49      65      83      103     127     155     205     397 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your file is not quite a CSV/TSV file, so using the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module will probably end up being as tricky as parsing it manually in this case. So let's just do that:</p>
<pre><code>with open(filename) as f:
    for i, row in enumerate(f):
        if i == 7: # 8th row
            columns = row.split()
            value = columns[0] # 1st column
            break
</code></pre>
<p>This has the advantage that we're only reading and parsing the first 8 lines rather than the entire file.</p>
<hr/>
<p>If you understand iterables, I find (which does the exact same thing) this much simpler:</p>
<pre><code>with open(filename) as f:
    value = more_itertools.nth(f, 7).split()[0]
</code></pre>
<hr/>
<p>I used the third-party <a href="https://pypi.python.org/pypi/more-itertools" rel="nofollow"><code>more-itertools</code></a> module for simplicity. If you don't want to install it, <code>nth</code> is defined in the recipes in the documentation for the standard library <a href="http://docs.python.org/3.3/library/itertools.html#itertools-recipes" rel="nofollow"><code>itertools</code></a> module, so you can just copy and paste it like any other recipe:</p>
<pre><code>def nth(iterable, n, default=None):
    "Returns the nth item or a default value"
    return next(itertools.islice(iterable, n, None), default)
</code></pre>
<p>Or you could just inline it into a single more complicated expression:</p>
<pre><code>with open(filename) as f:
    value = next(itertools.islice(f, 7, None)).split()[0]
</code></pre>
<p>(Personally, I find that a bit less readable; it's like saying "the first row of all the rows from #7 to the end" instead of just saying "row #7". But some people don't like to define lots of trivial functions.)</p>
<hr/>
<p>I'd probably wrap this as a function (just <code>return …</code> instead of <code>value = …</code> and <code>break</code>, depending on which version you use):</p>
<pre><code>def get_row_col(filename, row, col):
    with open(filename) as f:
        return more_itertools.nth(f, row).split()[col]

value = get_row_col(filename, 7, 0)
</code></pre>
<hr/>
<p>Another way to get line #7 from a file without reading the whole file is with the <a href="http://docs.python.org/3.3/library/linecache.html" rel="nofollow"><code>linecache</code></a> module:</p>
<pre><code>def get_row_col(filename, row, col):
    row = linecache.getline(filename, 7)
    return row.split()[col]
</code></pre>
<p>This will be a lot more efficient if you're calling it lots of different times, for lots of different rows of the same filename.</p>
</div>
<span class="comment-copy">in which module do we have more_itertools? i tried: from itertools import * and from more_itertools import * and either module could not find the function more_itertools.nth. Any help?</span>
<span class="comment-copy">@user1779730: It's a third-party module, that you can install the same as any other third-party module—e.g., <code>pip install more_itertools</code>—and then use. But the standard library's <a href="http://docs.python.org/3.3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>itertools</code></a> documentation has a one-liner recipe to write <code>nth</code> yourself; it's really trivial. I'll edit the answer to show it.</span>
<span class="comment-copy">thanks!1 linecache version works for me</span>
