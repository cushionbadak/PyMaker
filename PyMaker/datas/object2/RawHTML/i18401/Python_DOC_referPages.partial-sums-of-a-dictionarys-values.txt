<div class="post-text" itemprop="text">
<p>Given a dictionary, I need to calculate the sum of the logarithms of the values contained in the dictionary, until that sum is greater than 1. </p>
<p>I've started by calculating the partial sums:</p>
<pre><code>r = [itertools.accumulate(math.log(items.values(),2))]
</code></pre>
<p>But I'm stuck on how to terminate the operation when the sum gets greater than 1.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try using <a href="http://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow"><code>itertools.takewhile</code></a>:</p>
<pre><code>takewhile(lambda x: x&lt;1, accumulate(math.log(x,2) for x in items.values()))
</code></pre>
</div>
<span class="comment-copy">Please note that python dictionaries are not meant to store the order of the inserted key-value pairs (e.g. you shouldn't use a dictionary to iterate a dictionary until some condition is true). So either use an ordered collection such as a list or switch to an ordered-dictionary implementations, such as this one : <a href="http://dev.pocoo.org/hg/sandbox/raw-file/tip/odict.py" rel="nofollow noreferrer">dev.pocoo.org/hg/sandbox/raw-file/tip/odict.py</a></span>
<span class="comment-copy">did you have a look at <code>itertools.takewhile()</code> ?</span>
<span class="comment-copy">@yonili: the OP is using Python 3 (see the <code>itertools.accumulate</code>), so <code>OrderedDict</code> is available from the <code>collections</code> module.</span>
<span class="comment-copy">@JohannesP I didn't know that even existed! Thanks!</span>
<span class="comment-copy">... except that <code>math.log</code> cannot actually be applied to a <code>dict_values</code>.</span>
<span class="comment-copy">Ok, I'll sort that out.</span>
<span class="comment-copy">@larsmans See the edit</span>
<span class="comment-copy">I just keep on getting &lt;itertools.takewhile object at 0x02C39300&gt; as the output</span>
<span class="comment-copy">@TomKealy Wrap the whole thing in <code>list(...)</code>.</span>
