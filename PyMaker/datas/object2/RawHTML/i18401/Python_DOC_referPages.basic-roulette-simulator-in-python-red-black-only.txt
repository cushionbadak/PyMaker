<div class="post-text" itemprop="text">
<p>I'm writing a VERY basic roulette simulator in python. At the moment, I'm only focusing on red/black betting (basically the same as betting on heads or tails, using a coin).</p>
<p>My code has various issues. Please forgive my very basic knowledge of the language.</p>
<pre><code>import random

# Defines initial amounts of money and losses
money = 50
losses = 0


# Asks user how much to bet
def roulette_sim():
    print "How much do you want to bet?"
    bet = raw_input("&gt; ")
    if bet &gt; money:
        bet_too_much()
    else:
        red_or_black()


# Prevents one from betting more money than one has
def bet_too_much():
    print "You do not have all that money. Please bet again." 
    raw_input("Press ENTER to continue&gt; ")
    roulette_sim()

# Asks user to select red or black, starts the sim, modifies money/losses
def red_or_black():
    print "OK, you bet %r" %  (bet)
    print "Red or black?"
    answer = raw_input("&gt; ")
    number = random.randint(1, 2)
    if number == 1 and answer == "red":
        print "You win!"
        money += bet
        print "You now have %r money" % (money)
        print "Your losses are %r" % (losses)
        replay()
    elif number == 2 and answer == "black":
        print "You win!"
        money += bet
        print "You now have %r money" % (money)
        print "Your losses are %r" % (losses)
        replay()
    else:
        print "You lost!"
        money -= bet
        losses += bet
        print "You now have %r money" % (money)
        print "Your losses are %r" % (losses)
        replay()

# Asks user whether he/she wants to play again
def replay():
    print "Do you want to play again?"
    play_again = raw_input("y/n&gt; ")
    if play_again == "y":
        roulette_sim()
    else:
        print "OK, bye loser!"


roulette_sim()
</code></pre>
<p>First issue so far: the bet_too_much function doesn't work. Whatever amount I input, the program states it's too much (ie: 'bet' is always greater than 'money'). Why?</p>
<p>Second issue so far: when I want to add/subtract 'bet' to/from 'money' by using, for example:
    money += bet
python treats this as summing an int with a string (at least I think it does) rather than summing two variables. Why is this?</p>
<p>Any help would be appreciated.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Both things happen because Python does not do implicit conversions. You have to tell it explicitly that you want something to be an integer, it will not do it for you.
So, for the first issue:</p>
<pre><code>bet = raw_input("&gt; ") 
if bet &gt; money:
...
</code></pre>
<p>has to be</p>
<pre><code>bet = raw_input("&gt; ")
bet = int(bet)
if bet &gt; money:
...
</code></pre>
<p>because you do not want to compare a string with an integer (you can, but with the results you're getting right now).</p>
<p>For the second, you have to be explicit as well:</p>
<pre><code>money += int(bet)
</code></pre>
<p>(of course, if you already converted <code>bet</code> to an int, you're fine).</p>
<p>Javascript is notorious for doing this implicit conversions, so if you have happen to be familiar with that or a language that is similar, forget about that and be explicit about the type you're using. Which, on the whole, is safer.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>raw_input()</code> function returns a <em>string</em> value, but <code>money</code> is an integer. Comparing strings to numbers always ends up with Python 2 ordering numbers as smaller than strings.</p>
<p>Convert the result of <code>raw_input()</code> to an integer:</p>
<pre><code>def roulette_sim():
    print "How much do you want to bet?"
    bet = int(raw_input("&gt; "))
</code></pre>
<p>This may throw a <code>ValueError</code> exception if the input given is not a valid number; you may want to catch that exception and tell the user to enter a number instead:</p>
<pre><code>def roulette_sim():
    print "How much do you want to bet?"
    while True:
        try:
            bet = int(raw_input("&gt; "))
        except ValueError:
            print "Please enter a valid amount, a number."
        else:
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are comparing the string you get from raw_input("&gt; ") with a integer. This will not end well.
Try this function instead (havent tested it fully):</p>
<pre><code>def roulette_sim():
    while(1):
        print "How much do you want to bet?"
        try:
           bet = int(raw_input("&gt; "))
           break
        except ValueError:
           print 'You need to input a number'

    if bet &gt; money:
        bet_too_much()
    else:
        red_or_black()
</code></pre>
<p><strong>EDIT</strong>: changed to "except ValueError" according to comment. I know I am a bit lazy on the except handling part of python programing, but perhaps I should not teach that to others :-)</p>
</div>
<span class="comment-copy">Please focus on <i>one issue</i> at a time. The Stack Overflow Q&amp;A format does not handle multiple issues in a post.</span>
<span class="comment-copy">Thank you very much! of course, raw_input and integers, I keep forgetting. No, I'm not familiar with javascipt, I'll concentrate on getting a half-decent knowledge of python first, I think.</span>
<span class="comment-copy">OK, not sure if anyone can help me with this too, but now I get the following "NameError: global name 'bet' is not defined." I suppose I could use global, but I'd rather not. What way around this issue is there? P.s.: the 'bet' as a string issue is solved, of course, thanks.</span>
<span class="comment-copy">It's a different problem, so you should ask a new question, but in short: variables are local to their function. If you assign (and implicitly define) a variable in one function (<code>bet</code> in <code>roulette_sim()</code>), it doesn't automatically exists in another function (<code>red_or_black()</code>). You have to return <code>bet</code> in the first function, and then pass it as a function argument in the second function. Perhaps you should read (and do!) the Python tutorial (again?), for example the part on <a href="http://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">defining function</a>.</span>
<span class="comment-copy">Thank you, Evert. Yes, I'll probably post another separate question regarding this. But thank you for your reply. For someone alien to programming as I am, the python tutorial is slightly tough to comprehend, so I've concentrated on other online resources, but I will definitely go through it. Thanks.</span>
<span class="comment-copy">A sole <code>except</code> is a bad idea. It will now also catch keystrokes like <code>control-C</code> (<code>KeyboardInterrupt)or </code>control-D` (<code>EOFError</code>), which are usually used by a user to exit a program prematurely. Better to catch the actual <code>ValueError</code>.</span>
