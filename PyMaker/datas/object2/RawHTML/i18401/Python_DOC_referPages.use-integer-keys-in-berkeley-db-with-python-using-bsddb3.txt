<div class="post-text" itemprop="text">
<p>I want to use BDB as a time-series data store, and planning to use the microseconds since epoch as the key values. I am using BTREE as the data store type.</p>
<p>However, when I try to store integer keys, bsddb3 gives an error saying <code>TypeError: Integer keys only allowed for Recno and Queue DB's</code>. </p>
<p>What is the best workaround? I can store them as strings, but that probably will make it unnecessarily slower.</p>
<p>Given BDB itself can handle any kind of data, why is there a restriction? can I sorta hack the bsddb3 implementation? has anyone used anyother methods?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't store integers since bsddb doesn't know how to represent integers and which kind of integer it is.</p>
<p>If you convert your integer to a string you will break the lexicographic ordering of keys of bsddb: <code>10 &gt; 2</code> but as strings <code>"10" &lt; "2"</code>.</p>
<p>You have to use python <a href="https://docs.python.org/3/library/struct.html" rel="nofollow">struct</a> to convert your integers into a string (or in python 3 into bytes) to store then store them in bsddb. You have to use bigendian packing or ordering will not be correct.</p>
<p>Then you can use bsddb's <code>Cursor.set_range(key)</code> to query for information in a given slice of time. </p>
<p>For instance, <code>Cursor.set_range(struct.unpack('&gt;Q', 123456789))</code> will set the cursor at the key of the even happening at 123456789 or the first that happens after.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, there's no workaround. But you can use two approaches</p>
<ol>
<li><p>Store the integers as string using <code>str</code> or <code>repr</code>. If the ints are big, you can even use string formatting</p></li>
<li><p>use cPickle/pickle module to store and retrieve data. This is a good way if you have data types other than basic types. For basics <code>int</code>s and <code>float</code>s this actually is slower and takes more space than just storing strings</p></li>
</ol>
</div>
<span class="comment-copy">This is incorrect see my answer</span>
