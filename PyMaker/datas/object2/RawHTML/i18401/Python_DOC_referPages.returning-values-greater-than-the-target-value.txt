<div class="post-text" itemprop="text">
<p>I'm trying to figure out how to change this code.  Instead of counting the number of times that the target value appears, I want to be able to return the number of values in the list that are greater than the target value.</p>
<pre><code>def countTarget2(myList, target):
    counter = 0
    for element in myList:
        if element == target:
            counter = counter + 1
    return counter
</code></pre>
<p>Do I change the 5 line too?</p>
<pre><code>counter &gt; counter + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The change is fairly trivial:</p>
<pre><code>if element &gt; target:  # if the element is greater than the target
</code></pre>
<p>Don't forget to properly indent the line that follows this.</p>
<p>Note that the most <em>Pythonic</em> way to write this function would be to use <a href="http://docs.python.org/3/library/functions.html#sum" rel="nofollow"><code>sum()</code></a>:</p>
<pre><code>def countTarget2(myList, target):
    return sum(1 for element in myList if element &gt; target)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension approach:</p>
<pre><code>def countTarget2(myList, target):
    return len([element for element in myList if element &gt; target])

print countTarget2([1,2,3,4], 2)  # prints 2
</code></pre>
<p>UPD:</p>
<p>This is actually a short form of:</p>
<pre><code>def countTarget2(myList, target):
    l = []
    for element in myList:
        if element &gt; target:
             l.append(element)
    return len(l)
</code></pre>
<p>So, yes, there is an intermediate list - generator expression is a better choice.</p>
</div>
<div class="post-text" itemprop="text">
<p>You change line 4 to <code>if element &gt; target:</code>:</p>
<pre><code>def countTarget2(myList, target):
    counter = 0
    for element in myList:
        if element &gt; target:
            counter += 1
    return counter
</code></pre>
<p>or, you use the more functional (but probably hard to understand for a beginner):</p>
<pre><code>def countTarget2(myList, target):
    return len(x for x in myList if x &lt; target)
</code></pre>
<p><strong>P.S.</strong> I've also changed <code>counter = counter + 1</code> to the nicer looking <code>counter += 1</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, you would only change <code>line 4</code></p>
<pre><code>def countTarget2(myList, target):
    counter = 0
    for element in myList:
        if element &gt; target:
            counter = counter + 1
    return counter
</code></pre>
<p>Note that the <code>if</code> statement requires indentation on <code>line 5</code></p>
</div>
<div class="post-text" itemprop="text">
<p>No in this case you are changing the equivalence test to a greater than test.</p>
<p>You are currently testing <code>element == target</code> which will execute the (properly indented) <code>counter = counter+1</code> line on every equivalence.</p>
<p>To do a greater than test you'd need to change the test to <code>element &gt; target</code>.</p>
<p>The code would look like:</p>
<pre><code>def countTarget2(myList, target):
    counter = 0
    for element in myList:
        if element == target:
            counter = counter + 1 # properly indented, dont forget this!
    return counter
</code></pre>
</div>
<span class="comment-copy">I'm curious why you would think to change line 5 and what you think that would do?</span>
<span class="comment-copy">Also, you should accept one of the answers by clicking the checkmark. This will mark the question as complete. Good luck with Python!</span>
<span class="comment-copy">Is there a way to write it if I want it to look like mine above?</span>
<span class="comment-copy">(a generator expression would look nicer and perform better)</span>
<span class="comment-copy">If you're going full Python, <code>return sum(x &gt; target for x in myList)</code> is probably better. I do appreciate you giving an answer at the OP's current level as well as the advanced answer though.</span>
<span class="comment-copy">I never seem to know exactly which of <code>len(x ...</code>, <code>sum(1 ...</code> or <code>sum(condition ...</code> is the best; also, I think it boils down to which one is the best in general, not just necessarily in Python :)</span>
<span class="comment-copy">No changes to line 5 at all?</span>
<span class="comment-copy">line 5 only increases the counter value and has nothing to do with the comparison above it.</span>
<span class="comment-copy">Line 5 is only an incremental counter. You could change it to look nicer as <code>counter += 1</code></span>
<span class="comment-copy">Thank you for your suggestion, I'm slowly learning python</span>
<span class="comment-copy">So you wouldn't indent it so its in the if statement?</span>
