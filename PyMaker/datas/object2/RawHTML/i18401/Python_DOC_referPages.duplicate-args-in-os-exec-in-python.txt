<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/14174366/when-using-os-execlp-why-python-needs-python-as-argv0">When using os.execlp, why `python` needs `python` as argv[0]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I saw these code in a book Programming Python:</p>
<pre><code>import os

parm = 0
while True:
    parm += 1
    pid = os.fork()
    if pid == 0:                                             # copy process
        os.execlp('python', 'python', 'child.py', str(parm)) # overlay program
        assert False, 'error starting program'               # shouldn't return
    else:
        print('Child is', pid)
        if input() == 'q': break
</code></pre>
<p>Why there are two pythons in <code>os.execlp</code>? And it seems that the second one can be any string. What does the second argument do? </p>
<p>Edit: I still don't understand after reading the possibly duplicated question. This is child.py:</p>
<pre><code>import os, sys
print('Hello from child', os.getpid(), sys.argv[1])
</code></pre>
<p>So <code>argv[1]</code> is <code>str(parm)</code>, <code>argv[0]</code> is child.py, isn't it? </p>
</div>
<div class="post-text" itemprop="text">
<p>The first <code>python</code> is the name of the executable to run, the second is the value of <code>argv[0]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's its name, that's why it can be any string. </p>
<p>See <a href="http://docs.python.org/3/library/os.html?highlight=os.exec#process-management" rel="nofollow">http://docs.python.org/3/library/os.html?highlight=os.exec#process-management</a></p>
<p>The document is not structured well, people could have ignored the second paragraph simply because they jump straight to os.exec* thinking contents above are not relevant. </p>
</div>
<span class="comment-copy">Have you tried the documentation yet?</span>
<span class="comment-copy">But <a href="http://docs.python.org/3/library/sys.html?highlight=sys.argv#sys.argv" rel="nofollow noreferrer">docs.python.org/3/library/sys.html?highlight=sys.argv#sys.argv</a> says sys.argv[0] is the script itself, how come the second python is argv[0]?</span>
