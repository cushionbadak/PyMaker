<div class="post-text" itemprop="text">
<p>I have a directory structure like the one given below.</p>
<pre><code>         MainFolder 
             |
           [lib] 
         /   |   \
       [A]  [B]  [C] -- file1.so 
        |     |         file2.so
   file1.so   file1.so
   file2.so   file2.so    
</code></pre>
<p>I'm trying to look for the 'lib' folder in that structure which might not be there at times. So I'm using the following to check for the presence of the 'lib' folder:</p>
<pre><code>   if os.path.isdir(apkLocation + apkFolder + '/lib/'):
</code></pre>
<p>If lib folder exists, then I carry on to search the folders  inside 'lib'. I have to store the names of the folder A,B and C and look for the files ending with '.so' whose path should be stored as /lib/A/file1.so,/lib/A/file2.so and so on.</p>
<pre><code> if os.path.isdir(apkLocation + apkFolder + '/lib/'):
   for root, dirs, files in os.walk(apkLocation + apkFolder):
            for name in files:
                if name.endswith(("lib", ".so")):
                    print os.path.abspath(name) 
</code></pre>
<p>This gives me an out </p>
<pre><code>                  file1.so
                  file2.so
                  file1.so
                  file2.so
                  file1.so
                  file2.so
</code></pre>
<p>Desired output:</p>
<pre><code>           /lib/A/file1.so
           /lib/A/file2.so
           /lib/B/file1.so
           /lib/B/file2.so
           /lib/C/file1.so
           /lib/C/file2.so
</code></pre>
<p>and also the folders A,B and C are to be saved separately.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to join the current directory and the name to get the absolute path to a file:</p>
<pre><code>for root, dirs, files in os.walk(apkLocation + apkFolder):
    for name in files:
        if name.endswith(("lib", ".so")):
            os.path.join(root, name)
</code></pre>
<p>It's documented here <a href="http://docs.python.org/3/library/os.html#os.walk">http://docs.python.org/3/library/os.html#os.walk</a>, too.</p>
</div>
<span class="comment-copy"><code>apkLocation + apkFolder + '/lib/'</code> - Don't add path segments - use <code>os.path.join(apkLocation, apkFolder, 'lib')</code></span>
<span class="comment-copy">Thank you that did help</span>
<span class="comment-copy">That worked :) How do I retrieve the folder A,B and C instead of playing around with string functions on the output of os.path.join(root,name)? Any path functions that does this?</span>
<span class="comment-copy">This did it os.path.join(root,name).replace(apkLocation+apkFolder+'/lib','')</span>
<span class="comment-copy">You are looking for os.path.split() and maybe os.path.dirname(). It's all well documented, too.</span>
