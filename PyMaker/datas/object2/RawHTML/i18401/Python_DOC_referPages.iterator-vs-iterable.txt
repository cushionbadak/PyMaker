<div class="post-text" itemprop="text">
<p><strong>(For python 3)</strong></p>
<p>In the python docs, <a href="http://docs.python.org/3/library/functions.html#func-list" rel="nofollow">you can see</a> that the <code>list()</code> function takes an iterable.</p>
<p>In the python docs, <a href="http://docs.python.org/3/library/functions.html#next" rel="nofollow">you can also see</a> that the <code>next()</code> funciton takes an iterator.</p>
<p>So I did this in IDLE:</p>
<pre><code>&gt;&gt;&gt; var = map(lambda x: x+5, [1,2,3])
&gt;&gt;&gt; var
&gt;&gt;&gt; next(v)
&gt;&gt;&gt; list(v)
</code></pre>
<p>Which gives the output:</p>
<pre><code>&lt;map object at 0x000000000375F978&gt;
6
[7,8]
</code></pre>
<p>Frankly, this isn't what I expected. Is a map object an iterator or an iterable? Is there even a difference? Clearly both the <code>list()</code> and <code>next()</code> functions work on the map object, whatever it is.</p>
<p>Why do they both work?</p>
</div>
<div class="post-text" itemprop="text">
<p>An iterator is an iterable, but an iterable is not necessarily an iterator.</p>
<p>An iterable is anything that has an <code>__iter__</code> method defined - e.g. lists and tuples, as well as iterators.</p>
<p>Iterators are a subset of iterables whose values cannot all be accessed at the same time, as they are not all stored in memory at once. These can be generated using functions like <code>map</code>, <code>filter</code> and <code>iter</code>, as well as functions using <code>yield</code>.</p>
<p>In your example, <code>map</code> returns an iterator, which is also an iterable, which is why both functions work with it. However, if we take a list for instance:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2, 3]
&gt;&gt;&gt; list(lst)
[1, 2, 3]
&gt;&gt;&gt; next(lst)
Traceback (most recent call last):
  File "&lt;pyshell#3&gt;", line 1, in &lt;module&gt;
    next(lst)
TypeError: 'list' object is not an iterator
</code></pre>
<p>we can see that <code>next</code> complains, because the list, an iterable, is not an <em>iterator</em>.</p>
</div>
<span class="comment-copy">The python documentation says the result of <code>map</code> is always a list, which seems odd given your results.</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">Not in python 3.</a></span>
<span class="comment-copy">You're right. In Python 3 it says "Return an iterator", so there you have your answer. I just did a google search and used the first result, didn't check the version.</span>
<span class="comment-copy">@LasseV.Karlsen In Python 3, most of these functions, <code>range</code>, <code>filter</code>, <code>map</code>, started returning iterators. It's much more memory efficient, (no more <code>xrange</code>)</span>
