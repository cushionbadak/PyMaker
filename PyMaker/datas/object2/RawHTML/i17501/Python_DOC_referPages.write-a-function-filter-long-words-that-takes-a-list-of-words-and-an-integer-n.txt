<div class="post-text" itemprop="text">
<p>Whenever I run this code it just gives me a blank list, I am wondering what I am doing wrong. I am trying to print a list of words that are longer than n. When i try to run the updated code it only prints the first word from the list of words that i enter. </p>
<pre><code>def filterlongword(string,number):

    for i in range(len(string)):
        listwords = []
        if len(string[i]) &gt; number:
            listwords.append(string[i])

        return listwords 


def main():
    words = input("Please input the list of words: ")
    integer = eval(input("Please input an integer: "))

    words1 = filterlongword(words,integer)

    print("The list of words greater than the integer is",words1)

main()  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Initialize <code>listwords</code> <em>before</em> the loop</li>
<li>Return <code>listwords</code> <em>after</em> the loop</li>
<li>Split the input string into a list of words</li>
</ul>
<pre><code>def filterlongword(string,number):
    listwords = []
    for i in range(len(string)):
        if len(string[i]) &gt; number:
            listwords.append(string[i])
    return listwords
</code></pre>
<p>And a nicer version using <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>def filterlongword(string,number):
    return [word for word in string if len(word) &gt; number]
</code></pre>
<p>To split the input string into a list of words, use</p>
<pre><code>words = input("Please input the list of words: ").split()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>even better would be just</p>
<pre><code>def filterlongword(string,number):
    return filter(lambda word:len(word)&gt;number, string)
    # or: return [w for w in string if len(w) &gt; number]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def listing(guess, number):

    new_list = []

    for i in range(len(guess)):
        if len(guess[i]) &gt; number:
            new_list.append(guess[i])

    print (new_list)

list1 = input("take input: ")

list = list1.split(",")

def main():
    global list, integer1
    integer = input()
    integer1 = int(integer)
    listing(list, integer1)

main()
</code></pre>
<p>**try this code..this will work, use a delimiter to form a list of your input **</p>
</div>
<div class="post-text" itemprop="text">
<p>Your main problem is passing words as a single string rather than an iterable of strings.  The secondary problem is not specifying the separator between words for the missing .split.  Here is my version.</p>
<p>I made <code>longwords</code> a generator function because in actually use, one does not necessary need the sequence of long words to be a list, and I gave an example of this in the output formatting.</p>
<pre><code>def longwords(wordlist, length):
    return (word for word in wordlist if len(word) &gt;= length)

def main():
    words = input("Enter words, separated by spaces: ").split()
    length = int(input("Minimum length of words to keep: "))
    print("Words longer than {} are {}.".format(length,
          ', '.join(longwords(words, length))))

main()
</code></pre>
<p>This results in, for instance</p>
<pre><code>Enter words, separated by spaces: a bb ccc dd eeee f ggggg
Minimum length of words to keep: 3
Words longer than 3 are ccc, eeee, ggggg.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you can shorten the code to the following:</p>
<pre><code>def filter_long_words():
    n = raw_input("Give words and a number: ").split() 
    return sorted(n)[1:] # sorted the List , number it is the shorter .
                     # called the item from the second position to ende .
print filter_long_words()
</code></pre>
</div>
<span class="comment-copy">You're returning too soon, unindent the return statement.</span>
