<div class="post-text" itemprop="text">
<p>I have a dictionary consisting of lists, for example</p>
<pre><code>mydict={}

mydict['a']=[1,0,0,0,1,1,1,1,1,0,0]

mydict['b']=[2,4,5,6,8,7,5,4,5,6,7]

mydict['c']=[4,5,6,4,6,8,4,3,5,8,7]
</code></pre>
<p>Now say that if in <em>'a'</em> the value is 0, I want to delete the item with that index from every list in the libraby. So for the first 0 that would be removing 0 from <em>'a'</em>, 4 from <em>'b'</em> and 5 from <em>'c'</em>, for the second 0: 0 from <em>'a'</em>, 5 from <em>'b'</em> and 6 from <em>'c'</em> etc. </p>
<p>I've been trying to do this in many different ways, but I just do not manage to find the right way. Does anyone know how to do this? Would be great!</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/library/itertools.html#itertools.compress" rel="nofollow"><code>itertools.compress</code></a>:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt;
&gt;&gt;&gt; mydict={}
&gt;&gt;&gt; mydict['a']=[1,0,0,0,1,1,1,1,1,0,0]
&gt;&gt;&gt; mydict['b']=[2,4,5,6,8,7,5,4,5,6,7]
&gt;&gt;&gt; mydict['c']=[4,5,6,4,6,8,4,3,5,8,7]
&gt;&gt;&gt; #            ^       ^ ^ ^ ^ ^
&gt;&gt;&gt; mask = mydict['a']
&gt;&gt;&gt; for key, value in mydict.items():
...     mydict[key] = list(itertools.compress(value, mask))
...
&gt;&gt;&gt; mydict
{'a': [1, 1, 1, 1, 1, 1], 'c': [4, 6, 8, 4, 3, 5], 'b': [2, 8, 7, 5, 4, 5]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one possible solution:</p>
<pre><code>mydict={}

mydict['a']=[1,0,0,0,1,1,1,1,1,0,0]

mydict['b']=[2,4,5,6,8,7,5,4,5,6,7]

mydict['c']=[4,5,6,4,6,8,4,3,5,8,7]

toRemove = [i for i,x in enumerate(mydict['a']) if x == 0]

for key in mydict.keys():
    mydict[key] = [x for i,x in enumerate(mydict[key]) if i not in toRemove]

print(mydict)
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt;{'a': [1, 1, 1, 1, 1, 1], 'c': [4, 6, 8, 4, 3, 5], 'b': [2, 8, 7, 5, 4, 5]}
</code></pre>
<p>Assuming you also want to remove <code>0</code>s from the <code>'a'</code> list. If not adding a simple condition will help.</p>
<p>Alternatively, even more concise but less readable approach:</p>
<pre><code>mydict = {key:[x for i,x in enumerate(value) if i not in indices] 
          for key, value in mydict.iteritems()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple loop approach:</p>
<pre><code>index = mydict['a'].index(0)

for value in mydict.values():
    del value[index]
</code></pre>
<p>but that removes only one item.</p>
<p>For multiple items:</p>
<pre><code>indices = {i for i, v in enumerate(mydict['a']) if v == 0}
mydict = {k: [x for i, x in enumerate(v) if i not in indices]
          for k, v in mydict.items()}
</code></pre>
<p>Use <code>dictionary.iteritems()</code> when using Python 2.</p>
<p>Using <a href="http://docs.python.org/2/library/itertools.html#itertools.compress" rel="nofollow"><code>itertools.compress()</code></a> supporting <em>arbitrary</em> values:</p>
<pre><code>from itertools import compress

value_to_remove = 0
mask = [v != value_to_remove for v in mydict['a']]
value_to_remove = 0
mydict = {k: list(compress(v, mask)) for k, v in mydict.items()}
</code></pre>
</div>
<span class="comment-copy">Don't use <code>dict</code> as a variable name, it masks the built-in type.</span>
<span class="comment-copy">Thank you so much!!</span>
<span class="comment-copy">Ah, my mistake.</span>
<span class="comment-copy">@falsetru: jup, was just discovering that in testing.</span>
