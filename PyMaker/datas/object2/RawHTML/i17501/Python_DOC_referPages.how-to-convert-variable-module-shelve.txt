<div class="post-text" itemprop="text">
<p>please help convert the variable "fileNameClean" so that you can open the file via the module "shelve" </p>
<pre><code>import shelve

fileName = 'C:/Python33/projects/DVD_LIST/p3_dvd_list_shelve_3d_class_edit_menubar/data.dir'
print('___', fileName)
str = fileName.split('/')[-1]
print('--', str)
fileNameClean = str.split('.')[0:-1]
print(fileNameClean)                #['data']

db = shelve.open(fileNameClean)     #open error
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/3/library/os.path.html" rel="nofollow"><code>os.path</code></a> module to produce a clean path:</p>
<pre><code>import os.path

fileName = 'C:/Python33/projects/DVD_LIST/p3_dvd_list_shelve_3d_class_edit_menubar/data.dir'

fileNameClean = os.path.splitext(os.path.basename(fileName))[0]
db = shelve.open(fileNameClean)
</code></pre>
<p>Your code also produced a base name minus the extension, but you returned a <em>list</em> by using a slice (from index 0 until but not including the last element). You could have used <code>fileNameClean[0]</code>, but using the <code>os.path</code> module makes sure you catch edgecases in path handling too.</p>
<p>You probably want to make sure you don't use a relative path here either. To open the <code>shelve</code> file in the same directory as the current script or module, use <code>__file__</code> to get an absolute path to the parent directory:</p>
<pre><code>here = os.path.dirname(os.path.abspath(__file__))
db = shelve.open(os.path.join(here, fileNameClean))
</code></pre>
</div>
<span class="comment-copy">You get a list: say <code>db = shelve.open(fileNameClean[0])</code> instead</span>
<span class="comment-copy">thank you very much</span>
