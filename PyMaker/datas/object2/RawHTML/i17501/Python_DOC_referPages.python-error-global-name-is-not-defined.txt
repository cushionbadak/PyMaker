<div class="post-text" itemprop="text">
<p>My code:</p>
<pre><code>def check_File_Type(self):        
    suffix={"docx","pptx","xlsx"}
    if [self.file_path.endswith(x) for x in suffix]:
        print(x)
</code></pre>
<p>what I wanna do is to return the file type if it is one of those in suffix. but I get the error "NameError: global name 'x' is not defined". seems like I can't use "x" since it's in the [statement]? then how can I print the x here?</p>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><code>x</code> from the list comprehension is local to the comprehension; in Python 3, a list comprehension is executed in a new frame (like a function) and names in the expression are locals.</p>
<p>Use a generator expression with <code>next()</code> instead:</p>
<pre><code>def check_File_Type(self):        
    suffix={"docx", "pptx", "xlsx"}
    x = next((x for x in suffix if self.file_path.endswith(x)), None)
    if x:
        print(x)
</code></pre>
<p>The <code>next(iterable, default)</code> form returns either the first element of the iterable, or the default. The generator expression returns any <code>x</code> that is a suffix of the file path.</p>
<p>An alternative approach would be to use <a href="http://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow"><code>os.path.splitext()</code></a>:</p>
<pre><code>def check_File_Type(self):        
    extension = os.path.splitext(self.file_path)[-1].lstrip('.')
    if extension in {"docx", "pptx", "xlsx"}:
        print(extension)
</code></pre>
</div>
<span class="comment-copy">What exactly is the <code>x</code> you want to print? Do you want to print the suffix the path ends with?</span>
<span class="comment-copy">yes, sorry I didnt explain it well</span>
<span class="comment-copy">I'm pretty sure that doesn't help. You're not binding <code>x</code>. Why not use a normal loop?</span>
<span class="comment-copy">@user2357112: indeed, I forgot to bind <code>x</code>, fixed. And there is a much better way, not using any loops but simply use <code>os.path.splitext()</code>..</span>
<span class="comment-copy">@MartijnPieters splittext() is perfect for me! thanks!</span>
