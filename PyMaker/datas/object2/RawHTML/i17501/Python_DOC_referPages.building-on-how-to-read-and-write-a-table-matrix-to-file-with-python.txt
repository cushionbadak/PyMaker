<div class="post-text" itemprop="text">
<p>Back in Feb 8 '13 at 20:20, YamSMit asked a question (see: <a href="https://stackoverflow.com/questions/14780702/how-to-read-and-write-a-table-matrix-to-file-with-python">How to read and write a table / matrix to file with python?</a>) similar to what I am struggling with: starting out with an Excel table (CSV) that has 3 columns and a varying number of rows. The contents of the columns are string, floating point, and string. The first string will vary in length, while the other string can be fixed (eg, 2 characters). The table needs to go into a 2 dimensional array, so that I can do manipulations on the data to produce a final file (which will be a text file). I have experimented with a variety of strategies presented in stackoverflow, but I am always missing something, and I haven't seen an example with all the parts, which is the reason for the struggle to figure this out.</p>
<p>Sample data will be similar to:
Ray Smith, 41645.87778, V1</p>
<p>I have read and explored numpy and astropy since the available documentation says they make this type of code easy. I have tried import csv. Somehow, the code doesn't come together. I should add that I am writing in Python 3.2.3 (which seems to be a mistake since a lot of documentation is for Python 2.x). </p>
<p>I realize the basic nature of this question directs me to read more tutorials. I have been reading many, yet the tutorials always refer to enough that is different, that I fail to assemble the right pieces: read the table file, write into a 2D array, then... do more stuff.</p>
<p>I am grateful to anyone who might provide me with a workable outline of the code, or pointing me to specific documentation I should read to handle the specific nature of the code I am trying to write.</p>
<p>Many thanks in advance. (Sorry for the wordiness - just trying to be complete.)</p>
</div>
<div class="post-text" itemprop="text">
<p>I am more familiar with 2.x, but from the 3.3 csv documentation <a href="http://docs.python.org/3/library/csv.html?highlight=csv" rel="nofollow">found here</a>, it seems to be mostly the same as 2.x. The following function will read a csv file, and return a 2D array of the rows found in the file. </p>
<pre><code>import csv
def read_csv(file_name):
    array_2D = []
    with open(file_name, 'rb') as csvfile:
        read = csv.reader(csvfile, delimiter=';') #Assuming your csv file has been set up with the ';' delimiter - there are other options, for which you should see the first link.
        for row in read:
            array_2D.append(row)
    return array_2D
</code></pre>
<p>You would then be able to manipulate the data as follows (assuming your csv file is called 'foo.csv' and the desired text file is 'foo.txt'):</p>
<pre><code>data = read_csv('foo.csv')
with open('foo.txt') as textwrite:
    for row in data:
        string = '{0} has {1} apples in his Ford {2}.\n'.format(row[0], row[1], row[2])
        textwrite.write(string)
        #if you know the second column is a float:
        manipulate = float(row[1])*3
        textwrite.write(manipulate)
</code></pre>
<p>string would then be written to 'foo.txt' as:</p>
<pre><code>Ray Smith has 41645.87778 apples in his Ford V1.\n
</code></pre>
<p>and maniuplate would be written to 'foo.txt' as:</p>
<pre><code>124937.63334
</code></pre>
</div>
<span class="comment-copy">rabs, thank you so much. I see how this works now. I ran into an error where you textwrite the variable manipulate, because it wants a string and not floating number. I made it work by converting it into a string just to see that the file would write properly. I learned a ton from your example!</span>
<span class="comment-copy">No problem - if you're done, please consider accepting this answer, so people know it is solved. Cheers :)</span>
