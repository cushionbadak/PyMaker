<div class="post-text" itemprop="text">
<pre><code>b = bytearray(1)
m = memoryview(b)
</code></pre>
<p>Since the type(b[0]) is int, I would expect type(m[0]) to be int also.  Starting in Python 3.2 this is true.  But in Python 2.7, the type is str.  I need to be able to pass a memoryview to functions which expect an array of int.</p>
<p>In Python 2.7, I could create a wrapper class and override <code>__getitem__</code> . But is there a trick to tell a memoryview object to return int elements?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, there's no way to cause <code>memoryview</code>'s <code>__getitem__</code> to return <code>int</code> objects.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>ord</code> should do the trick:</p>
<pre><code>Python 2.7.5+ (default, Sep 19 2013, 13:48:49) 
&gt;&gt;&gt; b = bytearray(1)
&gt;&gt;&gt; m = memoryview(b)
&gt;&gt;&gt; m[0]
'\x00'
&gt;&gt;&gt; ord(m[0])
0
&gt;&gt;&gt; map(ord, m)
[0]
&gt;&gt;&gt; 
</code></pre>
<p>This is because in Python 2 byte data is stored in strings. Python 3 now <a href="http://docs.python.org/3/howto/pyporting.html#indexing-bytes-objects" rel="nofollow">distinguishes bytes and strings</a> (unicode).</p>
</div>
<span class="comment-copy">But I need to be able to pass a memoryview to functions which expect an array of int, so the receiving function doesn't know that it has to use ord.  I need to take a memoryview object and convert it into something that I can pass to functions which expect an array of int.</span>
<span class="comment-copy">@JeffThompson, use <code>map</code> for that. I've added it to the answer</span>
