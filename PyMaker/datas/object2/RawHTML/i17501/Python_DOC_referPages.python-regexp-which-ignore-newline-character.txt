<div class="post-text" itemprop="text">
<p>I have text which contains newline character like below. I wondered whether it possible to use Python's regexps which will just ignore newlines like <code>\n</code> or <code>\r</code> does not exists in string?</p>
<p>For example, in text:</p>
<pre><code>s = '''Lorem ipsum dolor sit amet,
consectetur adipisicing elit,
sed do eiusmod tempor
incididunt ut labore et dolore'''
</code></pre>
<p>find by regexp <code>/sit amet,consectetur adipisicing/</code> should return one match.</p>
<p>As I understand re.MULTILINE here in unapplicable and re.DOTALL also because it is just treating dot char as newline also. In my case I do nto want to expand regexp.</p>
<p>NOTE: I cannot just trim newline chars because this text must be saved back.</p>
</div>
<div class="post-text" itemprop="text">
<p>At first: <code>/sit amet,consectetur adipisicing/</code> is not a pattern, it is a fixed sequence of characters. If you would allow newlines between the words, it could become a pattern, but then you need to describe this in your regex.</p>
<p>What you could do is to replace every space in your pattern with <code>\s+</code>:</p>
<pre><code> sit\s+amet,\s+consectetur\s+adipisicing
</code></pre>
<p>See it <a href="http://regexr.com?385p4" rel="nofollow">here on Regexr</a></p>
<p><code>\s</code> is a whitespace character, including <code>\r</code> and <code>\n</code>, see <a href="http://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">python.org</a></p>
</div>
<span class="comment-copy">+1 for ... \s is a whitespace character, including \r and \n     .... so I had to resort to : + instead of :\s+ to avoid matching newlines.</span>
