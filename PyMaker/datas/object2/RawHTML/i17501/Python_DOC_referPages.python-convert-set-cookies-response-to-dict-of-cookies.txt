<div class="post-text" itemprop="text">
<p>How to convert the <code>response['set-cookie']</code> output string from <code>httplib2</code> response like</p>
<pre><code>"cookie1=xxxyyyzzz;Path=/;Expires=Wed, 03-Feb-2015 08:03:12 GMT;Secure;HttpOnly, cookie2=abcdef;Path=/;Secure"
</code></pre>
<p>to</p>
<pre><code>{'cookie1':'xxxyyyzzz','cookies2':'abcdef'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/http.cookies.html" rel="nofollow"><code>http.cookies</code></a>:</p>
<pre><code>&gt;&gt;&gt; c = "cookie1=xxxyyyzzz;Path=/;Expires=Wed, 03-Feb-2015 08:03:12 GMT;Secure;HttpOnly, cookie2=abcdef;Path=/;Secure"
&gt;&gt;&gt; from http.cookies import SimpleCookie
&gt;&gt;&gt; cookie = SimpleCookie()
&gt;&gt;&gt; cookie.load(c)
&gt;&gt;&gt; cookie
&lt;SimpleCookie: cookie1='xxxyyyzzz' cookie2='abcdef'&gt;
&gt;&gt;&gt; {key: value.value  for key, value in cookie.items()}
{'cookie1': 'xxxyyyzzz', 'cookie2': 'abcdef'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def parse_dict_cookies(value):
    result = {}
    for item in value.split(';'):
        item = item.strip()
        if not item:
            continue
        if '=' not in item:
            result[item] = None
            continue
        name, value = item.split('=', 1)
        result[name] = value
    return result
</code></pre>
</div>
<span class="comment-copy">What have you tried? Seems like a simple case of splitting a string on separators, moreover <a href="http://tools.ietf.org/search/rfc6265#page-8" rel="nofollow noreferrer">the <code>set-cookie</code> header syntax</a> does not allow separators within the cookie name <i>or</i> value, so you wouldn't even need to bother with parsing quoting constructs.</span>
<span class="comment-copy">If you used requests, you could just use <code>response.cookies</code> and get back a dictionary.</span>
