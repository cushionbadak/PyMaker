<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/2/library/os.html?highlight=linesep#os.linesep" rel="noreferrer">Python 2.7 documentation</a> (and <a href="http://docs.python.org/3/library/os.html?highlight=linesep#os.linesep" rel="noreferrer">Python 3 documentation</a> as well) contain the following line about the <code>os.linepath</code> function:</p>
<blockquote>
<p>Do not use os.linesep as a line terminator when writing files opened
  in text mode (the default);</p>
</blockquote>
<p>Why is that? And how is it different from using it on binary mode?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you open a file in text mode any <code>\n</code> that you write to the file is converted to the appropriate line ending for the platform you are using.</p>
<p>So, for example if you were on Windows where <code>os.linesep</code> is <code>'\r\n'</code>, when you write that to a file the <code>\n</code> will get automatically converted to <code>\r\n</code> and you will end up with <code>\r\r\n</code> written to your file.</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.linesep
'\r\n'
&gt;&gt;&gt; with open('test.txt', 'w') as f:
...     f.write(os.linesep)
...
&gt;&gt;&gt; with open('test.txt', 'rb') as f:
...     print repr(f.read())
...
'\r\r\n'
</code></pre>
</div>
<span class="comment-copy">@mhlester They don't explain it because it's an unnecessary implementation detail. When the file is written, all <code>\n</code> are converted to <code>os.linesep</code> based on your operating system. When the file is read, all <code>os.linesep</code> based on your OS is converted to <code>\n</code>.</span>
<span class="comment-copy">@AdamSmith: if it is an "unnecessary implementation detail", why mention it? If you need to mention it, because people are doing the wrong thing and this is causing too much confussion, you might as well explain the implementation detail, and why you should not use it ...</span>
