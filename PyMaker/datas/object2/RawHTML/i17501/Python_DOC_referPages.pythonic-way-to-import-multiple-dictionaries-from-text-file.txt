<div class="post-text" itemprop="text">
<p>So I have a text file,</p>
<pre><code>question_one = {question:"what is 2+2", answer: "4", fake1: "5"}
question_two = {question:"what is the meaning of life?", answer:"pizza", fake:"42"}
</code></pre>
<p>How can I then import these dictionaries so that I could use them like this, </p>
<pre><code>print(question_one["question"])
print(question_two["question"])
</code></pre>
<p>So the out come would be</p>
<pre><code>what is 2+2
what is the meaning of life?
</code></pre>
<p>I would like this so that I can add questions to a text file from within the program and then save them should I add more, If this is possible another way please let me know!</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way would be to store your questions into a JSON file, like <a href="https://stackoverflow.com/users/248065/">@Thom Wiggers</a> is suggesting.</p>
<p>Here's an example:</p>
<pre class="lang-json prettyprint-override"><code>[
    {
        "question": "what is 2+2", 
        "answer": "4", 
        "fake1": "5"
    },
    {
        "question": "what is the meaning of life?", 
        "answer": "pizza", 
        "fake1": "42"
    }
]
</code></pre>
<pre class="lang-py prettyprint-override"><code>import json

with open('questions.json') as f:
    questions = json.load(f)
    for question in questions:
        print(question['question'])
</code></pre>
<p>You can read more about the JSON module in the <a href="http://docs.python.org/3.3/library/json.html" rel="nofollow noreferrer">official documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you <em>only</em> want to serialize data, you want to use <a href="http://docs.python.org/3/library/pickle.html" rel="nofollow"><code>pickle</code></a> or <a href="http://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a>. <code>exec</code> will execute <em>all</em> Python code, and can be a serious security problem.<br/>
<code>pickle</code> is faster, and is specificity tailored to Python, while <code>json</code> can be read &amp; written work by just about any programming language, and is still fairly human-readable &amp; human-editable.</p>
<p>Now, to answer the question as you asked it (you probably don't want to do this):</p>
<p>You can use <a href="http://docs.python.org/3/library/functions.html?highlight=exec#exec" rel="nofollow"><code>exec()</code></a></p>
<blockquote>
<p>This function supports dynamic execution of Python code. object must
  be either a string or a code object. If it is a string, the string is
  parsed as a suite of Python statements which is then executed (unless
  a syntax error occurs).</p>
</blockquote>
<p>ie.  </p>
<p><code>exec(open('data.txt', 'r').read())</code></p>
<p>Another way to do is would be to (ab)use <code>import</code>, assuming your file is named <code>data.py</code>:</p>
<pre><code>import data

data.question_one['question']
</code></pre>
<p>This is obviously not what <code>import</code> was intended for... I've 'used' import like this in the past, and regretted it (there are a number of caveats, I'll leave it as an exercise to the reader to think about what they might be).</p>
<p><strong>Warning</strong> Both are <a href="http://en.wikipedia.org/wiki/Eval#Security_risks" rel="nofollow">eval</a>-like statements, and should be used with care, <strong>any</strong> Python code in <code>data.txt</code> will be executed, which may be potentially dangerous. Be <em>very</em> sure you trust the source of whatever you pass to <code>exec()</code>, and <em>don't</em> use if you only want to serialize data (instead of running Python code as such).</p>
</div>
<span class="comment-copy">You could store a json object to a file: importing those is much easier since you can then just iterate over the questions.</span>
<span class="comment-copy">Have you tried to do anything at all?</span>
<span class="comment-copy">Ah i havent heard of how to do that with json objects, I'll have a look now,</span>
<span class="comment-copy">This looks like the way, Can I ask how would I change that with statement to only print the question I would like, as the current one prints all the questions out, Thank you</span>
<span class="comment-copy">@jack <code>questions</code> is a <a href="http://docs.python.org/3.3/tutorial/introduction.html#lists" rel="nofollow noreferrer"><code>list</code></a> and it can be indexed like any sequence: for example <code>questions[0]</code> returns the first question. Is that what you are asking for?</span>
<span class="comment-copy">Yes I found a way to do it, please can you have a look and see if it pythonically * correct, as in I could improve something, <a href="https://gist.github.com/jackdh/8940057" rel="nofollow noreferrer">gist.github.com/jackdh/8940057</a></span>
<span class="comment-copy">@jack That looks correct! :-)</span>
<span class="comment-copy">I think it's irresponsible to suggest <code>exec</code> when there are many other alternatives available, especially <code>json</code>. Even <code>csv</code> would work.</span>
<span class="comment-copy">what's the caveats of the second way? I'm making my config files python code and load them just as you say...</span>
<span class="comment-copy">@2rs2ts Thanks for your feedback. I think it would depend on what <i>exactly</i> the OP is trying to do; you can do <code>if</code>s and whatnot in <code>exec()</code>. I've made (valid) use of <code>exec()</code>... I included the obligatory warning, but I'll word it a bit stronger.</span>
