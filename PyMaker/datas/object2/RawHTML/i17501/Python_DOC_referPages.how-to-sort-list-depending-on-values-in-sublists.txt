<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5201191/method-to-sort-a-list-of-lists">Method to sort a list of lists?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>So I have a list that looks something like this:</p>
<pre><code>example = [['b',1],['b',2],['a',2]]
</code></pre>
<p>And it needs to be sorted to become:</p>
<pre><code>example = [['b',1],['a',2],['b',2]]
</code></pre>
<p>I.e. sorted numerically by the number in the [1] position. The program needs to recognise when there are two numbers that are the same, and then sort these elements alphabetically.</p>
<p>Any ideas?</p>
<p>Edit:</p>
<p>and how would I go about sorting the list so that the highest number is printed first?, i.e:</p>
<pre><code>example = [['a',2],['b',2],['b',1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a neat trick</p>
<pre><code>&gt;&gt;&gt; example = [['b',1],['b',2],['a',2]]
&gt;&gt;&gt; sorted(example, key=sorted)
[['b', 1], ['a', 2], ['b', 2]]
</code></pre>
<p>Only works for Python2 though</p>
<hr/>
<p>There are two ways to sort by numbers from highest to lowest</p>
<pre><code>&gt;&gt;&gt; sorted(example, key=lambda x: (-x[1], x[0]))
[['a', 2], ['b', 2], ['b', 1]]
</code></pre>
<p>or</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; sorted(sorted(example), key=itemgetter(1), reverse=True)
[['a', 2], ['b', 2], ['b', 1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow"><code>list.sort</code></a>, its <a href="http://docs.python.org/3/glossary.html#key-function" rel="nofollow">key function</a>, and <a href="http://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow"><code>operator.itemgetter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; example = [['b',1],['b',2],['a',2]]
&gt;&gt;&gt; example.sort(key=itemgetter(1,0))
&gt;&gt;&gt; example
[['b', 1], ['a', 2], ['b', 2]]
&gt;&gt;&gt;
</code></pre>
<hr/>
<p>You could also use a <a href="http://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow"><code>lambda</code></a> instead of <code>operator.itemgetter</code>:</p>
<pre><code>example.sort(key=lambda x: (x[1], x[0]))
</code></pre>
<p>but that would be slower.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; lis = [['b',1],['b',2],['a',2]]
&gt;&gt;&gt; sorted(lis, key=lambda x:x[::-1])
[['b', 1], ['a', 2], ['b', 2]]
</code></pre>
<p>To sort the list in-place use <code>lis.sort(...)</code>.</p>
</div>
<span class="comment-copy">Could you explain how this works? Lets say I now wanted to sort the list from the highest number to the lowest (but still sorting elements with the same number alphabetically a-z), how would you change this code to allow for that?</span>
<span class="comment-copy">@HayleyvanWaas, I've got examples for that in my answer</span>
<span class="comment-copy">In Python 2.x, we can simply do <code>print(sorted(lis, key=sorted))</code> :)</span>
