<div class="post-text" itemprop="text">
<p>My function doesn't work as it is supposed to. I keep getting 'True' when all line[0] are less than line[2]. I know this is pretty trivial, but it's an exercise i've taken to better understand files and for</p>
<pre><code>def contains_greater_than(filename):
    """
    (str) --&gt; bool
    The text file of which &lt;filename&gt; is the name contains multiple lines.
    Each line consists of two integer numbers, separated by a space.
    This returns True iff in at least one of those lines, the first number 
    is larger than the   second one.

    """
    lines = open(filename).readlines()
    for line in lines:
        if line[0] &gt; line[2]:
             return True
    return False
</code></pre>
<p>my data:</p>
<pre><code>3 6
3 7
3 8
2 9
3 20
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Having been thoroughly schooled in my over-thought previous answer, may I offer this far simpler solution which still short-circuits <strong>as intended</strong>:</p>
<pre><code>for line in lines:
    x, y = line.split()
    if int(x) &gt; int(y): return True
return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>line[0] = "3" , line[1] = " "
</code></pre>
<p>for all cases in your data  ('3' &lt; ' ' = False)</p>
<p>you need to do</p>
<pre><code>split_line = line.split()
</code></pre>
<p>then </p>
<pre><code> numbers = [int(x) for x in split_line]
</code></pre>
<p>then looks at <code>numbers[0]</code> and <code>numbers[1]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>1) You are comparing strings that you need to convert to integers</p>
<p>2) You will only grab the first and third character (so, you won't get the 0 in 20)</p>
<p>Instead use</p>
<pre><code>first, second = line.split()
if first &lt; second:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a whole-hog functional rewrite. Hope this is enlightening ;-)</p>
<pre><code>import functools

def line_iter(fname):
    with open(fname) as inf:
        for line in inf:
            line = line.strip()
            if line:
                yield line

def any_line(fn, fname):
    return any(fn(line) for line in line_iter(fname))

def is_greater_than(line):
    a,b = [int(i) for i in line]
    return a &gt; b

contains_greater_than = functools.partial(any_line, is_greater_than)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>"3 20" is a string, just do map(int, LINE.split()) before.
but how do you want compare 2 numbers with 2 numbers?</p>
</div>
<div class="post-text" itemprop="text">
<p>The main problem is you are comparing characters of the line, not the values of the two numbers on each one. This can be avoided first splitting the line into white-space-separated words, and then turning those into an integer value for the comparison by applying the<code>int()</code>function to each one:</p>
<pre><code>def contains_greater_than(filename):
    with open(filename) as inf:
        for line in inf:
            a, b = map(int, line.split())
            if a &gt; b:
                return True
        return False

print(contains_greater_than('comparison_data.txt'))
</code></pre>
<p>This can all be done very succinctly in Python using the built-in<a href="http://docs.python.org/3/library/functions.html?highlight=any#any" rel="nofollow"><code>any()</code></a>function with a couple of <a href="http://docs.python.org/3/reference/expressions.html?highlight=expression#generator-expressions" rel="nofollow">generator expressions</a>:</p>
<pre><code>def contains_greater_than(filename):
    with open(filename) as inf:
        return any(a &gt; b for a, b in (map(int, line.split()) for line in inf))
</code></pre>
</div>
<span class="comment-copy">your code read <code>return True if for ANY line, line[0] &gt; line[2]</code>. Which is true, since <code>3 &gt; 2</code>. only the 1st and 3rd characters are read, meaning <code>3 20</code> reads <code>line[0] = 3 line[2] = 2</code></span>
<span class="comment-copy">Generators are nice and all, but they won't help compare strings as numbers ;-) And also, the OP specifically <i>wants</i> to short-circuit (see docstring).</span>
<span class="comment-copy">When the numbers are single-digit it does! OP wondering why it always returns True, the short-circuit once True is the reason</span>
<span class="comment-copy"><i>This returns True iff in at least one of those lines, the first number is larger than the second one</i> - that's supposed to be the requirement, as I understand it.</span>
<span class="comment-copy">I stand humbly corrected. I misunderstood the question. Rewriting</span>
<span class="comment-copy">while this is technically correct, I'm not sure it really helps the SO</span>
<span class="comment-copy">If he throws in links to the docs of <a href="http://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split()</code></a>, the <a href="http://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> builtin and <a href="http://docs.python.org/2/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator expressions</a> it might.</span>
