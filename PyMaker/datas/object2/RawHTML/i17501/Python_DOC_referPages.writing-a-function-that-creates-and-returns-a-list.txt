<div class="post-text" itemprop="text">
<p>I am currently trying to write a function that creates and returns a list of a specified length, containing repetitions of a specified value. I'm really unsure of how to get the function to create the list from the arguments that are inputted. Help would be greatly appreciated! I'm <em>not</em> asking for the code to be written for me, just a simple explanation of what Python functions I should be using or something to point me in the right direction. The only code I have so far is this, which I know is wrong:</p>
<pre><code>def makeList(a,b):
    myList = []
    myList = makeList
    return myList
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Edit:</strong></p>
<p>Since you said that you wanted to use a loop:</p>
<pre><code>&gt;&gt;&gt; def makeList(a, b):
...     myList = []
...     for _ in range(b):
...         myList.append(a)
...     return myList
...
&gt;&gt;&gt; makeList('a', 12)
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
&gt;&gt;&gt; makeList(3, 12)
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
&gt;&gt;&gt;
</code></pre>
<hr/>
<hr/>
<p>Actually, because the solution is quite short, the easiest way to explain it is with a demonstration:</p>
<pre><code>&gt;&gt;&gt; def makeList(a, b):
...     return [a] * b
...
&gt;&gt;&gt; makeList('a', 12)
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
&gt;&gt;&gt; makeList(3, 12)
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
&gt;&gt;&gt;
</code></pre>
<p>Basically, you place <code>a</code> in a list and then multiply that list by <code>b</code>.  Doing so will create a list whose contents are <code>a</code> repeated <code>b</code> times.</p>
<p>It should be noted however that, if <code>a</code> is a mutable object (such as a list), the above function will return a list that contains <code>b</code> references to the same object <code>a</code>.  </p>
<p>If this behavior is undesirable, then you can use a list comprehension and <code>copy.deepcopy</code>:</p>
<pre><code>&gt;&gt;&gt; from copy import deepcopy
&gt;&gt;&gt; def makeList(a, b):
...     return [deepcopy(a) for _ in range(b)]
...
&gt;&gt;&gt; makeList('a', 12)
['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']
&gt;&gt;&gt; makeList(3, 12)
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
&gt;&gt;&gt;
</code></pre>
<p>Finally, here are some useful references regarding the tools used here:</p>
<ol>
<li><p><a href="http://docs.python.org/2/library/copy.html#copy.deepcopy" rel="nofollow"><code>copy.deepcopy</code></a></p></li>
<li><p><a href="http://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow">Sequence types</a></p></li>
<li><p><a href="http://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow"><code>range</code></a></p></li>
<li><p><a href="http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">List comprehensions</a></p></li>
</ol>
<hr/>
<p><strong>Note:</strong> In all of the demonstrations, it is assumed that <code>b</code> is an integer.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can multiply a list to make a bigger list. Try this code in a Python interpreter:</p>
<pre><code>&gt;&gt;&gt; [1] * 5
[1, 1, 1, 1, 1]

&gt;&gt;&gt; [1, 2] * 5
[1, 2, 1, 2, 1, 2, 1, 2, 1, 2]
</code></pre>
<p>So you should be able to do something like this in a function:</p>
<pre><code>def makeList(a,b):
    return [a] * b
</code></pre>
<p>You can also use the list's append() function:</p>
<pre><code>&gt;&gt;&gt; x = [1, 2]
&gt;&gt;&gt; x.append(99)
&gt;&gt;&gt; print x
[1, 2, 99]
</code></pre>
<p>The interactive Python interpreter has a great built-in help system. you can use dir() and help() to find out what functions are available and how they work. Try this:</p>
<pre><code>&gt;&gt;&gt; x = [1, 2]
&gt;&gt;&gt; dir(x)         # lists the functions you can call on x
&gt;&gt;&gt; help(x.append) # Describes each function
&gt;&gt;&gt; help(x.extend)
</code></pre>
<p>etc.</p>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on their own. A good way to demonstrate this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (console output, stack traces, compiler errors - whatever is applicable). The more detail you provide, the more answers you are likely to receive.</span>
<span class="comment-copy">More info needed. You need to at least <i>try something</i></span>
<span class="comment-copy">Well, I now don't see any reason why this should be closed.  Voting to reopen.</span>
<span class="comment-copy">I really would like some help with this question. I've been trying to find something to help me since my question has been put on hold, and I'm still stuck. It needs to work for both letters and numbers. Say I wanted to repeat 'a' for twelve 12 times, or the number 3 for 12 times, it should be able to return it in a list.</span>
<span class="comment-copy">I'm just struggling with how I get the parameters the function takes to be made into a list.</span>
<span class="comment-copy">This raises the issue of what happens if <code>a</code> is mutable. You most likely want to use a list comprehension instead.</span>
<span class="comment-copy">A list comprehension won't help either. I don't think there's an easy solution available that would make this function as easy as it should be. A warning would be appropriate though.</span>
<span class="comment-copy">Eh, I'll mention it just for the record.</span>
<span class="comment-copy">All these solutions are very helpful. Is there a way to do this using a loop instead of multiplying?</span>
<span class="comment-copy">@MarissaLeigh - Well, if you want, see my edit.  However, the multiplying would be more efficient.</span>
