<div class="post-text" itemprop="text">
<p>I have this code snippet and I'm trying to seek backwards from the end of file using python:</p>
<pre><code>f=open('D:\SGStat.txt','a');
    f.seek(0,2)
    f.seek(-3,2)
</code></pre>
<p>This throws the following exception while running:</p>
<pre><code>f.seek(-3,2)
io.UnsupportedOperation: can't do nonzero end-relative seeks
</code></pre>
<p>Am i missing something here? </p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="http://docs.python.org/3.2/tutorial/inputoutput.html#methods-of-file-objects" rel="noreferrer">documentation</a> for Python 3.2 and up:</p>
<blockquote>
<p>In text files (those opened without a <code>b</code> in the mode string), only seeks relative to the beginning of the file are allowed (the exception being seeking to the very file end with <code>seek(0, 2)</code>).</p>
</blockquote>
<p>Therefore, you can change your program to read:</p>
<pre><code>f = open('D:\SGStat.txt', 'ab')
f.seek(0, 2)
f.seek(-3, 2)
</code></pre>
<p>However, you should be aware that adding the <code>b</code> flag when you are reading or writing text can have unintended consequences (with multibyte encoding for example), and in fact <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="noreferrer">changes the type of data read or written</a>. For a more thorough discussion of the cause of the problem, and a solution that does not require adding the <code>b</code> flag, see <a href="https://stackoverflow.com/a/51131242/1392953">another answer to this question</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The existing answers <em>do</em> answer the question, but provide no <em>solution.</em></p>
<p>From <a href="http://python-reference.readthedocs.io/en/latest/docs/file/seek.html" rel="noreferrer">readthedocs</a>:</p>
<blockquote>
<p>If the file is opened in text mode (without <code>b</code>), only offsets returned by <code>tell()</code> are legal. Use of other offsets causes undefined behavior.</p>
</blockquote>
<p>This is supported by <a href="http://docs.python.org/3.2/tutorial/inputoutput.html#methods-of-file-objects" rel="noreferrer">the documentation</a>, which says that:</p>
<blockquote>
<p>In text files (those opened without a <code>b</code> in the mode string), only seeks relative to the beginning of the file <em>[<code>os.SEEK_SET</code>]</em> are allowed...</p>
</blockquote>
<p>This means if you have this code from old Python:</p>
<pre><code>f.seek(-1, 1)   # seek -1 from current position
</code></pre>
<p>it would look like this in Python 3:</p>
<pre><code>f.seek(f.tell() - 1, os.SEEK_SET)   # os.SEEK_SET == 0
</code></pre>
<p><h1>Solution</h1> Putting this information together we can achieve the goal of the OP:</p>
<pre><code>f.seek(0, os.SEEK_END)              # seek to end of file; f.seek(0, 2) is legal
f.seek(f.tell() - 3, os.SEEK_SET)   # go backwards 3 bytes
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In order to use seek from current position and end you have to open the text file in binary mode. See this example where I have created a file "nums.txt" and have put "ABCDEFGHIJKLMNOPQRSTUVWXYZ" in the file. I read the letters of the string "PYTHON" from the file and display the same. See the code I've run in python 3.6 windows in anaconda 4.2</p>
<pre><code>    &gt;&gt;&gt; file=open('nums.txt','rb')
    &gt;&gt;&gt; file.seek(15,0)
    15
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'P'
    &gt;&gt;&gt; file.seek(8,1)
    24
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'Y'
    &gt;&gt;&gt; file.seek(-7,2)
    19
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'T'
    &gt;&gt;&gt; file.seek(7,0)
    7
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'H'
    &gt;&gt;&gt; file.seek(6,1)
    14
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'O'
    &gt;&gt;&gt; file.seek(-2,1)
    13
    &gt;&gt;&gt; file.read(1).decode('utf-8')
    'N'
</code></pre>
</div>
<span class="comment-copy">@lanzz You should post that as an answer.</span>
<span class="comment-copy">Python 3 only supports text file seeks from the beginning of the file. If you want to get the last three lines of a file, you can use deque(f, 3) to iterate over just those lines.</span>
