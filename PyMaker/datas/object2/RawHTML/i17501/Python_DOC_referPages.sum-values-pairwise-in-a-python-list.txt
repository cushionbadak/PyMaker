<div class="post-text" itemprop="text">
<p>Say that I have a list:</p>
<pre><code>alist = [1, 3, -5, 4, 2, -1]
</code></pre>
<p>How would you change each value in the list by adding the next value to it? So, for example, the first value becomes 4, second value becomes -2, etc...</p>
<p>I was thinking to use <code>for number in alist: number = number + # what next?</code>.</p>
<p>How would I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, what you have is a <a href="http://docs.python.org/3.3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">tuple</a>, not a list. Tuples are immutable, which means that you cannot reassign their elements</p>
<p>Here is a way to create a new list, without altering the original:</p>
<pre><code>&gt;&gt;&gt; alist
[1, 3, -5, 4, 2, -1]
&gt;&gt;&gt; [i+j for i,j in zip(alist, alist[1:])]
[4, -2, -1, 6, 1]
</code></pre>
<p>Note that you end up with one less element, as the last element in the list is not considered</p>
<p>Here is a way to do it, by altering the original (no new list is created):</p>
<pre><code>for i in range(len(alist)-1):
    alist[i] += alist[i+1]
</code></pre>
<p>Note that the last element in the list is untouched.</p>
</div>
<div class="post-text" itemprop="text">
<p>This will drop the last element, since there is no "next" for the last one:</p>
<pre><code>&gt;&gt;&gt; alist = (1, 3, -5, 4, 2, -1)
&gt;&gt;&gt; newlist = [a + b for a, b in zip(alist, alist[1:])]
&gt;&gt;&gt; newlist
[4, -2, -1, 6, 1]
</code></pre>
<p>Alternatively, <a href="http://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>zip_longest</code></a> (<a href="http://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow"><code>izip_longest</code></a> in python 2) will keep it:</p>
<pre><code>import itertools
&gt;&gt;&gt; newlist = [a + b for a, b in itertools.zip_longest(alist, alist[1:], fillvalue=0)]
&gt;&gt;&gt; newlist
[4, -2, -1, 6, 1, -1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The straightforward way:</p>
<pre><code>[alist[i] + alist[i+1] for i in range(len(alist)-1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For the fans of maps and lambdas:</p>
<pre><code>map(lambda x: sum(x), zip(alist, alist[1:]))
</code></pre>
<p>or simply</p>
<pre><code>map(sum, zip(alist, alist[1:]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from itertools import tee, izip

def pairwise(iterable):
    "s -&gt; (s0,s1), (s1,s2), (s2, s3), ..."
    a, b = tee(iterable)
    next(b, None)
    return izip(a, b)

alist = [1, 3, -5, 4, 2, -1]
new_alist = [a+b for a,b in pairwise(alist)]        # =&gt; [4, -2, -1, 6, 1]
</code></pre>
</div>
<span class="comment-copy">What happens to the last number?</span>
<span class="comment-copy">You are making some assumptions here.</span>
<span class="comment-copy">@Julio: yes. But to some extent, that really can't be helped, as the question is under-specified</span>
<span class="comment-copy">Understandably so :) now at least your updated answer has more context.</span>
<span class="comment-copy">@mhlester Ah, just realized this - was editing while you commented :)</span>
