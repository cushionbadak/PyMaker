<div class="post-text" itemprop="text">
<pre><code>a=[[1,2,3],[4,6],[7,8,9]]
</code></pre>
<p>In Python 2 If I have a list containing lists of variable lengths then I can do the following:</p>
<pre><code>list(map(None,*a))
</code></pre>
<p>In Python 3 None type is seemingly not accepted.</p>
<p>Is there, in Python 3, an as simple method for producing the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="noreferrer"><code>itertools.zip_longest</code></a> in Python 3:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; list(zip_longest(*a))
[(1, 4, 7), (2, 6, 8), (3, None, 9)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use list comprehensions to do this, which I guess should work regardless of the Python version:</p>
<pre><code>max_len = max(len(i) for i in a)
[[i[o] if len(i) &gt; o else None for i in a] for o in range(max_len)]
</code></pre>
<p>Output:</p>
<pre><code>[[1, 4, 7], [2, 6, 8], [3, None, 9]]
</code></pre>
<p>This gives you the flexibility to do whatever you want in case of missing values.</p>
<pre><code>max_len = max(len(i) for i in a)
[[i[o] for i in a if len(i) &gt; o] for o in range(max_len)]
</code></pre>
<p>Output:</p>
<pre><code>[[1, 4, 7], [2, 6, 8], [3, 9]]
</code></pre>
<p>Alternately, as suggested by @gboffi, you can do the following to save more time:</p>
<pre><code>l = [len(i) for i in a]
[[i[o] for ix, i in enumerate(a) if l[ix] &gt; o] for o in range(max(l))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>grid = [[1],
    [4,5,6],
    [7,8,9,10,12,25]]

i = 0
result = []
do_stop = False
while not do_stop:
    result.append([])
    for block in grid:
        try:
            result[i].append(block[i])
        except:
            continue
    if len(result[i]) == 0:
        result.pop(i)
        do_stop = True
    i = i + 1

print result
</code></pre>
</div>
<span class="comment-copy">How does <code>list(map(None, *a))</code> work?</span>
<span class="comment-copy">I found an answer <a href="https://muffinresearch.co.uk/python-transposing-lists-with-map-and-zip/" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">Is it feasible to remove the function call in the inner loop, as in <code>l = [len(i) for i in a]</code> <code>[[i[o] for i in a if l[i] &gt; o] for o in range(max(l))]</code>?</span>
<span class="comment-copy">That's a good idea. I added another answer as you suggested.</span>
