<div class="post-text" itemprop="text">
<p>I am having trouble with variables not getting defined the way I want them to in my function. I am getting the error message "global name color1 is not defined" even though I am returning color1 from a function in which I give it a defined value. 
Here is my code :</p>
<pre><code>    import random   

card = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52']
def computer_card1():
    return random.choice(card)

def computer_card2():
    return random.choice(card)

def player_color():
        color_in = input('Purple, Black or Red? ').strip().lower()
        return color_in
def cards():
    if computer_card1() == 1:
        color1 = black
        value1 = 2
    if computer_card1() == 2:
        color1 = black
        value1 = 3
    if computer_card1() == 3:
        color1 = black
        value1 = 4
    if computer_card1() == 4:
        color1 = black
        value1 = 5
    if computer_card1() == 5:
        color1 = black
        value1 = 6
    if computer_card1() == 6:
        color1 = black
        value1 = 7
    if computer_card1() == 7:
        color1 = black
        value1 = 8
    if computer_card1() == 8:
        color1 = black
        value1 = 9
    if computer_card1() == 9:
        color1 = black
        value1 = 10
    if computer_card1() == 10:
        color1 = black
        value1 = 11
    if computer_card1() == 11:
        color1 = black
        value1 = 12
    if computer_card1() == 12:
        color1 = black
        value1 = 13
    if computer_card1() == 13:
        color1 = black
        value1 = 0
    if computer_card1() == 14:
        color1 = black
        value1 = 2
    if computer_card1() == 15:
        color1 = black
        value1 = 3
    if computer_card1() == 16:
        color1 = black
        value1 = 4
    if computer_card1() == 17:
        color1 = black
        value1 = 5
    if computer_card1() == 18:
        color1 = black
        value1 = 6
    if computer_card1() == 19:
        color1 = black
        value1 = 7
    if computer_card1() == 20:
        color1 = black
        value1 = 8
    if computer_card1() == 21:
        color1 = black
        value1 = 9
    if computer_card1() == 22:
        color1 = black
        value1 = 10
    if computer_card1() == 23:
        color1 = black
        value1 = 11
    if computer_card1() == 24:
        color1 = black
        value1 = 12
    if computer_card1() == 25:
        color1 = black
        value1 = 13
    if computer_card1() == 26:
        color1 = black
        value1 = 0
    if computer_card1() == 27:
        color1 = red
        value1 = 2
    if computer_card1() == 28:
        color1 = red
        value1 = 3
    if computer_card1() == 29:
        color1 = red
        value1 = 4
    if computer_card1() == 30:
        color1 = red
        value1 = 5
    if computer_card1() == 31:
        color1 = red
        value1 = 6
    if computer_card1() == 32:
        color1 = red
        value1 = 7
    if computer_card1() == 33:
        color1 = red
        value1 = 8
    if computer_card1() == 34:
        color1 = red
        value1 = 9
    if computer_card1() == 35:
        color1 = red
        value1 = 10
    if computer_card1() == 36:
        color1 = red
        value1 = 11
    if computer_card1() == 37:
        color1 = red
        value1 = 12
    if computer_card1() == 38:
        color1 = red
        value1 = 13
    if computer_card1() == 39:
        color1 = red
        value1 = 0
    if computer_card1() == 40:
        color1 = red
        value1 = 2
    if computer_card1() == 41:
        color1 = red
        value1 = 2
    if computer_card1() == 42:
        color1 = red
        value1 = 3
    if computer_card1() == 43:
        color1 = red
        value1 = 4
    if computer_card1() == 44:
        color1 = red
        value1 = 5
    if computer_card1() == 45:
        color1 = red
        value1 = 6
    if computer_card1() == 46:
        color1 = red
        value1 = 7
    if computer_card1() == 47:
        color1 = red
        value1 = 8
    if computer_card1() == 48:
        color1 = red
        value1 = 9
    if computer_card1() == 49:
        color1 = red
        value1 = 10
    if computer_card1() == 50:
        color1 = red
        value1 = 11
    if computer_card1() == 51:
        color1 = red
        value1 = 12
    if computer_card1() == 52:
        color1 = red
        value1 = 13
    if computer_card2() == 1:
        color2 = black
        value2 = 2
    if computer_card2() == 2:
        color2 = black
        value2 = 2
    if computer_card2() == 3:
        color2 = black
        value2 = 4
    if computer_card2() == 4:
        color2 = black
        value2 = 5
    if computer_card2() == 5:
        color2 = black
        value2 = 6
    if computer_card2() == 6:
        color2 = black
        value2 = 7
    if computer_card2() == 7:
        color2 = black
        value2 = 8
    if computer_card2() == 8:
        color2 = black
        value2 = 9
    if computer_card2() == 9:
        color2 = black
        value2 = 10
    if computer_card2() == 10:
        color2 = black
        value2 = 11
    if computer_card2() == 11:
        color2 = black
        value2 = 12
    if computer_card2() == 12:
        color2 = black
        value2 = 13
    if computer_card2() == 13:
        color2 = black
        value2 = 0
    if computer_card2() == 14:
        color2 = black
        value2 = 2
    if computer_card2() == 15:
        color2 = black
        value2 = 3
    if computer_card2() == 16:
        color2 = black
        value2 = 4
    if computer_card2() == 17:
        color2 = black
        value2 = 5
    if computer_card2() == 18:
        color2 = black
        value2 = 6
    if computer_card2() == 19:
        color2 = black
        value2 = 7
    if computer_card2() == 20:
        color2 = black
        value2 = 8
    if computer_card2() == 21:
        color2 = black
        value2 = 9
    if computer_card2() == 22:
        color2 = black
        value2 = 10
    if computer_card2() == 23:
        color2 = black
        value2 = 11
    if computer_card2() == 24:
        color2 = black
        value2 = 12
    if computer_card2() == 25:
        color2 = black
        value2 = 13
    if computer_card2() == 26:
        color2 = black
        value2 = 0
    if computer_card2() == 27:
        color2 = red
        value2 = 2
    if computer_card2() == 28:
        color2 = red
        value2 = 3
    if computer_card2() == 29:
        color2 = red
        value2 = 4
    if computer_card2() == 30:
        color2 = red
        value2 = 5
    if computer_card2() == 31:
        color2 = red
        value2 = 6
    if computer_card2() == 32:
        color2 = red
        value2 = 7
    if computer_card2() == 33:
        color2 = red
        value2 = 8
    if computer_card2() == 34:
        color2 = red
        value2 = 9
    if computer_card2() == 35:
        color2 = red
        value2 = 10
    if computer_card2() == 36:
        color2 = red
        value2 = 11
    if computer_card2() == 37:
        color2 = red
        value2 = 12
    if computer_card2() == 38:
        color2 = red
        value2 = 13
    if computer_card2() == 39:
        color2 = red
        value2 = 0
    if computer_card2() == 40:
        color2 = red
        value2 = 2
    if computer_card2() == 41:
        color2 = red
        value2 = 2
    if computer_card2() == 42:
        color2 = red
        value2 = 3
    if computer_card2() == 43:
        color2 = red
        value2 = 4
    if computer_card2() == 44:
        color2 = red
        value2 = 5
    if computer_card2() == 45:
        color2 = red
        value2 = 6
    if computer_card2() == 46:
        color2 = red
        value2 = 7
    if computer_card2() == 47:
        color2 = red
        value2 = 8
    if computer_card2() == 48:
        color2 = red
        value2 = 9
    if computer_card2() == 49:
        color2 = red
        value2 = 10
    if computer_card2() == 50:
        color2 = red
        value2 = 11
    if computer_card2() == 51:
        color2 = red
        value2 = 12
    if computer_card2() == 52:
        color2 = red
        value2 = 13
    return color1
    return color2
    return value1
    return value2

def main():
    card1 = computer_card1()
    card2 = computer_card2()
    pcolor = player_color()
    print ( "The cards where:",card1,",",card2,",",pcolor )
    if color1 == color2:
        color = color1
    else:
        color = 'purple'
    if color == pcolor:
        print ('Win')
    else:
        print ('Lose')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

def computer_pick_card():
    face = random.choice(['A', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'])
    suit = random.choice('HSDC')
    return face + suit    # returns eg 'QC' for Queen of Clubs or '7D' for 7 of Diamonds

def player_color():
        return input('Purple, Black or Red? ').strip().lower()

def card_color(card):
    suit = card[-1]    # last character
    if suit in 'CS':
        return 'black'
    elif suit in 'HD':
        return 'red'
    else:
        raise ValueError('bad card suit = {}'.format(suit))

def main():
    pcolor = player_color()

    card1 = computer_pick_card()
    col1  = card_color(card1)
    card2 = computer_pick_card()
    col2  = card_color(card2)
    print("The computer chose {} ({}) and {} ({}).".format(card1, col1, card2, col2))

    if col1 == col2:
        winner = col1
    else:
        winner = 'purple'
    print('Winning color is {}'.format(winner))    

    if pcolor == winner:
        print ('You win!')
    else:
        print ('You lose')

if __name__=="__main__":
    main()
</code></pre>
<p>Do note that, in this usage, actually picking two cards and comparing does an awful lot of unneeded work; you could get the same result much more directly with</p>
<pre><code>winner = random.choice(["red", "black", "purple", "purple"])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My god! You are still misunderstanding a lot of things young padawan... :)</p>
<h2>Variable Scope</h2>
<p>Let's start with <a href="http://en.wikipedia.org/wiki/Variable_scope" rel="nofollow">variable scope</a>. Let me explain.</p>
<p>When you write the following code,</p>
<pre class="lang-py prettyprint-override"><code>def myfunction():
    a = 5
    print(a) # OK

b = a # This line fails
</code></pre>
<p>you will get a failure, because <code>a</code> is <strong>local</strong> to <code>myfunction</code>, that is to say it only exists inside that function, and the last statement refers to a variable that is not known to python. This is a nice feature, because without scope, you have to take a lot of care not to have the same variable name in any part of your program that could get in conflict. If it's boring in a small program, it's mandatory for bigger programs (think of the 10.2M lines of code of firefox).</p>
<h2>The <code>return</code> keyword</h2>
<p>The <code>return</code> keyword doesn't place a variable in the <strong>global</strong> scope (some limbo where variables are available at any time). Instead, it <strong>ends</strong> the current function and pass some values to the <strong>caller</strong>. The first statement ending sharply the function, subsequent <code>return</code> are never reached. Catching a return value is done from the caller like this:</p>
<pre><code>def afunction():
    a = 5
    return a

b = afunction()
print(b) # will print `5`
</code></pre>
<p>Python provides a handy way to return several values from a function in the form of a tuple. One uses it like this:</p>
<pre><code>def somefunction():
    a = 7
    b = "hello"
    return a, b, "worlds"

sev, hel, wo = somefunction()
print(hel, sev, wo) # will print `hello 7 worlds`
</code></pre>
<h2>The Zen of Python and all these things</h2>
<p>Just a last topic to say that a good program has simple algorithm and complexity lies in data. Python has a wonderful set of tools specifically designed to express and manipulate complex datasets. <a href="http://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow">Lists</a>, <a href="http://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">tuples</a> and <a href="http://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionaries</a> are used to describe complex data, group them and establish relationships. Using them, you will simplify a lot your code, so learn to use them as soon as possible.</p>
<p>Some nice reads:</p>
<ul>
<li><a href="http://learnpythonthehardway.org/book/" rel="nofollow">Learn Python The Hard Way</a></li>
<li><a href="http://www.faqs.org/docs/artu/ch01s06.html" rel="nofollow">Basics of the Unix Philosophy</a> especially the <a href="http://www.faqs.org/docs/artu/ch01s06.html#id2878263" rel="nofollow">Rule of Representation</a></li>
</ul>
</div>
<span class="comment-copy">I'm blinded by your if-statements. You simply have to replace those if-statements. Modulo might be useful. Also, look up scopes. Your variables color1/color2 doesn't exist outside your function <code>card</code>. i.e., your error is telling you exactly what's wrong.</span>
<span class="comment-copy">I'm not very familiar with python how exactly could I use the modulo in place of an if statement?</span>
<span class="comment-copy">Using modulo instead of excessive ifs here is more about programming than python. There's some kind of recurrence, right? Think about when different values are produced.</span>
<span class="comment-copy">Though I see that you sometimes skip 1, sometimes 11, sometimes 3 etc. I can't really see the connection :p</span>
<span class="comment-copy">They are cards the values are for spacific cards for instance 1 is a black 2 card 2 is a black 3 card 3 is a black 4 card and 10 is a black queen card. Does that make more sense?</span>
