<div class="post-text" itemprop="text">
<p>I stepped into a feature of python very dangerous to my style of programming. I wondered what pattern would be best to resolve these conflicts. The follwoing example should give a good insight</p>
<pre><code>class TestObject():

    def __init__(self, dt = {}):
        self.dt = dt

    def update_dt(self, new_dt):
        for k, v in new_dt.items():
            self.dt[k] = v


def main():
    first = {'a': 1}

    d1 = TestObject()
    print(TestObject().__dict__)

    d1.update_dt(first)
    print(TestObject().__dict__)
</code></pre>
<p>To my surprise the last print statement returned <code>{'dt': {'a': 1}}</code> and not <code>{}</code>. While I was baffled at first, I think I now understand what happens. By 'updating' the <code>self.dt</code> I am not only changing the attribute of object <code>d1</code> but also the parameter <code>dt</code>of the class.</p>
<p>My solution would be to never specify the default parameter as a list, dict or similar (unless this feature is wanted) and always use None instead, i.e.</p>
<pre><code>def __init__(self, dt = None):
    if dt is None:
        dt = {}

    self.dt = dt
</code></pre>
<p>But is there a more elegant way to tackle this 'problem'?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your solution is correct. This behaviour occurs with any mutable object, such as lists for example. So you should always use None (or a non mutable object) as a default parameter.</p>
<p><a href="https://docs.python.org/3.6/reference/datamodel.html" rel="nofollow noreferrer">https://docs.python.org/3.6/reference/datamodel.html</a></p>
</div>
<span class="comment-copy">Do you mean, <code>if dt  is not None</code>?</span>
<span class="comment-copy">That's about the way to do it: have a look at <a href="https://docs.python.org/3/faq/programming.html#why-are-default-values-shared-between-objects" rel="nofollow noreferrer">Why are default values shared between objects?</a> of the Python's FAQs.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument" title="least astonishment and the mutable default argument">stackoverflow.com/questions/1132941/â€¦</a></span>
<span class="comment-copy">Sorry this was an error @Jacobr365. I changed the post. Thank you</span>
<span class="comment-copy">Nope. There are no more elegant ways. None I've seen widely used in production anyway. So, the good news is that you're on the right track. The bad news is that the right track is not very pretty.</span>
