<div class="post-text" itemprop="text">
<p>I'm writing my first "real" project, a web crawler, and I don't know how to fix this error.  Here's my code</p>
<pre><code>import requests
from bs4 import BeautifulSoup

def main_spider(max_pages):
    page = 1
    for page in range(1, max_pages+1):
        url = "https://en.wikipedia.org/wiki/Star_Wars" + str(page)
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text, "html.parser")
        for link in soup.findAll("a"):
            href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
            print(href)
    page += 1

main_spider(1)
</code></pre>
<p>Here's the error</p>
<pre><code>href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
TypeError: must be str, not NoneType  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As noted by @Shiping, your code is not indented properly ... I corrected it below.
Also... <code>link.get('href')</code> is not returning a string in one of the cases.</p>
<pre><code>import requests
from bs4 import BeautifulSoup

def main_spider(max_pages):
    for page in range(1, max_pages+1):
        url = "https://en.wikipedia.org/wiki/Star_Wars" + str(page)
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text, "html.parser")
        for link in soup.findAll("a"): 

            href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
            print(href)

main_spider(1)
</code></pre>
<p>For purposes of evaluating what was happening, I added several lines of code...between several of your existing lines AND removed the offending line (for the time being).</p>
<pre><code>        soup = BeautifulSoup(plain_text, "html.parser")
        print('All anchor tags:', soup.findAll('a'))     ### ADDED
        for link in soup.findAll("a"): 
            print(type(link.get("href")), link.get("href"))  ### ADDED
</code></pre>
<p>The result of my additions was this (truncated for brevity):
NOTE: that the first anchor does NOT have an href attribute and thus <code>link.get('href')</code> can't return a value, so returns <code>None</code></p>
<pre><code>[&lt;a id="top"&gt;&lt;/a&gt;, &lt;a href="#mw-head"&gt;navigation&lt;/a&gt;, 
&lt;a href="#p-search"&gt;search&lt;/a&gt;, 
&lt;a href="/wiki/Special:SiteMatrix" title="Special:SiteMatrix"&gt;sister...   
&lt;class 'NoneType'&gt; None
&lt;class 'str'&gt; #mw-head
&lt;class 'str'&gt; #p-search
&lt;class 'str'&gt; /wiki/Special:SiteMatrix
&lt;class 'str'&gt; /wiki/File:Wiktionary-logo-v2.svg      
...
</code></pre>
<p>To prevent the error, a possible solution would be to add a conditional OR a try/except expression to your code. I'll demo a conditional expression.</p>
<pre><code>        soup = BeautifulSoup(plain_text, "html.parser")
        for link in soup.findAll("a"): 
            if link.get('href') == None:
                continue
            else:
                href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
                print(href) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The first "a" link on the wikipedia page is</p>
<pre><code>&lt;a id="top"&gt;&lt;/a&gt;
</code></pre>
<p>Therefore, link.get("href") will return None, as there is no href.</p>
<p>To fix this, check for None first:</p>
<pre><code>if link.get('href') is not None:
    href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
    # do stuff here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not all anchors (<code>&lt;a&gt;</code> elements) need to have a <code>href</code> attribute (see <a href="https://www.w3schools.com/tags/tag_a.asp" rel="nofollow noreferrer">https://www.w3schools.com/tags/tag_a.asp</a>):</p>
<blockquote>
<p>In HTML5, the  tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink.</p>
</blockquote>
<p>Actually you already got the Exception and Python is great at handling exceptions so why not catch the exception? This style is called <a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow noreferrer">"Easier to ask for forgiveness than permission." (EAFP)</a> and is actually encouraged:</p>
<pre><code>import requests
from bs4 import BeautifulSoup

def main_spider(max_pages):
    for page in range(1, max_pages+1):
        url = "https://en.wikipedia.org/wiki/Star_Wars" + str(page)
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text, "html.parser")
        for link in soup.findAll("a"):
            # The following part is new:
            try:
                href = "https://en.wikipedia.org/wiki/Star_Wars" + link.get("href")
                print(href)
            except TypeError:
                pass

main_spider(1)
</code></pre>
<p>Also the <code>page = 1</code> and <code>page += 1</code> lines can be omitted. The <code>for page in range(1, max_pages+1):</code> instruction is already sufficient here.</p>
</div>
<span class="comment-copy">did you check if link.get("href") returned a string? your code's not indented properly.</span>
<span class="comment-copy">I am sorry for being so dumb it seems I fixed it but now I have a new problem.  Instead of getting all the links from the page i'm getting the url to the original page over and over again.</span>
<span class="comment-copy">how come? you indented main_spider(1) and you shouldn't get anything. or you had two main_spider(1) lines, one in the function itself?</span>
<span class="comment-copy">@MSeifert okay.  link.get("href") would return None for this example.</span>
<span class="comment-copy">Great that works perfectly!  However is there a way I could limit the links I get back to only the ones about Star Wars?  Considering that it's set up for every link on the page, could I limit the output to the main links?</span>
<span class="comment-copy">I'm getting an invalid syntax error on except?</span>
<span class="comment-copy">@DylanBoyd I updated the answer. I don't know how it could lead to a SyntaxError but maybe something went wrong with indentation or during copy. :)</span>
<span class="comment-copy">I ended up using the answer above with an else statement.  Thanks for you're help</span>
<span class="comment-copy">@DylanBoyd No problem if you choose another answer - but if you want to use a conditional I would recommend <a href="http://stackoverflow.com/a/43566612/5393381">Jackywathys answer</a> instead. The <code>continue</code> is unnecessary and then you don't need the <code>else</code>.</span>
<span class="comment-copy">Oh you're right works great that way as well!  Thanks again</span>
