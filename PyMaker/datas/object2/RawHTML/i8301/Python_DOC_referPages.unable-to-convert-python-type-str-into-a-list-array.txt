<div class="post-text" itemprop="text">
<p>i'm new to python, and i am developing a tool/script for ssh and sftp.  i noticed some of the code i'm using creates what i thought was a string array</p>
<pre><code>channel_data = str()
</code></pre>
<p>to hold the console output from an ssh session. if i check "type" on channel_data it comes back as  class 'str' , </p>
<p>but yet if i perform for loop to read each item in channel_data , and channel_data contains what appears to be 30 lines from an ssh console</p>
<pre><code>for line in channel_data:
    if "my text" in line:
        found = True
</code></pre>
<p>each iteration of "line" shows a single character, as if the whole ssh console output of 30 lines of text is broken down into single character array. i do have \n within all the text.</p>
<p>for example channel_data would contain "Cisco Nexus Operation System (NX-OS) Software\r\nCopyright (c) 2002-2016\r\n ..... etc. etc.. ", but again would read in my for loop and print out "C" then "i" then "s" etc..</p>
<p>i'm trying to understand do i have a char array here or a string array here that is made up of single string characters and how to convert it into a string list based on \n within Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate a string just like a list in Python. So, yes, as expected, your <em>string</em> type <code>channel_data</code> will in fact give you every character.</p>
<p>Python does not have a char array. You will have a list of strings, even as a single character as each item in the list:</p>
<pre><code>&gt;&gt;&gt; type(['a', 'b'])
&lt;type 'list'&gt;
</code></pre>
<p>Also, just for the sake of adding some extra information for your own knowledge when it comes to usage of terminology, there <em>is</em> a difference between array and list in Python: <a href="https://stackoverflow.com/questions/176011/python-list-vs-array-when-to-use">Python List vs. Array - when to use?</a></p>
<p>So, what you are actually looking to do here is take the <code>channel_data</code> string and make it a <em>list</em> by calling the <em>split</em> method on it.</p>
<p>The <code>split</code> method will, by default, split on white space characters only. Check the <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">documentation</a>. So, you will want to make sure what you want to actually split on and provide that detail to the method.</p>
<p>You can take a look at <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer">splitlines</a> to see if that works for you.</p>
<p>As specified in the documentation for <code>splitlines</code>:</p>
<blockquote>
<p>Line breaks are not included in the resulting list unless keepends is
  given and true.</p>
</blockquote>
<p>Your result will then be a list of strings as you expect. So, as an example you can do: </p>
<pre><code>your_new_list_of_str = channel_data.split('\n')
</code></pre>
<p>or</p>
<pre><code>your_new_list_of_str = channel_data.splitlines()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>string_list = channel_data.splitlines()</code>
See docs at <a href="https://docs.python.org/3.6/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer">https://docs.python.org/3.6/library/stdtypes.html#str.splitlines</a></p>
</div>
<span class="comment-copy">Use the split method <code>for line in channel_data.split('\r\n'):...</code></span>
<span class="comment-copy">The standard iterator on a string in Python is a character by character iterator. If you want to iterate over a string line by line you can just <code>split</code> it by whatever your <code>EOL</code> is.</span>
<span class="comment-copy">Or better yet, <code>channel_data.splitlines()</code>.</span>
<span class="comment-copy">A string is a sequence of characters, which you can iterate over one character at a time.</span>
<span class="comment-copy">You probably also want go give this (and the linked docs) a once-over so that this seems less magical and you're not making voodoo guesses about what is or isn't a "char array" or whatnot. <a href="http://stackoverflow.com/questions/9884132/what-exactly-are-pythons-iterator-iterable-and-iteration-protocols" title="what exactly are pythons iterator iterable and iteration protocols">stackoverflow.com/questions/9884132/â€¦</a></span>
<span class="comment-copy">They key thing about <code>splitlines</code> is that it handles 'universal' line endings for you. Which is something you may (e.g. reading random text file) or may not (e.g. strictly adhering to some protocol) want.</span>
<span class="comment-copy">@pvg Very true, yes. I can add that detail, I decided to count on going to the doc to get that detail.</span>
