<div class="post-text" itemprop="text">
<p>I am new to python and things are little why's and how's. Just got to know "SETS" in python and I seem can't print it out the same order as I declare it.
my code:</p>
<pre><code>myPersonels = {"Haime", "Brian", "Ryan", "Jonathan", "Patrick", "Robert", 
               "Renzo", "Rjay", "Daniel", "Angelo"}

print(myPersonels)
</code></pre>
<p>output:</p>
<pre><code> {'Rjay', 'Daniel', 'Jonathan', 'Robert', 'Ryan', 'Renzo', 'Brian', 'Haime', 
 'Angelo', 'Patrick'}
</code></pre>
<p>I tried the sorted() method but it gives me the alphabetically order and that's not what I want. I want it to print the same order as I declare it. How can I do that? Any help will be much appreciated thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">set</a> -- use a <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">list</a> (or <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">tuple</a> if you will never change the values or length), which retains the ordering.</p>
<pre><code>In [2]: myPersons = ["Haime", "Brian", "Ryan", "Jonathan", "Patrick", "Robert", 
   ...:              "Renzo", "Rjay", "Daniel", "Angelo"]  ## this is a list
   ...: print(myPersons)
   ...:                
   ['Haime', 'Brian', 'Ryan', 'Jonathan', 'Patrick', 'Robert', 'Renzo', 'Rjay', 'Daniel', 'Angelo']
</code></pre>
</div>
<span class="comment-copy"><code>set</code>s are not ordered</span>
<span class="comment-copy">Don't use a set -- use a list or tuple.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/9792664/set-changes-element-order">Set changes element order?</a></span>
<span class="comment-copy">So there is really no way I can print it out the way I want?</span>
<span class="comment-copy">No reliable way. They have no defined order.</span>
<span class="comment-copy">Well it depends what they want, if they want to avoid duplicates and do O(n) membership testing then a list or tuple is not suitable</span>
<span class="comment-copy">@Chris_Rands premature optimization &amp;c &amp;c</span>
<span class="comment-copy">It's not just about optimization Andrew, the output will be different if they ever have duplicate names</span>
<span class="comment-copy">@Chris_Rands yes, but the easiest way to ensure that the input order is identical to the output order (which I take to mean including duplicates, but perhaps I am wrong!) is to use a list. Unless the OP also wants to de-duplicate, a list does exactly what is requested.</span>
