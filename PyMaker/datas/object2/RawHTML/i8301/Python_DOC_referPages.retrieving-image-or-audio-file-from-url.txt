<div class="post-text" itemprop="text">
<p>I'm aware that this is the best way to retrieve an image or audio file from the internet: </p>
<pre><code>import urllib.request
req = urllib.request.urlretrieve('https://www.spriters-resource.com/download/6866/', 'mario-kart.png')
</code></pre>
<p>But is there a more low-level way? I would like to retrieve image data from a URL and store it in a byte stream instead of into a file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Socket is a low level network lib that could do what you're asking:</p>
<p><a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">https://docs.python.org/3/library/socket.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>use the 'urlopen' method:</p>
<pre><code>import urllib.request
data = urllib.request.urlopen("https://www.spriters-resource.com/download/6866/").read()
</code></pre>
<p>alternatively use socket:</p>
<pre><code>import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("spriters-resource.com", 80))
s.send(b"GET /download/6866/ HTTP/1.0\r\nHOST: spriters-resource.com\r\n\r\n")

data = bytearray(s.recv(1024))
while b"\r\n\r\n" not in data:
    data += s.recv(1024)

file = bytes(data)
</code></pre>
</div>
