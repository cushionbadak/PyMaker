<div class="post-text" itemprop="text">
<p>I have a file that resembles the following:</p>
<pre><code>Entry #1
Entry #2
Entry #3
Entry #4
Entry #5
</code></pre>
<p>I want to print the lines of this file with a 2 second delay between lines. How can this be done? Thank you in advance.</p>
<p>Edit: This is the code I've decided to use based on the help I've received. Thank you.</p>
<pre><code>from time import sleep
with open('c:\Output.txt', 'r', 0) as f:
    for line in f:
        print line.strip()
        sleep(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have file with data - you can easily real lines from it</p>
<pre><code>with open("filename.txt", "r") as f:
    lines = f.readlines()
</code></pre>
<p>and then you can print every line with 2 seconds (or what you want) interval</p>
<pre><code>from time import sleep
for l in lines:
    print(l.strip())
    sleep(2.0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from time import sleep # The time module is used for delays.
for i in range(20):
    print ("Entry #%d" % (i))
    sleep(2) # sleep(amount of seconds you want to delay).
</code></pre>
<p>I hope this was the answer you were looking for.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time

with open('filename.txt', 'r') as f:
    for line in f:
       print(line.strip())
       time.sleep(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.sleep" rel="nofollow noreferrer"><code>time.sleep(n)</code></a> makes the interpreter wait for n seconds. note that you may have to <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>flush</code></a> if you print very short text; the output is buffered and may not write to the console at every <code>print</code> statement.</p>
<p>this is for <strong>python2</strong></p>
<pre><code>import sys
from time import sleep

with open('filename.txt', 'r') as fle:
    for line in fle:
       print line.strip()  # don't print an additional '\n'
       sys.stdout.flush()  # make sure this is written to the console *now*
       sleep(2)
</code></pre>
<p>in <strong>python3</strong> you can do this:</p>
<pre><code>from time import sleep

with open('filename.txt', 'r') as file:
    for line in file:
       print(line, flush=True, end='')  # don't print an additional '\n'
       sleep(2)
</code></pre>
<p>also make sure the interpreter finds your file when using a relative path. more on this <a href="https://stackoverflow.com/a/30625670/4954037">here</a>.</p>
</div>
<span class="comment-copy">what is the <code>count</code> for? you <code>sleep</code> in any case (<code>count &gt;= 0</code> is always true). and (as stated in my answer) there is no guarantee that <code>print</code> will really print something on the console right <i>now</i> if you do not <code>flush</code> the output...</span>
<span class="comment-copy">I see. So I could eliminate count+=1 and the following if statement. I'm still trying to understand flush. Thank you for the help.</span>
<span class="comment-copy">yes, your <code>count</code> has no effect. there is not much magic in <code>flush</code>; <code>print</code> prints to a buffer (<code>sys.stdout</code>) which holds the data and decides when it is ready to print it to the console (this is more efficient than printing at every <code>print</code> statement). with <code>flush</code> you force the buffer to do that <i>now</i>.</span>
<span class="comment-copy">I don't understand how to use flush in this instance (or sys.stdout). Could you show me where it fits? I'm two days new to python. Thank you for you time and patients.</span>
<span class="comment-copy"><code>print 'hello'</code> is short for <code>sys.stdout.write('hello')</code>. maybe this helps a bit? <a href="http://www.diveintopython.net/scripts_and_streams/stdin_stdout_stderr.html" rel="nofollow noreferrer">diveintopython.net/scripts_and_streams/stdin_stdout_stderr.html</a></span>
<span class="comment-copy">Simple and elegant (to the eyes of this beginner!) Thank you for the quick response. This works very well. Could you tell me...Is this code better in any way than the code I added in my edited question? Is there anything wrong with the code I came up with?</span>
<span class="comment-copy">@aConvolutedConscious your code works well, but you could do better by avoiding absolute path in the open() by using "os.path" to get the file name in order to make your code portable, also avoid using multiple commands in 1 line.</span>
<span class="comment-copy">How do I use os.path in this instance? Thank you.</span>
<span class="comment-copy">here is an example on how you could do this: <a href="http://stackoverflow.com/a/30625670/4954037">stackoverflow.com/a/30625670/4954037</a></span>
<span class="comment-copy">refer this: <a href="https://pymotw.com/2/ospath/" rel="nofollow noreferrer">pymotw.com/2/ospath</a></span>
