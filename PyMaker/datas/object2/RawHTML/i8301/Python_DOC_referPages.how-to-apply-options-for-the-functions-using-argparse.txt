<div class="post-text" itemprop="text">
<p>I have a functions like this </p>
<pre><code>def add(x,y):
    print x+y

def square(a):
    print a**2
</code></pre>
<p>Now I am defining linux commands(options) for this functions using argparse.</p>
<p>I tried with this code</p>
<pre><code>import argparse
# Create Parser and Subparser
parser = argparse.ArgumentParser(description="Example ArgumentParser")
subparser = parser.add_subparsers(help="commands")

# Make Subparsers
add_parser = subparser.add_parser('--add', help="add func")
add_parser.add_argument("x",type=float,help='first number')
add_parser.add_argument("y",type=float,help='second number')
add_parser.set_defaults(func='add')

square_parser = subparser.add_parser('--square', help="square func")
square_parser.add_argument("a",type=float,help='number to square')
square_parser.set_defaults(func='square')

args = parser.parse_args()


def add(x,y):
  print x + y

def square(a):
  print a**2

if args.func == '--add':
  add(args.x,args.y)
if args.func == '--square':
  square(args.a)
</code></pre>
<p>But I am getting error while passing command as <code>python code.py --add 2 3</code></p>
<pre><code>invalid choice: '2' (choose from '--add', '--square')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>--add</code> is the form of an <code>optionals flag</code>,  <code>add</code> is the correct form for a subparser name</p>
<pre><code>import argparse
# Create Parser and Subparser
parser = argparse.ArgumentParser(description="Example ArgumentParser")
subparser = parser.add_subparsers(dest='cmd', help="commands")

# Make Subparsers
add_parser = subparser.add_parser('add', help="add func")
add_parser.add_argument("x",type=float,help='first number')
add_parser.add_argument("y",type=float,help='second number')
add_parser.set_defaults(func='add')

square_parser = subparser.add_parser('square', help="square func")
square_parser.add_argument("a",type=float,help='number to square')
square_parser.set_defaults(func='square')

args = parser.parse_args()
print(args)

def add(x,y):
  print x + y

def square(a):
  print a**2

if args.func == 'add':    # if args.cmd=='add': also works
  add(args.x,args.y)
if args.func == 'square':
  square(args.a)
</code></pre>
<p>producing</p>
<pre><code>0950:~/mypy$ python stack43557510.py add 2 3
Namespace(cmd='add', func='add', x=2.0, y=3.0)
5.0
</code></pre>
<p>I added <code>dest='cmd'</code> to the <code>add_subparsers</code> command, and <code>print(args)</code> to give more information.  Note that the subparser name is now available as <code>args.cmd</code>.  So you don't need the added <code>func</code>.  </p>
<p>However the argparse docs do suggest an alternative use of <code>set_defaults</code></p>
<p><a href="https://docs.python.org/3/library/argparse.html#sub-commands" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html#sub-commands</a></p>
<pre><code>add_parser.set_defaults(func=add)
</code></pre>
<p>With this <code>args.func</code> is actually a function object, not just a string name.  So it can be used as</p>
<pre><code>args.func(args)
</code></pre>
<p>Note that I had to change how the functions handle their parameters:</p>
<pre><code>def add(args):
    print(args.x + args.y)

def square(args):
    print(args.a**2)

# Create Parser and Subparser
parser = argparse.ArgumentParser(description="Example ArgumentParser")
subparser = parser.add_subparsers(dest='cmd', help="commands")

# Make Subparsers
add_parser = subparser.add_parser('add', help="add func")
add_parser.add_argument("x",type=float,help='first number')
add_parser.add_argument("y",type=float,help='second number')
add_parser.set_defaults(func=add)

square_parser = subparser.add_parser('square', help="square func")
square_parser.add_argument("a",type=float,help='number to square')
square_parser.set_defaults(func=square)

args = parser.parse_args()
print(args)

args.func(args)
</code></pre>
<p>producing</p>
<pre><code>1001:~/mypy$ python stack43557510.py add 2 3
Namespace(cmd='add', func=&lt;function add at 0xb73fd224&gt;, x=2.0, y=3.0)
5.0
</code></pre>
</div>
<span class="comment-copy">Remove the '--' from the subparser names.  Use just 'add'.  They aren't supposed to look like optionals'' flags.  Also review the docs on using <code>setdefaults</code> with subparsers.</span>
