<div class="post-text" itemprop="text">
<p>I am starting learn python, several days ago, and many things I don't know, but I am trying.<br/>
So, I have this:</p>
<pre><code>if setting == MAKE:
    rettt = User.make()
elif setting == MOD:
    rettt = User.mod()
elif setting == REM:
    rettt = User.rem()
</code></pre>
<p>How you think, can we change this on something like, that:</p>
<pre><code>settings = {
'MAKE': make,
'MOD': mod,
'REM': rem
}
if setting in settings:
    rettt = User.settings()
</code></pre>
<p>Thanks for your attention.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have three options:</p>
<ul>
<li><p>store method <em>names</em>, then use <code>getattr()</code> to turn the name back into a reference to the method:</p>
<pre><code>settings = {
    'MAKE': 'make',
    'MOD': 'mod',
    'REM': 'rem'
}
if setting in settings:
    rettt = getattr(User, settings[setting])()
</code></pre>
<p>I note that at this point this becomes a simple lower-casing exercise, perhaps with a set test to ensure you can't call arbitrary methods:</p>
<pre><code>settings = {'MAKE' 'MOD', 'REM'}
if setting in settings:
    rettt = getattr(User, setting.lower())()
</code></pre></li>
<li><p>Store the bound methods in the dictionary each time:</p>
<pre><code>settings = {
    'MAKE': User.make,
    'MOD': User.mod,
    'REM': User.rem,
}
if setting in settings:
    rettt = settings[setting]()
</code></pre></li>
<li><p>Use <a href="https://docs.python.org/3/library/operator.html#operator.methodcaller" rel="nofollow noreferrer"><code>operator.methodcaller()</code> objects</a>; these take a string method name and can be called with an object to call the method <em>on</em>:</p>
<pre><code>from operator import methodcaller

settings = {
    'MAKE': methodcaller('make'),
    'MOD': methodcaller('mod'),
    'REM': methodcaller('rem')
}
if setting in settings:
    rettt = settings[setting](User)
</code></pre></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>getattr</code> to <em>get the attribute</em> from the user object. And you wouldn't need the <code>if</code> any longer:</p>
<pre><code>settings = {
'MAKE': 'make',
'MOD': 'mod',
'REM': 'rem'
}

rettt = getattr(User, settings[setting])()
</code></pre>
<p>Note that the dictionary values should be strings, since the methods are bounded to the <code>User</code> object and you can't call them as you would unbounded functions.</p>
<p>Apparently, you can do without the dict:</p>
<pre><code>rettt = getattr(User, setting.lower())()
</code></pre>
</div>
<span class="comment-copy">not bad, i will check. in any case, it is very interest resolving</span>
<span class="comment-copy">getattr() throws AttributeError unless you provide a default return value (or check the provided setting being a valid method)</span>
<span class="comment-copy">@rolika: but if the <code>settings</code> dictionary is considered a correct source of method names, you'd have a <code>KeyError</code> at most.</span>
