<div class="post-text" itemprop="text">
<p>The first part of <a href="http://lukasz.langa.pl/8/single-dispatch-generic-functions/" rel="nofollow noreferrer">this blog post</a> does a nice job of summarizing the general use case for a dispatch table, but I can't help wondering if it could be even more succinct and elegant using <code>Enum</code>s instead...</p>
<p>Of course, the big hurdle in using an <code>Enum</code> is that functions are automatically ignored as potential members.</p>
<p>So, is it possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>In a word: <em>Yes</em><sup>1</sup>.</p>
<p>I will show a solution using <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer">the <code>aenum</code><sup>2</sup> library</a> -- while it is possible to do most of this with the stdlib version it would require writing extra plumbing that already exists in <code>aenum</code>.</p>
<p>First, the base class:</p>
<pre><code>from aenum import Enum, enum

class CallableEnum(Enum):

    def __new__(cls, *args, **kwds):
        member = object.__new__(cls)
        member._impl = args[0]
        if member._impl.__doc__ is not None:
            member._value_ = member._impl.__doc__
        else:
            member._value_ = repr(member._impl)
        return member

    def __call__(self, *args, **kwds):
        return self._impl(*args, **kwds) 
</code></pre>
<p>and an example dispatch <code>Enum</code>:</p>
<pre><code>class TestEnum(CallableEnum):

    @enum
    def hello(text):
        "a pleasant greeting"
        print('hello,', text)

    @enum
    def goodbye(text):
        print('goodbye,', text) 
</code></pre>
<p>and in use:</p>
<pre><code>&gt;&gt;&gt; list(TestEnum)
[
  &lt;TestEnum.hello: 'a pleasant greeting'&gt;,
  &lt;TestEnum.goodbye: '&lt;function goodbye at 0xb7264844&gt;'&gt;,
]

&gt;&gt;&gt; print(TestEnum.hello)
TestEnum.hello

&gt;&gt;&gt; TestEnum['hello']('how are you?')
'hello, how are you?'

&gt;&gt;&gt; TestEnum['goodbye']('see you soon!')
'goodbye, see you soon!' 
</code></pre>
<hr/>
<p><sup>1</sup> See <a href="https://stackoverflow.com/a/22594360/208880">this answer</a> for the standard <code>Enum</code> usage.</p>
<p><sup>2</sup> Disclosure:  I am the author of the <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">Python stdlib <code>Enum</code></a>, the <a href="https://pypi.python.org/pypi/enum34" rel="nofollow noreferrer"><code>enum34</code> backport</a>, and the <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer">Advanced Enumeration (<code>aenum</code>)</a>  library.</p>
</div>
