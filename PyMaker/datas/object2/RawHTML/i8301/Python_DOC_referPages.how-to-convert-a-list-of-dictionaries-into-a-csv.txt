<div class="post-text" itemprop="text">
<p>I have a list of dictionaries, which I want to export to a csv. The format of the list is as follows:</p>
<pre><code>dict_list=[{'Country':'US', 'Industry':'Telecom', 'Score':105},
           {'Country':'US', 'Industry':'Banking', 'Score':145}]
</code></pre>
<p>I want the keys to take the column names, and values as each row. Can someone help me with how to do it.</p>
<p>Expected Output:</p>
<pre class="lang-none prettyprint-override"><code>Country    Industry    Score
US         Telecom     105
US         Banking     145
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the csv library</p>
<pre><code>import csv

dict_list=[{'Country':'US', 'Industry':'Telecom', 'Score':105},
           {'Country':'US', 'Industry':'Banking', 'Score':145}]



with open('names.csv', 'w') as csvfile:
    fieldnames = ['Country', 'Industry', 'Score']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter='\t')

    writer.writeheader()
    for d in dict_list:
        writer.writerow(d)
</code></pre>
<p>Or more compactly.</p>
<pre><code>with open('names.csv', 'w') as csvfile:
    fieldnames = ['Country', 'Industry', 'Score']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter='\t')

    writer.writeheader()
    writer.writerows(dict_list)
</code></pre>
<p><em>plus: Assuming that each element in the list contains all the corresponding elements we can use the following code to obtain the header. Thanks @martineau</em></p>
<pre><code>fieldnames = dict_list[0].keys() 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <code>pandas</code>:</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; df = pd.DataFrame(dict_list)
&gt;&gt;&gt; df
  Country Industry  Score
0      US  Telecom    105
1      US  Banking    145
&gt;&gt;&gt; pd.DataFrame.to_csv(df, 'test.csv', sep=',', index=False)
</code></pre>
<p>Here is have given <code>sep</code> aregument as comma, you can use as per your wish.</p>
<pre><code>Beagle:~ kumarshubham$ cat test.csv
Country,Industry,Score
US,Telecom,105
US,Banking,145
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import pandas as pd  
dict_list=[{'Country':'US', 'Industry':'Telecom', 'Score':105},{'Country':'US', 'Industry':'Banking', 'Score':145}]  
df= pd.DataFrame(dict_list)  
df.set_index('Country').to_csv('test.csv')
</code></pre>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer">standard csv docs</a> have an example of this exact case. You gotta do some research.</span>
<span class="comment-copy"><code>writer.writerows((dct for dct in dict_list))</code></span>
<span class="comment-copy">You can use the list directly because it is an iterable: <code>writer.writerows(dict_list)</code></span>
<span class="comment-copy">An even better point. <code>;-)</code></span>
<span class="comment-copy">You could also use <code>fieldnames = list(dict_list[0].keys())</code> and not hardcode them (although you would lose some control over their order).</span>
<span class="comment-copy">Thanks @martineau, but it is not necessary to use list since it accepts the parameter iterables.</span>
<span class="comment-copy">You could improve your question by giving a brief explanation</span>
