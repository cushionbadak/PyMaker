<div class="post-text" itemprop="text">
<pre><code> url = "http://www.example.com?type=a&amp;type1=b&amp;type2=c"
 urllist = get_urllist(url)
 trigger = ["'or '1'='1'"," 'OR '1'='2'","'OR a=a"]

def get_urllist(url): 
    url_parsed = urlparse.urlparse(url)
    #extract the query parameters of the URL 
    query =  urlparse.parse_qs(url_parsed.query)
    #get the list of query 
    query_list = query_list(query)
    #Get Base url 
    url = urlparse._replace(query=None).geturl()
    #modify url to get url_list 
    for query in query_list : 
       # change the original query to get the expected result 


 return url_list 


def query_list(query):
     for t in trigger:
         for key, value in query.items():
            query[key] += t
         query_list.append(query) 

     return query_list
</code></pre>
<p>How to return a list of URLs by changing the query parameter values? </p>
<p>Original url = "<a href="http://www.example.com?type=a&amp;type1=b&amp;type2=c" rel="nofollow noreferrer">http://www.example.com?type=a&amp;type1=b&amp;type2=c</a>"</p>
<p>Expected Result: </p>
<p>Url_list=  ["<a href="http://www.example.com?type=a" rel="nofollow noreferrer">http://www.example.com?type=a</a>'OR '1'='1'&amp;type1=b'OR '1'='1'&amp;type2=c'OR '1'='1'","<a href="http://www.example.com?type=a" rel="nofollow noreferrer">http://www.example.com?type=a</a>'OR '1'='2'&amp;type1=b'OR '1'='2'&amp;type2=c'OR '1'='2'","<a href="http://www.example.com?type=a" rel="nofollow noreferrer">http://www.example.com?type=a</a>'OR a=a&amp;type1=b'OR a=a&amp;type2=c''OR a=a" ]</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>In Python2.x</strong></p>
<p>You can use <a href="https://docs.python.org/2/library/urlparse.html#urlparse.urlparse" rel="nofollow noreferrer"><code>urlparse.urlparse</code></a> function and <code>ParseResult._replace</code> method:</p>
<pre><code>import urlparse
url = "http://www.example.com?type=a&amp;type1=b&amp;type2=c"
trigger = ["'or '1'='1'"," 'OR '1'='2'","'OR a=a"]

parsed = urlparse.urlparse(url)
querys = parsed.query.split("&amp;")
result = []
for pairs in trigger:
    new_query = "&amp;".join([ "{}{}".format(query, pairs) for query in querys])
    parsed = parsed._replace(query=new_query)
    result.append(urlparse.urlunparse(parsed))
</code></pre>
<p><strong>Note</strong> </p>
<p>The <a href="https://docs.python.org/2/library/urlparse.html#module-urlparse" rel="nofollow noreferrer"><code>urlparse</code></a> module is renamed to <code>urllib.parse</code> in <strong><code>Python 3</code></strong>. The <a href="https://docs.python.org/2/glossary.html#term-2to3" rel="nofollow noreferrer"><code>2to3</code></a> tool will automatically adapt imports when converting your sources to Python 3.</p>
<p><strong>In Python3.x</strong></p>
<p>You can use <a href="https://docs.python.org/3/library/urllib.parse.html#url-parsing" rel="nofollow noreferrer"><code>urlparse.urlparse</code></a> function as well.</p>
<pre><code>import urllib.parse as urlparse
url = "http://www.example.com?type=a&amp;type1=b&amp;type2=c"
trigger = ["'or '1'='1'"," 'OR '1'='2'","'OR a=a"]

parsed = urlparse.urlparse(url)
querys = parsed.query.split("&amp;")
result = []
for pairs in trigger:
    new_query = "&amp;".join([ "{}{}".format(query, pairs) for query in querys])
    parsed = parsed._replace(query=new_query)
    result.append(urlparse.urlunparse(parsed))
</code></pre>
<p>DEMO OUTPUT:</p>
<pre><code>["http://www.example.com?type=a'or '1'='1'&amp;type1=b'or '1'='1'&amp;type2=c'or '1'='1'", "http://www.example.com?type=a 'OR '1'='2'&amp;type1=b 'OR '1'='2'&amp;type2=c 'OR '1'='2'", "http://www.example.com?type=a'OR a=a&amp;type1=b'OR a=a&amp;type2=c'OR a=a"]
</code></pre>
</div>
<span class="comment-copy">Does the <code>OR xxx</code> make sense to you?</span>
<span class="comment-copy">Meanwhile is your <code>trigger</code> correct? a list whit a length 1ï¼Ÿ</span>
<span class="comment-copy">' OR '1'='1'  is used to check for SQL injection. I am just trying to automate it .  Changed trigger .</span>
<span class="comment-copy">Unfortunately, this method is deprecated at least on python 3.  You'll get: ModuleNotFoundError: No module named 'urlparse'</span>
