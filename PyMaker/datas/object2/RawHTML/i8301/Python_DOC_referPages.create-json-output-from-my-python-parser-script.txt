<div class="post-text" itemprop="text">
<p>I have a python script that I wrote in which I parse most of the output using perl from dkpg -l command as per my need. What i am trying to do with the output is to create a json structure output file like below.</p>
<p>I am very new to python so looking for some tips on what is my best options here to produce such a json file with array structure ?  </p>
<p>Json file </p>
<pre><code>{

 "hostname": "xyz-abc-m001",
 "publicIP": "111.00.00.xxx",
 "privateIP": "10.xxx.xx.61",
 "kernal": "4.4.0-72-generic #93-Ubuntu",
 "package": [
   { "name":"nfs-common", "installed":"1:1.2.8-9ubuntu12", "available":"1:1.2.8-9ubuntu12.1" },
   { "name":"grub-common", "installed":"2.02~beta2-36ubuntu3.8", "available":"2.02~beta2-36ubuntu3.9" },
   { "name":"wget", "installed":"1.17.1-1ubuntu1.1", "available":"1.17.1-1ubuntu1.2" }

 ]

}
</code></pre>
<p>Python Script</p>
<pre><code>import socket
import os
import subprocess
from subprocess import Popen, PIPE


#Getting Hostname of the machine
hostname=socket.gethostname()

#Getting private IP of the machine on eth0 
f = os.popen(" ip addr show eth0 | grep -Po 'inet \K[\d.]+' ")
private_ip=f.read()

#Getting public IP of the machine on eth1 
f = os.popen(" ip addr show eth1 | grep -Po 'inet \K[\d.]+' ")
public_ip=f.read()

#Getting currently running linux kernal
f = os.popen(" uname -a | awk '{print $3, $4}' ")
running_kernal=f.read()        


pipe = Popen(" apt-get --just-print upgrade 2&gt;&amp;1 | perl -ne 'if (/Inst\s([\w,\-,\d,\.,~,:,\+]+)\s\[([\w,\-,\d,\.,~,:,\+]+)\]\s\(([\w,\-,\d,\.,~,:,\+]+)\)? /i) {print \"$1 $2 $3\n\"} ' ", shell=True, stdout=PIPE)

for line in pipe.stdout:
    parts = line.split() # split line into parts
    if len(parts) &gt; 1:   # if at least 2 parts/columns
        print "Hostname = %s  PublicIP = %s PrivateIP = %s Package name = %s INSTALLED  = %s  AVAILABLE = %s kernal = %s " % (hostname, public_ip, private_ip, parts[0], parts[1], parts[2], running_kernal)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's a library for that!</p>
<pre><code>import json
</code></pre>
<p>Using this you can take your data structure... and convert it to json!</p>
<pre><code>data = [1, 2, 3, {"hello world":42}]
myjson = json.dumps(data)
</code></pre>
<p>...and that's basically it. use <code>json.loads</code> and <code>json.load</code> to load from a json class and json file respectively.<br/>
You can find out more at <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"> this website</a> </p>
<p>P.S.  If you want to print with an indent, try</p>
<pre><code>some_dictionary = {'hostname':hostname, 'PublicIP':publicIp, etc}
print(json.dumps(some_dictionary, indent=4))`
</code></pre>
</div>
