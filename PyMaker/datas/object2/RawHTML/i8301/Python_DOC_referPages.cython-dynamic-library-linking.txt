<div class="post-text" itemprop="text">
<p>I'm actually trying to link an existing C library to my Cython program.</p>
<p>I have access to the entrypoint header (.h) of the library with all functions declared as:</p>
<pre><code>EXPORT_API int _stdcall LibFunction();
</code></pre>
<p>I suppose the <code>EXPORT_API</code> is used to create the dll with <code>__declspec(dllexport)</code>...</p>
<p>I also have access to the .lib and .dll files.</p>
<p>I've tried to use this function with the usual <code>cdef extern from</code>of Cython:</p>
<pre><code>cdef extern from "include\\entrypoint.h":
    int LibFunction()

def c_LibFunction():
    LibFunction()
</code></pre>
<p>And I'm using the following setup.py</p>
<pre><code>from setuptools import setup, Extension
from Cython.Distutils import build_ext

NAME = 'testlib'
REQUIRES = ['cython']
SRC_DIR = 'testlib'
PACKAGES = [SRC_DIR]

INCLUDE_DIR = 'testlib\include'
LIB_DIR = 'testlib\lib'

ext = Extension(SRC_DIR + '.wrapped',
                [SRC_DIR + '/wrapped.pyx'],
                include_dirs=[INCLUDE_DIR],
                library_dirs = [LIB_DIR],
                libraries=['cfunc', 'MyLib']
                )

if __name__ == "__main__":
    setup(
            install_requires=REQUIRES,
            packages=PACKAGES,
            name=NAME,
            ext_modules=[ext],
            cmdclass={"build_ext": build_ext}
            )
</code></pre>
<p>But when I compile my Cython <code>python setup.py build_ext</code> I get an unresolved external reference:</p>
<p><code>error LNK2001: unresolved external symbol __imp_LibFunction</code></p>
<p>As I found on <a href="https://stackoverflow.com/questions/17397423/dll-lnk2019-error-unresolved-external-error-imp#17433783">other thread</a> it seems so be a question of static or dynamic library linking.</p>
<p>I think it comes from the setuptools compiling options, I tried to investigate using distutils <a href="https://docs.python.org/3/distutils/apiref.html" rel="nofollow noreferrer">documentation</a> and Cython <a href="http://cython.readthedocs.io/en/latest/src/userguide/external_C_code.html" rel="nofollow noreferrer">documentation</a>.</p>
<p>The thing is, I also tried to do my own C library (cfunc.lib, a static one) and I managed to use function in it the same way I described above.</p>
<p>I also used <code>DUMPBIN</code> on MyLib.lib and I found the symbo <code>int __cdecl LibFunction(void)</code>and as expected, the <code>__imp_</code> is not in the symbol.</p>
<p>It someone has an idea of what's going on, why it's going on and how I can solve my problem it could be really helpful ! </p>
</div>
<div class="post-text" itemprop="text">
<p>I finally found the solution so I post it if someone needs help in the future !</p>
<p>I work on Windows using Visual Studio to compile my code.</p>
<p>Even if I created my <code>cfunc</code>project as a Visual C++ project, it didn't compile as a C++ project but as a C project so it worked by default (it only has a .c and a .h files).</p>
<p>My <code>entrypoint.h</code> only contains C-style function declaration but the dll is compiled as a C++ project, that's why it couldn't work, the name mangling was bad.</p>
<p>So I just added <code>language = 'c++'</code>in my <code>setup.py</code></p>
</div>
