<div class="post-text" itemprop="text">
<p>I have a Perl (<code>.pm</code>) file that I've been trying to get into a JSON representation so that I can then search for keywords inside of it.</p>
<p>The directory for my script is <code>/Devices/bin/script.py</code>.  The directory where the <code>.pm</code> file lives in one level up, so <code>/Devices/Devices.PM</code>. <code>Devices.PM</code> is just a static file containing data structured as dictionaries and lists like so:</p>
<pre><code>mylist = (
    blah =&gt; {
        other       =9,
        houses       =&gt; 1,
        etc =&gt; [
            {   etc   =&gt; '5',
                ppl      =&gt; '3,
                things       =&gt; "etc",
                animals =&gt; [ 'blah-228', 'blah-229' ]
            },
            {   etc   =&gt; '9',
                ppl      =&gt; '5',
                things       =&gt; "22",
                animals =&gt; [ 'blah-2', 'blah-5' ]
            },
        ],
        partner =&gt; 'ets',
        location =&gt; 'wherever',
    },
    blah =&gt; {
        ppl =&gt; 6,
        place =&gt; 101,
        things =&gt; 'etc',
        animals =&gt; 'whatever',
    },
</code></pre>
<p>I have:</p>
<pre><code>os.chdir("..")
with open('Devices.pm', 'r') as f:
    json_obj = json.dumps(f)
    print json_obj
</code></pre>
<p>but I keep getting <code>TypeError: &lt;open file 'SwitchConfig.pm', mode 'w' at 0x10c1f69c0&gt; is not JSON serializable</code>. I have tried this several ways with no luck, including <code>json.dump(s)</code>. I keep getting different errors. Am I not understanding my <code>.pm</code> file structure correctly in order to turn it into a JSON representation?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that you need to read this with a Perl script (or one-liner) and so export proper JSON. </p>
<p>First, what is shown is not valid Perl. I'll assume typos in posting for some basic syntax errors.</p>
<p>There is also a missing <code>%</code> in front of <code>mylist</code>; in Perl variable names start with a sigil, <code>%</code> for hashes.  I'll assume that it is an omission in posting but that it is there. If not, you'd have to fix that.</p>
<p>Let me then use a file <code>data.pm</code> such as</p>
<pre>
%mylist = ( 
    blah =&gt; { 
        other  =&gt; 9, 
        houses =&gt; 1,
        etc    =&gt; [ { etc =&gt; '5', ppl =&gt; '3' }, { etc =&gt; '9', ppl =&gt; '5' } ]
    }
);
</pre>
<p>which is a short sample of posted data, with a few typos fixed.</p>
<p>Here is a Perl script to make JSON from it. It uses <a href="https://perldoc.perl.org/functions/do.html" rel="nofollow noreferrer">do</a> to execute the file as a script, and thus read the data structure (hash) into the program. Then <a href="http://search.cpan.org/~makamaka/JSON-PP-2.27400/lib/JSON/PP.pm" rel="nofollow noreferrer">JSON::PP</a>
 module is used to make <code>JSON</code> out of it, since it should be installed on a system with Perl.</p>
<pre><code>use warnings;
use strict;
use JSON::PP;

my %data = do './data.pm';

my $data_json = encode_json \%data;

print $data_json, "\n";  # just to see it

my $outfile = 'data.json';
open my $fh, '&gt;', $outfile or die "Can't open $outfile: $!";
print $fh $data_json, "\n";
close $fh;
</code></pre>
<p>The whole job is done in the first two lines.  The <code>JSON::PP</code> is a core module (<a href="http://search.cpan.org/~jesse/perl-5.14.1/pod/perl5140delta.pod#New_Modules_and_Pragmata" rel="nofollow noreferrer">since v5.14</a>) but if an external dependency isn't a problem use <a href="http://search.cpan.org/~makamaka/JSON-2.90/lib/JSON.pm" rel="nofollow noreferrer">JSON</a>, which uses the fast <code>JSON::XS</code> if installed.</p>
<p>This nicely fits in a one-liner</p>
<pre><code>perl -MJSON::PP -wE'say encode_json { do "./data.pm" }' &gt; data.json
</code></pre>
<p>where the output is redirected to the file.</p>
<p>Both the program and the one-liner output (broken over lines for readability)</p>
<pre>
{"blah":{"other":"9","houses":"1","etc":
    [{"ppl":"3","etc":"5"},{"ppl":"5","etc":"9"}]}}
</pre>
<p>what is the content of the file <code>data.json</code> which is written. </p>
<p>For this to work the <code>.pm</code> file has to contain only a valid Perl data structure.  If there is more variables than that one hash this won't work, since <code>do</code> doesn't return all that data.  Then you'd have to process the file by other means.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json.dumps</code></a> converts from a Python object (like <code>{"foo": True}</code>) to a string representing that object as JSON (like <code>'{"foo": true}'</code>).  You appear to be trying to go the other way and convert a file containing JSON to a Python object; the function that does this is <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer"><code>json.load</code></a>.  However, that still won't work, as <code>Devices.pm</code> does not contain JSON.  You'll need to either write a Perl script that imports <code>Devices.pm</code> and then dumps its contents as actual JSON or else write a parser for Perl in Python.  I recommend the first approach.</p>
</div>
<span class="comment-copy">seems related to this question <a href="http://stackoverflow.com/questions/20128772/python-no-json-object-could-be-decoded">Python No JSON object could be decoded</a>, maybe try copying the file contents into something like <a href="http://jsonlint.com" rel="nofollow noreferrer">jsonlist.com</a>'s validator and adjust as necessary</span>
<span class="comment-copy">In python 3, you need to read the file <code>f.read()</code></span>
<span class="comment-copy">Please see <a href="http://stackoverflow.com/help/someone-answers">What should I do when someone answers my question?</a></span>
<span class="comment-copy">You need <code>do './data.pm'</code>. Without <code>./</code> it looks for <code>data.pm</code> in <code>@INC</code>, not the current directory.</span>
<span class="comment-copy">@melpomene  Oh ... thank you, corrected. (I had no idea that <code>do</code> would go to <code>@INC</code>)  However, it worked exactly as posted for me (?).  (It's just better anyway.)</span>
<span class="comment-copy">If you use <code>JSON::PP</code> instead of <code>JSON</code>, your code won't have any external dependencies because <a href="https://metacpan.org/pod/perl5140delta#New-Modules-and-Pragmata" rel="nofollow noreferrer"><code>JSON::PP</code> has been a core module since 5.14</a>.</span>
<span class="comment-copy">It still mostly works because perl adds <code>.</code> to <code>@INC</code> by default (but that's about to go away in 5.26).</span>
<span class="comment-copy">@melpomene  Thank you for <code>JSON::PP</code> note, just the right thing here.</span>
