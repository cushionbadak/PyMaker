<div class="post-text" itemprop="text">
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
#makes smaller list of n values, sampling from original list
def make_new_list(n, old_list):
    new_list = []
    i = 0
    while i &lt; n:
        new_list.append(old_list[i])
        i + 1
    return new_list

print(make_new_list(2, original_list))
</code></pre>
<p>This is what I have written so far. How do I arrange or amend my code so I get '['p','q']' printed? As of now, nothing prints to the console nor any error shows up telling me what I have done wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have an infinite loop in the <code>while</code>, because you have only <code>i + 1</code>, without the assignment.</p>
<p>It should be: <code>i = i + 1</code>.</p>
<p>Also, you can use slicing for this:</p>
<pre><code>def make_new_list(n, old_list):
    return old_list[:n]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to increment <code>i</code> variable like this:</p>
<pre><code>i = i + 1 
</code></pre>
<p>New value of <code>i</code> should be assigned to <code>i</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can directly slice <code>original_list</code> . Refer <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">more on lists</a>.</p>
<pre><code>In [2]: original_list[:2]
['p', 'q'] #result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seems like what you are trying to do is simply this.</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
print(original_list[:2])
</code></pre>
<p>which outputs <code>['p', 'q']</code></p>
<p>Python array indexes start at <code>0</code> therefore to output <code>['p']</code> we would need to say <code>original_list[0]</code> and to get <code>['q']</code> would be <code>1</code>.</p>
<p>Since it is an array you can get the data from the first index <code>0</code> then stop just before the 3 index <code>2</code>.
<code>orignal_list[0:2]</code> would output what you want aswell.</p>
</div>
<div class="post-text" itemprop="text">
<p>In regards to your code I would suggest this edit:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
def make_new_list(n, old_list):
    new_list = old_list[:n]
    return new_list
print (make_new_list(2, original_list))
</code></pre>
<p>You can slice a list like so:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[:2]
</code></pre>
<p>prints:</p>
<pre><code>['p', 'q']
</code></pre>
<p>or from the end:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[2:]
</code></pre>
<p>prints:</p>
<pre><code>['r', 'x', 't', 'l', 'z', 'y', 'x', 'a', 'b']
</code></pre>
<p>or to reverse a list:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[::-1]
</code></pre>
<p>prints:</p>
<pre><code>['b', 'a', 'x', 'y', 'z', 'l', 't', 'x', 'r', 'q', 'p']
</code></pre>
<p>or to slice in reverse:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[:-2]
</code></pre>
<p>prints:</p>
<pre><code>['p', 'q', 'r', 'x', 't', 'l', 'z', 'y', 'x']
</code></pre>
<p>again reverse, although a bit unnecessary:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[-2:]
</code></pre>
<p>prints:</p>
<pre><code>['a', 'b']
</code></pre>
<p>or to get elements not at the start:</p>
<pre><code>original_list = ['p','q','r','x','t','l','z','y','x','a','b']
new_list = original_list[2:4]
</code></pre>
<p>prints:</p>
<pre><code>['r', 'x']
</code></pre>
</div>
<span class="comment-copy">original_list[:2] ?</span>
<span class="comment-copy">Increment i . Either do <code>i=i+1</code> or <code>i+=1</code></span>
<span class="comment-copy">@manvi77 Thank you. Please submit this as an answer.</span>
