<div class="post-text" itemprop="text">
<p>So basically, I have 10-50 additional parameter configurations that I want to potentially send into the script via <code>argparse</code> - and I don't want to configure them all in the python script.</p>
<p>It's only me running the script, so there is no security issue. Is there any way I could call my script with</p>
<pre><code>python myScript.py -parameter value -parameter2 value2 -parameter30 value30
</code></pre>
<p>without having set up any of the <code>parameter</code> as arguments in my script? Or anything else with the same effect -- the <code>**kwargs</code> analogue of functions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Where are your configuration parameters defined ?  If your program has a list of such parameters, you can always use a loop to  add all parameters.</p>
<pre><code>for parameter_name in parameter_names:
    argparser.add_argument( '--' + parameter_name, action='store', metavar='&lt;string&gt;' )
</code></pre>
<p>There is no way to auto-parse unknown options, because there is no way whether you want 0, 1 or many arguments associated with an unknown option.  However you can delay parsing of unknown options using <a href="https://docs.python.org/3/library/argparse.html?highlight=argparse#argparse.ArgumentParser.parse_known_args" rel="nofollow noreferrer"><code>parse_known_args</code></a>.</p>
</div>
<span class="comment-copy">you can just transform it into key-value pairs, then a dict and use it directly if you want, no need to use argsparse</span>
<span class="comment-copy">There are previous SO questions about parsing generalized <code>key=value</code> inputs.  But <code>argparse</code> is really aimed at giving you, the programmer, control over the structure of the inputs.  For freeform input it may be easier to read the <code>sys.argv</code> list directly.</span>
