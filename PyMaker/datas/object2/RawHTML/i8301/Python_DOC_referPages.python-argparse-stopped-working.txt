<div class="post-text" itemprop="text">
<p>I had a perfectly fine and working piece of code, which used argparse. I've been using it for months for work without any issue. Below is an excrept.</p>
<pre><code>import argparse
import sys
import math
import random

# Setup command line arguments
parser = argparse.ArgumentParser(description='RF Profile Generator', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('-o', dest='OutputFile', help='Output filename', required=True, type=argparse.FileType('w', encoding='utf-8'))
parser.add_argument('-a', dest='APPositions', nargs='+', type=float, help='Trackside AP position(s)', required=True)
parser.add_argument('-l', dest='TotalTrackLength', type=float, help='Length of the track (m)', required=True)
parser.add_argument('-p', dest='AttenuatorAddr', nargs='+', help='Programmable attenuator IP address(es)', required=True)

input("A")
# parse the command line arguments
# the parsed values will be stored in the corresponding variables defined by 'dest'
args = parser.parse_args()
input("B")
#More code to follow
</code></pre>
<p>However, I ran the code today with the following arguments (which i have been doing all along):</p>
<pre><code>rf.py -o OutputFile -a 10 20 30 40 -l 600 -p 10.0.1.55
</code></pre>
<p>and the console output tells me</p>
<pre><code>"error: the following arguments are required: -o, -a, -l, -p"
</code></pre>
<p>I do not understand why this has stopped working. To troubleshoot, i added 2 input commands, but the code never reaches <code>input("B")</code>
Could someone please advise me on a possible reason for this to happen. The version of python is 3.4.1, and has not been updated between the last time i ran this code and now.</p>
<p>Thank you very much</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <a href="https://docs.python.org/3/library/argparse.html#required" rel="nofollow noreferrer"><code>required=True</code></a> is present on all the calls to <code>add_argument</code>, my conclusion is that either</p>
<ul>
<li>somebody else has changed your program, or</li>
<li>this is the first time you have tried to run it without providing those arguments</li>
</ul>
<p>I do, however, find it odd that running your program with the <code>--help</code> option gives the following output:</p>
<pre><code>usage: so16.py [-h] -o OUTPUTFILE -a APPOSITIONS [APPOSITIONS ...] -l
               TOTALTRACKLENGTH -p ATTENUATORADDR [ATTENUATORADDR ...]

RF Profile Generator

optional arguments:
  -h, --help            show this help message and exit
  -o OUTPUTFILE         Output filename (default: None)
  -a APPOSITIONS [APPOSITIONS ...]
                        Trackside AP position(s) (default: None)
  -l TOTALTRACKLENGTH   Length of the track (m) (default: None)
  -p ATTENUATORADDR [ATTENUATORADDR ...]
                        Programmable attenuator IP address(es) (default: None)
</code></pre>
<p>I'm puzzled as to why the message implies that required arguments are optional.</p>
</div>
<span class="comment-copy">It's pretty obvious that <i>something</i> has changed - unless you subscribe to cargo cult beliefs!</span>
<span class="comment-copy">It's working for me on Python 3.6</span>
<span class="comment-copy">Define <i>"working"</i> - the argument specifications clearly show that the arguments <i>are</i> required.</span>
<span class="comment-copy">This works fine for me on Python 3.4.2</span>
<span class="comment-copy">"working" as in, i ran this piece of code with the exact same arguments as given above, and i had no issues where the console complained that the required arguments are not provided.</span>
<span class="comment-copy">Thanks for your input @holdenweb. For your first point, it is not possible as this .py file is stored on my PC with no access to anyone else. For the second point, the call to this script is stored in a .bat file, and i only change the input parameters on the .bat file as and when required. The script remains unchanged. after i encountered problems today, i rolled back to a pervious .bat file (which worked well), and it gave me the same error message.</span>
<span class="comment-copy">And to clarify, i have supplied all required arguments when i call the program: rf.py -o OutputFile -a 10 20 30 40 -l 600 -p 10.0.1.55</span>
<span class="comment-copy">If this is a Windows command and .bat issue make sure the <code>%1 %2</code> etc notation is correct.  Passing commandline parameters with Windows has always been flakier than on Linux.</span>
