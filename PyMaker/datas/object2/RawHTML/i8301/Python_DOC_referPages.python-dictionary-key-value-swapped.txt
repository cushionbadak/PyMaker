<div class="post-text" itemprop="text">
<p>I'm learning how to use a dictionary in python. However, it seems like when I print my dictionary, some items in my dictionary are swapped. Eg. [key,value],[value,key],[value,key],[key,value]. </p>
<p>Is there something I'm missing?</p>
<pre><code>def create_neighbourhood():
    maingrid = []
    coord_grid = {}
    grid = ['A','B','C','D','E','F','G','H','I','J']
    for i in range(0,len(grid)):
        for j in range(0,10):
            current_cell = grid[i]+ str(j+1)
            current_coords = str(i) +","+str(j)
            coord_grid = {current_cell,current_coords}
            maingrid.append(coord_grid)
    return maingrid
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Why</h2>
<p>You are using sets instead of dictionaries.  You must divide the two items by a <code>:</code> not a <code>,</code> .  Sets don't enforce order so the elements will be periodically swapped with this implementation.</p>
<h2>New Code</h2>
<pre><code>def create_neighbourhood():
    maingrid = []
    coord_grid = {}
    grid = ['A','B','C','D','E','F','G','H','I','J']
    for i in range(0,len(grid)):
        for j in range(0,10):
            current_cell = grid[i]+ str(j+1)
            current_coords = str(i) +","+str(j)
            coord_grid = {current_cell:current_coords}
            maingrid.append(coord_grid)
    return maingrid

print(create_neighbourhood())
</code></pre>
</div>
<span class="comment-copy">You're appending a <code>set()</code> to a <code>list</code> and <code>set</code>s are unordered</span>
<span class="comment-copy">Unrelated to your issue, but for both style and correctness, loop on containers directly (<code>for item in grid</code>) or use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> when you want indices (<code>for i, item in enumerate(grid)</code>)</span>
<span class="comment-copy">in coord_grid use : instead of ,</span>
<span class="comment-copy">I see. I'll take a look at that. Thanks!</span>
<span class="comment-copy">Oh! Thank you! I was wondering what I missed. Thank you so much!</span>
<span class="comment-copy">I'll make this the answer in abit</span>
