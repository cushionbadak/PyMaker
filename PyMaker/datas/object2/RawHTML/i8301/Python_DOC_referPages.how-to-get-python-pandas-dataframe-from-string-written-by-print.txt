<div class="post-text" itemprop="text">
<p>THIS is an updated version of the question providing a handy function </p>
<p><strong><code>pd_read_printed(str_printed_df)</code></strong> </p>
<p>designed to create a pandas DataFrame out of the string written previously using print(some_pandas_DataFrame) :</p>
<blockquote>
<pre><code>def pd_read_printed(str_printed_df):
    global pd, StringIO
    try: x = pd
    except: import pandas as pd
    try: x = StringIO
    except: from pandas.compat import StringIO
    return pd.read_csv(StringIO(str_printed_df), delim_whitespace=True)
</code></pre>
</blockquote>
<p>I put it together for own use after I have got here the answers to the following question: </p>
<p>I see in Internet often the content of a pandas DataFrame in its printed version like for example:: </p>
<pre><code>df1_as_string = """
 Sp   Mt   Value  count
4  MM2  S4   bg     10
5  MM2  S4   dgd    1
6  MM4  S2   rd     2
7  MM4  S2   cb     8
8  MM4  S2   uyi    8 
"""
</code></pre>
<p>The question is: How to obtain a variable holding the DataFrame from a string  variable in a style like: </p>
<pre><code>df1 = pandas.someToMeUnknownPandasFunction(df1_as_string)
</code></pre>
<p>?</p>
<p>NOW let's use the provided function to create a DataFrame from <code>df1_as_string</code>: </p>
<pre><code>df1 = pd_read_printed(df1_as_string)
</code></pre>
<p>and check if it worked as expected: </p>
<pre><code>print(df1)
</code></pre>
<p>gives: </p>
<pre><code>    Sp  Mt Value  count
4  MM2  S4    bg     10
5  MM2  S4   dgd      1
6  MM4  S2    rd      2
7  MM4  S2    cb      8
8  MM4  S2   uyi      8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_clipboard.html" rel="noreferrer"><code>read_clipboard</code></a>.</p>
<pre><code>df = pd.read_clipboard()
</code></pre>
<p>Or <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="noreferrer"><code>read_csv</code></a> with separator one or more <code>whitespace</code>s - <code>sep='\s+'</code> or <code>delim_whitespace=True</code>:</p>
<pre><code>from pandas.compat import StringIO

df = pd.read_csv(StringIO(df1_as_string), sep="\s+")
</code></pre>
<pre><code>df = pd.read_csv(StringIO(df1_as_string), delim_whitespace=True)
</code></pre>
<hr/>
<pre><code>print (df)
    Sp  Mt Value  count
4  MM2  S4    bg     10
5  MM2  S4   dgd      1
6  MM4  S2    rd      2
7  MM4  S2    cb      8
8  MM4  S2   uyi      8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two methods</p>
<p><strong><em>option 1</em></strong><br/>
<a href="http://pandas.read_clipboard%20%E2%80%94%20pandas%200.19.2%20documentation" rel="nofollow noreferrer"><strong><code>pd.read_clipboard</code></strong></a> </p>
<p>This is my goto method for simply formatted dataframes.  I copy the dataframe text and follow it up with <code>df = pd.read_clipboard()</code></p>
<p><strong><em>option 2</em></strong><br/>
<a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer"><strong><code>StringIO</code></strong></a> + <a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjjn8PJ0rrTAhUl44MKHVGQAgQQFggjMAA&amp;url=http%3A%2F%2Fpandas.pydata.org%2Fpandas-docs%2Fstable%2Fgenerated%2Fpandas.read_csv.html&amp;usg=AFQjCNE1cTwGgwS3WFrM8PRoP9YzTbLAGA&amp;sig2=ELvjSXwxBy1Cnk0Z9CZ0Rg" rel="nofollow noreferrer"><strong><code>pd.read_csv</code></strong></a> </p>
<p>For dataframes that have more complicated structure, I may need some of the options in <code>read_csv</code> so I might set it up this way.  Keep in mind that for the dataframe you provided, I'd almost never do it this way because it's slower for me to get at a dataframe.</p>
<pre><code>from io import StringIO
import pandas as pd

df1_as_string = """
 Sp   Mt   Value  count
4  MM2  S4   bg     10
5  MM2  S4   dgd    1
6  MM4  S2   rd     2
7  MM4  S2   cb     8
8  MM4  S2   uyi    8 
"""

df = pd.read_csv(StringIO(df1_as_string), delim_whitespace=True)
</code></pre>
<p>In either case, I end up with:</p>
<pre><code>print(df)

    Sp  Mt Value  count
4  MM2  S4    bg     10
5  MM2  S4   dgd      1
6  MM4  S2    rd      2
7  MM4  S2    cb      8
8  MM4  S2   uyi      8
</code></pre>
</div>
<span class="comment-copy">May be you are looking for <code>pandas.read_clipboard()</code>?</span>
<span class="comment-copy">I asked the same question not so long ago:<a href="http://stackoverflow.com/questions/43172452/convert-text-table-to-pandas-dataframe" title="convert text table to pandas dataframe">stackoverflow.com/questions/43172452/…</a></span>
<span class="comment-copy">@beniev yes ... a SIMILAR question, but you have overseen that it was already at that time answered here: <a href="http://stackoverflow.com/questions/40117799/python-pandas-text-file-to-dataframe" title="python pandas text file to dataframe">stackoverflow.com/questions/40117799/…</a> .</span>
<span class="comment-copy">ok... so if you didn't oversee it why did you ask this question...?</span>
<span class="comment-copy">@beniev I wanted an answer for output of <code>print()</code>, but I found only some for text-tables and didn't recognize that it will be the same answer. NOW after I have got an answer I have realized that I had it found already before, but couldn't see it is one I could use for my purpose ... By the way: I am a bit dissapointed that there is no read_print() function in pandas as I am not (yet) familiar with csv ...</span>
<span class="comment-copy">Glad can help you! Nice day!</span>
<span class="comment-copy"><code>read_clipboard()</code> - Nice <i>tip</i> to  work with examples from questions on SO</span>
