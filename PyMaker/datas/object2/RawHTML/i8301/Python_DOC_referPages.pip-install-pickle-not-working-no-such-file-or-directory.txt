<div class="post-text" itemprop="text">
<p>Ubuntu 16.04 LTS, trying to install cpickle with pip. I've searched a bit, haven't found anything useful yet. </p>
<p>PYTHONPATH isn't set.</p>
<h1>Error message</h1>
<pre><code>user@hostname:~$ sudo -H pip3 install cpickle
Collecting cpickle
  Using cached cpickle-0.5.tar.gz
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):
      File "&lt;string&gt;", line 1, in &lt;module&gt;
      File "/usr/lib/python3.5/tokenize.py", line 454, in open
        buffer = _builtin_open(filename, 'rb')
    FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pip-build-wn926hef/cpickle/setup.py'

    ----------------------------------------
Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-build-wn926hef/cpickle/
You are using pip version 8.1.1, however version 9.0.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.


    ----------------------------------------
Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-build-q46tq1l8/cpickle/
You are using pip version 8.1.1, however version 9.0.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
</code></pre>
<h1>troubleshooting steps</h1>
<pre><code># version info
user@hostname:~$ python --version
Python 2.7.12
user@hostname:~$ python3 --version
Python 3.5.2

# I don't think cache is the problem
rm -rf ~/.cache/
sudo -H pip install  cpickle --no-cache-dir # same problem
sudo -H pip3 install  cpickle --no-cache-dir # same problem
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Checking on the interweb, I found this </p>
<p><a href="https://i.stack.imgur.com/si9il.png" rel="noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/si9il.png"/></a></p>
<blockquote>
<p>A common pattern in Python 2.x is to have one version of a module implemented in pure Python, with an optional accelerated version implemented as a C extension; for example, pickle and cPickle. </p>
<p>This places the burden of importing the accelerated version and falling back on the pure Python version on each user of these modules. In Python 3.0, the accelerated versions are considered implementation details of the pure Python versions. </p>
<p>Users should always import the standard version, which attempts to import the accelerated version and falls back to the pure Python version. The pickle / cPickle pair received this treatment. The profile module is on the list for 3.1. The StringIO module has been turned into a class in the io module.</p>
</blockquote>
<p>Which means in Python3 it comes as a library ...</p>
<pre><code>import _pickle as cPickle
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>cPickle</code> is part of Python's standard library; you do not install it with <code>pip</code>.  In Python 2, <a href="https://docs.python.org/2.7/library/pickle.html#module-cPickle" rel="nofollow noreferrer">it comes installed with Python</a>.  In Python 3, <a href="https://docs.python.org/3/whatsnew/3.0.html#library-changes" rel="nofollow noreferrer">quoting the release notes</a> with added emphasis:</p>
<blockquote>
<p>A common pattern in Python 2.x is to have one version of a module implemented in pure Python, with an optional accelerated version implemented as a C extension; for example, pickle and cPickle. This places the burden of importing the accelerated version and falling back on the pure Python version on each user of these modules. <strong>In Python 3.0, the accelerated versions are considered implementation details of the pure Python versions. Users should always import the standard version, which attempts to import the accelerated version and falls back to the pure Python version.</strong> The pickle / cPickle pair received this treatment.</p>
</blockquote>
<p>In the specific case of trying to install <code>cpickle</code> with pip, some Pythonista decided to inform people that this was the wrong thing to do and so registered the <code>cpickle</code> project (along with numerous others named after standard library modules) and gave it a <code>setup.py</code> that would do nothing but exit with the error "<code>Package 'cpickle' must not be downloaded from pypi</code>".  However, something appears to have gone wrong either in creating the package or else on PyPI's end that has caused the source distribution file to be malformed, resulting in the error you see here.  Thus, even if this error were fixed, you'd still get a different error telling you not to do what you're trying to do.</p>
</div>
<span class="comment-copy">What version of python is this? Python 2.7 and 3.4 come with cPickle</span>
<span class="comment-copy">Looks like your <code>python</code> is python<b>3</b> . <code>pip</code> is for python2. Please install <code>pip3</code> ...... and use pip3 to install modules for Python3 .</span>
<span class="comment-copy">just updated question with version, ctrl+f for "version"</span>
<span class="comment-copy">same problem with pip and pip3</span>
<span class="comment-copy">Why are you trying to install <code>cPickle</code> with pip?  It's part of Python's standard library and thus either it's already installed (Python 2) or the choice of <code>pickle</code> vs. <code>cPickle</code> is an implementation detail that you shouldn't care about (Python 3).</span>
<span class="comment-copy">(a) Why did you post a picture of text when just copying &amp; pasting the text would have worked just as well?  (b) Where exactly on "the interweb" did you find this text?</span>
<span class="comment-copy">Andy's answer works. I also discovered you can use <code>from six.moves import cPickle</code> to support both python2 and python3</span>
<span class="comment-copy">cheers for your comments @invapid</span>
<span class="comment-copy">Instead of using <code>import pickle</code> in <b>Python 3.6.3</b> I used <code>import _pickle as cPickle</code> and it worked. Thanks :)</span>
