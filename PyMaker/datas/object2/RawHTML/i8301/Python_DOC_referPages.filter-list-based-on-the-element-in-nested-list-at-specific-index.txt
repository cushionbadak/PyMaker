<div class="post-text" itemprop="text">
<p>I have a list of list containing:</p>
<pre><code>[['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]
</code></pre>
<p>and i want to obtain the value from the list of list by <strong>referring to the alphabet in the third section</strong> of every list inside the list of list.</p>
<p>example, I want python to print the element <strong>represented by letter 'G'</strong> for every item in the list of list.</p>
<pre><code>output = [4.2,3.4]
         [8.7,5.4]
</code></pre>
<p>Here's what I've tried:</p>
<pre><code>L = [['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]
newList = []

for line in L:
    if line[0][2] == 'G'
        newList.append([float(i) for i in line[0:2]])
print(newList)
</code></pre>
<p>my error would be on line 5 as I'm not sure if i am able to do it this way. Regards.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are 2 issues in your code,</p>
<pre><code>1. line = ['4.2', '3.4', 'G'] for 1st iteration
hence to check for 'G', look out for line[2] == 'G' instead of line[0][3] == 'G'
2. use 'G' instead off 'house'.

&gt;&gt;&gt; for line in L:
...   if line[2] == 'G':
...     newList.append([float(i) for i in line[0:2]])
... 
&gt;&gt;&gt; newList
[[4.2, 3.4], [8.7, 5.4]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple list comprehension:</p>
<pre><code>L = [['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]
newList = [l[0:2] for l in L if l[2] == 'G']

print(newList)
</code></pre>
<p>The output:</p>
<pre><code>[['4.2', '3.4'], ['8.7', '5.4']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>, as a multi-value dictionary:</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
for x in L:
    d[x[2]].append(x[:2])
</code></pre>
<p>Now you can use <code>d['G']</code> to get what you wanted, but also <code>d['H']</code> to get the result for <code>'H'</code>!</p>
<p>Edit: Source <a href="https://stackoverflow.com/a/3199196/3858507"><em>append multiple values for one key in Python dictionary</em></a></p>
</div>
<div class="post-text" itemprop="text">
<p>you can use a dictionary by iterating the list of lists.</p>
<pre><code>lst = [['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]
dict1 = {}

for l in lst:
    if l[2] in dict1.keys():
        dict1[l[2]].append(l[0:2])
    else:
        dict1[l[2]] = [l[0:2]]
        print l[0:2]

print dict1['G']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A list comprehension will do this:</p>
<pre><code>newList = [[float(j) for j in i[:-1]] for i in L if i[2]=='G']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>@Electric your edited code.</strong></p>
<pre><code>L = [['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]
newList = []

# line = ['4.2','3.4','G']
for line in L:
    if line[2] == 'G': # ':' was missing.
        newList.append(line[:2]) # line[:2] =&gt; ['4.2','3.4']
print(newList)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may create a function to return sub-lists based on the element using an <em>list comprehension</em> expression along with the usage of <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> as:</p>
<pre><code>def get_element_by_alpha(alpha, data_list):
    #        v map returns generator object in Python 3.x,hence type-cast to `list`
    return [list(map(float, s[:2])) for s in data_list if s[2]==alpha]
    #                 ^ type-cast the number string to `float` type 
</code></pre>
<p>Sample Runs:</p>
<pre><code>&gt;&gt;&gt; my_list = [['4.2','3.4','G'],['2.4','1.2','H'],['8.7','5.4','G']]

&gt;&gt;&gt; get_element_by_alpha('G', my_list)
[[4.2, 3.4], [8.7, 5.4]]

&gt;&gt;&gt; get_element_by_alpha('H', my_list)
[[2.4, 1.2]]

&gt;&gt;&gt; get_element_by_alpha('A', my_list)  # 'A' not in the list
[]
</code></pre>
</div>
<span class="comment-copy">Why do you compare with <code>'house'</code> in the if statement?</span>
