<div class="post-text" itemprop="text">
<p>I was wondering if someone could explain why these two examples ultimately yield the same result:</p>
<pre><code>class Myclass(): 

def __init__ (self, parameter=None)

    if parameter is None: 
        self.parameter = 1.0 
    else: 
        self.parameter = parameter
</code></pre>
<p>and:</p>
<pre><code>class Myclass():

def __init__ (self, parameter=None)

    if parameter: 
        self.parameter = parameter 
    else: 
        self.parameter = 1.0
</code></pre>
<p>I intuitively understand the first 'if... is None' but I struggle with the second example. Are both ok to use?</p>
<p>I realise this could be quite an easy question hence if anyone could direct me to any reading that would help to understand the difference that would be great.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>They are not equivalent, in the first code snippet, <code>parameter</code> will be 1.0 <strong>if and only if</strong> <code>parameter</code> is <code>None</code>, but in the second one, <code>parameter</code> will be 1.0 for any <code>falsy value</code>.The following values are all <code>falsy</code> in Python:</p>
<ul>
<li><p>None</p></li>
<li><p>False</p></li>
<li><p>zero of any numeric type, for example, 0, 0L, 0.0, 0j.</p></li>
<li><p>any empty sequence, for example, '', (), [].</p></li>
<li><p>any empty mapping, for example, {}.</p></li>
<li><p>instances of user-defined classes, if the class defines a <strong>nonzero</strong>() or <strong>len</strong>() method, when that method returns the integer zero or bool value False.  </p></li>
</ul>
<p>So the first code snippet is more strict. Official docs please refer to:</p>
<ul>
<li>Python 2: <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">https://docs.python.org/2/library/stdtypes.html#truth-value-testing</a></li>
<li>Python 3: <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#truth-value-testing</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>In the first example, the condition will only be true if <code>parameter</code> is literally <code>None</code>.</p>
<p>In the second example, the condition will only be true for truthy values.</p>
<p>A simpler way of showing it would be:</p>
<pre><code>def meth1 (parameter):
  return parameter is None

def meth2 (parameter):
  return not(bool(parameter))

print([(meth1(v), meth2(v)) for v in [False, None, 0]])

&gt; [(False, True), (True, True), (False, True)]
</code></pre>
</div>
<span class="comment-copy">They don't always return the same result.  Try with sending parameter=0 to see that.</span>
<span class="comment-copy"><code>None</code> is <i>falsy</i>, so the else branch is taken in the second case when the default value is used. However, there are exceptions.</span>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">Truth value testing</a></span>
<span class="comment-copy">... and prefer the first example !</span>
<span class="comment-copy">If you do <code>MyClass(0.)</code> do you want <code>parameter</code> to be <code>0.</code> or <code>1.</code>?</span>
<span class="comment-copy">that makes sense, thank you for answering and the links!</span>
<span class="comment-copy">could you demonstrate that with a simple example?</span>
<span class="comment-copy">I was outside in the rain, and the water was messing with my touchscreen, so any typing was hard. I also misread the question. Updating now.</span>
