<div class="post-text" itemprop="text">
<p>I'm creating a project where:</p>
<ol>
<li>A user submits an input into a form</li>
<li>That data is input into the database</li>
<li>A random URL is generated (think imgur / youtube style links)</li>
<li>The user is redirected to that random URL</li>
<li>The input data is display on that random URL</li>
</ol>
<p>forms.py</p>
<pre><code>class InputForm(forms.Form):
    user_input = forms.CharField(max_length=50, label="")
    random_url = forms.CharField(initial=uuid.uuid4().hex[:6].upper())
</code></pre>
<p>models.py</p>
<pre><code>class AddToDatabase(models.Model):
    user_input = models.CharField(max_length=50, unique=True)
    random_url = models.CharField(max_length=10, unique=True)
</code></pre>
<p>views.py</p>
<pre><code>def Home(request):
    if request.method == 'POST':
        form = InputForm(request.POST)

        if form.is_valid():
            user_input = request.POST.get('user_input', '')
            random_url = request.POST.get('random_url', '')
            data = AddToDatabase(user_input=user_input, random_url=random_url)
            data.save()

        return render(request, 'index.html', {'form':form})

    else:

        form = InputForm()
        return render(request, 'index.html', {'form':form})
</code></pre>
<p>index.html</p>
<pre><code>&lt;form action="" method="POST"&gt;
    {{form}}
    {% csrf_token %}
    &lt;input type="submit"&gt;
&lt;/form&gt;
</code></pre>
<p>I'm new to Python / Django, which is probably obvious. The above code allows users to submit an input which is succesfully added to the database. It also generates 6 random characters and adds that to the database.</p>
<p>The problem is I don't know how to turn that random code into a URL and redirect the user there after submitting the form.</p>
<p>I've tried a couple of methods so far, such as adding <code>action="{{ random_url }}"</code> to the <code>index.html</code> form, as well as adding <code>url(r'(?P&lt;random_url&gt;\d+)', views.Home, name='home')</code> to <code>urls.py</code></p>
</div>
<div class="post-text" itemprop="text">
<p>models.py</p>
<pre><code>import uuid

class AddToDatabase(models.Model):
    user_input = models.CharField(max_length=50, unique=True)
    random_url = models.UUIDField(default=uuid.uuid4)
</code></pre>
<p>forms.py</p>
<pre><code>from .models import AddToDatabase
class InputForm(forms.ModelForm):

    class Meta:
      model = AddToDatabase
      fields = ["user_input"]
</code></pre>
<p>views.py</p>
<pre><code>from django.shortcuts import redirect

def Home(request):
    form = InputForm()
    if request.method == 'POST':
        form = InputForm(request.POST)

        if form.is_valid():
            form_instance = form.save(commit=False)
            form_instance.save()
            return redirect("form_detail", random_url=form_instance.random_url)
  return render(request, 'index.html', {'form':form})


def form_detail(request, random_url):
    template = "form_detail.html"
    context = {}
    form_detail = get_object_or_404(AddToDatabase, random_url=random_url)
    context["form_detail"] = form_detail
    return render(request, template, context)
</code></pre>
<p>urls.py</p>
<pre><code>from . import views

urlpatterns = [

 url(r'^home/$' views.Home, name="home"),
url(r'^form-detail/(?P&lt;random_url&gt;[-\w]+)/$', views.form_detail, name="form_detail")
]
</code></pre>
<p>in form_detail.html template</p>
<pre><code>&lt;div&gt;
  &lt;p&gt; User Input : {{ form_detail.user_input }}&lt;/P&gt;
&lt;/div&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend using something like <a href="http://hashids.org/python/" rel="nofollow noreferrer">Hashids</a> for your URLs instead of <code>uuid.uuid4()[:6]</code>, but I think your immediate problem is in <code>urls.py</code>:</p>
<pre><code>url(r'(?P&lt;random_url&gt;\d+)', views.Home, name='home')
</code></pre>
<p>Here your regular expression for <code>random_url</code> is <code>\d+</code>. <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer"><code>\d+</code> matches one or more decimal digits</a>, but the values generated by <code>uuid.uuid()[:6]</code> aren't decimal. I think <code>\w</code> will be a better fit.</p>
<p>The other problem is that <code>views.Home</code> doesn't accept the "random URL", so it never knows which one to display. Give it a second argument:</p>
<pre><code>def Home(request, random_url=None):
</code></pre>
<p>and then use <code>random_url</code> inside <code>Home</code> to load the correct page from the database. I suspect this should actually happen in a new view function, but I'm not clear on what each page represents so I can't recommend a good name for it.</p>
</div>
<span class="comment-copy">Note that a "6 character UUID" isn't a thing. What you're doing is generating a UUID, then taking the first 6 characters from it. That's much more likely to generate a collision than a proper UUID is.</span>
<span class="comment-copy">Understood and edited, thanks!</span>
<span class="comment-copy">If you're taking the UUID, remember that it comes back with the <code>-</code> character. You'd (probably) want to replace that.</span>
<span class="comment-copy">The problem is that the <code>def Home</code> is used to display the homepage (index.html - mydomain.com) and the form, so I can't change the <code>urls.py</code> for that. If I create another Django app then I'm not sure what I add to the html forms <code>action="..."</code> to get it working</span>
<span class="comment-copy">Again, I'm not sure that using the same view for both of these cases makes sense, but you can make the <code>random_url</code> argument optional as I've shown in my updated answer. (Side note: You may want to rename <code>random_url</code> to something like <code>slug</code>, which is a fairly common term for this kind of thing. In my opinion, "random" doesn't really apply here.)</span>
<span class="comment-copy">Changed, thank you! Do you know if I need to add something to <code>action</code> in <code>&lt;form action=" " method="POST"&gt;</code>?</span>
<span class="comment-copy">@Liam, since you are posting back to the same URL you shouldn't need to set an <code>action</code>. I guess you're still having problems? Can you elaborate?</span>
<span class="comment-copy">It's sorted now, I appreciate your help!</span>
