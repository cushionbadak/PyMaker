<div class="post-text" itemprop="text">
<p>Is there any <em>global</em> parameter (preferably env variable) one can set to limit the maximal cores used by Python? 
I know there are parameters to set for specific packages such as multithreading or numpy, but I would like to control Python itself so that I'm sure it won't use more than N cores.</p>
<p>The reason I would like a global parameter is so that I can set it to users in my network so that we would be able to work together on the same machine; currently whenever one runs a script, Python just uses the most cores it can, jamming the others.</p>
<p>Python version 2.6-7, Ubuntu version 14.04.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>using the <a href="https://pypi.python.org/pypi/affinity" rel="nofollow noreferrer">affinity</a> package you can limit the each process on a os level to single core. <a href="https://en.wikipedia.org/wiki/Processor_affinity" rel="nofollow noreferrer">affinity</a> just calls the underlying linux <a href="https://linux.die.net/man/2/sched_setaffinity" rel="nofollow noreferrer">sched_setaffinity</a> function, you can either set it to a specific core number or to a range.</p>
<pre><code>import affinity
import os
pid = os.getpid()
affinity.set_process_affinity_mask(pid, 1) # 1 is the first core
affinity.set_process_affinity_mask(pid, 2) # 2 is the second core
</code></pre>
<p>see the <a href="https://linux.die.net/man/3/pthread_setaffinity_np" rel="nofollow noreferrer">pthread_setaffinity_np  man page</a> for more details on how to set ranges of cores, notice that if you want to set the affinity of other processes you should have permissions to manage that process.
furthermore notice that children processes inherit the father's process affinity.</p>
</div>
<span class="comment-copy">because of the python <a href="https://docs.python.org/3/glossary.html#term-global-interpreter-lock" rel="nofollow noreferrer">GIL</a> python will only ever use one core if you do not use multiprocessing or some other similar module (not even threads will be executed on a different core). what exactly should that parameter limit?</span>
<span class="comment-copy">Numpy for example uses many cores, and I do not need to import any multiprocessing packages for it to do that. Since I'm not sure which package it uses for multiprocessing, I would like a single parameter that will control the 'worse' behaviour in this manner, that I can be sure for any package I might be using.</span>
<span class="comment-copy">numpy is not in the standard python library. so there is no python flag or constant that can restrict the number of cores it can use.</span>
