<div class="post-text" itemprop="text">
<p>I just installed Python 3.6 and run terminal, tried to <code>import</code> any of the modules I already installed in 3.5 (rsa, matplotlib, enchant, ...) and it returned:</p>
<pre class="lang-none prettyprint-override"><code>ModuleNotFoundError: No module named 'module_name'  
</code></pre>
<p>However, they still work when I run Python 3.5. What should I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you install a different Python version you will <strong>not</strong> have the modules you did already install for your old version.</p>
<p><strong>Each Python version you install has its own working directory, and its own modules</strong>. Modules installed for a certain version of Python, in general, cannot be used by other versions, older or newer. This is because Python modules often need precompiled files and version-specific features to work on a certain version of Python. For example, you cannot use a module for Python 2.7 on Python 3.6, since that a lot of stuff changed from version 2 to 3.</p>
<p>This means that <strong>you will have to re-install any module you need on the new version of Python</strong> again, which can easily be done <a href="https://docs.python.org/3/installing/#work-with-multiple-versions-of-python-installed-in-parallel" rel="nofollow noreferrer">using PIP</a> running <code>pythonX.Y</code>, where <code>X.Y</code> is the version number, like this:</p>
<pre class="lang-none prettyprint-override"><code>python2   -m pip install SomePackage  # default Python 2
python2.7 -m pip install SomePackage  # specifically Python 2.7
python3   -m pip install SomePackage  # default Python 3
python3.6 -m pip install SomePackage  # specifically Python 3.6
</code></pre>
<hr/>
<p>Note also that copying the old site-package folder is <strong>not</strong> the same thing as reinstalling the modules, and should never be done.</p>
</div>
<div class="post-text" itemprop="text">
<p>in terminal or cmd type</p>
<pre><code>pip install module_name
</code></pre>
</div>
<span class="comment-copy">No, they're not going to happen automatically, either reinstall them or (copy-paste the site package folder)-don't recommend doing this</span>
<span class="comment-copy">pip works just fine!</span>
<span class="comment-copy">might be useful to OP to explain "why", notably that while there are a lot of pure python sources which <i>will</i> work correctly on both versions, there are also binary (C, etc.) modules which contain version specific compiled code (feel free to steal this, and edit it in :D)</span>
<span class="comment-copy">@AnthonySottile you're right, thanks!</span>
<span class="comment-copy"><code>venv</code> comes as a command with post 3.5 pythons to manage per-project and per-python-version module dependencies. Probably worth a mention/brief summary. <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">docs.python.org/3/library/venv.html</a></span>
<span class="comment-copy">Please edit your answer to include some explanation.  Code-only answers do very little to educate future SO readers.  Your answer is in the moderation queue for being low-quality.</span>
