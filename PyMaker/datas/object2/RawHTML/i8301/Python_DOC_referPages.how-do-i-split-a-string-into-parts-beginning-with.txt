<div class="post-text" itemprop="text">
<p>I have a python string like this: </p>
<pre><code>str = "--jvm 100 --cpu 200"
</code></pre>
<p>How do I get two parts?</p>
<pre><code>'--jvm 100'
'--cpu 200'
</code></pre>
<p>I used <code>str.split('--')</code> and got something that is not optimal:</p>
<pre><code>'' 
'jvm 100'
'cpu 200'
</code></pre>
<p>I tried regex but can't figure it out. </p>
</div>
<div class="post-text" itemprop="text">
<p>Why not add those <code>--</code> again </p>
<pre><code> input = "--jvm 100 --cpu 200"
 values = ["--%s" % item for item in input.split("--") if item]
</code></pre>
<blockquote>
<p>Result: ['--jvm 100 ', '--cpu 200']</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>With regular expression, you can do it like this:</p>
<pre><code>re.findall(r'--.*?(?=\s+--|$)', str)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall(r'--\w+ \d+', str)
['--jvm 100', '--cpu 200']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you're trying to get the values from all the arguments, you should use an argument parsing package to do this.</p>
<p><a href="https://docs.python.org/2/howto/argparse.html" rel="nofollow noreferrer">https://docs.python.org/2/howto/argparse.html</a></p>
<p>They're already designed with all the parsing rules so all you'd have to do is focus on getting values out of them. In many cases, arg parsing tools will let you specify how values should be typed, so numbers will be converted to integers and <code>true/false</code> converted to booleans.</p>
<pre><code>import argparse

# tell our parser what args to expect and what type they are
parser = argparse.ArgumentParser()
parser.add_argument('--jvm', type=int)
parser.add_argument('--cpu', type=int)

raw = '--jvm 100 --cpu 200'
# argparser expects a list of args so split the string on spaces
args = parser.parse_args(raw.split())

# access our parsed args
print args.jvm
print args.cpu
</code></pre>
<p>The above is just an example, so you'll need to tune it to meet your needs.</p>
</div>
<span class="comment-copy">It looks like you're parsing command line arguments, have you considered <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a>?</span>
<span class="comment-copy">Or <a href="http://click.pocoo.org" rel="nofollow noreferrer">Click</a>, a command line processing package that is very easy to use.</span>
<span class="comment-copy">You should update your answer to explain why you're trying to do this.</span>
<span class="comment-copy">I agree with the others here. Use an argument parser - <code>argparse</code> is builtin, <code>click</code> is third party but it's a very nice CLI. Where does <code>str</code> come from? Does every <code>--argument</code> also have one value?</span>
<span class="comment-copy">@jonr Passing jvm args to a Python program? :)</span>
<span class="comment-copy">Please fix your formatting.</span>
<span class="comment-copy">Thanks @Soviut for mentioning formatting :)</span>
<span class="comment-copy">@cricket_007 I updated my code.</span>
