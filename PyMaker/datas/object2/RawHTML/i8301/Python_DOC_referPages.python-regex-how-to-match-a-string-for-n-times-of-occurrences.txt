<div class="post-text" itemprop="text">
<p>I want to match the line that contains word 100.00% for 3 occurrences.</p>
<p>e.g </p>
<pre><code>some string 100.00% foo 100.00% 100.00%
some string  99.91%  foo 100.00% 99.91%
some string 100.00%100.00%100.00%
</code></pre>
<p>So line 1 and 3 should all be matched.</p>
<p>However, my following regex seems only to match the case that has 100.00% repeated for 3 times. (Only match line 3)</p>
<pre><code>re.search(r"([1][0][0]\.[0][0][%]){3}",string)
</code></pre>
<p>I wonder how should I do to match line 1 as well?</p>
<p>Thanks everybody!</p>
</div>
<div class="post-text" itemprop="text">
<p>an alternative that requires a <em>simpler</em> regular expression is to find all substrings that match <code>100.00%</code> and test if the count == 3.</p>
<p>example</p>
<pre><code>import re

p = re.compile(r'100\.00%')
texts = ['some string 100.00% foo 100.00% 100.00%',
         'some string  99.91%  foo 100.00% 99.91%',
         'some string 100.00%100.00%100.00%']

matches = [i for i, t in enumerate(texts)
           if len(re.findall(p, t)) == 3]
# matches = [0, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Halemur Ali's answer is much cleaner than this one which I leave only for completeness.</p>
<p>The notation <code>{3}</code> is merely a shortcut, you can always replace it by expanding the repeated sequence. To match line where the sequence <code>100.00%</code> appears exactly 3 times, you can use:</p>
<pre><code>"^(?:(?!100\.00%).)*(?:100\.00%(?:(?!100\.00%).)*){3}$"
</code></pre>
<p>This uses <a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow noreferrer">negative-lookaheads</a>.</p>
<p>It can be read this way:</p>
<ul>
<li><code>^</code> start of the line</li>
<li><code>(?:(?!100\.00%).)*</code> any character (zero or more), until a <code>100.00%</code> sequence</li>
<li><code>(?:100\.00%</code> the <code>100.00%</code> sequence</li>
<li><code>(?!100\.00%).)*</code> followed by any character (zero or more) until a <code>100.00%</code> sequence</li>
<li><code>{3}</code> repeated 3 times</li>
<li><code>$</code> end of line</li>
</ul>
<p>Consider taking a look at python's documentation of the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> module.</p>
<p><em>Note: brackets are not necessary to match a single character.</em></p>
</div>
<div class="post-text" itemprop="text">
<p><code>r'(100\.00%.*){3}'</code> should also do the trick, and is readable, concise, and (I think) performant. </p>
</div>
<span class="comment-copy">It only matches the bottom line because they are all touching. But line 1 has stuff in between, like spaces and <code>foo</code>. Your current regex doesn't account for that.</span>
<span class="comment-copy">how about this? re.search('100\.00%.*100\.00%.*100\.00%', string)</span>
<span class="comment-copy">@Shiping This will match strings that have <code>100.00%</code> repeated more than 3 times</span>
<span class="comment-copy">@silel yes, it'll match lines with 3 or more 100.00%. the post is not clear if it has to be exact 3 occurrences of 100.00%.</span>
<span class="comment-copy">@Shiping, Sorry for not clarifying my question. I want to match exact 3 occurrences</span>
<span class="comment-copy">Thanks so much for your answer!</span>
<span class="comment-copy">Both of you and Halemur Ali's answer solved my problem, and thanks a lot for your detailed explanation!</span>
<span class="comment-copy">maybe <code>r'(100\.00%.*){3}'</code></span>
<span class="comment-copy">@HaleemurAli yeah thanks, edited in the radix and forgot to escape t_t</span>
<span class="comment-copy">This will also match lines with more than 3 <code>100.00%</code> sequences.</span>
<span class="comment-copy">just like @silel said. It will match more than 3 occurrences, and I would like to match exact 3 times</span>
