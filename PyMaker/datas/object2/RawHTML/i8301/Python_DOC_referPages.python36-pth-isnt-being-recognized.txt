<div class="post-text" itemprop="text">
<p>I'm using python36 on windows installed without admin privs.</p>
<p>I create a simple script, <code>tester.py</code></p>
<pre><code>import petl as etl
fnar = [['foo','bar'],
        ['weebl','woobl']]
print(etl.fromcolumns(fnar).lookall())
</code></pre>
<p>on the commandline, I install petl to a directory.</p>
<p><code>pip install petl -t lib</code></p>
<p>And when I check, it's in there.</p>
<pre><code>2017-04-17  06:27 PM    &lt;DIR&gt;          petl
2017-04-17  06:27 PM    &lt;DIR&gt;          petl-1.1.1.dist-info
</code></pre>
<p>I want to use that directory to find my petl, so I create a <a href="https://docs.python.org/3/using/windows.html#finding-modules" rel="nofollow noreferrer">python36._pth file</a>.</p>
<pre><code>.
lib
import site
</code></pre>
<p>When I try to run my script, it can't find it!</p>
<pre><code>&gt;py tester.py
Traceback (most recent call last):
  File "tester.py", line 2, in &lt;module&gt;
    import petl as etl
ModuleNotFoundError: No module named 'petl'
</code></pre>
<p>What am I misunderstanding about getting ._pth files to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Unfortunately, <code>.pth</code> files only get evaluated if they are placed in one of the standard locations shown by <code>python -m site</code>, <em>other</em> than the current working directory. I can't remember the details, but I think Python runs through these standard locations first, running any .pth files it finds there, then adds <code>''</code> (current working directory) to the start of <code>sys.path</code> afterward. This means you can't extend the path just by adding a <code>.pth</code> file in the directory you launch your script from.</p>
<p>The only way that I know to add relative locations to the system path is to set them at the top of your main script, before your <code>import</code> statements. In this case, you could do that with something like <code>sys.path.append( os.path.join(os.path.dirname(__file__), 'lib'))</code>.</p>
</div>
<span class="comment-copy">Where is your <code>._pth</code> file? Where is your script? What is the name of your actual Python executable and your Python dll and where do they live?</span>
<span class="comment-copy">Why are you using a <code>._pth</code> file, which is meant for embedding Python, instead of normal .pth files or <code>PYTHONPATH</code>?</span>
<span class="comment-copy">You're creating a <code>.pth</code> that overrides the entire Python <code>sys.path</code>. Instead you need to create one as described in the <a href="https://docs.python.org/3/library/site.html#module-site" rel="nofollow noreferrer"><code>site.py</code> documentation</a>,</span>
<span class="comment-copy">my ._pth file is in the same directory as my tester.py script.  My actual executable is in C:\Users\mattk\AppData\Local\Programs\Python\Python36\python.exe</span>
<span class="comment-copy">I'm just trying to add the lib directory as the place to find petl for this script tester.py.</span>
