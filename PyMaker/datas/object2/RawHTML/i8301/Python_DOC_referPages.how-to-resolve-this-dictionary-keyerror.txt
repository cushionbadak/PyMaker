<div class="post-text" itemprop="text">
<p>I am trying to compare <code>string2</code> words in <code>string1</code> and if they are found, I am trying to add the word and their frequency into a dictionary. but I received this error which means that key does not exist.</p>
<pre><code>string1 = 'here i i go and will see see sun'
string2 = 'i will go'
found = {}
new_words = {}

for word in string2.split():
    if word in string1.split():
        found[word] += 1
    else:
        new_words[word] +=1
</code></pre>
<p>I got this error. </p>
<pre class="lang-none prettyprint-override"><code>KeyError: 'i'
</code></pre>
<p>I am trying to get Expect output as: these are the words which consist of <code>string2</code> and they are found in <code>string1</code> and their frequency: </p>
<pre><code>found {'i': 2, 'will': 1, 'go': 1}
</code></pre>
<p><code>new_words</code> are those words which are not in <code>string2</code> but they are in <code>string1</code>, so they are <code>new_words</code>.</p>
<pre><code>new_words {'here': 1, 'see': 2, 'sun': 1, 'and':1}
</code></pre>
<p>I am newbie to programming.Can someone help me solve this simple problem? I cannot store keys before because I don't know which words will be there in strings and their frequency.</p>
</div>
<div class="post-text" itemprop="text">
<p>One more option - you could use <a href="https://docs.python.org/3/library/collections.html#defaultdict-objects" rel="nofollow noreferrer">defaultdict</a></p>
<pre><code>from collections import defaultdict

string1 = 'here i go and i will see sun and enjoy the sunny day'
string2 = 'i will not go'
found = defaultdict(int)
new_words = defaultdict(int)
for word in string2.split():
    if word in string1.split():
        found[word] += 1
    else:
        new_words[word] +=1
</code></pre>
<p><strong>UPDATE</strong></p>
<p>To solve your second problem you should exchange <code>string2</code> and <code>string1</code> in <code>for</code> loop. You should iterate over all words in <code>string1</code> and check them in <code>string2</code>.</p>
<pre><code>from collections import defaultdict

string1 = 'here i go and i will see sun and enjoy the sunny day'
string2 = 'i will not go'
found = defaultdict(int)
new_words = defaultdict(int)

for word in string1.split():
    if word in string2.split():
        found[word] += 1
    else:
        new_words[word] +=1

found
Out[66]: defaultdict(int, {'go': 1, 'i': 2, 'will': 1})

new_words
Out[67]: 
defaultdict(int,
            {'and': 2,
             'day': 1,
             'enjoy': 1,
             'here': 1,
             'see': 1,
             'sun': 1,
             'sunny': 1,
             'the': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to add to a value that may or may not exist in the dictionary. Use <code>get()</code> instead to ensure safe execution:</p>
<pre><code>found[word] = found.get(word, default=0) + 1
</code></pre>
<p>and</p>
<pre><code>new_words[word] = new_words.get(word, default=0) + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot increment an integer value that does not exist yet, which is the case the first time the word is encountered.</p>
<pre><code>for word in string2.split():
    if word in string1.split():
        if word not in found.keys():
            found[word] = 1
        else:
            found[word] += 1
    else:
        if word not in new_words.keys():
            new_words[word] = 1
        else:
            new_words[word] += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to increment (+1) a key that does not exist in your dictionnary. You should check first if the key exist. with:</p>
<pre><code>if key in dict:
     dict[key]+=1
else:
     dict[key]=1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You get a <code>KeyError</code> because the key doesn't yet (<code>found[word] += 1</code>), you may want to use:</p>
<pre><code>string1 = 'here i go and i will see sun and enjoy the sunny day'
string2 = 'i will not go'
found = {}
new_words = {}

for word in string1.split():
    if word in string2.split():
        if word in found:
            found[word] += 1
        else:
            found[word] = 1
    else:
        if word in new_words:
            new_words[word] +=1
        else:
            new_words[word] = 1
</code></pre>
</div>
<span class="comment-copy"><code>new_words[word] +=1</code> won't work because you're trying to increment a value stored against a key that doesn't exist. Did you mean <code>new_words[word] = 1</code> instead?</span>
<span class="comment-copy">@roganjosh i am trying to compare string2 words frequency in string1 and want to add them to found dictionary, and the remaining words in string1 and their frequency to new_words dictionary.</span>
<span class="comment-copy">i am trying to compare string2 words frequency in string1 and want to add them to found dictionary, and the remaining words in string1 and their frequency to new_words dictionary</span>
<span class="comment-copy">your solution works fine for string2. I am trying to compare string2 words with string1</span>
<span class="comment-copy">@robbin Could you provide excepted output?</span>
<span class="comment-copy">yes i will edit my question and will come back in a while</span>
<span class="comment-copy">I added the expected output</span>
<span class="comment-copy">thanks for the help. I added the expected output.</span>
<span class="comment-copy">I've update my answer, give it a try. Based on you question update, you've to change the order of the string you're looping from <code>string2</code>, <code>string1</code> to <code>string1</code>, <code>string2</code></span>
<span class="comment-copy">thanks a lot. it is working also fine but kvorobiev replied first so i accept his answer. but thanks you very much for help. .</span>
<span class="comment-copy">You're very welcome @robbin</span>
