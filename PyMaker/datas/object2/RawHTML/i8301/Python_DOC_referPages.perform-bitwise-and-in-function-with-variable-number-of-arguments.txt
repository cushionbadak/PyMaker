<div class="post-text" itemprop="text">
<p>I'll try to keep this short. I'm working on a small program, and it has an unknown number of arguments being passed into it. The function should return the bitwise 'and' of all arguments that are input. What would be the best way to deal with it? So far this is what I have:</p>
<pre><code>def foo(*args):
    return args_0 &amp; args_1 &amp; ... args_n

foo(a, b)
# return a &amp; b
foo(a, b, c)
# return a &amp; b &amp; c
</code></pre>
<p>Apologies if any of this is unclear at all or if there's something obvious I'm missing; I'm still trying to do my best to learn how to program.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use <code>*args</code> to receive unknown number of parameters in function and then use the args with <a href="https://docs.python.org/3.0/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce</code></a> to find the <em>BITWISE AND</em> using <a href="https://docs.python.org/3/library/operator.html#operator.and_" rel="nofollow noreferrer"><code>operator.and_</code></a>as:</p>
<pre><code>from operator import and_
from functools import reduce  # `reduce` is available with `functools`
                              # package since Python 3.x

def foo(*args):
    return reduce(and_, args)
</code></pre>
<hr/>
<p><strong>Note:</strong> In older versions of Python, <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow noreferrer"><code>reduce</code></a> is available as built-in function.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from functools import reduce

def bitwise_and(*args):
    return reduce(lambda x, y: x &amp; y, args)
</code></pre>
<p><code>reduce</code> calls the <code>lambda</code> expression (<code>x &amp; y</code>) on all pairs in the list and thereby reduces them till only one result is left.</p>
</div>
<span class="comment-copy">I didn't even know about the functools module until now, but I'm certain I'll use it from now on. Thank you so much for your answer, it's exactly what I was looking for.</span>
<span class="comment-copy">Like I said above, I hadn't even heard of the functools module until now. Thank you as well, especially for giving a good example of breaking it down with a lambda function</span>
