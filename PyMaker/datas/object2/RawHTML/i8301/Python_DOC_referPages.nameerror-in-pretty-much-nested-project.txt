<div class="post-text" itemprop="text">
<p>I'm having serious trouble sorting out scoping error in my project.
My project looks something like this:</p>
<p>There is this mainfile wich contains the process and creates the gui with tkinter</p>
<pre><code>interfaceAndProcess.pyw
import lib1
...
#do something with tkinter
filePath = askopenfilename(filetypes=(("All files", "*.*")))
...
lib1.checkSomeDocument(filePath)
</code></pre>
<p>Then I have a "motherOfAllLlibs" where other libs get the functions from.</p>
<pre><code>moalibs.py

def parseSomething(lookForStringX)
  position = line.index(lookForStringX, 0)
  return(position)

def bla():
  ...

def blabla():
  ...
</code></pre>
<p>And here is one of many libs which use the methods from moalibs.py</p>
<pre><code>lib1.py
from moalibs import *
def checkSomeDocument(filePath)
global line
  fileContent = open(filePath, 'r')
  for line in fileContent:
    tmpVar = parseSomething(lookForStringX)
    ...
    tmpVar = bla()
    ...
    tmpVar = blabla()
    ...
    tmpVar = bla()
    # In any of my many libs the methods from moalib are called
    # serveral times in different orders, that's why this part
    # is pretty "hard coded"
</code></pre>
<p>My problem is, that the execution of interfaceAndProcess.pyw throws an NameError on the line where lib1 calls the function parseSomething(lookForStringX) saying "name 'line' is not defined".</p>
<p>Why can't <code>parseSomething</code> see the var <code>line</code>?</p>
<p>When I put <code>parseSomething</code> in the file <code>moalibs.py</code> everthing is working fine.</p>
<p>I'm sorry for this question to be pretty specific but I'm searching and trying for for more than two hours now.
Been playing with <code>global line</code> inside the methods, been defining <code>line</code> inside interfaceAndProcess.pyw, nothing...</p>
<p>Any suggestions?</p>
<p>Edit:
Ok, I understood that what I have tried can't work as I expected. 
How would I achieve this without passing the variable as an argument? </p>
</div>
<div class="post-text" itemprop="text">
<p>For starters, the <code>global</code> keyword isn't doing anything for a variable already in the top-level namespace (as is <code>line</code> in this case). <a href="https://stackoverflow.com/questions/4693120/use-of-global-keyword-in-python">This Stack Overflow question</a> discusses why.</p>
<p>The reason you're getting a NameError is because <code>lib1.py</code> imports the namespace of <code>moalibs.py</code>, not vice-versa. You made <code>line</code> global, in <code>lib1.py</code>, but <code>moalibs.py</code> doesn't import <code>lib1.py</code>. </p>
<p>To see what I mean, you can ask each module to tell you its current namespace contents by using the <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer"><code>dir()</code></a> function. You'll find that lib1.py is fully aware of all of moalibs.py's identifiers, but moalibs.py is not aware of lib1.py's identifiers.</p>
</div>
<span class="comment-copy"><code>global</code> isn't actually global. It's module-level. Functions from one module won't look in another module's globals for name resolution.</span>
<span class="comment-copy">Thank you for your answer. But I also tried importing lib1.py in moalib.py. Wihtout any success</span>
