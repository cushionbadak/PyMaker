<div class="post-text" itemprop="text">
<p>sample code what i am talking about</p>
<pre><code>class A:
  def __init__(self):
    self.x = 5
  def virtual__getX(self):
    return self.x
  def getY(self):
    return self.virtual__getX()+2

class B(A):
  def __init__(self):
    A.__init__(self)
  def virtual__getX(self):
    return 20

a=A()
b=B()

print(a.getY())
print(b.getY())
</code></pre>
<p>is there a way in python 3 to have real virtual method without this really bad name "virtual__getX" i need clear names "__getX"</p>
<pre><code>Python 3.5.2 (default, Dec 2015, 13:05:11)
[GCC 4.8.2] on linux

7
22
</code></pre>
<p>if i remove virtual from name the result is</p>
<pre><code>Python 3.5.2 (default, Dec 2015, 13:05:11)
[GCC 4.8.2] on linux

7
7
</code></pre>
<p>is there better way to write real virtual methods like in "normal language" like delphi   </p>
</div>
<div class="post-text" itemprop="text">
<p>You can't have a virtual function named <code>__something</code>. Attributes starting with a double underscore are considered private, and python internally applies name-mangling to them.</p>
<p>You can, however, rename <code>virtual__getX</code> to <code>getX</code> and it'll work as you expect.</p>
</div>
<span class="comment-copy">Wait, so you want to inherit from another class and don't have inheritance? What are you actually trying to achieve? It seems like you need to use properties. <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#property</a></span>
<span class="comment-copy">properties are usefull but not in this case, i need to have something like protected member, inheritance is important but from INSTANCE user should not call method, but question is  answered - problem was in double underscore which is used by python internally</span>
<span class="comment-copy">really amaizing that double underscore have some "strange" behavior here. Is there a way to leve underscore and still have possibility to do this - something like @property decorator?</span>
<span class="comment-copy">@Livius You can add another 2 backslashes at the end: <code>__getX__</code>. Names like that are usually used by python's magic methods though, so it isn't considered good practice. I don't know why you want to have getter functions, but in python we usually use properties instead. (Named <code>x</code>, not <code>getX</code> or anything else.)</span>
<span class="comment-copy">i prefix all methods that do much more then only read property value with "get" but for internal class usage i prefix method by __ to "say" users do not call it from instance - but i see that if i need inheritance of that method then there is no good way to do this in python. In delphi i simple write "; virtual" after method and name dose not metter</span>
<span class="comment-copy">@Livius why not just use a single underscore: <code>_getX</code></span>
<span class="comment-copy">good point but now i'm worry if in python are more magic with single underscore?</span>
