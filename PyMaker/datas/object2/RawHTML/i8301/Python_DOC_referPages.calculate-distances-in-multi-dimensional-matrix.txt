<div class="post-text" itemprop="text">
<p>I wrote this code to calculate the distance. But getting error of <code>ValueError: math domain error</code>.</p>
<pre><code>import math

a=[[5, 10],
   [16, 23]]

b=[[6, 1], [21, 2]]

dL=[]
dist=[]
k=0
h=1
for i in range(len(a)):
    dL=[]
    for j in range(len(a)):
        d=math.sqrt((a[i][k]-b[j][k])^2 + (a[i][h]-b[j][h])^2)
        dL.append(d)
    dist.append(dL)
</code></pre>
<p>In the iterations, <code>d</code> should be:</p>
<pre class="lang-none prettyprint-override"><code>i=0, j=0: d=sqrt((5-6)^2+(10-1)^2)
i=0, j=1: d=sqrt((5-21)^2+(10-2)^2)
i=1, j=0: d=sqrt((16-6)^2+(23-1)^2)
i=1, j=1: d=sqrt((16-21)^2+(23-2)^2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The value of <code>len(a)</code> is 2, and FOR count since 0, so, ask for the 3rd element in the array, you must do <br/> <code>for i in range(len(a) - 1):</code></p>
</div>
<div class="post-text" itemprop="text">
<p>sqrt gives that error when you try to use it with a negative number. sqrt(-16) gives that error because the result is a complex number.</p>
<pre><code>from math import sqrt
a=[[5, 10], [16, 23]]


b=[[6, 1], [21, 2]]

dL=[]
dist=[]
k=0
h=1
for i in range(len(a)):
    dL=[]
    for j in range(len(a)):
        temp1 = (a[i][k]-b[j][k]) ** 2
        temp2 = (a[i][h]-b[j][h]) ** 2
        temp = temp1 + temp2
        if temp &gt; 0:
            d = sqrt(temp)

        dL.append(d)
    dist.append(dL)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @not_a_robot mentioned in their comment, the exponentiation operator in Python is <code>**</code> not <code>^</code> as it is in (many) other programming languages. You can fix your by simply replacing them.</p>
<pre><code>import math

a= [[ 5, 10],
    [16, 23]]
b= [[ 6,  1],
    [21,  2]]

dL=[]
dist=[]
k=0
h=1
for i in range(len(a)):
    dL=[]
    for j in range(len(a)):
        d = math.sqrt((a[i][k]-b[j][k])**2 + (a[i][h]-b[j][h])**2)
        dL.append(d)
    dist.append(dL)
</code></pre>
<p>As I mentioned in a comment, it would be better to use <code>math.hypot()</code> for this as it will give you the same results more quickly and is easier to read (and write):</p>
<pre><code>for i in range(len(a)):
    dL=[]
    for j in range(len(a)):
        d = math.hypot(a[i][k]-b[j][k], a[i][h]-b[j][h])
        dL.append(d)
    dist.append(dL)
</code></pre>
</div>
<span class="comment-copy"><code>^2</code> doesn't square, it XORs.</span>
<span class="comment-copy">Use <code>x ** y</code> to raise <code>x</code> to the <code>y</code>th power.</span>
<span class="comment-copy">How can I round d to 4 decimal places in the same line when i calculate d</span>
<span class="comment-copy">You should also consider using the built-in <a href="https://docs.python.org/3/library/math.html#math.hypot" rel="nofollow noreferrer"><code>math.hypot()</code></a> function as using it would likely be faster.</span>
<span class="comment-copy"><code>range(len(a))</code> will only generates values from <code>0</code> to <code>len(a)-1</code> inclusive, so what you're suggesting is incorrect.</span>
<span class="comment-copy">The problem, which your answer doesn't solve, lies in the OP's use of <code>^</code> instead of <code>**</code>, which is already explained in the comments.</span>
<span class="comment-copy">Yeah i to agree but there is another problem in squareroot  function if we use sqrt for negative number returns in complex number @ThierryLathuille</span>
<span class="comment-copy">Squares are positive.</span>
<span class="comment-copy">i have lost my common sense thanks once again</span>
