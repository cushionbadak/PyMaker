<div class="post-text" itemprop="text">
<p>We have an in-house web server served via Python which was running on port 8080 without issue until this weekend.  After a Chrome update this weekend, my colleagues and I now receive a ERR_INVALID_HTTP_RESPONSE when we attempt to access the web server via Chrome.  This issue seems to be specific to Chrome and port 8080.  Port 8080 works in IE, and port 80 works for both IE and Chrome with no changes on the server side.  The web server is not being served on port 80 as it is still in development and not production (which is company standard practice for internal services).</p>
<p>Based on some research, it seems like different sites/services have been having this problem at one point or another as Chrome has been updated.  Most of those posts seemed to involve HTTP/0.9 being relegated into the bad-security-equals-no-support bucket.  Our server is using HTTP/1.0, and I have experimented with HTTP/1.1 as well to see if we are having a similar issue.</p>
<pre><code>[&lt;blah&gt;]$ curl --head http://&lt;domain&gt;
HTTP/1.0 200 OK
Server: BaseHTTP/0.3 Python/2.6.6
Date: Mon, 17 Apr 2017 21:53:57 GMT
Content-type: text/html

[&lt;blah&gt;]$ curl --head http://&lt;domain&gt;:8080
HTTP/1.0 200 OK
Server: BaseHTTP/0.3 Python/2.7.13
Date: Mon, 17 Apr 2017 21:54:04 GMT
Content-type: text/html

# after setting handler.protocol_version = 'HTTP/1.1'
[&lt;blah&gt;]$ curl --head http://&lt;domain&gt;:8080
HTTP/1.1 200 OK
Server: BaseHTTP/0.3 Python/2.7.13
Date: Mon, 17 Apr 2017 21:54:57 GMT
Content-type: text/html
</code></pre>
<p>curl doesn't show any obvious header issues (that I can see) to indicate a possible root cause.  Chrome's developer console isn't providing any answers either.  Obviously, I am missing something subtle as it seems a browser update shouldn't completely prevent a server being accessed.</p>
</div>
<div class="post-text" itemprop="text">
<p>try formatting your send data proplery like this</p>
<pre><code>connection.sendall(b'HTTP/1.0 200 OK\r\nContent-Length: 11\r\nContent-Type: text/html; charset=UTF-8\r\n\r\nHello World\r\n')
</code></pre>
</div>
<span class="comment-copy">Can you provide a packet dump of a problematic chrome request?</span>
<span class="comment-copy">What is the best means to do that?  We are not allowed to run packet sniffers on the corporate network due to our InfoSec policies.</span>
<span class="comment-copy">Well, then fix these brain-dead policies first. But you don't need to run the sniffer on the network; wireshark with a filter on local connections on your development machine is sufficient. You can also use a logging proxy like fiddler.</span>
<span class="comment-copy">I have not been able to get the proxy setup (my time was allocated elsewhere by management due to 'good enough' syndrome). I was able to get a network data XML from IE which has no obvious issue accessing the domain via port 8080.  Trying to add it to the original post is proving difficult</span>
<span class="comment-copy">I guess the most relevant item is the response headers: <code>Response	HTTP/1.0 200 OK</code>  This is what Chrome seems to be complaining about  <code>This page isn’t working</code> <code>mydomain sent an invalid response.</code> <code>ERR_INVALID_HTTP_RESPONSE</code></span>
<span class="comment-copy">Is there special meaning with letter b inside the method ?</span>
<span class="comment-copy">In Python 3, the <code>b</code> prefix before a quoted literal indicates it is a bytes literal. See <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">docs.python.org/3/reference/…</a></span>
