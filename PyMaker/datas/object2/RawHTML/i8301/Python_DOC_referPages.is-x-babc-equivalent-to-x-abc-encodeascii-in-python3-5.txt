<div class="post-text" itemprop="text">
<p>Is <code>x = b'ABC'</code> equivalent to <code>x='ABC'.encode("ascii")</code> in Python 3.5? Are there any differences between these two methods.</p>
</div>
<div class="post-text" itemprop="text">
<p>They produce the same result:</p>
<pre><code>&gt;&gt;&gt; 'ABC'.encode("ascii")
b'ABC'
&gt;&gt;&gt; b'ABC'
b'ABC'
</code></pre>
<p>However <code>encode()</code> will call the encoder at runtime, instead of at compile time.</p>
</div>
<div class="post-text" itemprop="text">
<p>A quick test in Python 3 shows that they are indeed equivalent:</p>
<pre><code>In [1]: x = b'ABC'

In [2]: y = 'ABC'.encode('ascii')

In [3]: x == y
Out[3]: True

In [4]: type(x)
Out[4]: bytes

In [5]: type(y)
Out[5]: bytes
</code></pre>
<p>According to the <a href="https://docs.python.org/3/reference/lexical_analysis.html?highlight=lexical" rel="nofollow noreferrer">official python documentation</a>: </p>
<blockquote>
<p>Bytes literals are always prefixed with 'b' or 'B'; they produce an instance of the bytes type instead of the str type. They may only contain ASCII characters; bytes with a numeric value of 128 or greater must be expressed with escapes.</p>
</blockquote>
<p>Therefore, as long as all of the characters in the <em>unicode string</em> are ASCII, they will be treated the same. </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes and no. Yes, for your specific example, the two are equivalent in that they produce the same result.</p>
<p>However, for generic usage, they have some subtle distinctions. For example, consider the different ways they treat attempting to encode non-ascii characters:</p>
<pre><code>@&gt;&gt;&gt; b'Æ'
  File "&lt;stdin&gt;", line 1
SyntaxError: bytes can only contain ASCII literal characters.
@&gt;&gt;&gt; 'Æ'.encode("ascii")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
UnicodeEncodeError: 'ascii' codec can't encode character '\xc6' in position 0: ordinal not in range(128)
</code></pre>
</div>
<span class="comment-copy">For what it's worth, <code>b'ABC' == 'ABC'.encode("ascii")</code> returns <code>True</code>.</span>
<span class="comment-copy">You should emphasize that the only instance in which they are equivalent are the subset where all characters in the unicode string are ascii.</span>
<span class="comment-copy">Also keep in mind an escaped character while technically represented by only ascii characters may still represent a non-ascii character that can't be encoded to ascii.</span>
