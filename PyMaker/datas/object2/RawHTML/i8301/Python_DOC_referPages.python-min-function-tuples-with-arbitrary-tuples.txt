<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5292303/how-does-tuple-comparison-work-in-python">How does tuple comparison work in Python?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>What is this python code doing? </p>
<pre><code>min((2,3),(6,'f',1))
</code></pre>
<p>Output: <code>(2, 3)</code></p>
<p>I am not able to follow the <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">documentation</a>. </p>
<p>Can someone explain why the output in <code>(2,3)</code> and not an error?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>(2,3) &lt; (6,'f',1)</code></p>
<p>Meaning tuples are compared itemwise, therefore <code>2 &lt; 6</code> yields that the first tuple is less than the second one</p>
<p>While this code works on Python 2 and Python 3, it should fail on Python 3 if both items in 1st place were the same. Because it would compare <code>3</code> to the string <code>'f'</code> and such comparison is now invalid.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>min</code> function will call the comparator methods of the objects you pass. In this case, all tuples. It is returning the minimum tuple with respect to lexicographic order.</p>
</div>
<span class="comment-copy">See here: <a href="http://stackoverflow.com/a/5292332/2384183">stackoverflow.com/a/5292332/2384183</a></span>
<span class="comment-copy">Thanks. this solved my problem</span>
<span class="comment-copy">In the general sense of lexographic, eguaio is correct. Lexicographic comparison simply means that you go element-by-element. In this case, whether the value is <code>2</code> or <code>21</code>, it's still the first element at the tuple level.</span>
<span class="comment-copy">Exactly what aryamccarthy says. I think that @Prune should ask for clarification before starting downvoting answers. HIS miss interpretation of lexicographic in the context of tuples was charged to me :)</span>
<span class="comment-copy"><a href="https://en.wikipedia.org/wiki/Lexicographical_order" rel="nofollow noreferrer">Wikipedia</a> includes the definition with which I'm familiar from programming and text editing.  Python's function does not match this definition.  If you have another authority you can cite that supports your answer, I'll be happy to retract my down-vote.  I have a lot of experience, but I'm not a world authority.</span>
<span class="comment-copy">The Wikipedia article you shared contains a section named "Cartesian products". Please, read it carefully and you will see that the definition there is exactly the one I used on python tuples (and I think that it is correct to think on python tuples as cartesian product tuples, don't you think?) As the article tells, the order used in Cartesian products inherits the order in each coordenate, exactly how the order in python tuples works, and exactly how I'm using the term.</span>
<span class="comment-copy">I know I'm right on this, but the point of my  first comment was that you downvoted an answer on a interpretation of a term without asking first clarifications, or corrections. I honestly think that attitude is mean and goes against the spirit of this site, which is populated of kind and work people that is just trying to help, like I do.</span>
