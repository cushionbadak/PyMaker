<div class="post-text" itemprop="text">
<p>This does work nice:</p>
<pre><code>import subprocess
subprocess.check_call(["ls","-l"])
</code></pre>
<p>But this line causes an error:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_call(["ls"," -l"])
ls: cannot access  -l: No such file or directory
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib64/python3.4/subprocess.py", line 558, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['ls', ' -l']' returned non-zero exit status 2
</code></pre>
<p>Why does this happen?</p>
<p>In unix I can write:</p>
<pre><code>ls                                           -l
</code></pre>
<p>with many spaces between <code>ls</code> and <code>-l</code></p>
<p>I use Python 3.4.5 on Centos 6</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>In unix I can write:</p>
</blockquote>
<p>You don't write that <em>in unix</em>. You write that <strong>in a shell</strong>. The <em>shell</em> parses that output and produces a list, after collapsing the whitespace. It then passes the equivalent of <code>['ls', '-l']</code> (no spaces!) to the <code>ls</code> process.</p>
<p>Different shells can treat whitespace differently. Most let you <em>escape</em> whitespace by using quotes or backslashes. So the following fails just as much in a shell as it does in Python:</p>
<pre><code>$ ls ' -l'
ls:  -l: No such file or directory
</code></pre>
<p>With <code>subprocess</code>, unless you set <code>shell=True</code>, you are not passing the arguments through the shell, you pass this <em>straight</em> to the <code>ls</code> process that is started. So you have to deliver those arguments the way <code>ls</code> expects them to be delivered, with no spaces before the <code>-</code> for options.</p>
<p>If you need to split out commands and arguments in roughly the same way the shell does, use the <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer"><code>shlex</code> module</a>:</p>
<pre><code>&gt;&gt;&gt; import shlex
&gt;&gt;&gt; shlex.split("ls          -l")
['ls', '-l']
&gt;&gt;&gt; shlex.split("ls ' -l'")
['ls', ' -l']
</code></pre>
</div>
<span class="comment-copy">From shell try <code>~$ 'ls' ' -l'</code></span>
