<div class="post-text" itemprop="text">
<p>I want to read a file using python
the result must be like (a list of tuples):</p>
<pre><code>myList=[(1, 'assignment_1', 85,100', '0.05'),
        ('2', 'assignment_2', '80', '100', '0.05'),
        ('3', 'assignment_3', '95', '100', '0.05')]
</code></pre>
<p>the file contains:</p>
<pre class="lang-none prettyprint-override"><code>1 assignment_1 85 100 0.05
2 assignment_2 80 100 0.05
3 assignment_3 95 100 0.05
</code></pre>
<p>my code :</p>
<pre><code>inputfile=open(filename,"r")
myList=[]
for line in inputfile.readlines():
    tuples=line.split()
    myList.append(tuples)
print(myList)
fileinput.close()
</code></pre>
<p>the result </p>
<pre><code>[['1', 'assignment_1', '85', '100', '0.05'],
 ['2', 'assignment_2', '80', '100', '0.05'], 
 ['3', 'assignment_3', '95', '100', '0.05']]
</code></pre>
<p>How do I convert the items into each type(<code>int</code>, <code>float</code>). I got a list of lists, not a list of tuples</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert the elements into the proper type immediately after the line they're in has been read:</p>
<pre><code>from pprint import pprint

types = int, str, int, int, float
filename = 'assignments.txt'

with open(filename, "r") as inputfile:
    myList = []
    for line in inputfile:
        elements = tuple(t(e) for t,e in zip(types, line.split()))
        myList.append(elements)

pprint(myList)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>[(1, 'assignment_1', 85, 100, 0.05),
 (2, 'assignment_2', 80, 100, 0.05),
 (3, 'assignment_3', 95, 100, 0.05)]
</code></pre>
<p>This could be done even more succinctly using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>with open(filename, "r") as inputfile:
    myList = [tuple(t(e) for t,e in zip(types, line.split()))
                for line in inputfile]
</code></pre>
<p>Also note you don't need to use <code>readlines()</code> to read all the lines of a <code>file</code> into memory at once because files are iterable, line-by-line. This is described in the <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">Tutorial</a> in Python's online documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Adding to wpercy's answer, I would imagine the simplest way to achieve this would be the following.</p>
<pre><code>with open(filename, 'r') as input_file:
    my_list = [tuple(line.split()) for line in input_file]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use something like:</p>
<pre><code>myList = []
with open("text_to_tuple.txt") as f:
    for line in f:
        myList.append(tuple(line.rstrip().split())) # rstrip() removes line breaks
print(myList)    
# [('1', 'assignment_1', '85', '100', '0.05'), ('2', 'assignment_2', '80', '100', '0.05'), ('3', 'assignment_3', '95', '100', '0.05')]
</code></pre>
</div>
<span class="comment-copy">Your actual result is a lot better than your claimed desired result (which is invalid and inconsistent).</span>
<span class="comment-copy">you may change the line myList.append(tuples) to myList.append((tuples[0], tuples[1], int(tuples[2]), int(tuples[3]), float(tuples[4])))</span>
<span class="comment-copy">yeah it's an academic issue</span>
