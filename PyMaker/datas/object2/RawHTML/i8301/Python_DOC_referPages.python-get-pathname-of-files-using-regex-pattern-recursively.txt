<div class="post-text" itemprop="text">
<p>If one want to get the (absolute) file paths (file listings) of all files with names of certain pattern how can this be done in Python (v 3.5 on unix). Something similar to the bash command <code>find -regex 'pattern'</code>. I have been looking as the <a href="https://docs.python.org/3/library/os.html#file-descriptor-operations" rel="nofollow noreferrer">os</a>, <a href="https://docs.python.org/3.5/library/glob.html" rel="nofollow noreferrer">glob</a>, <a href="https://docs.python.org/3/library/os.path.html#module-os.path" rel="nofollow noreferrer">os.path</a>  and this <a href="https://stackoverflow.com/questions/10660284/how-to-improve-searching-with-os-walk-and-fnmatch">SO</a> but cannot get it together.</p>
<p>Say you want absolute paths to the files that  matches /.*[pat.txt]$/ and you have the below diretories:</p>
<pre><code>/home/me/dir1/dir1a/filepat.txt #1
/home/me/dir1/dir1a/file.txt
/home/me/dir1/dir1a/filepat.png
/home/me/dir2/filepat.txt #2
/home/me/dir3/dir3a/dir3ab/filepat
/home/me/dir3/dir3a/dir3ac/filepat.txt #3 
/home/me/dir3/dir3a/dir3ac/filepat.png
</code></pre>
<p>Then you would get want the three indicated paths:</p>
<pre><code>/home/me/dir1/dir1a/filepat.txt
/home/me/dir2/filepat.txt
/home/me/dir3/dir3a/dir3ac/filepat.txt
</code></pre>
<p>One try was:</p>
<pre><code>import fnmatch
import os 
start_path = "/home/me/" 
for root, dirs, files in os.walk(start_path):
    for filename in fnmatch.filter(files, ".*pat.txt"):
        print(os.path.join(start_path, filename))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>basename</code> and <code>in</code> operator</p>
<pre><code>x = given list
&gt;&gt;&gt; [i for i in x if 'pat.txt' in os.path.basename(i)]
['/home/me/dir1/dir1a/filepat.txt',
 '/home/me/dir2/filepat.txt',
 '/home/me/dir3/dir3a/dir3ac/filepat.txt']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one using regexes, but for the simple case I would go with akash`s answer using <code>in</code> operator</p>
<pre><code>import re
pattern = re.compile(r'.*pat\.txt$')

import fnmatch
import os 
start_path = "/home/me/" 
for root, dirs, files in os.walk(start_path):
    for filename in files:
        if pattern.find(filename):
            print(os.path.join(start_path, filename))
</code></pre>
</div>
<span class="comment-copy">Python is misspelled in the post title  :-)</span>
<span class="comment-copy">Embarrassing - but good catch</span>
<span class="comment-copy">don't worry, I was in "debug mode"   ;-)</span>
<span class="comment-copy">Oh I completely missed <code>basename</code></span>
<span class="comment-copy">However, this solution will also fetch files like <code>filepat.txt.bak</code></span>
<span class="comment-copy">To fix that, just use <code>i.endswith('pat.txt')</code></span>
<span class="comment-copy">@WiktorStribi≈ºew , we can still achieve this using <code>endswith('pat.txt')</code> if required :)</span>
<span class="comment-copy">- Yes, but then it would fail to fetch <code>FILEPAT.TXT</code>. - We may use <code>lower()</code>.</span>
<span class="comment-copy">I was close I see. I think yours is very general though (+1)</span>
