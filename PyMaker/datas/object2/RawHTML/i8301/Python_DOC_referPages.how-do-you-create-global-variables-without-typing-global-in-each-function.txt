<div class="post-text" itemprop="text">
<p>I'm trying to create a global variable, but from what I know you need to type "global" in every function.</p>
<p>This example is in Python 2.7:</p>
<pre><code>a = 10

def change():
    global a
    a = 2
    print a

def reverse():
    global a
    a = 10
    print a

// Output:
// 2
// 4
</code></pre>
<p>I'm trying to re-create the code above without the use of <code>global</code> for every variable in every function I am going to create. Is there a better way to do this?</p>
<p>To better explain this situation, I have a dictionary and I intend to use many different functions on it. The problem is, I don't really want to be using <code>function(dict)</code> or <code>do_this(dict)</code> each time, I prefer <code>function()</code> or <code>do_this()</code>. My thinking is that if <code>dict</code> was global, I could solve this problem.</p>
<p>P.S
Thank you for all the answers! Not exactly what I was looking for, but I appreciate the answers.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to read the variable (not modify it), you don't need the <code>global</code> line. See the offical <a href="https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python" rel="nofollow noreferrer">FAQ</a>. However, if you really want to circumvent this rule, you can make a global dictionary (or list or other mutable data structure) and put your global variables in there. Then you can manipulate them through the global dictionary:</p>
<pre><code>a = 4
globs = dict(g1=3)


def print_a():
    print(a)  # not modifying, so you don't need `global`
    globs['g1'] += 1  # technically not modifying globs either.
    print(globs)

print_a() # 4 \n {'g1', 4}
print(globs) # {'g1', 4}
</code></pre>
<p>Why does this work? (I'm going to explain the best I know here, but please feel free to edit if you know better). Replace "modify" with "reassign" in your head. When you change the value of <code>a</code> (<code>a += 1</code> for example), you're actually reassigning <code>a</code> so Python won't let you. When you're changing a value in <code>globs</code>, you're not actually reassigning anything to the name <code>globs</code>, so it lets you. A link that may help you:</p>
<ul>
<li><a href="http://www.pythontutor.com/visualize.html" rel="nofollow noreferrer">http://www.pythontutor.com/visualize.html</a> will step through what the interpreter is doing.</li>
</ul>
<p>The thing that you can't do in a function without declaring <code>global</code> is to change the arrow from the global namespace to point to something else.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>class Globo(object):
    pass


def change():
    Globo.a = 2
    print Globo.a
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/423379/using-global-variables-in-a-function-other-than-the-one-that-created-them">Using global variables in a function other than the one that created them</a></span>
<span class="comment-copy">The language designers aren't particularly interested in making global variables convenient.</span>
<span class="comment-copy">In general, avoid global variables (especially if you have to use <code>global</code>, even just once). Use classes.</span>
<span class="comment-copy">Maybe use a dictionary to store values at the module level.</span>
<span class="comment-copy">Don't use <code>global</code>, basically ever. It's bad</span>
<span class="comment-copy">Your indentation is a bit off ... try this: <a href="https://gist.github.com/benhoyt/8d69954e619a5961a37369275d6239c0" rel="nofollow noreferrer">gist.github.com/benhoyt/8d69954e619a5961a37369275d6239c0</a> :-)</span>
<span class="comment-copy">Thought about same joke, but yours has one argument more. If knows how to use function parameters, what is for the globals?</span>
