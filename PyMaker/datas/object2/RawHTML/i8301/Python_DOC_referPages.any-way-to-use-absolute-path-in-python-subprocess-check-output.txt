<div class="post-text" itemprop="text">
<p>new to python, i found that subprocess's check_output runs nicely on Windows but it seems to only run cmds that are in windows PATH env variable.  </p>
<p>i can execute the following fine:</p>
<pre><code>import sys
from subprocess import check_output

cmd = check_output("ipconfig", shell=True)
print(cmd.decode(sys.stdout.encoding))
</code></pre>
<p>and ipconfig output is displayed fine.</p>
<p>if i try run a specific command not in the path and try absolute path i get errors.</p>
<pre><code>import sys
from subprocess import check_output

cmd = check_output("c:\\test\\test.exe", shell=True)
print(cmd.decode(sys.stdout.encoding))
</code></pre>
<p>Is there no way to use an absolute path reference for check_output? i was not finding any..</p>
<p>i even tried changing to that directory..</p>
<pre><code>import sys
from subprocess import check_output
import os

os.chdir("c:\\test\\")
cmd = check_output("test.exe", shell=True)
print(cmd.decode(sys.stdout.encoding))
</code></pre>
<p>but i get the following error</p>
<pre><code>File "C:\Python35\lib\subprocess.py", line 398, in run
    output=stdout, stderr=stderr)
subprocess.CalledProcessError: Command 'naviseccli.exe' returned non-zero exit status 1

Process finished with exit code 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">Popen</a> offers a 'cwd' argument, that will execute in the defined directory:</p>
<pre><code>import subprocess
cmd = subprocess.Popen('test.exe', stdout=subprocess.PIPE, stderr=subprocess.PIPE, cwd='C:/test', shell=True)

out, err = cmd.communicate()
print (out)
</code></pre>
<p>Using check_output:</p>
<pre><code>subprocess.check_output('cd C:/windows &amp;&amp; notepad.exe', shell=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please read about the documentation of <a href="https://docs.python.org/2/library/subprocess.html#subprocess.CalledProcessError" rel="nofollow noreferrer"><code>CalledProcessError</code></a>.</p>
<p>You can examine the output by catching this exception in a <code>try ... except</code> block and using the exception instance's <code>output</code> attribute.</p>
<pre><code>try:
    ... ...                       # Running the command.
except CalledProcessError as cmderr:
    print (cmderr.output)         # Example of using the output.
</code></pre>
<p>In this way you can examine the failed command's exit status and output.  I don't know what triggered the exact error, but it's unlikely a result of using the absolute path.</p>
</div>
<span class="comment-copy">Apparently you managed to execute <code>naviseccli.exe</code> just fine, but it returned with non-zero exit status, which causes the <code>CalledProcessError</code> (which is the expected behaviour of <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer"><code>check_output</code></a>).</span>
<span class="comment-copy">What errors do you get exactly when you do <code>check_output("c:\\test\\test.exe", shell=True)</code>?</span>
<span class="comment-copy">PERFECT ! thx , this got me what i wanted. i moved from .Net to python so it's such a diff world between the 2 LOL</span>
