<div class="post-text" itemprop="text">
<p>Given <code>Lista</code> each containing an id name (e.g. <code>a</code>), the
symbol <code>'='</code> and a comma separated list of values. I need to generate another list which is a combination of <code>'id= value'</code> substrings, such that each id-value combination exists in the input and each value is used exactly once.</p>
<pre><code>Lista:
    [
    'a= aVal1,aVal2',
    'b=bVal1,bVal2,bVal3',
    'c= cVal1,cVal2',
    ]
</code></pre>
<p>Expected output: </p>
<pre><code>Listb:
    [
    'a=aVal1&amp; b=bVal1&amp;c=cVal1',
    'a=aVal1&amp;b=tyVal1&amp;c=cVal2',
    'a=aVal1&amp;b=tyVal2&amp;c=tzVal1',
    'a=aVal1&amp;b=tyVal2&amp;c=tzVal2',
    ]
</code></pre>
<p>I tried to solve this question using <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.permutations" rel="nofollow"><code>itertools.permutations()</code></a> function, but I was unable to proceed further. What type of approach should I take to solve this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't normally post complete working solutions to what look like homework problems, so consider yourself lucky. :) </p>
<pre><code>#!/usr/bin/env python

from itertools import product

lista = [
    'a=aVal1,aVal2',
    'b=bVal1,bVal2,bVal3',
    'c=cVal1,cVal2',
]

newlists = []
for s in lista:
    head, _, tail = s.partition('=')
    newlists.append(['%s=%s' % (head, u) for u in tail.split(',')])

listb = ['&amp;'.join(t) for t in product(*newlists)]

for row in listb:
    print row
</code></pre>
<p><strong>output</strong></p>
<pre><code>a=aVal1&amp;b=bVal1&amp;c=cVal1
a=aVal1&amp;b=bVal1&amp;c=cVal2
a=aVal1&amp;b=bVal2&amp;c=cVal1
a=aVal1&amp;b=bVal2&amp;c=cVal2
a=aVal1&amp;b=bVal3&amp;c=cVal1
a=aVal1&amp;b=bVal3&amp;c=cVal2
a=aVal2&amp;b=bVal1&amp;c=cVal1
a=aVal2&amp;b=bVal1&amp;c=cVal2
a=aVal2&amp;b=bVal2&amp;c=cVal1
a=aVal2&amp;b=bVal2&amp;c=cVal2
a=aVal2&amp;b=bVal3&amp;c=cVal1
a=aVal2&amp;b=bVal3&amp;c=cVal2
</code></pre>
<p>I've changed the name of your lists to lower case - Names beginning with an upper case letter like <code>Lista</code> and <code>Listb</code> are normally reserved for use as class names in Python.</p>
<p>If you don't understand any of the things I've done in this program, please ask and I'll try to explain.</p>
<hr/>
<p>You <em>could</em> do this in one line, but it's not very easy to read:</p>
<pre><code>listb = ['&amp;'.join(t)for t in product(*[['%s=%s'%(i,v)for v in j.split(',')]for i,j in[s.split('=')for s in lista]])]
</code></pre>
<p>:)</p>
<hr/>
<p>The string <a href="https://docs.python.org/2/library/stdtypes.html#str.partition" rel="nofollow"><code>.partition()</code> method</a> splits a string into 3 parts: the substring before the separator, the separator itself, and the substring after the separator.<br/>
So <code>head, _, tail = s.partition('=')</code> captures the id into <code>head</code> and all the associated values into <code>tail</code>.<br/>
I use <code>_</code> to capture the separator to indicate that we don't really need that value (since we already know that it's <code>=</code>).<br/>
The list comprehension on the next line splits the values up by using <code>.split(',')</code>. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; l=[i.split('=') for i in a]
&gt;&gt;&gt; g=[[i]+j.split(',') for i,j in l]
&gt;&gt;&gt; ['&amp;'.join(('='.join(m),'='.join(k),'='.join(t))) for m,k,t in (product(*[list(combinations(i,2)) for i in g],repeat=1))]
['a= aVal1&amp;b=bVal1&amp;c= cVal1', 'a= aVal1&amp;b=bVal1&amp;c=cVal2', 'a= aVal1&amp;b=bVal1&amp; cVal1=cVal2', 'a= aVal1&amp;b=bVal2&amp;c= cVal1', 'a= aVal1&amp;b=bVal2&amp;c=cVal2', 'a= aVal1&amp;b=bVal2&amp; cVal1=cVal2', 'a= aVal1&amp;b=bVal3&amp;c= cVal1', 'a= aVal1&amp;b=bVal3&amp;c=cVal2', 'a= aVal1&amp;b=bVal3&amp; cVal1=cVal2', 'a= aVal1&amp;bVal1=bVal2&amp;c= cVal1', 'a= aVal1&amp;bVal1=bVal2&amp;c=cVal2', 'a= aVal1&amp;bVal1=bVal2&amp; cVal1=cVal2', 'a= aVal1&amp;bVal1=bVal3&amp;c= cVal1', 'a= aVal1&amp;bVal1=bVal3&amp;c=cVal2', 'a= aVal1&amp;bVal1=bVal3&amp; cVal1=cVal2', 'a= aVal1&amp;bVal2=bVal3&amp;c= cVal1', 'a= aVal1&amp;bVal2=bVal3&amp;c=cVal2', 'a= aVal1&amp;bVal2=bVal3&amp; cVal1=cVal2', 'a=aVal2&amp;b=bVal1&amp;c= cVal1', 'a=aVal2&amp;b=bVal1&amp;c=cVal2', 'a=aVal2&amp;b=bVal1&amp; cVal1=cVal2', 'a=aVal2&amp;b=bVal2&amp;c= cVal1', 'a=aVal2&amp;b=bVal2&amp;c=cVal2', 'a=aVal2&amp;b=bVal2&amp; cVal1=cVal2', 'a=aVal2&amp;b=bVal3&amp;c= cVal1', 'a=aVal2&amp;b=bVal3&amp;c=cVal2', 'a=aVal2&amp;b=bVal3&amp; cVal1=cVal2', 'a=aVal2&amp;bVal1=bVal2&amp;c= cVal1', 'a=aVal2&amp;bVal1=bVal2&amp;c=cVal2', 'a=aVal2&amp;bVal1=bVal2&amp; cVal1=cVal2', 'a=aVal2&amp;bVal1=bVal3&amp;c= cVal1', 'a=aVal2&amp;bVal1=bVal3&amp;c=cVal2', 'a=aVal2&amp;bVal1=bVal3&amp; cVal1=cVal2', 'a=aVal2&amp;bVal2=bVal3&amp;c= cVal1', 'a=aVal2&amp;bVal2=bVal3&amp;c=cVal2', 'a=aVal2&amp;bVal2=bVal3&amp; cVal1=cVal2', ' aVal1=aVal2&amp;b=bVal1&amp;c= cVal1', ' aVal1=aVal2&amp;b=bVal1&amp;c=cVal2', ' aVal1=aVal2&amp;b=bVal1&amp; cVal1=cVal2', ' aVal1=aVal2&amp;b=bVal2&amp;c= cVal1', ' aVal1=aVal2&amp;b=bVal2&amp;c=cVal2', ' aVal1=aVal2&amp;b=bVal2&amp; cVal1=cVal2', ' aVal1=aVal2&amp;b=bVal3&amp;c= cVal1', ' aVal1=aVal2&amp;b=bVal3&amp;c=cVal2', ' aVal1=aVal2&amp;b=bVal3&amp; cVal1=cVal2', ' aVal1=aVal2&amp;bVal1=bVal2&amp;c= cVal1', ' aVal1=aVal2&amp;bVal1=bVal2&amp;c=cVal2', ' aVal1=aVal2&amp;bVal1=bVal2&amp; cVal1=cVal2', ' aVal1=aVal2&amp;bVal1=bVal3&amp;c= cVal1', ' aVal1=aVal2&amp;bVal1=bVal3&amp;c=cVal2', ' aVal1=aVal2&amp;bVal1=bVal3&amp; cVal1=cVal2', ' aVal1=aVal2&amp;bVal2=bVal3&amp;c= cVal1', ' aVal1=aVal2&amp;bVal2=bVal3&amp;c=cVal2', ' aVal1=aVal2&amp;bVal2=bVal3&amp; cVal1=cVal2']
</code></pre>
<hr/>
<p>explanation :</p>
<p>First you need to split your string list with <code>=</code> then create <code>g</code> as following :</p>
<pre><code>&gt;&gt;&gt; g
[['a', ' aVal1', 'aVal2'], ['b', 'bVal1', 'bVal2', 'bVal3'], ['c', ' cVal1', 'cVal2']]
</code></pre>
<p>now you need to create the combinations of the element of list <code>g</code> with len 2 and after that you need a <code>production</code> of that result!<em>Note</em> that we need to pickup one tuple from each list of below result : </p>
<pre><code>&gt;&gt;&gt; [list(combinations(i,2)) for i in g]
[[('a', ' aVal1'), ('a', 'aVal2'), (' aVal1', 'aVal2')], [('b', 'bVal1'), ('b', 'bVal2'), ('b', 'bVal3'), ('bVal1', 'bVal2'), ('bVal1', 'bVal3'), ('bVal2', 'bVal3')], [('c', ' cVal1'), ('c', 'cVal2'), (' cVal1', 'cVal2')]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should have take a look on <code>itertools.product</code>, that may be what you are looking for.</p>
<p>You may easily convert <code>listA</code> to 3 lists:</p>
<pre><code>a = ['aVal1', 'aVal2']
b = ['bVal1', 'bVal2', 'bVal3']
c = ['cVal1', 'cVal2']
</code></pre>
<p>then you may try</p>
<pre><code>for x in itertools.product(a, b, c):
   print x
</code></pre>
<p>x will be what you want, all the remain work are string concatenating, or string formating.</p>
<p><strong>Update</strong></p>
<p>For more detail, you can use this</p>
<pre><code>all_the_list = []
listB = []
for i in listA:
    name, values = i.split('=');
    k = values.strip().split(',');
    all_the_list.append(k)

// then product the out put
for aV, bV, cV in itertools.product(*all_the_list):
    listB.append('a=%s&amp;b=%s&amp;c=%s'%(aV, bV, cV))
</code></pre>
<p>Hope this help</p>
</div>
<span class="comment-copy">Can you show us the expected o/p</span>
<span class="comment-copy">@Backtrack expected o/p is listb</span>
<span class="comment-copy">why you did not used <code>a=aVal2</code>?</span>
<span class="comment-copy">Take a look at itertools <a href="https://docs.python.org/2/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a>.</span>
<span class="comment-copy">@Kasra - I need a combinations , this is just a sample list.</span>
<span class="comment-copy">what exactly is partition doing here?</span>
<span class="comment-copy">Wait I am checking all your solutions :)</span>
<span class="comment-copy"><code>Lista:     [     'a= aVal1,aVal2',     'b=bVal1,bVal2,bVal3',     'c= cVal1,cVal2',     ]</code> lista is a seperate list</span>
<span class="comment-copy">I've updated the answer, hope it is what you need.</span>
