<div class="post-text" itemprop="text">
<p>I have a program that asks the user's name:</p>
<pre><code>while True:
try:
    name = str(input("Please enter your name &gt; "))
except ValueError:
    print("Please enter a valid name")
    continue
else:
    break
</code></pre>
<p>I want to prevent the user from entering an integer, but with the code above integers are accepted in a string. How can I prevent the user from entering an integer in the string? </p>
</div>
<div class="post-text" itemprop="text">
<p><code>break</code> when trying to cast to an int if an exception is raised as it is not an int:</p>
<pre><code>while True:
    name = input("Please enter your name &gt; ")
    try:
        int(name)
    except ValueError:
        break        
    print("Please enter a valid name")
</code></pre>
<p><code>str.digit</code> might work also but will fail on negative input.</p>
<p>To check if any character is a digit use any:</p>
<pre><code>while True:
    name = input("Please enter your name &gt; ")
    if any(ch.isdigit() for ch in name):
        print("Please enter a valid name")
    else:
        break
</code></pre>
<p>You could also create a set of accepted characters:</p>
<pre><code>from string import ascii_letters
st = set(ascii_letters)
while True:
    name = input("Please enter your name &gt; ")
    if not st.issuperset(name):
        print("Please enter a valid name")
    else:
        break
</code></pre>
<p>Where you might want to add <code>-, " "</code> and any other potential characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, do not cast <code>str</code> as <code>input</code> returns an <code>str</code>. Note from the <a href="https://docs.python.org/3/library/functions.html#input" rel="noreferrer">docs</a></p>
<blockquote>
<p>The function then reads a line from input, <strong>converts it to a string</strong> (stripping a trailing newline), and returns that</p>
</blockquote>
<p>After you get the input into <code>name</code> you can have a <code>if</code> condition.</p>
<pre><code>name = str(input("Please enter your name &gt; "))
if (re.search('\d',name)):
     print("Sorry your name contains a number")
</code></pre>
<p>And don't forget to <a href="https://docs.python.org/2/howto/regex.html" rel="noreferrer"><code>import re</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the string method <a href="https://docs.python.org/2/library/stdtypes.html#str.isdigit" rel="nofollow"><code>isdigit()</code></a> to check if the string is just integers. </p>
<pre><code>name = input("Please enter your name: ")
if name.isdigit() == True:
    print ("That's not a name!")
</code></pre>
<p>Likewise, you can also use the method <a href="https://docs.python.org/2/library/stdtypes.html#str.isalpha" rel="nofollow"><code>isalpha()</code></a> to check if the string is just text. However, if there's a space, it will return False.</p>
<pre><code>name = input("Enter your name: ")
if name.isalpha() != True:
    print ("That's not a name!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe:</p>
<pre><code>if len(set(name) - set('1234567890')) &lt; len(set(name)):
    name = input("Please enter a valid name: ")
</code></pre>
</div>
<span class="comment-copy">Are you checking if the string is <i>just</i> numbers?</span>
<span class="comment-copy">just text, no numbers</span>
<span class="comment-copy">Oops, Forgot that you could cheat <code>try</code></span>
<span class="comment-copy">You could also use <code>str.isalpha</code>.</span>
<span class="comment-copy">@MalikBrahimi, <code>foo-bar</code> is a valid name as is <code>Lord foobar</code></span>
<span class="comment-copy"><code>if name.isdigit()</code> will do but <code>-100</code> is a digit and <code>if not name.isalpha()</code> will also be sufficient</span>
<span class="comment-copy">The only problem with <code>isalpha()</code> is that some names contain punctuation characters, like a dash.</span>
<span class="comment-copy">names also contain spaces</span>
<span class="comment-copy">@TigerhawkT3 That's true.</span>
