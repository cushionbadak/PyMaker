<div class="post-text" itemprop="text">
<p>hope someone can help. im trying to create a virtual vending machine. ive got so far with my code but stuck on a few things. i need help in creating a code in this section.</p>
<pre><code>count = 0
TotalCredit = 0
coinNum = int (input("How many coins would you like to enter: "))
while count in range (coinNum):
    coin = float (input ("Coins accepted 0.10 0.20 0.50 1.00: £ "))
    TotalCredit = TotalCredit + coin
count = count + 1
</code></pre>
<p>so if coins entered are anything other than 0.10 0.20 0.50 1.00 it prints a message "Invalid coin entered please try again"
and loops back to start.</p>
<p>i also need a while loop so if there is not enough credit entered it prints
"insufficient funds please add more credit" and goes back to allow you to add credit. I know the minimum amount of credit is 0.59 so i have and idea the the loop is something like 'while TotalCredit &lt;0.59 but not sure how to send user back to add more. ive listed code below so you can see how far ive gone. im only 15 and just learning coding so please as much help as possible would be much appreciated.</p>
<pre><code>def vendingMachine():

    count = 0
    TotalCredit = 0
    coinNum = int (input("How many coins would you like to enter: "))
    while count in range (coinNum):
        coin = float (input ("Coins accepted 0.10 0.20 0.50 1.00: £ "))
        TotalCredit = TotalCredit + coin
    count = count + 1

    print ("You have £",round(TotalCredit,2),"credit " )    
    print ("")
    print ("Choose your item:")
    print ("")       
    print ("1.Coco-Cola")
    print ("2.Walkers Cheese &amp; Onion")
    print ("3.Lucozade")
    print ("4.Wosits")
    print ("5.Water")
    print ("")
    FinalCredit = TotalCredit
    round (FinalCredit, 2)

    item = int (input ("Enter the number for your item: "))
    print ("")
    while item &lt;1 or item &gt;5:
        print ("This item is not available.")
        item = int (input ("Enter the number for your item: "))
    if item == 1:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Coca-Cola can, costing £0.59.")
        print ("You have",round(FinalCredit,2),"credit remaning.") 
    elif item == 2:
        FinalCredit = TotalCredit - 0.69
        print ("You now have a Walkers crisp packet, costing £0.69.")
        print ("You have", round(FinalCredit,2),"credit remaning.")  
    elif item == 3:
        FinalCredit = TotalCredit - 0.99 
        print ("You now have a Lucozade drink, costing £0.99.")
        print ("You have" ,round(FinalCredit,2),"credit remaning.") 
    elif item == 4:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Wosits crisp packet, costing £0.59.")
        print ("You have",round(FinalCredit,2),"credit remaning.")   
    elif item == 5:
        FinalCredit = TotalCredit - 0.79
        print ("You now have a bottle of water, costing £0.79.")
        print ("You have",round(FinalCredit,2),"credit remaning.") 
    else:
        print ("This not an option.")
        print ("")
        print ("The rest of your money, £(0), has been        
    outputted.".format(round(FinalCredit,2)))       

vendingMachine ()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about putting the second part of your code in a different method, and then calling <code>vendingMachine()</code> based on user input? Also, to stop the balance from going below 0, we can add an extra conditional statement in the if/elif chain. We'll also need to add <code>TotalCredit</code> parameter (explained below). I added some other edits, which I'll later go into detail with, as well.</p>
<pre><code>def query(TotalCredit):
    print ("You have £" + str(round(TotalCredit,2)) + " credit\n")    
    print ("Choose your item:\n\n1.Coco-Cola\n2.Walkers Cheese &amp; Onion\n3.Lucozade\n4.Wosits\n5.Water\n")
    FinalCredit = TotalCredit
    round (FinalCredit, 2)

    item = int (input ("Enter the number for your item: "))
    print ("")
    while item &lt;1 or item &gt;5:
        print ("This item is not available.")
        item = int (input ("Enter the number for your item: "))
    if item == 1 and FinalCredit &gt;= 0.59:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Coca-Cola can, costing £0.59.")
    elif item == 2 and FinalCredit &gt;= 0.69:
        FinalCredit = TotalCredit - 0.69
        print ("You now have a Walkers crisp packet, costing £0.69.") 
    elif item == 3 and FinalCredit &gt;= 0.99:
        FinalCredit = TotalCredit - 0.99 
        print ("You now have a Lucozade drink, costing £0.99.") 
    elif item == 4 and FinalCredit &gt;= 0.59:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Wosits crisp packet, costing £0.59.")
    elif item == 5 and FinalCredit &gt;= 0.79:
        FinalCredit = TotalCredit - 0.79
        print ("You now have a bottle of water, costing £0.79.")
    else:
        print ("This not an option.\n")
        print ("The rest of your money, £(0), has been outputted.".format(round(FinalCredit,2)))
   print ("You have "+str(round(FinalCredit,2))+" credit remaning.") 
   again = input("Would you like to enter the vending machine (y/n)?")
   while again != 'y' and again != 'n':
       again = input("Please input y or n")
   if again == 'y':
       vendingMachine()
</code></pre>
<p>Next, in <code>vendingMachine()</code>, all we need to do is make a call to <code>query()</code> and pass <code>TotalCredit</code>.</p>
<pre><code>def vendingMachine():
    TotalCredit = 0
    count = 0
    coinNum = int (input("How many coins would you like to enter: "))
    while count in range (coinNum):
        coin = float (input ("Coins accepted 0.10 0.20 0.50 1.00: £ "))
        TotalCredit = TotalCredit + coin
        count = count + 1
    query(TotalCredit)
</code></pre>
<p>Now, the program will continue to run until to user enters 'n' when prompted. Here's the full code:</p>
<pre><code>def query(TotalCredit):
    print ("You have £" + str(round(TotalCredit,2)) + " credit\n")     
    print ("Choose your item:\n\n1.Coco-Cola\n2.Walkers Cheese &amp; Onion\n3.Lucozade\n4.Wosits\n5.Water\n")
    FinalCredit = TotalCredit
    round (FinalCredit, 2)

    item = int (input ("Enter the number for your item:\n"))
    while item &lt;1 or item &gt;5:
        print ("This item is not available.")
        item = int (input ("Enter the number for your item: "))
    if item == 1 and FinalCredit &gt;= 0.59:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Coca-Cola can, costing £0.59.")
    elif item == 2 and FinalCredit &gt;= 0.69:
        FinalCredit = TotalCredit - 0.69
        print ("You now have a Walkers crisp packet, costing £0.69.")
    elif item == 3 and FinalCredit &gt;= 0.99:
        FinalCredit = TotalCredit - 0.99 
        print ("You now have a Lucozade drink, costing £0.99.")
    elif item == 4 and FinalCredit &gt;= 0.59:
        FinalCredit = TotalCredit - 0.59
        print ("You now have a Wosits crisp packet, costing £0.59.")
    elif item == 5 and FinalCredit &gt;= 0.79:
        FinalCredit = TotalCredit - 0.79
        print ("You now have a bottle of water, costing £0.79.")
    else:
        print ("This not an option.\n")
        print ("The rest of your money, £(0), has been outputted.".format(round(FinalCredit,2)))
    print ("You have " + str(round(FinalCredit,2)) + " credit remaning.") 
    again = input("Would you like to enter the vending machine (y/n)?\n")
    while again != 'y' and again != 'n':
       again = input("Please input y or n\n")
    if again == 'y':
       vendingMachine()


def vendingMachine():
    count = 0
    TotalCredit = 0
    coinNum = int (input("How many coins would you like to enter: "))
    while count in range (coinNum):
        coin = float (input ("Coins accepted 0.10 0.20 0.50 1.00: £ "))
        TotalCredit = TotalCredit + coin
        count = count + 1
    query(TotalCredit)

vendingMachine()
</code></pre>
<p>Some other things:</p>
<ul>
<li>You can put <code>\n</code> inside of a string to add a new line, instead of using an emtpy print statement</li>
<li><code>str</code> converts a type into a string, and a <code>+</code> between strings concatenates, them or brings them together.</li>
<li><code>raw_input</code> is the same as <code>input</code>, except it returns a string (only in Python 2.7)</li>
<li>If you find yourself continually repeating the same line(s) of code, then you either need to put it in a function or find a better place for it. For example, you used <code>print ("You have",round(FinalCredit,2),"credit remaning.")</code> after every if/elif statement. Instead, you could've just added it at the end (which I did). </li>
</ul>
<p>Good luck on learning programming! Let me know if you have any other questions. In the future, make sure to format your code properly before posting. I'd also take @wwii's advice on pseudocode and planning out what you're going to write beforehand.</p>
</div>
<span class="comment-copy">Please fix the indentation.  For the <i>coin input</i> portion - have a look at this SO Q&amp;A <a href="http://stackoverflow.com/q/23294658/2823755">Asking the user for input until they give a valid response</a></span>
<span class="comment-copy">A good practice is to write down, in words, what you are trying to do and the steps needed to accomplish this (much like you did when asking this question).  Take a look at that <i>specification</i> and try to group it into <i>functional</i> chunks.  Try turning that text into code - play around in the shell to see how things work.</span>
<span class="comment-copy">If you are having trouble imagining how to turn your <i>pseudocode</i> into code, it may mean you don't have enough <i>vocabulary</i> yet and need to spend more time with a <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">tutorial</a>, <a href="https://wiki.python.org/moin/BeginnersGuide/NonProgrammers" rel="nofollow noreferrer">BeginnersGuideNonProgrammers</a></span>
<span class="comment-copy">go it to but comes up this.  Traceback (most recent call last):   File "C:/Users/Darren/Desktop/101.py", line 47, in &lt;module&gt;     vendingMachine()   File "C:/Users/Darren/Desktop/101.py", line 45, in vendingMachine     query(TotalCredit)   File "C:/Users/Darren/Desktop/101.py", line 30, in query     again = raw_input("Would you like to enter the vending machine (y/n)?\n") NameError: name 'raw_input' is not defined</span>
<span class="comment-copy">Seems like you're using Python 3. I changed all the raw-input() references to input(). It should work now</span>
