<div class="post-text" itemprop="text">
<p>I have a list of 516 numbers. These numbers range from 0 to 136661043272.12181 and they are not evenly distributed in this range. Now I want to normalize these numbers to [0,1] and I want to use the sigmoid function, i.e., original 0 will become 0 and original 136661043272.12181 will become 1. I know sigmoid function but my problem is that I don't know how to map original values to the exponent of e. Do you have any ideas about this? </p>
</div>
<div class="post-text" itemprop="text">
<p>You use the <a href="https://docs.python.org/3/library/math.html#math.exp" rel="nofollow"><code>exp</code> function</a> from the <code>math</code> module:</p>
<pre><code>import math
listMax = float(max(alist))
alist = [i/listMax for i in alist]
alist = [1/(1+math.exp(-i)) for i in alist]
</code></pre>
</div>
<span class="comment-copy">First normalize dividing by 136661043272.12181, then use sigmoid.</span>
<span class="comment-copy">thank you very much for your answer, but following this code will we get a range [0.5,0.7311] because the first alist will return values in range [0,1], but in my case, if I want the final range to be [0,1], then the range of first alist should be [-inf, +inf]</span>
<span class="comment-copy">That's how a sigmoid works.</span>
<span class="comment-copy">You can't have y=1 except in the limit as x tends to infinity. Are you sure you want a sigmoid? Why not use a saturating cubic, maybe one that approximates a shifted tanh(x) via the Taylor series if you want the output range to be 0 to 1?</span>
<span class="comment-copy">Also, you can normalise the list to a value greater than 1 if you want to be  closer to the range 0 to 1</span>
<span class="comment-copy">thank you very much. Maybe I will try your suggested methods and see whether I can come up with more interesting ideas.</span>
