<div class="post-text" itemprop="text">
<p>I'm quite new to using Django, so please be gentle, if this is a stupid question. </p>
<p>I'm trying to play with some stock-information in Python/Django. I'm getting the stock-rates from Yahoo Finance (with urllib). Whenever I get some stock-information, then I will get it like this (yep, it's one long string):</p>
<pre><code>[b'Date,Open,High,Low,Close,Volume,Adj Close\n2014-12-01,26.16,26.22,25.85,26.02,48967100,25.54\n2014-11-28,26.80,26.90,26.44,26.49,31185200,26.00\n2014-11-26,26.89,26.97,26.78,26.87,19289700,26.38\n2014-11-25,27.01,27.03,26.84,26.86,28028000,26.37\n']
</code></pre>
<p>I then send it to a template with Django, using </p>
<pre><code>to_be_returned = RequestContext(request, [[DICTIONARY_WITH_VARIABLE]]) 
</code></pre>
<p>and then </p>
<pre><code>return HttpResponse(template.render(to_be_returned)
</code></pre>
<p>Is there a way, to get Django to beautify the long string for me? So I don't have to manipulate the string and replace all <code>\n</code> with <code>&lt;br /&gt;</code>, in order for me to be able to read it easier? And what does the [b' ... '] mean (that contains the entire result?</p>
<p>Thanks for your assistance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#linebreaksbr" rel="nofollow"><code>linebreaksbr</code></a> template filter:</p>
<pre><code>{{ my_string_with_n|linebreaksbr }}
</code></pre>
<p><code>b'...'</code>  is a python3 <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">byte string literal</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not attached a template.
Wrap out tag with </p>
<pre><code>&lt;pre&gt;&lt;/pre&gt;
</code></pre>
</div>
<span class="comment-copy">Template filters can be used for this, but what if you want to customize the display? Far better to use <code>split</code> and assign each string to fields in a class (or, if you want to cache them, then model fields). Displaying every bit of data right on the template won't help much except when prototyping.</span>
<span class="comment-copy"><code>b'string'</code> is how to write a literal for a bytestring in Python (especially newer versions). Each character is one byte wide. This contrasts with the Unicode string, denoted <code>u'string'</code>, which represents strings of characters (even wide ones). Python 3 switched the meaning of the unqualified string literal from bytestring to Unicode string.</span>
