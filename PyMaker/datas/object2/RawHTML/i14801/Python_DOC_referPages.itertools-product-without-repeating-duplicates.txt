<div class="post-text" itemprop="text">
<pre><code>from itertools import product
teams = ['india', 'australia', 'new zealand']
word_and = ['and']
tmp = '%s %s %s'
items = [teams, word_and, teams]
print(list(tmp % a for a in list(product(*items))))
</code></pre>
<p>prints:</p>
<pre><code>['india and india',
 'india and australia',
 'india and new zealand',
 'australia and india',
 'australia and australia',
 'australia and new zealand',
 'new zealand and india',
 'new zealand and australia',
 'new zealand and new zealand']
</code></pre>
<p>How to:</p>
<ol>
<li>avoid the same name repeating in a single sentence (india and india)</li>
<li>generate only one combination (either india and australia or australia and india)</li>
</ol>
<p><a href="http://pythonfiddle.com/product-without-matching-duplicates" rel="noreferrer">http://pythonfiddle.com/product-without-matching-duplicates</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You should use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations"><code>itertools.combinations</code></a> like this</p>
<pre><code>&gt;&gt;&gt; from itertools import combinations
&gt;&gt;&gt; teams = ['india', 'australia', 'new zealand']
&gt;&gt;&gt; [" and ".join(items) for items in combinations(teams, r=2)]
['india and australia', 'india and new zealand', 'australia and new zealand']
</code></pre>
<p>But for this simple case, you can run two loops, like this</p>
<pre><code>&gt;&gt;&gt; ["%s and %s" % (t1, t2) for i, t1 in enumerate(teams) for t2 in teams[i + 1:]]
['india and australia', 'india and new zealand', 'australia and new zealand']
</code></pre>
</div>
<span class="comment-copy">thanks for the answer, let me try this out..</span>
<span class="comment-copy">which one would be faster? the combination or the enumerate?</span>
<span class="comment-copy">@emaillenin Okay, I ran a simple <a href="http://ideone.com/oV7kTb" rel="nofollow noreferrer">timing test</a> and it confirms that <code>combination</code> is faster, with your sample data-set.</span>
<span class="comment-copy">@emaillenin <code>combinations</code> is faster but not by much: <a href="http://repl.it/fu7" rel="nofollow noreferrer">repl.it/fu7</a> However, there is no reason to not use combinations.</span>
