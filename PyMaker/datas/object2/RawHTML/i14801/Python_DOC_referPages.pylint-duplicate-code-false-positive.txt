<div class="post-text" itemprop="text">
<p>I have this code in (many) of my Python files for a project.</p>
<pre><code>from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals
from pprint import pformat
</code></pre>
<p>Pylint complains that:</p>
<pre><code>==ook:2
==eek:2
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals
from pprint import pformat (duplicate-code)
</code></pre>
<p>Which while true is utterly irrelevant. The <code>from __future__ [...]</code> lines are there <a href="https://docs.python.org/3/howto/pyporting.html#prevent-compatibility-regressions" rel="noreferrer">to prevent compatibility regressions</a> from <a href="https://docs.python.org/3/howto/pyporting.html" rel="noreferrer">Python 2 to Python 3</a>. As such, pylint should not complain about them being similar in different files.</p>
<p>Is there a way to stop pytlint doing that?</p>
<p>I know about <code>pylint: disable=duplicate-code</code> but that will disable it for the whole file because of the import scope. However, I do not want to disable it for the whole file.</p>
</div>
<div class="post-text" itemprop="text">
<h1>Pylint Similarities Config</h1>
<p>Try changing the <code>ignore-imports</code> in the <a href="https://pylint.readthedocs.io/en/latest/technical_reference/features.html#similarities-checker" rel="noreferrer">similarities</a> section of your <a href="https://pylint.readthedocs.io/en/latest/tutorial.html#the-next-step" rel="noreferrer"><code>pylintrc</code> config file</a>.</p>
<p>Default pylintrc:</p>
<pre><code>[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no
</code></pre>
</div>
<span class="comment-copy">It's probably complaining for a reason? Why is this a false positive and not a actual code duplication?</span>
<span class="comment-copy">@Torxed: Question edited with the answer.</span>
<span class="comment-copy">Maybe you could put those import in another file, say <code>common_imports.py</code>, and import that file with <code>from common_imports import *</code> in all your other files? EDIT: No, just tried, and this seems not to work with <code>__future__</code> imports...</span>
<span class="comment-copy">@tobias_k: <code>from modile import *</code> is <i>really bad practice and should not be used</i>. On a side note, pylint will complain about that with a <code>wildcard-import</code> error. And as you said, <code>__future__</code> does not work with wildcard imports.</span>
<span class="comment-copy">@Sardathrion I know it's bad practice, but so is having the same mandatory five lines of imports in each and every file. But as I said, it does not work anyway. I just left that comment there so that others don't bother with writing up the same idea. Never mind.</span>
<span class="comment-copy">Any way to do that from the command line?...</span>
<span class="comment-copy">@Sardathrion Try doing <code>pylint /path/to/project/ --ignore-imports=no</code> (<i>un tested</i>), but really it is nice to have access to <i>all</i> the options from a config file.  If you run <code>pylint --generate-rcfile</code> that will print out the default options which you can then alter.  Just keep the file in the directory of your code.</span>
<span class="comment-copy">That worked!  Great, thank you very much.  I cannot really use a <code>~/.pylintrc</code> as we run pylint from scons... Don't ask. It's horrid. ^_~</span>
<span class="comment-copy">@Sardathrion or anyone who has a similar issue: We do the same. You can use the argument "--rcfile=tools/pylintrc" when starting pylint from Scons or another script. tools/pylintrc is part of our project tree.</span>
