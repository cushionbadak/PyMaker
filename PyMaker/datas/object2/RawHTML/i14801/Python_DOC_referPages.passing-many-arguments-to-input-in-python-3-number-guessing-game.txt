<div class="post-text" itemprop="text">
<p>I just started learning programming in Python with Michael Dawson's book and cannot think of a way to get around a problem with an exercise. It's supposed to be a 'guess a number' game where the computer tries to guess a number I chose.</p>
<pre><code>import random
print("Pick any number between 1-100 and I'll try to guess it")
x = 1
y = 100
tries = 0
answer = "whatever"

while answer != "yes":
guess = random.randint(x, y)
answer = input("Is your number ", guess, "? Or is it 'lo'wer or 'hi'gher?")
if answer == "hi":
    x = guess + 1
if answer == "lo":
    y = guess - 1
tries += 1

print ("Got it! Your number is ", los, "! It took me ", tries, " Tries! :)")
input("End")
</code></pre>
<p>As you probably expect, this is what python feeds me back:</p>
<pre><code>Traceback (most recent call last):
File "/home/Documents/python/numbers.py", line 11, in &lt;module&gt;
answer = input("Is your number ", guess, "? Or is it 'lo'wer or 'hi'gher?")
TypeError: input expected at most 1 arguments, got 3
</code></pre>
<p>So I know that I shouldn't expect<code>input</code> to take more than 1 argument but I can't really grasp what to do with this. Any friendly kick towards the solution will be highly appreciated :)</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> expects a single string as mentioned in the docs</p>
<blockquote>
<p>If the prompt argument is present, it is written to standard output without a trailing newline.</p>
</blockquote>
<p>Use <a href="https://docs.python.org/2/library/functions.html#format" rel="nofollow"><code>format</code></a> instead</p>
<pre><code>answer= input("Is your number {}? Or is it 'lo'wer or 'hi'gher?".format(guess))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can add one line above input and change the input function call a bit.</p>
<pre><code>import random
print("Pick any number between 1-100 and I'll try to guess it")
x = 1
y = 100
tries = 0
answer = "whatever"

while answer != "yes":
  guess = random.randint(x, y)
  input_message = "Is your number ", guess, "? Or is it 'lo'wer or 'hi'gher?"
  answer = input(input_message)

  if answer == "hi":
    x = guess + 1
  if answer == "lo":
    y = guess - 1
  tries += 1

print ("Got it! Your number is ", los, "! It took me ", tries, " Tries! :)")
input("End")
</code></pre>
</div>
<span class="comment-copy">If one of the questions solves your problem, you can mark it as accepted using gray checkmark below the voting arrows.</span>
<span class="comment-copy">Thank you sir. It works. I still don't get why but I hope it will come clear further down the road.</span>
<span class="comment-copy">@MichałJasiński Just read the docs! they are very clear. All the best!</span>
<span class="comment-copy"><code>"One Plus Two Is {}".format("three")</code> ... <code>format</code> is a method that strings have that will allow you to ...format... your string and replace stuff.</span>
<span class="comment-copy">I wasn't aware that I unaccepted your answer. Fixing it right away!</span>
<span class="comment-copy">No prob. I've upvoted the other answer! too</span>
<span class="comment-copy">This method seems way more logical to me. Is there any big difference between this and using 'format' like in other replies? Is there a some kind of widely used standard approach or whatever fits best?</span>
<span class="comment-copy"><code>format</code> is the industrial standard way of doing it. This is a good way too for learners (+1 from me)</span>
<span class="comment-copy">Yes, Rao is correct. This is just a way to understand how python works as a beginner. But with experience as Rao suggested 'format' is the way.</span>
