<div class="post-text" itemprop="text">
<p>I am trying to get Python to define two integer variables, numberone and numbertwo, with the first being between 1 and 100 and the second being less than the first.</p>
<p>I have tried this code:</p>
<pre><code>    numberone=random.randint(0,100)  
    numbertwo=random.randint(0,numberone)  
</code></pre>
<p>but the second number is occasionally larger than the first.</p>
<p>Am I missing something completely obvious? :s</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe you are confusing "greater than" and "not less than" - is not possible for the <code>numbertwo &gt; numberone</code> but it might very well be that <code>numbertwo == numberone</code>, which also means that <code>numbertwo &lt; numberone</code> is false.</p>
<hr/>
<p><a href="https://docs.python.org/3/library/random.html#random.randint" rel="nofollow"><code>random.randint(a, b)</code></a> is a bit confusing in that unlike <code>range(a, b)</code> which includes numbers up to <code>b - 1</code> only, <code>randint</code> might produce <code>b</code>. To get the "including <code>a</code> but excluding  <code>b</code> behaviour, use <a href="https://docs.python.org/3/library/random.html#random.randrange" rel="nofollow"><code>random.randrange</code></a>: </p>
<pre><code>numberone = random.randint(0, 100)   # 0 .. 100
numbertwo = random.randrange(0, numberone)   # 0 .. numberone - 1
</code></pre>
</div>
<span class="comment-copy">When is it larger? It can be the same number, but never larger. Could you be mixing the variables at some point?</span>
<span class="comment-copy">They can be the same. If you want it to be always smaller, use <code>randint(1, 100)</code> and <code>randint(0, numberone - 1)</code> respectively.</span>
<span class="comment-copy">Do you ever redefine the first number in between?</span>
<span class="comment-copy">That is a direct section of code (there is nothing in between) @MalikBrahimi</span>
<span class="comment-copy">That is the only point at which the variables are defined, and they are fed back in that order (numberone then numbertwo) @Zizouz212</span>
<span class="comment-copy">I'm still getting the fault using random.randrange(0, numberone) i'm afraid! :(</span>
<span class="comment-copy">then provide more code</span>
<span class="comment-copy">Moreover, provide sample numbers for cases of failure.</span>
