<div class="post-text" itemprop="text">
<p>I'm having trouble debugging my code because I cannot understand the socket error being raised.
Here is the traceback.</p>
<pre><code>Traceback (most recent call last):
 File "clickpression.py", line 517, in &lt;module&gt; presser.main()
 File "clickpression.py", line 391, in main
 File "clickpression.py", line 121, in clickpress self.refresh_proxies(country=country)
 File "clickpression.py", line 458, in refresh_proxies self.proxies = self.get_proxies(country=country)
 File "helpers.py", line 72, in wrapper return func(*args, **kwargs)
 File "clickpression.py", line 264, in get_proxies self.settings.SUPER_PROXY).read().decode('utf-8')
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 161, in urlopen return opener.open(url, data, timeout)
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 463, in open response = self._open(req, data)
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 481, in _open '_open', req)
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 441, in _call_chain result = func(*args)
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 1210, in http_open return self.do_open(http.client.HTTPConnection, req)
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/urllib/request.py", line 1185, in do_open r = h.getresponse()
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/http/client.py", line 1171, in getresponse response.begin()
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/http/client.py", line 351, in begin version, status, reason = self._read_status()
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/http/client.py", line 313, in _read_status line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
 File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/socket.py", line 374, in readinto return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer
</code></pre>
<p>According to the <code>errno</code> library <code>Errno 54</code> is <code>errno.EXFULL</code> which in the python 3 <a href="https://docs.python.org/3.4/library/errno.html" rel="nofollow">documentation</a> is explained as <code>exchange full</code>.</p>
<p>To my understanding the <code>Connection reset by peer</code> is <code>Errno 104</code> i.e <code>errno.ECONNRESET</code>.</p>
<p>So what does <code>errno.EXFULL</code> mean? and why does socket raise the error with a <code>connection reset by peer</code> description instead of <code>exchange full</code>. And or how are the two errors <code>errno.EXFULL</code> and <code>errno.ECONNRESET</code> related?</p>
<p>PS: I <a href="https://github.com/kennethreitz/requests/issues/171" rel="nofollow">read</a> that the <code>errno 54</code> might be related to http proxy (I'm using a proxy in my code). If so, how?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>According to the <code>errno</code> library <code>Errno 54</code> is <code>errno.EXFULL</code></p>
</blockquote>
<p>Did you determine that by examining <code>errno.errorcode[54]</code>? Anyway - this <em><code>errno</code> library</em> might be at fault. You could verify the meaning of an error code on your system by looking into <code>errno.h</code>, e. g. with the help of <code>gcc</code>:</p>
<pre><code>gcc -xc -imacros errno.h -Wp,-P -E &lt;(echo ECONNRESET)
</code></pre>
<p>Also, the Python <a href="https://docs.python.org/3/library/errno.html" rel="nofollow">documentation</a> says:</p>
<blockquote>
<p>To translate a numeric error code to an error message, use
  os.strerror().</p>
</blockquote>
<p><strike>It may well be that error number 54 is <code>ECONNRESET</code> on your system, and that <code>os.strerror(54)</code> will attest that.</strike></p>
<p>Now that you have verified that <code>os.strerror(54)</code> returns 'Exchange full', I am puzzled why the error number <code>54</code> and the error string <code>Connection reset by peer</code> do not match. If that happens on a system with <code>strace</code> or something similar, I would further check which error is returned by the operating system through use of <code>strace -e network</code> on the affected process.</p>
<p>Regarding your question about EXFULL: Its meaning seems somewhat system dependent; e. g. on Linux, EXFULL is returned from only a handful places in the kernel, the only network-related place being in <a href="http://lxr.free-electrons.com/source/net/bridge/br_if.c#L309" rel="nofollow">br_if.c</a> concerning network bridges, when no available bridge port number is found (other places are in USB and SCSI drivers).</p>
</div>
<div class="post-text" itemprop="text">
<p>I tried to use python to crew coin market on OKEX.com using WebSocket,cause the url is an outer address,i used a vpn service provided by us,but it still can work. here is the code an traceback.</p>
<pre><code>from ws4py.client.threadedclient import WebSocketClient


class DummyClient(WebSocketClient):
    def opened(self):
      # self.send("{'event': 'addChannel', 'channel': 'ok_sub_futureusd_btc_ticker_this_week'}") #发送请求数据格式
         # self.send("www.baidu.com")
         self.send("{'event':'addChannel','channel':'ok_sub_spot_bch_btc_ticker'}")
    def closed(self, code, reason=None):
        print("Closed down", code, reason)

#服务器返回消息
    def received_message(self, m):
        print("recv:", m)


if __name__ == '__main__':

    try:
        # 服务器连接地址wss://real.okex.com:10440/websocket/okexapi
       # ws = DummyClient('wss://real.okcoin.cn:10440/websocket/okcoinapi', protocols=['chat'])
        ws = DummyClient('wss://real.okex.com:10440/websocket/okexapi', protocols=['chat'])
        ws.connect()
        #ws.send("my test...")
        ws.run_forever()
    except KeyboardInterrupt:
        ws.close()
</code></pre>
<p><a href="https://i.stack.imgur.com/0Ms9b.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/0Ms9b.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this code to your project:</p>
<pre><code>import ssl
ssl._create_default_https_context = ssl._create_unverified_context
</code></pre>
<p>if it not work,make sure the server open TLSv1 support.</p>
</div>
<span class="comment-copy">you did not answer my question(s)</span>
<span class="comment-copy">Right - instead I showed ways to vet whether your questions are the right ones, since it is highly questionable whether the shown traceback has anything to do with EXFULL.</span>
<span class="comment-copy">on my system os.strerror(54) returns 'Exchange full' and os.strerror(104) is 'connection reset by peer'</span>
