<div class="post-text" itemprop="text">
<p>I have a list of strings(colors), say </p>
<pre><code>l = ['chocolate brown','brown','chocolate']
</code></pre>
<p>I have a string:</p>
<pre><code>sentence = "The jeans is chocolate brown in color and has brown colored pockets"
</code></pre>
<p>I have to remove <code>chocolate brown</code> and <code>brown</code> from the string. This is just an example. Basically whenever I encounter a color in a string I have to remove it if it exists in the list of colors. What is the efficient way to do it? </p>
<p>One approach that I thought was to split the string into trigrams, bigrams and unigrams. But joining these n-grams back and consistently between all n-grams would be a problem. </p>
<p>My original list is too huge and the string is short. I need an efficient solution since I have to loop over all the elements of the list. Is it possible if I could check the string for the color and then check if that color is in the list. Wouldn't that be an efficient solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/re.html" rel="nofollow"><code>re</code></a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; l = ['chocolate brown','brown','chocolate']
&gt;&gt;&gt; s = "The jeans is chocolate brown in color and has brown colored pockets"
&gt;&gt;&gt;
&gt;&gt;&gt; re.sub('|'.join(re.escape(r) for r in l), '', s)
'The jeans is  in color and has  colored pockets'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = ['chocolate brown','brown', 'chocolate']

sentence = "The jeans is chocolate brown in color and has brown colored pockets"

for word in l:
    # "word + ' '" is for deleting the trailing whitespace after each color word.
    sentence_new = sentence.replace(word + ' ', '') 
    sentence = sentence_new

print(sentence)
</code></pre>
<p>Output:</p>
<pre><code>The jeans is in color and has colored pockets
</code></pre>
<p>Basically just replace what you don't want with what you want (I used an empty string ""), and put this action in a loop.</p>
<p>Note that <code>replace()</code> returns a new string instead of modifying the original string, so you have to put it into a new variable, such as str_new.</p>
</div>
<span class="comment-copy">so chocolate stays in the list?</span>
<span class="comment-copy">Finally the string should be "The jeans is in color and has colored pockets".</span>
<span class="comment-copy"><code>I  have to remove chocolate brown and brown from the list. </code>  is totally different than the above comment.</span>
<span class="comment-copy">@wannaC, now you have two completely contrasting statements, is it from the list or the string?</span>
<span class="comment-copy">@PadraicCunningham: I have updated my question. Sorry for the error.</span>
<span class="comment-copy">could you provide the full code?</span>
<span class="comment-copy">@Akavall Thanks for the comment. I changed it accordingly.</span>
<span class="comment-copy">@AvinashRaj Full code provided above.</span>
<span class="comment-copy">This won't be efficient when my list is huge and string is short.</span>
