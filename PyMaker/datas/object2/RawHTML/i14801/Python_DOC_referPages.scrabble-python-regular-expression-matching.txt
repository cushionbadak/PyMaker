<div class="post-text" itemprop="text">
<p>I am attempting to create a simple scrabble solver program that can create a list of all 3 letter words in the Python words corpus dictionary. I have had a read up on searching for regular expressions in python, however have not yet been able to come up with a solution for my problem.</p>
<p>I am a beginner to python, so this may be a very easy fix or program, but any help would be much appreciated. </p>
<p>Here is my expression, which is meant to return every 3 letter word consisting of only vowels within the dictionary, however it is currently returning every word in the dictionary that contains a vowel! I have a feeling it may be to do with my metacharacters but am unsure.</p>
<pre><code>vowels = [w for w in words if re.search('aeiou$', w)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To store all 3 letter words, consisting only of vowels: </p>
<pre><code>import re

words = ['asd', 'aei', 'a']
result = [w for w in words if re.match(r'[aeiou]{3}$', w)]

print(result)
</code></pre>
<p><code>[asd]</code> would match either <code>'a'</code>, <code>'s'</code> or <code>'d'</code>. <code>{3}</code> would match exactly 3 of those. <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow"><code>match()</code></a> matches the beginning of the string.</p>
<hr/>
<p>Alternatively, if you want to avoid regular expressions: </p>
<pre><code>results = []
for w in words:
    if len(w) == 3:

        for letter in w:
            if letter not in 'aeiou':
                break
        else:
            results.append(w)
</code></pre>
<p>If a non vowel is found, <code>for</code> breaks and its <code>else:</code> is not reached, so the word is not stored.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use anchors, add the <code>y</code> letter that also can be a vowel, and <code>[aeiouy]</code> character class:</p>
<pre><code>   result = [w for w in words if re.match(r'^[aeiouy]{3}$', w)]
</code></pre>
<p>If 'y' is yielding unwanted results, you can remove the <code>y</code> letter from the character class.</p>
<pre><code>   result = [w for w in words if re.match(r'^[aeiou]{3}$', w)]
</code></pre>
</div>
<span class="comment-copy"><i>"it is currently returning every word in the dictionary that contains a vowel"</i> - nope, that regex will match only words that literally end with <code>'aeiou'</code>. <i>"every 3 letter word consisting of only vowels"</i> would be <code>r'^[aeiou]{3}$'</code>. You should try reading a regex tutorial.</span>
<span class="comment-copy">@jonrsharpe My mistake, I should have left out the $ metacharacter. Can you offer any guidance on how to get to my desired output?</span>
<span class="comment-copy"><a href="https://docs.python.org/2/howto/regex.html" rel="nofollow noreferrer">docs.python.org/2/howto/regex.html</a></span>
<span class="comment-copy">Thank you for your help, your regex produced the exact output i was after. As a side note, is it possible to easily edit to regex, to now say match all words with a maximum length of 3 characters? I tried simple adding a &lt; before the 4, however to no avail. Thanks again for your help</span>
<span class="comment-copy">@freshwaterjoe Yes. To do that simply change <code>{3}</code> to <code>{4}</code>. In the link i provided, you can scroll up and read more about symbols used in patterns and their meaning. Offtopic: It would be nice, if you edit your question and change the inaccurate part that @john mentioned.</span>
