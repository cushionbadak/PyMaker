<div class="post-text" itemprop="text">
<p>So i'm creating a little experimental python program and I'm using a little tidbit of code (shown below) to determine if a number is whole or has decimal places.</p>
<pre><code>def isWhole(x):
if(x%1 == 0):
    return "1"
else:
    return "2"
</code></pre>
<p>My problem is that no matter where I go I can't find a way to just take the returned value and assign it to a variable...</p>
<p>Sorry if I seem like an absolute spurglord noob for asking this question but I never even knew that functions could "return" until about 2 days ago, so yeah...</p>
</div>
<div class="post-text" itemprop="text">
<p>like this:</p>
<pre><code>def isWhole(x):
    if(x%1 == 0):
        return "1"
    else:
        return "2"

my_var = isWhole(4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The return value will always be 1.</p>
<pre><code>def isWhole(x):
    if x % 1 == 0:
        return "1"
    else:
        return "2"

if __name__ == "__main__":
    k = isWhole(4)
    print(k)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Answering your question, how to assign a variable, just assign it to the output of the function as below:</p>
<pre><code>var = isWhole(4) #Put any number in instead of 4
</code></pre>
<p>As long as you have a <code>return</code> in your function, you can assign a variable to the output:</p>
<pre><code>&gt;&gt;&gt; def foo():
...    return "bar"
...
&gt;&gt;&gt; var = foo()
&gt;&gt;&gt; var
"bar"
&gt;&gt;&gt;
</code></pre>
<p>However if you do not have a <code>return</code>, then it returns <code>None</code>, so beware :)</p>
<pre><code>&gt;&gt;&gt; def bar():
...    print "foo"
...
&gt;&gt;&gt; var = bar()
foo
&gt;&gt;&gt; var
None
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As others have explained, you can just assign the result of calling the function to a variable name to save the value. Perhaps equally important though, is the fact that the code shown in your function will always return <code>"1"</code> since the value of <code>x%1</code> is always going to be <code>0</code> regardless of the value of <code>x</code> (assuming its value is non-zero and a type with a <a href="https://en.wikipedia.org/wiki/Modulo_operation" rel="nofollow">modulo operator</a>).</p>
<p>I would suggest that tou instead implement your function to return a <code>True</code> or <code>False</code> value and do it like the following:</p>
<pre><code>def is_whole(x):
    return float(x).is_integer()
</code></pre>
<p>(See the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=is_integer#float.is_integer" rel="nofollow"><code>is_integer</code></a> documentation for more information.)</p>
<p>You can assign the result of calling this function to a variable as shown below:</p>
<pre><code>result1 = is_whole(21./7.)  # assign function return value to a variable
result2 = is_whole(22./7.)  # assign function return value to another variable

print(result1)  # --&gt; True
print(result2)  # --&gt; False
</code></pre>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/3501382/checking-whether-a-variable-is-an-integer-or-not" title="checking whether a variable is an integer or not">stackoverflow.com/questions/3501382/â€¦</a>  You should return true or False instead of 1 or 2 :)</span>
<span class="comment-copy">After you figure out what value to use for <code>%</code> (hint: x % 1 is ALWAYS 0), you can use <code>(1,2)[x % 2]</code> for example to return 1 or 2 based on even / odd</span>
<span class="comment-copy">@Florian: In this case you could do that with <code>return x%1 == 0</code> (which would always return <code>True</code>, for the previously stated reason).</span>
