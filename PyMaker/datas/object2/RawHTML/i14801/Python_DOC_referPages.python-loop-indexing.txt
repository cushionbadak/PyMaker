<div class="post-text" itemprop="text">
<p>I'm working through a book on Python3 and linear algebra.  I'm trying to take a string with the format 'name junk junk 1 1 1 1 1' and make a dictionary with the name in the and the numbers converted from strings to ints.  i.e. {name:[1,1,1,1,1]}  But I can't quite figure out the loop, as I'm a python newbie.  Here's my code:</p>
<pre><code>string = 'Name junk junk -1 -1 1 1'
for i, x in string.split(" "):
        if i == 0:
            a = x
        if i &gt; 2:
            b = int(x)
</code></pre>
<p>Running that code nets the following error:</p>
<pre><code>Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: too many values to unpack (expected 2)
</code></pre>
<p>Ideally I'd also like it to be a comprehension.  But I can probably figure that part out if I can get the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>Did you mean to use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a>?</p>
<pre><code>for i, x in enumerate(string.split(" ")):
     # ...
</code></pre>
<p>Using a list comprehension:</p>
<pre><code>tokens = string.split() # Splits by whitespace by default, can drop " "
result = {tokens[0]: [int(x) for x in tokens[3:]]} # {'Name': [-1, -1, 1, 1]}
</code></pre>
</div>
<span class="comment-copy">In Python, assignments are statements (only), not expressions. I'm not sure what you are trying to do with a and b, but it could be difficult to turn it into a single comprehension, since the first element of a comprehension is an expression.</span>
<span class="comment-copy">What about that "junk junk"? Just junk?</span>
<span class="comment-copy">I never thought about doing it that way.  Thanks!!</span>
