<div class="post-text" itemprop="text">
<p>I have about 20,000 postal codes in a CSV file in one column. I'm trying to extract some geographic electoral data based on these postal codes through an API. The url for this API iterates towards the end (where postal codes change for each iteration). I tried a number of different code samples, but none of them work. </p>
<p>EDIT: Pasting a sample below that I now know doesn't work - primarily because I don't need a strip function. However, how do I get the loop to pull in postal codes from CSV file directly? Also pasting error messages I get. </p>
<hr/>
<pre><code>    responses = list()

    with open("testpostal.csv") as f:
        for postal in map(str.strip,f):     
            rrr = requests.get('https://represent.opennorth.ca/postcodes/{}'.format(postal))
            data = json.loads(rrr.text)
            responses.append(data)

    print(responses)
</code></pre>
<hr/>
<hr/>
<pre><code>JSONDecodeError                           Traceback (most recent call last)
&lt;ipython-input-182-05e370407e9c&gt; in &lt;module&gt;()
      9     for postal in map(str.strip,f):
     10         rrr = requests.get('https://represent.opennorth.ca/postcodes/{}'.format(postal))
---&gt; 11         data = json.loads(rrr.text)
     12         responses.append(data)
     13 

~/anaconda3/lib/python3.7/json/__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
    346             parse_int is None and parse_float is None and
    347             parse_constant is None and object_pairs_hook is None and not kw):
--&gt; 348         return _default_decoder.decode(s)
    349     if cls is None:
    350         cls = JSONDecoder

~/anaconda3/lib/python3.7/json/decoder.py in decode(self, s, _w)
    335 
    336         """
--&gt; 337         obj, end = self.raw_decode(s, idx=_w(s, 0).end())
    338         end = _w(s, end).end()
    339         if end != len(s):

~/anaconda3/lib/python3.7/json/decoder.py in raw_decode(self, s, idx)
    353             obj, end = self.scan_once(s, idx)
    354         except StopIteration as err:
--&gt; 355             raise JSONDecodeError("Expecting value", s, err.value) from None
    356         return obj, end

JSONDecodeError: Expecting value: line 1 column 1 (char 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python provides a <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">CSV module</a>, with which you can do the following:</p>
<pre><code>import csv,requests
URL = 'https://represent.opennorth.ca/postcodes/%s'
responses = []
with open("testpostal.csv") as csv_file:
   csv_reader = csv.reader(csv_file)
   for row in csv_reader:
       responses.append(requests.get(URL % row[0]).json())
</code></pre>
<p>This will let skip the annoyance of dealing with parsing the CSV file. The above code works for me if I use Canadian zip codes with no spaces. </p>
</div>
<div class="post-text" itemprop="text">
<p>Include the errors you get which will point you in the right direction. 
For starters though, </p>
<pre><code>map(str.strip, f) 
</code></pre>
<p>probably doesn't mean anything. </p>
<p>When using the strip function, you should include what you are wanting to 'strip', and the string that you are stripping from. 
For example, from <a href="https://www.tutorialspoint.com/python/string_strip.htm" rel="nofollow noreferrer">this</a> tutorial:</p>
<pre><code>str = "0000000this is string example....wow!!!0000000";
print str.strip( '0' )
</code></pre>
<p>returns: </p>
<pre><code>this is string example....wow!!!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Okay, so I figured out what I was doing wrong. I just got python to read my csv column as a list, and then used a for loop to get my results in json format. Pasting the code below, in case it's helpful to anyone:</p>
<pre><code>import csv

with open('PC2.csv','r') as f:
    lines = f.read()
    list = lines.split('\n')

postcodes = list #not really necessary but I wanted to preserve specific names
response = []

for postcode in postcodes:
    rr = requests.get('https://represent.opennorth.ca/postcodes/{}'.format(postcode))
    data = json.loads(rr.text)
    response.append(data)



print(response)
</code></pre>
</div>
<span class="comment-copy">It works here. Try to print the content of the formatted URL and <code>rrr.text</code>. The code probably failed to retrieve the JSON data.</span>
<span class="comment-copy">Thanks for this. However, it returns an empty list for responses. I'm not entirely sure why - I do have my postal codes stored in the first column on the csv file (and nothing else)...</span>
<span class="comment-copy">Ah gotcha - I actually cleaned up my CSV file (initially had postal codes formatted incorrectly). So didn't need the strip function after all. Thanks for the tip on posting errors - I'll edit my question now.</span>
