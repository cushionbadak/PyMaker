<div class="post-text" itemprop="text">
<p>I am new here and new to coding with python. I recently started an online coarse  and wanted to see if there was an easier way that I could have created a 12 digit random hex list. I wanted each individual bit to be a random number or letter either lowercase or uppercase. Based on my rookie research this was the best I could find and created my own code.. so could I have done this a lot simpler and efficient? </p>
<pre><code>#!/user/bin/python
import string
import random 

r1 = random.choice(string.hexdigits)
r2 = random.choice(string.hexdigits) 
r3 = random.choice(string.hexdigits)  
r4 = random.choice(string.hexdigits) 
r5 = random.choice(string.hexdigits)
r6 = random.choice(string.hexdigits)
r7 = random.choice(string.hexdigits)
r8 = random.choice(string.hexdigits)
r9 = random.choice(string.hexdigits)
r10 = random.choice(string.hexdigits)
r11 = random.choice(string.hexdigits)
r12 = random.choice(string.hexdigits)

randnumb = r1+r2+":"+r3+r4+":"+r5+r6+":"+r7+r8+":"+r9+r10+":"+r11+r12

print(randnumb)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a loop with <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>:</p>
<pre><code>from random import choice
from string import hexdigits

print(":".join(choice(hexdigits) + choice(hexdigits) for _ in range(6)))
# 47:8b:FA:71:90:ea
</code></pre>
<p>Which combines two random hex digits 6 times, equivalent to your 12 separate calls.</p>
<p>Or as <a href="https://stackoverflow.com/questions/53579114/is-there-an-easier-way-to-have-done-my-code/53579208?noredirect=1#comment94022060_53579208">@Jon Clements</a> suggests in the comments:</p>
<pre><code>':'.join(format(choice(range(256)), 'x') for _ in range(6))
</code></pre>
<p>Which uses Hex format <code>'x'</code> with <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer"><code>format()</code></a> across all 256 <em>ASCII</em> characters. </p>
<p>Additionally, to be super safe you can pad format to 2 characters with <code>02x</code>/<code>02X</code>:</p>
<pre><code>format(choice(range(256)), '02x') # lowercase padding
format(choice(range(256)), '02X') # uppercase padding
</code></pre>
<p><code>x</code> is lower-case hexadecimal and <code>X</code> is upper-case hexidecimal. It's good to be consistent here to avoid strange lowercase and uppercase mixings. One example of this consistency is MAC addresses, where the hexidecimal strings are only in lowercase. </p>
<p>You can read more about this and its variations in the <a href="https://docs.python.org/3.7/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">Format Specification Mini-Language</a>. </p>
<p>Another thing you can do is replace <code>choice(range(256))</code> with <code>random.randrange(256)</code>, avoiding the need to use <code>range()</code>. </p>
</div>
<span class="comment-copy">Hi there, welcome to StackOverflow. For your information, <a href="http://idownvotedbecau.se/imageofcode" rel="nofollow noreferrer">images of code are highly discourages</a>.</span>
<span class="comment-copy">Please post your code as text, not images. Also, if your code is already working and you only want to improve it, your question is probably off-topic for SO, and might be more relevant on Code Review.</span>
<span class="comment-copy">Or... <code>':'.join(format(choice(range(256)), 'x') for _ in range(6))</code>...</span>
<span class="comment-copy">@JonClements Very nice. I added your answer in.</span>
<span class="comment-copy">@RoadRunner Hey thanks for the help. I'm pretty new to coding in general and I can kinda understand the code you suggested, but I don't know how to run it. I just typed the 3 lines in and nothing happened. what else did you put in if its not too much to ask.  or what was the full code</span>
<span class="comment-copy">@Jbravo The first snipped of code I wrote in the interpreter, I put nothing else in. If you paste the first example in, it should work. I'm not sure what your python enviorment is, but I run scripts with <code>python &lt;your python script&gt;</code> in the command line.</span>
<span class="comment-copy">Yup... <code>x</code> is for lower case and <code>X</code> is for upper case hex digits... keeps it consistent, otherwise since <code>string.hexdigits</code> is <code>'0123456789abcdefABCDEF'</code> you can end up with an odd looking (but still valid) string, eg: <code>aA:Fe</code> kind of thing when choosing randomly from it.</span>
