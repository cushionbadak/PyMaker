<div class="post-text" itemprop="text">
<p>I've got a very simple python program I wrote to learn pygame, and among other things I use an image.</p>
<p>When I run the program with PyCharm, or when I run it by double-clicking on the file, it works fine. However, if I try to run it through the command prompt, I get the following error:</p>
<pre><code>C:\Users\julix&gt;C:\Users\julix\Documents\test\pygame_tutorial.py
pygame 1.9.4
Hello from the pygame community. https://www.pygame.org/contribute.html
Traceback (most recent call last):
  File "C:\Users\julix\Documents\test\pygame_tutorial.py", line 21, in &lt;module&gt;
    carImg = pygame.image.load("racecar.png")
pygame.error: Couldn't open racecar.png
</code></pre>
<p>This is the line in my code it refers to:</p>
<pre><code>carImg = pygame.image.load("racecar.png")
</code></pre>
<p>The image "racecar.png" is located in exactly the same directory as the program.
The confusing part is that my code seems to be fine since there are no errors when I run it by double-clicking.</p>
<p>Can post full code if necessary. 
Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>The fact, that the file is in the same directory as the program doesn't matter. If you don't provide a path the program will look for the file in the working directory which might be a total different one.</p>
<p>If you want to use a specific directory add your path to the filename. A flexible approach would be to determine the path of the current file and use that. Python has a way to do that with <a href="https://docs.python.org/3/library/os.path.html#os.path.dirname" rel="nofollow noreferrer"><code>os.path.dirname</code></a>.</p>
<pre><code>import os.path
print(os.path.dirname(__file__))
</code></pre>
<p>In this case it would lead to the following code:</p>
<pre><code>import os.path
filepath = os.path.dirname(__file__)
carImg = pygame.image.load(os.path.join(filepath, "racecar.png"))
</code></pre>
</div>
<span class="comment-copy">Did you try doing <code>carImg = pygame.image.load(os.path.join(os.path.dirname(__file__), "racecar.png")</code></span>
<span class="comment-copy">Thank you. Matthias's solution, which I marked as accepted answer below, worked for me. I believe it takes the same approach, so this would probably have worked too.</span>
<span class="comment-copy">Thank you very much, adding this to my code worked. But I don't understand what exactly the "working directory" is. Could you explain that?</span>
<span class="comment-copy">Let's say in your console you are in directory <code>/usr/bin</code>. Then you call a program in an other directory like <code>/home/me/myscript.py</code>. Your program is still located in <code>/home/me</code>, but the working directory is <code>usr/bin</code>. In your case the working directory is <code>C:\Users\julix</code>, but the script is in <code>C:\Users\julix\Documents\test</code>.</span>
<span class="comment-copy">Ah, I see. Thank you! I tried changing the working directory in the console and then ran the original program again (commenting out your solution), and it worked</span>
<span class="comment-copy">Over the years I developed a habit to use the flexible approach with <code>dirname</code>. Of course I didn't repeat the call to <code>dirname</code> all the time. Determining the value once at the start of the script is enough.</span>
