<div class="post-text" itemprop="text">
<pre><code>import urllib.request, 

urllib.parse, urllib.error
from bs4 import BeautifulSoup

url = "https://api.monzo.com/crowdfunding-investment/total"
html = urllib.request.urlopen(url).read()
soup = BeautifulSoup(html)

# kill all script and style elements
for script in soup(["script", "style"]):
    script.extract()    # rip it out

# get text
text = soup.get_text()

if 'invested_amount' in text:
    result = text.split(",")

invested = str(result[1])
investedn = invested.split(':')[1]

print(investedn)
</code></pre>
<p>Hi all. Iâ€™m trying to split investedn into thousands with commas. Anyone know how to do this?</p>
<p>Also, how can I remove the last four numbers from the string?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Simply use</p>
<pre><code>"{:,}".format(number)
</code></pre>
<p><a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">https://docs.python.org/3/library/string.html#format-specification-mini-language</a></p>
<p>e.g.</p>
<pre><code>In [19]: "{:,}".format(17462233620)
Out[19]: '17,462,233,620'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Managed to fix!</p>
<pre><code>import urllib.request, urllib.parse, urllib.error
from bs4 import BeautifulSoup

url = "https://api.monzo.com/crowdfunding-investment/total"
html = urllib.request.urlopen(url).read()
soup = BeautifulSoup(html)

# kill all script and style elements
for script in soup(["script", "style"]):
    script.extract()    # rip it out

# get text
text = soup.get_text()

if 'invested_amount' in text:
    result = text.split(",")

invested = str(result[1])
investedn = invested.split(':')[1]
plainnum = int(str(investedn)[:-4])
number = "{:,}".format(int(plainnum))

print(number)
</code></pre>
<p>I had messed up quite a bit, but figured it out.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>The text you got back from that URL is not HTML. It is data encoded in JSON format, which is easy to parse:</p>
<pre><code>import urllib.request
import json

url = "https://api.monzo.com/crowdfunding-investment/total"
json_text = urllib.request.urlopen(url).read()
json_text = json_text.decode('utf-8')
data = json.loads(json_text)
print(data)
print('Invested amount: {:,}'.format(data['invested_amount']))
</code></pre>
<p>Output:</p>
<pre><code>{'invested_amount': 17529735495, 'share_price': 77145, 'shares_invested': 227231, 'max_shares': 2592520, 'max_amount': 199999955400, 'status': 'pending'}
Invested amount: 17,529,735,495
</code></pre>
<p><strong>Notes</strong></p>
<ul>
<li><code>json_text</code> was an array of bytes, not a string. That is why I decode it using a guess of UTF-8.</li>
<li><code>data</code> is just a normal Python dictionary.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = "17462233620"
b = ""
for i in range(len(a), 0 , -3):
  b = a[i-3:i]+","+b
b = "Â£" + a[0:i] + b[:-1]
print(b) # Output Â£17,462,233,620
</code></pre>
</div>
<span class="comment-copy">Post examples of the input and output you get and want.</span>
<span class="comment-copy">For example an input might be 17462233620, and I'd like it to come out as Â£1,745,223. Thanks!</span>
<span class="comment-copy">This splits it, but it makes it seem as if its Â£17 million, not Â£1.7 million. Any way I can remove the numbers on the right? Thanks!</span>
<span class="comment-copy">Thanks for the help! I cleaned it up and used requests instead.</span>
<span class="comment-copy">Why the downvote really?</span>
<span class="comment-copy">Thanks for the help! Appreciate it.</span>
<span class="comment-copy">Please consider upvoting, thanks you!</span>
<span class="comment-copy">I have - I donâ€™t think my votes appear though because I donâ€™t have enough credit ðŸ™‚</span>
<span class="comment-copy">Sure, thanks anyways</span>
