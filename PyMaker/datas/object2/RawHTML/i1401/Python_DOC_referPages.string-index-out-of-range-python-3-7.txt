<div class="post-text" itemprop="text">
<p>I'm trying to write a function for a text rpg game that would print on terminal everything that is in specific marker, but I keep getting this error message:</p>
<pre><code>IndexError: string index out of range
</code></pre>
<p>Marked text in a file looks like this:</p>
<blockquote>
<p>|d0Dyspergator:
  "Pulvis es et in pulverem revertis"
  Raz na dwie walki i tylko raz w walce pozwala na uniknięcie następnego ataku przeciwnika
  poprzez chwilowe zamienienie Cię w atomowy pył.|</p>
</blockquote>
<p>where the pipe and first two symbols after it begin the marker, next pipe ends it.
Here is the code:</p>
<pre><code>def bard(paragraph, point, file):
    with open(file, 'r', encoding='utf-8') as w:
        d = w.read()
        index = 0
        tab = []
        frag = 0
        while frag == 0:
            if d[index] == '|'and d[index + 1] == paragraph and d[index + 2] == point:
                while d[index+3] != '|' and index + 3 &lt;= len(d):
                    tab.append(d[index+3])
                    index += 1
                frag += 1
            else:
                index += 1
        a = ''.join(tab)
        print(a)
    return
</code></pre>
<p>I would be very thankful for any help, I am new to programming and I probably made a stupid mistake.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to do pattern matching on text. Ever heard of <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expression</a>? </p>
<p>It is exactly what they are build for: </p>
<pre><code>text = """This is some text.
|2. second 
thing| more text
|3. thingding is after the marker and this text also.
This texts ends what I want| and this text should not be found..
also not found."""
with open("t.txt","w") as  f: 
    f.write(text)
</code></pre>
<p>Program:</p>
<pre><code>with open("t.txt") as r:
    data = r.read()

import re
pattern = r'\|\d+\..*?\|'
k = re.findall(pattern,data,re.MULTILINE|re.DOTALL)

print(k)
</code></pre>
<p>Output:</p>
<pre><code>['|2. second \nthing|', 
 '|3. thingding is after the marker and this text also.\nThis texts ends what I want|']
</code></pre>
<p>The pattern <code>r'\|\d+\..*?\|'</code> I use looks for:</p>
<pre><code>\|          matches the character | literally (case sensitive)
\d+         matches a digit (equal to [0-9])
    +           Quantifier — one to unlimited times, as many as possible
\.          matches the character . literally (case sensitive)
.*?         matches any character 
    *?          Quantifier — zero to unlimited times, as few as possible 
\|          matches the character | literally (case sensitive)
</code></pre>
<p>You can play around with it here: <a href="https://regex101.com/r/65R2gq/1/" rel="nofollow noreferrer">https://regex101.com/r/65R2gq/1/</a></p>
<p>If you only need the text, you can use capturing groups - change the pattern to </p>
<pre><code>pattern = r'\|\d+\.(.*?)\|'
</code></pre>
<p>to get</p>
<pre><code>[' second \nthing', 
 ' thingding is after the marker and this text also.\nThis texts ends what I want']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that a) this data structure with the piles and initial two (and exactly two) characters is a format you have developed yourself, and you control that it is consistently used, then you don't really need to go to any lengths least of all resort to <a href="https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/" rel="nofollow noreferrer">regular expressions</a>.</p>
<pre class="lang-py prettyprint-override"><code>foo = '|d0Dyspergator: "Pulvis es et in pulverem revertis" Raz na dwie walki i tylko raz w walce pozwala na uniknięcie następnego ataku przeciwnika poprzez chwilowe zamienienie Cię w atomowy pył.|'
foo.split('|')[1][2:]
'Dyspergator: "Pulvis es et in pulverem revertis" Raz na dwie walki i tylko raz w walce pozwala na uniknięcie następnego ataku przeciwnika poprzez chwilowe zamienienie Cię w atomowy pył.'
</code></pre>
</div>
<span class="comment-copy">You are accessing a list behind its data. Here <code>if d[index] == '|'and d[index + 1] == paragraph and d[index + 2]</code> you add 1 and 2 to the index - if index ever reaches <code>len(d)-2</code> or more, you access behind it. Use print statements to figure it out and adapt your logic.</span>
<span class="comment-copy">What should be the result in <code>a</code>? and why do you not return it?</span>
<span class="comment-copy">The result I'm seeking is printinting the whole text in the marker. But I see now that I have logic errors, thanks for pointing that out</span>
<span class="comment-copy">Thanks a lot for your time and patience!</span>
