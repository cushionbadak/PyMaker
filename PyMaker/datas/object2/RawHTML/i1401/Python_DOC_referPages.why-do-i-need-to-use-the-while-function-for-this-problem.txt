<div class="post-text" itemprop="text">
<p>In Python 3, we are currently learning how to use the 'while' function. The following problem was posed to us in the chapter about 'while' functions, so I would assume I need to use the 'while' function for the problem. However, I feel like I could solve the problem using 'if' statements rather than a 'while' statement. Can someone please tell me if I'm wrong? </p>
<p>"A movie theater charges different ticket prices depending on a person's age. If a person is under the age of 3, the ticket is free; if they are between 3 and 12, the ticket is $10; and if they are over age 12, the ticket is $15. Write a loop in which you ask users their age, and then tell them the cost of their movie ticket."</p>
<p>My code: </p>
<pre><code>age = input("How old are you? ")
age = int(age)
if age &lt; 3:
     print("Your ticket is free.")
elif age &gt; 3 and age &lt; 12:
     print("Your ticket is $10")
elif age &gt; 12:
     print("Your ticket is $15")
</code></pre>
<p>Will this solve the problem? Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Write a loop in which you ask users their age, and then tell them the cost of their movie ticket</p>
</blockquote>
<p>You have to ask <strong>multiple</strong> users their age in loop</p>
</div>
<div class="post-text" itemprop="text">
<p>As pointed out already, your program should loop to allow many users to get the ticket price.  Always make sure that you do not get stuck in an infinite loop, however, so you need to consider a way to escape the loop.  I would suggest that the user can enter something like "Q" to quit.... however then you must consider:
uppercase or lowercase... making the user input lowercase (only) for comparison takes care of this, so entering a "Q" will allow the loop to exit using the break statement.</p>
<p>Next, you should also consider that a user may enter "ten" for example, so to stop the float() "blowing up" and spitting an exception, using a try/except would handle this.</p>
<p>it is essentially "try to execute this code, and if it doesn't explode, continue" and except is like the "else" when using an if statement.</p>
<p>I hope this explains the need for a loop, but also other considerations when writing such programs, and how you might approach handling them.</p>
<pre><code>while True:
    age = input("\nHow old are you? (Q to quit)")
    if age.lower() == "q":
        break
    try:
        age = int(age)
        if age &lt;= 3:
             print("Your ticket is free.")
        elif age &gt; 3 and age &lt;= 12:
             print("Your ticket is $10")
        elif age &gt; 12:
             print("Your ticket is $15")
    except:
        print("Invalid entry")
print("\nGoodbye")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As per <a href="https://stackoverflow.com/a/53546711/225020">Leo stated</a>, this is asking multiple users. Use:</p>
<pre><code>age = None
while age is not "done": #or while True: for infinitely asking
    #insert your code
</code></pre>
<p>This will keep asking for an age until <code>"done"</code> is input</p>
</div>
<div class="post-text" itemprop="text">
<p>'While' statement in this exercise is not for the 'age' variable but for the 'ask' process.</p>
</div>
<span class="comment-copy">Your code asks only once. Note that the task is to ask users, plural.</span>
<span class="comment-copy">Use a while loop to either ask multiple users for their ages, or to ask them again if they enter an invalid input.</span>
<span class="comment-copy">It literally says <i>"write a loop"</i>, that's why.</span>
<span class="comment-copy">BTW, what if someone is exactly 3 or exactly 12? You don't account for that here.</span>
<span class="comment-copy">Read <a href="https://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Ask user for input until they give a valid response</a> - this is another application of the <code>while</code> to avoid joke-inputs like <code>I am fourty-nine</code> which currently will crash your program because the <code>int()</code> conversion can not handle the input and throws an exception. Read about exceptions here: <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html#handling-exceptions</a>   or from the answers in the link to the question <code>Ask ... </code> I provided.</span>
<span class="comment-copy"><code>age = input("\nHow old are you? (Q to quit)").lower()</code> works as well</span>
<span class="comment-copy">and in this special instance you could get away without <code>try: except:</code> by using <code>if age.strip().Ã¬sdigit():</code> ... but your solution is superior and more advanced.</span>
<span class="comment-copy">Thanks Patrick.  I figured it might be easier for a learner to grasp...</span>
<span class="comment-copy">your <code>elif</code>'s can be rewritten to <code>elif 3 &lt; age &lt; 12:</code> (nitpicking ;o) ) and if the ranges would be better specified so that 3y and 12y are able to purchase a ticket as well you could even go for <code>elif age&lt;12:</code> because all youngers would have been captured by the earlier <code>if age &lt; 3:</code> code block</span>
<span class="comment-copy">The code will crash as soon as a non-integer is given anyway ...</span>
<span class="comment-copy">True, either way I <code>try</code>ied</span>
