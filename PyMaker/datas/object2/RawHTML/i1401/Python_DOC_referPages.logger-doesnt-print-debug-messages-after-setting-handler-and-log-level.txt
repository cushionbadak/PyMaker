<div class="post-text" itemprop="text">
<p>I have the following minimalist example of a <code>logging</code> test based on the <a href="https://docs.python.org/3/howto/logging-cookbook.html#using-a-context-manager-for-selective-logging" rel="nofollow noreferrer">Logging Cookbook</a>:</p>
<pre><code>import logging

logger = logging.getLogger('test')
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)

formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - '
                              '%(message)s')

ch.setFormatter(formatter)
logger.addHandler(ch)


print(logger.handlers)
logger.debug('hello world')
</code></pre>
<p>The above produces the following output:</p>
<pre><code>$ python test_log.py
[&lt;StreamHandler &lt;stderr&gt; (DEBUG)&gt;]
</code></pre>
<p>As I've defined a handler and set the log level to debug, I was expecting the <code>hello world</code> log message to show up in the sample above.</p>
</div>
<div class="post-text" itemprop="text">
<p>If a logger's level isn't explicitly set, the system looks up the level of ancestor loggers until it gets to a logger whose level is explicitly set. In this case, it's the root logger which is the parent of the logger named 'test'. Setting the level of either this logger or the root logger to DEBUG will result in the log message being output. See <a href="https://docs.python.org/3/howto/logging.html#logging-flow" rel="nofollow noreferrer">this part</a> of the documentation for the event information flow in Python logging.</p>
</div>
<span class="comment-copy">Because your logger (not the handler) has level <code>NOTSET</code> in your example code, which means it will propagate the event to its only ancestor, the root logger, which does not have a handler to actually output something. As much as I dislike referencing my own answers; <a href="https://stackoverflow.com/a/53477132/4134674">here's</a> the long version of an answer. The short version would be: Add <code>logger.setLevel(logging.DEBUG)</code> to your code before you start using the logger.</span>
