<div class="post-text" itemprop="text">
<pre><code># check if string is panagram (phrase which contains every letter of the
# alphabet)

def panagram_check(str0, alphabet=string.ascii.lowercase):

        alltrues = [True,True,True,True,True,True,True,True,True,True,
                    True,True,True,True,True,True,True,True,True,True,
                    True,True,True,True,True]

        # so let's build this list...

        list_of_bools = []

        for achar in alphabet:

            for bchar in str0:
                if achar != bchar:
                    zerocheck = False

                else:  zerocheck = True

            list_of_bools = list_of_bools+zerocheck

        return (list_of_bools==alltrues)
</code></pre>
<p>This returns error "name string is not defined" which also confuses me
but if lambda expressions help this be not ugly, any clues?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could check if every letter from the alphabet (<a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase" rel="nofollow noreferrer">ascii_lowercase</a>) is in the phrase using <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">all</a>:</p>
<pre><code>import string


def panagram_check(phrase, alphabet=string.ascii_lowercase):
    uniques_letters_in_phrase = set(phrase.lower())
    return all(letter in uniques_letters_in_phrase for letter in alphabet)


print(panagram_check("Two driven jocks help fax my big quiz.â€‹"))
print(panagram_check("Not a panagram"))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>True
False
</code></pre>
<p>The statement: <code>uniques_letters_in_phrase = set(phrase.lower())</code> converts the phrase to a set, with the purpose of speeding the containability check. Note that you must import string to have access to <code>ascii_lowercase</code>. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import string

def panagram_check(str0, alphabet=string.ascii.lowercase):
    return set(str0.lower()) &amp; set(alphabet) == set(alphabet)
</code></pre>
</div>
<span class="comment-copy">did you <code>import string</code>?</span>
