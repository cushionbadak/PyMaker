<div class="post-text" itemprop="text">
<p>I trying to make a server &amp; client a alike program without socket, because I can't use the internet to pass the data.
I tried with pipe stdin but I couldn't make that work... 
What are my options?</p>
<p>Server:</p>
<pre><code>def main():
try:
    res = ""
    while res != "exit":
        res = input()
        print("\n", res, "\n")
except EOFError as e:
    print(e)

if __name__ == "__main__":
    main()
</code></pre>
<p>Client:</p>
<pre><code>import subprocess
import os
import sys

def main():
    p = subprocess.Popen(['python', 'b.py'], stdin=subprocess.PIPE)
    res = ""
    while res != "exit":
        res = os.fsencode(input("&gt;&gt; "))
        p.stdin.write(res)

if __name__ == "__main__":
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your task is called interprocess communication or IPC. Python provides <a href="https://docs.python.org/3/library/ipc.html" rel="nofollow noreferrer">a number of ways</a> to achieve this.</p>
<p>Probably the best way is to actually use sockets. If you are binding socket to a localhost address (127.0.0.1), then all communication takes place through virtual network adapter on your machine (loopback adapter). No data actually passes over the network.</p>
<p>Another, more platform dependent way is to use unix sockets (basically sockets with file-like entity as the address, with permissions determining who can read or write to it) or use named pipes (basically virtual files that don't store the information, just pass it through like a pipe. They are quite fiddly).</p>
<p>Memory mapped areas are much more complex to work with, and generally require some other mechanism to synchronize the state of the data, but they reward you with supreme speeds and random access capabilities. You probably should not use this for your server/client program...</p>
<p>P.S.: StackOverflow would be nicer, if you would add your code and expand "couldn't make that work" to a full explanation of your actions.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have many options , socket (the easiest one) not necessarily the data pass through internet just if you have some restriction , pipes or shared memories (the difficult one)</p>
</div>
<span class="comment-copy">What went wrong when using <code>stdin</code>? Are client and server on the same host?</span>
<span class="comment-copy">Sorry you are right, I added my code.</span>
