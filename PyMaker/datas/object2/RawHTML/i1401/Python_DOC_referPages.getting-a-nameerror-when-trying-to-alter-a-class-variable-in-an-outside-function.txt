<div class="post-text" itemprop="text">
<p>I am currently working on developing a jukebox/music player in python. In order to make the code more organized, I arranged it into specific classes. A few of the outside functions require accessing class variables and updating them. However, the program throws off the following error:</p>
<pre><code> File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tkinter/__init__.py", line 1702, in __call__
    return self.func(*args)
  File "jukeboxDraft.py", line 77, in nextSong
    constructGUI.index += 1
NameError: name 'constructGUI' is not defined
</code></pre>
<p>The classes and the functions accessing the class variables are in the following code block: </p>
<pre><code>import os
import pygame
from tkinter.filedialog import askdirectory
from tkinter import *
import eyed3

class JukeboxContent:
    def __init__(self):
        listOfSongs = []
        songTitles = []
        directory = askdirectory()
        self.listOfSongs = listOfSongs
        self.songTitles = songTitles
        self.directoryAsk = directory
        self.Error_NoMP3s = "No \".mp3\" files found."

    def directoryChooser(self):
        self.directoryAsk
        os.chdir(self.directoryAsk)

        for files in os.listdir(self.directoryAsk):
            if files.endswith(".mp3"):
                realdir = os.path.realpath(files)
                audioTag = eyed3.load(realdir)
                self.songTitles.append(audioTag.tag.title)
                self.listOfSongs.append(files)
                #print(files)

        pygame.mixer.init()
        pygame.mixer.music.load(self.listOfSongs[0])
        pygame.mixer.music.play()



class JukeboxGUI(JukeboxContent):
    index = 0
    def __init__(self, window):
        JukeboxContent.__init__(self)
        self.back = Frame(master = window, width=500, height=500,  bg='pink')
        self.label = Label(window, text = "Jukebox")
        self.listBox = Listbox(window)
        self.nextButton = Button(window, text = "Next Song")
        self.previousButton = Button(window, text = "Previous Song")
        self.stopButton = Button(window, text = "Stop")
        self.labelVar = StringVar()
        self.songLabel= Label(window, textvariable = self.labelVar, width = 50)

    def constructButtons(self):
        self.back.pack()
        self.label.pack()
        self.listBox.pack()
        for items in self.listOfSongs:
            self.listBox.insert(END, items)
        self.nextButton.pack()
        self.previousButton.pack()
        self.stopButton.pack()

    def updateLabel(self):
        self.labelVar.set(self.songTitles[self.index])

#-------------------------JUKEBOX FUNCTIONS-------------------------------------


def main():
    window = Tk()
    window.title("Jukebox")
    initiateJukebox = JukeboxContent()
    initiateJukebox.directoryChooser()
    constructGUI = JukeboxGUI(window)
    constructGUI.constructButtons()
    constructGUI.nextButton.bind("&lt;Button-1&gt;", nextSong)
    constructGUI.previousButton.bind("&lt;Button-1&gt;", previousSong)
    constructGUI.stopButton.bind("&lt;Button-1&gt;", stopSong)
    window.mainloop()

def nextSong(event):
    constructGUI.index += 1
    pygame.mixer.music.load(initiateJukebox.listOfSongs[constructGUI.index])
    pygame.mixer.music.play()
    constructGUI.updateLabel()

def previousSong(event):
    constructGUI.index -= 1
    pygame.mixer.music.load(initiateJukebox.listOfSongs[constructGUI.index])
    pygame.mixer.music.play()
    constructGUI.updateLabel()

def stopSong(event):
    pygame.mixer.music.stop()
    constructGUI.labelVar.set("")



if __name__ == '__main__':
    main()
</code></pre>
<p>How should I edit my "JukeboxGUI" class or the "constructGUI" variable to solve this? Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>constructGUI</code> is defined in <code>main</code>, so it won't be accessible outside of that function. </p>
<p>Make <code>constructGUI</code> a global variable by putting a placeholder outside of the function in the global scope. If you need to modify it within a function (which it looks like you are), make sure to add <code>global constructGUI</code> to the top of that function.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>constructGUI</code> only <em>exists</em> within <code>main()</code>'s scope. You aren't <em>passing it around</em> to the other functions so they don't know what it is.</p>
<p>Make <code>constructGUI</code> a module level object so that <em>everyone</em> can see it.</p>
<pre><code>if __name__ == '__main__':
    #main()
    window = Tk()
    window.title("Jukebox")
    initiateJukebox = JukeboxContent()
    initiateJukebox.directoryChooser()
    constructGUI = JukeboxGUI(window)
    constructGUI.constructButtons()
    constructGUI.nextButton.bind("&lt;Button-1&gt;", nextSong)
    constructGUI.previousButton.bind("&lt;Button-1&gt;", previousSong)
    constructGUI.stopButton.bind("&lt;Button-1&gt;", stopSong)
    window.mainloop()
</code></pre>
<hr/>
<p>Here are some things from the docs to read: <a href="https://docs.python.org/3/reference/executionmodel.html#naming-and-binding" rel="nofollow noreferrer">Naming and Binding</a>, <a href="https://docs.python.org/3/tutorial/classes.html#a-word-about-names-and-objects" rel="nofollow noreferrer">A Word About Names and Objects and Python Scopes and Namespaces</a>.</p>
</div>
<span class="comment-copy">Please include the complete Traceback (formatted as code) - it will show which line is causing the error.</span>
<span class="comment-copy"><code>constructGUI</code> only <i>exists</i> within <code>main()</code>'s scope. You aren't <i>passing it around</i> to the other functions so they don't know what it is.Here are some things from the docs to read: <a href="https://docs.python.org/3/reference/executionmodel.html#naming-and-binding" rel="nofollow noreferrer">Naming and Binding</a>, <a href="https://docs.python.org/3/tutorial/classes.html#a-word-about-names-and-objects" rel="nofollow noreferrer">A Word About Names and Objects and Python Scopes and Namespaces</a>.</span>
