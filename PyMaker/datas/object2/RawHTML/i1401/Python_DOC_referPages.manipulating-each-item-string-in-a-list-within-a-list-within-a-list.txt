<div class="post-text" itemprop="text">
<p>*Using python 3 on Python 3.6.4 on Windows    </p>
<pre><code>twoDlist = [
    [] * len(pathology_case_retrieval_report[1:])
    for x in range(len(pathology_case_retrieval_report[1:]))
]
</code></pre>
<p>This is my list of length 67. </p>
<pre><code>for i in range(len(twoDlist)):
    temp = twoDlist[i]
    temp.append(SPnumsList[i])
    temp.append(requested_ByList[i])
    temp.append(dateTimelist1[i])
    twoDlist[i] = temp
</code></pre>
<p>This is how I appended each item from each list (<code>SPnumsList</code>, <code>requested_ByList</code> and <code>dateTimelist1</code>) to each list inside of larger list (<code>twoDlist</code>). </p>
<p>Example element inside of twoDlist: </p>
<pre><code>['Number', 'Physician Name', ['stringN']]
</code></pre>
<p>*Please note that the 2nd index of this list can have 0 to n number of elements inside and I would like to account for this. </p>
<p>I need to perform string manipulation (via regular expression on each element in 2nd index (specifically <code>re.sub(r'[A-Za-z.\'\"\,\n;:]', '', stringN)</code>).
And then append the new item back to the 2nd index of the list, replacing the the old string. </p>
<p>I would also like to: 
take each <code>stringN</code> element in</p>
<pre><code>['123', 'Dr. Bob', ['string1','string2', 'string3']]
</code></pre>
<p>and append it to a new list while keeping the <code>'Number'</code> and <code>'Physician Name'</code>.</p>
<p>Example of how I would like my data to look like:</p>
<pre><code>[
    ['123', 'Dr. Bob', 'string1'],
    ['123', 'Dr. Bob', 'string2'],
    ['123', 'Dr. Bob', 'string3'],
    # ...
]
</code></pre>
<p>for each <code>['Number', 'Physician Name', ['stringN']]</code> in <code>twoDlist</code>.</p>
<p>Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this pretty concisely using <code>reduce</code> (<a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">docs here</a>) to split up each record into multiple for each string in the list of strings at index 2. On each iteration you can also perform your regex substitution.</p>
<p>Here is an example:</p>
<pre><code>import re
from functools import reduce

twoDlist = [
    ['123', 'Dr. Bob', ['string1','string2', 'string3']],
    ['456', 'Dr. Jim', ['string4','string5', 'string6']],
]

regex = r'[A-Za-z.\'\"\,\n;:]'

final = reduce(
    lambda a, sublist: a + [[*sublist[:2], re.sub(regex, "", st)] for st in sublist[2]],
    twoDlist,
    []
)
</code></pre>
<p><code>reduce</code> iterates over <code>twoDlist</code> and each element (<code>sublist</code>) of <code>twoDlist</code> is converted into a list of lists—one for each element of the list at index 2—using a list comprehension. Then these new lists are all appended onto the list processed so far.</p>
<p>The result is <code>final</code> as:</p>
<pre><code>[
    ['123', 'Dr. Bob', '1'],
    ['123', 'Dr. Bob', '2'],
    ['123', 'Dr. Bob', '3'],
    ['456', 'Dr. Jim', '4'],
    ['456', 'Dr. Jim', '5'],
    ['456', 'Dr. Jim', '6']
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given </p>
<pre><code>twoDlist = [['123', 'Dr. Bob', ['string1','string2', 'string3']], ['345', 'Dr. Joe', ['string4', 'string5']]]
</code></pre>
<p>you can issue</p>
<pre><code>&gt;&gt;&gt; [[[*sub[:-1], x] for x in sub[-1]] for sub in twoDlist]
[[['123', 'Dr. Bob', 'string1'],
  ['123', 'Dr. Bob', 'string2'],
  ['123', 'Dr. Bob', 'string3']],
 [['345', 'Dr. Joe', 'string4'],
  ['345', 'Dr. Joe', 'string5']]]
</code></pre>
<p>If you additionally want to remove one level of nesting, you can use <a href="https://docs.python.org/3.7/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a>.</p>
<pre><code>&gt;&gt;&gt; tmp = ([[*sub[:-1], x] for x in sub[-1]] for sub in twoDlist)
&gt;&gt;&gt; list(chain.from_iterable(tmp))
[['123', 'Dr. Bob', 'string1'],
 ['123', 'Dr. Bob', 'string2'],
 ['123', 'Dr. Bob', 'string3'],
 ['345', 'Dr. Joe', 'string4'],
 ['345', 'Dr. Joe', 'string5']]
</code></pre>
</div>
<span class="comment-copy">Thanks Henry Woody. It worked. I need to become more familiar with the reduce function!</span>
<span class="comment-copy">@UwadiaEdomwonyi Check out the docs on <code>reduce</code> here: <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">docs.python.org/3/library/functools.html#functools.reduce</a> It's a really powerful function that can used in a bunch of different ways</span>
<span class="comment-copy">The lambda function takes two arguments: a and sublist. I understand that sublist refers to list elements in twoDlist. What does "a" refer to? Thank you</span>
<span class="comment-copy">@UwadiaEdomwonyi <code>a</code> is the total so far. On the first iteration, <code>a</code> takes the initial value given (the last arg to <code>reduce</code>) of <code>[]</code>. For each successive iteration <code>a</code> is equal to the return value of the <code>lambda</code> function from the previous iteration. Note also that the first argument need not be a <code>lambda</code> function, it can be any function but <code>lambdas</code> are often used because these are generally one-off functions</span>
<span class="comment-copy">I’ve been reading up on the doc for the reduce function... would the empty list be considered as the initializer?</span>
<span class="comment-copy">Thank you timgeb!</span>
