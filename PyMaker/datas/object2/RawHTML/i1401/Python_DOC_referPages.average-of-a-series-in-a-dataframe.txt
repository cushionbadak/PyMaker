<div class="post-text" itemprop="text">
<p>I have a dataframe that looks something like this:</p>
<pre><code>values
[0.0,12.34,223.12,4.55,...]
[0.0,78.12,12.90,...]
.
.
. 
</code></pre>
<p>I am trying to calculate the average of the value column and store that number in a new column.</p>
<p>The dataframe only holds a single column at the moment and the length of each array in the values column is not strict.</p>
<p>Expected output:</p>
<pre><code>value                             average
[0.0,12.34,223.12,4.55,...]        77.87
[0.0,78.12,12.90,...]              12.11            
.
.
. 
</code></pre>
<p>Np.mean() will not work when I try to loop through the dataframe using iterrows().</p>
<p>Essentially I need to expand the code below to calculate all the averages in a dataframe:</p>
<pre><code>np.mean(df_average_pace.paces[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a series of lists. This means vectorisation isn't possible. You can use a Python-level loop via <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.map.html" rel="nofollow noreferrer"><code>pd.Series.map</code></a> (or, equivalently, <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.apply.html" rel="nofollow noreferrer"><code>apply</code></a>) and <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer"><code>statistics.mean</code></a>:</p>
<pre><code>from statistics import mean
df['average'] = df['value'].map(mean)
</code></pre>
<p>Here's a demo:</p>
<pre><code>from statistics import mean
df = pd.DataFrame({'value': [[1, 4, 1, 2], [2, 4, 6], [9, 2, 5]]})
df['average'] = df['value'].map(mean)

print(df)

          value   average
0  [1, 4, 1, 2]  2.000000
1     [2, 4, 6]  4.000000
2     [9, 2, 5]  5.333333
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using </p>
<pre><code>pd.DataFrame(df.value.tolist()).mean(1)
Out[541]: 
0    2.000000
1    4.000000
2    5.333333
dtype: float64
</code></pre>
</div>
<span class="comment-copy"><code>map</code> is smart  :-)</span>
<span class="comment-copy">@W-B, Yup, your solution is, of course, better if all lists same size :)</span>
<span class="comment-copy">Just adding that all lists are not the same size</span>
