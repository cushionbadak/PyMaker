<div class="post-text" itemprop="text">
<p>I want to avoid doing ugly int to each element in a list.</p>
<pre><code>dictionary[l[0]] = [(int(l[1])+ int(l[2])+ int(l[3]))/3] #avg score of 3 grades
    sub1 += int(l[1])
    sub2 += int(l[2])
    sub3 += int(l[3])
</code></pre>
<p>The list l has 4 elements, 0 to 3 indexes. I need to apply int starting with the 1st-element, not 0th element.</p>
<p>I'm trying to write something like:</p>
<pre><code>   map lambda x: int(x) for i in l[1:]
</code></pre>
<p>Do I need lambda here, since map can already do the job?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>map</code> calls a function on each element of a list. Since <code>int</code> is a function you can use</p>
<pre><code>map(int, lst)
</code></pre>
<p>directly.</p>
<p>Lambda functions just give you more flexibility, say if you wanted to do:</p>
<pre><code>map(lambda x: 5*int(x), lst)
</code></pre>
<p>A more Pythonic way to do the above would be to use list comprehensions</p>
<pre><code>[int(x) for x in lst]
[5*int(x) for x in lst]
</code></pre>
<p>In Python3 <code>map</code> returns a generator. If you wish to have a list, you'd want to do:</p>
<pre><code>list(map(int, lst))
</code></pre>
</div>
<span class="comment-copy">You should use float instead of int for computing the average (at least in Python 2)</span>
<span class="comment-copy">does map return smth? Do I need to do lst = map(int, lst)?</span>
<span class="comment-copy">@ERJAN map() returns a map object. You need to convert it into a list. For example: list2 = list(map(int, list1))</span>
<span class="comment-copy">IMHO <code>int</code> is better characterized as a callable, not a function.</span>
<span class="comment-copy">Thanks, @VPfB, that might well be right. What is a callable and how does it differ from a function?</span>
<span class="comment-copy">@Richard Callable is a general term for classes, class methods, functions, lambdas and possibly other objects that can be called <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#calls</a> . Functions are defined with <code>def</code> keyword.</span>
