<div class="post-text" itemprop="text">
<p>I want to know how can I make a python function that does the same as <code>mapcar</code> of lisp.</p>
<p>From the <a href="http://www.lispworks.com/documentation/lw50/CLHS/Body/f_mapc_.htm" rel="nofollow noreferrer">mapcar lisp documentation</a> :</p>
<blockquote>
<p>mapcar operates on successive elements of the lists. function is
  applied to the first element of each list, then to the second element
  of each list, and so on. The iteration terminates when the shortest
  list runs out, and excess elements in other lists are ignored. The
  value returned by mapcar is a list of the results of successive calls
  to function.</p>
</blockquote>
<p>For example, </p>
<pre><code>list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]

def sum(firstNumber, secondNumber):
    return firstNumber + secondNumber

sumOfLists = mapcar(sum, list1, list2)

print(sumOfLists)
# [6, 6, 6, 6, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>map</code>, and also there is an operator for adding <code>operator.add</code>:</p>
<pre><code>&gt;&gt;&gt; import operator
&gt;&gt;&gt; list(map(operator.add, list1, list2))
[6, 6, 6, 6, 6]
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">documentation</a>. <code>map</code> takes a function as first argument, and a variable number of <strong>iterable</strong> arguments. The key is that the function should take as many arguments as iterables are given to <code>map</code>. That is the only "restriction" to take into account. So, for example:</p>
<pre><code>map(lambda x: x+1,         range(10))
map(lambda x, y: x+y,      range(10), range(10))
map(lambda x, y, z: x+y+z, range(10), range(10), range(10))
</code></pre>
<p>And so on...</p>
<p>Also it can take any other function defined by the user:</p>
<pre><code>def checkString(s):
    return isinstance(s, str) and len(s) &gt; 10

&gt;&gt;&gt; list(map(checkString, ["foo", "fooooooooooooooooooooo"]))
[False, True]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This can be achieved in this way: <code>sumOfLists = map(sum, zip(list1, list2))</code>
You also do not need to define the <code>sum</code> function, as it is built-in.</p>
</div>
<span class="comment-copy">Thank you for your answer, but how could I do, for example, some mapcar use for a function that check if an element of a list is a string? Or another use that imply the non-use of a basic operation. Just to be sure how to use map function like mapcar in its totality.</span>
<span class="comment-copy">@Javierdds, I just expanded the answer</span>
<span class="comment-copy">Thank you! That's how mapcar works, now I get it.</span>
