<div class="post-text" itemprop="text">
<p>I have a python script called main.py that imports RPi.GPIO library using <code>import RPi.GPIO as GPIO</code> 
When I run the script using python3 main.py I get an error that states RPi.GPIO was not found. If I run main.py using sudo python3 main.py then everything runs fine. </p>
<p>I installed RPi.GPIO using a tar.gz file. I copied it to my /home/pi/work directory and extracted the tarball in the same directory. I then changed to the extracted directory and installed RPi.GPIO using sudo python3 setup.py install. </p>
<p>As I don't normally use linux I don't fully understand the permissions which I am sure is what is causing this issue. I am guessing that since I installed using sudo that the package is only available to the sudo user. The problem is I am starting this program from rc.local file and the main.py script wont run at startup with the RPi.GPIO import statement. If I remove the import statement it starts as expected. Below is the code in the rc.local file that starts the program <code>su -l pi -c '/usr/bin/python3 /home/pi/Work/main.py &amp;'</code> I tried changing su to sudo but that did not work. </p>
<p>Is there a different way I can install RPi.GPIO or change the rc.local script to get this working? Also FYI my pi has no internet connection so I can't use APT-GET to uninstall or install the package.</p>
<p>Also just in case some of you wonder if the package installed properly it has. If I start python with <code>sudo python3</code> I get &gt;&gt;&gt;. I then type <code>import RPi.GPIO as GPIO</code> I get &gt;&gt;&gt; again. Then I type <code>GPIO.VERSION</code> it displays the correct version I installed. Any help would be appreciated.</p>
<p><strong>UPDATE</strong>
I did not create the code for the rc.local file and looked a little closer at it. The statement <code>su -l pi -c '/usr/bin/python3 /home/pi/Work/main.py &amp;'</code> I found out changes the user from root to pi and executes the script under the pi user. So I tried changing the statement to <code>su -l sudo -c '/usr/bin/python3 /home/pi/Work/main.py &amp;'</code> thinking that since I can run the main.py by using <code>sudo python3 main.py</code> that changing user from pi to sudo in the rc.local file would execute the file as sudo. It still does not work. I then tried removing the su command from the rc.local command and ran like this <code>/usr/bin/python3 /home/pi/Work/main.py &amp;</code> but this also didn't work. Does anyone have any suggestions on how I can get this to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try to write bash script with sleep before running python script and put it into <code>rc.local</code></p>
<pre><code>#!/bin/sh

sleep 5
python python_script.py &amp;
</code></pre>
<p>Don't forget to make script executable: <code>chmod 755 yourscript.sh</code></p>
</div>
<div class="post-text" itemprop="text">
<p>For developing in Python, on Linux or any OS, one would almost always use a <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">virtualenv</a>, one for each python project I want to develop.</p>
<p>A virtualenv is easy to set up, and once activated, you can execute your <code>pip install</code> commands without using <code>sudo</code>. Try setting up a virtualenv and installing GPIO via pip.</p>
<p>Even if you don't set up a virtualenv to help with package management for your Python project, you can still <a href="https://sourceforge.net/p/raspberry-gpio-python/wiki/install/" rel="nofollow noreferrer">use pip</a> to install GPIO, but you'll face the permission issues you're dealing with now. </p>
<p>But, you're in luck! GPIO is already installed on Raspbian. Open up the Terminal and type <code>python</code>. Once you're in the Python interpreter, type <code>import RPi.GPIO</code>. If you get an error, there is a genuine issue with your installation, but it can be easily overcome by using a virtualenv. It may help to know which is your default python, with <code>python --version</code>.</p>
<p>Pip is conceptually similar to the <code>apt</code> package manager you've probably used with your Raspberry Pi to install other pieces of software. It's a package manager for Python, basically a registry of libraries you can install instantly on the command line. </p>
<p>The command line is your friend on an RPi, especially when it comes to developing original software. </p>
<p>Good luck!</p>
</div>
<span class="comment-copy">Thank for the suggestion. Unfortunately this was not my project and I am adding to a project someone else at my workplace developed. As I am not experienced in linux I found some new information I am going to add it to my post.</span>
<span class="comment-copy">I see youâ€™re not connecting the RPi to the Internet, either. Is that on purpose or due to hardware limitations?</span>
