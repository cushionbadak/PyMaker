<div class="post-text" itemprop="text">
<p>Im having some problems with the code below. I'm using PyCharm. The program is supposed to get an input for password of the user and check if it has at least 3 upper case chars and at least 3 numbers. The second task is what im having troubles with.</p>
<pre><code>import sys


def num(s):
regex = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
for k in regex:
    if regex == s:
        print(y)
        y = y + 1
return y


passw = input("Enter password")
passw2 = list(passw)
lenght = (len(passw2))
if lenght &lt; 8:
print("Password needs to be at least 8 chars long")
else:
    i = 0
    for x in passw2:
        if x.isupper():
            i += 1
if i &lt; 3:
    print("You need at least 3 upper cased chars in your password")
    sys.exit()
else:
    numpassw2 = num(passw2)
    if numpassw2&lt;3:
        print("At least 3 numbers needs to be given")
    else:
        print("OK,lets continue")
</code></pre>
<p>It gets stuck at calling out the num() function and gives following errors:</p>
<pre><code>Traceback (most recent call last):
File "H:/szkola/python/projects/password/passwchecker.py", line 27, in &lt;module&gt;
numpassw2 = num(passw2)
File "H:/szkola/python/projects/password/passwchecker.py", line 10, in num
return y
UnboundLocalError: local variable 'y' referenced before assignment
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your function <code>num(s)</code> declare a variable named <code>y</code>. Because of its missing in your function and it is raising an error.</p>
<pre><code>def num(s):
    y = 0 # DECLARE y BEFORE CALL IT.
    regex = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
    for k in regex:
        for c in s:
            if c == k:
                print(y)
                y = y + 1
    return y
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is the result of false <em>scoping</em> - the variable you want to use is not known. Learn more here: <a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">Short Description of the Scoping Rules?</a></p>
<hr/>
<p>You can use <code>sum()</code> over booleans - each True sums as 1. There are pre-build function for checking <code>islower, isupper, isdigit</code> - you can those like this: </p>
<pre><code>def check_pw(p):
    # count how much of which type is in the password
    num_digit = sum(c.isdigit() for c in p) # True == 1, False == 0
    num_upper = sum(c.isupper() for c in p)
    num_lower = sum(c.islower() for c in p)

    # check if all categories are at least 3 times in it 
    ok =  all(x &gt;= 3 for x in [num_digit, num_lower, num_upper])

    # do some output / error handling 
    print("Numbers: {}".format(num_digit), 
          "UPPERS:  {}".format(num_upper),
          "lowers:  {}".format(num_lower))
    print(p, " is Ok: ", ok) 

    # return if ok or not - if not the calling code has to ask/check a new password
    return ok

for p in [ "no", "NO", "StillNo", "ABCdef12no", "YESyes123"]: 
    check_pw(p)  # not using the return value here
</code></pre>
<p>Output:</p>
<pre><code>Numbers: 0 UPPERS:  0 lowers:  2
no  is Ok:  False

Numbers: 0 UPPERS:  2 lowers:  0
NO  is Ok:  False

Numbers: 0 UPPERS:  2 lowers:  5
StillNo  is Ok:  False

Numbers: 2 UPPERS:  3 lowers:  5
ABCdef12no  is Ok:  False

Numbers: 3 UPPERS:  3 lowers:  3
YESyes123  is Ok:  True
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.islower" rel="nofollow noreferrer">str.islower()</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.isupper" rel="nofollow noreferrer">str.isupper()</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer">str.isdigit()</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum()</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">truth value testing</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Try to change the code to something like this: </p>
<pre><code>import sys


def num(s):
    y = 0
    regex = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]
    for k in regex:
        for l in s:
            if regex == l:
                print(y)
                y += 1
    return y


passw = input("Enter password")
passw2 = list(passw)
lenght = (len(passw2))
if lenght &lt; 8:
    print("Password needs to be at least 8 chars long")
else:
    i = 0
    for x in passw2:
        if x.isupper():
            i += 1
    if i &lt; 3:
        print("You need at least 3 upper cased chars in your 
             password")
        sys.exit()
    else:
        numpassw2 = num(passw2)
        if numpassw2&lt;3:
            print("At least 3 numbers needs to be given")
        else:
            print("OK,lets continue")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's an other option:</p>
<pre><code>MIN_LENGTH = 8
MIN_UPPER = 3
MIN_DIGIT = 3


def check_pass(p):
    if not p or len(p) &lt; MIN_LENGTH:
        return False # fast-exit, validate length 
    count_upper = count_digit = 0
    pass_upper = pass_digit = False
    for char in p: # iterate over the characters
        if char.isupper():
            count_upper += 1 # increment the counter and check if we've reached the limit
            pass_upper = count_upper &gt;= MIN_UPPER
        elif char.isdigit():
            count_digit += 1 # increment the counter and check if we've reached the limit
            pass_digit = count_digit &gt;= MIN_DIGIT
        else: # for any other character we have nothing to do
            continue 
        # we got here because the caracter was a digit or an upper, meaning that 1 of the counters has changed and maybe the "pass" flags also 
        if pass_upper and pass_digit:
            # we've passed the checks, so fast-exit we don't need to iterate anymore
            return True
    # if we've got here, it means that the password didn't passed the checks 
    return False
</code></pre>
<p>I think it's better as it has fewer iterations and has "fast-exits"</p>
</div>
<span class="comment-copy">Hi there welcome to SO. Please check over the <a href="https://meta.stackexchange.com/questions/22186/how-do-i-format-my-code-blocks">formatting</a> in <a href="https://stackoverflow.com/posts/53571189/edit">your question</a> and ensure that it accurately reflects your real code.</span>
<span class="comment-copy">Some of your indents are off in the code you show here. This cannot run.</span>
<span class="comment-copy">It made the function work, hovewer it doesnt return a correct statement. If i do PASSword123 for example, it still returns "At least 3 numbers needs to be given"</span>
<span class="comment-copy">I update the code hope it will work.</span>
<span class="comment-copy">Awesome. Works now.</span>
<span class="comment-copy">@TheXsarix pl check my answer</span>
<span class="comment-copy">the else are off the place</span>
<span class="comment-copy">@TheXsarixpl check my edited answer</span>
<span class="comment-copy">@TheXsarixpl Please upvote also my answer; the main problem was fixed first in my answer</span>
