<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6586310/how-to-convert-list-of-key-value-tuples-into-dictionary">How to convert list of key-value tuples into dictionary?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I want put a list of tuples into a dictionary like this:
what i want to do is to add keys with multiple values dynamically.</p>
<p>The list of tuples:</p>
<pre><code>[((1.0, 54, 0.0), 'less'),
 ((0.0, 55, 0.0), 'less'),
 ((0.0, 26, 0.0), 'less'),
.
.
.
 ((1.0, 40, 0.0), 'more'),
 ((1.0, 25, 1.0), 'less'),]
</code></pre>
<p>The output should be like this:</p>
<p>the labels should be the keys and  the tuples of data_points should be the values
i want to create the dict so that the keys won't be repeated</p>
<pre><code>{'less': [(1.0, 54, 0.0), (0.0, 55, 0.0), (0.0, 26, 0.0), (1.0, 25, 1.0), (0.0, 15, 0.0), (0.0, 35, 0.0), (0.0, 41, 0.0), (0.0, 20, 0.0), (1.0, 18, 1.0)],   \
'more': [(1.0, 40, 0.0), (0.0, 13, 1.0), (0.0, 50, 1.0), (1.0, 33, 0.0), (1.0, 30, 1.0), (0.0, 39, 1.0), (1.0, 55, 0.0)]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">setdefault</a>:</p>
<pre><code>data = [((1.0, 54, 0.0), 'less'),
 ((0.0, 55, 0.0), 'less'),
 ((0.0, 26, 0.0), 'less'),
 ((1.0, 40, 0.0), 'more'),
 ((1.0, 25, 1.0), 'less')]

result = {}
for value, key in data:
       result.setdefault(key, []).append(value)

print(result)
</code></pre>
<p>Or as an alternative, you could check if the key do not exists in the dictionary and set the corresponding value to the empty list:</p>
<pre><code>data = [((1.0, 54, 0.0), 'less'),
        ((0.0, 55, 0.0), 'less'),
        ((0.0, 26, 0.0), 'less'),
        ((1.0, 40, 0.0), 'more'),
        ((1.0, 25, 1.0), 'less')]

result = {}
for value, key in data:
    if key not in result:
        result[key] = []
    result[key].append(value)

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'less': [(1.0, 54, 0.0), (0.0, 55, 0.0), (0.0, 26, 0.0), (1.0, 25, 1.0)], 'more': [(1.0, 40, 0.0)]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>.append</code> is fine for this.</p>
<pre><code>out_dict = {'less':[], 'more':[]}
for t in list_of_tuples:
    out_dict[t[1]].append(t[0])
</code></pre>
<p>If you don't want to define keys ahead of time:</p>
<pre><code>out_dict = {}
for t in list_of_tuples:
    if t[1] not in out_dict:
        out_dict[t[1]] = []
    out_dict[t[1]].append(t[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply putting each tuple into the right list within the dict.   </p>
<pre><code> a = [((1.0, 54, 0.0), 'less'),
     ((0.0, 55, 0.0), 'less'),
     ((0.0, 26, 0.0), 'less'),
     ((1.0, 40, 0.0), 'more'),
     ((1.0, 25, 1.0), 'less')]

mydict = {'less': list(), 'more': list()}

for i in range(len(a)):
    if a[i][1] == 'less':
        mydict['less'].append(a[i][0])
    else:
        mydict['more'].append(a[i][0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a more general purpose solution I'd recommend using a defaultdict:</p>
<pre><code>from collections import defaultdict

result = defaultdict(list)
# Assuming your list is in a variable called 'data'
for data_tuple in data:
    result[data_tuple[1]].append(data_tuple[0])
</code></pre>
<p>When a key is given to a defaultdict that does not exist, it will call the factory function you provide (in this case just <code>list</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a></p>
<pre><code>data = [((1.0, 54, 0.0), 'less'),
 ((0.0, 55, 0.0), 'less'),
 ((0.0, 26, 0.0), 'less'),
 ((1.0, 40, 0.0), 'more'),
 ((1.0, 25, 1.0), 'less')]

from collections import defaultdict
result = defaultdict(list)
for value, key in data:
    result[key].append(value)

print(result)
</code></pre>
</div>
