<div class="post-text" itemprop="text">
<p>I have a list of strings and I want to concatenate the elements of the list in the following way:</p>
<p><code>before = ['a', 'b', 'c', 'd']
</code></p>
<p><code>after = ['ab', 'bc', 'cd']
</code></p>
<p>I am not sure of how the above operation is called.</p>
<p>However, I tried using the range method:</p>
<p><code>after = [before[i]+before[i+1] for i in range(0,len(before),2)]
</code></p>
<p>but it results in: <code>after = ['ab', 'cd']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Your method doesn't allow overlap since your index is increasing by 2.</p>
<p>A quickfix would be</p>
<pre><code>after = [before[i]+before[i+1] for i in range(len(before)-1)]
</code></pre>
<p>But I would rather <code>zip</code> the list with a sliced version of itself:</p>
<pre><code>before = ['a', 'b', 'c', 'd']

after = [a+b for a,b in zip(before,before[1:])]

&gt;&gt;&gt; after
['ab', 'bc', 'cd']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use <a href="https://docs.python.org/3/library/itertools.html#itertools.tee" rel="nofollow noreferrer">tee</a>:</p>
<pre><code>from itertools import tee

before = ['a', 'b', 'c', 'd']
c, n = tee(before, 2)
next(n)

after = [cu + ne for cu, ne in zip(c, n)]
print(after)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>['ab', 'bc', 'cd']
</code></pre>
<p><strong>Further</strong></p>
<ol>
<li><a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">Itertools recipes</a></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>In the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>itertools</code></a> there is a useful recipe you can use:</p>
<pre><code>def pairwise(iterable):
    "s -&gt; (s0,s1), (s1,s2), (s2, s3), ..."
    a, b = tee(iterable)
    next(b, None)
    return zip(a, b)

&gt;&gt;&gt; map(lambda x: ''.join(x), pairwise(before))
['ab', 'bc', 'cd']
</code></pre>
</div>
