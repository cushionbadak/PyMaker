<div class="post-text" itemprop="text">
<p>How can I remove double consecutive letters from a string? </p>
<p>For instance:</p>
<pre><code>a_str = 'hii thherre'
</code></pre>
<p>should become</p>
<pre><code>'hi there'
</code></pre>
<p>I tried to do:</p>
<pre><code>a_str = ''.join(sorted(set(a_str), key=a_str.index))
</code></pre>
<p>However, I am getting:</p>
<pre><code>'hi ter'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>yes that [triple or quadruple consecutive letters] could  be also considered</p>
</blockquote>
<p>In that case, if I understand correctly, you just want to take one of every sequence of consecutive equal letters. Consider <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>.</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; a_str = 'hii thherre'
&gt;&gt;&gt; ''.join(k for k, _ in groupby(a_str))
'hi there'
</code></pre>
<p>edit: bonus regex</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r'(.)\1*', r'\1', a_str)
'hi there'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do this by iterating over combinations of all characters and their next elements and selecting ones that aren't equal.</p>
<pre><code>from itertools import zip_longest

a_str = 'hii thherre'
new_a = ''.join(i[0] for i in zip_longest(a_str, a_str[1:]) if i[0] != i[1])

print(new_a) # -&gt; hi there
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Straight python with no imports,</p>
<p>Split the string and check if the next char is the same, if it is, remove it.</p>
<pre><code>a_str = 'hii thherre'
e = list(a_str)
b_str = ""
for i, x in enumerate(e):
    nextelem = e[(i + 1) % len(e)]
    if nextelem == x:
        print("Duplicate found, removing")
    else:
        b_str = b_str + x

print(b_str)
</code></pre>
</div>
<span class="comment-copy">What about triple or quadruple consecutive letters?</span>
<span class="comment-copy">The task was removing double consecutive letters, but the code you've written is to remove all but the very first appearance of a letter. You should put more effort into solving this yourself; SO is neither a code-writing nor tutorial service.</span>
<span class="comment-copy">@timgeb, yes that could be also considered</span>
<span class="comment-copy">and what if a word actually has double letters? For example <code>three</code> instead of <code>threee</code></span>
<span class="comment-copy">Took me a second to figure out why it had to be <code>zip_longest</code> ;)</span>
