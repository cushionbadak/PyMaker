<div class="post-text" itemprop="text">
<p>Im trying to handle a string like this:</p>
<pre><code>s = '1/2.05'
</code></pre>
<p>When I try to parse it into a Fraction:</p>
<pre><code>Fraction(s)
</code></pre>
<p>I am obtaining:</p>
<pre><code>ValueError: ("Invalid literal for Fraction: u'1/2.05'", u'occurred at index 3')
</code></pre>
<p>I also tried:</p>
<pre><code>Fraction(s.split('/')[0], s.split('/')[1])
</code></pre>
<p>But with error too:</p>
<pre><code>TypeError: ('both arguments should be Rational instances', u'occurred at index 3')
</code></pre>
<p>How would the correct parsing be? </p>
<p>Thank you all in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue lies in the fact that fractions and floats don't mix, and so you cannot typecast a string that hides a float in the fraction directly.</p>
<p>Do NOT use eval for this though.<br/>
Try to tackle the numerator and denominator separately. (you could use floats but then it is more precise to directly call Fraction on the string, avoiding <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="noreferrer">precision issues</a>.)</p>
<pre><code>from fractions import Fraction
s = '1/2.05'
numerator, denominator =  s.split('/')
result = Fraction(numerator)/Fraction(denominator)
print(result)
</code></pre>
</div>
<span class="comment-copy">Thank you very much!</span>
<span class="comment-copy">From the docs: <a href="https://docs.python.org/3/library/fractions.html" rel="nofollow noreferrer">docs.python.org/3/library/fractions.html</a> <code>&gt;&gt;&gt; Fraction(1.1) Fraction(2476979795053773, 2251799813685248)</code> illustrates very nicely the precision issue</span>
