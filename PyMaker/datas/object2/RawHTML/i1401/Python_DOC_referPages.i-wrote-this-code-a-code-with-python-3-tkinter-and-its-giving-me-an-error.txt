<div class="post-text" itemprop="text">
<pre><code>total = sum(int(e.get()) for e in (feet_entry1, feet_entry2, feet_entry3))
def callback():
    global total
    l.configure(text= "The output MV is %s" % total, font='none 12 bold')
</code></pre>
<p>And it shows this error</p>
<pre><code>total = sum(int(e.get()) for e in (feet_entry1, feet_entry2, feet_entry3))
ValueError: invalid literal for int() with base 10: ''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At least one of <code>feet_entry1</code>, <code>feet_entry2</code>, <code>feet_entry3</code> must be returning <code>''</code> when you call <code>.get()</code>.</p>
<p>If you try in the interactive prompt you'll get the same error:</p>
<pre><code>&gt;&gt;&gt; int('')
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: ''
</code></pre>
<p>You could fix it by filtering out empty values:</p>
<pre><code>sum(int(e.get()) for e in (feet_entry1, feet_entry2, feet_entry3)
    if e.get())
</code></pre>
<p>The <code>if e.get()</code> will convert the value to a boolean. Empty strings evaluate as <code>False</code> so it is ignored.</p>
<p>See the documentation for <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehensions</a>:</p>
<pre><code>&gt;&gt;&gt; vec = [-4, -2, 0, 2, 4]
&gt;&gt;&gt; # filter the list to exclude negative numbers
&gt;&gt;&gt; [x for x in vec if x &gt;= 0]
[0, 2, 4]
</code></pre>
</div>
<span class="comment-copy">At least one of <code>feet_entry1</code>, <code>feet_entry2</code>, <code>feet_entry3</code> must be returning <code>''</code> when you call <code>.get()</code>. If you try in the interactive prompt <code>&gt;&gt;&gt; int('')</code> you'll get the same error.</span>
<span class="comment-copy">The title should enable other users with the same problem to find your question. Please edit your title to a more meaningful one</span>
