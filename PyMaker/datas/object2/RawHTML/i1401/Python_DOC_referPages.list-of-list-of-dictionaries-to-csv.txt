<div class="post-text" itemprop="text">
<p>I know I can write a list of dictionaries directly to a CSV file. Similarly, is there a direct way to write a <strong>list of list of dictionaries</strong> to a csv file in python without iterating through each line manually? </p>
<p><strong>Sample data</strong></p>
<pre><code>[[{'e': 46, 'p': 100, 'n': 0, 'a': 100, ...}, 
  {'e': 29, 'p': 40, 'n': 1, 'a': 40, ...}, ...],
 [{...}, ...]
</code></pre>
<p><strong>Expected format</strong></p>
<pre><code>e,p,n,a,....
46,100,0,100,....
29,40,1,40,...
.......
</code></pre>
<p><strong>Note</strong> this is not a list of dictionaries, but a list of list of dictionaries</p>
</div>
<div class="post-text" itemprop="text">
<p>Without Pandas, you can use <a href="https://docs.python.org/3.6/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain</code></a> to get a flattened list of all dictionaries and then write that to your CSV file with <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>csv.DictWriter</code></a>:</p>
<pre><code>import csv
from itertools import chain

data = [
    [{'e': 46, 'p': 100, 'n': 0, 'a': 100}, 
     {'e': 29, 'p': 40, 'n': 1, 'a': 40}],
    [{'e': 56, 'p': 200, 'n': 23, 'a': 10}, 
     {'e': 22, 'p': 41, 'n': 11, 'a': 420}]]

fieldnames = ['e', 'p', 'n', 'a']
with open('mydata.csv', 'w') as f:
    writer = csv.DictWriter(f, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(chain.from_iterable(data))
</code></pre>
<p><strong>Output</strong> (mydata.csv)</p>
<pre><code>e,p,n,a
46,100,0,100
29,40,1,40
56,200,23,10
22,41,11,420
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There must be a way to accomplish your task using just core Python, but I would go for Pandas:</p>
<pre><code>import pandas as pd
d = yourListOfListsOfDictionaries
df = pd.concat(map(pd.DataFrame, d), sort=True)
#     a   e  n    p
#0  100  46  0  100
#0   40  29  1   40
df.to_csv(index=False)
#'a,e,n,p\n100,46,0,100\n40,29,1,40\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want  the set of keys to be the union of all of the dictionaries in the list of list of dicts, then you can do something like this:</p>
<pre><code>import csv
x = \
[[{'e': 46, 'p': 100, 'n': 0, 'a': 100},
  {'e': 29, 'p': 40, 'n': 1, 'a': 40}],
 [{'e': 19, 'p': 10, 'n': 1, 'a': 10, 'b':8}]]

key_dict = {}
for l in x:
    for d in l:
        for k in d:
            key_dict[k] = None

with open('file.csv', 'w') as csvfile:
    writer = csv.DictWriter(csvfile, key_dict.keys())
    writer.writeheader()
    for l in x:
        for d in l:
            writer.writerow(d)
</code></pre>
<p>Result:</p>
<pre><code>a,p,b,e,n
100,100,,46,0
40,40,,29,1
10,10,8,19,1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the dictionaries have the same format, just flatten the list like so (assuming it's indeed a list of lists, two-dimensional):</p>
<pre><code>data = [
    [{'a': 10, 'b': 20, 'c': 30}],
    [{'a': 20, 'b': 30, 'c': 40},
     {'a': 30, 'b': 40, 'c': 50}]
]
rows = [item for sublist in data for item in sublist]
</code></pre>
<p>Then just write your rows to the CSV:</p>
<pre><code>with open('my_data.csv', 'wb') as output_file:
    dict_writer = csv.DictWriter(output_file, rows[0].keys())
    dict_writer.writeheader()
    dict_writer.writerows(rows)
</code></pre>
<p>A combination of the two following posts:</p>
<p><a href="https://stackoverflow.com/questions/952914/how-to-make-a-flat-list-out-of-list-of-lists">How to make a flat list out of list of lists?</a></p>
<p><a href="https://stackoverflow.com/questions/3086973/how-do-i-convert-this-list-of-dictionaries-to-a-csv-file">How do I convert this list of dictionaries to a csv file?</a></p>
</div>
<span class="comment-copy">Do the dictionaries all have the same format regardless of whether they're in a sublist (i.e., are the keys still the same)?</span>
<span class="comment-copy">@coltonoscopy yes, all the data instances contains the same set of fields</span>
<span class="comment-copy">This works like charm :) However, I get empty lines in between each row. I can manually remove them. But is there any parameter to get rid of that?</span>
<span class="comment-copy">@ThusithaThilinaDayaratne I didn't get empty lines with example. That is strange.</span>
<span class="comment-copy">I could get rid of empty lines using 'wb' instead of 'w' (y) Seems like a system line termination config</span>
