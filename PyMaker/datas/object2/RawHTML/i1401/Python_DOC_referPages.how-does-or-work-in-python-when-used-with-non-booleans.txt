<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/44612144/logical-operators-in-python">Logical operators in Python</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/47007680/strange-use-of-and-or-operator">Strange use of “and” / “or” operator</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/18195322/pythons-logical-operator-and">Python's Logical Operator AND</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to figure out how the 'or' operator works in python when used on variables that are not boolean. In particular, I'm puzzled by the fact that it seems to be non-commutative. Shouldn't 'or' be commutative? </p>
<p>From what I can tell it seems to be implementing:</p>
<p>a or b = a, unless a = null or 0, then a or b = b. </p>
<p>Examples: </p>
<pre><code>&gt; 0 or 5  
5
&gt; 5 or 3 
5
&gt; 3 or 5 
3
&gt; '' or 5
5
&gt; 5 or ''
5
&gt; 'ab' or 'cd'
'ab'
&gt; 'cd' or 'ab'
'cd'
&gt; '' or 'cd'
'cd'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/reference/expressions.html#or" rel="nofollow noreferrer">the docs</a>:</p>
<blockquote>
<p>The expression <code>x or y</code> first evaluates x; if x is true, its value is returned; otherwise, y is evaluated and the resulting value is returned.</p>
<p>[...]</p>
<p>Note that neither <code>and</code> nor <code>or</code> restrict the value and type they return to <code>False</code> and <code>True</code>, but rather return the last evaluated argument.</p>
</blockquote>
</div>
<span class="comment-copy">If you're using booleans, it's commutative. The way they did it makes it more flexible.</span>
