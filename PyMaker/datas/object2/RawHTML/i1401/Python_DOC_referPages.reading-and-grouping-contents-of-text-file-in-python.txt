<div class="post-text" itemprop="text">
<p>I have a text file to read in Python</p>
<p>Contents</p>
<pre><code>line1
line2

line3
line4
line5

line6

....
</code></pre>
<p>Reading:</p>
<pre><code>with open(path, encoding="utf8", errors='ignore') as f1:
   contents = f1.readlines()
   print (contents)
</code></pre>
<p>OP:</p>
<pre><code>[line1, line2,.... line6]
</code></pre>
<p>But I want to read the contents based on white space separating the lines.</p>
<p>Expected OP:</p>
<pre><code>[[line1, line2], [line3,line4,line5], [line6]]
</code></pre>
<p>Is there a shorter approach than reading the entire contents of the file iterating through the list and then grouping based on the whitespaces. Any suggestion on the approach?</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this should do what you need:</p>
<pre><code>In [8]: result = []

In [9]: with open(path, encoding="utf8", errors='ignore') as fh:
   ...:     group = []
   ...:     for l in fh:
   ...:         l = l.strip()
   ...:         if not l:
   ...:             result.append(group)
   ...:             group = []
   ...:         else:
   ...:             group.append(l)
   ...:     if group:
   ...:         result.append(group)
   ...:

In [10]: result
Out[10]: [['line1', 'line2'], ['line3', 'line4', 'line5'], ['line6']]
</code></pre>
<p>Or another (not as readable) oneliner version using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itertools groupby</a></p>
<pre><code>from itertools import groupby    
[g for g in [list(g) for _, g in groupby(open(path).read().splitlines(), lambda l: bool(l.strip()))] if all(g)]
</code></pre>
</div>
