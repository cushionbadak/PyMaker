<div class="post-text" itemprop="text">
<p>So I'm doing a challenge from CodeWars that says:</p>
<p>"Given two arrays a and b write a function comp(a, b) that checks whether the two arrays have the "same" elements, with the same multiplicities. "Same" means, here, that the elements in b are the elements in a squared, regardless of the order."</p>
<p>My code for it is:</p>
<pre><code>def comp(array1, array2):
    if array1==None or array2==None:
        return False
    array1 = list(array1)
    array2 = list(array2)
    array1.sort()
    array2.sort()
    z= 0
    for i in range(len(array1)):
            if array1[i]**2 == array2[i]:
                z+=1
    if z == len(array1):
        return True
    else:
        return False
</code></pre>
<p>Now, I know there must be much easier code for this task, but I'm still a beginner programmer.</p>
<p>So all the tests are passed positively.
But I keep getting an exit code:</p>
<pre><code>Traceback (most recent call last):
  File "main.py", line 21, in &lt;module&gt;
    test.assert_equals(comp(a1, a2), False)
  File "/home/codewarrior/solution.py", line 10, in comp
   if array1[i]**2 == array2[i]:
IndexError: list index out of range
</code></pre>
<p>If I remove the first "if array1= None.... return False" statement, it gives this exit code instead:</p>
<pre><code>Traceback (most recent call last):
  File "main.py", line 18, in &lt;module&gt;
    test.assert_equals(comp(a1, a2), False)
  File "/home/codewarrior/solution.py", line 3, in comp
    array2 = list(array2)
TypeError: 'NoneType' object is not iterable
</code></pre>
<p>So no matter what, my code has something wrong in it, haha. Any solution to this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The error you can cam be dueto different lenghts of lists -you do not guard against that.</p>
<pre><code>comp([1,2,3], [1,2])
</code></pre>
<p>You can simplify your code using <code>enumerate()</code> on one array and then look into the other one. I highly doubt your arrays need to be cast into a list - they probably already are - and even if, you could do that in one step using <code>sorted()</code>:</p>
<pre><code>def comp(array1, array2):
    if array1 is None or array2 is None: # compare to None with is
        return False
    if len(array1) != len(array2):
        return False

    array1 = sorted(array1)
    array2 = sorted(array2)

    for idx,num in enumerate(array1):
        if num*num != array2[idx]:
            return False  # early return on first mismatch
    return True
</code></pre>
<p>You still might get better results if you optimize more - but you can do that on your own time :o) - f.e. think about a check for this:</p>
<pre><code>comp( [2]*100000000,[4]*100000000)
</code></pre>
<p>You can easily speed that up if you use a sorted list of a <code>set()</code> of your inputs instead of sorted list and that way you can eliminate about 99999999 checks which will make a dent into your runtime (unless your dataset only contains unique values to begin with). And if you got <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">set()'s</a> .. they are really fast in looking up if something is in them - far better and faster then sorting huge lists to begin with ...</p>
</div>
<span class="comment-copy">think about what happens if the lists don't have the same length</span>
<span class="comment-copy">according to your Traceback <code>a2</code> is <code>None</code>. <code>print(a2)</code> before line 18 in main.py. Then check how you assign <code>a2</code>.</span>
<span class="comment-copy">Well, I suppose it must return False, but when I add an "if len(array1) != len(array2): return False" statement, it gives me an "if len(array1) != len(array2): TypeError: object of type 'NoneType' has no len()" Exit Code :(</span>
<span class="comment-copy">You need to use <code>is None</code>, not <code>==None</code></span>
<span class="comment-copy">And if you are already given two arrays, <code>list()</code>  isn't needed, and order isn't important, so not sure why you need to sort anything</span>
<span class="comment-copy">That makes so much more sense! I didn't even know about set(). Highly appreciate your answer in such a short time.  First time using stackoverflow, really good choice :) .</span>
