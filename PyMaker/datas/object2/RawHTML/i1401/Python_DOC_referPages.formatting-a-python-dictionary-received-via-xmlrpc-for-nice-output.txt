<div class="post-text" itemprop="text">
<p>Is there an easy way to format a dictionary in python for nice output?</p>
<p>I am learning how to interact with an API/XMLRPC in python at the moment. After making a request, I get a dictionary back formatted like the following:</p>
<pre><code>{'category_id': '9', 'parent_id': '3', 'name': 'Headboard', 'is_active': '1', 'position': '6', 'level': '3', 'children': []}, {'category_id': '10', 'parent_id': '3', 'name': 'Mattress', 'is_active': '1', 'position': '7', 'level': '3', 'children': []},
</code></pre>
<p>This is a wall of text, easily a few pages. Is there an easy way to display this data nicely, or perhaps just to output the name of each category on one line?</p>
<p>edit:</p>
<p>Here is an attempt to print it via pprint, which ended up omitting a lot of the data:</p>
<pre><code>import xmlrpc.client
import pprint
svc = xmlrpc.client.ServerProxy('https://example.com/api/xmlrpc/')
session = svc.login('apiuser', 'apikey')
temp = svc.call(session, 'catalog_category.tree')
pp = pprint.PrettyPrinter(indent=4)
pp.pprint(temp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/pprint.html#pprint.pprint" rel="nofollow noreferrer"><code>pprint.pprint</code></a>:</p>
<pre><code>&gt;&gt;&gt; pprint([{'category_id': '9', 'parent_id': '3', 'name': 'Headboard', 'is_active': '1', 'position': '6', 'level': '3', 'children': []}, {'category_id': '10', 'parent_id': '3', 'name': 'Mattress', 'is_active': '1', 'position': '7', 'level': '3', 'children': []}])
[{'category_id': '9',
  'children': [],
  'is_active': '1',
  'level': '3',
  'name': 'Headboard',
  'parent_id': '3',
  'position': '6'},
 {'category_id': '10',
  'children': [],
  'is_active': '1',
  'level': '3',
  'name': 'Mattress',
  'parent_id': '3',
  'position': '7'}]
</code></pre>
<p>To display just the category names you can do:</p>
<pre><code>&gt;&gt;&gt; [x['name'] for x in ...]
</code></pre>
<p>Alternatively you can use <code>json.dump(s)</code> + the JSON viewer of your choice (plenty of online choices available, or just your local browser).</p>
<h1>Edit</h1>
<p>Processing in a recursive manner:</p>
<pre><code>import copy

t2 = copy.deepcopy(temp)  # Modify for printing.
items = [t2]
while items:
    item = items.pop(-1)
    del item['category_id']
    del item['is_active']
    del item['level']
    del item['position']
    ...  # Whatever other keys you want to delete.
    items += item.get('children', [])
pprint(t2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will give you a list of category names:</p>
<pre><code>list_of_dicts = [{'category_id': '9', 'parent_id': '3', 'name': 'Headboard', 'is_active': '1', 'position': '6', 'level': '3', 'children': []}, {'category_id': '10', 'parent_id': '3', 'name': 'Mattress', 'is_active': '1', 'position': '7', 'level': '3', 'children': []}]

category_names = [dict['name'] for dict in list_of_dicts]

print(category_names)
</code></pre>
<p>OUTPUT:</p>
<p>['Headboard', 'Mattress']</p>
</div>
<div class="post-text" itemprop="text">
<p>If the data is actually a dictionary of dictionaries, such that it is in the form: <code>{ "key_1": {}, "key_2": {} ... "key_n": {} }</code></p>
<p>then the following code will create a list of the names of categories:</p>
<pre><code>dict_of_dicts = {"key_a": {'category_id': '9', 'parent_id': '3', 'name': 'Headboard', 'is_active': '1', 'position': '6', 'level': '3', 'children': []}, "key_b": {'category_id': '10', 'parent_id': '3', 'name': 'Mattress', 'is_active': '1', 'position': '7', 'level': '3', 'children': []}}

category_names = [dict["name"] for dict in dict_of_dicts.values()]
print(category_names)
</code></pre>
<p>OUTPUT:</p>
<p>['Headboard', 'Mattress']</p>
</div>
<span class="comment-copy">This looks like JSON, not XML..</span>
<span class="comment-copy">The API only has a SOAP and XMLRPC interface. I just followed a tutorial on connecting to the API in python and it says you get a python dictionary back, which is what I got.</span>
<span class="comment-copy">@TheIncorrigible it's not JSON, it's a python dictionary. The OP has already parsed it.</span>
<span class="comment-copy">@roganjosh I see now.  The "formatted like the following" bit confused me.</span>
<span class="comment-copy">I did try pprint based on answers I found when searching for the problem. The issue is that a lot of the data then went missing. I can post what the entire dictionary is and the result of using pprint on a pastebin if you like.</span>
<span class="comment-copy">@JakeRankin Yes, please. Maybe that was a problem with your console? Did you look at <code>pformat</code> and dumping  to a file?</span>
<span class="comment-copy">I am not familiar with pformat, very new to python and API stuff, reading about it now. This is the paste of the entire dict I received via xmlrpc: <a href="https://pastebin.com/Kvfac4W2" rel="nofollow noreferrer">pastebin.com/Kvfac4W2</a> and this is the pastebin showing the result of printing with pprint: <a href="https://pastebin.com/ASX3ErF2" rel="nofollow noreferrer">pastebin.com/ASX3ErF2</a> and the code I use to print it: <a href="https://pastebin.com/AWKCp2kE" rel="nofollow noreferrer">pastebin.com/AWKCp2kE</a></span>
<span class="comment-copy">@JakeRankin The data you posted is not a <code>dict</code>. Actually it's not valid Python syntax. I wonder what it actually is. How did you come to the conclusion this is a dict? Can you check <code>print(type(temp))</code>? Looks like this data is faulty already. Is it possible that you obtained the "raw" data by just doing <code>print(temp)</code>? If so, you probably hit the max length of your console and so it chopped off the beginning, hence it is incomplete.</span>
<span class="comment-copy">I'm certain it is a dict. It is what the API documentation says will be returned via XMLRPC, and I did print(type(temp)) before posting which returns "&lt;class 'dict'&gt;"</span>
<span class="comment-copy">You can then print this list however you want.</span>
<span class="comment-copy">is list_of_dicts the same as the dict I received back via xmlrpc? I edited my question to show the code I was using to receive the dictionary, which is assigned to the temp in my code. I used your code substituting temp for list_of_dicts but this did not work, saying string indices need to be integers.</span>
<span class="comment-copy">Dictionaries are enclosed using {}, and your data is in the form of {}, {} so multiple dictionaries. I assumed that these were stored in a list e.g [{}, {}] but that very well might <b>not</b> be the case. I am not sure what data structure is used to hold your multiple dictionaries, try do this to find out and then perhaps post back here: type(temp)</span>
<span class="comment-copy">type(temp) returns class 'dict'</span>
<span class="comment-copy">Okay, so it looks like you have a dictionary of dictionaries i.e { {}, {}, {} .. {} }. I'll modify my answer.</span>
<span class="comment-copy">OP for your case, replace 'dic_of_dicts' with your temp variable.</span>
<span class="comment-copy">Thank you for your help Oamar. I get the error TypeError: string indices must be integers. If this is not a dictionary of dictionaries I'm not sure what else this could be.</span>
<span class="comment-copy">Hope your able to figure it out. 'TypeError: string indices must be integers' arises from trying to access an element in a list by using something other than an integer. For example my_list = [1,2,3,4], then this will reproducte the error: my_list["hi"] ..</span>
