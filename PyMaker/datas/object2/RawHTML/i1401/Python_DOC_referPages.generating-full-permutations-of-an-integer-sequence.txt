<div class="post-text" itemprop="text">
<p>I need to find a way (in python) to produce all permutations of integers of (+1)s and (-1)s according to given x legnth. For example if x=1, it should be [(+1),(-1)]; x = 2 --&gt;[[(+1)(+1)],[(+1)(-1)],[(-1)(+1)],[(-1)(-1)]] and so on. </p>
<p>Actually, itertools.product() function does this work for string permutations. This is what I can do:</p>
<pre><code>import itertools
def binary_sequence(k):
    L1 = [''.join(x) for x in itertools.product('+-', repeat=k)]
    L2 = list()
    for i in L1:
        L2.append([i])
    L2 = np.array(L2)
    return (L2) 
</code></pre>
<p>However, I found no way to assign integers to strings afterwards. Is that possible to do this for integers using itertools or something else?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understood correctly you could do:</p>
<pre><code>import itertools

import numpy as np


def binary_sequence(k):
    return np.array([x for x in itertools.product([-1, 1], repeat=k)])


for seq in binary_sequence(2):
    print(seq)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[-1 -1]
[-1  1]
[ 1 -1]
[1 1]
</code></pre>
<p>The <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a> function receives an iterable, from the documentation:</p>
<blockquote>
<p>Cartesian product of input iterables.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can really do string permutions :</p>
<pre><code>In [338]: list(itertools.product(["-1","+1"],repeat=3))
Out[338]: 
[('-1', '-1', '-1'),
 ('-1', '-1', '+1'),
 ('-1', '+1', '-1'),
 ('-1', '+1', '+1'),
 ('+1', '-1', '-1'),
 ('+1', '-1', '+1'),
 ('+1', '+1', '-1'),
 ('+1', '+1', '+1')]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3.7/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> works for any utterable, not just strings. So, you could pass it a list of integers, for example.</span>
