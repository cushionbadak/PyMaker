<div class="post-text" itemprop="text">
<pre><code>class Stack:
    def __init__(self):
        self.container = []  

    def isEmpty(self):
        return self.size() == 0   

    def push(self, item):
        self.container.append(item)  

    def peek(self) :
        if self.size()&gt;0 :
            return self.container[-1]
        else :
            return None

    def pop(self):
        return self.container.pop()

    def size(self):
        return len(self.container)

    def __str__(self):
        return '\n'.join('{} - {}'.format(n, thing) for n, thing in enumerate(self.container, 1))



s = Stack()
s.isEmpty()
s.push("Coke")
s.push("Pepsi")
s.push("Ice Lemon Tea")
s.push("Mountain Dew")
s.push("Green Tea")
s.push("Root Beer")
s.push("Red Bull")
print(s)

for i in range(0, s.size()):
    print (str(i+1) + " - " + s.container[i])

import random
sample = random.sample(range(s.size()), 3)
for i in range(s.size()):
    if i in sample:
        drink = s.pop()
        print(drink)
    else:
        s.pop()
</code></pre>
<p>Here are my codes for generating 3 random drinks from a stack of 7 drinks. After popping the 3 randomized drinks, I will like to know how I can relist my stack.</p>
<p>For example, my output for the 3 random drinks are:</p>
<pre><code>Pepsi
Mountain Dew
Red Bull
</code></pre>
<p>How do I print out the 4 remaining drinks in the stack like so:</p>
<pre><code>1 - Coke
2 - Ice Lemon Tea
3 - Green Tea
4 - Root Beer
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add a <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><code>__str__</code></a> method to the class that will construct the list then just print the instance</p>
<pre><code>class Stack:
    ...
    def __str__(self):
        return '\n'.join('{} - {}'.format(n, thing) for n, thing in enumerate(self.container, 1))
        # use an f-string for python 3.6+
        # return '\n'.join(f'{n} - {thing}' for n, thing in enumerate(self.container, 1))
</code></pre>
<p>... </p>
<p>In your example code, you pop an item off the stack even if it does not meet your criteria - just comment out the <code>else</code> clause</p>
<pre><code>s = Stack()
# push stuff onto s

import random
sample = random.sample(range(s.size()), 3)
for i in range(s.size()):
    if i in sample:
        drink = s.pop()
        print(drink)
    #else:
    #    s.pop()

&gt;&gt;&gt; print(s)
1 - Coke
2 - Pepsi
3 - Ice Lemon Tea
4 - Mountain Dew
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">What do you mean as relist?</span>
<span class="comment-copy">@iGian After 3 of my drinks are randomly selected, I would like to have a new stack output with the remaining drinks inside.</span>
<span class="comment-copy">If I understand, when you remove the last <code>else: s.pop()</code> and <code>print(s.container)</code> it should return what you are looking for. Isn't it?</span>
<span class="comment-copy">what do you mean by print the instance?</span>
<span class="comment-copy">Your code seems to work but I am getting repeated stacks.</span>
<span class="comment-copy"><code>... I am getting repeated stacks</code> - can you explain?</span>
<span class="comment-copy">Umm nvm ignore that comment. But after adding the method to the class, how do I print the instance?</span>
<span class="comment-copy">@BobBobBob : see edit</span>
