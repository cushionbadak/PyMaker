<div class="post-text" itemprop="text">
<p>I have a list made of a python dictionary keys via; <code>list(dict.keys())</code>.</p>
<pre><code>dict.keys()
dict_keys(['South', 'North'])
</code></pre>
<p>I would like to add a string to the every element in the <code>list = ['South', 'North']</code> like:</p>
<p><code>my_string = 'to_'</code></p>
<p>In the end I want to have <code>list = ['to_South', 'to_North']</code></p>
<p>Is there a method I could use for this?</p>
<p>something like:</p>
<pre><code>list.add_beginning_of_each_element('to_')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or <code>map</code>:</p>
<pre><code>&gt;&gt;&gt; l = ['South', 'North']
&gt;&gt;&gt; list(map('to_'.__add__,l))
['to_South', 'to_North']
&gt;&gt;&gt;
</code></pre>
<p>There a <code>add_prefix</code> in <code>pandas</code>, so if you have a pandas dataframe, you can just use <code>add_prefix</code> to add to the columns, an example of making a dataframe out of a list and having them as columns:</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; pd.DataFrame(columns=['South', 'North']).add_prefix('to_').columns.tolist()
['to_South', 'to_North']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>lst = ['South', 'North']
result = ['to_' + direction for direction in lst]
</code></pre>
<p>As an alternative you could use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>:</p>
<pre><code>def add_to_beginning(s, start='to_'):
    return start + s

lst = ['South', 'North']

result = list(map(add_to_beginning, lst))
print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>dict.keys()</code> does not return the actual keys, it merely returns a view (=copy) of the keys.</p>
<p>If you want to print a modified version of the keys:</p>
<pre><code>print(['to_' + key for key in d.keys()])
</code></pre>
<p>If you want to change the actual keys:</p>
<pre><code>d = {'to_' + key: value for key, value in d.items()}
</code></pre>
</div>
<span class="comment-copy">perfect^^ that is what I was looking for</span>
<span class="comment-copy">@oakca Please accept if it works :-)</span>
<span class="comment-copy">I was waiting for the minute</span>
<span class="comment-copy">@oakca To solve the problem of the removed comment: <code>list(map((site+'-').__add__, l))</code></span>
<span class="comment-copy">nice one, but it is basically adding a string to each element with a for loop. I was looking for some build in function which would do the same thing, without a for loop?</span>
<span class="comment-copy">@oakca You are going to need to have a loop <i>somewhere</i>, whether it is explicit or implicit. I'd rather have it explicit</span>
