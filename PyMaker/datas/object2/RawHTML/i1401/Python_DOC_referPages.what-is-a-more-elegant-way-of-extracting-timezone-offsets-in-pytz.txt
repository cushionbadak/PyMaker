<div class="post-text" itemprop="text">
<p>I have a bit of code that uses <code>datetime</code>, <code>pytz</code> and <code>re</code> to determine the UTC offset of a given timezone, in the form of a <code>datetime.timedelta</code> object:</p>
<pre><code>def get_utcoffset(mic, date):
    that_day = datetime.datetime.combine(date, datetime.time())
    tzone = pytz.timezone(timezones[mic]) # e.g. pytz.timezone("Asia/Tokyo")
    offset_string = tzone.localize(that_day).strftime("%z")
    pattern = "^(.)(\\d{2})(\\d{2})$"
    captured = re.search(pattern, offset_string)
    sign = captured.group(1)
    hh = int(captured.group(2))
    mm = int(captured.group(3))
    if sign == "-":
        return datetime.timedelta(hours=-hh, minutes=-mm)
    return datetime.timedelta(hours=hh, minutes=mm)
</code></pre>
<p>It looks like there should be a more elegant and efficient way of doing this, since the <code>pytz.timezone.localize</code> must be aware of its own offsets relative to UTC. It seems wasteful to extract the offset values as a string and then use regex to essentially sscanf the string.</p>
<p>How can we make this code better?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you look at the <a href="https://docs.python.org/3/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer">documentation for Python <code>tzinfo</code> objects</a> you'll see a method called <code>utcoffset</code>. This will give you the offset directly.</p>
<pre><code>delta = tzone.utcoffset(that_day)
return delta
</code></pre>
<p>Edit: no need to call <code>localize</code> on the <code>datetime</code>, The <code>pytz</code> object does it itself as part of <code>utcoffset</code>. It expects to be passed a naive datetime.</p>
</div>
