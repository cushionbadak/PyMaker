<div class="post-text" itemprop="text">
<p>I am trying to scrape contents from <a href="http://www.alfie.tokyo/schedule/" rel="nofollow noreferrer">this website</a>.
As below, I have a list of all paragraph contains regex "\d+\s(\w{3})". </p>
<pre><code>events = response.xpath('//p[re:match(text(), "\d+\s\(\w{3}\)")]').extract()
</code></pre>
<p>I want a regex to get all text between "\d+\s(\w{3})" and "\d{2}00" from each paragraph excluding the regext matched texts.</p>
<p>Below works, but I want the string in between.</p>
<pre><code>for ev in events:
     event_detail = re.search(r'\d+\s\(\w{3}\).*?\d{2}00', ev)
</code></pre>
<p>I tried below but no luck, an got an error "sre_constants.error: look-behind requires fixed-width pattern":</p>
<pre><code>for ev in events:
    event_detail = re.search('(?&lt;=(\d+\s\(\w{3}\))(.*?)(\d{2}00)', ev)
    print(event_detail)
</code></pre>
<p>How could I write a correct regex using lool-behind and look-ahead?</p>
<p>[Solved]
I got rid of "+" in my regex look-behind. Below works perfect.</p>
<p><code>for ev in events:
       event_detail = re.search(r'(?&lt;=\d\s\(\w{3}\)).*(?=\d{2}00)', ev)
       print(event_detail)</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
import requests
from bs4 import BeautifulSoup

url = 'http://www.alfie.tokyo/schedule/201812.html'
r = requests.get(url)
soup = BeautifulSoup(r.content, 'html.parser')

re.findall('\d+\s\w{3}.*\d{2}:00', soup.prettify())
</code></pre>
<p>output:</p>
<pre><code>['30 1st. 20:00',
 '00 演奏1st. 19:30 2nd. 21:00',
 '30 1st. 20:00',
 '00 演奏1st.19:30 2nd. 21:00']
</code></pre>
<p>Note: I assume you meant \d{2}:00 not \d{2}00</p>
</div>
<span class="comment-copy">Thank you gregory. Do you know how I could get the texts using look-behind and look-ahead?</span>
<span class="comment-copy">Sure, you just add those to your pattern, for example: <code>re.findall('(?&lt;=:)[\d:]+\s\w{3}.*\d{2}:00.*', soup.prettify())</code>.  There's nothing special here, just using standard syntax as defined in the documentation: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a>.  As a side note, I wouldn't really do this--since beautiful soup parses the HTML, I'd let the parser do the work of finding elements; see here: <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup/bs4/doc/#find</a></span>
