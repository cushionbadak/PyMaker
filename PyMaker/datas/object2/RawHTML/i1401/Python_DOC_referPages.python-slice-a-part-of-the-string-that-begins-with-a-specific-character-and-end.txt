<div class="post-text" itemprop="text">
<p>I want to extract information after a chosen character and stop before a chosen character; for example, extract from <code>*</code> and end with a space, then put the identified words into a new list.</p>
<pre><code>&gt;&gt;&gt; extract_star('*we are *engineers *happy very *much')
['we', 'engineers', 'happy', 'much']
</code></pre>
<p>I tried using <code>split</code> and <code>find</code> functions, or maybe check boolean type with <code>startswith</code> and <code>endswith</code> functions ... but it didn't really work..</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> for that:</p>
<pre><code>import re

def extract_star(s):
    return re.findall(r'\*(.+?)\b', s)

extract_star('*we are *engineers *happy very *much')
# ['we', 'engineers', 'happy', 'much']
</code></pre>
<p>This collects all <code>.+?</code> groups (one or more of anything non-greedily) preceded by a <code>'*'</code> and followed by a word boundary <code>'\b'</code> (with space you'd miss the last match).</p>
</div>
<div class="post-text" itemprop="text">
<p>It appears the you're close with the methods you know:</p>
<ul>
<li>Split the string on spaces</li>
<li>Find the elements that start with <code>*</code></li>
<li><p>Keep the remainders of those elements</p>
<p>extract_star(s):
    words = s.split()
    star_words = [word for word in words if word.startswith('*')]
    result = [word[1:] for word in star_words
    return result</p></li>
</ul>
<p>... or, in one expression ...</p>
<pre><code>return [word[1:] for word in s.split() if word.startswith('*')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can split by <code>'*'</code>, ignore empty strings, split by whitespace, then extract the 0th value:</p>
<pre><code>def extract_star(x):
    return [i.split(maxsplit=1)[0] for i in x.split('*') if i]

res = extract_star('*we are *engineers *happy very *much')

['we', 'engineers', 'happy', 'much']
</code></pre>
<p>Or functionally:</p>
<pre><code>from operator import itemgetter

def extract_star(x):
    return list(map(itemgetter(0), map(str.split, filter(None, x.split('*')))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The rest have given plenty of options for how you can do this if it starts with the character.</p>
<p>If it doesn't <em>start</em> with the special character (or even if it does), you can try doing something like this.</p>
<pre><code>def extract_star(sentence, sc = '*'):
    mywords = sentence.split()
    res = [word[:word.find(sc)] + word[word.find(sc) + 1:] for word in mywords if sc in word]
    return res

result = extract_star('*we are *engineers *happy very *much')
result = extract_star('*we are *engineers *happy very m*uch')

['we', 'engineers', 'happy', 'much']
</code></pre>
</div>
<span class="comment-copy">Fixed; thanks.  Head cold today, I think.</span>
