<div class="post-text" itemprop="text">
<p>I have two keywords in my robot file. The first method should give me a status code and the second should get this code from context and match it with the argument I have given. The test case basically checks whether the status code from an api is 200 or not, the 200 which I will be passing as an argument.</p>
<p>I had tried to give the value as suite variable and then use the Get Variable Value keyword to get the value. The problem with this is the argument to the above keyword will give 'Variable definition not found' error. Please find the two methods
<a href="https://i.stack.imgur.com/7a8Ox.png" rel="nofollow noreferrer"><img alt="The two methods where the variable has to be used" src="https://i.stack.imgur.com/7a8Ox.png"/></a></p>
<p>The reason I do not want to return from the first keyword and give to the second is because of the format of test cases I am told to use.</p>
<p><a href="https://i.stack.imgur.com/fvgOy.png" rel="nofollow noreferrer"><img alt="Test case" src="https://i.stack.imgur.com/fvgOy.png"/></a></p>
<p>I would have used a hashmap in Java. I am new to robot framework and pycharm. Can someone help me out?</p>
<pre><code>I Post A POST Request
create session  ${Post_Request.alias}  ${Post_Request.session_url}
${headers} =  create dictionary  Accept=${Post_Request.Accept}  Cache-Control=${Post_Request.Cache_Control}  Content-Type=${Post_Request.Content_Type}
${params} =  create dictionary   grant_type=${Post_Request.grant_type}  redirect_uri=${Post_Request.redirect_uri}  client_id=${Post_Request.client_id}  refresh_token=${Post_Request.refresh_token}
${resp} =  POST REQUEST  ${alias}  ${Post_Request.uri}   params=${params}   headers=${headers}
log to console  ${resp.json()}
set suite variable  ${response_code}  ${resp.status_code}

Verify The status Code   ${resp.status_code}
[Arguments]  ${resp.status_code}
${response_code} =  Get Variable Value  ${response_code}
log to console  resp_code=${response_code}
should be equal as strings  ${resp.status_code}  ${response_code}
log to console   Status code is 200
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The core of this issue seems to me to be spacing. Below is the essential solution of your problem. When using <a href="http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#embedding-arguments-into-keyword-name" rel="nofollow noreferrer">embedded arguments</a> in the keyword name there should be no double spaces as they have special meaning in RF. </p>
<pre><code>*** Test Cases ***
Test Case
    When I post A POST Request
    Then verify the status code is 200

*** Keywords ***
I Post A POST Request
    Set Suite Variable    ${resp_code}    200

Verify the status code is ${status_code}
    Should Be Equal As Strings    ${resp_code}    ${status_code}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will need to remove the [Argument] if you want the variable parameter embedded. Also change the embedded variable name, as at the moment it looks like a dictionary value passes in from just a string value:</p>
<pre><code>*** Test Cases ***
Test Case
    When I post A POST Request
    Then verify the status code 200

*** Keywords ***
I Post A POST Request
    &amp;{resp}=  create dictionary    status_code=200
    set suite variable  ${resp.status_code}

Verify The status Code ${expected_response_code}
    ${actual_response_code} =  Get Variable Value  ${resp.status_code}
    should be equal as strings  ${expected_response_code}  ${actual_response_code}
</code></pre>
<p>Also consider using "Set Test Variable" to lower the scope of the variable or you might have some undesired impact on other tests further down the line (unless you need it at suite level).</p>
</div>
<span class="comment-copy">Are you looking for <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">python dicts</a> ? These are the python equivalent of associative arrays/hashtables</span>
<span class="comment-copy">Not specifically python dicts. Any pre-existing keyword maybe? If they are not available, then hashmaps. I actually want to do this in a single step. So all responses are welcome</span>
<span class="comment-copy">Please do not use screenshots of code, as they prevent copy and pasting by those who want to replicate your issue.</span>
<span class="comment-copy">I don't know why, the spacing doesn't solve my issue. I have copied the code for your reference</span>
<span class="comment-copy">I don't know what you want to say. I'm assuming when you copy the example in a separate robot file and run it, you should get a passed test. If not, please comment with the observed result.</span>
<span class="comment-copy">Hi. It worked! I was confused because I was getting 'variable definition not found' error on hovering, but when I ran it, it worked. One doubt, Should the argument to a keyword be given one space apart or two? When I gave it two space apart in the keyword call and in the keyword, I was getting 'Keyword' cannot be empty error. However, when i gave it one space apart, like your code above, I didn't get the error. So sorry! I am getting basic doubts!</span>
<span class="comment-copy">See updated answer.</span>
