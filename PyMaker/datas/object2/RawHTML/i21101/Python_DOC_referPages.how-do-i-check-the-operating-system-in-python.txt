<div class="post-text" itemprop="text">
<p>I want to check the operating system (on the computer where the script runs).</p>
<p>I know I can use <code>os.system('uname -o')</code> in Linux, but it gives me a message in the console, and I want to write to a variable.</p>
<p>It will be okay if the script can tell if it is Mac, Windows or Linux. How can I check it? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/sys.html#platform" rel="noreferrer"><code>sys.platform</code></a>:</p>
<pre><code>from sys import platform
if platform == "linux" or platform == "linux2":
    # linux
elif platform == "darwin":
    # OS X
elif platform == "win32":
    # Windows...
</code></pre>
<p><code>sys.platform</code> has finer granularity than <code>sys.name</code>.</p>
<p>For the valid values, consult <a href="https://docs.python.org/2/library/sys.html#platform" rel="noreferrer">the documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can get a pretty coarse idea of the OS you're using by checking <a href="http://docs.python.org/library/sys.html#sys.platform" rel="noreferrer"><code>sys.platform</code></a>.</p>
<p>Once you have that information you can use it to determine if calling something like <a href="http://docs.python.org/library/os.html#os.uname" rel="noreferrer"><code>os.uname()</code></a> is appropriate to gather more specific information.  You could also use something like <a href="https://bitbucket.org/chrismiles/psi/wiki/Home" rel="noreferrer">Python System Information</a> on unix-like OSes, or <a href="http://sourceforge.net/projects/pywin32/" rel="noreferrer">pywin32</a> for Windows.</p>
<p>There's also <a href="http://code.google.com/p/psutil/" rel="noreferrer">psutil</a> if you want to do more in-depth inspection without wanting to care about the OS.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to know on which platform you are: "Linux", "Windows" or "Darwin" (Mac) without more precision, you should use:</p>
<pre><code>&gt;&gt;&gt; import platform
&gt;&gt;&gt; platform.system()
'Linux'  # or 'Windows'/'Darwin'
</code></pre>
<p>The <a href="https://docs.python.org/3/library/platform.html#platform.system" rel="noreferrer"><code>platform.system</code></a> function use <code>uname</code> internally.</p>
</div>
<div class="post-text" itemprop="text">
<p>More detailed information are available in the <a href="http://docs.python.org/library/platform.html" rel="noreferrer"><code>platform</code> module</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/library/sys.html#sys.platform" rel="nofollow"><code>sys.platform</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>There seems to be some conflicting information about how Windows identifies. Some sources are saying "Windows", and other sources are saying "win32".</p>
<p>With that in mind...</p>
<pre><code>from sys import platform

if "win" in platform.lower():
    print platform

win32
</code></pre>
<p>That might be true in Cygwin though. But you can always add a check to make sure "cy" isn't in there.</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/1854/how-can-i-tell-what-os-i-am-running-on-from-python">How can I tell What OS I am running on from Python?</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1854/python-what-os-am-i-running-on">Python: What OS am I running on?</a></span>
<span class="comment-copy">Note that in cygwin, it returns <code>"cygwin"</code> not <code>"win32"</code> as someone might expect.</span>
<span class="comment-copy">I tested this code on Windows 7 using Cygwin, using Python 2, and it returned _platform as "win32".</span>
<span class="comment-copy">Thanks. What's the difference between linux and linux2 ?</span>
<span class="comment-copy">what would the output for BSD be ?</span>
<span class="comment-copy">Why <code>as _platform</code>? What's wrong with just using <code>platform</code> directly, without aliasing it to anything?</span>
<span class="comment-copy">I like this solution but I want to point out that from the docs it states that it will return <code>Linux</code>, <code>Windows</code>, <code>Java</code> or an empty string.<a href="https://devdocs.io/python~3.7/library/platform#platform.system" rel="nofollow noreferrer">devdocs.io/python~3.7/library/platform#platform.system</a></span>
<span class="comment-copy">@BrandonBenefield, the enumeration is an example of possible values. On Apple devices, it returns “Darwin”.</span>
<span class="comment-copy">Does the <code>platform</code> module have any advantage over <code>sys.platform</code>? When would I want to use which approach?</span>
<span class="comment-copy">@matth: You get more detailed, structured information from the <code>platform</code> module.  Just click the link for documentation.</span>
<span class="comment-copy"><code>sys.platform</code> is <code>darwin</code> on <b>macOS</b>, which satisfies this condition as well. I'm using <code>if sys.platform.lower().startswith('win'):</code></span>
<span class="comment-copy">Oh! Thanks for the correction. That's good to know.</span>
