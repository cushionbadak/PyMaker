<div class="post-text" itemprop="text">
<p>The Python 2 docs for <a href="https://docs.python.org/2/library/filecmp.html#module-filecmp" rel="nofollow"><code>filecmp()</code></a> say:</p>
<blockquote>
<p>Unless <em>shallow</em> is given and is false, files with identical <a href="https://docs.python.org/2/library/os.html#os.stat" rel="nofollow"><code>os.stat()</code></a> signatures are taken to be equal.</p>
</blockquote>
<p>Which sounds like two files which are identical except for their <code>os.stat()</code> signature will be considered unequal, however this does not seem to be the case, as illustrated by running the following code snippet:</p>
<pre><code>import filecmp
import os
import shutil
import time

with open('test_file_1', 'w') as f:
    f.write('file contents')
shutil.copy('test_file_1', 'test_file_2')
time.sleep(5)  # pause to get a different time-stamp
os.utime('test_file_2', None)  # change copied file's time-stamp

print 'test_file_1:', os.stat('test_file_1')
print 'test_file_2:', os.stat('test_file_2')
print 'filecmp.cmp():', filecmp.cmp('test_file_1', 'test_file_2')
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>test_file_1: nt.stat_result(st_mode=33206, st_ino=0L, st_dev=0, st_nlink=0,
  st_uid=0, st_gid=0, st_size=13L, st_atime=1320719522L, st_mtime=1320720444L, 
  st_ctime=1320719522L)
test_file_2: nt.stat_result(st_mode=33206, st_ino=0L, st_dev=0, st_nlink=0, 
  st_uid=0, st_gid=0, st_size=13L, st_atime=1320720504L, st_mtime=1320720504L, 
  st_ctime=1320719539L)
filecmp.cmp(): True
</code></pre>
<p>As you can see the two files' time stamps — <code>st_atime</code>, <code>st_mtime</code>, and <code>st_ctime</code>— are clearly not the same, yet <code>filecmp.cmp()</code> indicates that the two are identical.  Am I misunderstanding something or is there a bug in either <code>filecmp.cmp()</code>'s implementation or its documentation?</p>
<p><strong>Update</strong></p>
<p>The Python 3 <a href="https://docs.python.org/3/library/filecmp.html#module-filecmp" rel="nofollow">documentation</a> has been rephrased and currently says the following, which IMHO is an improvement only in the sense that it better implies that files with different time stamps might still be considered equal even when <code>shallow</code> is True.</p>
<blockquote>
<p>If <em>shallow</em> is true, files with identical <a href="https://docs.python.org/3/library/os.html#os.stat" rel="nofollow"><code>os.stat()</code></a> signatures are
  taken to be equal. Otherwise, the contents of the files are compared.</p>
</blockquote>
<p>FWIW I think it would have been better to simply have said something like this:</p>
<blockquote>
<p>If <em>shallow</em> is true, file content is compared only when
  <a href="https://docs.python.org/3/library/os.html#os.stat" rel="nofollow"><code>os.stat()</code></a>
  signatures are unequal.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You're misunderstanding the documentation.  Line #2 says:</p>
<blockquote>
<p>Unless <em>shallow</em> is given and is false, files with identical <code>os.stat()</code> signatures are taken to be equal.</p>
</blockquote>
<p>Files with identical <code>os.stat()</code> signatures are taken to be equal, but the <a href="http://en.wikipedia.org/wiki/Inverse_%28logic%29">logical inverse</a> is not true: files with unequal <code>os.stat()</code> signatures are not necessarily taken to be unequal.  Rather, they <em>may</em> be unequal, in which case the actual file contents are compared.  Since the file contents are found to be identical, <code>filecmp.cmp()</code> returns <code>True</code>.</p>
<p>As per the third clause, once it determines that the files are equal, it will cache that result and not bother re-reading the file contents if you ask it to compare the same files again, <em>so long as those files' <code>os.stat</code> structures don't change</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that 'rolling your own' is indeed what is required to produce a desirable result.  It would simply be nice if the documentation were clear enough to make a casual reader reach that conclusion.</p>
<p>Here's the function I am presently using:</p>
<pre><code>def cmp_stat_weak(a, b):
    sa = os.stat(a)
    sb = os.stat(b)
    return (sa.st_size == sb.st_size and sa.st_mtime == sb.st_mtime)
</code></pre>
</div>
<span class="comment-copy">This is a correct interpretation.</span>
<span class="comment-copy">Yes, I assumed that the logical inverse of line #2 would be true. Thanks. Is there a Python built-in that would consider them unequal or must I roll my own?</span>
<span class="comment-copy">After locating and examining the code for filecmp.py I can now plainly see what <code>cmp()</code> does -- which I think is inconsistent with the documentation. When <code>shallow</code> is given (or defaults) to a true value it is not being honored, in the sense that the files are not read, unless their <code>os.stat()</code> based signatures match. Seems to me that if <code>shallow</code> is true their contents shouldn't ever be compared and only their signatures considered -- which is what the docs say and the behavior I desire.</span>
<span class="comment-copy">Yes, that's the sort of comparison I thought <code>filecmp.cmp()</code> would do using its <code>shallow</code> option, but how to do it was not my question -- and besides creating a drop-in replacement for the what function does is a little more involved that this. Also, I don't consider myself a "casual reader" in the sense that my perusal of the document was in any way shallow or superficial, it was quite the opposite. "typical" would be a better adjective.</span>
