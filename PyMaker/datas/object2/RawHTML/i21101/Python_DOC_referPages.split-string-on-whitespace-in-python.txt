<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4309684/split-a-string-with-unknown-number-of-spaces-as-separator-in-python">Split a string with unknown number of spaces as separator in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm looking for the Python equivalent of </p>
<pre><code>String str = "many   fancy word \nhello    \thi";
String whiteSpaceRegex = "\\s";
String[] words = str.split(whiteSpaceRegex);

["many", "fancy", "word", "hello", "hi"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>str.split()</code> method without an argument splits on whitespace:</p>
<pre><code>&gt;&gt;&gt; "many   fancy word \nhello    \thi".split()
['many', 'fancy', 'word', 'hello', 'hi']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
s = "many   fancy word \nhello    \thi"
re.split('\s+', s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another method through <code>re</code> module. It does the reverse operation of matching all the words instead of spitting the whole sentence by space.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "many   fancy word \nhello    \thi"
&gt;&gt;&gt; re.findall(r'\S+', s)
['many', 'fancy', 'word', 'hello', 'hi']
</code></pre>
<p>Above regex would match one or more non-space characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>split()</code> will be the most <em>Pythonic</em> way of splitting on a string.</p>
<p>It's also useful to remember that if you use <code>split()</code> on a string that does not have a whitespace then that string will be returned to you in a list.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; "ark".split()
['ark']
</code></pre>
</div>
<span class="comment-copy">That's a statement. You should ask a question. Some questions for you: Where are you looking? Have you found the <code>re</code> module yet?</span>
<span class="comment-copy">that's why the asker said they were looking for the <i>python equivalent</i> of it</span>
<span class="comment-copy">Also good to know is that if you want the first word only (which means passing <code>1</code> as second argument), you can use <code>None</code> as the first argument: <code>s.split(None, 1)</code></span>
<span class="comment-copy">If you only want the first word, use <i>str.partition</i>.</span>
<span class="comment-copy">@yak : Can you please edit your comment. The way it sounds right now is that s.split(None, 1) would return 1st word only. It rather gives a list of size 2. First item being the first word, second - rest of the string. <code>s.split(None, 1)[0]</code> would return the first word only</span>
<span class="comment-copy">@galois No, it uses a custom implementation (which is faster).  Also note that it handles leading and trailing whitespace differently.</span>
<span class="comment-copy">@KishorPawar It's rather unclear to me what you are trying to achieve. Do you want to split on whitespace, but disregard whitespace inside single-quoted substrings? If so, you can look into <a href="https://docs.python.org/3/library/shlex.html#shlex.split" rel="nofollow noreferrer"><code>shlex.split()</code></a>, which may be what you are looking for. Otherwise I suggest asking a new question â€“ you will get a much quicker and more detailed answer.</span>
<span class="comment-copy">this gives me a whitespace token at the end of the line. No idea why, the original line doesn't even have that. Maybe this ignores newline?</span>
<span class="comment-copy">@Gulzar do a <code>strip()</code> at the end</span>
<span class="comment-copy">Note that this is usually slower than str.split if performance is an issue.</span>
