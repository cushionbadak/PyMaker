<div class="post-text" itemprop="text">
<p>I have a list containing URLs with escaped characters in them. Those characters have been set by <code>urllib2.urlopen</code> when it recovers the html page:</p>
<pre><code>http://www.sample1webpage.com/index.php?title=%E9%A6%96%E9%A1%B5&amp;action=edit
http://www.sample1webpage.com/index.php?title=%E9%A6%96%E9%A1%B5&amp;action=history
http://www.sample1webpage.com/index.php?title=%E9%A6%96%E9%A1%B5&amp;variant=zh 
</code></pre>
<p>Is there a way to transform them back to their unescaped form in python?</p>
<p>P.S.: The URLs are encoded in utf-8</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/library/urllib.html#urllib.unquote" rel="noreferrer">Official docs.</a></p>
<blockquote>
<p><code>urllib.unquote(</code><em>string</em><code>)</code> </p>
<p>Replace <code>%xx</code> escapes by their single-character equivalent.</p>
<p>Example: <code>unquote('/%7Econnolly/')</code> yields <code>'/~connolly/'</code>.</p>
</blockquote>
<p>And then just decode.</p>
<hr/>
<p><strong>Update:</strong>
For Python 3, write the following:</p>
<pre><code>urllib.parse.unquote(url)
</code></pre>
<p><a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.unquote" rel="noreferrer">Python 3 docs.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>And if you are using <code>Python3</code> you could use:</p>
<pre><code>urllib.parse.unquote(url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>or <code>urllib.unquote_plus</code></p>
<pre><code>&gt;&gt;&gt; import urllib
&gt;&gt;&gt; urllib.unquote('erythrocyte+membrane+protein+1%2C+PfEMP1+%28VAR%29')
'erythrocyte+membrane+protein+1,+PfEMP1+(VAR)'
&gt;&gt;&gt; urllib.unquote_plus('erythrocyte+membrane+protein+1%2C+PfEMP1+%28VAR%29')
'erythrocyte membrane protein 1, PfEMP1 (VAR)'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/library/urllib.html" rel="noreferrer"><code>urllib.unquote</code></a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

def unquote(url):
  return re.compile('%([0-9a-fA-F]{2})',re.M).sub(lambda m: chr(int(m.group(1),16)), url)
</code></pre>
</div>
<span class="comment-copy">the unquote shows as i said above sample.com/index.php?title=\xe9\xa6\x96\xe9\xa1\xb5&amp;action=edi ... maybe i did not explain myself very well in this case... but the url is a chinese one and i want to decode to it's original char, not the unquote one</span>
<span class="comment-copy">@dyoser You need to put this in your question.</span>
<span class="comment-copy">@root45 this is a comment to one answer... so it's right good here. Thanks for your appreciation.</span>
<span class="comment-copy">Just a note that for python3, this is <code>urllib.parse.unquote</code></span>
<span class="comment-copy">For python3 it is also in <code>urllib.request.unquote</code></span>
<span class="comment-copy">Also in <code>urllib.request.unquote</code></span>
<span class="comment-copy">when i use the unquote (thanks by the way...) it shows this string <a href="http://sample.com/index.php?title=" rel="nofollow noreferrer">sample.com/index.php?title=</a>\xe9\xa6\x96\xe9\xa1\xb5&amp;action=edi and i know they're chinese chars... how can i see them? I guess this is unicode, right?</span>
<span class="comment-copy">That's in your question already. Those are the UTF-8 bytes; you can convert them to a Unicode string with <code>b"\xe9\xa6\x96\xe9\xa1\xb5".decode("utf-8")</code> (using somewhat more modern Python syntax now).</span>
<span class="comment-copy">Why would you manually use regex and lambdas when there's a built in library that does what you need, probably even more thoughtfully?</span>
<span class="comment-copy">Cool solution! <code>urllib2</code> is not part of standard python distri.  <code>re</code> is.</span>
