<div class="post-text" itemprop="text">
<p>How can I convert <code>"[(5, 2), (1,3), (4,5)]"</code> into a list of tuples 
<code>[(5, 2), (1,3), (4,5)]</code></p>
<p>I am using <code>planetlab</code> shell that does not support <code>"import ast"</code>. So I am unable to use it. </p>
</div>
<div class="post-text" itemprop="text">
<p>If <a href="http://docs.python.org/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a> is unavailable, you can use the (unsafe!) <a href="http://docs.python.org/library/functions.html#eval" rel="nofollow"><code>eval</code></a>:</p>
<pre><code>&gt;&gt;&gt; s = "[(5, 2), (1,3), (4,5)]"
&gt;&gt;&gt; eval(s)
[(5, 2), (1, 3), (4, 5)]
</code></pre>
<p>However, you should really overthink your serialization format. If you're transferring data between Python applications and need the distinction between tuples and lists, use <a href="http://docs.python.org/library/pickle.html" rel="nofollow">pickle</a>. Otherwise, use <a href="http://docs.python.org/library/json.html" rel="nofollow"><strong>JSON</strong></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't trust the source of the string enough to use <code>eval</code>, then use <code>re</code>.</p>
<pre><code>import re
tuple_rx = re.compile("\((\d+),\s*(\d+)\)")
result = []
for match in tuple_rx.finditer("[(5, 2), (1,3), (4,5)]"):
  result.append((int(match.group(1)), int(match.group(2))))
</code></pre>
<p>The code above is very straightforward and only works with 2-tuples of integers. If you want to parse more complex structures, you're better off with a proper parser.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">'join'</a> replace following characters '()[] ' and creates string of comma separated numbers</p>
<p><code>5,2,1,3,4,5</code></p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">'split'</a> splits that string on ',' and creates list strings</p>
<p><code>['5','2','1','3','4','5']</code></p>
<p><a href="https://docs.python.org/3/library/functions.html?highlight=iter#iter" rel="nofollow noreferrer">'iter'</a> creates iterator that will go over list of elements</p>
<p>and the last line uses a list comprehension using <a href="https://docs.python.org/3/library/functions.html?highlight=iter#zip" rel="nofollow noreferrer">'zip'</a> to group together two numbers</p>
<pre><code>it = iter("".join(c for c in data if c not in "()[] ").split(","))
result = [(int(x), int(y)) for x, y in zip(it, it)]

&gt;&gt;&gt; [(5, 2), (1, 3), (4, 5)]
</code></pre>
</div>
<span class="comment-copy">For the 1230123012312th time: <code>ast.literal_eval</code></span>
<span class="comment-copy">@JBernardo: Maybe that should be an answer?</span>
<span class="comment-copy">I am using planetlab shell that does not support "import ast". SO I am unable to use it.</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/5230274/convert-a-list-of-strings-that-i-would-like-to-convert-to-a-list-of-tuples">convert a list of strings that i would like to convert to a list of tuples</a></span>
<span class="comment-copy">@Parikshit Then a plain <code>eval</code> won't help you?</span>
<span class="comment-copy">I see if s = "[('a', 2), ('b',3), ('c',5)]" result is [(a, 2), (b, 3), (c, 5)]</span>
<span class="comment-copy">@Slim_user71169 That's not true in any Python I know of. Can you post a link to an online interpreter that shows the problem, <a href="http://ideone.com/5jbz8O" rel="nofollow noreferrer">like this</a>?</span>
