<div class="post-text" itemprop="text">
<p>What is the Python 3 equivalent of <code>python -m SimpleHTTPServer</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/2/library/simplehttpserver.html">the docs</a>:</p>
<blockquote>
<p>The <code>SimpleHTTPServer</code> module has been merged into <code>http.server</code> in Python 3.0. The 2to3 tool will automatically adapt imports when converting your sources to 3.0.</p>
</blockquote>
<p>So, your command is <code>python3 -m http.server</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The equivalent is:</p>
<pre><code>python3 -m http.server
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using 2to3 utility.</p>
<pre><code>$ cat try.py
import SimpleHTTPServer

$ 2to3 try.py
RefactoringTool: Skipping implicit fixer: buffer
RefactoringTool: Skipping implicit fixer: idioms
RefactoringTool: Skipping implicit fixer: set_literal
RefactoringTool: Skipping implicit fixer: ws_comma
RefactoringTool: Refactored try.py
--- try.py  (original)
+++ try.py  (refactored)
@@ -1 +1 @@
-import SimpleHTTPServer
+import http.server
RefactoringTool: Files that need to be modified:
RefactoringTool: try.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition to Petr's answer, if you want to bind to a specific interface instead of all the interfaces you can use -b/--bind flag.</p>
<pre><code>python -m http.server 8000 --bind 127.0.0.1
</code></pre>
<p>The above snippet should do the trick. 8000 is the port number. 80 is used as the standard port for HTTP communications.</p>
</div>
<div class="post-text" itemprop="text">
<p>In one of my projects I run tests against Python 2 and 3. For that I wrote a small script which starts a local server independently:</p>
<pre><code>$ python -m $(python -c 'import sys; print("http.server" if sys.version_info[:2] &gt; (2,7) else "SimpleHTTPServer")')
Serving HTTP on 0.0.0.0 port 8000 ...
</code></pre>
<p>As an alias:</p>
<pre><code>$ alias serve="python -m $(python -c 'import sys; print("http.server" if sys.version_info[:2] &gt; (2,7) else "SimpleHTTPServer")')"
$ serve
Serving HTTP on 0.0.0.0 port 8000 ...
</code></pre>
<p>Please note that I control my Python version via <a href="https://conda.io/docs/user-guide/tasks/manage-environments.html" rel="nofollow noreferrer">conda environments</a>, because of that I can use <code>python</code> instead of <code>python3</code> for using Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>The command <code>python -m SimpleHTTPServer</code> is for Linux. Use Command <code>python -m http.server 7777</code> for Windows</p>
</div>
<span class="comment-copy">In Python 3.3, the replacement for <code>python -m CGIHTTPServer</code> is <code>python3 -m http.server --cgi</code>.</span>
<span class="comment-copy">Sure, just tack it on the end of the command line. Read <code>python3 -m http.server --help</code> for all the args &amp; options.</span>
<span class="comment-copy"><code>python -m http.server</code> worked for me. I had to remove the <code>3</code></span>
<span class="comment-copy">@nueverest It depends on how your Python installation is 'named'. Usually Python2 is available as <code>python</code> and Python3 as <code>python3</code> but some prefer to install Python3 simply as <code>python</code>.</span>
<span class="comment-copy">AFAIK, on Windows, it'll install as just <code>python</code> by default. But, the question is for <code>python3</code> :)</span>
<span class="comment-copy">And <code>python3 -m http.server 8080</code> if You need to bind to a port. Read more at the end of the section: <a href="https://docs.python.org/3/library/http.server.html#http.server.SimpleHTTPRequestHandler" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">By default, it will bind to port 8000. See <code>python3 -m http.server --help</code> for details.</span>
<span class="comment-copy">I really like this answer - having a knowledge about how to actually find these things out for myself is really useful.</span>
<span class="comment-copy">Using Python 3.6 on Windows 10 this was the only thing that would work. Thanks.</span>
<span class="comment-copy">The difference seems to be in the port number only. Can you explain how this depends on the OS?</span>
<span class="comment-copy">you can choose any port number like "8000" , etc. I want to point out the difference in command.</span>
<span class="comment-copy">this answer is incorrect.</span>
<span class="comment-copy">The module name changed between python 2 (SimpleHTTPServer) and python 3 (http.server). The platform is irrelevant. This answerer probably has different pythons on the two platforms.</span>
<span class="comment-copy">This difference in commands is that the first uses python2, while the later uses pyton3.</span>
