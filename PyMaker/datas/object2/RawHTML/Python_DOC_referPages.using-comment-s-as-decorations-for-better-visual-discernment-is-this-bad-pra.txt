<div class="post-text" itemprop="text">
<p>I'm working on a very repetitive code. I'm using selenium to launch a webdriver to extrapolate javascript data generated by a PLC controller via its IP address. The script is a GUI that allows users to poll the data from the PLC, involving descriptive names, inputs, outputs, etc.</p>
<p>My question is: Is it bad practice, throughout the thousands of lines of code, to use the # as a visual in order to distinguish the code easier? Please look at the examples below:</p>
<p>Example 1 - Creating Headers</p>
<pre><code>###################################################################
# List Definition for (AI) with the point name stored in index[0] #     
###################################################################    
        self.ai_ain0_lst = ['Spindle FORCE']
        self.ai_ain1_lst = ['PT-47']
        self.ai_ain2_lst = ['PT-44']
        self.ai_ain3_lst = ['LOAD CELL']
        self.ai_ain4_lst = ['Ring Force Command']
        self.ai_ain5_lst = ['Back Pressure Command']
        self.ai_ain6_lst = ['PT-45']
        self.ai_ain7_lst = ['PT-42']
</code></pre>
<p>Example 2 - Boxing in code</p>
<pre><code>    # Logo Image ##################################################
    tech_logo = PhotoImage(file=path_to_folder + "tech_logo.png") #
    image_label = Label(self, image=tech_logo)                    #
    image_label.image = tech_logo                                 #
    image_label.grid(row=0, column=4, pady=10, padx=10, sticky=N) #
    ###############################################################
</code></pre>
<p>I still use #s appropriately throughout the code for others to follow along, but for the repetitive stuff I've been creating giant headers (Example 1), and indent them once to the left so I can collapse the code in my editor. Is this okay within the coding community? Frowned upon? Or does no one really care as long as the code works and has comments when necessary?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since indentation is meaningful in python, you are asking for trouble by using indentation like this.</p>
<p>Python gives you packages, modules, classes, methods and functions to allow you to structure your code. Try refactoring your code into these structures so that your <em>code</em>, not just your <em>text</em>, is easy to understand.</p>
</div>
<span class="comment-copy">This is opinion-based. Personally, I feel that comments often are making up for bad code. Try for self-documenting code. Example 2 is dreadful.</span>
<span class="comment-copy">@CaptainSkyhawk I'm just trying to get a feel for whether I should continue/stop this practice. I'm a fairly new coder and want to establish good practices up front. Your comment about Example 2 made me laugh.</span>
<span class="comment-copy">If a chunk of code should be kept together and differentiated from what surrounds it <i>within the same function</i>, that's a smell that the code should probably be factored out into its own function.</span>
<span class="comment-copy">Python is such a readable language, comments are less important than they are in many other languages. That said, it <i>is</i> often still useful to put them in the explain what or why something is being do as opposed to how the code is doing whatever it does. Also note that Python has built-in support for something called docstrings which are useful both to code readers as well to users of the code.</span>
<span class="comment-copy">Examples please? Which modules are you referring to? I will gladly look into them.</span>
<span class="comment-copy">I mean the modules you create yourself. You can split the big file up into modules, grouping relevant sections together.</span>
