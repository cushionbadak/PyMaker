<div class="post-text" itemprop="text">
<p>I'm trying to loop through a list of links from a text file and write the info to a text file. I get the 'index out of range' error and I have no idea why.</p>
<pre><code>import requests
from bs4 import BeautifulSoup


def item(a):
    return a[::2]


def details(a):
    return a[1::2]


sFile = open('scraped_data.txt', 'w+')

with open('C:/Users/Main/Desktop/Python Web Scraper/link_list.txt') as f:
    lines = f.read().splitlines()


def scrape(l):
    r = requests.get(l)
    soup = BeautifulSoup(r.text, "lxml")

    itemlist = []

    for items in soup.find_all('td'):
        itemlist.append(items.text.strip())

    for i in range(0, 6):
        print(item(itemlist)[i] + ' ' + details(itemlist)[i])


for i in range(0, 52):
    scrape(lines[i])

sFile.close()
</code></pre>
<p><strong>This is the console result.</strong></p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/Cobus Uys/PycharmProjects/Scraper/Scraper.py", line 33, in &lt;module&gt;
    scrape(lines[i])
  File "C:/Users/Cobus Uys/PycharmProjects/Scraper/Scraper.py", line 29, in scrape
    print(item(itemlist)[i] + ' ' + details(itemlist)[i])
IndexError: list index out of range
Process finished with exit code 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Wrap it in a <code>try/except</code> clause which will catch any errors and stop when iteration is complete.</p>
<p>You can also take advantage of adding extra <code>except</code> clauses and maybe use <code>else</code> or <code>finally</code> if appropriate.    </p>
<p>In the function:</p>
<pre><code>def scrape(l):
    r = requests.get(l)
    soup = BeautifulSoup(r.text, "lxml")

    itemlist = []

    for items in soup.find_all('td'):
        itemlist.append(items.text.strip())
    try:

        for i in range(0, 6):
            print(item(itemlist)[i] + ' ' + details(itemlist)[i])
    except IndexError:
        print('Scraping finished')
</code></pre>
<p>in the for loop:</p>
<pre><code>try:
    for i in range(0, 52):
        scrape(lines[i])
except IndexError:
    print('Scaraping Finished')
</code></pre>
</div>
<span class="comment-copy">It works like a charm, thank you. If I understand this correctly, it basically ignores the errors until the looping is finished?(I am very new to this, sorry.)</span>
<span class="comment-copy">In this instance. The only error will be an empty list which will throw the exception.  It means you can be sure the list is empty.  It also keeps a good error checking in place if you need to add extra except clauses</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html</a></span>
