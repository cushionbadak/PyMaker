<div class="post-text" itemprop="text">
<p>I want to group list digits by their value and calculate sum of each group. Basically, it looks this way:</p>
<p>input:</p>
<pre><code>list = [0,1,1,0,0,0,1,0,1,1,1,1,0]
</code></pre>
<p>OUT (which i want to get):</p>
<pre><code>newList = [0,2,0,1,0,4,0]
</code></pre>
<p>Any ideas how to acheive this in Python?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.groupby</code>:</p>
<pre><code>import itertools
s = [0,1,1,0,0,0,1,0,1,1,1,1,0]
final_s = [sum(b) for _, b in itertools.groupby(s)]
</code></pre>
<p>Output:</p>
<pre><code>[0, 2, 0, 1, 0, 4, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is recursive approach with one loop.</p>
<pre><code>list1 = [0,1,1,0,0,0,1,0,1,1,1,1,0]

final_=[]
def recursive(lst):
  track = []
  if not lst:
    return 0
  else:
    for i,j in enumerate(lst):
      try:


        if lst[i]==lst[i+1]:

          track.append((lst[i],lst[i+1]))
        else:
          track.append(lst[i])
          final_.append(track)
          return recursive(lst[i+1:])
      except IndexError:
        final_.append([i])
recursive(list1)

print(list(map(lambda x:0 if 0 in x else len(x),final_)))
</code></pre>
<p>output:</p>
<pre><code>[0, 2, 0, 1, 0, 4, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>ist = [0,1,1,0,0,0,1,0,1,1,1,1,0]
a=[[]]
[a[-1].append(e) if e==ist[c-1] else a.append([e]) for c,e in enumerate(ist)]
new_list=[sum(l) for l in a]
</code></pre>
<p>Doesn't need libraries. Output:</p>
<pre><code>[0, 2, 0, 1, 0, 4, 0]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itertools.groupby</a>.</span>
<span class="comment-copy">Works perfectly. Thank you so much!</span>
