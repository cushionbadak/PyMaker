<div class="post-text" itemprop="text">
<p>I have a class to parse data from some online dictionaries, it reads info about word from json and then executes methods as json tells to.
An example of json:</p>
<pre><code>{
"functions": [
    {
        "name": "find_translations",
        "properties": {
            "only_first": false
        }
    },
    {
        "name": "find_synonyms",
        "properties": {
             "number": 5
        }
],
"word": "to exuberate",
"language": "angielski",
"target_language": "polski",
"collection": "default"
}
</code></pre>
<p>So, I have a class with methods find_translations and find_synonyms. And __init __ is reading the json, and I want to execute functions <em>with parameters</em> as in json.
I could do a bunch of ifs, but it isn't scalable, I guess. I could do eval(), but it is a vulnerability. What do I do? Can I create something like a dictionary with functions?</p>
<p>EDIT:</p>
<p>Here's my class (simplified):</p>
<pre><code>class Parser:
  def __init__(self, path):
    ...
    # reads data from json
    ...

    # my problem: I need to launch methods from this class
    # that were mentioned in json. In case from example, I'd launch
    self.find_translations(self)
    self.find_synonyms(self)
    # it is an example, so without parameters


def find_translations(self):
    # do something

def find_synonyms(self):
    # do something

def find_usage(self):
    # do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the getattr function to call a particular method of class like this:- </p>
<pre><code>getattr(Parser, function_name_here)(arguments_here)
</code></pre>
<p>I think This was what you were asking for? I hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>ast.literal_eval</code> as a safer alternative to <code>eval</code>:</p>
<p>From <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p><code>ast.literal_eval</code>: Safely evaluate an expression node or a string
  containing a Python literal or container display. The string or node
  provided may only consist of the following Python literal structures:
  strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and
  <code>None</code>.</p>
<p>This can be used for safely evaluating strings containing Python
  values from untrusted sources without the need to parse the values
  oneself. It is not capable of evaluating arbitrarily complex
  expressions, for example involving operators or indexing.</p>
</blockquote>
</div>
<span class="comment-copy">I'm not sure I understood the question, but maybe you are searching for <code>**kwargs</code>? Here a reference: <a href="https://stackoverflow.com/a/3394898/2319299">stackoverflow.com/a/3394898/2319299</a></span>
<span class="comment-copy">Thanks, I forgot about this. It is solving my problem with passing arguments from json, but I still need to execute functions mentioned in json</span>
<span class="comment-copy">Ah! that was not clear... No you need to use some eval-like function, and you need to bound it very well. Make a "white" list of allowed functions and check that you run only json functions that are on that list. I don't have a safer method in mind right now... hope in someone with a better idea...</span>
<span class="comment-copy">Thanks! I edited my question. Eval came to my mind also, but I wasn't sure if it is a good idea, if nobody will post an idea better than yours, I will use it</span>
<span class="comment-copy">Thanks, I should read the documentation</span>
<span class="comment-copy">Yes, You can use self in place of Parser.</span>
<span class="comment-copy">That's a good idea...</span>
