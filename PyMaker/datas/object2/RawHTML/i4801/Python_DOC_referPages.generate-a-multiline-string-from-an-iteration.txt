<div class="post-text" itemprop="text">
<p>ths is probably a dumb question... I'm working with some data that is generated, line by line, after an iteration and I'd like to store the result for further processing in a multiline string. As an example, let me show you this:</p>
<pre><code>is_string = """"""""
for i in range(1, 101):
    is_string += str(i)
print(is_string)
</code></pre>
<p>The result is: <code>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100</code></p>
<p>But I'd like it to be a multiline string:</p>
<pre><code>1
2
3
4
5
...
99
100
</code></pre>
<p>What is te correct way to achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In this line <code>is_string  += str(i)</code> use this <code>is_string += str(i) + '\n'</code> instead</p>
</div>
<div class="post-text" itemprop="text">
<p>You could build a multi line string as follows:</p>
<pre><code>multi_line = '\n'.join(map(str, range(1, 101)))
print(multi_line)
</code></pre>
<p>Or iteratively as:</p>
<pre><code>multi_line = '\n'.join(str(i) for i in range(1, 101))
</code></pre>
<p>These methods avoid string concatenation which should be avoided if possible as they are less efficient.</p>
<p>Strings have a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str%20join#str.join" rel="nofollow noreferrer"><code>join()</code></a> method which takes a list of strings to join together, so:</p>
<pre><code>'\n'.join(['1', '2', '3'])
</code></pre>
<p>would give you a string:</p>
<pre><code>1\n2\n3
</code></pre>
<p>(where <code>\n</code> is the newline character)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>is_string = """"""""
for i in range(1, 101):
    is_string += str(i) + "\n"
print(is_string)
</code></pre>
<p>Add a newline after each element.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>is_string = is_string +  str(i) + '\n'</code><br/>
Is this what your are looking for?<br/>
Be careful dealing with the '\n', you may use something like <code>is_string.split('\n')</code> to retreive each sub string</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you just have to add <code>\n</code> character at the end of the each insertion and this will solve your problem:</p>
<pre><code>is_string = """"""""
for i in range(1, 101):
    is_string += '{}\n'.format(str(i))
print(is_string)
</code></pre>
<p>hope, it helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it in a list </p>
<pre><code>is_string = []
for i in range(1, 101):
    is_string.append(i)

for i in is_string:
    print(i)
</code></pre>
<p>or as a string adding a new line <code>\n</code> to each..</p>
<pre><code>is_string = """"""""
for i in range(1, 101):
    is_string += str(i) + '\n'
    print(i)
</code></pre>
</div>
<span class="comment-copy">Related : <a href="https://stackoverflow.com/questions/27083445/how-to-join-two-string-with-a-new-line-between-them" title="how to join two string with a new line between them">stackoverflow.com/questions/27083445/â€¦</a></span>
