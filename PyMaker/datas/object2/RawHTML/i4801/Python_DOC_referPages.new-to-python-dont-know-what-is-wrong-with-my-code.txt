<div class="post-text" itemprop="text">
<p>I'm new to Python so please be gentle.</p>
<p>I seriously don't know what is wrong with my code.</p>
<p>Here it is:</p>
<pre><code>import numpy as np

def epsilon(t):
    epsilon = (1 - np.exp(-pow(t, 4)))
    return epsilon

def r(t):
    r = pow( (epsilon(t) - 16) / 4, 1/4)
    return r

print(r(0))
</code></pre>
<p>Since <code>epsilon(0) = 0</code>, I'd expect (analytically) to get r = (-16/4)^(1/4) = (-1)^(1/4)*sqrt(2) = exp(i pi /4)*sqrt(2) = 1 + 1 i</p>
<p>But instead I get:</p>
<pre><code>RuntimeWarning: invalid value encountered in double_scalars
  r = pow((4 * epsilon(t) - 16) / 4, 1/4)
nan
</code></pre>
<p>I've tried to find the error. If I print <code>epsilon(0)</code> I get 0 as expected, and If i set <code>epsilon(0)</code> manually like:</p>
<pre><code>def r(t):
    r = pow( 0 - 16) / 4, 1/4)
    return r
print(r(0))
</code></pre>
<p>I get <code>1 + 1 j</code>. And If I remove the <code>to the power of 1/4</code>, it works and I get <code>-4</code></p>
<pre><code>import numpy as np

def epsilon(t):
    epsilon = (1 - np.exp(-pow(t, 4)))
    return epsilon

def r(t):
    r = (epsilon(t) - 16) / 4
    return r

print(r(0))
</code></pre>
<p>So why do</p>
<pre><code>import numpy as np

def epsilon(t):
    epsilon = (1 - np.exp(-pow(t, 4)))
    return epsilon

def r(t):
    r = pow( (epsilon(t) - 16) / 4, 1/4)
    return r

print(r(0))
</code></pre>
<p>I get this error?</p>
</div>
<div class="post-text" itemprop="text">
<p>I noticed that the value returned by <code>epsilon()</code> is of type <code>&lt;class 'numpy.float64'&gt;</code>. The problem occurs when we include this value in Python's built in <code>pow()</code> function. For example, try <code>pow(np.float64(-4.0), 1/4)</code>; it breaks too. Perhaps it's due to this:</p>
<blockquote>
<p>With mixed operand types, the coercion rules for binary arithmetic operators apply.
  <a href="https://docs.python.org/3/library/functions.html#pow" rel="nofollow noreferrer">Built-in Functions: pow()</a></p>
</blockquote>
<p>I managed to fix the issue by casting the result of <code>epsilon()</code> to <code>float</code>.</p>
<p><code>r = pow( float((epsilon(t) - 16) / 4), 1/4)</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Problem is probably caused by the numpy float thing. (as aswered by Schomes). Fix by convert to 'normal' float.</p>
<pre><code>import numpy as np

def epsilon(t):
    epsilon = (1 - np.exp(-pow(t, 4)))
    return epsilon

def r(t):
    epsi_boy = epsilon(t)
    print(type(epsi_boy)) # numpy float
    epsi_boy = float(epsi_boy) # Convert to non numpy float
    r = pow( (epsi_boy - 16) / 4,  1/4)
    return r

print(r(0))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason is <code>numpy</code> <code>float64</code> are like <code>c</code> float, and overload all operations (including) power to work as such. This is the type returned by <code>exp</code> and subsequently in all operations. Note you're trying to compute:</p>
<pre><code>(-4)**(1/4)
</code></pre>
<p>which is an imaginary number. Python can handle that, and output the result, but <code>numpy</code> <code>float64</code>s are "real", so the above is an invalid expression. For this reason all the answers here suggesting to convert to <code>float</code> work:</p>
<pre><code>&gt;&gt;&gt; (-4)**(1/4)
(1.0000000000000002+1j)
&gt;&gt;&gt; np.float64(-4)**(1/4)
__main__:1: RuntimeWarning: invalid value encountered in double_scalars
nan
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from math import exp
def epsilon(t):
    epsilon = (1 - exp(-pow(t, 4)))
    return epsilon


def r(t):
    print(2)
    t=epsilon(t)
    r = pow( ( t- 16) / 4, 1/4)
    return r

print(r(0))
</code></pre>
<p>Or</p>
<pre><code>from numpy import exp
def epsilon(t):
    epsilon = (1 - exp(-pow(t, 4)))
    return epsilon


def r(t):
    print(2)
    t=epsilon(t)
    r = pow( float( t- 16) / 4, 1/4)
    return r

print(r(0))
</code></pre>
</div>
<span class="comment-copy">Check your second attempt: you miss a open parenthesis (I think it is just a type)</span>
<span class="comment-copy">check <a href="https://stackoverflow.com/questions/3767409/invalid-value-encountered-in-double-scalars-warning-possibly-numpy" title="invalid value encountered in double scalars warning possibly numpy">stackoverflow.com/questions/3767409/â€¦</a>  on how to get better error description.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3767409/invalid-value-encountered-in-double-scalars-warning-possibly-numpy">'invalid value encountered in double_scalars' warning, possibly numpy</a></span>
<span class="comment-copy">What are the coercion rules</span>
