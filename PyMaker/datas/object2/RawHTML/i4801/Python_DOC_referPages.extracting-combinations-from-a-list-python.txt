<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/464864/how-to-get-all-possible-combinations-of-a-list-s-elements">How to get all possible combinations of a listâ€™s elements?</a>
<span class="question-originals-answer-count">
                    24 answers
                </span>
</li>
</ul>
</div>
<p>I have this list:</p>
<pre><code>List = [1, 2, 3]
</code></pre>
<p>...and I want to print out all possible combinations such that the output is like:</p>
<pre><code>[1]
[1,2]
[1, 2, 3]
[2]
[2, 3]
[3]
</code></pre>
<p>So far my code is this:</p>
<pre><code>E=[]
i=0
for seq in L[i:]:
    E.append(seq)
    i += 1
    print(E)
</code></pre>
<p>Which gives my first 3 outputs. Is there a way for me to loop it so that the index goes up by 1 so I can get my desired output?</p>
<p>Edit; so I basically want to write a code which summarizes this:</p>
<pre><code>List = [1, 2, 3]
E = []
F = []
G = []


for seq in List[0:]:
    E.append(seq)
    print(E)

for seq in List[1:]:
    F.append(seq)
    print(F)

for seq in List[2:]:
    G.append(seq)
    print(G)
</code></pre>
<p>I pretty much want to know if I can loop the index so that I don't have to create multiple for loops and maybe apply it to a longer list.       </p>
</div>
<div class="post-text" itemprop="text">
<p>You are creating combinations of increasing length, so use <code>itertools.combinations()</code> with a length ranging from 1 to <code>len(inputlist)</code>:</p>
<pre><code>&gt;&gt;&gt; from itertools import combinations
&gt;&gt;&gt; List = [1, 2, 3]
&gt;&gt;&gt; for i in range(len(List)):
...     for combo in combinations(List, r=i + 1):
...         print(combo)
...
(1,)
(2,)
(3,)
(1, 2)
(1, 3)
(2, 3)
(1, 2, 3)
</code></pre>
<p><code>combinations()</code> produces tuples, but those are trivially converted to lists if you must have a mutable sequence for each.</p>
</div>
<span class="comment-copy">what about [1,3]?</span>
<span class="comment-copy">Look at the stdlib itertools.</span>
<span class="comment-copy">You are creating combinations, so use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations()</code></a>. The combinations are of length 1, 2, and 3.</span>
<span class="comment-copy">use 2 loops... 1 for iterating the indexes and other for making combinations</span>
<span class="comment-copy">Are you looking for combinations or sliding windows of different length? For eg, is <code>[1,3]</code> a possible output?</span>
