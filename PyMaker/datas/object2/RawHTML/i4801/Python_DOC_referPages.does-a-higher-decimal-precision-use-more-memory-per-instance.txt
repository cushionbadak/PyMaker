<div class="post-text" itemprop="text">
<p>With Python's <a href="https://docs.python.org/3/library/decimal" rel="nofollow noreferrer" title="decimal">decimal</a> module, does a context with a higher precision value use more memory. If not, for what reason would you not always use the maximum?</p>
</div>
<div class="post-text" itemprop="text">
<p>yes, of course the size increases; you can check that with:</p>
<pre><code>from sys import getsizeof
from decimal import Decimal, getcontext

getcontext().prec = 6
d = Decimal(1)/Decimal(3)
print(getsizeof(d))  # 104
getcontext().prec = 256
d = Decimal(1)/Decimal(3)
print(getsizeof(d))  # 216
</code></pre>
<p>ymmv... the exact values may be implementation/platform specific.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Decimal</code> can be very useful however that generally you shouldn't require infinite decimal places, currencies generally require 2-4. </p>
<p>The more numbers you want to store the more memory it will use, generally speaking you only ever want to use the minimum required type, it's the reason we used to use <code>short</code> rather than <code>int</code> in Java, the same applies to Python it's just a little more behind the scenes.</p>
<p>These days it might be quite minimal that you'd run into memory issues due to typing however it can still happen.</p>
</div>
<span class="comment-copy">Memory, processing time.. There ain't no such thing as a free lunch</span>
<span class="comment-copy">@MateenUlhaq Not sure how that applies? I realise that it's slower than hardware (I think is what you're saying?), I'm just wondering if the precision directly impacts memory usage.</span>
<span class="comment-copy">Ah I thought you were asking about decimal vs float</span>
<span class="comment-copy">Python 2.7.10, getting "80" for both.</span>
<span class="comment-copy">Getting 104 and 216 with Python 3.</span>
<span class="comment-copy">i forgot to add: details may be implementation/platform specific. but the fact that higher precision takes more memory  is not. the code here is just for you to play with: that way you can find out how much memory is consumed in your specific case.</span>
