<div class="post-text" itemprop="text">
<p>This should be really simple but I can't figure it out.  How do I extract the details for Stu?  So I want to see Name: Stu, Age:14, Weight: 99.5</p>
<pre><code>pets_2 = {'Name': {'Molly', 'Stu', 'Henry'},
          'Age':{10, 14, 2},
          'Weight':{101, 99.5, 90.3}}
</code></pre>
<p>Side-question, is this the correct format to store this type of dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use a structure like this </p>
<pre><code>pets_2 = {
    'pet1': {'Name':'Molly', 'Age': 10, 'Weight': 101.0},
    'pet2': {'Name':'Stu', 'Age': 14, 'Weight': 99.5},
    'pet3': {'Name':'Henry', 'Age': 2, 'Weight': 90.3}
}
</code></pre>
<p>and as far as the getting the data out</p>
<pre><code>print(pets_2['pet1']) #{'Name': 'Molly', 'Age': 10, 'Weight': 101.0}
print(pets_2['pet1']['Name']) # Molly
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned, <code>set</code> is unordered. Here is one solution using lists.</p>
<pre><code>d = {'Name':   ['Molly', 'Stu', 'Henry'],
     'Age':    [10, 14, 2],
     'Weight': [101, 99.5, 90.3]}

d2 = {d['Name'][i]: (d['Age'][i], d['Weight'][i]) for i in range(len(d))}
# {'Henry': (2, 90.3), 'Molly': (10, 101), 'Stu': (14, 99.5)}

d2['Stu']  # (14, 99.5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Right now, your values are all <strong><a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer"><code>sets</code></a></strong>, so you basically have no way to fetch a specific value. Switch these to a a list, and given you know Stu is the second person, you can assemble Stu:</p>
<pre><code>def get_pet(i):
    return {'Name': pets_2['Name'][i],
            'Age': pets_2['Age'][i],
            'Weight': pets_2['Weight'][i]}
</code></pre>
<p>More naturally, you could just store your data like so:</p>
<pre><code>pets_3 = {
    'Stu': {'Age': 14, 'Weight': 99.5},
    # ...
}
</code></pre>
<p>So getting Stu's info becomes <code>pets_3['Stu']</code>.</p>
</div>
<span class="comment-copy">You currently have a <code>dict</code> with three keys, <code>'Name'</code>, <code>'Age'</code>, and <code>'Weight'</code>. The values to these keys are all <code>set</code> objects, which are inherently unordered. This is almost certainly not the correct data-structure to use</span>
<span class="comment-copy">This is exactly what I am looking for, thank you!</span>
<span class="comment-copy">Thank you for explaining to me, makes sense</span>
<span class="comment-copy">Perfect., thank you</span>
