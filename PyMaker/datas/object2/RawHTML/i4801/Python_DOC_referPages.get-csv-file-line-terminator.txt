<div class="post-text" itemprop="text">
<p>In a python script, I need to detect the endline terminator of different csv files. These endline terminators could be: '\r' (mac), '\r\n' (windows), '\n' (unix).</p>
<p>I tried with:</p>
<pre><code>dialecto = csv.Sniffer().sniff(csvfile.read(2048), delimiters=",;")
dialecto.lineterminator
</code></pre>
<p>But it doesn't work.</p>
<p>How I could do that?</p>
<p><strong>EDIT:</strong></p>
<p>Based on abarnert response:</p>
<pre><code>def getLineterminator(file):
    with open(file, 'rU') as csvfile:
        csvfile.next()
    return csvfile.newlines
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't use the <code>csv</code> module to auto-detect line terminators this way. The <code>Sniffer</code> that you're using is designed to guess between CSV dialects for use by <code>csv.Reader</code>. But, as <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.lineterminator" rel="nofollow noreferrer">the docs say</a>, <code>csv.Reader</code> actually ignores <code>lineterminator</code> and handles line endings interchangeably, so <code>Sniffer</code> doesn't have any reason to set it.</p>
<hr/>
<p>But really, a CSV file with a XXX line terminators is just a text file with XXX line terminators. The fact that it's CSV is irrelevant. Just <code>open</code> the file in text mode, read a line out of it, and check its <code>newlines</code> property:</p>
<pre><code>next(file)
file.newlines
</code></pre>
<p>In Python 3, as long as you opened the file in text mode (don't use a <code>'b'</code> in the mode), this will work. In Python 2.x, you may need to specify universal newlines mode (don't use a <code>'b'</code>, and also <em>do</em> use a <code>'U'</code>). If you're writing code for both versions, you can use universal newlines mode, and it'll just be ignored in 3.xâ€”but don't do that unless you need it, since it's deprecated as of 3.6 and may become an error one day.</p>
</div>
<span class="comment-copy">The <code>Sniffer</code> won't detect the <code>lineterminator</code> for the simple reason that (at least in 2.7 and 3.6) the <code>Reader</code> ignores <code>lineterminator</code> and treats any sequence of <code>\r</code> and <code>\n</code> characters as EOL.</span>
