<div class="post-text" itemprop="text">
<p>My function only says that the last word in a file of words is an anagram (the first helper function). But every word in the file is an anagram of the word I tested and returns true independently with the helper function outside of the main function. I am not sure if it has something to do with <code>/n</code> being a part of the string, and then it accounting for that, but I tried putting in an if statement saying to delete it if it was in there and that did not work either. I also did test to make sure it is running through each word in the <code>.txt</code> file and it is.</p>
<pre><code>def is_anagram(string1, string2):
    """Returns True if the two strings are anagrams of eachother.

    str, str -&gt; bool"""
    if sorted(string1)==sorted(string2):
        return True
    else:
        return False


def find_anagrams(word):
    final = []
    content = open("small_list.txt")
    content.close
    while True:
        line = content.readline()
        print(line)
        if is_anagram(word, line) == True:
            print("bruh")
            final.append(line)
        elif line == '':
             break
    return final
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is expected, based on the method you use to read a line (<code>file.readline</code>). From the <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p><code>f.readline()</code> reads a single line from the file; a newline character
  (<code>\n</code>) is left at the end of the string, and is only omitted on the last
  line of the file if the file doesn’t end in a newline.</p>
</blockquote>
<p>Your <code>line</code> has a trailing newline, but <code>word</code> certainly does not. So, in the end, all you'd need to change is:</p>
<pre><code>line = content.readline().rstrip()
</code></pre>
<p>Well, that's all you'd need to change to <em>get it working</em>. Additionally, I'd also recommend using the <code>with...as</code> context manager to handle file I/O. It's good practice, and you'll thank yourself for it.</p>
<pre><code>with open("small_list.txt") as f:
    for line in f:
        if is_anagram(word, line.rstrip()):
            ... # do something here
</code></pre>
<p>It's better to use a <code>for</code> loop to iterate over the lines of a file (rather than a <code>while</code>, it's cleaner). Also, there's no need to explicitly call <code>f.close()</code> when you use a context manager (you're not currently doing it, you're only referencing the method without actually calling it).</p>
<hr/>
<p>Incorporating @Christian Dean's <a href="https://stackoverflow.com/questions/49185754/python-if-true-statement-only-working-on-last-line-of-readline?noredirect=1#comment85377159_49185773">suggestion</a> in this answer, you can simplify your anagram function as well - call <code>sorted</code> <em>and</em> return the result in a single line:</p>
<pre><code>def is_anagram(a, b):
    return sorted(a) == sorted(b)
</code></pre>
</div>
<span class="comment-copy">Seems you are closing the content, before you are reading it.</span>
<span class="comment-copy">What is the purpose of <code>content.close</code>?</span>
<span class="comment-copy">Also FYI <code>if blah: return True else: return False</code> is equivalent to simply <code>return blah</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/43950757/cant-compare-file-readline-line-with-a-string">Can't compare file.readline() line with a string</a></span>
<span class="comment-copy">@detly in the general case yes, but here blah is already a bool...</span>
<span class="comment-copy">Also just a note to the OP: your anagram function could simply be <code>def is_anagram(a, b): return sorted(a) == sorted(b)</code>.</span>
<span class="comment-copy">Yay! This worked. Thank you very much!!</span>
<span class="comment-copy">Ah shoot, you're right @cᴏʟᴅsᴘᴇᴇᴅ. I forgot <code>set</code>s rids dups. Updated.</span>
<span class="comment-copy">Cool, looks good :)</span>
