<div class="post-text" itemprop="text">
<p>How can I format this string in a list 
from :</p>
<pre><code>('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')
</code></pre>
<p>to :</p>
<pre><code>('1496','8584','172','5988','7184','704','3448','6580','8504')
</code></pre>
<p>I think the way is to use re.sub() but I'm having trouble with the '\n' not escaping</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need <code>re.sub</code>, <code>str.split</code> will suffice.</p>
<pre><code>t = ('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')

out = t[0].split()

# out : ['1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504']
</code></pre>
<p>If you want it exactly in the format you provided, you can cast back to a <code>tuple</code>. Note that when you use <code>(...)</code> you are creating a <code>tuple</code> and not a <code>list</code> as you mentionned.</p>
<pre><code>out = tuple(t[0].split())

# out : ('1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hope this works-</p>
<pre><code>a='1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n'
b=a.split()
print(b)
</code></pre>
<p>Output-</p>
<pre><code>['1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504']
</code></pre>
<p>The <code>a.split()</code> splits the string by every occurrence of <code>\n</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of <code>re.sub</code>, use <code>re.findall</code> to grab every run of digits:</p>
<pre><code>import re
s = ('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')
new_s = tuple(i for b in map(lambda x:re.findall('\d+', x), filter(None, s)) for i in b)
</code></pre>
<p>Output:</p>
<pre><code>('1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's very simple. Use <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">split</a> function for strings.</p>
<pre><code>#!/usr/bin/python
s = ('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')
output=s[0].split()
print(output)
</code></pre>
<p>output you expected as list:</p>
<pre><code>['1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504']
</code></pre>
<p>If you want to get a tuple, use <a href="http://www.tutorialspoint.com/python/tuple_tuple.htm" rel="nofollow noreferrer">tuple</a> function to convert.</p>
<pre><code>#!/usr/bin/python
s = ('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')
output=tuple(s[0].split())
print(output)
</code></pre>
<p>output as a tuple:</p>
<pre><code>('1496', '8584', '172', '5988', '7184', '704', '3448', '6580', '8504')
</code></pre>
<p>Differences between tuple and list in python you can get <a href="https://stackoverflow.com/a/626871/9210255">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This code resolved my problem</p>
<pre><code>output = ('1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n', '')
output = str(output)
output = re.sub('[^a-zA-Z0-9 .]|n','',output)
output = output.split()
print output
</code></pre>
</div>
<span class="comment-copy">You mean this string-'1496\n8584\n172\n5988\n7184\n704\n3448\n6580\n8504\n'</span>
<span class="comment-copy">So yes... by the way. You say you need a list <code>[...]</code>, but you are using a tuple <code>(...)</code>, can you clarify?</span>
<span class="comment-copy">@Olivier: I suppose that tommy45 doesn't know difference between tuple and list in python.</span>
<span class="comment-copy">@TigerTV.ru makes sense, they will learn right now</span>
<span class="comment-copy">why is <code>t</code> a tuple? it adds unnecessary complexity, just start with a string as in the question.</span>
<span class="comment-copy">@avigil Because the question has been edited, I just did a rollback to preserve the initial intent which is to have a string inside a list/tuple.</span>
<span class="comment-copy">Or just use <code>.split()</code> to use consecutive whitespace characters as a single delimiter and then you won't end up with a trailing empty item. Should work fine for the OPs example.</span>
<span class="comment-copy">Well said. Thanks. I edited to include your comment.</span>
<span class="comment-copy">@Olivier Let the user clarify.</span>
