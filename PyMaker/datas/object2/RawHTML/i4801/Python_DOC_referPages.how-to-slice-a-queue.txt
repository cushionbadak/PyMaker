<div class="post-text" itemprop="text">
<p>I have a queue which I process in a loop</p>
<pre><code>while True:
    # a processing loop
    batch = []
    while True:
        e = q.get()
        if e:
            batch.append(e)
        else:
            # the queue is empty
            break
    do_something_with(batch)
    # wait a moment before emptying the queue again
    time.sleep(2)
</code></pre>
<p>The idea is to empty the queue, process its content and wait a moment before checking the content again.</p>
<p>I sometimes hit a race condition where the queue is alimented while I <code>get()</code> an element and I end up with a growing <code>batch</code> which is never processed further.</p>
<p>One solution would be to check <code>batch</code> size and process it when the size is right. This does not work if I have not that many events getting in the queue and <code>batch</code> never reaching the correct size - but I need the events (whatever is their number) to be processed and not wait until enough accumulate.</p>
<p>The second solution is to build a check based on the size and on the time <code>batch</code> is idle -- this overly complicates the code.</p>
<p>One good solution would be to <em>"get up to <code>n</code> elements from the queue at once"</em>. I could not find anything like that in the documentation. <strong>Is there a way to pop several elements at once from the queue (Ã  la slicing for a list)?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/queue.html#queue.Queue.get" rel="nofollow noreferrer"><code>Queue.get</code></a> blocks by default; source of infinite loop.</p>
<blockquote>
<p><code>Queue.get(block=True, timeout=None)</code></p>
<p>Remove and return an item from the queue. <strong>If optional args block is
  true and timeout is None (the default), block if necessary until an
  item is available.</strong> If timeout is a positive number, it blocks at most
  timeout seconds and raises the Empty exception if no item was
  available within that time. Otherwise (block is false), return an item
  if one is immediately available, else raise the Empty exception
  (timeout is ignored in that case).</p>
</blockquote>
<p>You should use, <a href="https://docs.python.org/3/library/queue.html#queue.Queue.get_nowait" rel="nofollow noreferrer"><code>Queue.get_nowait</code></a> or <code>Queue.get(block=False)</code> to prevent block. Or use <code>Queue.get(timeout=&lt;seconds&gt;)</code> wait at most <code>&lt;seconds&gt;</code> when queue is empty.</p>
<p>Solution mentioned in your question sound good:</p>
<pre><code>BATCH_SIZE = 10

while True:
    batch = []

    # Get out of loop if enough item collected or queue is empty
    while len(batch) &lt; BATCH_SIZE:
        try:
            e = q.get_nowait()  # OR q.get(timeout=0.1)
        except Empty:
            break
            # To prevent empty batch
            # if batch:
            #     break

    do_something_with(batch)
    # wait a moment before emptying the queue again
    time.sleep(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The workaround I am using now, until a better idea/solution:</p>
<pre><code>while True:
    # get up to 1000 elements form the queue
    batch = []
    for _ in range(1000):
        try:
            e = q.get(block=False)
        except queue.Empty:
            continue
        else:
            batch.append(e)
    do_something_with(batch)
    time.sleep(2)
</code></pre>
<p>I may make 1000 useless attempts to get an element (queue empty), or have all of them (even when the queue grows), or anything in between</p>
</div>
<span class="comment-copy">I use a similar workaround (I posted it as a solution as well). Your approach will not get me out of the <code>while</code> if there are not enough elements, right? Also, <code>e</code> is not added to the batch (minior overlooking)</span>
<span class="comment-copy">@WoJ, <code>get_nowait()</code> will raise <code>queue.Empty</code> exception; it will get you out of the <code>while</code> (inner) even though there 's<code>&lt;BATCH_SIZE</code> items in <code>batch</code>.</span>
<span class="comment-copy">@WoJ, To prevent, empty <code>batch</code>, you can replace <code>break</code> with <code>if batch: break</code></span>
<span class="comment-copy">@WoJ, Or replace <code>q.get_nowait()</code> with <code>q.get(timeout=0.1)</code> if you don't want busy loop in case of empty queue.</span>
