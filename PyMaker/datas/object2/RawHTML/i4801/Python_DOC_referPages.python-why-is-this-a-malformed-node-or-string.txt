<div class="post-text" itemprop="text">
<p>I was just tidying up some code and ran into some trouble. I am getting an error I have never come across before </p>
<p><code>ValueError: malformed node or string:['0.000', '37.903', 'nosing']</code></p>
<p>My openLabels function at the top works fine and returns a list of items structured as you can see in the error message. I am doing some debugging and found it is the labelsToFrames function throwing the error. It is not accepting my list of lists as input. I have no idea why. </p>
<p>Any direction would be much appreciated! </p>
<pre><code>def openLabels(pathLabels):
    path = (pathLabels + "*.lab")
    files = glob.glob(path)

    textCorpus = []
    for name in files:
        try:
            with open(name) as f:
                for line in f:
                    line = line.split()
                    textCorpus.append(line)

        except IOError as exc: 
            if exc.errno != errno.EISDIR:
                raise

    return textCorpus

def labelToFrames(labelCorpus):
    with labelCorpus as f_in:
        for line in f_in:
            song = ast.literal_eval(line)

        output = []                                 
        for block in song:
            block_start = float(block[0])           
            block_end = float(block[1])            
            singing = block[2]                      
            block_range = np.arange(block_start, block_end, 0.033)
        for x in block_range:
            ms_start = '{0:.3f}'.format(x)
            ms_end = '{0:.3f}'.format(x + 0.032)
            add_to_output = [ms_start, ms_end, singing]
            output.append(add_to_output)

        return(output)   


def main(): 
    pathLabels = "~/Train Labels/"
    labelCorpus = openLabels(pathLabels)
    labelCorpusFrames = labelToFrames(labelCorpus)

main()  


  File "&lt;ipython-input-7-d1a356f3bed8&gt;", line 1, in &lt;module&gt;
    labelCorpusFrames = labelToFrames(labelCorpus)

  File "&lt;ipython-input-2-77bea44f1f3d&gt;", line 54, in labelToFrames
    song = ast.literal_eval(line)

  File "*/lib/python3.6/ast.py", line 85, in literal_eval
    return _convert(node_or_string)

  File "*/lib/python3.6/ast.py", line 84, in _convert
    raise ValueError('malformed node or string: ' + repr(node))

ValueError: malformed node or string: ['0.000', '37.903', 'nosing']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that <code>labelCorpus</code> is a list of lists. As such, when you're executing <code>labelToFrames</code> and passing in <code>labelCorpus</code>, it is iterating over the list of lists, assigning each individual list to <code>line</code> and then trying to run <code>ast.literal_eval</code> on <code>line</code>. This then fails because <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code> requires either a string or expression node</a>, not a list.</p>
<p>The reason that <code>labelCorpus</code> is a list of lists comes from when it is assigned a value from the <code>openLabels</code> function. In the following section, you iterate over the file paths returned by <code>glob.glob</code> and open the files:</p>
<pre><code>with open(name) as f:
    for line in f:
        line = line.split()
        textCorpus.append(line)
</code></pre>
<p>On each open file you're iterating over the individual lines and then splitting each line in the file (which returns a list) and assigning it back to the <code>line</code> variable, which you then append to the <code>textCorpus</code> list. This list of lists is then what you return from the function and assign to <code>labelCorpus</code> in <code>main</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not at home so can't experiment at the moment but I believe the problem is the real numbers mixed in with the string. Try converting them to string first then pass them onto whatever function is utilizing them. I ran into this once a few months back and converting ahead of time was the answer. </p>
</div>
<span class="comment-copy">Show the entire traceback if you want help on errors.</span>
<span class="comment-copy">Appended to the original.</span>
<span class="comment-copy">What are you trying to do here: <code>song = ast.literal_eval(line)</code>?</span>
<span class="comment-copy">What do you expect to happen when you pass a list to <code>ast.literal_eval</code>?</span>
<span class="comment-copy">I was debugging. Pulled my code out of the function. Opened 1 .lab file. My code didn't seem to work without it! So I'm not entirely sure truth be told!</span>
<span class="comment-copy">Is this the case I wonder? I am loading 3 lab files with the pathLabel function. However, all the files are contained in 1 list. Lab1 index 0 to 19, lab2 index 20 to 51 etc...</span>
<span class="comment-copy">@CiaranDeCeol I've added some clarification on where the list of lists is being created.</span>
<span class="comment-copy">I understand what you're saying but I'm just trying to get the logic right in my head on how to repair it! I think I'll have to review this in the morning and park it for a while. Cheers.</span>
