<div class="post-text" itemprop="text">
<p>so I am trying to create a program that will allow a user to login using a username and password for a school project. however, my teacher (he has allowed me to ask FYI) wants us to think of a way to make it secure.</p>
<p>so my thought process is that I would allow the user to create a login and store the usernames and passwords in a notepad file. to make these secure I decided to use the <code>hash()</code> function so that the username and passwords couldn't be seen even if the text file was accessed. the issue that I am running into is that I can't figure out how to get the program to see the saved hash version of the username and password in the text file and then compare it to the inputs for longing in without printing the hashes and or saving them as variables.</p>
<p>I can't do this however because if I have more than one login saved in the login file I cant save all the hashed logins as one variable.</p>
<p>if anyone can help it would be greatly appreciated </p>
<pre><code>import sys
import time

print ("welcome to this quiz.")


account = input ("first off do you have a account already. please enter yes or no only").lower


if account == no:
    account_create = input ("to continue with this quiz you need a password would you like to create a account. please enter yes or no only").lower
    if account_create == no:
        print (" the program will close in 30 seconds. if you change your mind come back and make an account")
        time.sleep(30)
        sys.exit
    else:
        print ("thank you for creating an account")

        username = input ("first off you need a username. please enter a username. be carefull once it is chasen it cant be changed")
        # need to add a function that searches the login file and compares no username is repeated
        password = input ("secondly you need a password. please choose a password. be carefull you can change it later but you will need the current one to do this.")

        username = hash(username)
         password = hash(password)

         file = open("Login.txt","w")
         file.write (username)
         file.write (",")
         file.write (password)
         file.write("\n")
         file.close()

print ("Your login details have been saved. ")
        print ("now please login")

else:

    login? = input ("would you like to login to the program").lower
    if login? == no:
        print ("please come back another time")
        time.sleep(20)
        sys.exit
    else:
        username_check = input ("please enter your username")
        password_check = input ("please enter your username")

        username_check = hash(username_check)
        password_check = hash(password_check)

        file = open("Login.txt","r")
        if username_check == 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Load the file as a dictionary mapping usernames (or their hashes) to the hash of the password.</p>
<p>You can iterate through the file and load each line into your dictionary.</p>
<p>However this will be a bit fragile. What if some user want to have a space or comma in their username. A better and easier approach is to use a library to serialize and deserialize the dictionary. The common one used in python would be <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> or if you want the data to still be somewhat human readable <a href="https://docs.python.org/3/library/json.html#module-json" rel="nofollow noreferrer">json</a>.</p>
</div>
<span class="comment-copy">i did also think recently that i could assign each person a login code relevant to their line on the text file. this would allow the code to use this to identify a certain line in the file corresponding to the account. but this isn't exactly ideal as if the user forgets the code they cant login .</span>
<span class="comment-copy">You will get a lot more traction with your question if you provide an example of the code that you have tried and that hasn't worked for you. Try and make that code sample immediately runnable as well.</span>
