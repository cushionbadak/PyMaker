<div class="post-text" itemprop="text">
<p>My <code>log.django</code> file is over 100,000 lines now. If I delete it, will it be re-generated again? It exists because I have <code>LOGGING</code> in my <code>settings.py</code>:</p>
<pre><code>LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'log.django',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
        },
    },
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Log file cannot be re-generated. It consists of events that occurred in the past. But if you deleted it, a new one will be generated. </p>
<p>I suggest you set <a href="https://docs.python.org/3.6/library/logging.handlers.html#rotatingfilehandler" rel="nofollow noreferrer"><code>RotatingFileHandler</code></a> logging handler, the maximum size for the log file and a number of backups to be kept. This way once the file reaches maximum size, current log file will be renamed and a new log file will be created.</p>
<p>Django uses <a href="https://docs.python.org/3/library/logging.config.html#logging-config-dictschema" rel="nofollow noreferrer">dictConfig</a> scheme for logging configuration. For rotating file handler with maximum size of about 2MB and 2 backup log files, you'd define <code>file</code> key in <code>handlers</code> as:</p>
<pre><code>'file': {
    'level': 'DEBUG',
    'class': 'logging.handlers.RotatingFileHandler',
    'filename': 'log.django',
    'maxBytes': 2000000,
    'backupCount': 2
 },
</code></pre>
<p>This way current <code>log.django</code> will be renamed to log.django.1 once it reaches size of 2.000.000 bytes and 2 backup files will be kept (log.django.1 and log.django.2) at all times.</p>
<p>If you add <code>maxBytes</code> and <code>backupCount</code> to your current configuration, your current log file will be renamed to log.django.1 and a new log.django will be created.</p>
</div>
