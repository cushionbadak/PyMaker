<div class="post-text" itemprop="text">
<p>I have a list containing a set of the history of a file. I need to separate each element in the list into several columns and save it to <code>CSV</code> file. </p>
<p>The columns I need are <code>commit_id, filename, committer, date, time, line_number, code</code>. 
Suppose, this is my list:</p>
<pre><code>my_list = [
     'f5213095324 master/ActiveMasterManager.java              (Michael Stack      2010-08-31 23:51:44 +0000   1) /**',
     'f5213095324 master/ActiveMasterManager.java              (Michael Stack      2010-08-31 23:51:44 +0000   2)  *',
     'f5213095324 master/ActiveMasterManager.java              (Michael Stack      2010-08-31 23:51:44 +0000   3)  * Licensed to the Apache Software Foundation (ASF) under one',
     'f5213095324 master/ActiveMasterManager.java              (Michael Stack      2010-08-31 23:51:44 +0000   4)  * or more contributor license agreements.',
     ...
     'b5cf8748198 master/ActiveMasterManager.java              (Michael Stack      2012-09-27 05:40:09 +0000 160)           if (ZKUtil.checkExists(this.watcher, backupZNode) != -1) {'
     ]
</code></pre>
<p>The desired <code>csv</code> output:</p>
<pre><code>commit_id   | filename                         | committer     | date       | time     | line_number | code 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
f5213095324 | master/ActiveMasterManager.java  | Michael Stack | 2010-08-31 | 23:51:44 | 1           | /**
f5213095324 | master/ActiveMasterManager.java  | Michael Stack | 2010-08-31 | 23:51:44 | 2           | *
f5213095324 | master/ActiveMasterManager.java  | Michael Stack | 2010-08-31 | 23:51:44 | 3           | * Licensed to the Apache Software Foundation (ASF) under one
f5213095324 | master/ActiveMasterManager.java  | Michael Stack | 2010-08-31 | 23:51:44 | 4           | * or more contributor license agreements.
........
b5cf8748198 | master/ActiveMasterManager.java  | Michael Stack | 2012-09-27 | 05:40:09 | 160         | if (ZKUtil.checkExists(this.watcher, backupZNode) != -1) {
</code></pre>
<p>I tried using this code:</p>
<pre><code>pattern = re.compile(r'(?P&lt;commit_id&gt;\w+)\s+(?P&lt;filename&gt;[^\s]+)\s+\((?P&lt;committer&gt;.+)\s+(?P&lt;date&gt;\d{4}-\d\d-\d\d)\s+(?P&lt;time&gt;\d\d:\d\d:\d\d).+(?P&lt;line_number&gt;\b\d+\b)\)\s+(?P&lt;code&gt;[^"]*)')

with open('somefile.csv', 'w+', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(['commit_id', 'filename', 'committer', 'date', 'time', 'line_number', 'code'])
    for line in my_list:
        writer.writerow([field.strip() for field in pattern.match(line).groups()])
</code></pre>
<p>In general, the code works. 
But for <code>line number = 160</code>, it's written <code>-1</code> in column <code>line_number</code> and is written only <code>{</code> in column <code>code</code>.</p>
<p>Is there something missing in the regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>The main problem with your pattern is usage of <code>.+</code>. If you replace it with <code>.*?</code> you will not only solve the issue with line number but also with catching whitespaces after committer name:</p>
<pre><code>pattern = re.compile(r'(?P&lt;commit_id&gt;\w+)\s+(?P&lt;filename&gt;[^\s]+)\s+\((?P&lt;committer&gt;.*?)\s+(?P&lt;date&gt;\d{4}-\d\d-\d\d)\s+(?P&lt;time&gt;\d\d:\d\d:\d\d).*?(?P&lt;line_number&gt;\b\d+\b)\)\s+(?P&lt;code&gt;[^"]*)')
</code></pre>
<p><a href="https://regex101.com/r/f7zjpA/2" rel="nofollow noreferrer">https://regex101.com/r/f7zjpA/2</a></p>
<p><strong>EDIT:</strong></p>
<p>You didn't mention that you want to keep indentations and your code didn't look like you actually want it. Whitespaces/indentations before the code are removed not only because of the regex pattern. There are two things:</p>
<ul>
<li><p>in regex pattern you used <code>\s+</code> before <code>code</code> group, which excludes all the whitespaces/indentations. If you want to keep them, replace <code>\s+</code> with <code>\s</code> which will catch only first one instead all of them:</p>
<pre><code>pattern = re.compile(r'(?P&lt;commit_id&gt;\w+)\s+(?P&lt;filename&gt;[^\s]+)\s+\((?P&lt;committer&gt;.*?)\s+(?P&lt;date&gt;\d{4}-\d\d-\d\d)\s+(?P&lt;time&gt;\d\d:\d\d:\d\d).*?(?P&lt;line_number&gt;\b\d+\b)\)\s(?P&lt;code&gt;[^"]*)')
</code></pre></li>
<li><p>in the for loop you use <code>field.strip()</code> which removes all whitespaces which are present at the beginning and the end of the string. Modifying the pattern and exchanging:</p>
<pre><code>writer.writerow([field.strip() for field in pattern.match(line).groups()])
</code></pre>
<p>with:</p>
<pre><code>writer.writerow(pattern.match(line).groups())
</code></pre>
<p>will result in keeping indentations where they belong.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I fixed regex.
This should work:</p>
<pre><code>pattern = re.compile(r'(?P&lt;commit_id&gt;\w+)\s+(?P&lt;filename&gt;[^\s]+)\s+\((?P&lt;committer&gt;.+)\s+(?P&lt;date&gt;\d{4}-\d\d-\d\d)\s+(?P&lt;time&gt;\d\d:\d\d:\d\d).+?(?P&lt;line_number&gt;\b\d+\b)\)\s+(?P&lt;code&gt;[^"]*)')
</code></pre>
<p>I added a question mark to use Lazy matching
".+" =&gt; ".+?" </p>
<p><a href="https://regex101.com/r/GQGLvy/1" rel="nofollow noreferrer">https://regex101.com/r/GQGLvy/1</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Not exactly you are looking for but this can be useful.</p>
<pre><code>import re

for row in my_list:
    print([x.strip() for x in re.split(r"(?![)])\s+(?![(])", row)])

out:

['f5213095324', 'master/ActiveMasterManager.java', '(Michael', 'Stack', '2010-08-31', '23:51:44', '+0000', '1)', '/**']
['f5213095324', 'master/ActiveMasterManager.java', '(Michael', 'Stack', '2010-08-31', '23:51:44', '+0000', '2)', '*']
...
</code></pre>
</div>
<span class="comment-copy">Great!! It works.</span>
<span class="comment-copy">But, if the value in the column 'code' contains indentation, it doesn't work. The regex doesn't keep the indentation at the beginning of the code.</span>
<span class="comment-copy">Check the edit. Explanation for that was a bit too long for the comment.</span>
<span class="comment-copy">Oh, I understand now. It's because of the loop. Thank you for your solution.</span>
<span class="comment-copy">(?![) is negative lookahead. please read: <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">docs.python.org/3/howto/regex.html</a></span>
