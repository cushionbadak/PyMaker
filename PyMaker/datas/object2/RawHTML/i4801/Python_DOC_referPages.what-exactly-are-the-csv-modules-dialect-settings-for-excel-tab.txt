<div class="post-text" itemprop="text">
<blockquote>
<p><em>The csv module implements classes to read and write tabular data in CSV 
  format. It allows programmers to say, “write this data in the format
  preferred by Excel,” or “read data from this file which was generated
  by Excel,” without knowing the precise details of the CSV format used
  by Excel.</em></p>
</blockquote>
<p>What if I <strong>want</strong> to know?? </p>
<p>All kidding aside, I want to know specifically which attributes and settings would create the dialect <a href="https://docs.python.org/3/library/csv.html#csv.excel_tab" rel="nofollow noreferrer"><code>csv.excel_tab</code></a></p>
<p><code>Dialect.delimiter</code>
A one-character string used to separate fields. </p>
<p><code>Dialect.doublequote</code>
Controls how instances of quotechar appearing inside a field should themselves be quoted. </p>
<p><code>Dialect.escapechar</code>
A one-character string used by the writer to escape the delimiter if quoting is set to QUOTE_NONE and the quotechar if doublequote is False. </p>
<p><code>Dialect.lineterminator</code>
The string used to terminate lines produced by the writer. It defaults to '\r\n'.</p>
<p><code>Dialect.quotechar</code>
A one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters. </p>
<p><code>Dialect.quoting</code>
Controls when quotes should be generated by the writer and recognised by the reader. It can take on any of the QUOTE_* constants (see section Module Contents) and defaults to QUOTE_MINIMAL.</p>
<p><code>Dialect.skipinitialspace</code>
When True, whitespace immediately following the delimiter is ignored. The default is False.</p>
<p><code>Dialect.strict</code>
When True, raise exception Error on bad CSV input. The default is False.</p>
</div>
<div class="post-text" itemprop="text">
<p>Going straight to the <a href="https://github.com/python/cpython/blob/master/Lib/csv.py#L55" rel="nofollow noreferrer">source</a> of <code>Lib/csv.py</code>, <code>excel-tab</code> has all the properties of <code>excel</code>, plus a tab-delimiter.</p>
<pre><code>class excel(Dialect):
    """Describe the usual properties of Excel-generated CSV files."""
    delimiter = ','
    quotechar = '"'
    doublequote = True
    skipinitialspace = False
    lineterminator = '\r\n'
    quoting = QUOTE_MINIMAL
register_dialect("excel", excel)

class excel_tab(excel):
    """Describe the usual properties of Excel-generated TAB-delimited files."""
    delimiter = '\t'
register_dialect("excel-tab", excel_tab)
</code></pre>
</div>
<span class="comment-copy">Try <code>import csv; help(csv.excel)</code> in an interactive interpreter.</span>
<span class="comment-copy">Great! Thanks for showing me the <i>source</i>. I <i>wanted</i> to look for the source. I <i>thought</i> I <i>could</i> dig in to find it, but just couldn't get there.</span>
<span class="comment-copy">Among other ways, can always use <code>import csv</code> -&gt; <code>csv.__file__</code>.  I like to copy and paste that path and open it right in any browser</span>
