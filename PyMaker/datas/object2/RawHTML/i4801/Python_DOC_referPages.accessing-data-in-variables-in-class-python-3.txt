<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1167398/python-access-class-property-from-string">Python: access class property from string [duplicate]</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am using Python 3.5 and wish to do something like this
I have created a class which has variables <code>Bitcoin</code>, <code>Monero</code> , 'Etherum' ,etc with various integer values ,I wish to extract them</p>
<pre><code>var1="Bitcoin"

value=classobj.var1 // there is a class which has a variable called Bitcoin and its value is 10 I wish to get its value using classobject.Bitcoin but the variable called var is Dynamic
print (value)
</code></pre>
<p>How do I achieve the same ?</p>
<p><strong>EDIT</strong></p>
<p>I know it is possible using switch statement but I am looking for other ways</p>
</div>
<div class="post-text" itemprop="text">
<p>This is almost always a bad idea—and you really should explain why your design looks like this, because it's probably a bad design.</p>
<p>But "almost always" isn't "always", so Python has a way to do this:</p>
<pre><code>getattr(classobj, var)
</code></pre>
</div>
<span class="comment-copy">Is there a reason <code>classobj</code> is a class instance with attributes like "Bitcoin", instead of a dict with elements like "Bitcoin"?</span>
<span class="comment-copy">Yeah I m using Django so that class is  a model</span>
<span class="comment-copy">Should <code>var</code> be <code>'var'</code> or is <code>isinstance(var, str)</code> <code>True</code>? (or do I not understand how <code>getattr</code> works)</span>
<span class="comment-copy"><code>var</code> should be the variable <code>var</code>, not the string <code>'var'</code>. But yes, <code>isinstance(var, str)</code> should be true—as it is in the OP's question. If the value of <code>var</code> is a string, <code>'Bitcoin'</code>, then <code>getattr(classobj, var)</code> is the same as <code>getattr(classobj, 'Bitcoin')</code>, which is the same as <code>classobj.Bitcoin</code>. See <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">the docs</a>.</span>
