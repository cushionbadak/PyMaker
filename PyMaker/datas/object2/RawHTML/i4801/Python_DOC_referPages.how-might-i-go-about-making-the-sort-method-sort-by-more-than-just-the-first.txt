<div class="post-text" itemprop="text">
<p>I am trying to sort a list. But when I try, it always seems to sort by just the first digit.</p>
<p>This is my code:</p>
<pre><code>data = input("enter your data separated by spaces: ")
data = data.split(' ')
data.sort()
</code></pre>
<p>My input is just numbers. eg. 1 25 3 466 4 32 5
but with this input the output is something like 1 25 3 32 466 4 5
my goal is to have the variable data sorted properly. I would like the output for the input mentioned earlier to be 1 3 4 5 25 32 466. I am new to python so i apologize if this question is simple or if my terminology is off.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're sorting the input alphabetically:</p>
<pre><code>&gt;&gt;&gt; sorted(["5", "10", "1", "100"])
['1', '10', '100', '5']
</code></pre>
<p><code>'5' &gt; '100'</code>, in the same way that <code>'e' &gt; 'a'</code>, or <code>'east' &gt; 'apple'</code>, they come later in <a href="https://docs.python.org/3.6/library/functions.html#ord" rel="nofollow noreferrer">ordinal values</a>:</p>
<pre><code>&gt;&gt;&gt; ord('a')
97
&gt;&gt;&gt; ord('e')
101
&gt;&gt;&gt; ord('1')
49
&gt;&gt;&gt; ord('5')
53
</code></pre>
<p>Since you're sorting numbers, convert your input to numbers before sorting them:</p>
<pre><code>&gt;&gt;&gt; data = input("enter your data separated by spaces: ")
enter your data separated by spaces: 1 10 100 5
&gt;&gt;&gt; data = [int(n) for n in data.split(' ')]
&gt;&gt;&gt; data.sort()
&gt;&gt;&gt; data
[1, 5, 10, 100]
</code></pre>
<p>If you want to keep them strings, you can use use a key to compare the input as integers:</p>
<pre><code>&gt;&gt;&gt; data = input("enter your data separated by spaces: ")
enter your data separated by spaces: 1 10 100 5
&gt;&gt;&gt; data = data.split(' ')
&gt;&gt;&gt; data.sort(key=int)
&gt;&gt;&gt; data
['1', '5', '10', '100']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't have a list of numbers, you have a list of <em>strings</em> that happen to be (hopefully) string representations of numbers. So, they get sorted as strings. As a string, <code>"25"</code> comes before <code>"3"</code>, for the same reason that <code>"Jacky"</code> comes before <code>"K"</code>.</p>
<p>There are two basic ways to fix this.</p>
<p>If you actually want a list of numbers, convert each string to a number. For example:</p>
<pre><code>data = [int(numstr) for numstr in data]
</code></pre>
<p>If you want to keep a list of strings, but still <em>sort</em> them as if they were numbers, you can use a <code>key</code> function:</p>
<pre><code>data.sort(key=int)
</code></pre>
<p>Either of these will raise a <code>ValueError</code> is someone types <code>spam</code> instead of <code>25</code>. You need to decide what you want to do in that case. Maybe just failing with a <code>ValueError</code> is fine. Or maybe you want a loop, asking for a new input line forever until they give you a valid one. Or maybe you want to silently skip over non-integers, or sort them to the end, orâ€¦ whatever you want to do, you can do it, but not until you decide what you want.</p>
</div>
<span class="comment-copy">please provide an example of the input list and the output list</span>
<span class="comment-copy">In general: write a <code>key</code> method. But we can't help more than that because we've no idea what data you're trying to sort, how you're trying to sort it or what you've already tried. Have a look at <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">docs.python.org/3/howto/sorting.html</a>. At a guess you're surprised by lexicographical sorting of strings representing numbers, in which case maybe try converting them to actual numbers before sorting them?</span>
