<div class="post-text" itemprop="text">
<p>I have some text that I am trying to decode and encode in Python </p>
<pre><code>import html.parser

original_tweet = "I luv my &amp;lt;3 iphone &amp;amp; you‚Äôre awsm 
                 apple.DisplayIsAwesome, sooo happppppy üôÇ 
                 http://www.apple.com"
tweet = original_tweet.decode("utf8").encode('ascii', 'ignore')
</code></pre>
<p>I have entered the original tweet on one line in Spyder (Python 3.6)</p>
<p>I get the following message </p>
<pre><code>AttributeError: 'str' object has no attribute 'decode'
</code></pre>
<p>Is there an alternative way to rewrite this code for Python 3.6?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python3+, your <code>original_tweet</code> string is a <a href="https://en.wikipedia.org/wiki/UTF-8" rel="nofollow noreferrer">UTF-8</a> encoded <a href="https://en.wikipedia.org/wiki/Unicode" rel="nofollow noreferrer">Unicode</a> string containing a <a href="https://unicode.org/emoji/charts/full-emoji-list.html" rel="nofollow noreferrer">Unicode emoji</a>. Because the 65k+ characters in Unicode are a superset of the 256 <a href="http://www.asciitable.com/" rel="nofollow noreferrer">ASCII</a> characters, you can not simply convert a Unicode string into an ASCII string.</p>
<p>However, if you can live with some data loss (i.e. drop the emoji) then you can try the following (see <a href="https://stackoverflow.com/questions/4299675/python-script-to-convert-from-utf-8-to-ascii">this</a> or <a href="https://stackoverflow.com/questions/2365411/convert-unicode-to-ascii-without-errors-in-python">this</a> related question):</p>
<pre><code>original_tweet = "I luv my &amp;lt;3 iphone &amp;amp; you‚Äôre awsm ..."

# Convert the original UTF8 encoded string into an array of bytes.
original_tweet_bytes = original_tweet.encode("utf-8")

# Decode that array of bytes into a string containing only ASCII characters;
# pass errors="strict" to find failing character mappings, and I also suggest
# to read up on the option errors="replace".
original_tweet_ascii = original_tweet_bytes.decode("ascii", errors="ignore")
</code></pre>
<p>Or as a simple one-liner:</p>
<pre><code>tweet = original_tweet.encode("utf-8").decode("ascii", errors="ignore")
</code></pre>
<p>Note that this does <em>not</em> convert the <a href="https://dev.w3.org/html5/html-author/charref" rel="nofollow noreferrer">HTML entities</a> <code>&amp;lt;</code> and <code>&amp;amp;</code> which you may have to address separately. You can do that using a proper HTML parser (e.g. <a href="http://lxml.de/parsing.html#parsing-html" rel="nofollow noreferrer">lxml</a>), or use a simple <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">string replacement</a>:</p>
<pre><code>tweet = tweet.replace("&amp;lt;", "&lt;").replace("&amp;amp;", "&amp;")
</code></pre>
<p>Or as of Python 3.4+ you can use <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="nofollow noreferrer"><code>html.unescape()</code></a> like so:</p>
<pre><code>tweet = html.unescape(tweet)
</code></pre>
<p>See also <a href="https://stackoverflow.com/questions/2087370/decode-html-entities-in-python-string">this question</a> on how to handle HTML entities in strings.</p>
<p><strong>Addendum.</strong> The <a href="https://github.com/avian2/unidecode" rel="nofollow noreferrer">Unidecode</a> package for Python seems to provide useful functionality for this, too, although in its current version it does not handle emojis.</p>
</div>
<span class="comment-copy">You seem to be confused what a string in Python represents and what encoding or decoding does. Encoding turns a string into bytes, decoding the opposite. In that light, your call doesn't make sense and hence it also fails.</span>
<span class="comment-copy">This is the website I am following and am unable to understand what is going on: <a href="https://www.analyticsvidhya.com/blog/2014/11/text-data-cleaning-steps-python/" rel="nofollow noreferrer">analyticsvidhya.com/blog/2014/11/‚Ä¶</a></span>
<span class="comment-copy">You can not use <a href="https://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer"><code>str.encode()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#bytes.decode" rel="nofollow noreferrer"><code>bytes.decode()</code></a> to handle the HTML entities <code>&amp;lt;</code> and <code>&amp;amp;</code> if that‚Äôs what you‚Äôre trying to do. Look into libs like <a href="http://lxml.de/parsing.html#parsing-html" rel="nofollow noreferrer">Parsing HTML with lxml</a> for that (based on you importing a HTML parser). However, your string <code>original_tweet</code> isn‚Äôt proper HTML, so you may consider fudging that first‚Ä¶</span>
<span class="comment-copy">@cordelia That website's code does not make any sense. If your <code>original_tweet</code> value is a character string already, there's no need to encode or decode it. If it's a byte string (i.e. a <code>bytes</code> object), <code>decode</code> it once to get a character string.</span>
<span class="comment-copy">I believe that the code on that website was written for Python 2. There, a regular string (without <code>u</code> prefix) is a byte sequence, which can be decoded.</span>
<span class="comment-copy">Thank you so much for helping me with this. That truly resolves my query.</span>
<span class="comment-copy">How do I avoid losing the 're for the you're? Apologies for bugging you with this but I just noticed it.</span>
<span class="comment-copy">@cordelia, the <code>‚Äô</code> character is Unicode character <a href="https://www.fileformat.info/info/unicode/char/2019/index.htm" rel="nofollow noreferrer">U+2019</a> and has no direct equivalent in ASCII. What you can do, however, is to use <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a> to replace all <code>‚Äò</code> and <code>‚Äô</code> with ASCII <code>'</code> and the double quotation marks <code>‚Äú</code> and <code>‚Äù</code> with ASCI <code>"</code>. See also this question: <a href="https://stackoverflow.com/questions/4808967/replacing-unicode-punctuation-with-ascii-approximations">Replacing unicode punctuation with ASCII approximations</a>.</span>
<span class="comment-copy">Thanks for this @Jens</span>
