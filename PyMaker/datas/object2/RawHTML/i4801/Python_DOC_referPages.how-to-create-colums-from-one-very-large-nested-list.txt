<div class="post-text" itemprop="text">
<p>All right, so I have a text file that I've imported into python and had some difficutlies doing so since the data in it was from an api that uses a wrapper and after reading about it online, I loaded it the following way: </p>
<pre><code>save_path = 'C:/path'
name_of_file = "all_transactions"
completename = os.path.join(save_path, name_of_file+ '.txt')
raw_file = io.open(completename, 'r', encoding= "utf-8" )
</code></pre>
<p>It seemed to load now fine. This is how it looks like:</p>
<pre><code> 49021
 &lt;class 'list'&gt;
 ["{'cursor':'longcode'    'currency': 'USD'},\n", "                                'card_details': {'card': {'billing_address': None,\n", "  
</code></pre>
<p>The 'list' is mighty long with a lot of of headers in it. when I place it into pandas DataFrame this is what I get:</p>
<pre><code>                                                       0
0      {'cursor': 'CAESzgEaGQoNOFJYS1lFMlg2WlBUUBABEA...
1                                      'errors': None,\n
2                 'transactions': [{'client_id': None,\n
3                         'created_at': '2018-03-12T1...
</code></pre>
<p>Going down all the way to 49020 rows with one column. 'transactions' and 'cursor' are the two keys I believe. I need the other items like 'created at as column headers and their data in the rows like so:</p>
<pre><code>created_at customer_id
alldates   theidshere
...        ...
...        ...
</code></pre>
<p>I really do no know how to do this, I've tried searching all over</p>
<p>Please help!
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>First off, it looks like you've got json data there. <a href="http://www.json.org/" rel="nofollow noreferrer">http://www.json.org/</a>
Python has a built in library for loading that data. <a href="https://docs.python.org/3.6/library/json.html" rel="nofollow noreferrer">https://docs.python.org/3.6/library/json.html</a></p>
<p>To load it the code would look like this</p>
<pre><code>import json
with open(completename, 'r') as f:
  data = json.load(f)
</code></pre>
<p>Now to get all the column names you can look at each object and aggregate their keys</p>
<pre><code>column_names = set()
for item in data:
  for column in item:
    column_names.add(column)
</code></pre>
<p>After that all the column names will be in the column_names set</p>
</div>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links on that page.  Invest some time with <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a> practicing the examples. It will give you an idea of the tools Python offers to help you solve your problem.  <a href="https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question">“Can someone help me?” not an actual question?</a>.</span>
<span class="comment-copy">If you can determine some structure in the file you may want to just iterate through it line by line and pick out the parts you need and put them in something like a dictionary.</span>
<span class="comment-copy">Did the api docs mention how the data is structured? Is it JSON?</span>
<span class="comment-copy">it is json but doesnt load json properly for some reason</span>
<span class="comment-copy">Ive tried json.loads and json.dumps, still not workable</span>
<span class="comment-copy">Thanks for your response! I get a TypeError saying that the JSON object must be in str, bytes or byte array which obviously makes sense. The problem here is that it is in TextIOWrapper.</span>
<span class="comment-copy">are you using completename in the open statement or raw_file? completename should be fine</span>
<span class="comment-copy">using the completename, getting attribute error when i include the .json in the open statement. str has no attribute json</span>
<span class="comment-copy">are you doing this by accident <code>completename.json</code></span>
<span class="comment-copy">Well messing around with it, i fould out that its not json afterall:</span>
