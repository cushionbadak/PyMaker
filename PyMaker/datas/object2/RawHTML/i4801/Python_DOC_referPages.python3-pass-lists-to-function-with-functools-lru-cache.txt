<div class="post-text" itemprop="text">
<p>I want to cache a function that takes a list as a parameter, but when I try to do so with the <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" rel="nofollow noreferrer"><code>functools.lru_cache</code></a> decorator, it fails with <code>TypeError: unhashable type: 'list'</code>.</p>
<pre><code>
import functools

@functools.lru_cache()
def example_func(lst):
    return sum(lst) + max(lst) + min(lst)


print(example_func([1, 2]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This fails because a list is unhashable. This would make it hard for Python to know what values are cached. A way to fix this is by converting lists to tuples before passing them to a cached function: since tuples are immutable and hashable, they can be cached.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/7027199/hashing-arrays-in-python">Hashing arrays in Python</a></span>
<span class="comment-copy">@Alex just putting this here because googling this ("lrucache python list") didn't find a lot. I then made a custom class with a custom hash function. I  later asked this to a professional Python dev, and he suggested using a tuple. I do think these two questions are related, but not duplicates.</span>
