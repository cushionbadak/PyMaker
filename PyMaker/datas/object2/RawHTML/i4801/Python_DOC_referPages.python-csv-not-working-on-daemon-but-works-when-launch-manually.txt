<div class="post-text" itemprop="text">
<p>I have a python script that launch with a daemon at the start of the raspberry pi 3. </p>
<p>That's a script I modified and it was working perfectly before. 
The script get the ID of a card from a RFID reader, then it post a request on a local server. </p>
<p>I modified the script just to write the card ID and the date in a CSV file. </p>
<p>When I run the script manually everything works well, it write the data in the CSV and everything perfectly. </p>
<p>But when I reboot the raspberry, the writing in the CSV file doesn't works. The post request works. </p>
<p>I've no error, the script continue to works anyway. </p>
<p>I've no clue of what's going on. </p>
<p>Here is my script:</p>
<pre><code>import requests
import binascii
import sys
import time
import subprocess
import Adafruit_PN532 as PN532
import csv
import datetime

duration = 20000
def post_url(uid, duration):
    url = 'http://localhost:1339/app=web/uid=%s/duration=%d' % (uid, duration)
    requests.post(url)
def get_url(uid, duration):
    url = 'http://localhost:1339/app=web/uid=%s/duration=%d' % (uid, duration)
    requests.get(url)

# RPI GPIO pins configuration
CS = 18
MOSI = 23
MISO = 24
SCLK = 25

# Create an instance of the PN532 class
pn532 = PN532.PN532(cs=CS, sclk=SCLK, mosi=MOSI, miso=MISO)

# Call beign to initialize communication with the PN532
pn532.begin()
pn532.SAM_configuration()

# Main loop to detect cards and read a block
with open('log.csv', 'a') as log:

    while True:
        # Check if a card is available to read
        uid = pn532.read_passive_target()
        # Try again if no card is available
        if uid is None:
            continue
        # Transforming card ui into hex format for comparison against
        # registereed uid cards
        card_uid = '0x{0}'.format(binascii.hexlify(uid))
        if card_uid is not None:
            subprocess.call("date")
            print('Hello')

            writer = csv.writer(log)
            data=[card_uid, datetime.datetime.now()]
            writer.writerow([data[0], date[1]])

            post_url(card_uid, duration)
            time.sleep(5)
        else:
            continue
</code></pre>
<p>.sh file : </p>
<pre><code>DIR=my/path/to/file
DAEMON=$DIR/card_read.py
DAEMON_NAME=card_read
# Add any command line options for your daemon here
DAEMON_OPTS=""
# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root
# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid
. /lib/lsb/init-functions
do_start () {
    log_daemon_msg "Starting system $DAEMON_NAME daemon"
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
}
do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
}
case "$1" in
    start|stop)
        do_${1}
        ;;
    restart|reload|force-reload)
        do_stop
        do_start
        ;;
    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" &amp;&amp; exit 0 || exit $?
        ;;
    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;
esac
exit 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of opening the file once, try waiting until you have something to write, then only keep the file open for the duration of the write. That'll force buffers to flush to disk, allowing you to <code>tail -f</code> and see data appear in real-time. Something like this:</p>
<pre><code>while True:
    uid = pn532.read_passive_target()
    if uid is not None:
        record(uid)
        time.sleep(5)

def record(uid):
    card_uid = '0x{0}'.format(binascii.hexlify(uid))
    with open('log.csv', 'a') as log:
        writer = csv.writer(log)
        writer.writerow([card_uid, datetime.datetime.now()])
    post_url(card_uid, duration)
</code></pre>
</div>
<span class="comment-copy">Impossible to say without seeing how this is run and what the output is. Try putting in some logging statements and seeing where the code is failing.</span>
<span class="comment-copy">@Yserbius it is run via a '.sh' file. I'll update my question with that file.</span>
<span class="comment-copy">Can you add some logging to the python script, save to a file in <code>/var/log</code> or something? It would be useful to see what it's doing and where it fails. <a href="https://docs.python.org/3/howto/logging.html" rel="nofollow noreferrer">docs.python.org/3/howto/logging.html</a></span>
<span class="comment-copy">@Yserbius Same thing... When I launch it manually, no problem, but when it's launch by the daemon that doesn't work.  I'm starting to think that the problem is somewhere else...</span>
