<div class="post-text" itemprop="text">
<p><strong>Edited because it seems as though I was too vague or didn't show enough research.  My apologies (newbie here).</strong></p>
<p>I am trying to read a csv file and assign each new line as a value to iterate through a script that writes to an API.  There's no header data in my csv.  I'll be adding a regex search and then using the data that follows the regex expression and assign it as a variable to iterate through my script if that makes sense.</p>
<p>CSV Contents:</p>
<pre><code>Type1, test.com
Type2, name.exe
Type3, sample.com
</code></pre>
<p>Basic premise of what I want to do in Python:</p>
<p>Read from CSV
Script runs with each line from the CSV as a variable (say Variable1).
The script iterates until it is out of values in the csv list, then terminates.
An example for the script syntax could be anything simple...</p>
<pre><code>#!/usr/bin/python
import requests
import csv

reader = csv.reader(open('test.csv'))

for row in reader:
    echo line-item
</code></pre>
<p>until the script runs out of Variables to print, then terminates.  Where I'm struggling is the syntax on how to take a line then assign it to a variable for the for loop.</p>
<p>I hope that makes sense!</p>
</div>
<div class="post-text" itemprop="text">
<p>You should take a look at the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a>.</p>
<p>Here's how you would use it:</p>
<pre><code>import csv
file = csv.reader(open('file.csv'), delimiter=',')
for line in file:
    print(line)
</code></pre>
<p>This produces the following output:</p>
<pre><code>['Type1', ' test.com']
['Type2', ' name.exe']
['Type3', ' sample.com']
</code></pre>
<p>It separates your lines into lists of strings at the occurrences of the delimiter you specify (a comma in this case).</p>
<p>If you want to read the file line by line (not as a CSV), you can just use:</p>
<pre><code>with open('file.csv') as file:
    for line in file:
        print(line)
</code></pre>
<p>Using the with statement makes sure that the file is closed after we are done reading its contents.</p>
</div>
<span class="comment-copy">Thank you so much!  That puts me on a much better path for getting this all to work.  Have a good one.</span>
<span class="comment-copy">@madwheel I've just seen your edit, one more detail to highlight: if you want to save the two different strings into two variables (and know that there are always two), you can do this in the first example instead of printing: <code>(type, site) = line</code>, where <code>line == ['Type1', 'test.com']</code>. This way <code>type</code> will be 'Type1' and <code>site</code> will become 'test.com', so you have the two values in two variables to work with.</span>
