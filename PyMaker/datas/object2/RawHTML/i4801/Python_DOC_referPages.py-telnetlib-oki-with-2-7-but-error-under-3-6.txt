<div class="post-text" itemprop="text">
<p>My case is similar to connect Google.com by python 'telnetlib' </p>
<p>With python Anaconda 2.7.10 shell I have the blow script that works well:</p>
<pre><code>HOST ="www.google.com"
tn=telnetlib.Telnet(HOST,"80")
tn.write("GET /index.html HTTP/1.1\nHost:"+HOST+"\n\n")
l=tn.read_all()
print(l)
</code></pre>
<p>which gives back:</p>
<pre><code>HTTP/1.1 302 Found
Cache-Control: private
Content-Type: text/html; charset=UTF-8
Referrer-Policy: no-referrer
Location: http://www.google.it/index.html?
gfe_rd=cr&amp;dcr=0&amp;ei=A7KiWv_2G6fCXojstrAO
Content-Length: 276
Date: Fri, 09 Mar 2018 16:10:43 GMTenter code here
</code></pre>
<p>If I now move to Python Anaconda 3.6.3 the same script as above I have the below error:</p>
<pre><code>Traceback (most recent call last):
File "&lt;ipython-input-4-0f3256299055&gt;", line 3, in &lt;module&gt;
tn.write("GET /index.html HTTP/1.1\nHost:"+HOST+"\n\n")

File "C:\Users\FP\Anaconda3\lib\telnetlib.py", line 287, in write
if IAC in buffer:

TypeError: 'in &lt;string&gt;' requires string as left operand, not bytesenter    code here
</code></pre>
<p>Do you have a suggestions for this ? I red some documentation about the telnetlib but so far did not yet come to a solution :-(. Any idea about what I might try to do ?</p>
<p>Thank you so much ! Fabio.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem, ultimately, comes down to the difference in how strings are defined in Python 2 and Python 3. If you have never read about this you can look up some material online, for example <a href="http://learning-python.com/strings30.html" rel="nofollow noreferrer">this</a>. <a href="https://docs.python.org/3/library/telnetlib.html" rel="nofollow noreferrer"><code>telnetlib</code></a> works with <code>bytes</code> objects (Telnet generally works with 7-bit ASCII characters), strings (<code>str</code> objects) in Python 3 are text representation without an specific encoding (until you call their <a href="https://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer"><code>.encode()</code></a> method to convert them to <code>bytes</code>). When you call the <a href="https://docs.python.org/3/library/telnetlib.html#telnetlib.Telnet.write" rel="nofollow noreferrer"><code>.write()</code></a> method with a regular string, it checks wether it contains <code>telnetlib.IAC</code>, which is the bytes object <code>b'\xff'</code> (255); since the two objects (the argument and <code>telnetlib.IAC</code>) have different types, it fails.</p>
<p>The fix, obviously, is to use only <code>bytes</code> objects all along (like strings, but prefixed with <code>b</code>):</p>
<pre><code>HOST = b"www.google.com"
tn=telnetlib.Telnet(HOST, 80)
tn.write(b"GET /index.html HTTP/1.1\nHost:"+HOST+b"\n\n")
l=tn.read_all()
print(l)
</code></pre>
<p>The good thing is, you can also use <code>b</code>-prefixed strings in Python 2 (from Python 2.6), they'll just be regular Python 2 strings, so the code works for both versions. You can also look into tools like <a href="https://docs.python.org/3/library/2to3.html" rel="nofollow noreferrer"><code>2to3</code></a> to make code porting to Python 3 easier (more on the topic <a href="http://python3porting.com/" rel="nofollow noreferrer">here</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm guessing telnet will want to work in bytes and not the unicode you have. </p>
<p>Maybe try to encode?</p>
<p><code>tn.write(("GET /index.html HTTP/1.1\nHost:"+HOST+"\n\n").encode('ascii'))</code></p>
</div>
<span class="comment-copy">I didn't know about <code>b""</code> that's cool! Very interesting.</span>
<span class="comment-copy">This worked great! I did not realized that so much changed about strings between py 2 and 3. I'll have some more time on the link you mailed. I did not also know about the 2to3  lib, I'll try to convert some code I wrote tiome ago for SAP data analysis. Very interereting you mentioned that jdehesa :-)</span>
<span class="comment-copy">Thank you so much for your feedback, it worked well :-) !</span>
