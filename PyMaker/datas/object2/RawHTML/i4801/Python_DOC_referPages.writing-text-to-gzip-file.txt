<div class="post-text" itemprop="text">
<p>Following tutorials and examples found in blogs and in other threads here, it appears that the way to write to a <code>.gz</code> file is to open it in binary mode and write the string as is:</p>
<pre><code>import gzip
with gzip.open('file.gz', 'wb') as f:
    f.write('Hello world!')
</code></pre>
<p>I tried it, and got the following exception:</p>
<pre><code>  File "C:\Users\Tal\Anaconda3\lib\gzip.py", line 258, in write
    data = memoryview(data)
TypeError: memoryview: a bytes-like object is required, not 'str'
</code></pre>
<p>So I tried opening the file in text mode:</p>
<pre><code>import gzip
with gzip.open('file.gz', 'w') as f:
    f.write('Hello world!')
</code></pre>
<p>But I got the same error:</p>
<pre><code>  File "C:\Users\Tal\Anaconda3\lib\gzip.py", line 258, in write
    data = memoryview(data)
TypeError: memoryview: a bytes-like object is required, not 'str'
</code></pre>
<p>How can this problem be addressed in Python3?</p>
</div>
<div class="post-text" itemprop="text">
<h3><code>mode='wb'</code></h3>
<p>When writing to a file opened in binary mode, you must write bytes, not string. Encode your string using <code>str.encode</code>:</p>
<pre><code>with gzip.open('file.gz', 'wb') as f:
    f.write('Hello world!'.encode())
</code></pre>
<hr/>
<h3><code>mode='wt'</code></h3>
<p>(found by OP) Alternatively, you can write strings to your file when you open it in the <code>wt</code> (explicit <em>text</em>) mode:</p>
<pre><code>with gzip.open('file.gz', 'wt') as f:
    f.write('Hello world!')
</code></pre>
<p>The <a href="https://docs.python.org/3/library/gzip.html#examples-of-usage" rel="nofollow noreferrer">documentation</a> has a couple of handy examples on usage.</p>
</div>
<span class="comment-copy">Thank you for your answer and for your time! I was able to get the functionality I wanted, of writing text without encoding to bytes, by opening the file in <code>'wt'</code> mode</span>
<span class="comment-copy">I'll be glad if you add this option to your answer and I'll be happy to accept it</span>
<span class="comment-copy">@AgvaniaRekuva Yes, that's fine.</span>
