<div class="post-text" itemprop="text">
<p>I have a list of unequal lists.
I would like to generate a new list with list comprehension from the sublists.</p>
<pre><code>s = [['a','b','c','d'],['e','f','g'],['h','i'],['j','k','l','m']]
</code></pre>
<p>I am trying the following code but it keeps raising an indexError:</p>
<pre><code>new_s = []
for i in range(len(s)):
    new_s.append((i,[t[i] for t in s if t[i]))
</code></pre>
<p>The expected output would be:</p>
<pre><code>new_s = [(0,['a','e','h','j']),(1,['b','f','i','k']),(2,['c','g','l']),(3,['d','m'])]
</code></pre>
<p>Any ideas how to get this to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="noreferrer"><code>itertools.zip_longest</code></a> to iterate over each sublist elementwise, while using <code>None</code> as the fill value for the shorter sublists.</p>
<p>Then use <a href="https://docs.python.org/3/library/functions.html#filter" rel="noreferrer"><code>filter</code></a> to remove the <code>None</code> values that were used from padding.</p>
<p>So all together in a list comprehension:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; [(i, list(filter(None, j))) for i, j in enumerate(zip_longest(*s))]
[(0, ['a', 'e', 'h', 'j']), (1, ['b', 'f', 'i', 'k']), (2, ['c', 'g', 'l']), (3, ['d', 'm'])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>one without itertools but modifying the original list.</p>
<pre><code>def until_depleted():
   while any(sl for sl in s):
    yield 1

list(enumerate(list(s_l.pop(0) for s_l in s if s_l) for _ in until_depleted()))
</code></pre>
<p>one without modifying the original but with a counter</p>
<pre><code>idx = 0
max_idx = max(len(_) for _ in s)

def until_maxidx():
    global idx
    while idx &lt; max_idx:
        yield 1
        idx += 1

list(enumerate(list(s_l[idx] for s_l in s if idx &lt; len(s_l)) for _ in until_maxidx()))
</code></pre>
<p>A more explicit one without the inner comprehension nor calling generators:</p>
<pre><code>ret = []
idx = 0
max_idx = max(len(_) for _ in s)
while idx &lt; max_idx:
    ret.append(list(s_l[idx] for s_l in s if idx &lt; len(s_l)))
    idx += 1

print(list(enumerate(ret)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is without itertools, but also without a comprehension, so I don't know if it does count as a solution.</p>
<pre><code>s = [['a','b','c','d'],['e','f','g'],['h','i'],'j','k','l','m']]

new_s = []
for i in range(len(s)):
    tmp = []
    for item in s:
        tmp.extend(item[i:i+1])
    new_s.append((i, tmp))
</code></pre>
</div>
