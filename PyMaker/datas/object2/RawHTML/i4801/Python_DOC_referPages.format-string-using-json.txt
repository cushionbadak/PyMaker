<div class="post-text" itemprop="text">
<p>Here is a file called <code>subtitles.ass</code>. If you have a look at it, you will find I define <code>{font_size}</code> and <code>{sentence[0}</code>. Obviously I want to format them with my input data.</p>
<pre><code>[Script Info]
; Script generated by FFmpeg/Lavc57.107.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: sorry,Arial,{font_size},&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;H00000000,0,0,0,0,100,100,0,0,1,2,1,2,10,10,12,1


[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.97,0:00:01.50,sorry,,0,0,0,,{sentence[0]}
Dialogue: 0,0:00:03.11,0:00:04.39,sorry,,0,0,0,,{sentence[1]}
Dialogue: 0,0:00:05.18,0:00:07.26,sorry,,0,0,0,,{sentence[2]}
Dialogue: 0,0:00:07.26,0:00:09.91,sorry,,0,0,0,,{sentence[3]}
Dialogue: 0,0:00:10.00,0:00:11.26,sorry,,0,0,0,,{sentence[4]}
Dialogue: 0,0:00:11.63,0:00:12.70,sorry,,0,0,0,,{sentence[5]}
Dialogue: 0,0:00:13.61,0:00:16.01,sorry,,0,0,0,,{sentence[6]}
Dialogue: 0,0:00:18.08,0:00:19.60,sorry,,0,0,0,,{sentence[7]}
Dialogue: 0,0:00:19.60,0:00:21.60,sorry,,0,0,0,,{sentence[8]}
</code></pre>
<p>First I read data from <code>subtitles.ass</code>.</p>
<pre><code>with open(subtitles_file, 'r') as file:
    subtitles = file.read()
</code></pre>
<p>And now input data comes.</p>
<pre><code>{
  "font_size": "47",
  "sentences": [
   ....
  ]
}
</code></pre>
<p>Finally I want to format subtitles with above json data. Simply, I want to replace {font_size} with 47. <code>data</code> is above json.</p>
<pre><code>subtitles.format(data.get('font_size'), data.get('sentences'))
</code></pre>
<p>However I got an error.</p>
<blockquote>
<p>Traceback (most recent call last):
    File "iemoji.py", line 17, in 
      subtitles.format(data.get('font_size'), data.get('sentences'))
  KeyError: 'font_size'</p>
</blockquote>
<h1>EDIT for <code>data</code></h1>
<p>I load data like this.</p>
<pre><code>data = json.load(file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you need to unpack the dictionary inside <code>format</code> function to get key value pairs.</p>
<p>try:</p>
<pre><code>subtitles.format(**data)
</code></pre>
<p>This is exactly what format_map is for.</p>
<pre><code>subtitles.format_map(data)
</code></pre>
<p>working example:</p>
<pre><code>import json

subtitles = """[Script Info]
; Script generated by FFmpeg/Lavc57.107.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: sorry,Arial,{font_size},&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;H00000000,0,0,0,0,100,100,0,0,1,2,1,2,10,10,12,1


[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.97,0:00:01.50,sorry,,0,0,0,,{sentence[0]}
Dialogue: 0,0:00:03.11,0:00:04.39,sorry,,0,0,0,,{sentence[1]}
Dialogue: 0,0:00:05.18,0:00:07.26,sorry,,0,0,0,,{sentence[2]}
Dialogue: 0,0:00:07.26,0:00:09.91,sorry,,0,0,0,,{sentence[3]}
Dialogue: 0,0:00:10.00,0:00:11.26,sorry,,0,0,0,,{sentence[4]}
Dialogue: 0,0:00:11.63,0:00:12.70,sorry,,0,0,0,,{sentence[5]}
Dialogue: 0,0:00:13.61,0:00:16.01,sorry,,0,0,0,,{sentence[6]}
Dialogue: 0,0:00:18.08,0:00:19.60,sorry,,0,0,0,,{sentence[7]}
Dialogue: 0,0:00:19.60,0:00:21.60,sorry,,0,0,0,,{sentence[8]}"""

data_str = """{
    "font_size": "47",
    "sentence": [
        "sample sentence0",
        "sample sentence1",
        "sample sentence2",
        "sample sentence3",
        "sample sentence4",
        "sample sentence5",
        "sample sentence6",
        "sample sentence7",
        "sample sentence8",
        "sample sentence9"
    ]
}"""

data = json.loads(data_str)
print(subtitles.format(**data))#or
#print(subtitles.format_map(data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error here isn't coming from <code>data.get</code>, but from <code>font_size</code>.</p>
<p>When you use a named parameter in a <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>format</code></a> string, you have to provide a keyword value with a matching name. But you're only providing positional values, so there's nothing that matches.</p>
<p>You <em>could</em> fix this by doing something clumsy like:</p>
<pre><code>subtitles.format(font_size=data.get('font_size'),
                 sentences=data.get('sentences'))
</code></pre>
<p>But really, this is exactly what <a href="https://docs.python.org/3/library/stdtypes.html#str.format_map" rel="nofollow noreferrer"><code>format_map</code></a> is for:</p>
<pre><code>subtitles.format_map(data)
</code></pre>
<hr/>
<p>For future reference, it's a lot easier to debug things like this if you (temporarily) break up the expression, so you can see exactly which part causes the exception:</p>
<pre><code>font_size = data.get('font_size')
sentences = data.get('sentences')
subtitles.format(font_size, sentences)
</code></pre>
<p>Then you'll see that it's the third line, not the first, that's raising the <code>KeyError</code>, and it'll be a lot easier to figure out why.</p>
<hr/>
<p>Finally, I'm not sure why you're using <code>data.get('font_size')</code> instead of just <code>data['font_size']</code>. If you're doing it to get a default value instead of a <code>KeyError</code> if you left the font size out of the data dict, you almost certainly don't want that default value to be <code>None</code>, do you? Anyway, if there <em>is</em> a good reason for it, even that can be simplified: turn <code>data</code> into a <code>collections.defaultdict(lambda: whatever-default-value-you-want)</code>, and then any missing key will have that default value. (Even if you use it with <code>format_map</code>.)</p>
</div>
<span class="comment-copy">Can you post the dictionary contained in <code>data</code>?</span>
<span class="comment-copy">If the thing you show after "And now input data comes" is your <code>data</code>, then you don't get that exception, you get the string <code>'47'</code>. And even if that <i>isn't</i> your <code>data</code>, <code>data.get('font_size')</code> still isn't going to raise that exception, it's going to return <code>None</code>â€”that's the whole point of using <code>get</code> instead of <code>[]</code>.</span>
<span class="comment-copy">Obvisouly <code>data</code> is json data.</span>
<span class="comment-copy">I am not an English native speaker. If you don't know what I am asking, you can comment then I will update my question. Thanks.</span>
<span class="comment-copy">I think I've guessed what you're trying to do, but I'm not sure. Read my answer, and if I guessed wrong, I'll delete it and try again.</span>
<span class="comment-copy">Why does your example use <code>format_map()</code> ? 'str' object has no attribute 'format_map'</span>
<span class="comment-copy">It was suggested by @abarnert and I was on mobile sou couldn't test it. Just read the docs and updated. Reverted the update till I try it.</span>
<span class="comment-copy">I Checked and it's there in python 3.5+</span>
<span class="comment-copy">Do you forget <code>}</code> ?</span>
<span class="comment-copy">@CoXier Thanks; fixed.</span>
<span class="comment-copy">There is KeyError: 'font_size'.  subtitles.format({'font_size': data.get('font_size'),                   'sentences': data.get('sentences')})</span>
<span class="comment-copy">@CoXier Oops, those were supposed to be keyword arguments, not members of a dict; fixed. But anyway, I said that version is clumsy, and it's obviously a lot more verbose (and easy to get wrong, as I keep proving) than just using <code>format_map</code>, so why not do that?</span>
<span class="comment-copy">A good answer. But I need some to test.</span>
