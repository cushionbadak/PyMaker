<div class="post-text" itemprop="text">
<p>I am pretty sure that <code>~</code> in Pandas is boolean <code>not</code>. I found a couple of StackOverflow questions / answers, but no pointer to official documentation.</p>
<h2>Sanity Check</h2>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pandas as pd


df = pd.DataFrame([(1, 2, 1),
                   (1, 2, 2),
                   (1, 2, 3),
                   (4, 1, 612),
                   (4, 1, 612),
                   (4, 1, 1),
                   (3, 2, 1),
                   ],
                  columns=['groupid', 'a', 'b'],
                  index=['India', 'France', 'England', 'Germany', 'UK', 'USA',
                         'Indonesia'])

print(df)
filtered = df[~(df['a'] == 2)]
print(filtered)
</code></pre>
<p>The df is</p>
<pre><code>           groupid  a    b
India            1  2    1
France           1  2    2
England          1  2    3
Germany          4  1  612
UK               4  1  612
USA              4  1    1
Indonesia        3  2    1
</code></pre>
<p>and <code>filtered</code> is</p>
<pre><code>         groupid  a    b
Germany        4  1  612
UK             4  1  612
USA            4  1    1
</code></pre>
<p>So I'm pretty sure it is boolean not.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>~</code> is the operator equivalent of the <a href="https://github.com/pandas-dev/pandas/blob/master/pandas/core/generic.py#L1054" rel="nofollow noreferrer"><code>__invert__</code></a>  dunder which has been overridden explicitly for the purpose performing <em>vectorized</em> logical inversions on <code>pd.DataFrame</code>/<code>pd.Series</code> objects.</p>
<pre><code>s = pd.Series([True, False])

~s

0    False
1     True
dtype: bool

s.__invert__()

0    False
1     True
dtype: bool
</code></pre>
<p>Note: Dunder methods must not be used directly in code, always prefer the use of the operators.</p>
<p>Also, since you've asked, the section on <a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing" rel="nofollow noreferrer">Boolean Indexing</a> describes its use.</p>
<blockquote>
<p>Another common operation is the use of boolean vectors to filter the
  data. The operators are: <code>|</code> for <code>or</code>, <code>&amp;</code> for <code>and</code>, and <strong><code>~</code> for <code>not</code></strong>. These
  must be grouped by using parentheses.</p>
</blockquote>
<p>Bold emphasis mine.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html?highlight=boolean%20mask#boolean-indexing" rel="nofollow noreferrer">Here</a> they define explicitly:</p>
<blockquote>
<p>Another common operation is the use of boolean vectors to filter the
  data. The operators are: | for or, &amp; for and, and <strong>~ for not</strong>. These
  must be grouped by using parentheses.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I found it referenced on <a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html" rel="nofollow noreferrer">this</a> page. It's about halfway down, I'd navigate to it with ctrl+F. You're correct though, it's the <code>not</code> operator.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you go to: <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">https://docs.python.org/3/library/operator.html</a>, it says:</p>
<pre><code>Bitwise Inversion   ~ a invert(a)
</code></pre>
</div>
<span class="comment-copy">Nice explanation. However I believe this operator is overridden from standard python <a href="https://docs.python.org/3/reference/datamodel.html#object.__invert__" rel="nofollow noreferrer"><b>invert</b></a> to support vectorised behaviour. Similar to the rest of pandas operators.</span>
<span class="comment-copy">Thanks, that terminology needed fixing.</span>
<span class="comment-copy">Good to know it , thank man</span>
<span class="comment-copy">Please include all relevant portions of cited links in your answer.</span>
<span class="comment-copy">But does Pandas overwrite <code>~</code> with a magic method? I guess that is possible with <a href="https://docs.python.org/3/reference/datamodel.html#object.__neg__" rel="nofollow noreferrer"><code>__neg__</code></a>?</span>
