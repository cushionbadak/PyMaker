<div class="post-text" itemprop="text">
<p>I have a dataframe as follows:</p>
<pre><code>V
Out[58]: 

     P1 P2 P3 

V1   a  b  c  
V2   f  g  h  
V3   k  l  m
</code></pre>
<p>I want to store them all in a list L such that:</p>
<pre><code>L=[a,b,c,f,g,h,k,l,m]
</code></pre>
<p>iterating from 1 row to another. Any idea how to go about it? Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Access the <code>.values</code> attribute, reshape, and convert to list using <code>ndarray.tolist</code>:</p>
<pre><code>df.values.reshape(-1,).tolist()
['a', 'b', 'c', 'f', 'g', 'h', 'k', 'l', 'm']
</code></pre>
<p>Another would be <code>stack</code>ing followed by a direct <code>tolist</code> call:</p>
<pre><code>df.stack().tolist()
['a', 'b', 'c', 'f', 'g', 'h', 'k', 'l', 'm']
</code></pre>
<p></p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>tolist</code> and <code>sum</code> </p>
<pre><code>sum(df.values.tolist(),[])
Out[65]: ['a', 'b', 'c', 'f', 'g', 'h', 'k', 'l', 'm']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a> is convenient for this:</p>
<pre><code>from itertools import chain
import pandas as pd

df = pd.DataFrame([['a', 'b', 'c'],
                   ['f', 'g', 'h'],
                   ['k', 'l', 'm']],
                  columns=['P1', 'P2', 'P3'],
                  index=['V1', 'V2', 'V3'])

res = list(chain.from_iterable(df.values))

# ['a', 'b', 'c', 'f', 'g', 'h', 'k', 'l', 'm']
</code></pre>
</div>
<span class="comment-copy">Wow! thanks a lot!</span>
<span class="comment-copy">@DChy No worries.</span>
<span class="comment-copy">It's better to use <code>chain.from_iterable(df.values)</code>, so you don't have to unpack the lists.</span>
<span class="comment-copy">No need for <code>dis</code>, just <code>df = pd.concat([df] * 100000)</code> and do a couple of timeit tests and you'll understand.</span>
