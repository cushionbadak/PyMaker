<div class="post-text" itemprop="text">
<p>How do I code a RADIX SORT in Python for different length of string with space?</p>
<p>For example my input is </p>
<pre><code>["THE LORD","HELP", "WHO IS THAT"]
</code></pre>
<p>I would like to get </p>
<pre><code>["HELP", "THE LORD", "WHO IS THAT"] 
</code></pre>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>How about something like</p>
<pre><code>ll=["THE LORD","HELP", "WHO IS THAT"]
sorted(ll, key=len)
</code></pre>
<p>Read about <code>sorted()</code> <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">here</a>.</p>
<p>And if you need this sorted as well, do</p>
<pre><code>l=sorted(ll, key=len)
l.sort()
</code></pre>
<p>or using a <a href="http://www.secnetix.de/olli/Python/lambda_functions.hawk" rel="nofollow noreferrer">lambda function</a>,</p>
<pre><code>l=sorted(ll, key = lambda x: (len, x))
</code></pre>
<p>where first the length will be considered and then the string itself.</p>
<p>Or if you don't want to keep the original list,</p>
<pre><code>ll.sort(key=lambda x: (len, x))
</code></pre>
<p><code>sort()</code> modifies the original list whereas <code>sorted()</code> makes a new one.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://en.wikipedia.org/wiki/Radix_sort" rel="nofollow noreferrer">Wikipedia</a> has an implementation of the Radix sorting algorithm</p>
<pre><code>def radix_sort(array, base=10):
    def list_to_buckets(array, base, iteration):
        buckets = [[] for _ in range(base)]
        for number in array:
            # Isolate the base-digit from the number
            digit = (number // (base ** iteration)) % base
            # Drop the number into the correct bucket
            buckets[digit].append(number)
        return buckets

    def buckets_to_list(buckets):
        numbers = []
        for bucket in buckets:
            # append the numbers in a bucket
            # sequentially to the returned array
            for number in bucket:
                numbers.append(number)
        return numbers

    maxval = max(array)

    it = 0
    # Iterate, sorting the array by each base-digit
    while base ** it &lt;= maxval:
        array = buckets_to_list(list_to_buckets(array, base, it))
        it += 1

    return array
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/43198074/how-to-sort-a-list-of-words-by-length">How to sort a list of words by length</a></span>
<span class="comment-copy">This question is unclear. You want an implementation of the Radix sort algorithm to sort your list?</span>
<span class="comment-copy">@SembeiNorimaki Yes, I want to use radix sort algorithm to sort my list</span>
<span class="comment-copy">In the <a href="https://en.wikipedia.org/wiki/Radix_sort" rel="nofollow noreferrer">Wikipedia</a> you have an implementation of the radix algorithm in python. But do you need this algorithm for any specific reason?</span>
