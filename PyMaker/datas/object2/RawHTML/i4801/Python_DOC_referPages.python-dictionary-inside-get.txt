<div class="post-text" itemprop="text">
<p>first post!
I am slowly working my way through Automate the Boring Stuff with Python and am just doing a bit of experimentation with the get() method and dictionaries (chapter 5). I have written a small piece of code to tell me the capital of the country that I type in or, if it's not in my dictionary, that the capital city is "not available". </p>
<p>However, the response "not available" is appearing even when I input countries that are included in my dictionary. Any insights about what is going on here? I tried Googling about using dictionaries inside the get() method but didn't find much that explained the issue. Code as follows:</p>
<pre><code>capitals = {'Australia': 'Canberra', 'England': 'London', 'South Africa': 'Pretoria'}
print('Choose country')
country = input()
print('The capital of ' + country + ' is ' 
      + capitals.get(capitals[country], 'not available'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>get</code> method <em>replaces</em> <code>__getitem__</code> (which you normally access via bracket notation). <code>capitals.get(capitals[country], 'not available')</code> is actually performing two lookups:</p>
<ol>
<li><code>capitals[country]</code> finds the capital, e.g. Canberra.</li>
<li><code>capitals.get(...)</code> then looks up the name of the capital as the country. There are very few cases where this <em>won't</em> fail.</li>
</ol>
<p>If you look up a country that does not exist, <code>capitals[country]</code> will just raise a <code>KeyError</code>.</p>
<p>What you probably meant to do was</p>
<pre><code>capitals.get(country, 'not available')
</code></pre>
<p>One more consideration you may want to address is that Python dictionaries are case sensitive. You probably want to get <code>Canberra</code> back whether you pass in <code>Australia</code>, <code>australia</code>, or <code>aUstrAlIA</code>. The standard way of doing this is to make the keys of the dictionary all lowercase, and then look up with either the lowercase or <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer">case-folded</a> version:</p>
<pre><code>capitals = {'australia': 'Canberra', 'england': 'London', 'south africa': 'Pretoria'}
country = input('Choose country: ')
print('The capital of', country, 'is', capitals.get(country.casefold(), 'not available'))
</code></pre>
<p>Notice that I replaced the first <code>print</code> with an argument to <code>input</code>, and removed the <code>+</code> operators in the second <code>print</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the Synax for get() method:</p>
<pre><code>dict.get(key, default = None)
</code></pre>
<p><strong>key</strong> in your dictionary is country like 'Australia'.</p>
<p>In your code:</p>
<pre><code>capitals.get(capitals[country], 'not available')
</code></pre>
<p><code>capitals[country]</code> is not the key, you need to use it like this code:</p>
<pre><code>capitals.get(country, 'not available')
</code></pre>
</div>
<span class="comment-copy">Modify your get like: <code>capitals.get(country, 'not available')</code></span>
<span class="comment-copy"><code>capitals[country]</code> <i>already retrieves the value for the key <code>country</code></i>, which you then pass to <code>capitals.get(..., 'not available')</code>. But since <code>...</code> will be a <i>capital</i>, it won't be in the <code>dict</code>. You want <code>capitals.get(country, 'not available')</code>. In other words, <code>some_dict.get(some_key)</code> is equivalent to <code>some_dict[some_key]</code> except <code>.get</code> will return a default value if the key isn't in the dict, wheras indexing into the dict will throw an error</span>
<span class="comment-copy">Show your input. You have a problem that is hiding another problem, which is that you don't normalize the case of the input.</span>
<span class="comment-copy">Thank you - working well now!</span>
<span class="comment-copy">@Foz. It is good practice to accept the answer that helps you solve your issue.</span>
<span class="comment-copy">Thank you - working well now!</span>
