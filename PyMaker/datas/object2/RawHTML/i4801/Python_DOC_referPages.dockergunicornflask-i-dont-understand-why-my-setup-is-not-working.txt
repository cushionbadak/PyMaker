<div class="post-text" itemprop="text">
<p>I'm trying to build a simple application with flask and I've decided to also use gunicorn and docker.</p>
<p>At the moment I have this configuration:</p>
<pre><code>&gt; app
    &gt; myapp
        __init__.py
        index.html
    docker-compose.yml
    Dockerfile
</code></pre>
<p>My <code>docker-compose.yml</code>:</p>
<pre><code>version: '2'
services:
  web:
    build: .
    volumes:
      - .:/app
    command: /usr/local/bin/gunicorn -b :8000 myapp:app
    working_dir: /app
</code></pre>
<p>My <code>__init__.py</code>:</p>
<pre><code>import os

from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

if __name__ == '__main__':
    app.run()
</code></pre>
<p>This minimal configuration works and I'm able to access my application and get my index page.</p>
<p>What I don't like is having my app created inside the <code>__init__.py</code> so I would like to move the app creation inside an <code>app.py</code> file.</p>
<p>The new structure will be:</p>
<pre><code>&gt; app
    &gt; myapp
        __init__.py
        app.py
        index.html
    docker-compose.yml
    Dockerfile
</code></pre>
<p><code>app.py</code> will have the content of the old <code>__init__.py</code> file and the new <code>__init__.py</code> file would be empty.</p>
<p>This doesn't work. I get an error</p>
<blockquote>
<p>Failed to find application: 'myapp'</p>
</blockquote>
<p>and I don't understand why.</p>
<p>Any idea about this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In the first configuration, your Flask app was located directly in the package <code>myapp</code>; after you moved it, it is in the module <code>myapp.app</code>.</p>
<p>Gunicorn <a href="http://docs.gunicorn.org/en/stable/run.html" rel="nofollow noreferrer">expects</a> the app to be specified as <code>module_name:variable_name</code>, somewhat like <code>from module_name import variable_name</code>.</p>
<p>Option one: specify the correct module path:</p>
<pre><code>/usr/local/bin/gunicorn -b :8000 myapp.app:app
</code></pre>
<p>Option two: add the app back to <code>myapp</code>. In <code>myapp/__init__.py</code>, add </p>
<pre><code>from .app import app
</code></pre>
<p>Note that if the variable and the module share the name, the module will be overshadowed (not a good thing, although not a critical either).</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/test.html" rel="nofollow noreferrer"><code>test</code></a> is a bad choice for a package name, which might or might not cause your issue.</span>
<span class="comment-copy">I will try to change it, thanks.</span>
<span class="comment-copy">I read the documentation but I was not really sure about how things needed to be translated to my specific case. Thank you very much for your explanation!</span>
