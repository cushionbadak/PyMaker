<div class="post-text" itemprop="text">
<p>In AWS, I'm trying to save a file to S3 in Python using a Lambda function. While this works on my local computer, I am unable to get it to work in Lambda. I've been working on this problem for most of the day and would appreciate help. Thank you.</p>
<pre><code>def pdfToTable(PDFfilename, apiKey, fileExt, bucket, key):

    # parsing a PDF using an API
    fileData = (PDFfilename, open(PDFfilename, "rb"))
    files = {"f": fileData}
    postUrl = "https://pdftables.com/api?key={0}&amp;format={1}".format(apiKey, fileExt)
    response = requests.post(postUrl, files=files)
    response.raise_for_status()

    # this code is probably the problem!
    s3 = boto3.resource('s3')
    bucket = s3.Bucket('transportation.manifests.parsed')
    with open('/tmp/output2.csv', 'rb') as data:
        data.write(response.content)
        key = 'csv/' + key
        bucket.upload_fileobj(data, key)
</code></pre>
<hr/>
<pre><code>    # FYI, on my own computer, this saves the file
    with open('output.csv', "wb") as f:
        f.write(response.content)
</code></pre>
<p>In S3, there is a bucket <code>transportation.manifests.parsed</code> containing the folder <code>csv</code> where the file should be saved. </p>
<p>The type of <code>response.content</code> is bytes.</p>
<p>From AWS, the error from the current set-up above is <code>[Errno 2] No such file or directory: '/tmp/output2.csv': FileNotFoundError.</code> In fact, my goal is to save the file to the csv folder under a unique name, so <code>tmp/output2.csv</code> might not be the best approach. Any guidance?</p>
<p>In addition, I've tried to use <code>wb</code> and <code>w</code> instead of <code>rb</code> also to no avail. The error with <code>wb</code> is <code>Input &lt;_io.BufferedWriter name='/tmp/output2.csv'&gt; of type: &lt;class '_io.BufferedWriter'&gt; is not supported.</code> The <a href="https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.upload_fileobj" rel="nofollow noreferrer">documentation</a> suggests that using 'rb' is the recommended usage, but I do not understand why that would be the case. </p>
<p>Also, I've tried <code>s3_client.put_object(Key=key, Body=response.content, Bucket=bucket)</code> but receive <code>An error occurred (404) when calling the HeadObject operation: Not Found</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a writable stream that you're asking boto3 to use as a readable stream which won't work.</p>
<p>Write the file, and then simply use bucket.upload_file() afterwards, like so:</p>
<pre><code>s3 = boto3.resource('s3')
bucket = s3.Bucket('transportation.manifests.parsed')
with open('/tmp/output2.csv', 'w') as data:
    data.write(response.content)

key = 'csv/' + key
bucket.upload_file('/tmp/output2.csv', key)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming Python 3.6. The way I usually do this is to wrap the bytes content in a <a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">BytesIO</a> wrapper to create a file like object. And, per the boto3 docs you can use <a href="https://boto3.readthedocs.io/en/latest/guide/s3.html#using-the-transfer-manager" rel="nofollow noreferrer">the-transfer-manager</a> for a managed transfer:</p>
<pre><code>from io import BytesIO
import boto3
s3 = boto3.client('s3')

fileobj = BytesIO(response.content)

s3.upload_fileobj(fileobj, 'mybucket', 'mykey')
</code></pre>
<p>If that doesn't work I'd double check all IAM permissions are correct.</p>
</div>
<span class="comment-copy">You have <code>open('/tmp/output2.csv', 'rb')</code> but you are trying to write to the file. Note you probably don't have to create a temporary file. The bucket has a <a href="http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Bucket.put_object" rel="nofollow noreferrer"><code>put_object</code></a> method you can use.</span>
<span class="comment-copy">just updated the post to reflect responses to your comment. thoughts?</span>
<span class="comment-copy">You  need to fix the problem that @Alasdair indicated. You're attempting to open a non-existent file for <i>reading</i> hence you get FileNotFoundError). You need to open it for writing. Plus CSV files are text files, not binary files, so "wt" (or just "w" because text is the default) would typically be more appropriate.</span>
<span class="comment-copy">@jarmod When I switch it to 'w', the error is <code>Input &lt;_io.TextIOWrapper name='/tmp/output2.csv' mode='w' encoding='UTF-8'&gt; of type: &lt;class '_io.TextIOWrapper'&gt; is not supported</code></span>
<span class="comment-copy">You need to use <code>'w'</code> or <code>wb</code> to <i>write</i> the file. The docs you link to are for uploading that file, which is a separate step. You haven't shown enough information to know why <code>put_object</code> failed. You already have the bucket so I would do <code>bucket.put_object(Key=key, Body=response.content)</code>. If that doesn't work you should show the complete code you tried, and the full traceback.</span>
