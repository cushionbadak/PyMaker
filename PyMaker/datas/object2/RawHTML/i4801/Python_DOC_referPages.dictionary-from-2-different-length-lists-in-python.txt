<div class="post-text" itemprop="text">
<p>The qeustion is how should i create a dictionary out of two different length lists. I dont have dictionary. I want to create dictionary.</p>
<p>I would like to create a dictionary out of two lists that have different length when i apply split method. Forexample</p>
<pre><code> names
 Out[41]: 
 ['Georgie Porgie',
  'Queen St. Cafe',
  'Dumplings R Us',
  'Mexican Grill',
  'Deep Fried Everything']

  cuisines
  Out[42]: ['Canadian,Pub Food', 'Malaysian,Thai', 'Chinese', 'Mexican', 
  'Pub Food']

  cuisines_splited
  Out[43]: 
  [['Canadian', 'Pub Food'],
  ['Malaysian', 'Thai'],
  ['Chinese'],
  ['Mexican'],
  ['Pub Food']]
</code></pre>
<p>I would like to create a dictionary, using cuisines_splited as keys and names as values. I have tried so far this but it doesnot give the right answer.</p>
<pre><code>cuisine_to_names = {}

for cuis, name in zip(cuisines_splited, names):
    for i in cuis:
        cuisine_to_names[i] = name


cuisine_to_names
Out[46]: 
{'Canadian': 'Georgie Porgie',
 'Chinese': 'Dumplings R Us',
 'Malaysian': 'Queen St. Cafe',
 'Mexican': 'Mexican Grill',
 'Pub Food': 'Deep Fried Everything',
 'Thai': 'Queen St. Cafe'}
</code></pre>
<p>The desired output is:</p>
<pre><code>{'Canadian': ['Georgie Porgie'],
 'Pub Food': ['Georgie Porgie', 'Deep Fried Everything'],
 'Malaysian': ['Queen St. Cafe'],
 'Thai': ['Queen St. Cafe'],
 'Chinese': ['Dumplings R Us'],
 'Mexican': ['Mexican Grill']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to have similar list to start with. you need to split while zipping and using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a>.</p>
<pre><code>from collections import defaultdict

names = ['Georgie Porgie', 'Queen St. Cafe', 'Dumplings R Us', 'Mexican Grill', 'Deep Fried Everything']
cuisines =  ['Canadian,Pub Food', 'Malaysian,Thai', 'Chinese', 'Mexican',  'Pub Food']

from collections import defaultdict

d = defaultdict(list)
for mk, v in zip(cuisines, names):
    for k in mk.split(','):
        d[k.strip()].append(v.strip())

print(d)

out:
defaultdict(&lt;class 'list'&gt;, {
    "Canadian": ["Georgie Porgie"],
    "Pub Food": ["Georgie Porgie", "Deep Fried Everything"],
    "Malaysian": ["Queen St. Cafe"],
    "Thai": ["Queen St. Cafe"],
    "Chinese": ["Dumplings R Us"],
    "Mexican": ["Mexican Grill"]
})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with a split and a combine function using a <code>defaultdict</code></p>
<pre><code>def split(names, cuisines):
    for name, cuisine in zip(names, cuisines):
        for c in cuisine.split(','):
            yield name, c
from collections import defaultdict
def combine(splits):
    result = defaultdict(list)
    for name, cuisine in splits:
        result[cuisine].append(name)
    return(result)
</code></pre>
<blockquote>
<pre><code>combine(split(names, cuisines))
</code></pre>
</blockquote>
<pre><code>defaultdict(list,
            {'Canadian': ['Georgie Porgie'],
             'Chinese': ['Dumplings R Us'],
             'Malaysian': ['Queen St. Cafe'],
             'Mexican': ['Mexican Grill'],
             'Pub Food': ['Georgie Porgie', 'Deep Fried Everything'],
             'Thai': ['Queen St. Cafe']})
</code></pre>
</div>
<span class="comment-copy">@Baduker: No, this is not duplicate of that.</span>
<span class="comment-copy"><code>list(map(lambda x: list(map(lambda y: d[y.strip()].append(x[0].strip()), x[1].split(','))), zip(names, cuisines)))</code> ughh</span>
<span class="comment-copy">Thanks. I am not pro. I only understand normal functions and for loops. I am learning map, reduce, lambdas.</span>
<span class="comment-copy">it's horrible don't use it. I worked on it for 10 minutes and didn't want to just throw it away</span>
<span class="comment-copy">Thanks @Rahul. This matches what i wanted.</span>
