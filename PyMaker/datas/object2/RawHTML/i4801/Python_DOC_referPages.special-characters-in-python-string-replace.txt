<div class="post-text" itemprop="text">
<p>I have a string in <code>python</code> I want to replace any special characters in that string.</p>
<p>I have done like below    </p>
<pre><code>col_name = 'AN*_Gen_**Air_&amp;Outlet_$Temp'

reps = (('_&amp;', ' '), ('*_', '('), ('_*', ')'), ('#_', '{'), ('_#', '}'), ('_##', ';'), ('_$', '.'),
        ('_$$', ','), ('_**', '='))

original_cols = reduce(lambda a, kv: a.replace(*kv), reps, col_name)
</code></pre>
<p>Output:</p>
<pre><code>'AN(Gen)*Air Outlet.Temp'
</code></pre>
<p>Expected output:</p>
<pre><code>'AN(Gen=Air Outlet.Temp'
</code></pre>
<p>Here I see that in the string <code>_**</code> is being first replaced by <code>)*</code> instead of <code>=</code> as <code>_*</code> in <code>reps</code> is <code>)</code></p>
<p>What should I do to get the correct string?</p>
</div>
<div class="post-text" itemprop="text">
<p>Put <code>('_**', '=')</code> before <code>('*_', '(')</code> as more characters match should be higher preference.</p>
<pre><code>reps = (('_**', '='), ('_&amp;', ' '), ('*_', '('), ('_*', ')'), ('#_', '{'), ('_#', '}'), ('_##', ';'), ('_$', '.'),
        ('_$$', ','))
</code></pre>
<p>Output</p>
<pre><code>'AN(Gen=Air Outlet.Temp'
</code></pre>
</div>
<span class="comment-copy">Put <code>_**</code> before <code>_*</code>?</span>
<span class="comment-copy">and similarly for <code>_#</code> and <code>_$</code></span>
<span class="comment-copy">@internet_user Your solution works for me but Is there a way I can avoid <code>Put _** before _*</code></span>
<span class="comment-copy">You can also use regex to make it one-pass. In current solution the string is scanned many times.</span>
<span class="comment-copy">What output do you expect when there are different possibilities? Why is  <code>=</code> more correct than <code>)*</code> in your case? What should happen with <code>_#_</code>, <code>#_#</code>, <code>#_*_#</code>, <code>_##_</code>, and why?</span>
<span class="comment-copy">Your solution works for me but Is there a way I can avoid  it.  I want to do this without worrying about the placement of the reps</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re.sub</a> is helpful too</span>
