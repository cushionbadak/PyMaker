<div class="post-text" itemprop="text">
<p>is there a regex to find a letter beween two numbers in a string by using Python ?</p>
<p><strong>For instance,</strong> given a string like this one "<strong>AAPL1809A170</strong>" I would like to extract <strong>A</strong> only...again, given "<strong>XOM1809C123</strong>" I would like to extract C only...</p>
<p>To solve my problem I just tried this regex: "\d{1}[A-Z]{1}\d{1}" but it extract 9A1 or 9C1 given examples strings here above.</p>
<p>Thank you for replying back if possible</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a positive lookahead and positive lookbehind:</p>
<pre><code>import re
strings = ["AAPL1809A170", "XOM1809C123"]
final_results = [re.findall('(?&lt;=\d)[A-Z]{1}(?=\d)', s)[0] for s in strings]
</code></pre>
<p>Output:</p>
<pre><code>['A', 'C']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a capture group to tell the regex engine exactly what you want it to extract from the string - it'll be returned as a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">Match Object</a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.search('\d([A-Z])\d', 'XOM1809C123')
&lt;_sre.SRE_Match object at 0x7f6e597b54e0&gt;
&gt;&gt;&gt; re.search('\d([A-Z])\d', 'XOM1809C123').group(0)
'9C1'
&gt;&gt;&gt; re.search('\d([A-Z])\d', 'XOM1809C123').group(1)
'C'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex <code>(.*\d)([A-Z])(\d.*)</code> - This will give you exact ONE Alphabet between numbers.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.search('(.*\d)([A-Z])(\d.*)', 'XOM1809C123').group(2)
'C'
&gt;&gt;&gt; re.search('(.*\d)([A-Z])(\d.*)', 'AAPL1809A170').group(2)
'A'
</code></pre>
<p>I find <a href="http://rubular.com/" rel="nofollow noreferrer">http://rubular.com/</a> very handy to test regex.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use groups to extract what you want from the match:</p>
<pre><code>str = 'AAPL1809A170'
match = re.search(r"\d{1}([A-Z])\d{1}", str)
print(match.group(1))
</code></pre>
<p>The group is whatever you put between parenthesis <code>()</code>, e.g., <code>[A-Z]</code>, and then you print the group. Since there's only one group specified, <code>([A-Z])</code>, use <code>print(match.group(1))</code> to print the matched letter. In the case above, this will return <code>A</code>.</p>
</div>
<span class="comment-copy">You should be able to use a capture group to extract the letter you need.</span>
<span class="comment-copy">Hey man thanks ! this regex (?&lt;=\d)[A-Z]{1}(?=\d) solved my issue...!</span>
<span class="comment-copy">@AndreaFerrante glad to help!</span>
<span class="comment-copy"><code>{1}</code> is an effectively meaningless quantifier.</span>
<span class="comment-copy">@CAustin why ?!</span>
<span class="comment-copy">@AndreaFerrante Because it's the same as simply not writing it. <code>[A-Z]{1}</code> matches the same input as <code>[A-Z]</code>.</span>
<span class="comment-copy">Thank you a lot for replying.</span>
<span class="comment-copy">Thank you dude !</span>
<span class="comment-copy">Many thanks man !</span>
