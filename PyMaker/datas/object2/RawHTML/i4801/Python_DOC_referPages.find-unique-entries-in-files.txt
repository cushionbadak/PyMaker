<div class="post-text" itemprop="text">
<p>guess you have a solution concerning the following issue:</p>
<p>I want to compare two lists for common entries (on the basis of column 10) and write common entries to one file and unique entries for the first list into another file. The code I wrote is:</p>
<pre><code>INFILE1 = open ("c:\\python\\test\\58962.filtered.csv", "r")
INFILE2 = open ("c:\\python\\test\\83887.filtered.csv", "r")
OUTFILE1 = open ("c:\\python\\test\\58962_vs_83887.common.csv", "w")
OUTFILE2 = open ("c:\\python\\test\\58962_vs_83887.unique.csv", "w")
for line in INFILE1:
    line = line.rstrip().split(",")
    if line[11] in INFILE2:
        OUTFILE1.write(line)
    else:
        OUTFILE2.write(line)    
INFILE1.close()
INFILE2.close()
OUTFILE1.close()
OUTFILE2.close()
</code></pre>
<p>The following error appears:</p>
<blockquote>
<pre><code>      8         OUTFILE1.write(line)
      9     else:
---&gt; 10         OUTFILE2.write(line)
     11 INFILE1.close()
TypeError: write() argument must be str, not list
</code></pre>
</blockquote>
<p>Does somebody know about help for this?</p>
<p>Best</p>
</div>
<div class="post-text" itemprop="text">
<p>This line</p>
<pre><code>line = line.rstrip().split(",")
</code></pre>
<p>replaces the <code>line</code> you read from a file by it's splitted <code>list</code>. You then try to write the splitted list to your file - thats not how the write method works and it tells you <em>exactly</em> that. </p>
<p>Change it to :</p>
<pre><code>for line in INFILE1:
    lineList = line.rstrip().split(",")  # dont overwrite line, use lineList
    if lineList[11] in INFILE2:          # used lineList
        OUTFILE1.write(line)                 # corrected indentation
    else:
        OUTFILE2.write(line) 
</code></pre>
<p>You could have easily found your error yourself, just printing out the line before and after splitting or just befrore writing. </p>
<p>Please read <a href="https://ericlippert.com/2014/03/05/how-to-debug-small-programs/" rel="nofollow noreferrer">How to debug small programs (#1)</a> and follow it - its easier to find and fix bugs yourself then posting questions here.</p>
<hr/>
<p>You have some other problem at hand, though: </p>
<p>Files are stream based, they start with a position of 0 in the file. The position is advanced if you access parts of the file. When at the end, you wont get anything by using INFILE2.read() or other methods. </p>
<p>So if you want to repeatadly check if some lines column of <em>file1</em> is somewhere in <em>file2</em> you need to read <em>file2</em> into a list (or other datastructure) so your repeated checks work. In other words, this:</p>
<pre><code>if lineList[11] in INFILE2: 
</code></pre>
<p>might work once, then the file is consumed and it will return false all the time.</p>
<p>You also might want to change from:</p>
<pre><code>f = open(...., ...)
# do something with f
f.close()
</code></pre>
<p>to</p>
<pre><code>with open(name,"r") as f:
    # do something with f, no close needed, closed when leaving block
</code></pre>
<p>as it is safer, will close the file even if exceptions happen.</p>
<p>To solve that try this (untested) code:</p>
<pre><code>with open ("c:\\python\\test\\83887.filtered.csv", "r") as file2:
    infile2 = file2.readlines() # read in all lines as list

with open ("c:\\python\\test\\58962.filtered.csv", "r") as INFILE1:
    # next 2 lines are 1 line, \ at end signifies line continues
    with open ("c:\\python\\test\\58962_vs_83887.common.csv", "w") as OUTFILE1, \ 
    with open ("c:\\python\\test\\58962_vs_83887.unique.csv", "w") as OUTFILE2:
        for line in INFILE1:
            lineList = line.rstrip().split(",")
            if any(lineList[11] in x for x in infile2):  # check the list of lines if 
                                                     # any contains line[11]
                OUTFILE1.write(line)
            else:
                OUTFILE2.write(line)    
    # all files are autoclosed here
</code></pre>
<p>Links to read:</p>
<ul>
<li><a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer">the-with-statement</a></li>
<li><a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">any() and other built-ins</a> </li>
</ul>
</div>
<span class="comment-copy">Your code indentation is off and you missed to add the more general tag <code>python</code> to adress all pythonians out there. The error clearly states what is wrong - you supply a list to a method that wants a string. <code>line[11]</code> is the 12th element of the list - you write something about column 10 further up.</span>
