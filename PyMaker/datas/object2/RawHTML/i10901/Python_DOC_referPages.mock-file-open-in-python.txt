<div class="post-text" itemprop="text">
<p>I'm trying to mock file open, and all of the examples show that I need to </p>
<pre><code>@patch('open', create=True) 
</code></pre>
<p>but I keep getting </p>
<pre><code>Need a valid target to patch. You supplied: 'open'
</code></pre>
<p>I know patch needs the <strong>full dotted path of <code>open</code></strong>, but I have no idea what it is. As a matter of fact, I'm not even sure that's the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to include a module name; if you are testing in a script, the name of the module is <code>__main__</code>:</p>
<pre><code>@patch('__main__.open')
</code></pre>
<p>otherwise use the name of the module that contains the code you are testing:</p>
<pre><code>@patch('module_under_test.open')
</code></pre>
<p>so that any code that uses the <code>open()</code> built-in will find the patched global instead.</p>
<p>Note that the <code>mock</code> module comes with a <a href="https://docs.python.org/3/library/unittest.mock.html#mock-open" rel="noreferrer"><code>mock_open()</code> utility</a> that'll let you build a suitable <code>open()</code> call with file data:</p>
<pre><code>@patch('__main__.open', mock_open(read_data='foo\nbar\nbaz\n'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 you should use:</p>
<pre><code>@mock.patch("builtins.open", create=True)
</code></pre>
</div>
<span class="comment-copy">1. From what you've posted, we cannot tell you what the path should be, or if that's the problem. Give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. 2. You know there's <a href="https://docs.python.org/3/library/unittest.mock.html#mock-open" rel="nofollow noreferrer"><code>mock_open</code></a> specifically for this?</span>
<span class="comment-copy">A question further: Could such a mock (with specified return_value) be used as a context manager (within a <code>with</code> statement)?</span>
<span class="comment-copy">@0xc0de: yes, the documenation I link to includes examples of <code>open()</code> being used with a <code>with</code> statement and being patched with <code>mock_open()</code>.</span>
<span class="comment-copy">Yes, I saw it later, after asking here. Thanks.</span>
