<div class="post-text" itemprop="text">
<p>If you inspect the signature of Python's built-in <code>sorted()</code> function like this:</p>
<pre><code>import inspect
print(inspect.signature(sorted))
</code></pre>
<p>The signature is: <code>(iterable, key=None, reverse=False)</code>.</p>
<p>Based on my understanding of positional and optional arguments acquired <a href="https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments" rel="nofollow">here</a>, it would seem like you could provide an <code>iterable</code> argument and then a <code>key</code> argument without needing a keyword <code>key=</code> for the <code>key</code> argument.  But you always need to specify <code>key=</code> when passing a <code>key</code> argument.  Why is that?</p>
<p>I understand that if you wanted to specify <code>reverse=True</code>, but without any <code>key</code> argument, you'd need a keyword for that, but I don't understand why you'd need to specify <code>key=</code> when you're providing a <code>key</code>.  </p>
</div>
<div class="post-text" itemprop="text">
<p>This is <a href="https://bugs.python.org/issue26729" rel="nofollow">Python issue 26729</a>, an error in <code>sorted.__text_signature__</code>, which is missing the <code>/</code> and <code>*</code> required to indicate that <code>iterable</code> is positional-only and <code>key</code> and <code>reverse</code> are keyword-only. The patch is in patch review, assigned to Raymond Hettinger. Once the patched version is released, the signature should display as</p>
<pre><code>(iterable, /, *, key=None, reverse=False)
</code></pre>
</div>
<span class="comment-copy">Thanks, that thread addresses a lot of my confusion.</span>
<span class="comment-copy">Actually, now I'm more confused.  Why not have the function work the way the current signature says?  What's the point of making the function work with keyword-only arguments?</span>
<span class="comment-copy">@user123123123: <code>sorted</code> and <code>list.sort</code> used to take a <code>cmp</code> argument. When that was removed, making <code>key</code> and <code>reverse</code> keyword-only helped the transition by giving clearer errors for code still trying to use <code>cmp</code>. Also, it makes future changes to the interface easier, and you don't have to remember what order the arguments come in.</span>
