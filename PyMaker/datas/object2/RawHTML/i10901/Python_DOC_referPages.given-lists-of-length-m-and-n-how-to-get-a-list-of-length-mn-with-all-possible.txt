<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/533905/get-the-cartesian-product-of-a-series-of-lists">Get the cartesian product of a series of lists?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>Suppose we have two lists <code>a</code> and <code>b</code>:</p>
<pre><code>a = [1, 2]
b = [3, 4]
</code></pre>
<p>Is there a quick operation that will return the list of tuples <code>[(1,3), (1,4), (2,3), (2,4)]</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>A list comprehension does it:</p>
<pre><code>[(i,j) for i in a for j in b]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; a = [1, 2]
&gt;&gt;&gt; b = [3, 4]
&gt;&gt;&gt; [(i,j)  for i in a for j in b]
[(1, 3), (1, 4), (2, 3), (2, 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product</code></a>:</p>
<pre><code>list(itertools.product(a, b))
</code></pre>
<p>This is useful if you have several lists, or a variable number of lists.</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; a = [1, 2]
&gt;&gt;&gt; b = [3, 4]
&gt;&gt;&gt; c = [5, 6]
&gt;&gt;&gt; list(itertools.product(a, b, c))
[(1, 3, 5), (1, 3, 6), (1, 4, 5), (1, 4, 6), (2, 3, 5), (2, 3, 6), (2, 4, 5), (2, 4, 6)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The function <a href="https://docs.python.org/2.7/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product()</code></a> will do the trick:</p>
<pre><code>In [41]: a, b = [1, 2], [3, 4]

In [42]: from itertools import product

In [43]: list(product(a, b))
Out[43]: [(1, 3), (1, 4), (2, 3), (2, 4)]
</code></pre>
<p>It is important to point out that you need to invoke the built-in function <code>list()</code> to convert the iterator returned by <code>product</code> into a list.</p>
<p>As a side note, if your goal is that of computing the product of a list with itself, you may find it handy to use the optional <code>repeat</code> keyword argument:</p>
<pre><code>In [46]: list(product(a, repeat=3))
Out[46]: 
[(1, 1, 1),
 (1, 1, 2),
 (1, 2, 1),
 (1, 2, 2),
 (2, 1, 1),
 (2, 1, 2),
 (2, 2, 1),
 (2, 2, 2)]
</code></pre>
</div>
<span class="comment-copy">look up itertools.product</span>
