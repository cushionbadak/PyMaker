<div class="post-text" itemprop="text">
<p>My problem is that I've got this array:</p>
<pre><code>np.array([0.0, 0.0, -1.2, -1.2, -3.4, -3.4, -4.5, -4.5])
</code></pre>
<p>and I want to convert the elements to array like this:</p>
<pre><code>np.array([[0.0], [0.0], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
</code></pre>
<p>So is there a loop or a numpy function that I could use to do this task?</p>
</div>
<div class="post-text" itemprop="text">
<p>Or simply:</p>
<pre><code>arr[:,None]

# array([[ 0. ],
#        [ 0. ],
#        [-1.2],
#        [-1.2],
#        [-3.4],
#        [-3.4],
#        [-4.5],
#        [-4.5]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; a1 = np.array([0.0, 0.0, -1.2, -1.2, -3.4, -3.4, -4.5, -4.5])
&gt;&gt;&gt; np.array([[x] for x in a1])
array([[ 0. ],
       [ 0. ],
       [-1.2],
       [-1.2],
       [-3.4],
       [-3.4],
       [-4.5],
       [-4.5]])
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Isn't this just a <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html#numpy.reshape"><code>reshape</code></a> operation from row to column vector?</p>
<pre><code>In [1]: import numpy as np
In [2]: x = np.array([0.0, 0.0, -1.2, -1.2, -3.4, -3.4, -4.5, -4.5])
In [3]: np.reshape(x, (-1,1))
Out[3]: 
array([[ 0. ],
       [ 0. ],
       [-1.2],
       [-1.2],
       [-3.4],
       [-3.4],
       [-4.5],
       [-4.5]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several ways to achieve this with <a class="post-tag" href="/questions/tagged/numpy" rel="tag" title="show questions tagged 'numpy'">numpy</a> functions:</p>
<ul>
<li><p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.expand_dims.html#numpy-expand-dims" rel="nofollow noreferrer"><code>np.expand_dims</code></a> - <strong>the explicit option</strong></p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; a = np.array([0.0, 0.0, -1.2, -1.2, -3.4, -3.4, -4.5, -4.5])

&gt;&gt;&gt; np.expand_dims(a, axis=1)
array([[ 0. ], [ 0. ], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
</code></pre></li>
<li><p>slicing with <a href="https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#numpy.newaxis" rel="nofollow noreferrer"><code>np.newaxis</code></a> (which is an alias for <code>None</code>)</p>
<pre><code>&gt;&gt;&gt; np.array(a)[:, np.newaxis]
array([[ 0. ], [ 0. ], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
&gt;&gt;&gt; np.array(a)[:, None]
array([[ 0. ], [ 0. ], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
</code></pre></li>
</ul>
<p>Instead of adding an <code>axis</code> manually you can also use some default ways to create a multidimensional array and then swap the axis, for example with <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.transpose.html#numpy-transpose" rel="nofollow noreferrer"><code>np.transpose</code></a> but you could also use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.swapaxes.html#numpy-swapaxes" rel="nofollow noreferrer"><code>np.swapaxes</code></a> or <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html#numpy-reshape" rel="nofollow noreferrer"><code>np.reshape</code></a>:</p>
<ul>
<li><p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array" rel="nofollow noreferrer"><code>np.array</code></a> with ndmin=2</p>
<pre><code>&gt;&gt;&gt; np.array([0.0, 0.0, -1.2, -1.2, -3.4, -3.4, -4.5, -4.5], ndmin=2).T
array([[ 0. ], [ 0. ], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
</code></pre></li>
<li><p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array" rel="nofollow noreferrer"><code>np.atleast_2d</code></a> and </p>
<pre><code>&gt;&gt;&gt; np.atleast_2d(a).swapaxes(1, 0)
array([[ 0. ], [ 0. ], [-1.2], [-1.2], [-3.4], [-3.4], [-4.5], [-4.5]])
</code></pre></li>
</ul>
</div>
<span class="comment-copy">Same as <code>a1[:,np.newaxis]</code>. <code>None</code> in a <code>np</code> slice is synonymous to <code>np.newaxis</code></span>
<span class="comment-copy">Can you please explain how this works.</span>
<span class="comment-copy">@utkarsh13 Honestly, I can't explain this better than the doc <a href="http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#numpy.newaxis" rel="nofollow noreferrer">docs.scipy.org/doc/numpy/reference/â€¦</a>. Basically, None means creating a newaxis here.</span>
<span class="comment-copy">Does it work on Python 3 only?</span>
<span class="comment-copy">@OrB Works on Python 2 as well.</span>
