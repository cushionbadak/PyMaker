<div class="post-text" itemprop="text">
<p>I want, what I enter in the entry field should be automatic rounded to n decimal points.</p>
<pre><code>import Tkinter as Tk

root = Tk.Tk()

class InterfaceApp():
    def __init__(self,parent):
        self.parent = parent
        root.title("P")
        self.initialize()


    def initialize(self):
        frPic = Tk.Frame(bg='', colormap='new')
        frPic.grid(row=0)
        a= Tk.DoubleVar()
        self.entry = Tk.Entry(frPic, textvariable=a)
        a.set(round(self.entry.get(), 2))

        self.entry.grid(row=0)
if __name__ == '__main__':
    app = InterfaceApp(root)
    root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do not get the expected result because when you run <code>a.set(round(self.entry, 2))</code> inside <code>initialize()</code> , the value of <code>self.entry.get()</code> is always <code>0</code> (the default value after creation)</p>
<p>You rather need to attach a <a href="http://effbot.org/zone/tkinter-callbacks.htm" rel="nofollow">callback</a>  to a button widget on which, after pressing, the behavior you are looking for will be executed:</p>
<pre><code>import Tkinter as Tk

root = Tk.Tk()

class InterfaceApp():

    def __init__(self,parent):
        self.parent = parent
        root.title("P")
        self.initialize()

    def initialize(self):
        frPic = Tk.Frame(bg='', colormap='new')
        frPic.grid(row=0, column=0)
        self.a = Tk.DoubleVar()
        self.entry = Tk.Entry(frPic, textvariable=self.a)
        self.entry.insert(Tk.INSERT,0)
        self.entry.grid(row=0, column=0)
        # Add a button widget with a callback
        self.button = Tk.Button(frPic, text='Press', command=self.round_n_decimal)
        self.button.grid(row=1, column=0)
    # Callback    
    def round_n_decimal(self):      
       self.a.set(round(float(self.entry.get()), 2))

if __name__ == '__main__':
    app = InterfaceApp(root)
    root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I suppose what you want is not to round the float value itself, you want to show a float value with a precision of n decimal points. Try this:</p>
<pre><code>&gt;&gt;&gt; n = 2
&gt;&gt;&gt; '{:.{}f}'.format( 3.1415926535, n )
'3.14'
&gt;&gt;&gt; n = 3
&gt;&gt;&gt; '{:.{}f}'.format( 3.1415926535, n )
'3.142'
</code></pre>
<p>Note: in your code you try to round <code>self.entry</code> .i. e. you try to round an instance of type <code>Tk.Entry</code>. You should use <code>self.entry.get()</code> which supplies you with a string.</p>
<p>If you are not familiar with this kind of string formatting I use look <a href="https://docs.python.org/3/library/string.html" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">Isn't your <code>a</code> an <code>IntVar</code>, e.g. integers...?</span>
<span class="comment-copy">How does that work?  When does the rounding happen?  As you type?  When focus leaves?  etc.</span>
<span class="comment-copy">it's <code>DoubleVar()</code>, i have fixed it.</span>
<span class="comment-copy">could I make that without button..also live ?</span>
<span class="comment-copy">@MirzaGrbic Could you please explain what do you mean by <i>a live button</i>?</span>
<span class="comment-copy">when you enter a value, that should be automatically rounded before you press a button. Thanks a lot of Billal!</span>
<span class="comment-copy">No, I want the round value itself (what you enter in the entry field, it's should be rounded.). I fixed it and it's still dont't work. <code>a= Tk.DoubleVar()</code> <code>self.entry = Tk.Entry(frPic, textvariable=a)</code> <code>a.set(round(self.entry.get(), 2))</code></span>
<span class="comment-copy">What do you mean by "it don't work"? Please post the output/result</span>
