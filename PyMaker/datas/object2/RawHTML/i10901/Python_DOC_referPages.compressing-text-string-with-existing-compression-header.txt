<div class="post-text" itemprop="text">
<p>I wish to compress a given string with a pre-existing header retrieved from an already compressed file in an archive (a local file header). </p>
<p>I have attempted to look at <a href="http://www.zlib.net/" rel="nofollow">zlib</a> and while their compression/decompressing works nicely I can not find an option to set the compression header. </p>
<p>I want to avoid  decompressing a file, add a string to the file, and then re-compress the file. Instead I simply want to "append" a given string to a given compressed file.</p>
<p>I have made attempts using the existing <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow">Zipfile module</a> in Python, here I have tried to modify the Zipfile module to deal with a pre-set header, however from this I can conclude that the Zipfile module relies too heavily on the zlib library for this to be possible. </p>
<p>While my attempts have been in Python I am happy using any programming language.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want to do is more complicated than you think. However the code has already been written. Look at <a href="https://github.com/madler/zlib/blob/master/examples/gzlog.h" rel="nofollow">gzlog.h</a> and <a href="https://github.com/madler/zlib/blob/master/examples/gzlog.c" rel="nofollow">gzlog.c</a> in the <a href="https://github.com/madler/zlib/blob/master/examples" rel="nofollow">examples directory</a> of the <a href="http://zlib.net/" rel="nofollow">zlib distribution</a>.</p>
</div>
<span class="comment-copy"><i>"I have made attempts"</i> - where are they, and what's the problem with them.</span>
<span class="comment-copy">Edited to reflect above comment.</span>
<span class="comment-copy">What is the actual problem you're trying to solve?</span>
<span class="comment-copy">Basically pattern matching in a compressed file for a given search word.  Does that answer your question?</span>
<span class="comment-copy">Appending a string to a compressed file has no relation to "pattern matching in a compressed file for a given search word".</span>
<span class="comment-copy">It seems that this is used to write to log files and not to existing files such as a compressed document? Am I misunderstanding something here?   An example of use would be greatly appreciated.</span>
<span class="comment-copy">"I want to avoid decompressing a file, add a string to the file, and then re-compress the file. Instead I simply want to "append" a given string to a given compressed file." That is <i>exactly</i> what gzlog does, given that you used gzlog to make the compressed file. It avoids having to decompress or recompress. If you want to append to an unprepared gzip file, then you need to decompress the whole thing first, but you don't need to recompress it, like gzappend.c does (also found in examples in zlib).</span>
<span class="comment-copy">Please correct me if I am wrong, but from this I gather that it should be impossible to "append" to a text file that has been compressed previously only using that given file's compression header, unless the file given was compressed using gzlog? That being without decompressing and recompressing.</span>
<span class="comment-copy">You need to read my last comment again. It <i>is</i> possible to append to a deflate-compressed stream with decompressing but <i>without</i> recompressing. You keep talking about a "compression header" which doesn't have any meaning here. The entire unprepared, compressed file must be processed to be able to append to it.</span>
