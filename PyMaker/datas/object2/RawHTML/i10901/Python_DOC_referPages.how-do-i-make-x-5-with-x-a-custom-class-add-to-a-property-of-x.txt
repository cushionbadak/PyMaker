<div class="post-text" itemprop="text">
<p>I have a class like this:</p>
<pre><code>class C(object):
    a = 5
    def __iadd__(self, other):
        self.a += other
</code></pre>
<p>I would like to be able to do something like:</p>
<pre><code>b = C()
b += 7
</code></pre>
<p>And have b the same, but with 7 added to b.a. However, if I actually run this, it turns b into a NoneType object. I assume this is because C.__iadd__ does not return anything.</p>
<p>Do I have to make C.__iadd__ return a copy of self with self.a modified? Is there a way to implement this kind of addition without copying the entire object and returning that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You forgot to return <code>self</code> from the <code>__iadd__</code> method:</p>
<pre><code>def __iadd__(self, other):
    self.a += other
    return self
</code></pre>
<p>From the <a href="https://docs.python.org/2/reference/datamodel.html#object.__iadd__"><code>object.__iadd__()</code> documentation</a>:</p>
<blockquote>
<p>These methods should attempt to do the operation in-place (modifying self) and return the result (which could be, but does not have to be, <em>self</em>). </p>
</blockquote>
<p>Without an explicit return statement, a function returns <code>None</code> as a default, so <code>b += 7</code> produced <code>None</code> which is the result of the assignment.</p>
</div>
<span class="comment-copy">"The <code>__iadd__()</code> special method is called with the value of the increment, and should return a new instance with an appropriately modified value" <a href="https://docs.python.org/3/whatsnew/2.0.html#augmented-assignment" rel="nofollow noreferrer">docs.python.org/3/whatsnew/2.0.html#augmented-assignment</a></span>
