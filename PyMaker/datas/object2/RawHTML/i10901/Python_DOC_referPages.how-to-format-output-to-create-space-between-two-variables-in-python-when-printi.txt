<div class="post-text" itemprop="text">
<p>I'm trying to create an output that would look something like this:</p>
<p><a href="https://i.stack.imgur.com/Ndu4b.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Ndu4b.png"/></a> </p>
<p>As can be seeing in here, the left column spaces are lined up to the left and the right column is lined up from the right side. But for my output, I am getting left column lined up to the right side and right column lined up to the left. I want to do vice versa. Here is the output of what I am actually getting out of my second code where I have tried to use the format function: </p>
<p><a href="https://i.stack.imgur.com/rTNuT.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/rTNuT.png"/></a> </p>
<p>It works but I am just trying to learn adjusting and formatting spacing when the string output moves. 
 It would also be nice to know how to do it if I were to have more than 3 variables.</p>
<pre><code>print("Kilograms    Pounds")

for kg in range(0, 199): 
    kg += 1 
    lb = 2.2   
    lb = kg * lb   
    lb = round(lb, 2)
    print(format(kg, "4d"), end = '')

    for i in range(1, 2):
        print("        ", lb, end = '')
    print()
</code></pre>
<p>Here is my initial code where I attempted to do that but the spacing is screwed up but the left column in here lies perfectly fine, but the spacing can be seeing on the right side after the output increases to double digits.</p>
<pre><code>print("Kilograms    Pounds")

for kg in range(0, 199):
    kg += 1 
    lb = 2.2  
    lb = kg * lb   
    print(kg, '          ', round(lb, 2)) 
</code></pre>
<p>Output:</p>
<p><a href="https://i.stack.imgur.com/I08rW.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/I08rW.png"/></a></p>
<p>I'm new to python so still a complete noob. I would really appreciate the explanation of how to deal with format or weather there is alternatives to it.
Thank you!
Code:</p>
</div>
<div class="post-text" itemprop="text">
<p>Give this a try:</p>
<pre><code>between = ' '*4
print('Kilograms{between}Pounds'.format(between=between))

for kg in range(199):
    kg += 1 
    lb = 2.2   
    lb = kg * lb   
    lb = round(lb, 2)

    print('{kg:&lt;{kg_width}}{between}{lb:&gt;{lb_width}}'.format(
        kg=kg, kg_width=len('Kilograms'),
        between=between,
        lb=lb, lb_width=len('Pounds')))

# Output:
# Kilograms    Pounds
# 1               2.2
# 2               4.4
# 3               6.6
# 4               8.8
# 5              11.0
# 6              13.2
# 7              15.4
# 8              17.6
# 9              19.8
# 10             22.0
# 11             24.2
# ...
</code></pre>
<p>The big gnarly print is just because I tried to parameterize everything. Given the fixed column names and spacing, you could just do this:</p>
<pre><code>print('{kg:&lt;9}    {lb:&gt;6}'.format(kg=kg, lb=lb))
</code></pre>
<p><strong>EDIT</strong></p>
<p>Closer to your original code:</p>
<pre><code>print("Kilograms    Pounds")

for kg in range(0, 199):
    kg += 1 
    lb = 2.2   
    lb = kg * lb   
    lb = round(lb, 2)
    print(format(kg, "&lt;4d"), end = '')
    print("        ", end = '')
    print(format(lb, "&gt;7.1f"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check out <a href="https://docs.python.org/3.1/library/string.html#string.Formatter.vformat" rel="nofollow">The Docs</a> Section 7.1.3.1</p>
<p>You can pass <code>format()</code> a <code>width</code> as int, which should take care of your whitespace problem.</p>
<p>From the Documentation Example:</p>
<pre><code>&gt;&gt;&gt; for num in range(5,12):
 for base in 'dXob':
     print('{0:{width}{base}}'.format(num, base=base, width=width),end=' ')
</code></pre>
<p>produces: </p>
<pre><code> 5     5     5   101
 6     6     6   110
 7     7     7   111
 8     8    10  1000
 9     9    11  1001
10     A    12  1010
11     B    13  1011
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this one.</p>
<pre><code>print("Kilograms    Pounds")

for kg in range(0, 100):
    kg += 1 
    lb = 2.2  
    lb = kg * lb 
    space_filler = " " * 10  
    print("%3d %s %.2f" % (kg, space_filler, lb))
</code></pre>
<p>The value 3 can also be made dynamic by use <code>format</code> which is more flexible than <code>%</code> construct.</p>
</div>
<span class="comment-copy">Have you tried reading the documentation (start with <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#format</a>)? You can certainly right-align values using <code>format</code>, and do the rounding with it too.</span>
<span class="comment-copy">Thanks! That's an interesting way, learning so many different ways. So if I were to do it my way or that is not the right way in my code? I'm wondering where have I made a mistake</span>
<span class="comment-copy">Which version of your code? They have different issues. :-)</span>
<span class="comment-copy">the first one where I am using format within a string. I don't think I understand the format to full instinct</span>
<span class="comment-copy">See my edit just a second ago. At the bottom I've included a more minimal change from your code.</span>
<span class="comment-copy">(You can also drop the <code>d</code> and <code>.1f</code> if you want, since your numbers are already formatted the way you want.)</span>
<span class="comment-copy">I used very similar way in java but that was a long time ago. Could you please explain how the % is working here? would be handy knowing the format as well. I've read over documentation but when its my code it is so much easier to understand. Thank you!</span>
<span class="comment-copy"><code>%</code> is almost like C format specifier.  You have a number of % format specifier (eg. %3d above) and then give tuple with that many values to be interpeted, with <code>%</code> sigin in between. In above code, for example, kg will be formatted as "%3d", space_filler as %s, lb as %.2f.</span>
<span class="comment-copy">FYI, this code doesn't produce the desired output.</span>
<span class="comment-copy">@smarx thanks, I just need an example to understand how it works</span>
<span class="comment-copy">@DurgaDatta I see so when I increase the %3d to %4d now it will be aligned for the numbers that go to 1000.</span>
