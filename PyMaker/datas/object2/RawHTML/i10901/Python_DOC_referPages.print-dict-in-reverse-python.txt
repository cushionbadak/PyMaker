<div class="post-text" itemprop="text">
<p>So I have a dict of numbers and strings, like so:</p>
<pre><code>d = {"Hi": None, 2110: 1110, 1110: None}
</code></pre>
<p>And I want to print it right to left. Like this:</p>
<pre><code>{1110: None, 2110: 1110, "Hi": None}
</code></pre>
<p>How would I go about doing this? If possible I would like to avoid sorting as the dict is already in order, just reverse order, and it seems to me it would take less time to just print it out in reverse than sort it. If I'm wrong, please correct me and sorting is then fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the code below to achieve this:</p>
<pre><code>d = {"Hi": None, 2110: 1110, 1110: None}
print str(d)
print '{' + ','.join(str(d)[1:-1].split(',')[::-1]) + '}'
</code></pre>
<p>But actually dictionaries don't have any order at all and I think you maybe want to consider to use ordered dictionaries instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>You would have to use <a href="https://docs.python.org/2/library/collections.html?highlight=ordereddict#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a> from the <a href="https://docs.python.org/3/library/collections.html" rel="nofollow"><code>collections</code></a> module, and you're starting dictionary would have to be a list of tuples already ordered using <code>OrderedDict</code>, so you can preserve the order of the initial dictionary. This is needed as <code>OrderedDict</code> remembers the order of the keys that are inserted.</p>
<pre><code>from collections import OrderedDict

d = OrderedDict([("Hi", None), (2110, 1110), (1110, None)])

result = OrderedDict(list(d.items())[::-1])
print(result)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>OrderedDict([(1110, None), (2110, 1110), ('Hi', None)]) # remains this order always
</code></pre>
</div>
<span class="comment-copy">dicts are not generally assumed to be in any particular order.</span>
<span class="comment-copy">First of all dictionary doesn't have any order. If you worry about order please use <code>orderdict</code></span>
<span class="comment-copy">The first question is: Why do you want to do this?</span>
<span class="comment-copy">"as the dict is already in order" No, it is not, or just by coincidence. You should probably switch to using <code>OrderedDict</code></span>
<span class="comment-copy">yeah I suggest using a different data structure for this, maybe a list of tuples will be better?</span>
<span class="comment-copy">This still does not preserve the order. The OP will have to use <code>OrderedDict</code></span>
<span class="comment-copy">I added a note in my answer.</span>
