<div class="post-text" itemprop="text">
<p>I have several strings where I need to remove all characters until the final alphabetical letter. I'm trying to keep the final numerical tag and store it into a variable. If there is no numerical tag at the end (like in the case of <code>Serial</code> and <code>Management</code>), then the variable should be empty. The strings that need editing look like so:</p>
<pre><code>Ethernet5/3                   # Store '5/3'
TengigabitEthernet3/1/1       # Store '3/1/1'
100 GigabitEthernet2/6/1      # Store '2/6/1'
Management                    # Store ''
Serial                        # Store ''
</code></pre>
<p>I can't strip everything until the first number because there are some strings that begin with numbers, like <code>100 GigabitEthernet2/6/1</code>.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>To follow Lawrence's comment, you can use a combination of reversing a string, <a href="https://docs.python.org/2.7/library/itertools.html#itertools.takewhile" rel="nofollow"><code>itertools.takewhile()</code></a> and <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow"><code>str.join()</code></a>:</p>
<pre><code>from itertools import takewhile

l = [
    "Ethernet5/3",
    "TengigabitEthernet3/1/1",
    "100 GigabitEthernet2/6/1",
    "Management",
    "Serial"
]

for item in l:
    print("".join(takewhile(lambda c: not c.isalpha(), item[::-1]))[::-1])
</code></pre>
<p>Prints:</p>
<pre><code>5/3
3/1/1
2/6/1
&lt;empty string&gt;
&lt;empty string&gt;
</code></pre>
<hr/>
<p>Another option would be to use regular expressions and capture in a <a href="https://docs.python.org/3/howto/regex.html#grouping" rel="nofollow">group</a> digits and slashes at the end of a string (<code>$</code> in the expression):</p>
<pre><code>import re

l = [
    "Ethernet5/3",
    "TengigabitEthernet3/1/1",
    "100 GigabitEthernet2/6/1",
    "Management",
    "Serial"
]

pattern = re.compile(r"([0-9/]+)$")
for item in l:
    match = pattern.search(item)
    print(match.group(1) if match else "No match")
</code></pre>
<p>Prints:</p>
<pre><code>5/3
3/1/1
2/6/1
No match
No match
</code></pre>
</div>
<span class="comment-copy">Reverse the string, find the index of the first alpha character, and slice off from there.</span>
