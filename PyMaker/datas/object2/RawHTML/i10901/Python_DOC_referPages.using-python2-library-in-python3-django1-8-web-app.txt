<div class="post-text" itemprop="text">
<p>I'm trying to use <a href="https://pypi.python.org/pypi/SecureSubmit" rel="nofollow">this SDK/API</a>, but it's built for Python2 and I'm working in a Django 1.8.8 / Python 3.5.1 site. I'm sure I could trigger a Python2 script from Python3-Django, but is it safe to pass secure, web-submitted information to it? Is there a better way to handle this altogether? </p>
<p>I can't find anything about SecureSubmit in StackExchange, even though it seems to be huge, and I'm not finding much on using mixed Python (Python2 + Python3) libraries at all...</p>
<p>Heartland has been around awhile and their SecureSubmit service has APIs for many languages (PHP, .Net, Java, Ruby, Python and nodeJS). If it's better to integrate one of those with my Django site rather than launch a Python2 script, let me know! (I've contacted Heartland, too, but who knows when I'll get a response...)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>I think it's great you grasped the nettle, I am sure all who use your work will appreciate the ability to use python 3 with this. I am happy to have inspired you to try. </p>
</div>
<span class="comment-copy">I would contact the developer and ask if they are porting to python 3 before asking on here.</span>
<span class="comment-copy">looking at the source code it appears that it may be a simple task to port for python 3, there is nothing complicated to it.</span>
<span class="comment-copy">That's great to hear! The developer did respond and they said they have no plans to port to Python 3. I'm working on porting it myself with <a href="https://pypi.python.org/pypi/future" rel="nofollow noreferrer">future</a> but I've run into a serious snag: the package in question has a custom enums.py module that conflicts with the one built into Python 3.Tyring to override it and hoping that doesn't break anything...</span>
<span class="comment-copy">are you talking about:   heartland-python/securesubmit/infrastructure/enums.py  This looks like an implementation of enums using :  '<a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">docs.python.org/3/library/enum.html</a>'  .... what is the error you are getting??  I would just try running it in python 3 then go from there.</span>
<span class="comment-copy">Yeah. Python 3 won't let you subclass an enum if it has members (which is what they did) so I just recreated a few of their subclassed enums to be new enums. Seems to be working...</span>
