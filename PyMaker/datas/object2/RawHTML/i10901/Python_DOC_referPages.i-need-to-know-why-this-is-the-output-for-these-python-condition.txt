<div class="post-text" itemprop="text">
<pre><code>numbers=[i**3 for i in range (10) if i**3%3==1]
print(numbers)
#gets 1,64,343
</code></pre>
<p>Why is <code>1, 64, 343</code> the answer?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is equivalent to the code:</p>
<pre><code>for i in range(10):
    if (i*i*i) % 3 == 1:
         numbers.append(i*i*i)
print (numbers)
</code></pre>
<p>You are checking if the remainder obtained when the cube of a number from 1 to 10 is divided by 3 is equal to 1. If it is, you are adding it to a list and printing it.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>The meaning of <code>**</code>
  ex: <code>2**3</code>= <code>2*2*2</code> <code>#this means 2 to the power 3 = 8</code></li>
<li>The meaning of <code>%</code>
  ex: <code>5%2</code>= <code>1</code> <code>#the sign means module, that means the remaining value after divide 5 by 2, it is one.</code></li>
</ol>
<p>in your way, the correct path to write the for each is </p>
<pre><code>for i in range(0,10):
    value = i**3
    if(value%3 == 1):
        print("the value is {0}".format(value))
</code></pre>
<p>so the result is :</p>
<pre><code>the value is 1
the value is 64
the value is 343
</code></pre>
<h1>bit explanation inside the for loop</h1>
<ul>
<li>first get the <code>i = 0</code>, at this point <code>value = 0*0*0 = 0</code>, then <code>value%3=0</code></li>
<li>then get the <code>i=1</code>, at this point <code>value = 1*1*1 = 1</code> ,the 'value%3' means <code>1%3 = 1</code>, so the answer i <code>1</code></li>
</ul>
<p>.... like this see about other conditions also. hope this will help to you.</p>
</div>
<div class="post-text" itemprop="text">
<p>first <code>i</code> is in <code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code><br/>
then if <code>(i*i*i) rem 3</code> is equal to <code>1</code><br/>
it selects <code>(i*i*i)</code><br/>
and for [1,4,7]:  <code>(1*1*1)%3==1</code>, <code>(4*4*4)%3==1</code> and <code>(7*7*7)%3==1</code>:<br/>
1*1*1=1 and 1/3=0 :remainder=1<br/>
4*4*4=64 and 64/3=21 :remainder=1<br/>
7*7*7=343 and 343/3=114 :remainder=1 </p>
<p>so the output is:<br/>
[1*1*1, 4*4*4, 7*7*7] which is  [1, 64, 343]</p>
<p>your code:  </p>
<pre><code>numbers=[i**3 for i in range (10) if i**3%3==1]
print(numbers)
</code></pre>
<p>and this code:  </p>
<pre><code>numbers=[]
for i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]:
    if (i*i*i) % 3 == 1:
         numbers.append(i*i*i)
print(numbers)
</code></pre>
<p>output this:  </p>
<pre><code>[1, 64, 343]
</code></pre>
</div>
<span class="comment-copy">Do you know what <code>**</code> does?  Do you know what <code>%</code> does?  If not, have you looked at <a href="https://docs.python.org/3/reference/expressions.html" rel="nofollow noreferrer">the documentation</a>?</span>
<span class="comment-copy">**3 means you have to multiply same number 3 times like 3x3x3</span>
<span class="comment-copy">Because 1, 64, and 343 are the only cubes of the numbers from 0 to 9 that are also one greater than a multiple of three.</span>
<span class="comment-copy">Brenbarn... here's what I was doing. I cant figure out why the answer for the last one is 1,64 &amp; 343(evens=[i<b>2 for i in range(10) if i</b>2 % 2 == 0] print(evens) #so this results 0,4,16,36,64 odds=[i<b>3 for i in range(10) if i</b>3%3==0] print(odds) #so this one gets 0,27,216,729 #0x0x0=0 #3x3x3=27 #6x6x6=216 #9x9x9=729 numbers=[i<b>3 for i in range (10) if i</b>3%3==1] print(numbers) #gets 1,64,343)</span>
<span class="comment-copy">He has appended i<i>i</i>i to the list whereas I appended i to the list. I have changed that now.</span>
<span class="comment-copy">I think this is the answer im looking for anuradh. Thx.  Ill go back to your exzmple in a bit</span>
<span class="comment-copy">ok,and you are welcome</span>
