<div class="post-text" itemprop="text">
<p>Here's a frequency table implemented as a list.</p>
<pre><code>table = [1,3,2]
</code></pre>
<p>The desired output is a list of individual values.</p>
<pre><code>unspooled =  [0, 1, 1, 1, 2, 2]
</code></pre>
<p>The following syntax will get the job done.</p>
<pre><code>sum((freq*[score] for score, freq in enumerate(table)), []) 
</code></pre>
<p>As an exercise to test my understanding, however, I'd like to know if there's a way to accomplish this with pure list comprehension. Thank you.</p>
<p>(Or secondarily, if there's a way to do it that is more expressive than what I have that isn't pure list comprehension, I'm open to that, too.)</p>
<p>PS Apparently, my syntax yields <a href="https://stackoverflow.com/a/33277438/1493867">terrible performance</a>. </p>
<p><strong>Update.</strong> Timings of all the suggested solutions.</p>
<pre><code>In [9]: table
Out[9]: range(0, 1000)

In [10]: %timeit [i for i, x in enumerate(table) for _ in range(x)]
10 loops, best of 3: 27.1 ms per loop

In [11]: %timeit [ind for ind in range(len(table)) for val in range(table[ind])]
10 loops, best of 3: 27 ms per loop

In [12]: %timeit reduce( lambda x,y:x+y, [ [i]*frq for i,frq in enumerate(table)] )
1 loop, best of 3: 1.11 s per loop

In [13]: %timeit list(itertools.chain(freq*[score] for score, freq in enumerate(table))
100 loops, best of 3: 3.84 ms per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe this would work:</p>
<pre><code>unspooled = [ind for ind in range(len(table)) for val in range(table[ind])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> to return the index and item from <code>table</code>:</p>
<pre><code>&gt;&gt;&gt; table = [1,3,2]
&gt;&gt;&gt; [i for i, x in enumerate(table) for _ in range(x)]
[0, 1, 1, 1, 2, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>table = [1,3,2]
res = reduce( lambda x,y:x+y, [ [i]*frq for i,frq in enumerate(table)] )

output:
[0, 1, 1, 1, 2, 2]
</code></pre>
</div>
<span class="comment-copy">Wow, that's a lot less expressive than what I have. It does work, but frankly, I have no idea why. When and how does <code>val</code> get used?</span>
<span class="comment-copy">I see now. <code>val</code> doesn't get used. It's just a throwaway to get going the loop that operates on <code>ind</code>.</span>
