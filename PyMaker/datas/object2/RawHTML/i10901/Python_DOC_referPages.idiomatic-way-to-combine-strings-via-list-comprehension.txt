<div class="post-text" itemprop="text">
<p>Can you suggest a better way to combine strings from lists?</p>
<p>Here is an example:</p>
<pre><code>[ 'prefix-' + a + '-' + b for a in [ '1', '2' ]  for b in [ 'a', 'b' ] ]
</code></pre>
<p>which results in: </p>
<pre><code>['prefix-1-a', 'prefix-1-b', 'prefix-2-a', 'prefix-2-b']
</code></pre>
<hr/>
<p>The actual context is working with files and paths:</p>
<pre><code>dirs = [ 'dir1', 'dir2' ]
files = [ 'file1', 'file2' ]
[ 'home/' + d + '/' + f for d in dirs  for f in files ]
</code></pre>
<p>resulting in:</p>
<pre><code>['home/dir1/file1', 'home/dir1/file2', 'home/dir2/file1', 'home/dir2/file2']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For working specifically with file paths, use <code>os.path.join</code>:</p>
<pre><code>dirs = ['dir1', 'dir2']
files = ['file1', 'file2']
[os.path.join('home', d, f) for d in dirs for f in files]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension, <code>os.path.join</code> function and <code>itertools</code> module:</p>
<pre><code>[os.path.join('home', a, b) for a, b in itertools.product(ddirs, files)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about with <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join</code></a>.</p>
<pre><code>['-'.join(('prefix', a, b)) for a, b in zip('12', 'ab')]
</code></pre>
<p>As others mentioned, you should use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a> for filepaths.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use cartesian product for lists.</p>
<pre><code>import itertools
for element in itertools.product(["1", "2"], ["a", "b"]):
    print element

# Gives
('1', 'a')
('1', 'b')
('2', 'a')
('2', 'b')
</code></pre>
<p>Then join them however you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>First one: <code>['prefix-%s-%s' % (a,b) for a in [1, 2] for b in 'ab']</code></p>
<p>The second one could be the same way but you may want to use <code>os.path.join</code> to normalize for Windows:</p>
<pre><code>[os.path.join('home', dir_, file_) for dir_ in ['dir1', 'dir2'] for file_ in ['file1', 'file2']]
</code></pre>
</div>
<span class="comment-copy">this may be a question better suited to <a href="http://codereview.stackexchange.com/">Code Review</a></span>
<span class="comment-copy">This seems like the most pythonic way to go about it (out of the answers below).</span>
<span class="comment-copy">@frist That was my mistake. I corrected it in the original post.</span>
