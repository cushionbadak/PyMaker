<div class="post-text" itemprop="text">
<p>Im pretty new to python and one of the harder things I'm having to learn is how to properly use self. My understanding is in the methods we should use self. However I have the following class with a method and Im getting a type error saying saying I'm missing the positional argument self.</p>
<pre><code>class example():

    list1 = ['a','b','c','d']
    list2 = ['1','2','3','4']

    def func1(self, list1, list2):

        i = 1
        for item in list1:
            print(list1)
            print(list2[i])
            i +=1

    func1(list1=list1, list2=list2)

#error seen below

&lt;ipython-input-2-d17d317756a0&gt; in &lt;module&gt;()
----&gt; 1 class example():
      2 
      3     list1 = ['a','b','c','d']
      4     list2 = ['1','2','3','4']
      5 
&lt;ipython-input-2-d17d317756a0&gt; in example()
     11             print(list2[i])
     12 
---&gt; 13     func1(list1=list1, list2=list2)

TypeError: func1() missing 1 required positional argument: 'self'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The function you defined as <code>func1</code> is a <a href="https://docs.python.org/3/tutorial/classes.html#method-objects" rel="nofollow">method</a>. Which needs to be used on an instance of that class. Such as,</p>
<pre><code>abc = example() # We create the instance

abc.func1() # This is how you call a method.
</code></pre>
<p><code>self</code> represents <code>abc</code> here.</p>
<p>If you are going to call it in the class, you need to use self itself, which will replace with the instance name if called outside.</p>
<pre><code>Class example():
    def func1(self):
        #stuff
    def func2(self):
        self.func1() # This is the usage.
</code></pre>
<p><strong>Edit:</strong> In this case, you can use static methods.</p>
<pre><code>class example():

    def func1():
        pass

    func1()
</code></pre>
<p>However you should realize that this is not much better than just creating a global function. So I suggest you to found a way of using the first ways I recommended.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to call <code>func1</code> outside of the class:</p>
<pre><code>class Example():
    def func1(self, list1, list2):
        i = 0
        for item in list1:
            print(item)
            print(list2[i])
            i +=1

list1 = ['a','b','c','d']
list2 = ['1','2','3','4']
a = Example()
a.func1(list1,list2)
</code></pre>
<p>If you're trying to have the functionality of <code>func1</code> within the class:</p>
<pre><code>class Example():
    list1 = ['a','b','c','d']
    list2 = ['1','2','3','4']

    def func1(self):
        i = 0
        for item in self.list1:
            print(item)
            print(self.list2[i])
            i +=1

a = Example()
a.func1()
</code></pre>
<p>An alternatively if your lists are the same length, your func could be:</p>
<pre><code>def func1(self, list1, list2):
    for i in range(len(list1)):
        print(list1[i])
        print(list2[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not expert in python but please try below it may help you,</p>
<pre><code>class example():

    list1 = ['a','b','c','d']
    list2 = ['1','2','3','4']

    def func1(list1, list2):

        i = 1
        for item in list1:
            print(list1)
            print(list2[i])
            i +=1

    func1(list1=list1, list2=list2)
</code></pre>
</div>
<span class="comment-copy">Not the cause of the error, but note that <code>list1</code> and <code>list2</code> are class attributes rather than an instance attributes, and will be shared among all <code>example</code> instances.</span>
<span class="comment-copy">The way I am trying to do this is call the method from within the class. You gave one example where you call func one like this 'self.func1(list1, list2)' however when I do that I still get the error saying self is not defined.</span>
<span class="comment-copy">This example works for me, could you post your new code as an edit.</span>
<span class="comment-copy">The one thing I see here that I am trying to avoid is you have a func2 calling func1. What I am trying to do is just call func1.</span>
<span class="comment-copy">@bytes1234  Let me point out that the thing you are doing are not very usual and it is much better if you found another way of doing it. But for this spesific situation I will suggest another thing that is rarely used. Please check the edit.</span>
<span class="comment-copy">Both your examples don't work.</span>
<span class="comment-copy">Missed the instance haha @DeepSpace</span>
