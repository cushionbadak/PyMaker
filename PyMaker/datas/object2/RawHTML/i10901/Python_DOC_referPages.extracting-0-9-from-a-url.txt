<div class="post-text" itemprop="text">
<p>I've put together the following regular expression to extract image ID's from a URL:</p>
<pre><code>''' Parse the post details from the full story page '''
def parsePostFromPermalink(session, permalink):

    r = session.get('https://m.facebook.com{0}'.format(permalink))
    dom = pq(r.content)

    # Parse the images, extract the ID's, and construct large image URL
    images = []
    for img in dom('a img[src*="jpg"]').items():
        if img.attr('src'):
            m = re.match(r'/([0-9_]+)n\.jpg/', img.attr('src'))
            images.append(m)
    return images
</code></pre>
<p>URL example:</p>
<pre><code>https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-0/cp0/e15/q65/s200x200/13645330_275977022775421_8826465145232985957_n.jpg?efg=eyJpIjoiYiJ9&amp;oh=ed5b4593ed9c8b6cfe683f9c6932acc7&amp;oe=57EE1224
</code></pre>
<p>I want this bit:</p>
<pre><code>13645330_275977022775421_8826465145232985957
</code></pre>
<p>I've tested it on regex101 and it works: <a href="https://regex101.com/r/eS6eS7/2" rel="nofollow">https://regex101.com/r/eS6eS7/2</a></p>
<p><code>img.attr('src')</code> contains the correct URL and is not empty. I tested this. When I try to use <code>m.group(0)</code> I get an exception that <code>group</code> is not a function. <code>m</code> is <code>None</code>.</p>
<p>Am I doing something wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Two problems:</p>
<ul>
<li>those enclosing <code>/.../</code> are not a part of <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">Python regex syntax</a></li>
<li>you should use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow"><code>search</code></a> instead of <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow"><code>match</code></a></li>
</ul>
<p>Working example:</p>
<pre><code>&gt;&gt;&gt; url = "https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-0/cp0/e15/q65/s200x200/13645330_275977022775421_8826465145232985957_n.jpg?efg=eyJpIjoiYiJ9&amp;oh=ed5b4593ed9c8b6cfe683f9c6932acc7&amp;oe=57EE1224"
&gt;&gt;&gt; re.search(r'([0-9_]+)n\.jpg', url).group(0)
'13645330_275977022775421_8826465145232985957_n.jpg'
</code></pre>
<p>If you want just the number part, use this (<code>group(1)</code>, and note the additional <code>_</code>):</p>
<pre><code>&gt;&gt;&gt; re.search(r'([0-9_]+)_n\.jpg', url).group(1)
'13645330_275977022775421_8826465145232985957'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is the correct python code from Regex101. (There's a code generator on the left). Notice the lack of slashes on the outside of the regex... </p>
<pre><code>import re
p = re.compile(r'([\d_]+)n\.jpg')
test_str = u"https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-0/cp0/e15/q65/c3.0.103.105/p110x80/13700209_937389626383181_6033441713767984695_n.jpg?efg=eyJpIjoiYiJ9&amp;oh=a0b90ec153211eaf08a6b7c4cc42fb3b&amp;oe=581E2EB8"

re.findall(p, test_str)
</code></pre>
<p>I'm not sure how you got <code>m</code> as None, but you might need to compile the pattern and use that to match first.    Otherwise, try to fix the expression first </p>
</div>
<span class="comment-copy">Yes. Your regular expression contain <code>/</code> characters that do not belong there. They're just separators in some other languages such as javascript. Use <code>r'([0-9_]+)n\.jpg'</code></span>
<span class="comment-copy">Ah and that <code>match</code> is true as well.</span>
<span class="comment-copy">@AnttiHaapala Ah. I wish all languages used the same syntax. Works now.</span>
<span class="comment-copy">@love2node they use for regular expressions, but <code>/</code> does <b>not</b> belong to the regular expression. In Python, POSIX C, Java, the regular expressions are given in a string. In some other languages there are special syntactic sugar for regular expression literals.</span>
<span class="comment-copy">Care to explain why search over match? Thanks</span>
