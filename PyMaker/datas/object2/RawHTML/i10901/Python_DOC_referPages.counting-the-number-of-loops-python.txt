<div class="post-text" itemprop="text">
<p>I am learning python, and one of the exercises is to make a simple multiplication game, that carries on every time you answer correctly. Although I have made the game work, I would like to be able to count the number of tries so that when I've answered correctly a few times the loop/function should end. My problem is that at the end of the code, the function is called again, the number of tries goes back to what I originally set it, obviously. How could I go about this, so that I can count each loop, and end at a specified number of tries?:</p>
<pre><code>def multiplication_game():
    num1 = random.randrange(1,12)
    num2 = random.randrange(1,12)

    answer = num1 * num2

    print('how much is %d times %d?' %(num1,num2))

    attempt = int(input(": "))

    while attempt != answer:
        print("not correct")

        attempt = int(input("try again: "))
    if attempt == answer:
        print("Correct!")

multiplication_game()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could surround your call of <code>multiplication_game()</code> at the end with a loop. For example:</p>
<pre><code>for i in range(5):
    multiplication_game()
</code></pre>
<p>would allow you to play the game 5 times before the program ends. If you want to actually count which round you're on,  you could create a variable to keep track, and increment that variable each time the game ends (you would put this inside the function definition). </p>
</div>
<div class="post-text" itemprop="text">
<p>I would use a <code>for</code> loop and <code>break</code> out of it:</p>
<pre><code>attempt = int(input(": "))

for count in range(3):
    if attempt == answer:
        print("correct")
        break

    print("not correct")
    attempt = int(input("try again: "))
else:
    print("you did not guess the number")
</code></pre>
<p>Here's some documentation on <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow"><code>else</code> clauses for <code>for</code> loops</a> if you want more details on how it works.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code> NB_MAX = 10 #Your max try
 def multiplication_game():
     num1 = random.randrange(1,12)
     num2 = random.randrange(1,12)

     answer = num1 * num2
     i = 0
     while i &lt; NB_MAX:
          print('how much is %d times %d?' %(num1,num2))

          attempt = int(input(": "))

          while attempt != answer:
               print("not correct")

          attempt = int(input("try again: "))
          if attempt == answer:
               print("Correct!")
          i += 1

 multiplication_game()
</code></pre>
</div>
<span class="comment-copy">can you format your code.  The indentation isn't right</span>
<span class="comment-copy">It's not clear from your code whether you are calling it recursively or not - can you format your code</span>
<span class="comment-copy">Three possibilities: Add a global counter variable; pass the current turn number as a parameter to the function, or (preferred) change the recursion to another loop.</span>
<span class="comment-copy">The last <code>if attempt == answer:</code> isn't needed - whenever you leave the <code>while</code> loop, this condition is guaranteed to be fulfilled.</span>
<span class="comment-copy">@PeterWang What makes you sure the edit doesn't hide the problem which occurred?</span>
