<div class="post-text" itemprop="text">
<p>When reading the <a href="https://github.com/tensorflow/tensorflow/blob/e008ecf12607f691952a9bfe8971f406b30bc56e/tensorflow/models/image/cifar10/cifar10_train.py#L129" rel="nofollow">cifar10 example</a>, I can see the following code segment, which is said to follow the google  commandline standard. But in specific, what does this code segment do? I did not find the API document to cover something like <code>tf.app.flags.DEFINE_string</code></p>
<pre><code>FLAGS = tf.app.flags.FLAGS

tf.app.flags.DEFINE_string('train_dir', '/tmp/cifar10_train',
                       """Directory where to write event logs """
                       """and checkpoint.""")
tf.app.flags.DEFINE_integer('max_steps', 1000000,
                        """Number of batches to run.""")
tf.app.flags.DEFINE_boolean('log_device_placement', False,
                        """Whether to log device placement.""")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My experience with TensorFlow is that looking at the source code is often more useful than Ctrl+F in the API doc. I keep PyCharm open with the TensorFlow project, and can easily search for either example of how to do something (e.g., custom reader).</p>
<p>In this particular case, you want to look at what's going on in <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/platform/flags.py" rel="nofollow">tensorflow/python/platform/flags.py</a>. It's really just a thin wrapper around argparse.ArgumentParser(). In particular, all of the DEFINE_* end up adding arguments to a _global_parser, for example, through this helper function:</p>
<pre class="lang-py prettyprint-override"><code>def _define_helper(flag_name, default_value, docstring, flagtype):
    """Registers 'flag_name' with 'default_value' and 'docstring'."""
    _global_parser.add_argument("--" + flag_name,
                                default=default_value,
                                help=docstring,
                                type=flagtype)
</code></pre>
<p>So their flags API is mostly the same as what you find for <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">ArgumentParser</a>.</p>
</div>
