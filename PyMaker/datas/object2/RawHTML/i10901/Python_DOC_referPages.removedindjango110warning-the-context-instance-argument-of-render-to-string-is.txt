<div class="post-text" itemprop="text">
<p>For one of the apps, I'm overloading the "delete selected objects" method in a Django 1.9.x project which uses the Admin panel. For that, I have a code similar to this:</p>
<pre><code>from django.contrib.admin import helpers
from django.http import HttpResponseRedirect
from django.shortcuts import render_to_response
from django.template import RequestContext

class MAdmin(admin.ModelAdmin):
    actions = ['delete_selected']

    def delete_selected(self, request, queryset):
        if 'apply' in request.POST:
            # User has confirmed deletion of items
            return HttpResponseRedirect(request.get_full_path())
        else:
            # User must confirm if they wish to delete selected items
            return render_to_response('admin/confirm_delete.html', { 'queryset': queryset, 'action_checkbox_name': helpers.ACTION_CHECKBOX_NAME }, context_instance=RequestContext(request))
</code></pre>
<p>The last line produces the following warning in the console:</p>
<blockquote>
<p>.../virtualenv/lib/python2.7/site-packages/django/shortcuts.py:45: RemovedInDjango110Warning: The context_instance argument of render_to_string is deprecated. using=using)</p>
</blockquote>
<p>I've tried to find some resource that explains how to "update" syntax according to version 1.10.x but I've been unable to.</p>
<p>A similar question has already been asked <a href="https://stackoverflow.com/questions/36488024/the-context-instance-argument-of-render-to-string-is-deprecated">here</a> but it's slightly different since the OP is calling <code>render_to_string</code> explicitly and I'm not.</p>
<p>How should I update the call above to make the warning disappear?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, the "right" way to fix it would be to update it. According to the <a href="https://docs.djangoproject.com/en/1.9/topics/http/shortcuts/#id1" rel="nofollow">documentation, they recommend using <code>render()</code></a></p>
<blockquote>
<p>Deprecated since version 1.8:
  The context_instance argument is deprecated. Use the render() function instead which always makes RequestContext available.</p>
</blockquote>
<p>If you do want to suppress this warning (highly unrecommended), you can use the <code>SILENCE_SYSTEM_CHECK</code> setting. </p>
<p><a href="https://docs.djangoproject.com/en/1.8/ref/checks/#core-system-checks" rel="nofollow">More on the system check can be found here</a></p>
</div>
<span class="comment-copy">Note that this is a Python warning, not a Django system check. You need to use the <a href="https://docs.python.org/3/library/warnings.html#the-warnings-filter" rel="nofollow noreferrer">warnings module</a> to add a filter and ignore the warning.</span>
<span class="comment-copy">Unless really unavoidable, I prefer not silencing alerts, since that is basically postposing the problem. I'd give it a try and get back.</span>
<span class="comment-copy">Correct, suppressing these errors make maintaining the upgrade cycle a nightmare.</span>
<span class="comment-copy">It worked. Simply passing the <code>request</code> to the <code>render()</code> call and removing the <code>context_instance</code> parameter did the trick. Thanks.</span>
