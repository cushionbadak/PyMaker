<div class="post-text" itemprop="text">
<p>I have a class A() include some method:</p>
<pre><code>class A(self):
    def __init__ (self, x1, x2):
        self.x1 = x1
        self.x2 = x2
    def plus(self):
        X3 = self.x1 + self.x2
        return X3
</code></pre>
<p>How can I make X3 become an attribute which I can access by "self.X3" to use it for other methods
I am a newbie, thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>One way would be to simply make <code>X3</code> an attribute by prepending <code>self.</code>.  For example:</p>
<pre><code>class A(self):
    def __init__ (self, x1, x2):
        self.x1 = x1
        self.x2 = x2
    def plus(self):
        self.X3 = self.x1 + self.x2
        return self.X3
</code></pre>
<p>I'm not sure it's the <em>best</em> approach, but it's hard to tell based on your question.</p>
</div>
<div class="post-text" itemprop="text">
<p>simply Change <code>X3 =</code> to: <code>self.X3=</code></p>
<pre><code>class A(self):
    def __init__ (self, x1, x2):
        self.x1 = x1
        self.x2 = x2
    def plus(self):
        self.X3 = self.x1 + self.x2
        return self.X3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class A:
    def __init__ (self, x1, x2):
        self.x1 = x1
        self.x2 = x2
    def plus(self):
        self.X3 = self.x1 + self.x2
        return self.X3

if __name__ == '__main__':
    a = A(1, 2)
    print a.plus()
</code></pre>
<p>Give this a try.  I got some issues compiling when I tried adding (self) after class A.</p>
</div>
<div class="post-text" itemprop="text">
<p>For this example, using a <a href="https://docs.python.org/3.5/library/functions.html#property" rel="nofollow">property</a> is probably most appropriate. You can read more about the descriptor protocol (for which properties are syntactic sugar) <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow">here</a>.</p>
<pre><code>class A:
    def __init__ (self, x1, x2):
        self.x1 = x1
        self.x2 = x2
    @property
    def X3(self):
        return self.x1 + self.x2
</code></pre>
</div>
<span class="comment-copy">+1 for highlighting that it might not be the <i>best</i> approach. That is like a dozen man hours wasted when debugging for the magical <code>self.X3</code> being set from <i>somewhere</i>.</span>
<span class="comment-copy">Think properties are probably the best way for this particular example.</span>
<span class="comment-copy">@Alex, I think you're probably right, but then it's not clear what the <code>plus()</code> method should do, and it may be called from code we aren't shown.</span>
