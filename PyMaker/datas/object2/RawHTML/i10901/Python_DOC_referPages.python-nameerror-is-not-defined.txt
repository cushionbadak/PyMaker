<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question is an exact duplicate of:</p>
<ul>
<li>
<a dir="ltr" href="/questions/38404825/python-is-not-defined">Python: ' ' is not defined</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Okay, so I want the end result of my program to look like this...</p>
<p><a href="https://i.stack.imgur.com/tryyh.png" rel="nofollow noreferrer"><img alt="Desired output" src="https://i.stack.imgur.com/tryyh.png"/></a></p>
<p>Now, I don't need those exact numbers because this will be putting a robot in a simulation, so the results should vary. </p>
<p>Here is my code:</p>
<pre><code># This program makes the robot calculate the average amount of light in a simulated room

from myro import *
init("simulator")

from random import*

def pressC():
    """ Wait for "c" to be entered from the keyboard in the Python shell """
    entry = " "
    while(entry != "c"):
        entry = raw_input("Press c to continue. ")
    print("Thank you. ")
    print

def randomPosition():
    """ This gets the robot to drive to a random position """
    result = randint(1, 2)
    if(result == 1):
        forward(random(), random())
    if(result == 2):
        backward(random(), random())

def scan():
    """ This allows the robot to rotate and print the numbers that each light sensors obtains """
    leftLightSeries = [0,0,0,0,0,0]
    centerLightSeries = [0,0,0,0,0,0]
    rightLightSeries = [0,0,0,0,0,0]
    for index in range(1,6):
        leftLight = getLight("left")
        leftLightSeries[index] = leftLightSeries[index] + leftLight
        centerLight = getLight("center")
        centerLightSeries[index] = centerLightSeries[index] + centerLight
        rightLight = getLight("right")
        rightLightSeries[index] = rightLightSeries[index] + rightLight
        turnRight(.5,2.739)
    return leftLightSeries, centerLightSeries, rightLightSeries

def printResults():
    """ This function prints the results of the dice roll simulation."""
    print " Average Light Levels "
    print "    L      C      R "
    print "========================="
    for index in range(1, 6):
        print str(index) + " " + str(leftLightSeries[index]) + " " + str(centerLightSeries[index]) + " " + str(rightLightSeries[index])

def main():
    senses()
    pressC()
    randomPosition()
    leftLightSeries, centerLightSeries, rightLightSeries = scan() 
    printResults()

main()
</code></pre>
<p>And, I am getting this error when I run my code:</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/Owner-pc/Desktop/Computer Programming 1/Mod05/Code/Created/AverageLight.py", line 58, in -toplevel-
    main()
  File "C:/Users/Owner-pc/Desktop/Computer Programming 1/Mod05/Code/Created/AverageLight.py", line 56, in main
    printResults()
  File "C:/Users/Owner-pc/Desktop/Computer Programming 1/Mod05/Code/Created/AverageLight.py", line 49, in printResults
    print str(index) + " " + str(leftLightSeries[index]) + " " + str(centerLightSeries[index]) + " " + str(rightLightSeries[index])
NameError: global name 'leftLightSeries' is not defined
</code></pre>
<p>So, I am confused as to why my return statements are not working, and why I am not getting the list that I want. Please help.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>leftLightSeries</code>, <code>centerLightSeries</code>, and <code>rightLightSeries</code> are not defined in the scope of <code>printResults</code> which is why you are getting that error.</p>
<p>Update your <code>printResults</code> function to take in those arguments:</p>
<p><code>def printResults(leftLightSeries, centerLightSeries, rightLightSeries):</code></p>
<p>Later, when you call <code>printResults</code>, pass these variables in:</p>
<pre><code>def main():
    ...
    printResults(leftLightSeries, centerLightSeries, rightLightSeries)
</code></pre>
<p>Now the problem here is that, you still don't have those 3 variables defined within the scope of main, they're only defined inside <code>scan</code>. How do you get them out of <code>scan</code>? Just store the return values of <code>scan</code> in variables like so:</p>
<pre><code>def main():
    senses()
    pressC()
    randomPosition()
    leftLightSeries, centerLightSeries, rightLightSeries = scan() 
    printResults(leftLightSeries, centerLightSeries, rightLightSeries)
</code></pre>
<p>You can also directly send the output of <code>scan</code> to <code>printResults</code> without the need for temporary variables: <code>printResults(*scan())</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You defined <strong>leftLightSeries</strong> and <strong>centerLightSeries</strong> in the function <em>scan()</em>. Since they are not defined in the outer scope (which would be the global scope in this case), the function <em>printResults</em> cannot access them.</p>
<p>The Python documentation describes it in the section <a href="https://docs.python.org/3/reference/executionmodel.html#resolution-of-names" rel="nofollow">4.2.2. Resolution of names</a></p>
<blockquote>
<p>A scope defines the visibility of a name within a block. If a local
  variable is defined in a block, its scope includes that block. If the
  definition occurs in a function block, the scope extends to any blocks
  contained within the defining one, unless a contained block introduces
  a different binding for the name.</p>
<p>When a name is used in a code block, it is resolved using the nearest
  enclosing scope. The set of all such scopes visible to a code block is
  called the blockâ€™s environment.</p>
<p>When a name is not found at all, a NameError exception is raised. If
  the current scope is a function scope, and the name refers to a local
  variable that has not yet been bound to a value at the point where the
  name is used, an UnboundLocalError exception is raised.
  UnboundLocalError is a subclass of NameError.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The issue you are having is a <a href="https://docs.python.org/3/reference/executionmodel.html#resolution-of-names" rel="nofollow">scoping</a> issue.</p>
<p><code>leftLightSeries</code> is defined within the scope of the function <code>scan()</code>, which means it can only be accessed from within that function. So it is not available within the scope of the function <code>printResults()</code>.</p>
<p>Another issue with your code is that you have multiple <code>return</code> statements that will never be reached:</p>
<pre><code>return leftLightSeries
return centerLightSeries
return rightLightSeries
</code></pre>
<p>This block of code will return <code>leftLightSeries</code> and then never reach the next two <code>return</code> statements. One option you could consider if wanting to return multiple values would be to return a tuple:</p>
<pre><code>return (leftLightSeries, centerLightSeries, rightLightSeries,)
</code></pre>
<p>Then in <code>printResults()</code> you could grab your series like so:</p>
<pre><code>leftSeries, centerSeries, rightSeries = scan()

for index in range(0,6):
    print str(index) + " " + str(leftSeries[index]) + " " + str(centerSeries[index]) + " " + str(rightSeries[index])
</code></pre>
<p>Also note that <code>range(0,6)</code> is what you want instead of range(1,6). Arrays start at index 0 and <code>range</code> gives you the range from the first argument up to but not including the second argument.</p>
</div>
<span class="comment-copy">You posted this question less than 12 hours after posting the same question <a href="http://stackoverflow.com/questions/38404825/python-is-not-defined">here</a>. SO is a <i>community</i> - please don't treat it like a mechanical turk.</span>
<span class="comment-copy">How would I fix this? Should I assign the three variable to the printResults function?</span>
<span class="comment-copy">Yes, global variables are normally a bad way of bad software design. I think with 'assign' you mean 'pass' and this is the correct approach. Passing the returns  from scan() to the print function could help. Keep in mind that you have to add them to the parameter list of <b>printResults</b> as well.</span>
<span class="comment-copy">I am not sure what you mean. I'm fairly new, I''m currently taking a computer programming course and learning Python. Could you show me how you would do this?</span>
