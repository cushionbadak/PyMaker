<div class="post-text" itemprop="text">
<p>Scripting the Blender, I successfully did <code>bpy.ops.render.render(some_args)</code> but <code>bpy.ops.render['render']</code> fails with BPyOpsSubMod object is not subscriptable. This puzzles me since I expected that, likewise in Javascript, any Python object is a dictionary and I can access object methods either by <code>obj.member</code> or <code>obj['member']</code>. How do I work around the non-subscriptable properties when I want to reference them by name?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not true that every object <em>is</em> a dictionary. But most objects <em>have</em> a dictionary, accessible through the name <a href="https://docs.python.org/3/library/stdtypes.html#object.__dict__" rel="nofollow noreferrer"><code>.__dict__</code></a>.</p>
<p>You can use either</p>
<pre><code>bpy.ops.render.__dict__['render']
</code></pre>
<p>or</p>
<pre><code>getattr(bpy.ops.render, 'render')
</code></pre>
</div>
<span class="comment-copy"><i>Every object has a dictionary</i> is <b>False</b>: <code>[].__dict__</code>? Accessing <code>__dict__</code> may work in OP's case if they have a function</span>
<span class="comment-copy"><code>bpy.ops.render.__dict__</code> fails <code>with AttributeError __dict__</code></span>
<span class="comment-copy">but <code>getattr</code> seems to give what I want.</span>
