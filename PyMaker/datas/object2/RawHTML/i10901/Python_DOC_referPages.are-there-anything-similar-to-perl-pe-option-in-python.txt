<div class="post-text" itemprop="text">
<p><strong>TL;DR I want to know what is an option in Python, which might roughly correspond to the "-pe" option in Perl.</strong></p>
<p>I used to use PERL for some time, but these days, I have been switching to PYTHON for its easiness and simplicity.  When I needed to do simple text processing on the shell prompt, I had used perl -pe option. The following is an example.</p>
<pre><code>grep foo *.txt | perl -pe 's/foo/bar/g'
</code></pre>
<p>To do a similar thing in Python, could someone explain to me how I can do this? </p>
</div>
<div class="post-text" itemprop="text">
<p><code>-pe</code> is a combination of two arguments, <code>-p</code> and <code>-e</code>.  The <code>-e</code> option is roughly equivalent to Python's <code>-c</code> option, which lets you specify code to run on the command line.  There is no Python equivalent of <code>-p</code>, which effectively adds code to run your passed code in a loop that reads from standard input.  To get that, you'll actually have to write the corresponding loop in your code, along with the code that reads from standard input.</p>
</div>
<div class="post-text" itemprop="text">
<p>Perl, although a fully fledged as programming language, was initially thought, and evolved as, a tool for text manipulation.</p>
<p>Python, on th other hand, has always been a general purpose programing language. It can handle text and text flexibility, with enormous flexibility, when compared with, say Java or C++, but it will do so within its general syntax, without exceptions to those rules, including special syntax for regular expressions, that in absence of other directives become a program in themselves.The same goes for opening, reading and writting files, given their names.</p>
<p>So, you can do that with "python -c ..." to run a Python script from the command line - but your command must be a full  program - with beginning, middle and end.</p>
<p>So, for a simple regular expression substitution in several files passed in the stdin, you could try something along:</p>
<pre><code>grep foo *txt| python3 -c "import sys, re, os; [(open(filename + 'new', 'wt').write(re.sub ('foo', 'bar', open(filename).read())), os.rename(filename + "new", filename))for filename in sys.stdin]"
</code></pre>
</div>
<span class="comment-copy">check out <a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow noreferrer">docs.python.org/3/using/cmdline.html</a></span>
<span class="comment-copy">you can also check out text processing utilities in shell like sed and awk: <a href="http://unix.stackexchange.com/tags/text-processing/info">unix.stackexchange.com/tags/text-processing/info</a></span>
<span class="comment-copy">See also <a href="http://stackoverflow.com/questions/7842919/python-equivalent-to-perl-pe" title="python equivalent to perl pe">stackoverflow.com/questions/7842919/â€¦</a></span>
<span class="comment-copy">Though the <a href="https://docs.python.org/2/library/fileinput.html" rel="nofollow noreferrer"><code>fileinput</code></a> module contains much of what you need to create a one-liner or maybe two-liner.</span>
