<div class="post-text" itemprop="text">
<p>I have a <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock" rel="nofollow"><code>unittest.mock.Mock</code></a> instance <code>m</code>. The only thing I know is that it mocks a class with a <code>foo()</code> method. I need to determine whether <code>m.foo.return_value</code> has been set and if not, provide a default value. Is this possible?</p>
<p>In other words, how to implement <code>has_return_value_set()</code> below?</p>
<pre><code>m = unittest.mock.Mock()
# ...
if not has_return_value_set(m.foo):
    m.foo.return_value = MY_RETURN_VALUE
</code></pre>
<p>I have tried checking <code>m.foo.return_value</code> directly, but it is initialized to a new mock upon the first access.</p>
</div>
<div class="post-text" itemprop="text">
<p>As long as you haven't actually accessed <code>mock.return_value</code> yet, you can test if a non-standard return value has been set with:</p>
<pre><code>m.foo._mock_return_value is unittest.mock.DEFAULT
</code></pre>
<p>The moment you use the <code>mock.return_value</code> property, if <code>mock._mock_return_value</code> is set to <code>unittest.mock.DEFAULT</code> still, a new <code>Mock</code> instance is created and stored in <code>mock._mock_return_value</code> for future re-use.</p>
<p>Note that this attribute is an implementation detail, which is why it starts with an underscore. It is not documented and may change in a future release. However, there currently is no other method to check if <code>mock.return_value</code> has been set explicitly.</p>
</div>
