<div class="post-text" itemprop="text">
<p>In Python, I used to get first element of a 2-d list by</p>
<pre><code>a = [[0, 1], [2, 3]]
a[:][0]
# [0, 2]
</code></pre>
<p>Now, the list is sort of complex, the way to get the first elements does not work</p>
<pre><code>a = [['sad', 1], ['dsads', 2]]
a[:][0]
# ['sad', 1]
</code></pre>
<p>I do not know what is the difference here. And how to get the first elements in this simple way, rather than</p>
<pre><code>[e[0] for e in a]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could use in-built <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">zip</a> :</p>
<blockquote>
<p>aggregates elements from each of the iterables</p>
</blockquote>
<pre><code>a = [['sad', 1], ['dsads', 2]]
zip(*a)[0]

#results :
('sad', 'dsads')
</code></pre>
<p>You can convert the final result to list from tuple if necessary.
<code>*</code> is used to flatten the list into its elements - zip accepts iterables as positional arguments. <code>zip</code> is sort of matrix transposition.</p>
<p>As commented, your first solution (<code>a[:][0]</code>) is not correct, it simply takes the first element of the list. Here you need to first transform the list such that each first elements are grouped into separate list, and so on for second, third .. elements. Then take the first element.</p>
<p><strong>Update:</strong></p>
<p>From @Rawing's comment:
If the list is very large, consider using </p>
<pre><code>next(itertools.izip(*a))
</code></pre>
<p>This is the iterator version - this takes the list element only as necessary. In this case, it constructs each elment of the result one at a time, since we need the first element, we use <code>next</code> a single time to get the next (thus, first here) element of the iterator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using numpy :</p>
<pre><code>&gt;&gt;&gt; a = [['sad', 1], ['dsads', 2]]

&gt;&gt;&gt; import numpy

&gt;&gt;&gt; my_array = numpy.array(a)

&gt;&gt;&gt; print my_array[:,0]
['sad' 'dsads']
</code></pre>
</div>
<span class="comment-copy">How you got <code>a[:][0]</code> as <code>[0,2]</code> ?</span>
<span class="comment-copy">That first snippet cannot possibly give you that result.</span>
<span class="comment-copy">"... I used to get first element of a 2-d list by ..." No you didn't.</span>
<span class="comment-copy">What is wrong with list comprehension by the way ? ([e[0] for e in a]). It's very pythonic and easily understandable</span>
<span class="comment-copy">@DanielRoseman It would have been awesome if it did though :)</span>
<span class="comment-copy">If the list is very large, consider using <code>next(itertools.izip(*a))</code> instead.</span>
<span class="comment-copy">@Rawing is right. python-2.7 doesn't use iterators by default so <code>itertools</code> version is better. Also the <code>six</code> module could be used to guarantee compatibility between python2 and python3 iterables preferences.</span>
