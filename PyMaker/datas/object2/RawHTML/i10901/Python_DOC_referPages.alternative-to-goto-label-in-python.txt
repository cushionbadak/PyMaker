<div class="post-text" itemprop="text">
<p>I know I can't use Goto and I know Goto is not the answer. I've read similar questions, but I just can't figure out a way to solve my problem.</p>
<p>So, I'm writing a program, in which you have to guess a number. This is an extract of the part I have problems:</p>
<pre><code>x = random.randint(0,100)    

#I want to put a label here

y = int(raw_input("Guess the number between 1 and 100: "))

if isinstance( y, int ):
    while y != x:
        if y &gt; x:
            y = int(raw_input("Wrong! Try a LOWER number: "))
        else:
            y = int(raw_input("Wrong! Try a HIGHER number "))
else:
    print "Try using a integer number"
    #And Here I want to put a kind of "goto label"`
</code></pre>
<p>What would you do?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are lots of ways to do this, but generally you'll want to use loops, and you may want to explore <code>break</code> and <code>continue</code>. Here's one possible solution:</p>
<pre><code>import random

x = random.randint(1, 100)

prompt = "Guess the number between 1 and 100: "

while True:
    try:
        y = int(raw_input(prompt))
    except ValueError:
        print "Please enter an integer."
        continue

    if y &gt; x:
        prompt = "Wrong! Try a LOWER number: "
    elif y &lt; x:
        prompt = "Wrong! Try a HIGHER number: "
    else:
        print "Correct!"
        break
</code></pre>
<p><code>continue</code> jumps to the next iteration of the loop, and <code>break</code> terminates the loop altogether.</p>
<p>(Also note that I wrapped <code>int(raw_input(...))</code> in a try/except to handle the case where the user didn't enter an integer. In your code, not entering an integer would just result in an exception. I changed the 0 to a 1 in the <code>randint</code> call too, since based on the text you're printing, you intended to pick between 1 and 100, not 0 and 100.)</p>
</div>
<div class="post-text" itemprop="text">
<h2>Python does not support <code>goto</code> or anything equivalent.</h2>
<p>You should think about how you can structure your program using the tools python does offer you. It seems like you need to use a loop to accomplish your desired logic. You should check out the <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow">control flow page</a> for more information. </p>
<pre><code>x = random.randint(0,100)
correct = False
prompt = "Guess the number between 1 and 100: "

while not correct:

  y = int(raw_input(prompt))
  if isinstance(y, int):
    if y == x:
      correct = True
    elif y &gt; x:
      prompt = "Wrong! Try a LOWER number: "
    elif y &lt; x:
      prompt = "Wrong! Try a HIGHER number "
  else:
    print "Try using a integer number"
</code></pre>
<p>In many other cases, you'll want to use a <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow">function</a> to handle the logic you want to use a goto statement for.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use infinite loop, and also explicit break if necessary.</p>
<pre><code>x = random.randint(0,100)

#I want to put a label here
while(True):
    y = int(raw_input("Guess the number between 1 and 100: "))

    if isinstance( y, int ):

    while y != x:
    if y &gt; x:
        y = int(raw_input("Wrong! Try a LOWER number: "))
    else:
        y = int(raw_input("Wrong! Try a HIGHER number "))
    else:
      print "Try using a integer number"

     # can put a max_try limit and break
</code></pre>
</div>
<span class="comment-copy">Change your <code>int(raw_input(</code> to <code>input(</code> if you have Python 2.x. As for the label, what is the rest of your code? Do you want to call a function?</span>
