<div class="post-text" itemprop="text">
<p>I have a process that requires me to identify different machines, and I'm not sure what's the best way to do it.
I do not want to save that ID on a text file or something, but I want to generate it from hardware every time I need it (in case the text with the ID gets deleted or something)</p>
<p>I've checked <a href="https://docs.python.org/3/library/uuid.html" rel="nofollow">UUID</a>, and it seems ok but I'm not sure.
I've taken a look at <strong>uuid.getNode()</strong>, but I have 2 problems with it: <br/></p>
<ol>
<li><p>One part says "If all attempts to obtain the hardware address fail, we choose a random 48-bit number with its eighth bit set to 1 as recommended in RFC 4122", which means that I may get a different unique on some systems for some reason - is there a way to identify which time it failed and generate something else?</p></li>
<li><p>another part says: " “Hardware address” means the MAC address of a network interface, and on a machine with multiple network interfaces the MAC address of any one of them may be returned.", which means if i have 2 different network adapters, each call I may get any one of them? that's not good for me.</p></li>
</ol>
<p>If you have a better way of obtaining a unique ID for a machine, that I can generate each time and won't have to worry about deletion of it or something - I'd be glad to hear it. all of my attempts to find something have failed.
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>dmidecode</code>.</p>
<p><strong>Linux:</strong></p>
<pre><code>import subprocess

def get_id():
    return subprocess.Popen('hal-get-property --udi /org/freedesktop/Hal/devices/computer --key system.hardware.uuid'.split())
</code></pre>
<p><strong>Windows:</strong><br/>
NOTE: Requires <a href="https://sourceforge.net/projects/gnuwin32/files/dmidecode/2.10" rel="nofollow">dmidecode for Windows</a></p>
<pre><code>import subprocess

def get_id():
    return subprocess.Popen('dmidecode.exe -s system-uuid'.split())
</code></pre>
<p><strong>Cross-platform:</strong><br/>
NOTE: Requires <a href="https://sourceforge.net/projects/gnuwin32/files/dmidecode/2.10" rel="nofollow">dmidecode for Windows</a></p>
<pre><code>import subprocess
import os

def get_id():
    if 'nt' in os.name:
        return subprocess.Popen('dmidecode.exe -s system-uuid'.split())
    else:
        return subprocess.Popen('hal-get-property --udi /org/freedesktop/Hal/devices/computer --key system.hardware.uuid'.split())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please note that you can get the same UUID from Windows without installing any additional software with the following command:</p>
<pre><code>C:\&gt; wmic csproduct get uuid
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For windows this seems to get same uuid every time por each device based on the MAC address: </p>
<p>str(uuid.uuid1(uuid.getnode(),0))[24:]</p>
<p>But it does not seem to keep same ID on Android 4.4.2.</p>
</div>
<div class="post-text" itemprop="text">
<p>or use bios serialnr</p>
<pre><code>wmic bios get serialnumber
</code></pre>
</div>
<span class="comment-copy">Duplicate question <a href="http://stackoverflow.com/questions/2461141/get-a-unique-computer-id-in-python-on-windows-and-linux" title="get a unique computer id in python on windows and linux">stackoverflow.com/questions/2461141/…</a></span>
<span class="comment-copy">This is a duplicate question to this: <a href="https://stackoverflow.com/questions/2461141/get-a-unique-computer-id-in-python-on-windows-and-linux/45096068#45096068" title="get a unique computer id in python on windows and linux">stackoverflow.com/questions/2461141/…</a> Check this: <a href="https://stackoverflow.com/a/45096068/3759901">stackoverflow.com/a/45096068/3759901</a></span>
<span class="comment-copy">Thank you! that was very helpful. using dmidecode is an excellent idea. (didn't know this)</span>
<span class="comment-copy">Use subprocess to run it from your python code:  import subprocess current_machine_id = subprocess.check_output('wmic csproduct get uid').split('\n')[1].strip()</span>
<span class="comment-copy">CalledProcessError: Command 'wmic csproduct get uid' returned non-zero exit status -2147217385</span>
