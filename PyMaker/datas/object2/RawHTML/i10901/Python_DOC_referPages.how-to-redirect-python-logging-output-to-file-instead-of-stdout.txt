<div class="post-text" itemprop="text">
<p>I want to redirect all the output, even from the external modules which are imported to a file.</p>
<pre><code>sys.stdout = open('logfile', 'a')
</code></pre>
<p>doesn't do the job for the logging done by external files is echoed on stdout.</p>
<p>I've tinkered with the source code of external modules, and they are deeply knitted with python's "logging" module and rely on it for the output.</p>
<p>Also, I don't want to use stream redirection using &gt; operator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>sysstdout = sys.stdout
log_file = open("your_log_file.txt","w")
sys.stdout = log_file
print("this will be written to message.log")
sys.stdout = sysstdout
log_file.close()
</code></pre>
<p>Or, do the right thing and use <a href="https://docs.python.org/3/library/logging.html" rel="nofollow">Python's logging module</a> properly.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import sys

sys.stdout = sys.stderr = open('logfile', 'a')

print('this should be working from anywhere')
import logging
logging.warn('this too')
</code></pre>
<p>The reasson you saw external modules print to console was probably that they were using <code>stderr</code> (which is the default output handler for the <a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer"><code>logging</code></a> module).</p>
</div>
<span class="comment-copy">Nope, it doesn't redirect external modules imported. External modules seem to do things in their own way.</span>
