<div class="post-text" itemprop="text">
<p>This is a theoretical question that I have been looking for an answer to for sometime, but could never actually find it.</p>
<p>Suppose I have my main file <code>main.py</code> which has <code>import numpy as np</code> and <code>import helper</code>.</p>
<p>If I have a helper file <code>helper.py</code>, could I use <code>np</code> in <code>helper.py</code>, because I already imported it in <code>main.py</code>, and the only time I would ever use <code>helper.py</code> is via <code>main.py</code>, resulting in <code>numpy</code> always being imported?</p>
</div>
<div class="post-text" itemprop="text">
<p>No. The <a href="https://docs.python.org/3/reference/import.html" rel="nofollow">python documentation</a> states:</p>
<blockquote>
<p>The import statement combines two operations; it searches for the
  named module, then it binds the results of that search to a name in
  the local scope.</p>
</blockquote>
<p>If the import occurs at the top of a module, local scope will be global - i.e. <em>local to the module</em>.</p>
<p>On the plus side, normally imports will only occur once. Python will search the cache for imports before carrying out an import and will create a reference to a previously imported module if it finds it. This saves have to load a second copy - there's no harm (generally) in having the import statement in both modules.</p>
<blockquote>
<p>The first place checked during import search is sys.modules. This
  mapping serves as a cache of all modules that have been previously
  imported, including the intermediate paths.</p>
</blockquote>
<p>Additionally, from the <a href="https://docs.python.org/3/faq/programming.html?highlight=global#how-do-i-share-global-variables-across-modules" rel="nofollow">FAQs</a>:</p>
<blockquote>
<p>How do I share global variables across modules?</p>
<p>The canonical way to share information across modules within a single
  program is to create a special module (often called config or cfg).
  Just import the config module in all modules of your application;</p>
</blockquote>
</div>
<span class="comment-copy">Duplicate of <a href="http://stackoverflow.com/q/18792145/2301450">Same module is being imported in different files</a>?</span>
<span class="comment-copy">What happened when you tried the experiment?</span>
