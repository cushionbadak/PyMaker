<div class="post-text" itemprop="text">
<pre><code>from pymongo import MongoClient
DBC = MongoClient("localhost").test.test
</code></pre>
<p>Just as the snippet above, we can use just a <code>.</code> instead of <code>get_database("test")</code> and <code>get_collection("test")</code> to get a database instance or a collection instance. Despite the convenience, I wonder what makes this <em>syntactic sugar</em> happen? </p>
</div>
<div class="post-text" itemprop="text">
<p>There is a <a href="https://docs.python.org/3/reference/datamodel.html#object.__getattr__" rel="nofollow"><em><code>__getattr__()</code> magic method</em></a> making dot notation/attribute lookup happen.</p>
<p>Let's look into the source code. <code>MongoClient</code> class <a href="https://github.com/mongodb/mongo-python-driver/blob/master/pymongo/mongo_client.py#L911" rel="nofollow">defines <code>__getaattr__</code></a> method and instantiates a <code>Database</code> class by name:</p>
<pre><code>def __getattr__(self, name):
    """Get a database by name.
    Raises :class:`~pymongo.errors.InvalidName` if an invalid
    database name is used.
    :Parameters:
      - `name`: the name of the database to get
    """
    if name.startswith('_'):
        raise AttributeError(
            "MongoClient has no attribute %r. To access the %s"
            " database, use client[%r]." % (name, name, name))
    return self.__getitem__(name)

def __getitem__(self, name):
    """Get a database by name.
    Raises :class:`~pymongo.errors.InvalidName` if an invalid
    database name is used.
    :Parameters:
      - `name`: the name of the database to get
    """
    return database.Database(self, name)
</code></pre>
<p>And the <a href="https://github.com/mongodb/mongo-python-driver/blob/master/pymongo/database.py#L211" rel="nofollow">same goes for the <code>Database</code> class</a>.</p>
</div>
