<div class="post-text" itemprop="text">
<p>I have an XML file to parse, and I need to find elements by id.</p>
<p>In the example code, I need to find the name of the <code>driver</code>, but I don't know whether my id is for the <code>vehicle</code>, <code>engine</code>, or <code>block</code>. I would like a solution which would work with arbitrary xml inside of <code>vehicle</code> (but existence of <code>driver</code> is guaranteed).</p>
<pre><code>&lt;road&gt;
    &lt;vehicle id="16"&gt;
        &lt;driver&gt;Bob Johnson&lt;/driver&gt;
        &lt;engine id="532"&gt;
            &lt;type&gt;V8&lt;/type&gt;
            &lt;block id="113"&gt;
                &lt;material&gt;Aluminium&lt;/material&gt;
            &lt;/block&gt;
        &lt;/engine&gt;
    &lt;/vehicle&gt;
    &lt;vehicle id="452"&gt;
        &lt;driver&gt;Dave Edwards&lt;/driver&gt;
        &lt;engine id="212"&gt;
            &lt;type&gt;Inline 6&lt;/type&gt;
            &lt;block id="381"&gt;
                &lt;material&gt;Cast Iron&lt;/material&gt;
            &lt;/block&gt;
        &lt;/engine&gt;
    &lt;/vehicle&gt;
&lt;/road&gt;
</code></pre>
<p><strong>What have I tried</strong></p>
<p>I was trying to get the elements by their id, and then, if they weren't <code>vehicle</code> tags, navigate up the tree to find it, but it seems python's <code>elem.find()</code> returns None if the result is outside <code>elem</code>.</p>
<p>Looking at <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element%22the%20docs%22" rel="nofollow">the docs</a>, they have this example:</p>
<pre><code># Nodes with name='Singapore' that have a 'year' child
root.findall(".//year/..[@name='Singapore']")
</code></pre>
<p>But I don't see how to make that work for any descendant, as opposed to a decendant on a specific level.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Note</strong>: All the snippets below use <code>lxml</code> library. To install, run: <code>pip install lxml</code>.</p>
<p>You should use <code>root.xpath(..)</code> not <code>root.findall(..)</code>.</p>
<pre><code>&gt;&gt;&gt; root.xpath("//vehicle/driver/text()")
['Bob Johnson', 'Dave Edwards']
</code></pre>
<p>If you want to extract driver's name from a given ID, you'd do:</p>
<pre><code>&gt;&gt;&gt; vehicle_id = "16"
&gt;&gt;&gt; xpath("//vehicle[@id='16' or .//*[@id='16']]/driver/text()")
['Bob Johnson']
</code></pre>
<p>UPDATE: To get the driver's name for a given <code>id</code> nested at any level deeper, you'd do:</p>
<pre><code>&gt;&gt;&gt; i = '16'
&gt;&gt;&gt; a.xpath("//vehicle[@id='%s' or .//*[@id='%s']]/driver/text()"%(i,i))
['Bob Johnson']
&gt;&gt;&gt; i = '532'
&gt;&gt;&gt; a.xpath("//vehicle[@id='%s' or .//*[@id='%s']]/driver/text()"%(i,i))
['Bob Johnson']
&gt;&gt;&gt; i = '113'
&gt;&gt;&gt; a.xpath("//vehicle[@id='%s' or .//*[@id='%s']]/driver/text()"%(i,i))
['Bob Johnson']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you know the <code>id</code>, but don't know if this <code>id</code> is from vehicle, engine or block, you can approach it with an XPath expression, but you would have to use <a href="http://lxml.de/tutorial.html" rel="nofollow"><code>lxml.etree</code></a> instead of <code>xml.etree.ElementTree</code> (it has very limited XPath support). Use the <a href="https://developer.mozilla.org/en-US/docs/Web/XPath/Axes/ancestor-or-self" rel="nofollow"><code>ancestor-or-self</code></a> axis:</p>
<pre><code>input_id = "your ID"
print(root.xpath(".//*[@id='%s']/ancestor-or-self::vehicle/driver" % input_id)[0].text)
</code></pre>
<p>This would print:</p>
<ul>
<li><code>Bob Johnson</code> if <code>input_id</code> would be <code>16</code> or <code>532</code> or <code>113</code></li>
<li><code>Dave Edwards</code> if <code>input_id</code> would be <code>452</code> or <code>212</code> or <code>381</code></li>
</ul>
<hr/>
<p>Complete working example:</p>
<pre><code>import lxml.etree as ET

data = """
&lt;road&gt;
    &lt;vehicle id="16"&gt;
        &lt;driver&gt;Bob Johnson&lt;/driver&gt;
        &lt;engine id="532"&gt;
            &lt;type&gt;V8&lt;/type&gt;
            &lt;block id="113"&gt;
                &lt;material&gt;Aluminium&lt;/material&gt;
            &lt;/block&gt;
        &lt;/engine&gt;
    &lt;/vehicle&gt;
    &lt;vehicle id="452"&gt;
        &lt;driver&gt;Dave Edwards&lt;/driver&gt;
        &lt;engine id="212"&gt;
            &lt;type&gt;Inline 6&lt;/type&gt;
            &lt;block id="381"&gt;
                &lt;material&gt;Cast Iron&lt;/material&gt;
            &lt;/block&gt;
        &lt;/engine&gt;
    &lt;/vehicle&gt;
&lt;/road&gt;
"""

root = ET.fromstring(data)
for input_id in [16, 532, 113, 452, 212, 381]:
    print(root.xpath(".//*[@id='%s']/ancestor-or-self::vehicle/driver" % input_id)[0].text)
</code></pre>
<p>Prints:</p>
<pre><code>Bob Johnson
Bob Johnson
Bob Johnson
Dave Edwards
Dave Edwards
Dave Edwards
</code></pre>
</div>
<span class="comment-copy">May be it is a matter of a personal preference, but since you are eventually using <code>lxml.etree</code>, I think <code>ancestor-or-self</code> should be preferred. Pretty sure it would be faster as well from the performance perspective.</span>
<span class="comment-copy">OK, but how do I find which one is for my id? If I have id of '381', how do I know that's for "Dave Edwards", not "Bob Johnson"?</span>
<span class="comment-copy">Can you explain? Do you want to find a driver, for a vehicle with a given ID?</span>
<span class="comment-copy">Yes, or for the vehicle which contains the element with the given id. My id could be for the vehicle, engine, or block, but I need to find the driver.</span>
<span class="comment-copy">@nHaskins: Updated ..</span>
<span class="comment-copy">I'm getting an error:  <code>AttributeError: 'xml.etree.ElementTree.Element' object has no attribute 'xpath'</code>  I'm loading my XML like:     <code>tree = etree.parse('file.xml')</code> <code>root = tree.getroot()</code>    Do I need to load this differently? Do I need a seperate library for this?</span>
