<div class="post-text" itemprop="text">
<p>I am using a private Ubuntu server and am testing a private application</p>
<p>I am using the Python <code>hashlib</code> library for generating MD5 hashes.</p>
<p>Now I want the MD5 function always return my specific number although different input. How can I do this? Is there a config file?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>DISCLAIMER</strong></p>
<p>As mentioned in the comments this is most likely a <strong>TERRIBLE</strong> idea and is very likely an <a href="http://xyproblem.info/" rel="nofollow">X / Y problem</a>.</p>
<hr/>
<p>For the sake of clarity, this is what I was referring to when I said it could be done via a monkey patch:</p>
<pre><code>import hashlib

class DummyMD5():

    def __init__(self, realmd5):
        self.md5 = realmd5
        self.v = None

    def hexdigest(self):
        return "12345abcdef"

    def __call__(self, v):
        self.v = v
        return self

    def __getattr__(self, f):
        if f not in self.__dict__:
            return self.md5(self.v).__getattribute__(f)




_md5 = hashlib.md5
hashlib.md5 = DummyMD5(_md5)
</code></pre>
<p>As long as this is imported / executed before the hashlib call is used elsewhere it will replace the result of a <code>hexdigest</code> with a constant value.  Any other method would return the real md5 (like <code>digest</code>).  </p>
</div>
<div class="post-text" itemprop="text">
<p><strong>tl;dr</strong>
You can't, unless you write your own function or implement a monkey patch.</p>
<p>Hashes are not designed to return the same value for multiple completely different snippets of data (although inevitably there have been collisions, <a href="https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value">like with MD5</a>, due to the length of the hash). You could write your own function to check the value passed, and have it return a unique value if you need to. An example:</p>
<pre><code>import hashlib

def my_func(thing):
    hash_for_cheese = 'fea0f1f6fede90bd0a925b4194deac11'
    if thing == "cheese":
        return hash_for_cheese
    elif thing == "football":
        return hash_for_cheese
    else:
        return hashlib.md5(thing).hexdigest()
</code></pre>
<p>In this case, the same hash would be returned if you passed <code>cheese</code> or <code>football</code> to the function, otherwise it would return another hash.</p>
<p>Also, there is no 'config file'. It is just a specific algorithm written in a C program. If you are desperate, you <em>might</em> be able to change it, but it would only work on your system.</p>
<p>You could also implement what is known as a monkey patch. I'm not knowledgeable in that area, but you can find out more information from <a href="https://stackoverflow.com/questions/5626193/what-is-a-monkey-patch">this SO post</a>.</p>
<p>As others have pointed out, I can not think of a use case for this sort of problem, although if you need to do it, then you have your answer.</p>
</div>
<span class="comment-copy">What is your use case?  Why would you <b>need</b> to do this?</span>
<span class="comment-copy">This is an <a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>. Tell us what you really want to do.</span>
<span class="comment-copy">I want to test my application using MD5. it is openstack swift. i have testing case about MD5 birthday. therefore i want to Md5 always has same output to examine my application that how it will handle that .</span>
<span class="comment-copy">@NguyenDiep If it is in swift, then why do you mention Python in your post an why is it tagged python?</span>
<span class="comment-copy">@techydesigner because i see MD5 written by python and swift also. if not, please ignore it.</span>
<span class="comment-copy">how to use your DummyMD5? my application configuration is: from haslib import md5. then use MD5(path) to return output.</span>
<span class="comment-copy">This continues to be a terrible idea.  Tell us what you really want to accomplish instead.</span>
<span class="comment-copy">@tripleee, my application use MD5 to hash path of object. i want to test in case if MD5 return same hash, what will happen. so that i want to change MD5 function to return same hash.</span>
<span class="comment-copy">Congratulations, you have invented <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mocking</a>. Unfortunately, this comment box is too small for a detailed tutorial.</span>
<span class="comment-copy">Not the downvoter, but sure you can.  You can monkey patch if you really wanted to.  This is a terrible idea, but it is very possible.</span>
<span class="comment-copy">What I meant when I said it was a bad idea was not specific to a monkey patching approach but to the general idea of returning a constant value for an md5 hash.  I would be very surprised if there is a valid use case for such a thing.</span>
<span class="comment-copy">This is not true: "Hashes are not designed to return the same value <i>ever</i>", cryptographic hash functions are designed to make it <i>hard</i> to compute the same hash</span>
