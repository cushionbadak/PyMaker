<div class="post-text" itemprop="text">
<p>i have a list of tuples which is :</p>
<pre><code>[('g', 10, 2), ('o', 6, 11), ('v', 2, 4), ('t', 1, 15), ('x', 40, 3), ('m', 4, 4), ('k', 10, 2), ('f', 14, 1), ('p', 70, 90), ('l', 21, 7), ('n', 1, 27), ('a', 39, 70), ('d', 11, 10), ('h', 21, 10), ('c', 10, 19), ('b', 8, 1), ('e', 30, 39), ('i', 23, 29), ('r', 8, 7), ('q', 2, 2), ('s', 18, 86)]
</code></pre>
<p>and I'm struggling about how to sort them so they can be placed like this: </p>
<pre><code>[('p', 70, 90), ('a', 39, 70), ('s', 18, 84), ('Ã¨', 27, 45), ('e', 30, 39), ('i', 23, 29), ('x', 40, 3), ('h', 21, 10), ('c', 10, 19), ('l', 20, 7), ('d', 11, 10), ('o', 6, 11), ('t', 1, 15), ('f', 14, 1), ('r', 8, 7), ('g', 10, 2), ('k', 10, 2), ('n', 1, 11), ('b', 8, 1), ('m', 4, 4), ('v', 2, 4), ('q', 2, 2)]
</code></pre>
<p>It should be the addition of the second and third element of the tuple , and when they are the same ex. <code>(a,10,9)</code> and <code>(b,9,10)</code> they should be sorted alphabetically. It's written in python 3.5 and I can't call any library</p>
</div>
<div class="post-text" itemprop="text">
<p>You can set a tuple as the key to sort your list:</p>
<pre><code>sorted(lst, key = lambda x: (sum(x[1:]), x[0]))
</code></pre>
<p>In this way, it will firstly sort by the sum of the last two elements of the tuple and then by the first element of the tuple.</p>
<p>And if you like the result in descending order, as @Moses commented, you can specify the the <code>reverse</code> parameter to be <code>True</code>:</p>
<pre><code>sorted(lst, key = lambda x: (sum(x[1:]), x[0]), reverse = True)
</code></pre>
<p><em>Update</em>:
To handle descending, ascending order differently, since the <code>sum</code> here is numeric, you can negate the <code>sum</code> as well. In this way, it will be sorted in descending order for the <code>sum</code> but alphabetically for the first letter.</p>
<pre><code>sorted(lst, key = lambda x: (-sum(x[1:]), x[0]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>sorted(a, key=lambda x: (sum(x[1:3]), x[0]))
</code></pre>
<p>Where <code>a</code> is your list. If you need reversed:</p>
<pre><code>sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [('g', 10, 2), ('o', 6, 11), ('v', 2, 4), ('t', 1, 15),
     ('x', 40, 3), ('m', 4, 4), ('k', 10, 2), ('f', 14, 1),
     ('p', 70, 90), ('l', 21, 7), ('n', 1, 27), ('a', 39, 70),
     ('d', 11, 10), ('h', 21, 10), ('c', 10, 19), ('b', 8, 1),
     ('e', 30, 39), ('i', 23, 29), ('r', 8, 7), ('q', 2, 2),
     ('s', 18, 86)]
</code></pre>
<p><a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">Create a function that will return the sum of the items</a> and use that function a the sort key.  I like to use operator.itemgetter() when extracting items from iterables.</p>
<pre><code>import operator
second_third_first_items = operator.itemgetter(1, 2, 0)
def key(thing):
    *two_three, one = second_third_first_items(thing)
    return (sum(two_three), one)
a.sort(key = key, reverse = True)
</code></pre>
<hr/>
<p><code>key</code> without operator.itemgetter</p>
<pre><code>def key(thing):
    one, *two_three = thing[:3]
    return (sum(two_three), one)
</code></pre>
</div>
<span class="comment-copy">You subjet line says sort by 2nd or 3rd, but your words say "the addition of the 2nd and 3rd element... when they are the same sort alphabetically"</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/3121979/how-to-sort-list-tuple-of-lists-tuples">How to sort (list/tuple) of lists/tuples?</a></span>
<span class="comment-copy">@Doctorlove Sorry I'm going to edit it , i was about to ask the wrong question</span>
<span class="comment-copy">That's a neat trick!</span>
<span class="comment-copy">A <code>reverse=True</code> would be required considering OP's output</span>
<span class="comment-copy">Does it need a <code>reverse = True</code> or did i misunderstand the question?</span>
<span class="comment-copy">@doctorlove Yep. OP's result seems to prefer descending order.</span>
<span class="comment-copy">@Psidom That answer sorts alphabetically only if the first element of the tuple is a 1 character word? Or it works for words of x lenght aswell?</span>
<span class="comment-copy">Could you explain me the 1:3?</span>
<span class="comment-copy">@over96 it is a slice. that is how you get 2nd and 3rd element of list. You can replace it with lambda x: x[1] + x[2]</span>
<span class="comment-copy">Oh okay , thank you. A last question , how can I reverse this kind of sorting?</span>
<span class="comment-copy">@Alex This answer won't sort alphabetically if they are equal</span>
<span class="comment-copy">@brianpck fixed</span>
