<div class="post-text" itemprop="text">
<p>i have some problem to put type hinting in my python program.
it is from python 3.5.</p>
<p>With this example:</p>
<pre><code># -*- coding: utf-8 -*-
import collections
import typing

XV = typing.TypeVar('XV')


class Coll(collections.OrderedDict[str, XV]):

    def sorted(self) -&gt; collections.OrderedDict[str, XV]:
        dict_sorted = collections.OrderedDict()  # type: collections.OrderedDict[str,XV]
        for key in sorted(self.keys()):
            dict_sorted[key] = self[key]
        return dict_sorted

    def __str__(self) -&gt; str:
        retour = ""  # type:str
        if len(self) == 0:
            return ""
        test = self.sorted()  # type: collections.OrderedDict[str,XV]
        for l in test:
            if retour:
                retour += "\n{0!s}".format(self[l])
            else:
                retour = "{0!s}".format(self[l])
        return retour

    def __repr__(self) -&gt; str:
        return self.__str__()
</code></pre>
<p>when i run mypy, i have the following:</p>
<pre><code>example.py:8: error: Invalid type "example.XV"
example.py: note: In function "__str__":
example.py:20: error: Invalid type "example.XV"
</code></pre>
<p>the thing i don't understand is why i have those errors.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>OrderedDict</code> is not a subclass of <code>typing.Generic</code> and therefore cannot be parametrized. However you may easily define the corresponding type as follows:</p>
<pre><code>from typing import MutableMapping, TypeVar
from collections import OrderedDict

KT = TypeVar('KT')  # Key type.
VT = TypeVar('VT')  # Value type.

class OrderedDictType(OrderedDict, MutableMapping[KT, VT], extra=OrderedDict):
    __slots__ = ()

    def __new__(cls, *args, **kwds):
        raise TypeError("Type OrderedDictType cannot be instantiated;" +
                        " use OrderedDict() instead")

# isinstance check
a = OrderedDict()
assert isinstance(a, OrderedDictType)
</code></pre>
<p>You may then use it in all type hints : <code>OrderedDictType[str,XV]</code> instead of <code>OrderedDict[str,XV]</code>.</p>
<p>See <a href="https://docs.python.org/3/library/typing.html#user-defined-generic-types" rel="nofollow noreferrer">https://docs.python.org/3/library/typing.html#user-defined-generic-types</a>
and <code>typing.py</code> source for details and examples (I used the <code>typing.List</code> class as an example).</p>
</div>
<span class="comment-copy"><code>collections.OrderedDict</code> doesn't take type parameters.</span>
