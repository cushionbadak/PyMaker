<div class="post-text" itemprop="text">
<p>I am calling from matlab (R2015b) a python module that I created. Now I've noticed that, we can only send to python a 1xN vector. </p>
<p>So I fixed this in Matlab </p>
<p>Matlab Code:</p>
<pre><code>a = ones(3, 3);
a = a(:).';
</code></pre>
<p>Then I sent <code>a</code> as parameter to python function.</p>
<pre><code> m = py.computeCoreset.computecoreset(a, obj.coresetSize);
</code></pre>
<p>Now my problem that python doesn't return Matlab matrix
I noticed that I am returning an ndarray while debugging.</p>
<p>This is my python code:</p>
<pre><code>import numpy as np


def computecoreset(mat, coresetSize):
    return np.random.choice(mat, coresetSize)
</code></pre>
<p>I guess I need to make the ndarray a matrix once again</p>
<p>But how do I convert it ?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.mathworks.com/matlabcentral/answers/157347-convert-python-numpy-array-to-double" rel="nofollow">https://www.mathworks.com/matlabcentral/answers/157347-convert-python-numpy-array-to-double</a></p>
<p>The accepted answer suggests  <code>py.array.array</code> function:</p>
<pre><code>data = double(py.array.array('d',py.numpy.nditer(x)));
</code></pre>
<p>Which is also listed on</p>
<p><a href="https://www.mathworks.com/help/matlab/matlab_external/handling-data-returned-from-python.html" rel="nofollow">https://www.mathworks.com/help/matlab/matlab_external/handling-data-returned-from-python.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is a shot in the dark, because I don't have Matlab to test it, but I suspect you'll have to return a python <a href="https://docs.python.org/3/library/array.html" rel="nofollow"><code>array</code></a> object, not a numpy array.
So something like this:</p>
<pre><code>import numpy as np
import array


def computecoreset(mat, coresetSize):
    c = np.random.choice(mat, coresetSize)
    return array.array('d', c)
</code></pre>
</div>
<span class="comment-copy">What happens when you use the function that you show?</span>
<span class="comment-copy">Your Python code obviously returns a numpy array, but doesn't the interface code create some sort of MATLAB object from that?  A numpy array can't exist in a MATLAB environment.  Elaborate on how you call the Python code from MATLAB.</span>
<span class="comment-copy">I think the point of using <code>nditer(x)</code> is to serialize the elements of <code>x</code> into a 1-d sequence.  In this case, <code>x</code> is 1-d, so I don't think using <code>nditer()</code> is necessary.</span>
