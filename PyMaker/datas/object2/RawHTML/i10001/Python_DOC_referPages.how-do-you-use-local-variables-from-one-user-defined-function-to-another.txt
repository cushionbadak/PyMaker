<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10139866/calling-variable-defined-inside-one-function-from-another-function">Calling variable defined inside one function from another function</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I was wondering how I would use the "adj" variable from def getInput and connect it to adjectives(), I am trying to make it so I can get input from the user and then have the random.choice activate depending on how many adjectives the user inputs. As a student for this project, I can only use user defined functions.</p>
<pre><code>import random
def getInput():
    insult = input("Enter number of insults you want generated: ")
    target = input("Enter the targets name: ")
    adj = input("Enter number of adjectives you want in your insults: ")

def adjective():
    adjectives = ("aggressive", "cruel", "cynical", "deceitful", "foolish", "gullible", "harsh", "impatient", "impulsive", "moody", "narrow-minded", "obsessive", "ruthless", "selfish", "touchy")

    for adj in adjectives:
        print(random.choice(adjectives))
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one option. </p>
<pre><code>import random
def getInput():
    insult = input("Enter number of insults you want generated: ")
    target = input("Enter the targets name: ")
    adj = input("Enter number of adjectives you want in your insults: ")
    return int(insult), int(target), int(adj) # cast to int and return 

def adjective(numAdj): # add a parameter 
    adjectives = ("aggressive", "cruel", "cynical", "deceitful", "foolish", "gullible", "harsh", "impatient", "impulsive", "moody", "narrow-minded", "obsessive", "ruthless", "selfish", "touchy")

    for i in range(numAdj): # use parameter
        print(random.choice(adjectives))
        # do not break the loop after one pass 

insult, target, adj = getInput() # get values 
adjective(adj) # pass in 
</code></pre>
<p>Another option is using <code>global</code> keyword within the function, or simply declaring your number values in the global scope to begin with </p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to take the value of the "adj" variable in getInput() and use it in adjective(), you will want to return it from getInput() and you can then call getInput(). If you just add the line <code>return adj</code> at the end of getInput() then in another function - such as adjective() - you can use the assignment <code>adj = getInput()</code> to use it in that function. </p>
<p>In general you can return values from functions and pass values in as arguments to share values between functions - Python's documentation explains how this works:
<a href="https://docs.python.org/2/tutorial/controlflow.html#defining-functions" rel="nofollow">https://docs.python.org/2/tutorial/controlflow.html#defining-functions</a></p>
</div>
<span class="comment-copy">Where do you want to use the value? Do you really need the <code>getInput</code> function?</span>
<span class="comment-copy">Define <code>adjective</code> with an argument - <code>def adjective(adj): ...</code>, return adj from <code>getInput</code>, pass the return value to <code>adjective</code>.  <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#defining-functions</a></span>
<span class="comment-copy">You can return "multiple" values:  <code>return insult, target, adj</code>  Its not <i>really</i> multiple values, its a tuple, but you can call the function like this:  <code>insult, target, adj = getInput()</code>.</span>
