<div class="post-text" itemprop="text">
<p>I have a lazy iterator/generator <code>a</code> which is doing some side-effect on each iteration and I don't care about the values that it produces. What is the most idiomatic way to evaluate the side effects? Of course, I can simply do:</p>
<pre><code>for _ in a: pass
</code></pre>
<p>But it seems rather ugly.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found the recipe for the function <code>consume</code> in itertools recipes section. Esentially, it recommends to do:</p>
<pre><code>collections.deque(iterator, maxlen=0)
</code></pre>
</div>
<span class="comment-copy">That's probably the least bad strategy, as generators with side effects aren't very idiomatic Python in the first place.</span>
<span class="comment-copy">Better solution is don't write a lazy iterator with side effects</span>
<span class="comment-copy">True, but in my case, the iterator comes from a library, unfortunately.</span>
<span class="comment-copy">Could you give more context? It's likely there's another approach that would be altogether more idiomatic. Note: <a href="https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists" rel="nofollow noreferrer"><i>"Particularly tricky is <code>map()</code> invoked for the side effects of the function; the correct transformation is to use a regular for loop (since creating a list would just be wasteful)."</i></a></span>
<span class="comment-copy">If the generator always yields truthy values: <code>all(a)</code>.  If it always yields falsy values:  <code>any(a)</code>.</span>
