<div class="post-text" itemprop="text">
<p>I am starting to use functions for my first time and the issue I am having is declaring a variable inside a function that is used more than once. I got this program working before my attempt to add functions, so the only thing incorrect (im assuming) is my attempt to use functions. </p>
<pre><code>print ("Welcome to August's binary arithemetic caclulator.")
firstvalue = input("What is the first binary value?")
secondvalue = input("What is the second binary value?")
operation = input("What operation would you like to carry out? + or - or * or ^")

def bintoint():
    prod, ans, power = 0, 0, 0
    for i in range (-1,-len(firstvalue) - 1,-1):
        try:
            prod = ((int(firstvalue[i])) * ((2**power)))
        except ValueError:
            continue
        ans += prod
        prod = 0
        power += 1
    global ans

firstvalueans = ans

bintoint()
bintoint(firstvalue="secondvalue")

secondvalueans = ans

#prod, ans, power = 0, 0, 0
#for i in range (-1,-len(secondvalue) - 1,-1):
#    try:
#        prod = ((int(secondvalue[i])) * ((2**power)))
#    except ValueError:
#        continue
#    ans += prod
#    prod = 0
#    power += 1
# global secondvalueans
# secondvalueans = ans

if operation == "+":
    totalans = (firstvalueans + secondvalueans)
if operation == ("-"):
    totalans = (firstvalueans - secondvalueans)
if operation == ("*"):
    totalans = (firstvalueans * secondvalueans)
if operation == ("^"):
    totalans = (firstvalueans ** secondvalueans)
try:
    totalans = int(totalans)
except NameError:
    print ("Please enter a valid operator.")
    import sys
    sys.exit()

invertedbinary = []
while totalans &gt;= 1:
    totalans = (totalans/2)
    invertedbinary.append(totalans)
    totalans = int(totalans)
for n,i in enumerate(invertedbinary):
    if (round(i) == i):
        invertedbinary[n]=0
    else:
        invertedbinary[n]=1
if (firstvalue[0] == "-") ^ (secondvalue[0] == "-"):
    invertedbinary.append("-")

invertedbinary.reverse()
result = ''.join(str(e) for e in invertedbinary)
print ( firstvalue , operation , secondvalue , "=" ,result)
</code></pre>
<p>Note the only declared function, and the block of commented code. The code is identical with the exception of a single variable. So I am trying to execute the function twice, by changing the only difference the variable. The variable I would like to change can be seen as <code>firstvalue</code> in <code>def bintoint()</code>. For the second time the function is called, I would like <code>firstvalue</code> to be replaced with `secondvalue, just like the commented code. </p>
<p>The idea of this script is to take two binary values, convert them into integers, carry out the respective operation between the two integers, convert back into binary and <code>print ( firstvalue , operation , secondvalue , "=" ,result)</code>.</p>
<p>So lets say I input the two values in this order:</p>
<p><code>100</code> </p>
<p><code>011</code></p>
<p><code>*</code></p>
<p>Expected Output:</p>
<p><code>100 * 011 = 1100</code> </p>
<p>Actual Output:</p>
<p><code>TypeError: bintoint() got an unexpected keyword argument 'firstvalue'</code></p>
<p>So I understand it is something wrong with my attempt at changing the variable within the function. <code>bintoint(firstvalue="secondvalue")</code> I also tried without quotation marks but still gave me the same error.</p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Two important aspects of using functions are passing in arguments and returning the results. If you pass in an argument, then the function will receive a potentially different value each time it is called. If you return the result, then the calling code will receive a different answer each time it calls your function.</p>
<p>Try something like this:</p>
<pre><code>def bintoint(value):
    prod, ans, power = 0, 0, 0
    for i in range (-1,-len(value) - 1,-1):
        try:
            prod = ((int(value[i])) * ((2**power)))
        except ValueError:
            continue
        ans += prod
        prod = 0
        power += 1
    return ans
</code></pre>
<p>Then, in your main code:</p>
<pre><code>firstvalueans = bintoint(firstvalue)
secondvalueans = bintoint(secondvalue)
</code></pre>
<p>More information about functions can be found in <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">The Python Tutorial</a>, in the <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer"><em>Defining Functions</em></a> section.</p>
<p><em>Aside</em>: In your example, it may be easier to use the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">two-argument form of the <code>int()</code> constructor</a>, like so:</p>
<pre><code>firstvalueans=int(firstvalue, 2)
</code></pre>
</div>
<span class="comment-copy">Please pare this down to a <i>minimal</i> example that reproduces your problem.</span>
<span class="comment-copy">Usually it's easier to answer if you try to create a <a href="http://stackoverflow.com/help/mcve">minimal, complete, and verifiable example</a>. As it stands, there's a lot of unnecessary noise in your question.</span>
<span class="comment-copy">It sounds like you need to read just a little bit farther in your tutorials and learn about function parameters.</span>
<span class="comment-copy">Check out partial functions...<a href="https://docs.python.org/2/library/functools.html#functools.partial" rel="nofollow noreferrer">docs.python.org/2/library/functools.html#functools.partial</a></span>
<span class="comment-copy">what you do there <code>bintoint(firstvalue="secondvalue")</code> is not possible since your definition doesnt take any arguments. Change your definition to <code>def bintoint(value)</code> and then pass any values you want. No need for the assignment sign (<code>=</code>). Just like this: <code>bintoint(secondvalue)</code></span>
<span class="comment-copy">Thank you very much for your help! Everything is working as expected now. I can use this for all the functions I need now, thanks!</span>
<span class="comment-copy">@AugustWilliams - I found The Python Tutorial immensely helpful when I learned Python. I recommend that you read and work through the entire tutorial before starting your first project. Good luck!</span>
<span class="comment-copy">I appreciate the advice. I've been doing a bit of everything really on the aspect of learning. Once again, thanks for your help and concern!</span>
