<div class="post-text" itemprop="text">
<p>Hello I found this code in  <a href="https://github.com/gskielian/PNG-2-CIFAR10/blob/master/convert-images-to-cifar-format.py" rel="nofollow">https://github.com/gskielian/PNG-2-CIFAR10/blob/master/convert-images-to-cifar-format.py</a> </p>
<p>I want to convert my dataset of images in this format but I get an error:</p>
<p><code>data.append(pix[x,y][color])
TypeError: 'int' object has no attribute '__getitem__'</code></p>
<p>I'm a beginner in python and I don't know about the error, please help me</p>
<pre><code>`#python script for converting 32x32 pngs to format
 from PIL import Image
 import os
 from array import *

 data = array('B')

 for dirname, dirnames, filenames in os.walk('./classes'):
 for filename in filenames:
 if filename.endswith('.png'):

    ################
    #grab the image#
    ################

    im = Image.open(os.path.join(dirname, filename))
    pix = im.load()
    #print(os.path.join(dirname, filename))

    #store the class name from look at path
    class_name = int(os.path.join(dirname).split('/')[-1])
    #print class_name

    ###########################
    #get image into byte array#
    ###########################

    # create array of bytes to hold stuff

    #first append the class_name byte
    data.append(class_name)

    #then write the rows
    #Extract RGB from pixels and append
    #note: first we get red channel, then green then blue
    #note: no delimeters, just append for all images in the set
    for color in range(0,3):
    for x in range(0,32):
        for y in range(0,32):
        data.append(pix[x,y][color])


############################################
#write all to binary, all set for cifar10!!#
############################################

output_file = open('cifar10-ready.bin', 'wb')
data.tofile(output_file)
output_file.close()
`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems at least one of the images in your collection is a 'single-band' image.  </p>
<p>The <a href="http://pillow.readthedocs.io/en/3.1.x/reference/PixelAccess.html" rel="nofollow"><code>__getitem__</code> method of a PixelAccess object</a> returns a single integer for a single-band image, or a tuple for a multi-band image.  <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow"><code>__getitem__</code></a> is a 'magic' method name: if an object <code>obj</code> has a method named <code>__getitem__</code>, then you can write <code>obj[something]</code> to mean <code>obj.__getitem__(something)</code>.  It's therefore possible to write <code>pix[x,y]</code> instead of  <code>pix.__getitem__((x,y))</code>. </p>
<p>Four a three-band RGB image, <code>pix[x,y]</code> returns a 3-tuple of integers representing the colour at pixel (<code>x</code>, <code>y</code>).  <code>pix[x,y][color]</code> therefore returns one of those three.  For a single-band image, <code>pix[x,y]</code> returns a single integer, and it doesn't make sense to attempt to call <code>__getitem__</code> on an integer, so <code>pix[x,y][color]</code> will throw an exception.</p>
<p>The script you've found appears only to handle three-band RGB images (and perhaps four-band RGBA images, ignoring the A channel).  As you've seen, it fails with single-band images.  It may well succeed but return incorrect results for CMYK or YCbCr images.   Fortunately, the fix to these problems appears to be fairly simple: if <code>im</code> isn't an RGB nor RGBA image, convert it to one.  Do this by adding the following two lines</p>
<pre><code>    if im.mode not in ("RGB", "RGBA"):
        im = im.convert("RGB")
</code></pre>
<p>immediately under</p>
<pre><code>    im = Image.open(os.path.join(dirname, filename))
</code></pre>
</div>
<span class="comment-copy">You need to sort out your indentation. Please make sure it's an accurate representation of what you're looking at. The error message means you're trying to index an integer as though it was a list</span>
