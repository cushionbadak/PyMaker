<div class="post-text" itemprop="text">
<p>Currently my program works by taking in two arguments after the program name in the terminal.</p>
<p>i.e. <code>python myscript.py file1 file2</code> works</p>
<pre><code>with open(sys.argv[1], 'r') as a, open(sys.argv[2], 'r') as b:
    while True:
        try: 
    #there are two while loops here, one for each file...
</code></pre>
<p>How can I change it so that when I type in just:</p>
<pre><code>$python myprogram.py help
</code></pre>
<p>A help message (from a text file I have made) is generated?</p>
<p>Is there a very simple way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to perform a check of <code>sys.argv[1]</code> and see if it equals "help". </p>
<pre><code>if sys.argv[1] == "help":
</code></pre>
<p>In this block, you then print out your help file to the user. </p>
<pre><code>if sys.argv[1] == "help":
    with open("help_readme.txt", "r") as f:
        print(f.read())
</code></pre>
<p>If <code>sys.argv[1]</code> does not equal "help", continue with your current logic.</p>
<hr/>
<p>An alternative is to utilize <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a>. It can automatically generate the "help" for you when you pass <code>-h</code></p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description='Process some files.')
parser.add_argument('file', nargs=2, help="List of two files to process")

args = parser.parse_args()

for f in args.file:
    print(f)   # This shows how to use the file name. You will want your logic here
</code></pre>
<p>Using this, if you pass <code>-h</code> to your command line, you get a helpful message like so:</p>
<pre><code>usage: test.py [-h] file file

Process some files.

positional arguments:
  file        List of two files to process

optional arguments:
  -h, --help  show this help message and exit
</code></pre>
<p>It will accept 2 file names. If you pass anything other than two values, it will produce an appropriate response.</p>
</div>
<span class="comment-copy">Compare <code>sys.argv[1]</code> to <code>help</code> and display help in that case, instead of running your normal code?</span>
<span class="comment-copy">Sure, check if the first argument is <code>help</code> and then print something.</span>
<span class="comment-copy">I would suggest you to use <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a>, it will make your life easier while dealing with arguments.</span>
