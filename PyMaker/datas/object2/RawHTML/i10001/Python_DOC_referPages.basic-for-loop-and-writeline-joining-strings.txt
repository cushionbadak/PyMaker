<div class="post-text" itemprop="text">
<p>I am working on an assignment for school. These are my first attempts with Python. We are supposed to copy Juliet and Romeo into a new file but only with act and scene indications, keeping only Juliet and Romeos partitions. Here are my two issues: for some reason, sometimes it copies the title of the scene twice. Second issue, whenever J or R speaks, the partition must be shrunk to one line. Cannot seem to find my way into the problem.
Any help will be greatly appreciated.</p>
<p><a href="https://i.stack.imgur.com/40oON.jpg" rel="nofollow">my clean version, duplicity of indication</a> </p>
<pre><code># opening files
orig = open('RomeoAndJuliet_clean.txt')
nohead = open('RomeoAndJuliet_cleanNoHeader.txt', 'w')
clean = open('theLovers.txt', 'w')

# declaring booleans
doIHaveToCopyTheLine=False
Romeo = False
Juliet = False
act = False
scene = False

# dissecting the play ##################################
orig = open('RomeoAndJuliet_clean.txt')
# creating the loop
for line in orig.readlines():
    # conserving the announcement of acts and scenes
    if 'ACT ' in line: # added a space so it doesn't copy a part of the    header "CONTRACT"
        act = True
    else:
        act = False       
    if 'Scene' in line:
        scene = True
    else:
        scene = False
    # excluding the other characters of the play
    if '&gt;&gt;' in line:
        if 'Romeo' in line:
            Romeo = True
        else:
            Romeo = False

        if 'Juliet' in line:
            Juliet = True
        else:
            Juliet = False
    # assigning functions to the booleans               
    if Juliet:
        clean.write(line)

    if Romeo:
        clean.write(line)

    if scene:
        clean.write(line+'\n')

    if act:
        clean.write(line+'\n')


nohead.close()       
clean.close()
orig.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can combine conditions with <code>or</code>. That should eliminate the duplicates. Then, you may want to accumulate utterances of Romeo and Julia until neither of them says anything anymore, and then write the collected utterances to the file:</p>
<pre><code># opening files
orig = open('RomeoAndJuliet_clean.txt')
nohead = open('RomeoAndJuliet_cleanNoHeader.txt', 'w')
clean = open('theLovers.txt', 'w')


# dissecting the play ##################################
orig = open('RomeoAndJuliet_clean.txt')
act = False
scene = False
Romeo = False
Juliet = False
# creating the loop

condensed = ''    # This will accumulate the utterances of R and J until    neither of them speaks anymore

for line in orig.readlines():
    act == 'ACT ' in line           # added a space so it doesn't copy a part of the    header "CONTRACT"       
    scene == 'Scene' in line

    if act or scene:
        clean.write(line+'\n')
        if condensed != '':
            clean.write(condensed)

    elif '&gt;&gt;' in line:
        Romeo == 'Romeo' in line
        Juliet == 'Juliet' in line
        if Romeo or Juliet:
            condensed += line + "\n"        # Add to the lines of R and J
        elif condensed != '':             # (that is, if there is anything at all to flush...)
            clean.write(condensed)
            condensed = ''              # Prepare for new utterances


if condensed != '':                         # Maybe there are left-over utterances?
    clean.write(condensed)

nohead.close()       
clean.close()
orig.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My assumption is that scene title is copied twice because there is either Juliet or Romeo in it. </p>
<p>For the second issue, You should use temporary string and append multiple lines the character has to it. When You reach empty line, You should write line to the file and reset temporary string to empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Following up on @Fejsâ€™s comment, to prevent the duplicates, use else/elif:</p>
<pre><code>if scene:
    clean.write(line+'\n')
elif act:
    clean.write(line+'\n')    
elif Juliet:
    clean.write(line)
elif Romeo:
    clean.write(line)
</code></pre>
<p>We are not sue of the format of your input file or what you mean by partition on one line, so additional information there will help.</p>
</div>
<span class="comment-copy">As an aside, when creating boolean variables you can simplify the statements and just write <code>scene = 'Scene' in line</code> or <code>Juliet = '&gt;&gt;' in line and 'Juliete' in line</code>.</span>
<span class="comment-copy">The first issue of duplicate lines happens because when the variable act and scene are True, the remaining variable Juliet and Romeo can also be True from previous iteration.</span>
<span class="comment-copy">Also, you do not need to call the readlines() method to iterate over the file - <code>for line in orig: ....</code> is sufficient.</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">str.replace()</a> to replace newlines with spaces for the dialog strings.</span>
<span class="comment-copy">Where and how should I use it?</span>
<span class="comment-copy">trying to make sense of this, thanks a bunch! But mustn't 'act' and 'scene' be defined?</span>
<span class="comment-copy">No, you can make them up as you go. Just write New_Variable = ..., and then Python knows it. Other programming languages require you to declare new variables, but Python doesn't. Please feel free to ask for clarification of code parts :)</span>
<span class="comment-copy">now it simply does not copy anything into the new file</span>
<span class="comment-copy">Fixed two lines, please run the new version again. Thanks.</span>
<span class="comment-copy">NameError: name 'act' is not defined</span>
<span class="comment-copy">Thanks for the clear answer. Would you mind giving me some directions code-wise? I'm a beginner kinda drowning in this..</span>
<span class="comment-copy">a) All of the input and output files are .txt</span>
<span class="comment-copy">b) by partition I meant everything a character has to say before the word is passed on to someone else. This can range from one sentence to a proper monologue that stretches over several lines.</span>
