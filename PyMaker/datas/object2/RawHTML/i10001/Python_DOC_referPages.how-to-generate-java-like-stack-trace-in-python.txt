<div class="post-text" itemprop="text">
<p>In my experience programming with Java, I have become quite fond of the stack traces it generates when my code goes awry, but I feel that the traces generated by python are a bit lacking by comparison.  For example, a trace in java might look like this:</p>
<pre><code>java.lang.RuntimeException
    at test.package.Example.c(Example.java:20)
    at test.package.Example.b(Example.java:15)
    at test.package.Example.a(Example.java:10)
</code></pre>
<p>Whereas a python trace might look like this:</p>
<pre><code>Traceback (most recent call last):
  File "example.py", line 10, in &lt;module&gt;
    a()
  File "example.py", line 2, in a
    b()
  File "example.py", line 5, in b
    c()
  File "example.py", line 8, in c
    raise Exception
Exception
</code></pre>
<p>While both of these traces convey basically the same information, I personally find that the trace from java is easier to follow.</p>
<p>Is there a means to change the format python uses for printing its stack traces, or would that sort of change require me to create a custom exception handler at the root of my program?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a means to change the format Python uses to format its stack traces, and that is that you write your own formatter instead.  There is only one built-in format.</p>
<p>You can assign your own function to <a href="https://docs.python.org/3/library/sys.html#sys.excepthook" rel="nofollow"><code>sys.excepthook</code></a> and it will act as a top-level exception handler that will get access to exceptions that were about to rise uncaught and cause the program to exit.  There you can make use of the traceback object to format things however you like.  Triptych's answer shows how to use the <code>traceback</code> module to get the info for each stack frame.  <code>extract_tb</code> returns a 4-tuple of the filename, line number, function, and source text of the offending line, so if you want to not display the source text you could just throw that away and concatenate the rest.  But you'll have to do the work of constructing whatever output you want to see.</p>
</div>
<div class="post-text" itemprop="text">
<p>using <a href="https://docs.python.org/2/library/traceback.html#traceback.extract_tb" rel="nofollow">traceback</a> module</p>
<pre><code>import traceback
try:
    x= 1/0
except Exception as e:
    print(e)
    traceback.print_exc()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to, you can reformat exception tracebacks with the <code>traceback.extract_tb</code> method.</p>
<p>ref: <a href="https://docs.python.org/2/library/traceback.html#traceback.extract_tb" rel="nofollow">https://docs.python.org/2/library/traceback.html#traceback.extract_tb</a></p>
</div>
<span class="comment-copy">What specifically do you not like (and want to change) about the Python format?  It looks to me like the Python format is giving you <i>more</i> information than the Java format, because it's showing you the actual content of the offending line of code.</span>
<span class="comment-copy">@BrenBarn I feel like it's giving me more information than I need to have.  When I'm writing larger programs, sometimes my stack trace can have 15 or more entries, and 15 extra lines in the console makes it a lot harder to figure out exactly where the problem is (at least for me).  I think that having the line number is enough, since I can always open the code to that point and see for myself.  Having a single line of code deprived of context isn't super useful imo.</span>
