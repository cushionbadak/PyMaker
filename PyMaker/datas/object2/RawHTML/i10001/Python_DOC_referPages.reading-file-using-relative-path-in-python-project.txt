<div class="post-text" itemprop="text">
<p>Say I have a python project that is structured as follows:</p>
<pre><code>project
    /data
        test.csv
    /package
        __init__.py
        module.py
    main.py
</code></pre>
<p><code>__init__.py</code>:</p>
<pre><code>from .module import test
</code></pre>
<p><code>module.py</code>:</p>
<pre><code>import csv

with open("..data/test.csv") as f:
    test = [line for line in csv.reader(f)]
</code></pre>
<p><code>main.py</code>:</p>
<pre><code>import package

print(package.test)
</code></pre>
<p>When I run <code>main.py</code> I get the following error:</p>
<pre><code> C:\Users\Patrick\Desktop\project&gt;python main.py
Traceback (most recent call last):
  File "main.py", line 1, in &lt;module&gt;
    import package
  File "C:\Users\Patrick\Desktop\project\package\__init__.py", line 1, in &lt;module&gt;
    from .module import test
  File "C:\Users\Patrick\Desktop\project\package\module.py", line 3, in &lt;module&gt;
    with open("../data/test.csv") as f:
FileNotFoundError: [Errno 2] No such file or directory: '../data/test.csv'
</code></pre>
<p>However, if I run <code>module.py</code> from the <code>package</code> directory I get no errors. So it seems that the relative path used in <code>open(...)</code> is only relative to where the originating file is being run from (i.e <code>__name__ == "__main__"</code>)? I don't want to use absolute paths. What are some ways to deal with this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Relative paths are relative to <a href="https://docs.python.org/3/library/os.html#os.chdir" rel="noreferrer">current working directory</a>.
If you do not your want your path to be, it must be absolute.</p>
<p>But there is an often used trick to build an absolute path from current script: use its <a href="https://docs.python.org/3/reference/import.html#__file__" rel="noreferrer"><code>__file__</code></a> special attribute:</p>
<pre><code>import csv
import os.path

my_path = os.path.abspath(os.path.dirname(__file__))
path = os.path.join(my_path, "../data/test.csv")
with open(path) as f:
    test = list(csv.reader(f))
</code></pre>
<p>Note, from python 3.4, <code>__file__</code> is always absolute for imported modules and you can drop the <code>os.path.abspath</code> part in this example. Not that it is strictly necessary, but it avoids surprises if you change the current working directory at some point and your module was imported using a relative path.</p>
</div>
<div class="post-text" itemprop="text">
<p>For Python 3.4+:</p>
<pre class="lang-py prettyprint-override"><code>import csv
from pathlib import Path

base_path = Path(__file__).parent
file_path = (base_path / "../data/test.csv").resolve()

with open(file_path) as f:
    test = [line for line in csv.reader(f)]
</code></pre>
</div>
<span class="comment-copy">As a sidenote, quoting from PEP8: <i>“Relative imports for intra-package imports are highly discouraged. Always use the absolute package path for all imports.”</i> Here, <code>from package.module import test</code>.</span>
<span class="comment-copy">Of course, if you're using Python 3.4+, you can just use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib.Path</a>: <code>Path(__file__).parent.resolve()</code></span>
