<div class="post-text" itemprop="text">
<p>My program should verify that n is a positive integer. If it isn't it should return string "Enter a positive integer."  If n is positive, it should create a file with the name given which contains n integers between -1000 and 1000 (random). I think this is how you open the file but I'm clueless and have no idea what to do next. </p>
<pre><code>    import random
    def createFile(myFile,n):
         myFile="fileName"
         outFile=open(myFile,"w")

         if n&lt;0:
             return "Enter a positive integer."
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>random.sample</code> to extract n values from a <code>range</code>. Wrap that in a list comprehension to convert integers to strings, adding newlines, and pass that to the <code>writelines</code> method.</p>
<pre><code>import random
def createFile(myFile,n):

     with open(myFile,"w") as outFile:
        outFile.writelines(["{}\n".format(x) for x in random.sample(range(-1000,1001),n)])

createFile("foo.txt",45)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok... The first thing would be playing with <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> (in Python3) or <code>raw_input</code> (in Python2) to ask the user for a number. I suggest you give it a try to this, typing a few negative numbers and a then a possitive number. You can even try to type something that can't be converted to <code>int</code> to see the exceptions happening:</p>
<pre><code>number = -1
while number &lt; 0:
    number_string = input("Enter a possitive number. ")
    number = int(number_string)
print("Yay! Got a positive number: %s" % number)
</code></pre>
<p>(that snippet is for Python3, in Python2, you should substitute <code>input</code> by <code>raw_input</code>)</p>
<p>Once you get your positive number in the <code>number</code> variable, you can use it to iterate, creating (and writing) a new entry in your file:</p>
<pre><code>with open("./stack_046.txt", "w") as f:
    while number &gt; 0:
        random_generated = random.randint(-1000, 1000)
        f.write(str(random_generated))
        f.write("\n")
        number -= 1
</code></pre>
<p>If you don't want to use the special keyword <code>with</code> (which you should, and it's very worth it that you investigate <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow">what it does</a>) you could always do:</p>
<pre><code>outFile = open("./stack_046.txt", "w")
while number &gt; 0:
    random_generated = random.randint(-1000, 1000)
    outFile.write(str(random_generated))
    outFile.write("\n")
    number -= 1
outFile.close()
</code></pre>
</div>
<span class="comment-copy">do you mean random numbers between -1000 and 1000 ?</span>
<span class="comment-copy">I don't think you should return a string from this function... Also, have you tried using the <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer"><code>random</code></a> module?</span>
<span class="comment-copy"><code>myFile="fileName"</code> overwrites filename which you use with <code>createFile("some_filename")</code></span>
<span class="comment-copy">Are you sure this is what you want to do?  This is a rather poor design for a function.  Among other things, when <b>n</b> &gt; 0, how does the file pointer get back to the calling function?  Even if that's the return value, it's not particularly useful to have the function return either a string or a file handle.</span>
