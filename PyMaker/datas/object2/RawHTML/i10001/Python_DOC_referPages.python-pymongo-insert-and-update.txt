<div class="post-text" itemprop="text">
<p>I'm trying to do an Insert and Update operation on my seat, without the insertion of duplicate data.</p>
<p>My collection has the id attribute that to which I made an operating <code>createIndex()</code> to pass the id attribute as unique. It works because every time I try to enter new data through my code in Python, appears the message:</p>
<pre><code>pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: test index: id_1 dup key: { : "400728540046889_1108783115908091" }
</code></pre>
<p>Ok, mongoDB is not letting enter data that is already stored in the bank. But I need my code to continue running ignoring the new data already ExSite in the bank and continue to enter new ones. The working order this:</p>
<p>Run the script - Insert command in the Bank - Error: Dup Key</p>
<p>and what I look for is:</p>
<p>Run the script - Insert command in the Bank - Error: Dup Key (Ignore this key) - Continues running the script looking for new data and inserting</p>
<p>I, tried to use the Update approach with upsert, using the command:</p>
<pre><code>db.myDB.update({'id':status['id']},status,True)
</code></pre>
<p>Here we have:</p>
<ul>
<li>Status: Contains my data</li>
<li>Id: Field in status, contains the ID of the text.</li>
</ul>
<p>The problem is: He's entering duplicate data with the same id, only now putting all under _id: ObjectId of mongoDB.</p>
<p>How can i use an approach that I can enter new data and not re-enter data that already exist in the bank?</p>
</div>
<div class="post-text" itemprop="text">
<p>try as follows:</p>
<pre><code>try:
    # insertion logic
except DuplicateKeyError as err:
    continue;  # will continue though DuplicateKeyError is raised.
</code></pre>
</div>
<span class="comment-copy">Did you try with error/exception handling? catch the error/exception and use continue statement in the catch block.</span>
<span class="comment-copy">No. As I am new to python I do not know how to create this type of error / exception</span>
<span class="comment-copy">go through the link for basics <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html</a>. you keep the code which is error prone (insert operation) in the try block and you catch the error/exception (here, DuplicateKeyError) in except block. in the except block, use continue (python keyword) to run the code in case of DuplicateKeyError.</span>
<span class="comment-copy">Like <code>try:      insert....     except DuplicateKeyError as err:     continue</code> ?</span>
<span class="comment-copy">Edit: Ok, the error is <code>pymongo.errors.DuplicateKeyError</code> But even in this case, the new data is not entered in the collection of mongo.</span>
<span class="comment-copy">The new data is being entered, but are not in order (newest -&gt; older). They are inserted into the middle of the collection</span>
<span class="comment-copy">why would that matters to you (the order in which docs are stored), where you retrieve the records in the order you want using the sort functionality.</span>
