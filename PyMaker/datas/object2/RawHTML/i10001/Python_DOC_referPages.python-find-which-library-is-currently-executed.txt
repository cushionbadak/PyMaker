<div class="post-text" itemprop="text">
<p>I need to find out the path for a particular library in my script.</p>
<p>I tried using :</p>
<pre><code>os.path.dirname(MODULE.__file__),
</code></pre>
<p>but it gives an attribute error:</p>
<pre><code>"type object 'MODULE' has no attribute  '__file__'."
</code></pre>
<p>Is there any other way to find the path for a particular module? I do not want to use <code>sys.path</code> as it gives the list of all the libraries.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have space between underscores <code>_ _</code> in <code>MODULE.__file__</code>. Call it like:</p>
<pre><code>&gt;&gt;&gt; import os, operator
&gt;&gt;&gt; os.path.dirname(operator.__file__) # where MODULE is "operator"
'/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the both <code>dirname()</code> and <code>basename()</code> if you are going to split the passed filename into components without taking into account the current directory. If you want to also consider the current directory, you have to do so explicitly.</p>
<p>To get the dirname of the absolute path, use</p>
<pre><code>os.path.dirname(os.path.abspath(__file__))
</code></pre>
<p>Note: Remove the spaces before <em>file</em>. As the response of @paxdiablo <a href="https://stackoverflow.com/questions/9271464/what-does-the-file-wildcard-mean-do">here</a>, when a <strong>module</strong> is <strong>loaded</strong> in <strong>Python</strong>, <strong>__file__</strong> is set to its name. You can then use that with other functions to find the directory that the file is located in.  </p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are not examining a module, but rather a <code>type</code> object. You might try:</p>
<pre><code>os.path.dirname(MODULE.__module__.__file__)
</code></pre>
<p><strong>caveat</strong></p>
<p>Usually you can use the <code>__file__</code> attribute to find out where the module is located, but as stated in the <a href="https://docs.python.org/2/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow">docs</a> (you have to scroll down a bit or ctrl + f and search for <code>__file__</code>) this attribute is not present.</p>
<blockquote>
<p>The <code>__file__</code> attribute is not present for C modules that are statically linked into the interpreter; for extension modules loaded dynamically from a shared library, it is the pathname of the shared library file.</p>
</blockquote>
<p>You can however use the <code>imp</code> module. It has the <a href="https://docs.python.org/3/library/imp.html#imp.find_module" rel="nofollow">find_module</a> function which will perform the same search that is performed when you actually import the module. This would lead to code like this:</p>
<pre><code>import imp

data = imp.find_module("MODULE")
# The path of the module is the second element of the tuple
pathname = data[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>os</code> module</p>
<pre><code>os.path.dirname(&lt;module&gt;.__file__)
</code></pre>
<p>An example:</p>
<pre><code>&gt;&gt;&gt; import os, requests
&gt;&gt;&gt;
&gt;&gt;&gt; requests.__file__
'/usr/lib/python2.7/site-packages/requests/__init__.pyc'
&gt;&gt;&gt;
&gt;&gt;&gt; os.path.dirname(requests.__file__)
'/usr/lib/python2.7/site-packages/requests'
&gt;&gt;&gt;
&gt;&gt;&gt; os.path.abspath(requests.__file__)
'/usr/lib/python2.7/site-packages/requests/__init__.pyc'
</code></pre>
<p><code>os.path.dirname</code> - just removes the last segment in the path i.e. <code>__init__.pyc</code> - in short it returns the <strong>project root</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually my code was something like :
    <code>from &lt;module&gt; import blah</code></p>
<p>I was trying to find the module path using :
<code>os.path.dirname(module.__file__)</code>
It gave an error saying "module" does not exist.
So I did :
   <code>import module</code> and then
    <code>from &lt;module&gt; import blah</code>
Then it worked !!</p>
</div>
<span class="comment-copy">it is (MODULE.__file__), and not (MODULE._ <i>file_</i>)- I had to give space between the underscores due to some error.</span>
<span class="comment-copy">I just submitted an edit to remove the spaces in <code>__file__</code> - If you format your code correctly (backticks for inline code, four spaces indent for code blocks) the underscores will display correctly and not cause italics/bold.</span>
<span class="comment-copy">I have something like :             " from numpy import NaN" If I want to find the location of NaN,               "os.path.dirname(Nan.__file__)" will give an error "no module called Nan! How to find location of Nan?</span>
