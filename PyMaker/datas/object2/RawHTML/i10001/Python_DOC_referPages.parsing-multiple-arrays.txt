<div class="post-text" itemprop="text">
<p>I have been attempting to organize and analyze a large amount of data in an array. However, my code does not appear to be functioning the way that I would like.</p>
<p>I am attempting to use arrays A (Data Array) and B (Reference Array) to output one reusable array, C.</p>
<p>Input arrays:</p>
<pre><code>A = [1 A B, 1 C D, 1 E F, 4 A B, 4 C D, 4 E F, 7 A B, 7 C D, 7 E F]

B = [1, 4, 7]
</code></pre>
<p>Output (Reusable) array:</p>
<pre><code>C = [1 A B, 1 C D, 1 E F] after clearing, this array becomes

C = [4 A B, 4 C D, 4 E F] after clearing, this array becomes

C = [7 A B, 7 C D, 7 E F]
</code></pre>
<p>This is what I have so far:</p>
<pre><code>#Creating the Reference Array. This works perfectly.
B = []
keywords = open("source.txt", 'r')
for line in keywords:
    if "1" in line or "4" in line or "7" in line:
    reference = line.split()
    rowName = reference[0]
    if rowName not in B:
        B.append(rowName)

#Creating reusable array. Does not work very well.
A = []
C = []
with open("source.txt", 'r') as temp:
    for line in temp:
        A.append(line)
for item in B:
    for item in line in A:
        print line
        C.append(line)
        print C
        del C[:]
</code></pre>
<p>Any help would be greatly appreciated, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the unifying characteristic is that the first field is the same for each go around of C, and making up my own data file:</p>
<pre><code>source.txt:
1 A B
1 C D
1 E F
4 A B
4 C D
4 E F
7 A B
7 C D
7 E F
</code></pre>
<p>We can build the groups as we go, reading the file only once:</p>
<pre><code>from operator import itemgetter
from itertools import groupby

lines = (line.strip().split() for line in open('source.txt'))
for leadingitem, group in groupby(lines, itemgetter(0)):
    C = list(group)
    print(C)
</code></pre>
<p>The output is</p>
<pre><code>[['1', 'A', 'B'], ['1', 'C', 'D'], ['1', 'E', 'F']]
[['4', 'A', 'B'], ['4', 'C', 'D'], ['4', 'E', 'F']]
[['7', 'A', 'B'], ['7', 'C', 'D'], ['7', 'E', 'F']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Cant you just use <code>filter</code> for this?</p>
<p>Given:</p>
<pre><code>&gt;&gt;&gt; A = ['1 A B', '1 C D', '1 E F', '4 A B', '4 C D', '4 E F', '7 A B', '7 C D', '7 E F'] 
</code></pre>
<p>You can filter by the beginning element of the string:</p>
<pre><code>&gt;&gt;&gt; filter(lambda s: s[0]=='1', A)
['1 A B', '1 C D', '1 E F']
&gt;&gt;&gt; filter(lambda s: s[0]=='4', A)
['4 A B', '4 C D', '4 E F']
&gt;&gt;&gt; filter(lambda s: s[0]=='7', A)
['7 A B', '7 C D', '7 E F']
</code></pre>
<p>Or, </p>
<pre><code>&gt;&gt;&gt; for e in ('1', '4', '7'):
...    print filter(lambda s: s.startswith(e), A)
... 
['1 A B', '1 C D', '1 E F']
['4 A B', '4 C D', '4 E F']
['7 A B', '7 C D', '7 E F']
</code></pre>
</div>
<span class="comment-copy">Your <code>A</code>, <code>B</code> &amp; <code>C</code> are <i>lists</i> (Python also has array objects that are a little different, and there are also Numpy arrays). As currently written, your <code>A</code> and <code>C</code> aren't valid Python. It looks like they're supposed to contain strings, so you should fix that. This task would be simpler using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a>.</span>
<span class="comment-copy"><code>for item in line in A</code> is invalid syntax.</span>
<span class="comment-copy">Fine, valid syntax that doesn't do at all what was intended here.</span>
<span class="comment-copy">@chthonicdaemon It's not exactly a syntax error. <code>line</code> contains a string. <code>item in line in A</code> is equivalent to <code>(item in line) and (line in A)</code>, which evaluates to a boolean (<code>True</code> or <code>False</code>), so <code>for item in line in A:</code> raises <code>TypeError: 'bool' object is not iterable</code>.</span>
<span class="comment-copy">@chthonicdaemon Agreed! :)</span>
<span class="comment-copy">Thanks for doing a <code>groupby</code> answer. I was going to do one after the OP fixed up their sample data... :)</span>
<span class="comment-copy">The example I provided might give off that impression but the amount of data that I'm working with is massive and hard coding every filter would be very inefficient.</span>
<span class="comment-copy">You don't have to hard code the filter. I am just showing an example of it's use.</span>
