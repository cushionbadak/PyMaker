<div class="post-text" itemprop="text">
<p>I'm using python re to match groups. When I use that with a + I'm seem to "lose" the first matches. Only the last one is seen by result.group(1). I do see them in result.group(0), but that doesn't really help. Is there a way to see all the matches that group(1) matched?</p>
<p>In the example below I'd like group(1) to print %one %two %three, not %three</p>
<p>(group(0) won't work because in the real world that's stuff after the initial match)</p>
<pre><code>import sys
import re

line = '%one %two %three'
re_rule = re.compile("\s*(%\w+\s*)+")

result = re_rule.match(line)
if result:
    print("DBG:", result.group(1))
    print("DBG:", result.group(0))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

line = '%one %two %three'
re_rule = re.compile("%(\w+)")
f
result = re_rule.findall(line)

print(result)
</code></pre>
<p>Output is:</p>
<pre><code>['one', 'two', 'three']
</code></pre>
<p>The trick here is using <code>findall</code>. <a href="https://docs.python.org/3/library/re.html#re.regex.findall" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#re.regex.findall</a></p>
<p>The <code>re</code> engine only keeps the last iteration of repeated capturing groups, but we can circumvent this behaviour by encapsulating a repeating non-capturing group in a capturing group like </p>
<pre><code>re_rule = re.compile("((?:%\w+\s*)+)")
</code></pre>
</div>
<span class="comment-copy">You wouldn't accept a list as <code>findall</code> gives? This seems to work: <code>re.compile("(%\w+)").findall(line)</code> (gives <code>['%one', '%two', '%three']</code>)</span>
<span class="comment-copy">Did you try to use <code>re_rule.findall()</code> instead of <code>match()</code>?</span>
<span class="comment-copy">same issue with group(0), there's stuff after the one, two, three that I don't want. I guess I should have added that to the example but I was trying to keep it simple</span>
<span class="comment-copy">So do you want one match containing the first three tokens that start with <code>%</code>? <code>"((?:%\w+\s?){3})"</code></span>
<span class="comment-copy">imagine the data line is something  like "word+ : other+"  I'd like an expression that matches word+.  imagine word+ is messy enough that a group is needed. Can I get at all the data that group(1) matches? my example up above group(1) only shows the last match of the group.</span>
<span class="comment-copy">@kdubs repeating capturing groups only match the last iteration.  Why don't you post a couple of lines of the real data and we'll come up with something</span>
<span class="comment-copy">@kdubs to get around that, you use a non-capturing group that repeats wrapped in a capturing group, like <code>"((?:%\w+\s*)+)"</code></span>
