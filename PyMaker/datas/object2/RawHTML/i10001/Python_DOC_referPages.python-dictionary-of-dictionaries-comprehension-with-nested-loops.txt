<div class="post-text" itemprop="text">
<p>I am starting to understand and implement dictionary comperhension. I am trying to build a dictionary with nested dictionaries like this:</p>
<blockquote>
<p>{serviceA:{ip_server1: flag, ip_server2:flag...}, serviceB{ip_server1: flag, ip_server_2: flag...etc}}</p>
</blockquote>
<p>I am having problems to build it as when getting the result It just throws me tha last element. I have tried many ways and all lead the same way. Here is the code I used :</p>
<p>DICTIONARY 1:</p>
<pre><code>services_dict = {key_service: value for key_service,value in config_file.iteritems() if key_service.startswith("s-")}
#It returns a dictionary in this form {service1: [list_of_flags]}
</code></pre>
<p>Then I have an external list that has the server IPs </p>
<blockquote>
<p>server_list = [S1, S2, S3, S4..etc]</p>
</blockquote>
<p>After this I want to use dic comprehension to build the complete dictionary:</p>
<pre><code>new_services_dict = { key1: {key2:fl} for key1, flag_list in corrected_dict.items() for key2, fl in zip(server_list, flag_list)}
</code></pre>
<p>The problem is that it only returns the last element of the ip list (1 element only)</p>
<blockquote>
<p>{'ServiceA': {'last_server_ip_in_list': 'Last_flag_in_list'}}</p>
</blockquote>
<p>I am not sure why it is not appending new values and just take sthe last item in the iteration. </p>
<p>Any help would be greatly appreciated. I have already tried many ways and i am not able to find out which part of the iteraiton i am missing.</p>
<p><strong><em>UPDATED INFO</em></strong></p>
<p>As requested in the coment below here is some sample data to clarify the question:
Let say we have to map a list of students that I have separated from a dictionary that contains the college subjects with the grades:</p>
<blockquote>
<p>services_dict = {math:['A','B','C','D'], Databases:['B','C','D', 'A']}
  students list = ['Jhon','Michael','Leslie','Lorraine']</p>
</blockquote>
<p>The grades are listed respectively from the student list, so that is not the problem (on which grade belongs to whom).</p>
<p>What is intended it to get a dictionary in the form:</p>
<blockquote>
<p>{'math':{'Jhon':'A', 'Michael':'B', 'Leslie':'C', 'Lorraine':'D'}, Databases:{'Jhon':'B', 'Michael':'C', 'Leslie':'D', 'Lorraine':'A'}}</p>
</blockquote>
<p>The problem i am getting is that <strong><em>new_services_dict</em></strong> is only returning:</p>
<blockquote>
<p>{'math:{'Lorraine':'D'}</p>
</blockquote>
<p>I hope this is clearer than the explanation above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well for starters, it looks like all the keys in <code>new_services_dict</code> will be the same since you have a nested for loop and not a nested dictionary comprehension, which I am assuming is what you want.</p>
<p>For example,</p>
<pre><code>&gt;&gt;&gt;{k1:{k2:v} for k1 in ['a','b'] for k2,v in zip(['aa','bb'],[1,2])}
{'b': {'bb': 2}, 'a': {'bb': 2}} # dictionaries are unordered
</code></pre>
<p>Here <code>k1</code> takes value of <code>'a'</code> then pauses until <code>k2,v</code> for loop iterates through all of the items before resuming. This just keeps reassigning <code>k1</code> to <code>{'bb':2}</code> since that's the last item in the <code>k2</code> iteration. This is why all of your values are probably coming out the same.</p>
<p>What you probably want is a nested dictionary comprehension that would look like this:</p>
<pre><code>&gt;&gt;&gt;{k1:{k2:v for k2,v in zip(['aa','bb'],[1,2])} for k1 in ['a','b']}
{'b': {'aa': 1, 'bb': 2}, 'a': {'aa': 1, 'bb': 2}}
</code></pre>
<p>Here, <code>k1</code> takes the value of <code>'a'</code> then pauses until the nested comprehension runs.</p>
<p>Check this out for more information and better explanation on <a href="https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions" rel="nofollow">nested comprehensions</a>. This is for list comprehensions, but the same logic applies.</p>
</div>
<span class="comment-copy">My first guess would be that <code>key1</code> is not what you think it is and they are all the same value, so you end up with one entry.  Post some actual sample data structures for corrected_dict, server_list and flag_list so we can poke around.</span>
<span class="comment-copy">I updated the question with a sample. Hope this is clearer. Anyhow, the answer below works just fine.</span>
<span class="comment-copy">Hey that is awesome, your answer is great. It worked just fine.  I missed that part of doing the nested dict. comperhension. I wuld vote your answer but stillnot got enough points jeje. Thanks for your help!!</span>
