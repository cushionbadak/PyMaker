<div class="post-text" itemprop="text">
<p>I am writing some tests to evaluate a rest service
my response is</p>
<p><code>[
  {
    "Title_Id": 1,
    "Title": "Mr",
    "TitleDescription": "Mr",
    "TitleGender": "Male",
    "Update_Date": "2012-07-21T18:43:04"
  },
  {
    "Title_Id": 2,
    "Title": "Mrs",
    "TitleDescription": "Mrs",
    "TitleGender": "Female",
    "Update_Date": "2012-07-21T18:42:59"
  },
  {
    "Title_Id": 3,
    "Title": "Sir",
    "TitleDescription": "Sir",
    "TitleGender": "Male",
    "Update_Date": null
  }
]</code></p>
<p>and need to create multiple instance of the class</p>
<pre><code>class TitleInfo:
  def __init__(self, Title_Id, Title, TitleDescription, TitleGender, Update_Date ):
    self.Title_Id = Title_Id
    self.Title = Title
    self.TitleDescription = TitleDescription
    self.TitleGender = TitleGender
    self.Update_Date = Update_Date
</code></pre>
<p>what I have done is </p>
<pre><code>def GetTitle(self):
  try:
    response = *#......"The string shown above"*
    if  isinstance(response, str) :
      Records = json.loads(response)
      RecTitles = []
      for num in range(0, len(Records)):
        RecTitle =TitleInfo(Records[num]['Title_Id'],Records[num]['Title'],Records[num]['TitleDescription'],Records[num]['TitleGender'],Records[num]['Update_Date'])
        RecTitles.append(RecTitle)
</code></pre>
<p>This is working fine ....I need to know is there more short and sweet way to do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could just unpack each <code>dict</code> and give that as an argument to <code>TitleInfo</code>:</p>
<pre><code>RecTitles = [TitleInfo(**x) for x in json.loads(response)]
</code></pre>
<p>Here's the explanation from <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">Python tutorial</a>:</p>
<blockquote>
<p>In the same fashion, dictionaries can deliver keyword arguments with the **-operator:</p>
</blockquote>
<pre><code>&gt;&gt;&gt; def parrot(voltage, state='a stiff', action='voom'):
...     print("-- This parrot wouldn't", action, end=' ')
...     print("if you put", voltage, "volts through it.", end=' ')
...     print("E's", state, "!")
...
&gt;&gt;&gt; d = {"voltage": "four million", "state": "bleedin' demised", "action": "VOOM"}
&gt;&gt;&gt; parrot(**d)
-- This parrot wouldn't VOOM if you put four million volts through it. E's bleedin' demised !
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As an aside, you generally want to avoid hand-coding validation code. Checkout an API documentation framework: swagger, RAML, API Blueprint. All of them have tooling for request/response validation.</p>
<p>The next step would be to use a testing framework like <a href="https://github.com/apiaryio/dredd" rel="nofollow">dredd</a>.</p>
</div>
