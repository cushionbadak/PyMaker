<div class="post-text" itemprop="text">
<p>I have a pipe delimited text file with records like:</p>
<pre><code>ABC|1234|10/26/2016|PQRS|02/27/2016|

GHI|4321|02/27/2016|UOIP|10/26/2016|
</code></pre>
<p>Looking for a way to change <code>mm/dd/yyyy</code> format to be changed to <code>yyyy-mm-dd</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use the following approach with <code>strptime</code> and <code>strftime</code> functions from <code>datetime</code> module:</p>
<pre><code>import datetime

# while iterating through the lines with a given format
# ...
line = 'ABC|1234|10/26/2016|PQRS|02/27/2016|'

line = '|'.join([item if k not in [2,4] else datetime.datetime.strptime(item, '%m/%d/%Y').strftime("%Y-%m-%d")
        for k, item in enumerate(line.split('|'))])

print(line)
</code></pre>
<p>The output(for exemplary line):</p>
<pre><code>ABC|1234|2016-10-26|PQRS|2016-02-27|
</code></pre>
<p><a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow">https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Without using any fancy trick, you can achieve it just by using <code>str.split()</code> as:</p>
<pre><code>&gt;&gt;&gt; my_string = "ABC|1234|10/26/2016|PQRS|02/27/2016|"
&gt;&gt;&gt; mm, dd, yy = my_string.split("|")[2].split("/")
&gt;&gt;&gt; print "{}-{}-{}".format(yy, mm, dd)
2016-10-26
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also do a regex replacement:</p>
<pre><code>import re

string = """ABC|1234|10/26/2016|PQRS|02/27/2016|

GHI|4321|02/27/2016|UOIP|10/26/2016|"""

dates = re.sub('(\d{1,2})/(\d{1,2})/(\d{4})', '\g&lt;3&gt;/\g&lt;1&gt;/\g&lt;2&gt;', string)

print dates
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably not the cleanest way to do it, but you can try the following:</p>
<pre><code>my_string = "ABC|1234|10/26/2016|PQRS|02/27/2016|"

#Split the string with the '|' character and return a list.
string_elements=my_string.split('|')

#The item 2 of the list (which is the first date) is split according to the '/' character
string_elements[2]=string_elements[2].split('/')
#The item 2 is transformed by making a rotation of the element to have the format yyyy-mm-dd and is joined on the character '-'    
string_elements[2]='-'.join(string_elements[2][-1:] + string_elements[2][:-1])

#Same as above for teh item 4 which is the second date
string_elements[4]=string_elements[4].split('/')
string_elements[4]='-'.join(string_elements[4][-1:] + string_elements[4][:-1])

#The list of item is joined with the '|' character to reform a string
my_transformed_string='|'.join(string_elements)
print my_transformed_string
</code></pre>
<p>The result is:</p>
<pre><code>ABC|1234|2016-10-26|PQRS|2016-02-27|
</code></pre>
</div>
<span class="comment-copy">are there linebreaks(<code>\n</code>) between the lines?</span>
<span class="comment-copy">Yes, there is a linebreak at the end of every row</span>
<span class="comment-copy">@Kshitij, as for your claim : at first, you have changed the initial format, secondly - it works fine and gives the output <code>1111222|2016-10-26|8888-12-31|ABCD0007|ABCDEFGH|</code>. Check your code for errors</span>
<span class="comment-copy">Yes.. My bad... It's working fine now. Thanks !</span>
<span class="comment-copy">How to change the older date format with the new format for all the occurrences of date values in a row?</span>
