<div class="post-text" itemprop="text">
<p>I am looking to convert the string <code>"september 20 2010"</code> to a python <a href="https://docs.python.org/3/library/datetime.html#available-types" rel="nofollow"><code>datetime.date</code></a> object using <a href="http://crsmithdev.com/arrow/" rel="nofollow"><code>arrow</code></a>. </p>
<p>I have written functions to replace portions of the text and ended up with <em>9/20/2016</em> but I want <em>YYYY-MM-DD</em> format and can't seem to get <code>arrow</code> to recognise my string and convert it to a python <code>datetime.date</code> object (without any time).</p>
<p>What has worked and what hasn't.</p>
<blockquote>
<p>arrow.get('september 20 2010', '%B %d %Y')</p>
</blockquote>
<p>this doesn't work for me I get an error: <code>ParserError: Failed to match '%B %(?P&lt;d&gt;[1-7]) %Y'</code> when parsing the string <code>"september 20 2010"</code> </p>
<p>However when I manipulate the string and then use <code>arrow.Arrow(y,m,d).date()</code>, the result is a <code>datetime.date(2016, 9, 20)</code> object.</p>
<p>I just can't convert it to any other format using <a href="http://crsmithdev.com/arrow/#format" rel="nofollow"><code>.format('dddd-DD-MMMM-YYYY')</code></a> which would return <em>Monday 20 Septemb 2010</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://crsmithdev.com/arrow/" rel="nofollow"><code>arrow</code></a>, you have to match the exact syntax of your string, here is the list of the <a href="http://crsmithdev.com/arrow/#tokens" rel="nofollow">associated token</a>.</p>
<p><code>arrow.get('September 20 2010', 'MMMM D YYYY')</code></p>
<p><em>Note</em>: In this very case, there is only one <code>D</code> because it cover the number with one or two digits <em>1, 2, 3... 29, 30</em> while <code>DD</code> cover the number with two digits <em>only</em> <em>01, 02, 03 ... 29, 30</em></p>
<p>Once you get your arrow object, you can display it however you like using <a href="http://crsmithdev.com/arrow/#format" rel="nofollow">format()</a> :</p>
<pre><code>ar = arrow.get('September 20 2010', 'MMMM D YYYY')
print(ar.format('YYYY-MM-DD')) # 2010-09-20
</code></pre>
<p><strong>EDIT</strong></p>
<p>To answer your comment, <code>ar</code> is an Arrow object and you can check every method it contained with <a href="https://docs.python.org/3.6/library/functions.html#dir" rel="nofollow"><code>dir</code></a> </p>
<p><code>Arrow</code> have a method <code>date()</code> which returns a <code>datetime.date</code> object.</p>
<p>Now, if you want to use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html" rel="nofollow"><code>pandas</code></a>, that's easy:</p>
<pre><code>import array
import pandas as pd

ar = arrow.get('September 20 2010', 'MMMM D YYYY')
df = pd.to_datetime(ar.date())
print(df) # 2010-09-20 00:00:00
</code></pre>
</div>
<span class="comment-copy">This doesnt work <code>arrow.get('september 20 2010', '%B %d %Y')</code> ?</span>
<span class="comment-copy">thanks @Max the ar object is of type unicode is there a way to pass this to pandas so that pandas interprets it as a date? I have this in a function and want to return a date object to a column in a pandas dataframe.</span>
<span class="comment-copy">is there anything I can do to account for the difference in the date string between 9 and 19 which is two digits (which you need to explicitly tell archer what format the string is in) before you can convert it to any other format as you mention). At the moment 'MMMM D YYYY' breaks when I try and feed more than one url through it. They are all september 20 2010 or september 9 2010 or august 4 2011 etc. Always long month name, (1-2) digit day, and 4 digit year.</span>
<span class="comment-copy">See in my answer the <a href="http://crsmithdev.com/arrow/#tokens" rel="nofollow noreferrer">token associated</a>, they cover several use cases. I don't think you have to change anything to cover 9 or 20 but please have a look at the docs. It is very easy to understand!</span>
<span class="comment-copy">I updated my answer to make you understand the relevance of the tokens and also to avoid the visitors to get confused.</span>
