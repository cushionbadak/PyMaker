<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7980288/splitting-large-text-file-by-a-delimiter-in-python">Splitting large text file by a delimiter in Python</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I have been trying to write the following function:</p>
<pre><code>def track(filepath,n1,n2)
</code></pre>
<p>This function is meant to operate on a file with the following format:</p>
<pre><code>-BORDER-
text
-BORDER-
text
-BORDER-
text
-BORDER-
</code></pre>
<p>How do I tell the function to operate on this file path and more precisely on the text inside each border?</p>
</div>
<div class="post-text" itemprop="text">
<p>Write a generator, that counts detect border lines and use <code>groupby</code> to separate these blocks:</p>
<pre><code>from itertools import groupby

BORDER = '--border--'

def count_border(lines, border):
  cnt = 0
  for line in lines:
    if line.strip() == border:
        cnt += 1
    else:
        yield cnt, line

with open('file') as lines:
    for _, block in groupby(count_border(lines, BORDER), lambda (c,_): c):
        block = [line for _, line in block]
        print(block)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following approach would read your file in, and give you a list of non border lines:</p>
<pre><code>from itertools import groupby

with open('input.txt') as f_input:
    for k, g in groupby(f_input, lambda x: not x.startswith('-BORDER-')):
        if k:
            print([line.strip() for line in g])
</code></pre>
<p>So if your input file was:</p>
<pre><code>-BORDER-
text
-BORDER-
text
-BORDER-
this is some text
with words 
on different lines
-BORDER- 
</code></pre>
<p>It would display the following output:</p>
<pre><code>['text']
['text']
['this is some text', 'with words', 'on different lines']
</code></pre>
<p>This works by reading your file in line by line, and using Python's <a href="https://docs.python.org/3/library/itertools.html?highlight=groupby#itertools.groupby" rel="nofollow"><code>groupby</code></a> function to group lines matching a given test. In this case the test is whether or not the line starts <code>-BORDER-</code>. It returns all following lines which return the same result. The <code>k</code> is the test result, and the <code>g</code> is the group of matching lines. So if the test result is <code>True</code>, it means it did not start with <code>-BORDER-</code>. </p>
<p>Next, as each of your lines has a newline, a list comprehension is used to strip this from each of the returned lines.</p>
<hr/>
<p>If you wanted to count the words (assuming they are delimited by spaces) then you could do the following:</p>
<pre><code>from itertools import groupby

with open('input.txt') as f_input:
    for k, g in groupby(f_input, lambda x: not x.startswith('-BORDER-')):
        if k:
            lines = list(g)
            word_count = sum(len(line.split()) for line in lines)
            print("{} words in {}".format(word_count, lines))
</code></pre>
<p>Giving you:</p>
<pre><code>1 words in ['text\n']
1 words in ['text\n']
9 words in ['this is some text\n', 'with words \n', 'on different lines\n']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To retrieve the text from your text file you can do as follows :</p>
<pre><code>with open("/your/path/to/file", 'r') as f:
    text_list = [line for line in f.readlines() if 'BORDER' not in line]
</code></pre>
<p><code>text_list</code> will contain all the text lines you are looking for. You can, if needed, strip the lines using <code>.strip()</code></p>
</div>
<span class="comment-copy">Is your file a <code>.txt</code> file ? and is there always only one text line between your Border lines ?</span>
<span class="comment-copy">yes, but between the  border lines i would always have more text lines</span>
<span class="comment-copy">If i get it : you might have many text lines between your Border lines and your Border lines are all the same ?</span>
<span class="comment-copy">yeah, the start and the end of the text is marked by a line which contains only the word -BORDER-</span>
<span class="comment-copy">and how do i operate on the -BORDER- text -BORDER- of the file?</span>
<span class="comment-copy">If you take the <code>if</code> line out, it will show you all lines grouped. Or if you take the <code>not</code> out, it would only work on the <code>-BORDER-</code> lines. Alternatively, you could add an <code>else</code> line to the <code>if</code>.</span>
<span class="comment-copy">could i also count words that match given property in each "paragraph" or in all the paragraphs?</span>
<span class="comment-copy">I have added a suitable example to the answer to help get you started.</span>
<span class="comment-copy">you can also strip the line in the list comprehension, but I don't know how the strip would look like. I guess the line might end with a <code>'\n'</code>.</span>
<span class="comment-copy">if i already have my file in one of my pc directories, is it better to "load" the file or not?</span>
<span class="comment-copy">What do you mean by 'load' it ? You can just read it using the context manager <code>with open(...) as f </code></span>
<span class="comment-copy">don't mind, i I got mixed up</span>
