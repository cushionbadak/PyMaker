<div class="post-text" itemprop="text">
<p>I have the following list:</p>
<pre><code>new_pets = ['Bobcats', 'dog', 'cat', 'turtle', 'monkey', 'goat', 'ferret', 'pig', 'Chipmunks', 'Capybaras', 'Ducks']
</code></pre>
<p>And the following pandas dataframe:</p>
<pre><code>In: df

0   Cats
1   Lizard
2   Dog
3   Baby Ferrets
4   Pig
5   Armadillo
</code></pre>
<p>How can I get into a new column the elements of <code>new_pets</code> which appear in <code>df</code>  (*)?:</p>
<pre><code>In: df['new_col']

0   True
1   False
2   True
3   True
4   True
5   False 
</code></pre>
<p>From the docs, I noticed that this can be done with <a href="http://pandas.pydata.org/pandas-docs/version/0.18.1/generated/pandas.Series.str.contains.html" rel="nofollow">contains()</a>, so I tried the following:</p>
<pre><code>result = df[df['pets'].str.contains(x, case = False) for x in new_pets]
</code></pre>
<p>However, I am not sure if this is possible. For instance, is it possible to match <code>Baby Ferrets</code> with <code>ferret</code>, since <code>Ferrets</code> is similar to <code>ferret</code>?. For that constraint, I tried to use <code>case=False</code>, but I am not getting the expected outcome (*). Any idea of how to retrive such strings in a new dataframe?.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can first join values by <code>|</code> (regex <a href="https://docs.python.org/3/library/re.html" rel="nofollow">or</a> is <code>|</code>) and convert all values to lower-case by <code>lower</code> - output is in <code>joined</code>. Then lowercase all values in column by <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.lower.html" rel="nofollow"><code>str.lower</code></a> and call <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.contains.html" rel="nofollow"><code>str.contains</code></a> with <code>joined</code> for checking if <code>bobcats</code> or <code>dog</code> or <code>dog</code> ... is in column:</p>
<pre><code>print (df)
           pets
0          Cats
1        Lizard
2           Dog
3  Baby Ferrets
4           Pig
5     Armadillo

joined = '|'.join(new_pets).lower()

df['new_col'] = df['pets'].str.lower().str.contains(joined)
print (df)
              a new_col
0          Cats    True
1        Lizard   False
2           Dog    True
3  Baby Ferrets    True
4           Pig    True
5     Armadillo   False
</code></pre>
</div>
<span class="comment-copy">Thanks for the help, could you provide an explanation?... I also check that it was possible to use the <code>'|'.join(new_pets).lower()</code>. However, I do not understand it...</span>
<span class="comment-copy">Thank you very much jez!</span>
<span class="comment-copy">Here in <code>df.a.str</code> <code>a</code> refers to what?... Also what about if my <code>df</code> has more columns, and I want to just focus in matching a specific one?. Should I do something like: <code>df['new_col'] = df['sepecific_col'].a.str.lower().str.contains(joined)</code>?</span>
<span class="comment-copy">sorry, it is column name. If use more as one word use selecting by<code>[]</code> :  <code>df['column 1']</code></span>
<span class="comment-copy">So you need <code>df['new_col'] = df['sepecific_col'].str.lower().str.contains(joined)</code></span>
