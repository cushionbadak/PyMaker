<div class="post-text" itemprop="text">
<pre><code>    studentList=[]

reading=True

readList=open("test10.4.3.txt","r")

for item in readList:
    studentList.append(item)
for item in studentList:
    print(item)
input("\nPress ENTER")

menulist=print( "1. Print the list",
        "2. Add a name to the list",
        "3. Remove a name from the list",
        "4. Change an item in the list",
        "9. Quit")

def menu():
    aMenu=input("please select a number")
    return aMenu
t=True
while t:
    target=menu()
    if target=="1":
        print(studentList)
    if target=="2":
        Addname=input("Type in a name and major to add:")
        list=list.append(Addname)
        print(menulist)
    if target=="3":
        Removename=input("What name and major would you like to remove:")
        list=list.remove(Removename)
        print(menulist)
    if target=="4":
        Changename=input("What name and major would you like to change:")
        changetoname=input("What is the new name and major:")
        list=list.replace(Changename, changetoname)
        print (menulist)

    if target=="9":
        t=False
        print("good bye")
    else:
        print (menulist)
</code></pre>
<p>So I am trying to make changes to a list that is stored in a txt file. Inside the txt file there are 3 names and those 3 peoples academic majors.Iv written a program that should allow me to make changes (I think, I'm very new to all of this) but I cant get it to run for example when I input 2 to add a name and major it gives me </p>
<pre><code>Traceback (most recent call last):
  File "D:/py/Scripting/class.py", line 52, in &lt;module&gt;
    list=list.append(Addname)
TypeError: descriptor 'append' requires a 'list' object but received a 'str'

Process finished with exit code 1
</code></pre>
<p>or when I input 3 to remove a name it gives me </p>
<pre><code>Traceback (most recent call last):
  File "D:/py/Scripting/class.py", line 56, in &lt;module&gt;
    list=list.remove(Removename)
TypeError: descriptor 'remove' requires a 'list' object but received a 'str'
</code></pre>
<p>when I input 4 I get </p>
<pre><code>Traceback (most recent call last):
  File "D:/py/Scripting/class.py", line 56, in &lt;module&gt;
    list=list.remove(Removename)
TypeError: descriptor 'remove' requires a 'list' object but received a 'str'
</code></pre>
<p>as you can see the errors are more less the same. I cant seem to figure out what I'm doing wrong. Any ideas or examples would be appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>I fixed most of your errors and added some suggestions and explanations as comments in the code.</p>
<pre><code>studentList=[]
# This variable doesn't appear to be used anywhere
reading=True

readList=open("test10.4.3.txt","r")

for item in readList:
    # I added a call to the .strip() method for the item which removes
    # whitespace in front of and at the end of the string. Effectively
    # this removes the linebreak from the file
    studentList.append(item.strip())
for item in studentList:
    print(item)
input("\nPress ENTER")

# I reformated the output of the menu a little bit, it is now a string
# with a few linebreaks (\n) --&gt; You might want to call this variable menu
# now as it is no longer a list (although it wasn't a list before)
menulist="1. Print the list\n2. Add a name to the list\n3. Remove a name from the list\n4. Change an item in the list\n9. Quit"
# print should be a separate statement
print(menulist)

def menu():
    # I added a space after number, which looks better in the output
    # (In my opinion) --&gt; Gap between your text and the thing the user enters
    aMenu=input("please select a number ")
    return aMenu

t=True
while t:
    target=menu()
    if target=="1":
        print(studentList)
    if target=="2":
        # Added a space again
        Addname=input("Type in a name and major to add: ")
        # You want to append it the the studentList
        # --&gt; you need to call append on that list
        studentList.append(Addname)
        # This print statement is redundant, since the menu will be
        # printed by the else case of the if target=="9" conditions
        # --&gt; The menu will be printed twice
        print(menulist)
    if target=="3":
        # Added a space again
        Removename=input("What name and major would you like to remove: ")
        # You want to remove the name from the studentList
        # --&gt; you need to call remove on that list
        studentList.remove(Removename)
        # This print statement is redundant, since the menu will be
        # printed by the else case of the if target=="9" conditions
        # --&gt; The menu will be printed twice
        print(menulist)
    if target=="4":
        # Added spaces again
        Changename=input("What name and major would you like to change: ")
        changetoname=input("What is the new name and major: ")
        # You want to replace values inside of the studentList
        # --&gt; you would need to call some sort of replace function on that list
        #     unfortunately lists don't actually have a replace function
        # --&gt; I don't want to cheat you out of the learning experience, you
        #     already used functions which would allow you to achieve a replace-like
        #     behaviour.
        # studentList.replace(Changename, changetoname)

        # This print statement is redundant, since the menu will be
        # printed by the else case of the if target=="9" conditions
        # --&gt; The menu will be printed twice
        print (menulist)

    if target=="9":
        t=False
        print("good bye")
    else:
        print (menulist)
</code></pre>
<p>I didn't comment on the coding style, since you are clearly a beginner. However I would suggest you have a look at some of the following concepts</p>
<ul>
<li><p><code>if</code>, <code>elif</code>, <code>else</code> - the way they differ and can be used in combination to control the flow of your code (<a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">docs</a>).</p></li>
<li><p><code>list</code>s in python - you appear to have misunderstood parts of the how they actually work, hopefully the <a href="https://docs.python.org/3.5/tutorial/datastructures.html" rel="nofollow noreferrer">docs</a> can clear this up.</p></li>
<li><p>Reading and writing from and to files in the <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs</a>.</p></li>
</ul>
<p><strong>Note:</strong> As I pointed out in the comment in the code, lists don't have a <code>replace</code> function. I chose not do disclose how you could achieve the behaviour of such a <code>replace</code>-function, since this is something you should be able to figure out yourself - you have already used all functions that would allow you to do something like that.</p>
</div>
<span class="comment-copy">don't use <code>list</code> as a variable, and append/remove are in-place. Don't assign the result you'll destroy your list.</span>
<span class="comment-copy"><code>print</code> returns <code>None</code></span>
<span class="comment-copy">you may need to cleanup couple of things there. <code>studentList</code> is only read once, but you don't refer to that when appending/removing items. And yes, don't use <code>list</code> as a variable name.</span>
<span class="comment-copy">thank you so much!! however I have noticed that none of the changed or additions I make are made to the txt file where the names and majors are stored. idea on why that is happening and how I might be able to fix it?</span>
<span class="comment-copy">Yes I do, you are only reading from the file and don't ever write your changes back to it. Have a look at the last <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">link</a> I provided about reading and writing from and to files - the python docs give a few examples on how to do that.</span>
<span class="comment-copy">so if I change readList=open("test10.4.3.txt","r+") instead of just r would that not work since r+ according to the docs you just linked me to will read and write?</span>
<span class="comment-copy">It is a start - <code>open</code> returns a handle to the file and <code>r</code> or <code>r+</code> determines what operations are allowed on that file. By using <code>r+</code> you gain the <b>ability</b> to write to that file as well, but you need to do this explicitly. You should google for tutorials on reading from and writing to files, there are plenty to choose from if the docs don't suffiece. This isn't really something I can completely explain in one comment ;-)</span>
