<div class="post-text" itemprop="text">
<p>I have a long list of list, I want to check whether the last item of each list inside the big list if they are equal, if they are then I want to create a new list adding them in order and adding the item before  the item "^" into a new list of list, for example, I have the following format ( this is just an example, the data can be changed each time so the code should be generlized):</p>
<pre><code>[[ " a", "b" , "^", "xxx"]
 [ " c", "d", "e" , "^", "xxx"]
 [ " a", "h" , "^", "nnn"]
 [ " c", "d", "s" , "^", "nnn"]]
</code></pre>
<p>I want to return:</p>
<pre><code>list1 = [ "xxx", "nnn"]
</code></pre>
<p>corresponding in index to the created list of list:</p>
<pre><code>list1= [ [b , e] , [ h, s] ]
</code></pre>
<p>taking the names right before the item of "^" and adding everything corresponding to the index in  list1, I don't know how to do the logic but my trial:</p>
<pre><code> def patterns(file_of_context):
      ### the original list of list
     list_of_context= context_file(file_of_context)
     for a in list_of_context:
         for b in a:
             if a[-1]==
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.5/library/collections.html#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a> where key is the last element from nested list and value is <code>list</code> containing the items before <code>'^'</code>:</p>
<pre><code>from collections import OrderedDict

l = [
    [" a", "b", "^", "xxx"],
    [" c", "d", "e", "^", "xxx"],
    [" a", "h", "^", "nnn"],
    [" c", "d", "s", "^", "nnn"]
]

res = OrderedDict()
for x in l:
    try:
        index = x.index('^')
        if index &gt; 0:
            res.setdefault(x[-1], []).append(x[index - 1])
    except ValueError:
        pass

print(res.keys())
print(res.values())
</code></pre>
<p>Output:</p>
<pre><code>['xxx', 'nnn']
[['b', 'e'], ['h', 's']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The desired output can be achieved with <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>groupby</code></a> from <code>itertools</code> and <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow"><code>reduce</code></a> from <code>functools</code>:</p>
<pre><code>from functools import reduce
from itertools import groupby

list_of_lists = [[' a', 'b', '^', 'xxx'],
 [' c', 'd', 'e', '^', 'xxx'],
 [' a', 'h', '^', 'nnn'],
 [' c', 'd', 's', '^', 'nnn']]

final_list = []

for i in groupby(list_of_lists, key=lambda x: x[-1]):
  final_list.append(list(reduce(lambda x,y: (x[x.index("^")-1],y[y.index("^")-1]), i[1])))


print(list(set(map(lambda x: x[-1], list_of_lists))))

print(final_list)
</code></pre>
<p>I hope this helps.</p>
</div>
<span class="comment-copy">Why is <code>'nnn'</code> in the result? There's only one of those in the input (there's <code>' nnn'</code> though).</span>
<span class="comment-copy">Should <code>' xxx'</code> &amp; <code>'xxx'</code> (and <code>' nnn'</code> &amp; <code>'nnn'</code>) considered the same or not?</span>
<span class="comment-copy">@niemmi , no   they should be diff</span>
<span class="comment-copy">Could you then check your example data? All the 4 last items in the sublists are different.</span>
<span class="comment-copy">for the last item in the first list ( the original), it's "xxx" thus we added the item right before "^", thus it's ["b"], when we found "xxx" again, we added "e" also to the sublist and visa versa @niemmi</span>
