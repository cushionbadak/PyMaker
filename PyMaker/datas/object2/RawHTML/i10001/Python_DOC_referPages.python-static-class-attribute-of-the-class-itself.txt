<div class="post-text" itemprop="text">
<p>I recently made a class. Let's say that the class is declared as below.</p>
<pre><code>class MyClass(object):
    def __init__(self, modifiers):
        ....
</code></pre>
<p>The problem is, I want to create constant instances of the class:</p>
<pre><code>class MyClass(object):
    def __init__(self, modifiers):
        ....

    CONSTANT_MEMBER_1 = MyClass(my_modifiers)
    CONSTANT_MEMBER_2 = MyClass(my_modifiers)
</code></pre>
<p>Unfortunately, Python won't allow me to do so, with error:</p>
<pre><code>E    NameError: global name 'MyClass' is not defined
</code></pre>
<p>Any solution for this problem?</p>
<p>One alternative would be creating a 'static' method for the class that will return a same object each time it's called (e.g., <code>MyClass.CONSTANT_MEMBER_1()</code>). But I think I would still prefer to access it using <code>MyClass.CONSTANT_MEMBER_1</code>.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can assign to class variables right after the class has been defined.</p>
<pre><code>class MyClass(object):
    def __init__(self, modifiers):
        ....

MyClass.CONSTANT_MEMBER_1 = MyClass(my_modifiers)
MyClass.CONSTANT_MEMBER_2 = MyClass(my_modifiers)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe make use of inheritance and <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow">custom descriptors</a>, <a href="http://nbviewer.jupyter.org/urls/gist.github.com/ChrisBeaumont/5758381/raw/descriptor_writeup.ipynb" rel="nofollow">Python Descriptors Demystified</a></p>
<pre><code>class MyClass(object):
    def __init__(self, color):
        self.color = color
    def __repr__(self):
        return 'I am {}'.format(self.color)

class Foo(MyClass):
    ConstantMember_blue = MyClass('blue')
    ConstantMember_red = MyClass('red')

f = Foo('green')

&gt;&gt;&gt; f
I am green
&gt;&gt;&gt; f.ConstantMember_blue
I am blue
&gt;&gt;&gt; f.ConstantMember_red
I am red
&gt;&gt;&gt; Foo.ConstantMember_blue
I am blue
&gt;&gt;&gt; Foo.ConstantMember_red
I am red
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">Can you explain the use case a little more? A "static attribute or method" has a specific meaning here, but you seem to be using "static member" to refer to: "an instance of the class that never changes"</span>
<span class="comment-copy">@brianpck yes, I meant to refer to "constant instances of the class". Edited. Thanks.</span>
<span class="comment-copy">Downvote explanations would be nice.</span>
