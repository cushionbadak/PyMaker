<div class="post-text" itemprop="text">
<p>I have these 2 simple functions to sum and count list elements without using standard python commands like <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow">sum()</a> and <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow">len()</a>.</p>
<pre><code>#sum the elements of a list 
def sum_list(x):
  n=0
  for i in x:
      n= n+i
  return n
</code></pre>
<p>ex. if x=[1,5] - should return 6</p>
<pre><code>#count the number of elements in a list 
def count_list(x):
  n=0
  for i in x:
      n= n+1
  return n
</code></pre>
<p>ex. if x=[1,5] - should return 2</p>
<p>The problem is I cant understand how they work. More specifically:</p>
<p>1) What does n=0 represents before the loop? Is it some kind of starting point?</p>
<p>2) After that, I can understand what the for-loop does, but I cant get what the n= n+i and n=n+1 actually means. What is "n" in this case, and why if I add "i" (n+i) gives the sum while adding "1" (n+1) gives the length of the list?</p>
</div>
<div class="post-text" itemprop="text">
<p>Make use of print statements to help you understand how the loop is working. (copy paste the code and run)
To answer you questions</p>
<p>n -&gt; is the variable that holds the values of <code>n+i</code> and <code>n+1</code> , so value of <code>n+i</code> and <code>n+1</code> gets stored in <code>n</code> (The code moves left to right). You can think of it as a starting point</p>
<p>so <code>n+i</code> or <code>n+1</code> does the computation needed and stores the number in <code>n</code> and then returns it in the next step.</p>
<p>To answer you question "why if I add "i" (n+i) gives the sum while adding "1" (n+1) gives the length of the list?" : <code>i</code> will keep changing with every loop iteration but in <code>n+1</code> , only <code>n</code> changes everytime. Therefore sum function gives you the sum and the count function gives you the length.</p>
<p>You can use <code>len</code> to get the number of elements in a list</p>
<p>Hope this helps.</p>
<p>I have added more print statements to help you understand it better, run the code and see if it helps.</p>
<pre><code>def sum_list(x):
    print("SUM FUNCTION START")    
    n = 0
    for i in x:
        print("n: ",n)
        print("i: ",i)        
        n = n + i
        print("n =",n,",","i= ",i)
        print("n + i = ",n)
        print()
    print("SUM FUNCTION END")
    print()
    return n

def count_list(x):
    print()
    print("COUNT FUNCTION START")
    n = 0
    for i in x:

        print("n: ",n)
        print("i: ",i)        
        print("n =",n,",","i= ",i)
        print("n + 1 = ",n)
        n = n + 1
        print()
    print("COUNT FUNCTION END")                
    return n

#EASIER WAY TO COMPUTER LENGTH OF THE LIST USING len FUNCTION        
def count_list2(x):
    return len(x)

def main():
    x = [1,2,3,4,5]
    answer = sum_list(x)
    print("Sum : ", answer)
    elements = count_list(x)
    elements2 = count_list2(x)
    print()
    print("There are", elements, "elements in the list")
    print()
    print("There are", elements2, "elements in the list")
main()
</code></pre>
</div>
<span class="comment-copy">Sounds like you were taught programming too quickly and you need to revise the basics. Consider going through <a href="https://www.codecademy.com/learn/python" rel="nofollow noreferrer">codecademy</a> or some other resource from scratch. Also check out <a href="http://thonny.cs.ut.ee/" rel="nofollow noreferrer">thonny</a> to help you visualise  what the code is doing.</span>
<span class="comment-copy">This is very basic question, which also probably won't be helpful to other people. You may want read some basic tutorials about <a href="http://www.tutorialspoint.com/python/python_variable_types.htm" rel="nofollow noreferrer">variables</a> and <a href="http://www.tutorialspoint.com/python/python_for_loop.htm" rel="nofollow noreferrer">loops</a>.</span>
<span class="comment-copy">Well.. you are absolutely right Alex Hall. They are trying to teach us programming in Python in 4 weeks and we are running like hell..!</span>
<span class="comment-copy">Thanks for the links both Alex Hall and DeFazer!</span>
