<div class="post-text" itemprop="text">
<p>I have a problem I should extract data from multiple XML files and upload them to CSV ... When it comes to a single XML file I can extract and load the data in CSV but when it is a directory of XML files I can only see the names but nothing happens when the parameter passes. I enclose the code, please help me.</p>
<pre><code>import csv 
import xml.etree.ElementTree as ET
import os


path = r"C:\\Users\ADMIN\Desktop\prog"
string = []


for filename in os.listdir(path):
    if not filename.endswith('.xml'):continue
    fullname=os.path.join(path,filename)
    print(fullname)
    string.append(fullname)



tree= ET.parse(fullname)
root = tree.getroot()


csvfile=open('prova.csv','w')
csv_writer = csv.writer(csvfile)


PrimoFor=[]
SecondoFor=[] 
TerzoFor=[]
QuartoFor=[]


print("Dati Riepilogo per aliquota IVA e natura")
for datir in root.iter('DatiRiepilogo'):
        for element in datir:
            print(element.tag,element.text)
            PrimoFor.append(element.text)

for CedentePrestatore in root.iter('CedentePrestatore'):
    for TagFiglioCedentePrestatore in CedentePrestatore:
            for TagNipoteCedentePrestatore in TagFiglioCedentePrestatore:
                for ProNipoteCedentePrestatore in TagNipoteCedentePrestatore:
                    print(ProNipoteCedentePrestatore.tag,ProNipoteCedentePrestatore.text)
                    PrimoFor.append(ProNipoteCedentePrestatore.text)
for DatiGeneraliDocumento in root.iter('DatiGeneraliDocumento'):
    for FiglioDatiGeneraliDocumento in DatiGeneraliDocumento:
        if(FiglioDatiGeneraliDocumento.tag!='Divisa'):
            print(FiglioDatiGeneraliDocumento.tag,FiglioDatiGeneraliDocumento.text)
            PrimoFor.append(FiglioDatiGeneraliDocumento.text)
for DatiPagamento in root.iter('DatiPagamento'):
    for TagFiglioDatiPagamento in DatiPagamento:
        for TagNipoteDatiPagamento in TagFiglioDatiPagamento:
            if(TagNipoteDatiPagamento.tag=='ModalitaPagamento'):
                print(TagNipoteDatiPagamento.tag,TagNipoteDatiPagamento.text)
                PrimoFor.append(TagNipoteDatiPagamento.text)

csv_writer.writerow(PrimoFor)


        #closecsv 
csvfile.close()
</code></pre>
<p>I also tried this function but it doesn't change anything</p>
<pre><code>for path , dirs, files in os.walk(path):
    for filename in files:
        print(filename)
        string.append(filename)
</code></pre>
<p>Thanks in advance.
And sorry for the language is google translate</p>
</div>
<div class="post-text" itemprop="text">
<p>(Note: The following code is untested due to not having test data)</p>
<p>Try the following code. As you stated you want to repeat the reading of an XML file for all XML files in the directory. What was missing was repeating the reading for each file. I further assume that the result should be written into the same CSV file. Additionately I renamed the variable containing a list of filenames. This is not strictly necessary, but it is good practice to avoid naming variables the same as key words.</p>
<pre class="lang-py prettyprint-override"><code>import csv 
import xml.etree.ElementTree as ET
import os


path = r"C:\\Users\ADMIN\Desktop\prog"
filenames = []

for filename in os.listdir(path):
    if not filename.endswith('.xml'):
        continue
    fullname = os.path.join(path,filename)
    print(fullname)
    filenames.append(fullname)

csvfile = open('prova.csv','w')
csv_writer = csv.writer(csvfile)

for filename in filenames:
    tree = ET.parse(filename)
    root = tree.getroot()

    PrimoFor=[]

    print("Dati Riepilogo per aliquota IVA e natura")
    for datir in root.iter('DatiRiepilogo'):
            for element in datir:
                print(element.tag,element.text)
                PrimoFor.append(element.text)

    for CedentePrestatore in root.iter('CedentePrestatore'):
        for TagFiglioCedentePrestatore in CedentePrestatore:
                for TagNipoteCedentePrestatore in TagFiglioCedentePrestatore:
                    for ProNipoteCedentePrestatore in TagNipoteCedentePrestatore:
                        print(ProNipoteCedentePrestatore.tag,ProNipoteCedentePrestatore.text)
                        PrimoFor.append(ProNipoteCedentePrestatore.text)
    for DatiGeneraliDocumento in root.iter('DatiGeneraliDocumento'):
        for FiglioDatiGeneraliDocumento in DatiGeneraliDocumento:
            if(FiglioDatiGeneraliDocumento.tag!='Divisa'):
                print(FiglioDatiGeneraliDocumento.tag,FiglioDatiGeneraliDocumento.text)
                PrimoFor.append(FiglioDatiGeneraliDocumento.text)
    for DatiPagamento in root.iter('DatiPagamento'):
        for TagFiglioDatiPagamento in DatiPagamento:
            for TagNipoteDatiPagamento in TagFiglioDatiPagamento:
                if(TagNipoteDatiPagamento.tag=='ModalitaPagamento'):
                    print(TagNipoteDatiPagamento.tag,TagNipoteDatiPagamento.text)
                    PrimoFor.append(TagNipoteDatiPagamento.text)

    csv_writer.writerow(PrimoFor)

#closecsv 
csvfile.close()
</code></pre>
</div>
<span class="comment-copy">You put the full path of all XML files in the directory into a list named <code>string</code>, but then you attempt to load the data from a file which path is defined in a variable named <code>fullname</code>. However that variable is local to the for loop above that. The value of that variable should be considered undefined and python should in fact warn you about that. Do you want to only work with the first (or last) file? Or you want to repeat all the code below for each file?</span>
<span class="comment-copy">Thank you because you answered. if I put {string}  or {fullname }  under {ET.parse() } nothing changes. I would like the code below to be repeated for each file ... that is, extracting the data from all the XML files</span>
<span class="comment-copy">I don't know who you are but I love you :D ... Thank you very much. I knew I had to do a cycle but I didn't know where to put it. Now it only works that it skips a line of the csv. The data of the first file are placed on the 1st row instead the data of the second file on the 3rd row.</span>
