<div class="post-text" itemprop="text">
<p>I'm trying to use the results of some input statements as parameters in a function. I've tried putting the input statements before the function and then calling the function up afterwards, like this:</p>
<pre><code>s=input("Enter the message:")
raw_key=input("Enter the raw key for columnar transposition:")
method=input("Enter the key generation method:")

def encryptColumnar(s,raw_key,method):
    if method==1:
       numkey=key1(raw_key)
    if method==2:
        numkey=key2(raw_key)
    return(columnar(s,numkey))

encryptColumnar(s,raw_key,method)
</code></pre>
<p>but it just gives me the error <code>UnboundLocalError: local variable 'numkey' referenced before assignment</code>. If I just put the input statements before the function, they'll prompt me for input, but they won't recognize that the input is supposed to be used as the function's parameters.</p>
<p>Thanks very much for the help!</p>
<p>EDIT: NEW CODE:</p>
<p>This is currently the code I'm working with:</p>
<pre><code>s=input("Enter the message:")
raw_key=input("Enter the raw key for columnar transposition:")
method=input("Enter the key generation method:")

def encryptColumnar(s,raw_key,method):
    if method=='1':
       numkey=key1(raw_key)
    if method=='2':
        numkey=key2(raw_key)
    return(columnar(s,numkey))

encryptColumnar(s,raw_key,method)
</code></pre>
<p>It doesn't give me the UnboundLocalError anymore, but it also doesn't print anything after I give the parameters to the input statement prompts.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're running this on Python 3.x, <a href="https://docs.python.org/3.4/library/functions.html#input" rel="nofollow"><code>input()</code></a> will not <code>eval()</code> the user's response like the Python 2 version does - it will return it as a string (it basically behaves like Python 2's <code>raw_input</code>). Therefore your conditions <code>method == 1</code> etc. will never be satisfied, leading to <code>numkey</code> being undefined.</p>
<p>So you have to options:</p>
<ul>
<li>Either convert the user's response to an <code>int</code> and test against integers:</li>
</ul>
<pre><code>import sys

method = input("Enter the key generation method:")

try:
    method = int(method)
except ValueError:
    print("You need to enter an integer!")
    sys.exit(1)

# ...

if method == 1:
    # ...
</code></pre>
<ul>
<li>or you accept the user's input as is, and test against string values:</li>
</ul>
<pre><code>import sys

method = input("Enter the key generation method:")

if method == '1':
    # ...
elif method == '2':
    # ...
else:
    print("Unknown method!")
    sys.exit(1)
</code></pre>
<p>See the documentation on <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow">exception handling</a> for the details of the <code>except</code> statement, and the docs on the <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements" rel="nofollow"><code>if</code> statement</a> for details on the <code>elif</code> clause. They're not strictly relevant to your problem here, but as @TheSoundDefense pointed out, the error handling of your code could be improved a bit, so there you go ;-)</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>numkey</code> is not guaranteed to be set by the end of <code>encryptColumnar</code>. If <code>method</code> is 3, or anything besides 1 or 2, then there is no <code>numkey=</code> statement that gets executed, so it's never assigned. Then when you get to <code>return</code>, you get an error because you're trying to return a variable that was never assigned. At the very least, you should put an <code>else</code> statement in to make sure <code>numkey</code> is covered.</p>
</div>
<span class="comment-copy">Can you post the full traceback of the error?</span>
<span class="comment-copy">If you're running this on Python 3.x, <code>input</code> will not <code>eval()</code> the user's response like the Python 2 version does - it will return it as a string. Therefore your conditions <code>method == 1</code> etc. will never be satisfied, leading to <code>numkey</code> being undefined.</span>
<span class="comment-copy">try <code>int(input("Enter the message:"))</code> etc..</span>
<span class="comment-copy">@LukasGraf I've modified the function like this: method='1' and method='2' but now it's giving me an "invalid syntax" error. Advise?</span>
<span class="comment-copy">@PadraicCunningham I modified the method input statement like this: method=int(input('Enter the key generation method:")) but it's still giving me the same UnboundLocalError as I posted above.</span>
<span class="comment-copy">Very clear answer, thank you very much!</span>
<span class="comment-copy">You're welcome. The fact that you edited your question multiple times and responded (quickly!) to the follow-up questions that people asked helped a lot.</span>
<span class="comment-copy">The function is such that the user would know to only enter 1 or 2 as the method parameter (there are only 2 ways of generating the raw_key). I'm getting the error even when I enter 1 or 2 (I don't have a reason to put anything other than 1 or 2). Should I still put an else statement like this?: else: numkey=numkey or some such?</span>
<span class="comment-copy">@hooliaquoolia first try taking Lukas Graf's suggestion, if you are using Python 3.x.</span>
