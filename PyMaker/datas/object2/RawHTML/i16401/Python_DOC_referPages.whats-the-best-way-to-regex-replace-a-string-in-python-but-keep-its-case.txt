<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11275786/how-do-i-write-a-regex-to-replace-a-word-but-keep-its-case-in-python">How do I write a regex to replace a word but keep its case in Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm looking to replace instances of a string in python but keep their original case.</p>
<p>For example, say I was replacing the strings 'eggs' with 'bananas':</p>
<p><code>This recipe requires eggs.</code> --&gt; <code>This recipe requires bananas.</code></p>
<p><code>Eggs are good for breakfast.</code> --&gt; <code>Bananas are good for breakfast.</code></p>
<p><code>I'M YELLING ABOUT EGGS!</code> --&gt; <code>I'M YELLING ABOUT BANANAS!</code> </p>
<p>Right now, I do an re.compile and .sub but I can't figure out a smart way without explicitly declaring the three variants each time. I'm replacing about 100+ words so I imagine there has to be a smarter, more pythonic way.</p>
<p>EDIT: THIS IS NOT A DUPLICATE OF A PREVIOUSLY ASKED QUESTION. --&gt; Some differences: I'm replacing the word with an entirely different word, not wrapping it in  tags. Also, I need to keep the case even if its all caps, etc.. Please do not mark as duplicate without fully reading the question.</p>
</div>
<div class="post-text" itemprop="text">
<p>The key insight here is that you can pass a function to <a href="https://docs.python.org/3/library/re.html#re.sub" rel="noreferrer"><code>re.sub</code></a> to do all sorts of checks before determining the proper replacement for a given match. Also, use the <code>re.I</code> flag to get all the cases.</p>
<pre><code>import re
def replace_keep_case(word, replacement, text):
    def func(match):
        g = match.group()
        if g.islower(): return replacement.lower()
        if g.istitle(): return replacement.title()
        if g.isupper(): return replacement.upper()
        return replacement      
    return re.sub(word, func, text, flags=re.I)
    # return re.compile(word, re.I).sub(func, text) # prior to Python 2.7
</code></pre>
<p>Example: </p>
<pre><code>&gt;&gt;&gt; text = "Eggs with eggs, bacon and spam are good for breakfast... EGGS!"
&gt;&gt;&gt; replace_keep_case("eggs", "spam", text)
Spam with spam, bacon and spam are good for breakfast... SPAM!
</code></pre>
</div>
