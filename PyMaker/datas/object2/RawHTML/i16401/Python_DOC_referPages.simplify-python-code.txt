<div class="post-text" itemprop="text">
<p>I want to write a Python script which downloads every picture of an array which is full of links.</p>
<p>The code looks like this:</p>
<pre><code>for url in array:
    if 'jpg' in url or 'jpeg' in url or 'png' in url or 'gif' in url:
        print url
</code></pre>
<p>As you can see, the if statement is pretty inefficient and I'd like to simplify it. Preferably with a regex if it's possible there. Can someone please help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>Regex is not the right tool for this because you are not matching patterns, just looking for substrings.  </p>
<p>Instead, you should use <a href="https://docs.python.org/3/library/functions.html#any" rel="noreferrer"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="noreferrer">generator expression</a>:</p>
<pre><code>if any(x in url for x in ('jpg', 'jpeg', 'png', 'gif')):
</code></pre>
<p>As a bonus, this solution is lazy like your current one (it only performas as many <code>in</code> membership tests as needed)</p>
</div>
<div class="post-text" itemprop="text">
<p>Although this is not the same, it is more what you intend to do:</p>
<pre><code>for url in array:
    if url.rsplit('.',1)[1] in ('jpg', 'jpeg', 'png', 'gif'):
        print url
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may not need regex to do this but if you still want to, here's a way:</p>
<p><a href="http://regex101.com/r/jH8fO4/3" rel="nofollow">http://regex101.com/r/jH8fO4/3</a> &lt;-- see the regex in action.</p>
<p><code>^.*\.(jpeg|jpg|png|gif)$</code></p>
<p>you can of course add more to the end of the expression in order to handle cases where there's a request or variable attached to the url.</p>
<p>edit - updated to comply with the possibility of more than 1 dot in the filename: </p>
<p><a href="http://regex101.com/r/jH8fO4/4" rel="nofollow">http://regex101.com/r/jH8fO4/4</a> <code>^[a-z0-9]*\.{1}(jpeg|jpg|png|gif)$</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Doing the same thing using regular expressions would look something like this.</p>
<pre><code>pattern = re.compile('jpg|jpeg|png|gif')

for url in array:
    if pattern.search(url) is not None:
        print url
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use os.path.splitext:</p>
<pre><code>import os
for url in array:
    _, ext = os.path.splitext(url)
    if ext in ('.jpg', '.jpeg', '.png', '.gif'):
        print url
</code></pre>
</div>
<span class="comment-copy">Consider <a href="http://codereview.stackexchange.com">codereview.stackexchange.com</a> for review of working code.</span>
<span class="comment-copy">Worked for me, thanks! :)</span>
<span class="comment-copy">what about <code>lol.lol.png</code> :)</span>
<span class="comment-copy">i'll try to handle that case but that isn't a strictly <i>invalid</i> filename, so I don't know if it'd be a necessary check.</span>
<span class="comment-copy">This will match urls like <code>mygif.com/index.html</code>. Although the original problem will match those urls too, we only want to match the extensions if they're at the end of the url.</span>
<span class="comment-copy">The OP asked if his code could be done using regexes. Of course you could improve it, but that's not what was asked for.</span>
<span class="comment-copy">just add a <code>$</code> to your regex to match the final part of the url...</span>
