<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3995034/do-python-regular-expressions-from-the-re-module-support-word-boundaries-b">Do Python regular expressions from the re module support word boundaries (\b)?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>Why isn't the word boundary working? </p>
<p>reading <a href="http://www.regular-expressions.info/wordboundaries.html" rel="nofollow">this site</a>, I know a word boundary works like this: </p>
<p>There are three different positions that qualify as word boundaries:</p>
<ul>
<li>Before the first character in the string, if the first character is a word character.</li>
<li>After the last character in the string, if the last character is a word character.</li>
<li>Between two characters in the string, where one is a word character and the other is not a word character.</li>
</ul>
<p>The <code>a</code> string below appears to fit at least one of the positions listed above. </p>
<pre><code>a = 'Builders Club The Ohio State'
re.sub('\bThe\b', '', a, flags=re.IGNORECASE)
</code></pre>
<p>output. There is no change in the 'The'.</p>
<pre><code>'Builders Club The Ohio State'
</code></pre>
<p>Why isn't the word boundary working? </p>
<p>When I put spaces before and after ' The ' pattern, the regex appears to work.</p>
<pre><code>a = 'Builders Club The Ohio State'
re.sub(' The ', ' ', a, flags=re.IGNORECASE)
</code></pre>
<p>output:</p>
<pre><code>'Builders Club Ohio State'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">raw-string</a> for your Regex pattern (which does not process escape sequences):</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; a = 'Builders Club The Ohio State'
&gt;&gt;&gt; re.sub(r'\bThe\b', '', a, flags=re.IGNORECASE)
'Builders Club  Ohio State'
&gt;&gt;&gt;
</code></pre>
<p>Otherwise, <code>\b</code> will be interpreted as a backspace character:</p>
<pre><code>&gt;&gt;&gt; print('x\by')
y
&gt;&gt;&gt; print(r'x\by')
x\by
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this one</p>
<pre><code>import re
p = re.compile(ur'\bThe\b', re.IGNORECASE)
test_str = u"Builders Club The Ohio State"
subst = u""

result = re.sub(p, subst, test_str)
</code></pre>
<p>output:</p>
<pre><code>Builders Club Ohio State
</code></pre>
<p>Here is <a href="http://regex101.com/r/cJ3kS9/1" rel="nofollow">DEMO</a></p>
</div>
<span class="comment-copy">To elaborate: The backslash is an escape character in normal strings and thus <code>\b</code> becomes just <a href="https://docs.python.org/2.0/ref/strings.html" rel="nofollow noreferrer">a backspace character</a>. So either you need to use <code>\\b</code> or a raw string literal.</span>
<span class="comment-copy">Generally whenever using regex it's a good idea to use a raw string.</span>
<span class="comment-copy">ah ic. if I use r" will it mess up other characters, like ^ and $?</span>
<span class="comment-copy">@user3314418 No, it only affects the number of backslashes you need to use (Hint: you don't need as many with a raw string)</span>
