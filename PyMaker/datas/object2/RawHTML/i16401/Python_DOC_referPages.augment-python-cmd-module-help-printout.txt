<div class="post-text" itemprop="text">
<p>I am using Python's <code>cmd</code> module to create a custom interactive prompt for an application. Right now, when I type <code>help</code> at the prompt, it auto-displays a list of my custom commands, e.g.</p>
<pre><code>[myPromt] help

Documented commands (type help &lt;topic&gt;):
========================================
cmd1 cmd2 cmd3
</code></pre>
<p>I would like to augment this with some text explaining keyboard shortcuts that can be used at the prompt, e.g.</p>
<pre><code>[myPromt] help

Documented commands (type help &lt;topic&gt;):
========================================
cmd1 cmd2 cmd3

(use Ctrl+l to clear screen, Ctrl+a to move cursor to line start, Ctrl+e to move cursor to line end)
</code></pre>
<p>Does anyone know a way to tool-in and modify the boiler-plate text that gets printed when issuing the help command?</p>
</div>
<div class="post-text" itemprop="text">
<p>How about using <a href="https://docs.python.org/3/library/cmd.html#cmd.Cmd.doc_header" rel="nofollow"><code>doc_header</code> attribute</a>:</p>
<pre><code>import cmd

class MyCmd(cmd.Cmd):
    def do_cmd1(self): pass
    def do_cmd2(self): pass
    def do_cmd3(self): pass

d = MyCmd()
d.doc_header = '(use Ctrl+l to clear screen, Ctrl+a ...)'  # &lt;---
d.cmdloop()
</code></pre>
<p>Sample output:</p>
<pre><code>(Cmd) ?

(use Ctrl+l to clear screen, Ctrl+a ...)
========================================
help

Undocumented commands:
======================
cmd1  cmd2  cmd3
</code></pre>
<hr/>
<p>If you need to put the custom message after the normal help messages, use <code>do_help</code>:</p>
<pre><code>import cmd

class MyCmd(cmd.Cmd):
    def do_cmd1(self): pass
    def do_cmd2(self): pass
    def do_cmd3(self): pass
    def do_help(self, *args):
        cmd.Cmd.do_help(self, *args)
        print 'use Ctrl+l to clear screen, Ctrl+a ...)'

d = MyCmd()
d.cmdloop()
</code></pre>
<p>output:</p>
<pre><code>(Cmd) ?

Undocumented commands:
======================
cmd1  cmd2  cmd3  help

use Ctrl+l to clear screen, Ctrl+a ...)
</code></pre>
</div>
<span class="comment-copy">Perfect. I used the do_help() override, and it worked like a charm, thanks!</span>
