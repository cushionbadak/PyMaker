<div class="post-text" itemprop="text">
<p>Im trying to search a text file i have for an employees name and it doesn't seem to working but it also isn't throwing any errors. Whenever i search for a word in this file it gets inside the get_the_info function but never reaches the for loop it seems. Im assuming this because ive used print statements to try and figure out where the problem is. Im new to programming but i assume that is common convention to figure out some issues? Anyway heres the code:</p>
<pre><code>import os
import sys

class find_employee:

    def __init__(self):
        self.get_the_info()

    def get_the_info(self):

        print "inside get info funct"
        self.naples_empschedule = open("schedule.txt","r+")
        self.read_schedule = self.naples_empschedule.readlines()
        self.name = raw_input("  Enter your first and last name please  ")
        for line in self.naples_empschedule:
            print " now inside for loop"
            self.values = aline.split()
            if self.name in line:
                print ("Name:", self.values[0,1],"\n", "Position:", self.values[3],"\n", "Total Hours:", self.values[11]) 
            else:
                print ("You dont work here")


find_employee()   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're mixing classes and functions. Try this instead:</p>
<pre><code>class EmployeeFinder(object):
    def __init__(self, path_to_schedule, name=None):
        self.name = name or raw_input("Enter your first and last name please: ")
        self.path_to_schedule = path_to_schedule
    def get_the_info(self):
        with open(path_to_schedule, "r") as schedule_file:
            for line in schedule_file:
                values = line.split()
                if self.name in line:
                    print("Name: " + values[0:1] + "\n" + \
                          "Position: " + self.values[3] + "\n" \
                          "Total Hours: ", self.values[11])
                    # note that this still won't work because values[0:1]
                    # will return a list, not a string. You might need
                    # ' '.join(values[0:1]).
                else:
                    print("You don't work here")

employeefinder = EmployeeFinder("path/to/schedule/file", "Adam Smith")
employeefinder.get_the_info()
</code></pre>
<p>However it looks like you'd probably be better off with a function, rather than trying to force objects on this. Functional programming is NOT a bad thing.</p>
<pre><code>def find_employee(path_to_schedule, name):
    with open(path_to_schedule, "r") as schedule_file:
        for line in schedule_file:
            if name in line:
                values = line.split()
                new_name = ' '.join(values[0:1]) # I'm guessing at your intent
                position = values[3]
                hours = values[11]
                print("Name: {}\nPosition: {}\nTotal Hours: {}".format(
                    new_name, position, hours))
</code></pre>
<p>(my last example uses <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow">string formatting</a> which is a much better solution than string concatenation)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>self.values[0,1]
</code></pre>
<p>Here you are trying to index a list with a tuple (0,1) which throws an error. Instead use</p>
<pre><code>self.values[0]
</code></pre>
<p>or </p>
<pre><code>self.values[1]
</code></pre>
<p>depending on which item you want from the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your <code>for line in self.naples_empschedule:</code> </p>
<p>should be <code>for line in self.read_schedule:</code>.</p>
</div>
<span class="comment-copy">Thanks this helped me a lot : )</span>
<span class="comment-copy">that shouldn't actually change anything. File objects are iterable (that is to say <code>for line in fileobj</code> is equivalent to <code>for line in fileobj.readlines()</code>)</span>
