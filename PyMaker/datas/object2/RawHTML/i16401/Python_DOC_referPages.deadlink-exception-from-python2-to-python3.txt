<div class="post-text" itemprop="text">
<p>I found this code written in Python 2.7 to bypass a deadlink while reading a list of urls and retrieving their content:</p>
<pre><code>for i in xrange(lines):
    try:
        t = urllib2.urlopen(urllib2.Request(lines[i]))
        deadlinkfound = False
    except:
        deadlinkfound = True
    if not(deadlinkfound):
        urllib.urlretrieve(lines[i], "Images/imag" + "-%s" % i)
</code></pre>
<p>It worked fine in Python2 but I can't find the equivalent in Python3 because of the urllib2 merging.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do the exact same thing with <code>urllib.request</code> here. <em>Don't</em> catch every conceivable exception, only catch what is reasonably going to be thrown:</p>
<pre><code>from urllib import request, error
from http.client import HTTPException

for i, url in enumerate(lines):
    try:
        t = request.urlopen(request.Request(url, method='HEAD'))
    except (HTTPException, error.HTTPError):
        continue
    request.urlretrieve(url, 'Images/imag-{}'.format(i))
</code></pre>
<p>This code does the same, but more efficiently.</p>
</div>
<span class="comment-copy">So why can't <a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow noreferrer"><code>urllib.request</code></a> serve this need?</span>
