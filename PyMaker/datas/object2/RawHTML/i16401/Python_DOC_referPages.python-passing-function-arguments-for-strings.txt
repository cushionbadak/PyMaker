<div class="post-text" itemprop="text">
<p>I am practicing with "Think Python", Exercise 8.1 that: </p>
<p>"Write a function that takes a string as an argument and displays the letters backward, one per line."</p>
<p>I am able to do this question, by using banana as an example to print each letter per line.</p>
<pre><code>index = 0
fruit = "banana"
while index &lt; len(fruit):
    letter = fruit[len(fruit)-index-1]
    print letter
    index = index + 1
</code></pre>
<p>However, I would like to generalize the situation to any input words and I got the problem, my code is</p>
<pre><code>index = 0
def apple(fruit):
    while index &lt; len(fruit):
        letter = fruit[len(fruit)-index-1]
        print letter
        index = index + 1

apple('banana')
</code></pre>
<p>The corresponding errors are:</p>
<pre><code>Traceback (most recent call last):
  File "exercise8.1_mod.py", line 21, in &lt;module&gt;
    apple('banana')
  File "exercise8.1_mod.py", line 16, in apple
    while index &lt; len(fruit):
UnboundLocalError: local variable 'index' referenced before assignment
</code></pre>
<p>I think there should be problems concerned with the function arguments used. Any helps will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>your program got error due to your accessing a global variable in your method and trying to change its value</p>
<pre><code>index = 0
def apple(fruit):
    .....
    index = index + 1
    ....    
apple('banana')
</code></pre>
<p>this give you error <code>UnboundLocalError: local variable 'index' referenced before assignment</code></p>
<p>but if you give </p>
<pre><code>def apple(fruit):
        global index
        .....
        index = index + 1
        .... 
</code></pre>
<p>this produces correct result</p>
<p>in python we have <code>Global variable</code> and <code>Local variables</code> </p>
<p>please go throught <a href="https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value" rel="nofollow">this</a> </p>
<blockquote>
<p><em>In Python, variables that are only referenced inside a function are implicitly global. If a variable is assigned a new value anywhere
  within the function’s body, it’s assumed to be a local. If a variable
  is ever assigned a new value inside the function, the variable is
  implicitly local, and you need to explicitly declare it as global.</em></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>This should probably work better:</p>
<pre><code>def apple(fruit):
    for letter in fruit[::-1]:
        print letter

apple('banana')
</code></pre>
<p>This works by indexing the string in reverse, a built in python function known as slicing.</p>
<p><a href="https://stackoverflow.com/questions/931092/reverse-a-string-in-python">Reverse a string in Python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You need to assign a value to <code>index</code> before you use it.</p>
<pre><code>def apple(fruit):
    index = 0  # assign value to index
    while index &lt; len(fruit):
        letter = fruit[len(fruit)-index-1]
        print letter
        index = index + 1
apple("peach")
h
c
a
e
p
</code></pre>
</div>
<span class="comment-copy">Just put your <code>index = 0</code> inside your function as well (at the beginning of it).</span>
<span class="comment-copy">@BrenBarn if you explain him y he need to keep inside so that he will learn about local and global variables right? :)</span>
<span class="comment-copy">Thank you very much for your detailed explanation on local and global variables. It does help a lot!</span>
<span class="comment-copy">@nam your welcome.glad helped you :)</span>
<span class="comment-copy">thx beiller, I learn from your statement,  fruit[::-1], it is neat and  sound pretty for me~!</span>
<span class="comment-copy">Thank you very much for your comment on <i>assign value to index</i>. My program gets run. Thx =]</span>
