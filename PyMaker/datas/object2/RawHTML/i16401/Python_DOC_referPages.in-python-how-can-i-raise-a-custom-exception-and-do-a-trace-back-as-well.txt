<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1350671/inner-exception-with-traceback-in-python">“Inner exception” (with traceback) in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I am newbie to python . <strong>I know how to raise a **custom exception**</strong> in python with a message printed on to the stdout. But when I am dealing with multiple modules and long codes, while raising an exception with a message , <strong>can I trace back as well? what I meant as trace back is get the error line , or say the function and module name where the exception happened ??</strong> I know that the message that I am giving out can be modified in such a way that I add more detail information. But <strong>I was wondering if there is any inbuilt way of doing this.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You don't have to "generate" a traceback, Python takes care of this when you raise an exception (custom or builtin).</p>
<pre><code>Python 2.7.3 (default, Feb 27 2014, 19:58:35) 
[GCC 4.6.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
pythonrc start
pythonrc done
&gt;&gt;&gt; class MyException(Exception): pass
... 
&gt;&gt;&gt; def foo():
...     raise MyException("Hey")
... 
&gt;&gt;&gt; def bar():
...    print "in bar"
...    foo()
... 
&gt;&gt;&gt; bar()
in bar
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 3, in bar
  File "&lt;stdin&gt;", line 2, in foo
__main__.MyException: Hey
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This question is been already answered here:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/1350671/inner-exception-with-traceback-in-python">"Inner exception" (with traceback) in Python?</a></li>
</ul>
<p><strong>Quoting the response there from Glenn Maynard:</strong></p>
<p>It's simple; pass the traceback as the third argument to raise.</p>
<pre><code>import sys
class MyException(Exception): pass

try:
    raise TypeError("test")
except TypeError, e:
    raise MyException(), None, sys.exc_info()[2]
</code></pre>
<p>Always do this when catching one exception and re-raising another.</p>
</div>
<span class="comment-copy">you want to print module and function in your custom exception?</span>
<span class="comment-copy">Perhaps you want something like <a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer">docs.python.org/3/library/traceback.html</a> ?</span>
<span class="comment-copy">This is not an appropriate way to handle duplicate questions. You need a rep of 3k to cast close votes, but you already have enough rep to flag the question and add a comment with a link to the dupe.</span>
