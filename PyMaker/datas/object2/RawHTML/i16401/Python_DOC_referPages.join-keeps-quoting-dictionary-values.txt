<div class="post-text" itemprop="text">
<p>I am using Python 3.4, and assembling a url to request a json object. But I am having trouble with using the .join() function to add key:value pairs from a dictionary into a string:</p>
<pre><code>params = {'name.first_lower' : 'characterName'}

print("/".join("{!s}={!r}".format(key,val) for (key, val) in params.items())
</code></pre>
<p>What I need is for it to return this:</p>
<pre><code>name.first_lower=characterName
</code></pre>
<p>But what I get is this:</p>
<pre><code>name.first_lower='characterName'
</code></pre>
<p>Why is .join() or .format() giving me single quoted values from the dict?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>!r</code> format code calls an object's <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow"><code>__repr__</code> method</a>, which automatically adds the quotes.  You want to use the <code>!s</code> format code, which calls the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow"><code>__str__</code></a> method:</p>
<pre><code>&gt;&gt;&gt; params = {'name.first_lower' : 'characterName'}
&gt;&gt;&gt; print("/".join("{!s}={!s}".format(key,val) for (key, val) in params.items()))
name.first_lower=characterName
&gt;&gt;&gt;
</code></pre>
<p>Note however that explicitly writing <code>!s</code> is unnecessary because it is the default format code:</p>
<pre><code>&gt;&gt;&gt; print("/".join("{}={}".format(key,val) for (key, val) in params.items()))
name.first_lower=characterName
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This has nothing to do with the <code>join()</code> method, but with the <code>format</code> method.
You are telling him to do so with the <code>!r</code> format specifier. Use <code>!s</code> or nothing instead:</p>
<pre><code>In [1]: '{} = {}'.format('name.first_lower', 'characterName')
Out[1]: 'name.first_lower = characterName'
In [2]: '{!s} = {!s}'.format('name.first_lower', 'characterName')
Out[2]: 'name.first_lower = characterName'
</code></pre>
<p>Consider reading the <a href="https://docs.python.org/2/library/string.html#format-specification-mini-language" rel="nofollow">Format Specification Mini-Language</a> to learn all the functionalities of <code>str.format</code>.</p>
</div>
<span class="comment-copy">Then why did you use <code>!r</code> here?</span>
<span class="comment-copy">I just copied it from some example code I found online. I had assumed that the !s and !r meant replace with the first and second following values respectively.</span>
<span class="comment-copy">Oh, okay. I just copied the {!s} and {!r} from some example code, I wasn't sure what they actually meant.</span>
