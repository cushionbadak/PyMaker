<div class="post-text" itemprop="text">
<p>Python has <code>memoryview</code> for viewing buffers.</p>
<p>Is there something analogous for io streams, or some library which implements this?</p>
<p>An example of what I'm thinking would be (doesn't work of course):</p>
<pre><code>&gt;&gt;&gt; import io
&gt;&gt;&gt; sr = io.BytesIO(b'12345')
&gt;&gt;&gt; print(sr[2:3]).read()
... b'3'
</code></pre>
<p>(this is just an example, the underlying stream doesn't have to be a buffer at all)</p>
<p>The reason I want views over plain bytes is that the contents underlying the stream may be very large.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may consider <a href="https://docs.python.org/3/library/mmap.html" rel="nofollow">mmap</a> module. As far as I understand your needs it may provide required functionality.</p>
</div>
<span class="comment-copy">streams already have <code>.seek</code> and <code>.read</code>; what more do you need?</span>
<span class="comment-copy">What are you trying to do with this library?</span>
<span class="comment-copy">I want to create an independent view of another stream. Of course I could just use seek or read, but it's a convenience, just like memory views.</span>
<span class="comment-copy">Thanks for the suggestion, I tried that out and a slice returned type <code>bytes</code>. I updated the question to say the purpose of using streams.</span>
<span class="comment-copy">With <code>mmap</code> you pass the responsibility of loading appropriate regions (called <code>pages</code>) of a file into memory and <i>unloading</i> unused ones to an operating system. If you need a more precise control on how caching should behave in different usage scenarios you should step down to a particular system facilities, e.g. <a href="http://linux.die.net/man/2/mmap" rel="nofollow noreferrer">mmap(2)</a> for Linux. If you don't need such precision you can safely assume that regions of a file are loaded when you access them and unloaded some time later.</span>
