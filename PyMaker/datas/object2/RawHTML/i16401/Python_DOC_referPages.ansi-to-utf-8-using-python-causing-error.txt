<div class="post-text" itemprop="text">
<p>While I was trying to write a python program that converts Ansi to UTF-8, I found this</p>
<p><a href="https://stackoverflow.com/questions/14732996/how-can-i-convert-utf-8-to-ansi-in-python">https://stackoverflow.com/questions/14732996/how-can-i-convert-utf-8-to-ansi-in-python</a></p>
<p>which converts UTF-8 to Ansi. </p>
<p>I thought it will just work by reversing the order. So I coded</p>
<pre><code>file_path_ansi = "input.txt"
file_path_utf8 = "output.txt"

#open and encode the original content
file_source = open(file_path_ansi, mode='r', encoding='latin-1', errors='ignore')
file_content = file_source.read()
file_source.close

#write 
file_target = open(file_path_utf8, mode='w', encoding='utf-8')
file_target.write(file_content)
file_target.close
</code></pre>
<p>But it causes error.</p>
<pre><code>TypeError: file&lt;&gt; takes at most 3 arguments &lt;4 given&gt;
</code></pre>
<p>So I changed </p>
<pre><code>file_source = open(file_path_ansi, mode='r', encoding='latin-1', errors='ignore')
</code></pre>
<p>to </p>
<pre><code>file_source = open(file_path_ansi, mode='r', encoding='latin-1')
</code></pre>
<p>Then it causes another error:</p>
<pre><code>TypeError: 'encoding' is an invalid keyword arguemtn for this function
</code></pre>
<p>How should I fix my code to solve this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to use the Python 3 version of the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code> function</a>, on Python 2. Between the major versions, I/O support was overhauled, supporting better encoding and decoding.</p>
<p>You can get the same new version in Python 2 as <a href="https://docs.python.org/2/library/io.html#io.open" rel="nofollow"><code>io.open()</code></a> instead.</p>
<p>I'd use the <a href="https://docs.python.org/2/library/shutil.html#shutil.copyfileobj" rel="nofollow"><code>shutil.copyfileobj()</code> function</a> to do the copying, so you don't have to read the whole file into memory:</p>
<pre><code>import io

with io.open(file_path_ansi, encoding='latin-1', errors='ignore') as source:
    with io.open(file_path_utf8, mode='w', encoding='utf-8') as target:
        shutil.copyfileobj(source, target)
</code></pre>
<p>Be careful though; most people talking about ANSI refer to <em>one</em> of the <a href="http://en.wikipedia.org/wiki/Windows_code_page" rel="nofollow">Windows codepages</a>; you may really have a file in CP (codepage) 1252, which is <em>almost</em>, but not quite the same thing as <a href="http://en.wikipedia.org/wiki/ISO/IEC_8859-1" rel="nofollow">ISO-8859-1 (Latin 1)</a>. If so, use <code>cp1252</code> instead of <code>latin-1</code> as the <code>encoding</code> parameter.</p>
</div>
<span class="comment-copy">You need to use <a href="https://docs.python.org/2/library/codecs.html#codecs.open" rel="nofollow noreferrer"><code>codecs.open</code></a>.</span>
<span class="comment-copy">@dano: really, <code>io.open()</code> is a lot better, more powerful and less prone to bugs.</span>
<span class="comment-copy">As an aside, the term ANSI is really a complete misnomer, although it is used a lot to mean roughly Windows cidepage 1251 (or often 437 or 850, etc). Latin-1 is the name of the encoding you actually use; it is mostly compatible with CP1251 (but not vice versa).</span>
<span class="comment-copy">@tripleee Latin 1 is not CP1251, it's 1252, and even that's an approximation.</span>
<span class="comment-copy">Right you are; sorry for always mixing these up (1251 is Cyrillic).</span>
<span class="comment-copy">CP1251 is Cyrillic, it's CP1252 what's similar to ISO 8859-1.</span>
<span class="comment-copy">@KarolS: ah, yes, mea culpa. Thanks, corrected!</span>
<span class="comment-copy">@MartijnPieters  Thank you! But how can I know if my input.txt is written in cp1252 or Latin 1?</span>
<span class="comment-copy">@user3123767: Latin-1 has control codes in the range 80-9F, while CP-1252 has some more characters there (see the <a href="http://en.wikipedia.org/wiki/Windows-1252" rel="nofollow noreferrer">Wikipedia page on CP-1252</a>, look for the table rows <code>8_</code> and <code>9_</code>). If text decoded as cp1252 works and makes sense, then go for that. Few texts, if any, use the Latin-1 control codes anyway.</span>
<span class="comment-copy">@MartijnPieters Is this code still just for python 3? I get error "encoding is an invalid keyword". So I googled this error message, and then I read this error message disappeared as soon as it was run on python 3, instead of python 2.X</span>
