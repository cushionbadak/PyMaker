<div class="post-text" itemprop="text">
<p>I have a decorator that returns a string on <code>__get__</code>. How can I make it compatible with <code>json.dumps</code>?</p>
<pre><code>import json

class Decorator(object):
    def __init__(self, value=''):
        self.value = value
    def __set__(self, instance, value):
        self.value = value
    def __get__(self, instance, owner):
        return self.value

class Foo(object):
    decorator = Decorator()

foo = Foo('Hello World')
json.dumps(foo)
</code></pre>
<p>This minimal example raises an exception in <code>json.dumps</code> stating that <code>Decorator</code> is not serializable. Since it is not a real string but just provide a string like interface that's not surprising. How can I make it JSON serializable using the value returned by <code>__get__</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to extend <code>JSONEncoder</code> class to be able to handle <code>Foo</code> objects; Example almost copy pasted from <a href="https://docs.python.org/3/library/json.html" rel="nofollow">documents</a>:</p>
<pre><code>&gt;&gt;&gt; class myEncoder(json.JSONEncoder):
...     def default(self, obj):
...         if isinstance(obj, Foo):
...             # implement your json encoder here
...             return 'foo object'
...         # Let the base class default method raise the TypeError
...         return json.JSONEncoder.default(self, obj)
... 
&gt;&gt;&gt; json.dumps(foo, cls=myEncoder)
'"foo object"'
</code></pre>
</div>
<span class="comment-copy">The fact <code>foo</code> is not serializable has got nothing to do with the <code>Decorator</code> class. E.g.: <code>class A(object): x = 3; a = A(); json.dumps(a)</code></span>
