<div class="post-text" itemprop="text">
<p>I'm trying to count hashtags from a json file of tweets. The goal of my program is to first extract hasthags and make a list, and then to create a dictionary of those hashtags (for which I wrote the "hashtags_dic" function) to count the number of times each hashtag is present. My problem is that right now the program returns the hashtags values but does not sum up the number of times each particular hashtag is present.
I created a function named "hashtags_dic" that creates a dictionary, but it doesn't work. 
Here is the code:</p>
<pre><code>from twitter_DB import load_from_DB

def get_entities(tweet):
    if 'entities' in tweet.keys():
        hashtag_list = [hashtag['text'] for hashtag in tweet['entities']['hashtags']]   
        return hashtag_list
    else:
        return []

def hashtags_dic(hashtag_list):       
hashtag_count = {}
for text in hashtag_list:    
    if text != None: 
        if text in hashtag_count.keys():
            hashtag_count[text] = hashtag_count[text] + 1
        else:
            hashtag_count[text] =  1
return hashtag_count

if __name__ == '__main__':
DBname = 'search-results'
tweet_results = load_from_DB(DBname)
print 'number loaded', len(tweet_results) 

for tweet in tweet_results[:100]:
    labels = get_entities(tweet)
    dic=hashtags_dic(labels)
    print '  Hashtags:', labels[:20]
    print ' Hastags count: ', dic
</code></pre>
<p>I'd appreciate any hints or ideas on what's wrong with my code. Thanks in advance... Norpa</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several techniques for counting using dicts or dict subclasses (including <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow">dict.setdefault</a>, <a href="https://docs.python.org/3/library/collections.html#defaultdict-objects" rel="nofollow">collections.defaultdict</a>, and <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow">collections.Counter</a>).</p>
<p>As you might guess from its name, <strong>collections.Counter()</strong> is ideally suited to the task of counting :-)</p>
<pre><code>import collections
import pprint

hash_counts = collections.Counter(hashtags)
print("Fifty most popular hashtags")
pprint.pprint(hash_counts.most_common(50))
</code></pre>
<p>FWIW, you're original <em>hashtags_dict()</em> function seems to work just fine:</p>
<pre><code>&gt;&gt;&gt; hashtags_dic(['obama', 'putin', 'cameron', 'putin', 'obama'])
{'cameron': 1, 'putin': 2, 'obama': 2}
</code></pre>
<p>The <em>hashtags_dict()</em> function would do <strong>much</strong> less work if you substituted <code>text in hashtag_count</code> for <code>text in hashtag_count.keys()</code>.  The former does a high-speed hashed dictionary lookup and the latter builds a keys list uses a slow linear search.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>defaultdict</code> to easily count unique hashtag occurrences.  For example:</p>
<pre><code>from collections import defaultdict

hashtags = ['nice', 'cool', 'great', 'fun', 'nice', 'cool']

hashtag_dict = defaultdict(int)

for k in hashtags:
    hashtag_dict[k] += 1

defaultdict(&lt;type 'int'&gt;, {'fun': 1, 'great': 1, 'cool': 2, 'nice': 2})
</code></pre>
</div>
<span class="comment-copy">Can you show some example input of what your file looks like?</span>
