<div class="post-text" itemprop="text">
<p>Given any of the following strings:</p>
<pre><code>'test'
'test='
'test=='
'test==='
</code></pre>
<p>I'd like to run a function on it that will remove any/all '=' characters from the end.  Now, I could write something like this in two seconds, in fact, here goes one, and I can imaging a dozen alternative approaches:</p>
<pre><code>def cleanup():
    p = passwd()

    while True:
        new_p = p.rstrip('=')

        if len(new_p) == len(p):
            return new_p

        p = new_p
</code></pre>
<p><strong>But I was wondering if anything like that already exists as part of the Python Standard Library?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.rstrip()</code> <strong>already</strong> removes <strong>all</strong> matching characters:</p>
<pre><code>&gt;&gt;&gt; 'test===='.rstrip('=')
'test'
</code></pre>
<p>There is no need to loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>All you need is <code>str.rstrip</code>:</p>
<pre><code>&gt;&gt;&gt; 'test'.rstrip('=')
'test'
&gt;&gt;&gt; 'test='.rstrip('=')
'test'
&gt;&gt;&gt; 'test=='.rstrip('=')
'test'
&gt;&gt;&gt; 'test==='.rstrip('=')
'test'
&gt;&gt;&gt;
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow">docs</a>:</p>
<blockquote>
<p><code>str.rstrip([chars])</code></p>
<p>Return a copy of the string <strong>with trailing characters removed.</strong></p>
</blockquote>
<p>It should be noted however that <code>str.rstrip</code> only removes characters from the right end of the string.  You need to use <code>str.lstrip</code> to remove characters from the left end and <code>str.strip</code> to remove characters from both ends.</p>
</div>
<span class="comment-copy">Wow, I <i>am</i> an idiot.</span>
