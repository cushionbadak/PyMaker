<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3120562/python-subclassing-immutable-types">Python, subclassing immutable types</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I want to extend the datetime.date class adding it an attribute called <code>status</code> that represents if the date is a work day, an administrative non-work day, courts closed day,...</p>
<p>I've read from <a href="https://stackoverflow.com/questions/15526858/how-to-extend-a-class-in-python">How to extend a class in python?</a>, <a href="https://stackoverflow.com/questions/12701206/how-to-extend-python-class-init">How to extend Python class init</a> and <a href="https://stackoverflow.com/questions/904036/chain-calling-parent-constructors-in-python">Chain-calling parent constructors in python</a>, but I don't understand it well, so I'm noob with OOP.</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; class Fecha(datetime.date):
        def __init__(self, year, month, day, status):
            super(Fecha, self).__init__(self, year, month, day)
            self.status = status

&gt;&gt;&gt; dia = Fecha(2014, 7, 14, 'laborable')
Traceback (most recent call last):
  File "&lt;pyshell#35&gt;", line 1, in &lt;module&gt;
    dia = Fecha(2014, 7, 14, 'laborable')
TypeError: function takes at most 3 arguments (4 given)
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>datetime.date</code> is an immutable type, meaning you need to override the <a href="https://docs.python.org/3/reference/datamodel.html#object.__new__"><code>__new__</code> method</a> instead:</p>
<pre><code>class Fecha(datetime.date):
    def __new__(cls, year, month, day, status):
        instance = super(Fecha, cls).__new__(cls, year, month, day)
        instance.status = status
        return instance
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; class Fecha(datetime.date):
...     def __new__(cls, year, month, day, status):
...         instance = super(Fecha, cls).__new__(cls, year, month, day)
...         instance.status = status
...         return instance
... 
&gt;&gt;&gt; dia = Fecha(2014, 7, 14, 'laborable')
&gt;&gt;&gt; dia.status
'laborable'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>problem is in super call </p>
<pre><code>super(Fecha, self).__init__(year, month, day)
</code></pre>
<p>Try this.</p>
</div>
<span class="comment-copy">Thanks @MartijnPieters  <code>cls</code> and <code>instance</code> are arbitrary words, or reserved words?</span>
<span class="comment-copy">Arbitrary; <code>cls</code> because <code>class</code> <i>is</i> reserved. The conventions are reasonably well established, however.</span>
<span class="comment-copy">This won't work, as there is no <code>__init__</code> on an immutable type; it is the <code>datetime.date.__new__</code> method that throws the exception here. For mutable types, you'd be correct.</span>
