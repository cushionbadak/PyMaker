<div class="post-text" itemprop="text">
<p>How can I extract the attributes of the "SimpleSubscriber object from the following method object?</p>
<pre><code>&lt;bound method SimpleSubscriber.process of &lt;__main__.SimpleSubscriber object at 0x2ede150&gt;&gt;
</code></pre>
<p>This object has been passed as a function, but is a function of an instance as we can see above. I would like to reference the above object (saved in a list in different class than its own) from the instance where this function resides.</p>
<p>Nothing in <code>dir()</code> seems to help.</p>
<p><code>self</code> within the instance returns:</p>
<pre><code>&lt;__main__.SimpleSubscriber object at 0x2ede150&gt;
</code></pre>
<p>so this instance cannot reference itself in its own method, from within the other class.</p>
<p>So basically, I am trying to access the attributes of</p>
<pre><code>&lt;__main__.SimpleSubscriber object at 0x2ede150&gt;
</code></pre>
<p>from</p>
<pre><code>&lt;bound method SimpleSubscriber.process of &lt;__main__.SimpleSubscriber object at 0x2ede150&gt;&gt;
</code></pre>
<p>I'm trying to extract unique identifiers of the instance. Is that possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>A bound method holds references to the original function and the instance it is bound to; this is how it passes in the instance as the first argument when your method is called.</p>
<p>If you wanted to access the instance it is bound to, use the <code>__self__</code> attribute:</p>
<pre><code>&gt;&gt;&gt; class Foo:
...     def bar(self):
...         pass
... 
&gt;&gt;&gt; bound_bar = Foo().bar
&gt;&gt;&gt; bound_bar
&lt;bound method Foo.bar of &lt;__main__.Foo object at 0x101e5f6d8&gt;&gt;
&gt;&gt;&gt; bound_bar.__self__
&lt;__main__.Foo object at 0x101e5f6d8&gt;
</code></pre>
<p>You can then access any attributes you need on that instance, including the method itself again:</p>
<pre><code>&gt;&gt;&gt; bound_bar.__self__.bar
&lt;bound method Foo.bar of &lt;__main__.Foo object at 0x101e5f6d8&gt;&gt;
</code></pre>
<p>Attributes like these are documented in the <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow">Datamodel reference</a>, but for a quick overview the <a href="https://docs.python.org/3/library/inspect.html#types-and-members" rel="nofollow"><code>inspect</code> module has a handy table</a>.</p>
</div>
<span class="comment-copy">Thank you Martijn. I was worried the question would be difficult to understand, but you understood and gave me exactly the solution I have been looking for! Thank you. __self__ is not in the dir for the function. Do you know why? Is it something obvious I have overlooked?</span>
<span class="comment-copy">@hellome: <code>dir()</code> is not an <i>exhaustive</i> list; as the <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer">documentation</a> puts it: <i>it attempts to produce the most relevant, rather than complete, information</i>, and <i>it tries to supply an interesting set of names more than it tries to supply a rigorously or consistently defined set of names</i>.</span>
<span class="comment-copy">@hellome: that said, <code>__self__</code> <b>is</b> listed as an attribute of the method object, at least on Python 3.4. <code>'__self__' in dir(bound_bar)</code> is True.</span>
<span class="comment-copy">Ok, not so sure about 3.4 cuz i'm on 3.2, but in my case, the equivalent of your 'bound_bar' was sent to another class to preform. Calling dir() on it from within that other class did not return a __self__. But your first, comment response answers that. Thanks again.</span>
