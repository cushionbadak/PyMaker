<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20449427/how-can-i-read-inputs-as-numbers">How can I read inputs as numbers?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<p>I just started coding today and I'm trying to write a simple program to add vectors. So far I have </p>
<pre><code>VectorAx= input("What is the x component of Vector A?")
VectorAy= input("What is the y component of Vector A?")
VectorBx= input("What is the x component of Vector B?")
VectorBy= input("What is the y component of Vector B?")


VectorC= "[%s,%s]" % (VectorAx + VectorBx, VectorAy+VectorBy)
print (VectorC)
</code></pre>
<p>When I run the script everything works but the inputs aren't treated like numbers.
For example, if <code>VectorAx=1</code>, <code>VectorAy=6</code>, <code>VectorBx=3</code> and <code>VectorBy=2</code>, <code>VectorC</code> should be <code>[4,8]</code>, but instead it is displayed as <code>[13,62]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>input</code> always returns a string object.  If you want the inputs to be numbers, you need to convert them into numbers with either <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int</code></a> or <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow"><code>float</code></a>:</p>
<pre><code>VectorAx= int(input("What is the x component of Vector A?"))
VectorAy= int(input("What is the y component of Vector A?"))
VectorBx= int(input("What is the x component of Vector B?"))
VectorBy= int(input("What is the y component of Vector B?"))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; inp1 = int(input(":"))
:1
&gt;&gt;&gt; inp2 = int(input(":"))
:2
&gt;&gt;&gt; inp1 + inp2
3
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll want to use the built-in <a href="https://docs.python.org/2/library/functions.html#int" rel="nofollow">int()</a> function.</p>
<p>Per the <a href="https://docs.python.org/2/library/functions.html#int" rel="nofollow">documentation</a>, this function will "convert a number or string x to an integer, or return 0 if no arguments are given."</p>
<p>This converts input passed to it to an integer.</p>
<p>So, the resulting code should be:</p>
<pre><code>VectorAx = int(input("What is the x component of Vector A?"))
VectorAy = int(input("What is the y component of Vector A?"))
VectorBx = int(input("What is the x component of Vector B?"))
VectorBy = int(input("What is the y component of Vector B?"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Cast your vectors to floats (if you plan on having decimals) or ints (if they will always be simple integers) then add. </p>
<p>Right now they are being taken in as strings. </p>
<p>Thus <code>"1"+"3" == "13"</code></p>
<p>Whereas <code>int("1") + int("3") == 4</code></p>
<p>Therefore:</p>
<pre><code>VectorAx= int(input("What is the x component of Vector A?"))
VectorAy= int(input("What is the y component of Vector A?"))
VectorBx= int(input("What is the x component of Vector B?"))
VectorBy= int(input("What is the y component of Vector B?"))


VectorC= "[%s,%s]" % (VectorAx + VectorBx, VectorAy+VectorBy)
</code></pre>
<p>or you can simply cast here:</p>
<pre><code>VectorC= "[%s,%s]" % (int(VectorAx) + int(VectorBx), int(VectorAy)+ int(VectorBy))
</code></pre>
</div>
<span class="comment-copy">Yikes! Don't use <code>eval()</code> on user input! If anything, use <code>ast.literal_eval()</code> if necessary, but not for simple numbers.</span>
<span class="comment-copy">Correct, my link however went to the <code>int</code> built-in function.</span>
<span class="comment-copy">Correct, but you're looking at <code>int</code> (the type) not <code>int</code> (the function) which is a built-in function according to <a href="https://docs.python.org/2/library/functions.html#int" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#int</a>.</span>
<span class="comment-copy">To summarize. <code>int()</code> is just an invocation of <code>int</code> because both <code>functions</code> and <code>types/classes</code> are <code>callable</code> in Python. The documentation indeed mentions <code>int</code> as a built-in function. However the interpreter shows something else. <code>&gt;&gt;&gt; type(int)</code> gives <code>&lt;type 'type'&gt;</code> but <code>type(sorted)</code> gives <code>&lt;type 'builtin_function_or_method'&gt;</code>. There seems to be some inconsistency in the documentation.</span>
