<div class="post-text" itemprop="text">
<p>I am using Pyhton3.4.1 and win7. I am trying to reading a txt file exported from a software. it seems that python cannot read  this text file. But I found if I open the text file by notepad and add a space in any place and save it, the python works well then.</p>
<p>I tried the same code and same file on my mac, it has the same problem as in windows.
For original text file, not working,open and saved in windows notepad, working,
open ans saved in mac textedit, not working.</p>
<p>I am doubting the original coding of the text file might not be right.</p>
<p>Thanks</p>
<p>Python code</p>
<pre><code>InputFileName=input("Please tell me the input file name:")
#StartLNum=int(input("Please tell me the start line number:"))
#EndLNum=int(input("Please tell me the end line number:"))

StartLNum=18
EndLNum=129

lnum=1
OutputName='out'+InputFileName
fw=open(OutputName,'w')
with open(InputFileName,"r") as fr:
    for line in fr:
        if (lnum &gt;= StartLNum) &amp; (lnum&lt;=EndLNum):
            #print(line)
            fw.write(line)
        lnum+=1
fw.close()
</code></pre>
<p>Shell </p>
<pre><code>&gt;&gt;&gt; ================================ RESTART ================================
&gt;&gt;&gt; 
Please tell me the input file name:Jul-18-2014.txt
Traceback (most recent call last):
File "C:\Users\Jeremy\Desktop\read.py", line 13, in &lt;module&gt;
for line in fr:
UnicodeDecodeError: 'gbk' codec can't decode byte 0xb3 in position 4309: illegal multibyte sequence
&gt;&gt;&gt; ================================ RESTART ================================
&gt;&gt;&gt; 
Please tell me the input file name:Jul-18-2014.txt
&gt;&gt;&gt; 
</code></pre>
<p>Plus, the error below is the same code reported on my mac(Python3.4.1,OS10.9)</p>
<pre><code>Traceback (most recent call last):
File "/Users/Jeremy/Desktop/read.py", line 14, in &lt;module&gt;
for line in fr:
File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/encodings/ascii.py",  line 26, in decode
return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xb3 in position 4174: ordinal not in range(128)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you save the file in Notepad, the file is <em>reencoded</em> to be saved as your default file encoding for your Windows installation. Notepad auto-detected the encoding when it opened the file, however.</p>
<p>Python opens file using that same system encoding, by default, which is why you can now open the file. Quoting the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code> function</a> documentation:</p>
<blockquote>
<p><em>encoding</em> is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever <code>locale.getpreferredencoding()</code> returns), but any encoding supported by Python can be used.</p>
</blockquote>
<p>You'll have to explicitly specify the <em>correct</em> encoding for the file if you wanted to open it directly in Python:</p>
<pre><code>with open(InputFileName, "r", encoding='utf-8-sig') as fr:
</code></pre>
<p>I used <code>'utf-8-sig'</code> as an example here, as that is a file encoding that Notepad can auto-detect. It could well be that the encoding is UTF-16 or plain UTF-8 or any number of other encodings, however.</p>
<p>If you think that the page is encoded with a specific <a href="http://en.wikipedia.org/wiki/Code_page#Windows_.28ANSI.29_code_pages" rel="nofollow">ANSI codepage</a> you still have to name the <em>exact</em> codepage. Your system is configured to use <a href="http://en.wikipedia.org/wiki/Code_page_936" rel="nofollow">code page 936 (GBK)</a> but that is not the correct encoding for this file.</p>
<p>See the <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow"><code>codecs</code> module</a> for a list of supported encodings.</p>
</div>
<span class="comment-copy">Windows-1252 isn't the only ANSI code page. Since Python apparently assumed the file used a simplified Chinese encoding (GBK) I'm guessing that the ANSI code page on his machine is CP936. The term ANSI here is a misnomer, none of the encodings normally used as an ANSI code page on Windows are approved by ANSI.</span>
<span class="comment-copy">@RossRidge: yeah, I feared as much. Reference found, and text corrected.</span>
<span class="comment-copy">Thanks for your response, I added "encoding='CP936'" in the open function argument, but it seems having the same problem. Is there a way to check what is the coding for my text file? I am afraid the software I am using is not that good to code the text file. If this text file is not specified the coding type, is there a method in python to open it?</span>
<span class="comment-copy">@user3856218: cp936 was already established as the incorrect encoding (gbk is an alias for the same codepage). You could try to use a character set detector; if the file is large enough heuristics can help guess at what the encoding is.</span>
<span class="comment-copy">@user3856218: Firefox comes with a character detection library, you can open the file in Firefox and <a href="http://codeftw.blogspot.ch/2009/07/how-to-find-character-encoding-of-text.html" rel="nofollow noreferrer">see what it thinks is the encoding</a>.</span>
