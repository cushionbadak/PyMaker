<div class="post-text" itemprop="text">
<p>I'm trying to loop through a folder with several files, to find a file with the extension <code>.doc</code>. </p>
<p>Yes I used the <code>.endswith('.doc')</code> function, but in my case, it's also parsing through <code>.docx</code> files. Is there a regular expression or some sort to use?</p>
<p>EDIT: Alright, my problem is, I'm looping through to find ".doc" files, and if there is one, I will do an extraction of text into a variable and then print it using win32com functions. When I put the program through a folder that contains both ".doc" and ".docx" files, I have an error that says:</p>
<pre><code>Traceback (most recent call last):

 File "C:\Users\IdaLim\Desktop\MyTestCode\FileIO.py", line 88, in &lt;module&gt;
    doc = app.Documents.Open(fullpath)
  File "C:\Python27\lib\site-packages\win32com\client\dynamic.py", line 522, in
__getattr__
    raise AttributeError("%s.%s" % (self._username_, attr))
AttributeError: Word.Application.Documents
</code></pre>
<p>From my experience and knowledge with COM functions, it's parsing through ".docx" files too, that's why there's no "Word.Application.Documents" for .docx files. Hence explaining that error. </p>
<p>So when I isolated the ".doc" file into another folder (i.e. with no .docx file present), the loop and program is perfectly fine. It prints the content of the file and ends there.</p>
<p>Excerpt of my code:</p>
<pre><code>import win32com.client 
import os

rootdir ='C:\Users\IdaLim\Desktop\docs'

for subdir, dirs, files in os.walk(rootdir):
    for file in files:
        fullpath = os.path.join(*[subdir, file])
        if file.endswith('.doc'):
            app = win32com.client.Dispatch('Word.Application')
            doc = app.Documents.Open(fullpath)
            print doc.Content.Text
            app.Quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>(<strong>Edited. See below for original answer.</strong>)</p>
<p>The real problem here appears to be something to do with the algorithm and/or something else on the system (per comments about restarting changing things), since <code>str.endswith()</code> and <code>Path.suffix</code> should give the same results here. </p>
<hr/>
<h3>Previous (not the real problem)</h3>
<p>The simplest and most robust solution is using the <code>pathlib</code> module. If you're on Python 3.4 or newer, it comes installed; otherwise use <code>pip</code> or <code>easy_install</code> to install it. Then you can deal with your path like this:</p>
<pre><code>import win32com.client 
import os
import pathlib

rootdir ='C:\Users\IdaLim\Desktop\docs'

for subdir, dirs, files in os.walk(rootdir):
    for file in files:
        fullpath = pathlib.Path(subdir, file)
        if fullpath.suffix == '.doc':
            app = win32com.client.Dispatch('Word.Application')
            doc = app.Documents.Open(str(fullpath))
            print doc.Content.Text
            app.Quit()
</code></pre>
<p>The <code>suffix</code> attribute is simple to use and reliable, and will get you what you want. For more details, see the 3.4 docs on the <code>pathlib</code> module <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know the structure of an os.walk() object, but, supposing you have a string array with the filenames, you can use this regular expression to filter them:</p>
<pre><code>import re
array = ['file1.doc', 'file2.docx']
regexp = "\.doc$"
for e in array:
    if re.search(regexp, e, re.I):
        print 'True'
    else:
        print 'False'
</code></pre>
<p>result:</p>
<pre><code>True
False
</code></pre>
</div>
<span class="comment-copy">You can use this: <code>if file[-4:]== '.doc'</code></span>
<span class="comment-copy">This should work:  <code>"foo.docx".endswith(".doc")</code> returns <code>False</code>, for example.  Your problem is probably something else.  Step through the code with a debugger to see the path it's taking.</span>
<span class="comment-copy">Don't use <code>is</code> when you really mean <code>==</code>.</span>
<span class="comment-copy">That's not possible: &gt;&gt;&gt; 'foo.docx'.endswith('.doc') -&gt; False. Use <code>endswith</code> it is the simplest and fastest way to test the end of a string.</span>
<span class="comment-copy">Instead of <code>if file.endswith('.doc')</code> can you use <code>if fullpath.endswith('.doc')</code>, just to be sure</span>
<span class="comment-copy">There's an error when running your above codes:  <b>AttributeError: 'str' object has no attribute 'suffix'</b>  How do I fix that? BTW, I'm using Python 2.7.8. Will using pathlib be a problem?</span>
<span class="comment-copy">I edited it a moment ago; it should be correct now. I was calling <code>suffix</code> on the wrong thing (you should call it on <code>fullpath</code>, as it is after the edit, not <code>file</code> as I originally had). I believe you should be able to install path lib on 2.7, but I'll check momentarily. <b>Edit:</b> yep, works just fine.</span>
<span class="comment-copy">Hmmm, I don't see how using Pathlib (which restricts the OP to use python &gt;= 3.4) helps compared to using endswith(). I mean it might be good to use, but will not help with the problem.</span>
<span class="comment-copy">@ChrisKrycho I'm still having the "Word.Application.Documents" Attribute error. This is to say that the loop is still processing ".docx" files.. is there a way to use Regular Expressions to help to explicitly tell the program to only look for ".doc" files?</span>
<span class="comment-copy">@seb, it doesn't have any such restriction, per a point I already made in the answer: <code>pip install pathlib</code> works just fine. This is a bit clearer in my viewâ€”but if it gives him the same result, then it'll be <i>quite</i> clear that the issue is <i>not</i> from trying to open <code>.doc</code> files.</span>
