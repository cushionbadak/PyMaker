<div class="post-text" itemprop="text">
<p>In Python in the <code>re</code> module there is the following function:</p>
<blockquote>
<p>re.sub(pattern, repl, string, count=0, flags=0) – Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If the pattern isn’t found, string is returned unchanged.</p>
</blockquote>
<p>I've found it can work like this:</p>
<pre><code>print re.sub('[a-z]*\d+','lion','zebra432') # prints 'lion'
</code></pre>
<p>I was wondering, is there an easy way to use regular expressions in the replacement string, so that the replacement string contains part of the original regular expression/original string? Specifically, can I do something like this (which doesn't work)?</p>
<pre><code>print re.sub('[a-z]*\d+', 'lion\d+', 'zebra432')
</code></pre>
<p>I want that to print <code>'lion432'</code>. Obviously, it does not. Rather, it prints <code>'lion\d+'</code>. Is there an easy way to use parts of the matching regular expression in the replacement string?</p>
<p>By the way, this is NOT a special case. Please do NOT assume that the number will always come at the end, the words will always come in the beginning, etc. I want to know a solution to all regexes in general. </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Place <code>\d+</code> in a capture group <code>(...)</code> and then use <code>\1</code> to refer to it:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub('[a-z]*(\d+)', r'lion\1', 'zebra432')
'lion432'
&gt;&gt;&gt;
&gt;&gt;&gt; # You can also refer to more than one capture group
&gt;&gt;&gt; re.sub('([a-z]*)(\d+)', r'\1lion\2', 'zebra432')
'zebralion432'
&gt;&gt;&gt;
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow">docs</a>:</p>
<blockquote>
<p>Backreferences, such as <code>\6</code>, are replaced with the substring matched
  by group <code>6</code> in the pattern.</p>
</blockquote>
<p>Note that you will also need to use a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">raw-string</a> so that <code>\1</code> is not treated as an escape sequence.</p>
</div>
<span class="comment-copy">Should a raw string not also be used for the regex (the first string)?</span>
<span class="comment-copy">@DavidZwicker - Probably.  But it is not strictly necessary here.</span>
<span class="comment-copy">zebralions are pretty much my favorite animal.</span>
