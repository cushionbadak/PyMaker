<div class="post-text" itemprop="text">
<p>I tried to look around but I couldn't find anything clear about this topic.</p>
<p>Are built-in functions implemented in a module that is automatically imported every time Python is launched? In the case which is the module?</p>
<p>Or are built-in functions just embedded functions inside the Python interpreter?</p>
</div>
<div class="post-text" itemprop="text">
<p>For <a href="https://stackoverflow.com/questions/17130975/python-vs-cpython">CPython</a>, the built-in functions are (for the most part) implemented in the <a href="http://hg.python.org/cpython/file/d367ea865ea4/Python/bltinmodule.c" rel="nofollow noreferrer"><code>bltinmodule.c</code> file</a>.</p>
<p>The exceptions are mostly the types; things like <code>str</code> and <code>dict</code> and <code>list</code> have their own C files in the <a href="http://hg.python.org/cpython/file/2.7/Objects/" rel="nofollow noreferrer"><code>Objects</code> directory of the C source</a>; these are listed as a <a href="http://hg.python.org/cpython/file/d367ea865ea4/Python/bltinmodule.c#l2689" rel="nofollow noreferrer">table in the <code>bltinmodule</code> source</a>.</p>
<p>Technically speaking, this is treated as a separate module object by the implementation, but one that is automatically searched when the current global namespace does not contain a name. So when you use <code>abs()</code> in your code, and there is no <code>abs</code> object in the global namespace, the built-ins module is also searched for that name.</p>
<p>It is also exposed as the <a href="https://docs.python.org/2/library/__builtin__.html" rel="nofollow noreferrer"><code>__builtin__</code> module</a> (or <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer"><code>builtins</code></a> in Python 3) so you can access the built-in names even if you shadowed any in your code. Like the <code>sys</code> module, however, it is compiled into the Python binary, and is not available as a separate dynamically loaded file.</p>
</div>
<span class="comment-copy">So it can be said that they are embedded in the Python interpreter, isn't it?</span>
<span class="comment-copy">@antox: yes, correct.</span>
<span class="comment-copy">@antox Note that there is a <code>builtins</code> module (in python3. <code>__builtin__</code> in python2). This module is defined by the <code>bltinmodule.c</code> file. So, technically, they are part of an external module, however this module is treated differently from other modules because it is searched if a global cannot be found.</span>
<span class="comment-copy">Doing a recap, builtin functions are implemented in the bltinmodule.c file so when python interpreter is compiled they became part of it. But those builtin functions are also available (as extra) inside the builtins module (in python3) for the reason expressed above. All right?</span>
<span class="comment-copy">@antox: Sorta, kinda, yeah. Python has, as part of the binary, a module object called <code>__builtin__</code> or <code>builtins</code>, depending on the Python version, that is used to satisfy name lookups if those are not found in the globals. Your code can import that module object to directly look up names on it.</span>
