<div class="post-text" itemprop="text">
<p>I am working on a text search project, and using text blob to search for sentences from text.
TextBlob pulls all the sentences with the keywords efficiently. However for effective research i also want to pull out one sentence before and one after which I am unable to figure. </p>
<p>Below is the code I am using:</p>
<pre><code>def extraxt_sents(Text,word):
    search_words = set(word.split(','))
        sents = ''.join([s.lower() for s in Text])
        blob = TextBlob(sents)
    matches = [str(s) for s in blob.sentences if search_words &amp; set(s.words)]
    print search_words
    print(matches)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to get the lines before and after the match, you can either create a loop and memorize the previous line, or use <a href="https://stackoverflow.com/questions/509211/pythons-slice-notation">slices</a>, like <code>[from:to]</code> on the <code>blob.sentences</code> list.</p>
<p>The best way might be to use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> bultin function.</p>
<pre><code>match_region = [map(str, blob.sentences[i-1:i+2])     # from prev to after next
                for i, s in enumerate(blob.sentences) # i is index, e is element
                if search_words &amp; set(s.words)]       # same as your condition
</code></pre>
<p>Here, <code>blob.sentences[i-1:i+2]</code> will extract the sublist spanning from index <code>i-1</code> (inclusive) to index <code>i+2</code> (exclusive), and <code>map</code> turns the elements in this list into strings.</p>
<p><em>Note:</em> Actually, you might want to replace <code>i-1</code> with <code>max(0, i-1)</code>; otherwise <code>i-1</code> could be <code>-1</code> and Python would interpret this as the last element, yielding an empty slice. If <code>i+2</code> is higher than the list's length, on the other hand, this will not be a problem.</p>
</div>
<span class="comment-copy">Is there some indent mistakes in your code?</span>
<span class="comment-copy">i suggest, take look at 'nltk'</span>
<span class="comment-copy">@cengizkrbck TextBlob seems to work better than nltk. I a,a not able to figure the one sentence before and one after.</span>
<span class="comment-copy">Try using indices: <code>[map(str, blob.sentences[i-1:i+2]) for i, s in enumerate(blob.sentences) if search_words &amp; set(s.words)]</code></span>
<span class="comment-copy">@tobias_k Amazing Thanks Tobias :)</span>
