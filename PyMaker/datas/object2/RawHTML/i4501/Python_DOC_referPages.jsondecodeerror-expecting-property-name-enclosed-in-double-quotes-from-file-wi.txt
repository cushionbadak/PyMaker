<div class="post-text" itemprop="text">
<p>Having looked everywhere on Google and having no success at finding a solution to this problem, I continue getting the following error:</p>
<pre><code>JSONDecodeError: Expecting property name enclosed in double quotes: line 2 column 1 (char 2)
</code></pre>
<p>The error occurs at the line: <code>row = json.loads(row)</code> in my Python file. The JSON file contains a section from the Reddit comments from <code>2015-05</code>:</p>
<p>JSON (<code>learn\learning_data\2015\RC_2015-05</code>):</p>
<pre><code>{
  "created_utc": "1430438400",
  "ups": 4,
  "subreddit_id": "t5_378oi",
  "link_id": "t3_34di91",
  "name": "t1_cqug90g",
  "score_hidden": false,
  "author_flair_css_class": null,
  "author_flair_text": null,
  "subreddit": "soccer_jp",
  "id": "cqug90g",
  "removal_reason": null,
  "gilded": 0,
  "downs": 0,
  "archived": false,
  "author": "rx109",
  "score": 4,
  "retrieved_on": 1432703079,
  "body": "\u304f\u305d\n\u8aad\u307f\u305f\u3044\u304c\u8cb7\u3063\u305f\u3089\u8ca0\u3051\u306a\u6c17\u304c\u3059\u308b\n\u56f3\u66f8\u9928\u306b\u51fa\u306d\u30fc\u304b\u306a",
  "distinguished": null,
  "edited": false,
  "controversiality": 0,
  "parent_id": "t3_34di91"
}
</code></pre>
<p><strong>*The JSON data is only a fraction of what I actually have, and I cannot change the format.</strong> eg. </p>
<pre><code>{
  "text": "data",
  "text": "data"
}
{
  "text2": "data",
  "text2": "data"
}
{
  "text3": "data",
  "text3": "data"
}
etc...
</code></pre>
<p>Python (<code>learn\main.py</code>):</p>
<pre><code>with open("learning_data/{}/RC_{}".format(timeframe.split('-')[0], timeframe), buffering=1000) as f:
for row in f:
    row_counter += 1
    row = json.loads(row)
    body = format_data(row['body'])
    created_utc = row['created_utc']
    parent_id = row['parent_id']
    comment_id = row['name']
    score = row['score']
    subreddit = row['subreddit']       
    parent_data = find_parent(parent_id)

    if score &gt;= 2:
        if acceptable(body):
            existing_comment_score = find_existing_score(parent_id)
</code></pre>
<p>The JSON file already has double quotes on everything that needed double quotes.
If there was some other error causing this one <a href="https://jsonlint.com/" rel="nofollow noreferrer">JSONLint.com</a> claimed the JSON was free from them.</p>
<p>I had been referencing my code from <a href="https://pythonprogramming.net/building-database-chatbot-deep-learning-python-tensorflow/" rel="nofollow noreferrer">this tutorial</a>, where the tutorial's code worked fine without any errors (<em>this is according to the video attached, for using the code from the link above, I still get the error</em>). Because the tutorial used Python 3.5, I downgraded my Python version and continued to get the same error.</p>
<p><strong>What's the cause of this error if the JSON is already using double quotes and valid by <a href="https://jsonlint.com/" rel="nofollow noreferrer">JSONLint</a>?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>A stream of JSON documents, one-per-line, is a format also known as JSONL. This is distinct from "JSON" as such, which only permits one document to a file.</p>
<p>You can easily convert your file into this format by running <code>jq -c . &lt;in.json &gt;out.json</code>. <a href="https://stedolan.github.io/jq/" rel="nofollow noreferrer"><code>jq</code></a> is a command-line tool for processing JSON and JSONL documents; the <code>-c</code> flag enables "compact" mode, which puts each one document on each line of output.</p>
<p>Even easier, you can have that done in-line, having your Python code directly iterate over the output of <code>jq</code>:</p>
<pre><code>import subprocess

with open("learning_data/{}/RC_{}".format(timeframe.split('-')[0], timeframe)) as f:
    p = subprocess.Popen(['jq', '-c', '.'], stdin=f, stdout=subprocess.PIPE)
    for line in p.stdout:
        content = json.loads(line)
        # ...process your line's content here.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your JSON has newlines in it.</p>
<p>But your code is reading one row at a time and expecting it to be a complete JSON text:</p>
<pre><code>for row in f:
    row_counter += 1
    row = json.loads(row)
</code></pre>
<p>That's not going to work.</p>
<p>If your file is just a single JSON text, just read the whole thing:</p>
<pre><code>with open("learning_data/{}/RC_{}".format(timeframe.split('-')[0], timeframe), buffering=1000) as f:
    row_counter += 1
    row = json.load(f)
</code></pre>
<p>You may want to rename <code>row</code> to something more meaningful, like <code>contents</code>.</p>
<hr/>
<p>If your file <em>is</em> a sequence of JSON texts, and you're generating the file yourself, the right thing to do is to change the way you generate it. A stream of arbitrary JSON texts is not really a valid format. But if you really want to build a format on top of that, you can—e.g., escape all the newlines so that you can parse it line by line. Or you can use a real format. Or you can just write out a big JSON array instead of a bunch of separate JSON texts.</p>
<hr/>
<p>If you can't change the file, you need a strategy to parse it. All of these are <em>almost</em> right:</p>
<ul>
<li>Use the <code>json</code> module's <a href="https://docs.python.org/3/library/json.html#json.JSONDecoder.raw_decode" rel="nofollow noreferrer"><code>raw_decode</code></a> method to read the next JSON text and return the decoded value plus the offset to the next one.</li>
<li>Balance brackets and braces and split every time the count goes to 0.</li>
<li>Scan for newlines and then backtrack to check for open brackets and braces.</li>
</ul>
<p>Other than bad error handling, the only serious problem with any of these is that they can't possibly do the right thing for numbers as top-level texts. If your top-level texts are all objects, that's not a problem.</p>
<p>So:</p>
<pre><code>with open("learning_data/{}/RC_{}".format(timeframe.split('-')[0], timeframe), buffering=1000) as f:
    contents = f.read()
    decoder = json.JSONDecoder()
    while contents:
        row, idx = decoder.raw_decode(contents)
        row_counter += 1
        contents = contents[idx:].lstrip()
        # etc.
</code></pre>
<p>Although if your file is gigantic, you almost certainly want to <code>mmap</code> it and pass a slice/memoryview to <code>raw_decode</code>—or, if that doesn't work because you have Unicode text, you may have to buffer up chunks manually. Not exactly trivial, but then you are parsing a broken format, so this is easier than you should expect. :)</p>
</div>
<span class="comment-copy">You do not have to call <code>json.loads</code> for each JSON row. You need to pass a complete JSON as argument, e.g., <code>json.loads('["foo", {"bar":["baz", null, 1.0, 2]}]')</code></span>
<span class="comment-copy">The JSON data I have cannot be changed, I added an example of what it currently looks like.</span>
<span class="comment-copy">Subprocess cannot find the JSON file, not sure why. Double checked the path and renamed the <code>RC_2015-05</code> to <code>RC_2015-05.json</code> and it still could not find the file specified.</span>
<span class="comment-copy">Huh? <code>subprocess</code> shouldn't be <i>trying</i> to find the JSON file. You should already open the JSON file before you run any of the <code>subprocess</code> code. The only thing <code>subprocess</code> should try to find is the command named <code>jq</code>, and if that isn't installed, then you should install it.</span>
<span class="comment-copy">I do not have <code>jq</code> currently installed, and got an error installing jq: <code>error: [WinError 2] The system cannot find the file specified</code>.</span>
<span class="comment-copy">"installing jq" how? (Not that this is in-scope for a Python-tagged question... or on StackOverflow, for that matter; "how do I install software on my operating system?" is more a <a href="https://superuser.com/">SuperUser</a> topic).</span>
<span class="comment-copy">Pardon me, I misread your comment thinking <code>jq</code> was a python package. I got the following error: <code>parse error: Unfinished string at EOF at line 603195, column 263 Error: writing output failed: Invalid argument</code></span>
<span class="comment-copy">"If your file is just a single JSON text, just read the whole thing:" I am going to have more JSON text, <code>{ "text": "data"}{"text2": "data"}</code>, I just didn't want to add 600,000+ lines of JSON code. The Reddit Data is (If I'm correct) a "stream of arbitrary JSON texts", which will take forever to 'correct the format of'. As of now, I cannot change the JSON data.</span>
<span class="comment-copy">@TomJaquo Then do what the rest of my answer suggests.</span>
<span class="comment-copy">Your last code appears to only cycle through the first section of JSON code I have, perhaps because I had to comment out the <code>del contents[:idx]</code> for I get the following error:<code>'str' object does not support item deletion</code></span>
<span class="comment-copy">@TomJaquo Yes, pretty obviously just commenting out the code that skips to the next JSON text means you don’t skip to the next JSON text. Anyway, I was testing with a <code>bytearray</code> rather than a <code>str</code>; I’ve edited the answer to something that should work with <code>str</code>.</span>
<span class="comment-copy">@TomJaquo But as I mentioned in the answer, if your real input really is too big to fix up, it’s probably too big to read the whole thing into a str, decode it, and chop it up, and you really need to do something like mmap the file instead. (Although I doubt it really <i>is</i> too big; 600K lines may sound like a lot but it really isn’t that much for a modern computer.)</span>
