<div class="post-text" itemprop="text">
<p>I have a dictionary:</p>
<pre><code>sequence = {
   'group4': {'shutdown_grace': 300, 'startup_order': 4, 'warmup_time': 300, 'shutdown_order': 6, 'servers': ['group4_1', 'group4_2']},
   'group1': {'shutdown_grace': 300, 'startup_order': 1, 'warmup_time': 900, 'shutdown_order': 10, 'servers': ['group1_1', 'group1_2', 'group1_3']}, 
   'group3': {'shutdown_grace': 300, 'startup_order': 3, 'warmup_time': 900, 'shutdown_order': 7, 'servers': ['group3_1', 'group3_2']},
   'group2': {'shutdown_grace': 300, 'startup_order': 2, 'warmup_time': 900, 'shutdown_order': 8, 'servers': ['group2_1', 'group2_2']}
}
</code></pre>
<p>I wanted to create a loop that will go through this list using a value in the <code>sequence</code> dictionary (e.g. <code>sequence['group4']['startup_order']</code>). How do I do this using <code>sorted()</code>?</p>
<p>I tried using this:</p>
<pre><code>for k, v in sorted(sequence.items(), key=sequence[k]['startup_order']):
  print(k, v)
</code></pre>
<p>but it's throwing an error: <code>UnboundLocalError: local variable 'k' referenced before assignment</code></p>
</div>
<div class="post-text" itemprop="text">
<p>For <a href="https://docs.python.org/3/library/functions.html?highlight=sorted#sorted" rel="nofollow noreferrer"><code>sorted</code></a> try using a <a href="https://docs.python.org/3/tutorial/controlflow.html?highlight=lambda#lambda-expressions" rel="nofollow noreferrer"><code>lambda</code></a> for the key like:</p>
<h3>Code:</h3>
<pre><code>for k, v in sorted(sequence.items(), key=lambda x: x[1]['startup_order']):
    print(k, v)
</code></pre>
<h3>Test Code:</h3>
<pre><code>sequence = {
    'group4': {'shutdown_grace': 300, 'startup_order': 4,
               'warmup_time': 300, 'shutdown_order': 6,
               'servers': ['group4_1', 'group4_2']},
    'group1': {'shutdown_grace': 300, 'startup_order': 1,
               'warmup_time': 900, 'shutdown_order': 10,
               'servers': ['group1_1', 'group1_2', 'group1_3']},
    'group3': {'shutdown_grace': 300, 'startup_order': 3,
               'warmup_time': 900, 'shutdown_order': 7,
               'servers': ['group3_1', 'group3_2']},
    'group2': {'shutdown_grace': 300, 'startup_order': 2,
               'warmup_time': 900, 'shutdown_order': 8,
               'servers': ['group2_1', 'group2_2']}
}

for k, v in sorted(sequence.items(), key=lambda x: x[1]['startup_order']):
    print(k, v)
</code></pre>
<h3>Results:</h3>
<pre><code>('group1', {'servers': ['group1_1', 'group1_2', 'group1_3'], 'shutdown_grace': 300, 'startup_order': 1, 'shutdown_order': 10, 'warmup_time': 900})
('group2', {'servers': ['group2_1', 'group2_2'], 'shutdown_grace': 300, 'startup_order': 2, 'shutdown_order': 8, 'warmup_time': 900})
('group3', {'servers': ['group3_1', 'group3_2'], 'shutdown_grace': 300, 'startup_order': 3, 'shutdown_order': 7, 'warmup_time': 900})
('group4', {'servers': ['group4_1', 'group4_2'], 'shutdown_grace': 300, 'startup_order': 4, 'shutdown_order': 6, 'warmup_time': 300})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just do with <code>Sorted()</code> and then convert it into Ordered dict :</p>
<pre><code>import collections

data=collections.OrderedDict(sorted(sequence.items(),key=lambda x:x[1]['shutdown_order']))
</code></pre>
<p>Now data is a dict, on which you can iterate like a normal dict :</p>
<pre><code>for i,j in data.items():
   print(i,j)
</code></pre>
<p>output:</p>
<pre><code>group4 {'shutdown_grace': 300, 'warmup_time': 300, 'startup_order': 4, 'servers': ['group4_1', 'group4_2'], 'shutdown_order': 6}
group2 {'shutdown_grace': 300, 'warmup_time': 900, 'startup_order': 2, 'servers': ['group2_1', 'group2_2'], 'shutdown_order': 8}
group1 {'shutdown_grace': 300, 'warmup_time': 900, 'startup_order': 1, 'servers': ['group1_1', 'group1_2', 'group1_3'], 'shutdown_order': 10}
group3 {'shutdown_grace': 300, 'warmup_time': 900, 'startup_order': 3, 'servers': ['group3_1', 'group3_2'], 'shutdown_order': 70}
</code></pre>
</div>
<span class="comment-copy">A key function has to be a <i>function</i>. This is explained pretty nicely, with examples, in the <a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">Sorting HOWTO</a> in the official docs.</span>
<span class="comment-copy">see this: <a href="https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value" title="how do i sort a dictionary by value">stackoverflow.com/questions/613183/â€¦</a></span>
<span class="comment-copy">@VanPeer I corrected that.</span>
