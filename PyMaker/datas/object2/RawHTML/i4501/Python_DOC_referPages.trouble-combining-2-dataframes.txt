<div class="post-text" itemprop="text">
<p>I've finally gotten close to finishing this script but I have 2 small issues that I think should be easy to clear up. The main one is that the CSV with the merged data all shows up, but the dataframes don't line up perfectly. The other is the player's show as ['5452'] when I would prefer just 5452. If anyone can help me out I would greatly appreciate it.</p>
<pre><code>import requests
from random import choice
from bs4 import BeautifulSoup
import pandas as pd
from urllib.parse import urlparse, parse_qs
from functools import reduce

desktop_agents = ['Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
                 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0.1 Safari/602.2.14',
                 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36',
                 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
                 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
                 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0']

url = "https://www.fangraphs.com/leaders.aspx?pos=np&amp;stats=bat&amp;lg=all&amp;qual=0&amp;type=c,4,6,5,23,9,10,11,13,12,21,22,60,18,35,34,50,40,206,207,208,44,43,46,45,24,26,25,47,41,28,110,191,192,193,194,195,196,197,200&amp;season=2018&amp;month=0&amp;season1=2018&amp;ind=0&amp;team=0&amp;rost=0&amp;age=0&amp;filter=&amp;players=0&amp;page=1_100000"

def random_headers():
    return {'User-Agent': choice(desktop_agents),'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'}

df3 = pd.DataFrame()
# get the url

page_request = requests.get(url,headers=random_headers())
soup = BeautifulSoup(page_request.text,"lxml")

table = soup.find_all('table')[11]
data = []
# pulls headings from the fangraphs table
column_headers = []
headingrows = table.find_all('th')
for row in headingrows[0:]:
    column_headers.append(row.text.strip())

data.append(column_headers)
table_body = table.find('tbody')
rows = table_body.find_all('tr')

for row in rows:
    cols = row.find_all('td')
    cols = [ele.text.strip() for ele in cols]
    data.append([ele for ele in cols[1:]])

ID = []

for tag in soup.select('a[href^=statss.aspx?playerid=]'):
    link = tag['href']
    query = parse_qs(link)
    ID.append(query)

df1 = pd.DataFrame(data)
df1 = df1.rename(columns=df1.iloc[0])
df1 = df1.reindex(df1.index.drop(0))
df2 = pd.DataFrame(ID)

df3 = pd.concat([df1, df2], axis=1)

df3.to_csv("1.csv")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Consider the following to resolve your two issues:</p>
<ol>
<li><p><strong>MISMATCH INDEX ISSUE</strong>: When you removed the first row from <em>df1</em>, the index runs from 1 to 380. Meanwhile, the index for <em>df2</em> runs from 0 to 379. And since <code>pd.concat(..., axis=1)</code> aligns by indexes, you will render a mismatch in the records.</p>
<p>To resolve, filter out the row with <code>.loc</code> and then run <code>.reset_index()</code> to render 0 to 379. Specifically, replace:</p>
<pre><code>df1 = df1.reindex(df1.index.drop(0))
</code></pre>
<p>with </p>
<pre><code>df1 = df1.loc[1:].reset_index(drop=True)
</code></pre></li>
<li><p><strong>EMBEDDED LIST ISSUE</strong>: Assuming you are using <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer">urlparse.parse_qs()</a>, its output renders a dictionary of list values. Specifically, <code>query = parse_qs(link)</code> renders <code>{'playerid' : ['5452']}</code>.</p>
<p>The long drawn out version of <em>df2</em> assignment looks like the following with a list of dictionaries passed into a <code>DataFrame</code> call:</p>
<pre><code>df2 = pd.DataFrame([{'playerid' : ['5452']},
                    {'playerid' : ['1111']},
                    {'playerid' : ['9999']}])
</code></pre>
<p>To resolve, rebuild your list of dictionaries to take the first item of list values (i.e., index <code>[0]</code>) with a nested list/dictionary comprehension:</p>
<pre><code>new_ID = [{'k':v[0]} for i in ID for k,v in i.items()]

df2 = pd.DataFrame(new_ID)

print(df2)
#    playerid
# 0      5452
# 1      1111
# 2      9999
</code></pre></li>
</ol>
</div>
<span class="comment-copy"><code>parse_qs</code> is not defined.</span>
<span class="comment-copy">Thank you very much. I'm still in the process of learning python so at times I just try a bunch of different things until I get close lol. Actually explaining how you get to a solution is a major help for me.</span>
