<div class="post-text" itemprop="text">
<p>I have that code. And If I enter n argument is 3 it will be 3 hands.
but I want to use any card only one time.
totally there 52 cards. and each card can be use just one time.
How to I delete the cards after the use?</p>
<p>by the way, stdio.writeln is like print. same thing.  </p>
<pre><code>n = int(sys.argv[1])

SUITS = ["Clubs", "Diamonds", "Hearts", "Spades"]
RANKS = ["2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen",
         "King", "Ace"]


rank = random.randrange(0, len(RANKS))
suit = random.randrange(0, len(SUITS))


deck = []
for rank in RANKS:
    for suit in SUITS:
        card = rank + " of " + suit
        deck += [card]

for i in range(n):
    a = len (deck)

    for i in range(a):
        r = random.randrange(i, a)
        temp = deck[r]
        deck[r] = deck[i]
        deck[i] = temp

    for i in range(5):
        stdio.writeln(deck[i] + " ")
    stdio.writeln()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Leverage List comprehenshion to compose a full stack of cards, 
get a copy of mixed card from it using <a href="https://docs.python.org/3.6/library/random.html#random.sample" rel="nofollow noreferrer">random.sample()</a> and draw cards up by <a href="https://docs.python.org/3/library/stdtypes.html?highlight=list%20pop#frozenset.pop" rel="nofollow noreferrer">list.pop()</a> which will remove the card automatically.</p>
<p>I reduced the <code>RANKS</code> a bit to shorten the print-outs:</p>
<pre><code>SUITS = ["Clubs", "Diamonds", "Hearts", "Spades"]
RANKS = ["2", "3", "4", "5", "6"] #,'7", "8", "9", "10", "Jack", "Queen", "King", "Ace"]

import random
# in order
StackOfCards = [ f'{r} of {s}' for r in RANKS for s in SUITS]

# return random.sample() of full length input == random shuffled all cards 
mixedDeck = random.sample(StackOfCards, k = len(StackOfCards))

print("Orig:",StackOfCards)
print()
print("Mixed:",mixedDeck)
print()

# draw 6 cards into "myHand" removing them from "mixedDeck":
myHand = [mixedDeck.pop() for _ in range(6)]

print("Hand:",myHand) 
print()
print("Mixed:",mixedDeck)
</code></pre>
<p>Output:</p>
<pre><code>Orig: ['2 of Clubs', '2 of Diamonds', '2 of Hearts', '2 of Spades', '3 of Clubs', 
       '3 of Diamonds', '3 of Hearts', '3 of Spades', '4 of Clubs', '4 of Diamonds', 
       '4 of Hearts', '4 of Spades', '5 of Clubs', '5 of Diamonds', '5 of Hearts', 
       '5 of Spades', '6 of Clubs', '6 of Diamonds', '6 of Hearts', '6 of Spades']

Mixed: ['2 of Clubs', '3 of Diamonds', '6 of Hearts', '4 of Spades', '5 of Clubs', 
        '3 of Hearts', '6 of Spades', '5 of Hearts', '4 of Diamonds', '3 of Spades', 
        '2 of Spades', '6 of Clubs', '4 of Clubs', '5 of Spades', '6 of Diamonds', 
        '2 of Diamonds', '3 of Clubs', '2 of Hearts', '5 of Diamonds', '4 of Hearts']

Hand: ['4 of Hearts', '5 of Diamonds', '2 of Hearts', 
       '3 of Clubs', '2 of Diamonds', '6 of Diamonds']

Mixed: ['2 of Clubs', '3 of Diamonds', '6 of Hearts', '4 of Spades', '5 of Clubs', 
        '3 of Hearts', '6 of Spades', '5 of Hearts', '4 of Diamonds', '3 of Spades', 
        '2 of Spades', '6 of Clubs', '4 of Clubs', '5 of Spades']
</code></pre>
<hr/>
<p>Using <code>.pop()</code> alleviated the need of removing something, if you really dislike it (why would you?) you can recreate a list without elements of another list by:</p>
<pre><code>l = [1,2,3,4,5,6]
p = [2,6]
l[:] = [ x for x in l if x not in p] # inplace modifies l to [1,3,4,5]
</code></pre>
</div>
<span class="comment-copy">you think in my code,  for i in range(5):         stdio.writeln(deck[i] + " ") deck.pop(i)     stdio.writeln() is it right??</span>
<span class="comment-copy">@Njx probably more like <code>for _ in range(5): stdio.writeln(deck.pop())</code> - after that your <code>deck</code> will be 5 cards shorter - the first 5 being removed by pop() ing them when printing.</span>
<span class="comment-copy">yes Ä± use python. but different library.</span>
<span class="comment-copy">Yes it worked. thank you so much</span>
<span class="comment-copy">@njx You probably need to keep track of the hand as well, so pop() the cards into a list (<code>myHand</code>) and print that afterwards.</span>
