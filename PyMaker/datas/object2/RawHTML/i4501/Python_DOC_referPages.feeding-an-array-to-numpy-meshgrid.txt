<div class="post-text" itemprop="text">
<p><code>meshgrid</code> seems to be coded in such a way that each dimension of the meshgrid has to be named individually (e.g. <code>x</code> and <code>y</code>)</p>
<p><code>xv, yv = np.meshgrid(x, y)</code></p>
<p>I am wondering if I can do the same just feeding an array which contains x and y, possibly setting some option of meshgrid to instruct it to use the array the way I need. </p>
<p>I want to do this because it makes life a lot easier when the number of dimensions onto which the meshgrid has to be build is either large or not known a priori.</p>
<p>So the problem is</p>
<pre><code>np.meshgrid([1,2],[10,20])
</code></pre>
<p>gives</p>
<pre><code>[array([[1, 2],
        [1, 2]]), array([[10, 10],
        [20, 20]])]
</code></pre>
<p>whereas I'd like to to something like</p>
<pre><code>np.meshgrid([[1,2],[10,20]])
</code></pre>
<p>but this gives a useless 1D array.</p>
<p>I cannot find any helpful option in the <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html" rel="nofollow noreferrer">doc</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>It's a case for <em>Unpacking Argument Lists</em>, and you use the <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer"><code>*</code>-operator</a> for this in python:</p>
<pre><code>lst = [[1,2],[10,20]]
np.meshgrid(*lst)

#[array([[1, 2],
#        [1, 2]]), array([[10, 10],
#        [20, 20]])]
</code></pre>
</div>
