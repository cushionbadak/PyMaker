<div class="post-text" itemprop="text">
<p>I hope to get all classes names and fields within each class given a python file say myFile.py. Is there a way to achieve that? I want to pass in myFile.py and get the result.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered parsing your Python file with the built-in Abstract Syntax Trees (<a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer"><code>ast</code></a>) module, and then examining the results to retrieve the data of interest? Something as simple as:</p>
<pre><code>import ast

def print_info(path):
    with open(path, "r") as src:
        compiled = ast.parse(src.read(), "&lt;string&gt;", "exec")
        for element in compiled.body:
            if isinstance(element, ast.ClassDef):  # we're interested only in classes
                fields = []
                methods = []
                for field in element.body:  # iterate over the class fields/methods
                    if isinstance(field, ast.Assign):  # field assignment
                        for target in field.targets:  # value can be assigned to many fields
                            fields.append(target.id)
                    elif isinstance(field, ast.FunctionDef):  # method definition
                        methods.append(field.name)
                    # etc.
                print("Class: " + element.name)
                print("\tFields:  " + ", ".join(fields))
                print("\tMethods: " + ", ".join(methods))
</code></pre>
<p>fulfills your main requirement. For example, if we had a python source file as <code>myFile.py</code> containing:</p>
<pre><code>class A(object):

    name = "A"

    def __init__(self, x):
        self.x = x

class B(object):

    name = "B"
    kind = "Child"

    def instance_method(self):
        pass

    @classmethod
    def class_method(cls):
        pass

    @staticmethod
    def static_method():
        pass
</code></pre>
<p>we could easily parse it using the above:</p>
<pre><code>print_info("myFile.py")
</code></pre>
<p>And the output would look like:</p>
<pre>Class: A
    Fields:  name
    Methods: __init__
Class: B
    Fields:  name, kind
    Methods: instance_method, class_method, static_method</pre>
<p>Check the rest of the <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer"><code>ast</code></a> package to see what sort of a data you can extract from it (hint: most of it).</p>
</div>
<span class="comment-copy">What exactly do you mean by "field"? Class attributes or instance attributes? And what about properties and other descriptors?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/633127/viewing-all-defined-variables">Viewing all defined variables</a></span>
<span class="comment-copy">This is a (somewhat) commonly-asked question, so it must be a dup of something with an answer that would help the OP here (the answer is basically just <code>inspect.getmembers(module)</code>), but every answer that seems relevant, the questioner already knows about <code>inspect</code>â€¦</span>
<span class="comment-copy">@chrisz What good is either <code>globals</code> or <code>locals</code> going to do for you in enumerating a module or a class in that module?</span>
<span class="comment-copy">Yea may have flagged it as the wrong one</span>
