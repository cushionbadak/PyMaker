<div class="post-text" itemprop="text">
<p>Trying to write a value to HKLM hive by the path provided below. Code silently completes without errors or exceptions, however, value remains the same. The script is executed under Administrator, without it AccessDenied (5) Windows error is thrown as expected. No antivirus installed which could have prevented access to the registry.</p>
<pre><code>def write_to_registry(key_hive, key_path, value_name, value_type, key_value):
    registry_key = None
    try:
        registry_key = winreg.OpenKey(key_hive, key_path, 0, winreg.KEY_WRITE)
        winreg.SetValueEx(registry_key, value_name, 0, value_type, key_value)
        winreg.CloseKey(registry_key)
        return True
    except Exception as e:
        logger.error("Unable to write to registry path {0}\\{1} with exception {2}", key_hive, key_path, e)
        if registry_key is not None:
            winreg.CloseKey(registry_key)
        return False

def winreg_test():
    write_to_registry(winreg.HKEY_LOCAL_MACHINE,
        "SOFTWARE\Microsoft\Windows NT\CurrentVersion", 
        "InstallDate", 
        winreg.REG_DWORD, 
        1520610000)
</code></pre>
<p>I even suspected that I met some kind of system hook (Windows NT is a sensitive key, you know), but editing it manually or using command line works fine</p>
<pre><code>reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v InstallDate /t REG_DWORD /d 1520610000 /f
</code></pre>
<p>performing edit of the "InstallDate" key without any problems</p>
<p>Python 3.6.5</p>
<p>Windows 7 SP1 x64</p>
<p>UPDATE: Problem solved, see my solution below</p>
</div>
<div class="post-text" itemprop="text">
<p>Obviously, the reason was in x64 system "double" registry, for 32- and 64-bit applications. Changing the code to </p>
<pre><code>winreg.OpenKey(key_hive, key_path, 0, (winreg.KEY_WOW64_64KEY | winreg.KEY_WRITE))
</code></pre>
<p>made things work</p>
</div>
<span class="comment-copy">So, no output by <code>logger</code>? Did you test the return value? Obvious workaround: use a system call. (<a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>)</span>
<span class="comment-copy">No logger output, as I said above, the code executes without any exception. What do you mean by "system call", pywin32?</span>
<span class="comment-copy">Running the system command with e.g. <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer"><code>os.system()</code></a>.</span>
<span class="comment-copy">Flags should be bitwise OR'd with <code>|</code>, not added, even though addition works in this case. Consider the result with something like <code>existing_flags + flag</code>; it's wrong in general.</span>
