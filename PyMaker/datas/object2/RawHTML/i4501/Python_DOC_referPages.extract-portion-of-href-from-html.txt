<div class="post-text" itemprop="text">
<p>I'm looking for a way to get portions of href's into a pandas data table.</p>
<pre><code>&lt;/tbody&gt;
  &lt;tr class="rgRow" id="LeaderBoard1_dg1_ctl00__0"&gt;
      &lt;td class="grid_line_regular" align="right"&gt;1&lt;/td&gt;
      &lt;td class="grid_line_regular"&gt;
          &lt;a href="statss.aspx?playerid=11205&amp;amp;position=OF"&gt;Adam Eaton&lt;/a&gt;
      &lt;/td&gt;
  &lt;td class="grid_line_regular"&gt;
      &lt;a href="leaders.aspx?pos=all&amp;amp;stats=bat&amp;amp;lg=all&amp;amp;qual=0&amp;amp;type=8&amp;amp;season=2018&amp;amp;month=0&amp;amp;season1=2018&amp;amp;ind=0&amp;amp;team=24&amp;amp;rost=0&amp;amp;age=0"&gt;Nationals&lt;/a&gt;
  &lt;/td&gt;
</code></pre>
<p>Can anyone help me with extracting JUST the numerical characters that come after "playerid"? I've managed to scrape the data from the website but it's worthless without having the player's corresponding ID. Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need an HTML parser to read the data table and a URL parser to extract the parameter of the <code>href</code>:</p>
<pre><code>from bs4 import BeautifulSoup  # pip install beautifulsoup4
from urllib.parse import urlparse, parse_qs
soup = BeautifulSoup(your_html_doc_string)

for link in soup.find_all('a'):
    o = urlparse(link.get('href'))
    query = parse_qs(o.query)
    print(query)
    # will print like:
    # {'playerid': ['13510'], 'position': ['2B/3B']}
</code></pre>
<p><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">Beautiful Soup doc</a></p>
<p><a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">Python3 urlparse doc</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here you are a simple solution for your problem (tested and working):</p>
<pre><code>from urllib.request import urlopen
from bs4 import BeautifulSoup
import re

# Put the url of your site here
url = "https://example.dev"
html = urlopen(url)
bs4 = BeautifulSoup(html, 'html.parser')
# In this line you find the first &lt;a&gt; tag that contain the 'playerid=' string in the href attribute
a = bs4.find('a', href=re.compile('(playerid=)'))
# In this line you get the link in the href attribute
link = a.attrs['href']
# In this line you operate on the link to get the ID
player_id = link.split('=')[1].split('&amp;')[0]
</code></pre>
<p>Let me know if you need more help!</p>
</div>
<div class="post-text" itemprop="text">
<p>There is definitely a more efficient solution, but this should give you a basic idea on how to approach this problem.</p>
<pre><code>import requests
from bs4 import BeautifulSoup

url = "https://.."

source_code = requests.get(url).text
soup = BeautifulSoup(source_code, 'lxml')

td_content = soup.find_all('td', {'class': 'grid_line_regular'})
playerids = []
for i in range(len(td_content)):
    link = td_content[i].find('a')['href'].strip()
    if(link and link[:6] == 'statss'):
        playerids.append(link[21:26])
</code></pre>
</div>
<span class="comment-copy">Thanks for the response, this has me in the right direction but when I print it includes a bunch of other data. I edited my original post to show that there are other href's that I don't want to pull. I'm going to try and figure it out but if you have any ideas I would appreciate it.</span>
<span class="comment-copy">@Nick If <code>playerid</code> parameter only appears in the second column, we could write sth like <code>soup.find('tr').find_all('td')[1]</code> to get that <code>td</code> column, or maybe only print queries when <code>playerid</code> key included.</span>
<span class="comment-copy">I figured it out (mostly at least). Thanks for your help.</span>
<span class="comment-copy">You can <code>for td in td_content</code>, perhaps you could rename it to <code>tds</code> or  <code>td_elements</code>, since calling it content is in my opinion misleading.</span>
