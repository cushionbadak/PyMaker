<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18453566/python-dictionary-get-list-of-values-for-list-of-keys">Python dictionary: Get list of values for list of keys</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<pre><code>my_dict = {'one': 1, 'two': 2, 'three': 3}
my_keys = ['three', 'one','ten','one']

solutions = []
for key,value in my_dict.items():
    found = False
    for i in my_keys:
        if i in key:
           solutions.append(value)
           found = True
           break
        if not found:
           solutions.append('Nan')
</code></pre>
<p>I get this output: </p>
<blockquote>
<p>['Nan', 1, 'Nan', 'Nan', 'Nan', 'Nan', 3]</p>
</blockquote>
<p>but the <strong>expected output is:</strong></p>
<blockquote>
<p>Output: ['3', '1', 'Nan', '1']</p>
</blockquote>
<p>How can I get the expected output?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you wanted to generate the solutions list with respect to the my_keys list.</p>
<p>Try this:</p>
<pre><code>my_dict = {'one': 1, 'two': 2, 'three': 3}
my_keys = ['three', 'one','ten','one']

solutions = []
for key in my_keys:
    if key in my_dict:
        solutions.append(my_dict[key])
    else:
        solutions.append('Nan')

print(solutions)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> and <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get()</code></a> that can be done like:</p>
<h3>Code:</h3>
<pre><code>solutions = [my_dict.get(k, 'Nan') for k in my_keys]
</code></pre>
<h3>Test Code:</h3>
<pre><code>my_dict = {'one': 1, 'two': 2, 'three': 3}
my_keys = ['three', 'one', 'ten', 'one']

solutions = [my_dict.get(k, 'Nan') for k in my_keys]
print(solutions)
</code></pre>
<h2>Results:</h2>
<pre><code>[3, 1, 'Nan', 1]
</code></pre>
</div>
