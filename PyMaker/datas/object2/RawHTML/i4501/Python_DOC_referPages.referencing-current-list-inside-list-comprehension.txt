<div class="post-text" itemprop="text">
<p>*Apologies if the title makes no sense. </p>
<p>I am trying create a new list, which contains elements from list <code>a</code> that are also found in list <code>b</code> (without duplicates). </p>
<p>My current code works, except it includes duplicates. What I am trying to do (see below) throws an error message. I know why it is not working, but is there a way to get around this, while keeping the code on one line?</p>
<pre><code>a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]


# What I have currently
list2 = [num for num in a if num in b]

print(list2)
</code></pre>
<blockquote>
<p>[1, 1, 2, 3, 5, 8, 13]</p>
</blockquote>
<pre><code># What I am trying to do
list2 = [num for num in a if num in b and num not in list2]

print(list2)
</code></pre>
<blockquote>
<p>NameError: name 'list2' is not defined</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You should use a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a> here, because:</p>
<blockquote>
<p>Set objects support mathematical operations like union, intersection, difference, and symmetric difference</p>
</blockquote>
<pre><code>In [38]: a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
    ...: b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
    ...:

In [39]: set(a) &amp; set(b)
Out[39]: {1, 2, 3, 5, 8, 13}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The best way to solve this would be to use <code>sets</code> and the <code>intersection</code> method.</p>
<pre><code>&gt;&gt;&gt; a = set([1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89])
&gt;&gt;&gt; b = set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])
&gt;&gt;&gt; a.intersection(b)
    set([1, 2, 3, 5, 8, 13])
</code></pre>
<p>Edit: Chris beat me to it :)</p>
</div>
<span class="comment-copy">Use sets, much easier.</span>
<span class="comment-copy">Thanks! That's a great help. How does this work exactly? I came across sets, but don't quite understand them. Is there only purpose to remove duplicates from a list?</span>
<span class="comment-copy">@Polar_Py Sets are just unordered collections without duplicate elements.  The intersection of two sets (elements found in both sets) is also a set, so it will not contain duplicates.</span>
<span class="comment-copy">Thanks anyway! If I wanted to convert a set to a list, would I just do mylist = list(myset)?</span>
<span class="comment-copy">Yep! <code>list(a)</code> will transform <code>a</code> back into a list.</span>
