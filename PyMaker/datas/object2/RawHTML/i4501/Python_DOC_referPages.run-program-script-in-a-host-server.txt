<div class="post-text" itemprop="text">
<p>i'm currently working in a project that i have a python code injecting data in a database. But i need this code to run 24/7 or "fulltime". Does anyone know how can i do it? Not injecting data to a database, but the possible ways to make a script, software, console program and things like that, run full time in a server or a host without supervision, without needing to "Turn On/Off", you just put the code/file there and tell it to run indeterminately.</p>
<p>I have seen that <a href="https://www.pythonanywhere.com" rel="nofollow noreferrer">Python Anywere</a> can do schedule runs of scripts, each hour, day, minute... but it's not a solution for me. Is it possible to be done with the paid version of it?</p>
<p>I don't know much about databases, hosts and servers and things like that, but i'm looking for more informations about all those things to reach a best approach for this problem.</p>
<p>Thanks for your time.</p>
<p>UPDATE1:
People on forums used to say that VPS is a good solution for that</p>
</div>
<div class="post-text" itemprop="text">
<p>you could use cron job to schedule you code to run. in side of your python code you could check the file exists first than do anything you want to do</p>
<p><a href="https://en.wikipedia.org/wiki/Cron" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Cron</a></p>
</div>
<span class="comment-copy">In general, to have a script that runs continuously, you just put a <code>while True</code> loop in it (probably with a short <code>time.sleep()</code> to prevent it from using 100% of the CPU just waiting for something to do). To keep it running after you log out, you can use <code>nohup</code>, <code>screen</code>, or <code>tmux</code> (assuming Linux host). To control it, you can send it signals with the <code>kill</code> command and write a <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">signal handler</a> in your Python code. This then becomes more "how do I use my shell" than a programming question.</span>
<span class="comment-copy">Another way to get your script to run in the background is to create an <code>init.d</code> script for it (Linux) or a service (Windows). That will start it at boot and provide the ability to easily start and stop it. Another way to control it (rather than signals) would be with a local socket (Linux) or named pipe (Windows).</span>
<span class="comment-copy">But i don't need to make it schedule, it needs to be running full time</span>
<span class="comment-copy">you could setup entry time in cron, than in python do infinite loop</span>
<span class="comment-copy">I will give a better look into it, thanks</span>
