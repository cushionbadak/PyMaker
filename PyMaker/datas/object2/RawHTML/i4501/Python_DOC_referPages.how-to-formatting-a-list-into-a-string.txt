<div class="post-text" itemprop="text">
<p>I am trying to format a string in python that takes arguments as items from a list of names.
The catch is, I want to print all the list items with <strong>double quotes and backslash</strong> and one after each other in the same string only.
The code is:</p>
<pre><code>list_names=['Alex', 'John', 'Joseph J']
String_to_pring='Hi my name is (\\"%s\\")'%(list_names)
</code></pre>
<p>The output should look like this:</p>
<pre><code>'Hi my name is (\"Alex\",\"John\",\"Joseph J\")'
</code></pre>
<p>But instead, I keep getting like this:</p>
<pre><code>'Hi my names is (\"['Alex','John','Joseph J']\")'
</code></pre>
<p>I've even tried using <code>.format()</code> and <code>json.dumps()</code> but still the same result.</p>
<p>Is there any way to print the desired output or can I only print each list item at a time?</p>
</div>
<div class="post-text" itemprop="text">
<p>Without changing much of your code, you could simply format the <code>repr</code> representation of the list that's converted into a tuple.</p>
<pre><code># proper way - this is what you actually want
list_names = ['Alex', 'John', 'Joseph J']
string_to_print = 'Hi my name is %s' % (repr(tuple(list_names)))
Â 
print(string_to_print)
# Hi my name is ('Alex', 'John', 'Joseph J')
</code></pre>
<p>If you want to get your exact output, just do some string replacing:</p>
<pre><code># improper way
list_names = ['Alex', 'John', 'Joseph J']
string_to_print = 'Hi my name is %s' % (repr(tuple(list_names)).replace("\'", '\\"'))

print(string_to_print)
# Hi my name is (\"Alex\", \"John\", \"Joseph J\")
</code></pre>
<p><sub> if you're trying to pass <code>string_to_print</code> to some other place, just try the proper way first, it might actually work for you.</sub></p>
<hr/>
<p>If you were mindful enough, you'll find that the previous "improper way" contains a small bug, try this adding <code>"Alex's house"</code> into <code>list_names</code>, the output would look like this:</p>
<pre><code>Hi my name is (\"Alex\", \"John\", \"Joseph J\", "Alex\"s house")
</code></pre>
<p>To take care of that bug, you'll need to have a better way of replacing, by using <code>re.sub()</code>.</p>
<pre><code>from re import sub

list_names = ['Alex', 'John', 'Joseph J', "Alex's house"]
string_to_print = 'Hi my name is %s' % (sub(r'([\'\"])(.*?)(?!\\\1)(\1)', r'\"\2\"', repr(tuple(list_names))))
print(string_to_print)
</code></pre>
<p>But if things like this wouldn't happen during your usage, I would suggest to keep using the "improper way" as it's a lot simpler.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no function for formatting lists as human-friendly strings You have to format lists yourself:</p>
<pre><code>names = ",".join(r'\"{}\"'.format(name) for name in list_names)
print(names)
#\"Alex\",\"John\",\"Joseph J\"
print('Hi my name is ({})'.format(names))
#Hi my name is (\"Alex\",\"John\",\"Joseph J\")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is one way using <a href="https://docs.python.org/3/library/string.html#string.Formatter.format" rel="nofollow noreferrer"><code>format</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>join</code></a>:</p>
<pre><code>list_names = ['Alex', 'John', 'Joseph J']
String_to_pring='Hi my name is (\\"{}\\")'.format('\\",\\"'.join(i for i in list_names))

# Hi my name is (\"Alex\",\"John\",\"Joseph J\")
</code></pre>
</div>
<span class="comment-copy">I tried using the improper way and it really works. Why we are passing tuple as list names and not the actual lists?</span>
<span class="comment-copy">Lists are formatted with square brackets, but your expected output uses parentheses instead, which represents tuple. You <i>can</i> remove <code>tuple()</code>, but the output would change to <code>"Hi my name is [\"Alex\", ...]"</code></span>
<span class="comment-copy">With the replace function added after the tuple_names, the output I'm getting is: Hi my name is (\\"Alex\\", \\"John\\", \\"Joseph J\\"). The backslash is getting replaced with double backslashed and not the single.</span>
<span class="comment-copy">You're not using print(), what you're seeing is just the repr of tuple_names, it's for showing you that the double quotes are escaped. The actual string contains only one backslash. If you ran my code as-is, or write it to a file, you'll see that there's only one backslash.</span>
<span class="comment-copy">Didn't consider the "Alex's House" scenario as I was just trying to print the first names only. But thanks for the upgrade.</span>
<span class="comment-copy">To the downvoter: what's wrong with my suggested solution?</span>
<span class="comment-copy">Your method works as well, thanks. Is it possible to follow same approach by passing arguments to %s as well?</span>
<span class="comment-copy"><code>%s</code> is an old-style formatting mechanism and should be avoided  <a href="https://pyformat.info/" rel="nofollow noreferrer">pyformat.info</a></span>
