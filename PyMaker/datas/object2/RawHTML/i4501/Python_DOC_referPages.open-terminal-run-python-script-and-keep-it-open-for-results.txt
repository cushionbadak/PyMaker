<div class="post-text" itemprop="text">
<p>How to get an sh script for starting a new terminal, execute a python script and keep it running? The python script is supposed to run continuously in a perpetual loop, spitting out results as they pop in. Whenever trying with sh-script for gnome-terminal just getting: child process exited normally with status 2</p>
<p>Manually it would just be: python home/ubuntu/pyscript.py</p>
<p>Could someone give an idea how to do this?</p>
<p>I have a list of scripts to run, so resorting to the manual solution is tedious.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>gnome-terminal</code> with the <code>-x</code> flag.
Suppose you have a <code>spam.py</code> script; then the following command will spawn a new terminal, run <code>spam.py</code> in it, and close the terminal once the script has ended.</p>
<pre><code>gnome-terminal -x python spam.py
</code></pre>
<p>Try with this script:</p>
<pre><code># spam.py
import time

for _ in range(5):
    print("eggs")
    time.sleep(1)
</code></pre>
<p>Then the previous command will spawn a terminal, that will be printed <code>eggs</code> five times, and then will be closed.</p>
<p>If you want to leave the terminal open with the Python interpret still running after the script ended, then Python's <code>-i</code> flag (<a href="https://docs.python.org/3/tutorial/interpreter.html" rel="nofollow noreferrer">doc</a> then <kbd>CTRL</kbd>+<kbd>F</kbd> -&gt; <code>-i</code>) is what you want:</p>
<pre><code>gnome-terminal -x python -i spam.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To run the Python script in a new instance of your favourite terminal, write:</p>
<pre><code>x-terminal-emulator -e python -i home/ubuntu/pyscript.py
</code></pre>
<p>This will start the Python script and run it until it ends, then display a Python prompt to stop the terminal emulator from closing.</p>
<p>This will work with <code>x-terminal-emulator</code> substituted with any of the many, many terminals installed on my computer, so will work with little modification across all POSIX-compatible systems with the standard terminals installed. This won't work on a Mac, however. For a <em>properly</em> cross-platform Python implementation of something slightly different, see <a href="https://github.com/PolyEdge/ScratchEdit/blob/b8270e7e01202210400b5f1b7a3347efc4e6a2b3/ScratchEdit.pyw#L193-L240" rel="nofollow noreferrer">here</a>. Most of the techniques should be transferable.</p>
<hr/>
<p>To run the Python script in the same terminal whilst carrying on with the rest of the shell script, write:</p>
<pre><code>python home/ubuntu/pyscript.py &amp;
</code></pre>
<p>Note the <code>&amp;</code>, which runs the program as a new process (but still connects the output to the virtual terminal).</p>
</div>
<span class="comment-copy">add <code>&amp;</code> at the end of the line e.g <code>python home/ubuntu/pyscript.py &amp;</code>, run in background, also you should append output to file for debug and monitoring <code>python home/ubuntu/pyscript.py &gt;&gt; pyscript.log 2&gt;&amp;1 &amp;</code></span>
<span class="comment-copy">Show us your current attempt so we can see where you went wrong.</span>
