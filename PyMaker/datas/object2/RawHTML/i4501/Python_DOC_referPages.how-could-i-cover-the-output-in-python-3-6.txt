<div class="post-text" itemprop="text">
<p>I try to rewrite a line in an output with this code.</p>
<pre><code>import time

print('Hello, world!', end='', flush=True)
time.sleep(1)
print('\rHi.')
</code></pre>
<p>I prefer to get this at last:</p>
<pre><code>Hi.
</code></pre>
<p>But actually, I got this:</p>
<pre><code>Hi.lo, world!
</code></pre>
<p>So, how could I do?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\r</code> just moves the cursor to the beginning of the line, you'll have to overwrite the rest of the already printed text with, for example, space to blank it out:</p>
<pre><code>import time

start_text = "Hello, world!"
replace_text = "Hi."

print(start_text, end='', flush=True)
time.sleep(1)
print("\r" + replace_text + " " * (len(start_text) - len(replace_text)))
# or: print("\r" + " " * len(start_text) + "\r" + replace_text)
</code></pre>
</div>
<span class="comment-copy">I have to know the previous string length in this way. But in my code, I could not get the length.</span>
<span class="comment-copy">@coderben - If you're controlling everything that's printed on screen, sure you can keep the length of the last printed line - just write a proxy around <code>print()</code> (or even better, hijack <code>sys.stdout</code>). If you really can't control the output you'll have to guess how wide the terminal is (a typical width is <code>80</code>) and print that many spaces then roll back. Obtaining console width will depend on the platform you're using, tho. Either way, if you want to do fancy console painting you might want to explore the <a href="https://docs.python.org/3/library/curses.html" rel="nofollow noreferrer"><code>curses</code></a> module anyway.</span>
