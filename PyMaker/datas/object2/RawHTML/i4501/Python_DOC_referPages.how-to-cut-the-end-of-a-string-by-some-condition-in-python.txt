<div class="post-text" itemprop="text">
<p>I have searched possible ways but I am unable to mix those up yet. I have a string that is a path to the image.</p>
<pre><code>myString= "D:/Train/16_partitions_annotated/partition1/images/AAAAA/073-1_00191.jpeg"
</code></pre>
<p>What I want to do is replace <code>images</code> with <code>IMAGES</code> and cut off the <code>073-1_00191.jpeg</code> part at the end. Thus, the new string string should be </p>
<pre><code>newString = "D:/Train/16_partitions_annotated/partition1/IMAGES/AAAAA/"
</code></pre>
<p>And the chopped part (<code>073-1_00191.jpeg</code>) <strong><em>will be used separately</em></strong> as the name of processed image. The function <code>.replace()</code> doesn't work here as I need to provide <code>path</code> and <code>filename</code> as separate parameters. </p>
<p>The reason why I want to do is that I am accessing images through their paths and doing some stuff on them and when saving them I need to create another directory (in this case <code>IMAGES</code>) and the next directories after that (in this case <code>AAAAA</code>) should remain the same ( together with the name of corresponding image). </p>
<p><strong><em>Note that images may have different names and extensions</em></strong></p>
<p><em>If something is not clear by my side please ask, I will try to clear up</em></p>
</div>
<div class="post-text" itemprop="text">
<p>As alluded to in the comments, <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">os.path</a> is useful for manipulating paths represented as strings.</p>
<pre><code>&gt;&gt;&gt; import os

&gt;&gt;&gt; myString= "D:/Train/16_partitions_annotated/partition1/images/AAAAA/073-1_00191.jpeg"

&gt;&gt;&gt; dirname, basename = os.path.split(myString)

&gt;&gt;&gt; dirname
'D:/Train/16_partitions_annotated/partition1/images/AAAAA'

&gt;&gt;&gt; basename
'073-1_00191.jpeg'
</code></pre>
<p>At this point, how you want to handle capitalizing "images" is a function of your broader goal.  If you want to simply capitalize that specific word, <code>dirname.replace('images', 'IMAGES')</code> should suffice.  But you seem to be asking for a more generalized way to capitalize the <em>second to last directory in the absolute path</em>:</p>
<pre><code>&gt;&gt;&gt; def cap_penultimate(dirname):
...     h, t = os.path.split(dirname)
...     hh, ht = os.path.split(h)
...     return os.path.join(hh, ht.upper(), t)
... 

&gt;&gt;&gt; cap_penultimate(dirname)
'D:/Train/16_partitions_annotated/partition1/IMAGES/AAAAA'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's game of slicing , Here you can try this :</p>
<pre><code>myString= "D:/Train/16_partitions_annotated/partition1/images/AAAAA/073-1_00191.jpeg"

myString1=myString.split('/')


pre_data=myString1[:myString1.index('images')]

after_data=myString1[myString1.index('images'):]

after_data=['IMAGE'] + after_data[1:2]

print("/".join(pre_data+after_data))
</code></pre>
<p>output:</p>
<pre><code>D:/Train/16_partitions_annotated/partition1/IMAGE/AAAAA
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simple way :</p>
<pre><code>myString= "D:/Train/16_partitions_annotated/partition1/images/AAAAA/073-1_00191.jpeg"

a = myString.rfind('/')

filename = myString[a+1:]

restofstring = myString[0:a]


alteredstring = restofstring.replace('images', 'IMAGES')
print(alteredstring)
</code></pre>
<p>output:</p>
<pre><code>D:/Train/16_partitions_annotated/partition1/IMAGE/AAAAA
</code></pre>
</div>
<span class="comment-copy"><code>os.path.split</code> or <code>os.path.dirname</code>/<code>os.path.basename</code> are what you want for splitting the final file's name from the path to it.</span>
