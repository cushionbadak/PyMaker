<div class="post-text" itemprop="text">
<p>I love receiving a text message every morning from Chase Bank containing the balance of my checking account. I dove into my personal account settings to see if I could schedule a message to be sent to me with the other account balances on my account, only to realize that checking was the only account this was possible with.</p>
<p>Using a library called mintapi (<a href="https://github.com/mrooney/mintapi" rel="nofollow noreferrer">https://github.com/mrooney/mintapi</a>), I was able to scrape the account data living in my Mint account. The goal is to send a text message through Twillio with the balance of every single account in my Mint account every single morning.</p>
<pre><code>$ mintapi [email: String] [password: String] --accounts
</code></pre>
<p>Running the command above in your terminal returns the following object for each financial account I have in Mint:</p>
<pre><code>{
    "linkedAccountId": null,
    "addAccountDate": Int,
    "fiLoginDisplayName": Str,
    "dueDate": "12/27/2017",
    "isTerminal": true,
    "linkCreationTime": null,
    "isActive": true,
    "lastUpdated": Int,
    "rateType": 2,
    "fiName": Str,
    "origAmount": null,
    "klass": "loan",
    "accountTypeInt": 6,
    "id": 9856811,
    "fiLoginId": 3914975,
    "accountType": "loan",
    "currentBalance": Int,
    "fiLoginStatus": "OK",
    "origDate": "02/27/2020",
    "linkStatus": "NOT_LINKED",
    "accountId": Int,
    "yodleeAccountId": Int,
    "name": Str (Account Nickname),
    "status": "1",
    "accountName": Str (Account Name, e.g. Chase Checking),
    "ccAggrStatus": 0,
    "exclusionType": "0",
    "linkedAccount": null,
    "isHiddenFromPlanningTrends": true,
    "accountStatus": "1",
    "accountSystemStatus": "ACTIVE",
    "fiLastUpdated": Int,
    "yodleeAccountNumberLast4": "Int",
    "isError": false,
    "isAccountNotFound": false,
    "rate": null,
    "possibleLinkAccounts": [],
    "lastUpdatedInString": "12 hours",
    "currency": "USD",
    "term": 100,
    "isHostAccount": false,
    "value": Int (Confidential - Account Balance),
    "usageType": null,
    "interestRate": null,
    "isAccountClosedByMint": false,
    "userName": null,
    "yodleeName": Str,
    "closeDate": Int,
    "dueAmt": Int (Confidential - Amount due on next bill),
    "amountDue": 0.0,
    "isClosed": false,
    "fiLoginUIStatus": "OK",
    "addAccountDateInDate": "2017-06-11 13:54:06",
    "closeDateInDate": "2018-03-30 08:21:39",
    "fiLastUpdatedInDate": "2018-03-31 05:33:47",
    "lastUpdatedInDate": "2018-03-31 05:33:47"
  }
</code></pre>
<p>What I would like to do is capture the output from the bash script above, and store it as JSON data in a python variable. </p>
<p><strong>Edit:</strong> Since asking the question, I have discovered the subprocess library. </p>
<pre><code>import subprocess
out = subprocess.run("mintapi 'email' '******' --accounts", shell=True)
</code></pre>
<p>Now, my return value is: </p>
<pre><code>CompletedProcess(args="mintapi 'email' '*******' --accounts", returncode=0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Oh! It took me a while before I finally understood the question, whoops.
Twilio <a href="https://www.twilio.com/docs/sms/send-messages" rel="nofollow noreferrer">have API documentation for sending a message</a> and <a href="https://www.twilio.com/docs/libraries/python" rel="nofollow noreferrer">even a Python library with example code</a>. The two links should be enough to help you with this, good luck.</p>
<p><strong>EDIT</strong></p>
<p>Try using <code>subprocess.getoutput()</code> (<a href="https://docs.python.org/3/library/subprocess.html#subprocess.getoutput" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html#subprocess.getoutput</a>)
You could then (probably) combine this with ast.literal_eval() as such</p>
<pre><code>import ast
import subprocess
out = subprocess.getoutput("mintapi 'email' '******' --accounts")
output = ast.literal_eval(out)
</code></pre>
<p>Then <code>output</code> would end up being the data you need :)</p>
</div>
<div class="post-text" itemprop="text">
<p><em>Solution by OP.</em></p>
<pre><code>import mintapi
import subprocess
import json
import getpass

mint_user = input('Please enter your Mint login email: ')
mint_pass = getpass.getpass('Please enter your Mint password: ')

# Format cmd string to inject into Python subprocess
cmd = "mintapi '{}' '{}' --accounts".format(mint_user, mint_pass)

# Store class method value in output variable
output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)

# Read output value and convert to bytestring
jsonS = output.communicate()

# Decode bytestring into JSON data Array object
account_json = json.loads(jsonS[0].decode('utf-8'))

for i in range(0, len(account_json)):
  if (account_json[i]['currentBalance'] != 0):
    print(account_json[i]['accountName'], end=' - ')
    print(account_json[i]['fiLoginDisplayName'])
    print('${:,.2f}'.format((account_json[i]['currentBalance'])))
    print('-----------------------')
</code></pre>
</div>
<span class="comment-copy">It's been a week since my previous comment, so I moved your solution to a community wiki answer.</span>
<span class="comment-copy">Yes sorry! I should have been more specific, the main problem I'm having is capturing the output from the subprocess call. Since posting this, I have imported subprocess library, and then made a call to subprocess.run(command, shell=True), and then stored that into a variable. However, now the variable is just holding an instance of a class, I need it to hold an instance of the JSON data.</span>
<span class="comment-copy">I've edited my comment. If getoutput() isn't returning a list as a string (it should from what you've said), let me know.</span>
<span class="comment-copy">Hmm, getting a <code>ValueError: malformed node or string: &lt;_ast.Name object at 0x1103659e8&gt;</code>, maybe the string of JSON isn't being parsed correctly?</span>
<span class="comment-copy">@matthewvolk Do you have a sample of what <code>mintapi 'email' '******' --accounts</code> returns that I could view?</span>
<span class="comment-copy">Solved it! I updated the original post. Thank you for the help!!</span>
