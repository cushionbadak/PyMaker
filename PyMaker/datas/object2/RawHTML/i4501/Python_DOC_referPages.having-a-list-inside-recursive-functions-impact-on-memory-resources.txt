<div class="post-text" itemprop="text">
<p>I am new to Python and I plan on having a list inside a recursive function such as</p>
<pre><code>def myRecursion(a):

    A = [0,1,2]    

    #Rest of code here
    myRecursion(a-1)
</code></pre>
<p>My question is will having <code>A</code> inside the recursion <strong>create many instances of it</strong> and eat up my resources? I should also note that the contents of the list is <strong>always the same</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A simple answer with some sample timings: Yes, creating a list inside of a recursive function will have an impact on performance, as opposed to creating it outside a recursive function and passing it in.</p>
<pre><code>In [1]: def recursion1(n):
   ...:     A = [1,2,3]
   ...:     return n if n == 0 else recursion1(n-1)
   ...:

In [2]: %timeit recursion1(1000)
232 µs ± 7.84 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)

In [3]: def recursion2(n, A):
   ...:     return n if n == 0 else recursion2(n-1, A)
   ...:

In [4]: A = [1,2,3]

In [5]: %timeit recursion2(1000, A)
163 µs ± 681 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each)
</code></pre>
<blockquote>
<p>My question is will having A inside the recursion create many instances of it</p>
</blockquote>
<p>We can use <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><code>id()</code></a> to check the identity of an object:</p>
<pre><code>In [6]: def recursion1(n):
   ...:     A = [1,2,3]
   ...:     print(id(A))
   ...:     return n if n == 0 else recursion1(n-1)
   ...:

In [7]: recursion1(3)
129035280
134141552
129297184
134141472
Out[7]: 0

In [8]: def recursion2(n, A):
   ...:     print(id(A))
   ...:     return n if n == 0 else recursion2(n-1, A)
   ...:

In [9]: recursion2(3, A)
133702400
133702400
133702400
133702400
Out[9]: 0
</code></pre>
</div>
<span class="comment-copy">are you modifying the values in A in any way?</span>
<span class="comment-copy">@Primusa no the contents in A will always be the same</span>
<span class="comment-copy">Couldn't you just make A a global that your functions access</span>
<span class="comment-copy">@Primusa I've been taught to avoid global variables whenever I can, how bad is it really to use global variables in programs?</span>
