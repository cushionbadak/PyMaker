<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1277278/python-zip-like-function-that-pads-to-longest-length">Python: zip-like function that pads to longest length?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists:</p>
<pre><code>list1=[1,2,3]
list2=[4,5,6,7]
</code></pre>
<p>And I want to iterate over them. What I want to obtain is something similar to this:</p>
<pre><code>1,4
2,5
3,6
 ,7
</code></pre>
<p>I have thought of using the <code>zip</code> function but it doesn't seem to work with different length lists as by using the following code:</p>
<pre><code>for l1, l2 in list1, list2:
     print(l1,l2)
</code></pre>
<p>I get this: </p>
<pre><code>1,4
2,5
3,6
</code></pre>
<p>So the number 7 is missing. I wonder how could I adapt the code or if
there is any other option I am missing to iterate in parallel when the lists are of different lengths? </p>
</div>
<div class="post-text" itemprop="text">
<p>I think you need <a href="https://docs.python.org/3.4/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>zip_longest</code></a>:</p>
<pre><code>from itertools import zip_longest
list1=[1,2,3]
list2=[4,5,6,7]
for l1, l2 in zip_longest(list1, list2):
     print(l1,l2)
# 1 4
# 2 5                                                        
# 3 6                                                         
# None 7                                                      
</code></pre>
<p>Even more specific to your question, use <code>fillvalue</code> with <code>zip_longest</code>:</p>
<pre><code>from itertools import zip_longest
list1=[1,2,3]
list2=[4,5,6,7]
for l1, l2 in zip_longest(list1, list2, fillvalue=' '):
     print(l1,l2)
# 1 4
# 2 5                                                         
# 3 6                                                         
#   7                                                        
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>zip_longest</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; a = [1,2,3]
&gt;&gt;&gt; b = [4,5,6,7]
&gt;&gt;&gt; list(zip_longest(a, b))
[(1, 4), (2, 5), (3, 6), (None, 7)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check zip_longest() from <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">itertools</a> (a very useful module in Python Standard Library)</p>
<pre><code>from itertools import zip_longest
for l1, l2 in zip_longest(list1, list2, fillvalue=''):
     print(l1,l2)
</code></pre>
</div>
<span class="comment-copy">Woah there you ninja (:</span>
<span class="comment-copy">Haha, seconds difference. @zeet</span>
<span class="comment-copy">Thank you! It worked perfectly :)</span>
<span class="comment-copy">@marisa glad to help you :)</span>
