<div class="post-text" itemprop="text">
<p>I have a list of points:</p>
<pre><code>points = [Point(2.2, 4.2), Point(7.2, -25.1), Point(9.26, -2.456)]
</code></pre>
<p>I am trying to write a function that will  check that this list contains point objects and return then a LineString, so far:</p>
<pre><code>def createLineGeom(giveLine):
if type(giveLine) is shapely.geometry.point.Point:
    return LineString(giveLine)
else:
    return 'pointList must contain shapely point object(s)'
</code></pre>
<p>I am only able to return the else message from createLineGeom(points). Not sure if my problem is with the type() function or my first return statement, I am very much a beginner writing functions.</p>
<p>Thanks!</p>
<p>Update after J_H answer</p>
<pre><code>vertices = [Point(2.2, 4.2), Point(7.2, -25.1), Point(9.26, -2.456)]
# function
def createLineGeom(giveLine):
    if isinstance(giveLine, Point):
       return LineString(giveLine)
</code></pre>
<p>Still returns no value from</p>
<pre><code>pls_work = createLineGeom(vertices)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>print(type(giveLine))</code> to learn the type of the object.</p>
<p>You probably want to use <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">isinstance()</a> when deciding if it's a Point. Better yet, plunge ahead and try to use the argument. If it's not of a suitable type you will get a helpful stacktrace explaining the trouble.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks @J_H for pointing me in the right direction with isinstance(). I am not sure if my solution is the most efficient option, but it works! </p>
<pre><code>def createLineGeom(inList):
if all(isinstance(x, Point) for x in inList) is True:
   return LineString(inList)
else:
    return 'pointList must contain shapely point object(s)'
</code></pre>
</div>
<span class="comment-copy">You can create <code>LineString</code> from <code>Point</code> array, see: <a href="https://gis.stackexchange.com/questions/95670/how-to-create-a-shapely-linestring-from-two-points" title="how to create a shapely linestring from two points">gis.stackexchange.com/questions/95670/â€¦</a></span>
<span class="comment-copy">Yes, but first I must check to see if the list contains Point data types which is where I am failing.  My exercise instructions:  " "Create a function called createLineGeom() that takes a list of Shapely Point objects as parameter and returns a LineString object of those input points. Function should first check that the input list really contains Shapely Point(s). Demonstrate the usage of the function by creating LineString -objects with the function."</span>
<span class="comment-copy">The original instructions for this exercise are confusing me:  "Create a function called createLineGeom() that takes a list of Shapely Point objects as parameter and returns a LineString object of those input points. Function should first check that the input list really contains Shapely Point(s). Demonstrate the usage of the function by creating LineString -objects with the function."  So how do I check if the list actually contains shapely point objects? I added an edit above!</span>
<span class="comment-copy">Rather than <code>inList</code>, a typical name would be <code>points</code>. If you feel it's necessary to document the iterable is a list then add a type annotation to the signature. Also, you said <code>if expression is True:</code>, which is too verbose to be pythonic. Please just say <code>if expression:</code></span>
<span class="comment-copy">Noted, and thank you</span>
