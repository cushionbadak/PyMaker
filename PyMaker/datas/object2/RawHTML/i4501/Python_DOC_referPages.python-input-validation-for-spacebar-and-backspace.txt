<div class="post-text" itemprop="text">
<p>I've written a code for a GUI that lets me input a phone number in 3 Entry widgets and returns the whole phone number in a separate widget to the side. I've managed to use input validation to limit the number of characters that can be typed into each widget, and also limited them to numbers only, however there are some issues.</p>
<p>Once the first digit is typed into each Entry, that digit cannot be deleted with the backspace key, also after that first entry, the spacebar key is allowed to fill the remaining space in each Entry. How do I validate out use of the spacebar (whitespace?) and also allow the backspace key to delete all contents of the Entry widgets?</p>
<p>Here is the code:</p>
<pre><code>import tkinter as tk

window=tk.Tk()
window.geometry('325x75+750+350')
window.resizable(width=False,height=False)
window.title('Phone Number Test')

var=tk.StringVar(window,'')

def entrycheckone(inp):
    try:
        int(inp)
        if len(inp) == 3:
            entry2.focus_set()
            return True
        elif len(inp)&lt;3:
            return True
        else:
            return False
        return True
    except:
        return False

def entrychecktwo(inp):
    try:
        int(inp)
        if len(inp) == 3:
            entry3.focus_set()
            return True
        elif len(inp) &lt; 3:
            return True
        else:
            return False
        return True
    except:
        return False

def entrycheckthree(inp):
    try:
        int(inp)
        if len(inp) == 4:
            button1.focus_set()
            return True
        elif len(inp) &lt; 4:
            return True
        else:
            return False
        return True
    except:
        return False


label1=tk.Label(text='Enter Phone Number(XXX-XXX-XXXX):', font='arial 10 bold')
label1.place(anchor='nw', x=38, y=3)

entry1=tk.Entry(width=3, font='arial 10 bold')
entry1.place(anchor='nw', x=3, y=30)
entry1.focus_set()

max1 = window.register(entrycheckone)
entry1.config(validate='key', validatecommand=(max1,'%P'))

label2=tk.Label(text='-', font='arial 20')
label2.place(anchor='nw', x=30, y=19)

entry2=tk.Entry(width=3, font='arial 10 bold')
entry2.place(anchor='nw', x=47, y=30)

max2 = window.register(entrychecktwo)
entry2.config(validate='key', validatecommand=(max2,'%P'))

label3=tk.Label(text='-', font='arial 20')
label3.place(anchor='nw', x=73, y=19)

entry3=tk.Entry(width=4, font='arial 10 bold')
entry3.place(anchor='nw', x=90, y=30)

max3 = window.register(entrycheckthree)
entry3.config(validate='key',validatecommand=(max3, '%P'))

display1=tk.Entry(width=13, textvariable=var, font='arial 10 bold',state='disabled')
display1.place(anchor='nw', x=200, y=30)

def setphone():
    num1 = entry1.get()
    num2 = entry2.get()
    num3 = entry3.get()
    wholenum = ('(' + num1 + ')-' + num2 + '-' + num3)
    print(wholenum)
    var.set(wholenum)

button1=tk.Button(text='ENTER', font='arial 10 bold', command=setphone)
button1.place(anchor='nw', x=130, y=26)

window.mainloop()
</code></pre>
<p>Also, could the validation for all three be done more easily using a Class? I tried, but failed.</p>
<p>Thanks.</p>
<p>Mike</p>
</div>
<div class="post-text" itemprop="text">
<p>The first thing you should do is to turn your three near-identical <code>entrycheck</code> functions into a single function. They all do exactly the same thing, just with different values. The obvious solution is to make those values function parameters.</p>
<pre><code>def entrycheckinp, length, focus_widget):
    try:
        int(inp)
        if len(inp) == length:
            focus_widget.focus_set()
            return True
        elif len(inp) &lt; length:
            return True
        else:
            return False
        return True
    except:
        return False
</code></pre>
<p>The problem with this is that tkinter will only pass a single argument to this function. We need to find a way to include values for the other 2 parameters before we let tkinter call this function. This is easy to do with <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial</code></a>. Using this, we can rewrite</p>
<pre><code>max1 = window.register(entrycheckone)
max2 = window.register(entrychecktwo)
max3 = window.register(entrycheckthree)
</code></pre>
<p>to</p>
<pre><code>from functools import partial
max1 = window.register(partial(entrycheck, length=3, focus_widget=entry2))
max2 = window.register(partial(entrycheck, length=3, focus_widget=entry3))
max3 = window.register(partial(entrycheck, length=4, focus_widget=button1))
</code></pre>
<p>(You have to take care to create all the widgets <code>entry2</code>, <code>entry3</code> and <code>button1</code> first before you do this, otherwise you'll get a NameError.)</p>
<hr/>
<p>With that out of the way, we can now rewrite that function to accept empty strings and reject spaces.</p>
<pre><code>def entrycheck(inp, length, focus_widget):
    if ' ' in inp:  # don't accept spaces
        return False
    try:
        int(inp)
        if len(inp) == length:
            focus_widget.focus_set()
            return True
        elif len(inp)&lt;length:
            return True
        else:
            return False
        return True
    except:
        return inp == ''  # accept non-numeric input if it's the empty string
</code></pre>
</div>
<span class="comment-copy">Not really sure what's giving you trouble... What's so hard about checking whether a string contains a space or is 0 characters long?</span>
<span class="comment-copy">The trouble is I fly airplanes for a living an didn't go to school for computer programming. For me, this is a hobby which I took up only a week and a half ago. I realize this website isn't geared towards people who are new to coding, but I would appreciate a constructive, helpful answer. Thanks.</span>
<span class="comment-copy">I'm wondering how to go about adding that additional functionality to the current validation.</span>
<span class="comment-copy">Thanks so much, works like a charm! Glad I know about the partial module now!</span>
<span class="comment-copy">As a follow up question, how exactly does the * return inp ==  ' ' * allow the deletion of that last character? I'm a bit fuzzy on that.</span>
<span class="comment-copy">@MichaelSibille Well, tkinter accepts the input if the validation function returns <code>True</code>, so... you return <code>True</code> if the input is empty and <code>False</code> otherwise. (Keep in mind that that branch of code is only reached if the input isn't a valid number, so <i>all</i> inputs that aren't the empty string are invalid.)</span>
<span class="comment-copy">Oh! Understood! Thanks for explaining!</span>
