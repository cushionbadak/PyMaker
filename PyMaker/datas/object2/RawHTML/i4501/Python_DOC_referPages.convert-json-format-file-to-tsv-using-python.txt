<div class="post-text" itemprop="text">
<p>I have the a corpus.json file, which needs to be converted to tsv format.It is a huge file and looks like this: </p>
<pre><code>{'0': {'metadata': {'id': 'fQ3JoXLXxc4', 'title': '| Board Questions | 12 Maths | Equivalence Class | Equivalence Class Board Questions |', 'tags': ['Board Questions', '12 maths', '12 maths Board Questions', 'Previous Year Board Questions', 'Maths Board Questions', 'Board questions based on Equivalence Classes', 'Equivalence Class', 'Equivalence Classes in hindi'], 'description': 'Board Questions, 12 maths, 12 maths Board Questions, Previous Year Board Questions, Maths Board Questions, Board questions based on Equivalence Classes, Equivalence Class, Equivalence Classes in hindi, Equivalence Class for 12 maths, NCERT CBSE XII Maths,'}}, '1': {'subtitles': ' in this video were going to start taking a look at entropy and tropi and more specifically the kind of entropy we are going to be interested in is information entropy information entropy as opposed to another kind of entropy which you may have heard a probably heard of thermodynamic entropy information entropy comes up in the context of information theory there is actually a direct connection with thermodynamic entropy but were not going to address that here so what is entropy what is information entropy well you can think about it sort of intuitively as the uncertainty uncertainty put that in quotes since we dont really have a definition for uncertainty but you can think about it as the uncertainty in a random variable or random quantity or equivalently you can think about it as the information ....and so on
</code></pre>
<p>I am using the following code:</p>
<pre><code>import json
import csv
with open('Downloads/corpus.json') as json_file:  
    j = json.load(json_file)
with open('output.tsv', 'w') as output_file:
    dw = csv.DictWriter(output_file, sorted(j.keys()), delimiter='\t')
    dw.writeheader()
    dw.writerows(j)
</code></pre>
<p>I get the following error:</p>
<pre><code> ---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-110-a9cb3b17fdd1&gt; in &lt;module&gt;()
      2     dw = csv.DictWriter(output_file, sorted(j.keys()), delimiter='\t')
      3     dw.writeheader()
----&gt; 4     dw.writerows(j)

~/anaconda3/lib/python3.6/csv.py in writerows(self, rowdicts)
    156 
    157     def writerows(self, rowdicts):
--&gt; 158         return self.writer.writerows(map(self._dict_to_list, rowdicts))
    159 
    160 # Guard Sniffer's type checking against builds that exclude complex()

~/anaconda3/lib/python3.6/csv.py in _dict_to_list(self, rowdict)
    146     def _dict_to_list(self, rowdict):
    147         if self.extrasaction == "raise":
--&gt; 148             wrong_fields = rowdict.keys() - self.fieldnames
    149             if wrong_fields:
    150                 raise ValueError("dict contains fields not in fieldnames: "

AttributeError: 'str' object has no attribute 'keys'
</code></pre>
<p>What should be changed in this code. Or is there any other method to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code is correct. The only problem is that you are trying to convert json dict object back to str as is mentioned in another answer what  doesn't make a sense at all. </p>
<p>What did you want to achieve with <code>sorted(py_str[0].keys())</code>? Try it without <code>[0]</code>.</p>
<p>Small detail: You can use one <code>with</code> statement instead of two:</p>
<pre><code>import json
import csv

with open('output.tsv', 'w') as output_file, open('Downloads/corpus.json') as json_file:
    json_dict = json.load(json_file)
    dw = csv.DictWriter(output_file, sorted(json_dict.keys()), delimiter='\t')
    dw.writeheader()
    dw.writerows(json_dict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if I'm missing something here, but in this block:</p>
<pre><code>with open('Downloads/corpus.json') as json_file:  
    j = json.load(json_file)
</code></pre>
<p>you're <code>j</code> is a dictionary containing the JSON data.  But in this line:</p>
<pre><code>py_str=json.dumps(j)
</code></pre>
<p>you're converting that dict to a string (essentially undoing what you just did).  The error you're seeing is stating that strings don't have keys.</p>
<p>You should instead use <code>j</code> instead of <code>py_str</code> when calling the <code>keys()</code> method.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>j</code> is your JSON-like object; it's a dictionary. Without knowing exactly what you're trying to do, I think you don't need the <code>py_str=json.dumps(j)</code>, as that turns your JSON-like dict back into a string (which doesn't have keys).</p>
<p><a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">Python <code>json</code> documentation</a></p>
<p>Some example interactive terminal commands:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; py_str = json.loads('{ "a": "b", "c": "d"}')
&gt;&gt;&gt; py_str
{'a': 'b', 'c': 'd'}
&gt;&gt;&gt; json.dumps(py_str)
'{"a": "b", "c": "d"}'
&gt;&gt;&gt; py_str.keys()
dict_keys(['a', 'c'])
&gt;&gt;&gt; json.dumps(py_str)[0]
'{'  # This is the cause of the failure
</code></pre>
</div>
<span class="comment-copy">Can you share a sample of corpus.json?</span>
<span class="comment-copy">i edited the question, it now has some part of my file</span>
<span class="comment-copy">How to output should look like?</span>
<span class="comment-copy">@Joozty it should include all the data , but the values should be tab seperated</span>
<span class="comment-copy">this gives the error: AttributeError: 'str' object has no attribute 'keys'</span>
<span class="comment-copy">I edited my answer. Please try it again.</span>
<span class="comment-copy">i applied your solution, but getting another error, can you please check (the new error is shown in my post above )</span>
<span class="comment-copy">As the error states: the dictionary that comes from json contains more key than the field names you specified in the DictWriter constructor. It seems that every json object in your corpus has different format, rigth?</span>
<span class="comment-copy">yes, how can we deal with that ?</span>
<span class="comment-copy">by doing as you say, i get the error:  KeyError  Traceback (most recent call last) &lt;ipython-input-95-71af40acfe14&gt; in &lt;module&gt;()       1 with open('output.tsv', 'w') as output_file: ----&gt; 2     dw = csv.DictWriter(output_file, sorted(j[0].keys()), delimiter='\t')       3     dw.writeheader()       4     dw.writerows(j)  KeyError: 0</span>
<span class="comment-copy">Remember that <code>json_object[0]</code> and <code>json_object['0']</code> are different things -- the first will find the 0th value, the second will find the value where the key equals the string <code>'0'</code>.</span>
