<div class="post-text" itemprop="text">
<p>I have a list of strings that print out just fine using a normal loop:</p>
<pre><code>for x in listing:
    print(x)
</code></pre>
<p>I thought it should be pretty simple to use a lambda to reduce the loop syntax, and kickstart my learning of lambdas in Python (I'm pretty new to Python).</p>
<p><a href="https://docs.python.org/dev/library/functions.html#map" rel="nofollow noreferrer">Given that the syntax</a> for <code>map</code> is <code>map(function, iterable, ...)</code> I tried:</p>
<pre><code>map(lambda x: print(x), listing)
</code></pre>
<p>But this does not print anything out (it also does not produce an error). I've done some searching through material online but everything I have found to date is based on Python 2, namely mentioning that with Python 2 this isn't possible but that it <em>should</em> be in Python 3, without explicitly mentioning how so.</p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 3, <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> returns an iterator:</p>
<pre><code>&gt;&gt;&gt; map(print, listing)
&lt;map object at 0x7fabf5d73588&gt;
</code></pre>
<p>This iterator is <em>lazy</em>, which means that it won't do anything until you iterate over it. Once you <em>do</em> iterate over it, you get the values of your list printed:</p>
<pre><code>&gt;&gt;&gt; listing = [1, 2, 3]
&gt;&gt;&gt; for _ in map(print, listing):
...     pass
... 
1
2
3
</code></pre>
<p>What this also means is that <code>map</code> isn't the right tool for the job. <code>map</code> creates an iterator, so it should only be used if you're planning to iterate over that iterator. It shouldn't be used for side effects, like printing values. See also <a href="https://stackoverflow.com/questions/1975250/when-should-i-use-a-map-instead-of-a-for-loop">When should I use <code>map</code> instead of a for loop</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I wouldn't recommend using <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> here, as you don't really care about the iterator.  If you want to simplify the basic "for loop", you could instead use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>:</p>
<pre><code>&gt;&gt;&gt; mylist = ['hello', 'there', 'everyone']
&gt;&gt;&gt; '\n'.join(mylist)
hello
there
everyone
</code></pre>
<p>Or if you have a non-string list:</p>
<pre><code>&gt;&gt;&gt; mylist = [1,2,3,4]
&gt;&gt;&gt; '\n'.join(map(str, mylist))
1
2
3
4
</code></pre>
</div>
<span class="comment-copy">Thanks. While Aran-Fey's answer does answer the question I asked, your answer shows me how to do what I actually wanted, so both equally valid IMO :)</span>
