<div class="post-text" itemprop="text">
<p>I would like to unhide or not in <code>list3</code> the letter behind "*" in <code>list2</code>, depending  on whether or not the letter chosen is in <code>list1</code>.  However, my list comprehension does not work. </p>
<p>My code in Python 3:</p>
<pre><code>list1 = [ "h", "e", "l", "l", "o"]  
list2 = ["h", "*", "*", "*", "o"]  
letter_chosen = input("Choose a letter: ")  
list3 = [letter_chosen for letter in list1 if letter_chosen == letter else letter2 for letter2 in list2]
</code></pre>
<p>In the Python interpreter if I enter "l" as <code>letter_chosen</code>, I would like to have:</p>
<pre><code>list3 = ["h", "*", "l", "l", "o"]  
</code></pre>
<p>Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>It'll be easier if you started with writing out a normal loop.</p>
<p>You want to do this:</p>
<pre><code>for letter in list1:
    if letter_choosen == letter:
        letter   # picked letter, so add it to the output
    else:
        # not the picked letter, use the value from letter2 at the same position
</code></pre>
<p>The easiest way to do get the values from list2 is to use <code>zip()</code>; this pairs up the values from the two lists:</p>
<pre><code>for letter, letter2 in zip(list1, list2):
    if letter_choosen == letter:
        letter   # picked letter, so add it to the output
    else:
        letter2  # not the picked letter, copy over the one from list2
</code></pre>
<p>Note that the <code>if</code> tests what value to add, so it is part of the <em>expression</em>. You could use a conditional expression instead:</p>
<pre><code>for letter, letter2 in zip(list1, list2):
    letter if letter_choosen == letter else letter2
</code></pre>
<p>This then can be turned into a list comprehension:</p>
<pre><code>[letter if letter_choosen == letter else letter2 for letter, letter2 in zip(list1, list2)]
</code></pre>
<p>or using more compact and comprehensible variable names:</p>
<pre><code>goal = ["h", "e", "l", "l", "o"]
display = ["h", "*", "*", "*", "o"]
guess = input ("Choose a letter: ")  

new_display = [g if guess == g else d for g, d in zip(goal, display)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your syntax is invalid; you cannot loop on two lists at one time. Try using the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> command:</p>
<pre><code>&gt;&gt;&gt; list(zip(list1, list2))
[('h', 'h'), ('e', '*'), ('l', '*'), ('l', '*'), ('o', 'o')]
</code></pre>
<p>It will pair together items from both lists. So, your expression becomes:</p>
<pre><code>&gt;&gt;&gt; list3 = [letter_choosen if letter_choosen == letter1 else letter2 for (letter1, letter2) in zip(list1, list2)]
&gt;&gt;&gt; list3
['h', '*', 'l', 'l', 'o']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this:</p>
<pre><code>[letter if letter_choosen != letter else '*' for letter in list1]
</code></pre>
</div>
<span class="comment-copy">This produces <code>'*'</code> entries for <i>everything but the current guess</i>, wiping out any previous correct guesses.</span>
<span class="comment-copy">No, it does not, I tried it before answering.</span>
