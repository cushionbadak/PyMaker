<div class="post-text" itemprop="text">
<p>I can create a timezone specific <code>datetime</code> object like this</p>
<pre><code>import datetime
d = datetime.datetime.now().astimezone()
</code></pre>
<p>Result is</p>
<pre><code>datetime.datetime(2018, 4, 2, 15, 12, 2, 807451, tzinfo=datetime.timezone(datetime.timedelta(0, 7200), 'CEST'))
</code></pre>
<p>It looks like that <code>tzinfo</code> is represented by two values/attributes: A timedelta and a string. But how can I access them?
I would like to do something like this</p>
<pre><code>d.tzinfo.delta
d.tzinfo.name
</code></pre>
<p>I need this informations to be able to (de)serialize the datetime to and from JSON.</p>
<p>I don't want to use third-party packages for such solutions.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>tzinfo</code> in this case is an instance of the <a href="https://docs.python.org/3/library/datetime.html#timezone-objects" rel="nofollow noreferrer"><code>datetime.timezone()</code> class</a>:</p>
<blockquote>
<p>The <code>timezone</code> class is a subclass of <code>tzinfo</code>, each instance of which represents a timezone defined by a fixed offset from UTC.</p>
</blockquote>
<p>You can use the <a href="https://docs.python.org/3/library/datetime.html#datetime.tzinfo.utcoffset" rel="nofollow noreferrer"><code>tzinfo.utcoffset()</code></a> and <code>tzinfo.utcname()</code> methods to access the delta and name. For <code>timezone()</code> instances the argument each of these take is ignored, but normally you'd pass in the <code>datetime</code> instance they are attached to:</p>
<pre><code>d.tzinfo.utcoffset(d)
d.tzinfo.utcname(d)
</code></pre>
<p>You'd usually call these <em>on the <code>datetime.datetime</code> instance</em>, which has the same methods (but which take no arguments) and these will then handle passing in the right argument to the methods on the contained <code>tzinfo</code> attribute. </p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; d = datetime.datetime.now().astimezone()
&gt;&gt;&gt; d.utcoffset()
datetime.timedelta(seconds=7200)
&gt;&gt;&gt; d.tzname()
'CEST'
&gt;&gt;&gt; d.tzinfo.utcoffset(d)
datetime.timedelta(seconds=7200)
&gt;&gt;&gt; d.tzinfo.utcoffset(d) is d.utcoffset()  # they are the same object
True
</code></pre>
<p>The <code>datetime.timezone()</code> subclass is just one implementation of a <code>tzinfo</code> time zone, 3rd-party libraries like pytz offer their own, and the <code>utcoffset()</code> and <code>tzname()</code> return values may well vary for timezones with historical information attached.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're asking about datetime.tzinfo, which is an abstract base class, as documented <a href="https://docs.python.org/3/library/datetime.html#datetime.tzinfo" rel="nofollow noreferrer">here</a>.</p>
<p>datetime comes with an implementation of the tzinfo abstract base class called datetime.timezone, which is documented <a href="https://docs.python.org/3/library/datetime.html#datetime.timezone" rel="nofollow noreferrer">here</a>.</p>
<p>Just below that last link are the docs on timezone.utcoffset and timezone.utcname, which are ways to access the properties you asked about on the tzinfo if it is a timezone. However, this is not the only implementation of that abstract class. If you are using the pytz timezone, for example, then you'll need to read the docs on that instead.</p>
</div>
<span class="comment-copy">Since you said you're not using third-party packages, I assume you are just using the datetime.timezone, in which case the caveat I gave at the end doesn't apply to you. It may become relevant if you change your mind and start using a third-party package later, though.</span>
