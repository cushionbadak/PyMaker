<div class="post-text" itemprop="text">
<p>It looked simple, "remove whitespace from a string in the list". But for some reason, my code didn't work. </p>
<pre><code>new_list = []
channels = "KMP, PRIME"
channel = channels.split(",")

for each in channel:
    re.sub(r'^[^a-zA-Z]*', ' ', each)
    new_list.append(each)
</code></pre>
<p>I also tried <strong>lstrip/strip</strong>, but none worked. Why?
If I "cheat" with the following code, it will work. I still want to get to the bottom of the problem. What should I change to make it right? </p>
<blockquote>
<p>channel = channels.split(", ")</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Here is one way using a list  comprehension and <code>str.strip</code>.</p>
<p>Note it does not appear you require regex for this task.</p>
<pre><code>channels = 'KMP, PRIME'

lst = [i.strip() for i in channels.split(',')]
# ['KMP', 'PRIME']

res = ','.join(lst)
# KMP,PRIME
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the (<a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">Docs</a>):</p>
<blockquote>
<p>Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by ...</p>
</blockquote>
<p>You need to keep the value retuned by <code>.sub()</code></p>
<pre><code>for each in channel:
    new_list.append(re.sub(r'^[^a-zA-Z]*', ' ', each))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this approach too:</p>
<pre><code>print(list(map(lambda x:x.strip(),channels.split(','))))
</code></pre>
<p>output:</p>
<pre><code>['KMP', 'PRIME']
</code></pre>
</div>
