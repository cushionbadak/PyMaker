<div class="post-text" itemprop="text">
<p>I have two lists as shown below. I want to find whether the strings inside the first list are in any of the strings in the second list. For some reason, I get an empty list when I try to run this.</p>
<p>For example: in <code>list5</code>, string <code>'apple'</code> is in <code>list6</code>'s <code>'I ate an apple'</code>.</p>
<pre><code>list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango']
print ([x for i,x in enumerate(list5) if x in list6])
</code></pre>
<p>The exact same things run smoothly for a list of integers. Is there a different way of going through the strings?</p>
<pre><code>list7 = [1, 2, 3, 4, 5]
list8 = [1, 2]
print ([x for i,x in enumerate(list7) if x in list8])  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are checking if <code>apple</code> is in the list but you want to check if any string in the list contains apple</p>
<pre><code>list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango']
[x for x in list5 if any(x in item for item in list6)]
#['apple', 'mango']
</code></pre>
<h1>EDIT</h1>
<p>This creates a list of list in which contain the indexes of the sentence in the second list, which contain the word from the first list  </p>
<pre><code>list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango', '2 apple', 'big apple', 'big mango']
[[i for i, sentence in enumerate(list6) if x in sentence] for x in list5]
#[[0, 1, 3, 4], [2, 5], []]
</code></pre>
<p>As I said in my comment a dictionary would be better in this situation</p>
<pre><code>{x:[i for i,sen in enumerate(list6) if x in sen] for x in list5}
#{'apple': [0, 1, 3, 4], 'mango': [2, 5], 'sherbet': []}
</code></pre>
<p>And if only exact matches should be stored you can use this, but this does not work if the first list does not only contain words, for example if <code>list5</code> contains "an apple" this does NOT work</p>
<pre><code>{x:[i for i,sen in enumerate(list6) if any(x==item for item in sen.split())] for x in list5}
#{'apple': [0, 3, 4], 'mango': [2, 5], 'sherbet': []}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code is checking if <code>x</code> is a member of <code>list6</code>, when it seems like you want to know if <code>x</code> is a substring of any member in <code>list6</code>. You can do this using Python's <code>reduce</code> method (in <code>functools</code> with Python 3).</p>
<pre><code>list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango']

from functools import reduce
print([x for x in list5
         if reduce(lambda exist, s: exist or (x in s), list6, False)])
# ['apple', 'mango']
</code></pre>
<p>The <code>reduce</code> call is iterating through all members of <code>list6</code> and checking if <code>x</code> is a substring, then or'ing those results against <code>exist</code> (which defaults to <code>False</code> here) to return <code>True</code> if it's found at least once. See the Python3 documentation for <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">functools.reduce</a> for a better idea of how it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you are asking for set intersection in which case I would just go around and use sets instead of lists and use the intersection operator instead of a loop, like this <code>a &amp; b</code> where a and b are sets.</p>
<p>But you example makes it seem like you are looking for substrings from list5 in each of the strings in list6, which is a totally different probably and one we would need more information about what your expected output would be to help you more.</p>
<p>Also BTW, you don't need to use enumerate since you aren't using the value from it.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>#!python3

import re

list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango']

for item in list6:
    for substr in list5:
        if re.search(r"\b" + re.escape(substr) + r"\b", item):
            print('"' + substr + '"' + ' is in ' + '"' + item + '"')

'''
# output
"apple" is in "I ate an apple"
"mango" is in "I love mango"
'''

list7 = [1, 2, 3, 4,5]
list8 = [1,2]

for substr in list8:
    if substr in list7:
        print(substr, 'is in', list7)

'''
# output
1 is in [1, 2, 3, 4, 5]
2 is in [1, 2, 3, 4, 5]
'''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way is to call a function in your list comprehension.</p>
<p>It is not a one-liner, but the logic is clear and it will short-circuit as soon as a match is found.</p>
<pre><code>list5 = ['apple', 'mango', 'sherbet']
list6 = ['I ate an apple', 'I ate two apples', 'I love mango']

def find_word(x, sentences):
    for item in sentences:
        if x in item:
            return x

res = [x for x in list5 if find_word(x, list6)]

# ['apple', 'mango']
</code></pre>
</div>
<span class="comment-copy">You're checking if 'apple' itself is a member of list6, you want to check if 'apple' is a substring of any string in list6</span>
<span class="comment-copy">Will you always be dealing with single words from the first string list? Could you have <code>['an apple', 'mango', 'sherbert']</code> for example in the first list and expect to match <code>'an apple'</code> in any of the strings in the second list?</span>
<span class="comment-copy">I want to know at what index is apple occurring in list6 and 'any' method doesn't give me all the instances as well. Is there a way in which I get all the instances and their index?</span>
<span class="comment-copy">What do you mean with all instances? should apple be two times in the output? Please show us how your desired output should look like</span>
<span class="comment-copy">What if the a string contains two of the words for example 'I ate an apple and a mango'?</span>
<span class="comment-copy">The example given doesn't have multiple instances but what if it is like. list6 = ['I ate an apple', 'I ate two apples', 'I love mango', '2 apple', 'big apple', 'big mango']. I want to get [0,3,4] for apple and [2, 5] for mango. Basically their respective indexes in that specific list. Just to clarify when I say indexes, I mean of the whole string. Hope I'm making sense</span>
<span class="comment-copy">alright understood what you mean does the output have to be a list? Because a dictionary would be suited better for this sth like {"apple":[3,4,5]}</span>
<span class="comment-copy">Whoever down voted me should explain themselves. This code works. it may not be the best code but it still works.</span>
