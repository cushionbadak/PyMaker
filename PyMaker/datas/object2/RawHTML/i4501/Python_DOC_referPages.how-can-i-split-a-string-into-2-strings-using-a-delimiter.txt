<div class="post-text" itemprop="text">
<p>The string is inside a list of strings and I'd like to split on the <code>?</code> character. </p>
<p>For example, splitting <code>['foo? bar\n', 'baz\n']</code> into <code>['foo\n', 'bar\n', 'baz\n']</code>.</p>
<p>(I just edited this question to include the newline characters.)</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way.</p>
<pre><code>from itertools import chain

x = ['foo? bar', 'baz']

res = list(chain.from_iterable(i.strip().split('?') for i in x))

# ['foo', ' bar', 'baz']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is fairly straight forward when using a <a href="https://docs.python.org/3/reference/simple_stmts.html#yield" rel="nofollow noreferrer">generator</a> like:</p>
<h3>Code:</h3>
<pre><code>def split_str_in_list(a_list, split_char):
    for big_str in a_list:
        for s in big_str.split(split_char):
            yield s
</code></pre>
<h3>Test Code:</h3>
<pre><code>print(list(split_str_in_list(['foo? bar', 'baz'], '? ')))
</code></pre>
<h3>Results:</h3>
<pre><code>['foo', 'bar', 'baz']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Look at a more explicit example and perhaps easier to understand.</p>
<pre><code>def split_text(input_list):
    result = []
    # iterate through every string from input_list
    for item in input_list:
        #split a string by '? '; splitted is a list with minimum 1 element(item) when item does not contain '? '
        splitted = item.split('? ')
        # iterate through this list and append every string at result list
        for i in splitted:
            result.append(i)
    return result

input_list = ['foo? bar', 'baz']
print(split_text(input_list))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this approach :</p>
<pre><code>df=['foo? bar\n', 'baz\n']


new_list=[]
for i in df:
    if '?' in i:
        spli_data=i.split('?')
        for sub_ in spli_data:
            if '\n' not in sub_:
                new_list.append(sub_+'\n')
            else:
                new_list.append(sub_)

    else:
        new_list.append(i)
</code></pre>
<p>output:</p>
<pre><code>['foo\n', ' bar\n', 'baz\n']
</code></pre>
</div>
<span class="comment-copy"><code>foo = ["foo ? bar", "baz"]; bar = [foo[0].split("?"), "baz"]</code></span>
<span class="comment-copy">list comprehension way:  <code>x = ['foo? bar', 'baz']; res = [j for i in x for j in i.split('?')]</code></span>
<span class="comment-copy">Can you be more specific about \n and space requirements?  First item has a leading space stripped and newline added?   Is it <code>strip()</code> + <code>\n</code> at end for each split result ?</span>
