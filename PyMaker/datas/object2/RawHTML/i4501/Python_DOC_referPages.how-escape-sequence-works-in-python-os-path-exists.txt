<div class="post-text" itemprop="text">
<p>I am working in a Ubuntu system. How does os.path.exists() resolve the below path to True.</p>
<pre><code>import os

apath = '/home/.//&lt;user&gt;/'
actual_path = '/home/&lt;user&gt;/'

os.path.exists(apath) #returns True
os.path.exists(actual_path) #returns True
</code></pre>
<p>I know its a basic question, but does Python consider './' as escape sequence here.</p>
</div>
<div class="post-text" itemprop="text">
<p>This isn't a Python issue, you are using a valid path on any POSIX system.</p>
<ul>
<li><code>.</code> is the <em>current directory</em>. <code>/existing/directory/</code> and <code>/existing/directory/.</code> are one and the same path. Compare this to <code>..</code>, a reference to the parent directory.</li>
<li><code>//</code> is seen as a single <code>/</code> separator.</li>
</ul>
<p>So <code>/home/.//&lt;user&gt;/</code> is the same as <code>/home/./&lt;user&gt;/</code> is the same as <code>/home/&lt;user&gt;/</code>. In Python or in your shell.</p>
<p>If you need to compare paths, you'd want to <em>normalise</em> the path, with <a href="https://docs.python.org/3/library/os.path.html#os.path.normpath" rel="nofollow noreferrer"><code>os.path.normpath()</code></a>:</p>
<pre><code>&gt;&gt;&gt; import os.path
&gt;&gt;&gt; os.path.normpath('/home/.//&lt;user&gt;/')
'/home/&lt;user&gt;'
</code></pre>
<p>For cross-platform applications, you can use the <a href="https://docs.python.org/3/library/os.html#os.curdir" rel="nofollow noreferrer"><code>os.curdir</code></a> variable if you need the correct string for the 'current directory' for the current platform.</p>
</div>
<span class="comment-copy">I accepted you answer, but, I tried to understand your logic in a Windows system. As WINDOWS is not a POSIX env.  <code>patha = 'D:\\'</code> <code>pathb = '\\important\\'</code> <code>checkPath = os.path.join(patha, './' + pathb)  # 'D:\\./\\important\\'</code></span>
<span class="comment-copy">@PikluDey: Windows uses the same value for <code>os.curdir</code>, but the default path separator is the backslash, see <code>os.sep</code>. <code>/</code> is acceptable as an alternative, and is available as <code>os.altsep</code>. <code>os.path.normpath(checkPath)</code> will produce <code>'D:\\important'</code>.</span>
