<div class="post-text" itemprop="text">
<p>I'm trying to print what I've coded in a def. 
Instead of getting the <code>print</code> as a result, I am getting :
<code>&lt;function Partie.afficher_etat_donnes at 0x000000FF03B4C950&gt;</code></p>
<p>The code is thus :</p>
<pre><code>class Partie:
    def __init__(self, plateau, donnes):
        self.plateau = plateau
        self.donnes = donnes
        self.tour = None
        self.passe = 0
        self.gagnant = None
    @staticmethod
    def show_instructions():
        instructions = """

    Game Instructions :
            """
        print(instructions)
        print(Partie.afficher_etat_donnes)

    def afficher_etat_donnes(self):
        for joueur in range(self.nombre_joueurs):
            print(f"The player {joueur} has {len(donnes[joueur])} dominos in hand.")
</code></pre>
<p>For the important variables... in this case :
<code>joueur = 2
donnes = [[3,1],[3,2]],[[6,6],[6,3]</code>
Donnes is just an example of what it can be.
I should have as a result :
<code>The player 0 has 2 dominos in hand.</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Try it like this - I do not speak french nor do I play domino, but this code works somewhat:</p>
<pre><code>class Partie:
    def __init__(self, plateau, donnes):
        self.plateau = plateau
        self.donnes = donnes
        self.tour = None
        self.passe = 0
        self.gagnant = None
        self.nombre_joueurs = 3  # added


    @staticmethod
    def show_instructions(somePartie):
        instructions = """

    Game Instructions :
            """
        print(instructions)
        somePartie.afficher_etat_donnes()  # changed, needs instance of partie to call 
                                           # non static method on the instance....


    def afficher_etat_donnes(self):
        for joueur in range(self.nombre_joueurs):
            # fixed missing self.
            print(f"The player {joueur} has {len(self.donnes[joueur])} dominos in hand.") 

# make a Partie
p = Partie("",[[1,1,1,1],[2,2,2,2,2,2],[2,2,2]])
# call static method, give it instance of partie to enable calling other method
Partie.show_instructions(p)
</code></pre>
<p>Output:</p>
<pre><code>    Game Instructions :

The player 0 has 4 dominos in hand.
The player 1 has 6 dominos in hand.
The player 2 has 3 dominos in hand.
</code></pre>
</div>
<span class="comment-copy">dont print the functions name. call the function to execute it - remove ``print( ... )` and add <code>()</code> after the functions name to call it. You need a class Instance as well for that - afficher_etat_donnes(self) is not a static function.</span>
<span class="comment-copy">I'm sorry, I made a mistake in the indentation.</span>
<span class="comment-copy">Besides if I change the code for <code>Partie.affichier_etat_donnes()</code> I get..<code>TypeError: afficher_etat_donnes() missing 1 required positional argument: 'self'</code></span>
<span class="comment-copy">that is because it is a non-static method thats operates on an Instance of Partie - not on the class itself. <code>self</code> is autoprovided it you have a <code>p = Partie(....., ... )</code> and call <code>p.afficher_eatat_donnes()</code></span>
<span class="comment-copy">Reread and study and experiment with: <a href="https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html#a-first-look-at-classes</a></span>
