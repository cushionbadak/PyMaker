<div class="post-text" itemprop="text">
<p>How do I copy a file into a directory which already contains other files (without replacing them)? I basically need to collect files from different sources and directories (all with heterogenous names and directory structures) and put them all into one folder. I've been able to make the destination directory and copy the initial files so far, but once the directory already exists, it will not copy subsequent files...</p>
<pre><code>'''COPY FILES AND DIRECTORIES FROM src (SOURCE) TO dest (DESTINATION)'''
import errno
import shutil
def copy(src, dest):
    try:
        shutil.copytree(src, dest)
    except OSError as e:
        # If the error was caused because the source wasn't a directory
        if e.errno == errno.ENOTDIR:
            shutil.copy2(src, dest)
        else:
            print('Directory not copied. Error: %s' % e)

copy("source.directory", "Destination/Directory")
</code></pre>
<p>This returns the following error after the destination directory is created and the first file has been copied:</p>
<pre><code>Directory not copied. Error: [Errno 17] File exists: 'Destination/Directory'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't use <code>copytree</code> this way. Once it gets an error along some subtree, it bails out of that subtree. After it returns you the error, there's no way to resume where it left off </p>
<p>But notice that the <a href="https://docs.python.org/3/library/shutil.html" rel="nofollow noreferrer"><code>shutil</code> docs</a> have a link to <a href="https://github.com/python/cpython/blob/3.6/Lib/shutil.py#L273" rel="nofollow noreferrer">the source code</a>. Much of the standard library is deliberately written to be useful not just as a library, but also as sample code. It's not that complicatedâ€”in fact, the only really tricky part is the way it collects up errors so it can fail the way it does, which is the one part you don't want.</p>
<p>So, fork that function into your own code and modify it to handle errors the way you want.</p>
</div>
