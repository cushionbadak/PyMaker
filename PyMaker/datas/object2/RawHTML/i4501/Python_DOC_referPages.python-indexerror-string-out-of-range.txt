<div class="post-text" itemprop="text">
<p>Hi I'm beginning to learn Python and am stuck on a problem. Here is a segment of my function:</p>
<pre><code>for i in range(0,len(list(string))):
    if string[i] in punctuation:
        if i == len(list(string))-1:
             new_string += string[i]
        if string[i+1] or string[i-1] == ' ':
            continue
        elif string[i+1] or string[i-1] in punctuation:
            continue
        else:
            new_string += string[i]

    elif string[i] in numbers:
        new_string += ' '

    else:
        new_string += string[i]
</code></pre>
<p>This segment is to get a string and return a new_string which takes out all punctuation, but not punctuation that are between letters such as apostrophies (e.g. jacob's) or hypens (e.g. long-established). However, I'm getting an error saying:</p>
<pre><code>if doc[i+1] or doc[i-1] == ' ':
IndexError: string index out of range
</code></pre>
<p>I thought that line 3 in my code would prevent that error from happening and I can't see what is wrong. That being said, is my code too inefficient?</p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>To avoid an IndexError, it might sometimes be easier to just adapt the range, like so:</p>
<pre><code>from string import punctuation as punct

def remove_punctuation(old_string):
    """Remove punctuation from "string" if not between 2 letters."""
    new_string =''
    s = ' ' + old_string + ' '
    for i in range(1, len(s) - 1):
        if s[i] in punct and (not s[i - 1].isalpha() or not s[i + 1].isalpha()):
            continue
        else:
            new_string += s[i]
    return new_string
</code></pre>
</div>
<span class="comment-copy"><code>if</code> is not <code>elif</code>. Voting to close as typo.</span>
<span class="comment-copy">@RahulBharadwaj: You have some other problem that you've mistakenly blamed on <code>elif</code> being gone. It's not gone.</span>
<span class="comment-copy">@RahulBharadwaj <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#if-statements</a></span>
<span class="comment-copy"><code>if string[i+1] or string[i-1] == ' ':</code> must be <code>if string[i+1]==' ' or string[i-1] == ' ':</code>.</span>
<span class="comment-copy">@user2357112 thanks for the correction. I'm testing my code out with a string like "abc-def" in which the hyphen should be present in the new_string, however it is returning "abcdef" why is this?</span>
