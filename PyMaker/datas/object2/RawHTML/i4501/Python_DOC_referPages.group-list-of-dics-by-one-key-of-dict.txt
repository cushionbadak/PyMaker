<div class="post-text" itemprop="text">
<p>So, I'm working with Django (Python) and I want to manipulate a data structure in the serializer.</p>
<p>I have this:</p>
<pre><code>"week_task_schedule": [
  {
      "id": 3,
      "week_number": 2,
      "task": 1
  },
  {
      "id": 2,
      "week_number": 1,
      "task": 2
  },
  {
      "id": 1,
      "week_number": 1,
      "task": 1
  }
]
</code></pre>
<p>I want to get this:</p>
<pre><code>"weeks": [
    {
        "week_number": 1,
        "tasks": [
            {
                "id": 2,
                "task": 2
            },
            {
                "id": 1,
                "task": 1
            }
        ]
    },

    {
        "week_number": 2,
        "tasks": [
            {
                "id": 3,
                "task": 1
            }
        ]
    }
]
</code></pre>
<p>What should be my approach to this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>With a for loop you can iterate over the structure and build a new version like:</p>
<h3>Code:</h3>
<pre><code>def transform_data(data):
    new_data = {}
    for record in data:
        new_data.setdefault(record['week_number'], []).append(
            {k: v for k, v in record.items() if k != 'week_number'})
    return [{'week_number': k, 'tasks': v} for k, v in new_data.items()]
</code></pre>
<p>This uses <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault</code></a> to auto populate the <code>week_number</code>  You can also use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a>.  after the <code>for</code> loop, a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> is used to take the resulting dicts and create the desired list.</p>
<h3>Test Code:</h3>
<pre><code>data = [
    {
        "id": 3,
        "week_number": 2,
        "task": 1
    },
    {
        "id": 2,
        "week_number": 1,
        "task": 2
    },
    {
        "id": 1,
        "week_number": 1,
        "task": 1
    }
]


new_data = transform_data(data)
print(new_data)
</code></pre>
<h3>Results:</h3>
<pre><code>[{'week_number': 2, 'tasks': [{'id': 3, 'task': 1}]}, 
 {'week_number': 1, 'tasks': [{'id': 2, 'task': 2}, {'id': 1, 'task': 1}]}
]
</code></pre>
</div>
