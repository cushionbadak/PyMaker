<div class="post-text" itemprop="text">
<p>I have a text file like this:</p>
<pre><code>line 1
line 2
line 3
CommandLine arguments "render -h 192.168.1.1 -u user -p pass"
line 5
</code></pre>
<p>I want to replace the IP address and write the file in-place.  The tricky part is, the lines might be in a different order, and the command-line arguments might be written in a different order.  So I need to find the line beginning with <strong>CommandLine</strong> and then replace the string between <strong>-h</strong> and the next <strong>-</strong>.</p>
<p>So far, I am able to get the old IP address with the following code, but I don't know how to replace it and write the file.  I'm a Python beginner.</p>
<pre><code>with open(the_file,'r') as f:
    for line in f:
        if(line.startswith('CommandLine')):
            old_ip = line.split('-h ')[1].split(' -')[0]
            print(old_ip)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this using <a href="https://docs.python.org/3/library/fileinput.html" rel="nofollow noreferrer"><code>fileinput</code></a></p>
<pre><code>import fileinput, re
filename = 'test_ip.txt'
with fileinput.FileInput(filename, inplace=True, backup='.bak') as file:
    for line in file:
        print(re.sub("-h \S+ -u", "-h YOUR_NEW_IP_HERE -u", line), end='')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this for replacing characters :</p>
<pre><code>with open(the_file,'r') as f:
   for line in f:
      if(line.startswith('CommandLine')):
           replaced_line = re.sub('(?&lt;=-h).*?(?=-u)', 'NEW IP',line, 
                       flags=re.DOTALL)
</code></pre>
<p>It will make the line like :</p>
<pre><code>CommandLine arguments "render -h NEW IP -u user -p pass"
</code></pre>
<p>Another way you can try with <code>fileinput</code>, it will replace the old ip with what you want to add and will write to your file.</p>
<p><strong>UPDATE :</strong></p>
<p>The problem was with the if condition now with my first regex you can manage that if :</p>
<pre><code>for line in fileinput.input("file.txt", inplace=True):
    print(re.sub('(?&lt;=-h).*?(?=-u)',' newIp ',line.strip()), end='\n')
</code></pre>
<p><strong>Note :</strong> Add space in new ip</p>
</div>
<span class="comment-copy">For changing a file in-place that you are also reading, look at <a href="https://stackoverflow.com/a/5463419/7315159">"Is it possible to modify lines in a file in-place?"</a>.</span>
<span class="comment-copy">Thank you, that works!  Is there a reason you prefer FileInput() instead of input() ?</span>
<span class="comment-copy"><code>input()</code> will also work the same, for more details check the docs.</span>
<span class="comment-copy">This put me on the right track. To make it more robust, handling arguments in a different order, I changed the line to <code>print(re.sub('-h [\w.]+', '-h ' + new_ip, line), end='')</code></span>
<span class="comment-copy">In your first method, how do I then overwrite the line with <code>replaced_line</code> in the original file?  I can't use the second option in this case because the order of arguments in the text file could be different, and I need to replace only the IP.</span>
<span class="comment-copy">Also â€” using the second method as you wrote removes all the other lines from the text file.</span>
<span class="comment-copy">@ElliottB I understood the problem with my code, It was with the condition So with using regex I managed to fix the issue. Any way happy to hear you got correct one. I have updated my answer, you can just take a look.</span>
