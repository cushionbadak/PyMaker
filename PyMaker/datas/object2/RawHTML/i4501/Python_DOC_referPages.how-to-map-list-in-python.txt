<div class="post-text" itemprop="text">
<p>I have 2 list below</p>
<pre><code>Token_Sentence=[['This','is','a','book'],['This','is','a','cat'],['Those','are','two','books']]
Mapping=[['This',1],['is',2],['a',3],['book',4],['cat',5],['Those',6],['are',7],['two',8],['books',9]]
</code></pre>
<p>And I want to map Token_Sentence (convert text to index number) like this</p>
<pre><code>[[1,2,3,4],[1,2,3,5],[6,7,8,9]]
</code></pre>
<p>and here is my code </p>
<pre><code>for a in range(len(Token_Sentence)):
    for b in range(len(Token_Sentence[a])):
        for c in range(len(Mapping)):
            if Token_Sentence[a][b]==Mapping[c][0]:
                Token_Sentence[a][b]=Mapping[c][1]
</code></pre>
<p>But the Problem is it's take a very long time to run (my real data list is pretty large).</p>
<p>Is there are other ways to achieve my goal that faster and simpler than I did?  </p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a mapping from <code>Mapping</code>:</p>
<pre><code>Token_Sentence=[['This','is','a','book'],['This','is','a','cat'],['Those','are','two','books']]
Mapping=[['This',1],['is',2],['a',3],['book',4],['cat',5],['Those',6],['are',7],['two',8],['books',9]]
d = dict(Mapping)
new_sentence = [[d[b] for b in i] for i in Token_Sentence]
</code></pre>
<p>Output:</p>
<pre><code>[[1, 2, 3, 4], [1, 2, 3, 5], [6, 7, 8, 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Above Answer is good , Just wanted to show if you want without converting to dict :</p>
<pre><code>Token_Sentence=[['This','is','a','book'],['This','is','a','cat'],['Those','are','two','books']]
Mapping=[['This',1],['is',2],['a',3],['book',4],['cat',5],['Those',6],['are',7],['two',8],['books',9]]

print([[k[1] for j in i for k in Mapping if j==k[0]] for i in Token_Sentence ])
</code></pre>
<p>output:</p>
<pre><code>[[1, 2, 3, 4], [1, 2, 3, 5], [6, 7, 8, 9]]
</code></pre>
</div>
<span class="comment-copy">Probably worth pointing out, another name for the abstract data type "dictionary" implemented by <code>dict</code> is called often called <i>a map</i>. Indeed, in Python, a <code>dict</code> is a <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">mapping type</a></span>
<span class="comment-copy">I'll note that this is especially performant because <code>dict</code> has a lookup of O(1) instead of O(n), so overall your complexity is O(n), rather than O(n*m)</span>
