<div class="post-text" itemprop="text">
<p>I started a project where I turn a string into a list, and in the list I turn each index into another list. However, I ran into a problem. My code is below:</p>
<pre><code># Define the string
string = "Hello there!"

# Print string (Hello there!)
print(string)

# Define string_list and assign it to the list version of a string
string_list = list(string)

# Print string_list
print(string_list)
''' # ['H', 'e', 'l', 'l', 'o', ' ', 't', 'h', 'e', 'r', 'e', '!'] '''

for i in string_list:
    i = list(i)

print(string_list)
''' ['H', 'e', 'l', 'l', 'o', ' ', 't', 'h', 'e', 'r', 'e', '!'] '''
</code></pre>
<p>When I try to turn each index of the <code>string_list</code> into another list, it doesn't work. What I want is for the output of the final print of <code>string_list</code> to look like this: </p>
<pre><code>[['H'], ['e'], ['l'], ['l'], ['o'], [' '], ['t'], ['h'], ['e'], ['r'], ['e'], ['!']]
</code></pre>
<p>Is there a way I can do this similar to my original method? Also, why does my original method not do what I want it to do? Thank you in advance.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is there a way I can do this similar to my original method?</p>
</blockquote>
<p>Yes; two ways about this would be to use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> or a <a href="https://docs.python.org/3.6/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>.</p>
<pre><code>&gt;&gt;&gt; s = "Hi there"

&gt;&gt;&gt; list(map(list, s))
[['H'], ['i'], [' '], ['t'], ['h'], ['e'], ['r'], ['e']]

&gt;&gt;&gt; [[i] for i in s]  # or: [list(i) for i in s]
[['H'], ['i'], [' '], ['t'], ['h'], ['e'], ['r'], ['e']]
</code></pre>
<blockquote>
<p>Also, why does my original method not do what I want it to do?</p>
</blockquote>
<p>The problem lines are here:</p>
<pre><code>for i in string_list:
    i = list(i)
</code></pre>
<p>As you can read more about in <a href="https://stackoverflow.com/q/19290762/7954504">this question</a>, assinging to <code>i</code> within the loop does not affect the elements of <code>string_list</code> themselves.  To be specific, <code>for i in string_list</code> creates a new variable <code>i</code> at each turn of the loop, the last of which will still exist after the loop terminates.  In short, it is good practice to avoid trying to modify the container (<code>string_list</code>) over which you're looping.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code># define the string
s1 = "Hello there!"

# holds nested lists
new_list = []

# print string
print(s1)
''' Hello there! '''

# convert string to a list
string_list = list(s1)

# print the list
print(string_list)
''' # ['H', 'e', 'l', 'l', 'o', ' ', 't', 'h', 'e', 'r', 'e', '!'] '''

# load each element to list as a list
for i in string_list:
    new_list.append([i]) # &lt;&lt;&lt;&lt;&lt; the '[i]' is important

print(new_list)
'''
[['H'], ['e'], ['l'], ['l'], ['o'], [' '], ['t'], ['h'], ['e'], ['r'], ['e'], ['!']]
'''
</code></pre>
</div>
<span class="comment-copy">If you don't like map: <code>[list(i) for i in string]</code></span>
<span class="comment-copy">Try to avoid using <code>string</code> as a variable name as it clashes with the <code>string</code> library.</span>
