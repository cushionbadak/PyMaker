<div class="post-text" itemprop="text">
<p>I am struggling to write a simple python script (a pseudo-git), which will allow me to call it from commandline/shell using comand like this:</p>
<pre><code>$ python script.py init
</code></pre>
<p>I found some solutions online, which enabled me to do so, but there is little issue though. I want "add" function to accept other arguments as well (strings in general, which will represent files' names). </p>
<p>I have found a workaround, but it doesn't look nice. Is there a way to refactor the code, so that "add" will accept also other arguments and let me access them later on? Important thing: I don't want them to be added with "--", I'd rather separate them by simply adding space between two arguments.</p>
<p>I found "nargs='+' option in add_argument, but I don't know how to redirect the argument to call a proper function.</p>
<p>Here is my code I wrote so far:</p>
<pre><code>import argparse
import sys

def init():
    print("init method call")

def add():
    if(len(sys.argv)&gt;2):
        print("valid add method call")
    else:
        print("invalid call")

def commit():
    print("commit method call") 

def status():
    print("status method call") 

def test():
    print("test method call")   

FUNCTION_MAP = {'init' : init,
                'status' : status,
                'commit': commit}

if __name__ == '__main__':
    if(len(sys.argv)&gt;1 and sys.argv[1] == "add"):
        add()
    else:           
        parser = argparse.ArgumentParser()
        parser.add_argument('command', choices=FUNCTION_MAP.keys())
        args = parser.parse_args()
        func = FUNCTION_MAP[args.command]
        func()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here are 2 options - take an extra positional, and use or ignore the values.  Or use subparsers.</p>
<pre><code>import argparse

def add(args):
    print("add:", args)

def status(args):
    values = getattr(args,'values',None)
    if values and len(values)&gt;0:
        # error message and method of your choice
        print('oops - got values', args)
    print("status method call")

FUNCTION_MAP = {'add' : add,
                'status' : status}

if __name__ == '__main__':

        parser = argparse.ArgumentParser()
        parser.add_argument('command', choices=FUNCTION_MAP.keys())
        parser.add_argument('values', nargs='*')
        args = parser.parse_args()
        func = FUNCTION_MAP[args.command]
        func(args)

        print('\nWIth subparsers')
        parser = argparse.ArgumentParser()
        sp = parser.add_subparsers(dest='command')
        spp = sp.add_parser('add')
        spp.add_argument('values', nargs='*')
        spp = sp.add_parser('status')
        args = parser.parse_args()
        func = FUNCTION_MAP[args.command]
        func(args)
</code></pre>
<p>Sample runs</p>
<pre><code>1906:~/mypy$ python3 stack49691897.py add 1 2 3
add: Namespace(command='add', values=['1', '2', '3'])

WIth subparsers
add: Namespace(command='add', values=['1', '2', '3'])
1907:~/mypy$ python3 stack49691897.py status
status method call

WIth subparsers
status method call
1907:~/mypy$ python3 stack49691897.py status 1 2 3
oops - got values Namespace(command='status', values=['1', '2', '3'])
status method call

WIth subparsers
usage: stack49691897.py [-h] {add,status} ...
stack49691897.py: error: unrecognized arguments: 1 2 3
</code></pre>
<p>The argparse docs also demonstrates a way of using subparsers and defaults  that effectively implements your <code>FUNCTION_MAP</code>.</p>
</div>
<span class="comment-copy">You should use: <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">using the docs linked above you can look at making the <code>init()</code>, <code>add()</code> and <code>commit()</code> as subparsers that way you can have certain flags for each function.</span>
<span class="comment-copy">but will I be able to call them without '-' of '--'? I have already found those docs, but after skimming through them I got different feeling and decided to ask SO community instead.  Edit: what's more I want add to accept more arguments</span>
<span class="comment-copy"><a href="http://click.pocoo.org/6/" rel="nofollow noreferrer">Click</a> could be useful for your case, particularly <code>@click.argument</code></span>
<span class="comment-copy">@Adonis thanks, but I'd rather stay with argparse for this example</span>
<span class="comment-copy">Thank you @hpaulj  :) I will look into that! But is it possible not to specify accepted values for add, but say we can take everything and deal with validating it later in the code?</span>
<span class="comment-copy">Play with <code>parse_known_args</code>.</span>
