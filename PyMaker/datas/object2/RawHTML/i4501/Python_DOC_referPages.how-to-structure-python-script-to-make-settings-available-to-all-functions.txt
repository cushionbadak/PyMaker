<div class="post-text" itemprop="text">
<p>I'm working on a simple CLI script that's not unlike this toy example,</p>
<ol>
<li>Helper Function, <code>test(dict)</code> - run tests on <code>dict</code> using settings from CSV config file.</li>
<li>Function, <code>OpenFile(file)</code> - opens file and returns <code>dict</code> result. Calls <code>test()</code></li>
<li>Function, <code>GetFiles(dir)</code> - takes a directory and runs <code>OpenFile()</code></li>
</ol>
<p>Execution is naturally like this: Call #3, then #2 &amp; #1 run for as many files in directory.</p>
<p>I'm sure it's not a best practice to load CSV config file for each call. It only needs to be loaded once. </p>
<p>What's the simplest and most direct way to load configuration settings and make them available to all functions where they are required? Also, using only the standard library.</p>
<hr/>
<p>PS.
I'm feeling like a total NOOB on this one, but every idea I have just seems too complicated. I'm really just looking for an idiom which I can use when I mock up my idea, before practical requirements necessitate the need for full-function solutions such as <code>config</code> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>For your example (unless the CSV file is huge) it won't make a difference in performance. </p>
<p>However it isn't best practice to load the CSV every time, so use the <code>import config</code> module option. it's actually quite versitile </p>
<p>There is a good article on it here :) 
<a href="https://hackernoon.com/4-ways-to-manage-the-configuration-in-python-4623049e841b" rel="nofollow noreferrer">https://hackernoon.com/4-ways-to-manage-the-configuration-in-python-4623049e841b</a> </p>
</div>
<span class="comment-copy">show us the representative contents of your script and how you intend to call if from the command line</span>
<span class="comment-copy">It's 500 lines scraping a PDF file into Pandas DataFrames. Uses concat to join all the DFs into one, adds a header file, and saves the result as CSV. The <code>test()</code> performs a calculation on each dataframe to ensure success. It's called using Click module, as in <code>$ GetFiles dir</code> in bash.</span>
<span class="comment-copy">I added at the last minute the suggestion to do it without additional modules. Any ideas without another module dependency? Should I make Global variables?</span>
<span class="comment-copy">it's not an additional module. most of the time a literally write a <code>config.py</code> file and import it.</span>
<span class="comment-copy"><code>configparser</code> is also part of the python standard library <a href="https://docs.python.org/3/library/configparser.html?highlight=config#module-configparser" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
