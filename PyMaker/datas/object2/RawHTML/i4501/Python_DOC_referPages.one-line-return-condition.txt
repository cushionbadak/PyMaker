<div class="post-text" itemprop="text">
<p>that's my code:</p>
<pre><code>d = {'key1':1,'key2':5}

def pop1(d):
    return d.pop('key2') if len(d) &gt; 1 else d

def pop2(d):
    if len(d) &gt; 1: d.pop('key2')
    return d

def test(a):
    return a, len(a)
</code></pre>
<p>pop2 works fine:</p>
<pre><code>print test(pop2(d))

({'key1': 1}, 1)
</code></pre>
<p>pop1 doesn't:</p>
<pre><code>print test(pop1(d))

TypeError: object of type 'int' has no len()
</code></pre>
<p>What am I missing? Is it about the pop() function or the one-line condition?</p>
</div>
<div class="post-text" itemprop="text">
<p>If we analyse the following return statement:</p>
<pre><code>d.pop('key2') if len(d) &gt; 1 else d
</code></pre>
<p>we see that when the length of the dictionary is less than <code>1</code>, the dictionary is just returned. This is not the case here, so we are interested when <code>len(d)</code> is <code>&gt; 1</code>.</p>
<p>In this case, <code>d.pop('key2')</code> is returned. From <a href="https://docs.python.org/3/library/stdtypes.html#dict.pop" rel="nofollow noreferrer">the documentation</a>, we see that the <code>.pop</code> method will:</p>
<blockquote>
<p>If key is in the dictionary, remove it and return its value</p>
</blockquote>
<p>...so <code>pop1</code> will return the value of <code>'key2'</code> which is <code>5</code>.</p>
<p>This leads to an error when you call <code>len()</code> on it since <code>5</code> is an integer.</p>
<p>This is made clear by the error:</p>
<blockquote>
<p>TypeError: object of type 'int' has no len()</p>
</blockquote>
<hr/>
<p>Why does <code>pop2()</code> work?</p>
<p>Well this function does not use a ternary which decides whether the value or the whole dictionary is returned, instead we <em>always</em> return <code>d</code> - the dictionary.</p>
<p>This means that <code>len()</code> can always be called and it works as expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>when u do:</p>
<pre><code>print test(pop1(d))
</code></pre>
<p><code>pop1(d)</code> will return 5 </p>
<p>so making your statement <code>print(test(5))</code></p>
<p><code>len(5)</code> --&gt; 5 is not String , so you will get an error.</p>
</div>
<span class="comment-copy"><code>d.pop</code> will return something else but not <code>d</code> itself.</span>
<span class="comment-copy"><code>pop1</code> returns the popped value (if anything was popped). <code>pop2</code> always returns the dictionary <code>d</code>.</span>
<span class="comment-copy">see this: <a href="https://www.programiz.com/python-programming/methods/dictionary/pop" rel="nofollow noreferrer">programiz.com/python-programming/methods/dictionary/pop</a></span>
<span class="comment-copy">Thank you. So, no way to code it in one line?</span>
<span class="comment-copy">No, not really, you are trying to perform two distinct operations...</span>
