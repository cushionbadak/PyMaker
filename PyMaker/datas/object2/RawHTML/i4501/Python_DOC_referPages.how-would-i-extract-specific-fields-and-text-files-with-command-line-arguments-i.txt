<div class="post-text" itemprop="text">
<p>I want my program to be able to extract a column of text from a .txt file, based on a command line argument.</p>
<p>For example, say I have a fruits.txt file like this,</p>
<pre><code>Apple Pear Watermelon 
Orange Grapes Banana
</code></pre>
<p>In the command line, if I were to run <code>python my_program.py 1 fruits.txt</code> I want the output to be just the first column, 
E.g.</p>
<pre><code>Apple
Orange
</code></pre>
<p>If it was <code>python my_program.py 3 fruits.txt</code>, I would expect the output,</p>
<pre><code>Watermelon 
Banana
</code></pre>
<p>And say I happen to also have a veg.txt file with the same format... e.g.</p>
<pre><code>Broccoli Cabbage Asparagus
Spinach Rocket Cucumber
</code></pre>
<p>Then in the command line, I would expect the same to happen if I did <code>python 2 veg.txt</code> 
And get,</p>
<pre><code>Cabbage 
Rocket
</code></pre>
<p>So far I've only figured out how to do it statically. I.e. I have to hard code in<br/>
<code>file = open("fruits.txt", "r")</code> and specifically printing the field. </p>
<p>E.g.</p>
<pre><code>file = open("fruits.txt", "r")

for line in file:
    fields = line.split(" ")

    col1 = fields[0]
    col2 = fields[1]
    col3 = fields[2]
    col4 = fields[3]

    print(col1)

file.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>argv</code> from <code>os</code> module.</p>
<pre><code>print_col.py:

import os

column, filename = os.argv[1:3]  # check the actually number of command arguments

with open(filename, 'r') as f:
    print([line.split()[column - 1] for line in f.readlines()])  # make sure the column number doesn't beyond the actually column count in the file
</code></pre>
<p>You can call this script with this command <code>python print_col.py 1 test.txt</code>.</p>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer">csv module</a>.</span>
