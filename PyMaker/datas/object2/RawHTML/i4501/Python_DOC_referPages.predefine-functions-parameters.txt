<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26853032/how-to-pass-predefined-arguments-when-storing-a-function">How to pass predefined arguments when storing a function</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I need to predefine functions' parameters once, then use that functions somewhere else without passing arguments to them.</p>
<p>Like so: </p>
<pre><code>@predef  
def foo(x):
    print(x)

foos = foo("hello"), foo("world")

for f in foos:
    f()

&gt;&gt; hello
&gt;&gt; world
</code></pre>
<p>Everything working as I wanted. But decorator looks tricky.</p>
<pre><code>def predef(f):
    def decorator(*args, **kwargs):
        def wrapper(*args, **kwargs):
            while True:
                yield f(*args, **kwargs)
        return wrapper(*args, **kwargs).__next__
    return decorator
</code></pre>
<p>I feel that there is simpler way to do that. Is it?</p>
</div>
<div class="post-text" itemprop="text">
<p>For your specific example:</p>
<pre><code>&gt;&gt;&gt; foos = lambda: print('hello'), lambda:print('world')
&gt;&gt;&gt; for f in foos: f()

hello
world
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial</code></a>?</span>
<span class="comment-copy">You need to convert a non-nullary function into thunk, correct?</span>
<span class="comment-copy">@Aran-Fey, going to read about it,  thx.</span>
<span class="comment-copy">@bipll, din't hear about it before, but I think yes.</span>
<span class="comment-copy">Thanks, I'll remember this. But it will be tricky for more complex things.</span>
