<div class="post-text" itemprop="text">
<p>I have 5 arrays I want to repeat 600 times and then make into one big array</p>
<pre><code>lenE=600
E=array([49.73199462, 49.73799861, 49.74400261, 49.74894938, 49.7500066 ....])
Lat3E=[E]*lenE
</code></pre>
<p>I do this for all my arrays A, B, C, D and E. E is shorter then the other arrays. When I try to combine then the error is:</p>
<pre><code>lat=np.concatenate((Lat3A,Lat3B,Lat3C,Lat3D,Lat3E))
ValueError: all the input array dimensions except for the concatenation axis must match exactly.
</code></pre>
<p>This is because Lat3E is a combination of 600 arrays. It looks like this:</p>
<pre><code>[array([49.73199462, 49.73799861,....)],array([49.73199462, 49.73799861,....]),array([49.73199462, 49.73799861,...)],...]
</code></pre>
<p>How do I make this long 600 array into 1 long array to make the error go away?
Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can concatenate multiple lists of arrays like this:</p>
<pre><code>lat = np.concatenate(Lat3A + Lat3B + Lat3C + Lat3D + Lat3E)
</code></pre>
<p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.concatenate.html" rel="nofollow noreferrer"><code>np.concatenate</code></a> takes a sequence as input, so a list or a tuple will do. If you have multiple lists, you need to convert them to a single list, for example with <code>+</code> (or you could also do <code>[*Lat3A, *Lat3B, *Lat3C, *Lat3D, *Lat3E]</code>, or use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a>, ...) and then pass it to the function.</p>
<p>If all the original arrays are the same sizeAnother way of solving the same problem with NumPy only could be this:</p>
<pre><code>lens = np.array([lenA, lenB, lenC, lenD, lenE])
lat = np.tile(lens[:, np.newaxis], (1, 600, 1)).reshape((-1,))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of <code>Lat3E=[E]*lenE</code> you can use <code>np.repeat(E, lenE)</code> function.</p>
</div>
<span class="comment-copy">Unclear what you're asking, consider providing <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Are <code>Lat3B</code>, <code>Lat3C</code>, etc. also lists of arrays, or just regular one-dimensional arrays?</span>
<span class="comment-copy">They are all the same, so lists of arrays</span>
<span class="comment-copy">I don't think that it's a good idea to have lists of numpy arrays. Consider using 2D arrays. This <code>Lat3E=[E]*lenE</code>, for example, could be rewritten as <code>Lat3E = np.tile(E, (lenE, 1))</code>.</span>
<span class="comment-copy">So what exactly does it do? Because I need the order to stay the same.</span>
<span class="comment-copy">@Elise The order remains the same, it just concatenates all the lists into one.</span>
<span class="comment-copy">@Elise I've added another possible NumPy solution, although only if all original arrays have the same size.</span>
