<div class="post-text" itemprop="text">
<p>Is it possible to rename/alter all the keys of a dict? As an example, let's look at the following dictionary:</p>
<pre><code>a_dict = {'a_var1': 0.05,
          'a_var2': 4.0,
          'a_var3': 100.0,  
          'a_var4': 0.3}
</code></pre>
<p>I want to remove all the <code>a_</code> in the keys, so I end up with</p>
<pre><code>a_dict = {'var1': 0.05,
          'var2': 4.0,
          'var3': 100.0,  
          'var4': 0.3}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to alter the existing dict, instead of creating a new one, you can loop the keys, <code>pop</code> the old one, and insert the new, modified key with the old value.</p>
<pre><code>&gt;&gt;&gt; for k in list(a_dict):
...     a_dict[k[2:]] = a_dict.pop(k)     
...
&gt;&gt;&gt; a_dict
{'var2': 4.0, 'var1': 0.05, 'var3': 100.0, 'var4': 0.3}
</code></pre>
<p>(Iterating a <code>list(a_dict)</code> will prevent errors due to concurrent modification.)</p>
<p>Strictly speaking, this, too, does not alter the existing keys, but inserts new keys, as it has to re-insert them according to their new hash codes. But it does alter the dictionary as a whole.</p>
<hr/>
<p>As noted in comments, updating the keys in the dict in a loop can in fact be slower than a dict comprehension. If this is a problem, you could also create a new dict using a dict comprehension, and then <code>clear</code> the existing dict and <code>update</code> it with the new values.</p>
<pre><code>&gt;&gt;&gt; b_dict = {k[2:]: a_dict[k] for k in a_dict}
&gt;&gt;&gt; a_dict.clear()
&gt;&gt;&gt; a_dict.update(b_dict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use:</p>
<pre><code>{k[2:]: v for k, v in a_dict.items()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do that easily enough with a dict comprehension.</p>
<pre><code>a_dict = {'a_var1': 0.05,
          'a_var2': 4.0,
          'a_var3': 100.0,  
          'a_var4': 0.3}

a_dict = { k[2:]:v for k,v in a_dict.items() }
</code></pre>
<p>Result:</p>
<pre><code>{'var1': 0.05, 'var2': 4.0, 'var3': 100.0, 'var4': 0.3}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace</code></a> function to replace key to match the desired format.</p>
<pre><code>a_dict = {'a_var1': 0.05,
          'a_var2': 4.0,
          'a_var3': 100.0,  
          'a_var4': 0.3}

a_dict = {k.replace('a_', ''): v for k, v in a_dict.items()}
# {'var1': 0.05, 'var2': 4.0, 'var3': 100.0, 'var4': 0.3}
</code></pre>
</div>
<span class="comment-copy">Are all keys prefixed with <code>'a_'</code>, or can it be <code>'b_'</code>, <code>foo_'</code>, etc.? What to do in those cases?</span>
<span class="comment-copy">Do you specifically want to alter keys in an existing dict, or would it be okay or maybe preferred to create a new dict?</span>
<span class="comment-copy">@WillemVanOnsem It is always the same prefix</span>
<span class="comment-copy">@tobias_k I would prefer to alter them in an existing dict</span>
<span class="comment-copy">Although this answers OP's question precisely, I would advise using a dict comprehension as presented in the other answers instead if the dict is or can be large, for performance reasons.</span>
<span class="comment-copy">Technically, this does not alter any keys, but create a new dict.</span>
<span class="comment-copy">... as you <i>cannot</i> change the keys of a dict</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre I guess it's because OP is not familiar with terminology. Their intention is clear...</span>
<span class="comment-copy">@tobias_k I agree, but this is indeed an unclear part in their question. "Altering all keys" is always impossible. You only know from their comment that they want to keep the original dict.</span>
