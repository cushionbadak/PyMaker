<div class="post-text" itemprop="text">
<p>How do I get Python to start another instance of itself using subprocess? At present I have:</p>
<pre class="lang-python prettyprint-override"><code>import subprocess
p = subprocess.Popen(["py.exe", "card game.py"])
returncode = p.wait()
</code></pre>
<p>However, it just opens cardgame.py in the current window.</p>
<p>How do I prevent this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can start another python instance by calling <code>subprocess.call</code> with <code>sys.executable</code></p>
<pre><code>import sys
import subprocess

# this will block until the card game terminates
subprocess.call([sys.executable, 'card game.py'])
</code></pre>
<p>or using <code>subprocess.Popen</code></p>
<pre><code>import sys
import subprocess

# this will not block
proc = subprocess.Popen(
    [sys.executable, 'card game.py'],
    stdout=subprocess.DEVNULL,  # if you skip these lines
    stderr=subprocess.DEVNULL,  # you must call `proc.communicate()`
)

# wait for the process to finish
proc.wait()
</code></pre>
<p>Read the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> docs.</p>
</div>
<span class="comment-copy">By "current window" you mean "in the same terminal window"? What's wrong with that? That's how it's supposed to be.</span>
<span class="comment-copy">Yes, you're right. However, I need it to start in a separate window so that when it finishes I can catch any errors using sys.exit(1)</span>
<span class="comment-copy">I'm sorry, what? Catching errors and terminal windows are completely unrelated things. Maybe you should add whatever problem you're having with catching errors to your question?</span>
<span class="comment-copy">"card game.py" is in an whole 'try' statement. If there is an exception it goes to the "except" statement, which contains "sys.exit(1)", so main.py (the program above) can identify there is an error, and do things about it. Otherwise, main.py just exits normally. Sorry if this was not clear.</span>
<span class="comment-copy">Ok, but you can check if the exit code of the process was 0 or 1 regardless of whether it's opened in a new terminal or not. In fact, it's <i>easier</i> to do if they're in the same terminal window.</span>
