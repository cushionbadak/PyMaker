<div class="post-text" itemprop="text">
<p>The function:</p>
<pre><code>def newstr(string, file_name, after):
    lines = []
    with open(file_name, 'r') as f:
        for line in f:
            lines.append(line)
    with open(file_name, 'w+') as f:
        flag = True
        for line in lines:
            f.write(line)
            if line.startswith(after) and flag:
                f.write(string+"\n")
                flag = False
</code></pre>
<p>What im running is</p>
<pre><code>newstr('hello', "test.txt", "new code(")
</code></pre>
<p>Test.txt contents:</p>
<pre><code>package example.main;

import example
public class Main {
    public static void Main() {
        new code("&lt;RANDOM&gt;");
        new code("&lt;RANDOM&gt;");
    }   

}
</code></pre>
<p>What I expect:</p>
<pre><code>package example.main;

import example
public class Main {
    public static void Main() {
        new code("&lt;RANDOM&gt;");
        hello
        new code("&lt;RANDOM&gt;");
    }   

}
</code></pre>
<p>But when I run the script nothing changes.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have lines with <em>whitespace indentation</em>, such as</p>
<pre><code>        new code("&lt;RANDOM&gt;");
</code></pre>
<p>That line has spaces at the start; if you looked at the string representation you'd see:</p>
<pre><code>&gt;&gt;&gt; repr(line)
'        new code("&lt;RANDOM&gt;");\n'
</code></pre>
<p>That line does not start with <code>'new code('</code>, it starts with <code>'        new code('</code>:</p>
<pre><code>&gt;&gt;&gt; line.startswith('new code(')
False
</code></pre>
<p><code>str.startswith()</code> does not ignore spaces.</p>
<p>Either strip off the whitespace, or include whitespace in the <code>after</code> variable:</p>
<pre><code>&gt;&gt;&gt; line.strip().startswith('new code(')  # str.strip removes whitespace from start and end
True
&gt;&gt;&gt; line.startswith('        new code(')
True
</code></pre>
<p>You could also use <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regular expressions</a> to match lines, so using the pattern <code>r'^\s*new code\('</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your mistake is that line does <em>not</em> start with the text you are looking for. It starts with <code>"        new code("</code> not <code>"new code(</code>. So you either need to look for <code>"        new code(</code> or you need to strip the whitespace from the line, i.e. <code>line.lstrip().startswith(...</code>.</p>
<p>BTW. instead of the loop you use to read in the file you could just say <code>lines = f.readlines()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>As there is lots of whitespace being created by the IDE
you need to strip it before you can use <code>startswith</code> so change it to <code>line.lstrip().startswith</code> so that the leading whitespaces get removed
next for the writing you can use an Regex to add the whitespace to your new line like this</p>
<pre><code>f.write(re.search(r"\s*", line).group()+string+"\n")
</code></pre>
<p>Fixed code:</p>
<pre><code>import re
def newstr(string, file_name, after):
    with open(file_name, 'r') as f:
        lines = f.readlines()
    with open(file_name, 'w+') as f:
        flag = True
        for line in lines:
            f.write(line)
            if line.lstrip().startswith(after) and flag:
                f.write(re.search(r"\s*", line).group()+string+"\n")
                flag = False

newstr('hello', "test.txt", "new code(")
</code></pre>
</div>
<span class="comment-copy">A a side note, that first loop can just be written as <code>lines = list(f)</code>.</span>
<span class="comment-copy">Thanks im going to add the whitespace at the start however it would be nice if it was possible to have this be automated depending on the amount of braces so i may try to get that working (somehow)</span>
<span class="comment-copy">@projectuser: you'd have to look at a proper Java parser then, like <a href="https://github.com/c2nes/javalang" rel="nofollow noreferrer">github.com/c2nes/javalang</a></span>
<span class="comment-copy">I know a way to do it know replace line 10 with <code>f.write(re.search(r"\s*", line).group()+string+"\n")</code> just make sure to <code>import re</code> it works by getting the whitespace from the line above it</span>
<span class="comment-copy">@projectuser: that'll work in simple cases, yes.</span>
<span class="comment-copy">This answer also works im not sure witch answer is better</span>
