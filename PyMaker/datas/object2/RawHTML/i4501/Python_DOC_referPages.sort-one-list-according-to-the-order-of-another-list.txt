<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9764298/is-it-possible-to-sort-two-listswhich-reference-each-other-in-the-exact-same-w">Is it possible to sort two lists(which reference each other) in the exact same way?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>Please see below 2 lists:</p>
<p>If I append the cat and their age to two different lists, how do I sort it so that when the age of the oldest cat is printed, Luke is also printed, whereas when the age of the youngest cat is printed, Ronny is also printed. </p>
<pre><code>cats = ["ronny", "brodie", "fraise", "luke"]
age = [5, 6, 7, 11]

age.sort()
print("The age of the oldest cat is {}. This cat is {}".format(age[-1], 
cats[THE OLDEST CAT]))
print("The age of the youngest cat is {}. This cat is {}".format(age[0], 
cats[THE YOUNGEST CAT]))
</code></pre>
<p>How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> the two lists, and then apply <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> on them, so that the cats with their age are together in a tuple. Something like below:</p>
<pre><code>In [60]: cats = ["ronny", "brodie", "fraise", "luke"]
    ...: age = [5, 6, 7, 11]
    ...: cats_by_age = sorted(zip(age, cats))
    ...: 
    ...: print("The age of the oldest cat is {}. This cat is {}".format(*cats_by_age[-1]))
    ...: print("The age of the youngest cat is {}. This cat is {}".format(*cats_by_age[0]))
    ...: 
The age of the oldest cat is 11. This cat is luke
The age of the youngest cat is 5. This cat is ronny
</code></pre>
</div>
<span class="comment-copy">If I reduced the list to say cats = ["ronny"] and age = ["5"] how could I still use this but without experiencing an out of range error</span>
<span class="comment-copy">@LucasEng This piece of code won't produce index error with your updated list values (tried in python 3.5). Are you sure the out of range error is produced by this code, and not in some other place?</span>
