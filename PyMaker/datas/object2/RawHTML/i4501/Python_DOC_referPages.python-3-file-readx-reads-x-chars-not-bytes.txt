<div class="post-text" itemprop="text">
<p>According to documentation (<a href="https://docs.python.org/3/library/io.html?highlight=io#io.RawIOBase.read" rel="nofollow noreferrer">https://docs.python.org/3/library/io.html?highlight=io#io.RawIOBase.read</a>), <code>file.read(x)</code> should return me up to x bytes from file. </p>
<p>When I call <code>file.read(1)</code> on a UTF-8 text file, however, it returns me unicode symbols (including those which occupy 2-4 bytes).</p>
<p>In Python 2.7, however, everything seems to be ok.
So the question is - is that a bug, or do i miss something here?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work</p>
<pre><code>with open("myfile", "rb") as f:
    byte = f.read(1)
    while byte != b"":
        byte = f.read(1)
</code></pre>
</div>
<span class="comment-copy">Did you open the file in binary mode or in text mode?</span>
<span class="comment-copy">@Aran-Fey in text mode. In binary mode it works as it should. But read() operates same on both, i suppose</span>
<span class="comment-copy">Nope. In text mode you get 1 character, in binary mode you get 1 byte.</span>
<span class="comment-copy">@Aran-Fey, hm, ok, then i did't search docs well. Thank you</span>
<span class="comment-copy">When you open in text mode you get a text reader: <a href="https://docs.python.org/3/library/io.html?highlight=io#io.TextIOBase" rel="nofollow noreferrer">docs.python.org/3/library/io.html?highlight=io#io.TextIOBase</a></span>
