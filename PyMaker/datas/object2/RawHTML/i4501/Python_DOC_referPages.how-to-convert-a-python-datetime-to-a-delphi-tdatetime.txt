<div class="post-text" itemprop="text">
<p>I need to convert <code>datetime.datetime(2018, 4, 1, 16, 22, 9, 920000)</code>  into the Delphi TDateTime value <code>43191.68205925926</code>, on Python versions &lt; 3.2.</p>
<p>I tried</p>
<pre><code>def pdt2ddt(pydt):  # py datetime into delphi time
   start = datetime.datetime(1899, 12, 30)
   delta = pydt - start
   seconds = (delta - datetime.timedelta(days=delta.days)).total_seconds()
   return seconds / 3600 / 24
</code></pre>
<p>but <code>timedelta.total_seconds()</code> works only if the python version is 3.2 and above.</p>
<p>Delphi <code>TDateTime</code> values are expressed as a double floating point value counting days since midnight 1899-12-30.</p>
</div>
<div class="post-text" itemprop="text">
<p>The Delphi value is the number of days since a specific epoch, 1899-12-30. Construct a <code>timedelta</code> from the value as the <code>days</code> argument and add the epoch to go from Delphi to Python, and to go the other way, produce a delta between the Python datetime and the epoch, and divide the result by a <code>timedelta(days=1)</code> value (Python 3.2 / Python 2.7 and newer) or just add up the <code>seconds</code> and <code>microseconds</code> components and divide by the number of seconds in a day for older Python versions:</p>
<pre><code>from datetime import datetime, timedelta

# A delphi datetime value is the (fractional) number of days since the epoch
# e.g. 42 minutes past the the UNIX epoch is 25569.029166666667 in Delphi terms.
DELPHI_EPOCH = datetime(1899, 12, 30)

def datetime_fromdelphi(dvalue):
    return DELPHI_EPOCH + timedelta(days=dvalue)

def datetime_todelphi(dt):
    try:
        return (dt - DELPHI_EPOCH) / timedelta(days=1)
    except TypeError:
        # Python 2.7 / Python 3.1 or older don't support division
        delta = dt - DELPHI_EPOCH
        return delta.days + (delta.seconds + delta.microseconds / 1000000.0) / 24 / 3600
</code></pre>
<p>This just uses an adjusted version of the <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta.total_seconds" rel="nofollow noreferrer">equivalency documented for <code>timedelta.total_seconds()</code></a> to get the exact number of days as a floating point number.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; datetime_fromdelphi(43191.68205925926)
datetime.datetime(2018, 4, 1, 16, 22, 9, 920000)
&gt;&gt;&gt; datetime_todelphi(datetime(2018, 4, 1, 16, 22, 9, 920000))
43191.682059259256
</code></pre>
</div>
<span class="comment-copy">The meaning of Delphi's datetime is the number of days since 30 Dec 1899, stored as a double value. (I get that from multiple Delphi docs.) So find that number of days in Python and store it in a float variable.</span>
