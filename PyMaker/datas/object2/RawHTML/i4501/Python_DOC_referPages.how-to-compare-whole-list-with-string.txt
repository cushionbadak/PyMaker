<div class="post-text" itemprop="text">
<pre><code>def isWordGuessed(secretWord, lettersGuessed):    
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    # FILL IN YOUR CODE HERE...
    for i in lettersGuessed:
        if i in secretWord:
            return True;
        else:
            return False;

print(isWordGuessed('banana', ['z', 'x', 'q', 'b', 'a', 'n', 'a', 'n', 'a']))    
print(isWordGuessed('apple', ['a', 'e', 'i', 'k', 'p', 'r', 's']))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're doing the exact opposite of what the method description says</p>
<p><strong>What you are doing : Checking if every character in the guessed list is in the secret word</strong></p>
<p><strong>What you should be doing: Checking if every character in the string is in the list</strong></p>
<pre><code>for c in secretWord:
    if c not in lettersGuessed:
        return False
return True
</code></pre>
<p>should be the contents of the function</p>
</div>
<div class="post-text" itemprop="text">
<p><code>return</code> leaves the function - you need to ensure "all" letters are in it. √ùou are only checking one letter and then you are leaving your function with True or false.</p>
<p>Fix:</p>
<p>Check if all are in it:</p>
<pre><code>def isWordGuessed(secretWord, lettersGuessed):    
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    return all(l in lettersGuessed for l in secretWord) 
</code></pre>
<p>Python has a nice built-in that if applied to a list if <code>all()</code> (or <code>any()</code> ) are True.</p>
<p>You reverse the logic kindof - if all letters of your secretWord are in the lettersGuessed list, you are returning True.</p>
<p>This will return true if you have "Banana" as secret an guessed <code>["B","a","n"]</code> - it does not check if the "amounts" fit.</p>
<p>Dokumentation:  <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">all()</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Since every letter in <code>secretWord</code> should be in <code>lettersGuessed</code>, assuming repetitions don't count (wasn't defined in the question), you can check if the set of letters in secretWord are contained in the set of letters in lettersGuessed the following way:</p>
<pre><code>def isWordGuessed(secretWord, lettersGuessed):
    secretWordSet = set(secretWord)
    return secretWordSet &amp; set(lettersGuessed) == secretWordSet
</code></pre>
</div>
<span class="comment-copy">Your code will just check whether one of the letters are in the <code>secretWord</code> or not. You will have to check all the letters.. Maintain a count of the number of letters found in the secret word, and in the end see if the count is equal to the the length of the string <code>secretWord</code>.</span>
<span class="comment-copy">I wanna check each character of list in string.</span>
<span class="comment-copy">Cool man @Srini it's wonderful clearing doubt. simple and easy I like this solution!</span>
<span class="comment-copy">it's working thanks a lot Patrick</span>
<span class="comment-copy">very elegant :)</span>
