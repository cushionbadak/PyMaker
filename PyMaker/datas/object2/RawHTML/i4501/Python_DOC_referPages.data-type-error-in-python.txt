<div class="post-text" itemprop="text">
<p>the question which I am working on is this:
A program for a supermarket, that checks whether a product is available or not, and then bills the product. 
If the product ID is present in the list of product IDs, you can add the product to the bill. 
Once the product is sold, you will decrease the number of products in stock. </p>
<pre><code>product = ["apple", "pear", "banana", "orange", "guava"]
productID = ["a", "p", "b", "o", "g"]
productLeft = [3, 3, 3, 3, 3]

buy = str(input("enter product ID"))
if any(buy in s for s in productID):
    num = int(productID.index(buy))
    left = productID[num]
if left != 0 :
    left = left-1
    productLeft[num] = left
</code></pre>
<p>I'm getting this error message:</p>
<pre><code>  left = left-1   
TypeError: unsupported operand type(s) for -: 'str' and 'int'
</code></pre>
<p>and if do this:</p>
<pre><code>left = int(productID[num])
</code></pre>
<p>then I get this error message:</p>
<pre><code>  left = int(productID[num])   
ValueError: invalid literal for int() with base 10: 'a'
</code></pre>
<p>Please help what correction should I make in my current code and how I should proceed</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to treat the product <em>ID</em> as the number of items that are left. Don't use <code>productID</code>, use the value from <code>productLeft</code>:</p>
<pre><code>left = productLeft[num]
</code></pre>
<p>Instead of using lists, and having to search for the product ID each time, use <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">some <em>dictionaries</em></a>:</p>
<pre><code>products = {"a": "apple", "p": "pear", "b": "banana", "o": "orange", "guava"}
productLeft = {"a": 3, "p": 3, "b": 3, "o": 3, "g": 3}
</code></pre>
<p>and</p>
<pre><code>buy = input("enter product ID")
if buy in products:  # valid existing key
    if productLeft[buy] &gt; 0:
        productLeft[buy] -= 1
    else:
        print("There is nothing left")
else:
    print("Sorry, there is no such product")
</code></pre>
</div>
<span class="comment-copy">Instead of 3 separate lists, you should have a single <code>dict</code> that maps a product ID to its name and quantity, perhaps something like <code>{"a": ["apple", 3], "p": ["pear", 3]}</code>. Then you can get the name or quantity with <code>products["a"][0]</code> or <code>products["a"][1]</code>, respectively.</span>
