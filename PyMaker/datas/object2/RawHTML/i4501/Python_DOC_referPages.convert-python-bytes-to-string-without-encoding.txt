<div class="post-text" itemprop="text">
<p>I am using Python 3.6 and I have an image as bytes:</p>
<pre><code>img = b'\xff\xd8\xff\xe0\x00\x10JFIF\x00'
</code></pre>
<p>I need to convert the bytes into a string without encoding so it looks like:</p>
<pre><code>raw_img = '\xff\xd8\xff\xe0\x00\x10JFIF\x00'
</code></pre>
<p>The goal is to incorporate this into an html image tag:</p>
<pre><code>&lt;img src="'data:image/png;base64," + base64.b64encode(raw_img) + "' /&gt;"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not just call str and remove the b after?</p>
<p>In:</p>
<pre><code>str(img)[2:-1]
</code></pre>
<p>Out:</p>
<pre><code>'\xff\xd8\xff\xe0\x00\x10JFIF\x00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>img.decode("utf-8")
</code></pre>
<p>You can decode the variable with the above.  Then convert it to base64.  </p>
<pre><code>"&lt;img src='data:image/png;base64,{}'/&gt;".format( base64.b64encode(img.decode("utf-8")) )
</code></pre>
<p>UPDATED:</p>
<p>What you really want is this:</p>
<pre><code>raw_img = repr(img)
"&lt;img src='data:image/png;base64,{}'/&gt;".format( base64.b64encode(raw_img) )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you just need to convert the image to  string why not just use <code>str()</code> function?</p>
<pre><code>&gt;&gt;&gt; img = b'\xff\xd8\xff\xe0\x00\x10JFIF\x00'
&gt;&gt;&gt; type(img)
&lt;class 'bytes'&gt;
&gt;&gt;&gt;
&gt;&gt;&gt;raw_img = str(img)
&gt;&gt;&gt; type(str(img)) 
&lt;class 'str'&gt;
&gt;&gt;&gt;
</code></pre>
<p><code>img</code> is in bytes, but when you use <code>str()</code> it is converted to type string.  </p>
<p>An encoding can also be specified <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str</a>, which would be a more natural way to do things: </p>
<pre><code>str(img, encoding='ansi')
</code></pre>
<p>As suggested in <a href="https://stackoverflow.com/questions/606191/convert-bytes-to-a-string">these answers </a></p>
</div>
<div class="post-text" itemprop="text">
<p>I'm pretty sure <code>img</code> <em>is</em> the byte string that you want to pass to <code>base64.b64encode</code>:</p>
<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; img = b'\xff\xd8\xff\xe0\x00\x10JFIF\x00'
&gt;&gt;&gt; base64.b64encode(img)
b'/9j/4AAQSkZJRgA='
</code></pre>
<p>If you want to incorporate that into an HTML string, use</p>
<pre><code>html = b'&lt;img src="data:image/png;base64,' + base64.b64encode(img) + b' /&gt;'
</code></pre>
</div>
<span class="comment-copy">I'm also seeing that backslashes are being converted to double backslashes in the process</span>
<span class="comment-copy">@slaw No they aren't.</span>
<span class="comment-copy">That's the escape character... In reality there is only one backslash. Because of stuff like \n being newline, another backslash is added to escape it. The raw string representation is still just one backslash.</span>
<span class="comment-copy"><a href="https://docs.python.org/2.0/ref/strings.html" rel="nofollow noreferrer">docs.python.org/2.0/ref/strings.html</a></span>
<span class="comment-copy">repr(img) is the answer to this question.</span>
<span class="comment-copy"><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte</code></span>
<span class="comment-copy">repr(img) will do the trick.</span>
<span class="comment-copy">why someone downvoted me when I provided the correct answer is unfortunate.</span>
<span class="comment-copy">Not the down-voter but I think it might because you used the wrong encoding.</span>
<span class="comment-copy">It was downvoted within seconds of my post.  And I have since updated it with the resolution that address his expressed issue.</span>
<span class="comment-copy">This prints <code>b'\xff\xd8\xff\xe0\x00\x10JFIF\x00'</code></span>
<span class="comment-copy">@chrisz Of type string, not bytes</span>
<span class="comment-copy">Not quite. It still adds <code>b'</code> to the beginning of the string and <code>'</code> to the end but the image still doesn't show up</span>
<span class="comment-copy">No, it doesn't; the <code>b</code> is just part of the <i>representation</i> of the value, not the value itself. Look at the result of <code>list(img)</code>. The value of <code>img</code> you posted doesn't seem to contain a complete image; it looks like just an image header.</span>
<span class="comment-copy">This <code>"{}".format(base64.b64encode(img))</code> produces <code>"b'/9j/4AAQSkZJRgA='"</code>. Notice that the double quotes are around the <code>b'</code> which implies that it is being incorporated into the string.</span>
<span class="comment-copy">OK, see pending update. I was apparently testing with a weird mix of Python 2 and Python 3.</span>
<span class="comment-copy">(I forgot to keep <code>bytes</code> and <code>str</code> objects distinct, and <code>bytes.format</code> isn't defined in Python 3.)</span>
