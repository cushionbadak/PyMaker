<div class="post-text" itemprop="text">
<p>I tried to print(2 ** 3 ** 2) to test precedence order, but in Python then Python returned me 512.0 as result. I expected  Python would take 2 first, then to the power 3 = 8. Then 8, to the power 2 returning 64 as result (since operations are read from left to the right).</p>
<p>But instead, Python read 2 ** 3 ** 2 = 2 ** 9 = 512 (from right to the left).</p>
<p>Could someone explain why did this happen?</p>
</div>
<div class="post-text" itemprop="text">
<p>It is described to behave that way <a href="https://docs.python.org/3/reference/expressions.html#the-power-operator" rel="nofollow noreferrer">in the docs</a></p>
<blockquote>
<p>The power operator binds more tightly than unary operators on its left; it binds less tightly than unary operators on its right. The syntax is:</p>
<pre><code>power ::=  ( await_expr | primary ) ["**" u_expr]
</code></pre>
<p>Thus, <strong>in an unparenthesized sequence of power and unary operators, the operators are evaluated from right to left</strong> (this does not constrain the evaluation order for the operands): <code>-1**2</code> results in <code>-1</code>.</p>
</blockquote>
<p>To be pedantic your question is not about <em>precedence</em> in this case, but rather <em>associativity</em>.</p>
</div>
<span class="comment-copy">mathematically powers are evaluated from right to left.</span>
<span class="comment-copy">Executing 2<b>3</b>2, or 2^3^2, or whatever the power syntax is for a language, is a great way to tell whether the language treats exponentiation at right or left associative.  As Danial said, right-associative of the standard in math.</span>
<span class="comment-copy">related: <a href="https://stackoverflow.com/questions/23759202/calculation-error-with-pow-operator" title="calculation error with pow operator">stackoverflow.com/questions/23759202/â€¦</a></span>
