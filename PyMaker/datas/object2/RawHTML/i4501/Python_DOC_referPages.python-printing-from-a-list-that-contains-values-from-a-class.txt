<div class="post-text" itemprop="text">
<p>I'm trying to print out the values of the variable called Deck that is a list of values that use a class:</p>
<pre class="lang-py prettyprint-override"><code>class Card:
      def __init__(self,suit,value):
        self.suit = suit
        self.value = value

Suits = ['Hearts','Spades','Clubs','Diamonds']
Values = ['2','3','4','5','6','7','8','9','10','J','Q','K','A']

Deck = [Card(suit,value) for suit in Suits for value in Values]
</code></pre>
<p>But whenever i try to print: </p>
<pre class="lang-py prettyprint-override"><code>Deck = [Card(suit,value) for suit in Suits for value in Values]
print(Deck) 
</code></pre>
<p>It gives me:</p>
<pre class="lang-none prettyprint-override"><code>&lt;__main__.Card object at 0x054C7B10&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The printed version of your class can be overridden in a custom <code>__repr__</code> method:</p>
<pre><code>class Card:

  def __init__(self,suit,value):
    self.suit = suit
    self.value = value

  def __repr__(self):
    return ' of '.join([self.value, self.suit])     


Suits = ['Hearts','Spades','Clubs','Diamonds']
Values = ['2','3','4','5','6','7','8','9','10','J','Q','K','A']

Deck = [Card(suit,value) for suit in Suits for value in Values]

print(Deck)
</code></pre>
<p>Result:</p>
<p><code>[2 of Hearts, 3 of Hearts, 4 of Hearts, 5 of Hearts, 6 of Hearts, 7 of Hearts, 8 of Hearts, 9 of Hearts, 10 of Hearts, J of Hearts, Q of Hearts, K of Hearts, A of Hearts, 2 of Spades, 3 of Spades, 4 of Spades, 5 of Spades, 6 of Spades, 7 of Spades, 8 of Spades, 9 of Spades, 10 of Spades, J of Spades, Q of Spades, K of Spades, A of Spades, 2 of Clubs, 3 of Clubs, 4 of Clubs, 5 of Clubs, 6 of Clubs, 7 of Clubs, 8 of Clubs, 9 of Clubs, 10 of Clubs, J of Clubs, Q of Clubs, K of Clubs, A of Clubs, 2 of Diamonds, 3 of Diamonds, 4 of Diamonds, 5 of Diamonds, 6 of Diamonds, 7 of Diamonds, 8 of Diamonds, 9 of Diamonds, 10 of Diamonds, J of Diamonds, Q of Diamonds, K of Diamonds, A of Diamonds]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>When the <code>print</code> function is asked to print an object, that output is text. So, if the object is not itself text, <code>print</code> needs some text representation of that object.</p>
<p>You can either do that explicitly – for example, by some explicit function call to get a text string – or implicitly, with the magic methods for text representation.</p>
<p>An example of the explicit option:</p>
<pre class="lang-python prettyprint-override"><code>for item in collection:
    text = "The {0.denominator} of {0.suit}".format(item)
    print("{0}\n".format(text))
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">Python documentation for text formatting</a>.</p>
<p>An example of defining string-representation methods for a class:</p>
<pre class="lang-python prettyprint-override"><code>class Card:

    ...

    def __str__(self):
        text = "The {0.denominator} of {0.suit}".format(self)
        return text

    def __repr__(self):
        text = "&lt;Card: {0.denominator} of {0.suit}&gt;".format(self)
        return text

for item in collection:
    print(item)
</code></pre>
<p>See the Python documentation for the magic <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><code>__str__</code></a> and <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer"><code>__repr__</code></a> text-representation methods.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try using a <code>namedtuple</code>, which has a repr for humans:</p>
<pre><code>import collections as ct


suits = "♠ ♣ ♥ ♦".split()
ranks = "2 3 4 5 6 7 8 9 10 J Q K A".split()

Card = ct.namedtuple("Card", "suit rank")
deck = [Card(suit, rank) for suit in suits for rank in ranks]

print(deck)
# [Card(suit='♠', rank='2'), Card(suit='♠', rank='3'), , ...]
</code></pre>
</div>
<span class="comment-copy">That's the default string representation of an object.  To override that functionality, define your own <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><code>__str__</code></a> method of <code>Card</code> objects.</span>
