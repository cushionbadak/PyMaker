<div class="post-text" itemprop="text">
<p>I am computing the TF-IDF but for IDF part I faced some errors. Would you please guide me? What is the error</p>
<blockquote>
<p>TypeError: get expected at least 1 arguments, got 0</p>
</blockquote>
<pre><code>def computeIDF(docList):
    import math
    idfDict={}
    idfDict=dict.fromkeys(docList[0].get(),0)
    for doc in docList:
        for word, val in doc.items():
            if val &gt; 0:
                idfDict[word]+=1
    for word, val in idfDict.items():
        idfDict[word]=math.log(3 / float(val))
    return idfDict

idfs1=computeIDF([DictA1])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 4, in computeIDF
TypeError: get expected at least 1 arguments, got 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you can see by the traceback, the problem is in the line 4, which is</p>
<pre><code>idfDict=dict.fromkeys(docList[0].get(),0)
</code></pre>
<p>Your <code>docList</code> variable is of type <code>dict</code>, and in <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer" title="dict.get documentation">documentation</a> we see:</p>
<blockquote>
<p>get(key[, default])  </p>
</blockquote>
<p>The method expects you to specify a <em>key</em> to get. Actually, it's hard to suggest any default key because dictionaries don't have ordering.<br/>
You are trying to get a dictionary with similar keys as <code>docList[0]</code> which is the first document, but you don't need to. A common way to add a key <code>new_key</code> to a python dict would be just <code>dict[new_key] = value</code>:</p>
<pre><code>&gt;&gt;&gt; d = dict()
&gt;&gt;&gt; d['foo'] = 0
&gt;&gt;&gt; d
{'foo': 0}
</code></pre>
<p>But when you attempt to <em>increase</em> unexisting key, you get a <code>KeyError</code>. To avoid this, you should use <code>dict.get(new_key, 0)</code> to get 0 when there is no key yet.</p>
<pre><code>&gt;&gt;&gt; d['bar'] += 1
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
KeyError: 'bar'
&gt;&gt;&gt; d['bar'] = d.get('bar', 0) + 1
&gt;&gt;&gt; d
{'foo': 0, 'bar': 1}
</code></pre>
<p>Another option is to catch a <code>KeyError</code> when you trying to increase the key.</p>
<p>So, the elegant solution would be to add</p>
<pre><code>idfDict[word] = idfDict.get(word, 0) + 1
</code></pre>
<p>in the appropriate place and get rid of initialization line (line 4).</p>
<p>After I answered your question, I should mention some code style issues:</p>
<ul>
<li>try to switch to <code>snake_case</code>, if you use python frequently: <code>doc_list</code>;</li>
<li>separate binary operators (e.g. <code>+</code>, <code>=</code>, ...) by spaces;</li>
<li>put a space after comma: <code>d.get('foo',‚ê£0)</code>;</li>
<li>use <code>dict()</code> instead of <code>{}</code>: some people could have thought it's a set</li>
</ul>
<p>Your code will become more readable by python community if you follow that rules. See <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer" title="Python codestyle guide (PEP8)">PEP8</a> if you are interested in other issues.</p>
<p>Cheers! </p>
</div>
<div class="post-text" itemprop="text">
<p>When you're using the method get from dictionary, you have to pass some argument( the index , or key value. ).</p>
<pre><code>idfDict=dict.fromkeys(docList[0].get(),0)</code></pre>
<p>Probably you meant to write without the get maybe? Without the structure of docList dictionary we can't help.</p>
<pre><code>idfDict=dict.fromkeys(docList[0],0)</code></pre>
</div>
<span class="comment-copy">Thank you so much</span>
<span class="comment-copy">@RezaCivil I appreciate. By the way, could you accept the answer if it answers the question clear enough?</span>
<span class="comment-copy">thank you so much sir.</span>
