<div class="post-text" itemprop="text">
<p>I want a list containing Amharic alphabet from utf-8. The character ranges are from U+1200 to U+1399. I am using windows 8. I encountered <code>SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-5: truncated \UXXXXXXXX escape</code>. </p>
<p>I tried this:
<code>[print(c) for c in u'U1399']</code></p>
<p>How can i list the characters?</p>
</div>
<div class="post-text" itemprop="text">
<p>To print the characters from U-1200 to U-1399, I would use a <code>for</code> loop with an <code>int</code> control variable. It's easy enough to convert numbers to characters using <code>chr()</code>.</p>
<p>The integer value 0x1200 (i.e. 1200 in hexadecimal) can be converted to the Unicode codepoint U-1200 like so: <code>chr(0x1200) == '\u1200'</code>.</p>
<p>Similarly for 0x1201, 0x1202, ... 0x1399.</p>
<p>Note that we use <code>.isprintable()</code> to filter out code some of the useless entries.</p>
<pre><code>print(' '.join(chr(x) for x in range(0x1200, 0x139A) if chr(x).isprintable()))
</code></pre>
<p>or</p>
<pre><code>for x in range(0x1200, 0x139A):
    if chr(x).isprintable():
        print(hex(x), chr(x))
</code></pre>
<p><sub>Note that the code samples require Python3.</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>Your posted code doesn't produce any errors at all:</p>
<pre><code>&gt;&gt;&gt; [print(c) for c in u'U1399']
U
1
3
9
9
[None, None, None, None, None]
</code></pre>
<p>It also doesn't have any non-ASCII characters in it.</p>
<p>You probably wanted to use a Unicode backslash escape. And your problem is probably more like this:</p>
<pre><code>&gt;&gt;&gt; u'\U1399'
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-5: truncated \UXXXXXXXX escape
</code></pre>
<p>The reason is that—as the error message implies—a <code>\U</code> escape requires 8 hex digits, and you've only provided 4. So:</p>
<pre><code>&gt;&gt;&gt; u'\U00001399'
'᎙'
</code></pre>
<p>But there's a different escape, sequence <code>\u</code> (notice the lowercase <code>u</code>), which takes only 4 digits:</p>
<pre><code>&gt;&gt;&gt; u'\u1399'
'᎙'
</code></pre>
<p>If you're using Python 2.7, and possibly even with Python 3 on Windows, you may not see that nice output, but instead something with backslash escapes in it. But if you <code>print</code> that string, you will see the right character.</p>
<p>The full details for <code>\U</code> and <code>\u</code> escapes (and other escapes) are documented in <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">String and Bytes literals</a> (make sure to switch to the Python version you're actually using, because the details can be different, especially between 2.x and 3.x), but usually you don't need to know much more than explained above.</p>
</div>
<span class="comment-copy">What you've pasted here is a completely different syntax error than the one you're asking about—there's an unclosed <code>'</code>, and there are no Unicode escapes anywhere.</span>
<span class="comment-copy">As a guess, you're confusing <code>\u</code> and <code>\U</code>. The first one takes 4 hex digits, the second one takes 8 hex digits. So you can use <code>\u1200</code> or <code>\U00001200</code>, but <code>\U1200</code> will try to treat the next 4 characters as 4 more digits, which will be an error.</span>
<span class="comment-copy">Your edited version still doesn't have any Unicode escape sequences in it, and now doesn't produce any errors at all.</span>
<span class="comment-copy">As a side note, using a list comprehension for side effects like printing, and ignoring the results, is very misleading and not idiomatic. Just use a <code>for</code> statement.</span>
<span class="comment-copy">Thanks, that solved it. Can you please explain what <code>0x1200</code> mean? I know it represents the unicode characters, but what do the numbers mean?I also prefer a list containing all characters as output, instead of print each separately.</span>
<span class="comment-copy">I added an explanation to the answer. I hope that it helped.</span>
<span class="comment-copy">It did, I appreciate it.</span>
