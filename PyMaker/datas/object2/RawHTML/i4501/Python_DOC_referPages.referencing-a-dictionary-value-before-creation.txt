<div class="post-text" itemprop="text">
<p>I want to create a dictionary where one value is dependent on a different value in the same dictionary.</p>
<p>The usual way to do this is something along the lines of:</p>
<pre><code>&gt;&gt;&gt; my_dict = {'quantity': 10}
&gt;&gt;&gt; my_dict.update({'total': my_dict['quantity'] * 20})
&gt;&gt;&gt; my_dict
{'quantity': 10, 'total': 200}
</code></pre>
<p>Is there a way to do this with one statement?
Here's what I thought might work, but didn't:</p>
<pre><code>&gt;&gt;&gt; my_dict = {'quantity': 10, 'total': my_dict['quantity'] * 20}
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'my_dict' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create your own dictionary:</p>
<pre><code>class MyDict(dict):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        if 'quantity' in self:
            self['total'] = self['quantity'] * 20
</code></pre>
<p>Then this will work as you want:</p>
<pre><code>&gt;&gt;&gt; d = MyDict(quantity=10)
&gt;&gt;&gt; d
{'quantity': 10, 'total': 200}
</code></pre>
<p>Of course, anyone will be able to change <code>total</code> to whatever they want, independently of <code>quantity</code>. You could override <code>update</code> and <code>__setitem__</code> to prevent direct assignments of <code>total</code> (and automatically update it when <code>quantity</code> is changed), or you may want to look into <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer"><code>property</code></a>.</p>
<hr/>
<p>If you want to pass the function to calculate <code>total</code> when you create the dictionary, as in your example, you can have a parameter for that:</p>
<pre><code>class MyDict(dict):
    def __init__(self, *args, **kwargs):
        self.total_function = kwargs.pop('total_function', lambda x: x)
        super().__init__(*args, **kwargs)
        if 'quantity' in self:
            self['total'] = self.total_function(self['quantity'])

&gt;&gt;&gt; d = MyDict(quantity=10)
&gt;&gt;&gt; d
{'quantity': 10, 'total': 10}
&gt;&gt;&gt; d = MyDict(quantity=10, total_function=lambda x: x * 20)
&gt;&gt;&gt; d
{'quantity': 10, 'total': 200}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It works if you have/save the value in a variable beforehand and use that:</p>
<pre><code>n = 10
d = {'quantity': n, 'total': n * 20}
</code></pre>
</div>
<span class="comment-copy">Not possible...</span>
<span class="comment-copy">Since you know the value <code>10</code> at creation time… <code>'total': 10 * 20</code>…!?</span>
<span class="comment-copy">@deceze I wanted to use a simple example for the question, obviously in my actual code both the dictionary and the used method are more complex (I calculate a hash value based on a nested dictionary).</span>
<span class="comment-copy">Thanks for this answer, this could work well if I had to create multiple of these dictionaries.</span>
<span class="comment-copy">Presumably the value is in a variable anyway; if <code>10</code> was hardcoded the entire question would be pretty pointless…</span>
<span class="comment-copy">@deceze True, which is why I modified "save" to "have/save"</span>
<span class="comment-copy">Okay, so basically you are saying the answer to the question is "no"? I know what variables are, this wasn't the question.</span>
<span class="comment-copy">@martonbognar Obviously it is not possible with the exact example you posted (otherwise it would have worked without raising a <code>NameError</code>). This is IMO the easiest way to get it to work. If you really don't know the values before the dictionary comprehension, you will have to do it as a second step afterwards.</span>
