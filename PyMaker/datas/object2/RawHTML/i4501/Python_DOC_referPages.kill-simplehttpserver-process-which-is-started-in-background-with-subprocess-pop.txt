<div class="post-text" itemprop="text">
<p>I am trying to kill <code>SimpleHTTPServer</code> in my script.
Manually the command is working fine.</p>
<pre><code>Starting SimpleHTTPServer in background:
-bash-4.2$ python -m SimpleHTTPServer 8080 &amp;
[1] 26345

Verifying SimpleHTTPServer process:
-bash-4.2$ ps -ef | grep SimpleHTTPServer
x  26345 20169  0 17:44 pts/21   00:00:00 python -m SimpleHTTPServer 8080

Killing SimpleHTTPServer:
-bash-4.2$ kill -9 `ps -ef | grep SimpleHTTPServer | grep 8080 | awk '{print $2}'`

Verifying SimpleHTTPServer is killed or not:
-bash-4.2$ ps -ef | grep SimpleHTTPServer
x  26356 20169  0 17:45 pts/21   00:00:00 grep --color=auto SimpleHTTPServer
</code></pre>
<p>Same thing in script is not working. I am using <code>subprocess.Popen</code>.</p>
<pre><code>subprocess.Popen(["kill", "-9", "`ps -ef | grep SimpleHTTPServer | grep 8080 | awk '{print $2}'`"])
(Pdb++) kill: cannot find process "`ps -ef | grep SimpleHTTPServer | grep 8080 | awk '{print $2}'`"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to use a shell backtick, around a shell pipeline, in that <code>kill</code> command. But you're trying to do it without <code>shell=True</code>. You can't do that.</p>
<p>You can build a <code>sh</code> command line and run that with <code>shell=True</code>, but that's usually a bad idea.</p>
<p>The <code>subprocess</code>  docs on <a href="https://docs.python.org/3/library/subprocess.html#replacing-older-functions-with-the-subprocess-module" rel="nofollow noreferrer">Replacing Older Functions with the <code>subprocess</code> Module</a> show how you can do the same things in Python that you were using the shell for. That's a better idea, but a bit of work.</p>
<p>But the simplest thing to do is just not call any of this stuff.</p>
<ul>
<li>You don't need the <code>ps|grep|grep|awk</code> to find the PID of the process, because you <code>Popen</code>ed the process, so it's just <code>proc.pid</code>.</li>
<li>And you don't need the <code>kill</code> either, because you still have that <code>Popen</code> object around, so you can just call <code>kill</code>, <code>terminate</code>, or <code>send_signal</code> on it.</li>
</ul>
</div>
<span class="comment-copy">I want to kill <code>SimpleHTTPServer</code> which was started earlier, not the one which I start after killing. I want it to be alive till the next script run.</span>
<span class="comment-copy">@npatel OK, then do either of the other two versions I explained first.</span>
