<div class="post-text" itemprop="text">
<p>I have to check if <code>foo</code> is a attribute of <code>myclass</code>.</p>
<p>Right now I do</p>
<pre><code>def myclass():
    try:
        self.foo
    except AttributeError:
        self.foo = 'default'
</code></pre>
<p>while I think I should be doing</p>
<pre><code>if not hasattr(self,'foo'):
    self.foo = 'default'
</code></pre>
<p>Is there any difference between the two approaches, and which one should be preferred?</p>
<p>I am looking for the following criteria:</p>
<ul>
<li>Consistency with multiple inheritance</li>
<li>Portability across python versions </li>
<li>Limited overhead</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Both of those approaches are functionally equivalent.</p>
<p>From <a href="https://docs.python.org/3/library/functions.html#hasattr" rel="nofollow noreferrer">the <code>hasattr</code> docs</a>:</p>
<blockquote>
<p><strong>hasattr(object, name)</strong></p>
<p>The arguments are an object and a string. The result is True if the string is the name of one of the objectâ€™s attributes, False if
  not. <strong>(This is implemented by calling getattr(object, name) and seeing
  whether it raises an AttributeError or not.)</strong></p>
</blockquote>
<p>And <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">the <code>getattr</code> docs</a> state the following:</p>
<blockquote>
<p><code>getattr(x, 'foobar')</code> is equivalent to <code>x.foobar</code></p>
</blockquote>
<hr/>
<p>Regarding speed, my tests show that <code>hasattr</code> is a little faster. The results with 1 million iterations were:</p>
<pre><code>hasattr: 0.6325701880014094 seconds
try:     0.8206841319988598 seconds
</code></pre>
<p>Unless you're writing highly optimized code, there's no need to worry about such a small difference. There's also no need to worry about compatibility with python versions; attribute access and <code>hasattr</code> are available in every version of python.</p>
<hr/>
<p>In the end, it comes down to preference. Choose whichever you find more readable.</p>
</div>
