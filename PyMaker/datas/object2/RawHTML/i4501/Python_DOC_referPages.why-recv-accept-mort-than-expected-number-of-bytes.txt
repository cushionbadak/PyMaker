<div class="post-text" itemprop="text">
<p>When i call recv to receive exactly 7 bytes i recv more than bytes expected ?</p>
<p>I don't know how bufsize parameter work.</p>
<pre><code>for i in range(data2[1]):
    try:
        tuple = envois.recv(7)
        time.sleep(0.1)
    except Exception as e:
        print(e)
    if (tuple[-2:] != myport):
        tuples.append(tuple)

print("tuples : {x}".format(x = tuples))
last_msg = envois.recv(3)
envois.close()
return (last_msg,tuples)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming <code>envois</code> is a socket, you will not receive more than the amount you specify. From the <a href="https://docs.python.org/3/library/socket.html#socket.socket.recv" rel="nofollow noreferrer">docs</a></p>
<blockquote>
<p><code>socket.recv(bufsize[, flags])</code></p>
<p>Receive data from the socket. The return value is a bytes object representing the data received. The maximum amount of data to be received at once is specified by <em>bufsize</em>.</p>
</blockquote>
<p>You should be able to <code>assert len(tuple) &lt;= 7</code></p>
<p>But, don't name a variable <code>tuple</code>. You will hide the builtin.</p>
</div>
<span class="comment-copy">Where's the evidence that you <i>did</i> receive more than 7 bytes?</span>
<span class="comment-copy">Why are you calling a <code>bytes</code> object <code>tuple</code>? It's always a bad idea to hide the name of a built-in type like that, but this seems extra-misleading.</span>
