<div class="post-text" itemprop="text">
<p><br/>
I have data with four columns, that includes: <code>Id</code>, <code>CreationDate</code>, <code>Score</code> and <code>ViewCount</code>.<br/>
The <code>CreationDate</code> has a next format, for example: 2011-11-30 19:41:14.960.
I need to groupby the years of <code>CreationDate</code>, count them, summing <code>Score</code> and <code>ViewCount</code> also, and to add to additional columns.
I want to use with pandas lib.<br/>
<br/>
Thanks!
<br/><br/></p>
<p>Before changing - sample example :<br/></p>
<pre><code>     Id   CreationDate              Score   ViewCount
0    1    2011-11-30 19:15:54.070   25      1526
1    2    2011-11-30 19:41:14.960   20      601
2    3    2012-11-30 19:42:45.470   36      1015
3    4    2018-11-30 19:44:55.593   8       1941
4    5    2011-11-30 19:53:23.387   11      5053
5    6    2018-11-30 20:04:43.757   25      5123
6    7    2011-11-30 20:08:23.267   53      8945
</code></pre>
<p>After changing - present data like this:</p>
<pre><code>     Id   CreationDate              Score   ViewCount
0    1    2011                      109     16125
2    3    2012                      36      1015
3    4    2018                      33      7064                            
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can convert column to years by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.dt.year.html" rel="nofollow noreferrer"><code>Series.dt.year</code></a> and aggregate by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.agg.html" rel="nofollow noreferrer"><code>GroupBy.agg</code></a> with dictionary for columns with aggregation function, last add <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.reindex.html" rel="nofollow noreferrer"><code>DataFrame.reindex</code></a> if necessary same order of columns like in original <code>DataFrame</code>:</p>
<pre><code>#if necessary convert to datetimes
df['CreationDate'] = pd.to_datetime(df['CreationDate'])

df1 = (df.groupby(df['CreationDate'].dt.year)
         .agg({'Id':'first', 'Score':'sum', 'ViewCount':'sum'})
         .reset_index()
         .reindex(columns=df.columns)
       )

print (df1)
   Id  CreationDate  Score  ViewCount
0   1          2011    109      16125
1   3          2012     36       1015
2   4          2018     33       7064
</code></pre>
</div>
<span class="comment-copy">Thank you , it works clearly</span>
