<div class="post-text" itemprop="text">
<p>I have a column in a dataframe that is</p>
<pre><code>UC      WR
V001    A, B, C, nan, A, C, D
C001    nan, C, D, A, nan, A
C002    C, B, B, A, A, A
C003    A, C, A, C, B, nan
</code></pre>
<p>I'm not sure what I'm doing wrong, but I'm not able to get rid of the <code>nan</code>s. From this column, I want to have a different column, or a dictionary that gives me the frequency count of the different values in <code>WR</code>. </p>
<pre><code>UC     WR Count
V001  {A: 2, B:1, C:2, D:1}
C001  {A:2, C:1, D:1}
C002  {A:3, B:2, C:1}
C003  {A:2, B:1, C:2}
</code></pre>
<p>or a similar dictionary. Thanks! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Just do not make the <code>dict</code> into the cell in <code>pandas</code>, which will make a lots of build-in <code>pandas</code>' nice function not work any more </p>
<pre><code>df.set_index('UC').WR.\
 str.split(', ',expand=True).\
    stack().str.get_dummies().sum(level=0).drop('nan',1)
      A  B  C  D
UC              
V001  2  1  2  1
C001  2  0  1  1
C002  3  2  1  0
C003  2  1  2  0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At first ignoring the <code>nan</code> entries, my approach would be:</p>
<pre><code>df['WR Count'] = df.WR.str.replace(' ', '').str.split(',').apply(Counter)

#                          WR                                    WR Count
# UC                                                                                                        
# V001  A, B, C, nan, A, C, D  {'A': 2, 'B': 1, 'C': 2, 'nan': 1, 'D': 1}                               
# C001   nan, C, D, A, nan, A          {'nan': 2, 'C': 1, 'D': 1, 'A': 2}                               
# C002       C, B, B, A, A, A                    {'C': 1, 'B': 2, 'A': 3}                           
# C003     A, C, A, C, B, nan          {'A': 2, 'C': 2, 'B': 1, 'nan': 1} 
</code></pre>
<p>Note that if you are sure that the separator is <em>always</em> <code>', '</code>, then you can hardcode it, which leads to a shorter command:</p>
<pre><code>df['WR Count'] = df.WR.str.split(', ').apply(Counter)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To get the values as dictionaries you may also try:</p>
<pre><code>df['WR Count'] = df['WR'].apply(lambda x: dict(Counter(x.split(', ')))
</code></pre>
</div>
<span class="comment-copy">I think you could directly split by <code>', '</code> with a comma and a space, instead of first replacing the space and then split on the comma</span>
<span class="comment-copy">You are right. I kind of automatically made it this way because of so many datasets I saw here that have arbitrary numbers of spaces inbetween... But normally you should be able to rely on some automated pattern, so I'll edit by adding this, thanks.</span>
