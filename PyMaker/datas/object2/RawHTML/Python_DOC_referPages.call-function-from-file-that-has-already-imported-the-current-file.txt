<div class="post-text" itemprop="text">
<p>If I have the files frame.py and bindings.py both with classes Frame and Bindings respectively inside of them, I import the bindings.py file into frame.py by using <code>from bindings import Bindings</code> but how do I go about importing the frame.py file into my bindings.py file. If I use <code>import frame</code> or <code>from frame import Frame</code> I get the error <code>ImportError: cannot import name 'Bindings' from 'bindings'</code>. Is there any way around this without restructuring my code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using <code>from bindings import Bindings</code> try <code>import bindings</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is what we call circular import. Let's look at the example. We have the two files: </p>
<p><code>frame.py</code></p>
<pre><code>from bindings import Bindings

class Frame:
    pass
</code></pre>
<p><code>bindings.py</code></p>
<pre><code>class Bindings:
    pass

print("class Binding here")

from Frame import Frame
</code></pre>
<p>First thing you should know is, whenever we import a file, the code in the file we're importing is also executed at the same time. So in my example, when you run the <code>frame.py</code> file, it first executes the <code>bindings.py</code> file, where it will also find what it's looking for (i.e. class <code>Bindings</code>). And while the <code>bindings.py</code> files is being executed, the <code>from Frame import Frame</code> line will then execute the <code>frame.py</code> file, getting what it wants (i.e. class <code>Frame</code>).</p>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/a/11698542/8146707">Two Python modules require each other's contents - can that work?</a></span>
