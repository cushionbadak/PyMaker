<div class="post-text" itemprop="text">
<p>I'm a beginner coding. I'm struggling to rearrange double dictionary. For instance,</p>
<pre><code>dict = {
'student_A': {
    'name': 'Hiro',
    'age': 22,
},
'student_B': {
    'name': 'Alex',
    'age': 24,
    },
'student_C': {
    'name': 'Jon',
    'age': 23,
    }
}
</code></pre>
<p>In this code, how can I line up by order of age like this ? :</p>
<pre><code>[
 {
    'name': 'Alex'
 },
 {   
    'name': 'Jon'
 },
 {
    'name': 'Hiro'
 }
]
</code></pre>
<p>It would be greatly appreciated if you could explain the details !!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it like this:</p>
<pre><code>value_list = list(dict.values())
value_list.sort(key=lambda value: value['age'])
</code></pre>
<p>This will make <code>value_list</code> a list of the values in the dictionary, sorted by age. You do this by getting a <code>dict_values</code> object by calling <code>dict.values()</code>. This object can then be converted into a list, which can then be sorted by calling the <code>list.sort()</code> method. The <code>key</code> parameter is a function which will return the age for each dictionary. </p>
<p>In case you haven't seen the <code>lambda name: statement</code> syntax, there's a reference <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks (from the output that you have given) like you actually want the name in reverse order of age? And you also want just the name in object which is listed - so you filter out the age part of the original object.</p>
<p>In this case you probably want to use a list comprehension which is an immensely useful and pythonic way to do filter and map type operations on a list. To find out more about list comprehension please check the official <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">documentation</a>.</p>
<p>An example of how to do this:</p>
<pre><code>&gt;&gt;&gt; my_ordered_list = [ {'name': student['name']} for student in sorted(dict.values(), key=lambda x:-x['age']) ]

&gt;&gt;&gt; my_ordered_list
[{'name': 'Alex'}, {'name': 'Jon'}, {'name': 'Hiro'}]
</code></pre>
</div>
<span class="comment-copy"><code>list(sorted(dict.values(), key=lambda x:x['age']))</code>. On a side note, though, don't name your variables the same as built-in functions. It masks the built-ins.</span>
<span class="comment-copy">@zondo Ouch, vision misinformed brain, thanks for notifying.</span>
<span class="comment-copy">Perhaps the reason you're struggling is you're trying to put your results back into a dictionary? Dictionaries can't be sorted by definition. If you're actually looking for a list, as your syntax suggests, you'll be OK.</span>
<span class="comment-copy">I want to return it to list from dictionary. Is this possible ??</span>
<span class="comment-copy">Thank you for your kind answer !! I could make list from dictionary following your lecture, however it was not changed order.</span>
<span class="comment-copy">Thank you for answer and helpful link. I'll try to understand and make it.</span>
