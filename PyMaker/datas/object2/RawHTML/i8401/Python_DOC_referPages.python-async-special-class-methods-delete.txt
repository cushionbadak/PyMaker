<div class="post-text" itemprop="text">
<p>Strait to the point:</p>
<p>How can I <code>async def</code> specials class methods like <code>__delete__</code> in python ?</p>
<p>Why I need this:</p>
<p>In order to implement a nice caching system shared between multiple process, I want to retrieve the data from the database once and store them in a cache, modify the data in the cache and when the data is not used anymore: update the database. My problem is, in order to know which instance is the last one, I want to use the __delete__ special method asyncly</p>
<pre><code>def asyncinit(cls):
    """Credits: http://stackoverflow.com/a/33140788/4241798"""
    __new__ = cls.__new__

    async def init(obj, *arg, **kwarg):
        await obj.__init__(*arg, **kwarg)
        return obj

    def new(cls, *arg, **kwarg):
        obj = __new__(cls, *arg, **kwarg)
        coro = init(obj, *arg, **kwarg)
        return coro

    cls.__new__ = new
    return cls

@asyncinit
class AsyncUser:
    async def __init__(self, id: int):
        self.id = id
        with await cachepool as cache:
            cache.hincr(f"users:{id}", "refcnt")

    async def __delete__(self):
        """Won't work"""
        with await cachepool as cache:
            refcnt = await cache.hincrby(f"users:{self.id}", "refcnt", -1)
            if refcnt == 0:
                # update database

    # rest of the class...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is impossible to async def python's builint methods but it is possible to schedule a coroutine call outside the loop using <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.create_future" rel="nofollow noreferrer"><code>loop.create_future</code></a> or <a href="https://docs.python.org/3/library/asyncio-task.html?highlight=ensure_future#asyncio.ensure_future" rel="nofollow noreferrer"><code>asyncio.ensure_future</code></a></p>
<pre><code>class asyncdel:
    def __delete__(self):
        asyncio.ensure_future(free(self.__dict__.copy()))

async def free(data):
    pass
</code></pre>
</div>
<span class="comment-copy">Duplicate: see this for an answer. <a href="http://stackoverflow.com/a/33134213/1943571">stackoverflow.com/a/33134213/1943571</a></span>
<span class="comment-copy">I come from there, this answer don't apply for the method <code>__delete__</code></span>
<span class="comment-copy">It says right there in the link that async does not work on non-async magic methods, <i>including</i> <code>__delete__</code>.</span>
