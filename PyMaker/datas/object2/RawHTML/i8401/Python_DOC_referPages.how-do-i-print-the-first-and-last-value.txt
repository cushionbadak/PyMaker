<div class="post-text" itemprop="text">
<p>The below part code prints all the host IP Address that lies in the Subnet, I want to modify the code so that it prints only the starting address and the last address of this list</p>
<p>How do I use an array here to print the first and last value?</p>
<pre><code>import ipaddress
print('enter subnet')  # in CIDR Format
x = input()
IP= ipaddress.ip_network(x, strict = False)
for y in IP.hosts():
 print(y)
</code></pre>
<p>Current Output</p>
<pre><code>enter subnet
192.0.0.0/29
192.0.0.1
192.0.0.2
192.0.0.3
192.0.0.4
192.0.0.5
192.0.0.6
</code></pre>
<p>Desired output </p>
<pre><code>HostMin:   192.0.0.1  
HostMax:   192.0.0.6
</code></pre>
<p>=========================================</p>
<h1>UPDATE:</h1>
<p>After using the list i was able to print the first and last values</p>
<pre><code>however this takes quite longer to compute whenever i give a large
subnet

like 192.0.0.0/8 takes longer to print the first and last value, 

for: IPV6 address calculations it hangs forever, 
for: example: the  IPV6 address is 2001:db8::1/96 

this list will have 4294967294 elements since this IPV6 subnet has
these many IP address and it hangs forever to print the first and
last element of the list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list[0]</code> and <code>list[-1]</code> gets you the first and last element respectively</p>
<pre><code>import ipaddress
print('enter subnet')  # in CIDR Format
x = input()
IP= ipaddress.ip_network(x, strict = False)
k = list(IP.hosts())
print("HostMin: ",k[0])
print("HostMax: ",k[-1])
</code></pre>
<p>Updated Answer for getting first and last IP without generating the whole IP range</p>
<pre><code>import ipaddress
def hosts(IPTYPE):
    """Custom function derived from IPv6Network/IPv4Network.hosts to get only first and last host

    """
    network = int(IPTYPE.network_address)
    broadcast = int(IPTYPE.broadcast_address)
    return IPTYPE._address_class(network+1),IPTYPE._address_class(broadcast)

print('enter subnet')  # in CIDR Format
x = input()
IP= ipaddress.ip_network(x, strict = False)
m = hosts(IP)
print("HostMin: ",m[0])
print("HostMax: ",m[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>replace <code>for y in IP.hosts():</code> by <code>y = list(IP.hosts())</code> and then you can do</p>
<pre><code>print y[0]
print y[-1]
</code></pre>
<p>You should read the doc of <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer">hosts()</a> function "Returns an iterator over the usable hosts in the network"</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't use an array here. Use a list!</p>
<pre><code>first_item = list[0]
last_item = list[-1]
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/930397/getting-the-last-element-of-a-list-in-python" title="getting the last element of a list in python">stackoverflow.com/questions/930397/â€¦</a></span>
<span class="comment-copy">Thanks this worked</span>
<span class="comment-copy">however this takes quite longer to compute whenever i give a large subnet, like 192.0.0.0/8 takes longer to print the first and last value,                               and for IPV6 address calculations it hangs forever, for example if i enter the IPV6 address as 2001:db8::1/96 it has 4294967294 elements and it hangs to print the first and last element of the list</span>
<span class="comment-copy">I have updated my answer to include a custom method derived from ipaddress module which gives only the first and last IP instantaneously.</span>
<span class="comment-copy">this takes quite longer to compute whenever i give a large subnet, like 192.0.0.0/8 takes longer to print the first and last value, and for IPV6 address calculations it hangs forever, for example if i enter the IPV6 address as 2001:db8::1/96 it has 4294967294 elements and it hangs to print the first and last element of the list</span>
<span class="comment-copy">Thanks this worked</span>
