<div class="post-text" itemprop="text">
<p>I am trying to run my python file that first reads a string in Chinese language and print it.</p>
<p>This is my Dockerfile</p>
<pre><code>FROM python:2.7-onbuild
ENV LANG en_US.UTF-8
ADD . /code
WORKDIR /code
RUN pip install -r requirements.txt
CMD ["python", "app.py"]
</code></pre>
<p>This is my python file:</p>
<pre><code>    # -*- coding: utf-8 -*-
    import jieba
    s = "我来到北京清华大学"
    s = s.decode('utf-8')
    print type(s), s
</code></pre>
<p>I then run :</p>
<p><code>docker build -t python-example .</code></p>
<p><code>docker run python-example</code></p>
<p>Error i got: <code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-8: ordinal not in range(128)</code></p>
<p>When i run it locally, it works fine. </p>
</div>
<div class="post-text" itemprop="text">
<p>I ran into the same issue while I was deploying a Django application with supervisor and gunicorn. </p>
<p>What fixed it was to add the following line to my supervisor config file:</p>
<pre><code>environment=LANG="es_ES.utf8", LC_ALL="es_ES.UTF-8", LC_LANG="es_ES.UTF-8"
</code></pre>
<p>For your case make sure that the chinese locale that you want to print is available and installed in your docker container. This <a href="http://www.roadsi.de/locales-on-ubuntu-in-docker.html" rel="noreferrer">blog</a> describes how to do it: 
example dockerfile (use the chinese locale instead of en_CA.UTF-8):</p>
<pre><code>FROM ubuntu:15.10
MAINTAINER Mobify &lt;ops@mobify.com&gt;

RUN apt-get -qq update &amp;&amp; \
    apt-get -q -y upgrade &amp;&amp; \
    apt-get install -y sudo curl wget locales &amp;&amp; \
    rm -rf /var/lib/apt/lists/*

# Ensure that we always use UTF-8 and with Canadian English locale
RUN locale-gen en_CA.UTF-8

COPY ./default_locale /etc/default/locale
RUN chmod 0755 /etc/default/locale

ENV LC_ALL=en_CA.UTF-8
ENV LANG=en_CA.UTF-8
ENV LANGUAGE=en_CA.UTF-8
</code></pre>
<p>hopefully this leads you into the right direction.</p>
</div>
<div class="post-text" itemprop="text">
<h2>Short version</h2>
<p>Put this in your <code>Dockerfile</code>:</p>
<pre><code>ENV PYTHONIOENCODING=utf-8
</code></pre>
<p>or as mentioned in the comments above pass it on the command line:</p>
<pre><code>docker run -e PYTHONIOENCODING=utf-8 my-python-image some-command
</code></pre>
<h2>Long version:</h2>
<p>When you start the Python interpreter, Python has to set up <code>stdout</code> in order to send output to your terminal. On your modern O/S, your terminal probably reports that it supports UTF-8 or some other advanced encoding. You can see what encoding is used by running this command:</p>
<pre><code>$ python -c 'import sys; print(sys.stdout.encoding)'
UTF-8
</code></pre>
<p>When you run a docker container, the environment variables Python would expect to use a more advanced encoding are not present, and so Python will fall back to a basic character set to ensure compatibility. You can verify this by running the same command in your container:</p>
<pre><code>$ docker run my-python-image python -c 'import sys; print(sys.stdout.encoding)'
ANSI_X3.4-1968
</code></pre>
<p>When we pass <code>PYTHONIOENCODING</code> we see the <code>sys.stdout.encoding</code> is set appropriately:</p>
<pre><code>$ docker run -e PYTHONIOENCODING=UTF-8 my-python-image python -c 'import sys; print(sys.stdout.encoding)'
UTF-8
</code></pre>
<p>Read about <code>PYTHONIOENCODING</code> in <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING" rel="noreferrer">the Python documentation</a>. <a href="https://stackoverflow.com/questions/44344458/why-does-locale-getpreferredencoding-return-ansi-x3-4-1968-instead-of-utf-8">This answer also goes into great detail about encoding/decoding and <code>stdout</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I add the below command in my docker file：</p>
<pre><code>RUN locale-gen en_US.UTF-8
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
</code></pre>
<p>then build/rebuild docker images, you'd better add this in the base image.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>RUN set -e \
  &amp;&amp; locale-gen en_CA en_CA.UTF-8 \
  &amp;&amp; update-locale LC_ALL=en_CA.UTF-8 LANG=en_CA.UTF-8
</code></pre>
</div>
<span class="comment-copy">This is for ubuntu, mine is for a python image though</span>
<span class="comment-copy">according to this github issue tracker: <a href="https://github.com/docker-library/python/issues/69" rel="nofollow noreferrer">github.com/docker-library/python/issues/69</a> you could also try this: docker run -e PYTHONIOENCODING=utf-8 does this work?</span>
<span class="comment-copy">Yea it worked!! thank you! the full code: <code>docker run -e PYTHONIOENCODING=utf-8 python-example</code></span>
