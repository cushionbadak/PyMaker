<div class="post-text" itemprop="text">
<p>I made a simple mistake in the following die roll function:</p>
<pre><code>import random

def rollDie():
    return random.choice(1,2,3,4,5,6)

print(rollDie())
</code></pre>
<p>I do know that I need to pass the sequence as a list or tuple, but I was more curious about the following error message.</p>
<pre><code>Traceback (most recent call last):
  File "Lecture 5.2 -- stochastic - die roll example.py", line 8, in &lt;module&gt;
    print(rollDie())
  File "Lecture 5.2 -- stochastic - die roll example.py", line 6, in rollDie
    return random.choice(1,2,3,4,5,6)
TypeError: choice() takes 2 positional arguments but 7 were given
</code></pre>
<p>The message says "choice() takes 2 positional arguments but 7 were given".  </p>
<p>But the documentation indicates only one argument (sequence).  <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">https://docs.python.org/3/library/random.html</a> </p>
<p>What is the second argument (or seventh in my case)?  Is this the seed (which I have not specified so is being initialised by the clock)?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>choice()</code> is a method on the hidden <code>Random()</code> instance the <code>random</code> module maintains. Because it is a method, it has 2 arguments: <code>self</code> and the iterable from which to make a choice.</p>
<p>From the <a href="https://docs.python.org/3/library/random.html" rel="noreferrer">module documentation</a>:</p>
<blockquote>
<p>The functions supplied by this module are actually bound methods of a hidden instance of the <code>random.Random</code> class. </p>
</blockquote>
<p>and the <a href="https://github.com/python/cpython/blob/v3.6.1/Lib/random.py#L252-L258" rel="noreferrer"><code>random</code> module source code</a>:</p>
<blockquote>
<pre><code>def choice(self, seq):
    """Choose a random element from a non-empty sequence."""
    try:
        i = self._randbelow(len(seq))
    except ValueError:
        raise IndexError('Cannot choose from an empty sequence') from None
    return seq[i]
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Thank you.  I need to think about this some more.  I have just learnt about classes where 'self' features prominently.  Is this the same concept?  That is, random.Random is a class and choice a function within this class or am I completely muddled? Alternatively, how and for what reason would anyone use the 'self' argument?</span>
<span class="comment-copy">@apotheosied: you are not muddled, that's exactly it. <code>class Random(...):</code> has <code>def choice(self, seq):</code> defined. When you then use <code>Random().choice(some_sequence)</code> (so on an <i>instance</i> of the class), Python automatically supplies the <code>self</code> argument (through a process called <i>binding</i>, see the <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow noreferrer">descriptor howto</a> if you want to go for a deep-dive).</span>
<span class="comment-copy">Fantastic, thank you!</span>
