<div class="post-text" itemprop="text">
<p>Although I passed <code>"%a %b  %d %H:%M:%S %Z %Y"</code> as the format string in <code>time.strptime()</code>, it is operating on <code>'%a %b %d %H:%M:%S %Y'</code> and therefore causing error. Any idea on what might be causing it?</p>
<p>The same thing runs perfectly in python console but not in the actual code.</p>
<pre><code>    Exception in thread Thread-7:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 754, in run
    self.__target(*self.__args, **self.__kwargs)
  File "proxy.py", line 137, in listenThread
    response = self.fetchRequest(raw_request, request)
  File "proxy.py", line 114, in fetchRequest
    if request['type'] == "GET" and self.is_cachable(request, response_headers):
  File "proxy.py", line 100, in is_cachable
    requestTime = time.mktime(time.strptime(self.request_log[request['url']][len(self.request_log[request['url']])-3]), "%a %b  %d %H:%M:%S %Z %Y")
  File "/usr/lib/python2.7/_strptime.py", line 478, in _strptime_time
    return _strptime(data_string, format)[0]
  File "/usr/lib/python2.7/_strptime.py", line 332, in _strptime
    (data_string, format))
ValueError: time data 'Mon Apr  10 22:52:38 IST 2017' does not match format '%a %b %d %H:%M:%S %Y'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The value for %Z comes from the <code>tzinfo</code> object attached to the <code>datetime</code> object, but there is no <code>datetime</code> object (and thus no <code>tzinfo</code> either) if you're using <code>strptime()</code> instead of <code>strftime()</code>.  Indeed, the only <code>tzinfo</code> objects which come with the standard Python library are the fixed-offset <a href="https://docs.python.org/3/library/datetime.html#timezone-objects" rel="nofollow noreferrer"><code>timezone</code></a> objects, and then only in Python 3.  The standard library does not have a canonical list of these, besides a standard UTC value; instead, you're expected to create them as needed, or use <a href="https://pypi.python.org/pypi/pytz" rel="nofollow noreferrer">pytz</a> instead.  As a result, <strong>the Python standard library has no mechanism for translating arbitrary three-letter codes into timezones</strong>.  It should be able to handle <code>'UTC'</code>, some synonyms, and perhaps your local time as returned by your system locale, but that's about it.</p>
<p>(Hint: For most people, pytz is the Right Thing to use.)</p>
<p>Three-letter codes are <a href="https://en.wikipedia.org/wiki/EST#Time" rel="nofollow noreferrer">not</a> <a href="https://en.wikipedia.org/wiki/CST#Time_zones" rel="nofollow noreferrer">globally</a> <a href="https://en.wikipedia.org/wiki/MST#Time_zones" rel="nofollow noreferrer">unique</a> anyway, so there is no "right" way to do what you're asking for.  You need to have something like an <a href="https://en.wikipedia.org/wiki/Tz_database" rel="nofollow noreferrer">Olson database</a> identifier (e.g. <code>America/New_York</code> is roughly synonymous with Eastern Standard/Daylight Time).</p>
</div>
<div class="post-text" itemprop="text">
<p>Actualy I just made a very silly mistake </p>
<pre><code>requestTime = time.mktime(time.strptime(self.request_log[request['url']][len(self.request_log[request['url']])-3]), "%a %b  %d %H:%M:%S %Z %Y")
</code></pre>
<p>the order of parenthesis is wrong in above, it should be like this <br/></p>
<pre><code>requestTime = time.mktime(time.strptime(self.request_log[request['url']][len(self.request_log[request['url']])-3], "%a %b  %d %H:%M:%S %Z %Y"))
</code></pre>
<p>I was actually passing only time string to time.strptime() leaving the format <br/>
Sorry for inconvinience caused  </p>
</div>
<span class="comment-copy">Please show the actual code that caused the problem.</span>
<span class="comment-copy">You got an extra space between "Apr" and "10".</span>
<span class="comment-copy">You must be running different code than you think you are. Python won't randomly use a different hard-coded string.</span>
<span class="comment-copy">The error shows it is using the format: '%a %b %d %H:%M:%S %Y' although you are passing the correct format. Please share your codes and sample data as well. Thanks.</span>
<span class="comment-copy">It could be that <code>%Z</code> is not implemented See this: <a href="http://stackoverflow.com/questions/13556260/c-c-strptime-does-not-parse-z-timezone-name" title="c c strptime does not parse z timezone name">stackoverflow.com/questions/13556260/…</a> and this: <a href="http://bugs.python.org/issue22377" rel="nofollow noreferrer">bugs.python.org/issue22377</a> and this: <a href="http://stackoverflow.com/questions/3305413/python-strptime-and-timezones" title="python strptime and timezones">stackoverflow.com/questions/3305413/…</a></span>
<span class="comment-copy">Even for <code>%Z</code> the traceback should show the format passed in. That's not the case here. The only conclusion I can come to is that the <i>server is running stale bytecode</i>. The source code is newer.</span>
<span class="comment-copy">@MartijnPieters: It would be nice if OP's source matched OP's bytecode, but that unfortunately will not solve OP's actual problem, which is that they are trying to do something impossible.</span>
<span class="comment-copy">Sure, but <i>that's what the error is about</i>. The actual format used does not contain <code>%Z</code>.</span>
<span class="comment-copy">@MartijnPieters: Python is <i>supposed</i> to figure out .pyc files automatically.  I'm marginally skeptical of your explanation.  I imagine the <code>%Z</code> got silently removed at some point in the standard library.</span>
<span class="comment-copy">Ah, this is <a href="http://bugs.python.org/issue22377" rel="nofollow noreferrer">bugs.python.org/issue22377</a>; UTC, GMT, and BST (the latter two listed in <code>time.tzname</code>) all work for me, but no tz info is actually returned. That's because glibc is punting on this big time.</span>
<span class="comment-copy">Ah, indeed, that's the <i>default</i> format..</span>
