<div class="post-text" itemprop="text">
<p>If I run the following code:</p>
<pre><code>a={}
a[input("key: ")] = input("value: ")
</code></pre>
<p>The interpreter is first prompting me a <code>value input</code> and then the <code>key input</code>.</p>
<p>What is the reason behind this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Usually the order of the inner expression is never guaranteed.  What happens in your case is that interpreter first finds out what needs to be put into the dictionary,  then it finds out where it should be put it. From interpreter's perspective this is more optimal order.  </p>
<p>Because something might happen during input('value') call, like an exception or you can simply terminate your program.  So why bother with finding out where to put that value until you actually have it.</p>
<p>In cases where you do care about order you should do the following:</p>
<pre><code>key = input('key')
a[key] =  input('value')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3.3/reference/expressions.html#evaluation-order" rel="noreferrer">docs</a>:</p>
<blockquote>
<p>Python evaluates expressions from left to right. Notice that while
  evaluating an assignment, the right-hand side is evaluated before the
  left-hand side.</p>
</blockquote>
</div>
<span class="comment-copy">From <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">Simple Statements</a> in the Python Docs: "An assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right."</span>
<span class="comment-copy">You can also take a look at: <a href="http://stackoverflow.com/questions/327311/how-are-pythons-built-in-dictionaries-implemented">How are Python's Built In Dictionaries Implemented</a></span>
