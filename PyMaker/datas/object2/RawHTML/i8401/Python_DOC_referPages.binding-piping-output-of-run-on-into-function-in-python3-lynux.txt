<div class="post-text" itemprop="text">
<p>I am trying to use output of external program run using the <strong>run</strong> function.
this program regularly throws a row of data which i need to use in mine script
I have found a <strong>subprocess</strong> library and used its <code>run()</code>/<code>check_output()</code><br/><br/>
<strong>Example:</strong><br/>
<code>def usual_process():
    # some code here
for i in subprocess.check_output(['foo','$$']):
    some_function(i)
</code></p>
<p>Now assuming that foo is already in a PATH variable and it outputs a string in semi-random periods.<br/>
I want the program to do its own things, and run <code>some_function(i)</code>every time foo sends new row to its output. </p>
<p>which boiles to two problems. piping the output into a for loop and running this as a background subprocess
Thank you</p>
<hr/>
<p>Update: I have managed to get the foo output onto some_function using <a href="https://stackoverflow.com/questions/17658512/how-to-pipe-input-to-python-line-by-line-from-linux-program">This</a>
<br/><br/></p>
<pre><code>with os.popen('foo') as foos_output:
    for line in foos_output:
        some_function(line)
</code></pre>
<p>According to <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">this</a> <em>os.popen</em> is to be deprecated, but I am yet to figure out how to pipe internal processes in python 
Now just need to figure out how to run this function in a background</p>
</div>
<div class="post-text" itemprop="text">
<p>SO, I have solved it.
First step was to start the external script:<br/>
<code>proc=Popen('./cisla.sh', stdout=PIPE, bufsize=1)</code></p>
<p>Next I have started a function that would read it and passed it a pipe<br/></p>
<pre><code>def foo(proc, **args):
       for i in proc.stdout:
         '''Do all I want to do with each'''

foo(proc).start()`</code></pre>
<p>Limitations are:
If your wish t catch scripts error you would have to pipe it in.<br/>
second is that it leaves a zombie if you kill parrent SO dont forget to kill child in signal-handling</p>
</div>
<span class="comment-copy">Do you mean <code>linux</code>? If so, which distro?</span>
<span class="comment-copy">While I am programing and testing om mine Gentoo,&lt;br/&gt; I am trying to limit distro-specific code to minimum and stick to Pyton3 if possible. The resulting code will be mostly targeting Raspbian at first but in a latter version android. Intention is prity much to be updating the variable based on <i>foo</i>'s output, while the program does other things</span>
