<div class="post-text" itemprop="text">
<p>I am supposed to print a random 5-digit number with no repeating digits, then ask the user for a three digit number. If the user's number contains three digits from the random number, print "correct". </p>
<p>I am using this code for the random number</p>
<pre><code>num = random.randint (0,99999)
print (num)
</code></pre>
<p>The problem is it will not always print a five digit number.</p>
<p>Also, I don't know how to match the user number with the random number.</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer">random sample</a> of the digits 0 to 9:</p>
<pre><code>''.join(random.sample('0123456789', 5))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can generate all the 5 digits ints with unique digits like so:</p>
<pre><code>tgt=set()
for i in range(1234,99999+1):
    s='{:05d}'.format(i)
    if len(set(s))==5:
        tgt.add(s)  
</code></pre>
<p>Then use <code>random.choose(tgt)</code> to select one at random.</p>
<p>(but tdelaney's <a href="https://stackoverflow.com/a/43351673/298607">answer</a> is better)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use zfill and set like so: <em>Edited to account for numbers with repeating digits</em></p>
<pre><code>import random


def threeInFive(user_num):
    num = str(random.randint(0, 99999)).zfill(5)
    num = ''.join(set([n for n in num]))
    if len(num) &lt; 5:
        print "There were repeating digits...trying again"
        threeInFive(user_num)
    elif str(user_num) in num:
        print "The user number is in there!"
        return True
    else:
        print "The user number : %s is not in : %s" % (user_num, num)
        return False

threeInFive(500)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you generate your numbers like this:</p>
<pre><code>larger_number = ''.join(random.sample(string.digits, 5))
</code></pre>
<p>And got the numbers from the user like this:</p>
<pre><code>def get_user_num(length=5):
    while True:
        num = raw_input('Enter a {}-digit number with no repeating digits: '.format(length)).zfill(length)
        if len(set(num)) &lt; length:
            print('Please try again.')
            continue
        else:
            return num
</code></pre>
<p>You could determine if the user's numbers were in the number list like so:</p>
<pre><code>set(user_number) &lt; set(larger_number)
</code></pre>
<p>And then it would be a really simple matter to combine this all together into a program. Note that the numbers are never actually treated as numbers - they're just strings.</p>
</div>
<span class="comment-copy">It seems like it would be really easy to do this with strings, or lists of single numbers. Have you tried that at all?</span>
<span class="comment-copy">This doesn't seem like it is related to anaconda. Can the tag be removed?</span>
<span class="comment-copy">Did you look at this post ? <a href="http://stackoverflow.com/questions/2673385/how-to-generate-random-number-with-the-specific-length-in-python" title="how to generate random number with the specific length in python">stackoverflow.com/questions/2673385/â€¦</a></span>
<span class="comment-copy">Do you want a random string of 5 digits such as "00498", or do you want a random integer that is 5 digits such as "47832"? The second case would just require you to change the first parameter of randint().</span>
<span class="comment-copy">Can zero be the leading digit?</span>
<span class="comment-copy">He asked for no repeating digits. He didnt ask for no duplicate digits. Presumably this means "121" is acceptable but "112" is not. Though we would have to ask the OP to be sure.</span>
<span class="comment-copy">@JeffreyPhillipsFreeman - that would be "no sequentially repeating digits". Its worth requesting clarification from OP in the question. But I don't see the value of simply asserting that here.</span>
<span class="comment-copy">the value of asserting it here is in the hopes you go to the OP to follow up. I havent submitted any answers so I personally dont need clarification. I did however upvote your answer regardless.</span>
<span class="comment-copy">@JeffreyPhillipsFreeman - That would just make me a third party to your question. I've learned to avoid triangles!</span>
<span class="comment-copy">its the squares you really have to worry about. They never know how to have any fun!</span>
<span class="comment-copy">OP says there can't be repeating digits, so zero-filling would violate that, wouldn't it?</span>
<span class="comment-copy">Ah you're right. Fixed. This solution uses recursion so the function calls itself again if there were repeating digits in the random number.</span>
