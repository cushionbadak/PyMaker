<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21053380/what-does-del-do-exactly">What does “del” do exactly?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/5690888/variable-scopes-in-python-classes">Variable scopes in python classes</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm new to Python and saw this code snippet:</p>
<pre><code>class C:
    abc = 2

c1 = C()
print c1.abc

c1.abc = 3
print c1.abc

del c1.abc
print c1.abc
</code></pre>
<p>I understand why the first and the second print statements print 2, respectively 3. Coming from a Java background however, I don't understand what happens in the line '<code>del c1.abc</code>' and why the last print statement prints 2 and not some kind of an error. Can someone explain? If possible by comparing to Java?</p>
</div>
<div class="post-text" itemprop="text">
<p>The sticky issue to a Python beginner here is that <code>abc</code> is a class variable (i.e. a "static" variable), and when you do <code>c1.abc = 3</code>, you <em>shadow the class variable with an instance variable</em>. When you do <code>del c1.abc</code> the <code>del</code> applies to the <em>instance variable</em>, so calling <code>c1.abc</code> now returns the class variable.</p>
<p>The following interactive session should clear some things up:</p>
<pre><code>&gt;&gt;&gt; class C:
...   abc = 2
...
&gt;&gt;&gt; c1 = C()
&gt;&gt;&gt; c2 = C()
&gt;&gt;&gt; c1.abc = 3
&gt;&gt;&gt; c1.abc
3
&gt;&gt;&gt; c2.abc
2
&gt;&gt;&gt; C.abc # class "static" variable
2
&gt;&gt;&gt; del c1.abc
&gt;&gt;&gt; c1.abc
2
&gt;&gt;&gt; c2.abc
2
&gt;&gt;&gt; C.abc
2
&gt;&gt;&gt; del c2.abc
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: C instance has no attribute 'abc'
&gt;&gt;&gt; del C.abc
&gt;&gt;&gt; c1.abc
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: C instance has no attribute 'abc'
&gt;&gt;&gt;
</code></pre>
<p>It is <code>del.&lt;someattribute&gt;</code> always deletes the <em>instance</em> attribute. It won't delete a class-level attribute if applied to an instance, instead, you have to apply it to the class!</p>
<p>In Python, everything written inside a class block is <em>always at the class level</em>. In this sense, it is simpler than Java. To define an instance variable, you need to assign directly to an instance, outisde a method (<code>c1.abc = 3</code>) or inside a method, using the first parameter passed to that method (by <em>convention</em> this is called <code>self</code> but could be <code>banana</code> if you wanted):</p>
<pre><code>&gt;&gt;&gt; class C:
...    def some_method(banana, x): # by convention you should use `self` instead of `banana`
...         banana.x = x
...
&gt;&gt;&gt; c = C()
&gt;&gt;&gt; c.x
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: C instance has no attribute 'x'
&gt;&gt;&gt; c.some_method(5)
&gt;&gt;&gt; c.x
5
</code></pre>
</div>
<span class="comment-copy">@Aaron I don't understand how this is even slightly related to my question. Can you elaborate?</span>
<span class="comment-copy">The sticky issue to a Python beginner here is that <code>abc</code> is a <i>class variable</i> (i.e. a "static" variable), and when you do <code>c1.abc = 3</code>, you <i>shadow</i> the class variable with an instance variable. When you do <code>del c1.abc</code> the <code>del</code> applies to the <i>instance</i> variable, so calling <code>c1.abc</code> now returns the class variable.</span>
<span class="comment-copy">@Aaron but that isn't what's going on here.</span>
<span class="comment-copy">@juanpa.arrivillaga Tha's exactly the answer I was looking for! Thanks! Can you copy that to an actual answer? Then I could upvote and accept :)</span>
<span class="comment-copy">@juanpa.arrivillaga true, I'll remove my comment.. yours is much more relevant</span>
<span class="comment-copy">Thanks a lot! This clears many things up!</span>
<span class="comment-copy">@user6189 I added a little bit about class-level variables in Python. It is helpful to read through the <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">official tutorial</a>. Python class definitions are really simple, but they work a little differently than a Java class definition.</span>
