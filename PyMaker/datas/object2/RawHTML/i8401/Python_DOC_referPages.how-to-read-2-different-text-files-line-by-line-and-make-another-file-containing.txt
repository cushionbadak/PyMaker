<div class="post-text" itemprop="text">
<p>I have two text files name <strong>weburl.txt</strong> and <strong>imageurl.txt</strong>, <strong>weburl.txt</strong> contain URLs of website and  <strong>imageurl.txt</strong> contain all images URLs I want to create a dictionary that read a line of <strong>weburl.txt</strong> and make key of a dictionary and <strong>imageurl.txt</strong> line as a value.
<strong>weburl.txt</strong></p>
<pre><code>url1
url2
url3
url4
url5......
</code></pre>
<p><strong>imageurl.txt</strong></p>
<pre><code>imgurl1
imgurl2
imgurl3
imgurl4
imgurl5
</code></pre>
<p>required output is</p>
<pre><code> {'url1': imgurl1, 'url2': imgurl2, 'url3': imgurl3......}
</code></pre>
<p>I am using this code</p>
<pre><code>with open('weburl.txt') as f :
  key = f.readlines()
  with open('imageurl.txt') as g:  
    value = g.readlines()
    dict[key] = [value]

  print dict
</code></pre>
<p>I am not getting the required results </p>
</div>
<div class="post-text" itemprop="text">
<p>you can write something like</p>
<pre><code>with open('weburl.txt') as f, \
        open('imageurl.txt') as g:
    # we use `str.strip` method
    # to remove newline characters
    keys = (line.strip() for line in f)
    values = (line.strip() for line in g)
    result = dict(zip(keys, values))

print(result)
</code></pre>
<p>more info about <code>zip</code> at <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">docs</a></p>
</div>
<div class="post-text" itemprop="text">
<p>There are problems with the statement <code>dict[key] = [value]</code> on so many levels that I get a kind of vertigo as we drill down through them:</p>
<ol>
<li>The apparent intention to use a variable called <code>dict</code> (a bad idea because it would overshadow Python's builtin reference to the <code>dict</code> class). Let's call it <code>d</code> instead.</li>
<li>Not initializing the dictionary instance first. If you had called it something like<code>d</code> this oversight would earn you an easy-to-understand <code>NameError</code>. However since you're calling it <code>dict</code>, Python will actually be attempting to set items in the <code>dict</code> class itself (which doesn't support <code>__setitem__</code>) instead of inside a <code>dict</code> instance, so you'll get a different, more-confusing error.</li>
<li>Attempting to make a <code>dict</code> entry assignment where the key is a non-hashable type (<code>key</code> is a<code>list</code>). You <em>could</em> convert the<code>list</code> to the hashable type <code>tuple</code> easily enough, but that's not what you want because you'd still be...</li>
<li>Attempting to assign bunch of values to their respective keys <em>all at once</em>. This can't be done with <code>d[key] = value</code> syntax.   It <em>could</em> be done all in one relatively simple statement, i.e. <code>d=dict(zip(key,value))</code> but unfortunately that doesn't get around the fact that you're...</li>
<li>Not stripping the newline character off the end of each key and value.</li>
</ol>
<p>Instead, this line:</p>
<pre><code>d = dict((k.strip(), v.strip()) for k, v in zip(key, value))
</code></pre>
<p>will do what you appear to want.</p>
</div>
<span class="comment-copy">And what is the problem? Please <a href="https://stackoverflow.com/posts/43330127/edit">edit</a> in some more details.</span>
<span class="comment-copy">not getting the required output by using that code</span>
<span class="comment-copy">"not getting the required output" is not enough detail. You did well in giving example input and the desired output, now you should show the actual output and clarify what is wrong with it. If the output is an error message, show the full traceback for the error.</span>
<span class="comment-copy">excelent, i was about to sugest the same</span>
