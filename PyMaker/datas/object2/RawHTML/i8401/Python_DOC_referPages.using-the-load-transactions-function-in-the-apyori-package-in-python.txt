<div class="post-text" itemprop="text">
<p>I would like to use the <a href="https://pypi.python.org/pypi/apyori/1.1.1" rel="nofollow noreferrer"><code>apyori</code></a> package in Python to do some association rule mining. The package includes a function called load_transactions package that according to the doctring, "Load transactions and returns a generator for transactions." </p>
<p>Now I cannot understand how to use this function. If I use a file name I get each character of the file name, like this:</p>
<pre><code># demo1.tsv
beer    butter  paper
ball    beer
computer    beer    paper
ball    computer

from apyori import *
transactions = load_transactions(input_file='data/demo1.tsv')
list(transactions)
# output
  [['d'],
   ['a'],
   ['t'],
   ['a'],
   ['/'],
   ['d'],
   ['e'],
   ['m'],
   ['o'],
   ['1'],
   ['.'],
   ['t'],
   ['s'],
   ['v']]
</code></pre>
<p>I would like to know how to load these files so that I can use the other functions of the package. Any form of help will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>A little late here, but I've found it easier to re-write the loading and dumping functions for <code>apyori</code> myself (for JSON in my case). Here's some code that should work in your case (and that adds context management to make it a bit safer):</p>
<pre><code>import csv

def new_load_transaction(file='data/demo1.tsv'):
    with open(file, newline='') as f:
        for transaction in csv.reader(f, delimiter='\t'):
            yield transaction if transaction else ['']
</code></pre>
<p>The code above is basically straight out of the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv docs</a>, with the original generator from <code>apyori</code> intact. I just submitted a <a href="https://github.com/ymoch/apyori/pull/34" rel="nofollow noreferrer">pull request</a> for my fix, so I'll update you if/when the request is accepted.</p>
<p>As an aside, if you're unfamiliar with context managers it's worth reading up on, and this <a href="https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/" rel="nofollow noreferrer">link</a> provides a great tutorial.</p>
<h2>Update</h2>
<p>The package author responded with the following:</p>
<p>...In my opinion, load_transaction() should be able to takes a file-like object as the csv.reader() do, even if it can also take a file path....opening file externally and giving the file object to load_transaction() can solve that problem as below.</p>
<pre><code>with open(file_path) as file_obj:
    transactions = load_transaction(file_obj)
</code></pre>
</div>
<span class="comment-copy">@Jash Shah - If this answered your question, I'd appreciate if you'd mark it as correct. Thanks!</span>
