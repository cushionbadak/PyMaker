<div class="post-text" itemprop="text">
<p>Trying to self teach Python and Sqlite and my head is spinning.  How does one 'clean up' the output of a query to get rid of all the brackets, commas, etc... from the result.  Would also like to <code>.title()</code> the 2nd column.  For example:</p>
<pre><code>def get_all_bdays(self):
    print("\n" * 100)
    print("The birthdays we know about are: ")
    self.c.execute('SELECT * FROM birthdays')
    for row in self.c.fetchall():
        print(row)
</code></pre>
<p>Results in the following output:</p>
<pre><code>The birthdays we know about are: 
(1, 'joe smoe', '12-12-1212')
</code></pre>
<p>How does one go about reformatting that mess to something like:</p>
<pre><code>The birthdays we know about are: 
1. Joe Smoe 12-12-1212
</code></pre>
<p>My end goal is to create an inventory system for my small business that my employees can use to find where backstock items are located in my storeroom.  Thinking about using Flask for something like that, but I'm a long way off from that point in time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Each row is a tuple with three values: the number, name, and birthday. <code>print(row)</code> is outputting the tuple, with all its parentheses and quotes, not any formatted version.</p>
<p>In Python, you can deconstruct the tuple and assign the parts of it to different variables, then format using Python's syntax for <code>printf</code>-like formatting:</p>
<pre><code>for row in self.c.fetchall():
    number, name, date = row
    print("%d. %s on %s" % (number, name.title(), date))
</code></pre>
<p>or even:</p>
<pre><code>for number, name, date in self.c.fetchall:
    print("%d. %s on %s" % (number, name.title(), date))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you <code>print(row)</code> you are getting the Python representation of <code>row</code>, which includes the quotes and commas and such. What you want to do is to <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str.format#str.format" rel="nofollow noreferrer"><code>str.format</code></a> the data into whatever shape you like:</p>
<pre><code>fmt = "{0}. {1}, on {2}"
for row in self.c.fetchall():
    print(fmt.format(*row))
</code></pre>
</div>
<span class="comment-copy">Zbw, This worked beautifully.  Thanks!</span>
