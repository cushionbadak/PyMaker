<div class="post-text" itemprop="text">
<p>The content of a file is like following, and the file encoding is utf-8:</p>
<pre><code>cd232704-a46f-3d9d-97f6-67edb897d65f    b'this Friday, Gerda Scheuers will be excited \xe2\x80\x94 but she\xe2\x80\x99s most excited about the merchandise the movie will bring.'
</code></pre>
<p>Here is my code:</p>
<pre><code>with open(file, 'r') as f_in:
    for line in f_in:
        tokens = line.split('\t')
        print(tokens[1])
</code></pre>
<p>I want to get the right answer - "this Friday, Gerda Scheuers will be excited - but she's most excited about the merchandise the movie will bring."</p>
<pre><code>print(b'\xe2\x80\x94'.decode('utf-8')) #convert into ASCII 
</code></pre>
<p>But I can't read the bytes from a file. If I open a file with bytes, I need to decode the line to splite it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to convert the bytes literal to bytes:</p>
<p>Then, decode it to get string object:</p>
<pre><code>&gt;&gt;&gt; ast.literal_eval(r"b'excited \xe2\x80\x94 but she\xe2\x80\x99s'")
b'excited \xe2\x80\x94 but she\xe2\x80\x99s'
&gt;&gt;&gt; ast.literal_eval(r"b'excited \xe2\x80\x94 but she\xe2\x80\x99s'").decode('utf-8')
'excited — but she’s'
</code></pre>
<hr/>
<pre><code>with open(file, 'r') as f_in:
    for line in f_in:
        tokens = line.split('\t')
        # if len(tokens) &lt; 2:
        #    continue
        bytes_part = ast.literal_eval(tokens[1])
        s = bytes_part.decode('utf-8')  # Decode the bytes to convert to a string
</code></pre>
</div>
