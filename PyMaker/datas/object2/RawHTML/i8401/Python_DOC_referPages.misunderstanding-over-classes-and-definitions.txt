<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11421659/passing-variables-creating-instances-self-the-mechanics-and-usage-of-classes">Passing variables, creating instances, self, The mechanics and usage of classes: need explanation [closed]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have been given these two class definitions:</p>
<pre><code>class Weird(object):
    def __init__(self, x, y): 
        self.y = y
        self.x = x
    def getX(self):
        return x 
    def getY(self):
        return y

class Wild(object):
    def __init__(self, x, y): 
        self.y = y
        self.x = x
    def getX(self):
        return self.x 
    def getY(self):
        return self.y

X = 7
Y = 8
</code></pre>
<p>The first two questions were fine; they simply asked </p>
<pre><code>w2 = Wild(X, Y)
print(w2.getX())
</code></pre>
<p>(which is 7) and  </p>
<p><code>print(w2.getY())</code></p>
<p>What confuses me are the questions </p>
<pre><code>w1 = Weird(X, Y)
print(w1.getX())
</code></pre>
<p>and </p>
<p><code>print(w1.getY())</code> </p>
<p>both of whose answers are apparently "error", but I don't understand why this is the case. The errors given are "x is not defined" and "y is not defined" respectively, but I thought <code>x</code> and <code>y</code> are the parameters that we put into the function. What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your first class, <code>x</code> and <code>y</code> are constructor arguments.
They are not accessible out of this scope.</p>
<p>In the <code>getX</code> function, <code>x</code> doesn't exists. You need to retrieve it from the <code>self</code> reference, such as in your second class.</p>
</div>
<span class="comment-copy">You wrote <code>return x</code>,  not <code>return self.x</code>.</span>
<span class="comment-copy"><code>x</code> and <code>y</code> are locals in <code>Weird.__init__</code>. That means they don't exist <i>outside</i> of that function. <code>Weird.getX</code> and <code>Weird.getY</code> are separate functions with separate namespaces.</span>
<span class="comment-copy">What's the difference between <code>x</code> and <code>self.x</code>?</span>
<span class="comment-copy"><code>Wild</code> uses the <code>self</code> object (a reference to your current instance) to access attributes on that. That's how you share information between the different methods, they all share a <code>self</code> instance, which is passed in automatically for methods. <code>self.x</code> and <code>self.y</code> exist only because <code>__init__</code> set these.</span>
<span class="comment-copy">Last but not least, the Python tutorial: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html</a></span>
