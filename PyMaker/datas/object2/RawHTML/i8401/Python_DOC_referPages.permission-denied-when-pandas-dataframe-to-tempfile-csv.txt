<div class="post-text" itemprop="text">
<p>I'm trying to store a pandas dataframe to a tempfile in csv format (in windows), but am being hit by:</p>
<p>[Errno 13] Permission denied: 'C:\Users\Username\AppData\Local\Temp\tmpweymbkye'</p>
<pre><code>import tempfile
import pandas

with tempfile.NamedTemporaryFile() as temp:
    df.to_csv(temp.name)
</code></pre>
<p>Where df is the dataframe. I've also tried changing the temp directory to one I am sure I have write permissions:</p>
<pre><code>tempfile.tempdir='D:/Username/Temp/'
</code></pre>
<p>This gives me the same error message</p>
<p>Edit:</p>
<p>The tempfile appears to be locked for editing as when I change the loop to:</p>
<pre><code>with tempfile.NamedTemporaryFile() as temp:
    df.to_csv(temp.name + '.csv')
</code></pre>
<p>I can write the file in the temp directory, but then it is not automatically deleted at the end of the loop, as it is no longer a temp file.</p>
<p>However, if I change the code to:</p>
<pre><code>with tempfile.NamedTemporaryFile(suffix='.csv') as temp:
    training_data.to_csv(temp.name)
</code></pre>
<p>I get the same error message as before. The file is not open anywhere else.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check your permissions and, according to <a href="https://stackoverflow.com/a/27801762/3131945">this</a> post, you can run your program as an administrator by right click and run as administrator.</p>
<p>We can use the to_csv command to do export a DataFrame in CSV format. Note that the code below will by default save the data into the current working directory. We can save it to a different folder by adding the foldername and a slash to the file </p>
<pre><code>verticalStack.to_csv('foldername/out.csv').
</code></pre>
<p>Check out your working directory to make sure the CSV wrote out properly, and that you can open it! If you want, try to bring it back into python to make sure it imports properly.</p>
<pre><code>newOutput = pd.read_csv('out.csv', keep_default_na=False, na_values=[""])
</code></pre>
<p><a href="http://chris.friedline.net/2015-12-15-rutgers/lessons/python2/04-merging-data.html" rel="nofollow noreferrer">ref</a></p>
<p>Unlike <code>TemporaryFile()</code>, the user of <code>mkstemp()</code> is responsible for deleting the temporary file when done with it.</p>
<p>With the use of this function may introduce a security hole in your program. By the time you get around to doing anything with the file name it returns, someone else may have beaten you to the punch. <code>mktemp()</code> usage can be replaced easily with <code>NamedTemporaryFile()</code>, passing it the <code>delete=False</code> paramete.</p>
<p><a href="https://docs.python.org/3/library/tempfile.html" rel="nofollow noreferrer">Read more</a>.</p>
<p>After export to <code>CSV</code> you can close your file with <code>temp.close()</code>.</p>
<pre><code>with tempfile.NamedTemporaryFile(delete=False) as temp:
    df.to_csv(temp.name + '.csv')
    temp.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sometimes, it gives that error simply cos there is another file with the same name and it has no permission to delete the earlier file and replace it with the new file.</p>
<ol>
<li>So either name the file differently while saving it.
or</li>
<li>If you are working on Jupyter Notebook or a other similar environment, delete the file after executing the cell that reads it into memory.So that when you execute the cell which writes it to the machine, there is no other file that exists with that name.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Sometimesï¼Œyou need check the file path that if you have right permission to read and write file. Especially when you use relative path.</p>
<pre><code>xxx.to_csv('%s/file.csv'%(file_path), index = False)
</code></pre>
</div>
<span class="comment-copy">I don't know enough about tempfile module to give a proper answer.  But have a look here (final post): <a href="https://github.com/pandas-dev/pandas/issues/1047" rel="nofollow noreferrer">github.com/pandas-dev/pandas/issues/1047</a>  just do     df.to_csv(temp)    (without .name)</span>
<span class="comment-copy">I think that's a typo in his code, that returns this error: "a bytes-like object is required, not 'str'"</span>
<span class="comment-copy">Did you mistakenly leave the file open? This will give you the same error.</span>
<span class="comment-copy">I think that is what is happening, as I get the same behaviour when I add the suffix .csv in NamedTemporaryFile, but I am not opening the file anywhere else</span>
<span class="comment-copy">Running as admin didn't change anything, and I tried changing the tempdir to one where I definitely have write permission</span>
<span class="comment-copy">@thebigspin I changed my answer</span>
<span class="comment-copy">I have edited my quesiton to add more information.</span>
<span class="comment-copy">@thebigspin try this: with tempfile.NamedTemporaryFile(delete=False) as temp:</span>
<span class="comment-copy">This works (not sure why!?) but then the file isn't deleted at the end of the loop. Tried adding os.remove(temp.name) but then it says file is in use...</span>
