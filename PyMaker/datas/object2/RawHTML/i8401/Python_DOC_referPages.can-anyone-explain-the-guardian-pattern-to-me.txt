<div class="post-text" itemprop="text">
<p>Tried searching for guardian pattern but I couldn't find anything that answered my question so here I am again. In the book I am reading the author uses a line of code that he calls, "the guardian pattern" and I don't really understand how it works. here is the example and I would be grateful if someone could explain it to me.</p>
<pre><code>while True:
    line = raw_input('&gt; ')
    if len(line) &gt; 0 and line[0] == '#' :
        continue
    if line == 'done':
        break
    print line
print "done!"
</code></pre>
<p>so why, if the length of the line &gt; 0 and line[0] == '#' :
does it not error if I just hit enter with nothing there. Wouldn't the line be 0 and thus line isn't &gt; 0? if you put the orig code in which is </p>
<pre><code>if line[0] == '#' : 
</code></pre>
<p>it errors out when you just hit enter.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>so why, if the length of the line &gt; 0 and line[0] == '#' : does it not error if I just hit enter with nothing there.</p>
</blockquote>
<p>No, it does not throw an error. Python uses lazy evaluation, which enables short circuiting with the <code>and</code> operator. See the <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">docs</a>.</p>
<p>In other words, the second part of the boolean expression, i.e., <code>line[0] == '#'</code>, only gets evaluated if the first part is <code>True</code>.</p>
<p>I believe this is the reason why that author calls this the <em>guardian pattern</em>, so that the first part of the expression avoids (<em>guards</em>) a possible error in the second part of the expression.</p>
<p>If you remove that first part, like in the example you show, then you would be trying to access the first element of <code>line</code> (<code>line[0]</code>), when there is none elements in <code>line</code>.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Wouldn't the line be 0 and thus line isn't &gt; 0?</p>
</blockquote>
<p>If you just press enter line is <code>""</code> . An empty string. The length of this string <code>len(line)</code> is 0 (thus causing your program to continue as soon as the first case of the <code>and</code> statement is evaluated. If you access the first index <code>0</code> of an empty line, it will throw an error. Thus, always check if you actually have a first index before accessing it...</p>
</div>
<span class="comment-copy">Note that this whole pattern isn't actually needed here. You could make the test <code>if line.startswith('#'):</code> (or equivalently, but less idiomatically, <code>if line[:1] == '#':</code>) and it will work correctly whether or not the user entered anything, with a single conditional test, not two.</span>
<span class="comment-copy">Which book did you see this in? I'm also seeing references to the Guardian pattern and can't seem to find it.</span>
