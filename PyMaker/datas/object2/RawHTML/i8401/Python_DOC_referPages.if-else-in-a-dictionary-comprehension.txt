<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21209402/ternary-expression-in-dictionary-comprehension">Ternary expression in dictionary comprehension</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Is it possible to use the <code>else</code> statement (and if yes, how?) in a <code>dictcomp</code>?</p>
<p>It is not possible to use <code>else</code> as part of the comprehension itself (see <a href="https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries" rel="nofollow noreferrer">this</a>) but at least in <code>list</code> and <code>set</code> comprehensions it is possible to use the <code>conditional_expression</code> (see <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="nofollow noreferrer">this</a>).</p>
<p>An example for <code>listcomp</code> is <a href="https://stackoverflow.com/questions/4260280/if-else-in-pythons-list-comprehension#4260304">here</a>.</p>
<p>My example code is:</p>
<pre><code>converters = {"id": int}
rows = [{"id": "1", "name": "foo"}, {"id": "2", "name": "bar"}]
for row in rows:
    row = {k: converters[k](v) if k in converters else k:v for k,v in row.items()}
    print(row)
</code></pre>
<p>This does not work.</p>
<p>The weird part is that</p>
<p><code>row = {k: converters[k](v) if k in converters for k, v in row.items()}</code> does not work either, although it should be ok.</p>
<p><code>row = {k: converters[k](v) for k, v in row.items() if k in converters}</code> does work,but this is not the result I want.<br/>
<code>row = {k: converters[k](v) for k, v in row.items() if k in converters else k:v}</code> should not work, as I pointed out above.</p>
<p>I know that I could bypass the problem by using two dictcomps, but I want to know why this does not work.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's because the conditional applies for the value of the dictionary, not for the key value pair, i.e it is evaluated as:</p>
<pre><code>row = {k: (converters[k](v) if k in converters else k:v) for k,v in row.items()}
</code></pre>
<p>and <code>k:v</code> is not syntactically valid here, it's only valid inside a pair of curly brackets or in a function signature (so, you could place <code>k:v</code> in brackets and fix the <code>SyntaxError</code> but, that changes the end result).</p>
<p>The solution is to simply supply the value in the conditional since that is what changes:</p>
<pre><code>row = {k: converters[k](v) if k in converters else v for k,v in row.items()}
</code></pre>
<p>Another option, of course, is to instead supply tuples to the <code>dict</code> constructor:</p>
<pre><code>row = dict((k, converters[k](v)) if k in converters else (k,v) for k,v in row.items())
</code></pre>
</div>
