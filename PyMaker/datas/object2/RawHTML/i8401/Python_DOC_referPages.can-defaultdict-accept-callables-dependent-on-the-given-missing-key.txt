<div class="post-text" itemprop="text">
<p>The examples given in <a href="https://docs.python.org/3/library/collections.html#defaultdict-examples" rel="nofollow noreferrer">the docs</a> all seem to be the cases where the first callable argument in <code>defaultdict</code> is a "constant" function, like <code>int</code>, <code>list</code>, or <code>lambda: const</code> etc. I don't know if <code>defaultdict</code> is just supposed to take constant functions as its callabe argument, but if not, I want the callable to be dependent on the missing key values I give. For example</p>
<pre><code>toy = collections.defaultdict(lambda x: len(x), {'foo': 3})
toy['barr']
</code></pre>
<p>What I expect is whenever I give a missing key string, for example <code>'barr'</code>, the container can create a new entry with <code>'barr'</code> being the key and its length <code>4</code> being the value. But it doesn't work. Instead, it gives me the following error:</p>
<pre><code>TypeError: &lt;lambda&gt;() missing 1 required positional argument: 'x'
</code></pre>
<p>I expected <code>'barr'</code> to be this <code>lambda</code>'s argument here, but it was apparently not the case. So what could have gone wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The default factory is never given any arguments, so you can't do it like that. What you can do, though, is subclass <code>defaultdict</code> and define the <code>__missing__</code> method:</p>
<pre><code>class CustomDefaultDict(collections.defaultdict):
    def __missing__(self, key):
        self[key] = value = len(key)
        return value
</code></pre>
<p>To make it more easily-extendible, you could also take advantage of the <code>default_factory</code>, but give it the key as an argument:</p>
<pre><code>class CustomDefaultDict(collections.defaultdict):
    def __missing__(self, key):
        if self.default_factory is None:
            raise KeyError((key,))
        self[key] = value = self.default_factory(key)
        return value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the docs: </p>
<hr/>
<p>If default_factory is not None, it is called <strong>without arguments</strong> to provide a default value for the given key, this value is inserted in the dictionary for the key, and returned.</p>
<hr/>
<p>The <code>defaultdict</code> simply doesn't work the way you are trying to use it. </p>
</div>
<span class="comment-copy"><code>defaultdict</code> is designed for default values, that is to say values that don't rely on their keys.  You're best off just using a regular <code>dict</code> and doing it yourself</span>
<span class="comment-copy">Thanks I think I understand now: so basically <code>defaultdict</code> is really just supposed to take constant functions as callable arg. It is a bit strange though: why use a constant <i>function</i> instead of just the constant itself?</span>
<span class="comment-copy">Because it's the more typical use case.</span>
<span class="comment-copy">To be clear: the intent is for defaultdict to act like a regular dict that has a specified <code>setdefault</code> argument. The <code>setdefault</code> method only accepts a function that does not accept arguments.</span>
