<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/489999/convert-list-of-ints-to-one-number">Convert list of ints to one number?</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I want to generate a random 4 digit number in which none of the digits are repeated.</p>
<pre><code> import random

 sets = random.sample(range(0,9), 4)
</code></pre>
<p>This generates a random set of 4 digits but I want this as an integer. how do I do that?         </p>
</div>
<div class="post-text" itemprop="text">
<p>(Assuming OP meant all the digits)<br/>
Instead of using numbers and have to manipulate to <code>str</code> and back to <code>int</code>, just start with ascii digits:</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; ''.join(random.sample(string.digits, 4))
'4561'
</code></pre>
<p>You can convert to <code>int()</code> if necessary.<br/>
It's unclear what the OP intends to do if the first digit is <code>0</code>.</p>
<p>For a purely numerical approach you can use <code>functools.reduce</code>:</p>
<pre><code>&gt;&gt;&gt; import functools as ft
&gt;&gt;&gt; ft.reduce(lambda s, d: 10*s + d, random.sample(range(10), 4))
2945
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by converting each digit to a string, joining them, and casting them as an integer.</p>
<pre><code>int("".join(map(str,random.sample(range(0,9),4))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you need to generate 4 digit number, just for knowledge purpose use.</p>
<p>As suggested by AChampion this solution can contain duplicates</p>
<blockquote>
<blockquote>
<blockquote>
<p>from random import randint
      randint(1000, 9999)</p>
</blockquote>
</blockquote>
</blockquote>
<p>Use bernie Solution to generate a random 4 digit number in which none of the digits are repeated.</p>
<pre><code>int("".join(map(str,random.sample(range(0,9),4))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case if you want potentially infinite sequence of numbers with 4 unique digits (or any other condition â€“ write your own)</p>
<pre><code>import random


def numbers_gen(left_end, right_end):
    while True:
        yield random.randint(left_end, right_end)


def are_digits_unique(number):
    number_string = str(number)
    return list(set(number_string)) == list(number_string)


four_digits_numbers_gen = number_gen(left_end=1000,
                                     right_end=9999)
four_digits_numbers_with_unique_digits_gen = filter(are_digits_unique,
                                                    four_digits_numbers_gen)
</code></pre>
<p>Works only in Python 3 because <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> returns iterator-object (in Python 2.7 it returns <code>list</code>, more at <a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow noreferrer">docs</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can multiply with powers of 10:</p>
<pre><code>sum(10**a*b for a, b in enumerate(reversed(sets)))
</code></pre>
<p>This works as long as the first element of <code>sets</code> is not zero.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try:</p>
<pre><code>import random
my_set = set()
while len(my_set) &lt; 4:
    x = random.choice(range(0,9))
    my_set.add(x)
my_num = int("".join(map(str, my_set)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One line:</p>
<pre><code>int("".join(random.sample("0123456789",4)))
</code></pre>
</div>
<span class="comment-copy">Note: <code>range(0, 9)</code> excludes <code>9</code>.</span>
<span class="comment-copy">This actually answers the full question.</span>
<span class="comment-copy">Excellent one-liner</span>
<span class="comment-copy">@bernie, thanks for the edit!!</span>
<span class="comment-copy">Digits can be repeated with this solution.</span>
<span class="comment-copy">@AChampion Thanks for suggestion, edited the solution.</span>
<span class="comment-copy">Is <code>reversed()</code> necessary given they are just random digits?</span>
<span class="comment-copy">@AChampion Depends on the nitty-gritty, doesn't it? For example, if upstream were to special case the first digit to be nonzero it would certainly be a nice touch to make sure it ends up on the left.</span>
<span class="comment-copy">True, good point. Why do you claim this does not to work if the first element is <code>0</code>. Given you are reversing it, should give <code>XXX0</code> and if the last item is <code>0</code> it just gives a 3 digit number (implied <code>0</code>)</span>
<span class="comment-copy">@AChampion Hm, doesn't it construct the number lsd and therefore rightmost first? I think I even tested it. -- Very commendable Horner scheme in your answer, btw.</span>
<span class="comment-copy">Sorry, you are right <code>3</code> digit result occurs on first digit <code>0</code>. Unclear what the OP intends to do with first digit <code>0</code>.</span>
<span class="comment-copy">Why reimplement <code>random.sample()</code>?</span>
<span class="comment-copy">You're right, no need. I got confused about sample selecting unique elements. But now I know!</span>
