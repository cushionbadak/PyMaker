<div class="post-text" itemprop="text">
<p>My python package has a module called settings.py which looks for a settings.ini file, and if one isn't found raises an Exception.</p>
<p>My package works fine but when I try and use Sphinx Autodoc it fails because it can't find a settings file.</p>
<p>What options do I have for getting around this? The ones I can think of are</p>
<ol>
<li>Put a settings.ini file in one of the Sphinx directories so it can be read.</li>
<li>Somehow mock the internal settings module if possible. The settings module is unimportant so I don't care if there is no documentation for it to the suer</li>
</ol>
<p>Has anyone run into a similar issue when trying to generate Sphinx documentation on packages that need external files and if so what is your solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pyramid has a command-line script <a href="http://docs.pylonsproject.org/projects/pyramid/en/latest/pscripts/pserve.html" rel="nofollow noreferrer">pserve</a> which loads an <code>.ini</code> settings file.</p>
<p>To document this script, we use <a href="https://pythonhosted.org/sphinxcontrib-autoprogram/" rel="nofollow noreferrer">autoprogram</a> as follows:</p>
<pre><code>.. autoprogram:: pyramid.scripts.pserve:PServeCommand.parser
    :prog: pserve
</code></pre>
<p>and in your <code>conf.py</code>:</p>
<pre><code>extensions = [
...
    'sphinxcontrib.autoprogram',
...
]
</code></pre>
<p>It requires the use of <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a> in your script.</p>
</div>
<span class="comment-copy">Do you actually need to have that settings file just to <i>load</i> the module?</span>
<span class="comment-copy">The way I programmed it yes, at the time I thought it would be simpler. The package is a command line application that writes a bunch of stuff to dbs and the settings tell it which dbs. Is this bad practice? I can see how it's causing me issues now</span>
<span class="comment-copy">If the settings file is just for a command-line program, then the file shouldn't be loaded until the command is actually run.  You'll run into the same problem if anyone ever runs <code>pydoc</code> on your package.</span>
<span class="comment-copy">Got it. If you are able to is there any examples of this pattern that I can look it? Perhaps an open source package. I can also accept this answer if you want to put it below!</span>
