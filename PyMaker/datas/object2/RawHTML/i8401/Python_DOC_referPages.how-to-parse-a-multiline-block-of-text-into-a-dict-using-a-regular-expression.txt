<div class="post-text" itemprop="text">
<p>I have this multi-line text:   </p>
<pre><code>1. fef w fwe fwe
fewfa 2. fwa f
fwefwfw gw
2 2f 23. f
g gegwg
32. gre34 g3 1. gr
egsg
</code></pre>
<p>I want to use the number at the beginning of line as the key (use <code>.</code> or <code></code> as the separation char).<br/>
The resultant dict needs to be:</p>
<pre><code>{
    "1": "fef w fwe fwe fewfa 2. fwa f fwefwfw gw",
    "2": "2f 23. f g gegwg",
    "32": "gre34 g3 1. gr egsg"
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this regex:</p>
<pre><code>/^(\d+)\.?\s+(.*?)(?=(?:^\d+\.?)|\Z)/gms

 ^                                       assert start of line
    ^                                    capture 1 or more digits
       ^                                 optional literal . 
           ^                             one or more spaces
               ^                         every character including \n  
                    ^                    lookahead to next block start or end                                 
                                     ^   flags M for multiline and S to have 
                                         dot match all     
</code></pre>
<p><a href="https://regex101.com/r/T9XRbq/1/" rel="nofollow noreferrer">Demo</a></p>
<p>Then you can create the dict like so:</p>
<pre><code>&gt;&gt;&gt; dict(re.findall(r'^(\d+)\.?\s+(.*?)(?=(?:^\d+\.?)|\Z)', s, re.M|re.S))
{'1': 'fef w fwe fwe\nfewfa 2. fwa f\nfwefwfw gw\n', '32': 'gre34 g3 1. gr\negsg', '2': '2f 23. f\ng gegwg\n'}
</code></pre>
</div>
<span class="comment-copy">What have you tried, and what exactly is the problem with it?</span>
<span class="comment-copy">In a regular expression, <code>'^'</code>  matches the start of the string, so that should probably be the first part of the one you need. (From <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer"><b>Regular Expression Syntax</b></a> in the documentation.)</span>
<span class="comment-copy">stuck with regex. tried to understand yours. could you please explain more? thanks.</span>
<span class="comment-copy">The regex101 site has the decomposed regex explanation on the side.</span>
