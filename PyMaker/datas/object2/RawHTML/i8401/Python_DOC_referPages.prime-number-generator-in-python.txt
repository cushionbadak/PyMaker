<div class="post-text" itemprop="text">
<p>I'm trying to write a program to display prime numbers in the interval from 2 to 50.  </p>
<pre><code>def primeNr(interval):
    print("Prime numbers from 2 to ",interval,"/n")

    for i in range(1, interval):
        c=0
        for j in range(1, i):
            if(i%j==0):
                c+=1
        if(c==2):
            print (i)
</code></pre>
<p>but I'm getting the wrong output (4, 9, 25, 49) when I call it (<code>primeNr(50)</code>) - I have no idea why.  </p>
<p>As an extra question - How can I make the following code return a list with the following numbers, and then let's say I want to have two variables p and q which pick a random number from the prime numbers list, like  </p>
<pre><code>p=primeNr(50)
q=primeNr(50)
</code></pre>
<p>(Yes, it's linked to RSA).</p>
</div>
<div class="post-text" itemprop="text">
<p>The second parameter to range is not inclusive, so you need to do the following: (you can check out the document here: <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer">definition of python range</a>)</p>
<pre><code>for j in range(1, i + 1)
</code></pre>
<p>There are some opportunities for improvement mathematically, for example, you only need to loop up to <code>math.sqrt</code>, and the first moment you realize a number is not a prime, just break. (still not most optimized, to further optimize, you can check out various prime sieves).</p>
<pre><code>import math

def primeNr(interval):
    print("Prime numbers from 2 to ", interval)

    #if interval itself should be included, then change this to range(2, interval + 1)
    for i in range(2, interval):
        isPrime = True
        for j in range(2, int(math.sqrt(i)) + 1):
            if i % j == 0:
                isPrime = False
                break
        if isPrime:
            print(i)

primeNr(50)
</code></pre>
<p>Below is based on some suggested edit made by @aryamccarthy (thanks for pitching the idea!). It utilizes a  particular python syntax - for...else (The else clause executes when the loop completes normally without encountering any break):</p>
<pre><code>import math

def primeNr(interval):
    print("Prime numbers from 2 to ", interval)

    for i in range(2, interval + 1):
        for j in range(2, int(math.sqrt(i)) + 1):
            if i % j == 0:
                break
        else:
            print(i)

primeNr(50)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow noreferrer"><code>range</code></a> does not include its end limit.  Thus you are finding numbers with three divisors (which are the squares of primes).</p>
</div>
<span class="comment-copy">for your 2nd question, look at the docs for <code>random.sample()</code></span>
<span class="comment-copy">The range is 2 to n.  Since 2 is the only even prime in that range, you can roughly halve the time taken by something like <code>print(2)\n for i in range(3, interval + 1 step 2):</code></span>
<span class="comment-copy">@rossum, this is true!</span>
