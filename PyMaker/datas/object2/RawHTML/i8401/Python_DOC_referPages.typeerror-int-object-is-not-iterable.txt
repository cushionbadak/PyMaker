<div class="post-text" itemprop="text">
<p>There is an error when I execute This code-<br/>
<strong>for i in len(str_list):
TypeError: 'int' object is not iterable</strong></p>
<p>How would I fix it? (Python 3)</p>
<pre><code>def str_avg(str):
    str_list=str.split()
    str_sum=0
    for i in len(str_list):
        str_sum += len(str_list[i])
    return str_sum/i
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to loop over in integer; <code>len()</code> returns one.</p>
<p>If you must produce a loop over a sequence of integers, use a <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="noreferrer"><code>range()</code> object</a>:</p>
<pre><code>for i in range(len(str_list)):
    # ...
</code></pre>
<p>By passing in the <code>len(str_list)</code> result to <code>range()</code>, you get a sequence from zero to the length of <code>str_list</code>, minus one (as the end value is not included).</p>
<p>Note that now your <code>i</code> value will be the <strong>incorrect</strong> value to use to calculate an average, because it is <strong>one smaller</strong> than the actual list length! You want to divide by <code>len(str_list)</code>:</p>
<pre><code>return str_sum / len(str_list)
</code></pre>
<p>However, there is <strong>no need</strong> to do this in Python. You loop over the elements of the <em>list itself</em>. That removes the need to create an index first:</p>
<pre><code>for elem in str_list
    str_sum += len(elem)

return str_sum / len(str_list)
</code></pre>
<p>All this can be expressed in one line with the <a href="https://docs.python.org/3/library/functions.html#sum" rel="noreferrer"><code>sum()</code> function</a>, by the way:</p>
<pre><code>def str_avg(s):
    str_list = s.split()
    return sum(len(w) for w in str_list) / len(str_list)
</code></pre>
<p>I replaced the name <code>str</code> with <code>s</code>; better not mask the built-in type name, that could lead to confusing errors later on.</p>
</div>
<div class="post-text" itemprop="text">
<p>For loops requires multiple items to iterate through like a list of [1, 2, 3] (contains 3 items/elements).</p>
<p>The len function returns a single item which is an integer of the length of the object you have given it as a parameter.</p>
<p>To have something iterate as many times as the length of an object you can provide the len functions result to a range function. This creates an iterable allowing you to iterate as any times as the length of the object you wanted.</p>
<p>So do something like</p>
<pre><code>for i in range(len(str_list)):
</code></pre>
<p>unless you want to go through the list and not the length of the list. You can then just iterate with</p>
<pre><code>for i in str_list:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def str_avg(str):
    str_list = str.split()
    str_sum = len(''.join(str_list))  # get the total number of characters in str
    str_count = len(str_list)  # get the total words

    return (str_sum / str_count)
</code></pre>
</div>
<span class="comment-copy"><code>len(str_list)</code> will give a integer, you can only iterate through the <code>iterals</code>. May be you want <code>range(len(str_list))</code>.</span>
<span class="comment-copy">Why not just use <code>for elem in str_list:</code> and <code>str_sum += len(elem)</code>? Python <code>for</code> loops are <i>for each</i> constructs, so you can loop directly over the lit of elements.</span>
