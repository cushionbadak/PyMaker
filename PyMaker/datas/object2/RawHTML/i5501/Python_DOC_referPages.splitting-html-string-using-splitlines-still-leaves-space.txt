<div class="post-text" itemprop="text">
<p>I'm trying to split the below html string (example is shortened) into a list of options. 
(The html string was sent from the frontend via ajax using innerHTML on the select)</p>
<p>However when I use <code>str.splitlines()</code> I still get left with empty string and spaces.</p>
<p>Input:</p>
<pre><code>&lt;option value="" selected=""&gt;---------&lt;/option&gt;

  &lt;option value="1"&gt;Option 1&lt;/option&gt;

  &lt;option value="2"&gt;Option 2&lt;/option&gt;
</code></pre>
<p>output:</p>
<pre><code>&lt;class 'list'&gt;: ['', '  &lt;option value="" selected=""&gt;---------&lt;/option&gt;', '', '  &lt;option value="1"&gt;Option 1&lt;/option&gt;', '', '  &lt;option value="2"&gt;Options 2&lt;/option&gt;', '', '   ']
</code></pre>
<p>Is there a better way to split up string into a list of options?</p>
<p>(note I do have the option to change the front end too if that's the simpler approach)</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, <code>str.splitlines()</code>  will not remove empty lines. The <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer">method documentation</a> includes an example that illustrates what happens:</p>
<blockquote>
<pre><code>&gt;&gt;&gt; 'ab c\n\nde fg\rkl\r\n'.splitlines()
['ab c', '', 'de fg', 'kl']
</code></pre>
</blockquote>
<p>The <code>\n\n</code> double newline separates 3 lines, one empty in the middle.</p>
<p>If you <em>must</em> split on lines and remove empty lines, leading and trailing spaces, use a regular expression:</p>
<pre><code>import re

lines = re.split('[ ]*\n+[ ]*', inputtext.strip())
</code></pre>
<p>The extra <code>str.strip()</code> call removes the initial and trailing whitespace entirely, as you'd otherwise get empty strings at the start and end.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; inputtext = '''\
...
... &lt;option value="" selected=""&gt;---------&lt;/option&gt;
...
...   &lt;option value="1"&gt;Option 1&lt;/option&gt;
...
...   &lt;option value="2"&gt;Option 2&lt;/option&gt;
...
...     '''
&gt;&gt;&gt; inputtext.splitlines()
['', '&lt;option value="" selected=""&gt;---------&lt;/option&gt;', '', '  &lt;option value="1"&gt;Option 1&lt;/option&gt;', '', '  &lt;option value="2"&gt;Option 2&lt;/option&gt;', '', '    ']
&gt;&gt;&gt; re.split('[ ]*\n+[ ]*', inputtext.strip())
['&lt;option value="" selected=""&gt;---------&lt;/option&gt;', '&lt;option value="1"&gt;Option 1&lt;/option&gt;', '&lt;option value="2"&gt;Option 2&lt;/option&gt;']
</code></pre>
<p>However, for parsing HTML, you probably want to look at a library like <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">BeautifulSoup</a> instead.</p>
</div>
<span class="comment-copy">Yes, use an HTML/XML parsing library</span>
<span class="comment-copy">Like beautifulsoup, lxml, or the standard library's xml.etree</span>
<span class="comment-copy">you want <code>[x for x in str.splitlines() if x]</code>, or a proper html parser</span>
<span class="comment-copy">note: the last item of your list cannot be real: <code>'   ''</code>: 3 quotes no escaping</span>
<span class="comment-copy">Thanks ,that works, also a variation of the above comment worked too: <code>[x.strip() for x in str.splitlines() if x]</code></span>
