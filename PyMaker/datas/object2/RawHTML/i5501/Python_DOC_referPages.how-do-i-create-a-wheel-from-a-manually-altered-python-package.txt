<div class="post-text" itemprop="text">
<p>I have a Python package I installed locally, <code>thrift-sasl</code>, but because of Python 3 compatibility issues I had to change the source code slightly, so I now have a "custom" version of <code>thrift-sasl</code>.</p>
<p>I work with conda environments, and if I create a new one where I want to use <code>thrift-sasl</code> I don't want to have to make that manual change each time.</p>
<p>Is a wheel the right way to "repackage" this library and if so, how do I do it? The wheel documentation doesn't obviously address this use case so I'm unsure.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to the comments I figured it out. I had to create my own setup.py (outside the thrift-sasl folder) with just the following in it:</p>
<pre><code>from setuptools import setup

setup(name="thrift-sasl", version="0.2.1dev", packages=["thrift_sasl"])
</code></pre>
<p>where <code>version</code> is something you can make up and <code>thrift_sasl</code> is the name of the folder that contains the source files.</p>
<p>I could then run</p>
<pre><code>python setup.py bdist_wheel
</code></pre>
<p>which creates a <code>dist</code> folder, in which is the correct wheel, which can be installed with:</p>
<pre><code>pip install path_to_wheel.whl
</code></pre>
</div>
<span class="comment-copy"><code>python setup.py bdist_wheel</code>?</span>
<span class="comment-copy">I've seen that command a few times when looking for an answer. What is setup.py in this case and where would this command be run? There's no setup.py inside the thrift-sasl site-packages folder for example...</span>
<span class="comment-copy"><a href="https://docs.python.org/3/distributing/index.html" rel="nofollow noreferrer">This is docs for Python packaging</a> that explains <code>setup.py</code> et al. And <code>thrift-sasl</code> has <a href="https://github.com/cloudera/thrift_sasl/blob/master/setup.py" rel="nofollow noreferrer">setup.py</a>. To run <code>python setup.py bdist_wheel</code> you need <a href="https://pypi.python.org/pypi/wheel" rel="nofollow noreferrer">wheel</a> package.</span>
<span class="comment-copy">Thanks, what wasn't clear was that I had to create my own setup.py that just installs the library (with amended source files).</span>
