<div class="post-text" itemprop="text">
<p>I have a file containing some json which I load and loop through the "servers" items and pass them to a <code>send_alert()</code> method (items marked "REDACTED" are not the real code/output):</p>
<pre><code>"servers": [
  {
    "address": "smtp.gmail.com", 
    "encrypted-password": "Copy and Paste from 'password' after encryption.", 
    "login-name": false, 
    "port": 587, 
    "type": "email"
  }, 
  {
    "address": "smtp.mail.yahoo.com", 
    "encrypted-password": "&lt;REDACTED&gt;", 
    "login-name": "&lt;REDACTED&gt;@yahoo.com", 
    "port": 587, 
    "type": "email"
  }]
</code></pre>
<p>I expect the gmail item to be skipped because it should render False or None for the 'login-name'... so I am really just processing the yahoo item:</p>
<pre><code>def send_alert(self, server, message, email):
    print(json.dumps(server, encoding=self.encoding,
                                 sort_keys=True, indent=2))
    print(type(server))
    print(server["login-name"])
    username = getattr(server, "login-name", None)
    enc_pass = getattr(server, "encrypted-password", None)
    address = getattr(server, "password", None)
    port = getattr(server, "port", None)
    server_type = getattr(server, "type", None)
    mess = message
    if not username:
        print(username)
        self.log.warn("incorrectly configured alert!\n:%s",
                      json.dumps(server, encoding=self.encoding,
                                 sort_keys=True, indent=2))
        return False
    if server_type.lower() == "email":
        self.send_email(username, enc_pass, address, port, mess, email)
    else:
        self.log.debug("unknown server type listed in Alerts/servers")
</code></pre>
<p>when <code>send_alert</code> is called, I receive the following output:</p>
<pre><code>{
  "address": "smtp.mail.yahoo.com",
  "encrypted-password": &lt;REDACTED&gt;,
  "login-name": "&lt;REDACTED&gt;@yahoo.com",
  "port": 587,
  "type": "email"
}
&lt;type 'dict'&gt;
&lt;REDACTED&gt;@yahoo.com
None
[11:35:39] [Wrapper.py/WARNING]: incorrectly configured alert!
:{
  "address": "smtp.mail.yahoo.com",
  "encrypted-password": &lt;REDACTED&gt;,
  "login-name": "&lt;REDACTED&gt;@yahoo.com",
  "port": 587,
  "type": "email"
}
</code></pre>
<p>I would like to use getattr, versus testing (<code>if "login-name" in server:</code>) or try-excepting the values.  I have done this in other cases with success.  However, this has me stumped.  <code>getattr()</code> is returning the default value of None, even though a valid key item seems to exist.  What is wrong?</p>
<p>I tried some of the suggested "Questions that may already have your answer
" and none have given me any help.  This one seemed promising but was either never answered or the answer (provided by the asker) does not apply to my case: <a href="https://stackoverflow.com/questions/38018475/python-3-attributeerror-even-though-attribute-exists">Python 3 AttributeError even though attribute exists</a>  (i.e., I tried to deepcopy the single dictionary item server before passing it to send_alert)</p>
<p>The output is the same for both Python 2 and 3.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#getattr" rel="noreferrer"><code>getattr</code></a> gets the attributes of an object, not the value associated with a key in a mapping.</p>
<p><code>getattr(server, 'login-name', None)</code> is trying to access the attribute <code>server.login-name</code>, not the value <code>server['login-name']</code></p>
<p>You can instead use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="noreferrer"><code>dict.get</code></a> method</p>
<pre><code>server.get('login-name', None)
</code></pre>
</div>
<span class="comment-copy">Why?, the Json.dumps part works just fine..</span>
<span class="comment-copy">The item server is already a dictionary.  The json.dumps readout is only for debug or error messages...</span>
<span class="comment-copy"><code>getattr</code> gets the attributes of an object, not the elements in a container.  You're not asking for <code>server['login-name']</code> but <code>server.login-name</code>, which doesn't exist.</span>
<span class="comment-copy">Thank you Patrick!</span>
<span class="comment-copy">It's already a dictionary, stack.  Read the real answer from Patrick Haugh</span>
