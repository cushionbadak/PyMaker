<div class="post-text" itemprop="text">
<p>The following code creates a Python package <code>a.b.c</code>, then tries to import it. It fails, but works fine if I comment out the line <code>import_module('a.b')</code> inside the try/except!</p>
<pre><code>import os.path
from importlib import import_module
import os
import shutil
import sys

shutil.rmtree('a', ignore_errors=True)

os.makedirs('a')
with open('a/__init__.py', 'w'):
    pass

try:
    # it works if i comment out the following line!
    import_module('a.b')
    pass
except ImportError:
    pass
print(sys.modules.get('a'))

os.makedirs('a/b/c')

with open('a/b/__init__.py', "w"):
    pass

with open('a/b/c/__init__.py', "w"):
    pass

import_module('a.b.c')
print('ok')
</code></pre>
<p>When i run it on my Mac (official Python 3.6 installation), I get:</p>
<pre><code>&lt;module 'a' from '/Users/chris1/Documents/a/__init__.py'&gt;
Traceback (most recent call last):
  File "/Users/chris1/Documents/foo3.py", line 35, in &lt;module&gt;
    import_module('a.b.c')
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "&lt;frozen importlib._bootstrap&gt;", line 978, in _gcd_import
  File "&lt;frozen importlib._bootstrap&gt;", line 961, in _find_and_load
  File "&lt;frozen importlib._bootstrap&gt;", line 936, in _find_and_load_unlocked
  File "&lt;frozen importlib._bootstrap&gt;", line 205, in _call_with_frames_removed
  File "&lt;frozen importlib._bootstrap&gt;", line 978, in _gcd_import
  File "&lt;frozen importlib._bootstrap&gt;", line 961, in _find_and_load
  File "&lt;frozen importlib._bootstrap&gt;", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'a.b'
</code></pre>
<p>This issue only happens on my Mac, not my Windows Python 3.6.</p>
<p>It seems that on Mac, the <code>import_module</code> is adding <code>a</code> to <code>sys.modules</code>; I think this could be connected to why the later import fails.</p>
</div>
<div class="post-text" itemprop="text">
<p>It would appear that <code>importlib</code> caches the result of your failed import of <code>a.b</code>. When you try to import <code>a.b.c</code> it already thinks <code>a.b</code> doesn't exist, even though you created it. You would have to call <code>invalidate_caches()</code> from the <code>importlib</code> package before trying to import again.</p>
<p>Reference: <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow noreferrer">https://docs.python.org/3/library/importlib.html#importlib.import_module</a></p>
<blockquote>
<p>If you are dynamically importing a module that was created since the 
  interpreter began execution (e.g., created a Python source file), you 
  may need to call <code>invalidate_caches()</code> in order for the new module to be
  noticed by the import system.</p>
</blockquote>
</div>
<span class="comment-copy">Why are you trying to import <code>a.b</code> before creating it in the first place?</span>
<span class="comment-copy">This code is an extreme simplified version of a bug I encountered where a 3rd party package was importing a module (I have no control over it).</span>
<span class="comment-copy">i can't reproduce your error on my Mac. I get the <code>ok</code> and it doesn't throw any errors.</span>
