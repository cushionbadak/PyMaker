<div class="post-text" itemprop="text">
<p>How would I go about generating a random float and then rounding that float to the nearest decimal point in Python 3.4?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want a float between 0.0 and 1.0, you can do it with:</p>
<pre><code>import random
print(int(random.random()*10) / 10.0)
</code></pre>
<p>(Note that the division is by 10.0 and not 10 to force the float operation)</p>
<p>Output:</p>
<blockquote>
<p>0.2<br/>
  0.6<br/>
  0.8<br/>
  ...</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><strong>Method 1:</strong></p>
<p>You need two things: <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">The random module</a> and the builtin function <a href="https://docs.python.org/3.3/library/functions.html#round" rel="nofollow noreferrer"><code>round()</code></a>.</p>
<p>First you need a random number. This is as easy as:</p>
<pre><code>import random
a = random.random() 
</code></pre>
<p>This will produce a number between 0 and 1.  Next use <code>round()</code> to round it:</p>
<pre><code>b = round(a, 1) # Thanks to https://stackoverflow.com/users/364696/shadowranger for the suggestion 
print(b)
</code></pre>
<p>The second argument in <code>round()</code> specifies the number of decimal places it rounds to in this case 1 which means it rounds to 1 decimal place. </p>
<p>and your done.</p>
<p><strong>Method 2:</strong></p>
<p>The other way you can do this is to use <a href="https://docs.python.org/3/library/random.html#random.randint" rel="nofollow noreferrer"><code>random.randint()</code></a> this will produce a whole number within a range that we can then divide by 10 to get it to one decimal place:</p>
<pre><code>import random # get the random module
a = random.randint(1, 9) # Use the randint() function as described in the link above
b = a / 10 # Divide by 10 so it is to 1 decimal place.
print(b)
</code></pre>
<p>and your done</p>
</div>
<span class="comment-copy">random float between which and which values?</span>
<span class="comment-copy">you can find the documentation under <a href="https://docs.python.org/3.4/library/random.html" rel="nofollow noreferrer">random</a> , <a href="https://docs.python.org/3.4/library/stdtypes.html" rel="nofollow noreferrer">round</a></span>
<span class="comment-copy">why can't you generate a random integer instead?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/6088077/how-to-get-a-random-number-between-a-float-range">How to get a random number between a float range?</a></span>
<span class="comment-copy">@MoinuddinQuadri  Thanks for the retag. Good idea.  I'll just include that in my answer.  If you don't object.</span>
<span class="comment-copy">Won't <code>int</code> always round off?</span>
<span class="comment-copy">Fixed now @Simon.</span>
<span class="comment-copy">Notes: 1. The OP specified Python 3; <code>/ 10</code> will work just fine (because <code>/</code> is true division on Py3, not floor division). 2. This doesn't round to <i>nearest</i> decimal, it rounds towards zero (if you generated <code>0.99999</code>, <code>9.9999</code> would be truncated to <code>9</code>, then division  would get you <code>0.9</code>, not the closer <code>1.0</code>).</span>
<span class="comment-copy">You don't need to multiply or divide at all. <code>round</code> takes two arguments, where the second is the number of digits to round to, so you could just do <code>b = round(a, 1)</code>, which directly rounds to a single digit after the decimal in a single step.</span>
<span class="comment-copy">@ShadowRanger Corrected</span>
