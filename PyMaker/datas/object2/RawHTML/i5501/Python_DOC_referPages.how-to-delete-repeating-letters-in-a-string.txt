<div class="post-text" itemprop="text">
<p>I am trying to write a function which will return me the string of unique characters present in the passed string. Here's my code:</p>
<pre><code>def repeating_letters(given_string):
    counts = {}
    for char in given_string:
        if char in counts:
            return char
        else: 
            counts[char] = 1
            if counts[char] &gt; 1:
                del(char)
            else:
                return char
</code></pre>
<p>I am not getting expected results with it. How can I get the desired result.</p>
<p>Here when I am passing this string as input:</p>
<pre><code>sample_input = "abcadb"
</code></pre>
<p>I am expecting the result to be:</p>
<pre><code>"abcd"
</code></pre>
<p>However my code is returning me just:</p>
<pre><code> nothing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def repeating_letters(given_string):
    seen = set()
    ret = []
    for c in given_string:
        if c not in seen:
            ret.append(c)
            seen.add(c)
    return ''.join(ret)
</code></pre>
<p>Here we add each letter to the set <code>seen</code> the first time we see it, at the same time adding  it to a list <code>ret</code>.  Then we return the <code>join</code>ed list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's the <em>one-liner</em> to achieve this if the <strong>order in the resultant string matters</strong> via using <a href="https://docs.python.org/3/library/functions.html#func-set" rel="nofollow noreferrer"><code>set</code></a> with <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><strong><code>sorted</code></strong></a> as:</p>
<pre><code>&gt;&gt;&gt; my_str = 'abcadbgeg'

&gt;&gt;&gt; ''.join(sorted(set(my_str),key=my_str.index))
'abcdge'
</code></pre>
<p>Here sorted will sort the characters in the <code>set</code> based on the first index of each in the original string, resulting in ordered list of characters.</p>
<p>However if the <strong>order in the resultant string doesn't matter</strong>, then you may simply do:</p>
<pre><code>&gt;&gt;&gt; ''.join(set(my_str))
'acbedg'
</code></pre>
</div>
<span class="comment-copy">Please provide all the elements of a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, including sample inputs, expected outputs, and actual output (the "wrong" output).</span>
<span class="comment-copy">@Swarali How are you running the code?</span>
<span class="comment-copy">Your example currently has a syntax error at the <code>for</code> loop.</span>
<span class="comment-copy"><code>return</code> exits the entire loop, stopping iteration; <code>del(char)</code> will delete the <i>variable</i> <code>char</code>, not the string element, and even if it did delete the string element, it would be UB since you're iterating and deleting at the same time; you also only ever set the array values to <code>1</code>, never greater than <code>1</code>. Perhaps you should start off on a more approachable task.</span>
<span class="comment-copy">@SwaraliKargaonkar well it's returning "a" for me <i>(unlike nothing as you mentioned in the question)</i></span>
<span class="comment-copy">(Disclaimer: this is my gut feeling,. I haven't tested it).  I thought that the <code>O(1)</code> member tests would beat the <code>O(n)</code> membership tests of strings, even considering the costs of adding elements to the set.  (Especially for string that are mostly repeated characters)</span>
<span class="comment-copy">ah so it was the performance improvement, thought that was the likely case</span>
<span class="comment-copy">@NickA <a href="https://repl.it/@Haugh/HardtofindEvenGalapagossealion" rel="nofollow noreferrer">Here's a test</a> It looks like the <code>set</code> way is indeed faster.  (Of course it will also take more memory)</span>
<span class="comment-copy">Nice trick with <code>index</code>, +1.</span>
<span class="comment-copy">what does ' ' do?</span>
<span class="comment-copy">@SwaraliKorgaonkar it joins all the string in the list with empty string <code>''</code></span>
