<div class="post-text" itemprop="text">
<p>I have a this list in the Python.</p>
<pre><code>dates= [6,15],[8,24]
</code></pre>
<p>I want to subtract values from this list. For example <code>[6,15]</code> is <code>[month,day]</code> so I want to subtract <code>15</code> to <code>10</code>. I want to get <code>[6,5]</code>, well this operation will repeat after that I want to get <code>[5, 26]</code> like this. How can I do this code?</p>
</div>
<div class="post-text" itemprop="text">
<p>You probably want to use the builtin datetime and 3rd-party <a href="https://pypi.python.org/pypi/python-dateutil" rel="nofollow noreferrer">dateutil</a> modules for this. Note you will need to specify a year, since some years have months of differing lengths (i.e leap years) -<code>parse</code> will assume the current year:</p>
<pre><code>import datetime.date as dt
from dateutil.parser import parse
from dateutil.relativedelta import relativedelta

print(parse('6/15') - relativedelta(days=10))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should be using inbuilt <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><strong><code>datetime.datetime</code></strong></a> and <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow noreferrer"><strong><code>datetime.timedelta</code></strong></a> objects to achieve this in simplified way as:</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime, timedelta
&gt;&gt;&gt; my_date_list = [6, 15]  # your current list in "[month, day]" format

# create `datetime` object using above values
# since you don't care about year, using 2018 for demonstration. But you need this.
&gt;&gt;&gt; datetime_obj = datetime(month=my_date_list[0], day=my_date_list[1], year=2018)

# timedelta object for the number of days you want the diff
&gt;&gt;&gt; diff = timedelta(days=20)

# New datetime object
&gt;&gt;&gt; new_datetime_obj = datetime_obj - diff
&gt;&gt;&gt; new_datetime_obj
datetime.datetime(2018, 5, 26, 0, 0)

# You desired format list of [month, day]
&gt;&gt;&gt; [new_datetime_obj.month, new_datetime_obj.day]
[5, 26]
</code></pre>
<p><em>PS: You shouldn't be even storing your initial and final list as "[Month, Day]" format. Simply store the list of <code>datetime</code> objects, and use it where ever you need.</em> <code>new_datetime_obj.month</code> yields the month and <code>new_datetime_obj.day</code> yields the day</p>
<p><strong>Note:</strong> You must consider about the year in your code. It is necessary in doing your computation and calculating the days. For example, the calculation for February for leap year and non-leap years yields different results.</p>
</div>
<span class="comment-copy">Please share the code your tried. And what do you mean by <i>"[6,15] is [month,day] so I want to subtract 15 to 10"</i>. Why you want to subtract 10 if it is day?</span>
<span class="comment-copy">How do you know the number of days in a month without knowing the year?</span>
<span class="comment-copy">Ohhh... probably you mean you want to subtract any random number which denotes the day, and you want corresponding date in [month, day] format. Is that correct? If yes, then take a look at <code>datetime</code> module. Instead of creating a <code>[month, day]</code>  list, it will be easier for you to perform this using <code>datetime</code> object</span>
<span class="comment-copy">Why don't you use a specialized object for dealing with dates, like <code>datetime</code> module provides?</span>
<span class="comment-copy">Look at <code>datetime</code>, but <code>date</code> and <code>timedelta</code> will still only work with a year.</span>
<span class="comment-copy">You may mean <code>print(parse(...</code></span>
<span class="comment-copy">Thanks for your help but How can I do without datetime library?</span>
<span class="comment-copy">@Tommy.pillow unfortunately I don't know any simple way to achieve it without any library. What I believe is it is gonna require a lot of code.</span>
<span class="comment-copy"><code>datetime</code> is in the standard library, so you don't need to install anything on top of your base python distribution.</span>
