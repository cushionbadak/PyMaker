<div class="post-text" itemprop="text">
<p>I would like to know how to concatenate a string to the end of all elements in a list.</p>
<p><strong>For example:</strong></p>
<pre><code>List1 = [ 1 , 2 , 3 ]
string = "a"

output = ['1a' , '2a' , '3a']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>rebuild the list in a list comprehension and use <code>str.format</code> on both parameters</p>
<pre><code>&gt;&gt;&gt; string="a"
&gt;&gt;&gt; List1 = [ 1 , 2 , 3 ]
&gt;&gt;&gt; output = ["{}{}".format(i,string) for i in List1]
&gt;&gt;&gt; output
['1a', '2a', '3a']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>L = [ 1, 2, 3 ]
s = "a"
print map(lambda x: str(x)+s, L);
</code></pre>
<p><strong>output</strong>
['1a', '2a', '3a']</p>
</div>
<div class="post-text" itemprop="text">
<p>In one line:</p>
<pre><code>&gt;&gt;&gt; lst = [1 , 2 , 3]
&gt;&gt;&gt; my_string = 'a'
&gt;&gt;&gt; [str(x) + my_string for x in lst]
['1a', '2a', '3a']
</code></pre>
<p>You need to convert the integer into strings and create a new strings for each element. A <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> works well for this.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>map</code>:</p>
<pre><code>List1 = [ 1 , 2 , 3 ]
string = "a"
new_list = list(map(lambda x:"{}{}".format(x, string), List1))
</code></pre>
<p>Output:</p>
<pre><code>['1a', '2a', '3a']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>result = map(lambda x:str(x)+'a',List1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>List1 = [ 1 , 2 , 3 ]
str1="a"
new_list = []
for item in List1:
    new_list.append(str(item)+str1)
print(new_list)
</code></pre>
<p>Convert each element in the list to string and then add the required string to each element of the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>A 1 liner:</p>
<pre><code>List1= [s + a for s in List1]
</code></pre>
</div>
<span class="comment-copy">loop through the list and concatenate <code>a</code> to each item and dont forget to caste your int into a string</span>
<span class="comment-copy">@HerryPotei I thought there was a 1 liner answer to it, I want a simple answer.</span>
<span class="comment-copy"><code>output = ["".join([string,str(i)]) for i in List1]</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2050637/appending-the-same-string-to-a-list-of-strings-in-python">Appending the same string to a list of strings in Python</a></span>
<span class="comment-copy">@VasilisG. your answer inserts the string into new elements in the list, it's not good. I just want to concatenate the string to the end of the existing elements of the list.</span>
<span class="comment-copy">This is the good answer, and simplest, thank you.</span>
<span class="comment-copy">this is python 2 only, though.</span>
<span class="comment-copy"><code>map</code> already returns list type, so may you can remove<code>list()</code></span>
<span class="comment-copy">ohh that's something reduces complexion btw thanks.</span>
<span class="comment-copy">@sanit: no, not in python 3 it doesn't</span>
<span class="comment-copy">aahh, possibly. I am still in 2.7.</span>
<span class="comment-copy">OP wants a one-liner.</span>
