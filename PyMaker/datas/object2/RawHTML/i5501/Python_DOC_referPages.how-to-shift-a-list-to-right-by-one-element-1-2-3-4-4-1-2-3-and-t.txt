<div class="post-text" itemprop="text">
<p>I am making a basic bubble sort and I am still quite new to programming and so my code is probably not that efficient or well designed. My Code:</p>
<pre><code>elif n == -1:
        if numbers[n] &gt; numbers[m]:
            for i in range(len(numbers) - 1):
                numbers2[i + 1] = numbers[i] and numbers[i] != numbers2[i + 1]


            print (numbers)
            print (numbers2)
            print (n)
            print (m)
            print (i)

            if i == len(numbers)-1:
                numbers = numbers2
                n += 1
                m += 1
</code></pre>
<p>I have come across an error in the loop as if you enter: 142, 324, 23123, 645, 643 it will push 23123 to the right but the rest of the numbers will be in descending order. Now because this was a problem I tried to solve this by making a new if statement to check the last and first number, then it would have to put the last number to the front [2, 1, 3] --&gt; [3, 2, 1]. But when doing this i used a for loop without the: - and numbers[i] != numbers2[i + 1] - (see problem), this ended up changing the whole line of numbers into the first number in the list.</p>
<pre><code>['23', '431', '63451', '234', '435']

['23', '23', '63451', '234', '435']
['23', '23', '63451', '234', '435']
-1
0
0
['23', '23', '23', '234', '435']
['23', '23', '23', '234', '435']
-1
0
1
['23', '23', '23', '23', '435']
['23', '23', '23', '23', '435']
-1
0
2
['23', '23', '23', '23', '23']
</code></pre>
<p>I added the second list but then I tried the code above and i get this error:</p>
<pre><code>if numbers[n] &gt; numbers[m]:
</code></pre>
<p>TypeError: '&gt;' not supported between instances of 'bool' and 'str'</p>
<p>So I searched to see if I could put a but in instead of the and but I found nothing. Sorry for being a long question.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simplest way to achieve this is via using <strong><em>list slicing</em></strong> feature as:</p>
<p><strong>Move Right</strong></p>
<pre><code>&gt;&gt;&gt; my_list = [1, 2, 3, 4, 5]

&gt;&gt;&gt; my_list[-1:] + my_list[:-1]
[5, 1, 2, 3, 4]
</code></pre>
<p><strong>Move Left</strong></p>
<pre><code>&gt;&gt;&gt; my_list = [1, 2, 3, 4, 5]

&gt;&gt;&gt; my_list[1:] + my_list[:1]
[2, 3, 4, 5, 1]
</code></pre>
<p>You can join these logic in a single <strong>custom function to shift left and right</strong> as:</p>
<pre><code>def shift_list(my_list, shift_by):
    return my_list[shift_by:] + my_list[:shift_by]
</code></pre>
<p>In the above <code>shift_list</code> function, for:</p>
<ul>
<li><strong>shifting left</strong>: pass positive integer <code>n</code> to shift left by <code>n</code> steps</li>
<li><strong>shifting right</strong>: pass negative integer <code>-n</code> to shift right by <code>n</code> steps</li>
</ul>
<p>Sample Run:</p>
<pre><code>&gt;&gt;&gt; my_list = [1, 2, 3, 4, 5]

# Shift left by "1" step
&gt;&gt;&gt; shift_list(my_list, 1)
[2, 3, 4, 5, 1]

# Shift left by "2" step
&gt;&gt;&gt; shift_list(my_list, 2)
[3, 4, 5, 1, 2]

# Shift right by "1" step
&gt;&gt;&gt; shift_list(my_list, -1)
[5, 1, 2, 3, 4]

# Shift right by "2" step
&gt;&gt;&gt; shift_list(my_list, -2)
[4, 5, 1, 2, 3]
</code></pre>
<hr/>
<p>As an <strong><em>alternative</em></strong>, you may also use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><strong><code>itertools.cycle</code></strong></a> with <em>list comprehension</em> and <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><strong><code>next</code></strong></a>. It is little complicated than above solution, but still a way simpler than yours:</p>
<p><strong>Move Right</strong></p>
<pre><code>&gt;&gt;&gt; from itertools import cycle
&gt;&gt;&gt; my_list = [1, 2, 3, 4, 5]

&gt;&gt;&gt; my_cycle = cycle(my_list[::-1])
&gt;&gt;&gt; [next(my_cycle) for i in range(len(my_list)+1)][::-1][:-1]
[5, 1, 2, 3, 4]
</code></pre>
<p><strong>Move Left</strong></p>
<pre><code>&gt;&gt;&gt; from itertools import cycle
&gt;&gt;&gt; my_list = [1, 2, 3, 4, 5]

&gt;&gt;&gt; my_cycle = cycle(my_list)
&gt;&gt;&gt; [next(my_cycle) for i in range(len(my_list)+1)][1:]
[2, 3, 4, 5, 1]
</code></pre>
</div>
<span class="comment-copy">Please take some time to create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> with only the code that's directly relevant to your question. Showing us all your code makes for an overly long question.</span>
<span class="comment-copy">First of all, put replace <code>input(...)</code> with <code>int(input(...))</code> to get numbers, not strings.</span>
<span class="comment-copy">Please read @JohnKugelman's message. You didn't ask about this, but you may have a problem here (a Python gotcha): <code>numbers=[] numbers2=numbers numbers.append(1) print(numbers2)</code></span>
