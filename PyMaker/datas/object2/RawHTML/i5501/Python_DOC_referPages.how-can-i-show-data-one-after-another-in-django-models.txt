<div class="post-text" itemprop="text">
<p>I am Using Django Framework in my project. I want the results that start with query first then results that contain query next but when I am using the following code it is giving mixed results instead of one after other. How can I achieve My requirement</p>
<pre><code>collections = TokenCollection.objects.filter(Q(title__istartswith=query) | Q(title__icontains=query))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this    </p>
<pre><code>from django.db.models import Q, Case, Value, IntegerField


TokenCollection.objects.filter(
    Q(title__istartswith=query) | Q(title__icontains=query)
).annotate(
    c=Case(
        When(title__istartswith=query, then=Value(1)),
        When(title__icontains=query, then=Value(2)),
        output_field=IntegerField())
).order_by('c')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a> might suit your needs, but you might run into performance problems if the returned dataset is large:</p>
<pre><code>from itertools import chain

collections = list(chain(
    TokenCollection.objects.filter(title__istartswith=query),
    TokenCollection.objects.filter(title__icontains=query)
                           .exclu‌​de(title__istartswit‌​h=query)
))
</code></pre>
</div>
<span class="comment-copy">When asking for records from a data repository, the order is usually undefined unless you specify it yourself. You can do that by sorting using the django QuerySet API, or by getting 2 lists back and joining them in python code. Both will work, but the database is optimised for large select/sort operations so is usually the preferred choice.</span>
<span class="comment-copy">it give doubles in the result</span>
<span class="comment-copy">That might be true, but you did not specify your requirement that duplicates should be removed. There are different ways this can be done, the 'right' one will depend on what you want.</span>
<span class="comment-copy">not maybe  it is always true, look on the condition the same field</span>
<span class="comment-copy">You can simply exclude the condition of the first queryset like this: <code>TokenCollection.objects.filter(title__icontains=query).exclude(title__istartswith=query)</code></span>
<span class="comment-copy">i am not OP, i just try to help you</span>
