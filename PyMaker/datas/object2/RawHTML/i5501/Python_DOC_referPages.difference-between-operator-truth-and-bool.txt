<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/49009870/what-are-the-differences-between-bool-and-operator-truth">What are the differences between bool() and operator.truth()?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>In Python, <code>operator.truth</code> and <code>bool</code> can both convert an object to a boolean value.</p>
<p>What's the difference? When should I use each of them?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/operator.html#operator.truth" rel="nofollow noreferrer">documentation for <code>operator.truth()</code></a> is quite clear:</p>
<blockquote>
<p>This is equivalent to using the <code>bool</code> constructor.</p>
</blockquote>
<p>So there is <em>no difference</em>. The only reason that <code>operator.truth</code> exists is for the module to be complete. </p>
<p>Use it when it is more convenient for your code than <code>bool</code>; for example, when your code already switches between various <code>operator</code> callables dynamically (say, based on a string mapping).  </p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/operator.html#operator.truth" rel="nofollow noreferrer">official documentation</a>:</p>
<blockquote>
<p><strong>operator.truth(obj)</strong> </p>
<p>Return True if obj is true, and False otherwise. This is equivalent to using the bool constructor.</p>
</blockquote>
<p>So both operations are equivalent. </p>
</div>
<span class="comment-copy">On even days the one, on odd days the other. It doesn't matter according to <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">their description</a>.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/operator.html#operator.truth" rel="nofollow noreferrer"><i>"This is equivalent to using the <code>bool</code> constructor."</i></a> (Although it doesn't <a href="https://github.com/python/cpython/blob/3.6/Lib/operator.py#L57" rel="nofollow noreferrer">actually</a> <i>use</i> it.) So just pick one.</span>
<span class="comment-copy">@johnrsharpe: thatâ€™s the pure Python backstop. The C implementation uses the very same function the <code>bool</code> type uses to convert arguments to a Boolean value.</span>
<span class="comment-copy">There is very little <i>opinion based</i> material in this question, so I reopened it. If people take issue with the <i>when should I use each</i> part, feel free to reword it.</span>
