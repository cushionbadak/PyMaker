<div class="post-text" itemprop="text">
<p>I am attempting to loop through a matrix, called <code>lattice</code>, randomly using the <code>randrange</code> function. My matrix is an 8x8 and prints fine.  However when I attempt to randomly loop through each element of this matrix I am getting the error </p>
<blockquote>
<p>'TypeError: 'int' object is not iterable'</p>
</blockquote>
<p>Due the upper limit of the range, <code>len(mymatrix)</code>. I'm unsure as to why this is. </p>
<pre><code>   for R1 in randrange(0, (len(lattice)):
        for R2 in randrange(0, len(lattice)):
            H = -j*lattice[R1,R2]*(lattice[R1+1,R2],lattice[R1-1,R2], lattice[R1,R2+1],lattice[R1,R2-1]) +h*lattice[R1,R2]
            H_flip = -j*-1*mymatrix[R1,R2]*(lattice[R1+1,R2],lattice[R1-1,R2], lattice[R1,R2+1],lattice[R1,R2-1]) +h*lattice[R1,R2]
    print lattice[R1,R2]
</code></pre>
<p>I have not used <code>randrange</code> in a loop before, is it perhaps that it can't be used the same way range is used? I've also tried to set the range as: </p>
<pre><code>for R1 in randrange(0, len(lattice)-1)
</code></pre>
<p>I thought maybe the length was one too long but to no avail.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are correct. <code>randrange()</code> returns a single element from within the given range. On the other hand, <code>range()</code> returns a list of elements, and is therefore iterable.</p>
<p>You could try something like this:</p>
<pre><code>stop = randrange(0, len(lattice)-1)
start = randrange(0, stop)
for R1 in randrange(start, stop):
     for...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The method <code>randrange</code> does not return a range, but a randomly selected <strong>element</strong> instead as can be read in the <a href="https://docs.python.org/3/library/random.html#random.randrange" rel="nofollow noreferrer">doc</a>.</p>
<blockquote>
<p><code>random.randrange(start, stop[, step])</code></p>
<p>Return a randomly selected element from <code>range(start, stop, step)</code>. This is equivalent to <code>choice(range(start, stop, step))</code>, but doesnâ€™t actually build a range object.</p>
</blockquote>
<p>That is why you get a <code>TypeError</code>, you are indeed trying to loop over an <code>int</code>.</p>
<p>I would not recommend looping in a random order over your lists, but if it turns out to be necessary, I would use <code>shuffle</code>.</p>
<pre><code>from random import shuffle

# shuffle mutates your list so we need to do the following
rows, cols = range(len(lattice)), range(len(lattice))
shuffle(rows)
shuffle(cols)

for R1 in rows:
        for R2 in cols:
            # ...
</code></pre>
<p>Note that in Python3, you would need to cast your <code>range</code> to a <code>list</code> first.</p>
</div>
<span class="comment-copy">Please post the some more details of your code as well as the the full error.</span>
<span class="comment-copy">Just read the docs what <code>random.randrange</code> returns and compare it to what <code>range</code> returns.</span>
<span class="comment-copy">Why are you trying to loop <i>randomly</i>?</span>
