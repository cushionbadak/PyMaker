<div class="post-text" itemprop="text">
<p>I have pulled JSON files from an API using the command line. I am hit with decode errors when attempting to load the file using the JSON module. As far as I can tell the files are definitely JSON. </p>
<p>When I copy paste the JSON file to a new text file and save it as a JSON file, I can parse the file no problem. I would like to avoid manually copy, pasting, resaving all these files every time i need to run my script.</p>
<p>Sample of Json:</p>
<pre><code>{
    "ReservedDBInstancesOfferings": [
        {
            "MultiAZ": true, 
            "OfferingType": "Partial Upfront", 
            "FixedPrice": 280.0, 
            "UsagePrice": 0.0, 
            "ReservedDBInstancesOfferingId": "001b899a-be28-489b-9a71-4ff7406d2107", 
            "RecurringCharges": [
                {
                    "RecurringChargeAmount": 0.032, 
                    "RecurringChargeFrequency": "Hourly"
                }
            ], 
            "ProductDescription": "sqlserver-se(byol)", 
            "Duration": 31536000, 
            "DBInstanceClass": "db.t2.small", 
            "CurrencyCode": "USD"
        }, 
</code></pre>
<p>How i am opening:</p>
<pre><code> with open('C:\\Users\\xxx\\PycharmProjects\\Pricing_File\\CLI Files\\'+inputFile+'-cli.json', 'r') as f:
        rawData = json.load(f)
</code></pre>
<p>Error: </p>
<pre><code>    Traceback (most recent call last):
      File "C:/Users/xxx/PycharmProjects/Pricing_File/RDS_CLI_JSON_parse_script.py", line 4, in &lt;module&gt;
        data = json.load(f)
      File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\json\__init__.py", line 299, in load
        parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
      File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\json\__init__.py", line 354, in loads
        return _default_decoder.decode(s)
      File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\json\decoder.py", line 339, in decode
        obj, end = self.raw_decode(s, idx=_w(s, 0).end())
      File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\json\decoder.py", line 357, in raw_decode
        raise JSONDecodeError("Expecting value", s, err.value) from None
    json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

As a reminder, I literally copy paste the json file into a new file and it works.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think I've got it. Most likely, the original file is saved in <em>Unicode</em> - also referred to as <a href="https://en.wikipedia.org/wiki/Wide_character" rel="nofollow noreferrer">[Wikipedia]: Wide character</a> (<code>wchar_t</code> - check <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff381407(v=vs.85).aspx" rel="nofollow noreferrer">[MSDN]: Working with Strings</a> for more details) in <em>Win</em> world.</p>
<p>To demonstrate, I created 3 files containing the <em>json</em> below, but each having something different:</p>
<pre><code>{
    "dummy": 0
}
</code></pre>
<ul>
<li><em>ux.jsn</em> - <em>Ux</em> style <em>eoln</em> (<code>\n</code> or <em>0x0A</em>)</li>
<li><em>win.jsn</em> - <em>Win</em> style <em>eoln</em> (<code>\r\n</code> or <em>0x0D 0x0A</em>)</li>
<li><em>uc.jsn</em> - The <strong>Wide character</strong> format that I talked about (the <em>eoln</em>s are <em>Win</em> style, but that's irrelevant)</li>
</ul>
<p>Then, some code that for each one of the files:</p>
<ul>
<li>Opens it in <em>binary</em> (or <em>raw</em>) mode, gets its content and displays it (using <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer">[Python]: <strong>repr</strong>(<em>object</em>)</a>) on screen</li>
<li>Opens it in normal mode and tries to load its <em>json</em> content (and display it on screen as well)</li>
</ul>
<p><em>code.py</em>:</p>
<pre><code>import json


FILE_NAMES = [
    "ux.jsn",
    "win.jsn",
    "uc.jsn",
]


def main():
    for file_name in FILE_NAMES:
        print("\n{}:".format(file_name))
        with open(file_name, "rb") as f:
            raw_content = f.read()
            print("    Size: {} - [{}]".format(len(raw_content), repr(raw_content)))
        with open(file_name, "r") as f:
            print("    {}".format(json.load(f)))


if __name__ == "__main__":
    main()
</code></pre>
<p><strong>Output</strong> (running <em>Python3.6.2x86</em> on <em>W10x64</em>):</p>
<blockquote>
<pre><code>E:\Work\Dev\StackOverflow\q48194775&gt;"c:\Install\x86\Python\Python\3.6\python.exe" code.py

ux.jsn:
    Size: 19 - [b'{\n    "dummy": 0\n}\n']
    {'dummy': 0}

win.jsn:
    Size: 22 - [b'{\r\n    "dummy": 0\r\n}\r\n']
    {'dummy': 0}

uc.jsn:
    Size: 44 - [b'{\x00\r\x00\n\x00 \x00 \x00 \x00 \x00"\x00d\x00u\x00m\x00m\x00y\x00"\x00:\x00 \x000\x00\r\x00\n\x00}\x00\r\x00\n\x00\r\x00\n\x00']
Traceback (most recent call last):
  File "code.py", line 23, in &lt;module&gt;
    main()
  File "code.py", line 19, in main
    print("    {}".format(json.load(f)))
  File "c:\Install\x86\Python\Python\3.6\lib\json\__init__.py", line 299, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File "c:\Install\x86\Python\Python\3.6\lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "c:\Install\x86\Python\Python\3.6\lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "c:\Install\x86\Python\Python\3.6\lib\json\decoder.py", line 355, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
</code></pre>
</blockquote>
<p><strong>Conclusions</strong>:</p>
<ul>
<li>Although they apparently have the same content, it's not the case. The faulty file has twice the size, that is because each character is represented on 2 bytes (and since they are all regular <em>ASCII</em> characters, the 1<sup>st</sup> byte is <code>\0</code> or <em>0x00</em>)</li>
<li>For some reason, <em>json</em> does not like that and throws an error when trying to parse the content (although the errors are a little bit different)</li>
<li>When you copy/paste the file, <em>Win</em> automatically converts it to a <em>normal</em> format and therefore <em>json</em> is able to parse it afterwards</li>
</ul>
<p>As a fix, I converted it using a dummy method (note that if the <em>json</em> content may contain legitimate <code>\0</code>s, they <strong>will be removed as well</strong>), although I'm sure there are tools that do this properly:</p>
<blockquote>
<pre><code>E:\Work\Dev\StackOverflow\q48194775&gt;"c:\Install\x86\Python\Python\3.6\python.exe"
Python 3.6.2 (v3.6.2:5fd33b5, Jul  8 2017, 04:14:34) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; with open("uc.jsn", "rb") as f:
...     raw_content = f.read()
...
&gt;&gt;&gt; with open("uc0.jsn", "wb") as f:
...     f.write(raw_content.replace(b"\0", b""))
...
22
&gt;&gt;&gt; import json
&gt;&gt;&gt; with open("uc0.jsn", "r") as f:
...     print("    {}".format(json.load(f)))
...
    {'dummy': 0}
&gt;&gt;&gt; with open("uc.jsn", "r") as f:
...     print("    {}".format(json.load(f)))
...
Traceback (most recent call last):
# The rest of the traceback 
</code></pre>
</blockquote>
</div>
<span class="comment-copy">The error clearly indicates the line number and character position in the stream. What <i>OS</i> are you on? I suspect an <i>EOLN</i> mismatch.</span>
<span class="comment-copy">Windows 10 Enterprise 2016.      in raw_decode         raise JSONDecodeError("Expecting value", s, err.value) from None     json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)</span>
<span class="comment-copy">Please add the <i>json</i>, full traceback and code that throws the exception, as described in <a href="https://stackoverflow.com/help/mcve">[SO]: mcve</a>, <i>Python</i> version. <i>EOLN</i> stands for <i>end of line</i>. Although <i>json</i> module should be proof to such mismatches, you might have <i>Ux</i> style line terminators in your file (or might be other "invisible" chars)?</span>
<span class="comment-copy">updated the original post.</span>
<span class="comment-copy">How do you open <code>f</code>? Are you using binary mode?</span>
<span class="comment-copy">Was this the reason of your error?</span>
