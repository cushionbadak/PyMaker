<div class="post-text" itemprop="text">
<p>I am trying to figure out how to fetch a single value from a UserID and print it in the console. My current piece of code keeps returning "None" even though there is a value for Currency for the UserID I am searching.</p>
<pre><code>cursor.execute("SELECT Currency FROM ServerUsers WHERE USERID = %s" % (userid))
    if cursor.fetchone():
        a = cursor.fetchone()
        print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you call <code>execute</code>, the results are computed and fetched, and you use <code>fetchone</code>/<code>fetchmany</code>/<code>fetchall</code> to retrieve them. </p>
<p>In your case, your query returns a <em>single</em> row as the result, so calling <code>cursor.fetchone</code> in the <code>if</code> causes the result to be fetched and subsequently thrown away, so another call to <code>fetchone</code> will yield <code>None</code> as the pointer has already advanced past the only row in the result set.</p>
<p>The idiomatic sqlite way of checking if data exists, is to query a row, and test its truthiness - </p>
<pre><code>result = cursor.fetchone()
if result:
    print(result)
</code></pre>
</div>
<span class="comment-copy">You have (a) unbalanced parentheses and (b) a great chance for SQL injection attacks. Don't use % string formatting on SQL queries!</span>
<span class="comment-copy">Hi, thank you. I fixed the parantheses but it still returns none. I am not worried about sql injection attacks since it's just a personal project between a few friends.</span>
<span class="comment-copy">Exactly that attitude had created many large IT resisters. So fix your query arguments as shown at <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute" rel="nofollow noreferrer">docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute</a> .</span>
<span class="comment-copy">How many rows do you expect from this result?</span>
<span class="comment-copy">You're calling <code>fetchone()</code> in the <code>if</code> statement, throwing that result away, then calling <code>fetchone()</code> again.</span>
<span class="comment-copy">I was today years old when I learned that the word "truthiness" existed! :') - Cheers for the answer here, didn't realize you could check the true/false of the object like that.</span>
