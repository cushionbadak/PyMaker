<div class="post-text" itemprop="text">
<p>If I do:</p>
<pre><code>def foo():
     pass

type(foo)
</code></pre>
<p>I get:</p>
<pre><code>&lt;class 'function'&gt;
</code></pre>
<p>Then when I do:</p>
<pre><code>print(function.__dict__)
</code></pre>
<p>I get:</p>
<pre><code>NameError: name 'function' is not defined
</code></pre>
<p>But if I do:</p>
<pre><code>print(str.__dict__)
</code></pre>
<p>I get the <code>__dict__</code>  of the class <code>str</code>.</p>
<p>Why can I access the <code>__dict__</code>  of the class <code>str</code> but can't  access the <code>__dict__</code> of the class <code>function</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because the <code>function</code> type is not available as a <a href="https://docs.python.org/3/library/functions.html#built-in-funcs" rel="nofollow noreferrer">built-in</a>. </p>
<p>There are plenty of object definitions defined by the Python core engine that don't need to clutter up a namespace that is available everywhere. You won't normally be using that object directly anyway. The list of objects that are available everywhere (or via the <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer"><code>builtins</code> module</a>) is carefully curated to only contain things that you'd regularly need when writing Python code.</p>
<p>You still can access the type, as you've seen with <code>type()</code>, so use that:</p>
<pre><code>&gt;&gt;&gt; type(foo)
&lt;class 'function'&gt;
&gt;&gt;&gt; type(foo).__dict__
mappingproxy({'__repr__': &lt;slot wrapper '__repr__' of 'function' objects&gt;, '__call__': &lt;slot wrapper '__call__' of 'function' objects&gt;, '__get__': &lt;slot wrapper '__get__' of 'function' objects&gt;, '__new__': &lt;built-in method __new__ of type object at 0x102e5f030&gt;, '__closure__': &lt;member '__closure__' of 'function' objects&gt;, '__doc__': &lt;member '__doc__' of 'function' objects&gt;, '__globals__': &lt;member '__globals__' of 'function' objects&gt;, '__module__': &lt;member '__module__' of 'function' objects&gt;, '__code__': &lt;attribute '__code__' of 'function' objects&gt;, '__defaults__': &lt;attribute '__defaults__' of 'function' objects&gt;, '__kwdefaults__': &lt;attribute '__kwdefaults__' of 'function' objects&gt;, '__annotations__': &lt;attribute '__annotations__' of 'function' objects&gt;, '__dict__': &lt;attribute '__dict__' of 'function' objects&gt;, '__name__': &lt;attribute '__name__' of 'function' objects&gt;, '__qualname__': &lt;attribute '__qualname__' of 'function' objects&gt;})
</code></pre>
<p>You can also access it via the <code>types</code> module, as the <a href="https://docs.python.org/3/library/types.html#types.FunctionType" rel="nofollow noreferrer"><code>types.FunctionType</code> name</a>:</p>
<pre><code>&gt;&gt;&gt; types.FunctionType
&lt;class 'function'&gt;
</code></pre>
</div>
<span class="comment-copy">Because <code>function</code> isn't a built-in name.</span>
