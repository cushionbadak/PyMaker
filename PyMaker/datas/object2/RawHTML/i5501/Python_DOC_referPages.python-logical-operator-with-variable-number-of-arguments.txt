<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19389490/how-do-pythons-any-and-all-functions-work">How do Python's any and all functions work?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>is there a way in python to check the logical operator AND with variable number of arguments. for example:</p>
<pre><code>def and_function(a,b,c,d,e....):
    if a and b and c and d and c and d and e and . and . is True:
        return True
</code></pre>
<p>i see that this is possible using *args function and using a counter. But wish to know if there is a better way of doing it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You basically want <code>all()</code> but to <em>customize</em> it you can use this:</p>
<pre><code>def and_function(*args):
    return all([a &gt; 5 for a in args])
</code></pre>
</div>
<span class="comment-copy">Such <code>and_function</code> exists already: <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all()</code></a>.</span>
<span class="comment-copy">Related: <a href="https://stackoverflow.com/questions/10666163/how-to-check-if-all-elements-of-a-list-matches-a-condition">How to check if all elements of a list matches a condition?</a></span>
<span class="comment-copy">Also related due to <code>x and y and z == something</code> pattern: <a href="https://stackoverflow.com/questions/15112125/how-do-i-test-multiple-variables-against-a-value">How do I test multiple variables against a value?</a></span>
<span class="comment-copy">This is the code that i have tried.</span>
<span class="comment-copy">Note that in case of <code>any()</code> and <code>all()</code> it's better not to first generate a list and then pass that as the iterable, because both can short circuit if given a generator, but your list has to be generated fully.</span>
