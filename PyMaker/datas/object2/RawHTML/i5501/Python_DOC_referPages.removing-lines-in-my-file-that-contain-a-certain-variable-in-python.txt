<div class="post-text" itemprop="text">
<p>My test.txt looks like</p>
<pre><code>bear
goat
cat
</code></pre>
<p>what im trying to do is take the first line of it, which is bear and find and lines that contain it then delete them, the problem here is when I run my code all it does is delete all of the contents of my output file.</p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>import linecache
must_delete = linecache.getline('Test.txt', 1)
with open('output.txt','r+') as f:
    data = ''.join([i for i in f if not i.lower().startswith(must_delete)])
    f.seek(0)                                                         
    f.write(data)                                                     
    f.truncate()  </code></pre>
</div>
</div>
</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is in-place editing, meaning read and write at the same time, line by line. Python has the <a href="https://docs.python.org/3/library/fileinput.html" rel="nofollow noreferrer"><code>fileinput</code></a> module which offers this ability.</p>
<pre><code>from __future__ import print_function
import linecache
import fileinput

must_delete = linecache.getline('Test.txt', 1)

for line in fileinput.input('output.txt', inplace=True):
    if line != must_delete:
        print(line, end='')
</code></pre>
<h1>Notes</h1>
<ul>
<li>The calls to <code>fileinput.input()</code> includes the parameter <code>inplace=True</code> which specifies in-place editing</li>
<li>Within the with block, because of the in-place editing, the <code>print()</code> function (by magic) will print to the file, not your console.</li>
<li><p>We need to call <code>print()</code> with <code>end=''</code> to avoid extra line-ending char(s). Alternatively, we can omit the <code>from __future__ ...</code> line and do use the print statement like this (note the ending comma):</p>
<pre><code>print line,
</code></pre></li>
</ul>
<h1>Update</h1>
<p>If you want to detect the presence of the first line (e.g. 'bear') then there are two things more to do:</p>
<ol>
<li>In previous code, I did not strip new line from <code>must_delete</code>, so it might looks like <code>bear\n</code>. Now we need to strip off the new line in order to test anywhere within the line</li>
<li>Instead of comparing the line with <code>must_delete</code>, we must do a partial string comparison: <code>if must_delete in line:</code></li>
</ol>
<p>Putting it all together:</p>
<pre><code>from __future__ import print_function
import linecache
import fileinput

must_delete = linecache.getline('Test.txt', 1)
must_delete = must_delete.strip()  # Additional Task 1

for line in fileinput.input('output.txt', inplace=True):
    if must_delete not in line:  # Additional Task 2
        print(line, end='')
</code></pre>
<h1>Update 2</h1>
<pre><code>from __future__ import print_function
import linecache
import fileinput

must_delete = linecache.getline('Test.txt', 1)
must_delete = must_delete.strip()
total_count = 0  # Total number of must_delete found in the file

for line in fileinput.input('output.txt', inplace=True):
    # How many times must_delete appears in this line
    count = line.count(must_delete)
    if count &gt; 0:
        print(line, end='')
    total_count += count  # Update the running total

# total_count is now the times must_delete appears in the file
# It is not the number of deleted lines because a line might contains
# must_delete more than once
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>You read a variable <code>must_delete</code>, but you parse with <code>mustdelete</code>.</li>
<li>You walk through the output file (i for i in f); I think you want to scan the input.</li>
<li>You truncate the file at the given location; are you sure that's what you want to do <em>inside</em> the loop?</li>
</ol>
</div>
<span class="comment-copy"><code>i for i in f</code> is the output file.   Should be linecache.</span>
<span class="comment-copy">Could you show me an example Iâ€™m very new to python</span>
<span class="comment-copy">@OPP: Individual tutorials are beyond the scope of Stack Overflow.  This usually suggests that what you need is half an hour with a local tutor or walk through a tutorial, rather than Stack Overflow.</span>
<span class="comment-copy">how can think work if my output file has multiple things per line and then contains  the word"bear"</span>
<span class="comment-copy">So, if the first line is 'bear', you want to remove lines with 'bear cat', 'big bear', ...?</span>
<span class="comment-copy">Yes. that's exactly what im looking for</span>
<span class="comment-copy">Hai Vu Yes. that's exactly what im looking for</span>
<span class="comment-copy">Please see my update</span>
<span class="comment-copy">Could you show me how. Im very new to python</span>
<span class="comment-copy">What loop are you referring to?</span>
