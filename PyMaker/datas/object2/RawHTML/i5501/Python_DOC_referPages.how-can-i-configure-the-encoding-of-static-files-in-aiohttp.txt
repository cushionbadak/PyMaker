<div class="post-text" itemprop="text">
<p>How can I ensure that my static files served during development are using utf-8?</p>
<p>I have a static handler like so:</p>
<pre><code>app.router.add_static('/static', MY_STATIC_DIR)
</code></pre>
<p>But, I've noticed that utf-8 characters show up garbled in the browser during development. The same files show up fine when served via nginx in production.</p>
<p>EDIT:</p>
<p>The content in question lives in a webpack .js file. I've tested serving this bundle with both nginx and node and the problem goes away. But, to keep development simple, I'd like to use just aiohttp rather than having to spin up a second process.</p>
</div>
<div class="post-text" itemprop="text">
<p>Content encoding is determined by <code>Content-Type</code> header which in turn uses <a href="https://docs.python.org/3/library/mimetypes.html?highlight=guess_type#mimetypes.guess_type" rel="nofollow noreferrer"><code>mimetypes.guess_type</code></a> for finding a type based on file extension.</p>
<p>It does nothing with text character encoding. Figuring out plain text encoding is quite expensive procedure (need processing reading file content by tool like <code>chardet</code>) and not 100% stable (a file can contain multiple encoding).</p>
<p>P.S. </p>
<p>Static file support in <em>aiohttp</em> is for handling resources like images, not human readable plain texts. HTML should be rendered correctly though.</p>
</div>
<span class="comment-copy">thanks! In my case, it looks like the problem is the encoding used when serving the webpack .js bundle. I tested serving this bundle with both nginx and node and the problem went away. Do you know how to use guess_type with .js files?</span>
<span class="comment-copy">Figured it out:  import mimetypes; mimetypes.init(); mimetypes.type_maps['.js'] = 'application/javascript; charset=utf-8'</span>
