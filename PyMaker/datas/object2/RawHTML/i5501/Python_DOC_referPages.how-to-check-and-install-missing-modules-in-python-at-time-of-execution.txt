<div class="post-text" itemprop="text">
<p>I am working on a Python program which will be distributed to our clients.</p>
<p>Their requirement is that the program should take care of everything without their manual intervention. </p>
<p>How do I check and install missing modules in Python at the time of executing the code? In R, I can use the code as provided below. </p>
<p>How do I replicate something similar in Python?</p>
<pre><code># Check and install missing packages in R
list.of.packages &lt;- c("RDCOMClient", "htmlTable")
new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages) &gt; 0) {
  install.packages(new.packages)
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use exception handling, then <code>pip</code> to install the modules:</p>
<pre><code>import pip

def install(package):
    pip.main(['install', package])

def install_all_packages(modules_to_try):
    for module in modules_to_try:
        try:
           __import__(module)        
        except ImportError as e:
            install(e.name)
</code></pre>
<p>Note: the <code>__import__</code> built-in imports modules by a string name. A probably better way to do this is to use the <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow noreferrer"><code>importlib</code></a> module, for example <code>importlib.import_module</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use exception handling:</p>
<pre><code>try:
    import some_module

except ImportError as e:
    print(e)
    # install module or some operation
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/a/15950647/8171079">stackoverflow.com/a/15950647/8171079</a> ?</span>
<span class="comment-copy">Thanks @user8171079. This worked for me. Only question I have is how do I test multiple modules?</span>
<span class="comment-copy">Your code doesn't work if user doesn't have superuser permission: PermissionError</span>
<span class="comment-copy">Hello rassar, I tried the above solution. But it does not seem to be working for me for some reason. I even tried changing the <code>install(e.name)</code> to <code>install('e.name')</code> but that too does not seem to work. Any idea what I might be doing wrong? I am using Python 3.6. I am new to Python by the way. Most of my work is in R.</span>
<span class="comment-copy">What error are you getting?</span>
<span class="comment-copy">This is the error message - <code>Traceback (most recent call last):   File "C:\Users\KING\Desktop\Test.py", line 6, in &lt;module&gt;     for module in modules_to_try: NameError: name 'modules_to_try' is not defined</code></span>
<span class="comment-copy">That's just a variable placeholder. Replace it with the list of modules you need to install. Run the function <code>install_all_packages</code> and pass it as an argument.</span>
<span class="comment-copy">This will require the user to type in every single module that they want to import. The <code>__import__</code> function, or <code>importlib.import_module</code> is better in this case.</span>
<span class="comment-copy">Ok, I understood this way is not much efficient but it's not wrong!</span>
