<div class="post-text" itemprop="text">
<pre><code>import re
sentence = 'horses are fast'
regex = re.compile('(?P&lt;animal&gt;\w+) (?P&lt;verb&gt;\w+) (?P&lt;adjective&gt;\w+)')
matched = re.search(regex, sentence)
print(matched.groupdict())
</code></pre>
<p>This code snippet produces the output</p>
<p>{'adjective': 'fast', 'verb': 'are', 'animal': 'horses'}</p>
<p>Two questions. </p>
<p>One how does the pattern match the sentence? Two does the matched object also contain the pattern used to create it?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, regular expressions simply define a search pattern. You need something more robust for part-of-speech tagging, i.e. the <a href="http://www.nltk.org/book/ch05.html" rel="nofollow noreferrer">NLTK library</a>.</p>
<pre><code>regex = re.compile('(?P&lt;animal&gt;\w+) (?P&lt;verb&gt;\w+) (?P&lt;adjective&gt;\w+)')
</code></pre>
<p>All this line does is capture each group in sequence and then name it. <a href="https://docs.python.org/3/howto/regex.html#grouping" rel="nofollow noreferrer">See here</a> as well as the section below it titled "Non-capturing and Named Groups"</p>
</div>
<span class="comment-copy">Regex knows nothing of English grammar by itself.  Use your pattern on the following sentence and you will see what I mean: <code>Are horses fast?</code></span>
