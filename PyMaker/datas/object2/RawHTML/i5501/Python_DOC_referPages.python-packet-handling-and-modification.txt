<div class="post-text" itemprop="text">
<p>I have a stream of incoming RTP packet and I have two goals to accomplish which I am finding difficult in a high level language like Python.</p>
<p>1 ) Strip away the header from the rtp packet, i.e remove the redundant section of the rtp packet that isn't audio</p>
<p>2 ) Once I have the data, change it from big endian to little endian.</p>
<p>Note : I have been told about struct.pack , but that deals with a section or one number. How do I change the entire data?</p>
</div>
<div class="post-text" itemprop="text">
<p>Ending up just chucking it into a bytearray, indexing it and then doing bitwise opreations.</p>
</div>
<span class="comment-copy">What is the problem you are running into? <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a> In python 2.7, strings are byte sequences and byte sequences are strings. In Python3 byte objects store sequences of bytes; see also <a href="https://docs.python.org/3/glossary.html#term-bytes-like-object" rel="nofollow noreferrer">docs.python.org/3/glossary.html#term-bytes-like-object</a></span>
<span class="comment-copy">Endianess doesn't apply to an entire packet, just to words within the packet. For example, a packet consisting of 2 4-byte words <code>0102030405060708</code> would become <code>0403020108070605</code>, the two words staying in the same order but the bytes in each word being reversed. You'll probably need to use <code>struct.unpack</code> and <code>struct.pack</code> to tease the packet apart, then reassemble it.</span>
<span class="comment-copy">@chepner ohh I see, thanks.I am trying to attach an incoming RTP packet with big endian, into the little endian audio section of a wav file which shown &lt;- <a href="http://soundfile.sapp.org/doc/WaveFormat/" rel="nofollow noreferrer">soundfile.sapp.org/doc/WaveFormat</a> -&gt; takes little endian (Last section).</span>
<span class="comment-copy">Take a look at Scapy <a href="http://www.secdev.org/projects/scapy/" rel="nofollow noreferrer">secdev.org/projects/scapy</a> - very helpful for modifying network data</span>
<span class="comment-copy">@chepner couldn't he just slice the packet along the word boundaries into bytearray, and b''.join(reversed(barray))?</span>
