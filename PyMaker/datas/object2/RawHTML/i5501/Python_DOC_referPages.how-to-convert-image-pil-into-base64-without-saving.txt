<div class="post-text" itemprop="text">
<p>I generate an image with Python, and I need to convert this Pil Image into a Base64, without saving this one into any folder... </p>
<p>I have some data, and I get RGB img with the line below:</p>
<pre><code>img = Image.fromarray(data,'RGB')
</code></pre>
<p>What is the simple way to convert this PIL into base64 ?(I can't open a file image because I must not save the img) ?</p>
<p>Thank you for your help</p>
<p>With Node JS, I can get the correct base64 with these lines :</p>
<pre><code>pythonShell= require("python-shell");

app.post('/index/gen/',urlencodedParser, function (req,res){ 
  pythonShell.run('minigen.py', function (err, results) {
  if (err) throw err; 
  var img = base64img.base64Sync('./images/miniature.jpg');
  res.send(img); }); 
}) 
</code></pre>
<p>But I have to save the file if I use NodeJS... </p>
<p>this is the code to generate the matrix from the image, you don't need to know what is in data ;)</p>
<pre><code>image = Image.open("./carte/"+fichier)              
image = image.resize((400,400),Image.ANTIALIAS)     
w,h = image.size                                    
tab = numpy.array(image)                            
data = numpy.zeros((h, w, 3), dtype=numpy.uint8)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/base64.html#base64.b64encode" rel="nofollow noreferrer"><code>base64</code></a> library like this:</p>
<pre><code>import base64

base64.b64encode(img.tobytes())
</code></pre>
<p>See <a href="http://pillow.readthedocs.io/en/3.1.x/reference/Image.html#PIL.Image.Image.tobytes" rel="nofollow noreferrer"><code>tobytes()</code></a> method of <code>Image</code> object.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found the solution. Hope this helps !</p>
<pre><code>img = Image.fromarray(data, 'RGB')                  #Crée une image à partir de la matrice
buffer = BytesIO()
img.save(buffer,format="JPEG")                  #Enregistre l'image dans le buffer
myimage = buffer.getvalue()                     
print "data:image/jpeg;base64,"+base64.b64encode(myimage)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or you can use something like this:</p>
<pre><code>import glob
import random
import base64

from PIL import Image
from io import BytesIO
import io


def get_thumbnail(path):
    path = "\\\\?\\"+path # This "\\\\?\\" is used to prevent problems with long Windows paths
    i = Image.open(path)    
    return i

def image_base64(im):
    if isinstance(im, str):
        im = get_thumbnail(im)
    with BytesIO() as buffer:
        im.save(buffer, 'jpeg')
        return base64.b64encode(buffer.getvalue()).decode()

def image_formatter(im):
    return f'&lt;img src="data:image/jpeg;base64,{image_base64(im)}"&gt;'
</code></pre>
<p>Just pass path of image in <code>get_thumbnail</code> function and <code>image_formatter</code> to display it in HTML.</p>
</div>
<span class="comment-copy">are you sure you want to convert the PIL? i would have thought it would make more sense to convert you <code>data</code> array?</span>
<span class="comment-copy">I must convert the data into an RGB image.And then convert this image object to base64</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/16065694/is-it-possible-to-create-encodeb64-from-image-object">Is it possible to create encodeb64 from Image object?</a></span>
<span class="comment-copy">After the conversion into RGB image ? I don't have correct values by doing this</span>
<span class="comment-copy">@florian What do you mean by <i>correct values</i>? Base64 just encodes binary data into ASCII characters, which is what you asked for.</span>
<span class="comment-copy">Our API also works with nodejs and as we try to do the same thing with it, we can display the image in our navigator... Which is impossible with the base64 that we obtain with your method</span>
<span class="comment-copy">Where do <code>data</code> in <code>img = Image.fromarray(data,'RGB') </code> come from and what do they represent? There's a warning regarding compressed formats like JPEG in the documentation to <code>Image.tobytes()</code> method that I referenced in the answer.</span>
<span class="comment-copy">Can you share the part of code that populates that <code>data</code> object?</span>
