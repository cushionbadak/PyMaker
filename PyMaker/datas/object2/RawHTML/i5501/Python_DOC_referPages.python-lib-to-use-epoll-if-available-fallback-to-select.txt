<div class="post-text" itemprop="text">
<p>I would like to use <a href="https://docs.python.org/3/library/select.html#select.epoll" rel="noreferrer">select.epoll()</a> in my Python library.</p>
<p>Unfortunately epoll is not available everywhere.</p>
<p>I need a way to fallback to <a href="https://docs.python.org/3/library/select.html#select.select" rel="noreferrer">select.select()</a>.</p>
<p>I tried to find something at pypi, but failed to find a matching package: <a href="https://pypi.python.org/pypi?%3Aaction=search&amp;term=epoll&amp;submit=search" rel="noreferrer">https://pypi.python.org/pypi?%3Aaction=search&amp;term=epoll&amp;submit=search</a></p>
<p>How could I solve this "fallback from epoll to select if epoll is not available"?</p>
</div>
<div class="post-text" itemprop="text">
<p>Aside from <code>selectors</code> stdlib, I would go with <a href="https://pypi.python.org/pypi/uvloop" rel="nofollow noreferrer">uvloop</a>, which is built on top of <code>libuv</code> in Cython. Compare to <code>libevent</code>/<code>libev</code>, those two do not have actively maintained python binding, uvloop is more promise.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.4 introduced the <a href="https://docs.python.org/3/library/selectors.html" rel="noreferrer">selectors module</a>. It offers a <code>DefaultSelector</code> that is an alias to the "most efficient implementation available on the current platform".</p>
<p>Here's a quick usage example:</p>
<pre><code>sel = selectors.DefaultSelector()

sel.register(fp1, selectors.EVENT_READ)
sel.register(fp2, selectors.EVENT_READ)
sel.register(fp3, selectors.EVENT_READ)

for key, mask in sel.select():
    print(key.fileobj)
</code></pre>
<p>You can find a more <a href="https://docs.python.org/3/library/selectors.html#examples" rel="noreferrer">complete example on the Python documentation</a>.</p>
<p><code>DefaultSelector</code> will try, in this order:</p>
<ul>
<li><code>epool</code> (Linux), <code>kqueue</code> (FreeBSD / NetBSD / OpenBSD / OS X) or <code>/dev/poll</code> (Solaris)</li>
<li><code>poll</code> (Unix)</li>
<li><code>select</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>How about using libevent which wraps all polling mechanisms and falls back to the best available one based on your platform <a href="http://libevent.org" rel="nofollow noreferrer">libevent.org</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here are my two cents on this. According to <a href="https://docs.python.org/3/library/select.html#select.epoll" rel="nofollow noreferrer">documentation</a>, epoll is available only on Linux 2.5.44 and newer. With code:</p>
<pre><code>import os
if os.uname()[0] != 'Linux' or os.uname()[2] &lt; '2.5.44':
    #use select
else:
    #use epoll
</code></pre>
<p>Better yet, I reckon that the above could be turned into a nice decorator, to be used wherever you want in your program, that returns the correct function depending on the underlying os.</p>
</div>
<span class="comment-copy">How about using libevent which wraps all these   <a href="http://libevent.org/" rel="nofollow noreferrer">libevent.org</a></span>
<span class="comment-copy">@AkhilThayyil if you write your comment as answer, then I will upvote it. The libevent thing looks good.</span>
<span class="comment-copy">read before changing to epool: <a href="https://idea.popcount.org/2017-02-20-epoll-is-fundamentally-broken-12/" rel="nofollow noreferrer">epoll is fundamentally broken part 1</a>,  <a href="https://idea.popcount.org/2017-03-20-epoll-is-fundamentally-broken-22/" rel="nofollow noreferrer">epoll is fundamentally broken part 2</a></span>
<span class="comment-copy">@internety thank you for the link to "epoll is fundamentally broken" at the current stage the concerns of this article don't apply to my use of epoll, but nevertheless good to know.</span>
<span class="comment-copy">libevent looks good. Is it the only library for async io?</span>
<span class="comment-copy"><a href="http://software.schmorp.de/pkg/libev.html" rel="nofollow noreferrer">software.schmorp.de/pkg/libev.html</a> is also promising  (<a href="https://pypi.python.org/pypi/pyev/" rel="nofollow noreferrer">pypi.python.org/pypi/pyev</a>) ..</span>
<span class="comment-copy">does it have an up to date python binding?</span>
