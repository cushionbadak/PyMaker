<div class="post-text" itemprop="text">
<p>As part of a function, I get the input of date and time plus time zone in the format <em><code>"[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS]+[XXXX]"</code></em> (with XXXX being the difference to UTC in HHMM) and need the date and time as a Unix time stamp.</p>
<p>I'm currently using <code>time.mktime([CONVERTED TIME])</code> but end up with <code>TypeError: function takes exactly 9 arguments (6 given)</code>. It seems like a lot of effort to program something for the arguments of 'weekday' etc. for <code>time.mktime</code>, so I'm sure there's a better way which I just didn't find yet.</p>
<p>How else can this be done?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a <a href="https://en.wikipedia.org/wiki/ISO_8601" rel="nofollow noreferrer">ISO 8601</a> compliant timestamp.  There are various libraries which can help with these.  But is your case, for a fixed format, you can use Python's <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>dt.datetime.strptime</code></a> and <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer"><code>datetime.timedelta</code></a> to calculate the seconds since epoch like:</p>
<h2>Code:</h2>
<pre><code>def epoch_seconds_from_iso_8601_with_tz_offset(iso_8601):
    """ Convert ISO 8601 with a timezone offset to unix timestamp """
    iso_8601_dt = dt.datetime.strptime(iso_8601[:-5], '%Y-%m-%dT%H:%M:%S')
    utc_at_epoch = dt.datetime(1970, 1, 1)
    epoch_without_tz_offset = (iso_8601_dt - utc_at_epoch).total_seconds()
    tz_offset = 60 * (60 * int(iso_8601[-4:-2]) + int(iso_8601[-2:]))
    if iso_8601[-5] == '-':
        tz_offset = -tz_offset
    return epoch_without_tz_offset - tz_offset
</code></pre>
<h3>Test Code:</h3>
<pre><code>import datetime as dt

t1 = epoch_seconds_from_iso_8601_with_tz_offset('2018-01-07T19:43:15+0000')
t2 = epoch_seconds_from_iso_8601_with_tz_offset('2018-01-07T11:43:15-0800')
epoch = 1515354195

assert epoch == t1 == t2
</code></pre>
</div>
<span class="comment-copy">Hi @StephenRauch, thanks for the link. This looks similar but (unless I'm missing something) I also need the time difference to UTC and the target format I'm looking for is a UNIX timestamp, as e.g. given by <code>time.mktime((2017,1,7,17,12,0,0,7,0))</code></span>
