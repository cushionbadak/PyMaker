<div class="post-text" itemprop="text">
<p>I'm looking at the python documentation and came across 'type()' under the built-in-functions section. <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html</a></p>
<p>However, when I look at the actual details, I see it as a class which takes 1 or 3 arguments. <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#type</a></p>
<pre><code>&gt;&gt;&gt; type(type)
&lt;class 'type'&gt;
&gt;&gt;&gt; type(pow)
&lt;class 'builtin_function_or_method'&gt;
</code></pre>
<p>If it's not a function, why is it listed under builtin-functions section.? Am I missing something.?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a number of objects that are callable.  Some are used more like functions, even though they are actually classes or types.  The distinction isn't really that important, more of an implementation detail.</p>
<p>For example, <code>list()</code> gives you a new list.  That's because <code>list</code> is a type.  But if you want to think of it as a function that makes lists, that's OK too.</p>
</div>
<span class="comment-copy">There're other built-in types listed on that page e.g. <code>list</code>, <code>dict</code>, etc.</span>
<span class="comment-copy">yeah, I think the question applies to them too..</span>
<span class="comment-copy">If you are interested in detailed description, have a look at <a href="https://stackoverflow.com/a/6581949/5741172">this answer</a>. It actually cover details about <code>metaclasses</code> but also explains the abilities of <code>type</code>  and how it behaves in different situations.</span>
<span class="comment-copy">that makes sense to some extent..I agree that the distinction isn't important, but kinda curious on why it's listed under builtin functions..</span>
<span class="comment-copy">It's listed there because they don't have a section called builtin classes, and because they are mostly used as if they were functions.</span>
