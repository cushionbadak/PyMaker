<div class="post-text" itemprop="text">
<p>Say I have a hypothetical list that lists down some csv files:</p>
<pre><code>example_list = ['./Data/File_1.csv',
                './Data/File_2.csv',
                './Data/File_3.csv']
</code></pre>
<p>And I would like the print to be like:</p>
<pre><code>'This is file number 1 for File_1.csv'
'This is file number 2 for File_2.csv'
'This is file number 3 for File_3.csv'
</code></pre>
<p>Doing a simple <code>for</code> loop prints only the first string three times. I thought I would specify the indexes for python to 'recognise' which file I'm referring to, like so:</p>
<pre><code>for data in example_list:
    if data[0]:
        print('This is file number 1 for File_1.csv')
    elif data[1]:
        print('This is file number 2 for File_2.csv')
    else:
        print('This is file number 3 for File_3.csv')
</code></pre>
<p>This too however prints out only the first string. How do I customise what is printed for each index?</p>
</div>
<div class="post-text" itemprop="text">
<p>Job for <code>enumerate</code>:</p>
<pre><code>for (idx, st) in enumerate(example_list, 1):
    print('This is file number {} for {}'.format(idx, st.split('/')[-1]))
</code></pre>
<ul>
<li><p><code>enumerate(example_list, 1)</code> enumerates the list with setting starting index as <code>1</code></p></li>
<li><p><code>print('This is file number {} for {}'.format(idx, st.split('/')[-1]))</code> prints in desired format, with <code>st.split('/')[-1])</code> getting the last member of the <code>/</code> <code>split</code>-ted list.</p></li>
</ul>
<p>As <code>/</code> is the directory separator in POSIX systems, no filename can contain <code>/</code>, so <code>split('/')[-1]</code> should works the same as <code>os.path.basename</code>. But, it's better to use <code>os.path.basename</code> BTW.</p>
<p><strong>Example:</strong></p>
<pre><code>In [46]: example_list = ['./Data/File_1.csv',
                './Data/File_2.csv',
                './Data/File_3.csv']

In [47]: for (idx, st) in enumerate(example_list, 1):
    print('This is file number {} for {}'.format(idx, st.split('/')[-1]))
   ....:     
This is file number 1 for File_1.csv
This is file number 2 for File_2.csv
This is file number 3 for File_3.csv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>enumerate</code> your list, print a formatted string. You can get the base-name of a file with <code>os.path.basename</code>.</p>
<pre><code>&gt;&gt;&gt; from os.path import basename
&gt;&gt;&gt; example_list = ['./Data/File_1.csv',
...                 './Data/File_2.csv',
...                 './Data/File_3.csv']
&gt;&gt;&gt; 
&gt;&gt;&gt; for i, fname in enumerate(example_list, 1):
...     print('This is file number {} for file {}'.format(i, basename(fname)))
... 
This is file number 1 for file File_1.csv
This is file number 2 for file File_2.csv
This is file number 3 for file File_3.csv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need <a href="https://docs.python.org/3.3/library/functions.html#enumerate" rel="nofollow noreferrer"><strong><code>enumerate</code></strong></a> <em>(to get indices while iterating)</em> with <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><strong><code>os.path.basename</code></strong></a> <em>(to get filename from the filepath)</em> to achieve this. Here's a <em>list comprehension</em> expression as an example:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; example_list = [
    './Data/File_1.csv',
    './Data/File_2.csv',
    './Data/File_3.csv']

&gt;&gt;&gt; ['This is file number {} for {}'.format(i, os.path.basename(name)) for i, name in enumerate(example_list)]
['This is file number 0 for File_1.csv', 'This is file number 1 for File_2.csv', 'This is file number 2 for File_3.csv']
</code></pre>
</div>
<span class="comment-copy">Better than expected!</span>
