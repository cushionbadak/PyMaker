<div class="post-text" itemprop="text">
<p>Encoding in JS means converting a string with special characters to escaped usable string. like : encodeURIComponent would convert spaces to %20 etc to be usable in URIs.</p>
<p>So encoding here means converting to a particular format.</p>
<p>In Python 2.7, I have a string : 奥多比. To convert it into UTF-8 format, however, I need to use decode() function.
Like: "奥多比".decode("utf-8") ==  u'\u5965\u591a\u6bd4'</p>
<p>I want to understand how the meaning of encode and decode is changing with language. To me essentially I should be doing "奥多比".encode("utf-8")</p>
<p>What am I missing here.</p>
</div>
<div class="post-text" itemprop="text">
<p>You appear to be confusing <a href="https://en.wikipedia.org/wiki/Unicode" rel="nofollow noreferrer">Unicode text</a> (represented in Python 2 as the <code>unicode</code> type, indicated by the <code>u</code> prefix on the literal syntax), with one of the standard Unicode encodings, UTF-8.</p>
<p>You are not creating UTF-8, you created a Unicode text object, by <em>decoding</em> from a UTF-8 byte stream.</p>
<p>The <em>byte</em> string literal `"奥多比"' is a sequence of binary data, bytes. You either entered these in a text editor and saved the file as UTF-8 (and told Python to treat your source code as UTF-8 by starting the file with a <a href="https://www.python.org/dev/peps/pep-0263/" rel="nofollow noreferrer">PEP 263 codec header</a>), or you typed it into the Python interactive prompt in a terminal that was configured to send UTF-8 data.</p>
<p>I strongly urge you to read more about the difference between bytes, codecs and Unicode text. The following links are highly recommended:</p>
<ul>
<li>Ned Batchelder's <a href="https://nedbatchelder.com/text/unipain.html" rel="nofollow noreferrer"><em>Pragmatic Unicode</em></a></li>
<li>The Python <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer"><em>Unicode HOWTO</em></a></li>
<li>Joel Spolsky's <a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/" rel="nofollow noreferrer"><em>The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</em></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>In Python v2, it's type <code>str</code>, i.e. sequence of bytes. To convert it to a Unicode string, you need to decode this sequence of bytes using a <em>codec</em>. Simply said, it specifies how should bytes be converted to a sequence of Unicode code points. Look into <a href="https://docs.python.org/2/howto/unicode.html" rel="nofollow noreferrer">Unicode HOWTO</a> for more in-depth article on this.</p>
</div>
<span class="comment-copy">You convert <b>from</b> UTF-8 to a Unicode object.</span>
<span class="comment-copy">Your console or terminal is set to UTF-8, so typing in <code>"奥多比"</code> sends <i>UTF-8 bytes</i> to the Python interactive interpreter process. Decoding then creates a Unicode object from the UTF-8 bytes.</span>
<span class="comment-copy">@MartijnPieters: SO when this is part of a script and I write : str = "奥多比." and then str.decode("utf-8") then that means that str is essentially the utf-8 already? However when I append it to the URL of an API call, it is sent as "奥多比." only and not in the encoded format.</span>
<span class="comment-copy">So are you really asking how to send UTF-8 bytes in a URL?</span>
<span class="comment-copy">URLs are not UTF-8 encoded. They are <i>percent encoded</i>, often using UTF-8 as a starting point. In Python 2, use <code>import urllib</code>, then <code>urllib.quote()</code> to create URL percent-encoded data. Start with UTF-8 bytes.</span>
