<div class="post-text" itemprop="text">
<p>I use various methods in Python to fetch data, process data, and store data. </p>
<p>The fetch method calls the process method upon return, and the process method calls the store data method on return.</p>
<p>However, if one method fails, e.g., because the data is not available, the program crashes. </p>
<p>Is there a way to make the program more robust, by returning somehow that an error occurred, which halts the program and instead provides an argument to a loop that the data is not available, and the loop should continue with the next task?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">Python's Errors and Exceptions</a> for that. If you are using modules, you should use the modules errors and exceptions. It sounds like you are a beginner python programmer, if so first study python. </p>
</div>
<span class="comment-copy">Have you tried using <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">Python's exception handling framework</a>?</span>
