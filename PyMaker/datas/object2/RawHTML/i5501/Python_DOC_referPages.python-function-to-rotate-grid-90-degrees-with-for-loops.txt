<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/42519/how-do-you-rotate-a-two-dimensional-array">How do you rotate a two dimensional array?</a>
<span class="question-originals-answer-count">
                    60 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to 'rotate' a grid 90 degrees clockwise and came up with the following Python code.</p>
<pre><code>def rotate90(grid):
    rotatedGrid = grid[:]
    for i in range (0, len(grid)):
        for j in range (0, len(grid)):
            rotatedGrid[i][j] = grid[-(j+1)][i][:]
    return rotatedGrid
</code></pre>
<p>printing rotate90(grid) on the grid <code>[['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]</code> outputs <code>[['7', '4', '7'], ['8', '5', '4'], ['9', '4', '7']]</code>, whereas I expected <code>[['7', '4', '1'], ['8', '5', '2'], ['9', '6', '3']]</code>. What is the reason for this difference?</p>
<p>(The reason I haven't converted these to ints is that eventually I will be using '@' and '-' characters rather than numbers.)</p>
</div>
<div class="post-text" itemprop="text">
<p>Your function doesn't work because you didn't make a new structure when you initialized <code>rotatedGrid</code>.  You made a copy of each <em>row</em>, but the elements are pointers to the originals in <code>grid</code>.  When you assigned within the loop, you were pointing to shared matrix locations.</p>
<p>Fix it with this:</p>
<pre><code>from copy import deepcopy

def rotate90(grid):
    rotatedGrid = deepcopy(grid)
</code></pre>
<p>Given that change, your code produces the desired output.</p>
</div>
<div class="post-text" itemprop="text">
<p>We can easily transpose a list <code>l</code> with <code>zip(*l)</code>, then reverse the sublists</p>
<pre><code>def rot_90(l):
    return [list(reversed(x)) for x in zip(*l)]

rot_90([['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']])
</code></pre>
<p>returns </p>
<pre><code>[['7', '4', '1'], ['8', '5', '2'], ['9', '6', '3']]
</code></pre>
</div>
<span class="comment-copy">I'm sorry if there's some duplication, but what seems like the critical line of my code looks almost identical to that of the first solution, yet mine doesn't seem to work. (The grid will be small, so an O(n^2) algorithm is fine.)</span>
<span class="comment-copy"><a href="https://stackoverflow.com/a/496056/7851470">Python solution</a></span>
<span class="comment-copy">I'm sorry I missed that. I'll search harder next time before asking. The answer I've accepted might add something new though (I'm sure it's elsewhere, but perhaps not on the copy threads).</span>
<span class="comment-copy">Thank you for explaining. I thought that the <code>[:]</code> made a copy. Why doesn't that work in this case?</span>
<span class="comment-copy">@PeterW <code>[:]</code> do make a copy of list, but <code>=</code> assign reference from source to target. Check <a href="https://stackoverflow.com/questions/17246693/what-exactly-is-the-difference-between-shallow-copy-deepcopy-and-normal-assignm">this</a> question to understand the difference in more details.</span>
<span class="comment-copy"><code>[:]</code> is a shallow copy.  There's a pretty good explanation in the <a href="https://docs.python.org/3/library/copy.html" rel="nofollow noreferrer">documentation of the <code>copy</code> module</a></span>
<span class="comment-copy">That's great to know. I hadn't come across 'zip' before, as I'm still fairly new to Python. Out of curiosity, do you know why my function didn't work?</span>
<span class="comment-copy"><code>zip</code> is super useful.  When you have a minute you should go over the documentation for it: <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#zip</a></span>
<span class="comment-copy">Yes, I definitely should. (Particularly as I'm about to enter an informatics olympiad for fun, and so shouldn't be fumbling around unnecessarily!)</span>
