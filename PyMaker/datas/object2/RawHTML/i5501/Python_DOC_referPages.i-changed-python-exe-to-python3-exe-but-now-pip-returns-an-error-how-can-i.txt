<div class="post-text" itemprop="text">
<p>So in order to make my life easier, I changed Python 2.7 to "python2.exe and Python 3.6 to "python3.exe". I then added them to my path and am able to reference them in which <code>python2</code> opens Python 2.7 and <code>python3</code> opens Python 3.6.</p>
<p>This is exactly what I want but now since I changed the names the <code>pip</code> command returns this:</p>
<pre><code>Fatal error in launcher: Unable to create process using '"'
</code></pre>
<p>I still want to be able to reference <code>python3</code> and run Python 3.6, but I need pip to work. Do I change a pip file to reference it? or is it something else? Please help if you can.</p>
</div>
<div class="post-text" itemprop="text">
<p>I strongly recommend you change the names back, because numerous scripts (pip likely included) expect the original filename. </p>
<p>To make your life easier when launching python files on windows, python comes with a more flexible solution. If you have a recent python3 installed on windows, the <a href="https://docs.python.org/3/using/windows.html#launcher" rel="nofollow noreferrer">Python Launcher for Windows</a> should be installed as well. That means you can run python 2 and 3 scripts with a <code>py &lt;file&gt;</code> command. The launcher respects shebang lines specifying the python version or you can pass a flag to choose the version manually: <code>py -2 &lt;file&gt;</code></p>
</div>
<span class="comment-copy">rename everything back to make your life even easier (:</span>
<span class="comment-copy">@Aiven But then there are conflicts with Python 2.7 and Python 3.6</span>
<span class="comment-copy">In the Linux world, you have a python3.6 "exe" and a shortcut python3 to it, both in your PATH.</span>
<span class="comment-copy">How about having 2 accounts, or 2 shell shortcuts that have paths to the different pythons?</span>
<span class="comment-copy">Look into something like anaconda.  You can have separate environments for any version of python you wish to use.</span>
