<div class="post-text" itemprop="text">
<p>I am trying to import my own files in Python3. My directory looks like this:</p>
<pre><code>/path/folder/__init__.py
/path/folder/custom_module2.py
/path/folder/custom_module.py
/path/launcher.py
</code></pre>
<p>init:</p>
<pre><code>import custom_module
</code></pre>
<p>custom_module:</p>
<pre><code>import custom_module2
def custom_function:
    custom_module2.custom_function()
    print('world')
</code></pre>
<p>custom_module2:</p>
<pre><code>def custom_function2:
    print('hello')
</code></pre>
<p>launcher:</p>
<pre><code>import folder
custom_function()
</code></pre>
<p>it says that there is no module named custom_module</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, if you just put an empty file called <code>__init__.py</code> file, python will treat the directory as a package and you can import it with the dot notation.</p>
<pre><code>__init__.py
custom_module2.py
custom_module.py
</code></pre>
<p>then from launcher.py</p>
<pre><code>from folder.custom_module import custom_function
custom_function()
</code></pre>
<blockquote>
<p>The <strong>init</strong>.py files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as string, from unintentionally hiding valid modules that occur later on the module search path. In the simplest case, <strong>init</strong>.py can just be an empty file, but it can also execute initialization code for the package or set the <strong>all</strong> variable, described later.</p>
</blockquote>
<p>Source: <a href="https://docs.python.org/3/tutorial/modules.html#Packages" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html#Packages</a></p>
</div>
<span class="comment-copy">That's not how you define a function <code>def custom_function:</code></span>
<span class="comment-copy">This means running the script <code>launcher.py</code> will only work when executing from within the same directory.  Not ideal.</span>
<span class="comment-copy">Hmm, what do you exactly mean? How is your solution different in that manner?</span>
<span class="comment-copy">Try your approach and see.  Unless you execute from the same directory as the script is contained in, this will also fail with an <code>ImportError</code>.</span>
<span class="comment-copy">I'm launching <code>launcher.py</code> from a different directory and it looks fine, or did I get you wrong?</span>
