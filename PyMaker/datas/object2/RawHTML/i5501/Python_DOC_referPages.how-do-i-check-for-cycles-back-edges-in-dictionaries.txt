<div class="post-text" itemprop="text">
<p>How can I detect whether a dictionary contains a <code>back-edge</code> aka <code>back-reference</code> that might end up in an infinite loop or cause a <code>maximum recursion depth</code> exception.</p>
<pre><code>x = {'a':1}           
x['b'] = x            #referencing same dict, creating back edge
print(x)
&gt;{'a': 1, 'b': {...}}
</code></pre>
<p>So apparently python is smart enough to figure out <code>back-edges</code> and marks them by printing them as <code>{...}</code>. Is there a way to access this information, so it can be skipped, without checking all the elements against each other for their id's?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://github.com/python/cpython/blob/v3.6.3/Objects/dictobject.c#L2034" rel="nofollow noreferrer"><code>dict.__repr__</code> implementation</a> calls <a href="https://docs.python.org/3/c-api/exceptions.html#c.Py_ReprEnter" rel="nofollow noreferrer"><code>Py_ReprEnter</code></a>, a C API analogue of <a href="https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr" rel="nofollow noreferrer"><code>reprlib.recursive_repr</code></a>, which records the fact that the current thread is computing the dict's <code>repr</code>. If <code>dict.__repr__</code> is entered again for that dict without an intervening <code>Py_ReprLeave</code>, Python knows that it's in a recursive <code>repr</code> call, and it uses <code>'{...}'</code> instead of going through the usual logic.</p>
<p>You can apply a similar technique in your own code. In whatever recursive traversal you want to write, record what objects the current thread is currently processing, and use that information to detect when you hit a cycle. Depending on what you're trying to do and the structure of your input, there may be other useful techniques.</p>
</div>
<span class="comment-copy">This is really cool to know. Awesome!</span>
<span class="comment-copy">Also, for interested parties, code implementation is <a href="https://stackoverflow.com/a/48218360/4909087">here</a>.</span>
