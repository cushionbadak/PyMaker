<div class="post-text" itemprop="text">
<p>I am trying to change the colours of a countries using GeoJson polygon colour features. </p>
<p>This is the code that gives me an error. </p>
<pre><code>import folium
import pandas

data = pandas.read_csv("Volcanoes_USA.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])

def color_producer(elevation):
    if elevation &lt; 1000:
        return 'green'
    elif 1000 &lt;= elevation &lt; 3000:
        return 'orange'
    else:
        return 'red'

map = folium.Map(location=[38.58,-99.09], zoom_start=6, tiles="Mapbox Bright")

fg = folium.FeatureGroup(name="My Map")

for lt,ln,el in zip(lat, lon, elev):
    fg.add_child(folium.CircleMarker(location=[lt, ln], radius = 6, popup=str(el)+ " m", color = color_producer(el), fill_color= 'grey', fill_opacity=1.15))

fg.add_child(folium.GeoJson(data=open('world.json','r', encoding='utf-8-sig'),
style_function = lambda x: {'fillColour':'yellow'}))
</code></pre>
<p>The last two lines result in the following error message:</p>
<pre><code>&gt; &gt; Traceback (most recent call last):   File "map1.py", line 25, in &lt;module&gt;
&gt;     style_function = lambda x: {'fillColour':'yellow'}))   File "/Users/g_wauns/anaconda3/lib/python3.6/site-packages/folium/features.py",
&gt; line 495, in __init__
&gt;     raise ValueError('Unhandled object {!r}.'.format(data)) ValueError: Unhandled object &lt;_io.TextIOWrapper name='world.json'
&gt; mode='r' encoding='utf-8-sig'&gt;.
</code></pre>
<p>Since I am new to coding, I on't know what this means.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at <a href="https://github.com/python-visualization/folium/blob/master/folium/features.py#L343" rel="nofollow noreferrer">[GitHub]: (<strong>master</strong>) folium/folium/features.py:343</a> (<strong>as it is at this point</strong>), looks like <code>folium.GeoJson</code> constructor can only handle (<strong>for your scenario</strong>) either a:</p>
<ol>
<li>File <strong>name</strong></li>
<li><em>Python</em> dictionary</li>
</ol>
<p>So, the simplest way to solve this, is to just pass the file name:</p>
<pre><code>fg.add_child(folium.GeoJson("world.json", style_function=lambda x: {"fillColour": "yellow"}))
</code></pre>
<p>Of course, you could read the file yourself into a <em>dict</em> (using the <a href="https://docs.python.org/3/library/json.html#module-json" rel="nofollow noreferrer">[Python]: <em>json</em> â€” JSON encoder and decoder</a> module), but it's just what the above file does ~20 lines below.</p>
</div>
<div class="post-text" itemprop="text">
<p>I solved the exact same problem above with the code found in the following code block</p>
<pre><code>import folium
import pandas
import json

data = pandas.read_csv("Volcanoes_USA.csv")
</code></pre>
<p>I had to create the following line as a str function to get my code to work
in reading the world.json file correctly. The example in the course was not
working for me. I had to therefore import the json Library and read in the file
first with the encoding and then pass it on the GeoJson method
described further down in the code</p>
<pre><code>data_json = open("world.json", 'r', encoding='utf-8-sig').read()

lat = list(data["LAT"])
long = list(data["LON"])
elev = list(data["ELEV"])
name = list(data["NAME"])

def pin_color(elev):
    if elev &lt;= 1500.0:
        return "green"
    elif elev &gt;= 3000.0:
        return "red"
    else:
        return "orange"

map = folium.Map(location=[38.58,-99.09], zoom_start=6, control_scale=True,
tiles="Stamen Terrain")
map.add_child(folium.LatLngPopup())
map

fg = folium.FeatureGroup(name="my_map")
</code></pre>
<p>I was not able to use the line as explained in the course which was:
fg.add_child(folium.GeoJson(data=open('world.json', 'r', encoding=utf-8-sig)))
So I defined data_json as mentioned above in this code as a str to be read below
by folium.GeoJson.</p>
<pre><code>fg.add_child(folium.GeoJson(data=data_json,
style_function=lambda x: {'fillColor':'green' if x['properties'] 
['POP2005'] &lt; 10000000
else 'orange' if 10000000 &lt;= x['properties']['POP2005'] &lt; 20000000 else 
'red' }))

for i,j,z,v in zip(lat, long, elev, name):
    icn_pin=folium.Popup(str(v)+" Volcano"+": "+"Elevation:"+str(z)+"m "+" 
    "+"Lat:"+str(i)+" "+"Long:"+str(j),parse_html=True)
    fg.add_child(folium.CircleMarker(location=[i,j], popup=icn_pin, 
    radius=7, fill=True, color=pin_color(z), fill_color=pin_color(z), 
    fill_opacity=0.85))

map.add_child(fg)
map.save("world_pop_map.html")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As user9608587 has posted it helped me to get an idea how to get this done</p>
<p>I imported 'io' module and used io.open() function.</p>
<pre><code>import io
data_json = io.open("world.json",'r',encoding='utf-8-sig').read()
</code></pre>
<p>Final code, you can just copy and paste it, it will work.</p>
<pre><code>import folium
import pandas,io

data = pandas.read_csv("Volcanoes_USA.txt")
data_json = io.open("world.json",'r',encoding='utf-8-sig').read()
lat = list(data.LAT)
lon = list(data.LON)
elev = list(data.ELEV)

def colour_producer(elev):
    if elev&lt;1000:
        return "green"
    elif 1000&lt;= elev &lt;3000:
        return "orange"
    else:
        return "red"

Map = folium.Map(location=[38.58,-99.09],zoom_start=6,tiles = "Mapbox Bright")
fg = folium.FeatureGroup(name="My Map")

'''for lat,lon,elev in zip(lat,lon,elev):
    fg.add_child(folium.CircleMarker(location=[lat,lon],popup=str(elev) + "m",radius
    = 6,fill_color = colour_producer(elev),
    color = 'grey',fill_opacity = 0.7))'''

fg.add_child(folium.GeoJson(data=data_json,style_function=lambda x: {'fillColor':'blue' if x['properties']
['POP2005'] &lt; 10000000
else 'green' if 10000000 &lt;= x['properties']['POP2005'] &lt; 20000000 else
'red' }))


Map.add_child(fg)
Map.save("Map1.html")
</code></pre>
</div>
<span class="comment-copy">Did this help you to get pass the error?</span>
