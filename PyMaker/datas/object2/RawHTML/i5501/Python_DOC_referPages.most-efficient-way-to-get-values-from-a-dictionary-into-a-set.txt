<div class="post-text" itemprop="text">
<p>I cant seem to figure out how to write the following into a one line of code, using set comprehension.  If its not possible is there a faster way to do what I am trying to do here?  Basically just getting all the values of a dictionary into a set.  Some values can be an empty set.  A simple example is below</p>
<pre><code>d = {1:set(),2:{1,2,3},3:{4}}

t = set()

for k, v in d.items():
   if len(v) &gt; 0:
      t.update(v)

print(t)
</code></pre>
<p>output</p>
<pre><code>{1,2,3,4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Easiest is probably:</p>
<pre><code>&gt;&gt;&gt; set.union(*d.values())
{1, 2, 3, 4}
</code></pre>
<p>There's no need to special-case an empty set in the values.  Folding an empty set into the union makes no difference to the result, and checking for the length in advance in Python code is slower than just letting <code>set.union()</code> figure it out.</p>
<h2>WITH A SET COMPREHENSION</h2>
<p>You can do it with a set comprehension too, but I expect this way would be significantly slower (although I haven't timed it):</p>
<pre><code>&gt;&gt;&gt; {x for oneset in d.values() for x in oneset}
{1, 2, 3, 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As an alternative to the <code>union</code> thing, you could use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a>:</p>
<pre><code>from itertools import chain

d = {1:set(),2:{1,2,3},3:{4}}
set(chain.from_iterable(d.values()))
&gt;&gt;&gt; {1, 2, 3, 4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Both Tim Peters's and jdehesa's answers are faster than using a set comprehension because they avoid the explicit double <code>for</code> loop running at Python speed. But here's how to do it with a set comprehension:</p>
<pre><code>d = {1:set(), 2:{1,2,3}, 3:{4}}
t = {v for u in d.values() for v in u}
print(t)
</code></pre>
<p><strong>output</strong></p>
<pre><code>{1, 2, 3, 4}
</code></pre>
</div>
<span class="comment-copy">I see no t here...</span>
<span class="comment-copy">sorry, forgot to put t in there.  Please see update.  Its basically just a set</span>
<span class="comment-copy">Why not just <code>t = set.union(*d.values())</code>?</span>
<span class="comment-copy">You can do <code>for v in d.values()</code>, and the <code>if len(v) &gt; 0</code> is not really necessary.</span>
<span class="comment-copy">I did try set.union before but wasnt getting the answer.   Apparently i was missing the * in it.  Thanks</span>
<span class="comment-copy">As i mentioned above, I did try set.union before but wasnt getting the answer. Apparently i was missing the * in it thats why it wasnt working.  Thanks.  What does the * doing that it doesnt work without it?</span>
<span class="comment-copy">@user1179317 See <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">Unpacking Argument Lists</a></span>
