<div class="post-text" itemprop="text">
<p>My question is little bit different than the question posted <a href="https://stackoverflow.com/questions/48241677/delete-rows-of-a-data-frame-based-on-quantity-of-data-in-another-data-frame">here</a></p>
<p>So I thought to open a new thread.I have a pandas data frame with 5 attributes.One of these attribute is created using pandas series.Here is the sample code for creating the data frame</p>
<pre><code>import numpy as np
mydf1=pd.DataFrame(columns=['group','id','name','mail','gender'])
data = np.array([2540948, 2540955, 2540956,2540956,7138932])
x=pd.Series(data)    
mydf1.loc[0]=[1,x,'abc','abc@xyz.com','male']
</code></pre>
<p>I have another data frame,the code for creating the data frame is given below</p>
<pre><code>mydf2=pd.DataFrame(columns=['group','id'])
data1 = np.array([2540948, 2540955, 2540956])
y=pd.Series(data1)
mydf2.loc[0]=[1,y]
</code></pre>
<p>These are sample data. Actual data will have large number of rows &amp; also the series length is large too .I want to match mydf1 with mydf2 &amp; if it matches,sometime I wont have matching element in mydf2,then I will delete values of id from mydf1 which are there in mydf2 for example after the run,my id will be for group 1  <code>2540956,7138932</code>. I also tried the code mentioned in above link. But for the first line</p>
<pre><code>counts = mydf1.groupby('id').cumcount()
</code></pre>
<p>I got error message as
    TypeError: 'Series' objects are mutable, thus they cannot be hashed
in my Python 3.X. Can you please suggest me how to solve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work. We use <a href="https://docs.python.org/3/library/collections.html#counter-objects" rel="nofollow noreferrer"><code>Counter</code></a> to find the difference between 2 lists of ids. (p.s. This problem does not requires the difference is in order.)</p>
<p>Setup</p>
<pre><code>import numpy as np
from collections import Counter
mydf1=pd.DataFrame(columns=['group','id','name','mail','gender'])
x = [2540948, 2540955, 2540956,2540956,7138932]
y = [2540948, 2540955, 2540956,2540956,7138932]
mydf1.loc[0]=[1,x,'abc','abc@xyz.com','male']
mydf1.loc[1]=[2,y,'def','def@xyz.com','female']

mydf2=pd.DataFrame(columns=['group','id'])
x2 = np.array([2540948, 2540955, 2540956])
y2 = np.array([2540955, 2540956])
mydf2.loc[0]=[1,x2]
mydf2.loc[1]=[2,y2]
</code></pre>
<p>Code</p>
<pre><code>mydf3 = mydf1[["group", "id"]]
mydf3 = mydf3.merge(mydf2, how="inner", on="group")

new_id_finder = lambda x: list((Counter(x.id_x) - Counter(x.id_y)).elements())

mydf3["new_id"] = mydf3.apply(new_id_finder, 1)
mydf3["new_id"]
    group   new_id
0   1       [2540956, 7138932]
1   2       [2540948, 2540956, 7138932]
</code></pre>
<p>One <code>Counter</code> object can <code>substract</code> another to get the difference in occurances of elements. Then, you can use <code>elements</code> function to retrieve all values left.</p>
</div>
<span class="comment-copy">Any suggestion please?</span>
<span class="comment-copy">I need it very urgently.I will be glad if someone of you can suggest me a solution</span>
<span class="comment-copy">Can you have more data...I cannot tell what you want from your description.</span>
<span class="comment-copy">How to you match? What's the critirion? Do you match by group or by id?</span>
<span class="comment-copy">Thanks @Tai,Sure I will let you know</span>
<span class="comment-copy">It works.Thanks a lot @Tai</span>
<span class="comment-copy">@TanviMirza Thanks for letting me know!!</span>
