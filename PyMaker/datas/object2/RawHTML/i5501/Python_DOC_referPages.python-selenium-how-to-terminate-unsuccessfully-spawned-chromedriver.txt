<div class="post-text" itemprop="text">
<p>The following line of code is executed in my Python script:</p>
<pre><code>driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)
</code></pre>
<p>This line may either fail or succeed, depending on apparently random conditions (It is due to an extension that is being loaded, but that is not relevant here).</p>
<p>The problem is that even if this line fails, and raises a <code>WebDriverException</code>, an instance of Chromium will still be spawned, eventually flooding my entire desktop because I am running this line in a while loop until it works.</p>
<p>The following block of code does not work because driver is not defined.</p>
<pre><code>try:
    driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)
except WebDriverException:
    driver.quit()
</code></pre>
<p>How to do this in a clever way?</p>
</div>
<div class="post-text" itemprop="text">
<p>As you mentioned you have the following line :</p>
<pre><code>driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)
</code></pre>
<p>And this line may either <code>fail</code> or <code>succeed</code>. So there are 2 usecases which can be addressed as follows :</p>
<ul>
<li><p><strong><code>Success</code></strong> : Incase the above mentioned line of code is <code>Success</code> we will use <code>driver.quit()</code> straight away as follows :</p>
<pre><code>try:
    driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)
    #other code
    driver.quit()
</code></pre></li>
<li><p><strong><code>Failure</code></strong> : Incase the above mentioned line of code is <code>Failure</code> we will use the <a href="https://technet.microsoft.com/en-us/library/bb491009.aspx" rel="nofollow noreferrer"><strong>taskkill</strong></a> command from <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer"><strong>os</strong></a> module to force-kill the <strong><code>chromedriver</code></strong> <code>process</code> straight away as follows :</p>
<pre><code>import os
#other code
try:
    driver = webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)
    #other code
    driver.quit()
except WebDriverException:
        os.system("taskkill /im chromedriver.exe")
</code></pre></li>
</ul>
<hr/>
<h2>Trivia</h2>
<p>Through the command <code>webdriver.Chrome(CHROMEDRIVER_PATH, chrome_options = chrome_options)</code> irrespective of whether <code>Chromium</code>session is spawned or not, a separate <code>chromedriver</code> session will be always spawned which we have taken care in our code. If you want to kill the <code>Chromium</code>session as well, you have to add the following line as well :</p>
<pre><code>os.system("taskkill /im chrome.exe")
</code></pre>
</div>
<span class="comment-copy">By default, Chrome is attached to the chromedriver and whenever chromedriver is killed - Chrome would be automatically killed. What kind of <code>WebDriverException</code> is raised in your case? Thanks.</span>
<span class="comment-copy">WebDriverException: unknown error: failed to wait for extension background page to load: chrome-extensions://lotsofcharacters/_generated_background_page.html</span>
<span class="comment-copy">Thanks for the info. Ah, are you also loading a custom extension?</span>
<span class="comment-copy">Yes, ModHeader.</span>
<span class="comment-copy">What if other independent chromedriver instances that I don't want to terminate are running at the same time?</span>
<span class="comment-copy">@user3257755 Then we have to extract the PID and kill the process through PID which is out of scope for this question. Please Accept the Answer.</span>
