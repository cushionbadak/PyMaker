<div class="post-text" itemprop="text">
<p>Is there a way for Python to save an output to a file on the computer once a specific variable has been set and then if the code is restarted python would read the state of the variable from the file and see whether or not the code can be launched.</p>
<pre><code>if Flashlight in ['N', 'n', 'No', 'no', 'NO']:
    print("You can not proceed without a flashlight")
    time.sleep(1)
    print("sv_cheats 1")
    time.sleep(1)
    achievements = 'Off'
    print("Cheats are now enabled achievements will not be counted")
    time.sleep(1)
    print("prop_spawn Flashlight [@A] 1")
    time.sleep(1)
    print("Give [@P] Flashlight")
    time.sleep(1)
    print("sv_che...")
    time.sleep(3)
    print"""-DISCONNECTED-
VAC banned from secure server."""
    time.sleep(3)
    print"[xX_N00B5L4Y3R3OOO_Xx]"
    time.sleep(5)
    print"""Your Steam Community privileges have been suspended permenantely
for violations of the Steam Subscriber Agreement.
Steam Community privileges will be restored Never.
More information on this topic is available here: Steam-Community-FAQ"""
    time.sleep(2)
    print"Achievement: Banished from the Steam Community"
    exit()
</code></pre>
<p>So basically where the code says that "Your Steam Community privileges..." I would like to have a variable or whatever it's called save to a file and then right at the start of the code I would like an if statement that says something like If #the code from the file says VAV == True then exit() but I do not know how I would do that.</p>
</div>
<div class="post-text" itemprop="text">
<p>Short answer:</p>
<p>Yes, this is possible and relatively simple.</p>
<p>Long answer:</p>
<p>This essentially boils down to something like the below script:</p>
<pre><code>with open("file.txt", "r") as f:
    if f.read() == "True":
        print("True")
        #You can do any operations here
    elif f.read() == "False":
        print("False")
</code></pre>
<p>If you add this to a file and place a document called "file.txt" in the same directory with its contents being either "True" or "False" then you will notice that when you run the program you end up printing either "True" or "False" depending on the contents of the file.</p>
<p>Let's break this down real quick:</p>
<pre><code>with open("file.txt", "r") as f:
</code></pre>
<p>There's a lot going on in the above line, if you want to learn the details of this line there's a brilliant explanation in <a href="https://pythontips.com/2014/01/15/the-open-function-explained/" rel="nofollow noreferrer">this article</a>. All you really need to know is that we're opening the file "file.txt" and storing it in the variable <code>f</code>. We're also ensuring that we properly close the file once we're done with it so that we don't cause any problems later on.</p>
<pre><code>    if f.read() == "True":
</code></pre>
<p>Calling <code>.read()</code> on the file (which we stored inside <code>f</code>) will return it's contents. We're then checking to see if the contents are equal to <code>"True"</code> . . .</p>
<pre><code>        print("True")
        #You can do any operations here
</code></pre>
<p>. . . If the contents are equal to <code>"True"</code> then we can do whatever operations we want here, this is where you'd continue with the actions you want the program to do in the event of a "positive" (as in we want to proceed with the program's normal operations) variable being stored in the file.</p>
<pre><code>    elif f.read() == "False":
        print("False")
</code></pre>
<p>Otherwise, we check to see if it equals <code>"False"</code>, in this case, we're looking at what we'd do in the event of a "negative" (as in we don't want to proceed with the program's normal operations) variable being stored in the file.</p>
<hr/>
<p>Once you understand the basic concepts at play here you can start doing things "cleaner" using a filetype like JSON or XML.</p>
<pre><code>import json

with open("file.json", "r") as f:
    json = json.loads(f.read())
    if json["state"] == "True":
        print("True")
        #You can do any operations here
    elif json["state"] == "False":
        print("False")
</code></pre>
<p>Using the above script along with a JSON file named "file.json" in the same directory with the below contents . . . </p>
<pre><code>{
"state": "True"
}
</code></pre>
<p>We can do the same thing as the first script, however, now we can easily add more variables to check. If for example, you wanted to script to automatically jump to a specific page/screen/dialogue, well then you just add a variable for that to your JSON script and a check for it in Python and hey presto, you've got the ability to pick up at specific points in your program.</p>
</div>
<span class="comment-copy">Yes it is possible. You need to break the tasks down into smaller parts. So you probably want to start with saving data to files and then reading them again</span>
<span class="comment-copy">This is a good place to start: <a href="http://www.pythonforbeginners.com/files/reading-and-writing-files-in-python" rel="nofollow noreferrer">pythonforbeginners.com/files/â€¦</a></span>
<span class="comment-copy">You could use the <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">configparser</a> module for that.</span>
