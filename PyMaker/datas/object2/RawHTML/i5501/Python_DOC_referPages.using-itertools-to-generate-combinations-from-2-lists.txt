<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/533905/get-the-cartesian-product-of-a-series-of-lists">Get the cartesian product of a series of lists?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists <code>[1,2,3]</code> and <code>[4,5,6]</code>. I'd like to generate a list of all combinations as follows using <code>itertools</code></p>
<p><code>ResultingList = [[1,4],[1,5],[1,6],[2,4],[2,5],[2,6],[3,4],[3,5],[3,6]]</code></p>
<p>So far I've only investigated the <code>itertools.combinations</code> function which seems that it can only handle something like this:</p>
<pre><code>list(itertools.combinations([1,2,3,4,5,6],2))
</code></pre>
<p>Which outputs an incorrect result. How can I generate <code>ResultingList</code> above?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; list(product([1,2,3], [4,5,6]))
[(1, 4), (1, 5), (1, 6), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 6)]
</code></pre>
<p><em>For general understaging:</em></p>
<p>As stated in the docs, <code>product</code> is the equivalent of:
<code>((x,y) for x in A for y in B)</code> where A and B are your input lists</p>
</div>
<div class="post-text" itemprop="text">
<p>if you are not importing product from itertools , then you can use this way also</p>
<pre><code>a=[1,2,3]
b=[4,5,6]
c=[]
for i in a:
    for j in b:
        c.append((i,j))
print c 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do simply :</p>
<pre><code>print([(i,j) for i in a for j in b])
</code></pre>
<p>output:</p>
<pre><code>[(1, 4), (1, 5), (1, 6), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 6)]
</code></pre>
</div>
<span class="comment-copy">not really... this formulation of the question is much more straightforward and helpful imo</span>
<span class="comment-copy">yup yup thanks. thats how you do it</span>
<span class="comment-copy">And if you must have sublists: <code>list(map(list, product([1,2,3], [4,5,6])))</code></span>
