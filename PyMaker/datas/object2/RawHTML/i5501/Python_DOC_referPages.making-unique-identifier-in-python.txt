<div class="post-text" itemprop="text">
<p>I made a simple program with ten ovals. I will work with them later and I'll need to move ovals, so I need unique name for every oval. However, there is a lot of ovals so I don't want to make every oval on new line of code. I used loop, but then I am not able to make unique name for them. Like for example:</p>
<ul>
<li><p>self.oval_id1 = self.canvas.create_oval(40,40,60,60)</p></li>
<li><p>self.oval_id2 = self.canvas.create_oval(60,40,80,60)...etc</p></li>
</ul>
<p>Is there any way to make such names in loop please?</p>
<pre><code>import tkinter
class Main:
    def __init__(self):
        self.canvas = tkinter.Canvas(width=500, height=300)
        self.canvas.pack()
        x, y = 50, 50
        for i in range(10):
            self.canvas.create_oval(x-10,y-10,x+10,y+10)
            x += 30
main = Main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably want <code>setattr</code>:</p>
<p>So, something like:</p>
<pre><code>class Main:
    def __init__(self):
        self.canvas = tkinter.Canvas(width=500, height=300)
        self.canvas.pack()
        x, y = 50, 50
        for i in range(10):
            oval = self.canvas.create_oval(x-10,y-10,x+10,y+10)
            setattr(self, 'oval_%d' % i, oval)
            x += 30
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Even if tricks could allow you to achieve that, you do not want that. It you need it to be iterable, use an iterable container first, here a list.</p>
<pre><code>class Main:
    def __init__(self):
        self.canvas = tkinter.Canvas(width=500, height=300)
        self.canvas.pack()
        self.oval_id = []
        x, y = 50, 50
        for i in range(10):
            self.oval_id.append(self.canvas.create_oval(x-10,y-10,x+10,y+10))
            x += 30
</code></pre>
<p>You can now use <code>self.oval_id[i]</code> to access the i-th oval</p>
</div>
<span class="comment-copy">Just build a string out of your loop-index (or in some more crazy setups; your question is broad here; use <a href="https://docs.python.org/3/library/uuid.html?highlight=uuid" rel="nofollow noreferrer">uuid</a>'s).</span>
<span class="comment-copy">Store the oval identifiers in a list or dictionary.</span>
<span class="comment-copy">This is too complicated, when you can simply store the identifiers in a list or dictionary</span>
<span class="comment-copy">Or even a dictionary if you want to give things descriptive names</span>
