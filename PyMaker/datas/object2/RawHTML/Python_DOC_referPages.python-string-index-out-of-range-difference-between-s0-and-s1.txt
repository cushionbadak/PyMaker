<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9490058/why-substring-slicing-index-out-of-range-works-in-python">Why substring slicing index out of range works in Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Hi I am new to Python and  was trying to achieve the function of removing the empty spaces in both ends using.</p>
<p><code>trim_1()</code> works perfect , but I got this error  when using the <code>trim_2()</code>:</p>
<pre><code>IndexError: string index out of range 
</code></pre>
<p>So <code>s[:1]</code> and <code>s[0]</code> are not the same thing? Why <code>s[:1]</code> works and <code>s[0]</code> does not?
Anyone could shed some light on this?</p>
<pre><code>def trim_1(s) :
    while s[:1]  == ' ':
        s= s[1:]
    while s[-1:] == ' ':
        s= s[:-1]
    return s


def trim_2(s) :
    while s[0] == ' ':
        s= s[1:]
    while s[-1] == ' ':
        s= s[:-1]
    return s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is because Python is tolerant towards out-of-bound indices for slices, while intolerant towards out-of-bound indices for lists/strings themselves, as demonstrated below:</p>
<pre><code>&gt;&gt;&gt; ''[:1] # works even though the string does not have an index 0
''
&gt;&gt;&gt; ''[0]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
IndexError: string index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are asking for a specific index then you are telling the computer that your code requires the value to proceed. Therefore, there must be an element at the specified index or you will see the error. When using this method it is common practice to check first, for example:</p>
<pre><code>value = None
if len(s) &gt; 0:
    value = s[0]  # if index 0 doesn't exist, and error will be thrown
</code></pre>
<p>If you are asking for an open ended "slice" like that then you are telling the computer that you want <em>all</em> elements in a specified range. You the programmer will need to handle the possible outcomes: no elements exist, 1 element exists, more than one element exists.</p>
<pre><code>values = s[:0]  # returns variable number of elements
if len(values) == 0:
    ...
elif len(values) &gt; 0:
    ...
</code></pre>
<p>Both methods have their uses. Remember that you the programmer are in control. These are both just tools you can use to solve your issue. With each option comes different edge cases that you have to handle. Keep in mind that there are one or two appropriate <em>data structure(s)</em> for every scenario. If you are using an inappropriate one, like putting object properties into an array instead of using a class, you will find your code looking cumbersome and ugly. Just something to keep in mind. Stuff like this just makes sense as you get more experienced. Hope that helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried -</p>
<pre><code>sentence = ' hello  apple '
sentence.strip()
</code></pre>
</div>
<span class="comment-copy">No they are not the same thing, <code>s[0]</code> is the first character, <code>s[:-1]</code> is the whole string. On the other hand, <code>s[0] == s[-len(s)]</code> and <code>s[-1] == s[len(s)-1]</code>. What you are trying to achieve can be done using <code>s.strip()</code>.</span>
<span class="comment-copy">Thank you blhsing</span>
<span class="comment-copy">"Remember that you the programmer are in control" Very good advice!!!!!! THANKS</span>
<span class="comment-copy">Thanks Regressor for bring this build-in func up.</span>
