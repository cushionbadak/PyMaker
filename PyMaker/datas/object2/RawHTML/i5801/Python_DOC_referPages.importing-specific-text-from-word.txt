<div class="post-text" itemprop="text">
<p>I have a couple hundred Word docs that have some number measurements that I need in my code. Naturally, I don't want to copy and paste the measurements into python each time. What I have tried to do is:</p>
<pre><code>r = []
with open('NGC1705_rotmod.dat') as fo:
    for rec in fo:
        r.append(rec[0:4])
</code></pre>
<p>Which returns:</p>
<pre><code>['# Di', '# Ra', '# kp', '0.22', '0.66', '1.11', '1.55', '2.00', '2.45', '2.89', '3.34', '3.78', '4.22', '4.66', '5.11', '5.56', '6.00']
</code></pre>
<p>However, the first three elements (<code>#Di, #Ra, #kp</code>) are simply the headers for the data, they aren't part of the data that I need. Is there any way to cut off the first 3 rows?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a></p>
<pre><code>from itertools import islice

r = []
with open('NGC1705_rotmod.dat') as fo:
    for rec in islice(fo, 3, None):
        r.append(rec[0:4])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, try this.  There is probably a cleaner way, but this should work.</p>
<pre><code>r = []
with open('NGC1705_rotmod.dat') as fo:
    next(fo)
    next(fo)
    next(fo)
    for rec in fo:
        r.append(rec[0:4])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can track the line no there and then pass if the line no is 0 because header are only in line 0 so something like :</p>
<pre><code>r = []
with open('NGC1705_rotmod.dat') as fo:

    for line_no,rec in enumerate(fo):
        if line_no==0:
            pass
        else:
            r.append(rec[0:4])
</code></pre>
</div>
<span class="comment-copy">Thank you, on a slightly unrelated note... do you happen to know how to append data for a numpy.array? I realized after I asked this question that I need r to be r = np.array([]) for later code. Since np.array doesn't support ".append", is there something that accomplishes the same thing except is compatible for np.array?</span>
<span class="comment-copy">The easiest way would be to build <code>r</code> as above and then do <code>r = np.array(r)</code>. It's also worth noting that it's still strings at this point.</span>
<span class="comment-copy">Oh, is there a quick way to convert an array of Strings to an array of ints?</span>
<span class="comment-copy">I would do it when you're appending them to the list, before it becomes an array. And you probably want them to be floats.</span>
<span class="comment-copy">Ya, I just did something like r = list(map(float, r)), although your way may be cleaner</span>
