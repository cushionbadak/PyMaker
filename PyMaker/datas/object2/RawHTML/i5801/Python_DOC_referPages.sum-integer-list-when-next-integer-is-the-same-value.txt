<div class="post-text" itemprop="text">
<p>So I need to have a code that checks one integer, and checks if the integer after it is the same value. If so, it will add the value to <code>x</code>.</p>
<pre><code>input1 = [int(i) for i in str(1234441122)]
x= 0
</code></pre>
<p>So my code currently gives the result <code>[1, 2, 3, 4, 4, 4, 1, 1 ,2 ,2]</code>. I want it to give the result of <code>x = 0+4+4+1+2</code>.
I do not know any way to do that.</p>
</div>
<div class="post-text" itemprop="text">
<p>The following will work. Zip together adjacent pairs and only take the first elements if they are the same as the second ones:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4, 4, 4, 1, 1, 2, 2]
&gt;&gt;&gt; sum(x for x, y in zip(lst, lst[1:]) if x == y)
11
</code></pre>
<p>While this should be a little less [space-]efficent in theory (as the slice creates an extra list), it still has <code>O(N)</code> complexity in time and space and is well more readable than most solutions based on indexed access. A tricky way to avoid the slice while still being concise and avoiding any imports would be:</p>
<pre><code>&gt;&gt;&gt; sum((lst[i] == lst[i-1]) * lst[i] for i in range(1, len(lst)))  # Py2: xrange
11
</code></pre>
<p>This makes use of the fact that <code>lst[i]==lst[i-1]</code> will be cast to <code>0</code> or <code>1</code> appropriately.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way using <code>itertools.groupby</code></p>
<pre><code>l = [1, 2, 3, 4, 4, 4, 1, 1 ,2 ,2]
from itertools import groupby
sum(sum(g)-k for k,g in groupby(l))
#11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>s = str(1234441122)
new_data = [int(a) for i, a in enumerate(s) if i+1 &lt; len(s) and a == s[i+1]]
print(new_data)
final_data = sum(new_data)
</code></pre>
<p>Output:</p>
<pre><code>[4, 4, 1, 2]
11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No need for that list. You can remove the "non-repeated" digits from the <em>string</em> already:</p>
<pre><code>&gt;&gt;&gt; n = 1234441122
&gt;&gt;&gt; import re
&gt;&gt;&gt; sum(map(int, re.sub(r'(.)(?!\1)', '', str(n))))
11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are simply iterating on string and converting character to integer. You need to iterate and compare to next character.</p>
<pre><code>a = str(1234441122)
sum = 0
for i,j in enumerate(a[:-1]):
    if a[i] == a[i+1]:
        sum+=int(a[i])
print(sum)
</code></pre>
<p>Output</p>
<pre><code>11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this one too:</p>
<pre><code>input1 = [int(i) for i in str(1234441122)]
x= 0
res = [input1[i] for i in range(len(input1)-1) if input1[i+1]==input1[i]]
print(res)
print(sum(res))
</code></pre>
<p>Output:</p>
<pre><code>[4, 4, 1, 2]
11
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a slightly more space efficient version of @schwobaseggl's answer.</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4, 4, 4, 1, 1, 2, 2]
&gt;&gt;&gt; it = iter(lst)
&gt;&gt;&gt; next(it) # throw away first value
&gt;&gt;&gt; sum(x for x,y in zip(lst, it) if x == y)
11
</code></pre>
<p>Alernatively, using an <code>islice</code> from the <code>itertools</code> module is equivalent but looks a bit nicer.</p>
<pre><code>&gt;&gt;&gt; from itertools import islice
&gt;&gt;&gt; sum(x for x,y in zip(lst, islice(lst, 1, None, 1)) if x == y)
11
</code></pre>
</div>
<span class="comment-copy">What did you try so far?</span>
<span class="comment-copy">I tried to use print (1(input1)) to see if that would show the first integer, but that didn't work.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/posts/47656434/edit">Edit</a> your question to include the rest of the code you tried</span>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the links it contains.  Invest some time with <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a> practicing the examples. It will give you an idea of the tools Python offers to help you solve your problem.</span>
<span class="comment-copy">A bit shorter: <code>sum((i and x == lst[i-1]) * x for i, x in enumerate(lst))</code></span>
<span class="comment-copy">Or <code>sum(sum(g) - k for k, g in groupby(l))</code>.</span>
<span class="comment-copy">@Stefan - wow, good idea. thanks. will update</span>
<span class="comment-copy">I like this one, too :) very creative!</span>
<span class="comment-copy">instead of <code>i+1 &lt; len(s)</code> you could simply slice the string. <code>input1 = sum([int(n) if n == str_repr[i+1] else 0 for i, n in enumerate(str_repr[:-1])])</code></span>
