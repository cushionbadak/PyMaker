<div class="post-text" itemprop="text">
<p>I have CSV file with the following format </p>
<pre class="lang-none prettyprint-override"><code>Column_a,Column_b,Column_c,Column_date
a,b,c,08-jun-2017 00:00 to UP (ENG)
</code></pre>
<p>I want to convert the data with name <code>Column_date</code></p>
<p>Example: <code>08-jun-2017 00:00 to UP (ENG)</code> should be converted to <code>17W23D4 to UP (ENG)</code></p>
<p>The format is year within century <code>17</code>; week of year <code>W23</code>; day of week <code>D4</code>. The days go from Monday (1) to Sunday (7).</p>
<p>So the final CSV should look like:</p>
<pre class="lang-none prettyprint-override"><code>Column_a,Column_b,Column_c,Column_date
a,b,c,17W23D4 to UP (ENG)
</code></pre>
<p>It would be great if can do in a <code>.bat</code> file, but another scripting language is also okay.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Perl, you can use <a href="http://p3rl.org/Time::Piece" rel="nofollow noreferrer">Time::Piece</a>:</p>
<pre><code>$ perl -MTime::Piece -wE '
    $tp = Time::Piece-&gt;strptime("08-jun-2017 00:00", "%d-%b-%Y %H:%M");
    say $tp-&gt;yy, "W", $tp-&gt;week, "D", $tp-&gt;day_of_week'
17W23D4
</code></pre>
<p>You first need to extract the date and time from the string, though.</p>
<p>You can use <code>-F,</code> to split each line on commas into the @F array, then use a regex to extract the timestamp:</p>
<pre><code>perl -MTime::Piece -F, -anE '
    print, next if $. == 1;
    ($timestring, $rest)
        = pop(@F) =~ /([0-9]{2}-[a-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2})(.*)/;
    $tp = Time::Piece-&gt;strptime($timestring, "%d-%b-%Y %H:%M");
    say join ",", @F, $tp-&gt;yy . "W" . $tp-&gt;week . "D" . $tp-&gt;day_of_week . $rest;
' -- input.csv
</code></pre>
<p>IIRC, on MSWin you need to switch single and double quotes.</p>
<p>See <a href="http://p3rl.org/pop" rel="nofollow noreferrer">pop</a>, <a href="http://p3rl.org/perlre" rel="nofollow noreferrer">perlre</a>, <a href="http://p3rl.org/join" rel="nofollow noreferrer">join</a> for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>I want to convert the data with name <code>Column_date</code></strong></p>
<p>The following <strong>Python</strong> solution is based on <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code> — Basic date and time types</a> documentation. Please scroll down to <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strftime()</code> and <code>strptime()</code> Behavior</a> section for meaning of <code>%y</code>, <code>%V</code>, <code>%u</code>, … directives:</p>
<pre><code>^^&gt; python
Python 3.5.1 (v3.5.1:37a07cee5969, Dec  6 2015, 01:54:25) [MSC v.1900 64 bit (AMD64)]
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt;
&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt;
&gt;&gt;&gt; ColDateOld = '08-jun-2017 00:00'   ### extract from `CSV`
&gt;&gt;&gt; ColDateNew = datetime.strptime(ColDateOld, '%d-%b-%Y %H:%M').strftime("%yW%VD%u")
&gt;&gt;&gt; print( ColDateNew)                 ### populate the result
17W23D4
&gt;&gt;&gt;
&gt;&gt;&gt;
</code></pre>
<p>Read and follow <a href="https://docs.python.org/3.5/library/csv.html?highlight=csv" rel="nofollow noreferrer">CSV File Reading and Writing</a> as well.</p>
</div>
<span class="comment-copy">I don't understand the algorithm/logic to map <code>08-jun-2017 00:00 to UP (ENG)</code> to <code>17W23D4 to UP (ENG)</code>.</span>
<span class="comment-copy">What have you tried? This is not a code-writing service.</span>
<span class="comment-copy">basically 08-jun-2017 00:00 should be changed to 23rd week and day 4 (Monday is 1st day of week) of year 2017</span>
