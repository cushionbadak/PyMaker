<div class="post-text" itemprop="text">
<p>I'm trying to find all lines that are all caps using regex, and so far I've tried this:</p>
<pre><code>re.findall(r'\b\n|[A-Z]+\b', kaizoku)
</code></pre>
<p>So far my database is as follows:</p>
<pre><code>TRAFALGAR LAW
You shall not be the pirate king.
MONKEY D LUFFY
Now!
DOFLAMINGO'S UNDERLINGS:
Noooooo!
</code></pre>
<p>I want it to return</p>
<pre><code>TRAFALGAR LAW
MONKEY D LUFFY
DOFLAMINGO'S UNDERLINGS:
</code></pre>
<p>But it's returning something else.
(Namely this:</p>
<pre><code>TRAFALGAR
LAW
Y
MONKEY
D
LUFFY
N
DOFLAMINGO'
S
UNDERLINGS:
N
</code></pre>
<p><strong>EDIT</strong>
So far I really think the best fit for the answer is @Jan's answer </p>
<pre><code>rx = re.compile(r"^([A-Z ':]+$)\b", re.M)
rx.findall(string)
</code></pre>
<p><strong>EDIT2</strong> Found out what's wrong, thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Here you go</p>
<pre><code>import re

string = """TRAFALGAR LAW
You shall not be the pirate king.
MONKEY D LUFFY
Now!
DOFLAMINGO'S UNDERLINGS:
Noooooo!
"""

rx = re.compile(r"^([A-Z ':]+$)", re.M)

UPPERCASE = [line for line in string.split("\n") if rx.match(line)]
print(UPPERCASE)
</code></pre>
<p>Or:</p>
<pre><code>rx = re.compile(r"^([A-Z ':]+$)", re.M)

UPPERCASE = rx.findall(string)
print(UPPERCASE)
</code></pre>
<p>Both will yield</p>
<pre><code>['TRAFALGAR LAW', 'MONKEY D LUFFY', "DOFLAMINGO'S UNDERLINGS:"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Brief</h2>
<p>No need for regex, python has the method <a href="https://docs.python.org/3/library/stdtypes.html#str.isupper" rel="nofollow noreferrer"><code>isupper()</code></a></p>
<blockquote>
<p>Return true if all cased characters<sup>[4]</sup> in the string are uppercase and there is at least one cased character, false otherwise.</p>
<p><sub>[4] Cased characters are those with general category property being one of “Lu” (Letter, uppercase), “Ll” (Letter, lowercase), or “Lt” (Letter, titlecase).</sub></p>
</blockquote>
<hr/>
<h2>Code</h2>
<p><a href="https://ideone.com/JXoqzA" rel="nofollow noreferrer">See code in use here</a></p>
<pre><code>a = [
    "TRAFALGAR LAW",
    "You shall not be the pirate king.",
    "MONKEY D LUFFY",
    "Now!",
    "DOFLAMINGO'S UNDERLINGS:",
    "Noooooo!",
]

for s in a:
    print s.isupper()
</code></pre>
<h3>Result</h3>
<pre><code>True
False
True
False
True
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>[A-Z\W]</code> to check for any uppercase letters along with non alphanumeric characters:</p>
<pre><code>import re
s = ["TRAFALGAR LAW", "You shall not be the pirate king.", "MONKEY D LUFFY", "Now!", "DOFLAMINGO'S UNDERLINGS:", "Noooooo!"]
new_s = [i for i in s if re.findall('^[A-Z\d_\W]+$', i)]
</code></pre>
<p>Output:</p>
<pre><code>['TRAFALGAR LAW', 'MONKEY D LUFFY', "DOFLAMINGO'S UNDERLINGS:"]
</code></pre>
</div>
<span class="comment-copy">What's "something else"?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/8222855/check-if-string-is-upper-lower-or-mixed-case-in-python">Check if string is upper, lower, or mixed case in Python</a></span>
<span class="comment-copy"><code>DOFLAMINGO'S</code> has a quote in it... output &amp; expected output in detail please (<a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>)</span>
<span class="comment-copy">Possible duplicate: <a href="https://stackoverflow.com/q/2323988/8881141">stackoverflow.com/q/2323988/8881141</a> Also no effort, when somebody like me, who doesn't no anything about regex, finds it in less than a minute.</span>
<span class="comment-copy">@Piinthesky: I tried those solutions, and it returned nothing for me.</span>
<span class="comment-copy">you could avoid escaping the quote by quoting your regex with double quotes...</span>
<span class="comment-copy">@Jean-FrançoisFabre: Very true, thanks for spotting it. Updated.</span>
<span class="comment-copy">@Jean-FrançoisFabre: Thank you, but it doesn't do well if one line goes A SERVANT.</span>
<span class="comment-copy">Wouldn't <code>[A-Z\d_\W]</code> be better as it includes digits and underscore (in the case that they may be used)?</span>
<span class="comment-copy">@ctwheels please see my recent edit.</span>
