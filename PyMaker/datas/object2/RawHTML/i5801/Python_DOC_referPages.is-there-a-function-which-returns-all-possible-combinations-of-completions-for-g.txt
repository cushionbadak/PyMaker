<div class="post-text" itemprop="text">
<p>Is there a python function which returns all possible combinations of completions for given set of tokens:</p>
<pre><code>tokens = ["Afoo","fooB","Abar","Bbar","barA","barBX","barBY"]

complete(tokens,"foo","barB")
</code></pre>
<p>should return:</p>
<pre><code>[["Afoo","barBX"],["Afoo","barBY"],["fooB","barBX"],["fooB","barBY"]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no function like that as far as I know, but this is a simple thing to do using loops:</p>
<pre><code>def complete(tokens, foo, bar):
    return [(i, j) for i in tokens if foo in i for j in tokens if bar in j]
</code></pre>
<p>Definitely not super efficient though! You can use generators to do the same thing:</p>
<pre><code>def complete(tokens, foo, bar):
    return ((i, j) for i in tokens if foo in i for j in tokens if bar in j)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Break it down into a search step and 'find combinations' step using itertools</p>
<pre><code>from itertools import product
def complete(tokens, searches):
    # search
    matches = [[t for t in tokens if s in t] for s in searches]

    # find all combinations https://docs.python.org/3/library/itertools.html
    return product(*matches)

tokens = ["Afoo", "fooB", "Abar", "Bbar", "barA", "barBX", "barBY"]
search = ["foo", "barB"]

combinations = list(complete(tokens, search)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>I thought to this solution</h1>
<p>I get all the foo and the barB
then I combine the two lists</p>
<pre><code>tokens = ["Afoo", "fooB", "Abar", "Bbar", "barA", "barBX", "barBY"]

foo = [a for a in tokens if "foo" in a]

barB = [a for a in tokens if "barB" in a]

x = [(a, b) for a in foo for b in barB]

print(x)
</code></pre>
<blockquote>
<p>output:</p>
</blockquote>
<pre><code>[('Afoo', 'barBX'), ('Afoo', 'barBY'), ('fooB', 'barBX'), ('fooB', 'barBY')]
</code></pre>
<h1>Quicker</h1>
<pre><code>tokens = ["Afoo", "fooB", "Abar", "Bbar", "barA", "barBX", "barBY"]

x = [(a, b) for a in tokens if "foo" in a for b in tokens if "barB" in b]

print(x)
</code></pre>
<blockquote>
<p>output:</p>
</blockquote>
<pre><code>[('Afoo', 'barBX'), ('Afoo', 'barBY'), ('fooB', 'barBX'), ('fooB', 'barBY')]
</code></pre>
</div>
