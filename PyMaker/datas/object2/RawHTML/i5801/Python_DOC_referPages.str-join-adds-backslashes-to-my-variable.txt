<div class="post-text" itemprop="text">
<p>I am using Python 3.5 and PyCharm 2017.3</p>
<p>My code appears as following:</p>
<pre><code>var1 = 'ASD'
var2 = 'ASDPO'
qryPwr = ''.join(['select DATE as "DATE"'
                       ' from Table1 where MKT = ', "'", var1, "'",
                       ' and COMP = ', "'", var2, "'",
                       ' and ppow_vdays = 0'
                       ' and PPOW_SETTLE = ', "'", 'S', "'"])
</code></pre>
<p>I get the following for qryPqr:</p>
<pre><code>qryPwr 
'select DATE as "DATE", from Table1 where MKT = \'ASD\' and COMP = \'ASDPO\' and ppow_vdays = 0 and PPOW_SETTLE = \'S\''
</code></pre>
<p>So, I have two questions:</p>
<p>(1) Why are there backslashes everywhere?</p>
<p>(2) How do I get rid of them or make my join statement better?</p>
<p>Edit:
I want to remove the backslashes from the print statement as when I do the database query using <code>qryPwr</code> it tries to run the query with backslashes and hence errors out.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are no backslashes in the variable, they are just in the printed output.</p>
<p>The shell does not print the variable directly, but calls <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code></a> on it. This function </p>
<blockquote>
<p>makes an attempt to return a string that would yield an object with the same value when passed to eval()</p>
</blockquote>
<p>Usually, repr just wraps strings in quotes:</p>
<pre><code>&gt;&gt;&gt; "abc" # actually calls repr("abc")
'abc'
</code></pre>
<p>If your string contains one kind of quotes, it uses the other kind:</p>
<pre><code>&gt;&gt;&gt; "ab'c"
"ab'c"
&gt;&gt;&gt; 'ab"c'
'ab"c'
</code></pre>
<p>But your string contains both kinds of quotes. If you would want to specify that in your code, you could either join string literals which each only have one kind (like you did), or escape one kind:</p>
<pre><code>&gt;&gt;&gt; "a\"b'c"
'a"b\'c'
&gt;&gt;&gt; 'a"b\'c'
'a"b\'c'
</code></pre>
<p>This escaping is exactly what <code>repr</code> does when you output a string representation of the variable to the command line.</p>
<p>One side note: You are building a SQL query by concatenating fixed parts and (user supplied?) variables. <strong>Please don't do that.</strong> Please use at least prepared statements, or better a wrapper library like <a href="https://www.sqlalchemy.org/" rel="nofollow noreferrer">SQLAlchemy</a>. This does not only make it easier to handle database connections, but also much more secure.</p>
</div>
<div class="post-text" itemprop="text">
<p>The backslashes are in the displayed output, but not in the variable itself, if you <code>print</code> your qryPwr you will see this</p>
<pre><code>&gt;&gt;&gt; qryPwr
'select DATE as "DATE", from Table1 where MKT = \'ASD\' and COMP = \'ASDPO\' and ppow_vdays = 0 and PPOW_SETTLE = \'S\''

&gt;&gt;&gt; print(qryPwr)
select DATE as "DATE", from Table1 where MKT = 'ASD' and COMP = 'ASDPO' and ppow_vdays = 0 and PPOW_SETTLE = 'S'
</code></pre>
<p>You will get this if your actual <code>str</code> contains both <code>'</code> and <code>"</code> characters. For a simpler example:</p>
<pre><code>&gt;&gt;&gt; s = 'a "b" \'c\''
&gt;&gt;&gt; 
&gt;&gt;&gt; s
'a "b" \'c\''
&gt;&gt;&gt;
&gt;&gt;&gt; print(s)
a "b" 'c'
&gt;&gt;&gt; len(s) # as expected, \ characters aren't actually there.
9
</code></pre>
</div>
<span class="comment-copy">Try <code>print qryPwr</code> to see how the characters are printed - the backlashes are part of special symbols (<code>'</code> mostly in your case), and would also appear for any line breaks or tabs (<code>\n</code> and <code>\t</code> respectively). See <a href="http://www.pitt.edu/~naraehan/python2/tutorial7.html" rel="nofollow noreferrer">this tutorial</a> for more information.</span>
<span class="comment-copy">The error is not caused by those backslashes. Please show us the full error message and stack trace.</span>
<span class="comment-copy">I have to connect to an existing db using pyodbc. Do you have a basic example of prepared statement implementation? This is the first time I have heard of prepared statements so I am reading through google.</span>
<span class="comment-copy">I think <a href="https://stackoverflow.com/a/9521382/4681308">this answer</a> is a simple example of the concept with odbc. <a href="https://github.com/mkleehammer/pyodbc/wiki/Cursor#executesql-parameters" rel="nofollow noreferrer">This</a> is the documentation.</span>
