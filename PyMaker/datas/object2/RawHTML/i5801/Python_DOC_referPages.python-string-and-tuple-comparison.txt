<div class="post-text" itemprop="text">
<p>How to compare a string and a tuple, raise an error if the string has repeated letters , for example <code>('PTMP',('P','T','M'))</code>  will say <code>raise ValueError(...)</code> but if the tuple had an extra P, like in  <code>('P','T','M','P')</code> the answer would be valid?</p>
<pre><code>def whatever(string,tup): 
    for j in string: 
        if j not in tup: 
            raise ValueError('') 
        for u in tup: 
            if j not in tup: raise ValueError('') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the characters are supposed to be in the same order in the string and the tuple then this will work for you:</p>
<pre><code>if (len(x) == len(y) and all(x[i] == y[i] for i in range(len(x)))):
    raise ValueError()
else:
    # Be happy
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If all you're looking for is that the string doesn't have more of any particular letter than the tuple, you can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> subtraction</p>
<pre><code>from collection import Counter

def can_be_built(s, tup):
   if Counter(s) - Counter(tup):
       # The string does not use letters the tuple doesn't have
       return True
   else:
       return False
</code></pre>
</div>
<span class="comment-copy">Are you trying to compare the counts of the letters in the two?  <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> is the natural solution there</span>
<span class="comment-copy">Can you write your code ?</span>
<span class="comment-copy">What code showed the ValueError?</span>
<span class="comment-copy">please show us what you have tried so far , and i you did not - close the question since you will not receive answer here.</span>
<span class="comment-copy">def whatever(string,tup):        for j in string:               if j not in tup:                      raise ValueError('')         for u in tup:               if j not in tup:                      raise ValueError('')</span>
