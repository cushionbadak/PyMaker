<div class="post-text" itemprop="text">
<p>I was trying to list all attributes/values of an object in interactive shell of python3.6:</p>
<pre><code>e = FileExistsError()
dir(e)
</code></pre>
<p>gives an attribute list like <code>['\__cause__',...,'characters_written',...]</code></p>
<p>but </p>
<pre><code>e.characters_written 
</code></pre>
<p>throws an error:  <code>AttributeError: characters_written</code></p>
<p>when</p>
<pre><code>FileExistsError.characters_written
</code></pre>
<p>executes normally.</p>
<p>Why is <code>characters_written</code> attribute special in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p>That's an attribute of <code>OSError</code> that's made <a href="https://docs.python.org/3/library/exceptions.html#BlockingIOError.characters_written" rel="nofollow noreferrer">available for <code>BlockingIOError</code></a>. <code>dir</code> shows it because it does exist, it's <code>__get__</code> just raises an <code>AttributeError</code> if it is accessed from an instance of a class that doesn't use it.</p>
<p>When accessing it from the class, it simply returns the attribute object itself (it doesn't invoke the attribute objects <code>__get__</code> which raises the <code>AttributeError</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>In Document It is written that <code>characters_written</code> attribute is accessible by IO classes. so you cannot access it by<code>FileExistsError</code> Object</p>
<blockquote>
<p><strong>characters_written</strong>
  An integer containing the number of characters written to the stream before it blocked. This attribute is available when using the buffered I/O classes from the io module (<a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow noreferrer">Document Link Here</a>)</p>
</blockquote>
<p>this topic also discussed here
<a href="https://bugs.python.org/issue30554" rel="nofollow noreferrer">https://bugs.python.org/issue30554</a></p>
</div>
<div class="post-text" itemprop="text">
<p>e = FileExistsError() 
So when you are writing e.characters_written
it is FileExistsError().characters_written which will not work because of the paranthesis.</p>
<p>If you correct your assignment that is e = FileExistsError it will resolve your issue</p>
</div>
<span class="comment-copy">I'd guess it's because it's a class attribute rather than an instance attribute.  Where <code>e.characters_written</code> is an instance attribute and <code>FileExistsError.characters_written</code> is a class attribute.  Sometimes the instance attribute will link to the class attribute but I'm not sure why it doesn't in this case.  Maybe the author of that class went out of their way to unlink the instance attribute from the class attribute?</span>
