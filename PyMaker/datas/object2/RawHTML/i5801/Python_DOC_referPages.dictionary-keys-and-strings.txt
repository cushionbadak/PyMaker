<div class="post-text" itemprop="text">
<p>I'm just getting started with dictionaries in python and I got stumbled at the following code snippet:</p>
<pre><code>for word in word_dict:
    print(word) # Obviously returns the key
print("draw" in word_dict) # returns False even though the key is existent
</code></pre>
<p>I suppose the <code>False</code> is returned maybe due to the incompatibility of types like <code>"draw"</code> is a string and <code>word</code> in the loop is a <code>some sort of string key type</code> maybe.</p>
<p>But when I inspect the types I can see both are <code>&lt;class 'str'&gt;</code> type only !!</p>
<p>How do I convert the string key I provide like "draw" to be acceptable as a key and it returns True? I guess this is a simple oversight but I need to know what the problem here is !</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are kinda lost here.</p>
<p><code>for variable in dict_var:</code> - iterates over <code>dict</code> keys</p>
<p><code>dict.get(&lt;key_name&gt;)</code> return value for key <code>&lt;key_name&gt;</code></p>
<pre><code>for word in word_dict:
    print(word_dict.get(word))
</code></pre>
<p>Will return all values of your <code>dict</code>, since you iteration over all of its keys.</p>
<p><code>some_var in word_dict</code> - checks if value of <code>some_var</code> in list of <code>word_dict</code> keys, so <code>print("draw" in word_dict)</code> just print <code>True</code>/<code>False</code> if key exist in your <code>dict</code>.</p>
<p>And i would <strong>strongly</strong> advise you to read docs on <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionaries</a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Are you sure "draw" is one of the key of word_dict? check your dictionary.</p>
<pre><code>    &gt;&gt;&gt; word_dict = {"draw":1,"xx":2}
    &gt;&gt;&gt; print ("draw" in word_dict)
    True
    &gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you all for your time into this.</p>
<p>I actually split the words in a file to keys in the dictionary and while doing so the keys also had a trailing <code>\n</code>. That's the reason I get False when I give a string without newline. I found this out when I inspected by looping through keys of <code>word_dict.keys()</code></p>
<p>Thanks to <a href="https://stackoverflow.com/users/2390182/schwobaseggl">schwobaseggl</a> for leading me into the solution.</p>
</div>
<span class="comment-copy">What is the output of <code>word_dict.keys()</code>?</span>
<span class="comment-copy">Thanks @schwobaseggl you are right. The keys had newline character at the end. Thats the reason I get False when I give a string manually. You can give it as an answer below.</span>
<span class="comment-copy">That's ok. I will vote to close this as not reproducible.</span>
<span class="comment-copy">Thanks, I actually want to delete this post as it was a personal oversight, which I couldn't do as you guys answered this.</span>
<span class="comment-copy">That's a good idea ;)</span>
<span class="comment-copy">Thanks but actually I put word_dict.get(word) just to check it doesn't return None but the default value that I set to 0. Sorry for not mentioning it in the question.</span>
<span class="comment-copy">@socket_var there is no sense in <code>word_dict.get(word)</code> because you iteration over <code>word_dict</code> keys, and that key would definitely exist.</span>
<span class="comment-copy">Yes I'm sorry for the ambiguity. I was just checking whether I would get o the default value or None. I would keep your point in mind and check for key from here on. Thanks</span>
