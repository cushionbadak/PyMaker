<div class="post-text" itemprop="text">
<p>How to sort a list of 1billion elements in python
Please elaborate
Assuming we have unlimited space</p>
</div>
<div class="post-text" itemprop="text">
<p>Dictionaries are unordered. They are hash tables and you are not guaranteed the order of keys in a hash table. </p>
<p>If you require the keys to be ordered, try the ordered dict class in collections. </p>
<p>If you need to sort the keys you could place them in a list, and sort the list.</p>
<pre><code>my_dict = {key: value for key, value in zip(keys, values)} # Example dict
keys = [i for i in my_dict]
keys.sort()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A dictionary on its own does not store a key order. For this, you will have to use the <a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a> which stores the order of insertion.</p>
<p>If you just need to iterate through the sorted keys, you can use <code>sorted</code>:</p>
<pre><code>for key in sorted(my_dict):
    # output is already sorted by dictionary key
    print key, my_dict[key]
</code></pre>
<p>if you need to specify a special key or method, you could pass this as information to sorted. The following example sorts by value:</p>
<pre><code>for key, value in sorted(my_dict.items(), key=lambda x: x[1]):
    # output is sorted by value
    print key, value
</code></pre>
<p>Sort orders can be reversed by using <code>reversed</code>:</p>
<pre><code>for key in reversed(sorted(my_dict)):
    # output is already sorted descending by dictionary key
    print key, my_dict[key]
</code></pre>
<p>Finally, this code snippet would fill an OrderedDict with sorted key/value pairs:</p>
<pre><code>from collections import OrderedDict
my_ordered_dict = OrderedDict(sorted(my_dict.items(), key=lambda t: t[0]))
</code></pre>
<h3>Since you updated your question from dictionary to list</h3>
<p>Sorting lists is even easier, just use <code>sorted</code> (again, provide a small method, if you have a different sorting key):</p>
<pre><code>sorted_list = sorted(unsorted_list)
</code></pre>
</div>
<span class="comment-copy">This question doesn't have enough details about what your constraints are, what you're trying to do and such to provide a cogent answer. Assuming we have a LOT of memory, you could just call <code>sorted</code> on the dictionary to sort its keys.</span>
<span class="comment-copy">Add some details please</span>
<span class="comment-copy">You use <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> because it works and it is fast. Do you need more?</span>
<span class="comment-copy">If we have infinite space then we must also have infinite time, so we could sort the keys using paper and pencil. Voila!</span>
<span class="comment-copy">Please provide more detail, like what you tried so far /</span>
