<div class="post-text" itemprop="text">
<p>Please close if this is a duplicate, but <a href="https://stackoverflow.com/questions/13873927/printing-evenly-spaced-table-from-a-list-with-a-for-loop">this answer</a> does not answer my question as I would like to print a list, not elements from a list.</p>
<p>For example, the below does not work:</p>
<pre><code>mylist = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
print(%3s % mylist)
</code></pre>
<p>Desired output:</p>
<pre><code>[  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
</code></pre>
<p>Basically, if all items in the list are <code>n</code> digits or less, equal spacing would give each item <code>n+1</code> spots in the printout. Like <code>setw</code> in c++. Assume <code>n</code> is known.</p>
<p>If I have missed a similar SO question, feel free to vote to close.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can exploit formatting as in the example below.  If you really need the square braces then you will have to fiddle a bit</p>
<pre><code>lst = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

frmt = "{:&gt;3}"*len(lst)

print(frmt.format(*lst))
  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>items=range(10)
''.join(f'{x:3}' for x in items)
'  0  1  2  3  4  5  6  7  8  9'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If none of the other answers work, try this code:</p>
<pre><code>    output = ''
    space = ''
    output += str(list[0])
    for spacecount in range(spacing):
        space += spacecharacter
    for listnum in range(1, len(list)):
        output += space
        output += str(list[listnum])
    print(output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this is the best yet, as it allows you to manipulate list as you wish. even numerically.</p>
<pre><code>mylist = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
print(*map(lambda x: str(x)+" ",a))
</code></pre>
</div>
<span class="comment-copy">Just a nitpick, it is called a <code>list</code> in python, not an <code>array</code> :-)</span>
<span class="comment-copy">@bgse In Python an <code>array</code> is a collection of all same objects. <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">docs.python.org/3/library/array.html</a></span>
