<div class="post-text" itemprop="text">
<p>My script:</p>
<pre><code>#!/usr/bin/env python
import os
import re

def grep(filepath, regex):
    regObj = re.compile(regex)
    res = []
    with open(filepath) as f:
        for line in f:
            if regObj.match(line):
                res.append(line)
    return res

print(grep('/opt/conf/streaming.cfg', 'Port='))
</code></pre>
<p>Supposed to loop through the lines in the file given and match the regex provided, if exists, append to <code>res</code> and eventually return <code>res</code>.</p>
<p>The content of <code>/opt/conf/streaming.cfg</code> contains a line:</p>
<pre><code>SocketAcceptPort=8003
</code></pre>
<p>Still prints <code>[]</code></p>
<p>How come?</p>
</div>
<div class="post-text" itemprop="text">
<p>Checking the docs for <a href="https://docs.python.org/3/library/re.html?highlight=match#re.match" rel="nofollow noreferrer"><code>re.match</code></a> gives us this first sentence:</p>
<blockquote>
<p>If zero or more characters at the beginning of string match</p>
</blockquote>
<p>Notice the part about "beginning of string"? You need to use a different re function to match anywhere in the line. For example, further down in the docs for <code>match</code> is this note:</p>
<blockquote>
<p>If you want to locate a match anywhere in string, use search() instead </p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you're looking for a list of ports, could you not use a string comparison instead:</p>
<pre><code>#!/usr/bin/env python
import os
import re

def grep(filepath, substring):
    res = []
    with open(filepath) as f:
        for line in f:
            if substring in line:
                res.append(line.rsplit("\n")[0])
    return res


print(grep('/opt/conf/streaming.cfg', 'Port='))
</code></pre>
<p>giving the result:</p>
<pre><code>['SocketAcceptPort=8003']
</code></pre>
</div>
<span class="comment-copy"><code>regObj.match(line)</code> always return <code>None</code>.</span>
<span class="comment-copy">I need to get only the port. I used <code>match.group(1)</code>. Can I seperate the port number without regex?</span>
<span class="comment-copy">Sure, replace the line <code>res.append(line.rsplit("\n")[0])</code> with <code>res.append(line.split(substring, 1)[1].rsplit("\n")[0])</code>, that will give the output <code>['8003']</code></span>
