<div class="post-text" itemprop="text">
<p>I'm trying to use a couple different implementations of uploading files to S3 from Flask Admin. In both situations I'm getting an SSL error. I've tried a few things that I've found such as adding this to config:</p>
<pre><code>    S3_USE_HTTPS = False
</code></pre>
<p>I also updated the certifi package which I saw recommended on another thread. I can't solve this error. Any idea why I'm getting this?</p>
<p>Error msg below:</p>
<pre><code>&gt; File
&gt; "/Users/kevin/dev/allstarrma/flask-env/lib/python3.6/site-packages/boto/connection.py",
&gt; line 1071, in make_request
&gt;     retry_handler=retry_handler)   File "/Users/kevin/dev/allstarrma/flask-env/lib/python3.6/site-packages/boto/connection.py",
&gt; line 1030, in _mexe
&gt;     raise ex   File "/Users/kevin/dev/allstarrma/flask-env/lib/python3.6/site-packages/boto/connection.py",
&gt; line 943, in _mexe
&gt;     request.body, request.headers)   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 1239, in request
&gt;     self._send_request(method, url, body, headers, encode_chunked)   File
&gt; "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 1285, in _send_request
&gt;     self.endheaders(body, encode_chunked=encode_chunked)   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 1234, in endheaders
&gt;     self._send_output(message_body, encode_chunked=encode_chunked)   File
&gt; "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 1026, in _send_output
&gt;     self.send(msg)   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 964, in send
&gt;     self.connect()   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py",
&gt; line 1400, in connect
&gt;     server_hostname=server_hostname)   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py",
&gt; line 407, in wrap_socket
&gt;     _context=self, _session=session)   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py",
&gt; line 814, in __init__
&gt;     self.do_handshake()   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py",
&gt; line 1068, in do_handshake
&gt;     self._sslobj.do_handshake()   File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py",
&gt; line 689, in do_handshake
&gt;     self._sslobj.do_handshake() ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>information about default https verification can be found:
<a href="https://www.python.org/dev/peps/pep-0476/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0476/</a></p>
<p>There is also great article from Red Hat.
<a href="https://access.redhat.com/articles/2039753" rel="nofollow noreferrer">https://access.redhat.com/articles/2039753</a> Right now it's open, but in case of being behind pay-wall I decided to write key points.</p>
<p>As said in comment you can invoke your python scripts with <code>PYTHONHTTPSVERIFY=0 /path/to/script.py</code></p>
<p>You can also configure - default behaviour in file <code>/etc/python/cert-verification.cfg</code> and change </p>
<pre><code>[https]
verify=platform_default
</code></pre>
<p>to</p>
<pre><code>[https]
verify=disable
</code></pre>
<p>If you are using up to date python 2.7 you can also use in order to dynamically disable cert verification.</p>
<pre><code>import ssl
ssl._https_verify_certificates(0)
</code></pre>
<p>Unfortunately for Python &gt; 3.4 (I tried 3.4.5 and 3.6.3) I wasn't able to find similar function. Same result in documentation <a href="https://docs.python.org/3/library/ssl.html" rel="nofollow noreferrer">https://docs.python.org/3/library/ssl.html</a>.</p>
</div>
<span class="comment-copy">Note <b>this won't solve root cause</b>, but you can invoke python script with PYTHONHTTPSVERIFY=0, so from command line it would look like <code>PYTHONHTTPSVERIFY=0 /path/to/script.py</code>. Python ssl shouldn't complain about certification anymore.</span>
<span class="comment-copy">What about when i deploy to heroku?</span>
