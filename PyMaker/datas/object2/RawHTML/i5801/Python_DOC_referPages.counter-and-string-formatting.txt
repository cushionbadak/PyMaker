<div class="post-text" itemprop="text">
<p>The issue can be solved in many ways but this question is about polymorphism. Is it possible to polymorph Counter() class so when there is no such key in Counter() instance string formatting would return 0? Basically is needed to make the last line of the code to work.</p>
<pre><code>from collections import Counter
VOWELS = 'aeiou'
context = 'Computing is cool'
cnt = Counter()
for letter in context:
    if letter in VOWELS:
        cnt[letter] += 1    
print('o-{o}, i-{i}, o-{o}'.format(**cnt))

# I'd like to make this line to work :
#print('a-{a}, e-{e}, i-{i}, o-{o}, u-{u}'.format(**cnt))
</code></pre>
<p>Output:</p>
<pre><code>o-3, i-2, u-1
</code></pre>
<p>Desirable output:</p>
<pre><code>a-0, e-0, i-2, o-3, u-1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This isn't a case for changing the <code>Counter</code>. <code>**</code> unpacking converts your <code>Counter</code> to a regular dict, which does not have a default value of 0 for missing keys. (At least, it converts your <code>Counter</code> now; <a href="https://bugs.python.org/issue18531" rel="nofollow noreferrer">there was a bug</a> on earlier versions, so if you try the <code>**</code> code on an earlier Python version and it seems to work, that's why.)</p>
<p>Instead of <code>**</code>, use <a href="https://docs.python.org/3/library/stdtypes.html#str.format_map" rel="nofollow noreferrer"><code>format_map</code></a>, which will use your <code>Counter</code> directly:</p>
<pre><code>print('o-{o}, i-{i}, o-{o}'.format_map(cnt))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>when there is no such key in <code>Counter()</code> instance string formatting would return 0?</p>
</blockquote>
<p>but that's not the issue here. The issue is that <code>**cnt</code> will only unpack the existing elements. </p>
<p>What you can do is initialize the counter with zero counts for all <code>VOWELS</code> and then unpack:</p>
<pre><code>cnt = Counter({i:0 for i in 'aeiou'})
</code></pre>
<p>now the unpacking will pick these elements up, even if they have a <code>0</code> count. After the loop executes, <code>print</code>:</p>
<pre><code>print('a-{a}, e-{e}, i-{i}, o-{o}, u-{u}'.format(**cnt))
</code></pre>
<p>will return your wanted result:</p>
<pre><code>a-0, e-0, i-2, o-3, u-1
</code></pre>
</div>
<span class="comment-copy">have you tried uncommenting the last line? because it works as you expect...</span>
<span class="comment-copy">@Jean-François Fabre last commented line doesn't work. It would return "KeyError: 'a'"</span>
<span class="comment-copy">not for me it doesn't. But have you tried replacing <code>Counter</code> by <code>defaultdict(int)</code> ? <i>that</i> would work.</span>
<span class="comment-copy">replace "cnt = Counter()" with "cnt = dict()"? Then loop will fail.</span>
<span class="comment-copy">not dict, <code>collections.defaultdict(int)</code></span>
<span class="comment-copy">Ah, thanks! Tricky :D</span>
<span class="comment-copy">note that it works as OP stated in version 3.4 of python. Maybe worth mentionning with the issue you linked to in comments</span>
<span class="comment-copy">@Jean-FrançoisFabre: Answer expanded.</span>
<span class="comment-copy">that's a very good answer. I wish I could upvote once more for the <code>format_map</code> function only.</span>
<span class="comment-copy"><code>print('a-{a}, e-{e}, i-{i}, o-{o}, u-{u}'.format(**cnt))</code> works for me: I get <code>a-0, e-0, i-2, o-3, u-1</code> without setting anything to 0. At least in python 3.4 it works.</span>
<span class="comment-copy">it does @Jean-FrançoisFabre? version? I can repro OPs KeyError with <code>3.6.3</code></span>
<span class="comment-copy">now <i>that's</i> interesting. Let me test that.</span>
<span class="comment-copy">@jim-fasarakis-hilliard "The issue is that **cnt will only unpack the existing elements". Thanks, that's must be the case! But what does "i:0" do? :)</span>
<span class="comment-copy">@Jean-FrançoisFabre: <a href="https://bugs.python.org/issue18531" rel="nofollow noreferrer">That was a bug.</a></span>
