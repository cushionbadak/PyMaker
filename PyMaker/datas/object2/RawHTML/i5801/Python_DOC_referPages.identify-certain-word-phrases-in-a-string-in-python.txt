<div class="post-text" itemprop="text">
<p>I have a list of word phrases and a string as follows.</p>
<pre><code>mylist = ['and rock, 'shake well', 'the']
mystring = "the sand rock need to be mixed and shake well"
</code></pre>
<p>I want to replace the words in <code>mylist</code> with <code>""</code>.</p>
<p>I am currently using <code>replace</code> method in python as follows.</p>
<pre><code>for item in mylist:
        mystring = mystring.replace(item, "")
</code></pre>
<p>Howver, I noted that it does not work well for all my sentences. For example in <code>mystring</code> it has a fake match with <code>sand rock</code> and output as follows.</p>
<pre><code>  s  need to be mixed and
</code></pre>
<p>Howver, I want it to be as;</p>
<pre><code>sand rock need to be mixed and
</code></pre>
<p>Is there a better way of doing this in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>str.replace()</code> doesn't allow you to specify that you only want to match whole words (or phrases). The <code>re</code> module allows you to use regular expressions (regex) for pattern matching. With regex, you can specify word boundaries using the <code>\b</code> escape. Place the <code>\b</code> escape before and after your phrases to cause the match to only occur at word boundaries. The <code>re.sub()</code> function works like the <code>str.replace()</code> method and you can use it in your code like:</p>
<pre><code>import re
mylist = ['and rock', 'shake well', 'the']
mystring = "the sand rock need to be mixed and shake well"
for item in mylist:
        mystring = re.sub(r"\b{}\b".format(item), "", mystring)        
print(mystring)

Out[6]: ' sand rock need to be mixed and '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Part of the trick of your problem is that you don't want to match partial words. That's why the <code>replace()</code> method does not do what you want it to do.  You can achieve what you want through regular expressions.  One of the nice thing about REs is that you can match on word boundaries using the <code>\b</code> flag.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>re.sub</code> and applying <code>\b</code> (word boundary) to match exact string</p>
<pre><code>import re    
re.sub('\b'+'|'.join(mylist), '', mystring)
#' sand rock need to be mixed and '
</code></pre>
</div>
<span class="comment-copy">change your list to <code>mylist = [' and rock ', ' shake well ', ' the ']</code>... or use regex's.</span>
<span class="comment-copy">This only removes the first occurrence of a phrase.</span>
<span class="comment-copy">@JohnGordon are you sure? I just tested with <code>mystring = 'the the the the'</code> and get the result <code>'   '</code>. According to the <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">docs for <code>re.sub()</code></a>, "<i>The optional argument count is the maximum number of pattern occurrences to be replaced; count must be a non-negative integer. If omitted or zero, all occurrences will be replaced.</i>"</span>
<span class="comment-copy">I stand corrected.  I haven't worked much with <code>re</code>, so shame on me for unwarranted assumptions.</span>
