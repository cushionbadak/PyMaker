<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18195322/pythons-logical-operator-and">Python's Logical Operator AND</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>How do <code>and</code>/<code>or</code> operators work between numbers (or even strings)?</p>
<pre><code>5 and 7  # this returns 7
7 and 5  # this returns 5
21 and 4 # this returns 4
4 and 21 # this returns 21
</code></pre>
<p>How does the <code>and</code> operator work in such cases?</p>
</div>
<div class="post-text" itemprop="text">
<p>AND/OR :<br/>
 5 and 7 #7<br/>
It check 5 first and found it is 'True' so it check for second also and return last one.<br/></p>
<p>0 and 5 # 0<br/>
it check for first and found is zero so whatever will be next value it is always zero so it return 0<br/></p>
<p>2 or 3 and 4 #2<br/>
first value is 2 ('True') and found OR So value is always true so return 2</p>
<p>(2 or 3) and 4 #4<br/>
now return 4.</p>
</div>
<div class="post-text" itemprop="text">
<p>When <code>and</code> is used with integers, it will give you the last value if all value are non-zero, or zero if there's at least one.</p>
<pre><code>1 and 2 and 3 #3
1 and 0 and 3 #0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It returns the last value which is <code>True</code> (if there is any True value).</p>
<p>For an <code>and</code> python needs to check every value, so if they are all true then it returns the last one, if one of them is False, then it returns that value. If all of them are False it returns the first one because Python doesn't need to check the second one as well.</p>
<p>For an <code>or</code> python checks first the first one until he gets True sometime, so if the first value is True it returns this value, if the first one is False but the second one is True, it returns the second one. If they are all False it returns the last one.</p>
<p>The values which are equivalent to False: <code>"",0,False,0j, 0.0, [], {}, set()</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Let's disassemble!</p>
<pre><code>&gt;&gt;&gt; import dis
&gt;&gt;&gt; def check_and(a, b):
...   return a and b
... 
&gt;&gt;&gt; dis.dis(check_and)
  2           0 LOAD_FAST                0 (a)
              3 JUMP_IF_FALSE_OR_POP     9
              6 LOAD_FAST                1 (b)
        &gt;&gt;    9 RETURN_VALUE        
</code></pre>
<p>Now it's pretty straightforward. 
1. Load a to stack (It becomes <code>TOS</code> - Top of stack value.
2. <a href="https://docs.python.org/2/library/dis.html#opcode-JUMP_IF_FALSE_OR_POP" rel="nofollow noreferrer">JUMP_IF_FALSE_OR_POP</a> tries to evaluate boolean value of TOS (Top Of Stack). If it's true, remove this value from stack, if it's not, set bytecode counter (in our case it would junmp to line 9.
3. Push b to stack.
4. Return.</p>
<p>I can't really tell why the evaluation order is different in the other case but as you can see the second evaluated value will be returned if first one is <code>True</code>.</p>
<p>Same happens to <code>or</code> and other operators. try to disassemble them yourself.</p>
<p>This comes handy if you want to make a quick check. Instead of writing:</p>
<pre><code>def check(value)
  if value:
    return value
  else:
    return "No value"
</code></pre>
<p>You can write:</p>
<pre><code>def check(value):
  return value or "No value"
</code></pre>
</div>
<span class="comment-copy">And <a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">the documentation</a> doesn't help you?</span>
<span class="comment-copy">It evaluates to the first "false" operand.  If both operands are "true", it evaluates to the last operand.</span>
<span class="comment-copy">@Someprogrammerdude Thanks! I missed searching the documentation.</span>
<span class="comment-copy">Incorrect.  Try <code>"" and 6</code>.  You believe it is zero.  It is not.</span>
<span class="comment-copy">heh... OP asked about integers :)</span>
<span class="comment-copy">The question mentioned integers as a specific case, but was more general than that:  "My question is how and/or operators work between numbers ( or even strings )".  <code>""</code> is a string.</span>
<span class="comment-copy">also <code>0j</code>, <code>0.0</code>, <code>[]</code>, <code>{}</code>, <code>set()</code>, and any class explicitly returning False when used as bool.</span>
<span class="comment-copy">I will add them, but since @Yoessef13 only asked for numbers and strings I had only these</span>
