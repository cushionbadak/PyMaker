<div class="post-text" itemprop="text">
<p>example input.dat</p>
<pre><code>[settings]
port = 1234
host = abc.com
</code></pre>
<p>How can I parse the file, and assign 
<code>1234 to agrv[1]</code>, 
<code>abc.com to argv[2]</code> and so on </p>
<p>here is what i tried:</p>
<pre><code>$python p.py input.dat
Traceback (most recent call last):
  File "p.py", line 8, in &lt;module&gt;
    print config['settings']['host']
AttributeError: ConfigParser instance has no attribute '__getitem__'
</code></pre>
<p>p.py</p>
<pre><code>  #!/usr/bin/env python
    import sys
    import ConfigParser

    if __name__ == '__main__':
        config = ConfigParser.ConfigParser()
        config.read(sys.argv[1])
        print config['settings']['host']
        print config['settings']['port']
</code></pre>
<p>I don't want to use python3 if I can help it.</p>
</div>
<div class="post-text" itemprop="text">
<p>ConfigParser does not support dict-like lookup. After parsing the file, you retrieve values using its get() method, which takes two arguments, the names of the section and option. So:</p>
<pre><code>config = ConfigParser.ConfigParser()
config.read(sys.argv[1])
print config.get('settings', 'host')
print config.get('settings', 'port')
</code></pre>
<p>More info here: <a href="https://docs.python.org/2/library/configparser.html#configparser-objects" rel="nofollow noreferrer">https://docs.python.org/2/library/configparser.html#configparser-objects</a></p>
</div>
<span class="comment-copy">Note: If you weren't opposed to Python 3, as of Python 3.2, <code>configparser</code> <a href="https://docs.python.org/3/library/configparser.html#mapping-protocol-access" rel="nofollow noreferrer">would support the exact approach you're trying to use</a>.</span>
<span class="comment-copy">Note: On Python 3.2+, <a href="https://docs.python.org/3/library/configparser.html#mapping-protocol-access" rel="nofollow noreferrer"><code>dict</code>-like lookup is supported</a>. If you're writing new code, there is very little reason to avoid moving to Python 3.</span>
<span class="comment-copy">Ah, good point, forgot about that.</span>
<span class="comment-copy">@johndburger so can I do something like $cat test.txt | python p.py , so I don't have to type the arguments, but take them from test.txt</span>
<span class="comment-copy">@kamal That's a separate issue, but yes, you can do that. If you want to allow for either reading the config from stdin <i>or</i> taking it from the command line, I recommend the file inputs module. This would let you write something like this:  <code>config.readfp(fileinput.input())</code>  (Note the switch to the readfp() method.) And then you can write either of these on the command line:  <code>$ cat test.txt | python p.py</code> or <code>$ python p.py test.txt</code>  More about fileinput here:  <a href="https://docs.python.org/2/library/fileinput.html" rel="nofollow noreferrer">docs.python.org/2/library/fileinput.html</a></span>
