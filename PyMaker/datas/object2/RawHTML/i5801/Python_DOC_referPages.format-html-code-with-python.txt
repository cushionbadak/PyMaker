<div class="post-text" itemprop="text">
<p>I have a list of URLs in a column in a CSV-file. I would like to use Python to go through all the URLs, download a specific part of the HTML code from the URL and save it to the next column. </p>
<p>For example: 
From this <a href="https://www.kramerav.com/de/Product/VM-2N" rel="nofollow noreferrer">URL</a> I would like to extract this div and write it to the next column. </p>
<pre><code>&lt;div class="info-holder" id="product_bullets_section"&gt;
&lt;p&gt;
VM−2N ist ein Hochleistungs−Verteilverstärker für Composite− oder SDI−Videosignale und unsymmetrisches Stereo−Audio. Das Eingangssignal wird entkoppelt und isoliert, anschließend wird das Signal an zwei identische Ausgänge verteilt.
&lt;span id="decora_msg_container" class="visible-sm-block visible-md-block visible-xs-block visible-lg-block"&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;span&gt;Hohe Bandbreite — 400 MHz (–3 dB).&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;span&gt;Desktop–Grösse — Kompakte Bauform, zwei Geräte können mithilfe des optionalen Rackadapters RK–1 in einem 19 Zoll Rack auf 1 HE nebeneinander montiert werden.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</code></pre>
<p>I have this code, the HTML code is saved in the variable html:</p>
<pre><code>import csv
import urllib.request

with open("urls.csv", "r", newline="", encoding="cp1252") as f_input:
    csv_reader = csv.reader(f_input, delimiter=";", quotechar="|")
    header = next(csv_reader)
    items = [row[0] for row in csv_reader]

with open("results.csv", "w", newline="") as f_output:
    csv_writer = csv.writer(f_output, delimiter=";")
    for item in items:
        html = urllib.request.urlopen(item).read()
</code></pre>
<p>Currently the HTML-Code is pretty ugly. How could I delete everything out of the variable html except the div I would like to extract? </p>
</div>
<div class="post-text" itemprop="text">
<p>Given that all of your webpages are have the same structure you can parse the html with this code. It will look for the first div with the id <code>product_bullets_section</code>. An id in html <em>should</em> be unique but the given website has two equal id's so we obtain the first one through slicing and convert the parsed div back to a string containing your html.</p>
<pre><code>import csv
import urllib.request

from bs4 import BeautifulSoup

with open("urls.csv", "r", newline="", encoding="cp1252") as f_input:
    csv_reader = csv.reader(f_input, delimiter=";", quotechar="|")
    header = next(csv_reader)
    items = [row[0] for row in csv_reader]

items = ['https://www.kramerav.com/de/Product/VM-2N']
with open("results.csv", "w", newline="") as f_output:
    csv_writer = csv.writer(f_output, delimiter=";")
    for item in items:
        html = urllib.request.urlopen(item).read()
        the_div = str(BeautifulSoup(html).select('div#product_bullets_section')[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this example, you can use BeautifulSoup to get the div with a specific id:</p>
<pre><code>import BeautifulSoup
soup = BeautifulSoup.BeautifulSoup(html)
div = soup.find(id="product_bullets_section")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not use <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer"><code>html.parser</code> - Simple HTML and XHTML parser</a>?</p>
<p>Example:</p>
<pre><code>from html.parser import HTMLParser
from html.entities import name2codepoint

class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs):
        print("Start tag:", tag)
        for attr in attrs:
            print("     attr:", attr)

    def handle_endtag(self, tag):
        print("End tag  :", tag)

    def handle_data(self, data):
        print("Data     :", data)

    def handle_comment(self, data):
        print("Comment  :", data)

    def handle_entityref(self, name):
        c = chr(name2codepoint[name])
        print("Named ent:", c)

    def handle_charref(self, name):
        if name.startswith('x'):
            c = chr(int(name[1:], 16))
        else:
            c = chr(int(name))
        print("Num ent  :", c)

    def handle_decl(self, data):
        print("Decl     :", data)

    parser = MyHTMLParser()
</code></pre>
<p>and then use <code>parser.feed(data)</code> (where <code>data</code> is a str)</p>
</div>
<span class="comment-copy">Hi thank you so much for your help! Sometimes the sites in my list don't have the div I'm searching for. Python exits then with this error:  <code>File "/home/dun/_workspace/py/search-articles/save-html.py", line 15, in &lt;module&gt; div = str(BeautifulSoup(html).select("div#product_bullets_section"‌​)[0]) IndexError: list index out of range</code>  Do you know how I could just write a space in the row and use the next URL afterwards?</span>
<span class="comment-copy">For this I would need to know the rest of you code specifically the part dealing with the file. But you can use a try-except block to write the space if a site doesn't have this div. Maybe it will look like this:<code>try: the_div = str(BeautifulSoup(html).select('div#product_bullets_section')[0]) </code> <code>except IndexError: the_div = ''</code> <code>finally: f_output.write(the_div)</code></span>
<span class="comment-copy">Thank you so much! I used except IndexError: div="". Everything works now.</span>
<span class="comment-copy">I'm glad that I could help you.</span>
