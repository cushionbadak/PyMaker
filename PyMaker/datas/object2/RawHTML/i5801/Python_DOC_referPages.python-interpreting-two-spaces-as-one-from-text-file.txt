<div class="post-text" itemprop="text">
<p>I'm trying to make a program that translates morse code from a text file. In theory it should be pretty easy but the problem is that I find the formatting of the text file a bit silly (its school work so can't change that). What I meant by that is that in the file one space separates two characters (like this <code>-. ---</code>) but two spaces equal end of a word (so space in the translated text). Like this: <code>.--. .-.. . .- ... .   .... . .-.. .--. .-.-.-</code>
This is what I have, but it gives me translated text without the spaces.</p>
<pre><code>    translator = {} #alphabet and the equivalent code, which I got from another file 
    message = []
    translated = ("")
    msg_file = open(msg.txt,"r")
    for line in msg_file:
        line = line.rstrip()
        part = line.rsplit(" ")
        message.extend(part)
    for i in message:
        if i in translator.keys():
            translated += (translator[i])
    print(translated)
</code></pre>
<p>I also dont know how to intercept the line change (\n).</p>
</div>
<div class="post-text" itemprop="text">
<p>Why don't you split on two spaces to get the words, then on space to get the characters? Something like:</p>
<pre><code>translated = ""  # store for the translated text
with open("msg.txt", "r") as f:  # open your file for reading
    for line in f:  # read the file line by line
        words = line.split("  ")  # split by two spaces to get our words
        parsed = []  # storage for our parsed words
        for word in words:  # iterate over the words
            word = []  # we'll re-use this to store our translated characters
            for char in word.split(" "):  # get characters by splitting and iterate over them
                word.append(translator.get(char, " "))  # translate the character
            parsed.append("".join(word))  # join the characters and add the word to `parsed`
        translated += " ".join(parsed)  # join the parsed words and add them to `translated`
        # uncomment if you want to add new line after each line of the file:
        # translated += "\n"
print(translated)  # print the translated string
# PLEASE HELP!
</code></pre>
<p>Of course, all this assuming your <code>translator</code> dict has proper mapping.</p>
</div>
<div class="post-text" itemprop="text">
<p>Split on double-space first to get a list of words in each line then you can split the words on a single space to get characters to feed your translator</p>
<pre><code>translator = {} #alphabet and the equivalent code, which I got from another file 
message = []
translated = ("")
with open('msg.txt',"r") as msg_file:
    for line in msg_file:
        line = line.strip()
        words = line.split('  ')
        line = []
        for word in words:
            characters = word.split()
            word = []
            for char in characters:
                word.append(translator[char])
            line.append(''.join(word))
        message.append(' '.join(line))

print('\n'.join(message))
</code></pre>
</div>
<span class="comment-copy">You could do a first pass where you just separate words and put them into a list, e.g. interpret "two spaces", and then handle this list of individual words in a second pass (this time, you only need to worry about "one space"). Put the translated words back into a list one by one, and print that list (separated by space). You seem to already know all the required tools in Python, good luck.</span>
<span class="comment-copy">You should invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
<span class="comment-copy">split on <i>double-space</i> first to get a list of words in each line then you can split the words on a single space to get characters to feed your translator.</span>
