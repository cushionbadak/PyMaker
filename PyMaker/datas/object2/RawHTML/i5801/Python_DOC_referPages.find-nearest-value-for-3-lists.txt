<div class="post-text" itemprop="text">
<p>Here is my code to get the nearest value to a given number ( Mynumber) from 
 a list (Mylist)</p>
<pre><code>    Mylist= [ 1, 2, 3]
    Mynumber=3

    takeClosest = lambda num,collection:min(collection,key=lambda x:abs(x-
    num))
    closest= [takeClosest(Mynumber,Mylist)]

    print closest
</code></pre>
<p>Now I have 3 lists [ 1, 2, 3] ,[ 4, 7, 8], [ 13, 9, 10] 
I want to compare first item , second item and 3rd item of them with this 
list,[2,6,9] ,If I compare 1st item in each list, out if [1,4,13], 1 is the closest to 2 ,If I compare 2nd item in each list, out of [2,7,9],  7 is the closest to 6,If I compare 3rd item in each list, out of [3,8,10], 10  is the closest to 9
Does any one know how to do it? Any suggestion would be greatly appreciated</p>
<pre><code>    """
    Mylist1= [ 1, 2, 3]
    Mylist2= [ 4, 7, 8]
    Mylist3= [ 13, 9, 10]

    Mynumber=[2,6,9]
    """
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could just do this using <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> and the <a href="https://stackoverflow.com/questions/6473679/transpose-list-of-lists"><code>zip(*...)</code> transpositioning idiom</a>:</p>
<pre><code>&gt;&gt;&gt; lists = [[1, 2, 3], [ 4, 7, 8], [13, 9, 10]]
&gt;&gt;&gt; lst = [2,6,9]
&gt;&gt;&gt; list(map(takeClosest, lst, zip(*lists)))
# OR:  list(map(takeClosest, Mynumber, zip(Mylist1, Mylist2, Mylist3)))
[1, 7, 8]  # 9 is as close to 8 as it is to 10
</code></pre>
<p>This will apply your <code>takeClosest</code> function to <code>(2, [1, 4, 13])</code>, <code>(6, [2, 7, 9])</code>, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a kind of ugly way to do it.</p>
<pre><code>Mylist1= [ 1, 2, 3]
Mylist2= [ 4, 7, 8]
Mylist3= [ 13, 9, 10]
Mynumber=[2,6,9]
closest_values = []
for num in range(len(Mynumber)):
    differences = {Mylist1[num]: abs(Mylist1[num]-Mynumber[num]), 
                   Mylist2[num]: abs(Mylist2[num]-Mynumber[num]),
                   Mylist3[num] : abs(Mylist3[num]-Mynumber[num])}
    closest_values.append(min(differences, key=differences.get))
print(closest_values)
#[1, 7, 8]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try something like this:</p>
<pre><code>data=[ 1, 2, 3] ,[ 4, 7, 8], [ 13, 9, 10]
true1=[2,6,9]
for i in zip(*data,true1):
    print(min([(abs(k - i[-1:][0]), k, i[-1:][0]) for k in i[:-1]])[1:])
</code></pre>
<p>Note that in last item <code>[3,8,10]</code> 8 is close to 9 :</p>
<p>output:</p>
<pre><code>(1, 2)
(7, 6)
(8, 9)
</code></pre>
</div>
<span class="comment-copy">So what do you want the output to be?</span>
<span class="comment-copy">So you want to compare the first item in <code>Mynumber</code> to <code>Mylist1</code>, second item in <code>Mynumber</code> to <code>Mylist2</code> etc?</span>
<span class="comment-copy">Hi MCBama, no, I want to compare first item in Mynumber to three first numbers in Mylists, second item in Mynumber to three second numbers in Mylists, and third item in Mynumber to three third numbers in Mylists. My output should be ( 1,7,8)</span>
<span class="comment-copy">@user9059368 does the below answers answer your question?</span>
<span class="comment-copy">thank you so much for your valuable responses.. I appreciate it.. all the answers given here are correct.. but unfortunately I can not put a tick for all of them, when I put a tick for 2, one will disappear. Thank you so much every one</span>
