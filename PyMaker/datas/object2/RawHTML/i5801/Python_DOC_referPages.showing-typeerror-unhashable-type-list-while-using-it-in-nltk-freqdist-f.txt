<div class="post-text" itemprop="text">
<p>I am trying to get the frequency distribution of the word in a phrase according to its degree using nltk. It is showing "TypeError: unhashable type: 'list'" though. Don't understand what the problem is. Please help.</p>
<p>P.S: The code has a whole lot of bugs so don't mind that. I am trying to build a keyword extractor using code snippets from many many programs as I am a noob to python. If anyone wants to shed some light on the other bugs are also welcome.</p>
<p>Code:</p>
<pre><code>from __future__ import division
import operator
import nltk
import string

def isPunct(word):
  return len(word) == 1 and word in string.punctuation

def isNumeric(word):
  try:
    float(word) if '.' in word else int(word)
    return True
  except ValueError:
    return False

class KeyExt:

  def __init__(self):
    self.stopwords = set(nltk.corpus.stopwords.words())
    self.top_fraction = 1

  def _generate_candidate_keywords(self, sentences):
    phrase_list = []
    for sentence in sentences:
      words = map(lambda x: "|" if x in self.stopwords else x, nltk.word_tokenize(sentence.lower()))
      phrase = []
      for word in words:
        if word == "|" or isPunct(word):
          if len(phrase) &gt; 0:
            phrase_list.append(phrase)
            phrase = []
        else:
          phrase.append(word)
    return phrase_list

  def _calculate_word_scores(self, phrase_list):
    word_freq = nltk.FreqDist()
    word_degree = nltk.FreqDist()
    for phrase in phrase_list:
      degree = [x for x in phrase if not isNumeric(x)] 
      for word in phrase:
        word_freq[word]=word_freq[word]+1
        word_degree[word, degree]=word_degree[word, degree]+1 
    for word in word_freq.keys():
      word_degree[word] = word_degree[word] + word_freq[word] 
    word_scores = {}
    for word in word_freq.keys():
      word_scores[word] = word_degree[word] / word_freq[word]
    return word_scores

  def _calculate_phrase_scores(self, phrase_list, word_scores):
    phrase_scores = {}
    for phrase in phrase_list:
      phrase_score = 0
      for word in phrase:
        phrase_score += word_scores[word]
      phrase_scores[" ".join(phrase)] = phrase_score
    return phrase_scores

  def extract(self, text, incl_scores=False):
    sentences = nltk.sent_tokenize(text)
    phrase_list = self._generate_candidate_keywords(sentences)
    word_scores = self._calculate_word_scores(phrase_list)
    phrase_scores = self._calculate_phrase_scores(phrase_list, word_scores)
    sorted_phrase_scores = sorted(phrase_scores.items(), key=operator.itemgetter(1), reverse=True)
    n_phrases = len(sorted_phrase_scores)
    if incl_scores:
      return sorted_phrase_scores[0:int(n_phrases/self.top_fraction)]
    else:
      return map(lambda x: x[0],
        sorted_phrase_scores[0:int(n_phrases/self.top_fraction)])

def test():
  search=input("Enter Text: ")
  ke = KeyExt()
  keywords = ke.extract(search, incl_scores=True)
  print (keywords)

if __name__ == "__main__":
  test()
</code></pre>
<p>Full Traceback:</p>
<pre><code>Traceback (most recent call last):   File "C:\Users\SAURAV
DAS\AppData\Local\Programs\Python\Python35\projects\nlpproj.py", line
81, in &lt;module&gt;
    test()   File "C:\Users\SAURAV DAS\AppData\Local\Programs\Python\Python35\projects\nlpproj.py", line
77, in test
    keywords = ke.extract(search, incl_scores=True)   File "C:\Users\SAURAV
DAS\AppData\Local\Programs\Python\Python35\projects\nlpproj.py", line
64, in extract
    word_scores = self._calculate_word_scores(phrase_list)   File "C:\Users\SAURAV
DAS\AppData\Local\Programs\Python\Python35\projects\nlpproj.py", line
44, in _calculate_word_scores
    word_degree[word, degree]=word_degree[word, degree]+1 TypeError: unhashable type: 'list'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This error occurs when you are trying to use a <code>list</code> as a <code>dict</code> key. <code>list</code>s are not hashable and can't be used for keys (e.g. <code>tuple</code>s can be used).</p>
<p>In your case in this line</p>
<pre><code>    word_degree[word, degree]=word_degree[word, degree]+1 
</code></pre>
<p>you are using degree as an index for <code>word_degree</code> that doesn't make sense cause degree itself is a <code>list</code>.</p>
</div>
<span class="comment-copy">Show the full traceback (with line numbers and the causing line of code)</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Catch the error</a> and inspect/print relevant data in the except suit to see what might be happening.  Also you might want to just print data at strategic locations to help in you debugging effort.</span>
<span class="comment-copy">ok will do so in a sec</span>
<span class="comment-copy">Didn't quite get you @wwii</span>
<span class="comment-copy">Oh ok... You answered me for my debugging question @wwii. Thanks</span>
<span class="comment-copy">So can you suggest me a solution</span>
<span class="comment-copy">@IncognitoPossum I just answered what the error is. Please add more details to your question like what is <code>word_degree</code> and <code>degree</code> and what this line of code should do.</span>
<span class="comment-copy">'word_degree' gives the degree or priority of a word. At least that's what I want to do. Sorry for the delay in reply though. Was suffering from fever.</span>
<span class="comment-copy">@IncognitoPossum Hope you're better now :) so why don't you do <code>word_degree[word] += 1</code></span>
<span class="comment-copy">Will try and let know @Arman</span>
