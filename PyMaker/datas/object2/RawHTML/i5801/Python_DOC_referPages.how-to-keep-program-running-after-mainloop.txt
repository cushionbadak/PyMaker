<div class="post-text" itemprop="text">
<p>I'm trying to create a program which displays images using tkinter. The code I've written so far displays the image perfectly, however the program does not continue until the tkinter window is closed. I was wondering if there was any function instead of .mainloop() to keep the program running alongside the tkinter window? Any help much appreciated</p>
<blockquote>
<p></p>
</blockquote>
<pre><code>window = Tk()                                                         
canvas1 = Canvas(window,height=600,width=600)                         
file = PhotoImage(file = 'GoogleDrive.png')                                          
image = canvas1.create_image(300, 300, anchor = CENTER, image = file) 
canvas1.pack()
canvas1.mainloop()

print ('\nA: Google Drive')
time.sleep(1)
print ('B: Google Slides')
time.sleep(1)
print ('C: Google Photos')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>mainloop</code> needs to be the last logical line of code. The mainloop should also be called on the <code>Tk</code> object, in your case <code>window</code>.</p>
<p>In order for your code to run, you either need to move the <code>print</code> and <code>sleep</code> statements before the <code>mainloop</code>, or move them to a function and instead call that function, before the mainloop.</p>
<p>It is also worth noting that in Tkinter, you can use <code>after</code> for timings instead of <code>sleep</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Tkinter is event driven.  This means that there must be an action (from the script or user) given to tkinter to change things.</p>
<p>The <code>mainloop()</code> function executes the window so there is no alternative to it.  Fortunately there are solutions:</p>
<p>If you want to perform actions alongside tkinter window(s) you have two options:</p>
<p>You can perform them all before <code>mainloop()</code> is called.  </p>
<p>Or make them execute when a user performs an action in form of a button ect. </p>
<p>Or you can run functions in the background with <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">threading</a> or <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">multiprocessing</a>.</p>
<p>If you go for this option I would suggest threading because:</p>
<ul>
<li>It's easy to use</li>
<li>You can communicate between different parts of the script.  You can struggle to do this in multithreading</li>
</ul>
<p>However this depends entirely on the specific task.</p>
<p><hr/>
In the example code you have given your best option is to call it before <code>mainloop()</code> is executed.  For example:</p>
<pre><code>window = Tk()                                                         
canvas1 = Canvas(window,height=600,width=600)                         
file = PhotoImage(file = 'GoogleDrive.png')                                          

image = canvas1.create_image(300, 300, anchor = CENTER, image = file) 
canvas1.pack()
print ('\nA: Google Drive') 
time.sleep(1)
print ('B: Google Slides')
time.sleep(1)
print ('C: Google Photos')
canvas1.mainloop()
</code></pre>
<p>Although you could put it anywhere before <code>mainloop()</code>.</p>
</div>
<span class="comment-copy">use <code>tkinter.after()</code> instead of <code>sleep()</code></span>
<span class="comment-copy">Your program <i>does</i> keep running after <code>mainloop</code>. It's just that is an infinite loop. If this is not what you're asking then this question is a duplicate of <a href="https://stackoverflow.com/questions/459083/how-do-you-run-your-own-code-alongside-tkinters-event-loop">How do you run your own code alongside tkinter's event loop?</a>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/459083/how-do-you-run-your-own-code-alongside-tkinters-event-loop">How do you run your own code alongside Tkinter's event loop?</a></span>
<span class="comment-copy">Thank you, really helped :)</span>
<span class="comment-copy">Thanks :) helped a lot</span>
<span class="comment-copy">@KyleH  No problem.  Happy to help.</span>
