<div class="post-text" itemprop="text">
<p>My first question..!
Hi all, as a guy trying to learn programming/Python to be exact I have an issue that I would like to address. I have written some code that works as expected. </p>
<pre><code>for i in range(81):
    if i in (30, 60, 80):
        if i == 80:
            ab += str(a) + '*' + str(b) + '&lt;&gt;'
        ab = ab.rstrip('&lt;&gt;')
        my_list += my_func(ab)
        ab = ''
    ab += str(a) + '*' + str(b) + '&lt;&gt;'
</code></pre>
<p>Yet I don't think this part is the pythonic way to go:</p>
<pre><code>if i in (30, 60, 80):
    if i == 80:
</code></pre>
<p>There should be a way for me to say if i == 80 then do the standard 'if' conditions AFTER <strong>this</strong> extra code.</p>
<p>I hope I explained the issue properly. Thanks!</p>
<p>PS: This is an example code. I'm trying to find the proper logic only. Dont get stuck with the results.</p>
<p>Edit: I forgot to enter this line when posting my question (that's why some didn't understand the code):</p>
<pre><code>my_list += my_func(ab)
</code></pre>
<p>Also For extra points  :)  I'd love it if there was a way that this line doesn't have to be written twice!</p>
<pre><code>ab += str(a) + '*' + str(b) + '&lt;&gt;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could move the <code>if i == 80:...</code> bit <em>above</em> the other <code>if</code> to avoid any nesting or duplication, but not sure if that's is what makes you think this isn't Pythonic enough:</p>
<pre><code>for i in range(81):
    if i == 80:
        ab += str(a) + '*' + str(b) + '&lt;&gt;'
    if i in (30, 60, 80):
        ab = ab.rstrip('&lt;&gt;')
        my_list += my_func(ab)
        ab = ''
    ab += str(a) + '*' + str(b) + '&lt;&gt;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why don't you do two statements in the for loop? 
Like :</p>
<pre><code>for i in range(81):
    if i == 80:
        &lt;your code&gt;
    if i in [30, 60, 80]:
        &lt;your code&gt;
    &lt;code for every i&gt;
</code></pre>
</div>
<span class="comment-copy">I think that's perfectly okay the way it it. You <i>could</i> do <code>if i == 80: ... elif i in (30, 60): ...</code>, but that would duplicate the two <code>ab = ...</code> lines and be not as clear.</span>
<span class="comment-copy">Speaking of which, that <code>ab = ''</code> will just undo any changes you do to <code>ab</code> before that. The entire code makes no sense. Why do you <code>+ '&lt;&gt;'</code> to <code>ab</code> only to <code>rstrip</code> it off again?</span>
<span class="comment-copy">I missed a line there: there is a list that takes a function of ab.. editted</span>
<span class="comment-copy">I also think this is perfectly fine, the only thing, use sets instead of tuple when comparing values. So, <code>if i in {30, 60, 80}</code>... And if some people tell you not to, refer to documentation which clearly recommends sets for membership testing <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">(docs)</a>.</span>
<span class="comment-copy">@scharette would set run faster than tuple in the if statement? Speed is very important for me.</span>
<span class="comment-copy">Just my 2 cents, but I like OP's original version better. There it is clear that the <code>i == 80</code> is meant as a special case of <code>i in (30, 60, 80)</code> whereas here one might think that those conditions should be exclusive (even if there's no <code>elif</code>).</span>
<span class="comment-copy">My program is taking longer than expected. about 4-6 seconds to get the result i want. That's why i am scrolling through my code to see what can be done better. This question was a result of that. Thank you for your answer but it isn't what I am looking for. I think there should be a way to make this look more professional and faster.</span>
<span class="comment-copy">What is "unprofessional" about your original code?</span>
<span class="comment-copy">@ScottHunter in the FOR loop I have an IF that checks values, one being the last iteration of the FOR. But in order to get the correct result, I have to add the extra line within the <b>nested</b> IF that checks for the same value as its parent. I stated I'm new to programming. I'm trying to learn the best way to code and spent endless hours in doing so. I do not know if this is the proper way to achieve my goal. But I believe there could be a better way of doing it.</span>
<span class="comment-copy">If you believe there is something <i>better</i>, you must see some deficiency in what you wrote; you have yet to explain what that is. It works, it is clear; until you identify where it is wasting time, you have no basis for complaining about its speed.</span>
<span class="comment-copy">Because there's code that's needed for <i>both</i> cases?</span>
<span class="comment-copy">sorry i editted my code. there is an extra line now. the code: ab += str(a) + '*' + str(b) + '&lt;&gt;' needs to be executed before the final iteration.</span>
<span class="comment-copy">@tobias_k, ok I haven't see the extra 80 in the tuple. But I think there is no better way to do.</span>
