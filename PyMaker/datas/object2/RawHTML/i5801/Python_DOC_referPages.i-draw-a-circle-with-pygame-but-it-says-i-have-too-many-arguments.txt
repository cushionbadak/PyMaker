<div class="post-text" itemprop="text">
<p>I am coding a game for a project and am trying to figure out how to draw a circle that I can use as a button. I have used the pygame.draw.circle function. here is my current code:</p>
<pre><code>import pygame
block_color = (0, 0, 255)
display_height = 600
display_width = 600
pygame.init()
gameDisplay = pygame.display.set_mode((display_width, display_height))
pygame.draw.circle(gameDisplay, block_color, (50, 50), 20, 0)
thing_width = 100
thing_height = 100
thing_startx = 10
thing_starty = 10
circle(thing_startx, thing_starty, thing_width, thing_height, block_color)
pygame.display.update()
</code></pre>
<p>according to the pygame function documentation, this should work, but all I get is:</p>
<pre><code>line 12, in &lt;module&gt;
circle(thing_startx, thing_starty, thing_width, thing_height, block_color)
NameError: name 'circle' is not defined 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are using <a href="https://www.pygame.org/docs/ref/draw.html#pygame.draw.rect" rel="nofollow noreferrer"><code>pygame.draw.rect</code></a> instead of <a href="https://www.pygame.org/docs/ref/draw.html#pygame.draw.circle" rel="nofollow noreferrer"><code>pygame.draw.circle</code></a>. Try the following instead:</p>
<pre><code>pygame.draw.circle(gameDisplay, block_color, (50, 50), 20, 0)
</code></pre>
<hr/>
<blockquote>
<p><code>circle(Surface, color, pos, radius, width=0) -&gt; Rect</code><br/><br/>
  Draws a circular shape on the Surface. The pos argument is the center of the circle, and radius is the size. The width argument is the thickness to draw the outer edge. If width is zero then the circle will be filled.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can calculate the distance to the center of the circle with the <a href="https://docs.python.org/3/library/math.html#math.hypot" rel="nofollow noreferrer"><code>math.hypot</code></a> function. If the distance is below the radius, the circle was clicked.</p>
<pre><code>import math
import pygame as pg


def main():
    screen = pg.display.set_mode((640, 480))
    clock = pg.time.Clock()
    circle_pos = (300, 200)
    circle_radius = 40

    done = False

    while not done:
        for event in pg.event.get():
            if event.type == pg.QUIT:
                done = True
            elif event.type == pg.MOUSEBUTTONDOWN:
                # x and y distance to the mouse position (event.pos).
                x_offset = event.pos[0] - circle_pos[0]
                y_offset = event.pos[1] - circle_pos[1]
                distance = math.hypot(x_offset, y_offset)
                if distance &lt; circle_radius:
                    print('Circle clicked.', distance)


        screen.fill((30, 30, 30))
        pg.draw.circle(screen, (240, 120, 0), circle_pos, circle_radius)

        pg.display.flip()
        clock.tick(30)


if __name__ == '__main__':
    pg.init()
    main()
    pg.quit()
</code></pre>
<p>You could also use <a href="http://www.pygame.org/docs/ref/mask.html" rel="nofollow noreferrer"><code>pygame.mask.Mask</code></a>s for the collision detection, but the <code>hypot</code> solution is simpler.</p>
</div>
<span class="comment-copy">You're calling <code>pygame.draw.rect</code>.  It takes 4 arguments and draws a rectangle.  You want to call <code>pygame.draw.circle</code> to draw a circle.</span>
<span class="comment-copy">Also you're calling a <code>circle</code> function that might not exist later on in your code.</span>
<span class="comment-copy">But @TomKarzes is right about the source of <i>this</i> error.</span>
<span class="comment-copy">I am sorry I did not relize that but I fixed it and just updated it</span>
<span class="comment-copy">I also realized that I had left a previous line where I left a function that I deleted. Now can anyone help me with making it so that if my sprite goes over it, it will trigger something?</span>
<span class="comment-copy">ok thank you so much</span>
<span class="comment-copy">If you want to use arbitrary polygons, you have to use masks.</span>
<span class="comment-copy">skrx, thank you for the help, but I want to make a button that is activated when my sprite goes on top of it, not when my mouse clicks it.</span>
<span class="comment-copy">You can still use this solution, you just have to check if the distance of the two center points is less than the sum of the radii.</span>
<span class="comment-copy">It would also be possible to use sprites and then check the collisions with <code>pygame.sprite.spritecollide</code> and <a href="http://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_circle" rel="nofollow noreferrer"><code>pygame.sprite.collide_circle</code></a> as the callback function.</span>
<span class="comment-copy">How can I detect if my player has gone over something multiple times and how many times?</span>
