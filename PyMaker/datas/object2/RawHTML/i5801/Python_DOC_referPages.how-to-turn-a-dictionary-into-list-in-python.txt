<div class="post-text" itemprop="text">
<p>I'm using Flask to grab the input from an HTML form, which returns it as a dictionary object, for example:</p>
<pre><code>form = {'Name': 'Eddie', 'Comment': 'Nice location', 'Days Stayed': '7'}
</code></pre>
<p>Now, I can use <code>dict.items()</code> to get the dictionary into a format which I can display in an HTML table (list of tuples):</p>
<pre><code>formList = [('Name', Eddie), ('Comment', 'Nice Location'), ('Days Stayed', '7')]
</code></pre>
<p>This stores nicely into a .csv in the following way:</p>
<pre><code>Name,['Eddie']
Comment,['Nice Location']
Days Stayed,['7']
</code></pre>
<p>However, I'd like my .csv (and therefore HTML Table) to store like this:</p>
<pre><code>Eddie, Nice Location, 7
Dave, Good Food, 14
Steve, Room was cosy, 10
</code></pre>
<p>So I can have my field names at the top and create a nice looking table. How can I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you're already working with Python's <code>csv</code> module, here's a longform way of doing it, if you wanted headers.</p>
<p>This example uses the <a href="https://docs.python.org/2/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>DictWriter</code></a> which is specifically designed to work with dictionaries.</p>
<pre><code>import csv

form_data = [
    {'Name': 'Eddie', 'Comment': 'Nice location', 'Days Stayed': '7'},
    {'Name': 'Dave', 'Comment': 'Good Food', 'Days Stayed': '14'},
    {'Name': 'Steve', 'Comment': 'Room was cosy', 'Days Stayed': '10'}
]

with open('output.csv', 'w') as csvfile:
    # this defines the fields you want from dictionaries
    # you pass to the writer, and the order in which they should
    # be emitted in the resulting CSV
    fields = ['Name', 'Comment', 'Days Stayed']
    dw = csv.DictWriter(csvfile, fieldnames)

    # omit this if you don't want a header written
    dw.writeheader()
    for row in form_data:
        dw.writerow(row)
</code></pre>
<p>Resulting <code>output.csv</code> looks like this:</p>
<pre><code>Name,Comment,Days Stayed
Eddie,Nice location,7
Dave,Good Food,14
Steve,Room was cosy,10
</code></pre>
<p>You can similarly deserialize using the <a href="https://docs.python.org/2/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>DictReader</code></a> class provided by <code>csv</code>.</p>
<pre><code>import csv

rows = None
with open('output.csv') as csvfile:
    fields = ['Name', 'Comment', 'Days Stayed']
    reader = csv.DictReader(csvfile)
    rows = [row for row in reader]
</code></pre>
<p><code>rows</code> will look like this:</p>
<pre><code>[{'Comment': 'Nice location', 'Days Stayed': '7', 'Name': 'Eddie'},
 {'Comment': 'Good Food', 'Days Stayed': '14', 'Name': 'Dave'},
 {'Comment': 'Room was cosy', 'Days Stayed': '10', 'Name': 'Steve'}]
</code></pre>
</div>
<span class="comment-copy">Seems like you only want the values so try using dict.values()</span>
<span class="comment-copy">@Bilkokuya or you could just call <code>values()</code> instead of <code>items()</code>. But you're not guaranteed to get them in the right order.</span>
<span class="comment-copy">Use a <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>csv.DictWriter</code></a></span>
