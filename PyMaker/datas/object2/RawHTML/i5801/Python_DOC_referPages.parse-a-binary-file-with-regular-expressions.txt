<div class="post-text" itemprop="text">
<p>I've got two bytes-type variable that I've concatenated (separated by a space) so I can send it as one variable to a server (socket programming). What I'm trying to figure out is how to then separate them and assign them to their original variables using regular expressions. I've consulted <a href="https://stackoverflow.com/questions/5618988/regular-expression-parsing-a-binary-file">regular expressions parsing a binary file</a> but it wouldn't work for me. <a href="https://prnt.sc/hjjn54" rel="nofollow noreferrer">Here</a> is my output after trying the expression as so just to get the cipher variable</p>
<pre><code>ciphertext = re.match(b'\S', ciphertext)
</code></pre>
<p>It generally only matches the first couple characters and returns an object, which isn't what I'm wanting. What am I doing wrong? </p>
<p>edit: I'm probably doing it the hard way. Honestly, any recommendation on how to send 2 bytes objects over a socket using UDP. Its proving really difficult </p>
</div>
<div class="post-text" itemprop="text">
<p>Why are you using regex to do this?. You should take a look at the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">struct</a> module:</p>
<pre><code>In [1]: import struct

In [2]: magic = b'\xcf\xfa\xed\xfe'

In [3]: decoded = struct.unpack('&lt;I', magic)[0]

In [4]: hex(decoded)
Out[4]: '0xfeedfacf'
</code></pre>
<p>Also, you can use <a href="http://code.activestate.com/recipes/577610-decoding-binary-files/?in=user-4175703" rel="nofollow noreferrer">this</a> recipe for decoding binary files</p>
</div>
<div class="post-text" itemprop="text">
<p>Ended up using str.rpartition to solve my problems. Wasn't the most obvious answer, but it worked. </p>
</div>
<span class="comment-copy">Please include your output in your question, not as a link to a screenshot.</span>
<span class="comment-copy">But in summary, the reason you're getting an object is because that's what <code>re.match</code> returns.  It gives you back a <code>match object</code> (or <code>None</code> if the string doesn't match) which allows you to work with the matching text.  I'm not entirely sure what you were expecting that call to do.</span>
<span class="comment-copy">Can  I use structs to combine two byte objects into one variable that can later be re-separated? If i could copy the whole value from each variable and put them into a struct, that would be perfect, but it keeps clipping the values.</span>
