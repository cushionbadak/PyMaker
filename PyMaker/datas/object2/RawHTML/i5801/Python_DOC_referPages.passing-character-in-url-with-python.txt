<div class="post-text" itemprop="text">
<p>I have the following code:</p>
<pre><code>@app.route('/famcall/Audio/AudioMng_PlayDTMF/&lt;string:output_stream&gt;/&lt;string:dtmf&gt;/&lt;string:duration&gt;/&lt;string:gap&gt;', methods=['GET'])
    def fam_audio_play_dtmf(output_stream, dtmf, duration, gap):
        params = [self.mapAudioOutputStream.business_to_tech(output_stream), dtmf, duration, gap]
        return self.call_fam_function_and_wait_response("AudioMng_PlayDTMF", params)
</code></pre>
<p>and I want to use the character # in my url because it´s a value that can be used for dtmf. Is there an encode function in python which can help me in this? Or should I forget this scenario?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a replacement: replace <code>#</code> with <code>%23</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/urllib.html#urllib.quote" rel="nofollow noreferrer">urllib.quote</a> (Python 2) or <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote" rel="nofollow noreferrer">urllib.parse.quote</a> (Python 3) to escape your dtmf value or anything else that might contain reserved characters.</p>
</div>
<span class="comment-copy">How can I use this with my code? I´ve used it like this and it doesn´t work:      params =      [self.mapAudioOutputStream.business_to_tech(output_stream), dtmf,      duration, gap]             data = quote(params)</span>
<span class="comment-copy">@H.Avram - it takes one string, not a list. <code>urllib.quote(dtmf)</code>. The point is that it covers all reserved characters, not just <code>#</code>. EG <code>urllib.quote('foo#bar:baz')</code> returns <code>'foo%23bar%3Abaz'</code>.</span>
