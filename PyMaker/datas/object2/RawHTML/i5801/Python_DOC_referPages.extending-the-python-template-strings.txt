<div class="post-text" itemprop="text">
<p>Is it possible to extent the <a href="https://docs.python.org/3/library/string.html#template-strings" rel="nofollow noreferrer">Template strings</a> so I can add methods to the identifier:</p>
<p>By default I can replace simple variables:</p>
<pre><code>from string import Template
t = Template("${noun}ification")
t.substitute(dict(noun='Egg'))  # Output: 'Eggification'
</code></pre>
<p>But I wish to extend the identifier with a custom method (e.g. <code>as_b</code>):</p>
<pre><code>t = Template("${noun.as_b}ification")  # Desired output: '&lt;b&gt;Egg&lt;/b&gt;ification'
</code></pre>
<p>I know I can easily do something similar with <a href="https://docs.python.org/3.6/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer">Formatted string literals</a> but is it possible using the Template strings, like above?
I cannot use Formatted string literals because it will not work inside a script, a JSON file or whatever text that contain curly braces.</p>
<p>Essentially I'm looking for something that can offer the Template strings <em>syntax</em> within the Formatted string literals <em>flexibility</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not a direct answer, but I'd recommend not using Template strings.</p>
<p>If you're using Python 3.6 or newer, use f-strings:</p>
<pre><code>def bold(t):
    return f"&lt;b&gt;{t}&lt;/b&gt;"

noun = 'Egg'

print(f"{bold(noun)}ification")
</code></pre>
<p>when run:</p>
<pre><code>&lt;b&gt;Egg&lt;/b&gt;ification
</code></pre>
<p>If you'd rather a more powerful template mechanism, I highly recommend <a href="http://jinja.pocoo.org/docs/2.10/" rel="nofollow noreferrer">Jinja2</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://github.com/edgewall/genshi" rel="nofollow noreferrer">Genshi</a> does exactly that but it doesn't seem to use the built-in <code>string</code> module.<br/>
Other useful references are <a href="https://github.com/malthe/chameleon" rel="nofollow noreferrer">Chameleon</a> and <a href="https://github.com/zzzeek/mako" rel="nofollow noreferrer">Mako</a>.</p>
</div>
<span class="comment-copy">Why wouldn't you directly instanciate <code>t</code> as <code>Template("&lt;b&gt;${noun}&lt;/b&gt;ification")</code>?</span>
<span class="comment-copy">@vmonteco If <code>nouns</code> is a list, I can write <code>Template("${nouns.as_ul}")</code>; then the output is a big unordered list. Imagine <code>${nouns.as_ul}</code> inside an HTML template, I don't need some weird <code>{% for n in nouns %}&lt;li&gt;{{ n }}&lt;/li&gt;{% endfor %}</code> but the method <code>as_ul</code> take care of it, nice and clean.</span>
<span class="comment-copy">And what are you trying to achieve with all this? A web application?</span>
<span class="comment-copy">@vmonteco For now just curiosity/studying but eventually a template engine. Even if they aren't so essential nowadays.</span>
