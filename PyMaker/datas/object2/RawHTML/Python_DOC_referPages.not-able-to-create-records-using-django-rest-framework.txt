<div class="post-text" itemprop="text">
<p>I am trying to create a record in Status model by taking an object from Visit model.but while passing values to create record am getting error as few filed data is required. my code is given below along with the data am passing.</p>
<p><code>models.py</code></p>
<pre><code>class Visit(models.Model):
   name = models.CharField(max_length=200, name="name")
   gender = models.CharField(choices=GENDER_CHOICE, max_length=1, name="gender")
   mobile = models.CharField(max_length=18,default="", name="mobile")
   email = models.CharField(max_length=256, null=True, blank=True, name="email")
   address = models.TextField(null=True, blank=True, name="address")
   visit_type = models.IntegerField(choices=VISIT_TYPE, name="visit_type")
   visit_purpose = models.CharField(max_length=250, name="visit_purpose")
   visitor_photo = models.FileField(upload_to="visitor/",null=True, blank=True)
   id_photo = models.FileField(upload_to="id_card/",null=True, blank=True)
   date_created = models.DateTimeField(default=timezone.now, editable=False)

     def __str__(self):
         return self.name

    def save(self, *args, **kwargs):
        if not self.id:
          self.date_created = timezone.now()
        super(Visit, self).save(*args, **kwargs)

class Status(models.Model):
    visit = models.ForeignKey(Visit,on_delete=models.CASCADE)
    description = models.CharField(name="description",max_length=200)
    time = models.DateTimeField(null=True, blank=True)
    aproved = models.BooleanField(default=False)
    visit_complete = models.BooleanField(default=False)
    exit_time = models.DateTimeField(null=True, blank=True)
    date_created = models.DateTimeField(default=timezone.now, editable=False)

    def __str__(self):
        return self.visit.name

    def save(self, *args, **kwargs):
        if not self.id:
           self.date_created = timezone.now()
        super(Status, self).save(*args, **kwargs)
</code></pre>
<p><code>serializer.py</code></p>
<pre><code>class VisitSerializers(serializers.ModelSerializer):
    class Meta:
       model = Visit
       fields = ('name','gender','mobile','email','address','visit_type','visit_purpose','visitor_photo','id_photo')


class StatusSerializers(serializers.ModelSerializer):
    visit = VisitSerializers(required=True)

    class Meta:
       model = Status
       fields = ('visit', 'description','time','aproved','visit_complete','exit_time')

    def create(self, validated_data):
       visit_data = validated_data.pop('visit')
       visit = VisitSerializers.create(VisitSerializers(), validated_data=visit_data)
       status, created =  StatusSerializers.objects.update_or_create(visit=visit,
                                description=validated_data.pop('description'))
    return status
</code></pre>
<p><code>views.py</code></p>
<pre><code>@api_view(['GET', 'POST'])
def create_visitor(request):
   if request.method == 'GET':
      visitor = Visit.objects.all()
      serializer = VisitSerializers(visitor, many=True)
      return Response(serializer.data)
   elif request.method == 'POST':
     serializer = VisitSerializers(data=request.data)
     if serializer.is_valid(raise_exception=ValueError):
         serializer.create(validated_data=request.data)
         return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.error_messages,
                     status=status.HTTP_400_BAD_REQUEST)
</code></pre>
<p><code>Data i posted</code></p>
<pre><code>  {
    "visit":{
       "name":"Alian",
       "gender": "M",
        "mobile":"97437000",
       "visit_type":"1",
      "visit_purpose":"vvvvvvv"
   },
   "description":"this is testing!!!!!"
 }
</code></pre>
<p><code>Error I got</code></p>
<pre><code>{
"name": [
    "This field is required."
],
"gender": [
    "This field is required."
],
"visit_type": [
    "This field is required."
],
"visit_purpose": [
    "This field is required."
]
</code></pre>
<p>}</p>
<p>I followed this <a href="https://medium.freecodecamp.org/nested-relationships-in-serializers-for-onetoone-fields-in-django-rest-framework-bdb4720d81e6" rel="nofollow noreferrer">check this link</a> tutorial but when i used that code it worked perfectly.but when i customised its not working.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be solved by different methods.</p>
<p>Your VisitSerializers is linked with Visit Model and You VisitSerializers  supposed to expect.</p>
<pre><code>fields = ('name','gender','mobile','email','address',
'visit_type','visit_purpose','visitor_photo','id_photo')
</code></pre>
<p>But You are sending  only Two field </p>
<p><code>Visit</code> as object. It contains name, gender, mobile visit_type and visit_purposes.<br/>
<code>description</code> as Text</p>
<p>But Your VisitSerializers does not understand <code>visit</code> and <code>description</code> data</p>
<h1>1. If you do not want to change how you are sending data and receiving data</h1>
<p>So One way you could do is  extract necessary data from the request data.</p>
<p><code>visit_serializer_data = request.data.get('visit')</code></p>
<p>And You will get </p>
<p><code>{
       "name":"Alian",
       "gender": "M",
        "mobile":"97437000",
       "visit_type":"1",
      "visit_purpose":"vvvvvvv"
   }
</code></p>
<p>Then pass visit_serializer_data</p>
<pre class="lang-py prettyprint-override"><code>
     serializer = VisitSerializers(data=visit_serializer_data)
     serializer.is_valid(raise_exception=True)
     instance = serializer.save()
        # handle you remaining logic here 
     ....
     ...

</code></pre>
<h1>2 IF you want to change passing data.</h1>
<p>Change to following. Since your VisitSerializer data expects them.</p>
<pre class="lang-py prettyprint-override"><code>{
       "name":"Alian",
       "gender": "M",
        "mobile":"97437000",
       "visit_type":"1",
      "visit_purpose":"vvvvvvv"
   }
</code></pre>
<h1>3 You are passing Data VisitSerializers Change it to StatusSerializers(data=request.data)</h1>
<p>You sending data to <code>VisitSerializers</code>. Looking at your <code>serializers</code>, <code>create_visitor</code> and <code>data</code>. You are expect to Uses <code>StatusSerializers</code> while in <code>POST</code> Method</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using your <code>create_visitor</code> method with <code>VisitSerializers</code>. So your data that posted should be;</p>
<pre><code>{
    "name":"Alian",
    "gender": "M",
    "mobile":"97437000",
    "visit_type":"1",
    "visit_purpose":"vvvvvvv"
}
</code></pre>
<p>or, if you want to send your data as;</p>
<pre><code>{
    "visit":{
       "name":"Alian",
       "gender": "M",
       "mobile":"97437000",
       "visit_type":"1",
       "visit_purpose":"vvvvvvv"
    },
    "description":"this is testing!!!!!"
}
</code></pre>
<p>then change your <code>POST</code> logic like;</p>
<pre><code>@api_view(['GET', 'POST'])
def create_visitor(request):
   if request.method == 'GET':
      visitor = Visit.objects.all()
      serializer = VisitSerializers(visitor, many=True)
      return Response(serializer.data)
   elif request.method == 'POST':
     serializer = VisitSerializers(data=request.data.get('visit')) # &lt;-- here get visit object
     if serializer.is_valid(raise_exception=ValueError):
         serializer.create(validated_data=request.data)
         return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.error_messages,
                     status=status.HTTP_400_BAD_REQUEST)
</code></pre>
<p>but the other fields in your sended data (like <code>description</code>) will be unused. You should change your code also.</p>
</div>
<span class="comment-copy">Kindly check this tutorial what data they passed <a href="https://medium.freecodecamp.org/nested-relationships-in-serializers-for-onetoone-fields-in-django-rest-framework-bdb4720d81e6" rel="nofollow noreferrer">medium.freecodecamp.org/â€¦</a></span>
<span class="comment-copy">You have not handled Nesteded Serializer Behaviours. You are creating      serializer = VisitSerializers(data=request.data) Instead Try StatusSerializers(data=request.data)</span>
<span class="comment-copy">type object 'StatusSerializers' has no attribute 'objects'</span>
<span class="comment-copy">i got this error ` type object 'StatusSerializers' has no attribute 'objects'` data passed was <code>{ "visit":{            "name":"Alian",            "gender": "M",             "mobile":"9743702167",            "visit_type":"1",           "visit_purpose":"vvvvvvv"        }, "description":"this is testing!!!!!" } </code></span>
<span class="comment-copy">I think you need to refactor your create() method in StatusSerializer. here objects is refering to visit.</span>
<span class="comment-copy">I just followed that tutorial.but they passed extra data too(UnivStudent) model.even i tried that code as demo. check Serializer create method</span>
<span class="comment-copy">@CliftonAvilD'Souza, in that article, user_data pop like <code>user_data = validated_data.pop('user')</code> and remaining <code>UnivStudent</code> data passing from <code>validated_data</code>. You created nested serializer <code>StatusSerializers</code> but even it's created, you did not use it! I prefer you to read the article once more.</span>
<span class="comment-copy">passing only visit i did it before.but how to pass discription along with it to Status table with Visit object?</span>
<span class="comment-copy">I get the error <code>TypeError: 'visit' is an invalid keyword argument for this function</code>  I have changed the POST logic like you have shown @uedemir</span>
<span class="comment-copy">can you print your <code>request.data</code> and share here?</span>
