<div class="post-text" itemprop="text">
<p>Can someone please explain why my enter method in the following class is returning two values? I'm learning python and in the process of creating a simple game to grasp OOP and classes. Anyhow I need the enter method to return a random snippet from the snippets list. But I keep getting two snippets instead of one. Can someone explain why? </p>
<pre><code>    from sys import exit
    from random import randint




  class Island(object):

    def enter(self):
     pass



  class Loser(Island):
    snippets = ["Welcome to loser Island",
            "Can't win them all", 
            "There's always next time"]             
   def enter(self): 
      print Loser.snippets[randint(0,len(self.snippets)-1)]



  loser_test = Loser()
  loser_test.enter()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generally, you'll create a class and then describe the behavior and contents of an instance of that class. An instance of a class is an object whose type is that class. For example, <code>john = Person('John', 'Doe')</code> would create a <code>Person</code> object, sending <code>'John'</code> and <code>'Doe'</code> to the object's <code>__init__</code> method (a constructor).</p>
<p>The following sticks to instances of a class by making use of the word <code>self</code>. <code>self</code> is not a keyword (like <code>in</code>); it's just the word that an object's description uses to refer to the object itself. You can use any word (like <code>xyz</code> in <code>for xyz in [1,2,3]</code>), but <code>self</code> is preferred.</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; class L(object):
...     def __init__(self):
...             self.snippets = ["Welcome", "Can't", "There's"]
...     def enter(self):
...             print (random.choice(self.snippets))
...
&gt;&gt;&gt; l = L()
&gt;&gt;&gt; l.enter()
There's
&gt;&gt;&gt; l.enter()
There's
&gt;&gt;&gt; l.enter()
Welcome
&gt;&gt;&gt; l.enter()
Can't
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why don't you just use <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow"><code>random.choice</code></a></p>
<pre><code>def enter(self): 
    print random.choice(self.snippets)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Im going to take a guess and say its because you have something like this</p>
<pre><code>class Island:
    def __init__(self):
        print self.enter()
</code></pre>
<p>but its really a stab in the dark ... since you have not provided enough information to actually answer your question. ... (really I guess this question should be closed until OP provides sufficient datas)</p>
<p>you can test this by just running </p>
<pre><code>loser_test = Loser()
</code></pre>
<p>and if you see a print that is almost definately your problem</p>
</div>
<span class="comment-copy">Is this your full code? As it is in this code, Loser.enter doesn't return anything; it just prints something.   Also, could you please fix the indentation to reflect the class structure?</span>
<span class="comment-copy">Did you used <code>print loser_test.enter()</code>?</span>
<span class="comment-copy">@Kasra They shouldn't have to. There is a <code>print</code> statement in the method itself</span>
<span class="comment-copy">it returns no values .... so I dont believe you that it returns two ...</span>
<span class="comment-copy">The above code only prints one thing for me, so the problem must not lie there.</span>
<span class="comment-copy">this really isnt much different than Cyber's answer... Its worth an upvote, but i dont really think either of them actually solves OP's issue (which granted OP did not provide enough information to actually solve)</span>
<span class="comment-copy">I figured I would provide a bit more explanation of classes, as well as lay out the usual structure for a class (notably, defining an <code>__init__()</code> that assigns <code>self</code> variables). Hopefully it helps.</span>
<span class="comment-copy">I see the "downvote for no reason" brigade is here tonight</span>
<span class="comment-copy">offset mystery downvoter</span>
<span class="comment-copy">How does this answer the user's questions? It's a good style choice, yes, but beyond that...</span>
<span class="comment-copy">Because rather than trying to solve an <a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>, if they are after selecting a random item from their list, I'm proposing an alternative to their obfuscated random list indexing method</span>
<span class="comment-copy">I haven't voted anywhere in this question, but keep in mind that an "upvote for no reason" brigade is <a href="http://meta.stackoverflow.com/questions/253383/upvotes-that-cancel-out-downvotes">no better than</a> a "downvote for no reason" brigade.</span>
