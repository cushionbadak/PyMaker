<div class="post-text" itemprop="text">
<p>I am doing homework assignment and I wrote the following code, which does what I want it to do:</p>
<pre><code>A = [10, 25, 40]
B = [1, 15, 20]
R = [a + b for (a,b) in zip(A,B)]
print(R)
&gt;&gt;&gt; [11, 40, 60]
</code></pre>
<p>However, when I change <code>a + b</code> to <code>sum(a,b)</code>, I get an error:</p>
<pre><code>A = [10, 25, 40]
B = [1, 15, 20]
R = [sum(a,b) for (a,b) in zip(A,B)]
print(R)
&gt;&gt;&gt; ... TypeError: 'int' object is not iterable
</code></pre>
<p>I understand that it looks like a stupid question, but I searched for it and couldn't find an answer. I am relatively new to Python, so don't quite understand what is going on. I am trying to iterate through a generator object that is produced by using <code>zip()</code> and that one is definitely not of type <code>'int'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow"><code>sum</code> takes an iterable as a parameter</a>. You should do the following:</p>
<pre><code>R = [sum([a,b]) for (a,b) in zip(A,B)]
</code></pre>
<p><strong>If you only have two elements</strong>, stick to the <code>+</code> operator. The <code>sum</code> function adds some noise and a small overhead compared to a simple <code>a + b</code> which is more intuitive.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow"><code>sum</code></a> is a function to compute the sum of an iterable; if you want the sum of 2 elements, just use <code>+</code> as in your first case, or put <code>a</code> and <code>b</code> in an iterable (tuple: <code>(a, b)</code>, for instance).</p>
</div>
<div class="post-text" itemprop="text">
<p>Use map:</p>
<pre><code>&gt;&gt;&gt; A = [10, 25, 40]
&gt;&gt;&gt; B = [1, 15, 20]
&gt;&gt;&gt; map(sum, zip(A,B))
[11, 40, 60]
</code></pre>
<p>Using List Comprehension:</p>
<pre><code>&gt;&gt;&gt; [sum(x) for x in zip(A,B)]
[11, 40, 60]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>zip</code> takes iterables and returns an iterable of tuples containing <code>i</code>-th element from each argument. In your case, that'd be the equivalent of</p>
<pre><code>zip(A,B) -&gt; [(10,1), (25,15), (40,20)]    
</code></pre>
<p>By writing </p>
<pre><code>[  ... for (a,b) in zip(A,B)]
</code></pre>
<p>you are unpacking the tuple into two bound variables with names <code>a</code> and <code>b</code>. Now <code>a</code> and <code>b</code> are <code>int</code>s because the elements of <code>A</code> and <code>B</code> were ints. Use a plus operator to add those two ints together or </p>
<pre><code>[ sum(tup) for tup in zip(A,B)]
</code></pre>
<p>if you want to sum the whole tuple without unpacking explicitely.</p>
</div>
<span class="comment-copy">If you look at the <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">documentation</a> for <code>sum</code>, you will find that its arguments don't work the way you're trying to use it.</span>
<span class="comment-copy">@user2357112 You are right, I did look at it after posting the question and indeed was able to find the problem with my code.</span>
<span class="comment-copy">Thank you, I went to documentation right after posting the question and found that I should have used <code>sum([a,b])</code>, which works perfectly.</span>
<span class="comment-copy">No, you should use <code>a + b</code>. Why needlessly complicate it?</span>
<span class="comment-copy">I have developped my warning to be more clear...</span>
<span class="comment-copy">@Tibor I understand that <code>a+b</code> is the way to go, but since I am learning I was curious why it didn't work and hence posted my question, as it turns out, prematurely.</span>
<span class="comment-copy">You submit another solution without explaining why the code of the OP is wrong. Please take the habit to at least says why the original code does not work :)</span>
<span class="comment-copy">@MaximeLorant Others have explained about it, no need to repeat , so i have just given another way :), you only have explained about it in your answer</span>
<span class="comment-copy">Change ur statement, zip can take any number of iterables</span>
<span class="comment-copy">Fixed, but I meant in OP's specific example.</span>
