<div class="post-text" itemprop="text">
<p>I'm working in a alphabet soup and i need to parse strings like this:</p>
<pre><code>A1 A10

A10 B14

C1 C14

C14 C8
</code></pre>
<p>where the letters can be from A to T and numbers from 1 to 20. </p>
<p>My idea in general was to get something like this (with A1 A10)</p>
<pre><code>string[0] = "A"
string[1]= "1"
string[4] = "A"
string[5] = "10"
</code></pre>
<p>maybe any ideas or code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Very simple</p>
<p>Use the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=.split#str.split" rel="nofollow">str.split()</a> function transform your alphabet soup, then split the single elements further by directly accessing them.</p>
<p>For example:</p>
<pre><code>text = '''
A1 A10
A10 B14
C1 C14
C14 C8
'''

for t in text.split():
    print(
        {t[0]: t[1:]}
    )
</code></pre>
<p>prints:</p>
<pre><code>{'A': '1'}
{'A': '10'}
{'A': '10'}
{'B': '14'}
{'C': '1'}
{'C': '14'}
{'C': '14'}
{'C': '8'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well , i solve this (For the moment is working i guess!), maybe isn't the best way to do it , but is the only way i can do with my knowledge. any better idea will be really accepted ! (Please , if you're reading this because you need something like this , i only posted this because is the only way how i know to do it , maybe someone wish to post a better code down!)</p>
<pre><code>fila = preguntar_coordenadas[0]
desde = int(preguntar_coordenadas[1])
if preguntar_coordenadas[2].isdigit():
    desde = int("{0}   {1}".format(preguntar_coordenadas[1],preguntar_coordenadas[2]))
if preguntar_coordenadas[3].isalpha():
    columna = preguntar_coordenadas[3]
    if len(preguntar_coordenadas) == 5:
        hasta = int(preguntar_coordenadas[4])
    else:
        hasta = int("{0}{1}".format(preguntar_coordenadas[4],preguntar_coordenadas[5]))
 else:
columna = preguntar_coordenadas[4]
if len(preguntar_coordenadas) == 6:
    hasta = int(preguntar_coordenadas[5])
else:
    hasta = int("{0}{1}".format(preguntar_coordenadas[5],preguntar_coordenadas[6]))
 #DEBUG
 print "fila {0} ; columna {1} ; desde {2} ; hasta {3}".format(fila,columna,desde,hasta)
</code></pre>
<p>The idea base was receive a string "A[1-20] B[1-20]" A and B can be any letter from A to T, store each word splitted to access it:
Ex: "A14 B16"</p>
<blockquote>
<p>[0] = "A"</p>
<p>[1] = "14"</p>
<p>[2] = "B"</p>
<p>[3] = "16"</p>
</blockquote>
<p>Sorry if I expressed myself incorrectly and no one understood me!</p>
</div>
<span class="comment-copy">What are you trying to achieve?</span>
<span class="comment-copy">What exactly do you mean by "parse"? What information are you trying to retrieve?</span>
<span class="comment-copy">Why are you skipping indices? I'd use a <code>dictionary</code></span>
<span class="comment-copy">Try a regex. Something along the lines of /[A-T](2 digits)/ to give you a rough idea. Your current solution is weak because it first assumes that each line is a complete string and doesn't factor in all digit possibilities.</span>
<span class="comment-copy"><i>"i already write a tons of ideas"</i> - good! Why not mention some of them in your question? <i>"do you think if i didn't have writte any code i came here to ask?"</i> - lots of people do, unfortunately. So where is that code, and what precisely is the problem with it? <i>"If you don't plant to help please skip this"</i> - no dice, sorry. Please read <a href="http://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a></span>
<span class="comment-copy">3 years later, yes, 3 years, i realized this can be done easily with regex, content far away for me on that time.</span>
