<div class="post-text" itemprop="text">
<p>I use python 2.7, in the following test</p>
<pre><code>print repr(u'中')
print repr(u'Œ')
print repr(u'Ȧ')
print repr(u'\r')
print repr(u'1')
</code></pre>
<p>I got results</p>
<pre><code>u'\u4e2d'
u'\u0152'
u'\u0226'
u'\r'
u'1'
</code></pre>
<p>Some starts with an <code>\u</code> but some doesn't.</p>
<p>How do I print <code>\r</code> as <code>\u000D</code>? or <code>'1'</code> as <code>\u0031</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you need is the ordinal of the character, or its position in the character table. This is returned by 'ord'. For more information please see: <a href="https://docs.python.org/2/library/functions.html#ord" rel="nofollow">https://docs.python.org/2/library/functions.html#ord</a> and <a href="https://docs.python.org/2/howto/unicode.html" rel="nofollow">https://docs.python.org/2/howto/unicode.html</a></p>
<p>Carriage return is 13 (please see: <a href="http://www.theasciicode.com.ar/ascii-control-characters/carriage-return-ascii-code-13.html" rel="nofollow">http://www.theasciicode.com.ar/ascii-control-characters/carriage-return-ascii-code-13.html</a> ) by <code>ord(u'\r')</code> (or 0xD in hex)</p>
<p>And '中' is 20013 (please see: <a href="http://www.unicode.org/cgi-bin/GetUnihanData.pl?codepoint=4E2D" rel="nofollow">http://www.unicode.org/cgi-bin/GetUnihanData.pl?codepoint=4E2D</a>) by <code>ord(u'中')</code></p>
<p>If you want it expressed in hexadecimal you could do something like <code>'%04X' % ord(u'中')</code> which will return <code>4E2D</code>.</p>
<p>Hope this helps.</p>
</div>
<span class="comment-copy">You are printing representations. Python picks how that is displayed, not you, and since <code>\u000D</code> is more commonly expressed as <code>\r</code> Python picks that representation. The same would apply to newlines (<code>\n</code>) and tabs (<code>\t</code>), while codepoints past the ASCII range but within the Latin-1 range use <code>\xhh</code>. Why do you need this?</span>
<span class="comment-copy">@MartijnPieters Thanks for explanation, I just wonder why <code>\r</code> doesn't represent as <code>\u000D</code>, and it's not a real life project problem.</span>
<span class="comment-copy">Because <code>\r</code> is more readily recognisable, it is one of the <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">7 possible 1-letter escape sequences</a> Python literals support.</span>
<span class="comment-copy">@MartijnPieters, thanks for the document, I'm reading it.</span>
<span class="comment-copy">Thanks, that solves my question.</span>
<span class="comment-copy">You are welcome, glad to be of help.</span>
