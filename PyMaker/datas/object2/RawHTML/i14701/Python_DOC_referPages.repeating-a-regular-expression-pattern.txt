<div class="post-text" itemprop="text">
<p>I am attempting to write a regex to match numbers in a given string, the below manages to retrieve the first number within the string, however it stops there, I would like it to match all numbers within the file, 
thanks in advance</p>
<p>regular expression : </p>
<pre><code>([^\s+\w+\n\r]*(\d))+
</code></pre>
<p>string : </p>
<pre><code>hi there this is 1
yes this is 2
</code></pre>
<p>actual match : 1
ideal match : 1,2</p>
</div>
<div class="post-text" itemprop="text">
<p>On site <a href="http://regex101.com/#python" rel="nofollow">regex101.com/#python</a> type <code>g</code> in the right box near your expression. This box is called modifier. And as others mention in comments   use <code>re.findall(pattern, your_string)</code> in python. Notice also that you are actually looking for two substrings - you have two pairs of braces in your regexp.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>"([\d]+)"g
</code></pre>
<p>Sample</p>
<pre><code>test 13231 test 123123
123 asdfasdf 
1a2a3 a
</code></pre>
<p>will match</p>
<pre><code>MATCH 1
1.  [5-10]  `13231`
MATCH 2
1.  [16-22] `123123`
MATCH 3
1.  [23-26] `123`
MATCH 4
1.  [37-38] `1`
MATCH 5
1.  [39-40] `2`
MATCH 6
1.  [41-42] `3`
</code></pre>
<p>and the explaination</p>
<pre><code>"([\d]+)"g
    1st Capturing group ([\d]+)
        [\d]+ match a single character present in the list below
            Quantifier: + Between one and unlimited times, as many times as possible, giving back as needed [greedy]
            \d match a digit [0-9]
    g modifier: global. All matches (don't return on first match)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why dont you use <code>\d+</code> simply?</p>
<p>see <a href="https://regex101.com/r/iD7zC9/1" rel="nofollow">demo on regex101.com/#python</a></p>
</div>
<span class="comment-copy">How are you using it? Please post relevant code. If you're interested of finding numbers in a given string, why not simply <code>re.findall(r'\d+', str)</code>?</span>
<span class="comment-copy">I am simply running it in regex101.com</span>
<span class="comment-copy">why not just <code>\d+</code>, <code>re.findall("\d+",string)</code>?</span>
<span class="comment-copy">You should add <code>re.M</code> as the last parameter of <code>re.findall</code>.</span>
<span class="comment-copy">it works in python i get that but it does not work on <a href="https://regex101.com/#python" rel="nofollow noreferrer">regex101.com/#python</a>, really strange</span>
<span class="comment-copy">i was going mad, i tried (\d+) initially and it did not work, adding g to the box to the right fixed it!</span>
<span class="comment-copy">try it in <a href="https://regex101.com/#python" rel="nofollow noreferrer">regex101.com/#python</a> it does not work</span>
<span class="comment-copy">That's <b>not</b> how you do greedy modifiers in Python <code>re</code> regexes. See <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">docs.python.org/3/library/re.html#regular-expression-syntax</a></span>
<span class="comment-copy">Python doesn't have such syntax; there is no <code>g</code> flag. We have a <a href="https://docs.python.org/2/library/re.html#re.findall" rel="nofollow noreferrer"><code>findall()</code> function</a> instead.</span>
<span class="comment-copy">But why wrap the <code>\d</code> class in a <code>[...]</code> character class without adding anything to it?</span>
<span class="comment-copy">@godzilla It does work very well. <a href="https://regex101.com/r/lM7dD8/1" rel="nofollow noreferrer">regex101.com/r/lM7dD8/1</a></span>
