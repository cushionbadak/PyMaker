<div class="post-text" itemprop="text">
<p>I have a list of lists of strings similar to this one:</p>
<pre><code>arr = [['a', 'b', 'c'],
       ['X', 'Y', 'Z'],
       ['1', '2', '3'],
      ]
</code></pre>
<p>which I need to convert to a list of concatenated "columns", i.e.:</p>
<pre><code>['aX1', 'bY2', 'cZ3']
</code></pre>
<p>I came up with the solution of rotating the entire array 90 degrees clockwise, then joining all items in each rows in reverse order:</p>
<pre><code>[''.join(reversed(row)) for row in zip(*reversed(arr))]
</code></pre>
<p>This works as long as each row has the same number of items. What if that's not the case, though. Say I have an array like this:</p>
<pre><code>arr = [['a', 'b', 'c', 'd'],
       ['X', 'Y'],
       ['1', '2', '3'],
      ]
</code></pre>
<p>and what I expect is:</p>
<pre><code>['aX1', 'bY2', 'c3', 'd']
</code></pre>
<p>I could pad the shorter rows with empty string items prior to using the solution above:</p>
<pre><code>max_item_count = max(len(row) for row in arr)
arr = [row + [''] * (max_item_count - len(row)) for row in arr]
</code></pre>
<p>But surely there's a better way?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have lists of different lengths, you could make use of <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>zip_longest</code></a> which allows a fill value to be specified:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; arr = [['a', 'b', 'c', 'd'], ['X', 'Y'], ['1', '2', '3']]
&gt;&gt;&gt; [''.join(x) for x in zip_longest(*arr, fillvalue='')]  
['aX1', 'bY2', 'c3', 'd']
</code></pre>
<p>The shorter lists are padded using this fill value up to the length of the longest list.</p>
<p>In Python 2, the function is named <code>izip_longest</code>.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest</code></a>?</span>
<span class="comment-copy">Note that it's just <code>zip_longest</code> in 3.x (as the basic <code>zip</code> is now an iterator).</span>
<span class="comment-copy">Thank you, I missed the 3.x tag (answer updated).</span>
