<div class="post-text" itemprop="text">
<p>I have a list in python with 4 elements that are all themselves lists of lines ( text)</p>
<p>I want to save those elements in numbered filenames.</p>
<pre><code>for n in textblock:
    for line in textblock[n]:
        with open('file_{0}.dat'.format(n),'w') as ffile:
            ffile.write(textblock[n[line]])
            ffile.close()
</code></pre>
<p>I get the error message :</p>
<pre><code> for line in textblock[n]:
     TypeError: list indices must be integers, not list
</code></pre>
<p>Any hint what i can do to fix it ?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are iterating through your <code>textblock</code> with <code>for n in textblock:</code>, then <code>n</code> will take the value of each item in <code>textblock</code> (so <code>n</code> is a <code>list</code>). Then if you try and get <code>textblock[n]</code>, then you are trying to use the list <code>n</code> as an index.</p>
<p>You can just have:</p>
<pre><code>for x in textblock:
    for line in x:
        # do stuff with the line
</code></pre>
<p>Don't try and close <code>ffile</code> -- it is closed automatically by the <code>with</code> block.</p>
<p>If you want to use the index in the file name, I think what you want is something like this:</p>
<pre><code>for i, lines in enumerate(textblock):
    with open('file_{0}.dat'.format(i),'w') as ffile:
        for line in lines:
            ffile.write(line)
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> will give you the index and the items as you iterate through the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>enumerate</code></p>
<pre><code>for n,m in enumerate(textblock, 1):
    with open('file_{0}.dat'.format(n),'w') as ffile:
        for line in m:
            ffile.write(line)
</code></pre>
<p><strong>Note</strong></p>
<ul>
<li><code>with open</code> will take care of <code>close()</code>.</li>
<li><code>for i in [1,2,3]</code> gives <code>1,2,3</code> in each <code>iteration</code>.No need of <code>[1,2,3][i]</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Let's clarify your data structure. It sounds like this:</p>
<pre><code>outer_list = [ ["STRING1", "STRING2", ...],
               ["STRING1", "STRING2", ...],
               ["STRING1", "STRING2", ...],
               ["STRING1", "STRING2", ...]
             ]
</code></pre>
<p>So let's use python's iterable for loop structure to traverse the outer list.</p>
<pre><code>for inner_list in outer_list:
</code></pre>
<p>But we want to write the contents of each <code>inner_list</code> to a file, using the position of the <code>inner_list</code> in the <code>outer_list</code>. Let's use the built in <code>enumerate()</code> function to get the position.</p>
<pre><code>for n, inner_list in enumerate(outer_list, 1):
    # write inner list to file
</code></pre>
<p>Let's examine writing the <code>inner_list</code> to a file.</p>
<pre><code>with open('file_{0}.dat'.format(n),'w') as ffile: # this is fine, well done.
    ffile.write(inner_list)
</code></pre>
<p>All together that would be:</p>
<pre><code>for n, inner_list in enumerate(outer_list, 1):
    with open('file_{0}.dat'.format(n),'w') as ffile:
        ffile.write(inner_list)
        # no need to close the file, the with syntax does this for you.
</code></pre>
<p>EDIT: There is one more step needed here, as pointed out by @mhawke</p>
<p>The <code>write()</code> method requires it to be passed a string. We can convert our inner_list to a string quite easily. My preferred method would be to use the <code>join()</code> method. We can specify that we join each string in <code>inner_list</code> with a new line character, so that it will print nicely, i.e.</p>
<pre><code>'\n'.join(inner_list)
</code></pre>
<p>Therefore our final solution would be:</p>
<pre><code>for n, inner_list in enumerate(outer_list, 1):
    with open('file_{0}.dat'.format(n),'w') as ffile:
        ffile.write('\n'.join(inner_list))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to write lists of lists use the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow">csv</a> module:</p>
<pre><code>import csv

for ind, lsts in enumerate(textblock):
    with open('file_{0}.dat'.format(ind),'w') as ffile:
        wr = csv.writer(file)
        wr.writerows(lsts)    
</code></pre>
</div>
<span class="comment-copy">in second line, you should change it to length of textblock[n].</span>
<span class="comment-copy">but if i do it like this.. my filename becomes to content of my element, and therefore way too long obviously. I want to have a simple number in it</span>
<span class="comment-copy">See the edit to my answer.</span>
<span class="comment-copy"><code>ffile.write(inner_list)</code> won't work - <code>write()</code> requires a string, not a list. You could instead use <code>writelines()</code> if the original strings are terminated by new lines (or you don't care about having new lines in the output files). Otherwise you'll need to iterate over the lines in each sublist and output the line with a new line, e.g. <code>ffile.write('{}\n'.format(line))</code>.</span>
