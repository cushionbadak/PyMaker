<div class="post-text" itemprop="text">
<p>Trying to retrieve some data from the web using urlib and lxml, I've got an error and have no idea, how to fix it.</p>
<pre><code>url='http://sum.in.ua/?swrd=автор'
page = urllib.request.urlopen(url)
</code></pre>
<p>The error itself:</p>
<pre><code>UnicodeEncodeError: 'ascii' codec can't encode characters in position 11-15: ordinal not in range(128)
</code></pre>
<p>I'm using Ukrainian in API this time, but when I use API (without any Ukrainian letters in it) here:</p>
<pre><code>url="http://www.toponymic-dictionary.in.ua/index.php?option=com_content&amp;view=section&amp;layout=blog&amp;id=8&amp;Itemid=9"
page = urllib.request.urlopen(url)
pageWritten = page.read()
pageReady = pageWritten.decode('utf-8')
xmldata = lxml.html.document_fromstring(pageReady)
text1 = xmldata.xpath('//p[@class="MsoNormal"]//text()')
</code></pre>
<p>it gets me the data in Ukrainian and everything works just fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>URLs can only use a subset of printable ASCII codepoints; everything else must be properly encoded using <a href="http://en.wikipedia.org/wiki/Percent-encoding" rel="nofollow">URL percent encoding</a>.</p>
<p>You can best achieve that by letting Python handle your parameters. The <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode" rel="nofollow"><code>urllib.parse.urlencode()</code> function</a> can convert a <em>dictionary</em> (or a sequence of key-value pairs) for use in URLs:</p>
<pre><code>from urllib.parse import urlencode

url = 'http://sum.in.ua/'
parameters = {'swrd': 'автор'}
url = '{}?{}'.format(url, urlencode(parameters))

page = urllib.request.urlopen(url)
</code></pre>
<p>This will first encode the parameters to UTF-8 bytes, then convert those bytes to percent-encoding sequences:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlencode
&gt;&gt;&gt; parameters = {'swrd': 'автор'}
&gt;&gt;&gt; urlencode(parameters)
'swrd=%D0%B0%D0%B2%D1%82%D0%BE%D1%80'
</code></pre>
<p>If you did not construct this URL yourself, you'll need to 'repair' the encoding. You can split of the query string, parse it into a dictionary, then pass it to <code>urlencode</code> to put it back into the URL using <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow"><code>urllib.parse.urlparse()</code></a> and <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow"><code>urllib.parse.parse_qs()</code></a>:</p>
<pre><code>from urllib.parse import urlparse, parse_qs, urlencode

url = 'http://sum.in.ua/?swrd=автор'
parsed_url = urlparse(url)
parameters = parse_qs(parsed_url.query)
url = parsed_url._replace(query=urlencode(parameters, doseq=True)).geturl()
</code></pre>
<p>This splits the URL into its constituent parts, parses out the query string, re-encodes and re-builds the URL afterwards:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse, parse_qs, urlencode
&gt;&gt;&gt; url = 'http://sum.in.ua/?swrd=автор'
&gt;&gt;&gt; parsed_url = urlparse(url)
&gt;&gt;&gt; parameters = parse_qs(parsed_url.query)
&gt;&gt;&gt; parsed_url._replace(query=urlencode(parameters, doseq=True)).geturl()
'http://sum.in.ua/?swrd=%D0%B0%D0%B2%D1%82%D0%BE%D1%80'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe you can do something like below</p>
<pre><code> url = 'http://sum.in.ua/'
 q = 'swrd=автор'
 import urllib,requests
 requests.get(url+"?"+urllib.quote(q))
</code></pre>
<p>I think urllib.quote will transform <code>"swrd=автор"</code> into something like <code>"swrd=%D0%B0%D0%B2%D1%82%D0%BE%D1%80"</code></p>
<p>which should be accepted just fine</p>
</div>
<span class="comment-copy">urls only accept ascii characters ... do a search and look in the search bar to see how thats encoded (something like <code>%D0%B0%D0%B2%D1%82%D0%BE%D1%80</code> I assume)</span>
<span class="comment-copy">See if this helps: <a href="http://stackoverflow.com/questions/3563126/url-encoding-decoding-with-python" title="url encoding decoding with python">stackoverflow.com/questions/3563126/…</a></span>
<span class="comment-copy">Glad both Joran and I were of help! However, you can only mark <b>one</b> of the answers as accepted, not both. Pick the one you feel helped you most! (And yes, it is fine if that is Joran's :-))</span>
<span class="comment-copy">Fine) The problem is solved and thank you for help!</span>
<span class="comment-copy">Still it does not retrieve data for me - it gives me empty list. Although in here (www.toponymic-dictionary) it goes just good.</span>
<span class="comment-copy">You are encoding the <code>=</code> sign too.</span>
<span class="comment-copy">bah ooops ... oh well +1 to your answer for actually being right:P</span>
<span class="comment-copy">It can be done but you'd have to parse out the query string into parts first.</span>
<span class="comment-copy">yeh your answer is actually what I was thinking of anyway ... I just dont do this url stuff very often so i forgot :P</span>
