<div class="post-text" itemprop="text">
<p>I have a dictionary of items. I want to process all items except the ones which keys start with "_". </p>
<p>Is there a performance difference of doing:</p>
<pre><code>if items.startswith("_"):
   continue

&lt;code that should be done for items that keys do not start with "_"&gt;
</code></pre>
<p>vs.</p>
<pre><code>if not items.startswith("_"):
   &lt;do code that should be done for items that keys do not start with "_"&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I came up with a simple test program for this using the <code>timeit</code> module as per the advice of <a href="https://stackoverflow.com/users/2823755/wwii">wwii</a>. It's a useless script; all it does is store each key of interest (i.e. the ones that don't start with <code>'_'</code>) in a variable, which is overwritten each time.</p>
<pre><code>import timeit

trials = 1000000

setup = """
foo = {'key0': 'val0', '_key1': 'val1', '_key2': 'val2', 'key3': 'val3', 'key4': 'val4'}
"""

run = """
for key in foo:
    if key.startswith('_'):
        continue
    bar = key
"""
t = timeit.Timer(run, setup)
print 'Using ''continue'': %f' % min(t.repeat(3, trials))

run = """
for key in foo:
    if not key.startswith('_'):
        bar = key
"""
t = timeit.Timer(run, setup)
print 'Using ''if not'': %f' % min(t.repeat(3, trials))
</code></pre>
<p>This does three tests of running each block 1,000,000 times and returns the minimum execution time. Here are the results: <br/><br/><code>Using continue: 1.880194</code><br/><code>Using if not: 1.767904</code><br/><br/>
These results vary slightly between runs, but the trend is always the same: The second structure takes around 100 ms less than the first for 1,000,000 runs. That means the difference is on the order of 100 ns for each run. I doubt anyone would notice that.</p>
<p>At this point it's really a question of readability. For such a small block of code, it probably doesn't matter either way. Anyone who knows a little Python should be able to tell what both of those mean. Personally, I would choose the second option, but I don't see a problem with either.</p>
</div>
<span class="comment-copy">yep, 2nd would be the best.</span>
<span class="comment-copy">There is probably not a meaningful performance difference.  Pick whichever one is most readable (The first choice prevents arrow code, if that is an issue).</span>
<span class="comment-copy">Do whatever reads best, unless you've shown it's a bottleneck.</span>
<span class="comment-copy">If you're curious you could test it with the <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">timeit</a> module.</span>
<span class="comment-copy">Don't ask us, see <a href="http://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script"><i>How can you profile a Python script?</i></a></span>
