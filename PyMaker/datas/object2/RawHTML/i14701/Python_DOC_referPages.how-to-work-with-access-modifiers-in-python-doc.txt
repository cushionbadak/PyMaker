<div class="post-text" itemprop="text">
<p>A newbie to oops concepts, so basically i know mostly general oops concepts. but trying a lot to make a variable inside a class public private and protected. I know that they are done using 1 &amp; 2 underscores with a variable name. How do u initialise acess modifiers, call them set a value to them ? Basically i'm looking for a general example/syntax.</p>
<p>also i have been reading a lot about python. but i have never found something related to <strong>doc</strong> can somebody please give me a overview as to how this works as well.</p>
<p>Thanks a ton</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has no concept of a private field or method.  However, identifiers that begin with two underscores, but do not end with two underscores, will be "mangled" with the class name to prevent accidental overrides. You can find more information <a href="https://stackoverflow.com/questions/70528/why-are-pythons-private-methods-not-actually-private">here.</a></p>
<p>That's a part of the language.  It's conventional as a programming practice that identifiers beginning with single underscores should be <em>considered</em> private.  That's a polite request that is not enforced...but it's a Real Good Idea to leave single-underscore names along.</p>
<p>The other underscore convention that I'm aware of is that a name consisting of a single underscore is often used in a for loop, list comprehension or generator expression when the control variable is not going to be used in the loop.  For example, Doing something n times might look like:</p>
<pre><code>for _ in range(n):
    ...statements to repeat
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python does not have private variables, starting an attribute with an underscore (_) is a way of indicating it is private to other programmers, see <a href="https://stackoverflow.com/questions/1301346/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python">here</a> for more details.</p>
<p>Since there are no private variables ones starting with an underscore can be modified like any other.</p>
<pre><code>class MyClass():
     """Docstrings are important"""
     def __init__(self):
         self._myPrivateNumber = 42


C = MyClass()
C._myPrivateNumber #42
C._myPrivateNumber = 1
C._myPrivateNumber #1
setattr(C, '_myPrivateNumber', -1)
C._myPrivateNumber #-1
</code></pre>
<p>I am assuming you also want to know about <code>__doc__</code>. It is called a docstring and is used to document your objects. It is created from the string immediately after the declaration, e.g. the doc string of <code>C</code>, <code>C.__doc__</code> is the string <code>"Docstrings are important"</code> You can read about how it is created <a href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow">here</a>. If a docstring is not provide <code>__doc__</code> will be <code>''</code>. They are also used to crete the help information i.e. <code>help(C)</code> will use the docstring.</p>
</div>
<span class="comment-copy">PS: That means that <code>__doc__</code> is not mangled, by the way, since it ends with two underscores.</span>
<span class="comment-copy">It'd be on point to address the single underscore convention here, as he asks about it.</span>
<span class="comment-copy">@jwilner Good point.  Is that better now?</span>
