<div class="post-text" itemprop="text">
<p>Suppose I have a file <code>A.py</code> with only the following contents:</p>
<pre>
import warnings
warnings.warn("A is deprecated", DeprecationWarning)
</pre>
<p>I want to catch this warning when I import A and assert that it is a <code>DeprecationWarning</code>. Currently I'm doing the following:</p>
<pre>
import warnings
with warnings.catch_warnings(record=True) as w:
    import A
</pre>
<p>and trying to assert using something like <code>assert_equal(w[0].category, DeprecationWarning)</code> but it shows that <code>w</code> is empty. It isn't catching the warning I guess. Is there any other way to do this?</p>
<p><em>EDIT</em>: I forgot to add that I tried it with <code>warnings.simplefilter("always")</code>, but no warning was recorded.</p>
<p><em>EDIT 2</em>: It could have something to do with warning levels. [see comments]</p>
<p><em>EDIT 3</em>: Tried it with different <code>stacklevel</code>s - 0, 1, 2, 3. No effect :|</p>
</div>
<div class="post-text" itemprop="text">
<p>You just need to add the line</p>
<pre><code>warnings.simplefilter("always")
</code></pre>
<p>to your code, like this:</p>
<pre><code>with warnings.catch_warnings(record=True) as w:
    warnings.simplefilter("always")
    import A
</code></pre>
<p>So, a working version of 'B.py' (as it were) might look like this:  </p>
<pre><code>import warnings
import unittest

class TestWarnings(unittest.TestCase):

    def test_warnings(self):
        with warnings.catch_warnings(record=True) as w:
            warnings.simplefilter("always")
            import A
            self.assertEqual(w[0].category, DeprecationWarning)

if __name__ == '__main__':
    unittest.main()    
</code></pre>
</div>
<span class="comment-copy">If you're using <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer"><code>unittest</code></a>, there's a <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertWarns" rel="nofollow noreferrer"><code>unittest.TestCase.assertWarns()</code></a>.</span>
<span class="comment-copy">What is your warning level? I believe <code>DeprecationWarning</code> is <a href="https://docs.python.org/3.4/library/warnings.html#default-warning-filters" rel="nofollow noreferrer">ignored by default</a>. Try calling <code>warnings.simplefilter('default')</code>  before <code>catch_warnings</code> (or call <code>python -Wd</code> to run your script) as documented <a href="https://docs.python.org/3.4/library/warnings.html#updating-code-for-new-versions-of-python" rel="nofollow noreferrer">here</a>. See the full example <a href="https://docs.python.org/3.4/library/warnings.html#testing-warnings" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">Sorry, I forgot to add that I tried it with <code>warnings.simplefilter('always')</code>, but no warning was recorded, will <code>EDIT</code> the question.</span>
<span class="comment-copy">@CarlGroner, I added <code>default</code> in place of <code>always</code> and the warning is being recorded now. Will check it for Python 2.7 and 2.6 too.</span>
<span class="comment-copy">It would be helpful if you could point me to something which explains warning levels, as I'm new to this. :)</span>
