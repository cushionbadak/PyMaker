<div class="post-text" itemprop="text">
<p>I've ran into a bit of a mind boggling issue, I'm trying to remove all whitespace for data <em>keyword.txt</em> and keeping only the string of letters. But after looping through and replacing each whitespace to an empty field a new line is still seen in the output, and therefore messing up another output. </p>
<p>I'm not sure what to make of this.</p>
<p>Script:</p>
<pre><code>#!/usr/bin/python

kf = open ('keyword.txt', 'r')
sl = open ('syslog.txt', 'r')

keywordList = []

for keyword in kf:
    keyword = keyword.replace('\n', "")
    keywordList.append(keyword)
    print keyword

for string in sl:
    for keyword in keywordList:
        if keyword in string:
            print "**"+keyword+"**"
</code></pre>
<p>A sample of the output this produces:</p>
<pre><code>**anacron**
****
**anacron**
****
**CRON**
****
</code></pre>
<p>You can see that the <code>****</code> appears in lines due to it recognising an empty space as a keyword. That's the problem...</p>
<p><em>keyword.txt</em></p>
<pre><code>NetworkManager
avahi-daemon
dnsmasq
dbus
kernel
dhclient
CRON
bluetoothd
failsafe
modem-manager
udev-configure-printer
modem-manager
polkitd
anacron
acpid
rt-kit daemon
goa
AptDaemon
AptDaemon.PackageKit
AptDaemon.Worker
python
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems like the whitespace isn't being grabbed as part of each word but rather as an individual word.</p>
<p>Try reading in the files like this</p>
<pre><code>kf = [x.strip() for x in open('keyword.txt', 'r') if not x.strip() == '']
</code></pre>
<p>Then loop through the list like you are doing.</p>
<p>Other variations include </p>
<pre><code>kf = [x.strip() for x in open('keyword.txt', 'r') if x.strip() != '']

kf = [x.strip() for x in open('keyword.txt', 'r') if x.strip()]
</code></pre>
<p>as mentioned in the comments</p>
</div>
<div class="post-text" itemprop="text">
<p>Your KeywordList may contain duplicate keywords. Try using a <code>set</code> instead:</p>
<pre><code>keywords = set()

for keyword in kf:
    keyword = keyword.replace('\n', "")
    keywords.add(keyword)
    print keyword

for string in sl:
    for keyword in keywords:
        if keyword in string:
            print "**"+keyword+"**"
</code></pre>
<p>I tried it with this data and it worked...</p>
<pre><code>kf = ['anacron\n','anacron\n','CRON\n']
sl = ['a sentence with anacron\n','another sentence\n', 'one more\n', 'anacron\n','finally\n','one with CRON\n']
</code></pre>
</div>
<span class="comment-copy">Is there an extra blank line between keyword lines in your file?</span>
<span class="comment-copy">Can you give us some of keyword.txt and syslog.txt? It seems to me that you might have blank lines in keyword.txt.</span>
<span class="comment-copy">You can replace <code>if x.strip() is not ''</code> with <code>if x.strip()</code>.</span>
<span class="comment-copy">Oh awesome.  I didn't know you could do that!</span>
<span class="comment-copy"><code>0</code>, <code>None</code>, and empty sequences or mappings <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">evaluate to <code>False</code></a>.</span>
<span class="comment-copy">@RNikoopour In fact, you should not use <code>is</code> to compare stringsâ€”whether equal strings are always the same object or not is an implementation detail. In general, you probably only want <code>is</code> if you're <a href="https://docs.python.org/3/library/enum.html#comparisons" rel="nofollow noreferrer">comparing Enum members</a> or checking for singletons like <code>None</code>.</span>
<span class="comment-copy">Oh for sure.  I know I've had issues using <code>is</code> in string comparisons.  I'll change it.</span>
