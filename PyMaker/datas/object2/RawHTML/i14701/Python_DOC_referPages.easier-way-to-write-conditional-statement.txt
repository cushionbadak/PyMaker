<div class="post-text" itemprop="text">
<p>Is there any prettier way to write this if-statement:</p>
<pre><code>if not (self.is_legal(l) or self.is_legal(u) or self.is_legal(r) or self.is_legal(d)):
</code></pre>
<p>I've tried this, but it didn't work.</p>
<pre><code>if not self.is_legal(l or r or d or u):
</code></pre>
<p>Or maybe the first one is the prettiest?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#any" rel="noreferrer"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="noreferrer">generator expression</a>:</p>
<pre><code>if not any(self.is_legal(x) for x in (l, u, r, d)):
</code></pre>
<p>Or, if you prefer <a href="https://docs.python.org/3/library/functions.html#all" rel="noreferrer"><code>all</code></a> instead of <code>any</code>:</p>
<pre><code>if all(not self.is_legal(x) for x in (l, u, r, d)):
</code></pre>
<p>The first solution seems to read a little better though.</p>
<hr/>
<p>As for why your attempted solution did not work, the <code>or</code> operator in Python does not behave as you think it does.  From the <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-or_test" rel="noreferrer">docs</a>:</p>
<blockquote>
<p>The expression <code>x or y</code> first evaluates <code>x</code>; if <code>x</code> is true, its value
  is returned; otherwise, <code>y</code> is evaluated and the resulting value is
  returned.</p>
</blockquote>
<p>So, <code>self.is_legal(l or r or d or u)</code> was only passing the first truthy value to the <code>self.is_legal</code> method, not all of them.</p>
</div>
<div class="post-text" itemprop="text">
<p>An empty list in Python is false.</p>
<p>You can produce an empty list with a comprehension and a conditional like so:</p>
<pre><code>&gt;&gt;&gt; def is_legal(x):
...    return x&gt;5
... 
&gt;&gt;&gt; bool([x for x in (1,2,3,4) if is_legal(x)])
False
&gt;&gt;&gt; bool([x for x in (1,2,3,4,6) if is_legal(x)])
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a tuple or set: </p>
<pre><code>if False in (self.is_legal(l), self.is_legal(u), self.is_legal(r), self.is_legal(d)):

if {False} &lt;= {self.is_legal(l), self.is_legal(u), self.is_legal(r)}:
</code></pre>
<p>Extending this idea a bit further: </p>
<pre><code>if {False} &lt;= {self.is_legal(var) for var in (l, u, r, d)}: 
</code></pre>
<p>Or using the fact that an empty list or set or whatever is false: </p>
<pre><code>if [var for var in (l, u, r, d) if self.is_legal(var) is False]:
</code></pre>
<p>I guess it all depends on what you consider to be "pretty". </p>
</div>
<span class="comment-copy">Great! Yeah, i was trying use any/all but didn't think about adding for. Thank you!</span>
<span class="comment-copy">can it be done with lambda expression somehow?</span>
<span class="comment-copy">You mean if <code>self.is_legal</code> were a lambda function?  Sure, it would be the same as what I posted.  Lambda's are just like normal functions and can be called anywhere they can.</span>
<span class="comment-copy">Yes, that is what i meant. Thank you very much. Have a great day and Happy Easter!</span>
