<div class="post-text" itemprop="text">
<p>I want to send out a bytearray using serial module. Elements in the bytearray are float data types that are rounded and converted to integers, for this reason I use numpy for speed efficiency rather than pythons native data type conversion functions. Problem is numpy is incorrectly representing decimal integers 9, 10, and 13 inside bytearray. I'm using python 3.4.2 and numpy 1.9.2 on Windows 7 x64. </p>
<p>Here is example of problem:</p>
<pre><code>    import numpy
    &gt;&gt;&gt; x = bytearray([])
    &gt;&gt;&gt; for i in range(20):
        x.append(numpy.int16(i))
    &gt;&gt;&gt; x
    bytearray(b'\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13')
</code></pre>
<p>decimal integers 9, 10, 13 become t, n, and r when they should be represented as 0x09, 0x0a, 0x0d</p>
</div>
<div class="post-text" itemprop="text">
<p>The values are actually correct. What you are seeing is how the printing which calls <code>repr</code> on the object formats those as bytes as escape sequences. <code>\n</code> is the same as <code>\x0a</code> as <code>0a</code> is <code>10</code>. <code>\n</code> is chosen over <code>\x0a</code> as it is shorter and more easily recognized.</p>
<p>Now if you want to print the bytes as hex as in <code>45</code> rather than <code>\x45</code> use the <a href="https://docs.python.org/3/library/binascii.html#binascii.hexlify" rel="nofollow"><code>binascii.hexlify</code></a> function to convert before printing.</p>
</div>
<span class="comment-copy">Aside: you say you're using "numpy for speed efficiency" but you're not, really; numpy's speed comes from fast array operations, and you're using a slow Python loop.  Your real code could be different, of course, but the fact you didn't use <code>arange</code> with <code>dtype</code> makes me suspect otherwise.</span>
