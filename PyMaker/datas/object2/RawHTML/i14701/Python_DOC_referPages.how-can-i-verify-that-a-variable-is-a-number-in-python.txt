<div class="post-text" itemprop="text">
<p>I am writing a code on the subject of engineering which requires the user to input several values which the program will then work with.</p>
<p>At the moment I have the following code:</p>
<pre><code>while True:
    strainx =input("Please enter a value for strain in the x-direction: ")

    num_format = re.compile("^[1-9][0-9]*\.?[0-9]*")
    isnumber = re.match(num_format,strainx)
    if isnumber:

        break
</code></pre>
<p>In simple terms I am trying to ask the user to enter a value for strainx which is a number. If the user enters anything other than a number then the question will be repeated until they enter a number. However, by using this method the code does not accept decimals and there will be instances where the user must enter a decimal. Is there any way around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just try casting to a float and catching a ValueError if the user enters something that cannot be cast:</p>
<pre><code>while True:
    strainx = input("Please enter a value for strain in the x-direction: ")  
    try:
       number = float(strainx)
       break # if valid entry we break the loop
    except ValueError:
        # or else we get here, print message and ask again
        print("Invalid entry")

print(number)
</code></pre>
<p>casting to float covers both <code>"1"</code> a <code>"1.123"</code> etc..</p>
<p>If you don't want to accept zero you can check after casting is the number is zero, I presume negative numbers are also invalid so we can check if the number is not &lt;= 0. </p>
<pre><code>while True:
    strainx = input("Please enter a value for strain in the x-direction: ")
    try:
        number = float(strainx)
        if number &lt;= 0:
            print("Number must be greater than zero")
            continue  # input was either negative or 0
        break  # if valid entry we break the loop
    except ValueError:
        # or else we get here, print message and ask again
        print("Invalid entry")

print(number)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you insist of using regex, this pattern appears to work:</p>
<pre><code>"^(\-)?[\d]*(\.[\d]*)?$"
</code></pre>
<p>Match optional negative sign, match any number of digits, optional decimal with any number of digits.</p>
<p>Tip: You can use <code>isnumber = bool(re.match(num_format,strainx)</code> or the latter part directly into the if statement.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking for Integer check then try this - </p>
<pre><code>isinstance( variable_name, int )
</code></pre>
<p>If it returns True then the variable is number else it's something else.</p>
<p>But if you want to check if the character value is number or not. eg - a = "2"
above script will return False.
So try this - </p>
<pre><code>try:
    number = float(variable_name)
    print "variable is number"
except ValueError:
    print "Not a number"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are using Python 2, instead of using regular expressions, you can use Python's in built type checking mechanisms.</p>
<p>Let's loop while strainx is not a number, then check whether the latest input is a number.</p>
<pre><code>is_number = False
while not is_number:
    strainx =input("Please enter a value for strain in the x-direction: ")
    is_number = isinstance(strainx, float) or isinstance(strainx, int)
</code></pre>
</div>
<span class="comment-copy">this could help: <a href="http://stackoverflow.com/questions/15357422/python-determine-if-a-string-should-be-converted-into-int-or-float" title="python determine if a string should be converted into int or float">stackoverflow.com/questions/15357422/…</a></span>
<span class="comment-copy">Could this question be rephrased as "How can I verify that a variable is a number?"</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/736043/checking-if-a-string-can-be-converted-to-float-in-python">Checking if a string can be converted to float in Python</a></span>
<span class="comment-copy">This is <a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow noreferrer">EAFP</a>; it’s easier to ask for forgiveness than permission. Just assume that it’s a vaid number and catch the case where it is not.</span>
<span class="comment-copy">Okay great thanks, that works! I have several of these inputs. For one of them I want to specify that the input cannot equal zero either, is there any way of doing this?</span>
<span class="comment-copy">Sure. After trying to cast add an if check to see if number is zero. If so print a message then use continue putting the break outside the if</span>
<span class="comment-copy">I've been trying to write this into the program and I really don't understand how. Could you possibly give me some more guidance? Thanks</span>
<span class="comment-copy">You don’t need to put single character class escape sequences (<code>\d</code>) into separate character classes (<code>[ ]</code>). And you also don’t need to escape dashes. You could shorten your expression to just <code>^-?\d*(\.\d*)?$</code>. And if you use <code>re.match</code>, you don’t actually need the caret <code>^</code>.</span>
<span class="comment-copy">@poke cool, thanks :)</span>
<span class="comment-copy">Assuming Python 3, the return value of <code>input</code> will always be a string regardless of its content, so the <code>instanceof</code> check will never work there.</span>
<span class="comment-copy">how would a string ever be an instance of a float or int?</span>
<span class="comment-copy"><code>input()</code> in Python 2.X will cast the input to a sensible data type, i.e 'x' would be string, 2 would be int, 2.2 would be float.</span>
<span class="comment-copy">How would the user be using a regex on something that is not a string?</span>
<span class="comment-copy">Input returns a string in python 3</span>
<span class="comment-copy">Either way using issinstance is not a good approach.</span>
