<div class="post-text" itemprop="text">
<p>I'm designing a tic tac toe game in python that times how long it takes the user to beat three levels and then saves this score to a file called 'Player Times.txt'. I want to rank the times each player gets to go from low =&gt; high.</p>
<pre><code>print('You beaten all three levels and reached the end of the game!')
.windll.user32.MessageBoxW(0, "Hooray you've won the game.","Victory", 1)
ctypes.windll.user32.MessageBoxW(0, str(sum1), "Your Score", 1)
#top_score=str(input('Would you like to see the leaderbooard?'))
MyfileWrite = open('Player Times.txt','a')
MyfileWrite.write(file_info + "'s time is " + str(sum1) + '.' + '\n')
MyfileWrite.close()
print('--------------------')
top_score=str(input('Would you like to see the leaderbooard?'))
print('--------------------')
if (top_score=='yes'):
    MyfileWrite = open('Player Times.txt', 'r')
    file_contents = MyfileWrite.read()
    print(file_contents)
    MyfileWrite.close()
</code></pre>
<p>So this is what happens when you beat the three levels. You can then look at the leaderboard but it just prints out all the times that have been written to the file. What could I do to rank these times?</p>
</div>
<div class="post-text" itemprop="text">
<p>Fortunately, you're writing a nice, neat file for easy parsing. It will look something like this:</p>
<pre><code>Alice's time is 3.2.
Bob's time is 4.6.
Charlie's time is 4.1.
(empty line)
</code></pre>
<p>That means we can do this:</p>
<pre><code>if top_score.lower().startswith('y'):
    with open('Player Times.txt', 'r') as f:
        print(*sorted(f, key=lambda x: float(x[:-2].split("'s time is ")[1])), sep='')
</code></pre>
<p>First, we sort the opened file (it's an iterable, so we can do this directly), using the score as the sort key. We'll use <code>lambda</code> to define an inline function that takes a parameter, which will be each line in the file. The score is after the string <code>"'s time is "</code> and before the last two characters, <code>".\n"</code>, so we cut off the last two characters, split the remaining string on <code>"'s time is "</code>, and turn that into a <code>float</code>. <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow"><code>sorted()</code></a> will use this number to determine the proper order.</p>
<p>This gives us something very similar to the original file object: a <code>list</code> of strings, only this time they're properly sorted. A quick way to nicely print a list of strings is to unroll the list with <code>*</code>, and since there's already a newline at the end of each line, we'll tell <code>print()</code> to use an empty string as the separator instead of the usual space.</p>
<p>Result:</p>
<pre><code>Alice's time is 3.2.
Charlie's time is 4.1.
Bob's time is 4.6.
</code></pre>
<p>The default ascending order that <code>sorted()</code> uses works here, but if you want to sort from high to low (a game with points, for example), you can pass the keyword argument <code>reverse=True</code>, e.g. <code>sorted(['a', 'bbb', 'cc'], key=len, reverse=True)</code> to produce <code>['bbb', 'cc', 'a']</code>.</p>
</div>
<span class="comment-copy">print(file_contents) will print out all the times. You have to sort the times somehow and print the desired ones.</span>
<span class="comment-copy">How would I do that?</span>
<span class="comment-copy">Thanks for the help but I'm not getting the error <code>File "C:/Python32/Final Year Project/Build 11 (Parrell Lists).py", line 316, in &lt;module&gt;     print(*sorted(f, key=lambda x: float(x[:-2].split("'s time is ")[1])), sep='')   File "C:/Python32/Final Year Project/Build 11 (Parrell Lists).py", line 316, in &lt;lambda&gt;     print(*sorted(f, key=lambda x: float(x[:-2].split("'s time is ")[1])), sep='') IndexError: list index out of range</code> I commented out the previous code from the <code>if (top_score==yes)</code> down to <code>MyfileWrite.close()</code>. Should I have done that?</span>
<span class="comment-copy">Does the text file look exactly like the one I posted, with each line consisting of the user's name, the string <code>'s time is </code>, a number, a period, and a linefeed? Edit your question to include the contents of the text file, in a code block.</span>
<span class="comment-copy">Got it working in the end! Your comment pointed the problem out to me. The problem was previously in the code I asked for a username which was then written to a file after which the time was also written to the file. Which produced something like                                          <code>ben                                                                                                                         ben's time is x</code>. So I just commented out the previous code that wrote to the file first and it worked!</span>
<span class="comment-copy">Glad to hear it! Feel free to upvote/accept this answer to indicate that it solved the problem.</span>
