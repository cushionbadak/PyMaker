<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/14301967/bare-asterisk-in-function-arguments">Bare asterisk in function arguments?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I know the meaning and usage of <code>*args</code>. But sometimes there is nothing like <code>args</code> after the <code>*</code>. For example, in the function <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow"><code>pprint</code></a></p>
<pre><code>def pprint(object, stream=None, indent=1, width=80, depth=None, *,
           compact=False):
    """Pretty-print a Python object to a stream [default is sys.stdout]."""
    printer = PrettyPrinter(
        stream=stream, indent=indent, width=width, depth=depth,
        compact=compact)
    printer.pprint(object)
</code></pre>
<p>there is an <code>*</code> in the signature. What does it mean?</p>
</div>
<div class="post-text" itemprop="text">
<p>Arguments <em>after</em> the <code>*</code> are <a href="https://www.python.org/dev/peps/pep-3102/" rel="nofollow">keyword-only</a>. The <code>*</code> <em>"soaks up"</em> any additional positional arguments, so if you defined:</p>
<pre><code>def foo(x, y, *, z):
    print(x, y, z)
</code></pre>
<p>then calling:</p>
<pre><code>foo(1, 2, 3)
</code></pre>
<p>wouldn't work, as no <code>z</code> is supplied and only two positional arguments are expected:</p>
<pre><code>&gt;&gt;&gt; foo(1, 2, 3)
Traceback (most recent call last):
  File "&lt;pyshell#2&gt;", line 1, in &lt;module&gt;
    foo(1, 2, 3)
TypeError: foo() takes 2 positional arguments but 3 were given
</code></pre>
<p><code>z</code> <strong>must</strong> now be supplied by keyword:</p>
<pre><code>&gt;&gt;&gt; foo(1, 2, z=3)
1 2 3
</code></pre>
<p>You <em>can</em> do this with a standard <code>*args</code>, but using <code>*</code> makes it clear that you don't want any additional positional arguments and causes an error to be raised if any end up in the <code>*</code>. As the PEP puts it:</p>
<blockquote>
<p>The second syntactical change is to allow the argument name to
  be omitted for a varargs argument. The meaning of this is to
  allow for keyword-only arguments for functions that would not
  otherwise take a varargs argument</p>
</blockquote>
</div>
