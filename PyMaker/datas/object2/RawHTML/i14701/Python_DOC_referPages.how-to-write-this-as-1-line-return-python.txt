<div class="post-text" itemprop="text">
<p>My professor notes that this code can be condensed to one line of body. I'm not sure how to, even though I get a skeleton of it in my mind.</p>
<pre><code>def dict_as_str(d : {None:None}, key : callable=None, reverse : bool=False) -&gt; str:
    tempStr = ''
    for key in sorted(d.keys(), key=key, reverse = reverse):
        tempStr += "  " + str(key) +" -&gt; " + str(d[key]) + "\n"
    return tempStr
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join</code></a> and a generator expression will do it:</p>
<pre><code>return "".join("  {} -&gt; {}\n".format(key, d[key])
               for key in sorted(d, key=key, reverse=reverse))
</code></pre>
</div>
<span class="comment-copy">Use a list comprehension. <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow noreferrer">secnetix.de/olli/Python/list_comprehensions.hawk</a></span>
<span class="comment-copy">Maybe <code>return '\n'.join(generator expression)</code>? That's the most obvious way I think.</span>
<span class="comment-copy">@John1024: Itâ€™s an argument called <code>key</code> with a <code>callable</code> <a href="https://www.python.org/dev/peps/pep-0484/" rel="nofollow noreferrer">type hint</a>.</span>
<span class="comment-copy">@minitech Ahh.  OK.</span>
<span class="comment-copy">You don't need to call <code>d.keys()</code>; <code>sorted(d, key=key, reverse=reverse)</code> will automatically get the keys when it calls <code>d.__iter__</code> to get an iterator.</span>
<span class="comment-copy">This was the answer I was looking for .Thank you!</span>
