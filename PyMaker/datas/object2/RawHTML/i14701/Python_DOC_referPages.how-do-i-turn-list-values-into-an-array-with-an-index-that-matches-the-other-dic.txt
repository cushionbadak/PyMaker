<div class="post-text" itemprop="text">
<p>Hoping someone can help me out. I've spent the past couple hours trying to solve this, and fair warning, I'm still fairly new to python.</p>
<p>This is a repost of a question I recently deleted. I've misinterpreted my code in the last example.The correct example is:</p>
<p>I have a dictionary, with a list that looks similar to:</p>
<pre><code>dic = [
  {
    'name': 'john',
    'items': ['pants_1', 'shirt_2','socks_3']
  },
  {
    'name': 'bob',
    items: ['jacket_1', 'hat_1']
  }
] 
</code></pre>
<p>I'm using <code>.append</code> for both <code>'name'</code>, and <code>'items'</code>, which adds the <code>dic</code> values into two new lists:</p>
<pre><code>for x in dic:
    dic_name.append(dic['name'])
    dic_items.append(dic['items'])
</code></pre>
<p>I need to split the item value using <code>'_'</code> as the delimiter, so I've also split the values by doing:</p>
<pre><code>name, items = [i if i is None else i.split('_')[0] for i in dic_name],
              [if i is None else i.split('_')[0] for i in chain(*dic_items)])
</code></pre>
<p><code>None</code> is used in case there is no value. This provides me with a new list for <code>name, items</code>, with the delimiter used. Disregard the fact that I used '_' split for names in this example.</p>
<p>When I use this, the index for <code>name</code>, and <code>item</code> no longer match. Do i need to create the listed items in an array to match the <code>name</code> index, and if so, how?</p>
<p>Ideally, I want <code>name[0]</code> (which is john), to also match <code>items[0]</code> (as an array of the items in the list, so pants, shirt, socks). This way when I refer to index <code>0</code> for <code>name</code>, it also grabs all the values for <code>items</code> as index <code>0</code>. The same thing regarding the index used for bob <code>[1]</code>, which should match his items with the same index.</p>
<p>@avinash-raj, thanks for your patience, as I've had to update my question to reflect more closely to the code I'm working with.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm reading a little bit between the lines but are you trying to just collapse the list and get rid of the field names, e.g.:</p>
<pre><code>&gt;&gt;&gt; dic = [{'name': 'john', 'items':['pants_1','shirt_2','socks_3']},
           {'name': 'bob', 'items':['jacket_1','hat_1']}]
&gt;&gt;&gt; data = {d['name']: dict(i.split('_') for i in d['items']) for d in dic}
&gt;&gt;&gt; data
{'bob': {'hat': '1', 'jacket': '1'},
 'john': {'pants': '1', 'shirt': '2', 'socks': '3'}}
</code></pre>
<p>Now the data is directly related vs. indirectly related via a common index into 2 lists. If you want the dictionary split out you can always</p>
<pre><code>&gt;&gt;&gt; dic_name, dic_items = zip(*data.items())
&gt;&gt;&gt; dic_name
('bob', 'john')
&gt;&gt;&gt; dic_items
({'hat': '1', 'jacket': '1'}, {'pants': '1', 'shirt': '2', 'socks': '3'})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You <strong>need</strong> a <em>list</em> of dictionaries because the duplicate keys <code>name</code> and <code>items</code> are overwritten:</p>
<pre><code>items = [[i.split('_')[0] for i in d['items']] for d in your_list]
names = [d['name'] for d in your_list] # then grab names from list
</code></pre>
<p>Alternatively, you can do this in one line with the built-in <a href="https://docs.python.org/library/functions.html#zip" rel="nofollow"><code>zip</code></a> method and generators, like so:</p>
<pre><code>names, items = zip(*((i['name'], [j.split('_')[0] for j in i['items']]) for i in dic))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow">Looping Techniques</a> in the Tutorial. </p>
<pre><code>for name, items in div.items():
    names.append(name)
    items.append(item)
</code></pre>
<p>That will work if your dict is structured</p>
<pre><code>{'name':[item1]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In the loop body of</p>
<pre><code>for x in dic:
    dic_name.append(dic['name'])
    dic_items.append(dic['items'])
</code></pre>
<p>you'll probably want to access <code>x</code> (to which the items in <code>dic</code> will be assigned in turn) rather than <code>dic</code>.</p>
</div>
<span class="comment-copy">There are duplicate keys in your dictionary.</span>
<span class="comment-copy">Some advices: please put your code in one piece (useful for those who may copy-paste it) and cut your lines of code after 80 characters.</span>
<span class="comment-copy">Can you share the expected output... and should you comprehension be on dic_items not dic_name?</span>
<span class="comment-copy">@Malik, thanks, i meant to separate each dic, so it's a list of dict keys, but one doc key (items) is also considered a list. [updated. eric, will keep that in mind next time.</span>
<span class="comment-copy">@achampion, my current output is 'name &gt;&gt; ['joe','bob']' and 'items &gt;&gt; ['pants','shirt','socks' jacket','hat']', which breaks the index matching the original values, ideally i'd like 'name &gt;&gt; ['joe','bob']' and 'items &gt;&gt; ['pants,shirt,socks']['jacket','hat']' which then provides a correct match.</span>
<span class="comment-copy">That is correct, I am collapsing the keys as I am only interested in the values, and that they match the original key/index.</span>
<span class="comment-copy">Each item needs to be parsed.</span>
<span class="comment-copy">What do you mean, @MalikBrahimi ? My answer just points out one probable mistake in the code posted in the question. It might well be that it isn't the only mistake in that code.</span>
<span class="comment-copy">He wants the first element in the each item after it is split at the underscore.</span>
