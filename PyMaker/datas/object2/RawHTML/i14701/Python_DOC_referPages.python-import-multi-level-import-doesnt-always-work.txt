<div class="post-text" itemprop="text">
<p>I've seen this behavior in other cases so I don't believe it's <code>boto</code> specific, but I tagged this question as <code>boto</code> since this is where I saw the problem most recently.  When I do the following, it works in certain environments but not all:</p>
<pre><code>&gt;&gt;&gt; import boto
&gt;&gt;&gt; s3_conn = boto.s3.connection.S3Connection()
</code></pre>
<p>Some environments allow for this, but others give back this exception:</p>
<p><code>AttributeError: 'module' object has no attribute 'connection'</code></p>
<p>But, the following works in all environments (or at least the few cases that I have):</p>
<pre><code>&gt;&gt;&gt; from boto.s3.connection import S3Connection
&gt;&gt;&gt; s3_conn = S3Connection(access_key_id,secret_access_key)
</code></pre>
<p>I've seen this with other libraries as well, not just with <code>boto</code>.  Can anyone shed some light onto what is happening behind the scenes that causes the first case to not always work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Doing an import like</p>
<pre><code>&gt;&gt;&gt; import boto
</code></pre>
<p>gives you the <code>boto</code> package itself. None of the submodules will be imported with this statement, unless they're imported explicitly by <code>boto</code>. If they were already imported earlier, they are available with this import as well.</p>
<pre><code>&gt;&gt;&gt; from boto.s3.connection import S3Connection
</code></pre>
<p>on the other hand will import all submodules successively.</p>
<p>Btw:</p>
<pre><code>&gt;&gt;&gt; import boto
&gt;&gt;&gt; s3_conn = boto.connect_s3
</code></pre>
<p>would also help to resolve this particular issue for you.</p>
</div>
<span class="comment-copy">Note that <a href="https://github.com/boto/boto/blob/develop/boto/s3/__init__.py" rel="nofollow noreferrer"><code>\boto\s3\__init__.py</code></a> doesn't include <code>import connection</code></span>
<span class="comment-copy">That makes sense for the cases where the exception comes up, but then why would my first case ever succeed?</span>
<span class="comment-copy">Good question; can you be more specific than <i>some environments</i>?</span>
<span class="comment-copy">That would probably help, wouldn't it?  Duh!  I'm having success with <code>from x import y</code> in both of the following setups, but the direct <code>import x</code> version is succeeding with python 2.6 in Red Hat 4.1.2-42 but failing in python 2.7.5 with Red Hat 4.4.7-3.</span>
<span class="comment-copy">A possibly-relevant change (see <a href="https://docs.python.org/3/whatsnew/2.7.html#other-language-changes" rel="nofollow noreferrer">docs.python.org/3/whatsnew/2.7.html#other-language-changes</a>): <i>"The import statement will no longer try an absolute import if a relative import fails."</i></span>
