<div class="post-text" itemprop="text">
<p>I'm trying to write code for a chat server using sockets for multiple clients. But it is working for only a single client. Why is it not working for multiple clients? </p>
<p>I have to perform this program using Beaglebone Black. My server program will be running on beaglebone and normal clients on gcc or terminal. So I can't use multithreading.       </p>
<pre><code>    #SERVER                                                                      
import socket
import sys

s=socket.socket()
s.bind(("127.0.0.1",9998))
s.listen(10)

while True:
    sc,address = s.accept()
    print address
    while True:
            msg = sc.recv(1024)
        if not msg:break


        print "Client says:",msg
        reply = raw_input("enter the msg::")
        sc.send(reply)  
    sc.close()
s.close()

#CLIENT
import socket
import sys
s= socket.socket()
s.connect(("127.0.0.1",9998))

while (1):
    msg = raw_input("enter the msg")
    s.send(msg)
    reply = s.recv(1024)
    print "Server says::",reply
s.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use an event loop.</p>
<p>Integrated in python like asyncio : <a href="https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-server-protocol" rel="nofollow">Echo server example</a></p>
<p>or use an external library that provides the event loop like libuv: <a href="https://pyuv.readthedocs.org/en/v1.x/examples.html#tcp-echo-server" rel="nofollow">Echo server example</a>.</p>
<p>Note: Your code is not working for multiple clients <strong>simultaneously</strong> beacause you are blocked in the receive operation and you are not handling new accept operations.</p>
</div>
<span class="comment-copy">Use threads, that'll help</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/10810249/python-socket-multiple-clients">Python Socket Multiple Clients</a></span>
<span class="comment-copy">@ForceBru he might take your advice seriously. I don't think SO is a place for cruel jokes</span>
<span class="comment-copy">@legoscia might not be a duplicate, the code as posted should actually work fine for multiple clients, just not for multiple <i>simultaneous</i> clients, which might be the OP's actual request.</span>
