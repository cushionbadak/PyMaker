<div class="post-text" itemprop="text">
<p>A csv file <code>names.csv</code> has content:</p>
<pre><code>first_name last_name
Baked Beans
Lovely Spam
Wonderful Spam
</code></pre>
<p>I would like to read it into a list of dictionaries, with the first row containing the keys:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('names.csv') as csvfile:
...     reader = csv.DictReader(csvfile)
...     for row in reader:
...         print(row['first_name'], row['last_name'])
...
Baked Beans
Lovely Spam
Wonderful Spam
</code></pre>
<p>But is the type of <code>reader</code> <code>csv.DictReader</code>? 
How can I convert <code>reader</code> into a list of dictionaries?
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import csv
with open("in.csv") as csvfile:
    reader = csv.DictReader(csvfile,delimiter=" ")
    print(list(reader))
[{'first_name': 'Baked', 'last_name': 'Beans'}, {'first_name': 'Lovely', 'last_name': 'Spam'}, {'first_name': 'Wonderful', 'last_name': 'Spam'}]
</code></pre>
<p>If the delimiter is not actually a <code>,</code> you need to specify <code>" "</code> or whatever it is.</p>
<p>Just to clear any confusion, the code works fine for python3.6 also, the only difference is that using <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="noreferrer">DictReader</a> gives <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="noreferrer">Orderdicts</a> by default:</p>
<pre><code>In [1]: import csv
   ...: with open("in.csv") as csvfile:
   ...:     reader = csv.DictReader(csvfile, delimiter=" ")
   ...:     print(list(reader))
   ...:     
[OrderedDict([('first_name', 'Baked'), ('last_name', 'Beans')]), OrderedDict([('first_name', 'Lovely'), ('last_name', 'Spam')]), OrderedDict([('first_name', 'Wonderful'), ('last_name', 'Spam')])]
</code></pre>
<p>You can access keys exactly the same, an <code>OrderedDict</code> just keeps key insertion order:</p>
<pre><code>In [2]: import csv
   ...: with open("in.csv") as csvfile:
   ...:     reader = csv.DictReader(csvfile, delimiter=" ")
   ...:     for dct in reader:
   ...:         print(f"{dct['first_name']} {dct['last_name']}")
   ...:         
   ...:     
Baked Beans
Lovely Spam
Wonderful Spam
</code></pre>
<p>Which py3.6 actually does too, so if for some reason you really want a dict:</p>
<pre><code>In [5]: import csv
   ...: with open("in.csv") as csvfile:
   ...:     reader = csv.DictReader(csvfile, delimiter=" ")
   ...:     for dct in map(dict, reader):
   ...:         print(dct)
   ...:         print(f"{dct['first_name']} {dct['last_name']}")
   ...:         
   ...:     
{'first_name': 'Baked', 'last_name': 'Beans'}
Baked Beans
{'first_name': 'Lovely', 'last_name': 'Spam'}
Lovely Spam
{'first_name': 'Wonderful', 'last_name': 'Spam'}
Wonderful Spam
</code></pre>
<p>The ordering retention on insertion in py3.6 is an <em>implementation detail</em> and may change, but if enough of us use it, it may just have to stay :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>list()</code>:</p>
<pre><code>print(list(reader))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; with open('names.csv') as csvfile:
...     reader = csv.DictReader(csvfile, delimiter=" ")
...     print(list(reader))
... 
[{'first_name': 'Baked', 'last_name': 'Beans'}, {'first_name': 'Lovely', 'last_name': 'Spam'}, {'first_name': 'Wonderful', 'last_name': 'Spam'}]
</code></pre>
</div>
<span class="comment-copy">Not correct with Python 3.6, which should use <code>print([dict(d) for d in reader])</code></span>
<span class="comment-copy">@MattFletcher,  it works fine in py3.6,  what is not working for you? Is it because you see <code>OrderedDict's</code>?</span>
<span class="comment-copy">Yes, and therefore can't iterate over it properly. I'm not a Python master so I may be missing something massive, but I read that they way it worked had been changed in py3.6 - can't for the life of me find the SO thread...</span>
<span class="comment-copy">@MattFletcher, I added a little more to the answer, an OrderDict is, for all intents and purposes a dictionary, it just maintains the insertion order, so for your csv, you would see columns/keys in the same order as they appear in your file.</span>
<span class="comment-copy">Gotcha. Blame my own stupidity then ;) thanks for clarifying too, I've been banging my head with <code>Dict</code> vs <code>OrderedDict</code>!</span>
<span class="comment-copy">What if the csv file has many columns? How will it form dictionary,or lists</span>
<span class="comment-copy">@HNSingh The dictionaries within the list will just be longer. In the example above, the only columns are <code>first_name</code> and <code>last_name</code>.</span>
