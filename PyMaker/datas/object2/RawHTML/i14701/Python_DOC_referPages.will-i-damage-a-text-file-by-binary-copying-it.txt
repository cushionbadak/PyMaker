<div class="post-text" itemprop="text">
<p>I want to copy a tree of files/directories (recursively, of course) that have bad characters in the file names. So, I'm opening the file, reading its contents, and dumping them into a new file with a cleaned name.</p>
<p>If the contents of a file are text, and I read() them into write() while in binary mode, is there any chance of that damaging the contents?</p>
<pre><code>for name in os.listdir(src_path):
    name = clean_name(name)
    src_full = os.sep.join((src_path, name))
    dst_full = os.sep.join((dst_path, name))
    ...
    if isfile(src_full):
        with open(dst_full, 'xb'): as dst_file:
            with open(src_full, 'rb')) as src_file:
               dst_file.write(src_file.read())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, there is no chance of damaging the contents. You'll be reading the exact contents as they are, bit for bit, insofar your hardware can provide you with the accurate contents.</p>
<p>What <em>can</em> happen is that you forget to copy across all the file <em>metadata</em>; access control information and modification and creation dates are lost, for example.</p>
<p>Rather than read the whole file into memory, use the <a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile"><code>shutil.copyfile()</code> function</a> to handle the file copy for you; it'll copy data across in blocks. Better still, use the <a href="https://docs.python.org/3/library/shutil.html#shutil.copy"><code>shutil.copy()</code></a> or <a href="https://docs.python.org/3/library/shutil.html#shutil.copy2"><code>shutil.copy2()</code></a> functions and it'll copy across permissions too; <code>copy2()</code> also copies file access and creation times.</p>
<p>All three functions open the file in binary mode; the source is opened with <code>'rb'</code>, the destination with <code>'wb'</code>. If you <em>must</em> have exclusive opening (mode <code>'xb'</code>), you'll need to open the file objects yourself (as you already do) and use <a href="https://docs.python.org/3/library/shutil.html#shutil.copyfileobj"><code>shutil.copyfileobj()</code></a> to get the efficient file copy, followed either by a <a href="https://docs.python.org/3/library/shutil.html#shutil.copymode"><code>shutil.copymode()</code> call</a> (to replicate <code>shutil.copy()</code> and copy file permissions) or a <a href="https://docs.python.org/3/library/shutil.html#shutil.copystat"><code>shutil.copystat()</code> call</a> (to replicate what <code>shutil.copy2()</code> does).</p>
</div>
<span class="comment-copy">I don't see a reason why it would.</span>
<span class="comment-copy">What are "bad characters"?</span>
<span class="comment-copy">Text files are binary files which just happen to use the bytes in a way that maps to a text encoding. So you can treat any text file as binary without a problem, you just don’t get the “extra” that you are able to get the text for free (you would have to do the decoding yourself—which also isn’t hard).</span>
<span class="comment-copy">@Tichodroma For one, the pipe character.. which TSX probably put in the title of their webpage to make it more annoying to scrape lol</span>
<span class="comment-copy">Excellent! Thanks</span>
