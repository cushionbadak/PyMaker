<div class="post-text" itemprop="text">
<p>So I'm trying to get two inputs that separate usernames by credit hours and every time after I've exited the loop I get an unexpected EOF.</p>
<pre><code>fresh = []
soph = []
jun = []
sen = []

def classify(cr, un):
     if cr &lt;= 27:
         fresh.append(un)
         print(un, 'is a freshman.\n')
     elif 28 &lt;= cr &lt;= 56:
         soph.append(un)
         print(un, 'is a sophomore.\n')
     elif 57 &lt;= cr &lt;= 84:
         jun.append(un)
         print(un, 'is a junior.\n')
     elif cr &gt;= 85:
         sen.append(un)
         print(un, 'is a senior\n')


def main():

     un = input('Student: ')
     cr = eval(input('Credits: '))
     while un and cr != '':
         un = input('Student: ')
         cr = eval(input('Credits: '))
         classify(cr, un)
</code></pre>
<p>Specifically the error I get is:</p>
<pre><code>File "./class.py", line 58, in &lt;module&gt;
  main()
File "./class.py", line 51, in main
  cr = eval(input('Credits: '))
File "&lt;string&gt;", line 0
</code></pre>
<p>I'm not sure if it's related (or if it's just something I'm overlooking) but I have to enter through Credit in order to exit the loop. Shouldn't the loop exit after pressing enter when Student comes up due to the AND operator?</p>
<p>edit: added classify func. I don't think this is the problem though, I've tried removing it and it still brings me back to the EOF.</p>
</div>
<div class="post-text" itemprop="text">
<p>You shouldn't be using <code>eval()</code> to turn a string into an integer. Use <code>int</code> instead.</p>
<pre><code>def main():

    un = input('Student: ')
    cr = input('Credits: ')
    classify(int(cr), un)
    while un and cr:
        un = input('Student: ')
        cr = input('Credits: ')
        classify(int(cr), un)
</code></pre>
<p>Credits must still be entered even after skipping the student name because the <code>while</code> condition is only evaluated before going into the code block, not after every statement in the block. If you want it to stop immediately when the user skips the student or credit value, do this:</p>
<pre><code>def main():

    while 1:
        un = input('Student: ')
        if not un: break
        cr = input('Credits: ')
        if not cr: break
        classify(int(cr), un)
</code></pre>
<p>And, of course, use <code>input</code> for Python 3, and <code>raw_input</code> for Python 2.</p>
</div>
<span class="comment-copy">do you know what <code>eval</code> does?</span>
<span class="comment-copy"><code>eval(input())</code> seems like quite a bad idea. It allows the user to execute arbitrary code by typing it in at the prompt.</span>
<span class="comment-copy">Where is your classify()</span>
<span class="comment-copy">@murgatroid99  So far I've used it to convert strings to ints. I also tried int() and float() and neither of those work either.</span>
<span class="comment-copy">Is this Python 2 or 3?</span>
<span class="comment-copy">Why not a simple <code>while True:</code> with break conditions for both values and eliminate all the code before the while (not a great fan of this repeat -&gt; until pattern). And if you you keep this pattern you should also move classify into the while loop as the first statement to avoid calling classify if not <code>un</code> or <code>cr</code> (and removing the other call to classify</span>
<span class="comment-copy">Very true - if we're going to use <code>break</code>, might as well use it all the way. I'll edit the answer.</span>
<span class="comment-copy">Thanks (again), it's really helpful to hear when and where I should be using what functions.</span>
<span class="comment-copy">I recommend looking up the built-in <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">functions</a> and <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">types</a> to provide a good foundation of useful tools.</span>
