<div class="post-text" itemprop="text">
<p>I am saving locations on a web page to an sqlite3 database using python/selenium and sqlite3. Some of the locations contain a single quote </p>
<p>For example maryville, John's lane, London</p>
<p>I know that when creating a data base locally, I must use two single quotes to escape this. John''s lane. REF:- questions/603572/how-to-properly-escape-a-single-quote-for-a-sqlite-database
How can this be achieved when scraping a website.</p>
<p>My Code is below:-</p>
<pre><code># get locations
locs = browser.find_elements_by_class_name("meta")
for loc in locs:
    if loc.text !="":
        print loc.text
        query += ",\'"+loc.text.replace(', ','-')+"\'"
</code></pre>
<p>I get this error because of the presence of the 's </p>
<pre><code>cur.execute("INSERT INTO LOCATIONS VALUES("+query+");")
sqlite3.OperationalError: near "s": syntax error
</code></pre>
<p>I am saving the full address to one fields. Thanks in advance for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use placeholders instead of manually trying to escape your data.</p>
<pre><code>conn = sqlite3.connect(':memory:')
conn.execute('create table locations (name text)')
locs = list(map("{}'s".format, range(100)))
conn.execute('insert into locations values ({})'.format(
    '), ('.join(['?'] * len(locs))  # Build your placeholders
), locs)
print(list(conn.execute('select * from locations limit 5')))
</code></pre>
<p>will print</p>
<pre><code>[("0's",), ("1's",), ("2's",), ("3's",), ("4's",)]
</code></pre>
<p>A question mark in the query to execute signifies a placeholder and your DB-API (<a href="https://docs.python.org/3.5/library/sqlite3.html" rel="nofollow">sqlite3</a> in this case) will handle replacing those with the data you provide. It'll also handle required escaping.</p>
<p>Also you should consider using <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executemany" rel="nofollow"><code>executemany</code></a>, since manually building a huge placeholder list for <code>VALUES (?), (?), (?), ...</code> will cause</p>
<pre><code>sqlite3.OperationalError: too many terms in compound SELECT
</code></pre>
<p>so do</p>
<pre><code>conn.executemany('insert into locations values (?)', ((x,) for x in locs))
</code></pre>
<p>and you can insert thousands of rows.</p>
</div>
<span class="comment-copy">Don't escape and catenate values to SQL, use placeholders: <a href="http://stackoverflow.com/a/1310001/2681632">stackoverflow.com/a/1310001/2681632</a>. There are enough SQL injections around already.</span>
<span class="comment-copy">Thank you for the detailed explanation.</span>
