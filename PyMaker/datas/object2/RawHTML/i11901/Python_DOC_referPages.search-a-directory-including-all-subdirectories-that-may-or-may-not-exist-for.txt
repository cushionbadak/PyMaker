<div class="post-text" itemprop="text">
<p>I want to search a directory, <em>including all subdirectories that may or may not exist</em>, for a file in Python.  </p>
<p>I see lots of examples where the directory we are peeking into is known, such as:  </p>
<pre><code>os.path.exists(/dir1/myfile.pdf)
</code></pre>
<p>...but what if the file I want is located in some arbitrary subdirectory that I don't already know exists or not?  For example, the above snippet could never find a file here:</p>
<blockquote>
<p>/dir1/dir2/dir3/.../dir20/myfile.pdf</p>
</blockquote>
<p>and could clearly never generalize without explicitly running that line 20 times, once for each directory.</p>
<p>I suppose I'm looking for a recursive search, where I don't know the exact structure of the filesystem (if I said that right).</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested by @idjaw, try <code>os.walk()</code> like so:</p>
<pre><code>import os
import os.path

for (dir,subdirs,files) in os.walk('/dir1'):
    # Don't go into the CVS subdir!
    if 'CVS' in subdirs:
        subdirs.remove('CVS')

    if 'myfile.pdf' in files:
        print("Found:", os.path.join(dir, 'myfile.pdf'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is code do find a file (in my case "wsgi.py") below the pwd</p>
<pre><code>    import os
    for root, dirs, files in os.walk('.'):
       if "wsgi.py" in files:
           print root


./jg18/blog/blog
./goat/superlists/superlists
./jcg_blog/jcg_blog
./joelgoldstick.com.16/blog/blog
./blankdj19/blank/blank
./cp/cpblog/cpblog
./baseball/baseball_stats/baseball_stats
./zipcodes/zipcodes/zipcodes
./django.1.6.tut/mysite/mysite
./bits/bits/bits
</code></pre>
<p>If the file exists only in one dir, it will list one directory</p>
</div>
<span class="comment-copy">Have you seen <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk</a>? That doesn't meet your needs?</span>
