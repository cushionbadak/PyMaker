<div class="post-text" itemprop="text">
<p>I am working on a caching system. The idea is it can detect if the function that created the cache object has changed since its initial creation, therefore invalidating the cache file.</p>
<p>I stumbled across python's <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow"><code>function.__code__</code></a> attribute, that is the compiled function's byte code representation. I can't find much additional documentation on the matter, and was wondering what its behaviour is across different executions of a single program.</p>
<p>I assume that because python is an interpreted language, the byte code will be platform independent. I also assume that its byte code generation is deterministic for a given input. Am I right in thinking so?</p>
</div>
<div class="post-text" itemprop="text">
<p>The function.__code__ attribute returns an object encapsulating the virtual machine bytecode.</p>
<pre><code>def f(): return 3
print(dir(f.__code__))
print(f.__code__.co_code)  # raw compiled bytecode
</code></pre>
<p>Another way to access the information is to compile explicitly a file.
Here is a file <code>test.py</code>:</p>
<pre><code>def f(): return 3
</code></pre>
<p>Then, you can type in the python prompt:</p>
<pre><code>&gt;&gt;&gt; c = compile('test.py', 'test.py', 'exec')
&gt;&gt;&gt; print(c.co_code)  # here is some bytecode
</code></pre>
<p>A simple and funny way to access the bytecode, in a very legible way, is to run it in a terminal (here, <code>dis</code> is the disassembler):</p>
<pre><code>python -m dis test.py
</code></pre>
<p>Which outputs:</p>
<pre><code>1         0 LOAD_CONST               0 (&lt;code object f at 0x7fe8a5902300, file "p.py", line 1&gt;)
          3 LOAD_CONST               1 ('f')
          6 MAKE_FUNCTION            0
          9 STORE_NAME               0 (f)
         12 LOAD_CONST               2 (None)
         15 RETURN_VALUE
</code></pre>
<p>This bytecode is not platform dependent. The VM is.</p>
<hr/>
<p>About eventual changes in bytecode, I have taken <a href="https://raw.githubusercontent.com/Aluriak/PowerGrASP/dev/powergrasp/compression.py" rel="nofollow">this file</a>, and disassembled it twice:</p>
<pre><code>python3 -m dis file.py &gt; test1
python3 -m dis file.py &gt; test2
</code></pre>
<p>Then a simple diff shows that:</p>
<pre><code>89c89
&lt;  26         204 LOAD_CONST              13 (&lt;code object search_concept at 0x7f40de337300, file "powergrasp/compression.py", line 26&gt;)
---
&gt;  26         204 LOAD_CONST              13 (&lt;code object search_concept at 0x7fd8de5ab300, file "powergrasp/compression.py", line 26&gt;)
104c104
&lt;             240 LOAD_CONST              19 (&lt;code object compress_lp_graph at 0x7f40de340780, file "powergrasp/compression.py", line 55&gt;)
---
&gt;             240 LOAD_CONST              19 (&lt;code object compress_lp_graph at 0x7fd8de5b4780, file "powergrasp/compression.py", line 55&gt;)
</code></pre>
<p>The changes are mainly regarding imports, where the address of the loaded modules are not the same across the compilation.</p>
</div>
<span class="comment-copy">I think it may change with the interpreter version though</span>
