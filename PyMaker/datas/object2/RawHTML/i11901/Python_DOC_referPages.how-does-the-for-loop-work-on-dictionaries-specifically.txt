<div class="post-text" itemprop="text">
<p>I was wondering how exactly the <code>for</code> loop accesses keys in a dictionary ?
does it call <code>dict.keys()</code> and iterate through that list ?</p>
<p>The reason I'm asking is that I want to query a dictionary's key, any key, and I was wondering if there is a difference in performance (aside from visuals and readability) between calling:</p>
<pre><code>for key in dict:
    my_func(dict[key])
    break
</code></pre>
<p>and</p>
<pre><code>my_func(dict.keys()[0]) 
</code></pre>
<p>Which brought me to the above question - what does python do during a <code>for</code> loop on <code>dict</code>s, specifically, under the hood?</p>
</div>
<div class="post-text" itemprop="text">
<p>Iterating <code>dict</code> does not call <code>dict.key()</code>. The dictionary itself support iteration.</p>
<pre><code>&gt;&gt;&gt; iter({'name': 'value'})
&lt;dict_keyiterator object at 0x7f127da89688&gt;
</code></pre>
<p>BTW, <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow"><code>dict.keys</code></a> in Python 3.x returns dictionary key view which does not support indexing.</p>
<pre><code>&gt;&gt;&gt; {'name': 'value'}.keys()
dict_keys(['name'])
&gt;&gt;&gt; {'name': 'value'}.keys()[0]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'dict_keys' object does not support indexing
</code></pre>
<hr/>
<p>If you want to get any key, you can use <code>next</code>, <code>iter</code>:</p>
<pre><code>&gt;&gt;&gt; next(iter({'name': 'value', 'name2': 'another value'}))
'name'

&gt;&gt;&gt; next(iter({}))  # &lt;--  To handle empty case, pass default value
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
StopIteration
&gt;&gt;&gt; next(iter({}), 'default value')
'default value'
</code></pre>
</div>
<span class="comment-copy"><code>dict[key]</code> is the same as <code>dict.keys()[0]</code> ? in OP <code>dict[key]</code> is supposed to return a value, while <code>dict.keys()[0]</code> supposed to return a key</span>
<span class="comment-copy">Check out the iterator protocol in <a href="https://www.python.org/dev/peps/pep-0234/" rel="nofollow noreferrer">PEP 234</a></span>
<span class="comment-copy">Are you asking or telling? Since <code>dicts</code> are unordered they wouldn't be the same, if at all by accident or luck or whatever.</span>
<span class="comment-copy">Ah, cheers. My console output had me confused there.</span>
