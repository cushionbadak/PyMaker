<div class="post-text" itemprop="text">
<p>I want to communicate with a data-logger via Telnet. Therefore, I wrote the following python-script:</p>
<pre><code>import subprocess

command ='plink.exe -telnet -P 23 12.17.46.06'

p = subprocess.Popen(command, stdin=subprocess.PIPE, stdout=subprocess.PIPE, bufsize=1, shell=False)

answer =  p.communicate('command')[0]
print answer
</code></pre>
<p>By running the script, a plink-windows pops up. The python script seems to wait for some action to be done inside the plink command window. By closing the window manually, the desired "answer" shows up inside python.</p>
<p>I am looking for a command / procedure to close plink directly out of python. It seems not to be sufficient to just close the subprocess, as in this case only the communication between python and plink gets closed and not the program plink.exe itself.</p>
<p>Any help is appreciated!
Regards, Phil</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation for the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow"><code>communicate()</code></a> function says:  <em>Wait for process to terminate.</em>  Thus the function does not return until plink.exe exits and thus your program doesn't get the output until then.</p>
<p>You should add to your <code>'command'</code> something that will close the telnet connection.  When the far end closes the telnet connection plink.exe will exit and its window will close.  If your telnet session runs a unix shell you could add '; exit' to your command.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can check if your task within plink tunnel is complete and then execute
taskkill within your script</p>
<p>something like,<br/>
    killProg=<code>taskkill /f /fi "imagename eq plink.exe"</code><br/>
    p.communicate('killProg')[0]  </p>
<p>That will kill plink while keeping the tunnel open to execute other commands.</p>
</div>
<span class="comment-copy">Thanks for the clarification regardinf the communicate()-command. However, the question remains how to exit plink directly from python. The python script runs on Windows 7 64-bit.</span>
<span class="comment-copy">Your question is an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY Problem</a>.  plink will exit when the connection is closed. How will you know <i>when</i> to kill it? You can kill it, if you want, by calling <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.kill" rel="nofollow noreferrer"><code>.kill()</code></a>. Of course, your program can't do anything while it is blocked waiting for the process to terminate. You will either want to learn multithreading (which is very difficult to do without bugs) or provide a timeout to communicate() or use a non-blocking approach to managing the pipe.</span>
<span class="comment-copy">Okay, then I have to re-formulate my problem: How can I kill the telnet connection established by plink <b>with python</b>? Your suggestion regarding a timeout would by sufficient for me. However, as I mentioned before, I can terminate the conenction from python to plink, but not the telnet connection of plink itself.</span>
<span class="comment-copy">You kill the process by calling <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.kill" rel="nofollow noreferrer"><code>.kill()</code></a> on it, as I noted in my previous comment. When the process does not exist, neither will its connection.</span>
<span class="comment-copy">Adding .kill() did not change anything. Plink-window remains open.</span>
