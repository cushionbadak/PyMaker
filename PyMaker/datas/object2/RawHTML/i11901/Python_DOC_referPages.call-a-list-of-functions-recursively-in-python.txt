<div class="post-text" itemprop="text">
<p>I have a list of functions called func_list.</p>
<p>I want to execute them one by one, and the result of the execution of <code>func_list[index]</code> must be passed as argument to <code>func_list[index + 1]</code>, and so on. </p>
<p>I came up with this code:</p>
<pre><code>def func(arg, index):
    while index &lt; 10:
        res = func_list[index](arg)
        res = func(res, index+1)
    return res
</code></pre>
<p>Is there any better way of achieving the same?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is what <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow"><code>functools.reduce</code></a> is for.</p>
<pre><code>from functools import reduce

reduce(lambda a,b: b(a), func_list, FIRST_ARG)
</code></pre>
<p>This will run</p>
<pre><code>func_list[n](func_list[n-1](... func_list[0](FIRST_ARG) ... ))
</code></pre>
<p><code>functools.reduce</code> takes two arguments (and optionally a third). The first argument is a binary function that returns a value, the second argument is an iterable of values to pass into the binary function, and the optional third is a value to place before that list (as the first argument to the first run of the binary function).</p>
<p>The result of the previous function call is given as <code>a</code> to the next function call, along with the next item in the iterable as <code>b</code>. Therefore <code>lambda a,b: b(a)</code> calls the previous result as the argument of the next function.</p>
</div>
<span class="comment-copy">Yes. Use a <code>for</code> loop.</span>
