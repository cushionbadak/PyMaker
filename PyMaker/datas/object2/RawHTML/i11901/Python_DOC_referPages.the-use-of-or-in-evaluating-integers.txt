<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9999420/if-command-in-python">if command in python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>The problem "Given 2 ints, a and b, return True if one if them is 10 or if their sum is 10."</p>
<p>In the first test why does entering (9,9) and (8,3) return True? </p>
<p>I have since solved the problem using a different solution (further below) but I am struggling to understand why the first solution does not work since neither integer is 10 nor do they equal 10 when summed together!</p>
<p>Thanks for your help.</p>
<pre><code>def makes10(a, b):                                        

    if a or b == 10:
        return True

    if a + b == 10:
        return True

    else:
        return False

def makes10(a, b):

    if a == 10:
        return True

    if b == 10:
        return True

    if a + b == 10:
        return True

    else:
        return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It says <code>a or b == 10</code>, since a is true, i.e not zero it returns true.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a or b == 10
</code></pre>
<p>This evaluates to True as <code>a</code> evaluates to True</p>
<p>You must write </p>
<pre><code>(a == 10) or (b == 10)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if a or b == 10:
</code></pre>
<p>That doesn't do what you think it does. It will be evaluated as:</p>
<pre><code>if (a) or (b == 10):
</code></pre>
<p>You most likely want:</p>
<pre><code>if a == 10 or b == 10:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a or b == 10
</code></pre>
<p>This will first evaluate a in the context of a boolean expression, and if this is true the whole expression is just true. If it is false, then it will evaluate <code>b == 10</code>. It is different from <code>a == 10 or b == 10</code>.</p>
<p>Alternatively, you would just say </p>
<pre><code>if 10 in [a, b]:
</code></pre>
<p>this will also do what you want to accomplish.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because this:</p>
<pre><code>if a or b == 10:
</code></pre>
<p>is executed as the equivalent of</p>
<pre><code>temp = (a or b)
if (temp == 10):
</code></pre>
<p>YOu can <strong>NOT</strong> test multiple values against a single fixed value like that. You have to test each one individually, e.g. if you had</p>
<pre><code>if (a == 10) or (b == 10):
</code></pre>
<p>the statement would have worked. Read the docs: <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">https://docs.python.org/3/reference/expressions.html#operator-precedence</a></p>
</div>
<span class="comment-copy"><code>a or b == 10</code> means <code>(a != 0) or (b == 10)</code>.  The construct you wanted is <code>a == 10 or b == 10</code>.  Is that enough for you to understand your mistake?</span>
<span class="comment-copy">Duplicate of <a href="http://stackoverflow.com/questions/15112125/how-do-i-test-one-variable-against-multiple-values">this</a></span>
<span class="comment-copy">Ah, yes. @timgeb: that is a much better duplicate than the one I picked. Variations of this question have been asked so many times. Thanks!</span>
<span class="comment-copy">So in this case "a" could be any possible number?</span>
<span class="comment-copy">Aside: <code>return (a == 10) or (b == 10) or (a+b == 10)</code> may be more readable.</span>
<span class="comment-copy">So any number other than "0" would return True if you wrote: if a: ...</span>
<span class="comment-copy">@GavMac Yes. That's correct. Look up the terms "truthy" and "falsey".</span>
<span class="comment-copy">Thanks Carcigenicate!</span>
<span class="comment-copy">@GavMac No problem. Get lots of practice setting up conditions and understanding how truthy and falsey values work. You'll be using those concepts constantly.</span>
<span class="comment-copy">I think <code>a</code> evaluates to True and <code>b</code> is not evaluated.</span>
<span class="comment-copy">yes. but <code>or</code> still has a higher priority than <code>==</code>, so you're testing the result of the <code>or</code> against <code>10</code>, not the individual <code>a</code> or <code>b</code> values.</span>
