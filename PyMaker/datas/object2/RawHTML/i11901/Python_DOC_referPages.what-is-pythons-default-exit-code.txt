<div class="post-text" itemprop="text">
<p>Assuming your script doesn't exit due to any kind of failure (exception, syntax error) and the script doesn't exit due to <code>sys.exit()</code> or <code>os._exit()</code>, how does Python figure out what exit code to exit with?</p>
<p>It seems to be 0, which makes sense since it indicates no-error on *nix systems.  However, will that always be the case that it exits with 0 (except for the cases above)?  Surprisingly after quite a bit of online searching, I couldn't find anything which explicitly said that it would exit with 0 unless otherwise specified.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/sys.html#sys.exit" rel="nofollow"><code>sys.exit</code> documents a default exit status of <code>0</code></a>, and <a href="https://docs.python.org/3/library/os.html#os.EX_OK" rel="nofollow"><code>os._exit</code>'s docs specify a UNIX-like OS constant for "normal" exit status, <code>os.EX_OK</code></a>, but there is no documented guarantee I can find for the exit status in general.</p>
<p>Aside from that, the best I can give you is that in CPython, the <code>python</code> executable (including <code>python.exe</code>/<code>pythonw.exe</code> on Windows) is implemented in <code>python.c</code> by calling <a href="https://docs.python.org/3/c-api/veryhigh.html#c.Py_Main" rel="nofollow"><code>Py_Main</code></a> and returning whatever it returns; per the documented guarantees on <code>Py_Main</code>, the exit status is:</p>
<blockquote>
<p><code>0</code> if the interpreter exits normally (i.e., without an exception), <code>1</code> if the interpreter exits due to an exception, or <code>2</code> if the parameter list does not represent a valid Python command line.</p>
<p>Note that if an otherwise unhandled <code>SystemExit</code> is raised, this function will not return <code>1</code>, but exit the process, as long as <code>Py_InspectFlag</code> is not set.</p>
</blockquote>
<p>so this implies that simply running off the end of the <code>__main__</code> module without an active exception should always return <code>0</code> for CPython, though alternate interpreters are not technically <em>required</em> to do the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you look at the <a href="https://github.com/python/cpython" rel="nofollow noreferrer">cpython source code</a>:</p>
<ol>
<li><code>main()</code> in <code>Programs/python.c</code> returns the return value of <code>Py_Main()</code> </li>
<li><code>Py_Main()</code> in <code>Modules/main.c</code> returns the return value of <code>run_file()</code></li>
<li><code>run_file()</code>, also in <code>Modules/main.c</code> returns <code>0</code> unless <code>PyRun_AnyFileExFlags()</code> returns non-zero</li>
<li><code>PyRun_AnyFileExFlags()</code> in <code>Python/pythonrun.c</code> will <code>exit()</code> in
the event of a <code>SystemExit</code> exception and so will not return if the
script sets an exit code. It will only return non-zero if there
is an internal error.</li>
</ol>
<p>So the return value of <code>run_file()</code> is what makes the default exit code of a script <code>0</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Exiting with 0 predates Python by a long time, it is part of the <a href="https://en.wikipedia.org/wiki/Exit_status#POSIX" rel="nofollow">POSIX standard</a>. All well-behaved programs indicate a successful exit with 0.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's default exit code is 0. This is documented here <a href="https://docs.python.org/2/library/exceptions.html#exceptions.SystemExit" rel="nofollow">https://docs.python.org/2/library/exceptions.html#exceptions.SystemExit</a></p>
<p>However, the exit code will be whatever the is specified in the <code>exit()</code> or <code>quit()</code> functions. So, if you are using a script, you should always check within the script or script documentation what that particular script will return. For example: you could launch python in a terminal, and just type <code>quit(1)</code> and it exits with return code of 1 even though there are no errors. </p>
</div>
<span class="comment-copy">Thanks ShadowRanger.  Martin Broadhurst's answer (tracing more through the code) confirms the Py_Main documentation.</span>
<span class="comment-copy">Yes, I am aware of that 0 has long been a *nix standard meaning no-error.  I just want to see it in writing (or in Python source code) that it always uses 0 if there were no exceptions, errors or explicit requests to exit</span>
<span class="comment-copy">This isn't quite right because a <code>SystemExit</code> is not raised if the script doesn't call <code>sys.exit()</code>.</span>
