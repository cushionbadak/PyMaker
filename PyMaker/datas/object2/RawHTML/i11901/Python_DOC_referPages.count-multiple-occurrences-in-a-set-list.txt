<div class="post-text" itemprop="text">
<p>Is there a way to count the amount occurrences of a set of string lists? </p>
<p>For example, when I have this list, it counts 7 <code>' '</code> blanks.  </p>
<pre><code>list = [[' ', ' ', ' ', ' ', ' ', ' ', ' ']]
print(list.count(' '))
</code></pre>
<p>Is there a way I can do this same thing but for a set of multiple lists? Like this for example below:</p>
<pre><code>set = [[' ', ' ', ' ', ' ', ' ', ' ', ' '], 
       [' ', ' ', ' ', ' ', ' ', ' ', ' '], 
       [' ', ' ', ' ', ' ', ' ', ' ', ' ']]
print(set.count(' '))
</code></pre>
<p>When I do it this same way, the output I get is <code>0</code> and not the actual count of occurrences. </p>
</div>
<div class="post-text" itemprop="text">
<h1>Solution</h1>
<p>This works:</p>
<pre><code>&gt;&gt;&gt; data = [[' ', ' ', ' ', ' ', ' ', ' ', ' '], 
            [' ', ' ', ' ', ' ', ' ', ' ', ' '], 
            [' ', ' ', ' ', ' ', ' ', ' ', ' ']]
&gt;&gt;&gt; sum(x.count(' ') for x in data)
21
</code></pre>
<p>You need to count in each sub list. I use a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow">generator expression</a> to do this and sum the results from all sub lists.
BTW, don't use <code>set</code> as a variable name. It is a built-in.</p>
<h1>Performance</h1>
<p>While not that important for many cases, performance can be interesting:</p>
<pre><code>%timeit sum(x.count(' ') for x in data)
1000000 loops, best of 3: 1.28 µs per loop
</code></pre>
<p>vs.</p>
<pre><code>%timeit sum(1 for i in chain.from_iterable(data) if i==' ')
100000 loops, best of 3: 4.79 µs per loop
</code></pre>
</div>
