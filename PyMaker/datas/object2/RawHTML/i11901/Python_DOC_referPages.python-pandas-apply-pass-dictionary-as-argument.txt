<div class="post-text" itemprop="text">
<p>I want to pass a dictionary as an additional argument to a function. The function is to be applied over each row of a data frame. So I use 'apply'. Below I have a small example of my attempt:</p>
<pre><code>import pandas as pd
import numpy as np

def fun(df_row, dict1):
 return df_row['A']*2*max(dict1['x'])

df = pd.DataFrame(np.random.randn(6,2),columns=list('AB'))
dict_test = {'x': [1,2,3,4], 'y': [5,6,7,8]}
df['D'] = df.apply(fun, args = (dict_test), axis = 1)
</code></pre>
<p>I get the following error message:
    ('fun() takes exactly 1 argument (3 given)', u'occurred at index 0')
I use **dict1 to indicate key-value pairs in the function 'fun'</p>
<p>Curiously enough if I pass two arguements, things work fine</p>
<pre><code>def fun(df_row, dict1, dict2):
 return df_row['A']*2*max(dict1['x'])

df = pd.DataFrame(np.random.randn(6,2),columns=list('AB'))
dict_test = {'x': [1,2,3,4], 'y': [5,6,7,8]}
df['D'] = df.apply(fun, axis = 1,  args = (dict_test, dict_test))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are not passing a tuple, <code>(dict_test)</code> is not a tuple, it's just the same as <code>dict_test</code>. You want a tuple with <code>dict_test</code> as the only element, that is <code>(dict_test,)</code>.</p>
<pre><code>df['D'] = df.apply(fun, args=(dict_test,), axis=1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <code>pd.DataFrame.apply</code> doc:</p>
<blockquote>
<pre><code>Parameters
----------
...
args : tuple
    Positional arguments to pass to function in addition to the
    array/series
Additional keyword arguments will be passed as keywords to the function
</code></pre>
</blockquote>
<p>That last line means that if you want to unpack <code>dict_test</code> to pass arguments <em>as keywords</em> to <code>fun</code>, you can do:</p>
<pre><code>df['D'] = df.apply(fun, axis=1, **dict_test)
</code></pre>
<p>Previously you were using:</p>
<pre><code>df['D'] = df.apply(fun, args = (dict_test), axis = 1)
</code></pre>
<p>That means <code>apply</code> will try to call <code>fun</code> this way:</p>
<pre><code>fun(df_row, dict_test)
</code></pre>
<p>But this is <strong>not</strong> how you defined <code>fun</code> (you'll get the difference once you know a bit more about positional and keyword arguments). </p>
</div>
<span class="comment-copy">You shouldn't be using <code>**</code>.  The dictionary will be passed in as a normal argument, not as keyword arguments.</span>
<span class="comment-copy">If I remove ** I get the error ('fun() takes exactly 2 arguments (3 given)', u'occurred at index 0')</span>
<span class="comment-copy">If you define <code>fun()</code> to take <code>*args</code> and print <code>args</code>, it should give you an idea of what data is being passed to it.  You definitely need to add another parameter to your function, but that should tell you what it is.</span>
<span class="comment-copy">It seems to be passing only the keys of the dictionary and not the key-value pairs. This is one row :  <code>(A   -0.207240 B    1.193103 Name: 0, dtype: float64, 'y', 'x') </code></span>
<span class="comment-copy">Hi. It's unclear what you're trying to achieve: if <code>dict_test</code> items are passed as keyword arguments, you'll end up with <code>dict1['x'] </code> that is <i>a list of 4 ints</i> that you'll try to multiply with <code>df["A"] * 2</code>... That just won't work. I get this is a toy example but if you could clarify that point that would make the question easier to answer.</span>
<span class="comment-copy">What is the comma for in <code>args=(dict_test,)</code>?</span>
<span class="comment-copy">@conchoecia It is for <a href="https://docs.python.org/3/library/stdtypes.html#tuple" rel="nofollow noreferrer">creating a tuple</a>.</span>
<span class="comment-copy">Still doesn't work: <code>("fun() got an unexpected keyword argument 'y'", u'occurred at index 0') </code></span>
<span class="comment-copy">That's a bit weird. Are you passing <code>**dict_test</code> <b>after</b> all the other arguments to apply?</span>
<span class="comment-copy">Yes, exactly as you typed it</span>
<span class="comment-copy">Hmmm. I tested it and it works on my side. With the way you defined fun you should be able to call <code>fun({"A": 1}, x=[1], y=2)</code> without an error. Can you check that?</span>
<span class="comment-copy">Yes, I think I was making an error. It works. So in <code>apply</code> I can't use <code>args</code> to pass dictionaries?</span>
