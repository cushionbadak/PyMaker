<div class="post-text" itemprop="text">
<p>I want to execute the following program called APlusB.py in my OSX terminal, enter two numbers for the inputs and have it compute the values and exit. In my terminal I type:</p>
<pre><code>$ python3 APlusB.py
</code></pre>
<p>then I get a little cursor on a blank line, I type </p>
<pre><code>3 4
</code></pre>
<p>what do I do after that? If I hit Ctl + d then the program terminates, which is what I want, but it prints 7D and I would prefer if it would just compute my value, and print out 7</p>
<pre><code># Uses python3
import sys
input = sys.stdin.read()
tokens = input.split()
a = int(tokens[0])
b = int(tokens[1])
print(a + b)
</code></pre>
<p>Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.stdin.read</code> waits for the user to enter <code>EOF</code>.</p>
<p>Try using <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> it will return when the user enters a new line.
Don't name your variable input as you'll be redefining the input function you'll need to use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please use <code>sys.stdin.readline()</code></p>
<p><code>stdin.read(1)</code> reads one character from stdin. If there was more than one character to be read at that point (e.g. the newline that followed the one character that was read in) then that character or characters will still be in the buffer waiting for the next <code>read()</code> or <code>readline()</code>.</p>
<pre><code>import sys
input = sys.stdin.readline()
tokens = input.split()
a = int(tokens[0])
b = int(tokens[1])
print(a + b)
</code></pre>
<p>the usage:</p>
<pre><code>esekilvxen263 [7:05] [/home/elqstux] -&gt; python wy.py
3 4
7
esekilvxen263 [7:06] [/home/elqstux] -&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import sys
input = sys.stdin.read()
tokens = input.split()
a = int(tokens[0])
b = int(tokens[1])
print tokens
print(a + b)
</code></pre>
<p>If you put <code>print tokens</code> front <code>print(a+b)</code>.It works as you expect.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the best way to take in input. It is intended for Python 3.</p>
<pre><code>tokens = input()
tokens = tokens.split()
a = int(tokens[0])
b = int(tokens[1]) 
print(a + b)
</code></pre>
</div>
<span class="comment-copy">Have you tried pressing the <code>return</code> key?</span>
<span class="comment-copy">yes - I just get more blank lines, the program doesn't exit back to the shell</span>
<span class="comment-copy">BTW, you probably get <code>7D</code> (or, more likely, <code>7^D</code>) because the program outputs <code>7</code> and you typed Ctrl+D. Terminals handle codes of the form Ctrl+<code>Key</code> by signaling the reader program, usually a shell or a program invoked directly or indirectly be the shell, about that. Libraries such as <code>curses</code> can handle stuff so that nothing gets printed and the program can handle the key combo in some way. However, a simple program wont do that, and the terminal will thus echo <code>^Key</code> by default. For example, most shells, when detecting <code>^C</code> (a.k.a Ctrl+C), will send <code>SIGINT</code> to the foreground task.</span>
<span class="comment-copy">thank you KemyLand, that makes sense, I wasn't sure how to make the program show me my result and exit properly.</span>
<span class="comment-copy">@GregBailey: BTW, the output of the program does <i>not</i> contain <code>D</code>. That's just your terminal mixing up the program's output and other things. If you take your program's output and use it as input for another program, the "<code>D</code>" won't be there.</span>
<span class="comment-copy">this code is a sample from a class, and I have zero python experience. In the video, the instructor does some key command to have it just print the number and exit. Isn't Ctl+D EOF, and then shouldn't it just print 7 and not 7D?</span>
<span class="comment-copy">that definitely works, but I wonder how to send EOF in such a way that you get 7 and not 7D, thank you for your answer.</span>
<span class="comment-copy">@GregBailey: There's no way in "interactive" mode, so to call it (though it's not). See my comment in the question for details. However, you can use pipes to do that, just like this: <code>echo -e '3\n7' | python3 ./APlusB.py</code>.</span>
<span class="comment-copy">You should probably replace your customized shell prompt with <code>$</code>, for clarity's sake.</span>
<span class="comment-copy">I tried this, (had to change it to print(tokens) and then it prints out the tokens array and the product without the D when pressing ctl+D. Interesting. Why in this case does it print out with out the D?</span>
<span class="comment-copy">Which version of python?</span>
<span class="comment-copy">@KemyLand no, it can't convert <code>3 4</code> to an integer.</span>
<span class="comment-copy">@PeterWood: Sorry, didn't looked closely. Actually, this doesn't even work for any version of Python...</span>
<span class="comment-copy">@Justice with your edit it will now print <code>34</code> on Python 3.</span>
<span class="comment-copy">@Justice now it won't work on Python 2</span>
