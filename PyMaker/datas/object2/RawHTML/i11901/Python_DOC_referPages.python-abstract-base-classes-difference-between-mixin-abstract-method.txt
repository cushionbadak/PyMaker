<div class="post-text" itemprop="text">
<p>The following table shows varying abstract base classes that are used all over python. However, I am a bit confused exactly (in this context) </p>
<p><strong>what is the difference between the <code>Abstract Methods</code> column and the <code>Mixin Methods</code> column. Is one optionally implemented and the other not?</strong> </p>
<p>I've been mulling it over and every one of my "theories" doesn't seem to be right.</p>
<p><a href="https://docs.python.org/3/library/collections.abc.html" rel="noreferrer">reference</a></p>
<hr/>
<p><a href="https://i.stack.imgur.com/pUxnZ.png" rel="noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/pUxnZ.png"/></a> </p>
</div>
<div class="post-text" itemprop="text">
<p>Anything in the Abstract Methods column, you have to implement yourself. The ABC provides default implementations of the methods in the Mixin Methods column, implemented in terms of the methods you have to write.</p>
</div>
<div class="post-text" itemprop="text">
<p>The abstract methods are those you have to define when you inherit from this ABC.</p>
<p>The Mixin column lists the methods you can use afterwards, you get them for free by inheriting not from <code>object</code> but from this ABC. If you define <code>__getitem__</code>, you can automatically use <code>__iter__</code> afterwards for example.</p>
<p>Another benefit of inheriting from these classes is that anyone can see afterwards, what your class was meant to be, because it is <code>issubclass(your_class, any_ABC)</code> and any instance is <code>isinstance(your_object, any_ABC)</code>. But this is written in the tutorial after the table you have posted.</p>
</div>
<span class="comment-copy"><i>"Abstract Methods"</i>: you must provide. <i>"Mixin Methods"</i>: then you will get.</span>
<span class="comment-copy">Whats with the dots on <code>issubclass()</code> and <code>isinstance()</code></span>
<span class="comment-copy">sorry, this was not correct, these are only built-in methods with two arguments, thank you</span>
