<div class="post-text" itemprop="text">
<p>Here is the problem.</p>
<ul>
<li>define a function make_length_wordcount() that:</li>
<li>Takes input as the filename in the current directory (as a string)</li>
<li>Returns a dictionary, which each key is word length and its value is the number of words with that length.</li>
<li>For example, if the input file’s text is “Hello Python people Welcome to the world of Python”, then the dictionary should be: 
{2: 2, 3: 1, 5: 2, 6: 3, 7: 1}</li>
</ul>
<p>Here's what I have so far:</p>
<pre><code>def make_length_wordcount(x):
    filename=x+'.txt'
    infile=open(filename)
    wordlist=infile.read().split()
    counter1={}
    for word in wordlist:
        if word in counter1:
            counter1[len(word)]+=1
        else:
            counter1[len(word)]=1

    infile.close()
    print(counter1)
</code></pre>
<p>I'm missing a for loop somewhere to actually add tot he counter. I can't figure it out though. Any help would be appreciated!</p>
<p>Here's my output:</p>
<pre><code>{2: 1, 3: 1, 5: 1, 6: 1, 7: 1}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You've got a better answer from Padraic, but the only bug in your version is that you checked for the word in the dictionary, not its length.</p>
<pre><code>def make_length_wordcount(x):
    filename=x+'.txt'
    infile=open(filename)
    wordlist=infile.read().split()
    counter1={}
    for word in wordlist:
        if len(word) in counter1:
            counter1[len(word)]+=1
        else:
            counter1[len(word)]=1
    infile.close()
    print(counter1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is my working answer:</p>
<pre><code>def make_length_wordcount():
    test = " Hello World\n This is some cool python"
    wordlist=test.split()
    words = {}
    for word in wordlist:
        if str(len(word)) in words.keys():
            words[str(len(word))] = words[str(len(word))] + 1
        else:
            words[str(len(word))] = 1
    result = ""
    for key in sorted(words.iterkeys()):
        result = result + "%s: %s, " % (key, words[key])
    result = result[:len(result)-2]
    print result

make_length_wordcount()
</code></pre>
<p>Running:</p>
<pre><code>python test.py 
2: 1, 4: 3, 5: 2, 6: 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just count using the <em>len</em> with a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> dict :</p>
<pre><code>from collections import Counter

s = "Hello Python people Welcome to the world of Python"

spl = s.split()

len_c = Counter(map(len, spl))
</code></pre>
<p>In your own code follow the same logic, forget the words it is the lengths you want to count:</p>
<pre><code>with open("yourfile") as f:
    counter1 = {}
    for line in f:
        # map(len,["foo","foobar","barf"]) -&gt; 3, 6, 4
        for ln in map(len, line.split()):
            if ln in counter1:
                counter1[ln] += 1
            else:
                counter1[ln] = 1

print(counter1)
</code></pre>
<p>You are not counting the amount of times words appear, you are counting the amount of times words of certain lengths appear.</p>
</div>
<span class="comment-copy">Can we see the output of your program?</span>
<span class="comment-copy">Just added it for you.</span>
<span class="comment-copy">I'm using the exact same file as the example, my output should match. It's not counting every word.</span>
<span class="comment-copy">Change the if statement to <code>len(word) in counter1</code>.</span>
<span class="comment-copy">That did it. Thank you @Oisin</span>
<span class="comment-copy">Like I had mentioned, I'm not familiar with <code>collections.Counter</code>. I'm still taking bay steps through Python. This is my first coding course since high school. Still trying to get into the groove of it. My professor prefers our code to be written this way.</span>
<span class="comment-copy">I would add the open file code to your answer ( using a with statement) for completeness</span>
<span class="comment-copy">I appreciate the help @Padraic Cunningham! I'm still learning and just doing basics. I'm not sure how to use <code>collections.Counter</code>.</span>
<span class="comment-copy">@Tabzzy .. I've added the link to <code>Counter</code> object, check it and learn to use them.. <code>collections</code> module is great to learn to use...</span>
<span class="comment-copy">@Tabzzy, the second example basically uses your own logic for most of it, it just uses map to get the lengths from each word and splits on a line per line basis instead of reading the whole file at once and splitting into one large list,  a collections.Counter is the idiomatic way to do what you are trying to do, I understand this is a learning exercise though.</span>
<span class="comment-copy">@IronFist, cheers, just about to watch workaholics and then hit the hay ;)</span>
