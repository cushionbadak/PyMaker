<div class="post-text" itemprop="text">
<p>I want to set a random string as ID in django. This is what I have currently:</p>
<pre><code>def pkgen():
    from django.utils.crypto import get_random_string
    pk = get_random_string(length=10, allowed_chars=u'abcdefghijklmnopqrstuvwxyz0123456789')
    return pk

class Note(models.Model):
    noteID = models.CharField(max_length=10, primary_key=True, default=pkgen)
    note = models.TextField()
</code></pre>
<p>The problem is that before I didn't put <code>pkgen</code> and I just put ID, so when I go to my admin page for the note, it just says </p>
<pre><code>TypeError: id() takes exactly one argument (0 given)
</code></pre>
<p>Changing it to <code>pkgen</code> and redoing migrations just makes it crash and give the <code>TypeError</code> above. Does anyone know how I can fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to set a random string as a django object's id, you should use the <a href="https://docs.djangoproject.com/en/1.9/ref/models/fields/#uuidfield" rel="nofollow">UUIDField</a></p>
<p>from the documentation:</p>
<blockquote>
<p><em>A field for storing universally unique identifiers. Uses Pythonâ€™s UUID class. When used on PostgreSQL, this stores in a uuid datatype, otherwise in a char(32).</em></p>
</blockquote>
</div>
<span class="comment-copy">I think we are missing details ... really this should work ... your problem is coming from somewhere else ...also <code>import uuid;random_string = uuid.uuid4()</code> is a good way to generate a unique id string</span>
<span class="comment-copy">What do you mean by just put ID? Do note that in Python there is a built-in function <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><code>id()</code></a>.</span>
<span class="comment-copy">What i meant is that before I didn't have <code>default=pkgen</code> in <code>noteID</code>, I just put <code>default=id</code> and I think that messed up the database or django or something :S</span>
<span class="comment-copy">I will strongly second this ... however my suggestion in the comments also provides this</span>
