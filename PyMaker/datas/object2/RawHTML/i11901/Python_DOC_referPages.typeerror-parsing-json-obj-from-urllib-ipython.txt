<div class="post-text" itemprop="text">
<p>I am using an API to request data from a website. The data can be found <a href="http://maplight.org/services_open_api/map.bill_list_v1.json?apikey=79bf8eb2ded72751cc7cda5fc625a7a7&amp;jurisdiction=us&amp;session=110&amp;include_organizations=1&amp;has_organizations=1" rel="nofollow">here</a> and pasted into a <a href="http://jsonviewer.stack.hu/" rel="nofollow">JSON Viewer</a>. My code along with the error that it is returning are below. I am guessing that this is a quick fix, partially reflecting the fact that this is my first time using urllib.</p>
<pre><code>import pandas as pd
import urllib 
import json

api_key = '79bf8eb2ded72751cc7cda5fc625a7a7'
url = 'http://maplight.org/services_open_api/map.bill_list_v1.json?apikey=79bf8eb2ded72751cc7cda5fc625a7a7&amp;jurisdiction=us&amp;session=110&amp;include_organizations=1&amp;has_organizations=1'

json_obj = urllib.request.urlopen(url)

data = json.load(json_obj)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-21-85ab9af07320&gt; in &lt;module&gt;()
      8 json_obj = urllib.request.urlopen(url)
      9 
---&gt; 10 data = json.load(json_obj)

/home/jayaramdas/anaconda3/lib/python3.5/json/__init__.py in load(fp, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
    266         cls=cls, object_hook=object_hook,
    267         parse_float=parse_float, parse_int=parse_int,
--&gt; 268         parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
    269 
    270 

/home/jayaramdas/anaconda3/lib/python3.5/json/__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
    310     if not isinstance(s, str):
    311         raise TypeError('the JSON object must be str, not {!r}'.format(
--&gt; 312                             s.__class__.__name__))
    313     if s.startswith(u'\ufeff'):
    314         raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",

TypeError: the JSON object must be str, not 'bytes'
</code></pre>
<p>Any suggestions, comments, or further questions are appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>json.load</code> won't guess the encoding, so you typically need to <code>.read</code> the bytes from the object returned and then convert those bytes into a string by using <code>.decode</code> and the appropriate codec.  e.g.:</p>
<pre><code>data = json.loads(json_obj.read().decode('utf-8'))
</code></pre>
<p>There is an example of this in the <a href="https://docs.python.org/3/library/urllib.request.html#examples" rel="nofollow">official documentation</a>.</p>
<p>Specifically, it says:</p>
<blockquote>
<p>Note that urlopen returns a bytes object. This is because there is no way for urlopen to automatically determine the encoding of the byte stream it receives from the http server. In general, a program will decode the returned bytes object to string once it determines or guesses the appropriate encoding.</p>
</blockquote>
</div>
<span class="comment-copy">It looks like it wants <code>str</code>, not <code>bytes</code>.  Did you try <code>json.load(json_obj.decode('utf-8'))</code>?</span>
<span class="comment-copy">Oops... <code>json.loads(json_obj.read().decode('utf-8'))</code> maybe?</span>
<span class="comment-copy">Did you notice the <code>.read()</code> in my second suggestion?  IIRC, the <code>HTTPResponse</code> objects are file-like which means that to get the bytes data from them, you can call <code>.read()</code>.</span>
<span class="comment-copy">With requests it is a simple <code>requests.get(url).json()</code></span>
<span class="comment-copy">Also if you are trying to put this into a df you can do it all with pandas</span>
