<div class="post-text" itemprop="text">
<p>I have a function:</p>
<pre><code>def list_printer(name):
    frame = sys._getframe(1)
    print(name, '=', repr(eval(name, frame.f_globals, frame.f_locals)))
    return
</code></pre>
<p>and a list:</p>
<pre><code>my_list = [1, 2, 3, 4, 5]
</code></pre>
<p>When called it looks like this:</p>
<pre><code>list_printer('my_list')
</code></pre>
<p>and outputs:</p>
<pre><code>my_list = [1, 2, 3, 4, 5]
</code></pre>
<p>The thing is, as you can see I must use a string as the argument, is there any way I could type in raw text and then convert it to a string inside the function so that I don't have to use quotes?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, "raw text" isn't a term. I believe you're asking if you can pass a variable directly to a function that prints the variable's name and value.</p>
<p>This isn't possible because variable names are not directly tied to the values they represent - they're <a href="https://en.wikipedia.org/wiki/Reference_%28computer_science%29" rel="nofollow">pointers or references</a>. That means that when you call <code>f(my_list)</code> the <em>value</em> <code>my_list</code> references is passed to <code>f()</code>, but not the name "my_list".</p>
<p>If your intent is to print a variable name along with its value you need to do some sort of reflection (which your <code>list_printer</code> method is doing) in order to inspect the current state of your program and identify the variable named <code>"my_list"</code>.</p>
<p>Of course since you have to specify the variable name as a string anyways, you might as well just define a simpler function that associates a text label with a variable, like so:</p>
<pre><code>def print_value(name, value):
  print('%s = %s' % (name, value))
</code></pre>
<p>Which you could call like so:</p>
<pre><code>print_value('my_list', my_list)
</code></pre>
<p>But you could also put more context in the <code>name</code> field, e.g.:</p>
<pre><code>print_value('my_list, defined in my_module', my_list)
</code></pre>
<p>To further aid debugging. You might also like to look into the Python debugger <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow"><code>pdb</code></a>, since you're basically manually recreating a debugger.</p>
</div>
<span class="comment-copy">Er, if you want to pass the object itself, then what's the point of all that horrible frame/eval stuff? Why not just <code>print(my_list)</code>?</span>
<span class="comment-copy">Test the class of the object (<code>isinstance()</code>) passed.  If a string then you can do all that stuff.  If not a string then just print it.</span>
