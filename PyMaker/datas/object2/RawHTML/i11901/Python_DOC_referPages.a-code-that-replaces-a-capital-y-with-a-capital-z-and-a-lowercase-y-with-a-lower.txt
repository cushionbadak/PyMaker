<div class="post-text" itemprop="text">
<p>My task here is to write a function called fix_yz. This function takes a single argument which will be a string. My function returns this string with all of the ys and zs swapped, and all of the Ys and Zs swapped.
What i have done:</p>
<pre><code>replace = {"Y":"Z","y":"z","Z":"Y","z":"y"}
def fix_yz(Input):
   replaced=[]
   for yzYZ in Input:
     if yzYZ in replace:
        yzYZ = replace[replaced]
     replaced.append(yzYZ)
  return ''.join(replaced)
</code></pre>
<p>although i get a error and i dont understand which line to work on.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code has two errors: an indentation error on the return statement, and a wrong variable. You try to index the dictionary by a list.</p>
<p>Fixed version:</p>
<pre><code>replace = {"Y":"Z","y":"z","Z":"Y","z":"y"}
def fix_yz(Input):
  replaced=[]
  for yzYZ in Input:
    if yzYZ in replace:
      yzYZ = replace[yzYZ]
    replaced.append(yzYZ)
  return ''.join(replaced)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This does exactly what you need:</p>
<pre><code>translation_table = str.maketrans({"Y":"Z","y":"z","Z":"Y","z":"y"})

def fix_yz(input_):
    return input_.translate(translation_table)
</code></pre>
<p>You create a translation table, and then translate everything using it. It is VERY fast regarding execution time, and a very simple solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>As already pointed out you simply used the wrong variable in your code, you are trying to lookup using <code>[replaced]</code> which is a list not <code>yzYZ</code> which is each character in your string:</p>
<pre><code>replace = {"Y":"Z","y":"z","Z":"Y","z":"y"}
def fix_yz(Input):
   replaced = []
   for yzYZ in Input:
     if yzYZ in replace:
        yzYZ = replace[yzYZ] # replace[yzYZ]
     replaced.append(yzYZ)
   return ''.join(replaced)
</code></pre>
<p>You can also simplify your own logic using <code>dict.get</code> using each character as the default value if the char is not in your <em>replace</em> dict:</p>
<pre><code>def fix_yz(inp):
   return ''.join([replace.get(ch, ch) for ch in inp])
</code></pre>
<p>If you were to use <a href="https://docs.python.org/3/library/string.html#string.translate" rel="nofollow"><em>str.translate</em></a> you need to use the ord of each char for your dict mapping:</p>
<pre><code>replace = {ord("Y"): "Z", ord("y"): "z", ord("Z"): "Y", ord("z"): "y"}

def fix_yz(inp):
    return inp.translate(replace)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python3 you can do</p>
<pre><code>def fix_yz(s):
    return s.translate(str.maketrans("yYzY", "zZyY"))
</code></pre>
<p>or</p>
<pre><code>table = {ord("Y"):"Z",ord("y"):"z",ord("Z"):"Y",ord("z"):"y"}
def fix_yz(s):
    return s.translate(table)
</code></pre>
<p>in &lt; Python3  it would be</p>
<pre><code>from string import maketrans

table = maketrans("yYzY", "zZyY")

def fix_yz(s):
    return s.translate(table)
</code></pre>
</div>
<span class="comment-copy">What is the error?</span>
<span class="comment-copy">Your code has indentation errors. Whitespace matters in python, and try not to mix tabs and spaces.</span>
<span class="comment-copy">It says a Type error: unhashable type: "list" @wallyk</span>
<span class="comment-copy">The error is that <code>yzYZ = replace[replaced]</code> should be <code>yzYZ = replace[yzYZ]</code>.</span>
<span class="comment-copy">thank you very much. I understand my error.</span>
<span class="comment-copy">This does not work for me. The keys of the the table dictionary have to be ordinals, as mentioned in the <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer">documentation</a> and here: <a href="https://stackoverflow.com/questions/17020661/why-doesnt-str-translate-work-in-python-3" title="why doesnt str translate work in python 3">stackoverflow.com/questions/17020661/â€¦</a></span>
<span class="comment-copy">The OP wanted the code for Python 3. Maketrans+translate does exactly that. (I updated the question to add maketrans)</span>
