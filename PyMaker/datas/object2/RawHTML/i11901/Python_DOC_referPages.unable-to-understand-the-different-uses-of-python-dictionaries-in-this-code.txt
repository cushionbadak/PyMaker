<div class="post-text" itemprop="text">
<p>I'm new on a python project and learning the language. They're using python v2.7.</p>
<p>Dictionaries are being used in different ways in the code and I'm having trouble understanding what exactly is happening in the below code. Could a python guru demystify for me what's going on below. Check out my comments.</p>
<pre><code>key_mapping={} # is being passed into the below procedure as an argument

for key, result in cache_results.iteritems(): # loop over key value pair a normal dict
        client_key = self._client_key_from_result(result, oid_hoid_map, is_trade=is_trade)
        if not client_key:
            continue
    result_key = ( # I guess this is a tupple?
        int(result.osKey) if is_trade else result.portfolioID,
        self._force_int(result.collateralGroupID),
        self._force_int(result.bookingBU)
    )

    key_mapping[key]=client_key, result_key # What the? huh?
    results[client_key, result_key] = dict( # What in the world?
        col_amts=(col_amt_ph, col_amt),
        exps=(max_exp, max_exp_yr1, sum_exp) + padded_exposures,
        additional_columns=(col_alpha, col_beta, col_isFinancial, col_financial_factor,
                            col_pd, col_lgd, col_effective_maturity, col_k, col_ead)
    )
</code></pre>
<p>The assignment to <code>key_mapping</code> is confusing. But then the next line assignment of the dict to the <code>results</code> list is even more confusing. Not sure what's going on there either. </p>
</div>
<div class="post-text" itemprop="text">
<p>Going through the parts where you had questions (adding parenthesis around tuples might help a bit):</p>
<pre><code># This is assigning a tuple of (client_key, result_key) as the value of key in key_mapping
# Which actually becomes (client_key,
#                         (int(result.osKey) if is_trade else result.portfolioID,
#                          self._force_int(result.collateralGroupID),
#                          self._force_int(result.bookingBU)))
# Which is in turn
# (
#     self._client_key_from_result(result, oid_hoid_map, is_trade=is_trade),
#     (int(result.osKey) if is_trade else result.portfolioID,
#      self._force_int(result.collateralGroupID),
#      self._force_int(result.bookingBU)))
# )
# Dictionary keys can be tuples:
# d = {(1, 2): 3, (3, 4): 4}
# d[(1, 2)]
# &gt;&gt;&gt; 3
# d[(3, 4)]
# &gt;&gt;&gt; 4
# In your case it's a slightly more complex tuple mapped to some dictionary
# d = {(1, (2, 3)): {'a': 'b'},
#      (2, (3, 4)): {'a': 'b'}, # values can be the same
#      (1, (2, 1)): {'a': 'c'}}
# d[(1, (2, 3))]
# &gt;&gt;&gt; {'a': 'b'}
key_mapping[key] = (client_key, result_key) # What the? huh?
    # This is assigning a new dictionary to the value of a tuple (client_key, result_key)
    # Notice how the keys in results must be all tuples
    # The dict definition below could also be written as
    # {'col_amts': (col_amt_ph, col_amt), 'exps': (max_exp, max_exp_yr1, sum_exp) + padded_exposures, etc.}
    results[(client_key, result_key)] = dict( # What in the world?
        col_amts=(col_amt_ph, col_amt),
        exps=(max_exp, max_exp_yr1, sum_exp) + padded_exposures,
        additional_columns=(col_alpha, col_beta, col_isFinancial, col_financial_factor,
                            col_pd, col_lgd, col_effective_maturity, col_k, col_ead)
    )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<pre><code>result_key = ( # I guess this is a tupple?
    int(result.osKey) if is_trade else result.portfolioID,
    self._force_int(result.collateralGroupID),
    self._force_int(result.bookingBU)
)
</code></pre>
</blockquote>
<p>You are correct.  That is a tuple.  If you were to put it in one line, it would be more obvious, but since it is in parentheses, Python allows the programmer to split it into multiple lines.</p>
<blockquote>
<pre><code>key_mapping[key]=client_key, result_key # What the? huh?
</code></pre>
</blockquote>
<p><code>client_key, result_key</code> is still a tuple.  Just put <code>x = 4, 5; print x</code> into the Python shell and you will see.  The parentheses in tuple instantiations are not really necessary most of the time.  It just makes it more obvious what is happening if they are there.</p>
<blockquote>
<pre><code>results[client_key, result_key] = dict( # What in the world?
    col_amts=(col_amt_ph, col_amt),
    exps=(max_exp, max_exp_yr1, sum_exp) + padded_exposures,
    additional_columns=(col_alpha, col_beta, col_isFinancial, col_financial_factor,
                        col_pd, col_lgd, col_effective_maturity, col_k, col_ead)
)
</code></pre>
</blockquote>
<p>Take a look at the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=dict#dict" rel="nofollow">docs</a> for <code>dict</code>:</p>
<blockquote>
<p>If keyword arguments are given, the keyword arguments and their values are added to the dictionary created from the positional argument.</p>
</blockquote>
<p>Therefore, those lines are equivalent to:</p>
<pre><code>results[client_key, result_key] = {'col_amts': (col_amt_ph, col_amt), 'exps': ...}
</code></pre>
<p>Just as <code>client_key, result_key</code> are a tuple when <code>key_mapping[key]</code> is assigned to them, they are a tuple in this case also.  Your <code>results</code> dictionary could look like this:</p>
<pre><code>{('someclientkey', 'someresultkey'): {'col_amts': ...}, ('someotherclientkey', 'someotherresultkey'): {'col_amts': ...}
</code></pre>
</div>
<span class="comment-copy">Thank you. So is it safe to say that client_key is 'col_amts' and result_key is '(col_amt_ph, col_amt)' ?</span>
<span class="comment-copy">No @Doublespeed, <b><i>combined</i></b>, those two keys form a new key that you can use to lookup a dictionary containing <code>col_amts, exps, etc.</code>. See my edit for some examples</span>
<span class="comment-copy">thank you. In your explanation, what is 'col_amts'? is that the client_key or the results_key?</span>
<span class="comment-copy">Regarding this assignment: <code>results[client_key, result_key] = {'col_amts': (col_amt_ph, col_amt), 'exps': ...}</code> , is <code>col_amts</code> going to equal the client_key? and the value <code>(col_amt_ph, col_amt)</code> is going to take the place of the result_key?</span>
<span class="comment-copy">It's the same as I mentioned somewhere else: <code>client_key, result_key</code> is just a tuple without the parentheses.  It's the same as <code>results[(client_key, result_key)] = ...</code> <code>(client_key, result_key)</code> is the key and <code>{'col_amts':...}</code> is the value.  I have edited to make that more clear.</span>
