<div class="post-text" itemprop="text">
<p>First of all I would like to say that I am new to this website and any criticism is appreciated.</p>
<p>I am trying to modify a Python script to read an rfid key and then pipe the variable UID to a script (bash) that will authenticate it etc.  So far I have managed to isolate the UID and I can print it in python but I can't get it in the bash script. </p>
<pre><code> print "" + str(uid[0]) + "" + str(uid[1]) + ""+ str(uid[2]) + "" + str(uid[3]) 
</code></pre>
<p>Here is the string I use to print the uid, how can I pipe that to a bash script?  Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the subprocess module:</p>
<pre><code>import subprocess

uid = str(uid[0]) + str(uid[1]) + str(uid[2]) + str(uid[3])
result = subprocess.run(['check.sh', uid], stdout=subprocess.PIPE)
print(result.stdout)
</code></pre>
<p>If you use a python version prior to 3.5, instead of <code>run</code> you have to use <code>call</code>.</p>
<p>For this to work, the bash program must accept the uid as command line argument. If you need to pipe the string to the bash script, some more work is necessary:</p>
<pre><code>import subprocess
import io
import tempfile

uid = str(uid[0]) + str(uid[1]) + str(uid[2]) + str(uid[3])

f = tempfile.TemporaryFile(mode='w+t')
f.write(uid)
f.seek(0)

result = subprocess.run(['check.sh', uid], stdin=f,  stdout=subprocess.PIPE)

f.close()

print(result.stdout)
</code></pre>
<p>Read <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">https://docs.python.org/3/library/subprocess.html</a> for further insights. </p>
<p>The interface has changed quiet a bit, so be aware of your Python Version. 2.x works differently than 3.4 than 3.5. There are compatible ways though.</p>
</div>
<span class="comment-copy">Just try <code>python script.py | bashscript</code> or if you are calling python within the bash script: <code>python script.py | bash_command</code></span>
<span class="comment-copy">By using <a href="http://www.linfo.org/pipe.html" rel="nofollow noreferrer">pipe</a>? :D</span>
<span class="comment-copy">The python script is supposed to execute the bash script every time there is a new tag, will this be achieved by simply piping it ? EDIT: Forgot to mention that i think there is a way to use subprocess to do this.</span>
<span class="comment-copy">Make the bash script accept the key as an argument. Then you can use <code>subprocess.call(["bashscript", key])</code> to run the bash script. Explore <a href="https://docs.python.org/3.4/library/subprocess.html" rel="nofollow noreferrer">this</a> if you need more (e.g. reading what the script produces).</span>
<span class="comment-copy">I just tried it now and its not working, im using python 2 and used the subprocess.call , for testing purposes i have a bash script that does "echo $1 &gt;&gt; log.txt " after i trigger the code it just creates a empty line in log.txt so the bash script is not receiving the string. Here is what my command that executes the bash script looks like : subprocess.call(["./Rfid.sh", "uidu"], shell=True)      uidu is the variable with the uid ( in the line above this i did print uidu and it works)</span>
<span class="comment-copy">@UrosSimic: My bad... The quotes were wrong. <code>uidu</code> in the argument list, without quores.If it is a bash variable, it should be <code>"$uidu"</code> . Nevertheless there should be the string uodu in your file, not of empty lines. If it doesn't work, try with <code>shell=False</code></span>
