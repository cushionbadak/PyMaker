<div class="post-text" itemprop="text">
<pre><code>for each in column_names:
    print each + ':'
    for L in range(1,len(row_list)):
        each_column = columns[each][L]
        for i in each_column:
            if i == i.index(i)+1:
                count+=1
                mode=i
</code></pre>
<blockquote>
<p>The above code is my attempt to find the most common values in the column of a csv file. The code is incomplete and I've been stuck for hours to get this right.</p>
</blockquote>
<p>I'm very new to python, even the syntaxes are unfamiliar to me. All help will be definitely appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're only using one  <code>count</code> variable when you actually need to count each value separately. So while your overall approach was quite good, iterating through the dictionary you appear to have populated from the CSV file, you need to set up another dictionary to hold the counts for each value. Since you can't use any of the nice methods from <a href="http://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> or <a href="http://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>collections.defaultdict</code></a>, you could do something like</p>
<pre><code>counts = {}
for each in column_names:
    count = {}
    print each + ':'
    for row in columns[each]:
        count[row] = count.get(row,0) + 1
    counts[each] = count
</code></pre>
<p>After that, you'll have a dictionary <code>counts</code> with one entry per <code>column_name</code>, containing all the values in that column as keys and their count as values. Now you just need to sort those by values and output the <em>n</em> most common ones.</p>
</div>
<div class="post-text" itemprop="text">
<p>This code will do the trick</p>
<pre><code>  import csv
  from collections import Counter
  filename='test.csv'
  with open(filename, 'r') as f:
      column = (row[0] for row in csv.reader(f))
      print("Most frequent value: {0}".format(Counter(column).most_common()[0][0]))
</code></pre>
<p>First, it opens your file, then it creates a <a href="https://docs.python.org/2/reference/expressions.html?#generator-expressions" rel="nofollow">generator expression</a> to retrieve the first column in your csv. </p>
<p>The reason for not making it a list is that the csv can be very long, which could cause memory problems. A generator 'generates' the item when you use it.</p>
<p>Then it uses a collections.Counter object to count the most common values in the list and takes the value of the first element. You can try the code step by step to see the output of every step.</p>
</div>
<span class="comment-copy">Is this an assignment where you're not allowed to use <code>collections.Counter.most_common()</code> or do you want an actual solution for your problem?</span>
<span class="comment-copy">It looks like your code is incomplete (e.g. where is count defined?). Can you post a <a href="http://stackoverflow.com/help/mcve">MCVE</a> with input, output and expected output? If you get an error, please post the complete stacktrace.</span>
<span class="comment-copy">@TimPietzcker yes, this is an assignment that should develop my own pure python implementation of the data-processing. And I do like to find a solution to my problem.</span>
<span class="comment-copy">Please show the beginning of your datafile.  I am guessing the top line holds headers, and each line below is data.  How is the data separated? by a comma, tab, something else?</span>
