<div class="post-text" itemprop="text">
<p>I'm writing a program, which, inter alia, works with temporary file, created using <code>tempfile</code> library.</p>
<p>The temporary file creates and fills in function:</p>
<pre><code>def func():
    mod_script = tempfile.NamedTemporaryFile(dir='special')
    dest = open(mod_script, 'w')
    #  filling dest
    return mod_script
</code></pre>
<p>(I use <code>open()</code> and not <code>with open()</code> because I execute the temporary file after calling <code>func()</code>)</p>
<p>After some operations with <code>mod_script</code> outside <code>func()</code>, I call <code>mod_script.close()</code>. And all works fine.</p>
<p><strong>But I have one problem.</strong> If my program fails (or if I interrupt it), the temporary file doesn't remove.</p>
<p>How do I fix it ?</p>
<p>I really don't want to write <code>try...except...finally</code> clauses because I'll have to write it so many times (there are many points, where my program can fail).</p>
</div>
<div class="post-text" itemprop="text">
<p>First, use a <code>with</code> statement, and <a href="https://docs.python.org/3/library/tempfile.html?highlight=namedtemporary#tempfile.NamedTemporaryFile" rel="nofollow">pass <code>delete=False</code> to the constructor</a>.</p>
<p>Then you need to put the necessary error handling in your program.  Catch exceptions (see <a href="https://docs.python.org/3/tutorial/errors.html#defining-clean-up-actions" rel="nofollow">try..finally</a>) and clean up during program exit whether it is successful or crashes.</p>
<p>Alternatively, keep the file open while executing it to prevent the automatic deletion-on-close from deleting it before you have executed it.  This may have issues on Windows where it tends to have conflicts using files that are open.</p>
</div>
<span class="comment-copy">Why do you assume you'd have to write try/except/finally everywhere if the goal is just to delete the file and then re-raise the exception? Why can't you just let the exception bubble up and wrap the outmost level of your code with the try? Or even better, write a context manager that removes the file on exit.</span>
<span class="comment-copy">"I use open() and not with open() because I execute the temporary file after calling func()" - huh? I don't understand your reasoning. elaborate.</span>
<span class="comment-copy">After returning <code>mod_script</code> I use it in many places. And my program can fail before first using of <code>mod_script</code> or between <code>n</code>st and <code>n + 1</code>st... If I add <code>try...except</code> if <code>func()</code> it'll not save the situation.</span>
<span class="comment-copy">If you use "try ... open file ... call function that does all the processing and may fail  ... [except] ... finally ... delete the file", you will not have to write it "everywhere", but only in one place.</span>
