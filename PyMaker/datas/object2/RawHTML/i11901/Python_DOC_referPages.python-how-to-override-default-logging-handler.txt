<div class="post-text" itemprop="text">
<p>Suppose I have got a logger like:</p>
<pre><code>logger = logging.getLogger(__name__)
</code></pre>
<p>Then I add a file handler to it. I want all logs go to the file and all info and above log to be printed on screen.</p>
<p>I know I should set the level of the file handler to logging.INFO.</p>
<p>However, if I use <code>logger.setLevel(logging.INFO)</code>, then the debug logs won't go to the file. If I use <code>logger.setLevel(logging.DEBUG)</code>, then all debug logs will be printed on screen.</p>
<p>How to solve this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use <code>logger.setLevel(logging.DEBUG)</code> on the logger and <code>handler.setLevel(logging.INFO)</code> on the screen handler. That way the logger gets all messages, the file handler gets all messages but the screen or stream handler gets only <code>INFO</code> or higher.</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/35135401/unexpected-python-logger-output-when-using-several-handlers-with-different-log-l/35136229#35136229" title="unexpected python logger output when using several handlers with different log l">stackoverflow.com/questions/35135401/â€¦</a></span>
<span class="comment-copy">How to get the screen handler, looks like it is going to be configured through logging.basicConfig()</span>
<span class="comment-copy">@dspjm Don't use <code>logging.basicConfig()</code> then and set your own <code>StreamHandler()</code> or set the level to <code>logging.INFO</code> like this: <code>logging.basicConfig(level=logging.INFO)</code>.</span>
<span class="comment-copy">You can retrieve a list of handlers associated with your logger using <code>logger.handlers</code></span>
<span class="comment-copy">@Brandon yeah, the main concern is the fact that logging is a thread safe library and it can mess up the locks. Other problems may include stream flushing and buffering. It's better that he won't initialize a root logger at all or at least initialize it in the proper level instead of initializing and then modifying.</span>
<span class="comment-copy">@dspjm You may create a new logger with your own <code>StreamHandler()</code> and <code>FileHandler()</code> and set <a href="https://docs.python.org/3/library/logging.html#logging.Logger.propagate" rel="nofollow noreferrer"><code>logger.propagate = False</code></a> if you can't change <code>basicConfig</code>.</span>
