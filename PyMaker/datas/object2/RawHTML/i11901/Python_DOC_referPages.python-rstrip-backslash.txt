<div class="post-text" itemprop="text">
<p>I'm trying to remove the string "IT\ICCU\LO1\0834426" from a massive 3 million line file. However, when I run this script it doesn't remove the string.<br/>
When I'm editing the script in Pycharm, the string appears green except for the characters "\0", which appear black. Is this a problem because the backslash is an escape character? Anyone have any ideas how to solve this?</p>
<pre><code>with open(f_in, 'r') as fin:
    with open(f_out, 'w') as fout:
        for line in fin:
            if line.rstrip("IT\ICCU\LO1\0834426"):
                fout.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is the <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>replace()</code></a> function and use raw strings like so:            </p>
<pre><code>with open(f_in, 'r') as fin:
    with open(f_out, 'w') as fout:
        for line in fin:
            line = line.replace(r"IT\ICCU\LO1\0834426", "")
            fout.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>string.rstrip() is used to strip whitespace characters from the right end of a string.</p>
<p>Look at string.replace() instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't think that using a raw string is what the OP requires:</p>
<pre><code>line =  "JJJJJJJJJJ\IT\ICCU\LO1\0834426\ZZZZZZZZZ"
print line.replace(r"IT\ICCU\LO1\0834426",'')
JJJJJJJJJJ\IT\ICCU\LO1834426\ZZZZZZZZZ

print line.replace("IT\ICCU\LO1\0834426",'')
JJJJJJJJJJ\\ZZZZZZZZZ
</code></pre>
<p>using <code>line.replace()</code> with a string will achieve the desired result.<br/>
Or at least that is my interpretation.</p>
</div>
<span class="comment-copy">You want a raw string literal. But read the documentation for <code>rstrip</code> -- even with a correctly escaped string, it does not do what you think it does (it works with sets of characters, not suffixes).</span>
<span class="comment-copy">What you want to do is use Re module and use re.sub and you can substitute that string for "" and you should be fine. Read through the re module it is plenty helpful.</span>
<span class="comment-copy">lol good answer :) ... (much better than my now deleted one)</span>
