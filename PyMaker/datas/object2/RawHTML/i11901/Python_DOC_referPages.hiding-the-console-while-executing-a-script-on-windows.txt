<div class="post-text" itemprop="text">
<p>How can I make my console hide while executing a script? I want to make a separate function to do it (maybe by applying some methods from <code>os</code>/<code>sys</code>, I don't know), so I do not need some solutions like changing script extension from <code>.py</code> to <code>.pyw</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The way I've done it on Windows 7 is by making a shortcut (or link) that runs my script with the <code>pythonw.exe</code> interpreter, which has no console, instead of the default <code>python.exe</code>.</p>
<p>Just follow these 3 steps:</p>
<ol>
<li>First create a normal shortcut to you script. One way to do this is to drag the icon for the script file shown in an Explorer window to where you want the shortcut to be (like the desktop) and hold down the <kbd>Alt</kbd> key when releasing the mouse button.</li>
<li>Right-click on the just created shortcut and select <code>Properties</code> from the the menu that pops-up.</li>
<li><p>A <strong>Properties</strong> dialog for the shortcut will appear. In it insert <code>C:\python27\pythonw.exe</code> and a space before the path to the your script file. <em>If the path to your script has any spaces in it, it must now be enclosed in double quotes.</em> If you're using another version of Python, you'll also need to change the <code>Python27</code> accordingly.</p>
<p>i.e. A target of <code>D:\path with spaces in it to\myscript.py</code> would need to be changed</p>
<p>to <code>C:\Python27\pythonw.exe "D:\path with spaces in it to\myscript.py"</code></p>
<p>You can also change the shortcut's icon here if you wish.</p></li>
</ol>
<p>Here's an example:</p>
<p><img alt="screenshot of filled in shortcut properties dialog" src="https://i.stack.imgur.com/1XvTA.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>You can run a python program in the background by adding a &amp; at the end:</p>
<pre><code>python myfile.py &amp;
</code></pre>
<p>If you want to be able to close out your console and have the process run in the background, you might want to check out nohup:</p>
<p><a href="http://linux.die.net/man/1/nohup" rel="nofollow">http://linux.die.net/man/1/nohup</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to hide the window during execution (and your script is for Windows only) then <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow noreferrer">ctypes</a> may be a possibility for you.</p>
<p>Using <a href="https://stackoverflow.com/questions/37206306/hiding-the-console-window-after-reading-input">this</a> answer you could take input and then hide it:</p>
<pre><code>import ctypes

a = input('Input value here:')


kernel32 = ctypes.WinDLL('kernel32')

user32 = ctypes.WinDLL('user32')

SW_HIDE = 0

hWnd = kernel32.GetConsoleWindow()
user32.ShowWindow(hWnd, SW_HIDE)

# Do stuff here
</code></pre>
<p>This is running off C <code>ShowWindow()</code>.  You can get more (indepth) info <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633548(v=vs.85).aspx" rel="nofollow noreferrer">from the Windows's own documentation</a>. </p>
</div>
<span class="comment-copy">What OS are you using?</span>
<span class="comment-copy">@martineau, Windows 8, as a consequence adivce like nohup or &amp; don`t make sense</span>
<span class="comment-copy">I hope you can't do that. What if someone runs the script in a terminal emulator with other tabs open? Would the other tabs also be hidden?</span>
<span class="comment-copy">You can hide the console using ctypes, with <code>kernel32.GetConsoleWindow</code> and <code>user32.ShowWindow</code>, but you should only hide a new console. If <code>kernel32.GetConsoleProcessList</code> has more than py.exe and python.exe, don't hide the window unless you want to make someone hate you.</span>
<span class="comment-copy">For anyone getting here through a web search, minimizing a window is not the same thing as hiding it. So if you're actually looking to hide the console, see my comment on the question itself. I don't have anything against the advice in this answer, but I do think it's better suited to superuser.com. Clearly the OP is satisfied with minimizing the console window, but this answer would be better (and more on topic) if it showed how to use <code>win32com</code> to create the shell shortcut.</span>
<span class="comment-copy">@eryksun: Actually creating a shortcut that runs something minimized isn't really the secret sauce (or even necessary). The real trick is making one to run <code>pythonw.exe</code> — which has no console — on a specific Python script. So in that sense, my answer is misleading. Using <code>win32com</code> to create a shortcut wouldn't work because the script doing that would itself have a console...so it appears to be a proverbial chicken-and-egg problem. It's unclear to me how something like this could be done within the script itself because by then, it's too late.</span>
<span class="comment-copy">I didn't notice that you used pythonw.exe. I had thought the OP didn't want to go that route because using .pyw was ruled out, which (assuming the system is configured correctly) is effectively the same. But instead of explicitly passing the command line, using .pyw has <code>ShellExecuteEx</code> look up the .pyw association and run the script with pythonw.exe (or pyw.exe).</span>
<span class="comment-copy">You can hide the console window, but it will flash on the screen briefly at first since Windows creates the console with a visible window. Unfortunately nothing in the user interface allows controlling the creation flags such as <code>CREATE_NO_WINDOW</code> or <code>DETACHED_PROCESS</code>. All you can do is start it minimized or use a non-console executable such as pythonw.exe.</span>
<span class="comment-copy">@eryksun: You're just reinforcing what I meant about it being a chicken-and-egg problem. I have a different idea, which I'll explore and may post another answer depending on what I discover.</span>
