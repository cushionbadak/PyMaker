<div class="post-text" itemprop="text">
<p>i am very new to Python, and i am trying to Scrape data from a website, but i need  all pages, so far i have : </p>
<pre><code>import requests
from bs4 import BeautifulSoup


r = requests.get ("http://www.somesite.com/records/08-jan-2016/")
r.content
soup = BeautifulSoup(r.content, "html.parser")
full_info = soup.find_all("div", {"class": "col-sm-10"})

for item in full_info : print (item.text)
</code></pre>
<p>This code prints data from current page, how can i manage to take data from all pages , and exported to a file. </p>
<p>Best regards</p>
</div>
<div class="post-text" itemprop="text">
<p>Personally, I would use the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow"><code>datetime</code></a> library for date arithmetic - it's what it's designed to do.
However, since <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow"><code>datetime</code></a>'s <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="nofollow"><code>strftime</code></a> is locale-based, it's safer to do the construction of the string manually, unless you intend on running this on a known locale that matches the website's.</p>
<pre><code>import datetime
MONTH_NAMES = {1: 'jan', 2: 'feb', 3: 'mar'}  # and so on
ONE_DAY = datetime.timedelta(1)

def date_strings(first_date, last_date):
    current_date = first_date
    while current_date &lt;= last_date:
        yield '{0.day:02}-{1}-{0.year:04}'.format(
            current_date, MONTH_NAMES[current_date.month])
        # If running on a US locale, you can just use:
        # yield current_date.strftime('%d-%b-%Y').lower()
        current_date += ONE_DAY

first_date = datetime.date(2016, 1, 8)
last_date = datetime.date(2016, 3, 29)

for date_string in date_strings(first_date, last_date):
    print(date_string)
    # Do whatever scraping you need using date_string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So to add to the question raised in the comments, how to iterate through multiple dates.  I'm not the most proficient programmer, but I would create a <strong>dictionary</strong> with the <strong>key:value</strong> =&gt; <strong>month:number of days</strong> in the month.  Then you could create a nested loop to create strings to append to the url.</p>
<pre><code>dates = {"jan":31, "feb":29, "mar":31}
for month in dates:
  for day in range(dates[month]):
    url = "https://www.somepage.com/{0}-{1}-2016".format(str(day+1), month)
    req = requests.get(url)
    ...
</code></pre>
</div>
<span class="comment-copy">Define "all pages". Are they links that can be accessed recursively? (i.e. could you get them with <code>wget -r</code>) Are they different URLs? Do they link to each other? How would you normally get the links? You seem to have BeautifulSoup pretty down. You can just use <code>open</code> to write to a file.</span>
<span class="comment-copy">Thanks for reply, the url's are formatted as dates  :  "<a href="http://www.somesite.com/records/08-jan-2016/" rel="nofollow noreferrer">somesite.com/records/08-jan-2016</a>" "<a href="http://www.somesite.com/records/09-jan-2016/" rel="nofollow noreferrer">somesite.com/records/09-jan-2016</a>" "<a href="http://www.somesite.com/records/10-jan-2016/" rel="nofollow noreferrer">somesite.com/records/10-jan-2016</a>"  etc, until today, at the end of each page there is a button for previews and next date.</span>
<span class="comment-copy">How do you know which dates are valid? Are you just going to assume all dates, or do you have a list?</span>
<span class="comment-copy">So it seems your question is more "how do I iterate through these dates in this format"?</span>
<span class="comment-copy">I was making an assertion. If it's correct, then your problem doesn't actually have anything to do with website scraping, it's about date formatting. This is for future reference on how to ask a good question. You want to ask the problem you actually have, not what the answer to that problem solves. It's not at all obvious from the question given what the <i>real</i> question is - which is date formatting.</span>
