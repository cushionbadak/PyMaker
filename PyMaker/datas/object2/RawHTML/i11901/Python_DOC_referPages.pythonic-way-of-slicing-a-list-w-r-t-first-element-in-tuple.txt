<div class="post-text" itemprop="text">
<p>I have a sorted list of tuples of the form</p>
<pre><code>x = 
[(0,1), (0,2), (0,3), ... 
 (1,1), (1,3), (1,4), ...
 ...
 (n,0), (n,4), ...
]
</code></pre>
<p>I want to slice the list such that all numbers of (x,y) where x is a certain value in the new list and the order is kept. Now, this would obviously work:</p>
<pre><code>y = [(a,b) for (a,b) in x if a == n]
</code></pre>
<p>But it is really slow. It would be faster to find the first and last index that satisfies this condition with binary search. <code>index</code> gives you the first index for a value, and <code>index</code> of the reversed list would give the last index. How would apply it though without doing <code>[a for (a,b) in x]</code> and copying the whole list, in a pythonic way?</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested in the comments by @Liongold, you can use bisect. Assuming you want all tuples <code>t</code> with <code>t[0] == 1</code>:</p>
<pre><code>from bisect import bisect_left

x = [(0, 1), (0, 2), (1, 1), (1, 2), (2, 1), (2, 2)]

start = bisect_left(x, (1, None))  # index of the very first (1, i) 
end = bisect_left(x, (2, None))  # index after the very last (1, i)

y = x[start:end]

# y: [(1, 1), (1, 2)]
</code></pre>
<p>You can find details in the <a href="https://docs.python.org/2/library/bisect.html#bisect.bisect_left" rel="nofollow">bisect docs</a>.</p>
</div>
<span class="comment-copy">As it cannot assume an <i>ordered</i> list, <code>index</code> probably doesn't do a binary search, but a list traversal, so I doubt that'd be much faster.</span>
<span class="comment-copy">Consider using <a href="https://docs.python.org/3/library/bisect.html#searching-sorted-lists" rel="nofollow noreferrer">bisect</a>, the preferred way to handle sorted lists.</span>
<span class="comment-copy">As for accessing the subrange (slice) within your list once you know begin and end position: See <a href="http://stackoverflow.com/questions/509211/explain-pythons-slice-notation" title="explain pythons slice notation">stackoverflow.com/questions/509211/â€¦</a> or even just <a href="https://docs.python.org/2/tutorial/introduction.html#strings" rel="nofollow noreferrer">docs.python.org/2/tutorial/introduction.html#strings</a></span>
<span class="comment-copy">What if I can't assume that 2 is in the list?</span>
<span class="comment-copy"><code>bisect_left(x, (2, None)</code> will return the insertion point of the provided element. Since <code>None &lt; i</code> for any integer <code>i</code>, this should always return the exact index after the last <code>(1, i)</code>. This can be <code>len(x)</code> if necessary</span>
