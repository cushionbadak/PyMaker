<div class="post-text" itemprop="text">
<p>I've made this code:</p>
<pre><code>if fc.get('field_photo_1'):
    pt.photo1 = fc.get('field_photo_1')
if fc.get('field_photo_2'):
    pt.photo2 = fc.get('field_photo_2')
if fc.get('field_photo_3'):
    pt.photo3 = fc.get('field_photo_3')
</code></pre>
<p>I'd like to optimize it to some kind of code like this:</p>
<pre><code>update_field(photo1, 'field_photo_1'):
update_field(photo2, 'field_photo_2'):
update_field(photo3, 'field_photo_3'):
</code></pre>
<p>I just don't know how make kinddof a <code>setter</code> with index in python. How would you implement the <code>update_field()</code> function?</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest making an array of photos and then iterate strings with a for loop instead of trying to create such setter. It's easier to understand and doesn't do uncommon things with your class that other programmers might not expect.</p>
<pre><code>class Pt:
    def __init__(self):
        self.photos = [None for i in range(3)]

pt = Pt()
for i in range(1,4)
    fieldString = 'field_photo_{0}'.format(i)
    if fc.get(fieldString):
        pt.photos[i] = fc.get(fieldString)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could take a look at the <a href="https://docs.python.org/3/library/functions.html?highlight=setattr#setattr" rel="nofollow">setattr()</a> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <code>setattr</code>, which accepts string attribute names.</p>
<p>Try this:</p>
<pre><code>for x in range(1, 4):
    attrname = "photo_".format(x)
    setattr(pt, attrname, fc["field_".format(attrname)])
</code></pre>
<p>You should probably refactor your code though to use lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are wanting to set the pt attribute based on the passed parameter, setattr is the way to go.</p>
<pre><code>def update_field(attribute, value):
    setattr(pt, attribute, value)
</code></pre>
<p>The other answers here assume that you are iterating through a preset number of photo attributes. If you are wanting a single set, then the above should work. If looking to set them all, Ben's or Ritave's answer might be more suitable.</p>
<p>Depending on the scope of the "pt" variable. You might have to do something like <code>setattr(self.pt, attribute, value)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <code>dict</code>:</p>
<pre><code>photos = dict()
photos['photo1'] = fc.get('field_photo_1')
# etc...
</code></pre>
<p>Or more concisely:</p>
<pre><code>photos = {photo: fc.get(photo) for photo in ('field_photo_1', 'field_photo_2', 'field_photo_3')}
</code></pre>
</div>
<span class="comment-copy">See getattr and setattr methods.</span>
