<div class="post-text" itemprop="text">
<p>I have a list of data that is in the structure of name and then score like this:</p>
<pre><code>['Danny', '8', 'John', '5', 'Sandra', 10]
</code></pre>
<p>What I require to do in the simplest way possible is sort the data by lowest to highest score for example like this:</p>
<pre><code>['John', '5', 'Danny', '8', 'Sandra', 10]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should create pairings which will make your life a lot easier:</p>
<pre><code>l = ['Danny', '8', 'John', '5', 'Sandra', '10']


it = iter(l)


srt = sorted(zip(it, it), key=lambda x: int(x[1]))
</code></pre>
<p>Which will give you:</p>
<pre><code>[('John', '5'), ('Danny', '8'), ('Sandra', '10')]
</code></pre>
<p><code>it = iter(l)</code> creates an iterator, then <code>zip(it, it)</code> basically  calls <code>(next(it), next(it))</code> each iteration so you create pairs of tuples in the format <code>(user, score)</code>, then we sort by the  second element of each tuple which is the score, casting to int. </p>
<p>You may be as well to cast to int and then sortif you plan on using the data, you could also create a flat list from the sorted data but I think that would be a bad idea.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best data structure for your problem is <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">Dictionary</a>.</p>
<p>In your situatiton you need to map between names and scores.</p>
<pre><code>dict  = {'Danny':'8', 'John':'5', 'Sandra':'10'}

sorted_dict = ((k, dict[k]) for k in sorted(dict, key=dict.get, reverse=False))

for k, v in genexp:
...     k, v

('John', '5')
('Danny', '8')
('Sandra', 10)
</code></pre>
</div>
<span class="comment-copy">I'd highly recommend structuring your data so names and scores are grouped together in tuples, like <code>[('Danny', 8), ('John', 5), ('Sandra', 10)]</code>. Also ensure your scores are numbers, not strings, for accurate results.</span>
<span class="comment-copy">Create mappings between user and score</span>
