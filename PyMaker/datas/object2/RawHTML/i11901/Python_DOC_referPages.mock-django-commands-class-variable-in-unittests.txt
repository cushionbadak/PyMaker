<div class="post-text" itemprop="text">
<p>I am not able to successfully mock <code>pasue_time</code> and <code>max_tries</code> in the command. Suggestions please.</p>
<h2>Command</h2>
<pre><code>class Command(BaseCommand):
    """Update seat expire dates."""

    help = 'Fooo'
    pause_time = 5
    max_tries = 5

    def handle(self, *args, **options):
        if self.max_tries &lt; tries:
            logger.error('error')
</code></pre>
<h2>Test</h2>
<pre><code>@mock.patch('foo.bar.path.to.file.Command.max_tries')
def test_update_course_with_exception(self, param):
    param = 1

    expected = [
        # some information which is logged by management command
    ]
    with LogCapture(LOGGER_NAME) as lc:
        call_command('foo_command_name_bar')
        lc.check(*expected)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To mock properties, you should use <code>PropertyMock</code>:</p>
<pre><code>class MyTestCase(TestCase):
    @mock.patch('app.management.commands.cmd.Command.max_tries', new_callable=mock.PropertyMock)
    def test_update_course_with_exception(self, max_tries_mock):
        max_tries_mock.return_value = 1
</code></pre>
<p><a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.PropertyMock" rel="nofollow">https://docs.python.org/3/library/unittest.mock.html#unittest.mock.PropertyMock</a></p>
</div>
<span class="comment-copy">Thanks, I worked. :)</span>
