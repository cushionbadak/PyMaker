<div class="post-text" itemprop="text">
<p>I have 2 lists: <code>a = ['5', '2', '3', '4']</code>, and <code>b = ['1', '6', '7', '5']</code>. Using Python 2, how can I compare each list element in <code>a</code> to each element in <code>b</code>? (i.e. is <code>a[0] == b[0]</code>, is <code>a[0] == b[1]</code>, etc).</p>
<p>I know that I could just write out numerous <code>if</code> statements, but I hope that there is a more elegant way to do this.</p>
<p>After checking each list element, I want to know how many times a shared value was found (in my example lists above, it would be one time, <code>'5'</code>).</p>
<p>EDIT: This is not a duplicate, b/c i am comparing two different lists to each other, while the possible duplicate dealt with only 1 list.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow"><code>count()</code></a> method of <code>list</code> may help:</p>
<pre><code>&gt;&gt;&gt; a = ['5', '2', '3', '4']
&gt;&gt;&gt; b = ['1', '6', '7', '5']
&gt;&gt;&gt; for item in a:
...     print item, b.count(item)
... 
5 1
2 0
3 0
4 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably faster for big inputs than <a href="https://stackoverflow.com/a/36115748/3821804">eugene y's</a>, as it only needs to iterate over <code>b</code> once,<br/>
instead of <code>len(a)</code> times:</p>
<pre><code>from collections import Counter
counts = Counter(b)

for i in a:
    print(i, counts[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are only concerned with shared values, and not with their positions or counts, convert them to <code>set</code> and use <a href="https://docs.python.org/3/library/stdtypes.html#set.intersection" rel="nofollow"><code>intersection</code></a>:</p>
<pre><code>&gt;&gt;&gt; a = ['5','2','3','4']
&gt;&gt;&gt; b = ['1','6','7','5']
&gt;&gt;&gt; set(a).intersection(b)
{'5'}
</code></pre>
<p>If you want to retain how often the elements appear in the intersection, you can also do an intersection of <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> using <code>&amp;</code></p>
<pre><code>&gt;&gt;&gt; a = ['5','2','3','4','1','1','6','5']
&gt;&gt;&gt; b = ['1','6','7','5','5']
&gt;&gt;&gt; collections.Counter(a) &amp; collections.Counter(b)
Counter({'5': 2, '1': 1, '6': 1})
</code></pre>
<p>Note: This is different from the solution by @GingerPlusPlus in that it is symmetric, i.e. if <code>5</code> is present once in list <code>a</code> and twice in list <code>b</code>, then the shared count will be <code>1</code>, not <code>2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def cmp(*lists):
    lists_len_min = list(map(lambda x: len(x), lists))
    if min(lists_len_min) != max(lists_len_min):
        raise Exception("Lists must have equal length")
    iterator = iter(lists)
    last = next(iterator)
    for element in iterator:
        for i, each in enumerate(element):
            #print(i, last[i], each)
            if last[i] != each:
                return False
    else:
        return True
</code></pre>
<p>This function can compare as many lists you want with equal length. Just call cmp(list1, list2, list3)</p>
</div>
<div class="post-text" itemprop="text">
<p>This code will produce list of elements which is consist in both <code>a</code> and <code>b</code> list</p>
<pre><code>a = [1,2,3,4]
b = [2,3,1,7]
c = [e for e in a if e in b]
</code></pre>
<p>It might be complex by memory in case if you use big arrays but if you plan to use this data than why not</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/2600191/how-can-i-count-the-occurrences-of-a-list-item-in-python">How can I count the occurrences of a list item in Python?</a></span>
<span class="comment-copy">@GingerPlusPlus not a duplicate, added explanation</span>
<span class="comment-copy">To those who downvoted this question, what can I do in the future to improve my questions?</span>
<span class="comment-copy">It's <code>O(len(a) * len(b))</code>.</span>
<span class="comment-copy">"I want to know how many times a shared value was found" - sounds like OP want's a count. Intersection wouldn't work if there were two instances of the number <code>5</code> in list <code>b</code></span>
<span class="comment-copy">@pyInTheSky That is correct, i want to know if 5 is duplicated twice</span>
<span class="comment-copy">@pyInTheSky Yes, that's one interpretation. But it could also mean the count of distinct shared values. That's why I added the introductory note.</span>
<span class="comment-copy">that's fine, I didn't downvote you at all. Your updated solution is interesting, I had no idea the <b>and</b> operator for Counter had some wonky magic. Pasting the help of the fn here if anyone else is curious as to how your solution works: __and__(self, other) method of collections.Counter instance     Intersection is the minimum of corresponding counts.          &gt;&gt;&gt; Counter('abbb') &amp; Counter('bcc')     Counter({'b': 1})</span>
