<div class="post-text" itemprop="text">
<p>I'm currently reading the code of virt-manager/virt-clone, but did not do much python before.</p>
<p>Here is the important parts of the code:</p>
<hr/>
<p><a href="https://github.com/virt-manager/virt-manager/blob/master/virt-clone#L169" rel="nofollow">https://github.com/virt-manager/virt-manager/blob/master/virt-clone#L169</a></p>
<pre><code>conn = cli.getConnection(options.connect)
design = Cloner(conn)
</code></pre>
<p><a href="https://github.com/virt-manager/virt-manager/blob/master/virtinst/cli.py#L263" rel="nofollow">https://github.com/virt-manager/virt-manager/blob/master/virtinst/cli.py#L263</a></p>
<pre><code>from .connection import VirtualConnection
conn = VirtualConnection(uri)
</code></pre>
<p><a href="https://github.com/virt-manager/virt-manager/blob/master/virtinst/connection.py#L35" rel="nofollow">https://github.com/virt-manager/virt-manager/blob/master/virtinst/connection.py#L35</a></p>
<pre><code>class VirtualConnection(object):
</code></pre>
<p><a href="https://github.com/virt-manager/virt-manager/blob/master/virtinst/cloner.py#L591" rel="nofollow">https://github.com/virt-manager/virt-manager/blob/master/virtinst/cloner.py#L591</a></p>
<pre><code>return self.conn.lookupByName(name)
</code></pre>
<hr/>
<p>The last line looks like there is a method <code>lookupByName</code> called for an object of class <code>VirtualConnection</code>. However I cannot find such a method defined in that class and it does not have a parent class to get such a method from, either.</p>
<p>Can you help me spot the place where <code>lookupByName</code> is defined?</p>
<p>What might be a good way to find such an answer myself? (debugger, etc?)</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>lookupByName</code> method of the <code>virConnect</code> object is defined in C as part of libvirt's Python bindings. The following code forwards the attribute accesses from it to that object which was returned by <code>libvirt.openAuth</code> and assigned to <code>self._libvirtconn</code>:</p>
<p><a href="https://github.com/virt-manager/virt-manager/blob/master/virtinst/connection.py#L94" rel="nofollow">https://github.com/virt-manager/virt-manager/blob/master/virtinst/connection.py#L94</a></p>
<pre><code>def __getattr__(self, attr):
    if attr in self.__dict__:
        return self.__dict__[attr]

    # Proxy virConnect API calls
    libvirtconn = self.__dict__.get("_libvirtconn")
    return getattr(libvirtconn, attr)
</code></pre>
<p>This causes <code>conn.lookupByName</code> to be <code>conn._libvirtconn.lookupByName</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I haven't investigated your case, but in Python methods can be dynamically added to a class or to an instance</p>
<pre><code>class A:
    def a(self):
        print 'a'

class C(A):
    def c(self):
        print 'c'

def foo(arg):
    print 'foo',arg

a = C()
print dir(a)

C.f = foo

a.a()
a.c()
a.f()
print dir(a)
</code></pre>
<p>the result is:</p>
<pre><code>['__doc__', '__module__', 'a', 'c']
a
c
foo &lt;__main__.C instance at 0x024CB9B8&gt;
['__doc__', '__module__', 'a', 'c', 'f']
</code></pre>
<p>As you can see the second call to dir shows new method 'f'. So in some cases it might be tricky to find the origin of that.</p>
</div>
<div class="post-text" itemprop="text">
<p>The VirtualConnection class you refer to has an implementation of <code>__getattr__</code>, which is a method that will be called when an attribute cannot be resolved. </p>
<p>This <code>__getattr__</code> method looks up attributes on a "_libvirtconn" attribute of the VirtualConnection instance.</p>
<p>See also: <a href="https://docs.python.org/3/reference/datamodel.html#object.__getattr__" rel="nofollow">https://docs.python.org/3/reference/datamodel.html#object.<strong>getattr</strong></a></p>
</div>
