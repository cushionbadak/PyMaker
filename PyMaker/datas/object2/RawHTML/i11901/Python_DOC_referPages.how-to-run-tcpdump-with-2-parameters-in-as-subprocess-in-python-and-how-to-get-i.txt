<div class="post-text" itemprop="text">
<p>I want to run tcpdump with parameters: -n "(dst port 515 or dst port 9100)" -w capture.cap</p>
<p>when I try to do: </p>
<pre><code>dump = subprocess.check_output(["tcpdump",'-n "(dst port 515 or dst port 9100)" -w capture.cap'])
</code></pre>
<p>I get exception:</p>
<pre><code>subprocess.CalledProcessError: Command '['tcpdump', '-n "(dst port 515 or dst port 9100)" -w capture.cap']' returned non-zero exit status 1
</code></pre>
<p>With 1 parameter it works.
Another question is how can I get the output of this command, because it seems to run non-stop.</p>
<p>this code doesn't work as well :</p>
<pre><code>p = subprocess.Popen(('sudo', 'tcpdump', '-l -n "(dst port 515 or dst port 9100)"'), stdout=subprocess.PIPE)
for row in iter(p.stdout.readline, b''):
print row.rstrip()   # process here
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to pass one argument per item, and no quotes:</p>
<pre><code>subprocess.check_output(['tcpdump', '-n', '(dst port 515 or dst port 9100)', '-w', 'capture.cap'])
</code></pre>
<p><code>check_output()</code> is not a shell (unless you pass <code>shell=True</code>, but this is not necessary in your case): it won't split the arguments for you, and won't interpret quoted strings for you.</p>
<p>Be sure to read the documentation for <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow"><code>subprocess.run()</code></a> and check the examples.</p>
<p>By the way, other than the <code>CalledProcessError</code> exception, you should have received this error too:</p>
<pre><code>tcpdump: invalid option -- ' '
</code></pre>
<p>That's an helpful hint: it's complaining about the space after <code>-n</code>.</p>
</div>
<span class="comment-copy">You have to pass one argument per item, and no quotes. <code>check_output()</code> is not a shell (unless you pass <code>shell=True</code>, but this is not necessary in your case)</span>
<span class="comment-copy">so what should I do? I read in another post that I should avoid the using of shell = True</span>
<span class="comment-copy">I tried to wrote:                                                                                             p = subprocess.Popen(('sudo', 'tcpdump', '-n', '(dst port 515 or dst port 9100)'), stdout=subprocess.PIPE) for row in iter(p.stdout.readline, b''):     print row.rstrip()                                                                                                         and I don't get anything, when I run the same command in terminal I get all the traffic</span>
<span class="comment-copy">@azDev: it may be because of buffering. Try using <code>-l</code></span>
