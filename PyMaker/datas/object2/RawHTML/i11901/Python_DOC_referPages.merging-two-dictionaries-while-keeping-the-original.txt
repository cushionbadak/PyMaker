<div class="post-text" itemprop="text">
<p>In Python, when I merge two dictionaries using the <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="noreferrer">update()</a> method, any existing keys will be overwritten.</p>
<p>Is there a way to merge the two dictionaries while keeping the original keys in the merged result?</p>
<p><strong>Update</strong></p>
<p>Say we had the following example:</p>
<pre><code>dict1 = {'bookA': 1, 'bookB': 2, 'bookC': 3}
dict2 = {'bookC': 2, 'bookD': 4, 'bookE': 5}
</code></pre>
<p>Can we merge the two dictionaries, such that the result will keep both values for the key <code>bookC</code>?</p>
<p>I'd like <code>dict3</code> to look like this:</p>
<pre><code>{'bookA': 1, 'bookB': 2, 'bookC': (2,3), 'bookD': 4, 'bookE': 5}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If it's alright to keep all values as a list (which I would prefer, it just adds extra headache and logic when your value data types aren't consistent), you can use the below approach for your updated example using a <code>defaultdict</code></p>
<pre><code>from itertools import chain
from collections import defaultdict

d1 = {'a': 1, 'b': 2, 'c': 3}
d2 = {'a': 2, 'b': 3, 'd': 4}

d3 = defaultdict(list)

for k, v in chain(d1.items(), d2.items()):
    d3[k].append(v)

for k, v in d3.items():
    print(k, v)
</code></pre>
<p>Prints:</p>
<pre><code>a [1, 2]
d [4]
c [3]
b [2, 3]
</code></pre>
<p>You also have the below approach, which I find a little less readable:</p>
<pre><code>d1 = {'a': 1, 'b': 2, 'c': 3}
d2 = {'a': 2, 'b': 3,}

d3 = dict((k, [v] + ([d2[k]] if k in d2 else [])) for (k, v) in d1.items())

print(d3)
</code></pre>
<p>This wont modify any of the original dictionaries and print:</p>
<pre><code>{'b': [2, 3], 'c': [3], 'a': [1, 2]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = {'a': 1, 'b': 2, 'c': 3}
b = {'a': 10, 'd': 2, 'e': 3}

b.update({key: (a[key], b[key]) for key in set(a.keys()) &amp; set(b.keys())})
b.update({key: a[key] for key in set(a.keys()) - set(b.keys())})

print(b)
</code></pre>
<p>Output:
{'c': 3, 'd': 2, 'e': 3, 'b': 2, 'a': (1, 10)}</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = {'a': 1, 'b': 2, 'c': 3}
b = {'a': 10, 'd': 2, 'e': 3}

for k in b:
    if k not in a:
        a[k] = b[k]
</code></pre>
<p><strong>Update</strong></p>
<p>After the update to the question I would agree with BAH's implementation of using a defaultdict with a list</p>
</div>
<span class="comment-copy">Can you give a sample input/output?</span>
<span class="comment-copy">Related? <a href="http://stackoverflow.com/questions/16745529/updating-a-python-dictionary-while-adding-to-existing-keys">Updating a python dictionary while adding to existing keys?</a></span>
<span class="comment-copy">What exactly do you want to happen to keys that are present in both dicts?</span>
<span class="comment-copy">@BAH Thanks, added an example</span>
<span class="comment-copy">You can't have a dictionary contain two keys of the same value. Keys must be unique. I would question the purpose of the outer code and whether a dictionary is the correct object to store the data you need?</span>
<span class="comment-copy">Okay, you updated your example, give me a bit to update my answer...</span>
<span class="comment-copy">yes, sure :-) Please take you time, appreciate it!</span>
<span class="comment-copy">What about the elements in d2 that are not in d1? Will they get to d3 with the above implementation?</span>
<span class="comment-copy">@EduardoCMB you're right they won't, I realized that when he updated his question. See edited answer with <code>defaultdict</code></span>
<span class="comment-copy">this is the exact thing I just wrote - but the <code>*zip</code> call is superfluous. Also just use <code>d3[k].append(v)</code></span>
<span class="comment-copy">the output should have the key of both <code>a</code> and <code>b</code></span>
<span class="comment-copy">Thanks @Copperfield, i have corrected it now</span>
<span class="comment-copy">"Can we merge the two dictionaries, such that the result will keep <b>both values</b> for the key bookC?"</span>
<span class="comment-copy">Notice the update that he posted. This was answered before that...</span>
<span class="comment-copy">OK, but it doesn't answer the question as it currently stands. It happens sometimes that a question is edited to invalidate an answer. That answer should be changed or deleted.</span>
