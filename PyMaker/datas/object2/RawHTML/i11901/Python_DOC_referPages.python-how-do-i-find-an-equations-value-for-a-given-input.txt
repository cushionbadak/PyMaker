<div class="post-text" itemprop="text">
<p>Say, I have an equation <code>f(x) = x**2 + 1</code>, I need to find the value of <code>f(2)</code>.</p>
<p>Easiest way is to create a function, accept a parameter and return the value.</p>
<p>But the problem is, <code>f(x)</code> is created dynamically and so, a function cannot be written beforehand to get the value.</p>
<p>I am using <code>cvxpy</code> for an optimization value. The equation would look something like below:</p>
<pre><code>x = cvx.Variable()
Si = [(cvx.square(prev[i] + cvx.sqrt(200 - cvx.square(x))) for i in range(3)]
</code></pre>
<p><code>prev</code> is an array of numbers. There will be a <code>Si[0] Si[1] Si[2]</code>.</p>
<p>How do i find the value of <code>Si[0] for x=20</code>?</p>
<p>Basically, Is there any way to substitue the said Variable and find the value of equation When using cvxpy ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Set the value of the variables and then you can obtain the value of the expression, like so:</p>
<pre><code>&gt;&gt;&gt; x.value = 3
&gt;&gt;&gt; Si[0].value
250.281099844341
</code></pre>
<p>(although it won't work for <code>x = 20</code> because then you'd be taking the square root of a negative number).</p>
</div>
<div class="post-text" itemprop="text">
<p>The general solution to interpreting code on-the-fly in Python is to use the built-in <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow">eval()</a> but <strong>eval is dangerous with user-supplied input</strong> which could do all sorts of nasty to your system.</p>
<p>Fortunately, there are ways to "sandbox" eval using its additional parameters to only give the expression access to known "safe" operations. There is <a href="http://lybniz2.sourceforge.net/safeeval.html" rel="nofollow">an example</a> of how to limit access of <code>eval</code> to only white-listed operations and specifically deny it access to the built-ins. A quick look at that implementation looks close to correct, but I won't claim it is foolproof.</p>
<p>The <code>sympy.sympify</code> I mentioned in my comment uses <code>eval()</code> inside and carries the same warning.</p>
</div>
<div class="post-text" itemprop="text">
<p>In parallel to your cvx versions, you can use lambda to define functions on the fly :</p>
<pre><code>f=[lambda x,i=j : (prev[i] + (200 - x*x)**.5)**2 for j in range(3)] #(*)
</code></pre>
<p>Then you can evaluate <code>f[0](20)</code>, <code>f[1](20)</code>, and so on. </p>
<p>(*) the <code>i=j</code> is needed to fit each <code>j</code> in the associated function.</p>
</div>
<span class="comment-copy">Try <a href="http://docs.sympy.org/dev/tutorial/basic_operations.html#converting-strings-to-sympy-expressions" rel="nofollow noreferrer">sympy.sympify</a> and <code>sympy.evalf</code>.</span>
<span class="comment-copy">@msw Thanks for the quick reply. I am using cvxpy for creating the equation and sympy is not an option for me. Unable to use sympy.sympify on the equation created using cvxpy.</span>
<span class="comment-copy">What is the bigger problem you are trying to solve? cvxpy is for finding maxima and minima, not simply evaluating an expression.</span>
<span class="comment-copy">I am trying to solve an optimization problem using DC Programming. In it, there comes a time where i need to find the value of g(x) at x=k and so is the problem</span>
<span class="comment-copy">Then why would you need to evaluate the expression at a point? cvxpy should do the optimization for you.</span>
<span class="comment-copy">How do i tell eval() to use certain value for a variable x ?</span>
<span class="comment-copy">Simply assign it. <code>x = 3; eval('x + 2')  # =&gt; 5</code>.</span>
