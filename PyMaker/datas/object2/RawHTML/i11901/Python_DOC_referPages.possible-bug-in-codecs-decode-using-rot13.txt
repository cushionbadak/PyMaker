<div class="post-text" itemprop="text">
<p>Python 3.5.1 on Ubuntu </p>
<pre><code>&gt;&gt;&gt; from codecs import decode
&gt;&gt;&gt; s = 'string'
&gt;&gt;&gt; b = b'bytes'
&gt;&gt;&gt; decode(b, 'utf8')
'bytes'
&gt;&gt;&gt; decode(s, 'utf8')
Traceback (most recent call last):
  File "/usr/lib/python3.5/encodings/utf_8.py", line 16, in decode
    return codecs.utf_8_decode(input, errors, True)
TypeError: a bytes-like object is required, not 'str'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: decoding with 'utf8' codec failed (TypeError: a bytes-like object is required, not 'str')
</code></pre>
<p>so far everything behaves as expected. But when I try to use ROT13 encoding I get:</p>
<pre><code>&gt;&gt;&gt; decode(s, 'rot13')
'fgevat'
&gt;&gt;&gt; decode(b, 'rot13')
Traceback (most recent call last):
  File "/usr/lib/python3.5/encodings/rot_13.py", line 18, in decode
    return (input.translate(rot13_map), len(input))
TypeError: a bytes-like object is required, not 'dict'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: decoding with 'rot13' codec failed (TypeError: a bytes-like object is required, not 'dict')
</code></pre>
<p>As @snakecharmerb points out ROT13 en/decoding is only supposed to work on strings.<br/>
The exception Message though, is still wrong since it states, that a bytes-like object was expected even when a bytes-like object was actually passed, and mentions some dictionary the user did not create.</p>
</div>
<div class="post-text" itemprop="text">
<p>Regarding  the ROT13 codec, the <a href="https://docs.python.org/3/library/codecs.html#text-transforms" rel="nofollow">Python 3.5 docs state</a>: </p>
<blockquote>
<p>The following codec provides a text transform: a str to str mapping.
  It is not supported by str.encode() (which only produces bytes
  output).</p>
</blockquote>
<p>that is, you can only pass unicode strings (<code>str</code> objects) when encoding to ROT13 and you will only get <code>str</code> objects back.</p>
<p>This is different from Python 2.x, when ROT13 was treated the same as other codecs.  ROT13 was not ported to Python 3 initially, because ROT13 does not encode a unicode string to bytes - it just swaps letters around.  It as reinstated, as a text transform in Python 3.2 and 3.4.  The full story is in <a href="https://bugs.python.org/issue7475" rel="nofollow">this bug report</a>. </p>
</div>
<span class="comment-copy">Yes, that makes sense. The Error message is still completely wrong though.</span>
<span class="comment-copy">@0x539 Yes, I it looks like some implementation detail percolating up - probably should be caught and re-raised as something that makes more sense.</span>
