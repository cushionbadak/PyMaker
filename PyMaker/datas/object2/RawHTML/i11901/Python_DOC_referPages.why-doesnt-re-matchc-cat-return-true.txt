<div class="post-text" itemprop="text">
<p>Why does</p>
<pre><code>not re.match("c", "cat")
</code></pre>
<p>return False, but</p>
<pre><code>re.match("c", "cat")
</code></pre>
<p>Does not return True but instead returns the location of the object in memory. I can't find a way to make this statement return true, but I know it is true because: </p>
<pre><code>if re.match("c", "cat"):
    print "Yes!"
</code></pre>
<p>returns "Yes!".</p>
<p>As I said, this is of no practical significance, at least not at the moment, but it does puzzle me.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>bool()</code> to convert to a boolean value (<code>true</code> <code>/</code> <code>false</code>):</p>
<pre><code>bool(re.match("c", "cat")) == true
</code></pre>
<p>When you use <code>re.match("c", "cat")</code> in your <code>if</code> statement, it is automatically converted to a boolean value, <code>true</code>, that is why it will <code>return</code> <code>Yes!</code></p>
<p>Using <code>not</code> will automatically convert it to a boolean value, then invert it, therefore:</p>
<pre><code>not re.match("c", "cat") == false
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The function <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match()</code></a> returns a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a> if there is a match, or <code>None</code> if there's not. </p>
<p>To create a bool from that you can use:</p>
<pre><code>if re.match(...) is not None:
</code></pre>
<p>However, in Python that's not strictly necessary: take a look at e.g. <a href="https://stackoverflow.com/questions/18491777/python-truth-value-of-python-string">this thread</a> for more on Python's "truthy" and "falsy" values.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, focus on this:</p>
<pre><code>not re.match("c", "cat")
</code></pre>
<p>Here <code>re.match("c", "cat")</code> will return the "location of the object in memory", as you said. That's something not False.</p>
<p>So now, <code>not re.match("c", "cat")</code> will result in:</p>
<blockquote>
<p>not not False</p>
</blockquote>
<p>which results to:</p>
<blockquote>
<p>False</p>
</blockquote>
<p>Of course, this kind of thinking can be applied to logical conditions too, like a condition of an if statement.</p>
</div>
<span class="comment-copy"><i>I can't find a way to make this statement return true</i> -- just explicitly convert it to <code>bool</code>: <code>bool(re.match("c", "cat"))</code>.</span>
<span class="comment-copy">See <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#truth-value-testing</a> - everything in Python can be evaluated in a Boolean context (using <code>if</code>, <code>not</code>, etc.). The match will return a result (truthy) or <code>None</code> (falsy).</span>
<span class="comment-copy">@Obicere, I updated my question, is it OK now? :)</span>
<span class="comment-copy">I got bamboozled by all the negations, was correct at second glance.</span>
