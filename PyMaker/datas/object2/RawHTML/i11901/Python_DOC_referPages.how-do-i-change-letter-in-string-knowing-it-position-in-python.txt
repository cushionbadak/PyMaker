<div class="post-text" itemprop="text">
<p>I have this problem, while writting genetic algorithm, when I try to simulate mutation process:
1. so I choose random <code>position = randint(0, len(genes)-1)</code><br/>
where genes are in format "10101" and 1s and 0s are set randomly
2. I try to replace 1 or 0 with 0 or 1 to simulate mutation then I got many errors. </p>
<p>I tried this way: </p>
<pre><code>position = randint(0, len(genes)-1)
if(genes[position]=="1"): 
    genes[position] = "0"
if(genes[position]=="0"): 
    genes[position] = "1"
</code></pre>
<p>That does not work. 
I tried also with: </p>
<pre><code>if(genes[position_to_mutate]=="1"):
genes_new = ""
    if(position_to_mutate == 0):
        genes_new = "0" + genes[1:len(genes)]
        print "genes z zerowym nowym : ", genes
    if(position_to_mutate!=0):
        genes_new = genes[0:position_to_mutate] + "0" + genes[position_to_mutate+1:len(genes)]
    if(position_to_mutate==4):
        genes_new = genes[0:len(genes)-2] + "0" 
</code></pre>
<p>So, how do I replace one sign with the other getting it by its position in the string? </p>
</div>
<div class="post-text" itemprop="text">
<p>Strings are immutable, you need to reassign and you can do something like this:</p>
<pre><code>genes = "101010101"
position = randint(0, len(genes)-1)
new_val = "1" if genes[position] == "0" else "0"
genes = genes[:position] + new_val + genes[position+1:]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>strings in python are immutabe.</p>
<p>So you need to create new instance for modification.</p>
<p>Or you could use <code>list</code> for that purpose and after modifications convert it back to <code>str</code>.</p>
<pre><code>&gt;&gt;&gt; mystr = '1001'
&gt;&gt;&gt; tmp = list(mystr)
&gt;&gt;&gt; tmp[0] = '0'
&gt;&gt;&gt; mystr = ''.join(tmp)
&gt;&gt;&gt; mystr
'0001'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As others have pointed out, strings are immutable. However, you can shorten your version using the niceties of the slice operator:</p>
<pre><code>genes_new = genes[:p] + "0" + genes[p+1:]

# another way is to use this kind of generator expression
''.join(x[i] if i != p else '0' for i in xrange(len(x)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I commented strings are immutable so you cannot use assignment, you could store the string in a <a href="https://docs.python.org/3/library/functions.html#bytearray" rel="nofollow">bytearray</a> and mutate that then just call str on the bytearray to get the new string back from the bytearray when you are finished mutating:</p>
<pre><code>In [42]: s = "10101"

In [43]: b_s = bytearray(s)

In [44]: b_s[0] = "0"

In [45]: str(b_s)
Out[45]: '00101'

In [46]: b_s[0:2] = "11"

In [47]: str(b_s)
Out[47]: '11101'
</code></pre>
<p>It is going to be a lot more efficient if you make all the changes and then get your string back as opposed to continually creating new strings. </p>
</div>
<span class="comment-copy">How are you defining <code>genes</code>? What error is being thrown?</span>
<span class="comment-copy">You cannot use assignment with strings as they are immutable so <code>genes[position]</code> etc..  is going to fail with an error</span>
<span class="comment-copy">I think you want <code>else "0"</code></span>
<span class="comment-copy">it looks complicated but works fine, nice to know .join is useful!</span>
