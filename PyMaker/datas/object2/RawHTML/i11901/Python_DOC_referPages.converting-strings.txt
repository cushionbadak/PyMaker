<div class="post-text" itemprop="text">
<p>I don't think many people would have a question like this, but still.
<br/>
<br/>
So, I have a python program which reads a file, and the file has some commands for the program to do (my own syntax).<br/>
The program reads the file line by line to a string.<br/>
What if the command it reads from the file is:</p>
<pre><code>'"Hello" + "World" + "!!!"'
</code></pre>
<p>I want to convert this to:</p>
<pre><code>"Hello" + "World" + "!!!"
</code></pre>
<p>So that python can read it as:</p>
<pre><code>'HelloWorld!!!'
</code></pre>
<p>Despite many attempts, I have been unable to do so.<br/>
Help would be loved.
<br/>
<br/>
One thing I've tried is executing the code with the <code>compile</code> function:</p>
<pre><code>obj = compile('a = '"Hello" + "World" + "!!!"'', '&lt;string&gt;', 'exec')
exec(obj)
print a
</code></pre>
<p>But instead of <code>'HelloWorld!!!'</code> it prints <code>"Hello" + "World" + "!!!"</code>, and by putting it in a string it goes back to <code>'"Hello" + "World" + "!!!"'</code>.
<br/><br/><br/>
<strong>NOTE:</strong>
The program might even come across variables. For example:</p>
<pre><code>a = 42
'"The number" + "is" + a'
</code></pre>
<p>Expected output:</p>
<pre><code>The number is 42
</code></pre>
<p>What can be done in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following trick:</p>
<pre><code>m = '"Hello" + "World" + "!!!"'
print ''.join(m.replace('"', "").split(" + "))
</code></pre>
<p>Outputs:</p>
<pre><code>HelloWorld!!!
</code></pre>
<p>First you replace the <code>"</code>, then make a list with only the words with <code>.split</code> and then generate a string from the list with <code>''.join()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/shlex.html#shlex.split" rel="nofollow"><code>shlex</code></a> module in order to split the string using shell-like syntax then use a list comprehension within <code>str.join()</code> method to concatenate the words:</p>
<pre><code>&gt;&gt;&gt; import shlex
&gt;&gt;&gt; 
&gt;&gt;&gt; ''.join([i for i in shlex.split(s) if i != '+'])
'HelloWorld!!!'
</code></pre>
<p>Note that you can simply use <code>eval()</code> function on the string, but it's not a safe approach at all. Unless you are sure that the string is not contain the dangerous commands.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your mistake is putting it back into a string. Compiling and evaluating has taken off one level of quoting, so now you need to repeat the process. You can use the "eval" function instead of compiling an assigment, like this:</p>
<pre><code>for line in open(your file....):
    print eval(eval(line))
</code></pre>
</div>
<span class="comment-copy">You miss a <code>!</code> on the 2nd code tag, right?</span>
<span class="comment-copy">Post your erroneous code at the moment you're simply asking for a solution without showing your efforts</span>
<span class="comment-copy">@Borja Looks like i did, thx for pointing out</span>
<span class="comment-copy">@UditDey Have you checked the answers?</span>
<span class="comment-copy">In the sense of what? Accepting them?</span>
