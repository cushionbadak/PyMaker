<div class="post-text" itemprop="text">
<pre><code>dave = [m.start() for m in re.finditer('*', "2345234*265354*26342567*356")]
print(dave)
</code></pre>
<p>Whenever I run this piece of code it gives me this huge error.</p>
<pre><code>Traceback (most recent call last):
File "C:\Users\Max\Desktop\MaxsCal V.1.py", line 107, in &lt;module&gt;
dave = [m.start() for m in re.finditer('*', "2345234*265354*26342567*356")]
File "C:\Program Files (x86)\Python 3\lib\re.py", line 220, in finditer
return _compile(pattern, flags).finditer(string)
File "C:\Program Files (x86)\Python 3\lib\re.py", line 293, in _compile
p = sre_compile.compile(pattern, flags)
File "C:\Program Files (x86)\Python 3\lib\sre_compile.py", line 536, in compile
p = sre_parse.parse(p, flags)
File "C:\Program Files (x86)\Python 3\lib\sre_parse.py", line 829, in parse
p = _parse_sub(source, pattern, 0)
File "C:\Program Files (x86)\Python 3\lib\sre_parse.py", line 437, in _parse_sub
itemsappend(_parse(source, state))
File "C:\Program Files (x86)\Python 3\lib\sre_parse.py", line 638, in _parse
source.tell() - here + len(this))
sre_constants.error: nothing to repeat at position 0
</code></pre>
<p>Is there anyway to fix the code to give the output, which is meant to be the index of all the <code>*</code>, of something like <code>[7, 14, 23]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.finditer" rel="noreferrer"><code>re.finditer()</code></a> uses a regular expression to find matches. That regular expression is <code>'*'</code> in your case. The <code>*</code> has a special meaning in regular expressions, so if you just mean to search for a star character, you need to escape it:</p>
<pre><code>dave = [m.start() for m in re.finditer('\\*', "2345234*265354*26342567*356")]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can enumerate the indices:</p>
<pre><code>&gt;&gt;&gt; [index for index, value in enumerate("2345234*265354*26342567*356") if value == '*']
[7, 14, 23]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could write a function that finds the index of all characters like this:</p>
<pre><code>def findChar(char, string):
    indexes = []
    b = 0
    for i in string:
        if i == char:
            indexes.append(b)
        b += 1
    return indexes
</code></pre>
<p>Or take a look at poke's answer if you really want to use re.</p>
</div>
<span class="comment-copy">What is your code supposed to do?</span>
<span class="comment-copy">print the index of all the *</span>
<span class="comment-copy">Put that in your post... :)</span>
<span class="comment-copy">Thanks, really helpful!!</span>
<span class="comment-copy">I really do prefer this solutions over using <code>re</code> .. Nice</span>
<span class="comment-copy">more pythonic because easier to read and therefore understand. IMO, we should always prefer the most readable implementation over the most fancy one. lists comprehensions are really performant so it's not a bad thing to use them.</span>
