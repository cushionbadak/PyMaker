<div class="post-text" itemprop="text">
<p>I am having a hard time looping through files in a directory that is different from the directory where the script was written. I also ideally would want my script through go to through all files that start with sasa. There are a couple of files in the folder such as sasa.1, sasa.2 etc... as well as other files such as doc1.pdf, doc2.pdf</p>
<p><strong>I use Python Version 2.7 with windows Powershell</strong></p>
<p><strong>Locations of Everything</strong></p>
<p>1) Python Script Location ex: <code>C:Users\user\python_project</code></p>
<p>2) Main_Directory ex: <code>C:Users\user\Desktop\Data</code></p>
<p>3) Current_Working_Directory ex: <code>C:Users\user\python_project</code></p>
<p>Main directory contains 100 folders (folder A, B, C, D etc..)
Each of these folders contains many files including the sasa files of interest.  </p>
<p><strong>Attempts at running script</strong></p>
<p>For 1 file the following works:</p>
<p>Script is run the following way: <code>python script1.py</code></p>
<pre><code>file_path = 'C:Users\user\Desktop\Data\A\sasa.1

def writing_function(file_path):
    with open(file_path) as file_object:
        lines = file_object.readlines()

for line in lines:
print(lines)

writing_function(file_path)  
</code></pre>
<p>However, the following does not work</p>
<p>Script is run the following way: <code>python script1.py A sasa.1</code></p>
<pre><code>import os
import sys
from os.path import join

dr = sys.argv[1]
file_name = sys.argv[2]

file_path = 'C:Users\user\Desktop\Data'
new_file_path = os.path.join(file_path, dr)
new_file_path2 = os.path.join(new_file_path, file_name)

def writing_function(paths):
    with open(paths) as file_object:
        lines = file_object.readlines()

for line in lines:
    print(line)

writing_function(new_file_path2)
</code></pre>
<p>I get the following error:</p>
<p><code>with open(paths) as file_object:</code><br/>
<code>IO Error: [Errno 2] No such file or directory:</code><br/>
<code>'C:Users\\user\\Desktop\\A\\sasa.1'</code> </p>
<p>Please note right now I am just working on one file, I want to be able to loop through all of the sasa files in the folder.</p>
</div>
<div class="post-text" itemprop="text">
<p>It can be something in the line of:</p>
<pre><code>import os
from os.path import join

def function_exec(file):
    code to execute on each file

for root, dirs, files in os.walk('path/to/your/files'): # from your argv[1]
    for f in files:
        filename = join(root, f)
        function_exec(filename)
</code></pre>
<p>Avoid using the variable <code>dir</code>. it is a python keyword. Try <code>print(dir(os))</code></p>
<pre><code>dir_ = argv[1] # is preferable 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No one mentioned <code>glob</code> so far, so:
<a href="https://docs.python.org/3/library/glob.html" rel="nofollow">https://docs.python.org/3/library/glob.html</a></p>
<p>I think you can solve your problem using its <code>**</code> magic:</p>
<blockquote>
<p>If recursive is true, the pattern “**” will match any files and zero
  or more directories and subdirectories. If the pattern is followed by
  an os.sep, only directories and subdirectories match.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Also note you can change directory location using</p>
<pre><code>os.chdir(path)
</code></pre>
</div>
<span class="comment-copy">consider using <code>os.walk</code></span>
<span class="comment-copy">Would I be able to pass only the folder name in the argv or do I have to pass on the entire file path? Ideally, I would only like to put the folder name in the argument  I could probably have the entire path in the code all the way up to the main folder, but I would like to user to simply put the folder name for the one that contains the files.</span>
<span class="comment-copy">You can use <code>os.path.join()</code> to join a base directory like the one where you have your data "2) Main_Directory ex: C:Users\user\Desktop\Data" and the directories your user inputs. Check documentation at <a href="https://docs.python.org/3/library/os.path.html?highlight=join#os.path.join" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">If the directory is relative to your current directory, you can use also get it by using <code>os.getcwd()</code></span>
<span class="comment-copy">Hello, I attempted to solve the problem but have found myself to be quite unsuccessful. I was wondering if you could take a look at my updated description. Thank You</span>
<span class="comment-copy">Your original path, I think is missing a "\" after C: Now is 'C:Users...', shouldn't it be C:\Users...</span>
<span class="comment-copy">I tried using os.chdir(folder_name) when passing the folder name into the directory. How would I pass on the entire path without knowing it?</span>
