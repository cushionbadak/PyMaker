<div class="post-text" itemprop="text">
<p>In Tcl, you can use the <code>catch</code> command to send error output to a variable, like this:</p>
<pre><code>% catch {eval exec bogomips &amp;} outage
1
% puts $outage
couldn't execute "bogomips": no such file or directory
</code></pre>
<p>In Python (at which I'm still a beginner), I know <code>try</code> is basically the equivalent of <code>catch</code>, but I'm not seeing how to capture error output in a variable. Can this be done in Python without resorting to subprocess, Popen, and so on? If so, how?</p>
</div>
<div class="post-text" itemprop="text">
<p>You use one or more <code>except</code> clauses, catching the appropriate exception types:</p>
<pre><code>def something(x):
    if type(x) != int:
        raise TypeError("Expected an int, but was %s" % str(type(x)))
    if x == 0:
        raise ValueError("Zero not allowed")

try:
    something(0)
except ValueError as e:
    print 'got a value error:', e
except TypeError as e:
     print 'got a type error:', e
</code></pre>
<p>(Python 2 code, but Python 3 is the same in this regard.)</p>
<p>Here are the docs on Errors and Exceptions: <a href="https://docs.python.org/2.7/tutorial/errors.html" rel="nofollow">https://docs.python.org/2.7/tutorial/errors.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Catching error of external program:</p>
<pre><code>import subprocess
print(subprocess.Popen("dir c:\\dosent\\exists", shell=True, stderr=subprocess.PIPE).stderr.read().decode('cp866'))
</code></pre>
</div>
<span class="comment-copy"><code>try: do my stuff</code> <code>except MyException as e:</code> <code>pass</code>  Now <code>e</code> will be the exception.</span>
<span class="comment-copy">Check out the <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs</a></span>
<span class="comment-copy">That got me an error message all right, but it wasn't captured in a variable called e.</span>
<span class="comment-copy">I'm sorry.  I misunderstood.  You do need to use <code>subprocess</code> to do what you want.  If you want to do that, I can tell you how.</span>
<span class="comment-copy">Thanks, I do know how to do that, but it's not as easy as using <code>catch</code> in Tcl. Fortunately, there is a way to evoke <code>catch</code> from Python if needed: after importing tkinter and messagebox, open a root window and run this line: <code>root.tk.eval('catch {eval exec bogomips &amp;} outage; tk_messageBox -message $outage')</code> !</span>
<span class="comment-copy">You should use <code>if isinstance(x, int):</code> instead of <code>if type(x) == int:</code>  That way, subclasses of <code>int</code> will still qualify.  Also, use <code>if not x:</code> instead of <code>if x == 0:</code>  It's shorter.</span>
<span class="comment-copy"><code>x == 0</code> is easier to read, though.</span>
<span class="comment-copy">Do what you will; it's just a suggestion.  I do have a fairly strong opinion on <code>isinstance()</code>, though.</span>
<span class="comment-copy">Honest curiosity: why? Do people actually subclass int?</span>
<span class="comment-copy">Actually, there's even a built-in that subclasses <code>int</code>: <code>bool</code>.</span>
<span class="comment-copy">I have discovered that he is talking of error messages from a separate program.  I would suggest that you delete this answer before someone comes here on a downvote spree.</span>
<span class="comment-copy">This doesn't capture the error output in a variable either, as I found when I changed <code>print(err)</code> to <code>print('Bogosity: ' + err)</code>. I still got just the error message, no "Bogosity."</span>
<span class="comment-copy">@McClamrock Perhaps this is what you want?</span>
