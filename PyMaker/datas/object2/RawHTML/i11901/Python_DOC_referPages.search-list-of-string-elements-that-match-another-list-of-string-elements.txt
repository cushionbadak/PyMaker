<div class="post-text" itemprop="text">
<p>I have a list with strings called <code>names</code>, I need to search each element in the <code>names</code> list with each element from the <code>pattern</code> list. Found several guides that can loop through for a individual string but not for a list of strings </p>
<pre><code>a = [x for x in names if 'st' in x]
</code></pre>
<p>Thank you in advance!</p>
<pre><code>names = ['chris', 'christopher', 'bob', 'bobby', 'kristina']
pattern = ['st', 'bb']
</code></pre>
<p>Desired output:</p>
<pre><code>a = ['christopher', 'bobby', 'kristina]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/functions.html#any" rel="noreferrer">any()</a> function with a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="noreferrer">generator expression</a>:</p>
<pre><code>a = [x for x in names if any(pat in x for pat in pattern)]
</code></pre>
<p><code>any()</code> is a short-circuiting function, so the first time it comes across a pattern that matches, it returns True.  Since I am using a generator expression instead of a list comprehension, no patterns after the first pattern that matches are even checked.  That means that this is just about the fastest possible way of doing it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this:</p>
<pre><code>[name for name in names if any([p in name for p in pattern])]
</code></pre>
<p>The code is self explanatory, just read it out loud; we're creating a list of all names that have one of the patterns in them.</p>
<p>Using two loops:</p>
<pre><code>for name in names:
    for pattern in patterns:
        if pattern in name:
            # append to result
</code></pre>
</div>
<span class="comment-copy">Worked like a champ, and thank you for explanation!!!</span>
<span class="comment-copy">thank you for the reading out loud suggestion, it helps :)</span>
