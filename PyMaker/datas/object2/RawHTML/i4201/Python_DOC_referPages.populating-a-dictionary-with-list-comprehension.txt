<div class="post-text" itemprop="text">
<p>I am trying to populate a dictionary <code>d</code>, with keys from a list<code>names</code> 
e.g.</p>
<pre><code>names=['a','v']
[d.update({str(n+'__k'):[1,2]} for n in names)]
</code></pre>
<p>However,</p>
<pre><code>ValueError: dictionary update sequence element #0 has length 1; 2 is required
</code></pre>
<p>How to get <code>d={'a__k':[1,2],'v__k':[1,2]}</code>?
Why is this an error?</p>
</div>
<div class="post-text" itemprop="text">
<p>In modern versions of Python you can create a dictionary with a dictionary comprehension:</p>
<pre><code>{x: '%s__k' % x for x in names}
</code></pre>
<p>Note that I prefer to use the string % operator rather than concatenation.  it's slightly more efficient, but also easier to read in my opinion.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by separating the two operations of updating and dict creation by using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dict comprehension</a></p>
<pre><code>{n+'__k':[1,2] for n in names}
</code></pre>
<p>Should work just fine. If you need to update <code>d</code>, then you can do:</p>
<pre><code>d.update({n+'__k':[1,2] for n in names})
</code></pre>
</div>
<span class="comment-copy">I do not really understand why you want to update a dictionary through list comprehension instead of a simple loop?</span>
<span class="comment-copy">Why not use a dictionary comprehension?</span>
<span class="comment-copy">Also, you have a typo: You never close the parentheses after update, so it is interpreted as a generator expression.</span>
<span class="comment-copy">Hunt: the brackets do not match.</span>
<span class="comment-copy">@ Willem Van Onsem you were right</span>
