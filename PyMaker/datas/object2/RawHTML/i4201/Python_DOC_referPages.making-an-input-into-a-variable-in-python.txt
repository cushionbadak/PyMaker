<div class="post-text" itemprop="text">
<p>I am very new to python and need some help, I am trying to make a simple if/else script.</p>
<p>my previous version worked as it should and I have have to make the only change of a user entering a variable rather than a pre-determined variable. But I get a syntax error on the final line, can anybody show me where I am going wrong.</p>
<p>my code is </p>
<pre><code>    hour = input('enter an hour')

if hour &gt;= 0 and hour &lt; 12:
    clock = hour, 'pm' # assigning the variable here as necessary

elif hour &gt;= 12 and hour &lt; 23:
    clock = hour, 'pm' # assigning the variable here as necessary

else:
    clock = 'That is not a time on the clock.'
print(clock)
</code></pre>
<p>thanks in advance for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Multiple problems here:</p>
<ul>
<li>In Python indentation (the spaces from a line or tabs if you wish) are important to distinguish different scopes of the code like functions, if statements etc. Your first line has such invalid indentation.</li>
<li><code>input('enter an hour')</code> This function reads an input from the user and returns it as a string, regardless if you provide a numeric value. You need to use <code>int()</code> to convert it into an actual numeric value, so that you can then do range checks like "if is greater than 0 and less than 10" for example. Obviously, if you don't convert it to integer and you are working with strings you cannot do such range checks as the value is not treated as a numeric value.</li>
</ul>
<p>Here is a working copy:</p>
<pre><code>hour = int(input('Enter an hour: '))

if hour &gt;= 0 and hour &lt; 12:
    clock = "{}am".format(hour)
elif hour &gt;= 12 and hour &lt; 23:
    clock = "{}pm".format(hour)
else:
    clock = 'That is not a time on the clock.'

print(clock)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are 3 errors:</p>
<ol>
<li>Your first line should not be indented.</li>
<li>Convert your <code>input</code> to numeric type, e.g. <code>float</code> or <code>int</code>.</li>
<li>Hours between 0 and 12 should be "am" rather than "pm".</li>
</ol>
<p>This will work:</p>
<pre><code>hour = float(input('enter an hour'))

if hour &gt;= 0 and hour &lt; 12:
    clock = hour, 'am' # assigning the variable here as necessary

elif hour &gt;= 12 and hour &lt; 23:
    clock = hour, 'pm' # assigning the variable here as necessary

else:
    clock = 'That is not a time on the clock.'

print(clock)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error is <code>IndentationError: unexpected indent</code> This means you write the line of code indented. that's incorrect. To solve it remove the spaces before first line.</p>
<p>You also have to specify the type of input.
<code>hour = int(input('enter an hour'))</code></p>
</div>
<span class="comment-copy">Can you please post the traceback from Python? That will help to localize the problem even more. Can you also check the indentation? The first line looks incorrect. Thank you!</span>
<span class="comment-copy">use <code>int(input("enter an hour"))</code></span>
<span class="comment-copy">The only syntax error in this code is in the first line. When the first line's indentation is fixed, it runs without problems. You'll have to post a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">@Aran-Fey no it does not: <code>if hour &gt;= 0 and hour &lt; 12: TypeError: unorderable types: str() &gt;= int()</code></span>
<span class="comment-copy">@What Ok, but that's not a syntax error.</span>
<span class="comment-copy">thanks for the help, it was such a simple error!?! but why do the curly brackets pull in the value from clock?</span>
<span class="comment-copy">That is a personal preference. You can have a string format like “User {} passed the year with average grade of {:.2f}”.format(username, marking) and this will print the username and the marking to two decimal places. Is just more readable. In Python 3.6 you can even go a step further with string literals: <a href="https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498</a></span>
<span class="comment-copy">If this answer or any other solved your question, please make sure to mark it as accepted by clicking the "tick" icon on the corresponding answer. It helps to keep StackOverflow organised.</span>
