<div class="post-text" itemprop="text">
<p>This code sends a message to the Telegram Supergroup if a new member has joined. When an error occurs when sending a message, I want to change my account to continue. It is possible to go to the next "item".
How do I go to the next account in a loop when I receive an error?</p>
<pre><code>from pyrogram import Client, Filters

list_account = ['001', '002']

for item in list_account:
    app = Client(item)
    @app.on_message(Filters.chat("public_link_chat") &amp; Filters.new_chat_members)
    def welcome(client, message):
        try:
            client.send_message(
                message.chat.id, 'Test',
                reply_to_message_id=message.message_id,
                disable_web_page_preview=True
            )
        except Exception as e:
            print(e)
            # How do I go to the next account in a loop when I receive an error?

    app.start()
    app.join_chat("public_link_chat")
    app.idle()
</code></pre>
<p>Function "continue" does not work in this case.</p>
<p>Description of function here: <a href="https://docs.pyrogram.ml/resources/UpdateHandling" rel="noreferrer">https://docs.pyrogram.ml/resources/UpdateHandling</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just add <code>app.is_idle = False</code>:
</p>
<pre><code>from pyrogram import Client, Filters

list_account = ['001', '002']

for item in list_account:
    app = Client(item)
    @app.on_message(Filters.chat("public_link_chat") &amp; Filters.new_chat_members)
    def welcome(client, message):
        try:
            client.send_message(
                message.chat.id, 'Test',
                reply_to_message_id=message.message_id,
                disable_web_page_preview=True
            )
        except Exception as e:
            print(e)
            # How do I go to the next account in a loop when I receive an error?
            app.is_idle = False

    app.start()
    app.join_chat("public_link_chat")
    app.idle()
</code></pre>
<p>You should definitely check out <a href="https://github.com/pyrogram/pyrogram/blob/develop/pyrogram/client/client.py#L890-L891" rel="nofollow noreferrer">these lines</a> of the idle logic at the pyrogram source code:</p>
<pre class="lang-py prettyprint-override"><code>while self.is_idle:
    time.sleep(1)
</code></pre>
<p>If you want an infinite loop, <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer">check out</a> the <code>itertools.cycle</code>, it may be used like:</p>
<pre class="lang-py prettyprint-override"><code>for item in itertools.cycle(list_account):
    do_something()
</code></pre>
</div>
<span class="comment-copy">When you say "get something like this", what do you mean? What's stopping you from doing so? (Yes, you're called on an event-driven basis, but how does that impede you?)</span>
<span class="comment-copy">I don't see where you're stuck.  <code>return</code> is how you pass a value back from a function.  If you want the <code>welcome</code> value, then use <code>return</code> and keep it in a variable in the calling program.</span>
<span class="comment-copy">@Prune, <code>welcome</code> is called by <code>pyrogram</code>, not by the OP's code directly, so the handling of the return value is controlled by that library. Not that that makes the OP's question any clearer, but "just return a value from welcome" doesn't make sense when welcome is a callback invoked by a separate component.</span>
<span class="comment-copy">...of course, their <code>welcome</code> function can call <code>number_one()</code> and print the returned value.</span>
<span class="comment-copy">telegram calls on message your welcome function. So you aren't even called from the for loop, and thats why you cant continue to next iteration.</span>
<span class="comment-copy">Thank you for your help!</span>
