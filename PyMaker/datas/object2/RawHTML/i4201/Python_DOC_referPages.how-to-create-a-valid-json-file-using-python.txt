<div class="post-text" itemprop="text">
<p>Creating a json file using python which will have multiple entries as follows :</p>
<pre><code>    out=''
    with open('data.json', 'w') as outfile:
        i=0;

        for i in range(3):
             string = "test_"+str(i)+'"'+':{ "status": "false", "test_id": 123453},'
             out= out+string.replace("\\","");
             i=i+1;      
        json.dump("{"+out+"}", outfile)
</code></pre>
<p>The file getting output as:</p>
<pre><code> "{test_0\":{ \"status\": \"false\", \"test_id\": 123453},test_1\":{ \"status\": \"false\", \"test_id\": 123453},test_2\":{ \"status\": \"false\", \"test_id\": 123453},}"
</code></pre>
<p>But ideally correct output should be as :</p>
<pre><code> {
 "test_0":
    {
     "status": "false", 
    "test_id": 123453
    },
  "test_1":
    { 
     "status": "false",
     "test_id": 123453
    },
  "test_2":
    { 
      "status": "false",
     "test_id": 123453
    }
}
</code></pre>
<p>So the output which is coming has "\" how do i remove them all. Its always appearing inside the file, have tried using strip too but not worth. Help!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Do you try to re-make json.dump?
Normally, json.dump do that work.</p>
<pre><code>import json
import sys

out = {}
i = 0

for i in range(3):
    out["test_"+str(i)] = { "status": "false", "test_id": 123453 }
    i = i + 1

json.dump(out, sys.stdout, indent = 4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The json module in <em>build</em> to dump pyhton data structure into suitable json code.</p>
<p>You provided it with a string - and it dumped it as it would be correct for a string. It masked each inner <code>"</code> by placing it as <code>\"</code> into your file so that when you read the file and json.load() it, it recreates the exact python string you gave it.</p>
<p>Bottom line: dont build strings of data, build the data and let <code>json</code> do its job:</p>
<pre><code>import json
d =  {'test_0': {'status': 'false', 'test_id': 123453}, 
      'test_1': {'status': 'false', 'test_id': 123453}, 
      'test_2': {'status': 'false', 'test_id': 123453}}

with open('data.json', 'w') as outfile:
    json.dump(d,outfile, indent=4)   # use indent to pretty print


with open('data.json', 'r') as outfile:
    print("")
    print(outfile.read())
</code></pre>
<p>Output:</p>
<pre><code>{
    "test_0": {
        "status": "false",
        "test_id": 123453
    },
    "test_1": {
        "status": "false",
        "test_id": 123453
    },
    "test_2": {
        "status": "false",
        "test_id": 123453
    }
}
</code></pre>
<p>Doku: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">https://docs.python.org/3/library/json.html</a></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12943819/how-to-prettyprint-a-json-file">How to prettyprint a JSON file?</a></span>
<span class="comment-copy">If you want a JSON object, not a JSON string, then why are you passing a <i>string</i> to <code>json.dump</code> instead of the corresponding data python data type (a <code>dict</code>)?</span>
