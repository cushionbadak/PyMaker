<div class="post-text" itemprop="text">
<p>For some reason my code refuses to convert to uppercase and I cant figure out why. Im trying to then write the dictionary to a file with the uppercase dictionary values being inputted into a sort of template file. </p>
<pre><code>#!/usr/bin/env python3
import fileinput
from collections import Counter


#take every word from a file and put into dictionary
newDict = {}
dict2 = {}
with open('words.txt', 'r') as f:
        for line in f:
            k,v = line.strip().split(' ')
            newDict[k.strip()] = v.strip()
print(newDict)
choice = input('Enter 1 for all uppercase keys or 2 for all lowercase, 3 for capitalized case or 0 for unchanged \n')
print("Your choice was " + choice)

if choice == 1:
    for k,v in newDict.items():
        newDict.update({k.upper(): v.upper()})
if choice == 2:
    for k,v in newDict.items():
        dict2.update({k.lower(): v})


#find keys and replace with word

print(newDict)
with open("tester.txt", "rt") as fin:
    with open("outwords.txt", "wt") as fout:
        for line in fin:
            fout.write(line.replace('{PETNAME}', str(newDict['PETNAME:'])))
            fout.write(line.replace('{ACTIVITY}', str(newDict['ACTIVITY:'])))

myfile = open("outwords.txt")
txt = myfile.read()
print(txt)
myfile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python 3 you cannot do that:</p>
<pre><code>for k,v in newDict.items():
    newDict.update({k.upper(): v.upper()})
</code></pre>
<p>because it changes the dictionary while iterating over it and python doesn't allow that (not with python 2 because <code>items()</code> returns a <em>copy</em> of the elements). Besides, even if it worked, it would keep the old keys (also: it's very slow to create a dictionary at each iteration...)</p>
<p>Instead, rebuild your dict in a dict comprehension:</p>
<pre><code>newDict = {k.upper():v.upper() for k,v in newDict.items()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should not change dictionary items as you iterate over them. The <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">docs</a> state:</p>
<blockquote>
<p>Iterating views while adding or deleting entries in the dictionary may
  raise a <code>RuntimeError</code> or fail to iterate over all entries.</p>
</blockquote>
<p>One way to update your dictionary as required is to pop values and reassign in a <code>for</code> loop. For example:</p>
<pre><code>d = {'abc': 'xyz', 'def': 'uvw', 'ghi': 'rst'}

for k, v in d.items():
    d[k.upper()] = d.pop(k).upper()

print(d)

{'ABC': 'XYZ', 'DEF': 'UVW', 'GHI': 'RST'}
</code></pre>
<p>An alternative is a dictionary comprehension, as <a href="https://stackoverflow.com/a/50004357/9209546">shown by @Jean-Fran√ßoisFabre</a>.</p>
</div>
<span class="comment-copy">let me guess: you're getting "dictionary changes during iteration" ?</span>
<span class="comment-copy">Please include a proper <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> and your attempts at debugging.</span>
