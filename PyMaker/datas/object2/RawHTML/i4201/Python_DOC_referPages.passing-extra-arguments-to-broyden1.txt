<div class="post-text" itemprop="text">
<p>Im trying to execute scipy <a href="https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.broyden1.html" rel="nofollow noreferrer">broyden1</a> function with extra parameters (called "data" in the example), here is the code:</p>
<pre><code>data = [radar_wavelen, satpos, satvel, ellipsoid_semimajor_axis, ellipsoid_semiminor_axis, srange]
target_xyz = broyden1(Pixlinexyx_2Bsolved, start_xyz, args=data)

def Pixlinexyx_2Bsolved(target, *data):
    radar_wavelen, satpos, satvel, ellipsoid_semimajor_axis, ellipsoid_semiminor_axis, srange = data

    print target
    print radar_wavelen, satpos, satvel, ellipsoid_semimajor_axis, ellipsoid_semiminor_axis, srange
</code></pre>
<p><strong>Pixlinexyx_2Bsolved</strong> is the function whose root I want to find.</p>
<p><strong>start_xyz</strong> is initial guess of the solution:</p>
<pre><code>start_xyz = [4543557.208584103, 1097477.4119051248, 4176990.636060918]
</code></pre>
<p>And <strong>data</strong> is this list containing a lot of numbers, that will be used inside the <strong>Pixlinexyx_2Bsolved</strong> function:</p>
<pre><code>data = [0.056666, [5147114.2523595653, 1584731.770061729, 4715875.3525346108], [5162.8213179936156, -365.24378919717839, -5497.6237250296626], 6378144.0430000005, 6356758.789000001, 850681.12442702544]
</code></pre>
<p>When I call the function broyden1 (as in the second line of example code) I get the next error:</p>
<pre><code>target_xyz = broyden1(Pixlinexyx_2Bsolved, start_xyz, args=data)
  File "&lt;string&gt;", line 5, in broyden1
TypeError: __init__() got an unexpected keyword argument 'args'
</code></pre>
<p>What I'm doing wrong?</p>
<p>Now, seeing the documentation of <a href="https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.fsolve.html" rel="nofollow noreferrer">fsolve</a>, it seems to be able to get extra args in the callable func... <a href="https://stackoverflow.com/questions/19843116/passing-arguments-to-fsolve">Here</a> is a similar question as mine.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a similar question at scipy's <a href="https://github.com/scipy/scipy/issues/3562" rel="nofollow noreferrer">issue-tracker</a> including a solution using python's <a href="https://docs.python.org/3/library/functools.html" rel="nofollow noreferrer">functools</a>-module (here: <a href="https://www.python.org/dev/peps/pep-0309/" rel="nofollow noreferrer">PEP 309 -- Partial Function Application
</a>).</p>
<p>Small example based on the above link and the original problem from the <a href="https://docs.scipy.org/doc/scipy-0.18.1/reference/optimize.nonlin.html#examples" rel="nofollow noreferrer">docs</a>:</p>
<pre><code>import numpy as np
import scipy.optimize

""" No external data """
def F(x):
   return np.cos(x) + x[::-1] - [1, 2, 3, 4]
x = scipy.optimize.broyden1(F, [1,1,1,1], f_tol=1e-14)
print(x)

""" External data """
from functools import partial
def G(data, x):
    return np.cos(x) + x[::-1] - data
data = [1,2,3,4]
G_partial = partial(G, data)
x = scipy.optimize.broyden1(G_partial, [1,1,1,1], f_tol=1e-14)
print(x)
</code></pre>
<h3>Out</h3>
<pre><code>[ 4.04674914  3.91158389  2.71791677  1.61756251]
[ 4.04674914  3.91158389  2.71791677  1.61756251]
</code></pre>
</div>
