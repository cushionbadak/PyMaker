<div class="post-text" itemprop="text">
<p>I have a txt data. it looks as follows</p>
<pre><code>time pos
0.02 1
0.1 2
 ...
</code></pre>
<p>and so on. so the each line is separated with a space. I need to convert it in to a CSV file. like </p>
<pre><code>time,pos
0.02,1
0.1,2
0.15,3
</code></pre>
<p>How can I do it with python ? This is what I have tried </p>
<pre><code>time = []
pos = []

def get_data(filename):
    with open(filename, 'r') as csvfile:
        csvFileReader = csv.reader(csvfile)
        next(csvFileReader)
        for row in csvFileReader:
            time.append((row[0].split(' ')[0]))
            pos.append((row[1]))
    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(filename) as infile, open('outfile.csv','w') as outfile: 
    for line in infile: 
        outfile.write(line.replace(' ',','))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">here</a>:</p>
<pre><code>import csv
with open(filename, newline='') as f:
    reader = csv.reader(f, delimiter=' ')
    for row in reader:
        print(row)
</code></pre>
<p>For writing just use default options and it would save file with comma as a delimiter.</p>
</div>
<div class="post-text" itemprop="text">
<p>try:</p>
<pre><code>import pandas as pd
with open(filename, 'r') as fo:
    data = fo.readlines()
    for d in range(len(data)):
        if d==0:
            column_headings = data[d].split()
        data_to_insert = data[d].split()
        pd.DataFrame(data_to_insert).to_excel('csv_file.csv', header=False, index=False, columns = column_headings))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this:</p>
<pre><code>import csv
time = []
pos = []

def get_data(filename):
    with open(filename, 'r') as csvfile:
        csvfile1 = csv.reader(csvfile, delimiter=' ')
        with open(filename.replace('.txt','.csv'), 'w') as csvfile:
            writer = csv.writer(csvfile, delimiter=',')
            for row in csvfile1:
                writer.writerow(row)
</code></pre>
</div>
<span class="comment-copy">whats the problem in your code?</span>
<span class="comment-copy">Does your file have any quoted arguments containing spaces?  If not, would it suffice to just do <code>line.replace(' ', ',')</code>?</span>
<span class="comment-copy">Thanks, more pythonic :D</span>
<span class="comment-copy">you have to append <code>\n</code> at the end of every line</span>
<span class="comment-copy">I edited my answer to include '\n'</span>
<span class="comment-copy">with your new edit <code>'_io.TextIOWrapper' object has no attribute 'writeline'</code></span>
<span class="comment-copy">I'm getting languages mixed up. It should work as it is now.</span>
<span class="comment-copy">TypeError: writelines() takes exactly one argument (0 given)</span>
<span class="comment-copy">@TheTechGuy: my bad, it should be readlines</span>
