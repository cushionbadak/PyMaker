<div class="post-text" itemprop="text">
<p>I have a nested list(the sublists will only have 2 elements), like this:</p>
<pre><code>list_1 = [[1,2],[3,2]]
</code></pre>
<p>I want to subtract the elements inside each nested list, like this should be the output:</p>
<pre><code>[-1,1]
</code></pre>
<p>To sum the numerals in the nested list, I only had to use:</p>
<pre><code>list_1 = [[1,2],[3,2]]
store = []
for x in list_1:
    store.append(sum(x))
</code></pre>
<p>but in subtracting since I couldn't any function like 'sum' for subtracting on the internet, I tried create one like this:</p>
<pre><code>list_1 = [[1,2],[3,2]]
store = []
def subtraction(z,l):
    total = z - l
    return total
for y in list_1:
    store.append(subtraction(y))
</code></pre>
<p>but it returned:</p>
<pre><code>TypeError: subtraction() missing 1 required positional argument: 'l'
</code></pre>
<p>How can I get over this error and also make my code work?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <strong>Extended Iterable Unpacking</strong> operator.</p>
<pre><code>list_1 = [[1,2],[3,2]]
store = []
def subtraction(z,l):
    total = z - l
    return total
for y in list_1:
    store.append(subtraction(*y))
</code></pre>
<p>Another way is to use <code>list comprehension</code>.</p>
<pre><code>list = [a-b for a, b in list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve this by using the list comprehension</p>
<pre><code>store = [ l1-l2 for l1, l2 in list_1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The way I would go about it is:</p>
<pre><code>list_1 = [[1,2],[3,2]]
store = []
for a, b in list_1:
    store.append(a - b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a combination of <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> and <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow noreferrer"><code>lambda</code></a>:</p>
<pre><code>list(map(lambda x: x[0] - x[1], list_1))
</code></pre>
<p><strong>Demo</strong>:</p>
<pre><code>&gt;&gt;&gt; list_1 = [[1,2],[3,2]]
&gt;&gt;&gt; list(map(lambda x: x[0] - x[1], list_1))
[-1, 1]
</code></pre>
</div>
<span class="comment-copy"><code>store.append(sum(list_1))</code>: do you mean <code>store.append(sum(x</code>))` instead?</span>
<span class="comment-copy">@Evert yes, sorry I am editing it</span>
<span class="comment-copy">Are your sublists always going to be two elements? What behaviour do you expect for less than or more than two elements?</span>
<span class="comment-copy"><code>store.append(subtraction(*y))</code></span>
<span class="comment-copy">@khelwook, yes only 2 elements</span>
