<div class="post-text" itemprop="text">
<p>I'm using python's argparse to handle parsing of arguments.
I get a default help message structured like so:</p>
<pre><code>usage: ProgramName [-h] ...

Description

positional arguments:
  ...

optional arguments:
  -h, --help            show this help message and exit
  ...
</code></pre>
<p>What I want is to add an entire new section to this message, for example:</p>
<pre><code>usage: ProgramName [-h] ...

Description

positional arguments:
  ...

optional arguments:
  -h, --help            show this help message and exit
  ...

additional information:
  This will show additional information relevant to the user.
  ....
</code></pre>
<p>Is there a way to achieve this behavior?
A solution that is supported by both python 2.7 and 3.x is preferred.</p>
<p>Edit:
I would also rather have a solution that will add the new section / sections at the bottom of the help message.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can quite do it using <a href="https://docs.python.org/3/library/argparse.html#epilog" rel="noreferrer">epilog</a>.
Here is an example below:</p>
<pre><code>import argparse
import textwrap
parser = argparse.ArgumentParser(
      prog='ProgramName',
      formatter_class=argparse.RawDescriptionHelpFormatter,
      epilog=textwrap.dedent('''\
         additional information:
             I have indented it
             exactly the way
             I want it
         '''))
parser.add_argument('--foo', nargs='?', help='foo help')
parser.add_argument('bar', nargs='+', help='bar help')
parser.print_help()
</code></pre>
<p>Result : </p>
<pre><code>usage: ProgramName [-h] [--foo [FOO]] bar [bar ...]

positional arguments:
  bar          bar help

optional arguments:
  -h, --help   show this help message and exit
  --foo [FOO]  foo help

additional information:
    I have indented it
    exactly the way
    I want it
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are multiple ways in which you can <a href="https://docs.python.org/3.6/library/argparse.html#description" rel="nofollow noreferrer">add a description</a> to your command.
The recommended way is to add a module documentation at the top of your source code file as in:</p>
<pre><code>""" This is the description, it will be accessible within the variable
    __doc__
"""
</code></pre>
<p>And then:</p>
<pre><code>parser = argparse.ArgumentParser(description=__doc__)
</code></pre>
<p>To add text below the parameter description, use epilog, as shown in the following example taken from the documentation:</p>
<pre><code>&gt;&gt;&gt; parser = argparse.ArgumentParser(description='A foo that bars',  
                                     epilog="And that's how you'd foo a bar")
&gt;&gt;&gt; parser.print_help() 

usage: argparse.py [-h]

A foo that bars

optional arguments:  -h, --help  show this help message and exit

And that's how you'd foo a bar
</code></pre>
<p>Refer to the documentation (linked above) for more information.</p>
</div>
<span class="comment-copy">Is there a way to insert it without using the description? I'm actually trying to add it at the bottom of the help message.</span>
<span class="comment-copy">Yes, if you open the documentation you'll see the "epilog" option right below the "description".</span>
<span class="comment-copy">Wonderful thank you</span>
