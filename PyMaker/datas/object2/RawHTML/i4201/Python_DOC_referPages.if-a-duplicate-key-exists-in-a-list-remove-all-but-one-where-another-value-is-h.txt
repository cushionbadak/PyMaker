<div class="post-text" itemprop="text">
<p>I'm new to python and I have a list, each item in the list has 7 values in it, I want to check if value one has duplicates and if so remove all except one but only where value 7 which is a float is highest.</p>
<p>I can't get my head around it!</p>
<pre><code>return [(pred, loc, rec, score) if rec else ("unknown", loc, False, 0) for pred, loc, rec, score in zip(knn_clf.predict(faces_encodings), X_face_locations, are_matches, scores)]
</code></pre>
<p>The values I'm checking if duplicated are pred, if pred has duplicates check the highest score and return that one of the duplicates.</p>
<p>I also don't want any of the unknowns but I'm not sure on that either...</p>
<p>Any help would be appreciated or even if my question is worded wrong and could be improved. Thanks!</p>
<p><strong>EDIT:</strong>
Below is the list that gets returned. As you can see I have multiple <code>ang_h</code> and I only want the highest scored one, (the last float value)</p>
<pre><code>[
    ('ang_h', (401, 2007, 452, 1955), True, 0.41521319721385636),
    ('ang_h', (402, 1821, 438, 1785), True, 0.6270601544247546),
    ('ang_h', (410, 1730, 454, 1687), True, 0.6368848012844088),
    ('ang_h', (418, 2128, 470, 2076), True, 0.5682838831063762),
    ('ang_h', (420, 1015, 463, 971), True, 0.5700311968313606),
    ('ant_s', (1242, 579, 1293, 527), True, 0.40298527559038316),
    ('carl_e', (377, 1941, 420, 1898), True, 0.3242641022125504)
]
</code></pre>
<p>EDIT #2:</p>
<p>Thanks to everyone for the feedback, I have learnt a lot about the language!</p>
<p>The answer is from @jpp however modified to sort by the highest scored results.</p>
<pre><code># Put each person into a group by their name in case duplicates found
grouper = groupby(sorted(lst), key=itemgetter(0))

# Get the highest scored location for each person
highest_score = [sorted(list(s), key=itemgetter(-1))[0] for _, s in grouper]

return highest_score
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe this is what you need. You can sort your list and then use <code>itertools.groupby</code>.</p>
<pre><code>from itertools import groupby
from operator import itemgetter

lst = [('ang_h', (401, 2007, 452, 1955), True, 0.41521319721385636),
       ('ang_h', (402, 1821, 438, 1785), True, 0.6270601544247546),
       ('ang_h', (410, 1730, 454, 1687), True, 0.6368848012844088),
       ('ang_h', (418, 2128, 470, 2076), True, 0.5682838831063762),
       ('ang_h', (420, 1015, 463, 971), True, 0.5700311968313606),
       ('ant_s', (1242, 579, 1293, 527), True, 0.40298527559038316),
       ('carl_e', (377, 1941, 420, 1898), True, 0.3242641022125504)]

# sort list by first item and then descending final item
sorted_lst = sorted(lst, key=lambda x: (x[0], -x[-1]))

# group by first item
grouper = groupby(sorted_lst, key=itemgetter(0))

# extract first in each group
res = [list(j)[0] for _, j in grouper]
</code></pre>
<p>Result:</p>
<pre><code>[('ang_h', (410, 1730, 454, 1687), True, 0.6368848012844088),
 ('ant_s', (1242, 579, 1293, 527), True, 0.40298527559038316),
 ('carl_e', (377, 1941, 420, 1898), True, 0.3242641022125504)]
</code></pre>
</div>
<span class="comment-copy">Can you list an example of your list that we can work with? Kind of hard to make sense of it out of the post...</span>
<span class="comment-copy">Use a dicitionary with value one as key and list entry with highest value 7 as value. For each list entry look if you had already this key and if so, if value 7 of the new entry is higher, in this case replace the dicitonary value by the newly found entry.</span>
<span class="comment-copy">You are using a pretty complex statement for someone who's new at Python. Try to divide your problem into smaller pieces to begin with as "Error in line 1" won't be of much help in locating the offending code. :)</span>
<span class="comment-copy">Thanks guys, I'm on my home machine right now, i will print out the list and update the comment once I have python installed!</span>
<span class="comment-copy"><code>list</code>s don't have keys (dictionaries do). That said, it might help to split the long <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> onto multiple lines to understand it.</span>
<span class="comment-copy">No way, thanks jpp I'll check it out and mark as best answer and thank you for the comments, makes sense!</span>
<span class="comment-copy">jpp this is great to get one item but how do I pull the highest scored result. As you can see the ang we got is 1687 but there is a 2076, would I just instead of pulling the first one do a map?</span>
<span class="comment-copy">You could set <code>key=lambda x: -x[-2][-1]</code> or something similar.</span>
