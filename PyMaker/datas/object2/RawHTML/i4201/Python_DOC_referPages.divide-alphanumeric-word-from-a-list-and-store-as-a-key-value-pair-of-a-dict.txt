<div class="post-text" itemprop="text">
<p>I have a list of alphanumeric data,   </p>
<pre><code>my_list = ["A1B2244", "B3H7654", "A1O6541", "J4777"]
</code></pre>
<p>I need to divide each word in dict form like  </p>
<pre><code>{"A1": ["B2244", "O6541"], "B3": ["H7654"], "J4": ["777"]}
</code></pre>
<p>Could you please let me know the easiest way to do this in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group the elements of your list based on your condition(first two characters). Then supply the result to <code>dict</code> constructor</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; dict([(k,list(g)) for k,g in groupby(sorted(k),key=lambda x: x[:2])])
&gt;&gt;&gt; {'J4': ['J4777'], 'A1': ['A1B2244', 'A1O6541'], 'B3': ['B3H7654']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list = ['A1B2244', 'B3H7654', 'A1O6541', 'J4777']
#first initialize lists based 2 first elements
d= {i[:2]:[] for i in list}
#loop to add items by key
[d.get(i[:2]).append(i[2:]) for i in list]
print(d)
</code></pre>
<p>output:</p>
<pre><code>{'A1': ['B2244', 'O6541'], 'J4': ['777'], 'B3': ['H7654']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>my_list = ['A1B2244', 'B3H7654', 'A1O6541', 'J4777']
my_dict={i[:2]:i[2:] for i in my_list}
</code></pre>
<p>Edit:
Sorry I didn't notice the replication in your output. Others have short solutions, but a pure pythonic way is:</p>
<pre><code>my_list = ['A1B2244', 'B3H7654', 'A1O6541', 'J4777']
my_dict={}
for i in my_list:
    if i[:2] in my_dict:
        my_dict[i[:2]].append(i[2:])
    else:
        my_dict[i[:2]]=[i[2:]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to add to the first answer by Willian Vieira, I thought it would be helpful to know the output <code>print(d)</code> right after <code>d= {i[:2]:[] for i in list}</code>, which is:</p>
<pre><code>{'A1': [], 'B3': [], 'J4': []}
</code></pre>
<p>just to clarify this line in the two-line solution. Just to see how the keys are made from taking the first two characters in each element of the list (without duplication of these characters), and the values are initialized as empty lists. </p>
</div>
<div class="post-text" itemprop="text">
<p>As per your comment to the question, rule to split is: split after the first digit. So, you can search for the index of the first digit, split and add to the dict. I ignored an input with no digits. </p>
<pre><code>def first_index_of_digit(st):
    for i in range(len(st)):
        if st[i].isdigit():
            return i
    return -1

my_list = ["A1B2244", "B3H7654", "A1O6541", "J4777"]

dd = dict()

for item in my_list:
    i = first_index_of_digit(item)
    if (i == -1):
        continue
    k, v = item[:i+1], item[i+1:]

    if (dd.get(k, 0) == 0):
        dd[k] = list()
    dd[k].append(v)

print(dd)
# {'A1': ['B2244', 'O6541'], 'B3': ['H7654'], 'J4': ['777']}
</code></pre>
</div>
<span class="comment-copy">That isn't valid Python. Where are the missing quotes? Do you have a list of strings, or a string representation of a list, orâ€¦?</span>
<span class="comment-copy">Also, what's the rule you're using for "word"? First two characters? Split before the second letter? Split after the first digit? Split before the first letter after a digit? Something different?</span>
<span class="comment-copy">Split after the first digit</span>
