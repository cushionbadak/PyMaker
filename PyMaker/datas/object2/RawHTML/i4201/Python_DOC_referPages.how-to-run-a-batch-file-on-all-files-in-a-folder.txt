<div class="post-text" itemprop="text">
<p>I have a python script that I use to parse my xml files one by one, I run it with a batch file on windows CMD. My <code>script.py</code> is like that:</p>
<pre><code>from lxml import etree as ET
import pandas as pd
import numpy as np

#Read one xml file of Dedcoded directory
tree = ET.parse('C:/Users/sky/Documents/title_file.xml')
root = tree.getroot()

CODE = [ ]
for errors in root.findall('.//Data/Record/Field[11]/BitField'):
    error = errors.find('Name').text
    error_code = errors.find('RawValue').text
    if error_code is not None:
        CODE.append(error_code)

dftest = pd.DataFrame(CODE, columns=['Error_Code'])

dftest['I_F_Name'] = root.find('./Header/InitialFileName').text
dftest['AC_prog'] = root.find('./Header/ACProgram').text
dftest['Standard'] = root.find('./Header/Standard').text

dftest.to_csv('sh_test.csv', mode='w', header=True, index=False)
</code></pre>
<p>It works perfectly for a single xml file, but I have a lots of xml files and I want to process them one by one automatically. For that I add a <code>for loop</code> in my <code>file.bat</code> and when I run it on CMD, it processes several time the same file which is given in <code>script.py</code>. There is my batch script: </p>
<pre><code>@echo of
for /R C:/Users/sky/Documents %%f in (*.xml) do C:\ProgramData\Anaconda2\python.exe C:/Users/sky/Documents/script.py %*
pause
</code></pre>
<p>I don't know what should I modify in my <code>script.py</code> or <code>file.bat</code> to process all my file one by one? </p>
<p>Any ideas?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You should remove the static xml file in the python code by the argument the .bat file is sending.</p>
<p>Example</p>
<pre><code>import sys
# ...
tree = ET.parse(sys.argv[1])
# ...
</code></pre>
<p>You'd also need to change you bat file:</p>
<pre><code>@echo of
for %%f in (C:\Users\sky\Documents\*.xml) do C:\ProgramData\Anaconda2\python.exe C:/Users/sky/Documents/script.py %%f
pause
</code></pre>
</div>
<span class="comment-copy">you can use <code>os.walk()</code> in your python instead of looping in the bat file</span>
<span class="comment-copy">You should modify your <code>script.py</code> to accept a file or directory input parameter, <i>(which can be passed as necessary from a batch file or the command line)</i></span>
<span class="comment-copy">@Compo what should I modify in my <code>script.py</code>?</span>
<span class="comment-copy">@anishtain4 could you give an example plz?</span>
<span class="comment-copy">Could you please explain why?</span>
<span class="comment-copy">@Pau Franco, Thanks it works perfectly, just at the end of <code>file.bat</code> you forgot a <code>%</code> for <code>%ff</code>.</span>
<span class="comment-copy">@KamiKaze, <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow noreferrer">sys.argv</a> stores the list of command line arguments passed to a Python script.</span>
<span class="comment-copy">I added the missing <code>%</code> to the answer. Hope that it's well this time.</span>
<span class="comment-copy">@M-M, I don't have experience working with panda, but you should check if the CSV exists:     <code>if os.path.isfile('sh_test.csv'):         dftest.to_csv('sh_test.csv', mode='w', header=True, index=False)     else:         dftest.to_csv('sh_test.csv', mode='w', header=False, index=False)</code>  I don't know if <code>to_csv</code> overwrites the files, it should work if it appends to the file.</span>
