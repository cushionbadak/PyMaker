<div class="post-text" itemprop="text">
<p>As we all know Python can be used to parse Twitter data from Tweepy. I'm teaching myself some Python, but I'm struggling in some parts of the program. I'm able to collect data and let Python write that data to <code>.txt</code> files, but letting Python filter that raw data is another thing.</p>
<p>One new thing I'd like to learn is to attach hashtags to certain rows, but the hashtags are encoded in entities in the <code>.json</code> file. (Edit: example file removed, answer given below should be enough.)</p>
<p>Edit: I deleted the sloppy code I made, since it was not helpful nor do I want that here for several reasons. It is also not needed for the anser given below, which perfectly explains how to extract hashtags!</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on the JSON in your edited answer, this code will collect the hashtags for a single tweet.</p>
<pre><code>import json

# Parse the JSON file.
tweet = json.load(open("so.json"))

# Collect the distinct hashtags for the tweet.
collected_hashtags = []

# Loop over the hashtags list in the entities object.
for hashtag in tweet.get("entities", {}).get("hashtags", []):
    collected_hashtags.append(hashtag.get("text"))

# Print the collected hashtags, join with a comma.
print(",".join(collected_hashtags))
</code></pre>
<p>Output:</p>
<pre><code>**UCL**
</code></pre>
<p>My code uses <code>dict.get</code>, check out the documentation: <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#dict.get</a></p>
<p><strong>Edit:</strong> Your code (with some small improvements) using the hastags logic from above:</p>
<pre><code>import codecs
import json

with open("so.json") as f:
    with codecs.open('output3.csv', 'w', "utf-8") as g:
        tweets = f.readlines()
        for line in tweets:
            if (len(line)&lt;=10):
                continue

            tweet_json = json.loads(line)
            created_at = tweet_json.get("created_at", "")
            # more fields ...
            text = tweet_json["text"]
            text.replace('\n','').replace('\r','').replace('\t','')

            # Collect the distinct hashtags for the tweet.
            collected_hashtags = []
            for hashtag in tweet_json.get("entities", {}).get("hashtags", []):
                collected_hashtags.append(hashtag.get("text"))

            # some fields remove for brevity
            g.write("\t".join([created_at, text, ",".join(collected_hashtags)]) + "\n")
</code></pre>
</div>
<span class="comment-copy">Does <code>tweet_json</code> contain the hash tags?</span>
<span class="comment-copy">Consider this example to minimize code: <code>tweet_json.get("created_at", "Creation date unkown")</code></span>
<span class="comment-copy">Can you please <a href="https://stackoverflow.com/posts/50121380/edit">edit</a> your question and include a small sample of the JSON (as text) that includes the hash tags for a post? Then we could help you in getting them from the parsed JSON.</span>
<span class="comment-copy">@LutzHorn I edited the original post :). Thanks for bearing with me so far, this task is really daunting for me and I was happy to be able to get so far already. Hope the edit was what you meant, if not, sorry and I'll try again :)</span>
<span class="comment-copy">Thanks a lot already Lutz Horn! I plussed your comment. If I may ask for one more favor: how can I weave that piece of code inside the code I posted so that it adds a column in the .csv file with the output(s)? In other words: I kind of understand what your code does, but I am not smart enough to make it useful for my own code myself. Like can I just plug it right in ('cause the code I posted is literally all I do use).</span>
<span class="comment-copy">Hang on, busy coding just for you ... Does <code>Assignment_2_data.json</code> contain the JSON of a tweet per line?</span>
<span class="comment-copy">Here you go, have fun.</span>
<span class="comment-copy">You are the absolute best!</span>
<span class="comment-copy">Just keep on using Python, that will be my whole reward :)</span>
