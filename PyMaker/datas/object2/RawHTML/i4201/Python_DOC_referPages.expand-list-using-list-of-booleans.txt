<div class="post-text" itemprop="text">
<p>I have a list with N elements and a list of booleans with N Trues</p>
<pre><code>a = [10,200]
ind = [False, True, False, True, False]
</code></pre>
<p>i would like to place the elements of <strong>a</strong> into a list <strong>b</strong> using <strong>ind</strong> as index, which result in</p>
<pre><code>b = [0, 10, 0, 200, 0]
</code></pre>
<p>Is there a way to do so in an efficient and easily-readable way?</p>
<p>The best way I could achieve this is doing</p>
<pre><code>positions = [i for (i,test) in zip(range(len(i)),i) if test]
for i in range(len(positions)):
    b[position[i]] = a[i] 
</code></pre>
<p>but that looks a bit overcomplicated to me</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you have <code>N</code> elements, and <code>N</code> <code>True</code>'s in your list, using an iterator works great here.  You can use the <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter()</code></a> function to convert your list to an iterator.</p>
<pre><code>a = iter([10,200])
ind = [False, True, False, True, False]
</code></pre>
<p>Now you can get your desired result using a simple list comprehension.  This list comprehension will replace <code>True</code> with the next value in your iterator, and will replace <code>False</code> with 0:</p>
<pre><code>final = [next(a) if i else 0 for i in ind]
</code></pre>
<p>Which results in:</p>
<pre><code>[0, 10, 0, 200, 0]
</code></pre>
<p>Calling <code>next(a)</code> will keep grabbing values from your iterator at which point it will raise a <code>StopIteration</code> exception.  However, since you have an equal number of elements and <code>True</code>'s, this exception will not occur.</p>
</div>
<span class="comment-copy">I'm a beginner in python and still not too familiar with the slicing process. I found a couple of ways to do it with a for cycle and generating a couple of temporary variables, but that looks overcomplicated to me.  And I don't understand why this question is down-voted? Too trivial?</span>
<span class="comment-copy">It's downvoted because you have made no effort.  It's awesome that you're learning python, but <i>since</i> you are trying to learn you should make an attempt on your own before you ask questions here, and include that attempt in your question to show others that you have tried.  If you edit your attempts in your question, it's actually a pretty interesting problem that people would be happy to answer.</span>
<span class="comment-copy">@LucaAmerio  You get downvotes because you have not shown what you have tried, although the code you have does not work the same you have to place it but we assume that you want us to do your work, read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and <a href="http://idownvotedbecau.se/noattempt/" rel="nofollow noreferrer">idownvotedbecau.se/noattempt</a>.</span>
<span class="comment-copy">@LucaAmerio  In SO nobody tries to insult you, asking you to show what you have tried does not imply that. Here we work with what they propose, it is better that you learn from your mistakes, that enriches the question and improves the answers. You can have n-years with a language but it does not imply that you are good with another. So we recommend that you show your intent when necessary, and read the links that we have shown you so you can better understand how SO works.  It is easier for you to adapt to the community, for the community to adapt to you. :D</span>
<span class="comment-copy">If you want to do something "easily-readable", which is a good idea, <i>don't use booleans as integers</i>, ever. It is true that <code>1 == True</code> and <code>0 == False</code>, but write your code as if that was not true. If you want indexes, use 1 and 0.</span>
