<div class="post-text" itemprop="text">
<p>So I have a dictionary with index keys looks like :</p>
<p>'00' : 'Value1'</p>
<p>'01' : 'value2'</p>
<p>.....</p>
<p>'99' : 'value 100'</p>
<p>Im trying to get all possible combinations of key-value by using this :</p>
<pre><code>        for i in range(2, 7):
        for x in combinations(sorted(KEY_DICT.keys()), i):
            code = ''
            value = ''
            for k in x:
                code += k
                value += f'{KEY_DICT[k]}, '
            dic = {code: value}
            comb_dict_list.append(dic)
            pprint(comb_dict_list)
</code></pre>
<p>But there is a problem, it's creating duplicates like </p>
<p>0199</p>
<p>9901</p>
<p>But I need only unique values, skiping strings like in example above, how can I do this ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not have a problem, <code>itertools.combinations()</code> produces combinations that are unique <em>in any ordereding</em>, exactly as you already wanted. From the <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each combination.</p>
</blockquote>
<p>and the source code example given:</p>
<pre><code># combinations('ABCD', 2) --&gt; AB AC AD BC BD CD
</code></pre>
<p>Note that there is no <code>BA</code>, because <code>AB</code> is already generated.</p>
<p>Concretely, for your example:</p>
<pre><code>&gt;&gt;&gt; from itertools import combinations
&gt;&gt;&gt; [''.join(combo) for combo in combinations(['01', '99'], 2)]
['0199']
</code></pre>
<p>Only <code>'0199'</code> is produced, <code>'9901'</code> will never be produced.</p>
<p>As a side note, you don't need to call <code>dict.keys()</code> when sorting keys. <code>sorted(KEY_DICT)</code> will do just fine, as iteration over the dictionary produces keys too.</p>
</div>
<span class="comment-copy">No, <code>combinations</code> won't produce <code>9901</code>. Ever. Not unless you have duplicate <code>01</code> or <code>99</code> entries.</span>
<span class="comment-copy">What is <code>k</code> in the code above?</span>
<span class="comment-copy">Thank you  for explanation )</span>
