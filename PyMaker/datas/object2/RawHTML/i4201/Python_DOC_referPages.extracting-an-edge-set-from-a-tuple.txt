<div class="post-text" itemprop="text">
<p>I have created the following program. It takes an input G, which consists of the vertices of a graph, along with the edges and the corresponding edge weights. The aim of  the program is to extract just the edges</p>
<pre><code>def edges(G):     
    E =[]     
    for i in G[1]:         
        E.append(i[0])     
    return E  
print (edges(G))
</code></pre>
<p>On the following input</p>
<pre><code>G = [({'a', 'b'}, 4), ({'a', 'c'}, 6), ({'a', 'd'}, 8), ({'b', 'e'}, 1) ,
      ({'b', 'f'}, 9), ({'c', 'f'}, 3), ({'d', 'g'}, 7), ({'d', 'h'}, 0)]
</code></pre>
<p>The following output is produced:</p>
<pre><code>[{'a', 'b'}, {'a', 'c'}, {'a', 'd'}, {'e', 'b'}, {'f', 'b'}, {'f', 'c'}, {'g', 'd'}, {'h', 'd'}]
</code></pre>
<p>The output I am trying to get is:</p>
<pre><code>[{'a', 'b'}, {'a', 'c'}, {'a', 'd'}, {'b', 'e'}, {'b', 'f'}, {'c', 'f'}, {'d', 'g'}, {'d', 'h'}]
</code></pre>
<p>Can anyone explain why the tuples I have extracted are reordered?</p>
</div>
<div class="post-text" itemprop="text">
<p>A <code>set</code> is an <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">unordered collection</a>. What you are requesting is not possible.</p>
<p>The best you can do is use an ordered collection, such as <code>list</code> or <code>tuple</code>. Below is an example.</p>
<pre><code>res = [tuple(sorted(x[0])) for x in G]

print(res)

[('a', 'b'), ('a', 'c'), ('a', 'd'), ('b', 'e'),
 ('b', 'f'), ('c', 'f'), ('d', 'g'), ('d', 'h')]
</code></pre>
<hr/>
<p>This is also possible functionally, but messy since Python has no native function composition. For composition, you can use 3rd party library <a href="http://toolz.readthedocs.io/en/latest/index.html" rel="nofollow noreferrer"><code>toolz</code></a>.</p>
<pre><code>from operator import itemgetter
from toolz import compose

res = list(map(compose(tuple, sorted, itemgetter(0)), G))
</code></pre>
</div>
<span class="comment-copy">Well, these are not tuples. You have a lists of sets, which are unordered collections.</span>
<span class="comment-copy">list(zip(*G))[0].. in case you want a 1 liner</span>
<span class="comment-copy"><code>compose</code> is pretty rad. Thanks for showing me.</span>
<span class="comment-copy">@timgeb, Yes, IMO should be part of the standard library. It has benefits (e.g. parsing docstrings, etc) which would be messy to implement yourself.</span>
