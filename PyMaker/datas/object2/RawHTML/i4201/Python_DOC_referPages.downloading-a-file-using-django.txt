<div class="post-text" itemprop="text">
<p>I'm trying to enable the downloading of previously uploaded files in Django, here's the code I'm using so far:</p>
<pre><code>def downloadview(request):
    path=os.path.join('media', 'files', '5560026113', '20180412231515.jpg' )
    response = HttpResponse()
    response['Content-Type']=''
    response['Content-Disposition'] = "attachment; filename='Testname'"
    response['X-Sendfile']=smart_str(os.path.join(path))
    return response
</code></pre>
<p>The inspiration for this trial comes from <a href="https://stackoverflow.com/questions/32704177/letting-user-download-a-file-django">this thread</a> but I don't get it working. An empty txt file is downloaded instead of the image that is stored on the server.
In this trial code the exact filename and extension is hard coded in the path variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a way you can serve a file through Django (although it is usually not a good approach, the better one is to serve files with a webserver like nginx etc - for performance reasons):</p>
<pre><code>from mimetypes import guess_type
from django.http import HttpResponse

file_path=os.path.join('media', 'files', '5560026113', '20180412231515.jpg' )

with open(file_path, 'rb') as f:
    response = HttpResponse(f, content_type=guess_type(file_path)[0])
    response['Content-Length'] = len(response.content)
    return response
</code></pre>
<p><code>guess_type</code> infers the content_type from the file extension.
<a href="https://docs.python.org/3/library/mimetypes.html" rel="nofollow noreferrer">https://docs.python.org/3/library/mimetypes.html</a></p>
<p>more on HttpResponse here: <a href="https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpResponse" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpResponse</a></p>
<p>And here is why it is not recommended to serve files through Django, although not recommended just means that you should probably understand what you are doing:
<a href="https://docs.djangoproject.com/en/2.0/howto/static-files/deployment/" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.0/howto/static-files/deployment/</a></p>
</div>
<span class="comment-copy">Thanks, is there a way not to specify content type? The files could be in different types than just jpg.</span>
<span class="comment-copy">@MarcusGrass, I updated the answer, added the automatical inference of the content type. It is optional, but if you don't Django will just shove in the default encoding from your project's settings (often text content type), so it's better to specify it if possible, although nothing will break most of the time, because most of modern browsers can handle such things... but sometimes they can not.</span>
<span class="comment-copy">Sorry for the late acceptance of your response, It's really bad form. It works in that it opens the correct file but in browser, automatically downloading it to file then redirecting, is that a possibility? (The redirecting I can manage, just making it download to disk instead of diplaying in browser).</span>
<span class="comment-copy">Never mind, I fixed it by adding content disposition and x-file!</span>
