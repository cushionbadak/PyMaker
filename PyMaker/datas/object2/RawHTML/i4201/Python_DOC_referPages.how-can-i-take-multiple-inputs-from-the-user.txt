<div class="post-text" itemprop="text">
<p>I'm trying to create a program where python will take multiple inputs to calculate the average of the input but it doesn't work though I search a lot but my problem differs from the rest as I use class.
my code is as:</p>
<pre><code> class my_class(object):
        def __init__(self, number1, number2, number3):
            self.number1 = number1
            self.number2 = number2
            self.number3 = number3

        def defAvrg(self):  # get the defAvrg of three numbers
            return  (self.number1 + self.number2 + self.number3)/3
            #resulin = resulted / 3
            #return resulted
   my_class2 = my_class([float(input("Enter number %s: "%i)) for i in range(3)])
   print(my_class2.defAvrg())
</code></pre>
<p>Objective:
I want to take three input to find the average.</p>
</div>
<div class="post-text" itemprop="text">
<p>Such a solution works for me.</p>
<pre><code>numbers = list()
for i in range(0, 3):
    inputNr = int(input("Enter a number: "))
    if(inputNr == -99):
        break

    numbers.append(inputNr)

#Then we take all of the numbers and calculate the sum and avg on them
sum = 0
for j, val in enumerate(numbers):
    sum += val

print("The total sum is: " + str(sum))
print("The avg is: " + str(sum / len(numbers)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>__init__()</code> method for your class requires 3 positional parameters (in addition to <code>self</code>) but your code passes only one - a list of the numbers entered by the user. You need to pass each of those numbers as a separate argument. You can use the <code>*</code> operator to unpack the items in the list and pass these as separate arguments:</p>
<pre><code>my_class2 = my_class(*[float(input("Enter number %s: "%i)) for i in range(3)])
</code></pre>
<p>That will solve the immediate problem, however, it would be more flexible if your class accepted a list of the numbers, binding that to an attribute of the object. Your average method would then calculate the average using the list, or it could simply use <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer"><code>statistics.mean()</code></a>:</p>
<pre><code>from statistics import mean

class my_class(object):
    def __init__(self, numbers):
        self.numbers = numbers

    def defAvrg(self):
        return mean(self.numbers)
</code></pre>
<p>The advantage of this approach is that you can collect an arbitrary number of values from the user.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can call your Script with: <code>scriptname n*&lt;param^n&gt;</code>
So for You it would be <code>python script.py number1 number2 number3</code></p>
<p>You can access them in Python with <code>sys.argv[1-3]</code>, <code>sys.argv[0]</code> is always the Script Name</p>
</div>
<div class="post-text" itemprop="text">
<p>You are passing a list as a single argument, you need to expand the list, to unpack the list you can use * </p>
<pre><code>myClass(*list())
</code></pre>
</div>
<span class="comment-copy">So what's the problem you're facing?</span>
<span class="comment-copy">Does this code <i>really</i> have to be in a class? I don't think this is an appropriate use of classes. Why not just store the numbers in a list instead of 3 separate attributes? And make the <code>defAvrg</code> method a normal function that takes a list of numbers as input?</span>
<span class="comment-copy">@Aran-Fey: Good point, and use <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer"><code>statistics.mean()</code></a> instead of writing any function.</span>
<span class="comment-copy">There are a few problems with this answer Only works with integers. What if user actually wanted to enter <code>-99</code>? Use of <code>enumerate()</code> is unnecessary. Hand written for loop to sum the numbers in a list when <code>sum()</code> could be used etc. etc.</span>
<span class="comment-copy">Instead of giving minus can you provide a better solution please, We all try to learn. minus is unnecessary...</span>
<span class="comment-copy">I downvoted your answer which, for the reasons listed in my previous comment, I think is poor. I see that you are new here, and it's great that you took the time to post an answer, but this is how SO works. Voting is the way in which the community collectively ranks answers, and this assists future readers that might have a similar problem to find the best solution. BTW I had already posted a solution (I think better) in my earlier answer.</span>
<span class="comment-copy">Thank you very much. As I am newbie I am sometimes banned from asking questions due to downgrade that is why I wished not to be downgraded. I see the logic behind downgrade now. best regards.</span>
<span class="comment-copy">@Aran-Fey: I didn't look for duplicates. If you've seen some then you could vote to close. Also I wanted to add some more advice, which I have now done.</span>
<span class="comment-copy">I noticed you expanded your answer, so I removed my earlier comment since it now gives advice that a duplicate wouldn't. I guess I commented too soon.</span>
<span class="comment-copy">Thanks... I am trying to learn people, why do you give mines?</span>
<span class="comment-copy">@BarishAhsen: what "mines" am I giving you?</span>
