<div class="post-text" itemprop="text">
<p>Given the following three functions:</p>
<pre><code>def return_arg( *arg ):
    return arg[0]

def an_expression( x, y, **kwargs ):
    return x*x + y*y

def sub_function( x, y, F ): 
       return x + y + F(**locals())
</code></pre>
<p>I can call the following <code>sub_function( 1, 2, an_expression )</code> to obtain <code>8</code>.</p>
<p>I can also call:</p>
<pre><code>T = 5
return_arg(T)
</code></pre>
<p>How can I call </p>
<pre><code>sub_function( 1, 2, return_arg)
</code></pre>
<p>in the case that I want to have <code>return_arg(T)</code>? </p>
</div>
<div class="post-text" itemprop="text">
<p>Another option is to pass args and/or kwargs to your callback evaluator</p>
<pre><code>def sub_function( x, y, F, *args, **kwargs): 
       return x + y + F(*args, **kwargs)
</code></pre>
<p>Then you can call it however you want, e.g., </p>
<pre><code>sub_function( 1, 2, return_arg, 5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure I understood fully your question, but I think what you need is <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer">partial function</a>:</p>
<pre><code>from functools import partial
my_partial = partial(return_arg, T)
sub_function( 1, 2, my_partial)
</code></pre>
</div>
<span class="comment-copy">Can you clarify what you expect ? maybe aprecise example of the behavior wanted.</span>
<span class="comment-copy">It's not obvious what you want to do with <code>**locals()</code>.  Are you trying to do something like collecting the locals from the calling scope?</span>
<span class="comment-copy">This performs the job brilliantly, many thanks!! :)</span>
<span class="comment-copy">thank you for your answer, this works great! I decided to go with RishiG's answer, as it doesn't import another library. :)</span>
<span class="comment-copy">It's in the Python standard library! ;)</span>
