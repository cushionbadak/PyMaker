<div class="post-text" itemprop="text">
<p>I want to know how <code>__future__</code> imports interact with <a href="https://docs.python.org/3/library/functions.html#eval" rel="noreferrer"><code>eval</code></a> and <a href="https://docs.python.org/3/library/functions.html#exec" rel="noreferrer"><code>exec</code></a> (and <a href="https://docs.python.org/3/library/functions.html#compile" rel="noreferrer"><code>compile</code></a>, I guess).</p>
<p>Experimentation (with python 2) shows that module-level <code>__future__</code> imports do have an effect on code executed by <code>eval</code> and <code>exec</code>:</p>
<pre><code>from __future__ import print_function

print(1, end='!\n')
eval(r"print(2, end='!\n')")
exec r"print(3, end='!\n')"
</code></pre>
<p>Output:</p>
<pre><code>1!
2!
3!
</code></pre>
<p>But at the same time, code executed with <code>exec</code> can perform its own <code>__future__</code> imports that only affect the code locally:</p>
<pre><code>print 1
exec r"from __future__ import print_function; print(2, end='!\n')"
print 3
exec r"print 4"
</code></pre>
<p>Output:</p>
<pre><code>1
2!
3
4
</code></pre>
<p>But experimentation can only get you so far. My questions are:</p>
<ul>
<li>Are these interactions well-defined and documented?</li>
<li>Is there a way to <em>disable</em> module-level <code>__future__</code> imports in <code>eval</code>, <code>exec</code> and <code>compile</code>?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Per <a href="https://docs.python.org/3/reference/simple_stmts.html#future-statements" rel="nofollow noreferrer">the language reference</a>:</p>
<blockquote>
<p>Code compiled by calls to the built-in functions <code>exec()</code> and <code>compile()</code>
  that occur in a module <code>M</code> containing a future statement will, by
  default, use the new syntax or semantics associated with the future
  statement.</p>
</blockquote>
<p>You can disable this behaviour in <a href="https://docs.python.org/3/library/functions.html#compile" rel="nofollow noreferrer"><code>compile</code></a>:</p>
<blockquote>
<p>The optional arguments <em>flags</em> and <em>dont_inherit</em> control which future
  statements (see <a href="https://www.python.org/dev/peps/pep-0236" rel="nofollow noreferrer">PEP 236</a>) affect the compilation of <em>source</em>.</p>
</blockquote>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; from __future__ import print_function
&gt;&gt;&gt; print('foo', 'bar')
foo bar
&gt;&gt;&gt; code1 = compile("print('foo', 'bar')", "&lt;string&gt;", "exec")
&gt;&gt;&gt; exec(code1)
foo bar
&gt;&gt;&gt; code2 = compile("print('foo', 'bar')", "&lt;string&gt;", "exec", dont_inherit=True)
&gt;&gt;&gt; exec(code2)
('foo', 'bar')
</code></pre>
<p>The other way around, disabling the usage of <code>__future__</code> imports in arbitrary code being executed/compiled, is not possible as far as I'm aware.</p>
</div>
<span class="comment-copy">There's some discussion of this on the Python mailing list: <a href="https://mail.python.org/pipermail/python-dev/2016-October/146573.html" rel="nofollow noreferrer">mail.python.org/pipermail/python-dev/2016-October/146573.html</a></span>
<span class="comment-copy">I'm not sure what you mean with <i>"disabling the usage of <code>__future__</code> imports in arbitrary code being executed/compiled, is not possible"</i>. Are you talking about preventing <code>exec</code> from executing its own <code>__future__</code> imports? Or are you saying that it's not possible to disable module-level <code>__future__</code> imports in <code>exec</code> without manually compiling the code with <code>compile</code> first?</span>
<span class="comment-copy">@Aran-Fey I was saying that you can't prevent code being executed or compiled from executing its own <code>__future__</code> imports, but it is <b>also</b> not possible to disable those module-level imports in <code>exec</code>!</span>
