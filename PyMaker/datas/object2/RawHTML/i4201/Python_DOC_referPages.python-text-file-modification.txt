<div class="post-text" itemprop="text">
<p>I am trying to write a Python parser for modifying text inside the square brackets 
e.g. if the text file contains</p>
<pre><code>    Original File contents : [ city is beautiful]
    Modified File contents : [ The city is beautiful]

    Original File contents : [ 123,456]
    Modified File contents : [ &lt;mystring&gt;,123,456]

    : [&lt;oldtext&gt;] should become : [&lt;newtag&gt;,&lt;oldtext&gt;]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a combination of the <a href="https://docs.python.org/3.6/library/fileinput.html" rel="nofollow noreferrer"><code>fileinput</code></a> and <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> modules.</p>
<ul>
<li><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>fileinput.input</code></a> will be used for in-place file editing</li>
<li><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re.match</code></a> and <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>match.group</code></a> will be used for capturing the text inside the brackets</li>
</ul>
<p>Here's the code (I've placed the comments inline):</p>
<pre><code>def modify_text_inside_brackets(file_name, tag):
    with fileinput.input(files=(file_name), inplace=True) as text_file:
        for line in text_file:
            # split the line into groups
            matches = re.match(r"(.*)(\[.*\])(.*)", line)
            if matches:
                # get the text inside the brackets
                #   group(0): the entire matching line
                #   group(1): everything before the opening [
                #   group(2): [ .. ]
                #   group(3): everything after the closing ]
                text_inside_brackets = matches.group(2)[1:-1]
                # create a new [..] string with the prepended tag
                modified_text = "[{},{}]".format(tag, text_inside_brackets.strip())
                # replace the original [..] with the modified [..]
                modified_line = line.replace(matches.group(2), modified_text)
                # print out the modified line to the file
                print(modified_line, end="")
            else:
                print(line, end="")


modify_text_inside_brackets("input.txt", "TAG")
</code></pre>
<p>Given this "input.txt":</p>
<pre><code>[ 123,456]
[ city is beautiful]
This text has no brackets and should be unchanged.
It can also [ handle lines with inline] brackets.
</code></pre>
<p>The code will modify it like this:</p>
<pre><code>[TAG,123,456]
[TAG,city is beautiful]
This text has no brackets and should be unchanged.
It can also [TAG,handle lines with inline] brackets.
</code></pre>
<p>Notes:</p>
<ul>
<li><code>fileinput.input</code> with <code>inplace=True</code> redirects the <code>print</code> output to the file</li>
<li>It's a unclear what <code>&lt;mystring&gt;</code> and <code>&lt;newtag&gt;</code> is from your question, so I just used <code>TAG</code>. </li>
<li>Modify <code>"[{},{}]".format(tag, text_inside_brackets.strip())</code> based on the output format you need. For example, in your question, the spaces after <code>[</code> and before <code>]</code> are imbalanced and inconsistent in your examples, so add or <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip()</code></a> spaces as needed.</li>
<li>You can check/test the regex itself from <a href="https://regexr.com/3oqmn" rel="nofollow noreferrer">this demo</a>.</li>
<li>I passed <code>end=""</code> to <code>print</code> because by default <code>print</code> adds a newline.</li>
</ul>
</div>
<span class="comment-copy">You will probably get answers around splitting the string <code>'[ city is beautiful ]'</code> if that is all you show. Probably best to show a little more surrounding context so that potential answerers understand what kind of text needs to be matched vs. what is to be skipped.</span>
<span class="comment-copy">Hi Paul, All I am interested in is playing around square brackets opening  "[" and closing "]". I want to modify the contents appearing between [ and ].</span>
<span class="comment-copy">What is the criteria for matching "<i>city is beautiful</i>" and prepending it with "The"? Is it in its own line? Are you looking for a parser that basically prepends "The" to ALL text inside <code>[ ] </code>? Why "The"? If there is a line in the file that contains "[123]" should be replaced with "[The 123]"? These are the kinds of context you need to include in your question.</span>
