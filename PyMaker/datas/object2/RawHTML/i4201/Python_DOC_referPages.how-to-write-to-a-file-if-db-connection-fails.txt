<div class="post-text" itemprop="text">
<p>I have the below Python script and it works very well, but I would like to introduce some fail safe options .. That fail safe options being .. </p>
<p>1) if I cannot find (in this example) Michael I would like to write to the file ERROR .. </p>
<p>2) If the database does not allow me to connect for whatever reason I would like to write to another file CONNECTION_ERROR</p>
<p>Here is my script:</p>
<pre><code>#! /usr/bin/python

import pymssql

import sys
sys.path.insert(0, '/opt/mount/safe')
from secrets import password

conn = pymssql.connect(
server="server",
port=port,
user="user",
password=password,
database="database")
conn

cursor = conn.cursor()
cursor.execute("SELECT name, address FROM database WHERE name = 'michael'")
with open('safe/file.txt', 'w') as f:
     for row in cursor.fetchall():
        print ( "Person " + (row[0])),
        print ( "has this address " + (row[1]))
        f.write(str( "Person " + (row[0])))
        f.write("%s\n" % str( " has this address " + (row[1])))
conn.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Took me a while but the below works really really well</p>
<pre><code>import sys, pymssql, string, os, calendar, datetime, traceback, socket, platform

try:
        d = datetime.datetime.now()
        log = open("LogFile.txt","a")
        log.write("----------------------------" + "\n")
        log.write("----------------------------" + "\n")
        log.write("Log: " + str(d) + "\n")
        log.write("\n")
# Start process...
        starttime = datetime.datetime.now()
        log.write("Begin process:\n")
        log.write("     Process started at "
        + str(starttime) + "\n")
        log.write("\n")

xxxxxx 

CODE HERE

XXXXXX



        endtime = datetime.datetime.now()
# Process Completed...
        log.write("     Completed successfully in "
        + str(endtime - starttime) + "\n")
        log.write("\n")
        log.close()
except:
        tb = sys.exc_info()[2]
        tbinfo = traceback.format_tb(tb)[0]
# Concatenate information together concerning
# the error into a message string
        pymsg = "PYTHON ERRORS:\nTraceback info:\n" + tbinfo + "\nError Info:\n" + str(sys.exc_info())
# Return python error messages for use in
# script tool or Python Window
        log.write("" + pymsg + "\n")
        log.close()
</code></pre>
</div>
<span class="comment-copy">It'll be tough to get an answer to this question unless you (a) try it yourself first and let folks see what's NOT working or (b) ask a specific question.  For now, I would add a few <a href="http://www.pythonforbeginners.com/error-handling/python-try-and-except" rel="nofollow noreferrer">Try/Catch blocks</a> to this code -- so you can catch errors and write them to file as needed</span>
<span class="comment-copy">It sounds like you want to implement <a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">logging</a>. That page includes links to a couple of tutorials.</span>
