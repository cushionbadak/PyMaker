<div class="post-text" itemprop="text">
<p>Is there a python built-in for iterating over some variables?
Something like:</p>
<pre class="lang-py prettyprint-override"><code>def iterate_args(*args):
    for arg in args:
        yield arg
</code></pre>
<p>It would be useful for instance in the following case:</p>
<pre class="lang-py prettyprint-override"><code>x, y, z = ...
for var in iterate_args(x,y,z):
    do_something(var)
</code></pre>
<p>Instead of allocating a list, which looks wasteful (is it?):</p>
<pre class="lang-py prettyprint-override"><code>x, y, z = ...
for var in [x,y,z]:
    do_something(var)
</code></pre>
<p>Haven't been able to find anything among python <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer" title="built-ins">built-ins</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Any such built-in would be much more expensive than creating a tuple, and would in fact <em>involve</em> creating a tuple for <code>args</code>. Just make a tuple.</p>
<p>In the specific case where <code>x</code>, <code>y</code>, and <code>z</code> are initialized like your example:</p>
<pre><code>x, y, z = ...
</code></pre>
<p>you can just iterate over whatever you unpacked instead of unpacking it.</p>
</div>
<span class="comment-copy">There's no such function, and function calls are inherently more wasteful than a list/tuple creation</span>
<span class="comment-copy">The function call would allocate a tuple regardless.</span>
<span class="comment-copy">using <code>for var in (x,y,z)</code> would be the "built-in".</span>
<span class="comment-copy">yes well let's say i didn't wanna waste space in the exaples by writing those variables in separate lines... i didn't know the *args would be packed into a tuple, in that case there really can't be anything faster that that</span>
