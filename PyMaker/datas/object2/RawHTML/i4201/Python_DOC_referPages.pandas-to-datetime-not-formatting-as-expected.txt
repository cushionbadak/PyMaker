<div class="post-text" itemprop="text">
<p>I have a data frame with a column 'Date' with data type datetime64. The values are in YYYY-MM-DD format. 
How can I convert it to YYYY-MM format and use it as a datetime64 object itself.
I tried converting my datetime object to a string in YYYY-MM format and then back to datetime object in YYYY-MM format but it didn't work.</p>
<p>Original data = 1988-01-01.</p>
<p>Converting datatime object to string in YY-MM format</p>
<pre><code>df['Date']=df['Date'].dt.strftime('%Y-%m')
</code></pre>
<p>This worked as expected, my column value became</p>
<p>1988-01  </p>
<p>Converting the string back to datetime object in Y-m format</p>
<pre><code>df['Date']=pd.to_datetime(df['Date'],format= '%Y-%m')
</code></pre>
<p>I was expecting the Date column in YYYY-MM format but it became YYYY-MM-DD format. </p>
<p>1988-01-01  </p>
<p>Can you please let me know if I am missing something.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>It is <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime" rel="nofollow noreferrer">expected behaviour</a>, in datetimes the year, month and day arguments are required.</p>
<p>If want remove <code>days</code> need month period by <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.to_period.html" rel="nofollow noreferrer"><code>to_period</code></a>:</p>
<pre><code>df['Date'] = df['Date'].dt.to_period('M')
</code></pre>
<hr/>
<pre><code>df['Date'] = pd.to_datetime(df['Date'],format= '%Y-%m').dt.to_period('M')
</code></pre>
<p>Sample:</p>
<pre><code>df = pd.DataFrame({'Date':pd.to_datetime(['1988-01-01','1999-01-15'])})
print (df)
        Date
0 1988-01-01
1 1999-01-15

df['Date'] = df['Date'].dt.to_period('M')
print (df)
     Date
0 1988-01
1 1999-01
</code></pre>
</div>
