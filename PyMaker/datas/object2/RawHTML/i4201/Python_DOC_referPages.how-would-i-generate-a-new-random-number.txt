<div class="post-text" itemprop="text">
<pre><code>import random
guess = '0'
while (guess) != 'exit':
    answer = random.randrange(1,100)
    answer = str(answer)
    guess = input('Enter a number between 1 and 100 or enter exit to exit: ')
    if not guess.isdigit(): 
        if guess == "exit":
            print('Game closed')
            break
        else:
            print('Your guess was not a digit, try again')
    guess = (guess)
    if guess == answer:
        print('Correct')
    elif guess &gt; answer :
        print('Too high, try again')
    elif guess &lt; answer :
        print('Too low, try again')
</code></pre>
<p>how would i get this to generate a new random number after you guess the correct answer</p>
</div>
<div class="post-text" itemprop="text">
<p>The main problem here is that you do actually generate a new number each time, even if the guess was wrong. Instead you should generate the first random number outside of the loop, and only generate a new random number if the guess was correct:</p>
<pre><code>import random
guess = '0'
answer = random.randrange(1, 100)
while (guess) != 'exit':
    answer = str(answer)
    guess = input('Enter a number between 1 and 100 or enter exit to exit: ')
    if not guess.isdigit(): 
        if guess == "exit":
            print('Game closed')
            break
        else:
            print('Your guess was not a digit, try again')
    guess = (guess)
    if guess == answer:
        print('Correct')
        answer = random.randrange(1, 100) #make new random number if guess is correct
    elif guess &gt; answer :
        print('Too high, try again')
    elif guess &lt; answer :
        print('Too low, try again')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure I understand your comment correctly. You can use random.randint(a,b) to get integer, not decimal number. </p>
<p>(<a href="https://docs.python.org/3/library/random.html#random.randint" rel="nofollow noreferrer">https://docs.python.org/3/library/random.html#random.randint</a>)</p>
<pre><code>import random
guess = '0'
answer = random.randint(1, 100)
while (guess) != 'exit':
    answer = str(answer)
    guess = input('Enter a number between 1 and 100 or enter exit to exit: ')
    if not guess.isdigit(): 
        if guess == "exit":
            print('Game closed')
            break
        else:
            print('Your guess was not a digit, try again')
    guess = (guess)
    if guess == answer:
        print('Correct')
        answer = random.randint(1, 100) #make new random number if guess is correct
    elif guess &gt; answer :
        print('Too high, try again')
    elif guess &lt; answer :
        print('Too low, try again')
</code></pre>
</div>
<span class="comment-copy">Your code does generate a new random number each time...</span>
<span class="comment-copy">Try entering 50 each time you will get conflicting high/low responses</span>
<span class="comment-copy">ive also got another problem not sure if you can help sometimes i will say 20 it will say too low then if i put 21 it will say too high and i can spam it so i dont think its generating a new number with this code im thinking it generates something like 20.5 not sure if thats true or not but if you could help that would be great</span>
<span class="comment-copy">Could you add some more information? I can't reproduce the error with the code I have above.</span>
<span class="comment-copy">The code is definitely generating a new integer between 1 and 100 only when you got an answer correct. Could you check if you have this code exactly?</span>
<span class="comment-copy">its been solved but thank you so much for the help</span>
<span class="comment-copy">This worked thank you</span>
<span class="comment-copy">wait randrange(1, 100) should be equivalent to randint(1, 99)</span>
<span class="comment-copy">from the docs: randint(a, b) is an alias for randrange(a, b+1).</span>
<span class="comment-copy">the only difference is that randint is inclusive of 100, randrange is not. randrange shouldn't be outputting decimals.</span>
<span class="comment-copy">@Primusa Yes, you're right. randrange() is not generated any decimal numbers. My bad. I am not sure how this helps to fix the issue. I also fix my answer. Thanks for the clarification!</span>
