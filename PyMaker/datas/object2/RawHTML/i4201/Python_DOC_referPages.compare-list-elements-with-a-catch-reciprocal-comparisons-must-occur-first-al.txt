<div class="post-text" itemprop="text">
<p>I am writing a script in Jython/Python for image analysis (using ImageJ). My goal is to compare the images to eachother...</p>
<p>(<strong>edit for clarity:</strong> Each element in the list must be compared to every other element, but self-comparisons are not allowed.)</p>
<p>...but I have some specific requirements. These requirements are based on the fact that I'm using a predefined plugin.</p>
<p>For example:</p>
<pre><code>imagefiles = ["A", "B", "C"]
</code></pre>
<p>First: order matters.  <code>"A"</code> vs <code>"B"</code> is different than <code>"B"</code> vs. <code>"A"</code>.</p>
<p>Second: the list is of variable size, based on user input. In this example, the user has input 3 files: <code>A,B,C</code>, but the code needs to accomodate instances where the number of elements does not equal three. </p>
<p>Third: self-comparison is not allowed. Ie: <code>"A"</code> vs. <code>"A"</code> cannot occur. </p>
<p>Fourth: I would like the comparisons be reciprocated before moving onto the next element. For example: </p>
<p><code>"A" vs "B"</code> then <code>"B" vs "A"</code> rather than <code>"A" vs "B"</code> then <code>"A" vs "C"</code></p>
<p>Fifth: I ultimately need to access the elements in the form of a string (requirement due to calling user-defined variables into a preexisting plugin).</p>
<p>For clarity, the comparisons that must be made are:</p>
<pre><code>"A" vs "B"
"B" vs "A"
"A" vs "C"
"C" vs "A"
"B" vs "C"
"C" vs "B"
</code></pre>
<p>I'm able to produce a code that does everything except the <strong>FOURTH</strong> requirement...that is reciprocal comparisons first.  But I'm really stuck on how to make the the order of comparisons what I want. Here's the current working snipped, that does <em>not</em> meet my <strong>4th</strong> requirement.</p>
<pre><code>from ij import IJ  #using Jython scripting in the ImageJ program

imagefiles = ["A", "B", "C"]

for index, imgs in enumerate(imagefiles):
    for s, secondimage in enumerate(imagefiles):
        if s != index:
            IJ.run("PluginFE", "element1="+imgs+" element2="+secondimage) #this calls the plugin (PluginFE) within the ImageJ program)
</code></pre>
<p>I'm trying to think about how to accomplish the comparison order requirement...and coming up with something like this:</p>
<pre><code>for imgs in imagefiles:
    for index in range(len(imagefiles)):
      if index &lt; len(imagefiles):
        IJ.run("PluginFE", "element1="+imgs+"element2="+imagefiles[index+1])
</code></pre>
<p>but this fails with the error </p>
<blockquote>
<p>IndexError: index out of range: 3</p>
</blockquote>
<p>I understand the error,and the problem...I just can't figure out how to work around.  I'm still pretty new to coding, so I may be missing an obvious python function!  </p>
<p>Thanks for any input</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>for index, imgs in enumerate(imagefiles[:-1]):
    for secondimage in imagefiles[index+1:]:
        IJ.run("PluginFE", "element1="+imgs+" element2="+secondimage)
        IJ.run("PluginFE", "element1="+secondimage+" element2="+imgs)
</code></pre>
<p>Starting the inner loop from the next element after the one in the outer loop ensures that each pair is only processed once, and <code>imgs</code> will always be the earlier one. Then it calls <code>IJ.run()</code> with the images in the two orders, first with <code>imgs vs secondimage</code>, then <code>secondimage vs imgs</code>.</p>
<p>I think you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> as well:</p>
<pre><code>import itertools
for imgs, secondimage in itertools.combinationa(imagefiles, 2):
    IJ.run("PluginFE", "element1="+imgs+" element2="+secondimage)
    IJ.run("PluginFE", "element1="+secondimage+" element2="+imgs)
</code></pre>
</div>
<span class="comment-copy">Have you considered recursion as a way to solve this?  Sometimes just plain iteration won't solve the issue.  Also, can you edit to be far more specific about what you are comparing to what?  Are you saying that you are comparing every item to every other item in a specific order, excluding self comparisons?</span>
<span class="comment-copy">Did not consider recursion...didn't know about it till just now! And I'll edit the post (your assumption is correct)</span>
<span class="comment-copy"><code>pairwise</code> in the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">Itertools Recipes</a></span>
<span class="comment-copy">@Barmar -This still throws the error:   ` for secondimage in imagefiles[index+1]: IndexError: index out of range: 3`.   Is there a way to add a condition in the second for loop that ends the entire loop once index+1 =3?</span>
<span class="comment-copy">@wwii -- pairwise doesn't look to use the correct order, ie: (1) A vs B (2) B vs A. Instead it does: (1) A vs B (2) A vs C. Is there another function in itertools that would be useful?</span>
<span class="comment-copy">I've updated the outer loop to stop before the last element.</span>
<span class="comment-copy">@wwii <code>pairwise</code> doesn't get all pairs, just all the adjacent pairs. If there are 4 elements, it won't do A vs D.</span>
