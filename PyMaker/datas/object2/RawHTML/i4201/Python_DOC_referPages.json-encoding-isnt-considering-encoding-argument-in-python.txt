<div class="post-text" itemprop="text">
<p>Trying to encode a json file using the utf catalog (utf-8-sig), with this code</p>
<pre><code>data =json.load(open("data.json", encoding = "utf-8-sig"))
</code></pre>
<p>But it appears that the encoding argument is being ignored throwing this error</p>
<pre><code>    Traceback (most recent call last):
  File "app1.py", line 11, in &lt;module&gt;
    print(k,v)
UnicodeEncodeError: 'ascii' codec can't encode character '\xb0' in position 141: ordinal not in
range(128)
</code></pre>
<p>Edit: the datatype of the file data.json is <code>&lt;class '_io.TextIOWrapper'&gt;</code>, and here's the full stack:</p>
<pre><code>import json
data =json.load(open("data.json", encoding = "utf-8-sig"))
for k,v in data.items():
    print(k,v)
</code></pre>
<p>Edit2:Binary sample of the file using <code>print(open("data.json"), "rb").read(180)</code></p>
<blockquote>
<p>b'{"abandoned industrial site": ["Site that cannot be used for any
  purpose, being contaminated b y pollutants."], "abandoned vehicle":
  ["A vehicle that has been discarded in the envir'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>As @tdelaney pointed out in comments, you are looking the wrong problem:</p>
<p>The error in not on <code>open</code>, nor in <code>json.read</code>, not in the <code>data.items()</code> iteractor, so it is not a <strong>decoding</strong> problem, between <code>utf-8-sig</code> and unicode string.</p>
<p>But the problem is in <code>print</code>. The problem is <strong>encoding</strong>, so it means that the error is between unicode string in python and a resulting <em>binary</em> encoding. In this case, the unicode string is converted into <code>ascii</code>, but ascii cannot represent all original characters.</p>
<p>There are two solutions:</p>
<ul>
<li><p>you can allow your terminal to accept UTF-8 characters. This could by done by setting e.g. <code>LANG=C.UTF-8</code> (supported only on few systems) or <code>LANG=en_US.UTF-8</code> or other locales (check on your system what locales support UTF-8).</p></li>
<li><p>you force print to print only ascii, as proposed by @tdelaney <code>print(k.encode('ascii', 'replace'), v.encode('ascii', 'replace'))</code>. You may want to change <code>replace</code> with <code>backslashreplace</code> or <code>ignore</code>. (see <a href="https://docs.python.org/3/library/codecs.html#codec-base-classes" rel="nofollow noreferrer">https://docs.python.org/3/library/codecs.html#codec-base-classes</a>).</p></li>
</ul>
<p>There are also hybrid solution (but not really safe and portable on all systems) (like forcing python to output in a particular encoding), and many hacks, but it will make your code complex, so I do not recommend it (and you should wrap them in a new function).</p>
</div>
<span class="comment-copy">Are you sure that's the failing line? Can you post the full stack trace?</span>
<span class="comment-copy">@tdelaney, just posted now the full stack and the data type for when I open "data.json"</span>
<span class="comment-copy">Try testing just the read: <code>tmp = open("data.json", encoding = "utf-8-sig").read(256)</code>. Also it would be interesting to post a binary sample of the file (perhaps <code>print(open("data.json"), "rb").read(180)</code>)</span>
<span class="comment-copy">If the problem was loading the data, it would be a <code>decode</code> error. What is <code>sys.stdout.encoding</code> ? Just trying to figure out where the encoding (as opposed to decoding) is happening and why its ascii.</span>
<span class="comment-copy">That's your problem. You can't print non-ascii data on an ascii terminal. You could do the decode yourself and substitute ? for unknown charse.</span>
