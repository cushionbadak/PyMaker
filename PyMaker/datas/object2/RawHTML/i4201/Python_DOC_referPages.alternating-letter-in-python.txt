<div class="post-text" itemprop="text">
<pre><code>def myfunc(word):
    result = ""
    index = 0
    for letter in word:
        if index % 2 == 0:
            result += letter.lower()
        else:
            result += letter.upper()
    return result
    index +=1
</code></pre>
<p>I am trying to return a matching string where every even letter is uppercase and every odd letter is lowercase. But the code doesn't show this exact result, any solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're only incrementing <code>index</code> <em>after</em> the loop, rather than each time through it. So, inside the loop, it's always 0. The smallest fix is:</p>
<pre><code>def myfunc(word):
    result = ""
    index = 0
    for letter in word:
        if index % 2 == 0:
            result += letter.lower()
        else:
            result += letter.upper()
        index += 1
    return result
</code></pre>
<p>But this kind of mistake is very easy to make (and sometimes not as easy as this to debug)—which is exactly why Python has nice tools like <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>, that make it impossible to get wrong:</p>
<pre><code>def myfunc(word):
    result = ""
    for index, letter in enumerate(word):
        if index % 2 == 0:
            result += letter.lower()
        else:
            result += letter.upper()
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>People, <a href="https://stackoverflow.com/questions/50049309/alternating-letter-in-pyhton#comment87114737_50049309">including myself</a>, have already pointed out your programming error. Here is an alternative one-liner solution to your problem using a generator expression and a <a href="https://stackoverflow.com/a/394814/5858851">ternary conditional operator</a>:</p>
<pre><code>def myfunc(word):
    return "".join(w.upper() if i%2 else w.lower() for i,w in enumerate(word))
</code></pre>
<p><code>enumerate</code> will return a tuple of the form <code>(index, value)</code> for each item in the iterable. In this case, the iterable is the string <code>word</code>.</p>
<p>At each step in the iteration, we check to see if the index <code>i</code> is odd. </p>
<ul>
<li><code>i%2</code> will return <code>0</code> for even numbers and the <code>if</code> statement will evaluate to <code>False</code>. </li>
<li>Likewise, it will evaluate to <code>True</code> for odd numbers. </li>
</ul>
<p>Respectively, we call <code>lower()</code> and <code>upper()</code> on the current character <code>w</code>.</p>
<p>Finally we use <code>str.join</code> to concatenate all the individual letters back together. Here we join the characters using an <code>""</code> with is the empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem was with how you were incrementing. You only set up your index to increment inside the "Else" block of your code. It was missing from the "If" block. As such as soon as you entered the "If" block you would be stuck there.     </p>
<pre><code>def myfunc(string):
        result = ""
        index = 0 
        for letter in string:
            if index % 2 == 0:
                result += letter.upper()
                index += 1
            else:
                result += letter.lower()
                index += 1
        return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def myfunc(word):
    index = 0
    result = ''

    for letter in word:
        if index % 2 == 0:
            result += letter.lower()
        else:
            result += letter.upper()
        index += 1
    print result
</code></pre>
<p>You weren't increment your index in the correct spot ;)</p>
<p>If you execute <code>myfunc(word)</code> it will print <code>hElLo</code></p>
</div>
<span class="comment-copy">What do you mean by 'doesn't shows exact result'?</span>
<span class="comment-copy">You have to increment <code>index</code> <i>inside</i> the loop. Move it up one line and indent it.</span>
<span class="comment-copy">See also: <a href="https://stackoverflow.com/questions/36247173/python-alternate-uppercase-and-lowercase-in-a-string" title="python alternate uppercase and lowercase in a string">stackoverflow.com/questions/36247173/…</a></span>
