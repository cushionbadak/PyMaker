<div class="post-text" itemprop="text">
<p>I'm trying to get threading to work with a Socket network to accept clients. I had that working fine, but now I have discovered an issue.</p>
<p>Here is the code:</p>
<pre><code>clients = []

def myFunction():    #Not too relevant I think
    server.listen(0)
    conn, addr = server.accept()
    print(conn)
    clients.append(conn, addr)
    threading.Thread(myFunction)

threading.Thread(myFunction)
input("Hit enter to finish...")
print(clients)
</code></pre>
<p>Now this should return something like this, which it does on all the IDEs I have tried (PyCharm, Sublime text editor, etc.):</p>
<pre><code>Hit enter to finish...
*2 users connect*
192.168.0.5 # this is the contents of conn
192.168.0.12
*hit enter*
192.168.0.5, 192.168.0.12
</code></pre>
<p>However, in Python's own IDLE, the threading seems unable to print anything until I press Enter, with the exact same code, like so:</p>
<pre><code>Hit enter to finish...
*2 users connect*
*hit enter*
192.168.0.5
192.168.0.12
192.168.0.5, 192.168.0.12
</code></pre>
<p>This isn't what I want because my code will run in Python IDLE once its finished, so it needs to work here because of this. </p>
<p>TLDR:<br/>
Code runs differently in Python IDLE than in other IDEs, with the exact same code. See the above code examples.</p>
</div>
<div class="post-text" itemprop="text">
<p>As IDLE's name implies, it is primarily a development (and learning) environment.  It is aimed especially at beginners.  Use for running finished code is at best secondary, and is usually not an advantage.</p>
<p>The IDLE <a href="https://docs.python.org/3/library/idle.html" rel="nofollow noreferrer">Doc chapter</a>, which can be viewed in IDLE itself with Help =&gt; IDLE Help, has a subsection (3.3) IDLE-console differences.  It begins</p>
<blockquote>
<p>With rare exceptions, the result of executing Python code with IDLE is intended to be the same as executing the same code in a console window. However, the different interface and operation occasionally affect visible results.</p>
</blockquote>
<p>The big difference in operation is that your code is executed in a separate Python process, with standard input and output going through a socket connection.   This means that all stdout output from your program goes through IDLE code, which inserts it in a tk Text widget, rather than being sent directly to the OS screen manager.</p>
<p>In the case of input(), IDLE stops displaying output until after the the user hits return.  (This is true even with an empty prompt.) I consider this an improvement over having output splattered in the middle of user input.  Your code cannot run as is, but the following does.</p>
<p>import threading, time</p>
<pre><code>def myFunction():
    time.sleep(1)
    print('Interruption from thread')

thread = threading.Thread(target=myFunction)
thread.start()
s =input("Hit enter to finish...")
print(s)
</code></pre>
<p>In IDLE 3.7.0b3 on Win10, I see something like</p>
<pre><code>Hit enter to finish...skjfsjflsjfljsflsfjls
Interruption from threadskjfsjflsjfljsflsfjls
</code></pre>
<p>(I don't know why the '\n' after 'thread' is suppressed.)
In Command Prompt I see</p>
<pre><code>Hit enter to finish...ksjfkjsInterruption from thread
fjsfjsfkjsfljksfjkfs
ksjfkjsfjsfjsfkjsfljksfjkfs
</code></pre>
<p>The same issue occurs when inputting code after <code>&gt;&gt;&gt;</code>:.  Change my code to</p>
<pre><code>import threading, time

def myFunction():
    time.sleep(2)
    print('Interruption from thread')

thread = threading.Thread(target=myFunction)
thread.start()
</code></pre>
<p>With IDLE:</p>
<pre><code>&gt;&gt;&gt; Interruption from thread
if a = 3:
</code></pre>
<p>In Command Prompt entering the same header with the same timing:</p>
<pre><code>C:\Users\Terry&gt;python -i -m a.tem
&gt;&gt;&gt; if aInterruption from thread
 = 3
</code></pre>
<p>If I better understood the relevant IDLE code, I would have the interrupt line inserted on a line before the prompt.  I might also do the same during input().  Fortunately, output from threads or async tasks is not common, especially for beginners.</p>
</div>
<span class="comment-copy">I don't thing it is possible to do anything about that.</span>
<span class="comment-copy">If you run the code from the command line, does the code function correctly ?</span>
<span class="comment-copy">Megalng - Apparently it is unless there is something else I'm missing.</span>
<span class="comment-copy">nerak99 - You may have helped there, as it does work perfectly on the command line, instead of through IDLE. Now I know I this, I can probably live with the issue as it won't affect the final outcome, but I'm intrigued by why this happens.</span>
