<div class="post-text" itemprop="text">
<p>I have an HTML form which receives date-time and stores it in a Django model. How can I compare this date-time with python's in build date time to check if there are equal?For example, a date-time receives from the template might look like this (Jan. 1, 2018, 1 a.m.), how can I write a script which will be able to compare html_time and python date time
I have tried the following and it returns False</p>
<pre><code>import datetime

def compare_time(time_now, html_time):
    if time_now == html_time:
        return True 
    else:
        return False

html_time = 'april. 26, 2018, 1 a.m.'
time_now = datetime.datetime.ctime(datetime.datetime.now())

print(compare_time(time_now,html_time))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, your data must be consistent, in the question you put your date format like "Jan. 1, 2018, 1 a.m." and in your code you put it like "april. 26, 2018, 1 a.m.", its two different date format. I'll assume the question one.</p>
<p>You can do something like this</p>
<pre><code>from datetime import datetime
now = datetime.now()
date = datetime.strptime("Jan. 1, 2018, 1 am", "%b. %d, %Y, %I %p")
</code></pre>
<p>Now you can do comparison between the two dates.</p>
<p>To see how to format your date specifically you can see this <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">here</a></p>
<p>The dots between a.m. are a bit trick though</p>
</div>
<span class="comment-copy">Thanks a lot Marcelo Lino considering the fact that html datetimes are stored in the database the format may vary from person to person     if i enter a time like this it will fail date = datetime.strptime("June 1, 2020, 8:30 a.m.", "%b. %d, %Y, %I %p")  with the error ValueError: time data 'April 25, 2018, 1:10 am' does not match format '%b. %d, %Y, %I %p'</span>
<span class="comment-copy">Is there a way to do formating that will apply in any case</span>
<span class="comment-copy">You'll have to normalize your data our force a common input on your users. It's a bit tricky, but is possible. Is hardy to me say anything not knowing how discrepant is from one date to another.</span>
