<div class="post-text" itemprop="text">
<p>I have a file that is made of lines of the following format:-</p>
<pre><code>[123, something, some other thing, "text that i want", more details]
</code></pre>
<p>eg:-</p>
<pre><code>[1393349463, u'Tue Feb 25 17:31:03 +0000 2014', 438365537261735936, u'A Falcon character poster for Captain America: The Winter Soldier has swooped in', [], [u'totalfilm'], [u'//1bJdCJ2'], [u'http://pbs.twimg.com/media/BhViUNICQAAoBue.jpg'], 369, 362]
</code></pre>
<p>Now i want to read this as list directly into python instead of a string first and then spliting the string by , and joining it back and all because the text section can have a ',' and I dont want to split that.</p>
<p>I am looking for something like this:</p>
<pre><code>with open("input.txt") as fp:
   for line in fp:
       corpus.append(line[3]) #read only text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your input is obviously generated by calling just <code>print</code>ing out Python lists (or calling <code>str</code> or <code>repr</code> on them).</p>
<p>This particular example can be handled by using <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>literal_eval</code></a>:</p>
<pre><code>with open("input.txt") as fp:
    for line in fp:
        obj = ast.literal_eval(line)
        corpus.append(obj[3])
</code></pre>
<p>However, that won't work for all Python list displays in general. And when it doesn't work… well, there's not much you can do in general. But you can just <code>literal_eval</code> until you get an error, and then, for each error, laboriously work out how to pre-process things to work around it.</p>
<p>The <em>right</em> thing to do is generate output that's actually parseable, like JSON, and then you can just parse it trivially.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3277503/in-python-how-do-i-read-a-file-line-by-line-into-a-list">In Python, how do I read a file line-by-line into a list?</a></span>
<span class="comment-copy">Did you create this file in the first place? If so, the right thing to do is to fix the way you create this file—use some format that's meant to be stored as text and then parsed back in, like JSON.</span>
<span class="comment-copy">No I didn't and I don't have the control over this input.</span>
<span class="comment-copy">If this is part of a homework assignment, or a job, you should at least make sure your teacher or boss or whoever recognizes that they've given you a task that should have been trivial, but is instead painful and brittle, purely because someone else is using Python <code>repr</code> as a persistence format, which is a terrible idea and easy to fix at the source.</span>
<span class="comment-copy">@Mulliganaceous That question's answer won't work, unless you can guarantee that none of the strings have any commas, or backslash-escaped backslashes or quotes or special characters. (Plus, you'd still need a way to remove the <code>u'…'</code> around each string.)</span>
<span class="comment-copy">what is ast here?</span>
<span class="comment-copy">@DivyangVashi It's the module that <code>literal_eval</code> is in. Click the link in the question to see its docs. The <code>ast</code> module is designed for parsing Python code. The reason` literal_eval` is buried there is that it uses the <code>ast</code> module to parse the input as Python source—and to discourage people from using <code>repr</code> and <code>literal_eval</code> as a persistence method, because that would be an attractive nuisance (it's a terrible idea, but it might <i>seem</i> like a good idea at first…).</span>
