<div class="post-text" itemprop="text">
<p>I need to identify a "episodeNumber" based on folder name in a file adress. the name containt the 2 letters "ep" followed by 3 numbers, from "001" to "999"</p>
<p>example path :</p>
<pre><code>N://out/ep001/FX/maya/file4984.ma
</code></pre>
<p>i'm looking for a way to have a variable that result the episode number (ep001 in this example)</p>
<pre><code>print(episodeNumber)
'ep001'
</code></pre>
<p>then i can put the "episodeNumber" in an other adress, like </p>
<pre><code>newPath = "Y://work/" + episodeNumber + "/comp/"
print(newPath)
'Y://work/ep001/comp/'
</code></pre>
<p>How can I identify the episode number in a path to put it in an other one ? </p>
<p>I'm using python 2.7</p>
<p>thank you </p>
</div>
<div class="post-text" itemprop="text">
<p>I find regex powerful but less readable, especially if you haven't used it in a while, so here's a solution without it using other native modules.</p>
<pre><code>import os
import fnmatch


def get_episode(path):
    # Split the path (should be OS independent).
    path_split = os.path.normpath(path).split(os.sep)

    # Find the episode using fnmatch.
    # This enforces your conventions that it must follow 3 numbers after 'ep'.
    episodes = fnmatch.filter(path_split, "ep[0-9][0-9][0-9]")
    if not episodes:
        raise RuntimeError, "Unable to detect episode in the supplied path."

    # In theory the path may yield multiple episodes from it, so just return the first one.
    return episodes[0]


episode = get_episode("N://out/ep001/FX/maya/file4984.ma")

# Use os.path.join to build your new path. 
new_path = os.path.join(os.path.normpath("Y://"), "work", episode, "comp")
</code></pre>
<p>This example produces this result:</p>
<blockquote>
<p>'ep001' # episode </p>
<p>'Y:\work\ep001\comp' # new_path (I'm on Windows so I get double
  backslashes)</p>
</blockquote>
<p>It's better to use <code>os.path</code> methods to make it work cross-platform instead of using <code>+</code> to build your paths.</p>
<p>This has been tested on Python 2.7.11</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from __future__ import print_function
# the above import is for python2 compatibility (question author request)
# it has to be at the top of the module
# you may need to install it with `pip install future`

import re

file_address = 'N://sessionY/ep001/out-montageFX/maya/'

# ok let's write a regex to find the part we want
# here (ep) part means that we want to capture `ep` to a `capture group`
# the (\d{3}) part means match the exactly 3 integers and capture them
# [\\/] matches backward or forward slashes (for windows support)
# more on regexes here: https://docs.python.org/3/library/re.html#module-re
# on match objects here: 
# https://docs.python.org/3/library/re.html#match-objects

regex = r'[\\/](ep)(\d{3})[\\/]'

# next we apply the expression with re.search
# (which means find the first matching occurrence)
# details here: 
# https://docs.python.org/3/library/re.html#regular-expression-objects

m = re.search(regex, file_address, flags=re.IGNORECASE)

# the flags=re.IGNORECASE part - to match case-insensitivelly

if m:  # if a match has been found

    # we can get the folder_name `ep` part from the capture group 1
    # and the episode number from the capture group 2

    folder_name = m.group(1) + m.group(2)

    # as explained above the episode number is within group 1
    # and we also need to convert it to integer (if desired)
    # the group is guaranteed to have the match in it, because 
    # we are inside the above if statement.
    episode_number = int(m.group(2))

    # lets print the results:
    print('folder_name:', folder_name)
    print('episode_number:', episode_number)
else:
    # obviously no match
    print('no match')
</code></pre>
</div>
<span class="comment-copy">What do you mean by "identify"? Construct a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, please.</span>
<span class="comment-copy">have you tried regular expressions?</span>
<span class="comment-copy">if epXXX in fileAddressString</span>
<span class="comment-copy">In my example, i need to have the « epxxx » folder name. XXX are numbers from 001 to 999. The rest of the adress is static. I need to identify this folder name to identify in what episode folder a file is</span>
<span class="comment-copy">I think your solution is better for this specific problem, you can also replace the "ep" part with "[eE][pP]" for case-insensitive matching.</span>
<span class="comment-copy">Thank you for this code snippet, which might provide some limited, immediate help. A proper explanation would greatly improve its long-term value by showing why this is a good solution to the problem and would make it more useful to future readers with other, similar questions. Please edit your answer to add some explanation, including the assumptions you’ve made.</span>
<span class="comment-copy">If you're going to post a code-only answer, can you please at least post code that doesn't throw syntax errors?</span>
<span class="comment-copy">@Aran-Fey, sorry my phone didn't let me use the right quotes ) updated</span>
<span class="comment-copy">@MaximilianPeters, I elaborated the answer, here u go</span>
<span class="comment-copy">hello bob, thank you but it doesnt work seems to be for python 3, i'm on python 2.7</span>
