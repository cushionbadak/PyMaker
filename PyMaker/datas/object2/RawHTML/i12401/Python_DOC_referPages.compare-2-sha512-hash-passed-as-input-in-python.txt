<div class="post-text" itemprop="text">
<p>I have 2 hashes which i need to compare.1 is coming from an API, other i have calculated internally <br/>
I am aware that 2 <code>sha512</code> can be compared using </p>
<pre><code>input1.digest() == input2.digest()
</code></pre>
<p>where both inputs are <code>sha512</code> hash.My problem here is that since i am getting 1 of them from an API, it is of <code>string</code> format and strings don't have <code>digest</code> :</p>
<blockquote>
<p>*** AttributeError: 'str' object has no attribute 'digest'</p>
</blockquote>
<p>I thought this would work :</p>
<pre><code>if(calculated_hash != input_hash):
    return False
return True
</code></pre>
<p>how hash is getting generated internally for one of the test cases:</p>
<pre><code>hash_val = sha512(parameters.encode('utf-8') + salt.encode('utf-8')).hexdigest()
</code></pre>
<p>But since hash is new every-time, this is not working.</p>
<p>How can i compare these 2 hashes under given scenario?</p>
<p><strong>EDIT :</strong></p>
<p>there was a dynamic timestamp in input because of which there was a difference in hash recieved vc hash generated from params recived.<strong>But</strong>, i am still getting the value as False on comparing <code>hexdigest</code>!! :\</p>
</div>
<div class="post-text" itemprop="text">
<p>Add the exact values of <code>input1</code> and <code>input2</code> to the question.</p>
<p>The only way hash outputs can differ is if the input strings are different, and it seems to me you have a parameter whose value is erroneously being changed every time at runtime. If I were in your shoes, I would check for some timestamp or request randomnumber etc being fed into the SHA calculation every time, which is different for each request.</p>
<p><strong>Edit</strong>:</p>
<p>As the OP mentions, this was an issue with a dynamic timestamp being present in the input string. As for using the <code>bytes</code> function, it is not really needed for strings and comparing direct <code>sha512(input).hexdigest</code> should work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>input1</code> is from an API and is a <code>str</code>, it needs to be fed into the actual hash function. Looking at the documentation (<a href="https://docs.python.org/3/library/hashlib.html" rel="nofollow">https://docs.python.org/3/library/hashlib.html</a>) we can see that something like</p>
<pre><code>...
h1 = hashlib.sha512(bytes(input1))
return h1.digest() == input2.digest()
</code></pre>
<p>We need to convert <code>input1</code> from <code>str</code>to <code>bytes</code> because the hash function expects an input that is bytes-like. However, depending on your Python version (2.X instead of 3.X) this conversion isn't necessary since strings are <code>bytes</code> by default.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/secrets.html" rel="nofollow noreferrer">secrets</a> module in python provides a function, 'compare_digest', which can also be used to compare two 'sha' family hash functions' digests and hexdigests. Here is an example.</p>
<pre><code>import hashlib, secrets

data_1 = b'Hello'
sha256_1 = hashlib.sha256(data_1).digest()

data_2 = b'Hello'
sha256_2 = hashlib.sha256(data_2).digest()

data_3 = b'However'
sha256_3 = hashlib.sha256(data_3).digest()

print(secrets.compare_digest(data_1, data_2)) #True
print(secrets.compare_digest(data_1, data_3)) #False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I suspect that you want:</p>
<pre><code>if calculated_hash.digest() != input_hash:
    return False
return True
</code></pre>
<p>But it's difficult to say without seeing more of the code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please use <code>type</code> to check your object.</p>
<p>Suppose you are sure that your objects are hash, the expression is definitely correct:</p>
<pre><code>input1.digest() == input2.digest()
</code></pre>
<p>If the object isn't <code>&lt;type '_hashlib.HASH'&gt;</code> but it is string, you first should hash the object, and then compare the objects.</p>
<pre><code>input1 = hashlib.sha512(input1)
input1.digest() == input2.digest()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What i think this should work:</p>
<pre><code>input1 == input2.digest()
</code></pre>
<p>Because, digest will produce string. And you getting input1 from api that's string.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import hashlib
&gt;&gt;&gt; hash =hashlib.sha512("hello")
&gt;&gt;&gt; type(hash)
&lt;type '_hashlib.HASH'&gt;
&gt;&gt;&gt; type(hash.digest())
&lt;type 'str'&gt;
&gt;&gt;&gt; print hash.digest()
?q?$?b?x]??j??=s1??
                    ?????%g&lt;?##?ٛ??|z?n???
                                         FcG\.\:??os???C
&gt;&gt;&gt; hash.hexdigest()
'9b71d224bd62f3785d96d46ad3ea3d73319bfbc2890caadae2dff72519673ca72323c3d99ba5c11d7c7acc6e14b8c5da0c4663475c2e5c3adef46f73bcdec043'
</code></pre>
<h1>May be you need to use hexdigest().</h1>
</div>
<span class="comment-copy">Can you add the exact_value of input1 and input2 to the question? The only way hash outputs can differ is if the input strings are different, and it seems to me you have a parameter whose value is erroneously being changed every time at runtime.</span>
<span class="comment-copy">@mu無 : dude...i hate you!! :p</span>
<span class="comment-copy">I will take your comment to mean that I was right :D Posting the same as an answer.</span>
<span class="comment-copy">@mu無 : i am still getting <code>False</code> after removing the dynamic value!</span>
<span class="comment-copy">Add the code pieces. Pretty sure you are using something on the input string which is changing it.</span>
<span class="comment-copy">i am on version 2.7</span>
<span class="comment-copy">Okay, then you can drop converting the string to a bytes type, and just do something like <code>h1 = hashlib.sha512(input1)</code>.</span>
<span class="comment-copy">yup..i need to remove <code>bytes</code>!!</span>
<span class="comment-copy"><code>input1</code> is generated via <code>hashlib.sha512()</code> only.Again passing the value to it won't change the hash? Sorry, i have no idea about this, so asked! :)</span>
<span class="comment-copy">@NoobEditor It's just a situation to guess your issue. Except you offer more information or total codes, we never understand your problem. By the way, please note the object type, we can understand more.</span>
