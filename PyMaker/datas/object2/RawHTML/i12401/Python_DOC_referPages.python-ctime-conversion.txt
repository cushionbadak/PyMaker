<div class="post-text" itemprop="text">
<p>I'm having issues coverting a ctime string over to %Y-%m-%d format. </p>
<pre><code>fileobject = "C:\\foo\\bar.txt"
filetime = time.ctime(os.path.getctime(fileobject))

print filetime
Wed Feb 03 11:02:38 2016
</code></pre>
<p>Now I just want to convert to YYYY-MM-DD. Any suggestions? I'm not having luck with traditional reformatting</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>filetime</code> is a string. That means you can use <a href="https://docs.python.org/2/library/time.html#time.strptime" rel="nofollow"><code>time.strptime</code></a> to parse it.</p>
<pre><code>cdt = time.strptime(filetime, "%a %b %d %H:%M:%S %Y")
</code></pre>
<p>At this point, <code>cdt</code> is a <a href="https://docs.python.org/2/library/time.html#time.struct_time" rel="nofollow"><code>struct_time</code></a> object and you can manipulate it as such.</p>
<pre><code>&gt;&gt;&gt; cdt
time.struct_time(tm_year=2015, tm_mon=11, tm_mday=22, tm_hour=0, tm_min=37, tm_sec=9, tm_wday=6, tm_yday=326, tm_isdst=-1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/time.html#time.strftime" rel="nofollow"><code>time.strftime</code></a> with <a href="https://docs.python.org/2/library/time.html#time.localtime" rel="nofollow"><code>time.localtime</code></a> rather than using <code>time.ctime</code>:</p>
<pre><code>&gt;&gt;&gt; print time.strftime("%Y-%m-%d", time.localtime(os.path.getctime(fileobject)))
2015-10-20
</code></pre>
<p>I won't tell you the file I used so the output will differ.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should avoid <a href="https://softwareengineering.stackexchange.com/q/260710/1985">"Yo-Yo code"</a> and format the file time in the desired format directly <em>without</em> converting it to a string using <code>ctime()</code> first:</p>
<pre><code>#!/usr/bin/env python
import os
from datetime import datetime

filename = r"C:\foo\bar.txt"
dt = datetime.fromtimestamp(os.path.getmtime(filename))
print(dt.date())
# -&gt; 2016-02-03
</code></pre>
<hr/>
<p>If you've received <code>ctime()</code>-formated time string from an external source then you could parse this (<code>asctime()</code>) date/time format using <a href="https://docs.python.org/3/library/email.util.html#email.utils.parsedate" rel="nofollow noreferrer"><code>email</code> stdlib package</a>:</p>
<pre><code>&gt;&gt;&gt; from email.utils import parsedate
&gt;&gt;&gt; parsedate('Wed Feb 03 11:02:38 2016')[:3]
(2016, 2, 3)
&gt;&gt;&gt; "%04d-%02d-%02d" % _
'2016-02-03'
</code></pre>
<p>In general, <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer">use <code>datetime.strptime()</code></a> to convert a string into datetime object. See <a href="https://stackoverflow.com/q/466345/4279">Converting string into datetime</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>use      </p>
<pre><code>time.strptime(string[, format])
</code></pre>
<p>to format the output</p>
<p><a href="https://docs.python.org/2/library/time.html" rel="nofollow">https://docs.python.org/2/library/time.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>strptime</code> and then <code>strftime</code>:</p>
<pre><code>&gt;&gt;&gt; print datetime.datetime.strptime(filetime, "%a %b %d %H:%M:%S %Y").strftime("%Y-%m-%d")
2016-02-03
</code></pre>
</div>
<span class="comment-copy">if the input is a filename then you should <a href="http://stackoverflow.com/a/35200259/4279">avoid unnecessary <code>ctime()</code> conversion and use the desired (YYYY-MM-DD) format directly instead</a></span>
