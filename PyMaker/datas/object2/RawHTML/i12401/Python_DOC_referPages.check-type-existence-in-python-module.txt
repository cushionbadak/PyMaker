<div class="post-text" itemprop="text">
<p>What would be the most Pythonic way of determining if an object's type is contained in a specific module?</p>
<p>For example, let's say I want to match date, time, and datetime classes from the datetime module.</p>
<pre><code>import datetime
mylist = [obj1, obj2, obj3, ...]
for obj in mylist:
    if type(obj) in [datetime.datetime, datetime.time, datetime.date]:
        #Do thing
</code></pre>
<p>It seems silly creating a matching instance of the three for each loop. Is there some simpler way of saying "if type(obj) in some-module"?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow"><code>isinstance()</code></a> can check against multiple types:</p>
<blockquote>
<p><code>isinstance(object, classinfo)</code></p>
<p>Return true if the object argument is an instance of the <code>classinfo</code> argument, or of a (direct, indirect or virtual) subclass thereof. If object is not an object of the given type, the function always returns false. <strong>If <code>classinfo</code> is a tuple of type objects (or recursively, other such tuples), return true if object is an instance of any of the types</strong>. If <code>classinfo</code> is not a type or tuple of types and such tuples, a <code>TypeError</code> exception is raised.</p>
</blockquote>
<pre><code>if isinstance(obj, (datetime.datetime, datetime.time, datetime.date)):
</code></pre>
</div>
<span class="comment-copy">In this specific case it's even possible to just check for <code>datetime.date</code> and <code>datetime.time</code> since <code>datetime.datetime</code>'s parent class is <code>datetime.date</code>.</span>
