<div class="post-text" itemprop="text">
<p>I am translating the following Kaggle code into Python3.4:</p>
<p>In the final lines when outputting a CSV file, </p>
<pre><code>predictions_file = open("myfirstforest.csv", "wb")
open_file_object = csv.writer(predictions_file)
open_file_object.writerow(["PassengerId","Survived"])
open_file_object.writerows(zip(ids, output))
predictions_file.close()
print('Done.')
</code></pre>
<p>there's a Type Error</p>
<pre><code>TypeError: 'str' does not support the buffer interface
</code></pre>
<p>which occurs at the line <code>open_file_object.writerow(["PassengerId","Survived"])</code>.</p>
<p>I believe this is because Opening a file in binary mode to write csv data to doesn't work in Python 3. However, adding <code>encoding='utf8'</code> in the <code>open()</code> line doesn't work either. </p>
<p>What is the standard way to do this in Python3.4? </p>
</div>
<div class="post-text" itemprop="text">
<p>Creating a CSV file is different between Python 2 and Python 3 (as a look into the docs for the <a href="http://docs.python.org/3/library/csv.html" rel="noreferrer"><code>csv</code> module</a> would have shown):</p>
<p>Instead of </p>
<pre><code>predictions_file = open("myfirstforest.csv", "wb")
</code></pre>
<p>you need to use</p>
<pre><code>predictions_file = open("myfirstforest.csv", "w", newline="")
</code></pre>
<p>(And you should use a context manager to handle the closing of the file for you, in case an error does occur):</p>
<pre><code>with open("myfirstforest.csv", "w", newline="") as predictions_file:
    # do stuff
# No need to close the file
</code></pre>
</div>
<span class="comment-copy">"as a look into the docs for the csv module would have shown" I realized this (and mentioned it in the original question, in English). I didn't understand the error was caused by <code>newline=""'</code>, which is why I wanted a clarification. I apologize for causing you such distress.</span>
<span class="comment-copy">@ShanZhengYang for clarity: <code>'wb'</code> opens the file in a binary mode and therefore <code>.write()</code> expects binary data such as <code>bytes</code> object, not <code>str</code> that is Unicode in Python 3. <code>'w'</code> opens the file in a text mode: <code>.write()</code> expects <code>str</code>. Python 3.5 produces more intelligible error message: <code>TypeError: a bytes-like object is required, not 'str'</code>. <code>newline=""</code> is unrelated to the issue but it is recommended for <code>csv</code> files (<code>csv</code> module uses <code>b'\r\n'</code> even on Unix; <code>newline=''</code> allows to write newlines without the usual universal newlines mode conversion (<code>'\n'</code> -&gt; <code>os.linesep</code>)).</span>
