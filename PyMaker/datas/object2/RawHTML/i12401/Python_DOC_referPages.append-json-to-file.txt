<div class="post-text" itemprop="text">
<p>I am trying to append values to a json file. How can i append the data? I have been trying so many ways but none are working ?</p>
<p>Code:</p>
<pre><code>def all(title,author,body,type):

    title = "hello"
    author = "njas"
    body = "vgbhn"
    data = {
            "id" : id,
            "author": author,
            "body" : body,
            "title" : title,
            "type" : type
           }

    data_json = json.dumps(data)
    #data = ast.literal_eval(data)
    #print data_json
    if(os.path.isfile("offline_post.json")):
        with open('offline_post.json','a') as f:
            new = json.loads(f)
            new.update(a_dict)
            json.dump(new,f)
    else:
        open('offline_post.json', 'a')
        with open('offline_post.json','a') as f:
            new = json.loads(f)
            new.update(a_dict)
            json.dump(new,f)
</code></pre>
<p>How can I append data to json file when this function is called?</p>
</div>
<div class="post-text" itemprop="text">
<p>I suspect you left out that you're getting a <code>TypeError</code> in the blocks where you're trying to write the file. Here's where you're trying to write:</p>
<pre><code>with open('offline_post.json','a') as f:
    new = json.loads(f)
    new.update(a_dict)
    json.dump(new,f)
</code></pre>
<p>There's a couple of problems here. First, you're passing a file object to the <code>json.loads</code> command, which expects a string. You probably meant to use <code>json.load</code>.</p>
<p>Second, you're opening the file in append mode, which places the pointer at the end of the file. When you run the <code>json.load</code>, you're not going to get anything because it's reading at the end of the file. You would need to <a href="https://docs.python.org/2/library/stdtypes.html#file.seek" rel="nofollow"><code>seek</code></a> to 0 before <code>load</code>ing <em>(edit: this would fail anyway, as append mode is not readable)</em>.</p>
<p>Third, when you <code>json.dump</code> the new data to the file, it's going to append it to the file in addition to the old data. From the structure, it appears you want to replace the contents of the file (as the new data contains the old data already).</p>
<p>You probably want to use <code>r+</code> mode, <code>seek</code>ing back to the start of the file between the read and write, and <code>truncate</code>ing at the end just in case the size of the data structure ever shrinks.</p>
<pre><code>with open('offline_post.json', 'r+') as f:
    new = json.load(f)
    new.update(a_dict)
    f.seek(0)
    json.dump(new, f)
    f.truncate()
</code></pre>
<p>Alternatively, you can open the file twice:</p>
<pre><code>with open('offline_post.json', 'r') as f:
    new = json.load(f)
new.update(a_dict)
with open('offline_post.json', 'w') as f:
    json.dump(new, f)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a different approach, I just wanted to append without reloading all the data. Running on a raspberry pi so want to look after memory. The test code - </p>
<pre><code>import os

json_file_exists = 0
filename = "/home/pi/scratch_pad/test.json"

# remove the last run json data
try:
    os.remove(filename)
except OSError:
    pass

count = 0
boiler = 90
tower = 78

while count&lt;10:
    if json_file_exists==0:
        # create the json file
        with open(filename, mode = 'w') as fw:  
            json_string = "[\n\t{'boiler':"+str(boiler)+",'tower':"+str(tower)+"}\n]"
            fw.write(json_string)   
            json_file_exists=1
    else:
        # append to the json file
        char = ""
        boiler = boiler + .01
        tower = tower + .02
        while(char&lt;&gt;"}"):
            with open(filename, mode = 'rb+') as f: 
                f.seek(-1,2)
                size=f.tell()
                char = f.read()
                if char == "}":
                    break
                f.truncate(size-1)

        with open(filename, mode = 'a') as fw:  
            json_string = "\n\t,{'boiler':"+str(boiler)+",'tower':"+str(tower)+"}\n]"
            fw.seek(-1, os.SEEK_END)
            fw.write(json_string)

    count = count + 1
</code></pre>
</div>
<span class="comment-copy">Can you expand a bit on what's not working? Are you getting an error?</span>
<span class="comment-copy">Once again, making a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> that isolates your JSON problem will make it a <i>lot</i> easier for people to help you. That Tkinter and internet stuff makes your question more complicated than it needs to be, and it makes your question <i>less</i> useful for future readers.</span>
<span class="comment-copy">Sorry .. Edited it .. check now/</span>
<span class="comment-copy">That's <i>a lot</i> better!</span>
<span class="comment-copy">Just a tiny comment - I realise this might not be your real code, but don't use <code>all</code> as a function name, because there is <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">a built in function</a> that your name will overshadow if you do.  It's a common but hard to debug gotcha in python - you can override built in function names, but you almost never want to.</span>
<span class="comment-copy">I am getting list object has no attribute 'update' error</span>
<span class="comment-copy">@user3041822 Sounds like the JSON is being interpreted as a list. What are the file contents?</span>
<span class="comment-copy">[{"body": "uiewf", "title": "jk", "id": "25", "author": "ok"}, {"body": "hbjn", "title": "ghbj", "id": "27", "author": "vghbjn"}]</span>
<span class="comment-copy">@user3041822 That's a list. You can't <code>update</code> it. If you're just trying to add another {"body": ... } dict to it, use <code>append</code>.</span>
<span class="comment-copy">then how can i insert it as  JSON file?</span>
