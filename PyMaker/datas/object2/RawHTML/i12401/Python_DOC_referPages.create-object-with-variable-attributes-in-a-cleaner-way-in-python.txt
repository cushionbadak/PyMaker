<div class="post-text" itemprop="text">
<p>Am new to python and I had to create an object only with certain attributes that are not <code>None</code>. Example:</p>
<pre><code>if self.obj_one is None and self.obj_two is None:
    return MyObj(name=name)
elif self.obj_one is not None and self.obj_two is None:
    return MyObj(name=name, obj_one=self.obj_one)
elif self.obj_one is None and self.obj_two is not None:
    return MyObj(name=name, obj_two=self.obj_two)
else:
    return MyObj(name=name, obj_one=self.obj_one, obj_two=self.obj_two)
</code></pre>
<p>Coming from a Java land I know python is full of short hand so wanted to know if there is a cleaner way for writing the above? Of course my actual object has plenty more attributes. I tried searching but couldn't find anything helpful so am in doubt if its possible or not cause this doesn't scale if there are more than 2 variable attributes.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way could be using the <a href="https://docs.python.org/3/glossary.html#term-argument" rel="nofollow">double-star operator</a>, like this:</p>
<pre><code>kwargs = {'name': name}

if self.obj_one is not None:
    kwargs['obj_one'] = self.obj_one
if self.obj_two is not None:
    kwargs['obj_two'] = self.obj_two

return MyObj(**kwargs)
</code></pre>
<p>In plain words: you construct a dictionary with your keyword arguments, and then pass that dictionary preceded by <code>**</code> to the callable.</p>
<p>However, <code>None</code> is <em>often</em> (not always) used as a default value for optional arguments. <em>Probably</em> this will work too:</p>
<pre><code>return MyObj(name=name, obj_one=self.obj_one, obj_two=self.obj_two)
</code></pre>
<p>without any <code>if</code> or that sort of stuff.</p>
</div>
