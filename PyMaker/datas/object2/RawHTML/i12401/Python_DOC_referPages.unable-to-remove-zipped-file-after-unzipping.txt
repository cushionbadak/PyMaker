<div class="post-text" itemprop="text">
<p>I'm attempting to remove a zipped file after unzipping the contents on windows. The contents can be stored in a folder structure in the zip. I'm using the <code>with</code> statement and thought this would close the file-like object (<code>source</code> var) and zip file. I've removed lines of code relating to saving the source file.</p>
<pre><code>import zipfile
import os

zipped_file = r'D:\test.zip'

with zipfile.ZipFile(zipped_file) as zip_file:
    for member in zip_file.namelist():
        filename = os.path.basename(member)
        if not filename:
            continue
        source = zip_file.open(member)

os.remove(zipped_file)
</code></pre>
<p>The error returned is: </p>
<pre><code>WindowsError: [Error 32] The process cannot access the file because it is being used by another process: 'D:\\test.zip'
</code></pre>
<p>I've tried:</p>
<ul>
<li>looping over the <code>os.remove</code> line in case it's a slight timing issue</li>
<li>Using close explicitly instead of the <code>with</code> statment</li>
<li>Attempted on local C drive and mapped D Drive</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>instead of passing in a string to the <code>ZipFile</code> constructor, you can pass it a file like object:</p>
<pre><code>import zipfile
import os

zipped_file = r'D:\test.zip'

with open(zipped_file, mode="r") as file:
    zip_file = zipfile.ZipFile(file)
    for member in zip_file.namelist():
        filename = os.path.basename(member)
        if not filename:
            continue
        source = zip_file.open(member)

os.remove(zipped_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are opening files inside the zip... which create a file lock on the whole zip file.  close the inner file open first... via source.close() at the end of your loop</p>
<pre><code>import zipfile
import os

zipped_file = r'D:\test.zip'

with zipfile.ZipFile(zipped_file) as zip_file:
    for member in zip_file.namelist():
        filename = os.path.basename(member)
        if not filename:
            continue
        source = zip_file.open(member)
    source.close()

os.remove(zipped_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try to <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.close" rel="nofollow">close</a> the zipfile before removing. </p>
</div>
<span class="comment-copy">Out of curiosity, have you tried adding a short delay before the remove? e.g. <code>time.sleep(2)</code></span>
<span class="comment-copy">yes tried it and still same error.</span>
<span class="comment-copy">you could change your code to pass a file object (rather than the path) to the <code>ZipFile</code> constructor and then explicitly close that</span>
<span class="comment-copy">Did you try adding a <code>source.close()</code>? If you <code>print source.closed</code> outside the with  it will show it is still open which may cause your issue on windows</span>
<span class="comment-copy">@JamesKent yes using a file object instead of a file string works when passed into the ZipFile constructor! Thanks. Do you want to post an answer?</span>
<span class="comment-copy">documentation for behaviour here: <a href="https://docs.python.org/2/library/zipfile.html#zipfile.ZipFile.open" rel="nofollow noreferrer">docs.python.org/2/library/zipfile.html#zipfile.ZipFile.open</a></span>
<span class="comment-copy">This doesn't work for me in Python 3 on Windows 7. I get <code>raise BadZipFile</code>. I suspect I may have a gzip file, not a zip file. Could you please show the corresponding code for a gzip file?</span>
<span class="comment-copy">I may have made mistake in the above post, try changing the mode to rb instead</span>
<span class="comment-copy">@JamesKent: Still no joy. I'm not sure it is a gzip file - it may just be an ordinary zip file.</span>
<span class="comment-copy">@JamesKent: I think the problem was that LabVIEW (where I generated the zip file) was still open and hanging on to the file. See my question here: <a href="https://stackoverflow.com/questions/51617994/how-do-i-delete-a-gzip-file-in-windows-via-python-file-generated-in-labview" title="how do i delete a gzip file in windows via python file generated in labview">stackoverflow.com/questions/51617994/â€¦</a>.</span>
<span class="comment-copy">I tried your code, but still the same error.</span>
<span class="comment-copy">Works for me.  Without the source.close() line I get the error "The process cannot access the file because it is being used by another process: 'D:\\test.zip'" on line 14.  Adding this line resolve this as there is no longer a file lock on the outer zip file test.zip due to the inner file (source = zip_file.open(member)) being left open.  Why open the inner file anyway? What are you trying to do?</span>
<span class="comment-copy">I want to open the inner file as I copy the file out of the zip to the parent folder.         <code>target = file(os.path.join(unzip_location, filename), 'wb')</code> <code>with source, target:</code> <code>shutil.copyfileobj(source, target)</code></span>
<span class="comment-copy">you on python 2.7, windows 7?</span>
<span class="comment-copy">@eryksun: Could you please expand your comment into an answer?</span>
<span class="comment-copy">But according to the documentation the file should be closed when leaving the <code>with</code> statement.</span>
<span class="comment-copy"><code>with</code> should clear up the resources. I tried close also, same error.</span>
