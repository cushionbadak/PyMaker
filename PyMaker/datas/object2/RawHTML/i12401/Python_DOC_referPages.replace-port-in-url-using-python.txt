<div class="post-text" itemprop="text">
<p>I want to change the port in given url.</p>
<p>OLD=<a href="http://test:7000/vcc3" rel="nofollow">http://test:7000/vcc3</a>
NEW=<a href="http://test:7777/vcc3" rel="nofollow">http://test:7777/vcc3</a></p>
<p>I tried below code code, I am able to change the URL but not able to change the port.</p>
<pre><code>&gt;&gt;&gt; from urlparse import urlparse
&gt;&gt;&gt; aaa = urlparse('http://test:7000/vcc3')
&gt;&gt;&gt; aaa.hostname
test
&gt;&gt;&gt; aaa.port
7000
&gt;&gt;&gt;aaa._replace(netloc=aaa.netloc.replace(aaa.hostname,"newurl")).geturl()
'http://newurl:7000/vcc3'
&gt;&gt;&gt;aaa._replace(netloc=aaa.netloc.replace(aaa.port,"7777")).geturl()
Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: expected a character buffer object
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not a particularly good error message. It's complaining because you're passing <code>ParseResult.port</code>, an <code>int</code>, to the string's <code>replace</code> method which expects a <code>str</code>. Just stringify <code>port</code> before you pass it in:</p>
<pre><code>aaa._replace(netloc=aaa.netloc.replace(str(aaa.port), "7777"))
</code></pre>
<p>I'm astonished that there isn't a simple way to set the port using the <code>urlparse</code> library. It feels like an oversight. Ideally you'd be able to say something like <code>parseresult._replace(port=7777)</code>, but alas, <a href="https://stackoverflow.com/a/21629125/1523776">that doesn't work</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The details of the port are stored in <code>netloc</code>, so you can simply do:</p>
<pre><code>&gt;&gt;&gt; a = urlparse('http://test:7000/vcc3')
&gt;&gt;&gt; a._replace(netloc='newurl:7777').geturl()
'http://newurl:7777/vcc3'
&gt;&gt;&gt; a._replace(netloc=a.hostname+':7777').geturl()  # Keep the same host
'http://test:7777/vcc3'
</code></pre>
</div>
<span class="comment-copy">Are we suppose to use <code>_replace</code> method directly ? Rule of thumb is, you should not invoke private methods on objects directly.</span>
<span class="comment-copy">@AashishP Good question. <code>namedtuple</code> flouts convention somewhat; <a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._replace" rel="nofollow noreferrer"><code>_replace</code> is not intended to be a private method</a>. It's named with an underscore to minimise the likelihood of name-conflicts with a field in the <code>namedtuple</code>. (Scroll up from the linked documentation and you'll find the sentence "To prevent conflicts with field names, the method and attribute names start with an underscore.")</span>
<span class="comment-copy">Thanks for your comment.</span>
