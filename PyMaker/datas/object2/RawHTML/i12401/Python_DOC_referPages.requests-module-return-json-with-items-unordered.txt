<div class="post-text" itemprop="text">
<p>When I'm using python's <code>requests</code> module this way:  </p>
<p><code>response = requests.get('http://[some_api_url]')
 print response.json()
</code>
I get different json ordered in contrary to viewing the json via browser.  </p>
<p>For example:<br/>
Via response.json() I get:<br/>
<code>[{"key2":"value2"},{"key1:"value1"}]</code> </p>
<p>Whereas via browser I see it as supposed to be:
<code>[{"key1:"value1"},{"key2":"value2"}]</code></p>
<p><strong>EDIT:</strong> When printing <code>response.text</code> its in the right order
But not json</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>object_pairs_hook</code> argument of the json module as suggested in the <a href="https://docs.python.org/2/library/json.html#json.load" rel="noreferrer">doc</a>:</p>
<blockquote>
<p>object_pairs_hook is an optional function that will be called with the result of any object literal decoded with an ordered list of pairs. The return value of object_pairs_hook will be used instead of the dict. This feature can be used to implement custom decoders that rely on the order that the key and value pairs are decoded (for example, collections.OrderedDict() will remember the order of insertion). If object_hook is also defined, the object_pairs_hook takes priority.</p>
</blockquote>
<pre><code>import json
from collections import OrderedDict
result = json.loads(request.text,
                    object_pairs_hook=OrderedDict)
</code></pre>
<p>To get simpler, you can see in the <a href="https://github.com/kennethreitz/requests/blob/master/requests/models.py#L785" rel="noreferrer">implementation of requests</a> that kwargs are passed from the json method to the json module, hence this works as well:</p>
<pre><code>d = response.json(object_pairs_hook=OrderedDict)
</code></pre>
<p>and <code>d</code> will be an <code>OrderedDict</code> with the order of <code>response.text</code> preserved. </p>
</div>
<span class="comment-copy">Can you post the url please?</span>
<span class="comment-copy">Unfortunately not, its not public URL</span>
<span class="comment-copy">I usually use :      <code>json.loads(response.text parse_float=float, object_pairs_hook=OrderedDict)</code>  with OrderedDict coming from <code>collections</code></span>
<span class="comment-copy">@stellasia: Thanks, I found this solution myself, but is there a way to use requests.json() in an ordered manner?</span>
<span class="comment-copy">In CPython 3.6 a <a href="https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-compactdict" rel="nofollow noreferrer">new <code>dict</code> implementation was introduced that preserved insertion order</a>, however this behaviour wasn't guarenteed by the language. As of Python 3.7, it is now guarenteed that <a href="https://mail.python.org/pipermail/python-dev/2017-December/151283.html" rel="nofollow noreferrer"><code>dict</code> keeps insertion order</a>. This should avoid the need for explicitly using a <code>OrderedDict</code>.</span>
<span class="comment-copy">I verified the second approach with <code>d = response.json(object_pairs_hook=OrderedDict)</code> and it works great.</span>
<span class="comment-copy">Please change object_parir_hook to object_pairs_hook</span>
<span class="comment-copy">Done, thanks for the notice!</span>
<span class="comment-copy">Life saver, thanks</span>
<span class="comment-copy">Wow this is extremely helpful. Not sure how I've gone all this time without this. Thank you sir!</span>
