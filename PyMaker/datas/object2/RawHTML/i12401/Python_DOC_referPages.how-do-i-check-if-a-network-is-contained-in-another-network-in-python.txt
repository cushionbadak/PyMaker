<div class="post-text" itemprop="text">
<p>How can I check if a network is wholly contained in another network in Python, e.g. if <code>10.11.12.0/24</code> is in <code>10.11.0.0/16</code>? </p>
<p>I've tried using <code>ipaddress</code> but it doesn't work:</p>
<pre><code>&gt;&gt;&gt; import ipaddress
&gt;&gt;&gt; ipaddress.ip_network('10.11.12.0/24') in ipaddress.ip_network('10.11.0.0/16')
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Starting from Python <a href="https://docs.python.org/3.7/whatsnew/3.7.html#ipaddress" rel="nofollow noreferrer">3.7.0</a> you can use the <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.subnet_of" rel="nofollow noreferrer"><code>subnet_of()</code></a> and <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.supernet_of" rel="nofollow noreferrer"><code>supernet_of()</code></a> methods of <code>ipaddress.IPv6Network</code> and <code>ipaddress.IPv4Network</code> for network containment tests:</p>
<pre><code>&gt;&gt;&gt; from ipaddress import ip_network
&gt;&gt;&gt; a = ip_network('192.168.1.0/24')
&gt;&gt;&gt; b = ip_network('192.168.1.128/30')
&gt;&gt;&gt; b.subnet_of(a)
True
&gt;&gt;&gt; a.supernet_of(b)
True
</code></pre>
<p>If you have a Python version prior to 3.7.0, you can just copy the method's <a href="https://github.com/python/cpython/blob/v3.7.0/Lib/ipaddress.py#L976" rel="nofollow noreferrer">code</a> from the later version of the module.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import ipaddress

def is_subnet_of(a, b):
   """
   Returns boolean: is `a` a subnet of `b`?
   """
   a = ipaddress.ip_network(a)
   b = ipaddress.ip_network(b)
   a_len = a.prefixlen
   b_len = b.prefixlen
   return a_len &gt;= b_len and a.supernet(a_len - b_len) == b
</code></pre>
<p>then</p>
<pre><code>is_subnet_of("10.11.12.0/24", "10.11.0.0/16")   # =&gt; True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try  <a href="https://pypi.python.org/pypi/netaddr" rel="nofollow">netaddr</a> as below-</p>
<p><strong>Check if a network is in another</strong></p>
<pre><code>from netaddr import IPNetwork,IPAddress

if IPNetwork("10.11.12.0/24") in IPNetwork("10.11.0.0/16"):
    print "Yes it is!"
</code></pre>
<p><strong>Check if an IP is in a network</strong></p>
<pre><code>from netaddr import IPNetwork,IPAddress

if IPAddress("10.11.12.0") in IPNetwork("10.11.0.0/16"):
    print "Yes it is!"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For some reason, the ipaddress module does not provide a simple function to check whether a network is contained in another network. I managed to solve this problem as follows:</p>
<p><code>ip1 = '10.0.0.0/24'
ip2 = '10.0.0.22'
ipaddress.ip_network(ip2) in ipaddress.ip_network(ip1).subnets(new_prefix=ipaddress.ip_network(ip2).prefixlen)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I also needed to implement such a check. Reading the documentation of <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow">ipaddress module</a>, I found the function overlaps(). It works. Code example:</p>
<pre><code>import ipaddress
from ipaddress import IPv4Network

supernet = IPv4Network('10.0.0.0/8')
net = IPv4Network('11.0.10.0/30')
print(net.overlaps(supernet))
</code></pre>
</div>
<span class="comment-copy"><code>ipaddress.ip_network('10.11.12.0/24').overlaps(ipaddress.ip_network('10.11.0.0/16'))</code>?</span>
<span class="comment-copy">Related: <a href="https://bugs.python.org/issue20825" rel="nofollow noreferrer">bugs.python.org/issue20825</a></span>
<span class="comment-copy">@GingerPlusPlus: this returns <code>True</code> in case you swap the networks.</span>
<span class="comment-copy"><code>A= Primary Net(10.4.0.0)</code>, <code>B=Member of A(75.85.45.0)</code> No WAY ! if you are member of <code>A</code>, member <code>B</code> use friends example.</span>
<span class="comment-copy">now built-in in module ipaddress:  <code>ipaddress.ip_network(u'10.11.12.0/24').subnet_of(ipaddress.ip_network(u'10.11.0.0/16')) == True</code></span>
<span class="comment-copy">@Francois Really? What version of Python? I don't see it <a href="https://docs.python.org/3.6/library/ipaddress.html?highlight=ipaddress#network-objects" rel="nofollow noreferrer">in the docs</a>.</span>
<span class="comment-copy">tested with Python 2.7.9</span>
<span class="comment-copy">This seems like a much better answer.</span>
<span class="comment-copy">tihs example does not demonstrate a solution to the question ; and it is wrong anyway since <code>overlaps</code> returns true even if <code>net</code> is not wholly contained inside <code>supernet</code> (see comment of @planetp above)</span>
