<div class="post-text" itemprop="text">
<p>I have an input file that contains lines of: </p>
<pre><code>key \t  value1  \t value2 ..... 
</code></pre>
<p>I'd like read this file into a dictionary where key is the first token of the line and the value is the list of the values. </p>
<p>I think something like this would do it, but python gives me an error that name <code>l</code> is not defined. How do I write a comprehension that has two levels of "for" statements like this? </p>
<pre><code>f = open("input.txt")
datamap = {tokens[0]:tokens[1:] for tokens in l.split("\t") for l in enumerate(f)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>csv</code> module and insert each row into a dictionary:</p>
<pre><code>import csv

with open('input.txt') as tsvfile:
    reader = csv.reader(tsvfile, delimiter='\t')
    datamap = {row[0]: row[1:] for row in reader}
</code></pre>
<p>This sidesteps the issue altogether.</p>
<p>You <em>can</em> put a <code>str.split()</code> result into a tuple to create a 'loop variable':</p>
<pre><code>datamap = {row[0]: row[1:] for l in f for row in (l.strip().split("\t"),)}
</code></pre>
<p>Here <code>row</code> is bound to the one <code>str.split()</code> result from the tuple, effectively creating a <code>row = l.strip().split('\t')</code> 'assignment'.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/34997535/789671">Martijn's</a> got you covered for improving the process, but just to directly address the issues you were seeing with your code:</p>
<p>First, <code>enumerate</code> is not doing what you think it's doing (although I'm not entirely sure what you think it's doing). You can just get rid of it.</p>
<p>Second, Python is trying to resolve this:</p>
<pre><code>tokens[0]:tokens[1:] for tokens in l.split("\t")
</code></pre>
<p><em>before</em> it sees what you're defining <code>l</code> as. You can put parentheses around the second comprehension to make it evaluate as you intended:</p>
<pre><code>datamap = {tokens[0]:tokens[1:] for tokens in (l.split("\t") for l in f)}
</code></pre>
</div>
<span class="comment-copy">I would suggest using the csv reader module to do this work instead of splitting it manually yourself. <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a>. Also look at the dictreader function <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">docs.python.org/3/library/csv.html#csv.DictReader</a></span>
<span class="comment-copy">Use the same order as for nested loops: <code>{... for l in enumerate(f) for tokens in l.split("\t")}</code>. The expression can be imagined as the body of the innermost loop.</span>
<span class="comment-copy">Thanks! I was exactly curious about this. :)</span>
