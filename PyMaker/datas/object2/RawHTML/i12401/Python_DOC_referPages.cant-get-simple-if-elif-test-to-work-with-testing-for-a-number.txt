<div class="post-text" itemprop="text">
<p>My assignment is:</p>
<blockquote>
<p>You have been asked to write a program that will give the name of a
  shape depending on the number of sides. The user can only enter
  numbers between 3 and 8, if they enter any other number then the
  program should tell them to enter a number between 3 and 8.</p>
</blockquote>
<p>And here's my Python answer:</p>
<pre><code>#Sides and shapes
sides = int(input("How many sides on the shape are there? "))
if sides ==3:
    print ("Your shape is the triangle")
if sides ==4:
    print ("Your shape is the square")
if sides ==5:
    print ("Your shape is the pentagon")
if sides ==6:
    print ("Your shape is the hexagon")
if sides ==7:
    print ("Your shape is the heptagon")
if sides ==8:
    print ("Your shape is the octagon")
elif sides != range(3,9):
    print ("You should enter a number between 3 and 8")
</code></pre>
<p>After the <code>elif</code> statement I somehow also need to loop it so that if the person inputs other than 3-8 then it will keep asking for them to enter a number from 3 to 8.</p>
<p>The <code>elif</code> statement does not work for some reason and outputs this answer in F5:</p>
<pre><code>How many sides on the shape are there? 6
Your shape is the hexagon
You should enter a number between 3 and 8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>range()</code> produces an object of a different type; <code>integer != range()</code> is <em>always</em> going to be true.</p>
<p>Either test if you integer is outside a range with <code>&lt;</code> or <code>&lt;=</code> and chaining:</p>
<pre><code>elif not (3 &lt;= sides &lt; 9):
    print ("You should enter a number between 3 and 8")
</code></pre>
<p>or use <code>not in</code> to see if the number is outside the range:</p>
<pre><code>elif sides not in range(3, 9):
    print ("You should enter a number between 3 and 8")
</code></pre>
<p>or simply use <code>elif</code> on <em>all</em> your tests but the first, and <code>else</code> for the last branch; it'll picked only if the <code>if..elif</code> tests did not match:</p>
<pre><code>if sides ==3:
    print ("Your shape is the triangle")
elif sides ==4:
    print ("Your shape is the square")
elif sides ==5:
    print ("Your shape is the pentagon")
elif sides ==6:
    print ("Your shape is the hexagon")
elif sides ==7:
    print ("Your shape is the heptagon")
elif sides ==8:
    print ("Your shape is the octagon")
else:
    print ("You should enter a number between 3 and 8")
</code></pre>
<p>Note that there is only <em>one</em> <code>if</code> now; logically, the <code>elif</code> and <code>else</code> parts belong to that one <code>if</code> statement. Any other <code>if</code> forms a separate, <em>new</em> set of choices, and your <code>sides != range(3, 9)</code> expression was always true, meaning the <code>elif</code> test would be true any time <code>if slides == 8</code> was not true.</p>
<p>You can simplify your code by using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><em>dictionary</em></a>. It lets you associate a key with a value; make the numbers your keys, and you can simply test if <code>sides</code> is in the dictionary, or return a <em>default value</em> if it is not:</p>
<pre><code>shape_msg = "Your shape is the "
result = {
    3: shape_msg + "triangle",
    4: shape_msg + "square",
    5: shape_msg + "pentagon",
    6: shape_msg + "hexagon",
    7: shape_msg + "heptagon",
    8: shape_msg + "octagon",
}

sides = int(input("How many sides on the shape are there? "))
result = results.get(sides, "You should enter a number between 3 and 8")
print(result)
</code></pre>
<p>Here, the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get()</code> method</a> returns the value for the given key, or the default value if the key is not present.</p>
<p>If you need to continue the loop, test for the presence of the key and branch based on that:</p>
<pre><code>while True:
    sides = int(input("How many sides on the shape are there? "))
    if sides in result:
        print(sides[result])
        break  # done, exit the loop
     print("You should enter a number between 3 and 8")
</code></pre>
<p>For further tips on how to ask a user for input and handle their wrong input, see <a href="https://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Asking the user for input until they give a valid response</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>elif</code> is only "associated" with the previous <code>if</code>, so it will hit that <code>elif</code> for anything that is not an octagon, then as others have noticed your comparison is not testing if you're in the right range, you're comparing an int against a list.</p>
<p>Probably you really want all of your <code>if</code> statements except the first to be <code>elif</code> and the one you have as an <code>elif</code> to be the <code>else</code> clause for that whole block.</p>
<p>Better still, you could have a dictionary that maps the number of sides to the message, and if you don't have a key in the dictionary you can print the error message.</p>
<p>For the loop, if you put the whole thing in <code>while True</code> you could <code>break</code> after each success and not after the invalid number of sides, which would cause it to repeat the loop until they finally enter a valid number.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>range(x, y)</code> outputs a range of numbers between <code>x</code> and <code>y</code>. You're then comparing an integer (which is the value of sides) to a list. Obviously it isn't equal to the list, because it is an integer!</p>
</div>
<div class="post-text" itemprop="text">
<p>Look at last <code>if</code> <code>6!= [3,4,5,6,7,8]</code> , so your code will enter <code>elif</code> statement and <code>print ("You should enter a number between 3 and 8")</code> will be executed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You've already covered all the legal answers with your <code>if</code> and <code>elif</code> statements, so there's no need to do any specific checking of other values.</p>
<p>Just change the last statement into an <code>else</code>:</p>
<pre><code>else:
    print ("You should enter a number between 3 and 8")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would do something like this (and it seems to work) : </p>
<pre><code>invalidAnswer = True
while invalidAnswer :
    invalidAnswer = False
    sides = int(input("How many sides on the shape are there? "))
    if sides ==3:
        print ("Your shape is the triangle")
    elif sides ==4:
        print ("Your shape is the square")
    elif sides ==5:
        print ("Your shape is the pentagon")
    elif sides ==6:
        print ("Your shape is the hexagon")
    elif sides ==7:
        print ("Your shape is the heptagon")
    elif sides ==8:
        print ("Your shape is the octagon")
    else :
        print ("You should enter a number between 3 and 8")
        invalidAnswer = True
</code></pre>
</div>
<span class="comment-copy">Why do you think the <code>elif</code> should work? Do you know what <code>range(3, 9)</code> is?</span>
<span class="comment-copy">Thank you this worked for me.                                                                                 #Sides and shapes result = {     3: "Your shape is the triangle",     4: "Your shape is the square",     5: "Your shape is the pentagon",     6: "Your shape is the hexagon",     7: "Your shape is the heptagon",     8: "Your shape is the octagon", }  sides = int(input("How many sides on the shape are there? ")) result = result.get(sides, "You should enter a number between 3 and 8") print(result)</span>
<span class="comment-copy">2nd assignment posted, problems.</span>
<span class="comment-copy">Post a <b>new</b> question for a new problem please.</span>
<span class="comment-copy">I have to wait 90 minutes :(</span>
<span class="comment-copy">Yes, and those limits are there for a reason. We aim to be a collection of quality questions and even better answers with lasting value for future visitors, not a one-on-one mentoring facility. Try to work out your problem on your own in the meantime.</span>
<span class="comment-copy">They need to alter almost every other <code>if</code> statement too. <i>Just</i> changing that one <code>elif</code> to <code>else</code> is <i>not enough</i>.</span>
<span class="comment-copy">Oops, I thought all the <code>if</code>s after the first were <code>elif</code>s.  If they were, I think my answer would stand.</span>
