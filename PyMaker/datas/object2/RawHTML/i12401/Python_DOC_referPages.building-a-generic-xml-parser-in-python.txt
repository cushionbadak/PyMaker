<div class="post-text" itemprop="text">
<p>I am a newbie and having 1 week experience writing python scripts.</p>
<p>I am trying to write a generic parser (Library for all my future jobs) which parses any input XML without any prior knowledge of tags.</p>
<ul>
<li>Parse input XML.</li>
<li>Get the values from the XML and Set the values basing on the tags.</li>
<li>Use these values in the rest of the job.</li>
</ul>
<p>I am using the "xml.etree.ElementTree" library and i am able to parse the XML in the below mentioned way.</p>
<pre><code>#!/usr/bin/python

import os
import xml.etree.ElementTree as etree
import logging


logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

logger.info('start reading XML property file')
filename = "mood_ib_history_parameters_DEV.xml"

logger.info('getting the current location')
__currentlocation__ = os.getcwd()
__fullpath__ = os.path.join(__currentlocation__,filename)

logger.info('start parsing the XML property file')
tree = etree.parse(__fullpath__)
root = tree.getroot()

hive_db = root.find("hive_db").text
EDGE_HIVE_CONN = root.find("EDGE_HIVE_CONN").text
target_dir = root.find("target_dir").text
to_email_alias = root.find("to_email_alias").text
to_email_cc = root.find("to_email_cc").text
from_email_alias = root.find("from_email_alias").text
dburl = root.find("dburl").text
SQOOP_EDGE_CONN = root.find("SQOOP_EDGE_CONN").text
user_name = root.find("user_name").text
password = root.find("password").text
IB_log_table = root.find("IB_log_table").text
SR_DG_master_table = root.find("SR_DG_master_table").text
SR_DG_table = root.find("SR_DG_table").text

logger.info('Hive DB %s', hive_db)
logger.info('Hive DB %s', hive_db)
logger.info('Edge Hive Connection %s', EDGE_HIVE_CONN)
logger.info('Target Directory %s', target_dir)
logger.info('To Email address %s', to_email_alias)
logger.info('CC Email address %s', to_email_cc)
logger.info('From Email address %s', from_email_alias)
logger.info('DB URL %s',dburl)
logger.info('Sqoop Edge node connection %s',SQOOP_EDGE_CONN)
logger.info('Log table name %s',IB_log_table)
logger.info('Master table name %s',SR_DG_master_table)
logger.info('Data governance table name %s',SR_DG_table)
</code></pre>
<p>Now the question is if i want to parse an XML without any knowledge of the tags and elements and use the values how do i do it. I have gone through multiple tutorials but all of them help me with parsing the XML by using the tags like below</p>
<pre><code>SQOOP_EDGE_CONN = root.find("SQOOP_EDGE_CONN").text
</code></pre>
<p>Can anybody point me to a right tutorial or library or a code snippet to parse the XML dynamically.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think official documentation is pretty clear and contains some examples: <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow">https://docs.python.org/3/library/xml.etree.elementtree.html</a></p>
<p>The main part you need to implement is loop over the child nodes (potentially recursively):</p>
<pre><code>for child in root:
    # child.tag contains the tag name, child.attrib contains the attributes
    print(child.tag, child.attrib)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well parsing is easy as that - <code>etree.parse(path)</code></p>
<p>Once you've got the root in hand using <code>tree.getroot()</code> you can just iterate over the tree using Python's "in":</p>
<pre><code>for child_node in tree.getroot():
   print child_node.text
</code></pre>
<p>Then, to see tags these <code>child_node</code>s have, you do the same trick. 
This lets you go over all tags in the XML without having to know the tag names at all. </p>
</div>
<span class="comment-copy">do you need <code>parsing </code> - to create etree from xml file - or <code>searching</code> - to find elements in etree ? <code>etree</code> has other function than <code>find</code>.</span>
