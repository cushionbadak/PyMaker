<div class="post-text" itemprop="text">
<p>I've found multiple sources (<a href="https://docs.python.org/3/distutils/sourcedist.html#specifying-the-files-to-distribute" rel="nofollow">https://docs.python.org/3/distutils/sourcedist.html#specifying-the-files-to-distribute</a>, <a href="http://blog.ionelmc.ro/2014/05/25/python-packaging/" rel="nofollow">http://blog.ionelmc.ro/2014/05/25/python-packaging/</a>, <a href="http://blog.ionelmc.ro/2014/06/25/python-packaging-pitfalls/" rel="nofollow">http://blog.ionelmc.ro/2014/06/25/python-packaging-pitfalls/</a>) that suggest that the way to distribute data files in a Python package is to use setuptools's <code>include_package_data</code> option and a <code>MANIFEST.in</code>.  The files in my package thus look like,</p>
<p><code>setup.py</code></p>
<p><code>setup(
    # ...
    include_package_data = True,
    # ...
</code>
with the rest of the file (hopefully irrelevant) elided.</p>
<p><code>MANIFEST.IN</code></p>
<p><code>graft testdata
include ChangeLog
include README.rst
include COPYING
include COPYING.LESSER
include tox.ini
</code></p>
<p>When I run <code>setup.py install</code> or use pip in a virtualenv, I end up with the Python source files themselves, but without <code>testdata/</code> anywhere I can find it.  I'd think this was an error in my packaging, except that when I grab another package with a similar layout, I can't find the data files either.  If I clone the repository for the example package <a href="https://github.com/ionelmc/python-nameless" rel="nofollow">https://github.com/ionelmc/python-nameless</a> and install it using <code>setup.py install</code>, the package installs in the directory <code>lib/python3.4/site-packages/nameless-0.1.0-py3.4.egg/nameless/</code>.  However, I can't find any of the data files or tests anywhere in the virtualenv.  Where are they supposed to end up?  How is this supposed to work?</p>
<p>My motivation for asking this question is that another contributor on a project wants the tests, which require the data files, to run from a pip install.  Is this the right approach in the first place?</p>
</div>
<div class="post-text" itemprop="text">
<p>My understanding is that you should just </p>
<p><code>include testdata</code></p>
<p>instead of <code>graft</code>ing it - to be honest, I am actually not sure what <code>graft</code> does.</p>
<p>Also I do not believe it is required to specify <code>include_package_data = True</code> at all </p>
</div>
<span class="comment-copy">Use <code>pkg_resources</code> to discover your data files. See my <a href="http://stackoverflow.com/a/34788912/3626079">answer</a> for similar question.</span>
<span class="comment-copy"><code>include</code> includes files matching the pattern, not directories.  As far as I know, this is only explained in the legacy documentation: <a href="https://docs.python.org/3/distutils/commandref.html" rel="nofollow noreferrer">docs.python.org/3/distutils/commandref.html</a> .  (If it's explained in the non-legacy documentation, I have no idea where.)  <code>graft</code> includes entire directories.  In both my MANIFEST.in and the example package's, <code>include</code> is used for individual files, and I can't find those files in the virtualenv either.  I've tried <code>recursive-include</code> on <code>testdata/</code> as well, and that doesn't work either.</span>
<span class="comment-copy">I was facing a similar issue yesterday. Previously I was manually storing COPYING and LICENCE in <code>/etc/nepi</code> but that was breaking under virtualenv. Now (see <a href="http://git.onelab.eu/?p=nepi.git;a=tree" rel="nofollow noreferrer">my git repo here</a>) things run just fine. If you don't see any of the files included, I suspect something else is going wrong. Also I have seen examples of <code>include</code> being used with a directory but have no evidence that it would work. I agree that the documentation on this is not exactly clear :)</span>
