<div class="post-text" itemprop="text">
<p>I am running python 3.4 on the main.py file in the same directory.
/root directory is not in python path. It is simply the current directory that the script is executing in. All pycache folders were deleted after each test</p>
<p>So why exactly is <code>__init__.py</code> important? I thought it was necessary as stated in this post: </p>
<p><a href="https://stackoverflow.com/questions/448271/what-is-init-py-for">What is __init__.py for?</a></p>
<blockquote>
<p>If you remove the init.py file, Python will no longer look for submodules inside that directory, so attempts to import the module will fail.</p>
</blockquote>
<p>Right now, it seems to me that <code>__init__.py</code> is nothing more than an <em>optional</em> constructor where we do housekeeping and other optional things like specifying the "all" variable, etc. But not a critical item to have.</p>
<p>Image showing the results of the test:</p>
<p><a href="https://i.stack.imgur.com/TQd2Z.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/TQd2Z.png"/></a></p>
<p>What is going on here?</p>
</div>
<div class="post-text" itemprop="text">
<hr/>
<h2>Answer</h2>
<p><strong>essentially we dont need init.py and its purpose is for legacy and optional housekeeping things (2.7 vs 3) you may or may not want to do or need. But at the same time, they have slightly different behavior during more complex parsing which should also be accounted for if you are building something more complex</strong></p>
<p>refer to the following links for more reading material</p>
<p><a href="https://www.python.org/dev/peps/pep-0420/#namespace-packages-today" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0420/#namespace-packages-today</a></p>
<p><a href="https://stackoverflow.com/questions/1675734/how-do-i-create-a-namespace-package-in-python">How do I create a namespace package in Python?</a></p>
<p><a href="https://stackoverflow.com/questions/7948494/whats-the-difference-between-a-python-module-and-a-python-package">What's the difference between a Python module and a Python package?</a></p>
<p><a href="https://softwareengineering.stackexchange.com/questions/276888/python-namespace-vs-module-with-underscores">https://softwareengineering.stackexchange.com/questions/276888/python-namespace-vs-module-with-underscores</a></p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/glossary.html#term-namespace-package" rel="nofollow noreferrer"><i>Namespace packages may have no physical representation, and specifically are not like a regular package because they have no <code>__init__.py</code> file.</i></a></span>
<span class="comment-copy">I am a giant noobie, and after reading the link you posted, I am not particularly enlightened.  What exactly is the difference between namespace package and an ordinary package? Do I have to upload it to pypi for it to be a "package". The word "package" is so overused in python and in differing contexts referring to different things.   Could you be a bit more specific as to help us rookies? @vaultah</span>
<span class="comment-copy">Well, you can read <a href="http://stackoverflow.com/q/21819649/2301450">Namespace vs regular package</a> and PEP 420</span>
<span class="comment-copy">I have read that too, and all the explanations seems to reiterate the same mantra  &gt;Namespace packages may have no physical representation &gt;namespace package is a virtual package whose contents can be distributed in various places along Python's lookup path. &gt;Sometimes, a large package is more useful if distributed as a collection of smaller eggs. However, Python does not normally allow the contents of a package to be retrieved from more than one location. "Namespace packages" are a solution for this problem.  These examples are ambiguous and provide no effective examples @vaultah</span>
<span class="comment-copy">So is the init file essentially totally optional? It only acts as a housekeeping instructor, and we can use folders without an init just as we would be able to use them in php, for example, to organize code?   So init is more like a caveat than a requirement? @vaultah</span>
