<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/273567/secret-santa-algorithm">Secret santa algorithm</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to write a script that pairs up men and women for a secret Santa type event. So I have 2 lists of boys and girls, and want to carry out 2 way matching, but at the moment I can only seem to figure out how to do 1 way matching.</p>
<p>Furthermore the problem I have is this... in the example below if Kedrick gets Annabel, then Annabel can't get Kedrick. Kedrick has to get someone else from the list.</p>
<p>My current implementation is as follows, how can I extend its functionality to meet the abovementioned requirements?</p>
<pre><code>boys = ['Kedrick','Jonathan','Tim','Philip','John','Quincy'];
girls  = ['Annabel','Janet','Jocelyn','Pamela','Priscilla','Viviana'];

matches = []

for i in boys:
    rand - randint(0, len(girls-1)
    fullname = "{} matched with {}".format(i, girls(rand)
    del girls(rand)
    matches.append(fullname)

print matches
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This could probably be done with fewer loops and a lot less code but here is my solution! Created 2 dict's to store names and their targets (dict's could be combined or done at the same time to cut down on memory issues, but with a program this size I don't think you would ever run into this issue!</p>
<pre><code>boys = ['Kedrick','Jonathan','Tim','Philip','John','Quincy'];
girls  = ['Annabel','Janet','Jocelyn','Pamela','Priscilla','Viviana'];

matchesBoys = {i:{'to':''} for i in boys}
matchesGirls = {i:{'to':''} for i in girls}

for name in boys:
    giveTo = girls[random.randint(0, len(girls)-1)]
    girls.remove(giveTo)
    matchesBoys[name]['to']=giveTo

for name in matchesGirls:
    giveTo = boys[random.randint(0, len(boys)-1)]
    boys.remove(giveTo)
    matchesGirls[name]['to']=giveTo

del boys, girls
for i in matchesBoys:
    print "%s matched with %s"%(i, matchesBoys[i]['to'])
for i in matchesGirls:
    print '%s matched with %s'%(i, matchesGirls[i]['to'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Shuffle both lists and put them in a ring, with every other element being from the first or second list. Each person gives a gift to the one on their right. Something similar to a list like this:</p>
<pre><code>[Girl, Boy, Girl, Boy, ..., Boy]
</code></pre>
<p>The last element gives a gift to the first.</p>
<p>It works under the assumption that both lists have the same amount of elements and that there are at least four elements in total, otherwise the problem is unsolvable.</p>
<p>This gives one solution that fulfills your constraints. The general solution to the problem is to find a directed <a href="https://en.wikipedia.org/wiki/Bipartite_graph" rel="nofollow">bipartite graph</a> between the sets where each vertex have exactly two edges, one incoming and one outgoing. Perhaps the solution to that problem also always creates a ring?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an implementation that creates a circle with alternate boy and girl. See @Emil Vickstom's answer for an explanation of the idea.</p>
<pre><code>from random import shuffle
boys = ['Kedrick','Jonathan','Tim','Philip','John','Quincy'];
girls  = ['Annabel','Janet','Jocelyn','Pamela','Priscilla','Viviana'];

shuffle(boys)
shuffle(girls)
circle = [person for pair in zip(boys, girls) for person in pair]
print(' -&gt; '.join(circle + circle[:1]))
</code></pre>
<p>Output:</p>
<blockquote>
<p>Tim -&gt; Priscilla -&gt; Quincy -&gt; Annabel -&gt; John -&gt; Janet -&gt; Kedrick -&gt;
  Jocelyn -&gt; Philip -&gt; Pamela -&gt; Jonathan -&gt; Viviana -&gt; Tim</p>
</blockquote>
</div>
<span class="comment-copy">One small tip. Just <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>shuffle</code></a> one of the lists and map by index. It works out easier</span>
<span class="comment-copy">How Kedrick and Tim are connected? or is it just typo?</span>
<span class="comment-copy">@Lafexlos there is no connection between them both</span>
<span class="comment-copy">Is this your actual code? Among other issues, I would expect <code>del girls(rand)</code> to crash with <code>TypeError: 'list' object is not callable</code>.</span>
<span class="comment-copy">Ok, well, go ahead and transcribe that image into text and edit it into your post. Debugging code is much easier when you can copy/paste/run it.</span>
<span class="comment-copy">I'm almost certain that my last remark is true but I leave it as an exercise to the reader :-)</span>
