<div class="post-text" itemprop="text">
<p>I've got a simple Fibonacci function that uses memoisation and it works just fine on its own. However when I want to time it using timeit, I get "NameError: global name 'memo' is not defined", even though it is.</p>
<pre><code>#!/usr/bin/python

import sys
import timeit

memo = [0] * 100

def fibmem(n,memo):
    #function things

for x in range(1,40):

    mytime2 = timeit.Timer('fibmem('+str(x)+', memo)','from __main__ import fibmem')
    delta2 = mytime2.timeit(1)
    print str(x) + ' ' +str(delta2)
    memo[:] = []
</code></pre>
<p>I've tried looking up what it might be, but most of the answers involve including the <code>from __main__ import</code> and that isn't the problem here. I'm sure it's still something to do with scoping, but I am very new to timeit, so I have no idea.</p>
</div>
<div class="post-text" itemprop="text">
<p>Add <code>memo</code> to the list of variables imported from <code>__main__</code>:</p>
<pre><code>mytime2 = timeit.Timer('fibmem({}, memo)'.format(x),'from __main__ import fibmem, memo')
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/551797/getting-global-name-foo-is-not-defined-with-pythons-timeit">Getting "global name 'foo' is not defined" with Python's timeit</a></span>
<span class="comment-copy">Yes, this did it. Thank you!</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/timeit.html#timeit.timeit" rel="nofollow noreferrer"><code>timeit.Timer</code></a> class in Python 3.5 has an optional keyword argument named <code>globals</code> which could also be used to solve the problem â€” although this way works in both Python 2 and 3.</span>
