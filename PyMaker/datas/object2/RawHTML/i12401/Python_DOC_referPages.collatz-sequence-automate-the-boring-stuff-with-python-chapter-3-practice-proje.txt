<div class="post-text" itemprop="text">
<p>This is my working code:</p>
<pre><code>number = int(input())
while number &gt; 1:
    if number % 2 == 0:
        number = int(number) // 2
        print (number)
    elif number % 2 == 1:
        number = 3 * int(number) + 1
        print (number)
</code></pre>
<p>Now I'm trying to add the exception that if user input has non-integer value, it should print 'Enter a number'</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>while True:
    try:
        number = int(raw_input())
        break
    except ValueError:
        print("Enter a number!")
while number &gt; 1:
    ....
</code></pre>
<p>EDIT: As noted in a comment by Anton, use <code>raw_input</code> in Python 2, and <code>input</code> in Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm a complete beginner so I would appreciate all kinds of tips. Here is how I managed to solve the problem, and for now it seems to work fine:</p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>def collatz(number):
    
    if number%2 == 0:
        return number // 2
    else:
        return 3*number+1
        
print ('Enter a number:')

try:
    number = int(input())

    while True:            
            if collatz(number) != 1:
                number= collatz(number)
                print(number)
            else:
                print('Success!')
                break        
except ValueError:
    print('Type an integer, please.')</code></pre>
</div>
</div>
</p>
</div>
<div class="post-text" itemprop="text">
<p>You could check for <code>ValueError</code> for the <code>except</code>. From <a href="https://docs.python.org/3/library/exceptions.html#ValueError" rel="nofollow">docs</a>:</p>
<blockquote>
<p><em>exception</em> <code>ValueError</code>
  Raised when a built-in operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as IndexError.</p>
</blockquote>
<pre><code>try:
    number = int(input())
    while number &gt; 1:
        if number % 2 == 0:
            number = int(number) // 2
            print (number)
        elif number % 2 == 1:
            number = 3 * int(number) + 1
            print (number)
except ValueError:
    print('Enter a number')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do this-</p>
<pre><code> while number != 1:
    try:
        if number % 2 == 0:
           number = int(number) // 2
           print (number)
        elif number % 2 == 1:
           number = 3 * int(number) + 1
           print (number)
     except ValueError:
        print('Enter a number')
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def collatz(number):
    if number % 2 == 0:
        return number // 2
    else:
        return 3 * number + 1

while True:
    try:
        value = int(input("Eneter a number: "))
        break
    except ValueError:
        print("enter a valid integer!")


while value != 1:
    print(collatz(value))
    value = collatz(value)
</code></pre>
</div>
<span class="comment-copy">With <code>input()</code>, you are more likely to get <code>SyntaxError</code> or <code>NameError</code> than <code>ValueError</code>...</span>
<span class="comment-copy">It's for python 3. <code>Input</code> in python 3 is the same as <code>raw_input</code> in python 2.x</span>
<span class="comment-copy">Doh. Now I feel silly.</span>
