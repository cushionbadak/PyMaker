<div class="post-text" itemprop="text">
<p>I have just started learning python and I am trying to write a binary search tree. Eclipse does not show any errors but when I try to run there is ann error </p>
<blockquote>
<p>Encountered "self" at line 5</p>
</blockquote>
<p>Line 5 is:</p>
<blockquote>
<p>"self.left = left"</p>
</blockquote>
<p>What is the problem? Is my way of writing code okey? I have just starded python.</p>
<pre><code>class Node:

    def _init_(self, data, left=None, right=None):
        self.data = data
        self.left = left
        self.right = right 

    def add_node(self, data):
        if self.data is None:
            node = Node(data)
            self = node
        if self.data &gt; data:
            self.add_node(self.left, data)
        else:
            self.add_node(self.right, data)

    def print_nodes(self):
        if self.left is not None:
            self.print_nodes(self.left)
        print(self);
        if self.right is not None:
            self.print_nodes(self.right)

    def _str_(self):
        print(self.data)

class binary_tree:

    def _init_(self):
        self.root = None

    def getRoot(self):
        return self.root

    def add(self, data):
        self.root.add_node(data)

    def print_all(self):
        self.root.print_nodes();
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>here a few fix to your code</p>
<pre><code>class Node:

    def __init__(self, data, left=None, right=None):
        self.data  = data
        self.left  = left
        self.right = right 

    def add_node(self, data):
        if self.data &gt; data:
            if self.left is None:
                self.left = Node(data)
            else:
                self.left.add_node(data)
        elif self.data &lt; data:
            if self.right is None:
                self.right = Node(data)
            else:
                self.right.add_node(data)

    def print_nodes(self):
        if self.left is not None:
            self.left.print_nodes()
        print(self);
        if self.right is not None:
            self.right.print_nodes()

    def __str__(self):
        return str(self.data)

class binary_tree:

    def __init__(self):
        self.root = None

    def getRoot(self):
        return self.root

    def add(self, data):
        if self.root is None:
            self.root = Node(data)
        else:
            self.root.add_node(data)

    def print_all(self):
        if self.root is None:
            print("Empty tree")
        else:
            self.root.print_nodes()
</code></pre>
<p>as mention before the special method of python are <code>__init__</code> and <code>__str__</code>, all magic method start and end with a <code>__</code>.</p>
<p>I fix your <code>add_node</code> because your recursive call were wrong, went you do <code>self.add_node(self.left,data)</code> the self instance is implicitly pass as the first argument to that function, <code>self.left</code> is the second and <code>data</code> the third but as defined add_node only take 2 argument so that is a error, so in this case if you want to call the <code>add_node</code> of <code>self.left</code> that is done by <code>self.left.add_node</code> and the same apply to every other call to a method of a class</p>
<p>take a look at: </p>
<p><a href="https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow">a first look at classes</a></p>
<p><a href="https://docs.python.org/3/reference/datamodel.html#basic-customization" rel="nofollow">basic customization and magic methods</a></p>
<p>here sample usage of this tree</p>
<pre><code>&gt;&gt;&gt; tree = binary_tree()
&gt;&gt;&gt; tree.print_all()
Empty tree
&gt;&gt;&gt; tree.add(23)
&gt;&gt;&gt; tree.print_all()
23
&gt;&gt;&gt; tree.add(10)
&gt;&gt;&gt; tree.add(42)
&gt;&gt;&gt; tree.print_all()
10
23
42
&gt;&gt;&gt; root = tree.root
&gt;&gt;&gt; root.data
23
&gt;&gt;&gt; root.right
&lt;__main__.Node object at 0x0000000003559160&gt;
&gt;&gt;&gt; root.right.data
42
&gt;&gt;&gt; root.left
&lt;__main__.Node object at 0x0000000003577080&gt;
&gt;&gt;&gt; root.left.data
10
&gt;&gt;&gt;     
</code></pre>
<p>Other thing is that in python you dot need to define getter or setter unless you want to control what and how a attribute is set or return it in a especial way that is different to the actual object.</p>
<p>run this in the IDLE of python or in interactive mode as <code>python3 -i  binarytree.py</code> or in your favorite interprete of python.</p>
</div>
<span class="comment-copy">Are you sure that's the exact code you are executing? I do not see any syntax errors. Incidentally, you probably want to write <code>__init__</code> and <code>__str__</code> instead of <code>_init_</code> and <code>_str_</code>.</span>
<span class="comment-copy">One thing:  Maybe you want <code>__init__</code> instead of <code>_init_</code>.  See also <a href="http://stackoverflow.com/questions/625083/python-init-and-self-what-do-they-do">this question</a>.</span>
<span class="comment-copy">ok, changed but still the same error</span>
<span class="comment-copy">please provide the complete traceback ...</span>
<span class="comment-copy">I am using eclipse and all I see is this error on left down size in red font colour. Console does not show anything</span>
