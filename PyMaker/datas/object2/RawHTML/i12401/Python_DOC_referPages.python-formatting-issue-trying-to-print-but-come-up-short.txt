<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/2mMal.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/2mMal.png"/></a></p>
<p>My code that does this: </p>
<pre><code>        print(count,"\t",monthlyPayment,"\t",interest,"\t",loanAmount)
</code></pre>
<p>How can make this more neat and cleaner i am not sure why they aren't aligned? Please guide? Want this in tabular form</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html?highlight=format#format" rel="nofollow">format()</a>. For example:</p>
<pre><code>print('{:7d} {:10d} {:15.2f} {:15.2f}'.format(count, monthlyPayment, interest, loanAmount))
</code></pre>
<p>Here <code>d</code> stands for decimal integer and <code>f</code> for floating point numbers. The numbers are the width. For example <code>7d</code> makes a seven places wide integer:</p>
<pre><code>    3000
</code></pre>
<p>and <code>15.2f</code> an floating number with a total width of 15 and 2 decimals:</p>
<pre><code>         1000.00
</code></pre>
<p>Example output for:</p>
<pre><code>print('{:7d} {:10d} {:15.2f} {:15.2f}'.format(1, 300, 416.67, 99915.67))
</code></pre>
<p>is:</p>
<pre><code>      1        300          416.67        99915.67
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Formatting by tabs is historically tricky. As soon as one of your fields becomes longer than a tabstep, your whole formatting breaks. In this case, that field is the header <code>"payment"</code>.</p>
<p>Rather than using tabs, you could calculate the column width (in characters) and create a <code>str.format</code> formatting that matches. I'm assuming you have data like</p>
<pre><code>data = [(1, 500, 416.67, 99916.67),
        (2, 500, 416.32, 99832.99),
        ...]
header = [("month", "payment", "interest", "balance")]
</code></pre>
<p>And are printing with:</p>
<pre><code>for line in header + data:
    print("\t".join(line))
</code></pre>
<p>Instead, you'll need to run through your data an extra time. Once to establish column width, then once to print.</p>
<pre><code>colwidths = []
for column in zip(*(header + data)):
    colwidths.append(len(str(max, column, key=lambda s: len(str(s)))) + 1)
    # the `+ 1` in this case being the column margin

formatting = "".join(r"{{:{}}}".format(width for width in colwidths))

for line in header + data:
    print(formatting.format(*line))
</code></pre>
<hr/>
<p>Alternatively you could have <code>tabulate</code> do the job for you. This is a 3rd-party module that's kept in the pypi package manager <a href="https://pypi.python.org/pypi/tabulate" rel="nofollow">here</a>. Install it with</p>
<pre><code>pip install tabulate
</code></pre>
<p>Then use code like:</p>
<pre><code>import tabulate

data = [(1, 500, 416.67, 99916.67),
        (2, 500, 416.32, 99832.99),
        ...]
header = [("month", "payment", "interest", "balance")]

print(tabulate.tabulate(data, headers=*header))
</code></pre>
</div>
<span class="comment-copy">The word <code>"payment"</code> is long enough that it breaks through the next tabstep (generally 8 characters). Instead of using tabs, use spaces.</span>
<span class="comment-copy">If you don't want to write your own tabulation logic, you can drop in <a href="https://pypi.python.org/pypi/tabulate" rel="nofollow noreferrer">tabulate</a> to do it for you. <code>pip install tabulate</code></span>
<span class="comment-copy">Can you explain the different formating numbers used?</span>
<span class="comment-copy">Thank you clean and perfect!</span>
<span class="comment-copy">this is great, thank you</span>
