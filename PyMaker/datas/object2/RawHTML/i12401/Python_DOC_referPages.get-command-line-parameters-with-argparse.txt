<div class="post-text" itemprop="text">
<p>I´m trying to use argparse of Python but I cannot get a command line parameter.</p>
<p>Here my code:</p>
<pre><code>DEFAULT_START_CONFIG='/tmp/config.json'

parser = argparse.ArgumentParser(description='Start the Cos service and broker for development purposes.')
parser.add_argument('-c', '--config', default=DEFAULT_START_CONFIG, action=FileAction, type=str, nargs='?',
                help='start configuration json file (default:' +  DEFAULT_START_CONFIG + ')')

args = parser.parse_args()
</code></pre>
<p>But then when I run my python script like:</p>
<pre><code>./start.py -c /usr/local/config.json
</code></pre>
<p>Instead of getting this path it is getting the default value defined (<code>/tmp/config.json</code>).</p>
<pre><code>print args.config ---&gt; "/tmp/config.json"
</code></pre>
<p>What I´m doing wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">The standard documentation</a> doesn't mention <code>FileAction</code>. Instead there's a class <a href="https://docs.python.org/3/library/argparse.html#filetype-objects" rel="nofollow">FileType</a> intended for <code>type</code> argument, not for <code>action</code>.</p>
<p>So I would write something like this:</p>
<pre><code>DEFAULT_START_CONFIG='/tmp/config.json'

parser = argparse.ArgumentParser(description='Start the Cos service and broker for development purposes.')
parser.add_argument('-c', '--config', default=DEFAULT_START_CONFIG,
    type=argparse.FileType('r'), help='start configuration json file')
args = parser.parse_args()
print(args)
</code></pre>
<p>This gives me the following:</p>
<pre><code>$ python test3.py
Namespace(config=&lt;open file '/tmp/config.json', mode 'r' at 0x7fd758148540&gt;)
$ python test3.py -c
usage: test3.py [-h] [-c CONFIG]
test3.py: error: argument -c/--config: expected one argument
$ python test3.py -c some.json
usage: test3.py [-h] [-c CONFIG]
test3.py: error: argument -c/--config: can't open 'some.json': [Errno 2] No such file or directory: 'some.json'
$ touch existing.json
$ python test3.py -c existing.json
Namespace(config=&lt;open file 'existing.json', mode 'r' at 0x7f93e27a0540&gt;)
</code></pre>
<p>You may subclass <code>argparse.FileType</code> to something like <code>JsonROFileType</code> which would check if the supplied file is actually a JSON of expected format etc, but this seems to be out of the scope of the question.</p>
</div>
<span class="comment-copy">Hopefully, <code>DEFAULT_START_CONFIG='/tmp/config.json'</code> and it's defined within the script ?</span>
<span class="comment-copy">yes, has quotes and it´s defined in the script</span>
<span class="comment-copy">I'm surprised it ran without error, with that unknown <code>FileAction</code>.</span>
<span class="comment-copy">It was not unknown, it´s just that a colleague did that class, and I did not notice.</span>
<span class="comment-copy">That was exactly the problem</span>
