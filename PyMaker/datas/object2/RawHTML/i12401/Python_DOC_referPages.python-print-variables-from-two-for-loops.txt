<div class="post-text" itemprop="text">
<p>I have two <code>for loops</code> where I iterate through the files in two folders. When I want to print the variables separately it works fine (see below):</p>
<pre><code>def sorted_ls(path):
    ctime = lambda f: os.stat(os.path.join(path, f)).st_ctime
    return sorted(os.listdir(path), key=ctime)

#one
ordered_list_one = list(sorted_ls('C:\Users\folder_one\\'))
for i in ordered_list_one:
    print "%s" % i
    #prints out monkey, panda, cow

#two
ordered_list_two = list(sorted_ls('C:\Users\folder_two\\'))
for j in ordered_list_two:
    print "%s" % j
    #prints out bananas, bamboo, grass
</code></pre>
<p>However, I want to have the outputs from both loops in another print statement, like so:</p>
<pre><code>print "The %s %i likes to eat %s %j"    
</code></pre>
<p>So that this will be the final output:</p>
<pre><code>The monkey likes to eat bananas
The panda likes to eat bamboo
The cow likes to eat grass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way run concurrently on two lists is the built-in <code>zip</code> function in Python.</p>
<pre><code>ordered_list_one = list(sorted_ls('C:\Users\folder_one\\'))
ordered_list_two = list(sorted_ls('C:\Users\folder_two\\'))

for item_one, item_two in zip(ordered_list_one, ordered_list_two):
    print "The %s likes to eat %s" % (item_one, item_two)
</code></pre>
<p>Read more: <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow">https://docs.python.org/2/library/functions.html#zip</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can't do it with two loops; but you can make one loop iterate over both sets of values. See what happens if you use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> and iterate over <code>zip(ordered_list_one, ordered_list_two)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you can ensure that both outputs have the same length you can simply access the elements by index (I assume this makes sense because otherwise you will see unexpected results anyway):</p>
<pre><code>folder1 = list(sorted_ls("C:\Users\folder_one"))
folder2 = list(sorted_ls("C:\Users\folder_two"))

for idx in range(len(folder1)):
    print("The {} likes to eat {}".format(folder1[idx], folder2[idx]))
</code></pre>
</div>
