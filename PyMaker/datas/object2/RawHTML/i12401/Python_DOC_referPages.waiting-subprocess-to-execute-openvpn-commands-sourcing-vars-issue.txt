<div class="post-text" itemprop="text">
<p>I have a problem with waiting sub-process running from within python.I've read tons of info about it, here as well. Sorry to lift this question ones again but still no solution for me.</p>
<p>My code</p>
<pre><code>cmds = "cd /etc/openvpn/easy-rsa &amp;&amp; . ./vars &amp;&amp; ./clean-all &amp;&amp; ./pkitool --initca &amp;&amp; ./pkitool --server &amp;&amp; ./build-dh"
runCmds = subprocess.Popen(cmds, shell=True)
# run = os.system
# runCmds = run(cmds)
# runCmds.wait()
# runCmds.call() 
</code></pre>
<p>works perfect, but I need it wait subprocesses ending to run next portion of code. Commented lines not work for me. If I run something from commented I get error </p>
<blockquote>
<p>Please source the vars script first (i.e. "source ./vars") .......</p>
</blockquote>
<p>One time it seems <code>wait()</code> worked but after some time don't. Method <code>call()</code> runs commands but never ends. Why methods not working for me, especially <code>wait()</code>? I suggest my problem is somewhere in sourcing openvpn vars script in my environment. Please help me!<br/>
UPDATED: console log with </p>
<blockquote>
<p>set -x</p>
</blockquote>
<pre><code>  [25/Jan/2016 18:30:42]"POST /run-step3-process/ HTTP/1.1" 200 49
+ cd /etc/openvpn/easy-rsa
+ . ./vars
+ pwd
+ export EASY_RSA=/etc/openvpn/easy-rsa
+ export OPENSSL=openssl
+ export PKCS11TOOL=pkcs11-tool
+ export GREP=grep
+ /etc/openvpn/easy-rsa/whichopensslcnf /etc/openvpn/easy-rsa
+ export KEY_CONFIG=/etc/openvpn/easy-rsa/openssl-1.0.0.cnf
+ export KEY_DIR=/etc/openvpn/easy-rsa/keys
+ echo NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/openvpn/easy-rsa/keys
NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/openvpn/easy-rsa/keys
+ export PKCS11_MODULE_PATH=dummy
+ export PKCS11_PIN=dummy
+ export KEY_SIZE=1024
+ export CA_EXPIRE=3650
+ export KEY_EXPIRE=3650
+ export KEY_COUNTRY=SS
+ export KEY_PROVINCE=FFFFFFF
+ export KEY_CITY=AAAA
+ export KEY_ORG=GGGG
+ export KEY_EMAIL=qq@qq.yy
+ export KEY_EMAIL=mail@host.domain
+ export KEY_CN=ccccccc
+ export KEY_NAME=changeme
+ export KEY_OU=changeme
+ export PKCS11_MODULE_PATH=changeme
+ export PKCS11_PIN=1234
+ ./clean-all
+ ./pkitool --initca
Using CA Common Name: ccccccc
Generating a 1024 bit RSA private key
.................................++++++
............................................++++++
writing new private key to 'ca.key'
-----
+ ./pkitool --server
Using Common Name: ccccccc
Generating a 1024 bit RSA private key
............++++++
...........................++++++
writing new private key to 'ccccccc.key'
-----
Using configuration from /etc/openvpn/easy-rsa/openssl-1.0.0.cnf
Check that the request matches the signature
Signature ok
The Subject's Distinguished Name is as follows
countryName           :PRINTABLE:'SS'
stateOrProvinceName   :PRINTABLE:'FFFFFFF'
localityName          :PRINTABLE:'AAAA'
organizationName      :PRINTABLE:'GGGG'
organizationalUnitName:PRINTABLE:'changeme'
commonName            :PRINTABLE:'ccccccc'
name                  :PRINTABLE:'changeme'
emailAddress          :IA5STRING:'mail@host.domain'
Certificate is to be certified until Jan 22 18:30:42 2026 GMT (3650 days)

Write out database with 1 new entries
Data Base Updated
+ ./build-dh
Generating DH parameters, 1024 bit long safe prime, generator 2
This is going to take a long time
.....................................+...+..................................................................................................................................+................+..................................++*++*++*
</code></pre>
<p><strong>UPDATE 2</strong>
I have researched my code's behaviour:</p>
<pre><code>Before run:
1.apache(or localhost)restart
2.etc/openvpn/easy-rsa/keys clean
3.start browser with new incognito window
I give permission for etc/openvpn/easy-rsa/ as 47777

success == generating process run, new keys create
error == “please source ./vars.....”
CN == variable for server name in vars 
wait() == subrpocess.wait() code following string with bash commands

code ALWAYS work as below:

orig vars -&gt; edit -&gt; wait() -&gt; error
orig vars -&gt; edit (without CN, ./pkitool --server SERVER )-&gt; wait() -&gt; error

orig vars -&gt; NONedit -&gt;wait() -&gt; success

orig vars -&gt; edit -&gt;WITHOUT_wait() -&gt; success
edited vars -&gt; edit -&gt;WITHOUT_wait() -&gt; success
edited vars -&gt; edit(without CN, ./pkitool --server SERVER) -&gt; WITHOUT_wait() -&gt; success
orig vars -&gt; edit(WITH_ CN, ./pkitool --server) -&gt; WITHOUT_wait() -&gt; success
edited vars -&gt; edit(WITH_ CN, ./pkitool --server) -&gt; WITHOUT_wait() -&gt; success
</code></pre>
<p>I edit vars in python:</p>
<pre><code>from django.shortcuts import  HttpResponse, HttpRequest
import subprocess
from subprocess import Popen, PIPE
import json
import os.path

def pass3Cmds():
''' run commands on step3  to generate keys and cert in '/etc/openvpn/easy-     rsa/keys'
'''
    cmds = "cd /etc/openvpn/easy-rsa &amp;&amp; . ./vars &amp;&amp; ./clean-all &amp;&amp; ./pkitool --initca &amp;&amp; ./pkitool --server &amp;&amp; ./build-dh"
    runCmds = subprocess.Popen(cmds, shell=True)


def runStep3Process(request):
    '''collect data from step3 user form and insert 
    them in '/etc/openvpn/easy-rsa/vars'
    '''
    path = '/etc/openvpn/easy-rsa/vars'
    data = json.loads(request.body)

    key_cn = 'export KEY_CN="%s"' % data['key_cn']
    if request.method=='POST' and request.user.is_authenticated():
        with open(path) as varsfile:
            data = varsfile.readlines()
        try:
            data[69] = key_cn +'\n' 
            with open(path, 'w') as newvarsfile:
                newvarsfile.writelines(data)
                pass3Cmds()
                pem = '/etc/openvpn/easy-rsa/keys/dh1024.pem'
                if os.path.exists(pem):
                    return HttpResponse(successMsg2)
                return HttpResponse(dangerMsg)
        except IndexError:
            return HttpResponse(warnMsg2)
     return HttpResponse(warnMsg)
</code></pre>
<p>Ones again: code perfectly works with this way edited vars until I want run any code to wait subprocess. If I run e.g. subprocess.wait() I get "please source ./vars" error </p>
<p><strong>Question is: why editing vars in my case force error?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Your log shows the process waiting indefinitely in <code>./build-dh</code>.</p>
<ol>
<li><p>This is, as the associated log message indicates, a slow process. You shouldn't expect it to be instant.</p></li>
<li><p>However, if your system's entropy pool is low, it can be not merely slow but indefinite. Consider using <code>rngd</code> from the <code>rng-tools</code> package to use your system's hardware random number generator (presuming its CPU provides one) to populate the kernel's entropy pool.</p></li>
</ol>
<hr/>
<p>Beyond that, your usage is incorrect:</p>
<pre><code>./pkitool --server
</code></pre>
<p>...is not a valid command: You need to provide a CN to generate a server certificate, for instance:</p>
<pre><code>./pkitool --server server
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know "/etc/openvpn/easy-rsa" but if it establishes a vpn connection, the program will hang while the connection remains. In order to terminate it, you can use a timeout param to force a timeout on it. Use of subprocess.call. </p>
<pre><code>cmds = "cd /etc/openvpn/easy-rsa &amp;&amp; . ./vars &amp;&amp; ./clean-all &amp;&amp; ./pkitool --initca &amp;&amp; ./pkitool --server &amp;&amp; ./build-dh"
timeout = 60 * 10 # 10 minutes

try:
   ret_code = subprocess.call(cmds, shell=True, timeout=timeout)
   # return_code
except subprocess.TimeoutExpired: 
   # do_something()
</code></pre>
<p><code>call, check_call and check_output</code> accept a timeout parameter. </p>
</div>
<div class="post-text" itemprop="text">
<p>Import the time module and use <code>time.sleep(amount_of_seconds)</code>.</p>
</div>
<span class="comment-copy">Your code certainly <i>does</i> source <code>vars</code> inside the relevant shell. Are you sure you've actually edited the vars script per documentation?</span>
<span class="comment-copy">BTW, I'd strongly suggest redirecting <code>stdin</code> from <code>/dev/null</code>. Otherwise, openssl is potentially going to be trying to prompt from the stdin file descriptor it inherits from the parent (Python) process.</span>
<span class="comment-copy">...to ask it a different way: Do you get the same behavior when you run the same command interactively, without Python involved?</span>
<span class="comment-copy">when I run root@localhost:/etc/openvpn/easy-rsa# bash -x . ./vars  it print                            .: .: is a directory</span>
<span class="comment-copy">No, not like that. <code>cmds = "set -x; cd /etc/openvpn/easy-rsa &amp;&amp; . ./vars &amp;&amp; ./clean-all &amp;&amp; ./pkitool --initca &amp;&amp; ./pkitool --server &amp;&amp; ./build-dh"</code></span>
<span class="comment-copy">I try exclude ./build-dh command from common command string and add runCmds.wait() in sequence but error about source vars immediately occurs</span>
<span class="comment-copy">See update -- actually did do a checkout of easy-rsa 2.0 and run your exact code. Only reproduced one bug, and it had nothing to do with <code>vars</code>.</span>
<span class="comment-copy">./pkitool --server by default pick up CN value from vars that I previously edited so no need to run --server server thus in etc/openvpn/easy-rsa/keys i have e.g. 1111.crt and so on</span>
<span class="comment-copy">Not in the version I'm running it doesn't.</span>
<span class="comment-copy">I use 2.0 and it does. Seems you are right as for point 2. in your answer. Every time I run ./build-dh it lasts different time and sometimes hang up. Could you give some more details for point 2?</span>
<span class="comment-copy">I get 'module' object has no attribute 'TimeoutExpired' error</span>
<span class="comment-copy">According to the doc <a href="https://docs.python.org/3/library/subprocess.html#subprocess.TimeoutExpired" rel="nofollow noreferrer">docs.python.org/3/library/…</a>, New in version 3.3.</span>
<span class="comment-copy">I have python 2,7</span>
<span class="comment-copy">if I run "ret_code = subprocess.call(cmds, shell=True, timeout=timeout)"  without try/exept i receive  __init__() got an unexpected keyword argument 'timeout'</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/1191374/using-module-subprocess-with-timeout" title="using module subprocess with timeout">stackoverflow.com/questions/1191374/…</a>, in fact timeout is a python3 support.</span>
<span class="comment-copy">I try time.sleep, it makes pause but I  get the same error about sourcing vars again...</span>
<span class="comment-copy">For me it worked fine(</span>
<span class="comment-copy">Do you run my code with openvpn installed !?</span>
<span class="comment-copy">Sleeping for a preset time isn't an acceptable solutions for this anyhow. The amount of time these commands take will vary wildly based on the amount of entropy in the system's RNG pool, so the time to wait can't be reliably predicted.</span>
