<div class="post-text" itemprop="text">
<p>Getting strange difference inside Enthought Canopy vs. command line when trying to load and utilize urllib and/or urllib.request</p>
<p>Here's what I mean.  I'm running Python 3.5 on MacOS 10.11.3.  But I've tried this on Windows 10 machine too, and I'm getting the same results.  The difference appears to be between using Canopy and using command line.  </p>
<p>I'm trying to do basic screen scraping. Based on reading, I think I should be doing:</p>
<pre><code>from urllib.request import urlopen
html = urlopen("http://pythonscraping.com/pages/page1.html")
print(html.read())
</code></pre>
<p>This works at a command prompt.</p>
<p>BUT, inside canopy, this does not work.  Inside canopy I get the error</p>
<pre><code>ImportError: No module named request 
</code></pre>
<p>When Canopy tries to execute the from urllib.request import urlopen </p>
<p>Inside Canopy, THIS is what works:</p>
<pre><code>import urllib
html = urllib.urlopen("http://pythonscraping.com/pages/page1.html")
print(html.read())
</code></pre>
<p>I would really like to understand what is happening, as I don't want my Canopy python scripts to fail when I run them outside of Canopy.  Also, the Canopy approach does not seem consistent with docs that I've read... I just got there by trial &amp; error.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow"><code>urllib.request</code></a> is a module that only exists in Python 3. Enthought Canopy Distribution still ships with a version of Python 2.7 (<a href="http://docs.enthought.com/canopy/configure/release-notes.html#updated-python-version-3799" rel="nofollow">2.7.10</a> as of the current version 1.6.2).</p>
<p>In Python 2.x, you have the choice of using either <code>urllib</code> or <code>urllib2</code>, which expose functions like <code>urlopen</code> at the top level (e.g. <code>urllib.urlopen</code> rather than <code>urllib.request.urlopen</code>).</p>
<p>If you want your scripts to be able to run through either Python 3.x or in Enthought Canopy's Python distribution, then there are two possible solutions:</p>
<ol>
<li><p>Use <a href="http://docs.python-requests.org/en/latest/" rel="nofollow"><code>requests</code></a> - this is generally the recommended library to use for interacting with HTTP in Python. It's a third-party module which you can install using standard <code>pip</code> or <code>easy_install</code>, or from the <a href="https://www.enthought.com/products/canopy/package-index/" rel="nofollow">Canopy Package Index</a>. </p>
<p>Your equivalent code would look similar to:</p>
<pre><code># This allows you to use the print() function inside Python 2.x
from __future__ import print_function
import requests

response = requests.get("http://pythonscraping.com/pages/page1.html")
print(response.text)
</code></pre></li>
<li><p>Use conditional importing to bring in the current function you need regardless of version. This is just using built-in features of Python and will not require third-party libraries.</p>
<p>Your code would then look similar to:</p>
<pre><code># This allows you to use the print() function inside Python 2.x
from __future__ import print_function
import sys

try:
    # Try importing Python 3's urllib.request first.
    from urllib.request import urlopen
except ImportError:
    # Looks like we're running Python 2.something.
    from urllib import urlopen

response = urlopen("http://pythonscraping.com/pages/page1.html")

# urllib.urlopen's response object is different based
# on Python version.
if sys.version_info[0] &lt; 3:
    print(response.read())
else:
    # Python 3's urllib responses return the
    # stream as a byte-stream, and it's up to you
    # to properly set the encoding of the stream. This
    # block just checks if the stream has a content-type set
    # and if not, it defaults to just using utf-8
    encoding = response.headers.get_content_charset()
    if not encoding:
        encoding = 'utf-8'
    print(response.read().decode(encoding))
</code></pre></li>
</ol>
</div>
<span class="comment-copy">Worked like a charm.  Reconsidering my use of Canopy now!  Any suggestions on best IDE for use with Python 3.x?</span>
<span class="comment-copy">@A.Gani - I write all my Python in vim or SublimeText, so I don't have much familiarity with any IDE beyond that. A lot of people like PyCharm, though.</span>
