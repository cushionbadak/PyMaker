<div class="post-text" itemprop="text">
<p>Basically I am converting PHP CodeIgniter's Encryption Method into Python but I stuck while converting PHP's mcrypt_create_iv library into Python.</p>
<p>Thanks in Advance.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>mcrypt_create_iv()</code> is just a PHP interface to OS-level pseudo-random generators (it's not even a part of libmcrypt, contrary to what the function name implies).</p>
<p>Python provides such interfaces via the <a href="https://docs.python.org/3/library/os.html">os module</a> and what you need is <a href="https://docs.python.org/3/library/os.html#os.urandom">os.urandom()</a>.</p>
<p>For example, if you need to translate <code>mcrypt_create_iv(16, MCRYPT_DEV_URANDOM)</code> into Python, you'd need to write <code>os.urandom(16)</code>.</p>
<hr/>
<p>To clarify a possible confusion:</p>
<p>You may've used <code>MCRYPT_DEV_RANDOM</code> or <code>MCRYPT_RAND</code> in PHP, but there is literally no reason to use either of those instead of <code>MCRYPT_DEV_URANDOM</code> - it is just better by all measurable criteria:</p>
<ul>
<li><code>MCRYPT_RAND</code> in particular is NOT suitable for cryptographic purposes, or in other words - it is <em>insecure</em>.</li>
<li><code>MCRYPT_DEV_RANDOM</code> can and will block until <em>new</em> entropy data is available. You don't want blocking in a web application and the myth that <code>/dev/random</code> is somehow better than <code>/dev/urandom</code> because of blocking has been <a href="http://sockpuppet.org/blog/2014/02/25/safely-generate-random-numbers/">debunked</a>.</li>
</ul>
<p><code>MCRYPT_DEV_URANDOM</code> is both non-blocking and secure.</p>
</div>
