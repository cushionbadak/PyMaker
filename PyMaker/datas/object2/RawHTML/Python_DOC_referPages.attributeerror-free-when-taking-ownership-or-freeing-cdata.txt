<div class="post-text" itemprop="text">
<p>If I want to take ownership of a pointer that was <code>malloc</code>ed in C, the <a href="https://cffi.readthedocs.io/en/latest/ref.html" rel="nofollow noreferrer">docs for the Python <code>cffi</code> package</a> and <a href="https://stackoverflow.com/a/47080571/1485877">this answer</a> say to use <code>ffi.gc</code> with <code>lib.free</code> as the destructor. However, when I do this, I get <code>AttributeError: free</code> on the call to <code>lib.free</code>. Where is <code>lib.free</code> defined?</p>
<pre><code>from tempfile import TemporaryDirectory
from weakref import WeakKeyDictionary

from cffi import FFI

common_header = """
typedef struct {
  int32_t length;
  double* values;
} my_struct;
"""

# FFI
ffi = FFI()

ffi.cdef(common_header + """
int func(my_struct*);
""")
ffi.set_source('_temp', common_header + """
int func(my_struct *input) {
  double* values = malloc(sizeof(double) * 3);
  input-&gt;length = 3;
  input-&gt;values = values;
  return 0;
}
""")

with TemporaryDirectory() as temp_dir:
    lib_path = ffi.compile(tmpdir=temp_dir)

    lib = ffi.dlopen(lib_path)

    func = lib.func

# Using the library
my_struct = ffi.new('my_struct*')
func(my_struct)

# Taking ownership of the malloced member
global_weakkey = WeakKeyDictionary()
global_weakkey[my_struct] = ffi.gc(my_struct.values, lib.free)
# AttributeError: free
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The docs don't hammer this point, but you need to expose <code>free</code> as part of your lib's <code>cdef</code>s just like any other function in order to access it on the Python side. Put <code>void free(void *ptr);</code> in the call to <code>ffi.cdef</code> and the <code>free</code> function will be available via <code>lib.free</code> after compilation:</p>
<pre><code>from tempfile import TemporaryDirectory
from weakref import WeakKeyDictionary

from cffi import FFI

common_header = """
typedef struct {
  int32_t length;
  double* values;
} my_struct;
"""

# FFI
ffi = FFI()

ffi.cdef(common_header + """
int func(my_struct*);
void free(void *ptr); // &lt;-- Key to lib.free working later
""")
ffi.set_source('_temp', common_header + """
int func(my_struct *input) {
  double* values = malloc(sizeof(double) * 3);
  input-&gt;length = 3;
  input-&gt;values = values;
  return 0;
}
""")

with TemporaryDirectory() as temp_dir:
    lib_path = ffi.compile(tmpdir=temp_dir)

    lib = ffi.dlopen(lib_path)

    func = lib.func

# Using the library
my_struct = ffi.new('my_struct*')
func(my_struct)

# Taking ownership of the malloced member
global_weakkey = WeakKeyDictionary()
global_weakkey[my_struct] = ffi.gc(my_struct.values, lib.free)
</code></pre>
</div>
