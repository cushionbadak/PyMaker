<div class="post-text" itemprop="text">
<p>I have a dataframe with date values and would like to manipulate them to 1 Jan or later. Since I need to do this element-wise, I use <code>np.maximum()</code>. The code below however gives </p>
<p><code>TypeError: Cannot compare type 'Timestamp' with type 'int'</code>.</p>
<p>What's the appropriate method to deal with this kind of data type?</p>
<pre><code>import pandas as pd
import numpy as np

df = pd.DataFrame({'date': np.arange('1999-12', '2000-02', dtype='datetime64[D]')})
df['corrected_date'] = np.maximum(pd.to_datetime('20000101', format='%Y%m%d'), df['date'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For me working comparing with <code>Series</code>:</p>
<pre><code>s  = pd.Series(pd.to_datetime('20000101', format='%Y%m%d'), index=df.index)
df['corrected_date'] = np.maximum(s, df['date'])
</code></pre>
<p>Or with <code>DatetimeIndex</code>:</p>
<pre><code>i  = np.repeat(pd.to_datetime(['20000101'], format='%Y%m%d'), len(df))
df['corrected_date'] = np.maximum(i, df['date'])
</code></pre>
</div>
<span class="comment-copy">Use <code>np.datetime64('2000-01-01', dtype='datetime64[D]')</code> for comparison?</span>
