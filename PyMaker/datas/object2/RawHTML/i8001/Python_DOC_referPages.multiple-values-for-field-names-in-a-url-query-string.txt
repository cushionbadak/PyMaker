<div class="post-text" itemprop="text">
<p>Python3's <code>urllib.parse.parse_qs</code> oddly returns a dictionary of <code>string, list&lt;string&gt;</code> for query strings:</p>
<pre><code>&gt;&gt;&gt; import urllib.parse as p
&gt;&gt;&gt; url = p.urlparse("http://exam.ple/path?query=string&amp;yes=no")
ParseResult(scheme='http', netloc='exam.ple', path='/path', params='', query='query=string&amp;yes=no', fragment='')

&gt;&gt;&gt; p.parse_qs(url.query)
{'query': ['string'], 'yes': ['no']}
</code></pre>
<p>The function's <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer" title="documentation">documentation</a> says that:</p>
<blockquote>
<p>The dictionary keys are the unique query variable names and the values are lists of values for each name.</p>
</blockquote>
<p>Can I take advantage of this "lists of values" capability somehow?</p>
<p>Neither <a href="https://en.wikipedia.org/wiki/Query_string" rel="nofollow noreferrer">Wikipedia</a>, nor <a href="https://stackoverflow.com/q/13373504/4532996">Stack Overflow</a>, nor <a href="https://tools.ietf.org/html/rfc3986#section-3.4" rel="nofollow noreferrer">the IETF specification</a> mention anything about "multiple" or "lists" of values for fields, and I can't find any such syntax:</p>
<pre><code>&gt;&gt;&gt; p.parse_qs(p.urlparse("http://exam.ple/path?query=string&amp;yes=no/a=0").query)
{'query': ['string'], 'yes': ['no/a=0']}
&gt;&gt;&gt; p.parse_qs(p.urlparse("http://exam.ple/path?query=string@yes=no").query)
{'query': ['string@yes=no']}
&gt;&gt;&gt; p.parse_qs(p.urlparse("http://exam.ple/path?query=string;yes=no").query)
{'query': ['string'], 'yes': ['no']}
&gt;&gt;&gt; p.parse_qs(p.urlparse("http://exam.ple/path?query=string,yes=no").query)
{'query': ['string,yes=no']}
</code></pre>
<p>No separator character seems to ever result in a key with a value containing more than one string. Is it possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>You will get a list longer than 1 element if there is a repeated query key:</p>
<pre><code>&gt;&gt;&gt; url = p.urlparse("http://exam.ple/path?query=string1&amp;query=string2")
&gt;&gt;&gt; p.parse_qs(url.query)
{'query': ['string1', 'string2']}
</code></pre>
</div>
<span class="comment-copy">That's...weird but ok</span>
<span class="comment-copy">It's a bit of an edge case, but necessary since it's technically valid. If this answers your question, could you please mark it as accepted?</span>
<span class="comment-copy">Yeah, I was waiting for it to let me do so :)</span>
