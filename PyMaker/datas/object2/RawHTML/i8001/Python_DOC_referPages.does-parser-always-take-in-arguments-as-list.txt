<div class="post-text" itemprop="text">
<p>Python Version: Python 3.5.1</p>
<p>Django Version: Django 1.10.2</p>
<p>I am trying to write my own django custom command and I noticed that to take in an argument, it always ends up as a list.</p>
<p>See <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html</a></p>
<p>Notice that the arguments for integers is a list of integer.</p>
<p>I wanted to have an argument that takes in a relative path or absolute path to a directory written in obviously str format.</p>
<p>My question is:</p>
<ol>
<li>is it even possible to only accept the argument as a single str object for the parser object?</li>
<li>if it's possible, what do I need to change?</li>
</ol>
<p>My current code is </p>
<pre><code>def add_arguments(self, parser):
    parser.add_argument('path', nargs='+', type=str)

    # Named (optional) arguments
    parser.add_argument(
        '--whiteware',
        action='store_true',
        dest='whiteware',
        default=True,
        help='Affects whiteware variants only',
    )

def handle(self, *args, **options):
    directory_in_str = options['path']

    print(directory_in_str)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your issue is with the way you are creating the command line argument <code>path</code>.</p>
<p>From the documentation,</p>
<blockquote>
<p>nargs - The number of command-line arguments that should be consumed.</p>
</blockquote>
<p>and <code>nargs='+'</code> implies one or more space separated arguments, which would be casted into a list by <code>argparse</code>.</p>
<p>Now, if you are expecting a string, you can just do:</p>
<pre><code>parser.add_argument('path', type=str) #type is str by default, no need to specify this explicitly.
</code></pre>
<p>Note that <code>nargs</code> is extremely useful when you want to restrict the choice types, etc.</p>
<p>For example:</p>
<pre><code>parser.add_argument('path', nargs='+', choices=['a', 'b', 'c'])
</code></pre>
<p>This way, you can provide a bunch of options which would be available as a list for consumption. </p>
<p>Or even:</p>
<pre><code>parser.add_argument('path', choices=['a', 'b', 'c'])
</code></pre>
<p>If you want a single option as a string.</p>
<p>You can read more on <a href="https://docs.python.org/2/library/argparse.html#the-add-argument-method" rel="nofollow noreferrer">argparse options here in the documentation</a></p>
</div>
<span class="comment-copy">what is the goal? Can you show an example of a valid input and an example of invalid input as a part of the question ? The <code>nargs='+'</code> is what is taking the input in as a string. Remove that, and you should get the arguments as a string.</span>
<span class="comment-copy">@Exprator if i can downvote your comment I would. I already am creating the custom command file. I am talking specifically about the parser object within the custom command class</span>
<span class="comment-copy">thanks @karthikr your comment was the right direction I needed. Thank you. Feel free to create an answer so I can mark it as right.</span>
