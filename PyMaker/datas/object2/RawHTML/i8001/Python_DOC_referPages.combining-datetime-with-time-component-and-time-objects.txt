<div class="post-text" itemprop="text">
<p>Well, I have datetime objects with information like <strong>2013-10-01 14:15:00</strong> and time objects like </p>
<ol>
<li><strong>1900-01-01 00:00:49.235000</strong></li>
<li><strong>1900-01-01 00:00:49.465000</strong></li>
<li><strong>1900-01-01 00:00:49.695000</strong></li>
</ol>
<p>The time objects are actually progressive increments which I'd like to add to the datetime object. As described <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.combine" rel="nofollow noreferrer">here</a>, </p>
<blockquote>
<p>If date is a datetime object, its time components and tzinfo attributes are ignored.</p>
</blockquote>
<p>I wrote the code below. How should it be updated to be able to add these time objects to the datetime object as increments?</p>
<pre><code>def CombineDateTime(date_str, time_str, date_fmt, time_fmt, equipment, sample_name):

import datetime

try:
    date_obj = datetime.datetime.strptime(date_str, date_fmt)

    time_obj = datetime.datetime.strptime(time_str, time_fmt)

    return datetime.datetime.combine(date_obj.date(), time_obj.time())

except:
    return 'Error'
</code></pre>
<p>Output:</p>
<ol>
<li><strong>2013-10-01 00:00:49.235000</strong></li>
<li><strong>2013-10-01 00:00:49.465000</strong></li>
<li><strong>2013-10-01 00:00:49.695000</strong></li>
</ol>
<p>Expected output:</p>
<ol>
<li><strong>2013-10-01 14:15:49.235000</strong></li>
<li><strong>2013-10-01 14:15:49.465000</strong></li>
<li><strong>2013-10-01 14:15:49.695000</strong></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>The output that you get is because <code>2013-10-01</code> and <code>00:00:49.235000</code> to your datetime.datetime.combine() and the time present in date_obj <code>14:15:00</code> is not taken into consideration at that point!</p>
<p>Therefore, you have the add the date_obj timedelta to your time_obj before you combine!</p>
<pre><code>date_time=date_obj.time()
time_obj += datetime.timedelta(hours=date_time.hour,minutes=date_time.minute,seconds=date_time.second,microseconds=date_time.microsecond)
</code></pre>
<p>That is,</p>
<pre><code>def CombineDateTime(date_str, time_str, date_fmt, time_fmt, equipment, sample_name):
    import datetime
    try:
        date_obj = datetime.datetime.strptime(date_str, date_fmt)
        date_time=date_obj.time()

        time_obj = datetime.datetime.strptime(time_str, time_fmt)
        time_obj += datetime.timedelta(hours=date_time.hour,minutes=date_time.minute,seconds=date_time.second,microseconds=date_time.microsecond)

        return datetime.datetime.combine(date_obj.date(),time_obj.time())

    except Exception as e:
        #print e 
        return 'Error'
</code></pre>
</div>
<span class="comment-copy">Great answer, thank you for your attention!</span>
