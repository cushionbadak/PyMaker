<div class="post-text" itemprop="text">
<p>My code looks something like this:</p>
<pre><code>import requests
s = requests.Session()
r = s.get(a, verify=False)
r = s.get(b, verify=False)
r = s.get(c, verify=False)
r = s.get(d, verify=False)
r = s.get(e, verify=False)
r = s.get(f, verify=False)
r = s.get(g, headers={"a":"b"}, verify=False)
r = s.post(h, data={"a","b"},verify=False)
</code></pre>
<p>How can I avoid having to explicitly write <code>verify=False</code> all the time? </p>
</div>
<div class="post-text" itemprop="text">
<p>In the case of python requests, you can make the SSL verify flag last the lifetime of that session by doing</p>
<pre><code>s.verify = False
</code></pre>
<p>More generally when a function accepts <code>named=value</code> type parameters the first thing to do is to inspect the method signature to see if the default value is perhaps what you want it to be. If it isn't the next thing is to see if the value be persisted as above (which <a href="http://docs.python-requests.org/en/master/api/#requests.Session.verify" rel="nofollow noreferrer">python requests</a> allows to do).</p>
<p>The third option is to create a simple wrapper which passes suitable values for all parameters</p>
<pre><code>def my_get(s, url):
    s.get(url, verify=False)
</code></pre>
<p>called as</p>
<pre><code>my_get(s, url)
</code></pre>
<p>Or you can get really ambitious and <a href="https://stackoverflow.com/questions/5626193/what-is-a-monkey-patch">monkey patch</a> the class from the library. But monkey patching can sometimes lead to unexpected side effects so it's best avoided unless as a very last resort.</p>
<p>References:<br/>
<a href="http://docs.python-requests.org/en/master/api/#requests.Session.verify" rel="nofollow noreferrer">the documentation for the <code>verify</code> attribute of the <code>Session</code> class</a>.<br/>
<a href="http://www.diveintopython.net/power_of_introspection/optional_arguments.html" rel="nofollow noreferrer">Using Optional and named arguments.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>easily can be done using <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>partial</code></a></p>
<pre><code>get_unverified = partial(s.get, verify=False)
post_unverified = partial(s.post, verify=False)
r = get_unverified(a)
r = get_unverified(b)
r = get_unverified(c)
r = get_unverified(d)
r = get_unverified(e)
r = get_unverified(f)
r = get_unverified(g, headers={"a":"b"})
r = post_unverified(h, data={"a","b"})
</code></pre>
</div>
<span class="comment-copy">somewhat related: <a href="http://stackoverflow.com/questions/16626789/functools-partial-on-class-method" title="functools partial on class method">stackoverflow.com/questions/16626789/…</a></span>
<span class="comment-copy">Your answer text is duplicated.</span>
<span class="comment-copy">oh thanks. there was an edit while I was editing and lead to a conflict I think.</span>
<span class="comment-copy">I guess the conflict was caused when I added the link to the documentation.</span>
<span class="comment-copy">Do you really want the documentation link so far away from the the part of the answer to which it applies?</span>
<span class="comment-copy">Note that this is not optimal if you want all instances of <code>Session</code> to act like that. Check out <a href="http://stackoverflow.com/questions/16626789/functools-partial-on-class-method" title="functools partial on class method">stackoverflow.com/questions/16626789/…</a></span>
