<div class="post-text" itemprop="text">
<p>I am developing a small program which I want to give to my younger friends to introduce them to the bare minimum basics of programming using Python.
In it, I want to add functionality to output the line of code that is being executed, as it is being executed, to the console (or as a variable within Python that can be printed using suitable commands).
I want this so that users of this program may learn better by understanding the underlying process that is going on real time, at the higher level (programming language execution).
I thought this would be possible especially because Python is an interpreter language, so the code is playing part until the penultimate step of executing it.</p>
<p>Is there any way to do this intrinsically? If not, I think there should be a way to write a program that will​ take another program as input and execute while also having access to source code. With some advanced parsing, that kind of design will be able to achieve this, but I'm looking for preferably a more natural way to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>This may not be perfect to teach using but surely exec would work?
As in:</p>
<pre><code>mycommand = "a = 5**3"
print(mycommand)
exec(mycommand)
print("a = "+str(a))
</code></pre>
</div>
<span class="comment-copy">Why not just use e.g. <a href="http://pythontutor.com/" rel="nofollow noreferrer">pythontutor.com</a>?</span>
<span class="comment-copy">This is to be done in a school-like environment, and real-time internet access is not a guarantee, unfortunately. (Not even for me).</span>
<span class="comment-copy">Well it's open source, so you can host it locally or see how it does what it does, but how to reimplement something like it is far too broad a question for SO.</span>
<span class="comment-copy">Hmm.. thanks for the comment. I'll check it out.</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">pdb — The Python Debugger</a> can do pretty much all of that -- step through code, print what line of code is next to be executed, display the result of executed code, etc - a great analytics tool.</span>
<span class="comment-copy">That's what I meant by the second part of my question. This will definitely work, but it will get complicated for <code>for</code> loops, nested operations, etc.</span>
<span class="comment-copy">No, no natural way to do it, python is too difficult to parse without a lot of complex logic that would just waste time when code can be viewed on almost all modern systems as its being run.</span>
