<div class="post-text" itemprop="text">
<p>I have a c++ map that I need to send to a python script for processing. I figured that I should put it in a PyDict and then send it. The problem s that my script doesn't receive it correctly </p>
<p>my c++</p>
<pre><code>#include &lt;Python.h&gt;
#include &lt;string&gt;

int main(int argc, char *argv[]) {
  Py_Initialize();

  PyObject *import, *attr, *instance, *methodcall, *arg, *tuple;
  PySys_SetPath("./py/");
  import = PyImport_ImportModule("class_test");
  attr = PyObject_GetAttrString(import, "TestMap");
  arg = PyString_FromString("arg from first");
  tuple = PyTuple_Pack(1, arg);
  instance = PyInstance_New(attr, tuple, NULL);

  PyObject *d = PyDict_New();
  PyDict_SetItemString(d, "k", PyInt_FromLong(3000)) ? printf("seting item failed\n") : printf("seting item succeeded\n");

  methodcall = PyObject_CallMethod(instance, "hello", "s", d);

  Py_DECREF(instance);
  Py_Finalize();
  return 0;
}
</code></pre>
<p>and my simple script </p>
<pre><code>class TestMap(CLBase):
  def __init__(self, c):
    self.c = c
    pass
  def hello(self, s):
    print "From python script"
    print s
</code></pre>
<p>the output is </p>
<pre><code>seting item succeeded
From python script
â˜º
</code></pre>
<p>so rather than printing the dictionary something like <code>{"k":3000}</code> it prints a smiley face </p>
<p><strong>I would really appreciate an answer using the default python API (using python.h) not any other library</strong></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>methodcall = PyObject_CallMethod(instance, "hello", "s", d);
</code></pre>
<p>With the <code>"s"</code> you're telling it that the argument is a <code>char*</code> but it's actually a dictionary (a <code>PyObject*</code>). If you use <code>"O"</code> it will be correctly interpreted as a <code>PyObject*</code>. The format string of <code>PyObject_CallMethod</code> is interpreted as per <code>Py_BuildValue</code> and so is documented <a href="https://docs.python.org/3/c-api/arg.html#c.Py_BuildValue" rel="nofollow noreferrer">here</a>.</p>
<p>The smiley face is just a re-interpretation of whatever is in the memory of the dict as a string.</p>
<hr/>
<p>Other than that you should be checking the return values of the Python API functions (<code>NULL</code> usually indicates an error) and there look to be some <code>PyObject</code>s that you never decref, so you're leaking memory.</p>
</div>
