<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3211041/how-to-join-two-generators-in-python">How to join two generators in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I want concatenate two iterators in an efficient way.</p>
<p>Suppose we have two iterators (in Python3)</p>
<pre><code>l1 = range(10)      # iterator over 0, 1, ..., 9
l2 = range(10, 20)  # iterator over 10, 11, ..., 19
</code></pre>
<p>If we convert them to lists, it is easy to concatenate like</p>
<pre><code>y = list(l1) + list(l2)  # 0, 1, ,..., 19
</code></pre>
<p>However, this can be not efficient.</p>
<p>I would like to do something like</p>
<pre><code>y_iter = l1 + l2  # this does not work
</code></pre>
<p>What is the good way to do this in Python3? </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>
<pre><code>from itertools import chain
y_iter = chain(l1, l2)
</code></pre>
<p>It yields all the items from <code>l1</code> and then all the items from <code>l2</code>. Effectively concatenating the sequence of yielded items. In the process it consumes both.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use the chain() function provided by the itertools</p>
<p>itertools.chain()</p>
</div>
<span class="comment-copy">See the docs for <code>itertools.chain()</code>.</span>
