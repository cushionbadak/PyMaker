<div class="post-text" itemprop="text">
<p>I am new to Python and am using version 2.7.1 as part of Hyperion FDMEE.
I have a file which I need to reorder the columns plus, split one column into 3 as part of the same file.</p>
<p>Source file;</p>
<pre><code>ACCOUNT;UD1;UD2;UD3;PERIOD;PERIOD;AMOUNT
QTY;032074;99953;53;2017.07.31;2017.07.31;40.91
COGS;032074;99953;53;2017.07.31;2017.07.31;-7488.36
TURNOVER;032074;99953;53;2017.07.31;2017.07.31;505.73
QTY;032075;99960;60;2017.07.31;2017.07.31;40.91
COGS;032075;99960;60;2017.07.31;2017.07.31;-7488.36
TURNOVER;032075;99960;60;2017.07.31;2017.07.31;505.73
</code></pre>
<p>I have managed to reorder the columns per this script;</p>
<pre><code>infilename = fdmContext["OUTBOXDIR"]+"/Targit_1707.dat"
outfilename = fdmContext["OUTBOXDIR"]+"/TargitExport.csv"

import csv

infile = open(infilename, 'r')
outfile = open(outfilename, 'w+')

for line in infile:
  column = line.split(';')


  outfile.write(column[1] + ";" + column[2] + ";" + column[3] + ";" + column[4] + ";" + column[0] + ";" + str(column[6].strip('\n')) + ";201701" + "\n")


outfile.close()
infile.close()
</code></pre>
<p>Producing the result;</p>
<pre><code>UD1;UD2;UD3;PERIOD;ACCOUNT;AMOUNT;201701
032074;99953;53;2017.07.31;QTY;40.91;201701
032074;99953;53;2017.07.31;COGS;-7488.36;201701
032074;99953;53;2017.07.31;TURNOVER;505.73;201701
032075;99960;60;2017.07.31;QTY;40.91;201701
032075;99960;60;2017.07.31;COGS;-7488.36;201701
032075;99960;60;2017.07.31;TURNOVER;505.73;201701
</code></pre>
<p>but I am struggling to transpose the Account column (QTY, COGS, TURNOVER) into seperate columns as in the example below;</p>
<pre><code>UD1;UD2;UD3;PERIOD;QTY;COGS;TURNOVER;201701
032074;99953;53;2017.07.31;40.91;-7488.36;505.73;201701
032075;99960;60;2017.07.31;40.91;-7488.36;505.73;201701
</code></pre>
<p>Any suggestions would be very much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <code>dict</code>, for instance:</p>
<pre><code>import csv

fieldnames = infile.readline()[:-1]
fieldnames = fieldnames.split(';')[1:5] + ['QTY', 'COGS', 'TURNOVER']

writer = csv.DictWriter(outfile, fieldnames=fieldnames)
writer.writeheader()

record_dict = {}
for i, line in enumerate(infile):
    if not line: break

    line = line[:-1].split(';')

    # Assign column data every 1,2,3 lines
    mod_row = (i % 3)+1

    if mod_row == 1:
        record_dict['QTY'] = line[6]
        record_dict['UD1'] = line[1]
        # ... and so on
    if mod_row == 2:
        record_dict['COGS'] = line[6]
    if mod_row == 3:
        record_dict['TURNOVER'] = line[6]

        writer.writerow(record_dict)
        record_dict = {}
</code></pre>
<blockquote>
<p><strong>Output</strong>:<br/>
  UD1,UD2,UD3,PERIOD,QTY,COGS,TURNOVER<br/>
  032074,,,,40.91,-7488.36,505.73<br/>
  032075,,,,40.91,-7488.36,505.73  </p>
</blockquote>
<p><strong><em>Tested with Python: 3.4.2</em></strong></p>
<blockquote>
<p><strong>Read about</strong>:<br/>
  Python Â» 3.6.1 Documentation <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer">csv.DictWriter</a></p>
</blockquote>
</div>
<span class="comment-copy">Thanks for your help. I get the following error; SyntaxError: mismatched character '\n' expecting '''. I assume it is reading a line break somewhere. I tried to amend the header element to strip the \n element, but to no avail.</span>
<span class="comment-copy">Thanks stovfl. I was actually having issues with the Header section in the original and had to change the original code to;    header = infile.readline()[:-1].split(';') header.append('QTY') header.append('COGS') header.append('TURNOVER') which worked fine, and then stripped out the amount column(no longer required), but the method you have listed makes much more sense. All the rest was fine, updated it to read/write the files I needed and for some formatting change. I'm starting to like python as a language :)</span>
<span class="comment-copy">votes and accepted all done! Appreciate the help.</span>
