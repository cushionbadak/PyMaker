<div class="post-text" itemprop="text">
<p>I am assuming that Attribute reference is kind of similar to static class in Java. </p>
<p>For example: I have declared a class</p>
<pre><code>&gt;&gt;&gt; class Square:
        def __init__(self):
                self.side=0
        def area(self):
                print(self.side*self.side)
</code></pre>
<p>Then this line works fine: </p>
<pre><code>&gt;&gt;&gt; Square.side=2
</code></pre>
<p>But getting the error while accessing the 'area' method</p>
<pre><code>&gt;&gt;&gt; Square.area()
</code></pre>
<p>Could someone explain how actually attribute reference in python works? 
And clarify my assuming is correct or not as well? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use static mehtods in python, but not that way. Think about semantics also, not only rough syntax.</p>
<p><code>Square</code> is a describer for every possible square. Would it make any sense to say <code>square.size = 3</code>? Probably not, because then we limit the subject to 3-unit sized squares, not every square.</p>
<p>Same goes for <code>area</code>. You do not want the area of a "square". You want the area of a specific square - or as called in python, the <code>instance</code>. Therefore, your program will make a lot more by assigning an instance of a <code>Square</code> to a variable, and using that variable to calculate the area:</p>
<pre><code>&gt;&gt;&gt; s = Square()

&gt;&gt;&gt; s.side = 1
&gt;&gt;&gt; s.area()
1
&gt;&gt;&gt; s.side = 3
&gt;&gt;&gt; s.area()
9
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To access area method ,you need to create Square object as it is instance method.</p>
<pre><code>square_object=Square()
square_object.side=2
square_object.area() 
#prints 4
</code></pre>
<p>For more information on classes,instance methods,class methods refer </p>
<p><a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html</a></p>
</div>
<span class="comment-copy">You're setting a new attribute on the class (not on the instance) in the first case</span>
<span class="comment-copy">Assigning to a <i>class attribute</i> is like creating a static <i>variable</i> in Java. There really are no "static classes" in Python, and no real need for them. Static classes really only make sense in a language like Java, which forces you to write class definitions for <i>everything</i>. In Python, you would just use a module with funcitons.</span>
<span class="comment-copy">So, attribute reference in java is not similar compared to static class ??</span>
