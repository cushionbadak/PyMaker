<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/24085680/why-do-backslashes-appear-twice">Why do backslashes appear twice?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2953834/windows-path-in-python">Windows path in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a dictionary:</p>
<pre><code>my_dictionary = {"058498":"table", "064165":"pen", "055123":"pencil"}
</code></pre>
<p>I iterate over it:</p>
<pre><code>for item in my_dictionary:
    PDF = r'C:\Users\user\Desktop\File_%s.pdf' %item
    doIt(PDF)

def doIt(PDF):
    part = MIMEBase('application', "octet-stream")
    part.set_payload( open(PDF,"rb").read() )
</code></pre>
<p>But I get this error:</p>
<pre><code>IOError: [Errno 2] No such file or directory: 'C:\\Users\\user\\Desktop\\File_055123.pdf'
</code></pre>
<p>It can't find my file. Why does it think there are double backslashes in file path? </p>
</div>
<div class="post-text" itemprop="text">
<p>The double backslash is not wrong, python <em>represents</em> it way that to the user. In each double backslash <code>\\</code>, the first one <em>escapes</em> the second to imply an actual backslash. If <code>a = r'raw s\tring'</code> and <code>b = 'raw s\\tring'</code> (no 'r' and explicit double slash) then they are both represented as <code>'raw s\\tring'</code>.</p>
<pre><code>&gt;&gt;&gt; a = r'raw s\tring'
&gt;&gt;&gt; b = 'raw s\\tring'
&gt;&gt;&gt; a
'raw s\\tring'
&gt;&gt;&gt; b
'raw s\\tring'
</code></pre>
<p>For clarification, when you <em>print</em> the string, you'd see it as it would get used, like in a path - with just one backslash:</p>
<pre><code>&gt;&gt;&gt; print(a)
raw s\tring
&gt;&gt;&gt; print(b)
raw s\tring
</code></pre>
<p>And in this printed string case, the <code>\t</code> doesn't imply a <em>tab</em>, it's a backslash <code>\</code> followed by the letter 't'.</p>
<p>Otherwise, a string with no 'r' prefix and a single backslash would escape the character <em>after</em> it, making it evaluate the 't' following it == tab:</p>
<pre><code>&gt;&gt;&gt; t = 'not raw s\tring'  # here '\t' = tab
&gt;&gt;&gt; t
'not raw s\tring'
&gt;&gt;&gt; print(t)  # will print a tab (and no letter 't' in 's\tring')
not raw s       ring
</code></pre>
<p>So in the PDF path+name:</p>
<pre><code>&gt;&gt;&gt; item = 'xyz'
&gt;&gt;&gt; PDF = r'C:\Users\user\Desktop\File_%s.pdf' % item
&gt;&gt;&gt; PDF         # the representation of the string, also in error messages
'C:\\Users\\user\\Desktop\\File_xyz.pdf'
&gt;&gt;&gt; print(PDF)  # "as used"
C:\Users\user\Desktop\File_xyz.pdf
</code></pre>
<p>More info about <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer"><em>escape sequences</em> in the table here</a>. Also see <a href="https://stackoverflow.com/a/1436721/1431750"><code>__str__</code> vs <code>__repr__</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Double backslashes are due to <code>r</code>, raw string:</p>
<pre><code>r'C:\Users\user\Desktop\File_%s.pdf' ,
</code></pre>
<p>It is used because the <code>\</code> might escape some of the characters.</p>
<pre><code>&gt;&gt;&gt; strs = "c:\desktop\notebook"

&gt;&gt;&gt; print strs                #here print thinks that \n in \notebook is the newline char
c:\desktop
otebook

&gt;&gt;&gt; strs = r"c:\desktop\notebook"  #using r'' escapes the \
&gt;&gt;&gt; print strs

c:\desktop\notebook

&gt;&gt;&gt; print repr(strs)   #actual content of strs
'c:\\desktop\\notebook'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It doesn't. Double backslash is just the way of the computer of saying backslash. Yes, I know this sounds weird, but think of it this way - in order to represent special characters, backslash was chosen as an escaping character (e.g. \n means newline, and not the backslash character followed by the n character). But what happens if you actually want to print (or use) a backslash (possibly followed by more characters), but you don't want the computer to treat it as an escaping character? In that case we escape the backslash itself, meaning we use a double backslash so the computer will understand it's a single backslash.</p>
<p>It's done automatically in your case because of the <code>r</code> you added before the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>save yourself from getting a headache you can use other slashes as well. 
if you know what I saying. the opposite looking slashes.</p>
<p>you're using now
<strong><code>PDF = 'C:\Users\user\Desktop\File_%s.pdf' %item</code></strong></p>
<p>try to use 
**</p>
<blockquote>
<p><strong>PDF = 'C:/Users/user/Desktop/File_%s.pdf' %item</strong></p>
</blockquote>
<p>**
it won't be treated as a escaping character .</p>
</div>
<div class="post-text" itemprop="text">
<p>alwbtc @
I dare say: "I found the bug..."</p>
<p>replace </p>
<pre><code>PDF = r'C:\Users\user\Desktop\File_%s.pdf' %item
doIt(PDF)`
</code></pre>
<p>with </p>
<pre><code>for item in my_dictionary:
    PDF = r'C:\Users\user\Desktop\File_%s.pdf' % mydictionary[item]
    doIt(PDF)`
</code></pre>
<p>in fact you were really looking for File_pencil.pdf (not File_055123.pdf).
You were sliding the index dictionary not its contents.
This forum topic maybe a side-effect.</p>
</div>
<span class="comment-copy">There is just a single backslash. You're seeing the string representation. The file doesn't exist.</span>
<span class="comment-copy">The double backslash is not wrong, python prints/represents it that to the user way. If <code>a = r'raw s\tring'</code> and <code>b = 'raw s\\tring'</code> (no 'r' and explicit double slash) then they are both represented as <code>'raw s\\tring'</code>.</span>
<span class="comment-copy">there's no <code>d</code>: <code>'C:\\Users\\user\\Desktop\\File_055123.pdf'</code></span>
<span class="comment-copy">Probably been edited out now.</span>
<span class="comment-copy">Sorry but this was not a helpful answer. So if double slashes are the case, then how does one fix it????</span>
<span class="comment-copy">@DeeWBee added some clarification about escape sequences and str vs repr.</span>
<span class="comment-copy">@DeeWBee: You don't. There is nothing to fix. It's already fine.</span>
<span class="comment-copy">In above example, if you display <code>strs</code> like <code>&gt;&gt;&gt; strs</code> you should get <code>c:\\desktop\\notebook</code>. print doesnt show the escaped i.e. double slash \\</span>
