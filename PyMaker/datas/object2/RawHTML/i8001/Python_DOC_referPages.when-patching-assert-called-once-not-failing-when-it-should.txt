<div class="post-text" itemprop="text">
<p>In python unittest it says mock.assert_called_once() will fail if it is called more than once. When patching I am not seeing that behavior.</p>
<p>ugh.py</p>
<pre><code>def foo(*args):
    pass

def bar():
    foo(1)
    foo(2)
</code></pre>
<p>tests.py </p>
<pre><code>from unittest import TestCase, main
from unittest.mock import patch
from ugh import bar

class Test(TestCase):

    @patch('ugh.foo')
    def test_called_once(self, foo_mock):
        bar()
        foo_mock.assert_called_once()

    @patch('ugh.foo')
    def test_called_count_one(self, foo_mock):
        bar()
        self.assertEqual(foo_mock.call_count, 1)

if __name__ == '__main__':
    main()
</code></pre>
<p>And test output.</p>
<pre><code>razorclaw% python tests.py
F.
======================================================================
FAIL: test_called_count_one (__main__.Test)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib64/python3.4/unittest/mock.py", line 1142, in patched
    return func(*args, **keywargs)
  File "tests.py", line 15, in test_called_count_one
    self.assertEqual(foo_mock.call_count, 1)
AssertionError: 2 != 1

----------------------------------------------------------------------
Ran 2 tests in 0.002s

FAILED (failures=1)
</code></pre>
<p>Using python 3.4.6 on linux</p>
</div>
<div class="post-text" itemprop="text">
<p><code>assert_called_once</code> doesn't exist in 3.4. It didn't exist until 3.6. If you are on 3.4 you can use <code>assert_called_once_with</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Run the test like this:</p>
<pre><code>python -m unittest tests
</code></pre>
</div>
<span class="comment-copy">It <i>is</i> <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called_once" rel="nofollow noreferrer">documented</a> as new in 3.6. In 3.4 there is no <code>assert_called_once</code> behaviour, you're just calling a mocked method like any other.</span>
<span class="comment-copy">I have modified my answer. One unfortunate gotcha with pythons mocking flexibility.</span>
<span class="comment-copy">In 3.5 it's an <code>AttributeError</code>, as any method starting <code>assert_</code> but not implemented seems to be.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/whatsnew/3.5.html#unittest-mock" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.5.html#unittest-mock</a></span>
