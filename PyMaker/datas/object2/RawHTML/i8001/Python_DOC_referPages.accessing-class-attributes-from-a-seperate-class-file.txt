<div class="post-text" itemprop="text">
<p>I'm a rookie so forgive me if this is obvious. I'm trying to access class attributes from a separate class file, as you can probably tell from the title. I run into a problem when calling the class.</p>
<pre><code>    class Example:
        def __init__(self, test):
            self.test = test
</code></pre>
<p>Say test is the attribute I wish to access.</p>
<pre><code>    from test import Example


    class Example2:
        def __init__(self):
        self.test = Example()
</code></pre>
<p>When I call example it says parameter test is unfilled. Let's pretend test already has an important value and I don't want to change it. What do I do in a situation like this and why?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to add a parameter for the <code>Example()</code> , <code>Example("test")</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>__init__</code> of <code>Example</code> takes an argument <code>test</code> which it assigns to class attribute <code>test</code>. So when you create an instance of <code>Exmaple</code> you need to provide this argument.</p>
<p>The error <code>parameter test is unfilled</code> is I think a PyCharm warning which actually means that when you are calling <code>self.test = Example()</code> in <code>def __init__</code> of <code>Example2</code>, you need to provide it a parameter.</p>
<p>Regarding "Let's pretend test already has an important value and I don't want to change it": you are creating a new object with <code>self.test = Example()</code> and the <code>test</code> attribute in that object will not have any value.</p>
<p>From the question summary, if you actually want to access the class attributes in another class, then you can create some getter functions in the class and use them in the other class. Or better make them properties. Read more here: <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#property</a></p>
</div>
<span class="comment-copy">Welcome to StackOverflow. Could you please provide the intended use (a short code sample how you "call" it, or how you would like to execute it), the expected outcome and the complete traceback of "When I call example it says parameter test is unfilled.". You might want to take a look at <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. Also: Your indentation is wrong in the second example, you should fix that because copying your code raises a SyntaxError when executed.</span>
<span class="comment-copy">" if you actually want to access the class attributes in another class, then you can create some getter functions in the class and use them in the other class. Or better make them properties" or you can just access them directly: <code>obj.attr</code>...</span>
<span class="comment-copy">@juanpa.arrivillaga, yes, nothing prevents one from doing that; just that its not considered Pythonic.</span>
<span class="comment-copy"><i>Actual</i>, that is consider the Pythonic way. Instead of hiding the attribute behind getters and setters, the Pythonic thing to do would be to directly accesses the attribute, like @juanpa.arrivillaga said.</span>
<span class="comment-copy">@yeniv on the contrary! One only uses a descriptor if one needs to. <i>That is the nicest thing about descriptors</i>. It let's you write classes without the boilerplate of getters and setters, so if you do need to modify how something is get or set, the behavior of all the code you might have written so far wont change, and you are free to write clean, beautiful code like <code>self.id = generate_id()</code> instead of <code>self.setID(generate_id())</code>. Only if and when you chose to modify how an attribute is accessed do you need to use descriptors. <i>Thats Pythonic</i>.</span>
<span class="comment-copy">@juanpa.arrivillaga, You are right. Thanks for the explanation.</span>
