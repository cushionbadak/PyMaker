<div class="post-text" itemprop="text">
<p>I would like to be able to check weather the user has inputed a 8-digit number, not for example, a 7 digit number, and tell them that the number they inputted is too long or not long enough.</p>
<p>For reference here is the input:</p>
<pre><code>cardNumber = input("What is your 8 digit card number: ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess you can use <code>len()</code> function.</p>
<p>Something like <code>if len(cardnumber) != 8:  print("Please, input 8 digit number.")</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the usual <code>len</code>:</p>
<p><strong>Python 3:</strong></p>
<pre><code>cardNumber = input("What is your 8 digit card number?")
s = len(cardNumber)
if s &lt; 8: print("Too short")
elif s &gt; 8: print("Too long")
else: print("Right Length")
</code></pre>
<p><strong>Python 2:</strong></p>
<pre><code>cardNumber = raw_input("What is your 8 digit card number?")
s = len(cardNumber)
if s &lt; 8: print("Too short")
elif s &gt; 8: print("Too long")
else: print("Right Length")
</code></pre>
<p>Generally, you can get the number of digits of an integer by using <code>len(str(number))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>In case you want to loop until the user has entered the correct number:</p>
<pre><code>try:
   input = raw_input  # make this Python 2.6+ and 3.5+ compatible
except NameError:
   pass

while True:
    cardNumber = input("What is your 8 digit card number: ")
    if len(cardNumber) == 8:
        break
    if len(cardNumber) &lt; 8:
        print("Your number is not long enough, please try again...")
    elif len(cardNumber) &gt; 8:
        print("Your number is too long, please try again...")
print("Thank you, your number is: {}".format(cardNumber)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your are using Python 2, use <a href="https://docs.python.org/2/library/functions.html#raw_input" rel="nofollow noreferrer"><code>raw_input</code></a> instead of <a href="https://docs.python.org/2/library/functions.html#input" rel="nofollow noreferrer"><code>input</code></a>, which will always return a <code>string</code>:</p>
<pre><code>&gt;&gt;&gt; cardNumber = raw_input("What is your 8 digit card number: ")

What is your 8 digit card number: 00000001

&gt;&gt;&gt; len(cardNumber)

8
</code></pre>
<p>In Python 2, <code>raw_input</code> will return the entered value as <code>string</code>, while <code>input</code> will evaluate the entered value as code, et is equivalent to <code>eval(raw_input(prompt))</code>.</p>
<p>You can check that with the following code:</p>
<pre><code>&gt;&gt;&gt; cardNumber = input("What is your 8 digit card number: ")

What is your 8 digit card number: 2 + 4

&gt;&gt;&gt; cardNumber

6
</code></pre>
<p>With Python 3, however, the old <code>raw_input</code> was renamed to <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input</code></a>, and the old <code>input</code> does not exists, although you can still achieve the same with <code>eval(input())</code>.</p>
<p>Once you have the <code>string</code> representation of the card number, you can use <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow noreferrer"><code>len</code></a> to get the number of characters.</p>
<p>However, I would rather use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>Regex</code></a> to validate the input instead of just checking the length, as you may have letters or other symbols as well. You can wrap the whole thing in a loop to keep asking until a valid value is entered. Assuming you are using Python 3, it will look like this:</p>
<pre><code>import re

from termcolor import colored

while True:
    cardNumber = input("What is your 8 digit card number: ")

    if not re.match('[0-9]{8}', cardNumber):
        print(colored("\nThe entered value is not valid. Please, try again.\n", "red"))
    else:
        break
</code></pre>
</div>
<span class="comment-copy">Did anyone solve your problem? If so, could you please accept the best answer (click the checkmark under the points). That will help other users that come across your question quickly spot the accepted answer and it also gives 15 rep. points to the author (:</span>
