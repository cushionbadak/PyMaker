<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31328300/python-logging-module-logging-timestamp-to-include-microsecond">Python Logging Module logging timestamp to include microsecond</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am using the logging module from Python and I need to get information about the starting and ending time of different functions calls. For this, I am currently using</p>
<pre><code>formatter = logging.Formatter('%(message)s %(asctime)s.%(msecs)03d %(levelname)s',
                              datefmt='%H:%M:%S')
</code></pre>
<p>Since the calls of a particular function do not last more than a few milliseconds, I would like to get a better precision and have more decimal digits. How can I do this?</p>
<p>I nice solution at: <a href="https://stackoverflow.com/questions/6290739/python-logging-use-milliseconds-in-time-format?noredirect=1&amp;lq=1">Python logging: use milliseconds in time format</a></p>
</div>
<div class="post-text" itemprop="text">
<p>For showing milliseconds:</p>
<pre><code>logging.Formatter(fmt='%(asctime)s.%(msecs)03d',datefmt='%Y-%m-%d,%H:%M:%S')
</code></pre>
<p>An extensive example so you can compare:</p>
<pre><code>def formatTime(self, record, datefmt=None):
    ct = self.converter(record.created)
    if datefmt:
        s = time.strftime(datefmt, ct)
    else:
        t = time.strftime("%Y-%m-%d %H:%M:%S", ct)
        s = "%s,%03d" % (t, record.msecs)
    return s
</code></pre>
<p>Che this <a href="https://stackoverflow.com/questions/6290739/python-logging-use-milliseconds-in-time-format/7517430#7517430">answer</a>
And also the <a href="https://docs.python.org/3/library/logging.html#logrecord-attributes" rel="nofollow noreferrer">doc</a></p>
<p>to see all the milliseconds you can use:</p>
<pre><code>import time

current_milli_time = lambda: int(round(time.time() * 1000))
</code></pre>
<p>Remember, 1000 milliseconds = 1 second, so you will be able to see 3 digits of milliseconds after the last second</p>
</div>
<span class="comment-copy">But what's the difference with what I am currently using?</span>
<span class="comment-copy">I will update the answer so you can compare an extensive example</span>
<span class="comment-copy">now you can call the second if you understand it better</span>
<span class="comment-copy">But I can already see milliseconds, I just want more digits. Does this change it? Thanks.</span>
<span class="comment-copy">Updated the anwer again, remember that you only can see 3 digits of milliseconds, and thats because 1000 milliseconds = 1 seconds, so, for example, 12:25:999 is followed by 12:26:000</span>
