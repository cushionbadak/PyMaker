<div class="post-text" itemprop="text">
<p>I am tring to extract the domain names out of a list of urls. just like in 
<a href="https://stackoverflow.com/questions/18331948/extract-domain-name-from-the-url">Extract domain name from the url</a><br/>
My problem is that the urls can be about everything, few examples:<br/>
<code>m.google.com</code> =&gt; <code>google</code><br/>
<code>m.docs.google.com</code> =&gt; <code>google</code><br/>
<code>www.someisotericdomain.innersite.mall.co.uk</code> =&gt; <code>mall</code><br/>
<code>www.ouruniversity.department.mit.ac.us</code> =&gt; <code>mit</code><br/>
<code>www.somestrangeurl.shops.relevantdomain.net</code> =&gt; <code>relevantdomain</code> <br/>
<code>www.example.info</code> =&gt; <code>example</code><br/>
And so on..<br/>
The diversity of the domains doesn't allow me to use a regex as shown in <a href="https://stackoverflow.com/questions/569137/how-to-get-domain-name-from-url">how to get domain name from URL</a> (because my script will be running on real time network traffic, the regex will have to be enormous in order to catch all kinds of domains as mentioned).<br/>
Unfortunately my web research the didn't provide any efficient solution.<br/>
Does any one have an idea of how to do this ?<br/>
Any help will be appreciated ! <br/>
Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>tldextract</code> which is more efficient version of <code>urlparse</code>,  <code>tldextract</code> accurately separates the <code>gTLD</code> or <code>ccTLD</code> (generic or country code top-level domain) from the registered <code>domain</code> and <code>subdomains</code> of a URL.</p>
<pre><code>&gt;&gt;&gt; import tldextract
&gt;&gt;&gt; ext = tldextract.extract('http://forums.news.cnn.com/')
ExtractResult(subdomain='forums.news', domain='cnn', suffix='com')
&gt;&gt;&gt; ext.domain
'cnn'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems you can use urlparse <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">https://docs.python.org/3/library/urllib.parse.html</a> for that url, and then extract the netloc.</p>
<p>And from the netloc you could easily extract the domain name by using split</p>
</div>
<div class="post-text" itemprop="text">
<p>With regex, you could use something like this:</p>
<p><code>(?&lt;=\.)([^.]+)(?:\.(?:co\.uk|ac\.us|[^.]+(?:$|\n)))</code></p>
<p><a href="https://regex101.com/r/WQXFy6/5" rel="nofollow noreferrer">https://regex101.com/r/WQXFy6/5</a></p>
<p>Notice, you'll have to watch out for special cases such as <code>co.uk</code>.</p>
</div>
<span class="comment-copy">Can u use an external lib?</span>
<span class="comment-copy">Gather a list of top-level domains, split your url by dots, right-strip your url from TLD, extract name.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/569137/how-to-get-domain-name-from-url">how to get domain name from URL</a></span>
<span class="comment-copy">Yes, I can use external libs. It is not a duplication (I even attached a link to this thread), I couldn't find a satisfying answer there.</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer"><b><code>urllib.parse</code></b></a></span>
<span class="comment-copy">It works !! Thank you very much !  :)</span>
<span class="comment-copy">Thank you for your response, unfortunately, using urlparse on url like <code>m.city.domain.com</code> returned me  <code>ParseResult(scheme='', netloc='', path='m.city.domain.com', params='', query='', fragment='')</code>, while the expected output was <code>domain</code></span>
