<div class="post-text" itemprop="text">
<p>I have a large list like this:</p>
<pre><code>mylist = [['pears','apples','40'],['grapes','trees','90','bears']]
</code></pre>
<p>I'm trying to remove all numbers within the lists of this list. So I made a list of numbers as strings from 1 to 100:</p>
<pre><code>def integers(a, b):
         return list(range(a, b+1))

numb = integers(1,100)

numbs = []
for i in range(len(numb)):
    numbs.append(str(numb[i])) # strings

numbs = ['1','2',....'100']
</code></pre>
<p>How can I iterate through lists in <code>mylist</code> and remove the numbers in <code>numbs</code>? Can I use list comprehension in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>mylist = [[item for item in sublist if item not in numbs] for sublist in mylist]</code> should do the trick.</p>
<p>However, this isn't <em>quite</em> what you've asked. Nothing was actually removed from <code>mylist</code>, we've just built an entirely new list and reassigned it to <code>mylist</code>. Same logical result, though.</p>
</div>
<div class="post-text" itemprop="text">
<p>If number is always in the end in sublist</p>
<pre><code>mylist = [ x[:-1] for x in mylist ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If numbers are always at the end and only once, you can remove the last item like:</p>
<pre><code>my_new_list = [x[:-1] for x in mylist]
</code></pre>
<p>If there is more (of if they are not ordered), you have to loop thru each elements, in that case you can use:</p>
<pre><code>my_new_list = [[elem for elem in x if elem not in integer_list] for x in mylist]
</code></pre>
<p>I would also recommend to generate the list of interger as follow :</p>
<pre><code>integer_list = list(map(str, range(1, 100)))
</code></pre>
<p>I hope it helps :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of enumerating all the integers you want to filter out you can use the <code>isdigit</code> to test each string to see if it really is only numbers:</p>
<pre><code>mylist = [['pears','apples','40'],['grapes','trees','90','bears']]
mylist2 = [[x for x in aList if not x.isdigit()] for aList in mylist]
print mylist2
[['pears', 'apples'], ['grapes', 'trees', 'bears']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have the following list:</p>
<pre><code>mylist = [['pears','apples','40'],['grapes','trees','90','bears']]
numbs = [str(i) for i in range(1, 100)]
</code></pre>
<p>Using list comprehension to remove element in <code>numbs</code></p>
<pre><code>[[l for l in ls if l not in numbs] for ls in mylist]
</code></pre>
<p>This is a more general way to remove digit elements in a list</p>
<pre><code>[[l for l in ls if not l.isdigit()] for ls in mylist]
</code></pre>
</div>
<span class="comment-copy">is always the last element the number?</span>
<span class="comment-copy">@Daniel No thats not always the case</span>
<span class="comment-copy">to remove ALL numbers or just those from <code>numb</code> range?</span>
<span class="comment-copy">In Python 3 <code>range</code> is an object, so you don't need to create a list, you can check for containment directly and efficiently.</span>
<span class="comment-copy">@PeterWood Can you show me an example? I'm curious.</span>
<span class="comment-copy">Just read the documentation: <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer"><b><code>range</code></b></a></span>
