<div class="post-text" itemprop="text">
<p>I am trying to read from a file that contains a character "|" that I need removed when copying the data to a new file. For example my data looks something like, where the content of one line transfers to another:</p>
<pre class="lang-none prettyprint-override"><code>| bob |  Timestamp: 1493651705861 |  sally |
</code></pre>
<p>I would like the "|" removed and after each time in appears the next set of text would move to the next line, so afterwards it would appear like the following:</p>
<pre class="lang-none prettyprint-override"><code>bob
Timestamp: 1493651705861
sally
</code></pre>
<p>I constructed the following code to read the old file line by line and then character by character and then checked if the character was a "|" and if it was to not write it. However, when I do so, my print statements do not print anything and the new file is empty. Here is the code I am working with:</p>
<pre><code>with open('example-file','r') as f, open('example-file-New','w') as fnew:
    line = f.readline()
    for line in f:
        for ch in line:
            print("character is: ")
            print(ch)
            if ch =="|":
                 print("Not printing character")
                 fnew.write('\n')
            else:
                fnew.write(ch)
    print('end of program')
    fnew.close()
</code></pre>
<p>Any help would be greatly appreciated as I am still trying to get used to Python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code works for me, but when I run it on your example input, I don't get your exact example output. Based on the output, I assume you also want to remove whitespace padding the text. There are a several ways of achieving this, but I like using the substitute <code>sub</code> method in the regular expression <code>re</code> <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">library</a>.</p>
<pre><code>import re
with open('example-file','r') as f, open('example-file-New','w') as fnew:
    for line in f:
        line = re.sub("^\|\s+", "", line)
        line = re.sub("\s+\|$", "", line)
        line = re.sub("\s+\|\s+", "\n", line)
        fnew.write(line)
</code></pre>
<p><code>"^\|\s+"</code> - match the first bar with adjacent whitespace</p>
<p><code>"\s+\|$"</code> - match the final bar with adjacent whitespace</p>
<p><code>"\s+\|\s+"</code> - match the other bars with adjacent whitespace</p>
<p>You can achieve this with fewer expressions, but I broke them up for clarity. I recommend investing a couple hours into familiarizing yourself with regex (regular expressions), as it will make your text-manipulation tasks <em>much</em> easier.</p>
</div>
<span class="comment-copy">Your code works for me. What else does your code do? How many lines are in your input file? FYI in Python, strings have a <code>replace</code> method that you can use to replace a character with another. For example <code>line.replace('|', '\n')</code>.</span>
<span class="comment-copy"><i>Basically</i> works for me, too, in the sense that the new file does not end up empty. BTW, you don't need to explicitly close files when you use a <code>with</code> statement to open it. Are you intentionally skipping the first line of the file? Do you really want each character printed on separates line like that? Do you really want all the spaces between "|" characters copied to the output? Copying the spaces means the text in the output file will have them in front and after each item in the original line.</span>
