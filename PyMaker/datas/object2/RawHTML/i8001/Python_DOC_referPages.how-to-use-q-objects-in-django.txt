<div class="post-text" itemprop="text">
<p>I am trying to understand how to make a simple search form for a website in Django. After some google search and few failures to do it on my own I ended up with the following code in views.py where 'q' is value retrieved from the form: </p>
<pre><code>class BookSearchListView(BookListView):
    def get_queryset(self):
        result=super(BookSearchListView, self).get_queryset()
        query=self.request.GET.get('q')
        if query:
            query_list=query.split()
            result=result.filter(reduce(operator.and_,(Q(title__icontains=q) for q in query_list))) 
        return result
</code></pre>
<p>I already understand how it works and why there is reduce and operator.and_ (I mean, I think I understand). But I do not understand why a simple  <code>result=result.filter(Q(somedbfield_icontains=q))</code> returns and error (even if input is a single word). I also don't understand why reduce needs to get bitwise value? </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>why a simple result.filter(Q(somedbfield_icontains=q)) returns and error</p>
</blockquote>
<p>The simplest variant would be <code>result.filter(somedbfield__icontains=q)</code> Q isn't needed there, Q is used to extend your filtering with logic operators (and, or, not). Also, notice the double underscore before <code>icontains</code>.</p>
<blockquote>
<p>why reduce needs to get bitwise value?</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/functools.html?highlight=reduce#functools.reduce" rel="nofollow noreferrer">It dosen't</a></p>
<p><code>reduce</code> is used to apply any function to an iterable of arguments: </p>
<p><code>operator.add(1, 2)</code> is the same as <code>1 + 2</code></p>
<p><code>reduce(operator.add, (1, 2, 3, 4, 5))</code> is the same as <code>((((1 + 2) + 3) + 4) + 5)</code></p>
<p>Works roughly like this:</p>
<pre><code>def reduce(function, iterable):
    it = iter(iterable)
    value = next(it)

    for element in it:
        value = function(value, element)

    return value
</code></pre>
</div>
<span class="comment-copy">Can you add the exact error messages that you're getting?</span>
<span class="comment-copy">when I reduce it to result=result.filter(Q(title__icontains=q) for q in query_list)  exception I get is: "not enough values to unpack (expected 2, got 1)"</span>
<span class="comment-copy">You can't pass an iterable to filter</span>
<span class="comment-copy"><code>reduce(operator.and_, (a, b, c, ...))</code> is the same as <code>a and b and c and ...</code></span>
<span class="comment-copy">So this is there is and_ : to get single non-iterable value ? If yes then what is the purpose of reduce()?</span>
<span class="comment-copy">Thanks. So Q is used here because there might be multiple terms in the input so it needs to use OR ? Is that right?</span>
<span class="comment-copy">Exactly. Q can be used with logic operators (and, or, not)</span>
