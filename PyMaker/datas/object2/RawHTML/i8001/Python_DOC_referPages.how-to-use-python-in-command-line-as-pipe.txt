<div class="post-text" itemprop="text">
<p>Why do I receive a syntax error for the following one liner python code?</p>
<pre><code>python -c 'import re; if True: print "HELLO";'
  File "&lt;string&gt;", line 1
    import re; if True: print "HELLO";
                ^
SyntaxError: invalid syntax
</code></pre>
<p>The following code works just fine</p>
<pre><code>python -c 'if True: print "HELLO";'
</code></pre>
<p>How can I change my one line to execute my intended script on a single line from the command line?</p>
</div>
<div class="post-text" itemprop="text">
<p>One option to work around this limitation is to specify the command with the <code>$'string'</code> format using the newline escape sequence <code>\n</code>.</p>
<pre><code>python -c $'import re\nif True: print "HELLO";'
</code></pre>
<p>Note: this is supported by shells such as bash and zsh, but is not valid POSIX sh.</p>
<p>As mentioned by @slaadvak, there are some other workarounds here: <a href="https://stackoverflow.com/questions/2043453/executing-python-multi-line-statements-in-the-one-line-command-line">Executing Python multi-line statements in the one-line command-line</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The problem isn't with the import statement specifically, its that you have anything before a control flow statement. This won't work, either:</p>
<pre><code>dan@dan:~&gt; python -c 'a = "1234" ; if True: print "hi"'
  File "&lt;string&gt;", line 1
    a = "1234" ; if True: print "hi"
                  ^
SyntaxError: invalid syntax
</code></pre>
<p>According to the Python reference (<a href="https://docs.python.org/2/reference/compound_stmts.html" rel="nofollow">https://docs.python.org/2/reference/compound_stmts.html</a>), ';' can only be used to combine "simple statements" together. In this case you're combining the simple statement <code>import re</code>, with <code>if True:</code>. <code>if True</code> isn't a simple statement, because it's introducing flow control, and is therefore a compound statement. At least that's how I interpret the documentation.</p>
<p>Here's the full text from the Python reference:</p>
<blockquote>
<p>Compound statements consist of one or more ‘clauses.’ A clause
  consists of a header and a ‘suite.’ The clause headers of a particular
  compound statement are all at the same indentation level. Each clause
  header begins with a uniquely identifying keyword and ends with a
  colon. A suite is a group of statements controlled by a clause. A
  suite can be one or more semicolon-separated simple statements on the
  same line as the header, following the header’s colon, or it can be
  one or more indented statements on subsequent lines</p>
</blockquote>
<pre><code>compound_stmt ::=  if_stmt
                   | while_stmt
                   | for_stmt
                   | try_stmt
                   | with_stmt
                   | funcdef
                   | classdef
                   | decorated
suite         ::=  stmt_list NEWLINE | NEWLINE INDENT statement+ DEDENT
statement     ::=  stmt_list NEWLINE | compound_stmt
stmt_list     ::=  simple_stmt (";" simple_stmt)* [";"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can embed newlines directly in the argument.</p>
<pre><code>$ python -c 'import re
&gt; if True:
&gt;  print "HELLO"
&gt; '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Why do I receive a syntax error for the following one liner python code?</p>
</blockquote>
<p><a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow">Python grammar</a> might forbid <code>small_stmt ';' compound_stmt</code>. <code>-c</code> argument is probably is interpreted as <code>file_input</code>: </p>
<pre><code>fileinput: (NEWLINE | stmt)* ENDMARKER
stmt: simple_stmt | compound_stmt
simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
small_stmt: import_stmt &lt;in this case&gt;
compound_stmt: if_stmt &lt;in this case&gt;
</code></pre>
<p>Note: there is a newline at the end of <code>simple_stmt</code>. <code>if_stmt</code> is not <code>small_stmt</code> it can't follow another <code>small_stmt</code> after <code>';'</code>. A newline is necessary to introduce <code>compound_stmt</code> after <code>small_stmt</code>.</p>
<p>It is not an issue because <code>bash</code> allows multiline arguments, just don't close the opening single quote until you done e.g.:</p>
<pre><code>$ python -c '
&gt; import re
&gt; if 1:
&gt;   print(1)
&gt; '
1
</code></pre>
<p>Note: <code>&gt;</code> are printed by the shell itself here. It is not entered by hand.</p>
</div>
<span class="comment-copy">Not an answer: Why do you want to put stuff into one line? What is the benefit, why is it better than a real script?</span>
<span class="comment-copy">The benefit is that I don't have any file write permissions on the system I am running this on. Also, I commonly want to copy and paste one liners to friends, and this makes it so they don't have to create files and grant those execute permissions.</span>
<span class="comment-copy">see <a href="http://stackoverflow.com/questions/6167127/how-to-put-multiple-statements-in-one-line" title="how to put multiple statements in one line">stackoverflow.com/questions/6167127/…</a></span>
<span class="comment-copy">This looks like being a duplicate of this : <a href="http://stackoverflow.com/questions/2043453/executing-python-multi-line-statements-in-the-one-line-command-line" title="executing python multi line statements in the one line command line">stackoverflow.com/questions/2043453/…</a>  At least, the link contains a lot of nice workarounds..</span>
<span class="comment-copy">@slaadvak I agree this is a duplicate of that question, but I like Rynants answer provided below better than the ones offered there. @ Ashkan That question answers why one liners cannot exist in a python file, but doesn't answer how to write one line python code on the command line, which is what I'm trying to do.</span>
<span class="comment-copy">Here's an extended example:  python -c $'print 123\nx = 20\nif x &gt; 20:\n\tprint "x &gt; 20"\nelse:\n\tprint "x &lt;= 20"'</span>
<span class="comment-copy">Upvoted as this answer provides the "why" to my question. And Rynant's provides the workaround.</span>
<span class="comment-copy">How do you do this? Is there some special keyboard combination? Because just pressing enter executes the line without embedding a new newline.</span>
<span class="comment-copy">If you are using any POSIX-compliant shell, pressing Enter in the middle of a quoted string should not execute the command (unless, for example, you've change the default <code>readline</code> binding for the Enter key).</span>
<span class="comment-copy">I'm using Ubuntu. Is that perhaps a bash shell instead of a POSIX-compliant shell?</span>
<span class="comment-copy"><code>bash</code> is POSIX-compliant in this sense.</span>
<span class="comment-copy">Turns out this only applies if you type it from beginning to end, without having to use the arrow keys to make any changes. This is less than desirable, but still good to know. Thanks.</span>
