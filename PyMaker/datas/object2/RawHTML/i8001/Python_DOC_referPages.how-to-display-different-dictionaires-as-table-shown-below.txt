<div class="post-text" itemprop="text">
<p>I need to display the following dictionaries:</p>
<pre><code>{'ch1':'New1'}
{'Show1':'one','Show2':'two','Show3':'three'}
{'ch2':'New2'}
{'Show4':'four','Show5':'five'}
</code></pre>
<p>To an output like this example:</p>
<pre><code> New1       New2
 one        four
 two        five
 three 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Unstructured data (no good system for choosing keys, four dictionaries instead of only one), so code for output them will be unstructured, too:</p>
<pre><code>title1 = {'ch1':'New1'}
data1  = {'Show1':'one','Show2':'two','Show3':'three'}
title2 = {'ch2':'New2'}
data2  = {'Show4':'four','Show5':'five'}


title  = "{:8s}{:10s}".format(title1['ch1'],   title2['ch2'])
row1   = "{:8s}{:10s}".format(data1 ['Show1'], data2 ['Show4'])
row2   = "{:8s}{:10s}".format(data1 ['Show2'], data2 ['Show5'])
row3   = "{:8s}{:10s}".format(data1 ['Show3'], ""             )

print(title)
print(row1)
print(row2)
print(row3)
</code></pre>
<p>It gives this output:</p>
<pre><code>New1    New2      
one     four      
two     five      
three        
</code></pre>
<p>as you wanted.</p>
<p>Construction as</p>
<pre><code>"{:8s}{:10s}".format(title1['ch1'],   title2['ch2'])
</code></pre>
<p>means that you reserve <code>8</code> and <code>10</code> positions, respectively, for the parameters in the <code>format()</code> function. So they will begin in the same position for every row.</p>
<p><em>Do you feel that it is not very nice?</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Given that you want to print one line at a time, with elements coming from two lists, you want to use the <a href="https://docs.python.org/3.3/library/functions.html#zip%20zip" rel="nofollow noreferrer">zip</a> function, which gives you a list of pairs with one element from each list.</p>
<pre><code>for line in zip(['a1', 'a2', 'a3'], ['b1', 'b2', 'b3']):
    print(line)
</code></pre>
<p>prints</p>
<pre><code>('a1', 'b1')
('a2', 'b2')
('a3', 'b3')
</code></pre>
<p>However, in your case the list have different length, so the usual zip would not work:</p>
<pre><code>for line in zip(['a1', 'a2', 'a3'], ['b1', 'b2']):
    print(line)
</code></pre>
<p>prints</p>
<pre><code>('a1', 'b1')
('a2', 'b2')
</code></pre>
<p>In this case you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">itertools.zip_longest</a> to build the pairs you need:</p>
<pre><code>from itertools import zip_longest
for line in zip_longest(['a1', 'a2', 'a3'], ['b1', 'b2'], fillvalue=''):
    print(line)
</code></pre>
<p>prints </p>
<pre><code>('a1', 'b1')
('a2', 'b2')
('a3', '')
</code></pre>
<p>In summary, for the problem you ask the full solution would be</p>
<pre><code>from itertools import zip_longest

a_head = {'ch1':'New1'}
a_data = {'Show1':'one','Show2':'two','Show3':'three'}
b_head = {'ch2':'New2'}
b_data = {'Show4':'four','Show5':'five'}

# extract the values in the rigt order (sorted by the keys in the dictionary)
a_list = [a_data[key] for key in sorted(a_data.keys())]
b_list = [b_data[key] for key in sorted(b_data.keys())]

# pack the header in a single line
header = ['{:8}{:8}'.format(a, b) for a, b in zip_longest(a_head.values(), b_head.values(), fillvalue='')]

# pack the data in a single line
lines = ['{:8}{:8}'.format(a, b) for a, b in zip_longest(a_list, b_list, fillvalue='')]

# print everything
for line in header:
    print(line)
for line in lines:
  print(line)
</code></pre>
</div>
<span class="comment-copy">You can use a pandas.Dataframe: <code>df = pandas.DataFrame({'New1': ['one', 'two', 'three'], 'New2': ['four', 'five', '']}) </code> and then <code>print(df)</code>. The array have to equal length though and pandas also prints the index.</span>
<span class="comment-copy">Could you show what you've tried so far? Also, is the input already defined? Or are you able to change it?</span>
<span class="comment-copy">You can use print() to display it to console. I like those typical spring questions: "I did not learn all year, but still have to do my assignment, please, do it for me!" and the answer is NO - you do learn and do it yourself!</span>
<span class="comment-copy">not compulsory as tables.But,i need through python.By using dictionary also fine for output.</span>
<span class="comment-copy">Input is already defined.</span>
