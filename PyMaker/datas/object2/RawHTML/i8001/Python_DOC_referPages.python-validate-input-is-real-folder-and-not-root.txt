<div class="post-text" itemprop="text">
<p>I'm writing a script in Python. The user has to enter a folder for the scrip to run on. There is some copying and moving of files and at a certain point a folder will be deleted. So, under no circumstances do I want this script to be run on the root folder. (or current or parent for that matter)</p>
<p>So I need to validate this. But how do I do that since "/" “./” “.” “..” etc .. as input are all perfectly valid and existing folders using os.path.isdir().</p>
<p>Should I manually check the input for these system folder symbols. Or is there a better way (existing function perhaps?) to check if the input is a real existing folder, but not a  system or symbolic folder like (root, current, parent, etc …)</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to <em>normalize</em> your path by making it absolute. You probably also want to eliminate symbolic links:</p>
<pre><code>import os.path

normalized = os.path.realpath(os.path.absolute(path))
if normalized == '/':
    raise ValueError("Can't use root as a destination") 
</code></pre>
<p>Making a path absolute eliminates any current or parent path references, as well as any doubled separators.</p>
</div>
<div class="post-text" itemprop="text">
<p>Either forbid '..' in paths or use <a href="https://docs.python.org/3/library/os.path.html#os.path.abspath" rel="nofollow noreferrer">abspath</a> to get the real path.</p>
</div>
