<div class="post-text" itemprop="text">
<p>The documentation for the <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer">inspect module</a> says:</p>
<blockquote>
<p>When the following functions return “frame records,” each record is a
  named tuple <code>FrameInfo(frame, filename, lineno, function, code_context,
  index)</code>. The tuple contains the frame object, the filename, the line
  number of the current line, the function name, a list of lines of
  context from the source code, and the index of the current line within
  that list.</p>
</blockquote>
<p>What is actually a <em>"frame object"</em>? I was hoping to use this frame object to get a variable's value from the caller's <code>globals()</code>:</p>
<pre><code>import my_util

a=3
my_util.get_var('a')
</code></pre>
<p>and <strong>my_util.py</strong></p>
<pre><code>import inspect

def get_var(name):
    print(inspect.stack()[1][0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>from <a href="https://docs.python.org/3/library/inspect.html#types-and-members" rel="nofollow noreferrer">https://docs.python.org/3/library/inspect.html#types-and-members</a>:</p>
<pre><code>frame   f_back      next outer frame object (this frame’s caller)
        f_builtins  builtins namespace seen by this frame
        f_code      code object being executed in this frame
        f_globals   global namespace seen by this frame
        f_lasti     index of last attempted instruction in bytecode
        f_lineno    current line number in Python source code
        f_locals    local namespace seen by this frame
        f_restricted    0 or 1 if frame is in restricted execution mode
        f_trace     tracing function for this frame, or None
</code></pre>
<p>therefore to get some globals in your my_util.py:</p>
<pre><code>import inspect

def get_var(name):
    print(inspect.stack()[1][0].f_globals[name])
</code></pre>
</div>
<span class="comment-copy">While the docs don't explain what a frame object actually <i>is</i>, they do at least describe its structure in <a href="https://docs.python.org/3/library/inspect.html#types-and-members" rel="nofollow noreferrer">this table</a> (scroll down to "frame"). Looks like you can just do <code>return inspect.stack()[1][0].f_globals[name]</code>.</span>
<span class="comment-copy">@Rawing Thanks, this seems to work!</span>
<span class="comment-copy">A small addition, if you want to dive a little deeper in this I found this SO thread very useful - <a href="http://stackoverflow.com/questions/23848391/what-is-the-difference-between-a-stack-and-a-frame" title="what is the difference between a stack and a frame">stackoverflow.com/questions/23848391/…</a></span>
