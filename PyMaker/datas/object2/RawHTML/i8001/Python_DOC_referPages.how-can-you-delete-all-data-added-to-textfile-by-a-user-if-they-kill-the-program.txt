<div class="post-text" itemprop="text">
<p>I am writing a program that stores user names and passwords but I want to delete all the data stored on the text file if the user kills the program....is that possible to do in a simple way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryFile" rel="nofollow noreferrer"><code>tempfile.TempFile</code></a> on a Unix-like OS. It will create a file with no visible directory entry. Even if the process is killed with <code>kill -9</code>, the file will be destroyed.</p>
</div>
<div class="post-text" itemprop="text">
<p>From a net-result standpoint, you can treat your changes as a <em>transaction.</em></p>
<pre><code>1. Make a copy of the original text file.
2. Perform whatever changes to the copy that you wish to make.
3. Confirm that the changes are okay, and the user wishes to save them.
4. Replace the old text file with the new text file.
</code></pre>
<p>Step 4 can happen fairly quickly, although not atomically. Still, certainly way faster than most users can type Ctrl-C. To do this, you would:</p>
<pre><code>a. 'move' the original file to a backup.
b. 'move' the new file to the original name.
c. 'unlink' the backup
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>UNIX/Linux oriented answer-</p>
<p>You can write a handler for the signals, you could catch:</p>
<ul>
<li>SIGTERM (15)</li>
<li>SIGINT (2)</li>
<li>SIGQUIT (3)</li>
<li>SIGABRT (6)</li>
<li>SIGSTOP (24)</li>
</ul>
<p>Just to mention some, but if <code>kill -9</code> is used, <code>SIGKILL</code> is going to give you a hard time (see my comment). Therefore, it would be a better idea storing data encrypted (if that's good for something)</p>
<pre><code>from signal import signal

def handle_signal(signum, stackframe):
    ''' signal handler '''
    # code to wipe or delete your file
    return True

if __name__ == '__main__':
    # defining your handler for SIGINT
    signal(2, handle_signal)
    # the rest of your code
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If by "kill" you mean a keyboard interrupt or another type of clean exit from the program you can use the following:</p>
<pre><code>import os

try:
    # Write to file here
except KeyboardInterrupt:
    os.remove('file.txt')
</code></pre>
<p>If you are asking if the program is receiving a kill signal from the operating system, then there is no way to handle that.</p>
</div>
<div class="post-text" itemprop="text">
<p>just open the file and close it .</p>
<pre><code>f = open('myfile.dat', 'w')
f.close()
</code></pre>
</div>
<span class="comment-copy"><b>It is not</b>. If the program is killed from the kernel (<code>kill -9</code>) you are not going to make that much since using <code>signal</code> is not able to do much after <code>SIGKILL</code> is caught. You can however catch and handle <code>SIGINT</code>and <code>SIGTERM</code>  Some useful links: <a href="https://en.wikipedia.org/wiki/Unix_signal#POSIX_signals" rel="nofollow noreferrer">POSIX Signals</a>, <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">Python Signals</a></span>
<span class="comment-copy">By kill, do you mean using the keyboard interrupt (i.e. Ctrl+C)? Or an actual kill command from the kernel?</span>
<span class="comment-copy">Thanks for that answer, but would you know how to write that in python?? I am really only on basics so I wasn't looking for anything complicated.</span>
<span class="comment-copy">Please summarize the Windows version instead of just posting a link.</span>
<span class="comment-copy">@MadPhysicist I'd rather removing it.</span>
<span class="comment-copy">Why? It makes your answer more complete.</span>
<span class="comment-copy">@MadPhysicist a matter of perspective</span>
<span class="comment-copy">Sorry. Meant to write <code>except</code>. I've been writing a lot of C# lately</span>
<span class="comment-copy">I do not believe this is truth for SIGTERM. You may want to rephrase and say "kill signal from the kernel"</span>
<span class="comment-copy">How is that supposed to solve OP's problem?</span>
<span class="comment-copy">You are deleting the file contents, still you're not doing it on program termination</span>
