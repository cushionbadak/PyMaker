<div class="post-text" itemprop="text">
<p>I'm trying to figure out how to test an item in a list with part of a string. so for example, if a list contains "potatoechips" and i have a string called "potatoe" how can I check if the string is found in an item in the list?</p>
<pre><code>list = ['potatoechips','icecream','donuts']

if 'potatoe' in list:
    print true
else:
    false
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>string.find(sub)</code> method to validate if a substring is in a string:</p>
<pre><code>li = ['potatoechips', 'icecream', 'donuts']
for item in li:
    if item.find('potatoe') &gt; -1:
        return True
else:
    return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To just test for presence of a sub string in any of the strings in the list, you can use <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer">any</a>:</p>
<pre><code>&gt;&gt;&gt; li = ['potatoechips','icecream','donuts']
&gt;&gt;&gt; s="potatoe"
&gt;&gt;&gt; any(s in e for e in li)
True
&gt;&gt;&gt; s="not in li"
&gt;&gt;&gt; any(s in e for e in li)
False
</code></pre>
<p>The advantage is <code>any</code> will break on the first <code>True</code> and can be more efficient if the list is long.</p>
<p>You can also join the list together into a string separated by a delimiter:</p>
<pre><code>&gt;&gt;&gt; s in '|'.join(li)
True
</code></pre>
<p>The advantage here would be if you have many tests. <code>in</code> for millions of tests is faster than constructing millions of comprehensions for example. </p>
<p>If you want to know which string has the positive, you can use a list comprehension with the index of the string in the list:</p>
<pre><code>&gt;&gt;&gt; li = ['potatoechips','icecream','donuts', 'potatoehash']
&gt;&gt;&gt; s="potatoe"
&gt;&gt;&gt; [(i,e) for i, e in enumerate(li) if s in e]
[(0, 'potatoechips'), (3, 'potatoehash')]
</code></pre>
<p>Or, you can use <code>filter</code> if you just want the strings as an alternative:</p>
<pre><code>&gt;&gt;&gt; filter(lambda e: s in e, li)
['potatoechips', 'potatoehash']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are checking if <code>'potatoe'</code> is in the list using <code>in</code>, but that will check if a specific item in the list is exactly <code>'potatoe'</code>.</p>
<p>Simply iterate over the list and then check:</p>
<pre><code>def stringInList(str, lst):
    for i in lst:
        if str in i:
            return True
    return False
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; lst = ['potatoechips', 'icecream', 'donuts']
&gt;&gt;&gt; stringInList('potatoe', lst)
True
&gt;&gt;&gt; stringInList('rhubarb', lst)
False
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It can be done using <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">'any'</a> and list <a href="http://python-3-patterns-idioms-test.readthedocs.io/en/latest/Comprehensions.html" rel="nofollow noreferrer">comprehensions</a> to filter list to similar words.</p>
<pre><code>list = ['potatoechips','icecream','donuts']
m = 'potatoe'
l = any(x for x in list if m in x)
print(l)
</code></pre>
</div>
