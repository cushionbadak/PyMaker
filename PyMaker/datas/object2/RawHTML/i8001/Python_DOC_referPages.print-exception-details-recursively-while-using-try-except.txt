<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3702675/how-to-print-the-full-traceback-without-halting-the-program">How to print the full traceback without halting the program?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<pre><code>#!/usr/bin/env python

#import re


def test_ex1(input):
    if re.match(r'^[A-Z]+$',input):
        print 'Match'
        return True
    print 'No Match'
    return False   


#test_ex1('ABC')
try:
    test_ex1('ABC')
except Exception:
    raise Exception
</code></pre>
<p>If I run the above program,it will print following exception message.</p>
<pre><code>a:~/Python&gt; python test.py
Traceback (most recent call last):
  File "test.py", line 18, in &lt;module&gt;
    raise Exception
Exception
</code></pre>
<p>What is the right way in Python to make it print the following stack trace while catching exception using <code>try except</code> without changing <code>test_ex1</code> subroutine?</p>
<pre><code>Traceback (most recent call last):
  File "test.py", line 15, in &lt;module&gt;
    test_ex1('ABC')
  File "test.py", line 8, in test_ex1
    if re.match(r'^[A-Z]+$',input):
NameError: global name 're' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way is using the <code>traceback</code> module</p>
<pre><code>import traceback

try:
  re.match()
except Exception:
  traceback.print_exc()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I once used following to print all traceback as:</p>
<pre><code>import sys

try:
    # code here
except Exception:
    print(sys.exc_info()[0])
</code></pre>
<p>The <code>raise</code> keyword is being used to throw your error up to the stack and handle at upper level of function call.</p>
</div>
<span class="comment-copy">Do you want to re-raise the exception?</span>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer">the documentation</a></span>
<span class="comment-copy">How do I print all exceptions recursively without adding a <code>print_exc</code> call in every function within a function?</span>
<span class="comment-copy">Can I do this without touching <code>test_ex1</code> subroutine?</span>
<span class="comment-copy">@Jean Of course, you don't have to modify it. Try the following: in the <code>except</code> body, just write <code>pass</code>. Nothing will be printed. Now, put <code>traceback.print_exc()</code>. The traceback will be printed. No modification was required.</span>
<span class="comment-copy">If you mean that you can just drop this and use <code>test_ex1</code> inside the <code>try</code> block then yes, you can.  On that note, you might want to change the name of the parameter, <code>input</code> is a built-in function in python.</span>
<span class="comment-copy">Thanks. Why do I have to <code>import traceback</code> when Python seems to have ability to print stack trace natively?</span>
<span class="comment-copy">We import it so we can handle the tracebacks however we want. We need to use import to do that because the python standard library is huge, it's separated in modules so that the compiler doesn't have to load everything in every program.</span>
<span class="comment-copy">This does not answer the question. OP wants to print the <b>traceback</b>.</span>
<span class="comment-copy">I edited my answer above. I mis-understood the question. Sorry for that.</span>
