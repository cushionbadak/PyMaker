<div class="post-text" itemprop="text">
<p>I have some data in a text file, which is mostly paths of folders</p>
<pre><code>home/user/Desktop/arandomname/2017/01
home/user/Desktop/couldbeanothername/2017/01
home/user/Desktop/guesswhatname/2017/01
</code></pre>
<p>I want to select the string between "Desktop/" and "/2017", I tried using position but definitely won't work since the strings are different in length</p>
<p>Currently I'm using</p>
<pre><code>for i in content:
    print i.partition('/')[-1].rpartition('/20')[0]
</code></pre>
<p>The output is up to</p>
<pre><code>home/user/Desktop/arandomname
home/user/Desktop/couldbeanothername
home/user/Desktop/guesswhatname
</code></pre>
<p>Any suggestion?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use split()</p>
<pre><code>needed_data = content.split("/")[3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can either use a regular expression:</p>
<pre><code>s = 'home/user/Desktop/arandomname/2017/01'
re.findall("Desktop/([^/]+)/\d{4}", s)[0]
# 'arandomname'
</code></pre>
<p>Or direct search:</p>
<pre><code>m = s[s.index('Desktop/') + len('Desktop/') : ]
m[ : m.index('/')]
# 'arandomname'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>re</code> module</p>
<pre><code>In [88]: re.match(r'.*Desktop/(.*)/2017.*', "home/user/Desktop/arandomname/2017/01").group(1)
Out[88]: 'arandomname'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could use the <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code> module</a>:</p>
<pre><code>from pathlib import Path

content = [
    'home/user/Desktop/arandomname/2017/01',
    'home/user/Desktop/couldbeanothername/2017/01',
    'home/user/Desktop/guesswhatname/2017/01']

for strg in content:
    path = Path(strg)
    print(path.parts[3])

# prints:
# arandomname
# couldbeanothername
# guesswhatnam
</code></pre>
<p><a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parts" rel="nofollow noreferrer"><code>path.parts</code></a> returns a tuple of the directories (and the file) that make up the path.</p>
<p>the module provides more path-related methods in case you need them.</p>
</div>
<span class="comment-copy">could you mark correct answer?</span>
<span class="comment-copy">Thanks man, also works!</span>
<span class="comment-copy">Clearly not what the OP is asking for.</span>
<span class="comment-copy">before downvoting please check the edits in question.</span>
<span class="comment-copy">Thanks man! it works!!!!</span>
<span class="comment-copy">Thanks man! it works!!!!</span>
<span class="comment-copy">@gilgameshbk you are welcome! then please accept (and upvote?) the answer. thanks.</span>
<span class="comment-copy">says I have less than 15 of reputation, won't show, sorry</span>
