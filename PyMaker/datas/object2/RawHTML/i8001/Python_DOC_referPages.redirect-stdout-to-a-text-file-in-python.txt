<div class="post-text" itemprop="text">
<p>I would like to redirect the print statements of my output to a text file. I have imported the sys and tried below.</p>
<pre><code>import pprint
import os
import math
import sys

class ExportLimits(object):
    MMAP_ITER_TRIPS = 'manpower_mappings.map_iterator_trips'

def __init__(self, workset, crew_type, bid_period, divisor_files=None):
    log_file = "/opt/test/test_user/data/ESR_DATA/etab/slogfile.txt"
    sys.stdout = open(log_file, 'w')
    self.workset = workset
    self.crew_type = crew_type
    self.bid_period = bid_period
    self.tm = workset.getTM()
    self.crew_bid_period = self.crew_type + "+" + self.bid_period
    self.bid_period = self.tm.table('qf_user_bid_period')[(self.crew_bid_period)]
    self.period = Period(self.bid_period.bpstart, self.bid_period.bpend)
    self.filter_matcher = self._get_filter_matcher()
    self.iterator_trips = rave_api.eval(\
            ExportLimits.MMAP_ITER_TRIPS)[0]
    self.divisor_reader_lh = divisor_reader_lh.DivisorReader(\
            divisor_files=divisor_files)
    self.divisor_reader_sh = divisor_reader_sh.DivisorReader(\
            divisor_files=divisor_files)
    self.pp_start = self.period.getStart()
    self.pp_end = self.period.getEnd()

def export_limits(self, item_type):
    if item_type == 'DKSH':
       self._mandays_limits(SLKHH_GROUPS)
    else:
       self._mandays_limits(LAJSDLH_GROUPS)
def _mandays_limits(self, groups):
  crews = [self.tm.table('crew')[('99172447',)],
             self.tm.table('crew')[('7654678',)]]
  generator = ((crew, self.filter_matcher.getFilterNamePeriodsMap(crew.id))
                 for crew in self.tm.table('crew'))

  minres = defaultdict(lambda :RelTime(0))
  maxres = defaultdict(lambda :RelTime(0))

  for crew, group_to_periods in generator:
      print crew, group_to_periods
      try:
         crew_filter, period = group_to_periods.iteritems().next()
      except StopIteration:
         continue
      if crew_filter not in groups:
         continue
</code></pre>
<p>It works partially for me. I am able to print few of the lines, but not completely. Please find the below output of my log file where it has only printed fewer lines but not the complete logs.
For some reason, it hasn't printed completely. (Please see the last line of the log file where it printed only till "alia".)</p>
<p>Log File:</p>
<blockquote>
<p>crew _id="133245" id="176543" empno="8761890" sex="M"
  birthday="19681217" name="MICHEAL" forenames="LUCAS" maincat="C"
  preferredname="ESWAR" initials="LL" joindate="20010910 00:00"
  comjoindate="20010910 00:00"
  _void="title,logname,si,bcity,bstate,bcountry,alias,comenddate" {'X-SYD-BB-AUSLLH': [26JUN2017 00:00-21AUG2017 00:00]}</p>
<p>crew _id="214141" id="132451" empno="145432" sex="M"
  birthday="19630904" name="ESWARF" forenames="FJDJSK" maincat="C"
  preferredname="ESWADF" initials="WL" joindate="20010910 00:00"
  comjoindate="20010910 00:00"
  _void="title,logname,si,bcity,bstate,bcountry,alia</p>
</blockquote>
<p>~<br/>
~     </p>
<p>Please check and advise.   </p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using sys.stdout you can write like:</p>
<pre><code>output_file = open(log_file, 'w')

output_file.write('testing asdasdfsd')
</code></pre>
<p>Or if you want to write all kinds of print value in log file then :</p>
<p>output_file = open(log_file, 'w')</p>
<p>sys.stdout = output_file</p>
<p>that's it.</p>
</div>
<span class="comment-copy">check out the python logging module! <a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">docs.python.org/3/library/logging.html</a></span>
<span class="comment-copy">Have you tried touching the buffering argument in <code>open</code>? <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#open</a></span>
<span class="comment-copy">@grovina: I haven't tried the buffering argument. I can try that and let you know in a while.</span>
<span class="comment-copy">@grovina: It works :-) Thanks for your inputs.</span>
<span class="comment-copy">This seems to be a duplicate of <a href="http://stackoverflow.com/questions/4110891/python-how-to-simply-redirect-output-of-print-to-a-txt-file-with-a-new-line-crea" title="python how to simply redirect output of print to a txt file with a new line crea">stackoverflow.com/questions/4110891/â€¦</a> . See also the other solutions there - IMO using the print function with a logfile argument is the simplest way to do this.  Another useful tool in conjunction with this is functools.partial. With that you can make a partial function of print with the logfile set, and then use that function everywhere in your program, e.g.  <code>print_to_log = functools.partial(print, file="my_log_file.txt")</code>  ...  <code>print_to_log("hello world")</code></span>
