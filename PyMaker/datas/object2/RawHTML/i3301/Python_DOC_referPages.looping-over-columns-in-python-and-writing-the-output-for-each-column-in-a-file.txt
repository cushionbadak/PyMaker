<div class="post-text" itemprop="text">
<p>I have 7 columns in my dataset. A part of my script is taking the columns and processing it. For example the following is working on second column</p>
<pre><code>for line in f:
    input_list.append(float(line.split()[1]))
</code></pre>
<p>I want it to process all 7 columns and writing each output as 'file$columnno.dat' </p>
<p><strong>Question 1</strong>: Is this a correct way to do it?</p>
<pre><code>mylist = [1, 2, 3, 4 , 5, 6, 7]
for n in my list:
    for line in f:
        input_list.append(float(line.split()[n]))
</code></pre>
<p><strong>Question 2</strong>: Now the output is just a list of numbers. </p>
<pre><code>print(*closed, sep='\n')
</code></pre>
<p>But I want the output for each column as a file such as <code>file1.dat (1 is the same syntax of the column no.), file2.dat</code> etc. Is that <code>%f</code> command. I didn't manage to fix it. It seems pretty standard and sorry if I am overwriting this question with existing ones. </p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you need <code>list.extend</code></p>
<p><strong>Ex:</strong></p>
<pre><code>for line in f:
    input_list.extend( map(float, line.split()) )
</code></pre>
<ul>
<li>Using <code>map</code> to convert every element in list to float</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><strong>Question 1</strong></p>
<p>Your solution will not work, because you can't iterate over the same line twice, unless you use <code>seek(0)</code> (see docs: <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">Methods of File Objects</a>) to start again from the first line. Instead, you can iterate each line and create a list of lists, with each sublist representing a row in your file.</p>
<p>The <code>csv</code> module makes the syntax easier, so you don't need to manually iterate, split strings or convert to <code>float</code>. These can be handled by <code>csv.reader</code> in an efficient way:</p>
<pre><code>from io import StringIO
import csv

mystr = StringIO("""34.12 42.13 4.1 65.13 -42.314 54.1 45.32
0.35 65.13 76.13 17.1 -45.1 65.1 78.1""")

# replace mystr with open('file.txt', 'r')
with mystr as fin:
    reader = csv.reader(fin, delimiter=' ', quoting=csv.QUOTE_NONNUMERIC)
    L = list(reader)

print(L)

[[34.12, 42.13, 4.1, 65.13, -42.314, 54.1, 45.32],
 [0.35, 65.13, 76.13, 17.1, -45.1, 65.1, 78.1]]
</code></pre>
<p><strong>Question 2</strong></p>
<p>You can iterate over each index of your list of lists via <code>zip</code>. Then, within your loop, iterate over values in your column. The output will be 7 files each with a column from the original input file. Here's an example:</p>
<pre><code>for idx, column in enumerate(zip(*L), 1):
    with open(r'c:\temp\out_{0}.csv'.format(idx), 'w', newline='') as myfile:
        writer = csv.writer(myfile)
        for val in column:
            writer.writerow([val])
</code></pre>
</div>
<span class="comment-copy">Can you clarify a bit, do you want to store each column values inside a particular file, say e.g for column 1, you want to store them in file1.dat?</span>
