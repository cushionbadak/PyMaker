<div class="post-text" itemprop="text">
<p><strong>EDIT</strong> : I cannot seem to figure out how to iterate through this object correctly. I believe I am indexing things incorrectly as the error states that blank text does not match the format for datetime conversion I have.</p>
<p>Below is the beginning of one of the <strong>response objects</strong>, it is long so I opted not to include the entire thing. There are no irregularities at any point, however, and continues to follow the initiated pattern. Please help me understand how to gain access to, and iterate through only the dates and there proceeding information.</p>
<pre><code>{u'Meta Data': {u'1. Information': u'Daily Prices (open, high, low, close) and Volumes',
                u'2. Symbol': u'MSFT',
                u'3. Last Refreshed': u'2018-07-06',
                u'4. Output Size': u'Compact',
                u'5. Time Zone': u'US/Eastern'},
 u'Time Series (Daily)': {u'2018-02-13': {u'1. open': u'88.9300',
                                          u'2. high': u'90.0000',
                                          u'3. low': u'87.8000',
                                          u'4. close': u'89.8300',
                                          u'5. volume': u'26200053'},
                          u'2018-02-14': {u'1. open': u'88.5100',
                                          u'2. high': u'90.9900',
                                          u'3. low': u'88.4100',
                                          u'4. close': u'90.8100',
                                          u'5. volume': u'34314101'},
                          u'2018-02-15': {u'1. open': u'91.2100',
                                          u'2. high': u'92.7200',
                                          u'3. low': u'90.6200',
                                          u'4. close': u'92.6600',
                                          u'5. volume': u'27407914'},
</code></pre>
<p>I recieve this error indicating that I am parsing through the <code>dict</code> incorrectly, I have tried many things and I can't seem to get it. I believe this is the last hump to get this program running. (finally)</p>
<blockquote>
<p>ValueError: time data '' does not match format '%Y-%b-%d'</p>
</blockquote>
<p>And now my attempted <strong>UPDATED</strong> code</p>
<pre><code>import requests
import json

# Global Variables
url = "https://www.alphavantage.co/query"
function_type = "TIME_SERIES_DAILY"
api_key = "***********"
current_zero_time = ""
main_list = []
symbols = ["AAPL", "HPQ", "IBM", "AMZN", "MSFT", "GOOGL", "INTC", "CSCO", "ORCL", "OCOM"]


def get_data(symbol):
    global api_key
    global function_type
    request_data = {"function": function_type,
                    "symbol": symbol,
                    "apikey": api_key}
    data_dict = requests.get(url, params=request_data)
    return data_dict


def date_dif(date0, date1):
    from datetime import datetime
    d0_obj = datetime.strptime(date0, '%Y-%b-%d')
    d1_obj = datetime.strptime(date1, '%Y-%b-&amp;d')
    return (d1_obj - d0_obj).days


def iterate_data(symbol):
    data_set = get_data(symbol)
    data_set = json.loads(data_set.text)
    global current_zero_time
    list_size = 0
    this_list = [list_size + 1]
    for p_date in data_set['Time Series (Daily)']:
        if current_zero_time is None:
            current_zero_time = p_date
            this_list[list_size] = 0
        else:
            t = date_dif(current_zero_time, p_date)
            this_list[list_size] = t
        list_size += list_size
        for key in p_date:
            this_list[list_size] = p_date[key]
            list_size += list_size
    return this_list


def make_list(stocks):
    global main_list
    for i in range(len(stocks)):
        this_list = iterate_data(symbols[i])
        main_list = main_list + this_list


make_list(symbols)
print(main_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is getting a bit too much for comments. Please, keep in mind we should take care to make a useful question/answer pair out of this for benefit of any future readers. Perhaps when reasonable (now?), we close an iteration over the code and corresponding question and start a new one.</p>
<p>So far, we've covered that <a href="http://docs.python-requests.org/en/master/api/#requests.get" rel="nofollow noreferrer"><code>requests.get()</code></a> returns <a href="http://docs.python-requests.org/en/master/api/#requests.Response" rel="nofollow noreferrer"><code>Response</code></a> object. To obtain the content read by the request, we need to access its <code>text</code> attribute. This text if a JSON representation, can be parsed by using <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads()</code></a>.</p>
<p>Now for the currently presented problem, you've defined a variable <code>current_zero_time</code> to be <code>""</code>, but first call into <code>iterate_data()</code> will evaluate <code>current_zero_time is None</code> in your condition to be <code>False</code> (which it is not). Perhaps you wanted to say <code>if not current_zero_time: ...</code>? Hence you and up calling <code>date_dif()</code> with first parameter being <code>""</code> (empty string) which <code>strptime</code> fails to parse into time (-&gt;<code>ValueError</code>).</p>
<p>Speaking of <code>strptime</code>. That formatting string does not seem to match your (ISO-format) date. It should be <code>"%Y-%m-%d"</code> (replace <code>b</code>: month name with <code>m</code>: month number). Second line also has a typo <code>&amp;d</code>, whereas it should be <code>%d</code>. You'd run into these as 3rd and 4th problem resp.</p>
<p>Side note: <code>global</code> variables are (to keep things simple) "evil" and are better to be avoided whenever possible (which as it turns out is pretty much always) or unless you have a really good reason to use them (which frankly you rarely should have). They break common understanding of scope and can end up being something people did not expect them to be at the time they've accessed them. Case to the point. If you've made it all the way through <code>iterate_data()</code> for a <code>symbol</code> and called it again for the next one. It's initial value for that next pass would the last value it had on the previous go.</p>
<p>The above information should address the problem you're currently seeing and let you run into the next one. Which is this line:</p>
<pre><code>     for key in p_date:
        this_list[list_size] = p_date[key]
</code></pre>
<p><code>key</code> here would be a character (e.g. <code>"2"</code> on the first iteration for instance) from <code>pdate</code>. Which is not a valid index of a <code>p_date</code> (a <code>str</code>). Unfortunately I am not really sure what the resulting list (or output in general) should look like, hence I can only give limited input for the next step. I mean as this:</p>
<pre><code>    for key in p_date:
        this_list[list_size] = key
</code></pre>
<p>i.e. iterate over characters from <code>p_date</code> and assign them as values to <code>this_list[list_size]</code>; along with changing the <code>None</code> / <code>""</code> mismatch and fixing the couple <code>strptime</code> issues. You could get the script to complete execution without failure... but as mentioned above, possibly still not do what it was meant to do.</p>
<p>Anyways, at least couple hopefully helpful hints I can offer. To get a better understanding what state your script was in when an exception (like <code>ValueError</code> in your question) was raised or just to poke around. You can run it in a debugger. Instead of calling your script <code>python ./script.py</code> (or just <code>./script.py</code>), use <code>python -m pdb ./script.py</code>. You can run your program, step through it, inspect stack frame, values of variable at given time... type <code>help</code> for basic help and <code>help COMNAND</code> to get more info about a COMMAND.</p>
<p>Second hint is (on top of <code>global</code> variables) about style. All the imports are normally handled at the top of a script/module. As a matter of fact, there are style recommendations in <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP-8</a> and there are helpful tools like <a href="https://www.pylint.org/" rel="nofollow noreferrer">pylint</a> to check your code. I mention that, because some mistakes and confusion can almost magically disappear with just a little clean-up. :)</p>
<p>One side note / clarification on your question: It's tagged python-3.x, but string literals in your dict would suggest otherwise. <code>u''</code> literals are a Python 2 thing.</p>
</div>
<span class="comment-copy">What you show isn't JSON; it's a Python <code>dict</code> that has (presumably) already been decoded from JSON.</span>
<span class="comment-copy">hmm, so does that mean I can just iterate through the information as if it were a normal string?  I posted what was shown in the command promt with       pprint.pprint(page_0.json)</span>
<span class="comment-copy">Well, not a string, but a normal dict. <code>page['Time Series (Daily)']['2018-02-13']</code>, etc.</span>
<span class="comment-copy"><code>page_N</code> you are passing to <code>iterateJSon</code> and ultimately <code>json.loads</code> is not a string, but a <a href="http://docs.python-requests.org/en/master/api/#requests.Response" rel="nofollow noreferrer"><code>requests.Response</code></a> object. You can pass <code>page_N.text</code> instead.</span>
<span class="comment-copy">I took your advice about the page_N.text, however; now I seem to be receiving a type error       <code>File "AVAPI.py", line 39, in itList         for p_date in page['Time Series (Daily)']:     TypeError: string indices must be integers</code> I'm lost here, there must be something silly I am overlooking. @Ondreij K.</span>
<span class="comment-copy">This is more than I could have asked for! Thank you! I intend to stick with this so maybe one day I'll be able to help you out.</span>
