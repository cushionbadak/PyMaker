<div class="post-text" itemprop="text">
<p>I want to write some code to check if a directory (and its subdirectories) matches with a given string, let the string be <code>New</code>. And then I want to print the path from root to the specific directory that contains this string <code>New</code>. However, my code only prints the directories on the first level correctly, e.g., <code>C:\\New Folder</code>, if there is a subdirectory inside that one matches the string as well, for example <code>C:\\New Folder\\New Folder</code>, it will only print as <code>C:\\New Folder</code>. For more details, please take a look at my code snipet:</p>
<pre><code> import os
 rootDir = 'C:\\New Folder'
 os.chdir(rootDir)
 for root, subdirs, files in os.walk(rootDir):
     for dirs in subdirs:
         splitdirs = dirs.split(" ")
         prefix = "New"
         if splitdirs[0] == prefix:
            newDir = os.path.join(rootDir, dirs)
            print(newDir)
</code></pre>
<p>so what I want is to print out<code>C:\\New Folder</code> and <code>C:\\New Folder\\New Folder</code>, instead it gives me <code>C:\\New Folder</code> twice. Can anyone explain why this happens? I am new so probably I'm in lack of some programming way of thinking here. Thank you for checking.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the only thing you have to change is following line:</p>
<pre><code>newDir = os.path.join(rootDir, dirs)
</code></pre>
<p>to:</p>
<pre><code>newDir = os.path.join(root, dirs)
</code></pre>
<hr/>
<h2>Edit</h2>
<p>If your searching word already exists in your rootDir, then you can simplify your code as follow:</p>
<pre><code>import os
root_dir = 'C:\\New Folder'
searching_word= "New"
for root, subdirs, files in os.walk(root_dir):
    current_directory = os.path.basename(root)
    if searching_word in current_directory:
        print(root)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't look in <code>subdirs</code>, <code>os.walk()</code> works recursively, so you can just use the <code>root</code>. You also don't have to <code>chdir</code> there.</p>
<pre><code>import os
root_dir = 'C:\\New Folder'
prefix = "New"
for root, subdirs, files in os.walk(root_dir):
    current_dir = root.split("\\")[-1] #name of current dir
    dirname_splitted = current_dir.split() #split() implies split(" ")
    if dirname_splitted[0] == prefix:
        print(root)
</code></pre>
<p>Don't know if it works on Windows, but worked on my Ubuntu with <code>root_dir = "/tmp"</code> and <code>root.split("/")</code></p>
<p>EDIT: In comments, you say it should just contain the given prefix, not start with it. The code gets a bit simpler then:</p>
<pre><code>import os
root_dir = 'C:\\New Folder'
prefix = "New"
for root, subdirs, files in os.walk(root_dir):
    current_dir = root.split("\\")[-1] #name of current dir
    if prefix in current_dir:
        print(root)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you define newDir you are using your rootDir, instead of root.
rootDir is your first folder, while root is the path of the current os.walk iteration.</p>
<p>Your code shoud be:</p>
<pre><code>import os
rootDir = os.path.join(os.getcwd())
os.chdir(rootDir)
for root, subdirs, files in os.walk(rootDir):
    for dirs in subdirs:
        splitdirs = dirs.split(" ")
        prefix = "New"
        if splitdirs[0] == prefix:
            newDir = os.path.join(root, dirs)
            print(newDir)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need this</p>
<pre><code>import os
rootDir = 'D:\\New folder'
os.chdir(rootDir)
for root, subdirs, files in os.walk(rootDir):
    for dirs in subdirs:
        splitdirs = dirs.split(" ")
        prefix = "New"
        if splitdirs[0] == prefix:
            newDir = os.path.join(root, dirs)
            print(newDir)
</code></pre>
</div>
<span class="comment-copy"><code>os.chdir(rootDir)</code> is redundant</span>
<span class="comment-copy">directory name should contain given prefix or start with it?</span>
<span class="comment-copy">you probably have a typo: use <code>root</code> in <code>os.path.join(...)</code> instead of <code>rootDir</code></span>
<span class="comment-copy">@AzatIbrakov the directory name should just contain given prefix</span>
<span class="comment-copy">@AzatIbrakov yeah thanks for pointing that out, somehow I did not notice I made a mistake there</span>
<span class="comment-copy">If the "starting point", <code>rootDir</code>, is <code>C:\\New Folder</code>, does this solution print it? It seem to me that it doesn't...</span>
<span class="comment-copy">Yes you're right, if the searching word already exists in the rootDir it didn't print. I updated my answer for that case.</span>
<span class="comment-copy"><code>root.split("\\")[-1]</code> is ugly and non-portable, use <a href="https://docs.python.org/3/library/os.path.html#os.path.dirname" rel="nofollow noreferrer"><code>os.path.dirname</code></a></span>
