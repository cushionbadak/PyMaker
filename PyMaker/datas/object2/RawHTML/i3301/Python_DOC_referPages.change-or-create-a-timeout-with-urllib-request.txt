<div class="post-text" itemprop="text">
<p>I have this code and I was wondering if there was any way to add a timeout delay:</p>
<pre><code>req = Request(url, headers={'User-Agent': 'Mozilla/5.0'})
WD = urlopen(req).read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>urlopen()</code> function has a timeout method inbuilt:</p>
<p><a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow noreferrer"><code>urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</code></a></p>
<blockquote>
<p>The optional timeout parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). This actually only works for HTTP, HTTPS and FTP connections.</p>
</blockquote>
<p>So in your code:</p>
<pre><code>time = 50
WD = urlopen(req, timeout=time).read()
</code></pre>
<hr/>
<p>You can only change the request your side (i.e. client side), with the argument above.  Server side may also send a timeout, but there is nothing that can be done to change that.</p>
</div>
<span class="comment-copy">I see. For some reason when I put "timeout=5" for example in the 'req' variable it gave me an error.</span>
<span class="comment-copy">@ProgrammerNZ There are a number of possiblities.  If you post the exact error I/someone else will do my/their best to try and figure it out</span>
<span class="comment-copy">As a test I ran this: <code>from urllib.request import *; response = urlopen(Request('https://www.python.org'), timeout=50)</code> that worked fine for me.</span>
