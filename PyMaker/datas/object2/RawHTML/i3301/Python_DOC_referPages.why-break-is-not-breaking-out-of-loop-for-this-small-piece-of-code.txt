<div class="post-text" itemprop="text">
<p>List item</p>
<pre><code># To put values in list till user want
#comparing value entered with the ascii value ofenter
# key , if enter then come out of infinite loop
# why break is not breaking out on enter press
#if value is not enter_key thn put this value in list
x=1
lis=[]
while x == 1 :
    var = str(input())
    if var == chr(10):  
        break                     
    lis.append(var)    

print("i m free now from infinite loop")
print(lis)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the user presses the enter key without entering anything when prompted by <code>str(input())</code>, then the return value will be an empty string. Thus, you shouldn't be comparing <code>var</code> to <code>chr(10)</code>, which is the newline character (<code>\n</code>). Instead try this:</p>
<pre><code>x=1
lis=[]
while x == 1 :
    var = str(input())
    if var == "":            #Compare to an empty string!
        break                     
    lis.append(var)    

print("i m free now from infinite loop")
print(lis)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think what the user wants is to stop on an empty string. So I would make the code as follows</p>
<pre><code>a_list=[]

while True :
    var = input('What is your input: ')
    if not var:
        break
    a_list.append(var)

print("I'm free now from the infinite loop")
print(a_list)
</code></pre>
</div>
<span class="comment-copy">Because if the user just hits enter the result is an empty string, not the line feed character. Also the result of input is already a string.</span>
<span class="comment-copy">why are you comparing to <code>chr(10)</code>??? Have you actually looked at what is returned by simply pressing enter when prompted by <code>input</code>?</span>
<span class="comment-copy">The <code>str</code> in <code>str(input())</code> is redundant. <code>input()</code> returns a string.</span>
<span class="comment-copy">input already returns a string, no need to <code>str(input(....))</code> and <code>if not var:break</code> would serve the same purpose as empty strings are falsy - see <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">falsy truthy python values</a></span>
<span class="comment-copy">Thanks, I have edited accordingly.</span>
