<div class="post-text" itemprop="text">
<p>I have a list : </p>
<pre><code>['blabla', 'tata', 'baba.com', 'fafa', 'gmail', 'momo', 'blabla', 'blabla', 'zozo', 'zozo', 'momo']
</code></pre>
<p>I would like to calculate the frequency of each word and output the sorted result like this:</p>
<p>blabla : 3<br/>
momo : 2<br/>
fafa : 1   </p>
<p>I have used counter but the output isn't like i want</p>
<pre><code>import collections
l = ['blabla', 'tata', 'baba.com', 'fafa', 'gmail', 'momo', 'blabla', 'blabla', 'zozo', 'zozo', 'momo']

c = counter=collections.Counter(l)
print(c)
</code></pre>
<p>Output : </p>
<blockquote>
<p>Counter({'blabla.com': 3, 'momo': 2 }]</p>
</blockquote>
<p>How to remove the 'Counter' word from the output?</p>
</div>
<div class="post-text" itemprop="text">
<p>Almost there, you use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer">most_common(<em>[N]</em>)</a> method of <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a> for this:</p>
<pre><code>from collections import Counter
l = ['blabla', 'tata', 'baba.com', 'fafa', 'gmail', 'momo', 
     'blabla', 'blabla', 'zozo', 'zozo', 'momo']

c = Counter(l)
for item,count in c.most_common(): # tuples
    print (f"{item}: {count}") # "{}: {}".format(item,count) for lower 3.6
</code></pre>
<p>Output:</p>
<pre><code>blabla: 3
momo: 2
zozo: 2
tata: 1
baba.com: 1
fafa: 1
gmail: 1
</code></pre>
<p><code>most_common()</code> returns you all (or top N) results in the Counter - as <code>tuple(name, count)</code> </p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use list function</p>
<pre><code>l = ['blabla', 'tata', 'baba.com', 'fafa', 'gmail', 'momo', 'blabla', 'blabla', 'zozo', 'zozo', 'momo']

print({x: l.count(x) for x in l})
</code></pre>
<p>output:
{'blabla': 3, 'momo': 2, 'zozo': 2, 'gmail': 1, 'baba.com': 1, 'fafa': 1, 'tata': 1}</p>
</div>
<span class="comment-copy">Try <code>print(dict(c))</code></span>
<span class="comment-copy">hey jpp..it's close but not exactly. I got  : {'blabla': 3, 'momo': 2 }. It is not sorted and I still have the brackets { }</span>
<span class="comment-copy">Python dictionaries aren't sorted, by definition, and you wanted to remove counter, not the brackets</span>
<span class="comment-copy">Fun alternative: <code>print(*(f'{k}: {v}' for k, v in c.most_common()), sep='\n')</code></span>
<span class="comment-copy">Thanks Patrick..that was very helpful.</span>
