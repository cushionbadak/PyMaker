<div class="post-text" itemprop="text">
<p>I can't think of a solution for this:</p>
<p>i have this list: <code>shapefiles</code></p>
<p>i want to make a process for every shapefile in the list but the problem is that it is a list of lists:</p>
<pre><code>for i in shapefiles:
    inte_s = gpd.read_file(i) #Apparently it is wrong to just use i.
    etc..
</code></pre>
<p>How can I make it access each one at a time from the list?</p>
<p>To get a an idea of how is the list, check these tests.</p>
<pre><code>shapefiles[0]
['C:\\Users\\user\\Desktop\\fffff\\INTE_PST_NO_EK_WITH_ASTTOM\\INTE_SHP_TESTA\\INTE1.shp',
 'C:\\Users\\user\\Desktop\\fffff\\INTE_PST_NO_EK_WITH_ASTTOM\\INTE_SHP_TESTB\\INTE1.shp']

for i in shapefiles:
    print(i)
['C:\\Users\\user\\Desktop\\fffff\\INTE_PST_NO_EK_WITH_ASTTOM\\INTE_SHP_TESTA\\INTE1.shp', 
'C:\\Users\\user\\Desktop\\fffff\\INTE_PST_NO_EK_WITH_ASTTOM\\INTE_SHP_TESTB\\INTE1.shp']

for i in shapefiles:
    print(i[0])
C:\Users\user\Desktop\fffff\INTE_PST_NO_EK_WITH_ASTTOM\INTE_SHP_TESTA\INTE1.shp

for i in shapefiles:
    print(i[1])
C:\Users\user\Desktop\fffff\INTE_PST_NO_EK_WITH_ASTTOM\INTE_SHP_TESTB\INTE1.shp
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a list of lists, so flatten it first then use your loop</p>
<pre><code>shapefiles_flat = [file_ for sublist in shapefiles for file_ in sublist]

for i in shapefiles_flat:
      #read
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seems you have a list of lists, here. Each element of <code>shapefiles</code> is itself a list of two filenames. So, I'd recommend just nesting two loops:</p>
<pre><code>for i in shapefiles:
    for j in i:
        inte_s = gpd.read_file(j)
        # etc...
</code></pre>
</div>
<span class="comment-copy">Are you aware that you have a list of lists of filenames?</span>
<span class="comment-copy">Your question is a little unclear.  What exactly is it that you want to happen with the list of lists?  If you want to iterate through all the values of all the sublists, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable(shapefiles)</code></a></span>
<span class="comment-copy">This totally solved the problem</span>
<span class="comment-copy">Can you explain why yours worked great while the other's didn't ?For simple application both work but since the code got complicated only this way worked out.</span>
