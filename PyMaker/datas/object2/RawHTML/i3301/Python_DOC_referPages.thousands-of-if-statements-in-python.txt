<div class="post-text" itemprop="text">
<p>I'm a beginner with Python. Currently I'm making a car reading tool just to build some programming skill. All works well.</p>
<p>When I get a fault code from a control module from a car, I get a P-code. Like:</p>
<p>P2348 and P21E2 (random P codes)</p>
<p>I can retrieve these P codes, but I want to add a little more info to them. P codes can be linked to a fault description:</p>
<blockquote>
<p>P2348 - Misfire detected (random)</p>
</blockquote>
<p>I want my program to give the extended information, and not just the P code. There are thousands of P codes and I have them all with discription. But a thousand If statements would be bad coding. I could look the P code up in a textfile and get the complete string from it, but that's not really an option (unless it's possible in the code itself or compiled with the executable).</p>
<p>What would be a neat way to do this? I have encountered this problem before when I took programming lessons. I used IF statements then (about 20) and I hated it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary:</p>
<pre><code>code_descr = {
   'P2348': 'Misfire detected',
   'P8866': 'Engine is on fire',
   'P7777': 'Tires missing',
}
</code></pre>
<p>then you can lookup a key in the dict, no <code>if</code> needed:</p>
<pre><code>print('{} - {}'.format(code, code_descr[code]))
</code></pre>
<p>You can write code to read a database in some format (csv, json, etc) and generate the dict, so you have the descriptions external to the program</p>
</div>
<span class="comment-copy">Use a dictionary: p code as key, info as value. Can easily be loaded from a JSON file.</span>
<span class="comment-copy">Make a JSON file that maps codes to messages.  Then just <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer"><code>load</code></a> that file into a dictionary when you start your program. Or use a database.</span>
<span class="comment-copy">Did a quick test and it seems to work like a charm :-) Thank you! Now I just need a quick way to load the textfile to the dictionary format but I bet I can work something out.</span>
