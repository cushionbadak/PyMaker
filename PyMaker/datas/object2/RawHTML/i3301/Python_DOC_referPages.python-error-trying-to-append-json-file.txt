<div class="post-text" itemprop="text">
<p>I'm relatively new to Python so my issue may be a simple one to fix but after days of trying and searching the internet I cant find anything. </p>
<p>So I built a script to stream data from Twitter and store the collecting data into a <code>json</code> file so that I can later access it and do whatever. This script pulls the user credentials like <code>consumer key</code>, <code>token</code>, and <code>access info</code> from a separate file to authenticate (I'm sure there is a better and more secure way to do that, this is just a proof of concept at the moment) using this code:</p>
<pre><code>with open('Twitter_Credentials.json', mode = 'a+') as tc:
            data = json.load(tc)
            if user not in data['names']:
                user_dict = dict()
                user_dict[user] = {'key':'','secret':'','token':'','token_secret':''}
                user_dict[user]['key'] = input('Twitter Consumer Key: ')
                user_dict[user]['secret'] = input('Twitter Consumer Secret: ')
                user_dict[user]['token'] = input('Twitter Access Token: ')
                user_dict[user]['token_secret'] = input('Twitter Access Secret: ')
                data['names'].append(user_dict)
                json.dump(data,tc, indent = 2, ensure_ascii = False)
                tc.close()
</code></pre>
<p>The issue I am having is that if I want to append another user and their credentials to this file I keep receiving this error:</p>
<pre><code>File "(filepath)", line 357, in raw_decode
raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
</code></pre>
<p>THINGS I HAVE ALREADY TRIED:</p>
<ul>
<li>Modifying the mode using <code>'r'</code>, <code>'r+'</code>, <code>'w'</code>, <code>'w+'</code></li>
<li>Changing <code>load()</code> and <code>dump()</code> to <code>loads()</code> and <code>dumps()</code></li>
<li>Changing the encoding</li>
</ul>
<p>Using <code>'r+'</code> and <code>'w+'</code> did not give me an error, but it did duplicate the original user so that they appeared multiple times. I want to eliminate that so that when it appends it does not duplicate. Any insight would be greatly appreciated. Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>A JSON file is a file containing a single JSON document. If you append another JSON string to it, it's no longer a JSON file.</p>
<p>As <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer">the docs</a> say:</p>
<blockquote>
<p>Note Unlike <code>pickle</code> and <code>marshal</code>, JSON is not a framed protocol, so trying to serialize multiple objects with repeated calls to <code>dump()</code> using the same <em>fp</em> will result in an invalid JSON file.</p>
</blockquote>
<hr/>
<p>If you aren't actually <em>trying</em> to store multiple documents in one file, the fix is easy: what you want to do is open the file, load it, modify the data, then open the file again and overwrite it. Like this:</p>
<pre><code>with open('Twitter_Credentials.json', mode = 'r') as tc:
    data = json.load(tc)
if user not in data['names']:
    # blah blah
    with open('Twitter_Credentials.json', mode = 'w') as tc:
        json.dump(data, tc, indent = 2, ensure_ascii = False)
</code></pre>
<p>Notice that I'm using <code>w</code> mode, not <code>a</code>, because we want to overwrite the old file with the new one, not tack stuff onto the end of it.</p>
<hr/>
<p>If you <em>are</em> trying to store multiple documents, then you can't do that with JSON. Fortunately, there are very simple framed protocols based on JSON—JSONlines, NDJ, etc.—that are commonly used. There are three or four different such formats with minor differences, but the key to all of them is that each JSON document goes on a line by itself, with newlines between the documents.</p>
<p>But using <code>ensure_ascii=False</code> means you're not escaping newlines in strings, and <code>indent=2</code> means you're adding more newlines between fields within the document, and then you aren't doing anything to write a newline after each document. So, your output isn't valid JSONlines any more than it's valid JSON.</p>
<p>Also, even if you fix all that, you're doing a single <code>json.load</code>, which would read only the first document out of a JSONlines file, and then doing <code>json.dump</code> to the same file, which would write a second document after that one, overwriting whatever's there. You could easily end up overwriting, say, half of the previous second document, leaving the other half behind as garbage to read later. So, you need to rethink your logic. At minimum, you want to do the same thing as above, opening the file twice:</p>
<pre><code>with open('Twitter_Credentials.json', mode = 'r') as tc:
    data = json.load(tc)
if user not in data['names']:
    # blah blah
    with open('Twitter_Credentials.json', mode = 'a') as tc:
        json.dump(data, tc)
        tc.write('\n')
</code></pre>
<p>This time I'm using <code>a</code> mode, because this time we <em>do</em> want to tack a new line onto the end of an existing file.</p>
</div>
<span class="comment-copy">As a side note, you don't need the <code>tc.close()</code>.  That's what the <code>with</code> statement does with a file--when you exit the <code>with ...:</code> block the file is automatically closed.</span>
