<div class="post-text" itemprop="text">
<p>I have such code for running simple server on Python 3. I know that I can just use something like this <code>python -m http.server 8080</code>, however I want to understand how it works and set limits for serving files extensions.</p>
<p>I try to use <code>path.join(dir, 'index.html')</code>, but looks like that doesn't work.</p>
<pre><code>&gt;&gt; TypeError: join() argument must be str or bytes, not 'builtin_function_or_method'
</code></pre>
<p>&lt;&gt;</p>
<pre><code>from http.server import BaseHTTPRequestHandler, HTTPServer
from os import path

hostName = "localhost"
hostPort = 8080

class RequestHandler(BaseHTTPRequestHandler):
    dir = path.abspath(path.dirname(__file__))
    content_type = 'text/html'

    def _set_headers(self):
        self.send_response(200)
        self.send_header('Content-Type', self.content_type)
        self.send_header('Content-Length', path.getsize(self.getPath()))
        self.end_headers()

    def do_GET(self):
        self._set_headers()
        self.wfile.write(self.getContent(self.getPath()))

    def getPath(self):
        if self.path == '/':
            content_path = path.join(dir, 'index.html')
        else:
            content_path = path.join(dir, str(self.path))
        return content_path

    def getContent(self, content_path):
        with open(content_path, mode='r', encoding='utf-8') as f:
            content = f.read()
        return bytes(content, 'utf-8')

myServer = HTTPServer((hostName, hostPort), RequestHandler)
myServer.serve_forever()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer"><code>dir</code></a> is a builtin function. You're trying to join that function to the string <code>'index.html'</code>, hence the error.</p>
<hr/>
<p>The reason you're presumably confused is that you tried to hide <code>dir</code> with a string, here:</p>
<pre><code>dir = path.abspath(path.dirname(__file__))
</code></pre>
<p>But when you put that inside a <code>class</code> definition, that doesn't create a global variable that hides the builtin, it creates a class attribute. To access a class attribute from within a method of that class, you have to do the same thing you do with a normal instance attribute:</p>
<pre><code>content_path = path.join(self.dir, 'index.html')
</code></pre>
<p>The only differences between class attributes and instance attributes are that:</p>
<ul>
<li>All of your instances share the same <code>dir</code> attribute instead of each having their own copy.</li>
<li>You can access it as <code>RequestHandler.dir</code> or <code>type(self).dir</code> instead of just as <code>self.dir</code>.</li>
</ul>
<hr/>
<p>To avoid this kind of confusion, it's a good idea to avoid reusing the names of any of the builtin functions. While it's <em>legal</em> to do so, it often leads to mistakes just like this one, and makes it harder to debug those mistakes.</p>
<hr/>
<p>Also, given that <code>dir</code> is a constant across the entire program, just like <code>hostName</code> and <code>hostPort</code> are, and isn't all that closely tied to the <code>RequestHandler</code> type, maybe you just wanted a global constant, like <code>hostName</code>, instead of a class attribute.</p>
</div>
<span class="comment-copy">Never overwrite a builtin name (In your example <code>dir</code>). Use something more helpful for readers (<code>BASE_DIRECTORY</code>) or something like that.</span>
<span class="comment-copy">This is a simple scoping problem. In python you can't access the scope of a class inside its functions.</span>
<span class="comment-copy">cool, thanks. It's really works now!</span>
<span class="comment-copy">okay, but how I be able call it from the class?</span>
<span class="comment-copy">@MAxShvedov Sorry, I donâ€™t understand what you mean by that question.</span>
<span class="comment-copy">I mean if I will use <code>dir_path = path.abspath(path.dirname(__file__))</code> as a global constant, how it should be called from a class?</span>
<span class="comment-copy">@MAxShvedov The exact same way you use any global: just reference the name <code>dir_path</code>.</span>
