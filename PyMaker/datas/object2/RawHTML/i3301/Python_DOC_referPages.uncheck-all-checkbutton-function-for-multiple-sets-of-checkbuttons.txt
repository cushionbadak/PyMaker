<div class="post-text" itemprop="text">
<p>I have a GUI, using tkinter, that has multiple groups of checkbuttons. Each group of checkbuttons is comprised of a list of checkbuttons that corresponds with a list of tk.IntVar() for each checkbutton. That is, for checkbutton group "Alpha", <code>cbAlpha[3]</code> is one example of a checkbutton and <code>cbAlphaVar[3]</code> is its corresponding tk.IntVar().
Each individual group of checkbuttons has its own (Un)Check-All checkbutton that selects/deselects all of that group's checkbuttons at once. Each of these (Un)Check-All checkbuttons has its own individual function (called by its checkbutton command).</p>
<p>My desire is to have a single function (that can be called via a checkbutton command), or at least a simplified lambda, that can be used to check/uncheck ALL checkbuttons in a given group.</p>
<p>Generically, I would have a function that takes a list (of tk.IntVar()s) as an argument and just turns on/off each element of that list. But I cannot specify an argument in a checkbutton command, and so each one has its own function... Which results in redundant code. I haven't been able to nail down a structure that allows me to just use a single function, or at least a self-contained lambda in  the command.</p>
<p>So for a simplified example, let's say I have two groups of checkbuttons: Alpha and Bravo. I have list of tk.Checkbutton()s in <code>alphaCbs[]</code>, and a corresponding list of tk.IntVar()s in <code>alphaCbVars[]</code>. The same for <code>bravoCbs[]</code> and <code>bravoCbVars[]</code>. The Alpha group has a (Un)Check-All checkbutton as follows:</p>
<p><code>allAlphaCbVar = tk.IntVar()
allAlphaCb = tk.Checkbutton(root, text='Alpha', variable=allAlphaCbVar,  command=allAlpha)</code>
with the corresponding function:</p>
<p><code>def allAlpha():
     for eachVar in alphaCbVars:
          eachVar.set(allAlphaVar.get())</code></p>
<p>And I have a similar function for Bravo... and Charlie... and Delta... etc. So needlessly redundant. Any suggestions as to combining into a single function or lambda within the command?
Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>As I understand it, the problem is that you have to write a bunch of functions like this:</p>
<pre><code>def allAlpha():
     for eachVar in alphaCbVars:
          eachVar.set(allAlphaVar.get())

def allBravo():
     for eachVar in bravoCbVars:
          eachVar.set(allBravoVar.get())
</code></pre>
<p>… and so on.</p>
<p>What you want is a function that takes the list of vars and the all-var as parameters:</p>
<pre><code>def allGroup(listOfVars, groupVar):
     for eachVar in listOfVars:
          eachVar.set(groupVar.get())
</code></pre>
<p>And now, you can use <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>partial</code></a> to create all of the individual partial functions:</p>
<pre><code>from functools import partial

allAlphaCb = tk.Checkbutton(root, text='Alpha', variable=allAlphaCbVar,
                            command=partial(allGroup, alphaCbVars, allAlphaVar)
allBetaCb = tk.Checkbutton(root, text='Beta', variable=allBetaCbVar,
                            command=partial(allGroup, betaCbVars, allBetaVar)
</code></pre>
<p>However, you can reduce the duplication even further by writing a function that does all the stuff for building a group together in one place. It's hard to show that without more of your code to use, but it would look something like this:</p>
<pre><code>def makeGroup(name): # maybe some more params needed for the individual cbs
    allCbVars = []
    allCbs = []
    # some loop that generates the individual variables and checkboxes
    # and puts them in those lists
    cbVar = tk.IntVar()
    cb = tk.Checkbutton(root, text=name, variable=cbVar, 
                        command=partial(allGroup, allCbVars)
    return allCbVars, allCbs, cbVar, cb

alphaCbVars, alphaCbs, allAlphaVar, allAlphaCb = makeGroup('Alpha')
</code></pre>
<p>Or, alternatively, maybe just a function to group a bunch of cbs together:</p>
<pre><code>def groupify(name, cbVars):
    cbVar = tk.IntVar()
    cb = tk.Checkbutton(root, text=name, variable=cbVar, 
                        command=partial(allGroup, cbVars)
    return cbVar, cb

# now build all your individual alpha cbs the same as in your current code

alphaCbVar, alphaCb = groupify('Alpha', alphaCbVars)
</code></pre>
<p>And maybe you don't even want to store <code>alphaCbVars</code>, <code>betaCbVars</code>, etc. as separate variables. Maybe it makes more sense to have a list of groups, or a dict mapping names to groups, or some kind of object with attributes, or… whatever.</p>
</div>
<span class="comment-copy">Sounds like you need a class. Show us a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> and we'll go from there.</span>
