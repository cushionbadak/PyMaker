<div class="post-text" itemprop="text">
<p>I know what are complex numbers and how they mathematically work, but <strong>how is it done for python to <em>know</em> it's complex just by putting a <code>j</code> after a digit ?</strong></p>
<pre><code>&gt;&gt;&gt; j
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'j' is not defined
&gt;&gt;&gt; 1*j
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'j' is not defined
&gt;&gt;&gt; 1j
1j
&gt;&gt;&gt; 1j**2
(-1+0j)
</code></pre>
<h1>Can I make my own suffix, let's say <code>p</code> (for strictly positive) ?</h1>
<p>Could I do something working like this ?</p>
<pre><code>&gt;&gt;&gt; ... some weird stuff here ...
&gt;&gt;&gt; p
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'p' is not defined
&gt;&gt;&gt; 1*p
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'p' is not defined
&gt;&gt;&gt; -1p
1p
&gt;&gt;&gt; 0p
1p
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is built into Python's grammar, just like the decimal point is, or the <code>e</code> in scientific notation (<code>1e10</code> etc.). The <code>j</code> makes a numeric literal imaginary.</p>
<p>Python does not allow you to change this. That doesn't mean you <em>can't</em>--you could amend the grammar--but then the language is no longer Python.</p>
<p>The closest approximation allowed in Python would be by implementing an operator.</p>
<pre><code>&gt;&gt;&gt; class StrictlyPositive:
    def __rmatmul__(self, number):
        return abs(number)


&gt;&gt;&gt; p = StrictlyPositive()
&gt;&gt;&gt; -1@p
1
</code></pre>
<p>But you have to be careful of operator precedence when doing stuff like this. Why not just use the builtin <code>abs</code> directly?</p>
</div>
<span class="comment-copy"><code>j</code> is a part of the language definition, just like, e.g., <code>0x</code>. No, you cannot make your own suffix.</span>
<span class="comment-copy">The <code>j</code> is recognized by Python's parser, exactly the same way that quote marks are recognized as the start of a string, or digits are recognized as part of a number.  The only way to add another such feature would be to edit Python's source code and recompile it.  Defining a function or class (<code>P(x)</code>, perhaps) would be a much more reasonable way to accomplish this.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/lexical_analysis.html#numeric-literals" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
