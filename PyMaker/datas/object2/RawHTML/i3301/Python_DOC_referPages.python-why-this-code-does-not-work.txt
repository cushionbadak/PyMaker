<div class="post-text" itemprop="text">
<p>I have the following piece of code from Black Hat Python book, but it does not work and I don't have idea why.</p>
<pre><code>def client_handler(client_socket):
    global command

    ...

    if command:
        while True:
            client_socket.send('&lt;ncreplace:#&gt; '.encode('utf-8'))
            cmd_buffer = ''

            while '\n' not in cmd_buffer:
                cmd_buffer += str(client_socket.recv(1024))
                print('loop')

            response = run_cmd(cmd_buffer)

            client_socket.send(response.encode('utf-8'))

def run_cmd(command):
    print('command')
    command = command.strip()

    try:
        output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
    except:
        output = 'Failed to execute command.\r\n'

    return output
</code></pre>
<p>The problem is: when I run everything (it should be some client-server app, and this piece should run on server side) and when it comes to executing cliend_handler method it does not call run_cmd method. It prints once 'loop' but it does not print 'command' (I've put these print statements for debugging). Can someone  tell me why?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's your problem, or at least <em>a</em> problem that makes this code not work:</p>
<pre><code>while '\n' not in cmd_buffer:
    cmd_buffer += str(client_socket.recv(1024))
</code></pre>
<p>Assuming this is Python 3, <code>recv</code> returns a <code>bytes</code>. Which presumably holds UTF-8-encoded text. Which you need to decode. You do that by calling <code>decode</code> on it, not <code>str</code>. What <code>str</code> does is just wrong here. For example:</p>
<pre><code>&gt;&gt;&gt; b = b'abc'
&gt;&gt;&gt; print(b.decode())
abc
&gt;&gt;&gt; print(str(b))
b'abc'
</code></pre>
<p>You don't want that <code>b</code> or those <code>'</code> characters.</p>
<p>And, more importantly, look what it does with newlines:</p>
<pre><code>&gt;&gt;&gt; b = b'abc\ndef\n'
&gt;&gt;&gt; print(b.decode())
abc
def

&gt;&gt;&gt; print(str(b))
b'abc\ndef\n'
</code></pre>
<p>It escapes each newline as a backslash and an n. So when you ask if there's a newline in the buffer over and over, there never is one.</p>
<hr/>
<p>If this code was written for Python 2, and didn't originally have that <code>str</code> call in it, porting Python 2 code to Python 3 can be a little trickier than just randomly throwing in <code>str</code> and <code>bytes</code> calls until you stop getting exceptions. The docs have <a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow noreferrer">a chapter on porting Python 2 to 3</a>, although it's really intended more for people who know Python 2 well, so you may want to search for third-party tutorials like <a href="https://portingguide.readthedocs.io/" rel="nofollow noreferrer">The Conservative Python 3 Porting Guide</a>. (I don't know that one particularly well, it's just the first thing that came up in a search, but it looks decent, and at least covers how to use <code>modernize</code> and <code>pylint</code>, which the official guide didn't, at least last time I looked.)</p>
</div>
<span class="comment-copy">are you getting any errosr</span>
<span class="comment-copy">We will need details like error logs, which interpreter you are using and so on.</span>
<span class="comment-copy">What we need most of all is a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. Nobody can run this code to debug it as posted, so all anyone can do is guess at what you might have gotten wrong.</span>
<span class="comment-copy">Although I do have a guess: <code>cmd_buffer += str(client_socket.recv(1024))</code>. This <code>str</code> call is useless for Python 2, and flat-out wrong for Python 3. It'll take a minute t think through whether it could cause your problem or not, but that's where I'd look first.</span>
<span class="comment-copy">im running it with python 3.6</span>
<span class="comment-copy">thanks, this was a problem...sorry im totally new in python and networking :) thanks again</span>
<span class="comment-copy">the code is written for python 2 but that str i've put there becouse of some exception with types</span>
<span class="comment-copy">@vm381 OK, then that's your problem; I'll edit the answer.</span>
