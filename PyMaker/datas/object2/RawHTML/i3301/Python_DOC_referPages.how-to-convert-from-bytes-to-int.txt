<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/444591/how-to-convert-a-string-of-bytes-into-an-int-in-python">How to convert a string of bytes into an int in Python</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>I know that to convert from <code>int</code> to <code>bytes</code> you have to do this, for example:</p>
<pre><code>&gt;&gt;&gt;a = bytes(4)
&gt;&gt;&gt;print(a)
b'\x00\x00\x00\x00'
</code></pre>
<p>But what do I do if I want to revert it and convert <code>bytes</code> to <code>int</code> or <code>float</code>?</p>
<p>I tried using:</p>
<pre><code>int.from_bytes( a, byteorder='little')   
</code></pre>
<p>and</p>
<pre><code>int.from_bytes( a, byteorder='big', signed=True) 
</code></pre>
<p>but it did not work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import struct
val = struct.unpack( '&lt;I', b'\x00\x00\x00\x00')[0]
</code></pre>
<p>or something along the lines... control the <code>big/little</code> with <code>&lt;</code> or <code>&gt;</code> sign.</p>
<p>Here are the docs: <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">7.1. struct â€” Interpret bytes as packed binary data</a></p>
</div>
<span class="comment-copy">What do you expect the result to be? If you have a well-defined binary format, <code>unpack</code> can convert it to a native type or structure. But there are four different ways your four bytes can be interpreted so you need to know how the data is serialized first (or just guess, if this is idle curiosity).</span>
<span class="comment-copy">Your problem is not reading the number back, it is storing the number.  <code>bytes(4)</code> makes an array of 4 bytes, all zeros.  Perhaps you didn't notice that the number 4 is not actually the value.  Try <code>bytes(9)</code> for example.</span>
<span class="comment-copy">So,  the way to go back is just <code>len</code>  ;)</span>
