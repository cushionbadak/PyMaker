<div class="post-text" itemprop="text">
<p>I'm learning about python concurrency and I was introduced with the concept of futures. I read that <code>as_completed()</code> takes an iterable of futures and yields them as they are done.</p>
<p>I want to know how it works internally. Is it yielding completed tasks (futures) immediately? A naive approach would be to iterate all futures and examine each and every future using <code>done()</code>, but this is inefficient. </p>
<p>So what's the magic behind this function?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I want to know how it works internally.</p>
</blockquote>
<p><code>as_completed</code> sets up a callback to fire when the future is done, doing so for all the futures it receives. (It uses an internal API equivalent to <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.add_done_callback" rel="nofollow noreferrer"><code>add_done_callback</code></a> for this purpose.) When any of the futures completes, <code>as_completed</code> is notified by its callback being run. The callback runs in whatever thread it was that completed the future, so it only sets an <a href="https://docs.python.org/3/library/threading.html#event-objects" rel="nofollow noreferrer">event</a>, which is shared by all callbacks, and which <code>as_completed</code> sleeps on. Once woken up by the event, <code>as_completed</code> immediately yields the finished future. This is how <code>as_completed</code> ensures that futures are yielded as they are completed, regardless of the order in which that happens. After yielding, the event is cleared and the waiting is repeated until all the futures are done.</p>
<blockquote>
<p>Is it yielding completed tasks (futures) immediately?</p>
</blockquote>
<p>Yes, that follows from both the <a href="https://docs.python.org/3/library/concurrent.futures.html?highlight=as_completed#concurrent.futures.as_completed" rel="nofollow noreferrer">documented interface</a> and the <a href="https://github.com/python/cpython/blob/f85af035c5cb9a981f5e3164425f27cf73231b5f/Lib/concurrent/futures/_base.py#L200" rel="nofollow noreferrer">implementation</a>.</p>
</div>
<span class="comment-copy">Awesome, thanks!</span>
<span class="comment-copy">Nice edit ... was wondering about the callback in the original text.</span>
