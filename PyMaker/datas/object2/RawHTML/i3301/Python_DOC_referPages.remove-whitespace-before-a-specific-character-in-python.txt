<div class="post-text" itemprop="text">
<p>I was wondering if you knew the best way to do this.</p>
<p>This program uses OCR to read text. Occasionally, spaces appear before a decimal point like so:</p>
<pre><code>{'MORTON BASSET BLK SESAME SEE': '$6.89'}
{"KELLOGG'S RICE KRISPIES": '$3.49'}
{'RAID FLY RIBBON 4PK': '$1 .49'}
</code></pre>
<p>as you can see, a space appears before the decimal point on the last entry. Any ideas on how to strip JUST this whitespace?</p>
<p>Thank you :)</p>
<p>EDIT: contents before decimal point may contain a varying amount of whitespace. Like </p>
<pre><code>$1    .49
$1  .49
$1 .49
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regular expressions</a>.</p>
<pre><code>import re
a_list = {"1 .49", "1   .49", "1          .49"}

for a in a_list:
  print re.sub(' +.', '.', a)
</code></pre>
<p>Result will be</p>
<pre><code>1.49
1.49
1.49
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just strip out all whitespace from the string, assuming that they follow the same format.  SOmething like this: </p>
<pre><code>for item in items: 
  for key in item.keys():
    item[key] = item[key].replace(" ", "")
</code></pre>
<p>The key part is replacing the whitespace with no whitespace.</p>
<p>If you <em>just</em> want the whitespace before the ".", then you could use:
.replace(" .", ".") instead.</p>
<p>This would only replace 1 white space.  To replace multiple, you could use a while loop like this: </p>
<pre><code>while ' .' in item[key]:
  item[key].replace(' .', '.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For your dict obj:-</p>
<pre><code>&gt;&gt;&gt; d = {'RAID FLY RIBBON 4PK': '$1 .49'}
&gt;&gt;&gt; d['RAID FLY RIBBON 4PK'] = d['RAID FLY RIBBON 4PK'].replace(' ','')
&gt;&gt;&gt; d
{'RAID FLY RIBBON 4PK': '$1.49'}
</code></pre>
<p>Even if there is varying space; replace would work fine. See this:-</p>
<pre><code>&gt;&gt;&gt; d = {'RAID FLY RIBBON 4PK': '$1       .49'}
&gt;&gt;&gt; d['RAID FLY RIBBON 4PK'] = d['RAID FLY RIBBON 4PK'].replace(' ','')
&gt;&gt;&gt; d
{'RAID FLY RIBBON 4PK': '$1.49'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is trivial with split and join:</p>
<pre><code>"".join("1     .49".split())
</code></pre>
<p>This works because splits on one or more spaces. To do this for each value in a dictionary:</p>
<pre><code>{k, "".join(v.split()) for k,v in dict_.items()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i think that maybe you want something more generic not only for that key:</p>
<pre><code>for key, value in d.items():
   d[key]=value.replace(" ","")
</code></pre>
<p>in this way independent of the key othe number of space the result will be without white spaces</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure:</p>
<pre><code>string.replace(' .', '')
</code></pre>
</div>
<span class="comment-copy">I added the edot by looking at the OP's comment on a different answer.  props to @ncfirth for the quick response.  Note, though, that that answer would also replace the decimal point.</span>
<span class="comment-copy">thank you :) would this work if the string had more than one whitespace?</span>
<span class="comment-copy">@NicholasNowak It won't.</span>
<span class="comment-copy">No. I'd look at the answer using regex for that.</span>
<span class="comment-copy">Therefore, the downvote.</span>
