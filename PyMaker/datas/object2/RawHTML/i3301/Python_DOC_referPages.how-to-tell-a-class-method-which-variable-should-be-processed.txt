<div class="post-text" itemprop="text">
<p>sorry for the noob question. Lets say i have a class which holds 3 lists and a method to combine one of the lists to a string. How can i tell the method which list it should take ? or should i move the method out of the class into a function ?</p>
<p>Here is what i mean:</p>
<pre><code>class images():
    def __init__(self, lista, listb, listc):
        self.lista=lista
        self.listb=listb
        self.listc=listc

    def makelist(self):
        items = ""
        for item in self.whateverListIWant:
            items=items+item
        return items

test=images([1,2,3],["b"],["c"])
print (test.makelist(WhichListIWant))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this</p>
<pre><code>class images():
    def __init__(self, lista, listb, listc):
        self.lista=lista
        self.listb=listb
        self.listc=listc

    def makelist(self, param):
        items = ""
        for item in param:
            items= items + str(item)
        return items

test=images([1,2,3],["b"],["c"])
print (test.makelist(test.lista))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Be aware that "class method" (indicated by the decorator <a href="https://docs.python.org/3/library/functions.html#classmethod" rel="nofollow noreferrer">@classmethod</a>) is not what you have in your example.  Yours is a standard object method that acts on the object you create, as highlighted by your use of "self" as the first parameter.</p>
<p>The object method acts on the object, and can refer to the data contained within self.  A "class method" would act only on a class, and only use parameters available to that class.</p>
<p>Use of a class method would be something like this:</p>
<pre><code>class ClassyImages():
    lista = []
    listb = []
    listc = []

    @classmethod
    def makelist(cls, which):
        if which == 'a':
            the_list = cls.lista
        elif which == 'b':
            the_list = cls.listb
        elif which == 'c':
            the_list = cls.listc
        else:
            raise ValueError("Invalid value " + str(which))

        return the_list[:]  # returns a soft copy of the list
</code></pre>
<p>And you would use it as follows:</p>
<pre><code>ClassyImages.lista.extend([1,2,3])
ClassyImages.listb.add("b")
ClassyImages.listc.add("c")

print(ClassyImages.makelist("a"))
</code></pre>
<p>See the difference?  In your example, you're using methods on the instance of an object, which you create.  In this case, we're only using class-level variables, and never using an instance of an object.</p>
<p>However, the nice feature of the <code>@classmethod</code> decorator, is you still can use the class method on an object.  So you can also do this:</p>
<pre><code>my_classy_object_1 = ClassyImages()
my_classy_object_2 = ClassyImages()

print(my_classy_object_1.makelist("b"))  # prints: ['b']
ClassyImages.listb.add("bb")
print(my_classy_object_1.makelist("b"))  # prints: ['b', 'bb']
print(my_classy_object_2.makelist("b"))  # prints: ['b', 'bb']
</code></pre>
<p>My answer glossed over what you may really be asking - how to tell it which list to look at.  You can inject the list into the argument, as suggested by <a href="https://stackoverflow.com/a/51212995/1404311">sjaymj64</a>.  Or you can pass a string or a number into the function, similar to how I did for the class-level makelist.  It's largely up to you - provide whatever way seems most fitting and convenient for letting the logic of makelist choose which of its components to look at.</p>
</div>
<span class="comment-copy">Why not just pass the lists you want to use as parameters?</span>
<span class="comment-copy">side note: <code>items+item</code> will raise a TypeError for the first list from your example</span>
<span class="comment-copy">Thanks for your suggestion ! I am new to classes and so on and thought there is a more capsulated way. Passing the list as parameter is ok ! Thanks</span>
