<div class="post-text" itemprop="text">
<p>Let's say I want to dynamically patch <code>tkinter.Tk</code> to make windows stay on top. If I'm certain that following code really uses Tkinter, then I can <code>import tkinter</code> before rest of the code and perform necessary updates.</p>
<p>But how to set up the module patching on-demand, ie. only when the rest of the code really imports the module?</p>
<p>I know about <code>sys.path_hooks</code> and <code>sys.meta_path</code>, but I'm hoping there is something simpler. I don't want to change the finding or loading mechanics, I just want to get hold of the imported module object before it is passed to the importing module. </p>
<p>I don't need to support Python versions older than 3.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>I chose wrapping <a href="https://docs.python.org/3/library/functions.html#__import__" rel="nofollow noreferrer"><code>builtins.__import__</code></a>:</p>
<blockquote>
<p>This function is invoked by the import statement. It can be replaced
  (by importing the builtins module and assigning to
  <code>builtins.__import__</code>) in order to change semantics of the import
  statement</p>
</blockquote>
<pre><code>import builtins
original_import = builtins.__import__

def custom_import(*args, **kw):
    module = original_import(*args, **kw)

    if (module.__name__ == "interesting_module" 
        and not getattr(module, "patch_is_performed", False)):
        patch(module)
        module.patch_is_performed = True

    return module

builtins.__import__ = custom_import
</code></pre>
</div>
<span class="comment-copy">Sounds like an <a href="https://meta.stackexchange.com/a/66378">x y problem</a>.</span>
<span class="comment-copy">@KlausD. how come?</span>
<span class="comment-copy">Not tested idea: create a module with same name which loads and patches the real module. Adjust PYTHONPATH so the loader is found first.</span>
<span class="comment-copy">You can use <code>wrapt</code>. Easiest to go watch this talk about it, as take too much to explain here. <a href="https://www.youtube.com/watch?v=GCZmGgtWi3M" rel="nofollow noreferrer">youtube.com/watch?v=GCZmGgtWi3M</a></span>
