<div class="post-text" itemprop="text">
<p>I need to convert XML file into the dictionary (later on it will be converted into JSON). </p>
<p>A sample of XML script looks like:</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;osm version="0.6" generator="Overpass API 0.7.55.3 9da5e7ae"&gt;
&lt;note&gt;The data included in this document is from www.openstreetmap.org. The data is made available under ODbL.&lt;/note&gt;
&lt;meta osm_base="2018-06-17T15:31:02Z"/&gt;
...
  &lt;node id="2188497873" lat="52.5053306" lon="13.4360114"&gt;
    &lt;tag k="alt_name" v="Spreebalkon"/&gt;
    &lt;tag k="name" v="Brommybalkon"/&gt;
    &lt;tag k="tourism" v="viewpoint"/&gt;
    &lt;tag k="wheelchair" v="yes"/&gt;
  &lt;/node&gt;
...
&lt;/osm&gt;
</code></pre>
<p>With the simple code I have already filtered all the values that I needed for my dictionary:</p>
<p><strong>Code</strong></p>
<pre><code>import xml.etree.ElementTree as ET

input_file = r"D:\berlin\trial_xml\berlin_viewpoint_locations.xml"

tree = ET.parse(input_file)
root = tree.getroot()

lst1 = tree.findall("./node")
for item1 in lst1:
    print('id:',item1.get('id'))
    print('lat:',item1.get('lat'))
    print('lon:',item1.get('lon'))
    for item1_tags_and_nd in item1.iter('tag'):
        print(item1_tags_and_nd.get('k') + ":", item1_tags_and_nd.get('v'))
</code></pre>
<p><strong>Result</strong></p>
<pre><code>id: 2188497873
lat: 52.5053306
lon: 13.4360114
alt_name: Spreebalkon
name: Brommybalkon
tourism: viewpoint
wheelchair: yes
</code></pre>
<p>Can you help me, please to append properly and efficiently these values into a dictionary?</p>
<p>I want it to look like:</p>
<pre><code>{'id': '2188497873', 'lat': 52.5053306, 'lon': 13.4360114, 'alt_name': 'Spreebalkon', 'name': 'Brommybalkon', 'tourism': 'viewpoint', 'wheelchair': 'yes'}
</code></pre>
<p>I have tried with</p>
<pre><code>dictionary = {}
dictionary['id'] = []
dictionary['lat'] = []
dictionary['lon'] = []
lst1 = tree.findall("./node")
for item1 in lst1:
    dictionary['id'].append(item1.get('id'))
    dictionary['lat'].append(item1.get('lat'))
    dictionary['lon'].append(item1.get('lon'))
    for item1_tags_and_nd in item1.iter('tag'):
       dictionary[item1_tags_and_nd.get('k')] = item1_tags_and_nd.get('v')
</code></pre>
<p>but it does not work so far.</p>
</div>
<div class="post-text" itemprop="text">
<p>I suggest you construct a list of dicts, instead of a dict of lists like:</p>
<pre><code>result_list = []
for item in tree.findall("./node"):
    dictionary = {}
    dictionary['id'] = item.get('id')
    dictionary['lat'] = item.get('lat')
    dictionary['lon'] = item.get('lon')
    result_list.append(dictionary)
</code></pre>
<p>Or as a couple of <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">comprehensions</a> like:</p>
<pre><code>result_list = [{k: item.get(k) for k in ('id', 'lat', 'lon')}
               for item in tree.findall("./node")]
</code></pre>
<p>And for the nested case:</p>
<pre><code>result_list = [{k: (item.get(k) if k != 'tags' else
                    {i.get('k'): i.get('v') for i in item.iter('tag')})
                for k in ('id', 'lat', 'lon', 'tags')}
               for item in tree.findall("./node")]
</code></pre>
<h3>Results:</h3>
<pre><code>{
    'id': '2188497873', 
    'lat': '52.5053306', 
    'lon': '13.4360114', 
    'tags': {
         'alt_name': 'Spreebalkon', 
         'name': 'Brommybalkon', 
         'tourism': 'viewpoint', 
         'wheelchair': 'yes'
    }
}
</code></pre>
</div>
<span class="comment-copy">So there is only one <code>&lt;node&gt;</code> tag?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/users/67579/willem-van-onsem">Willem</a>, nope, I just skipped all other to be able to demonstrate with a single example.</span>
<span class="comment-copy">Willem, there is also <code>&lt;way&gt;</code> tag.</span>
<span class="comment-copy">Dear Mr Rauch, can you be so kind and explain to me: 1) How can I handle my nested loop? 2) How did you make your code to look so smart and harmonic?</span>
<span class="comment-copy">@TarasDubrava, I added a bit for the nested loop. As for how to make it look harmonic, I suggest you look at the link for list comprehensions.  The examples have both list and dict comprehension, but once you understand the list comprehension, the dict comprehension are about the same. And if you want to flatten the dict I show in results there are ways to do that I would suggest searching Stackoverflow.</span>
<span class="comment-copy">Dear Mr Rauch, and one more question, how can I loop over two children <code>&lt;node&gt;...&lt;node/&gt;</code> and <code>&lt;way&gt;...&lt;/way&gt;</code> to be able to put their content in one list. How it is possible to extend <code>for the item in tree.findall("./node")</code> with <code>./way</code>? And what if the tag is empty, how to put no tags (even the empty one, e.g. 'tags': {}) in the <code>output_list</code>?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/q/22560862/7311767">stackoverflow.com/q/22560862/7311767</a></span>
<span class="comment-copy">Time to ask a new question.  They cost nothing except a bit of your time.</span>
