<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26417658/subprocess-call-arguments-ignored-when-using-shell-true-w-list">subprocess.call() arguments ignored when using shell=True w/ list [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/14600294/python-subprocess-call-seems-to-ignore-parameters">Python subprocess.call seems to ignore parameters</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to automate nmap scans and I am using the subprocess module to do so. I am pretty much passing three variables to subprocess.call and having the command be run. Here is my code</p>
<pre><code>import subprocess

TOOL = 'nmap'
joined = '-p1 5000'
target = 'localhost'

subprocess.call([TOOL, joined, target], shell=True)
</code></pre>
<p>This should lead to <code>nmap -p1 5000 localhost</code> being ran on my system which is a valid command, however, the call method seems to only be recognizing TOOL(nmap) and it just prints out the options for nmap. Does anyone know what I'm missing here? </p>
</div>
<div class="post-text" itemprop="text">
<p>I don't have <code>nmap</code> installed but you need set <code>shell=False</code> and split parameters: </p>
<pre><code>import subprocess

TOOL = 'ls'
joined = '-a -l'
target = '/tmp'

print(subprocess.call([TOOL, *joined.split(), target], shell=False))
</code></pre>
</div>
<span class="comment-copy">I think you need to separate <code>joined</code>, since it will be quoted and interpreted as a single argument otherwise.</span>
<span class="comment-copy">@Aankhen I have tried that as well as other nmap options like -A or -v and they haven't worked either</span>
<span class="comment-copy">You can try this <code>subprocess.call([TOOL, 'p1 5000', target], shell=False)</code></span>
<span class="comment-copy">As Kishan said, you shouldn’t need to set <code>shell=True</code>, since you’re not using any of its features; you can use <a href="https://docs.python.org/3/distutils/apiref.html#module-distutils.spawn" rel="nofollow noreferrer"><code>distutils.spawn.find_executable</code></a> to locate <code>nmap</code> if you need to.</span>
<span class="comment-copy">@Kishan Unfortunately, I need them passed from variables and that does not work as well</span>
<span class="comment-copy">That is correct. Thank you. I guess I need to look at the difference between shell=True and shell=False.</span>
<span class="comment-copy">@UCProgrammer, with <code>shell=True</code>, the arguments <code>['sh', '-c']</code> get prepended to your list. That's literally all it does.</span>
<span class="comment-copy">@UCProgrammer, ...however, only the argument immediately after <code>-c</code> is parsed by <code>sh</code> as a shell script; other arguments are parsed as <i>arguments to that script</i>.</span>
<span class="comment-copy">We already have a lot of instances of this question in the knowledge base -- it should have been closed as a dupe, not answered.</span>
<span class="comment-copy">I also strongly advise against using <code>split()</code> in this context. Much, <b>much</b> less error-prone to explicitly pass <code>'-a', '-l'</code>; otherwise, you get into serious trouble when trying to process a filename with spaces. If you <b>must</b> use a split function, use <code>shlex.split()</code>, not <code>string.split()</code>.</span>
