<div class="post-text" itemprop="text">
<p>I am new to python but have experience in C.</p>
<p>I have a python 3 project including a <code>main.py</code> file and some other <code>.py</code> files in another folder like this:</p>
<pre><code>Root
├── main.py
├── subfolder1
│   ├── __init__.py
│   ├── models.py
│   └── subfolder2
│       ├── __init__.py
│       └── models.py
</code></pre>
<p>inside <strong>main.py</strong>:</p>
<pre><code>from subfolder1.model import BaseClass
</code></pre>
<p>inside first  <strong>__init__.py</strong>:</p>
<pre><code>from .model import BaseClass
</code></pre>
<p>inside second  <strong>__init__.py</strong>:</p>
<pre><code>from .model import BaseClass
</code></pre>
<p>I want to convert this project into a C project to increase its performance, in this project a lot of Libraries like <code>numpy</code>, <code>sklearn</code>, <code>keras</code> and <code>scipy</code> are used. </p>
<p>I tried <code>cython</code> and I know how to get <code>main.c</code> from <code>main.py</code>, but for the other files and how to convert and use child class methods and is there a way to convert the whole project with one <code>setup.py</code>?(I don't understand a lot from its docs)</p>
<p>the main purpose is to run in C and get better performance so if there is alternate way please help in it.</p>
<p>thanks.</p>
<p><strong>================================  Edit  ===================================</strong></p>
<p>I want to use <code>BaseClass</code> methods in <code>models.py</code> and functions in <code>main.py</code> in the <code>C Project</code> and problem is how to use other <code>.py</code> files in sub-folders and generate <code>C</code> code using <code>cython</code>. I was able to convert single python file <code>main.py</code> but don't know how to add, import or ... other files in my <code>C Project</code>.</p>
<p>thanks again.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the answer is no -- you are not going to be able to do a simple conversion to C for the whole project. At least, not in a way that is likely to give you better performance. Also, the libraries you have listed are mostly implemented in C already, so the calls to those libraries are generally fast.</p>
<p>Have you profiled the code? I think you would have more luck if you can identify where the bottle-necks are rather than attempt a total conversion.</p>
</div>
<span class="comment-copy">Unless the bottlenecks is in your code, there's not much you can do really. The Python libraries you use are highly optimized and for the critical parts they are already coded in C or C++. To find the bottlenecks you need to <i>profile</i> your code. And even if your code <i>is</i> the bottleneck, you could possibly optimize the worst parts, or convert only parts of your code to C, instead of rewriting your whole project.</span>
<span class="comment-copy"><a href="https://spark.apache.org/" rel="nofollow noreferrer">Apache Spark</a> might be interesting to you too. It has ML capabilities as well and handles parallelization very nicely (yes, it's for Python too). I definitely agree with the others though that you should profile your code. Your logic is likely a bottleneck somewhere, though Spark could give you extra performance on top of that fix as well.</span>
<span class="comment-copy">Hi, thanks for your advice, you mean I can move some time consuming function in my code to C and re-implement them, then call them from python and this will give me better performance?</span>
<span class="comment-copy">That is a reasonable path to take. If you are comfortable in C then writing a python extension is pretty straightforward (see <a href="https://docs.python.org/3/extending/index.html" rel="nofollow noreferrer">docs.python.org/3/extending/index.html</a>).</span>
