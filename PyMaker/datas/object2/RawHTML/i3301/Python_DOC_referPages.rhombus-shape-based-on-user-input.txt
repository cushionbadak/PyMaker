<div class="post-text" itemprop="text">
<p>I am trying to create a rhombus made out of letters that a user selects, using Python 3. So if a user selects "B" then the rhombus is </p>
<pre><code>  A
B   B
  A
</code></pre>
<p>If the user selects "D" the rhombus would be:</p>
<pre><code>      A
    B   B
  C   C   C
D   D   D   D
  C   C   C
    B   B
      A
</code></pre>
<p>Can anyone help me get started on this? As of now, I am thinking if a user selects D then that corresponds to 4 and you would use the equation 2k-1 to determine the size of the "square." I would also create a linked list containing all the letters 
so letter = ['A', 'B', 'C', 'D'.... 'Z'] (or would a dictionary be better?)
so:</p>
<pre><code>def rhombus(n):
  squareSize = 2n-1
  for i in range(1,squareSize):
    for l in letter:
      print l + "/n"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>golfing time \o/</p>
<p>edit: there's of course an SE for <a href="https://codegolf.stackexchange.com/">code golf</a> and i'll do as in rome</p>
<h1><a href="https://docs.python.org/3/" rel="nofollow noreferrer">Python 3</a>, 106 bytes</h1>
<pre class="lang-python prettyprint-override"><code>n=26
for x in range(-n, n):
    x = abs(x)
    print('  '*x+'   '.join([chr(64+n-x) for _ in range(n-x)]))
</code></pre>
<p><a href="https://tio.run/##K6gsycjPM/7/P8/WyIwrLb9IoUIhM0@hKDEvPVVDN09HIU/TiksBCCoUbBUSk4o1KjTB3IKizLwSDXUFBXWtCm0gpaCul5WfmacRnZxRpGFmop2nW6GpADIuHmEcSCxWU/P/fwA" rel="nofollow noreferrer" title="Python 3 â€“ Try It Online">Try it online!</a></p>
<p><strong>explanation</strong></p>
<p><code>for x in range(-n, n)</code>: generate the rows</p>
<p><code>'  '*x</code>: generate the space before each first letter in the row</p>
<p><code>chr(64+n-x)</code>: display the letter, with <code>chr(65) = "A"</code></p>
<p><code>'   '.join</code>: join all letters with three spaces between each of them</p>
<p><code>for _ in range(n-x)</code>: will generate the right number of letters. the value itself is useless.</p>
<p>output for n=4:</p>
<pre class="lang-python prettyprint-override"><code>      A   
    B   B   
  C   C   C   
D   D   D   D   
  C   C   C   
    B   B   
      A   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>domochevski's answer is great but we don't actually need those imports.</p>
<pre><code>def rhombus(char):
    A = 64
    Z = A + 26
    try:
        val = ord(char)
        if val &lt; A or val &gt; Z:
            return None
    except:
        return None
    L = [ ''.join(([chr(x)]*(x-A))) for x in range(A,val+1) ]
    L = [' '.join(list(x)) for x in L]
    max_len = max(len(x) for x in L)
    L = [x.center(max_len) for x in L]
    L += L[-2::-1]
    return '\n'.join(L)

print(rhombus('Z'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well that was an interesting question. Here is some quick and dirty way to do it:</p>
<pre><code>from string import ascii_uppercase

def rhombus(c):  # Where c is the chosen character
    # Get the position (1-based)
    n = ascii_uppercase.find(c.upper()) + 1
    if 0 &lt; n &lt;= 26:
        # Get the strings for the top of the rhombus without spaces
        l = [ascii_uppercase[i] * ((i)+1) for i in range(n)]
        # Add in the spaces
        l = [' '.join(list(e)) for e in l]
        # Align everything
        max_len = max(len(e) for e in l)
        l = [e.center(max_len) for e in l]
        # Get the bottom from the top
        l += l[-2::-1]
        # Print the rhombus
        for e in l:
            print(e)
</code></pre>
<p>As I mentioned this is not beautiful code but it should work.</p>
</div>
<span class="comment-copy">the rhombus is showing up as a line for some reason. In A B B C C C D D D D C C C B B A, the B B would in a different line and so forth</span>
<span class="comment-copy">Hello @bobrobbob can you please explain your code to me? Also sshouldnt it be "x" instead of "y" (... for y n range(n-x))?</span>
<span class="comment-copy">it should be nothing in fact. thanks for noticing. i tried to explain the code</span>
