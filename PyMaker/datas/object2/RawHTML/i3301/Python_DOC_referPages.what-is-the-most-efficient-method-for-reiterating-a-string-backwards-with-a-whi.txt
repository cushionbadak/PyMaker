<div class="post-text" itemprop="text">
<p>I know there must be a better method with less lines of code, how would you go about reversing the numbers in "some_numbers?"</p>
<pre><code>some_numbers =[1,2,3,4,5,6,7,8,9,11,22,33,44,55,66,77]
new_string = []
print('some_numbers string: ',some_numbers)
print('new_string string: ',new_string)
#pop the last variable and insert into 'new_string'
new_string.insert(-1,some_numbers[-1])
#begin loop
while some_numbers:    
    #insert the pops from some_numbers into new string in a reverse order
    new_string.insert(-1,some_numbers.pop())
#delete redundant number at the end of list
del new_string[-1]
print("some_numbers string: ",some_numbers)  
print("reversed string: ",new_string)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since your list size is fixed, using a <code>for</code> loop going backwards also makes sense here:</p>
<pre><code>reversed_lst = []
for i in range(len(some_numbers)-1, -1, -1):
    reversed_lst.append(some_numbers[i])
</code></pre>
<p>Or as a list comprehension:</p>
<pre><code>reversed_lst = [some_numbers[i] for i in range(len(some_numbers)-1, -1, -1)]
</code></pre>
<p>Both of which give:</p>
<pre><code>[77, 66, 55, 44, 33, 22, 11, 9, 8, 7, 6, 5, 4, 3, 2, 1]
</code></pre>
<p><strong>Note:</strong> More pythonic solutions would be to use <a href="https://docs.python.org/3/library/functions.html#reversed" rel="nofollow noreferrer"><code>reversed()</code></a> or slicing <code>[::-1]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>@Tomas Farias is correct, you can use the <code>reversed</code> built-in, as below:</p>
<pre><code>print(list(reversed(some_numbers)))
</code></pre>
<p><em>Note: @coldspeed is correct that's not a string that's called a list, so i renamed it</em></p>
<p><strong>Edit:</strong></p>
<p>try this:</p>
<pre><code>print([some_numbers[len(some_numbers)-i-1] for i in range(len(some_numbers))])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming you are doing this as an exercise in writing a reverse function, or it's homework, in which case using <code>reversed</code> is not the point.</p>
<p>An alternative using indexes:</p>
<pre><code>some_numbers =[1,2,3,4,5,6,7,8,9,11,22,33,44,55,66,77]
new_string = []
l = len(some_numbers) - 1
i = 0
while i &lt;= l:
    new_string.append(some_numbers[l-i])
    i+=1
print("some_numbers string: ",some_numbers)  
print("reversed string: ",new_string)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to compile the answers: </p>
<ol>
<li>That is not a string, it is a list (a string is a word like "hey").</li>
<li>You can do <code>some_numbers.reverse()</code>, and now the list is reversed. Or, if you don't want to overwrite the list, call <code>reversed (list)</code>.</li>
<li>Or you can get <code>some_numbers [::-1]</code>. The numbers in the brackets (called splices) tell Python how to look at the list. The first number, which since we didn't include defaults to the start of the list, tells Python where to start. The second number, which defaults to <code>len (some_numbers)</code>, tells Python where to stop. And the third number (-1) tells Python how to move from one number to the next, in our case, backwards by 1.</li>
<li>If you wanted the list in reversed <strong>sorted</strong> order, then you should do <code>some_numbers.sort (reverse = True)</code>. Again, if you don't want to change the list and just want a copy, call <code>sorted (some_numbers, reverse = True)</code>.</li>
</ol>
</div>
<span class="comment-copy">Have you looked into the <a href="https://docs.python.org/3/library/functions.html#reversed" rel="nofollow noreferrer">reversed</a> built-in?</span>
<span class="comment-copy">That's not a string?</span>
<span class="comment-copy"><code>some_numbers[::-1]</code></span>
