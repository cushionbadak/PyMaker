<div class="post-text" itemprop="text">
<p>Using Python 3.7.0 on Mac. Trying to use <code>venv</code> module that was added post python 3.4.</p>
<p>I setup my virtual env using <code>python3 venv -m path/to/my/dir</code> - my question is <strong>do I need to activate this virtual env to use?</strong> </p>
<p>The <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">documentation</a> seem to imply I don't need to?</p>
<blockquote>
<p>You don’t specifically need to activate an environment; activation just prepends the virtual environment’s binary directory to your path, so that “python” invokes the virtual environment’s Python interpreter and you can run installed scripts without having to use their full path. However, all scripts installed in a virtual environment should be runnable without activating it, and run with the virtual environment’s Python automatically.</p>
</blockquote>
<p>If I don't have to activate, what is the benefit of prepending venv to binary directory? Wouldn't this have to happen regardless for a venv to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Activating the virtualenv gives you <em>convenience</em>. It is never required.</p>
<p>Even for scripts that are configured to run with <code>#!/usr/bin/env python</code>, (which looks up the <code>python</code> executable on your path), you could <em>manually</em> update the <code>PATH</code> environment variable:</p>
<pre><code>$ PATH="/path/to/venv/bin" some_script
</code></pre>
<p>Activating makes the <code>PATH</code> update stick until you deactivate again, and that can be convenient.</p>
<p>For example, I regularly have several virtualenvs in use at any one time. Some of them are there only to install some command-line tools I have symlinked into my <code>~/bin/</code> directory, another is home to a Jupyter notebook, and 2 more are used to quickly verify code snippets in different Python versions with access to 3rd-party libraries. I don't activate any of those.</p>
</div>
<span class="comment-copy">No, you don't. Not any more in Python 3.7 than you needed to do so in earlier versions.</span>
<span class="comment-copy">I think the key phrase is "scripts installed in a virtual environment should be runnable without activating it".</span>
