<div class="post-text" itemprop="text">
<p><strong>Scenario:</strong> I have 2 lists, one is a list of strings with names, the other is a list of dataframes with varied content. I am trying to put the values from the first list into the second.</p>
<p><strong>Data Example:</strong> </p>
<pre><code>list1 = ['jan18', 'feb18', 'mar18', 'apr18', 'may18']
</code></pre>
<p>List two is a list of dataframes with the following structure:</p>
<pre><code>DF1_LIST2:
row1      row2      row3    row4
           5         55      12
           3         51      11
           3         52      11
           9         59      11

DF2_LIST2:
row1      row2      row3    row4
           9         91      7
           5         1       23
           3         24      56
           9         68      21
</code></pre>
<p>My objective is to add the first element of list1 to all cells in the first column of the first dataframe of list2; then the second element of list2 to all cells of the first column of the second dataframe of list 2, and so on. The output would be something like:</p>
<pre><code>DF1_LIST2:
row1      row2      row3    row4
jan18      5         55      12
jan18      3         51      11
jan18      3         52      11
jan18      9         59      11

DF2_LIST2:
row1      row2      row3    row4
feb18      9         91      7
feb18      5         1       23
feb18      3         24      56
feb18      9         68      21
</code></pre>
<p>What I got so far was trying to establish a triple for loop, the first iterates over items of list1, the second over dataframes of list2 and the third over rows of each dataframe:</p>
<pre><code>import pandas as pd
import os
from os import listdir
from os.path import isfile, join
import glob

# Get File Names
mypath = "//DGMS/Desktop/uploaded"
onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]

# Get dates
onlyfiles = [name.split("_")[0] for name in onlyfiles]    
df_of_names = pd.DataFrame(onlyfiles) 

# Get File Contents
all_files = glob.glob(os.path.join(mypath, "*.xls*"))
contentdataframes = [pd.read_excel(f) for f in all_files]

for dfs in contentdataframes:
dfs.insert(0,"date*","")
dfs.insert(1,"apply*","")

for date in onlyfiles:  
     for dfs in contentdataframes:  
        for row in dfs.itertuples(index=True):
            dfs.set_value(row,0,date)
</code></pre>
<p>This gives me an error, I believe because of the header column, which still counts as a normal row, not an index.</p>
<p><strong>Question:</strong> Is there a proper way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.assign.html" rel="nofollow noreferrer"><code>assign</code></a> for add new column in each <code>DataFrame</code>:</p>
<pre><code>d = [pd.read_excel(f).assign(row1=os.path.basename(f).split('.')[0].split('_')[0])
     for f in all_files]
</code></pre>
<p>EDIT:</p>
<p>If want working with columns and <code>.assign</code> with multiple columns is worse readable, is possible use <code>loop</code> for process each <code>DataFrame</code> and last append to <code>list</code>:</p>
<pre><code>contentdataframes = []
for f in all_files:
    df = pd.read_excel(f)
    df['col1'] = 10
    df['col2'] = 'string1'
    df['row1'] = os.path.basename(f).split('.')[0].split('_')[0]
    contentdataframes.append(df)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can extract the filename from the full path via <a href="https://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow noreferrer"><code>os.path.splitext</code></a>. Then wrap in a list comprehension with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.assign.html" rel="nofollow noreferrer"><code>pd.DataFrame.assign</code></a>:</p>
<pre><code>import os

def extract_name(x):
    return os.path.splitext(fp)[0].split('_')[0]

dfs = [pd.read_excel(fp).assign(row1=extract_name(fp)) for fp in all_files]
</code></pre>
</div>
<span class="comment-copy">There is difference between <code>onlyfiles</code> and <code>all_files</code> ?</span>
<span class="comment-copy">Is possible extract dates from <code>all_files</code> ?</span>
<span class="comment-copy">@jezrael Only files retrieves the list without the file path, just the names. All_files also include the path, for example: //DGMS/Desktop/uploaded\iteration5_tes3_Jun.xlsx</span>
<span class="comment-copy">hmmm, is possible add sample of <code>all_files</code> ? I think <code>onlyfiles</code> are not necessary (but maybe I am wrong)</span>
<span class="comment-copy">@jezrael onlyfiles would be iteration5_tes3_Jun.xlsx where I want just the value before the first underscore.</span>
<span class="comment-copy">I tried this and got the error: "Too many values to unpack"</span>
<span class="comment-copy">Yes, now tested and corrected.</span>
<span class="comment-copy">One thing I forgot in my initial code: before I entered the loops, I added 2 columns to each dataframe (which are the ones to be filled with the data from list 1). Is there a way to add a column before assigning the data?</span>
<span class="comment-copy">I think is possible use <code>.assign(row1=os.path.basename(f).split('.')[0].split('_')[0], col1=1, col2='string1')</code></span>
<span class="comment-copy">i think in assign is possible add multiple new columns</span>
<span class="comment-copy">two questions: what would be fp in this case and how can I set the path?</span>
<span class="comment-copy">Each <code>fp</code> is an item in your list <code>all_files</code>. The paths are already calculated in the items of <code>all_files</code> via your <code>glob.glob</code> call.</span>
<span class="comment-copy">Just tried it, it adds a row at the end of each dataframe with the full file path, not just the part of the filename (withouth the path) before the underscore. Is there a way to fix it?</span>
<span class="comment-copy"><code>.assign</code> adds a new column, not a new row. You can split by <code>_</code>, see update.</span>
