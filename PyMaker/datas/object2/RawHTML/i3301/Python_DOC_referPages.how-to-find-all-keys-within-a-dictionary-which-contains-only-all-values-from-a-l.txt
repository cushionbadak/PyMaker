<div class="post-text" itemprop="text">
<p>i'am new in python. I Am currently working on a script that filters job applicants by which programing languages they use. I've a dictionary containing each candidate (keys) and her language (value). I want to find ONLY the keys within a dictionary whose values contains ALL items contained in a list. For example:</p>
<pre><code>list1 = ['php', 'net']
dict  = {
    'lara': ['net', 'php', 'python'], 
    'john': ['php', 'c++'], 
    'ian' : ['php','python']}
</code></pre>
<p>Using this example what i want to get would be only the key 'lara', which is the only one containing all the values listed within list1. I've searched like mad for a solution to this problem but so far i've found nothing around and neither could make it work for myself. </p>
<p>Any help will be welcome</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a list comprehension and <code>all</code></p>
<pre><code>list1 = ['php', 'net']
d = {'lara': ['net', 'php', 'python'], 'john': ['php', 'c++'], 'ian': ['php','python']}
print([k for k,v in d.items() if all(i in v for i in list1)])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['lara']
</code></pre>
<p><em>Expanded version.</em></p>
<pre><code>res = []
for k,v in d.items():
    if all(i in v for i in list1):
        res.append(k)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list</a> or <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dict comprehension</a> to filter the elements in the dictionary (renamed <code>dict</code> to <code>dikt</code> below to avoid clashing with the <code>dict</code> class). The <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> function returns <code>True</code> if all elements of the iterable are <code>True</code>.</p>
<pre><code>list1 = ['php', 'net']
dikt = {'lara': ['net', 'php', 'python'], 'john': ['php', 'c++'], 'ian': ['php','python']}

# Matching keys as a list:

[k for k,v in dikt.items() if all(x in v for x in list1)]
# ['lara']

# Matching entries returned as a dict:

{k:v for k,v in dikt.items() if all(x in v for x in list1)}
# {'lara': ['net', 'php', 'python']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use sets instead of lists.</p>
<pre><code>set1 = {'php', 'net'}
dict1 = {'lara': ['net', 'php', 'python'], 'john': ['php', 'c++'], 'ian': ['php','python']}
{k: v for k,v in dict1.items() if set1.issubset(v)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>set.isubset</code> method to find if the given set is subset of the lists</p>
<pre><code>list1=['php', 'net']
dict1={'lara': ['net', 'php', 'python'], 'john': ['php', 'c++'], 'ian': ['php','python']}
set1=set(list1)
{k:v for k,v in dict1.items() if set1.issubset(v)}
# {'lara': ['net', 'php', 'python']}
</code></pre>
</div>
<span class="comment-copy">You could go by using sets and function <code>issubset</code></span>
<span class="comment-copy">Well - what problem has the solution you derived? And where is it? why do you shadow the built in dict by using it as variable name?</span>
<span class="comment-copy">closing braket for dict is missing ! please be careful to share complete portion of code!</span>
<span class="comment-copy">This completely solve my problem ¡¡¡ thank you very much</span>
