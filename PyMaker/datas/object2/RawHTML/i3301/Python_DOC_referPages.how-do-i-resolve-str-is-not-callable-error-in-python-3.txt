<div class="post-text" itemprop="text">
<p>Any guidance is appreciated. I'm very new to programming. </p>
<p>Problem(s): Runtime error of 'str is not callable.' And, likely semantic error. Specifics: "if len(s) &lt;= 70:
TypeError: 'str' object is not callable"</p>
<p>Intended results: I'm trying to write a function that takes a string and then prints that string so that the last letter of the string is in column 70 of the display.</p>
<p>What I've tried: Run code in PEP8 and it doesn't return any syntax errors. Removed original line which assigned str to s.  </p>
<p>The code in Python 3:</p>
<pre><code>def right_justify(s):
    '''
    (string) -&gt; string
    takes a string named s
    places it in column 70 - len of string
    '''
    s = input("Type in a word: ")
    for len in s:
        if len(s) &lt;= 70:
            len(s) + 70 - len(s)
    return s 

print(right_justify)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your requirements, you want to put enough spaces in front of the string so its last character is in column 70. </p>
<p>You do not need to iterate over the string. This will achieve what you need. Note there is no point putting <code>input</code> within the function, because you cannot call the function with a string argument.</p>
<pre><code>def right_justify(s):
    '''
    (string) -&gt; string
    takes a string named s
    places it in column 70 - len of string
    '''
    if len(s) &lt;= 70:
        output = ((70 - len(s)) * " ") + s
        return output

input_string = input("Type in a word: ")
output_string = right_justify(input_string)
print(output_string)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the simplest way is:</p>
<pre><code>def right_justify(s):
    return "%70s" % s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply replace the </p>
<blockquote>
<p>len variable </p>
</blockquote>
<p>With something else. </p>
<p>len is a Python keyword sir its reserved and not meant to be use as a variable </p>
</div>
<div class="post-text" itemprop="text">
<p>'len' is a Python reserved keyword, you don't use keywords as variable names. </p>
<p>The correction</p>
<pre><code>def right_justify(s):
'''
(string) -&gt; string
takes a string named s
places it in column 70 - letter of string
'''
res = input("Type in a word: ")
if len(res) &lt;= 70: 
      res = res + (70 - len(res)) * " "
      return output
</code></pre>
<p>print(right_justify) </p>
</div>
<span class="comment-copy">What do you think <code>for len in s</code> is doing?</span>
<span class="comment-copy">I'm sorry, but by only looking at your code, I seriously have no idea what you're trying to do.. <code>for len in s</code> (looping the string by each character), <code>if len(s) &lt;= 70</code> (if length of the string less than or equal to 70), <code>len(s) + 70 - len(s)</code> (does nothing), <code>return s</code> (returns the orginal input string).</span>
<span class="comment-copy">This doesn't answer your questions. But python strings already has a built in <code>rjust</code> method you can use. <a href="https://docs.python.org/3/library/stdtypes.html#str.rjust" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.rjust</a></span>
<span class="comment-copy">I'm really trying not to sound too harsh, but the example code demonstrates a lack of understanding of the very basics of Python. Thus, even if we answer your question you likely won't understand it. We'd practically have to write the book to answer at a level you can use (because we can't guess your knowledge accurately), so just start with a good beginner text like <a href="https://python.swaroopch.com/" rel="nofollow noreferrer">A Byte of Python</a>, which is free online. If you get stuck ask on #python IRC on freenode before StackOverflow. Sorry.</span>
<span class="comment-copy">@Zuckerbrenner also, when you say " Run code in PEP8 and it doesn't return any syntax errors. " I assumen you meant you ran your code through some linter checking for PEP8 <i>style errors</i>. Note, PEP8 doesn't address syntax errors, it's a <i>style guide</i>. Things that fail a PEP8 linter can certainly be 100% syntactically correct.</span>
<span class="comment-copy">Just like user Haken Lid commented on the question, Python has a right justification method built in: <a href="https://docs.python.org/3/library/stdtypes.html#str.rjust" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.rjust</a></span>
<span class="comment-copy">Thanks, Chris. Your answer clarified a lot for me.</span>
<span class="comment-copy">@Zuckerbrenner My pleasure!</span>
<span class="comment-copy">How does this help?</span>
<span class="comment-copy">That gets rid of the exception, but it doesn't make the code work.</span>
<span class="comment-copy">How many times do you intend to answer the same question?</span>
<span class="comment-copy"><code>len</code> is not a reserved keyword. It's a builtin function. If it was reserved, the code would have given a syntax error.</span>
<span class="comment-copy">(Your <i>correction</i> will still raise the same exception)</span>
<span class="comment-copy">The answer i just realized is wrong; but for the repeated answer, that's the stackoverflow android app not updating the thread when I make a post</span>
