<div class="post-text" itemprop="text">
<p>I am new in python. I want to read one file and copy data to another file. my code is following. In code below, when I open the files inside the for loop then I can write all the data into dst_file. but it takes 8 seconds to write dst_file.</p>
<pre><code>for cnt, hex_num in enumerate(hex_data):
    with open(src_file, "r") as src_f, open(dst_file, "a") as dst_f:
        copy_flag = False
        for src_line in src_f:
            if r"SPI_frame_0" in src_line:
                src_line = src_line.replace('SPI_frame_0', 'SPI_frame_' + str(cnt))
                copy_flag = True

            if r"halt" in src_line:
                copy_flag = False

            if copy_flag:
                copy_mid_data += src_line

        updated_data = WriteHexData(copy_mid_data, hex_num, cnt, msb_lsb_flag)
        copy_mid_data = ""
        dst_f.write(updated_data)
</code></pre>
<p>To improve performance, I am trying to open the files outside of the for loop. but it is not working properly. it is writing only once (one iteration of for loop) in the <code>dst_file</code>. As shown below.   </p>
<pre><code>with open(src_file, "r") as src_f, open(dst_file, "a") as dst_f:
    for cnt, hex_num in enumerate(hex_data):
        copy_flag = False
        for src_line in src_f:
            if r"SPI_frame_0" in src_line:
                src_line = src_line.replace('SPI_frame_0', 'SPI_frame_' + str(cnt))
                copy_flag = True

            if r"halt" in src_line:
                copy_flag = False

            if copy_flag:
                copy_mid_data += src_line

        updated_data = WriteHexData(copy_mid_data, hex_num, cnt, msb_lsb_flag)
        copy_mid_data = ""
        dst_f.write(updated_data)
</code></pre>
<p>can someone please help me to find my mistake?</p>
</div>
<div class="post-text" itemprop="text">
<p>Files are <em>iterators</em>. Looping over them reads the file line by line. <em>Until you reach the end</em>. They then don't just go back to the start when you try to read more. A new <code>for</code> loop over a file object does not 'reset' the file.</p>
<p>Either re-open the input file each time in the loop, seek back to the start explicitly, or read the file just once. You can seek back with <code>src_f.seek(0)</code>, reopening means you need to use two <code>with</code> statements (one to open the output file once, the other in the <code>for</code> loop to handle the <code>src_f</code> source file).</p>
<p>In this case, given that you build up the data to be written out to memory in one go anyway, I'd read the input file just once, keeping only the lines you need to copy. </p>
<p>You can use multiple <code>for</code> loops over the same file object, the file position will change accordingly. That makes reading a series of lines from a match on one key string to another very simple. The <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>itertools.takewhile()</code> function</a> makes it even easier:</p>
<pre><code>from itertools import takewhile

# read the correct lines (from SPI_frame_0 to halt) from the source file
lines = []
with open(src_file, "r") as src_f:
    for line in src_f:
        if r"SPI_frame_0" in line:
            lines.append(line)
            # read additional lines until we find 'halt'
            lines += takewhile(lambda l: 'halt' not in l, src_f)


# transform the source lines with a new counter    
with open(dst_file, "a") as dst_f:
    for cnt, hex_num in enumerate(hex_data):
        copy_mid_data = []
        for line in lines:
            if "SPI_frame_0" in line:
                line = line.replace('SPI_frame_0', 'SPI_frame_{}'.format(cnt))
            copy_mid_data.append(line)
        updated_data = WriteHexData(''.join(copy_mid_data), hex_num, cnt, msb_lsb_flag)
        dst_f.write(updated_data)
</code></pre>
<p>Note that I changed <code>copy_mid_data</code> to a list to avoid quadratic string copying; it is far more efficient to join a list of strings just once.</p>
</div>
<span class="comment-copy">Amazing!!!!, thank you very much for your answer. my code is working as I expected now.</span>
