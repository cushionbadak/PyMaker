<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/47814787/when-is-the-existence-of-nonlocal-variables-checked">When is the existence of nonlocal variables checked?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>previously I thought that when we define a function, the function can be wrong, but python will not check it until it got executed:</p>
<pre><code>x = 100

def f():
    x = 1/0
    return x

print(x)
# &gt;&gt;&gt; 100
</code></pre>
<p>however, when I was learning the <code>nonlocal</code> statement</p>
<pre><code>x = 100

def f():
    def g():
        nonlocal x
        x = x * 99
        return x
    return g

print(x)
# &gt;&gt;&gt; SyntaxError: no binding for nonlocal 'x' found
</code></pre>
<p>It got checked out even if the function is not executed.</p>
<p>Is there anywhere I can find the official explanation for this?</p>
<p>Additional for variable bounding situation:</p>
<pre><code>x = 100
def f():
    global x
    global xx
    x = 99
    return x

print(f())
# &gt;&gt;&gt; 99
print(x)
# &gt;&gt;&gt; 99
</code></pre>
<p>it seemed totally fine, if I <code>global</code> some variable that does not exist at all?
And it doesn't even bring any error even if I execute this function?</p>
<p>this part is moved to a new individual question:
<a href="https://stackoverflow.com/questions/51288447/why-am-i-able-to-global-a-non-existing-varlable-in-python">Why am I able to global a non-existing varlable in python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>nonlocal</code> checks the <em>nearest enclosing scope</em>, <strong>excluding globals</strong> (that is, module level variables). That is, your <code>f()</code> function should declare a <code>x</code> for it to work, as <code>nonlocal</code> can't see the global <code>x = 100</code> variable.</p>
<p>See <a href="https://docs.python.org/3/reference/simple_stmts.html#the-global-statement" rel="nofollow noreferrer">https://docs.python.org/3/reference/simple_stmts.html#the-global-statement</a>.</p>
<p>As to why the error is raised without running the function, it is because the variable names are bound at <em>compile-time</em>, so it doesn't matter that you don't use this function at all. See 
<a href="https://docs.python.org/3/reference/executionmodel.html#resolution-of-names" rel="nofollow noreferrer">https://docs.python.org/3/reference/executionmodel.html#resolution-of-names</a></p>
<p>However, <code>global</code> has different behaviour. Just like <code>nonlocal</code> if the <code>global x</code> already exists, it is used instead of the local one. However, if it doesn't, it means "if I create a variable named <code>x</code>, create it on the global scope, instead of the function scope". So, in your example</p>
<pre><code>x = 100
def f():
    global x
    global xx
    x = 99
    xx = 123
    return x

print(f()) # 99
print(x)   # 99
print(xx)  # 123
</code></pre>
<p>a <code>xx</code> variable has appeared in the global namespace. It is only a <em>hint</em> to the compiler though, so if you declared <code>global xx</code> without assigning it, and try to <code>print(xx)</code> later, you still get a <code>NameError</code> for using an undefined variable</p>
</div>
<span class="comment-copy">nonlocal means the name exists in an outer lexical function scope, In above example outer lexical function scope is f() because of that you are getting no binding exception. more details - <a href="https://stackoverflow.com/questions/8050502/pythons-nonlocal-depends-on-level-of-hierarchy" title="pythons nonlocal depends on level of hierarchy">stackoverflow.com/questions/8050502/â€¦</a></span>
<span class="comment-copy">@MONTYHS  I do know what does <code>nonlocal</code> do, I am simply questioning why this got checked when the function is not executed</span>
<span class="comment-copy">I understand what does <code>nonlocal</code> do, but I am more interested why this got checked when I do not run this function at all.</span>
<span class="comment-copy">@Code_Control_jxie0755: sorry, I mis-read the question, will edit answer</span>
<span class="comment-copy">@Code_Control_jxie0755: edited</span>
<span class="comment-copy">so this is happening because it check all the variables bounding, but most of the time, if the variable is not found before, it will be assumed as a new variable creation, so that nothing will go wrong. But in this case, the <code>nonlocal</code> is suggesting "Do not create a new variable, but to look for an existing one to bound", and that will cause the problem. Am I understanding this corretly?</span>
<span class="comment-copy">@Code_Control_jxie0755: exactly. And this happens before the program runs</span>
