<div class="post-text" itemprop="text">
<p>I am trying to code up a module which has two classes. First class is called as TextProcessing</p>
<pre><code>class TextProcessing(object):

    """ To carry out text processing 
    """

    def __init__(self,):
        pass
</code></pre>
<p>It has various methods in there for pre-processing text. </p>
<p>Similary other class is for other data wrangling on pre-processed data. </p>
<p>I am saving these two classes in a python file to make it a module. </p>
<p>Now lets say a user downloads this python module and would now want to run the various methods of each class. </p>
<p>I wanted to provide some sort of documentation about the module, methods of each class to a user when she imports the module so that she is aware of which function to call and what parameters to pass. </p>
<p>Think of how a scikit learn documentation is on their documentation page. </p>
<p><a href="http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html" rel="nofollow noreferrer">http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html</a></p>
<p>Even the documentation we get to see when we do </p>
<pre><code>help(some_python_module) 
</code></pre>
<p>is fine too. </p>
<p>Issue is I don't have a documentation page like sklearn to show documentation. And I wanted a user to know documentation of various methods she can use once she imports the module in python console. </p>
<p>Is there a way I can print that documentation info to the console when a user imports the module?</p>
<p>It can show the doc string of each Class and Method.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a very weird thing to do, but it's definitely <em>possible</em>.</p>
<hr/>
<p>The easiest thing to do is just to call <a href="https://docs.python.org/3/library/functions.html#help" rel="nofollow noreferrer"><code>help</code></a>. While it's intended to be called from the interactive prompt, there's nothing stopping you from calling it from your own code.</p>
<p>Of course you <em>could</em> instead extract the docstrings (they're stored as <code>__doc__</code> on every module, class, and function), <code>textwrap</code> them yourself, and <code>print</code> them out, but if you're trying to reproduce the same thing <code>help</code> does, that's a lot of work for no real benefit.</p>
<hr/>
<p>The only tricky bit is that the thing you want to invoke the help system on is "this current module". How do you refer to that? It's a bit clunky, but you have this current module's name as <code>__name__</code>, so you can look it up in <code>sys.modules</code>.</p>
<p>So:</p>
<pre><code>"""Helpful module"""

import sys

class Spam:
    """Classy class"""
    def eggs(self):
        "Functional function"
        return 2

help(sys.modules[__name__])
</code></pre>
<p>Now, when you <code>import helpful</code> for the first time in a session, it will print out the <code>help</code>.</p>
<hr/>
<p>Of course that will be pretty odd if someone's trying to run a script that does an <code>import helpful</code>, rather than doing it from an interactive session. So you may want to only do this in interactive sessions, by checking <a href="https://docs.python.org/3/library/sys.html#sys.flags" rel="nofollow noreferrer"><code>sys.flags</code></a>:</p>
<pre><code>if sys.flags.interactive:
    help(sys.modules[__name__])
</code></pre>
<hr/>
<p>What if someone does an <code>import otherthing</code>, and that <code>otherthing</code> does an <code>import helpful</code>? You'll get the same help, which may be confusing.</p>
<p>If that's a problem, the only real option I can think of is to check whether the calling frame comes from the top-level script (and that the flags are interactive). That's pretty hacky, and something you shouldn't even consider unless you really need to, so I'll just direct you to the <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> module and hope you don't need it.</p>
</div>
<span class="comment-copy">Is there a reason you <i>can't</i> host the documentation somewhere online? There are plenty of free options. In fact, all the places people would look first—a PyPI listing, a github repo, a github.io page sharing the repo's or your name, Read the Docs, …—are all free, at least for open source projects.</span>
<span class="comment-copy">Well I know it's weird request. The problem is this is an internal code I am writing and I want to handover this module to a different team at my work. They just know how to run python codes, so I wanted to provide them with a doc when they import my module to know what to call and what to pass.   I don't have an internal wiki type page at work for them to refer back to.   If I write my own module, just doing help(my_module) will print all the doc strings by default? Of the class and individual methods too?</span>
<span class="comment-copy">IIRC, <code>help(my_module)</code> prints the docstring for the module itself, all top-level functions, all top-level classes, and all methods defined directly in those classes, but not nested functions or anything else. Or something like that. Whatever it does, it's usually what you want, so the simplest thing to do is to just try it and see whether it's what you want or not, rather than track down all the rules and try to work out what they'll do.</span>
<span class="comment-copy">Thanks. Let me try adding the sys.modules statement in the module code and check if it prints the docs when I import the module in interactive session or not.</span>
<span class="comment-copy">Well I know it's weird request. The problem is this is an internal code I am writing and I want to handover this module to a different team at my work. They just know how to run python codes, so I wanted to provide them with a doc when they import my module to know what to call and what to pass.   I don't have an internal wiki type page at work for them to refer back to.   If I write my own module, just doing help(my_module) will print all the doc strings by default? Of the class and individual methods too?</span>
