<div class="post-text" itemprop="text">
<p>I am a Java programmer struggling to learn Python, and almost certainly about to ask a duplicate question.  In my Python code, I need to create an object that basically holds a list.  When an object is instantiated, the list is to be empty.  Later in the code, I want to add items:</p>
<pre><code>   1     #!/usr/bin/python
   2
   3     class objWithList:
   4       # myList                 # define a global variable here?
   5       def __init__(self):
   6         print "New Object created!"
   7         myList = list()        # tell Python "myList" is a list?
   8       def addSomething(cls, x):
   9         myList.append(x)
  10     
  11     myObj = objWithList()      # create the object
  12     str1 = "Add me"
  13     myObj.addSomething(str1)   # add item to obj's list
</code></pre>
<p>When I run the above code, I get this error message:</p>
<pre><code>   me@myBox/python_Sandbox# ./test1.py
   New Object created!
   Traceback (most recent call last):
     File "./test1.py", line 13, in &lt;module&gt;
       myObj.addSomething(str1)   # add item to obj's list
     File "./test1.py", line 9, in addSomething
       myList.append(x)
   NameError: global name 'myList' is not defined
   me@myBox/python_Sandbox#
</code></pre>
<p>So it looks like the object is successfully created, but when I call <code>addSomething()</code>, the list is not defined.  Is that because the myList created in <code>__init__()</code> goes out of scope once the object constructor is completed?  I get the same error message when I move the <code>myList = list()</code> command to the top of the class definition:</p>
<pre><code>   3     class objWithList:
   4       myList = list()              # moved list creation here
   5       def __init__(self):
   6         print "New Object created!"
   7       def addSomething(cls, x):
   8         myList.append(x)
</code></pre>
<p>So how do I create an empty list which is available after the object is created?</p>
<p>I should also add that I am writing on Python 2.7.  My company likes this version, so I'm stuck with it.  Don't ask.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>In your <code>__init__</code> function <code>myList</code> is just local variable. Use <code>self.myList</code> in order to make it as a class member. Of course access it in function addSomething() by using self as well: <code>self.myList.append(x)</code>. Also you need to change signature of method addSomething from <code>addSomething(cls, x)</code> to <code>addSomething(self, x)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, there is difference between <code>__init__</code> and <code>__new__</code>. That is, by the time your code hits <code>__init__</code> it is already "constructed". Only then you can add new "fields" to an instance, like for example <code>self.myList = []</code> in <code>__init__</code>.</p>
<p>What <code>def addSomething(cls, x)</code> goes, you may named it <code>cls</code> but it is the instance in fact. So you should write <code>self.myList.append()</code> instead.</p>
</div>
<span class="comment-copy">I'd strongly recommend reading an introductory tutorial on classes in Python, e.g. <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html</a>, because you have several basic errors here.</span>
<span class="comment-copy">For now, think of <code>self</code> as <code>this</code> when you are coming from Java. <code>myList = list()</code> does not do much good if you don't bind it to the instance you are creating. (i.e. use <code>self.myList = list()</code>). Also, <code>[]</code> is a shorthand for <code>list()</code>.</span>
<span class="comment-copy">This usually suggests that what you need is time with a local tutor or walk through a tutorial, rather than Stack Overflow.</span>
<span class="comment-copy">You've created two local variables named <code>myList</code>; since the second tries to reference an existing value, the compiler assumes that it's <i>supposed</i> to be a global you neglected to define.  Research how to handle variable scoping in Python, especially class and instance attributes.</span>
<span class="comment-copy">"...almost certainly about to ask a duplicate question" Then you probably should have researched it.</span>
