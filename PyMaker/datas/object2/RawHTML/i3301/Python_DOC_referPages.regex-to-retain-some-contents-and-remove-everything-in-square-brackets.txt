<div class="post-text" itemprop="text">
<p>how to remove square brackets along with the strings/numbers within it but only remove the curve paranthesis and retain its contents within.</p>
<p>For example,</p>
<p><code>This is a (text).[s]This is a sample[22].</code></p>
<p>should come out as:
<code>This is a text. This is a sample.</code></p>
<p>My attempt so far:</p>
<pre><code>def _remove_regex(input_text, regex_pattern):
    pattern_lines = re.finditer(regex_pattern, input_text)
    for pattern in pattern_lines:
        input_text = re.sub(pattern.group().strip(), '', input_text)
    return input_text

regex_pattern = '\[\[(?:[^\]|]*\|)?([^\]|]*)\]\]'
_remove_regex(text, regex_pattern)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using regex and <code>str.replace</code></p>
<p><strong>Ex:</strong></p>
<pre><code>import re
s = "This is a (text).[s]This is a sample[22]"
text = re.sub("\[.*?\]", "", s)
text = text.replace("(", "").replace(")", "")
print(text)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>This is a text.This is a sample
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
s = 'This is a (text).[s]This is a sample[22].'
re.sub(r'\[[^\]]*\]|[\(\)]', '', s)
# 'This is a text.This is a sample.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can try this function:
<code>yourSentence = This is a (text).[s]This is a sample[22].</code></p>
<pre><code>def deleteBracketAndParenthesis (sentence):
     l = []
     for word in list(sentence):
         if ((word.split("(") is None) or (word.split("[") is None):
                l.append(word)
         elif (word.split("(") == null):
                l.append(word.split("(")[1])
     return( "".join(l) )
</code></pre>
</div>
<span class="comment-copy">Can you show what you have tried?</span>
<span class="comment-copy">Have you looked at this? <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">added my code @ScottMcC</span>
<span class="comment-copy">Bypassing regular expression and strange <code>null</code>s, "elsif" instead of <code>elif</code>, ...I had to downvote.</span>
<span class="comment-copy">Same reason for my downvote</span>
