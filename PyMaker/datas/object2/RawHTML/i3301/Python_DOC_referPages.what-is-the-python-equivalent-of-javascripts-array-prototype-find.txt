<div class="post-text" itemprop="text">
<p>I'm looking for something like: <code>find(pred, iter)</code> in python</p>
<pre><code>obj = { 
         "foo_list": [ 
           {"name": "aaaa", "id": 111},
           {"name": "bbbb", "id": 222},
           {"name": "cccc", "id": 333}
         ]
}
</code></pre>
<p>How to:
   <code>find(lambda x: x.get("name") == "bbbb", obj.get("foo_list", []))
</code></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find" rel="nofollow noreferrer"><code>Array.prototype.find()</code></a> returns the first matching element in an array, given a predicate function, or <code>undefined</code> when there is no match.</p>
<p>Python has the <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code> function</a>, which filters an iterable on a predicate, and <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a>, which produces the first element of an iterable or an optional default. Combining these give you the equivalent:</p>
<pre><code>next(filter(pred, iter), None)
</code></pre>
<p>where <code>pred</code> is a callable that returns <code>True</code> when an element matches the search criteria. </p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; iterable = [42, 81, 117]
&gt;&gt;&gt; parity_odd = lambda v: v % 2 == 1
&gt;&gt;&gt; next(filter(parity_odd, iterable), None)
81
&gt;&gt;&gt; iterable = [42, 2, 4]
&gt;&gt;&gt; next(filter(parity_odd, iterable), None) is None
True
</code></pre>
<p>If you remove the second argument to <code>next()</code>, a <code>StopIteration</code> exception is raised when there is no matching element.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def find(pred, iterable):
  for element in iterable:
      if pred(element):
          return element
  return None

# usage:
find(lambda x: x.get("name") == "bbbb", obj.get("foo_list", []))
</code></pre>
</div>
<span class="comment-copy">Do you want to find all matching values or just the first?</span>
<span class="comment-copy">@PeterWood just the first</span>
