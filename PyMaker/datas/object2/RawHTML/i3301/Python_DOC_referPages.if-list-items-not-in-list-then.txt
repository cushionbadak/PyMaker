<div class="post-text" itemprop="text">
<p>So I am wondering if there is a more "beautiful" way of doing this.
Currently I have over a thousand lists <code>list_of_lists</code> where each individual list looks something like this:</p>
<pre><code>list_of_items = ["dog", "mouse", "cow", "goat", "fish"]
</code></pre>
<p>Some of the lists contain other animals/strings, and don't have some of the above. It depends.</p>
<p>I now wish to make an if statement that says:</p>
<pre><code>list_of_items = ["dog", "mouse", "cow", "goat", "fish"]
for x in list_of_items:
    if "cow" not in list_of_items and "cat" not in list_of_items:
       print("Cat or Cow could not be found in list {}".format(x))
</code></pre>
<p>And this does exactly what it is supposed to. If it finds either "cat" or "cow" in the current list, nothing will get printed. But if it finds neither, a print statement will occur.</p>
<p>My problem is that I have several "cow", "cat", and such that I needed to include in my if statement. And if I have 10, as an example, it will become kind of long and ugly to look at. So is there some way to just say: <code>if list_of_animals not in list_of_items:</code>, where <code>list_of_animals</code> would just be a list of strings that should have been included in the <code>and</code> statement?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert your list to <code>set</code> and the use <code>issubset</code></p>
<p><strong>Ex:</strong></p>
<pre><code>list_of_items = set(["dog", "mouse", "cow", "goat", "fish", "cat"])
toCheck = set(["cow", "cat"])

if toCheck.issubset(list_of_items):
    print("Ok")
</code></pre>
<p><em>Edit as per comment</em></p>
<pre><code>if any(i in list_of_items for i in toCheck):
    print("Ok")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps something like this if you want any one of them to match?</p>
<pre><code>a = ["dog", "mouse", "goat", "fish"]
b = ["cat", "cow"]
if(any(x in a for x in b)):
    print("True")
else:
    print("False")
</code></pre>
<p>Returns False</p>
<pre><code>a = ["dog", "mouse", "cow", "goat", "fish"]
b = ["cat", "cow"]
if(any(x in a for x in b)):
    print("True")
else:
    print("False")
</code></pre>
<p>Returns True</p>
<p>If you want both to match, then:</p>
<pre><code>a = ["dog", "mouse", "cow", "goat", "fish"]
b = ["cat", "cow"]
if(all(x in a for x in b)):
    print("True")
else:
    print("False")
</code></pre>
<p>Returns False</p>
<pre><code>a = ["dog", "mouse", "cow", "cat", "goat", "fish"]
b = ["cat", "cow"]
if(all(x in a for x in b)):
    print("True")
else:
    print("False")
</code></pre>
<p>Returns True</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>list_of_items = ["dog", "mouse", "cow", "goat", "fish"]
another_list = ["cow", "cat"]
for x in list_of_items:
    if x in another_list:
        string_text = "String found"
    else:
        string_text = "String not found"
print(string_text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for x in list_of_lists:
    if not any(animal in list_of_items for animal in ("cow", "cat"))
        print("Cat or Cow could not be found in list {}".format(x)
</code></pre>
</div>
<span class="comment-copy">why is that for loop there and also what are you meant that print x ?</span>
<span class="comment-copy">your print says <i>or</i> and your condition says <i>and</i></span>
<span class="comment-copy">It's not super straight forward with lists. Can you use <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">sets</a> instead?</span>
<span class="comment-copy">I'd use <code>set</code>s for this sort of thing.</span>
<span class="comment-copy">If you want something more powerfull I suggest you to take a look at pandas dataframe</span>
<span class="comment-copy">But the problem here, as far as I can see, is that this looks if both strings are in the list ? In my case I need only to one of them to be there before it should be "Ok". So if either "cow" or "cat" is there, it's good. If both is, it's also good. Also, is there an opposite version of this toCheck-statement ? Because when running this, I need to know which lists do not have the items. So instead of look through +1000 printouts to see which one wasn't there, it would be easier to just look at printouts stating the ones that didn't work.</span>
<span class="comment-copy">In that case you need to use an <code>or</code> in your check condition right? Anyway..updated snippet to do an <code>or</code> check using <code>any</code></span>
<span class="comment-copy">That is exactly what I'm doing now, except for using <code>and</code> instead or <code>or</code>. But as I said, if I suddenly have to check for more than two strings, that if-statement will be rather long, and not very pretty to look at. That was actually what I was trying to improve upon in the case that I got, let's say, 10 strings I needed to check for.</span>
<span class="comment-copy">@DenverDang, ok I will try to fix it</span>
<span class="comment-copy">@DenverDang, is it ok now?</span>
