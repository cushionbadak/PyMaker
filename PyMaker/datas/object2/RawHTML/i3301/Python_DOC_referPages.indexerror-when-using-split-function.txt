<div class="post-text" itemprop="text">
<p>Please help with my code </p>
<p>i am getting </p>
<pre><code>IndexError: list index out of range 
</code></pre>
<p>when i am using </p>
<pre><code>split(",")[1] and split(",")[2]
</code></pre>
<p>This works fine instead</p>
<pre><code>split(",")[0] and split(",")[-1] 
</code></pre>
<p>appreciate your help </p>
<pre><code> my data like this:

  INPUT.csv
 col0  col1    col2    col3     col4
 blue,  eight,  line,  aaa     abc@123.com,xyz@123.com,ghi@123.com
 green, nine,   square, bbb    sdf@123.com,wef@123.com,hft@123.com


 expected output

 OUTPUT.csv
  col0  col1    col2    col3    col4          col5           col6
 blue    eight    line   aaa    abc@123.com   xyz@123.com    ghi@123.com
 green,  nine,   square, bbb     sdf@123.com   wef@123.com    hft@123.com
</code></pre>
<p>My code so far:</p>
<pre><code>import csv

with open('INPUT.csv', 'r') as csv_file:
csv_reader = csv.DictReader(csv_file)

with open('OUTPUT.csv', 'w',encoding='utf-8') as new_file:
fieldnames = ['col0','col1','col2','col3','col4','col5','col6']
csv_writer = csv.DictWriter(new_file,lineterminator='\n' , 
fieldnames=fieldnames)
)

 for row in csv_reader:                    
 csv_writer.writerow({
    "col0": row["col0"],
    "col1": row["col1"],
    "col4": row["col4"].split(",")[0].strip(),
    "col5": row["col4"].split(",")[1].strip(),
    "col6": row["col4"].split(",")[2].strip(),  
   })
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're reading the file as comma-separated values. So, look at this line:</p>
<pre><code>green, nine,   square, bbb    sdf@123.com,wef@123.com,hft@123.com
</code></pre>
<p>The values, separated by commas, are:</p>
<pre><code>green
 nine
   square
 bbb    sdf@123.com
wef@123.com
hft@123.com
</code></pre>
<p>So, your column 4 is <code>wef@123.com</code>. When you try to split that on commas, of course it doesn't have any, so you get back only one result, and then you ask for the second and third values that don't exist.</p>
<hr/>
<p>You need to fix your CSV file to actually be a CSV file.</p>
<p>That includes putting a comma after the <code>bbb</code> column, and after each column in the header.</p>
<p>And, more importantly, it means not using commas inside columns when you're using the same commas to separate the columns. The result is at best ambiguous, and therefore it can't be parsed.</p>
<p>Ways around this include:</p>
<ul>
<li>Quote the strings with commas in them.</li>
<li>Escape the commas.</li>
<li>Use a different separator within the column.</li>
<li>Use a different separator between the columns.</li>
</ul>
<p>(You could <em>almost</em> use <code>", "</code> as a column delimiter here, but that's really hacky, and any human editing your file is going to break it.)</p>
<hr/>
<p>Here's an example that could work:</p>
<pre><code> col0,  col1,   col2,  col3,     col4
 blue,  eight,  line,  aaa,     abc@123.com,xyz@123.com,ghi@123.com
 green, nine,   square, bbb,    sdf@123.com,wef@123.com,hft@123.com
</code></pre>
<p>Even with all that messy spacing (that you always get from human-edited files), this can be parsed cleanly and unambiguously with the right <a href="https://docs.python.org/3/library/csv.html#csv-fmt-params" rel="nofollow noreferrer">dialect parameters</a>:</p>
<pre><code>csv_reader = csv.DictReader(csv_file, skipinitialspace=True)
</code></pre>
<p>Now, each row looks like this:</p>
<pre><code>{'col0': 'blue',
 'col1': 'eight',
 'col2': 'line',
 'col3': 'aaa',
 'col4': 'abc@123.com,xyz@123.com,ghi@123.com'}
</code></pre>
<p>… so now, you can <code>row["col4"].split(",")</code> and get back:</p>
<pre><code>['abc@123.com', 'xyz@123.com', 'ghi@123.com']
</code></pre>
<p>And then, <code>[1]</code> and <code>[2]</code> will work.</p>
<hr/>
<p>However, you still have at least one more problem in your code. Your desired output includes columns 2 and 3, but you're explicitly leaving them out of the <code>writerow</code>.</p>
<p>While we're at it, there's no reason to try to cram 7 lines of code into one expression. So, why not just <code>split</code> the row once?</p>
<pre><code>col456 = row["col4"].split(",")
</code></pre>
<p>And then, we can just modify <code>row</code> in-place:</p>
<pre><code>row["col4"], row["col5"], row["col6"] = col456
</code></pre>
<p>… and now:</p>
<pre><code>csv_writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If <code>string</code> does not contain any <code>','</code> then <code>string.split(',')</code> will return a list with a single element, the entire string. In this case, <code>string.split(',')[1]</code> will obviously raise<code>IndexError</code>. </p>
<p><code>li[0] == li[-1]</code> in case <code>li</code> is a list with a single element.</p>
</div>
<span class="comment-copy">I will personally thank you for including testing data.</span>
<span class="comment-copy">appreciate your time and inputs on this, i am able to partially fix the issue, i am able to  write [1] and [2] in col4, for some reason if the email id is blank in col4 it is not writing remaining columns col0,  col1,   col2,  col3</span>
<span class="comment-copy">@Satya Well, if <code>col4</code> is blank, then what do you think <code>row["col4"].split(",")</code> is going to return? You need to write some code to handle that case. (Since I don't know exactly what you want to <i>do</i> in that case, I don't know what to write.)</span>
<span class="comment-copy">agreed :( , let me figure out  if i can do that</span>
