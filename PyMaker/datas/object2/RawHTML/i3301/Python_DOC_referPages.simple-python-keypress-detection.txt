<div class="post-text" itemprop="text">
<p>I'm looking for a simple way to detect a keypress inside a loop without importing something like pygame, something along the lines of</p>
<pre><code>pressed('a') #returns True if key 'a' pressed, False otherwise
</code></pre>
<p>I'm aware of this <a href="https://stackoverflow.com/questions/36554353/keypress-detection">Keypress detection</a> thread, but unfortunately when I run the recommended code or try anything using keyboard.is_pressed(), I get</p>
<pre><code>Exception in thread Thread-1:
Traceback (most recent call last):
  File "C:\Users\myname\AppData\Local\Programs\Python\Python37\lib\threading.py", line 917, in _bootstrap_inner
self.run()
  File "C:\Users\myname\AppData\Local\Programs\Python\Python37\lib\threading.py", line 865, in run
self._target(*self._args, **self._kwargs)
  File "C:\Users\myname\AppData\Roaming\Python\Python37\site-packages\keyboard\__init__.py", line 292, in listen
_os_keyboard.listen(self.direct_callback)
  File "C:\Users\myname\AppData\Roaming\Python\Python37\site-packages\keyboard\_winkeyboard.py", line 560, in listen
prepare_intercept(callback)
  File "C:\Users\myname\AppData\Roaming\Python\Python37\site-packages\keyboard\_winkeyboard.py", line 553, in prepare_intercept
keyboard_hook = SetWindowsHookEx(WH_KEYBOARD_LL, keyboard_callback, GetModuleHandleW(NULL), NULL)
ctypes.ArgumentError: argument 3: &lt;class 'OverflowError'&gt;: int too long to convert
</code></pre>
<p>(Pretty new to Python, so not sure what any of the above means)</p>
<p>keyboard.is_pressed() is my ideal solution, but I'm completely open to other equally simple ones too.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an open issue with python 3.7 on the <a href="https://github.com/boppreh/keyboard/issues/186" rel="nofollow noreferrer">github</a>. I just tested the code given in your link with Python 3.6.4 (anaconda 64 bit) and keyboard-0.13.2, and it worked as expected. Python 3.7 literally just came out, so there are bound to be a few bugs.</p>
</div>
<span class="comment-copy">Python uses a low level keyboard hook? This makes me sad :(</span>
<span class="comment-copy">What do you mean by "without importing something like pygame"? In what way is that different from importing something like <code>keyboard</code>?</span>
<span class="comment-copy">@AnilRedshift No, a third-party library uses a low-level keyboard hook.</span>
<span class="comment-copy">Anyway, how did you install keyboard, and which version do you have? (If you don't know how to answer that, <code>pip list</code> should show everything you have installed.) And, while we're at it: what Windows version, what Python version, how did you install Python (e.g., python.org installer vs. Anaconda vs. build and install from source vs. â€¦)?</span>
<span class="comment-copy">Also, please give us a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> that demonstrates the problem. From the traceback, it looks like you may be trying to use this from a background thread, but for all I know maybe the library just spawns a thread for itself on Windows and you're not doing anything like that. If we could see your example, it would be easier to know what to chase down.</span>
<span class="comment-copy">oh thanks, didn't even realize that python 3.7 was that new.</span>
<span class="comment-copy">@EvanC development versions have been available for a while (<a href="https://docs.python.org/3/whatsnew/changelog.html#python-3-7-0-alpha-1" rel="nofollow noreferrer">3.7.0 alpha 1 released 2017-09-19</a>) but the official release of 3.7 happened June 27th 2018. Just two weeks ago.</span>
