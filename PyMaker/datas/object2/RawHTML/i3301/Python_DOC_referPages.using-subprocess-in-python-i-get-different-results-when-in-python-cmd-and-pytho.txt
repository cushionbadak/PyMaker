<div class="post-text" itemprop="text">
<p>I hope the title makes sense. To give specifics:</p>
<p>I am using csvtotable (<a href="https://github.com/vividvilla/csvtotable" rel="nofollow noreferrer">https://github.com/vividvilla/csvtotable</a>) to generate HTML tables from CSVs. I have installed via pip and am able to run a command line command:</p>
<pre><code>csvtotable test1743.csv test1743.html
</code></pre>
<p>to generate a HTML page. All good so far.</p>
<p>I wanted to do this from within a Python script I had already written so I heard that subprocess was the way to do this. I looked up how to do it and understood that it can be done using the following:</p>
<pre><code>subprocess.run('csvtotable test1743.csv test1743.html',shell=True)
</code></pre>
<p>So I tested this via the command line first by doing</p>
<pre><code>python
</code></pre>
<p>from the command line and then running</p>
<pre><code>import subprocess
subprocess.run('csvtotable test1743.csv test1743.html',shell=True)
</code></pre>
<p>Success! It worked. Fantastic.</p>
<p>However, when I try to do this from IDLE, it just returns a 1.  I have checked the directory thinking that maybe the csv was missing from there, but it still doesn't work.</p>
<p>Am I misunderstanding how subprocess works?</p>
</div>
<div class="post-text" itemprop="text">
<p>Solved by finding a way to call the function without subprocess. I think the issue may have related to default arguments not being set when it is executed through python and hence why below I have had to specify so many arguments.</p>
<p>Code:</p>
<pre><code>from csvtotable import convert

content = convert.convert("C:\\Users\\admin\\Google Drive\\test1743.csv",delimiter=",",quotechar='"',display_length=-1,overwrite=False,serve=False,pagination=True,virtual_scroll=1000, no_header=False, export=True, export_options=["copy","csv","json","print"])
convert.save("C:\\Users\\admin\\Google Drive\\test1743.html",content)
</code></pre>
<p>Note that the argument names had to be changed where they had a <code>-</code> in the name. I just changed any instance e.g. <code>display-length</code> to <code>display_length</code> in convert.py</p>
</div>
<span class="comment-copy">have you tried <code>subprocess.run(["csvtotable", "test1743.csv", "test1743.html"], shell=True)</code>?</span>
<span class="comment-copy">@GuiGWR I just tried it and unfortunately it returns <code>CompletedProcess(args=['csvtotable', 'test1743.csv', 'test1743.html'], returncode=1)</code>. I will play around with input and output arguments in subprocess and report back.</span>
<span class="comment-copy">Maybe you should use <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess#subprocess.Popen.communicate" rel="nofollow noreferrer">communicate</a> to look what`s the output of the subprocess</span>
<span class="comment-copy">Here's a link to an explanation : &lt;<a href="https://stackoverflow.com/a/16770371/9802108">stackoverflow.com/a/16770371/9802108</a>&gt; and a way to manipulate stdout</span>
<span class="comment-copy">Thanks I will have a look.</span>
