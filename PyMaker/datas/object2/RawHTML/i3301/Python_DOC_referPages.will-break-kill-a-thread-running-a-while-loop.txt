<div class="post-text" itemprop="text">
<p>I am asking this because I have seen multiple answers that <em>may</em> be the answer, but I can't be sure. So I'm asking it here in case someone else searches for it later.</p>
<p>My code is a tkinter program. The gui runs in one class, whilst other clases can be run as threads. This is the code I use to set up a thread to prevent blocking the gui.</p>
<pre><code>class RefreshVoyageClass(threading.Thread):

    def __init__(self, *args, **kwargs):

        threading.Thread.__init__(self, *args, **kwargs)
        self.daemon = True
        self.start()

    def run(self):
        while True:
            #some code here
            if check a certain condition:
                break
</code></pre>
<p>So here is my question. If that break is encountered inside the class. Will it just stop the function, but leave the thread intact, 
or will using break end the thread as it's completed it's task?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your code, if break is encountered, then run function will return, so the thread will complete it's task.</p>
</div>
<span class="comment-copy">Use <code>thread.isAlive()</code> to check if a thread is still running or not by yourself. <a href="https://docs.python.org/3/library/threading.html#threading.Thread.is_alive" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">When a thread returns from its function, it will terminate. In your case the <code>break</code> will make that happen.</span>
<span class="comment-copy">nilashan, I am not interested in checking if the thread is up or not. I needed to know if calling a break/returning something from a thread will end the thread. Which, according to Henry Pond, it will.</span>
<span class="comment-copy">Thank you. Having a definitive answer will definitely help me forward.</span>
