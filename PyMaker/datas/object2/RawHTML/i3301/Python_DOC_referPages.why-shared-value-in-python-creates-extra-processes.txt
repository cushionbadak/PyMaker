<div class="post-text" itemprop="text">
<p>Normally when I spawn new process, I will have just 1 in-process python code.
But when I use shared memory (shared value), Python will create another new process beside of my own process.</p>
<p>Sample (shows 1 process):</p>
<pre><code>p = multiprocessing.Process(target=mytarget)
p.daemon = True
p.start()
</code></pre>
<p>Sample (shows 2 processes while I spawned just 1 process):</p>
<pre><code>shared = Manager().Value(int, 0)
p = multiprocessing.Process(target=mytarget, args=(shared))
p.daemon = True
p.start()
</code></pre>
<p>Is there any way to avoid creating new extra processes in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/multiprocessing.html#managers" rel="nofollow noreferrer"><code>multiprocessing.Manager</code></a> documentation calling <code>Manager()</code> creates separate server process that is responsible for managing objects shared in that manager. So this is that extra process you can see. </p>
<p>I did not go through documentation very carefully, but you could try alternative way to use shared memory  i.e. <a href="https://docs.python.org/3/library/multiprocessing.html#shared-ctypes-objects" rel="nofollow noreferrer">shared ctypes objects</a> like <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Value" rel="nofollow noreferrer"><code>multiprocessing.Value</code></a> or <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Array" rel="nofollow noreferrer"><code>multiprocessing.Array</code></a></p>
</div>
<span class="comment-copy">Thank you so much!</span>
