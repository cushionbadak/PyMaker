<div class="post-text" itemprop="text">
<p>Just starting to learn python, and I am starting to learn the web-based side of it.</p>
<p>Following the instructions I have, i keep getting a KeyError: 'title' on line 18. Now I see it as the request not returning a title so it gives an error, how would I write it up to give a generic description if there is no 'title'???</p>
<pre><code>import requests

from operator import itemgetter as ig

url = 'https://hacker-news.firebaseio.com/v0/topstories.json'
r = requests.get(url)
print("Status Code:", r.status_code)

submission_ids= r.json()
submission_dicts = []
for submission_id in submission_ids[:30]:
    url= ("https://hacker-news.firebaseio.com/v0/item" + str(submission_id) + '.json')
    submission_r = requests.get(url)
    print(submission_r.status_code)
    response_dict = submission_r.json()

    submission_dict = {
    'title': response_dict['title'],
    'link': "https://news.ycombinator.com/item?id=" +str(submission_id),
    'comments': response_dict.get('descendants', 0)
}

submission_dicts = sorted(submission_dicts, key= ig('comments'), reverse= True)

for submission_dict in submission_dicts:
    print("\nTitle:", submission_dict['title'])
    print("Discussion link:", submission_dict['link'])
    print("Comments:", submission_dict['comments'])
</code></pre>
<blockquote>
<p>Status Code: 200
     401
     Traceback (most recent call last):
        File "C:\Users\Shit Head\Documents\Programming\Tutorial Files\hn_submissions.py", line 18, in &lt;module&gt;
          'title': response_dict['title'], 
      KeyError: 'title'
      [Finished in 1.2s]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Following the instructions I have, i keep getting a KeyError: 'title' on line 18. Now I see it as the request not returning a title so it gives an error, how would I write it up to give a generic description if there is no 'title'???</p>
</blockquote>
<p>It sounds like you're just looking for the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>get</code></a> method:</p>
<blockquote>
<p><code>get(key[, default])</code></p>
<blockquote>
<p>Return the value for <em>key</em> if <em>key</em> is in the dictionary, else <em>default</em>. If <em>default</em> is not given, it defaults to <code>None</code>, so that this method never raises a <code>KeyError</code>.</p>
</blockquote>
</blockquote>
<p>So, instead of this:</p>
<pre><code>'title': response_dict['title'],
</code></pre>
<p>… you do this:</p>
<pre><code>'title': response_dict.get('title', 'Generic Hacker News Submission'),
</code></pre>
<hr/>
<p>Under the covers, this is just a more convenient way to write something you could have done anyway. The following are all pretty much equivalent:</p>
<pre><code>title = response_dict.get('title', 'Generic')

title = response_dict['title'] if title in response_dict else 'Generic'

if title in response_dict:
    title = response_dict['title']
else:
    title = 'Generic'

try:
    title = response_dict['title']
except KeyError:
    title = 'Generic'
</code></pre>
<p>This is worth knowing because Python only usually provides shortcuts like <code>get</code> for really common cases like looking things up in a dictionary. If you wanted to do the same thing with, say, a list that may be empty or have one item, or a file that might or might not exist, or a regular expression that might return a match with a group string or might return None, you'd need to do things the long way.</p>
</div>
<span class="comment-copy">May we see the line 18 and all other relevant lines, as well as the full error message?</span>
<span class="comment-copy">Yeah sorry, first post, was trying to figure out how to get the code in there.</span>
<span class="comment-copy">So, your <code>response_dict</code> does not have a "title" key. You should check <code>if "title" in response_dict</code> before using the item.</span>
<span class="comment-copy">+1 thats exactly what I was trying to figure out, I was unaware of being able to do the <code>get</code> call and then add a default setting if it returned nothing.</span>
