<div class="post-text" itemprop="text">
<p>I have a document that I opened using python:</p>
<pre><code>with open('my_file.txt', 'r') as fin:
    myfile = fin.readlines()
</code></pre>
<p>Inside myfile I have lines like this:</p>
<pre>

     1HEE     JJ    1   3.904   5.512   1.259\n
     2HEE    CJJ    2   4.199   5.292   1.353\n
     2LLO    SJJ    3   4.367   5.234   1.445\n
     3LLO     JJ    4   4.041   4.969   1.220\n
   6.50000   6.50000  6.50000\n
 This is some other title.\n
 3\n
     1GOO    HSC    1   4.088   4.816   1.041\n
     1DDD      H    2   9.018   0.828   7.094\n
     2DDD      H    3  19.018   0.828   7.094\n

</pre>
<p>The ONLY lines that I need to keep are these ones:</p>
<pre>

     1HEE     JJ    1   3.904   5.512   1.259\n
     2HEE    CJJ    2   4.199   5.292   1.353\n
     2LLO    SJJ    3   4.367   5.234   1.445\n
     3LLO     JJ    4   4.041   4.969   1.220\n
     1GOO    HSC    1   4.088   4.816   1.041\n
     1DDD      H    2   9.018   0.828   7.094\n
     2DDD      H    3  19.018   0.828   7.094\n

</pre>
<p>In other words, the lines that have information from information in: </p>
<p><code>myfile[line][:44]</code> I MUST keep. </p>
<p>The other lines (the shorter lines) I must DELETE.</p>
<p>Any ideas on how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>If the lines that have to be dropped always have less than 44 characters, and the valid ones always have at least 44 (like you say), you can just do:</p>
<pre><code>with open('input.txt', 'r') as infile:
    with open('output.txt', 'w') as outfile:
        for line in infile:
            if len(line) &gt;= 44:
                outfile.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps I use regex as a go-to too much, but the <code>re</code> module seems perfect here given you want to identify a line string pattern: lines identified by the data within. If you don't know it already the <code>re</code> module uses 'perl' syntax string-matching patterns, see the docs <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">here</a></p>
<p>You can test a regex you build online using a tool such as <a href="https://regex101.com/" rel="nofollow noreferrer">regex 101</a></p>
<p>If you are trying to identify a line such as <code>|     1HEE     JJ    1   3.904   5.512   1.259 |</code> I would write a regex as something like: <code>^\| +\w{4} +\w+ +\d +\d.\d{3} +\d.\d{3} +\d.\d{3} +\|</code> (try it in Regex 101.
<strong>Please note that this pattern makes some assumptions about the actual string pattern</strong> based upon what is given in the example.</p>
<p>Using a method from the <code>re</code> module such as .findall and this pattern you should be able to gather all lines which follow your desired format. <strong>To clarify</strong> when pattern matching using the .findall method you would end up with all lines matching the desired format as a <strong>list</strong> of <strong>strings</strong> in your program that you could manipulate as you please (including making a new text file with that only has harvested data).</p>
</div>
<span class="comment-copy">Are the pipe characters ( | ) part of the file? Every line starts and ends with one?</span>
<span class="comment-copy">"I cannot guide myself by line index, title, words or numbers to delete this part because they are not the same all the time." -- we also do not know what IS the same all the time, so it is hard to help. Where did the input come from? What IS the same in the data that can be discarded? (maybe the indentation?, maybe the number of columns?)</span>
<span class="comment-copy">How often does the pattern repeat? ... Are there many groups of <code>|   6.50000   6.50000  6.50000                 | | This is some other title.                    | | 3                                            |</code> lines that need to be skipped/deleted?</span>
<span class="comment-copy">nope. It is just how I set it. All lines end with \n immediately after the last word or number</span>
<span class="comment-copy">I fixed it to try to give you a better "real" look of the document. I was thinking something like this:  I know that all the lines have data up until line[:44] (combining whitespace, numbers and letter) and the once that I need to delete never reach that</span>
<span class="comment-copy">is there a way to say: if line[:44] has info then keep else delete?</span>
<span class="comment-copy">I am not sure what you mean: 1st of all do you mean line number 44 (and not the 44th match of the regex pattern)?</span>
<span class="comment-copy">when you read a file you do while open("my.txt", "r") as fin: myfile = fin.readlines().  Then you reference myfile[line number][position in line]. The lines I need to keep are myfile[line][:44].</span>
<span class="comment-copy">That is a slightly different topic, but you should be able to do it just by looping through range(44) for each iteration using &lt;file_object&gt;.readline() and appending it to a string variable which accumulates all lines, e.g: <code>txt_file = open("Joke1.txt", "r"); line_list = []; for i in range(2);      line_list.append(txt_file.readline())</code>. This works because of file pointers, which is a longer discussion</span>
