<div class="post-text" itemprop="text">
<p>Let's suppose I have the following list:</p>
<p><code>list1 = [{'a': 1}, {'b': 2}, {'c': 3}]</code></p>
<p>Which I want to convert it to a panda dataframe that have two columns: one for the keys, and one for the values.</p>
<pre><code>    keys    values
0    'a'      1
1    'b'      2
2    'c'      3
</code></pre>
<p>To do so, I have tried to use <code>pd.DataFrame(list1)</code> and also <code>pd.DataFrame.from_records(list1)</code>, but, in both cases, I get a dataframe like:</p>
<pre><code>     a    b    c
0  1.0  NaN  NaN
1  NaN  2.0  NaN
2  NaN  NaN  3.0
</code></pre>
<p>Is there any way to specify what I want? By doing research I could only find the way I am describing above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>list comprehension</code> with flattening for list of tuples:</p>
<pre><code>df = pd.DataFrame([(i, j) for a in list1 for i, j in a.items()], 
                   columns=['keys','values'])
print (df)
  keys  values
0    a       1
1    b       2
2    c       3
</code></pre>
<p><strong>Detail</strong>:</p>
<pre><code>print ([(i, j) for a in list1 for i, j in a.items()])

[('a', 1), ('b', 2), ('c', 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your keys across dictionaries are unique, you can create a single dictionary and feed to <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.from_dict.html" rel="nofollow noreferrer"><code>pd.DataFrame.from_dict</code></a>. This can be facilitated by <a href="https://docs.python.org/3/library/collections.html#collections.ChainMap" rel="nofollow noreferrer"><code>collections.ChainMap</code></a>:</p>
<pre><code>from collections import ChainMap

list1 = [{'a': 1}, {'b': 2}, {'c': 3}]

df = pd.DataFrame.from_dict(ChainMap(*list1), orient='index').reset_index()

df.columns = ['key', 'value']

print(df)

  key  value
0   a      1
1   b      2
2   c      3
</code></pre>
<p>Alternatively, you can feed directly to <code>pd.DataFrame</code> constructor via a list:</p>
<pre><code>df = pd.DataFrame(list(ChainMap(*list1).items()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While @jezrael answered perfectly to my question, I would like to point out that if you convert each dictionary (<code>{'a':1}</code>) to a list (<code>['a',1]</code>) you will simply need to use <code>pd.DataFrame(list1)</code>, getting the desired result.</p>
</div>
