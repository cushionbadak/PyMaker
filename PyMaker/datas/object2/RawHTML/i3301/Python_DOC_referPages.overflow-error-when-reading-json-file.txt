<div class="post-text" itemprop="text">
<p>I am trying to read a json which includes a number of tweets, but I get the following error.</p>
<p>OverflowError: int too large to convert </p>
<p>The script filters multiple json files to get specific tweets, and it crashes when reaching to a specific json. </p>
<p>The line that creates the error is this one : </p>
<pre><code>df_temp = pd.read_json(path_or_buf=json_path, lines=True)
</code></pre>
<p><a href="https://i.stack.imgur.com/Reen7.png" rel="nofollow noreferrer">Here is the error in the cmd</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just store the user id as a String, and treat it like it is one (this is actually what you should do when dealing with this kind of ids). If you can't change the json input format, you can always parse it like a string before parsing it like a json object, and add the quotes to the id code, using for instance regexes: <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">Regex in python</a>.</p>
<p>I don't know with which library you are parsing the json, but maybe also implicit casting will work: either try the "getString" method on the number instead of the "getInt" method, or force python to treat the object like a string, with something like <code>x = "" + json.getId()</code></p>
<p>Python is pretty loose on typing and may let you do it.</p>
</div>
<span class="comment-copy"><code>json.loads('{"id":73115419563449548887439843987598743985743234857632498756324987563248756238987432659874365987324655}')</code> works fine for me. Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Can you give us a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>? Because, to the best of my knowledge, with the default settings, recentish Python (as in from at least 2.7 and 3.3, maybe earlier) will load <code>731154195634495488</code> as an <code>int</code>, not a <code>float</code>.</span>
<span class="comment-copy">That's true. Most probably the id has nothing to do with the error. Essentially, my script filters multiple json files to get specific tweets, and it crashes when reaching to a specific json. The line that creates the error is this one :   <code>df_temp = pd.read_json(path_or_buf=json_path, lines=True, dtype={"id_str": np.float64}</code></span>
<span class="comment-copy">Can you give us sample JSON which causes the error?</span>
<span class="comment-copy">Sure. You can download it <a href="https://drive.google.com/open?id=1FefPOdCir5fFpdTU8H78SFkSrNiZCTMw" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">After further testing, it seems that the id has nothing to do with the error. I still do not know what may cause it though.</span>
