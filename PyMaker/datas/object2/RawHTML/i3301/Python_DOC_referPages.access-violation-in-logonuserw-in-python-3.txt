<div class="post-text" itemprop="text">
<p>I am writing a Python3 script for someone, that utilizes the advapi dll and its LogonUserW function via ctypes.</p>
<p>When running the code</p>
<p>in the <strong>__init__</strong> function</p>
<pre><code>dll_location = find_library("advapi32");

if (dll_location == None):
    raise FileNotFoundError

adv_dll = WinDLL(dll_location);

#gets the pointer to the function
logonUser = adv_dll.LogonUserW;
self.logonUser = logonUser
</code></pre>
<p>In login(username, domain, password) function</p>
<pre><code>#Sets the parameters to call the DLL
loginType = DWORD(2)
loginProvider = DWORD(0)
handle = PHANDLE()
user = LPCSTR(username.encode());
pw = LPCSTR(password.encode());
dom = LPCSTR(domain.encode());

rescode = self.logonUser(user, dom, pw, loginType, loginProvider, handle);
</code></pre>
<p>It raises <code>OSError: exception: access violation writing 0x0000000000000000</code></p>
<p>Any idea what could be causing the error and how to fix?</p>
<p>PS: Yes I know I am not following PEP 8 for variable names, I am normally a java programmer. </p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" rel="nofollow noreferrer">[Python]: types - A foreign function library for Python</a>, you should set <code>argtypes</code> and <code>restype</code> (this is one way) for the function you're calling (<a href="https://docs.microsoft.com/en-gb/windows/desktop/api/winbase/nf-winbase-logonuserw" rel="nofollow noreferrer">[MS.Docs]: LogonUserW function</a>).</p>
<p>Below is a minimal example for calling it. If however, you need to call multiple such functions, you could also consider <a href="https://github.com/mhammond/pywin32" rel="nofollow noreferrer">[GitHub]: Python for Windows (pywin32) Extensions</a>, which is a <em>Python</em> wrapper over <em>WINAPI</em>s.</p>
<p><em>code.py</em>:</p>
<pre><code>import sys
import ctypes
from ctypes import wintypes


def main():
    advapi32_dll = ctypes.WinDLL("advapi32.dll")
    logon_user_func = advapi32_dll.LogonUserW
    logon_user_func.argtypes = [wintypes.LPCWSTR, wintypes.LPCWSTR, wintypes.LPCWSTR, wintypes.DWORD, wintypes.DWORD, wintypes.PHANDLE]
    logon_user_func.restype = wintypes.BOOL

    user = "dummy_user"
    domain = "dummy_domain"
    pwd = "dummy_pwd"
    logon_type = 2
    provider = 0
    handle = wintypes.HANDLE()
    ret = logon_user_func(user, domain, pwd, logon_type, provider, ctypes.byref(handle))
    print("{:s} returned {:}".format(logon_user_func.__name__, "TRUE" if ret else "FALSE"))


if __name__ == "__main__":
    print("Python {:s} on {:s}\n".format(sys.version, sys.platform))
    main()
</code></pre>
<p><strong>Notes</strong>:</p>
<ul>
<li>Besides <code>argtypes</code> / <code>restypes</code>:

<ul>
<li>In <em>Python3</em> strings are <em>wide</em> by default, so no need for <code>encode()</code></li>
<li>The <code>HANDLE</code> is passed via <code>byref</code></li>
</ul></li>
</ul>
<p><strong>Output</strong>:</p>
<blockquote>
<pre><code>(py35x64_test) e:\Work\Dev\StackOverflow\q051251086&gt;"e:\Work\Dev\VEnvs\py35x64_test\Scripts\python.exe" code.py
Python 3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:17:05) [MSC v.1900 64 bit (AMD64)] on win32

LogonUserW returned FALSE
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Please also post how you get <code>self.logonUser</code>, and any related code.</span>
<span class="comment-copy">Ok, I edited the question.</span>
