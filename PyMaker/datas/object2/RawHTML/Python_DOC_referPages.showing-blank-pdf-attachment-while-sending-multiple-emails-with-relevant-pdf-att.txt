<div class="post-text" itemprop="text">
<p>I am newbie for python and had a task to send multiple email with relevant attachments.  I will eloborate it , A folder contains multiple pdf files each file contains some text including email id.I need to read the email id from the each pdf file and send the same file as the attachment to the mailid in the pdf file. below is the code for reference</p>
<pre><code># Get the count of files in the folder
import os
import re
global str
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase

cpt = sum([len(files) for r, d, files in 
os.walk("D:\MyOfficeDocuments\ADCB\PythonScripts\PdfFiles")])

#Reading Mail from each pdf file and send the same file as attachment to 
these mails
import PyPDF2
from os import listdir
from os.path import isfile, join
from PyPDF2 import PdfFileWriter, PdfFileReader
mypath='D:\MyOfficeDocuments\ADCB\PythonScripts\PdfFiles'
onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
for file in onlyfiles:

count = 1
while count &lt;cpt:
    os.chdir(r'D:\MyOfficeDocuments\ADCB\PythonScripts\PdfFiles')
    pdfFileObj = open(file,'rb')
    pdfReader = PyPDF2.PdfFileReader(pdfFileObj)
    pageObj = pdfReader.getPage(0)
    count +=1
    text = pageObj.extractText()
    email_user='madhugut82@gmail.com'
    eline = re.findall('\S+@\S+.com', text)
    email_send=eline
    print(file)
    password='harshi54537'
    subject='Python !'
    msg=MIMEMultipart()
    msg['From']=email_user
    msg['To']=', '.join(email_send)
    #listalink = " ".join(listalink)
    msg['Subject']=subject
    #print (email_send)
    body='Hi there, sending this email from python using python scripting'
    msg.attach(MIMEText(body,'plain'))
    filename 
    ='D:\MyOfficeDocuments\ADCB\PythonScripts\Destination\Document.txt'
    attachment=open(file,'rb')
    #print(attachment)
    part=MIMEBase('application','pdf')
    part.set_payload(attachment.read())
    part.add_header('Content-Disposition',"attachement; filename="+file)
    msg.attach(part)
    #email.encoders.encode_base64(part)
    print('x')

    text=msg.as_string()

    #text=msg.encode("utf8")
    #text=msg.as_string().encode('utf-8','ignore')
    #text=msg.as_string().encode('ascii','ignore')
    server=smtplib.SMTP('smtp.gmail.com',587)
    server.starttls()
    server.login(email_user,password)
    server.sendmail(email_user,email_send,text)
    #server.sendmail(email_user,email_send,msg.encode("utf8"))
    server.quit()
</code></pre>
<p>As per the above code I am getting an error message shown in below</p>
<p>msg = _fix_eols(msg).encode('ascii')</p>
<p>UnicodeEncodeError: 'ascii' codec can't encode characters in position 559-562: ordinal not in range(128)</p>
<p>But if I change the code as below for </p>
<pre><code>text=ms.as_string().encode("UTF")
</code></pre>
<p>I am not getting any error but attachement is showing blank</p>
<p>Please suggest me where the exact issue is and what is the issue to getting blank pdf attachment.</p>
<p>I requesting you if there is any code suggestion then please suggest for pdf file only</p>
<p>Thanks in Advance
Madhu</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you are using a simple <code>MIMEBase</code> for the (binary) pdf file. As <code>MIMEBase</code> is a parent class for various possible message type, it does not encode its payload, and your message contains raw 8 bits bytes.</p>
<p>Two possible fixes here:</p>
<ol>
<li><p>just base64 encode the pdf file content:</p>
<pre><code>...
from email.encoders import encode_base64
...
    part=MIMEBase('application','pdf')
    part.set_payload(attachment.read())
    part.add_header('Content-Disposition',"attachement; filename="+file)
    encode_base64(part)
    msg.attach(part)
...
</code></pre></li>
<li><p>use the more specialized <code>MIMEApplication</code> which encodes everything by default:</p>
<pre><code>...
from email.mime.application import MIMEApplication
...
    part=MIMEApplication(attachment.read(),'pdf')
    part.add_header('Content-Disposition',"attachement; filename="+file)
    msg.attach(part)
...
</code></pre></li>
</ol>
<p>I advise you to use that second way, because the documentation for <code>MIMEBase</code> says:</p>
<blockquote>
<p>Ordinarily you wonâ€™t create instances specifically of MIMEBase, although you could. MIMEBase is provided primarily as a convenient base class for more specific MIME-aware subclasses.</p>
</blockquote>
</div>
<span class="comment-copy">Please fix your code formatting (it's especially important in python) and format yor error message.</span>
<span class="comment-copy">Thanks for your suggestion  I updated the message. please suggest correct code to fix the issue.</span>
<span class="comment-copy">Can you verify that the PDF is correct before sending?  Then the problem is isolated to either PDF generation of email construction.  That should be part of creating an <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Hmm..., I assume that the provided username, password pair is not the real one... If it was it would be time to change the password!</span>
<span class="comment-copy">Thanks for your reply Serge Ballesta. the first way is working for me. I tried the second way also mail is sending but it is not opening.                                      Showing Error as not supported type or the file has been damaged(for example,it was sent as an email attachment and wasn't correctly decoded)</span>
