<div class="post-text" itemprop="text">
<pre><code>def mhello():    
    import  string    
    var = (random.choice("hey", "hi" "hello")    
    Label2 = Label(text=var, fg='Red').place(x=130,y=200)
</code></pre>
<p>This isn't working, how would I make it so that the label's text randomly generates one of the options?</p>
</div>
<div class="post-text" itemprop="text">
<p>Two issues: wrong argument given to choice, and a misplaced opening parenthesis.</p>
<p>This should work:</p>
<pre><code>def mhello():    
    var = random.choice(["hey", "hi" "hello"])    
    Label2 = Label(text=var, fg='Red').place(x=130,y=200)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>random.choice(seq)</p>
<pre><code>Return a random element from the non-empty sequence seq. If seq is empty, raises IndexError.
</code></pre>
</blockquote>
<p>If simply a string is passed as <code>seq</code>, it will be treated as sequence of characters, and the function <code>random.choice()</code> will return any random character as output.</p>
<hr/>
<p>To get a complete word from a set of word, either make a list, tuple, etc. of them and then send it as <code>seq</code> to the <code>random.choice()</code> as parameter. It will return an element from a list, tuple (whatever data-type is passed).</p>
<pre><code>l = ["hey","hi","hello"]
var = (random.choice(l))
</code></pre>
<p>or</p>
<pre><code>var = random.choice(["hey","hi","hello"])
</code></pre>
<hr/>
<p>If you have all the words in form of a string, then you can directly use <code>split()</code> function to send them as a list, instead of converting them to another data-type.</p>
<pre><code>string = "hey hi hello"
var = (random.choice(string.split()))
</code></pre>
<hr/>
<p>Source:  Comment of @PadraicCunningham, and <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow">python documentation</a></p>
</div>
<span class="comment-copy">I think your problem is that you forgot a close-paren. Should be <code>var = (random.choice("hey", "hi" "hello"))</code></span>
<span class="comment-copy">how are you using it? You also need to pass a list, tuple etc.. to choice <code>["hey", "hi" "hello"]</code></span>
<span class="comment-copy">I'm using so that I can create a 'Generate' button that will then call on the 'mhello' command that randomly generates one of the variables form the 'var'. I closed the bracket and that was one issue sorted but now it randomly generates the options by the single letter. Here is what it looks like: def mhello():     import  string     var = (random.choice("init" or "kk"))     Label2 = Label(text=var, fg='Red').place(x=130,y=200)  buttongenerate = Button(text='Generate', fg='Black',command=mhello).place(x=165,y=250)   Sorry, i'm not sure how to format it correctly in the comments section.</span>
<span class="comment-copy">Thank you, that worked but once it has gone through all of the possible choices, it will start merging them together. For example, once it has chosen 'Hi' and 'Hello' individually, it will then output 'hi llo'</span>
<span class="comment-copy">Hi suspect var has the wrong type. Your framework might require a special type to be used as the text argument?</span>
