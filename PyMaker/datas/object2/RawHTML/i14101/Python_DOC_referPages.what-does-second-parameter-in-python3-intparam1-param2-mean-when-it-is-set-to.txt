<div class="post-text" itemprop="text">
<p>I'm reading documentation on the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow">Python 3 <code>int(...)</code> function</a> and can't understand the following statement:</p>
<blockquote>
<p>Base 0 means to interpret exactly as a code literal, so that the
  actual base is 2, 8, 10, or 16, and so that int('010', 0) is not
  legal, while int('010') is, as well as int('010', 8).</p>
</blockquote>
<p>Can someone explain what exactly it is saying? I can't figure it out.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python integers can be expressed in different bases, by giving it a specific prefix. If you write <code>0x16</code> then the number is interpreted as hexadecimal, with <code>0o16</code> you get an octal interpretation, etc. Writing integers in source code is known as <a href="https://docs.python.org/3/reference/lexical_analysis.html#integer-literals" rel="nofollow">literal syntax</a>.</p>
<p>You can pass such string value containing text using the same syntax to the <code>int()</code> function and have it figure out what base to use from such a prefix too, by setting the second argument to <code>0</code>:</p>
<pre><code>&gt;&gt;&gt; int('16')       # default base 10
16
&gt;&gt;&gt; int('16', 0)    # no prefix, still base 10
16
&gt;&gt;&gt; int('0x16', 0)  # 0x prefix makes it base 16, hexadecimal
22
&gt;&gt;&gt; int('0o16', 0)  # 0o prefix is interpreted as base 8, octal
14
&gt;&gt;&gt; int('0b101', 0) # 0b prefix means base 2, binary
5
</code></pre>
<p><code>int()</code> with any base other than <code>0</code> takes zero-padded strings:</p>
<pre><code>&gt;&gt;&gt; int('016')
16
</code></pre>
<p>but when you set the base to <code>0</code> such strings are no longer accepted, because the Python literal syntax for integers doesn't accept those either:</p>
<pre><code>&gt;&gt;&gt; int('016', 0)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 0: '016'
</code></pre>
<p>In Python 2, you <em>could</em> use a leading zero like that, and that would be interpreted as an octal number, so base 8. That lead to confusing bugs, and the syntax was removed from Python 3, where only the <code>0o</code> prefix is now supported.</p>
</div>
