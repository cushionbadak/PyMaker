<div class="post-text" itemprop="text">
<p>I was trying to generate all prime numbers in range x to y. I tried simple example first: <code>range(10,11)</code> which means to check if 10 is a prime number:<br/>
Here is my code:</p>
<pre><code>prime_list = [x for x in range(10, 11) for y in range(2,x) if x % x == 0 and x % 1 == 0 and x % y != 0]
</code></pre>
<p>I know that the thing is missing the option to tell the expression that <code>x%y != 0</code> should be checked for all y in <code>range (2,x)</code> and return true if and only if all have met this condition.</p>
<p>How do we do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#all"><code>all</code></a> to check all elements (from 2 upto x-1) met conditions:</p>
<pre><code>&gt;&gt;&gt; [x for x in range(2, 20)
     if all(x % y != 0 for y in range(2, x))]
[2, 3, 5, 7, 11, 13, 17, 19]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way using set comprehension can be</p>
<pre><code>list(set(range(2,11)) - {x for x in range(11) for y in range(2,x) if x%y == 0})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@falsetru's answer is correct. But also, attention should be paid to optimized code. As someone said in the the comments in Kasra's answer</p>
<pre><code>In [227]: %timeit [x for x in range(4, 1000) if all(x % y != 0 for y in range(2, int(m.sqrt(x)) + 1))]
100 loops, best of 3: 2.08 ms per loop

In [228]: %timeit [x for x in range(4, 1000) if all(x % y != 0 for y in range(2, int(m.sqrt(x)) + 1))]
100 loops, best of 3: 2.09 ms per loop

In [229]: %timeit [x for x in range(4, 1000) if all(x % y != 0 for y in range(2, x-1))]
100 loops, best of 3: 10.4 ms per loop

In [230]: %timeit [x for x in range(4, 1000) if all(x % y != 0 for y in range(2, x-1))]
100 loops, best of 3: 10.3 ms per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The version with filter:</p>
<pre><code>filter(lambda x:all(x % y != 0 for y in range(2, x)), range(2, 13))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Program to find prime numbers within a given range using list comprehensions:</p>
<pre><code>min = 10

max = 100

primes = [num for num in range(min,max) if 0 not in [num%i for i in range(2,int(num/2)+1)]]

print (primes)
</code></pre>
</div>
<span class="comment-copy">Could be better if it ran only upto sqrt(x). Nice use of <code>all</code>, I now know how many places I could've used it in.</span>
<span class="comment-copy">You can use <code>range(2, int(x ** 0.5) + 1)</code>. (<code>int</code> is used to avoid <code>TypeError</code>)</span>
<span class="comment-copy">Nice solution! Only thing is it shouldn't check to x. I got this one. Unfortunately, it doesn't get 2 as a prime number.: [x for x in range(2,2000) if all([x % y for y in range(2,math.ceil(math.sqrt(x)) + 1)])]</span>
<span class="comment-copy">The code which using <code>sqrt</code> is wrong. It returns non-prime numbers. It should be something like <code>int(math.sqrt(x)) + 1</code></span>
<span class="comment-copy">@falsetru ok, thanks!</span>
