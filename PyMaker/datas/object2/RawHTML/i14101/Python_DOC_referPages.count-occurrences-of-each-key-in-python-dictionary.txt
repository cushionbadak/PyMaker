<div class="post-text" itemprop="text">
<p>I have a python dictionary object that looks somewhat like this:</p>
<pre><code>[{"house": 4,  "sign": "Aquarius"},
 {"house": 2,  "sign": "Sagittarius"},
 {"house": 8,  "sign": "Gemini"},
 {"house": 3,  "sign": "Capricorn"},
 {"house": 2,  "sign": "Sagittarius"},
 {"house": 3,  "sign": "Capricorn"},
 {"house": 10, "sign": "Leo"},
 {"house": 4,  "sign": "Aquarius"},
 {"house": 10, "sign": "Leo"},
 {"house": 1,  "sign": "Scorpio"}]
</code></pre>
<p>Now for each 'sign' key, I'd like to count how many times each value occurs.</p>
<pre><code>def predominant_sign(data):
    signs = [k['sign'] for k in data if k.get('sign')]
    print len(signs)
</code></pre>
<p>This however, prints number of times 'sign' appears in the dictionary, instead of getting the value of the <code>sign</code> and counting the number of times a particular value appears.</p>
<p>For example, the output I'd like to see is:</p>
<pre class="lang-none prettyprint-override"><code>Aquarius: 2
Sagittarius: 2
Gemini: 1
...
</code></pre>
<p>And so on. What should I change to get the desired output?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter"><code>collections.Counter</code></a> and its <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common"><code>most_common</code> method</a>:</p>
<pre><code>from collections import Counter
def predominant_sign(data):
    signs = Counter(k['sign'] for k in data if k.get('sign'))
    for sign, count in signs.most_common():
        print(sign, count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> module, with a simple generator expression, like this</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; Counter(k['sign'] for k in data if k.get('sign'))
Counter({'Sagittarius': 2, 'Capricorn': 2, 'Aquarius': 2, 'Leo': 2, 'Scorpio': 1, 'Gemini': 1}) 
</code></pre>
<p>This will give you a dictionary which has the <code>signs</code> as keys and their number of occurrences as the values.</p>
<hr/>
<p>You can do the same with a normal dictionary, like this</p>
<pre><code>&gt;&gt;&gt; result = {}
&gt;&gt;&gt; for k in data:
...     if 'sign' in k:
...         result[k['sign']] = result.get(k['sign'], 0) + 1
&gt;&gt;&gt; result
{'Sagittarius': 2, 'Capricorn': 2, 'Aquarius': 2, 'Leo': 2, 'Scorpio': 1, 'Gemini': 1}
</code></pre>
<p>The <code>dictionary.get</code> method, accepts a second parameter, which will be the default value to be returned if the key is not found in the dictionary. So, if the current sign is not in <code>result</code>, it will give <code>0</code> instead.</p>
</div>
<span class="comment-copy">You want the result to be in any particular order?</span>
<span class="comment-copy">@thefourtheye, Not really. Any order is fine. The two answers below did the trick in no time. :)</span>
<span class="comment-copy">Also, you have a list of Python dictionaries :-)</span>
