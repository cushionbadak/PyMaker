<div class="post-text" itemprop="text">
<p>I have dynamically imported a module:</p>
<pre><code>module_object = importlib.import_module(audio_module)
</code></pre>
<p>Now if I get a list of attributes associated with that module:</p>
<pre><code>print dir(module_object)
</code></pre>
<p>I get the following:</p>
<pre><code>['__builtins__', '__doc__', '__file__', '__name__', '__package__', 'aud_shell', 'shlex', 'sys']
</code></pre>
<p>I want to access the "aud_shell" class that is located within this module.  But since this module was dynamically imported, I do not have knowledge of what class it has within it.  How do I search within this imported module to get the class name and then access that class?</p>
<p>For example:</p>
<ol>
<li>Dynamically import module</li>
<li>Obtain name of class within module</li>
<li>Access a method within that class</li>
</ol>
<p>In the end I will have to do something like this:</p>
<pre><code>module_object.aud_shell.some_method()
</code></pre>
<p>I hope I explained this correctly.  Let me know if I didn't make any sense.  Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually 5 minutes after posting this question I was able to solve it, but just in case someone else is trying to do the same thing here it is:</p>
<p>After you have imported your module dynamically:</p>
<pre><code>module_object = importlib.import_module(audio_module)
</code></pre>
<p>You can obtain the class by doing the following:</p>
<pre><code>module_class = inspect.getmembers(module_object, inspect.isclass)
</code></pre>
<p>Then you need to create an object of that class with the module.  This is done by:</p>
<pre><code>class_object = getattr(module_object, module_class)
</code></pre>
<p>Now when I print the "class_object" I get the following:</p>
<pre><code>&gt;&gt;&gt;print class_object
audio_module.aud_shell
</code></pre>
<p>Now I just need to figure out how to get a list of methods within the class and access those methods...</p>
</div>
<span class="comment-copy">You get a list of methods with <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer"><code>dir()</code></a>, and access them with <code>getattr()</code> as you used above.</span>
<span class="comment-copy">Hwat <code>getattr</code>does is not "create an object of that class with the module" - it simply retrieves the attribute of an object. A module's attributes are the functions and classes defined in it.  Also <code>inspect.getmembers</code> don't return you a single string that you can use in a getattr call - (the above code should not work) - it retirns a list of 2-tuples with a pair name/object. So, if you have a single class in a module <code>inspect.getmembers(module_object, inspect.isclass)[0][1]</code> is already that class, no need to call <code>getattr</code>.</span>
