<div class="post-text" itemprop="text">
<p>For example I have a comma delimited string <code>"A,B,C"</code>, and I want to get an array with each entry prepended with a value <code>'hello'</code>:</p>
<pre><code>['helloA', 'helloB', 'helloC']
</code></pre>
<p>I know it is possible to split the string using .split() and then to iterate the resulting array to build a new array with the value prepended for each entry, but I was wondering if there was a more elegant way to do that in Python ?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow">split</a> the string by the comma to get a list of strings:</p>
<pre><code>&gt;&gt;&gt; 'A,B,C'.split(',')
['A', 'B', 'C']
</code></pre>
<p>Next, you want to add something to each value in that list. The most elegant way to do that is to have a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> in which you just prefix the value. That leaves you the following code:</p>
<pre><code>&gt;&gt;&gt; s = 'A,B,C'
&gt;&gt;&gt; ['hello' + x for x in s.split(',')]
['helloA', 'helloB', 'helloC']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For splitting a string you can use <code>string.split()</code> function (passing the the separator you want to split by) </p>
<p>And then to apply a function to all the elements you can define a function that applies you logic to a element and then by using it with <code>map()</code> function to apply it to all elements in list.</p>
<p>Example (Python 3) -</p>
<pre><code>&gt;&gt;&gt; s = "A,B,C"
&gt;&gt;&gt; def concathello(s):
...     return 'hello' + s
...
&gt;&gt;&gt; list(map(concathello,s.split(',')))
['helloA', 'helloB', 'helloC']
</code></pre>
</div>
<span class="comment-copy">You have two sub problems here. Have you tried solving either? There are plenty of posts on those two subjects <i>already</i>. Did you get stuck with trying to implement them?</span>
<span class="comment-copy">I am wondering how to solve this as a single problem as this is quite trivial and I know python is quite powerful.</span>
<span class="comment-copy">@maalls Very often—like for this problem—you can just combine two subproblems, you know how to solve, to solve the combined problem. So you should have definitely tried to solve it yourself first. If you then run into problems with your attempt, it’s of course fine to ask for help, but you should then show us what you have tried so we can tell you where exactly you went wrong. That’s the best way to learn things.</span>
<span class="comment-copy">You always start by breaking down a problem into subproblems. Solve those first, worry about the combined solution later. I'm mostly pointing out here you have not shared your research efforts. We have no idea where you are stuck or what you already know.</span>
<span class="comment-copy">@maalls Please remember to upvote helpful answers and ultimately <a href="http://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">accept the answer that solved your problem</a> to mark this question as resolved. This applies to your other questions too.</span>
<span class="comment-copy">that's exactly what I was looking, thanks poke ! and Sasuga python !</span>
