<div class="post-text" itemprop="text">
<p>my models.py:</p>
<pre><code>class Attendancename(models.Model):
    teacher_name = models.ForeignKey(Teachername, default='Ram')
    date = models.DateField('Date', default=datetime.datetime.today)
    intime = models.TimeField('IN-TIME', auto_now=True)
    outtime = models.TimeField('OUT-TIME', auto_now=True)

    def hours_conversion(self):
        startdelta = datetime.timedelta(hours=self.intime.hours, minutes=self.intime.minutes, seconds=self.intime.seconds)
        enddelta = datetime.timedelta(hours=self.outtime.hours, minutes=self.outtime.minutes, seconds=self.outtime.seconds)
        return (enddelta-startdelta).seconds/3600

    def __str__(self):
        return "%s" %self.teacher_name
</code></pre>
<p>my views.py:</p>
<pre><code>def add_atten(request):
    if request.method == 'POST':
        form = AttendancenameForm(request.POST)
        if form.is_valid():
            form.save()
            return HttpResponseRedirect(reverse('student:listatten'))
        else:
            print(form.errors)
    else:       
        form = AttendancenameForm()
    return render(request, 'add_atten.html', {'form': form},)
</code></pre>
<p>my forms.py:</p>
<pre><code>class AttendancenameForm(ModelForm):
    intime = forms.TimeField(input_formats=('%H:%M',))
    outtime = forms.TimeField(input_formats=('%H:%M',))
    teacher_name = forms.ModelChoiceField(queryset=Teachername.objects.all())
    class Meta:
        model = Attendancename
        fields = ('teacher_name', 'date', 'intime', 'outtime',)
</code></pre>
<p>Actually I'm trying to calculate total number of hours based on difference of <code>'intime'</code> and <code>'outtime'</code> in my models.py file but it raises above erroe. I think I'm doing syntax error. Can anybody Please tell me what is the correct syntax or method to do so?
Any body please suggest me what to do to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's because you cannot subtract a <code>datetime.time</code> from a <code>datetime.time</code>. Convert them to <code>datetime.datetime</code> objects and it'll return a <code>datetime.timedelta</code> object that you could use.</p>
<p><a href="https://docs.djangoproject.com/en/1.8/ref/models/fields/#django.db.models.DurationField" rel="nofollow">If you're lucky enough to be using <code>Django 1.8</code>, they now have a <code>DurationField</code> that can be used.</a></p>
<p>Failing that, I would recommend converting the <code>timedelta</code> into either seconds or a floating point representation so you can actually store it to the database.</p>
<p><strong>EDIT:</strong> Pulled up in comments for half arsing an answer.</p>
<p>For example - if you want to store the number of (integer) seconds, you can convert from a <code>TimeDelta</code> by using <code>secs = td // timedelta(seconds=1)</code>.</p>
</div>
<span class="comment-copy">I'm not sure why you want to store this in a field, when it is trivially calculated from the in and out times. Better to have a method that returns it on demand.</span>
<span class="comment-copy">So how can I show it in my my templates? Suppose I've made such a function then how can I show it in my templates to user?</span>
<span class="comment-copy">In exactly the same way. If it's a method on the model and doesn't take arguments, you can call it directly from the template.</span>
<span class="comment-copy">use <code>td / timedelta(days=1)</code> instead of <code>float(td.days) + float(td.seconds) / float(86400)</code>. Use <code>td.total_seconds()</code> instead <code>timedelta.days*86400+timedelta.seconds</code> (if you want to drop microseconds, to truncate to integer seconds; you could use <code>td // timedelta(seconds=1)</code>). Use <code>timedelta(seconds=some_seconds)</code> instead of <code>timedelta(someSeconds/86400)</code>.  Please, <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">read the corresponding docs</a> if you are going to answer questions about some topic.</span>
<span class="comment-copy">"Convert them to datetime.datetime", but how?</span>
<span class="comment-copy">It depends, but without knowing what you're attempting specifically, I tend to use <code>datetime.combine</code>.</span>
