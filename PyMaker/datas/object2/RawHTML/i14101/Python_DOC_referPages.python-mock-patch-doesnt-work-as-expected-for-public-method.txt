<div class="post-text" itemprop="text">
<p>I'm trying to patch a public method for my flask application but it doesn't seem to work. </p>
<p>Here's my code in <code>mrss.feed_burner</code></p>
<pre><code>def get_feed(env=os.environ):
   return 'something'
</code></pre>
<p>And this is how I use it</p>
<pre><code>@app.route("/feed")
    def feed():
        mrss_feed = get_feed(env=os.environ)
        response = make_response(mrss_feed)
        response.headers["Content-Type"] = "application/xml"

        return response
</code></pre>
<p>And this is my test which it's not parsing. </p>
<pre><code>def test_feed(self):
    with patch('mrss.feed_burner.get_feed', new=lambda: '&lt;xml&gt;&lt;/xml&gt;'):
        response = self.app.get('/feed')
        self.assertEquals('&lt;xml&gt;&lt;/xml&gt;', response.data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe your problem is that you're not patching in the right namespace. See <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="noreferrer">where_to_patch</a> documentation for <code>unittest.mock.patch</code>.</p>
<p>Essentially, you're patching the definition of <code>get_feed()</code> in <code>mrss.feed_burner</code> but your view handler <code>feed()</code> already has a reference to the original <code>mrss.feed_burner.get_feed()</code>. To solve this problem, you need to patch the reference in your view file.</p>
<p>Based on your usage of <code>get_feed</code> in your view function, I assume you're importing <code>get_feed</code> like so</p>
<p>view_file.py</p>
<pre><code>from mrss.feed_burner import get_feed
</code></pre>
<p>If so, you should be patching <code>view_file.get_feed</code> like so:</p>
<pre><code>def test_feed(self):
    with patch('view_file.get_feed', new=lambda: '&lt;xml&gt;&lt;/xml&gt;'):
        ...
</code></pre>
</div>
