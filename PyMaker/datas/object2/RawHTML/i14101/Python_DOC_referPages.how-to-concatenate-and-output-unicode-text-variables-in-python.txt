<div class="post-text" itemprop="text">
<p>My title terms might not be correct and may be a reason why I can't find this simple thing from websites.</p>
<p>I have a list of string variables. How do I actually concatenate them and output a real unicode sentence in Python?</p>
<pre><code>base = ['280', '281', '282', '283']
end = ['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
unicodes = [u''.join(['\u', j, i]) for j in base for i in end]

for u in unicodes:
    print u
</code></pre>
<p>I will get only strings like '\u280F' but not real character. But if I do:</p>
<pre><code>print u'\u280F'
</code></pre>
<p>correct symbols shows up, which is: ⠏</p>
<p>And I'm sure there is a more elegant way to get a range of the symbols from u2800 to u283F...</p>
</div>
<div class="post-text" itemprop="text">
<p>Conver the strings to integers (using <code>int</code> with <code>base</code> 16), the use <a href="https://docs.python.org/2/library/functions.html#unichr" rel="noreferrer"><code>unichr</code></a> (<a href="https://docs.python.org/3/library/functions.html#chr" rel="noreferrer"><code>chr</code></a> if you're using Python 3.x) to convert the number into unicode object.</p>
<pre><code>&gt;&gt;&gt; int('280' + 'F', 16)  # =&gt; 0x280F, 16: hexadecimal
10255
&gt;&gt;&gt; unichr(int('280' + 'F', 16))  # to unicode object
u'\u280f'
&gt;&gt;&gt; print unichr(int('280' + 'F', 16))
⠏
</code></pre>
<hr/>
<pre><code>base = ['280', '281', '282', '283']
end = ['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
unicodes = [unichr(int(j + i, 16)) for j in base for i in end]

for u in unicodes:
    print u
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are stuck with <code>unicodes</code> input; you could use <code>unicode-escape</code> codecs, to get Unicode (<code>b'\\u2800'.decode('unicode-escape') == u'\u2800'</code>):</p>
<pre><code>&gt;&gt;&gt; for escaped in unicodes: print escaped.decode('unicode-escape')
...
⠽
⠾
⠿
</code></pre>
<p>Otherwise, generate range of integers directly:</p>
<pre><code>for ordinal in range(0x2800, 0x283f + 1):
    print unichr(ordinal)
</code></pre>
<p>It produces the same output in this case.</p>
</div>
