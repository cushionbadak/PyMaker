<div class="post-text" itemprop="text">
<p>I was looking at a stackoverflow question (<a href="https://stackoverflow.com/questions/4406389/if-else-in-a-list-comprehension">if else in a list comprehension</a>) and decided to try the following line</p>
<p><code>[ a if a else "Exception" for a in range(10) ]</code>,</p>
<p>and got the following list </p>
<p><code>[ "Exception", 1, 2, 3, 4, 5, 6, 7, 8, 9 ]</code></p>
<p>as an output. I had expected the output to be </p>
<p><code>[ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]</code></p>
<p>because zero is itself, just as the other numbers  were evaluated. Thinking to test whether the behavior was affecting only the first index, I tried</p>
<pre><code>[ a if a else "Exception" for a in range( 1, 10 ) ]
</code></pre>
<p>which outputed</p>
<p><code>[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]</code></p>
<p>and was what I would have not expected if the behavior was specific to the first index. Given the results so far, I tried the following thinking there was something particular about <code>0</code> being in the iterable.</p>
<p><code>[ a if a else "Exception" for a in [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]</code></p>
<p>and</p>
<p><code>import numpy
[ a if a else "Exception" for a in numpy.zeros(10) ]</code></p>
<p>which resulted in the following for both cases</p>
<p><code>[ "Exception", "Exception", "Exception", "Exception", "Exception", "Exception", "Exception", "Exception", "Exception", "Exception" ]</code></p>
<p>If someone could explain this behavior to me, I would appreciate it. It <em>appears</em> that <code>0</code> being in the iterable could be triggering the unexpected behavior, but I am not confident on that conclusion.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python treats 0 as false and any other number as true.</p>
<p>Try it for yourself:</p>
<pre><code>if 0: print("0 is false")
if 1: print("1 is true")
if 2: print("2 is true")
</code></pre>
<p>The output you get is:</p>
<p><code>1 is true</code></p>
<p><code>2 is true</code></p>
<p>What your list compression is saying is:</p>
<p>"For each number from 0 to 9, if a is true, add a to the list, if a is false, add "Exception" to the list"</p>
<p>Because 0 is treated as False you get "Exception" for 0, then 1 2 3... etc for all the other numbers.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>0</code> is among the numeric type treated as <code>False</code>, same as <code>[] Empty List</code> and many others, so in your expression in list compression, the <code>0</code> is a <code>False</code> condition leading to the result of <code>Exception</code> string</p>
<p>You can check it with IDLE:</p>
<pre><code>&gt;&gt;&gt; bool(0)
False
&gt;&gt;&gt; bool(1)
True
&gt;&gt;&gt; bool([])
False
&gt;&gt;&gt; bool([1,2])
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is because <code>0</code> evaluates to <code>False</code> in python. All the other numbers would evaluate to <code>True</code> and thus be placed in the list.</p>
<p>Lets take a look at this.</p>
<pre><code>[ a if a else "Exception" for a in range(10) ]
</code></pre>
<p><code>range(10)</code> evaluates to 0,1,2,3,4,5,6,7,8,9</p>
<p>0 -&gt; <code>False</code></p>
<p>All other numbers -&gt; <code>True</code></p>
</div>
<span class="comment-copy">Read the <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">documentation on this topic</a>.</span>
<span class="comment-copy">Thank you @TigerhawkT3, +1 for giving a reference!</span>
<span class="comment-copy">Thank you! I also tried ` [ a if not a else "Exception" for a in iterable ] `, for each iterable I tried above, and gave consistent behavior with the explanation of '0' as 'False' and '1' as 'True'.</span>
<span class="comment-copy">That is interesting to me that an empty list evaluates as 'False', and a non-empty list returns as 'True'. Amusingly, but consistently, bool([0]) evaluates as 'True'. I tried your suggestions in my command line, and confirmed your results. Thank you.</span>
<span class="comment-copy">Most welcome..!</span>
