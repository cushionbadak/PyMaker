<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3633140/nested-for-loops-using-list-comprehension">Nested For Loops Using List Comprehension</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Imagine the following piece of code which generates a list of file sizes from the current directories' files:</p>
<pre><code>_sizes = []
for _base, _dirs, _files in os.walk('.'):
    for _file in _files:
        _size = getsize(join(_base, _file))
        _sizes.append(_size)
</code></pre>
<p>I wonder whether I can create a nested generator from this - s.th. like:</p>
<pre><code>_sizes = [getsize(join(_base, _file)) 
              for _file in _files 
                  for [_base, _dirs, _files in os.walk('.')]]
</code></pre>
<p>This is syntactically incorrect of course since <code>[_base, _dirs, _files in os.walk('.')]</code> is not correct generator syntax. What I need now is a way to iterate through a sub-element from a list (<code>_files</code>) while referencing another one (<code>_base</code>) (what I called cross-referencing in the title).</p>
<p>I now wonder if I just can't see the obvious or if this is approach is not valid in general.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it like this:</p>
<pre><code>_sizes = [
    getsize(join(_base, _file))
    for _base, _dirs, _files in os.walk('.')
    for _file in _files
]
</code></pre>
<p>If you want generator, use generator expression (replacing <code>[]</code> with <code>()</code>):</p>
<pre><code>_sizes = (
    getsize(join(_base, _file))
    for _base, _dirs, _files in os.walk('.')
    for _file in _files
)
</code></pre>
<p>See <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension in Python tutorial</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use following structure :</p>
<pre><code>_sizes = [ getsize(join(_base, _file)) for _base, _dirs, _files in os.walk('.') for _file in _files ]
</code></pre>
<p>And note that you don't need to put the first loop within <code>[]</code> since you can use nested <code>for</code> loops within a list comprehension.</p>
</div>
