<div class="post-text" itemprop="text">
<p>I've been having trouble combining to different lists
I'm trying to get a list of names and a list of scores, while taking the top n students scores with the names showing.</p>
<p>I'm also unsure where to put the return function in it</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm going to assume you have some data that looks like:</p>
<pre><code>names = ['Alice', 'Bob', "Charlie", "David", "Eve"]
scores = [1, 2, 3, 4, 5]
</code></pre>
<p>and you're trying to get the top <code>n</code> (for ease of use, we'll use <code>n=2</code>) names, as sorted by score. There's lots of ways to do this, the easiest way is to use a dictionary. We want to end up with:</p>
<pre><code>name_score_dict = {"Alice": 1,
                   "Bob": 2,
                   "Charlie": 3,
                   "David": 4,
                   "Eve": 5}
</code></pre>
<p>And we can do that in a few different ways, but <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> is crucial no matter how. The easiest to understand is probably using a dict comprehension.</p>
<pre><code>name_score_dict = {name:score for name,score in zip(names, scores)}
</code></pre>
<p>More compact, but possibly harder to understand, is using the <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer"><code>dict</code></a> constructor</p>
<pre><code>name_score_dict = dict(zip(names, scores))
</code></pre>
<p>Now all you have to do is to get the dictionary in some sort of a sorted state. There's a bajillion different questions on Stack Overflow on how to sort a dictionary, which <a href="https://stackoverflow.com/q/613183/3058609">I will leave you to read</a> to understand why what I'm doing makes sense, but:</p>
<pre><code>sorted_d = sorted(name_score_dict.items(), key=lambda kv: kv[1], reverse=True)
</code></pre>
<p>This should give you something like:</p>
<pre><code>[("Eve", 5), ("David", 4), ("Charlie", 3), ("Bob", 2), ("Alice", 1)]
</code></pre>
<p>So slice off the first <code>n</code> items to get <code>name, score</code> tuples.</p>
<pre><code>for name,score in sorted_d[:n]:
    print("Name is {} and score is {}".format(name, score))
</code></pre>
<p>(this also uses <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">string formatting</a>, which is worth learning on its own)</p>
</div>
<span class="comment-copy">Show code, please?</span>
<span class="comment-copy">This question is not answerable in its current form.  At the very least, please provide example input and expected output.  If you have, please also show what you have tried so far.</span>
<span class="comment-copy">Please add more information!</span>
<span class="comment-copy">From the rather vague description, it sounds like you'd want a dict (with the scores as keys, and names as values), then sort on the scores (or dict keys) to get the names of the top students.</span>
<span class="comment-copy">I think your last link should ref the python 3.x docs not 2.x.</span>
<span class="comment-copy">@ChristopherPearson ah, may as well. Fixed.</span>
<span class="comment-copy">sorry to knit-pick.</span>
