<div class="post-text" itemprop="text">
<p>Say I have a file object which was opened in mode 'r' (such as from the default <code>open()</code> call), but I need to read it in binary mode ('rb').</p>
<p>Is there a way to change the mode directly, or do I need to make a new file object using something like <code>open(foo.name, 'rb')</code> (assuming my file object is named <code>foo</code>)?</p>
<p><strong>EDIT</strong>: Ideally, the solution to this problem should be platform-independent.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2 you'll have to open a new file object; you cannot change the file mode on an already-opened file.</p>
<p>You can do so with the previous file object:</p>
<pre><code>def reopen_binary(fobj):
    mode = fobj.mode
    if 'b' not in mode:
        mode += 'b'
    return open(fobj.name, mode)  # encoding and newline options don't apply
</code></pre>
<p>In Python 3 you can access the underlying <a href="https://docs.python.org/3/library/io.html#io.BufferedIOBase" rel="nofollow">buffered I/O file object</a>, via the <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.buffer" rel="nofollow"><code>TextIOBase.buffer</code> attribute</a>:</p>
<pre><code>raw_buffered = fobj.buffer
</code></pre>
<p>or reach all the way down to the <a href="https://docs.python.org/3/library/io.html#io.RawIOBase" rel="nofollow">raw file object</a>, both are always binary:</p>
<pre><code>raw = fobj.buffer.raw
</code></pre>
<p>The same hierarchy is available in Python 2 if you use the <a href="https://docs.python.org/2/library/io.html#io.open" rel="nofollow"><code>io.open()</code> function</a>.</p>
</div>
