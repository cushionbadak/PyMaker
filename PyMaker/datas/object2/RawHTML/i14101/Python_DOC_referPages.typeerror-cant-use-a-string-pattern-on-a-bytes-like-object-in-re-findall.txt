<div class="post-text" itemprop="text">
<p>I am trying to learn how to automatically fetch urls from a page. In the following code I am trying to get the title of the webpage:</p>
<pre><code>import urllib.request
import re

url = "http://www.google.com"
regex = '&lt;title&gt;(,+?)&lt;/title&gt;'
pattern  = re.compile(regex)

with urllib.request.urlopen(url) as response:
   html = response.read()

title = re.findall(pattern, html)
print(title)
</code></pre>
<p>And I get this unexpected error:</p>
<pre><code>Traceback (most recent call last):
  File "path\to\file\Crawler.py", line 11, in &lt;module&gt;
    title = re.findall(pattern, html)
  File "C:\Python33\lib\re.py", line 201, in findall
    return _compile(pattern, flags).findall(string)
TypeError: can't use a string pattern on a bytes-like object
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to convert html (a byte-like object) into a string using <code>.decode</code>, e.g.  <code>html = response.read().decode('utf-8')</code>. </p>
<p>See <a href="https://stackoverflow.com/questions/606191/convert-bytes-to-a-python-string">Convert bytes to a Python String</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that your regex is a string, but <code>html</code> is <a href="https://docs.python.org/3/library/functions.html#func-bytes" rel="noreferrer">bytes</a>:</p>
<pre><code>&gt;&gt;&gt; type(html)
&lt;class 'bytes'&gt;
</code></pre>
<p>Since python doesn't know how those bytes are encoded, it throws an exception when you try to use a string regex on them.</p>
<p>You can either <a href="https://docs.python.org/3/library/stdtypes.html#bytes.decode" rel="noreferrer"><code>decode</code></a> the bytes to a string:</p>
<pre><code>html = html.decode('ISO-8859-1')  # encoding may vary!
title = re.findall(pattern, html)  # no more error
</code></pre>
<p>Or use a bytes regex:</p>
<pre><code>regex = b'&lt;title&gt;(,+?)&lt;/title&gt;'
#       ^
</code></pre>
<hr/>
<p>In this particular context, you can get the encoding from the response headers:</p>
<pre><code>with urllib.request.urlopen(url) as response:
    encoding = response.info().get_param('charset', 'utf8')
    html = response.read().decode(encoding)
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="noreferrer"><code>urlopen</code> documentation</a> for more details.</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/606191/convert-bytes-to-a-python-string">Convert bytes to a Python string</a></span>
<span class="comment-copy">I see. Oh this didn't happen in Python 2.7. Thanks!</span>
<span class="comment-copy">nice full answer with details and links.</span>
