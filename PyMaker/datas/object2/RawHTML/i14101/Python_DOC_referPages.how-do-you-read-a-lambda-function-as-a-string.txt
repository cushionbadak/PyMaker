<div class="post-text" itemprop="text">
<p>I'd like to read a lambda function I created as a string, after I created it. </p>
<p>For example,</p>
<pre><code>func = lambda num1,num2: num1 + num2
</code></pre>
<p>I'd like to read func as: </p>
<pre><code>'lambda num1,num2: num1 + num2'
</code></pre>
<p>Is there a way to accomplish this or even read any part of the lambda function?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Edit</strong>: Changed my first answer as I misunderstood the question. This answer is borrowed from a number of other uses, however I have completed the code to only display the part of the string that you want. </p>
<pre><code>import inspect

func = lambda num1,num2: num1 + num2
funcString = str(inspect.getsourcelines(func)[0])
funcString = funcString.strip("['\\n']").split(" = ")[1]
print funcString
</code></pre>
<p>Outputs the following string: </p>
<pre><code>lambda num1,num2: num1 + num2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use Python's <code>eval()</code> function:</p>
<pre><code>&gt;&gt;&gt; func = eval('lambda num1,num2: num1 + num2')
&gt;&gt;&gt; func
&lt;function &lt;lambda&gt; at 0x7fe87b74b668&gt;
</code></pre>
<p>To evaluate any expression and return the value.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>getsourcelines</code> from  the <a href="https://docs.python.org/2/library/inspect.html" rel="nofollow"><code>inspect</code></a> module to do this</p>
<p>This function returns as a list all of the lines of the definition of any function, module, class or method as well as the line number at which it was defined.</p>
<p>For example:</p>
<pre><code>import inspect

f = lambda x, y : x + y

print inspect.getsourcelines(f)[0][0]
</code></pre>
<p>Will output the definition of the function as:</p>
<pre><code>f = lambda x, y: x + y
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use Python's <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow"><code>inspect</code></a> module to get the desired code as a list of strings:</p>
<pre><code>#!/usr/bin/env python3
# coding: utf-8

import inspect

func = lambda num1, num2: num1 + num2

def f():
    a = 1
    b = 2
    return a + b

def get_code_as_string(passed_func):
    return inspect.getsourcelines(passed_func)


if __name__ == '__main__':
    # feed a lambda function
    print(get_code_as_string(func))

    #feed a normal function
    print(get_code_as_string(f))
</code></pre>
<p>The output is as follows:</p>
<pre><code>(['func = lambda num1, num2: num1 + num2\n'], 6)
(['def f():\n', '    a = 1\n', '    b = 2\n', '    return a + b\n'], 8)
</code></pre>
<p>As you can see <code>inspect.getsourcelines()</code> returns a tuple of a list and an integer. The list contains all the lines of the function passed to <code>inspect.getsourcelines()</code> and the integer represents the line number in which the provided functions starts.</p>
</div>
<span class="comment-copy">possible duplicate: <a href="http://stackoverflow.com/questions/701802/how-do-i-execute-a-string-containing-python-code-in-python" title="how do i execute a string containing python code in python">stackoverflow.com/questions/701802/â€¦</a></span>
<span class="comment-copy">Do you want to transform the string into a function or the other way around ? For the first case, you can use <code>eval</code>.</span>
<span class="comment-copy">Well that's basically an <a href="https://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a>, which is not generally recommended because the string could contain any function that you are trusting to be safe to execute.</span>
<span class="comment-copy">I understand it's the good answer.</span>
