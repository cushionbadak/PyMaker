<div class="post-text" itemprop="text">
<p>If I have a list such as:</p>
<pre><code>a = [0.0, 0.968792, 1.0, 0.904219, 0.920049, 1.0, 0.738674, 0.760266, 1.0]
</code></pre>
<p>I would like to have:</p>
<pre><code>a = [[0.0, 0.968792, 1.0], [0.904219, 0.920049, 1.0], [ 0.738674, 0.760266, 1.0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [0.0, 0.968792, 1.0, 0.904219, 0.920049, 1.0, 0.738674, 0.760266, 1.0]
l = [[]]

for ind,ele in enumerate(a):
    if ele == 1:
        l[-1].append(ele)
        if ind &lt; len(a)-1:
            l.append([])
    else:
        l[-1].append(ele)
print(l)
[[0.0, 0.968792, 1.0], [0.904219, 0.920049, 1.0], [0.738674, 0.760266, 1.0]]
</code></pre>
<p>Should work for anywhere you have a 1:</p>
<pre><code>a = [0.0, 0.968792, 1.0,1.0, 0.904219, 1.0,0.920049, 1.0, 0.738674, 0.760266, 1.0]
l = [[]]

for ind, ele in enumerate(a):
    if ele == 1:
        l[-1].append(ele)
        if ind &lt; len(a)-1:
            l.append([])
    else:
        l[-1].append(ele)
print(l)

[0.0, 0.968792, 1.0], [1.0], [0.904219, 1.0], [0.920049, 1.0], [0.738674, 0.760266, 1.0]]
</code></pre>
<p>If you are doing a lot of this kind of work you could use numpy:</p>
<pre><code>a = [0.0, 0.968792, 1.0, 1.0, 0.904219, 1.0, 0.920049, 1.0, 0.738674, 0.760266, 1.0]
import numpy as np
x = np.array(a)
print np.split(x, np.where(x == 1)[0] + 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should do your task. See comments in code for further explanation:</p>
<pre><code>#!/usr/bin/env python3
# coding: utf-8

# sample list
a = [0.0, 0.968792, 1.0, 0.904219, 0.920049, 1.0, 0.738674, 0.760266, 1.0]

# empty list to store sublists in
l = list()

# variable to store index (position) of found '1.0' in given list 'a'
last_idx = 0

# walk through list a, i represents the index of the element, e the element itself
for i, e in enumerate(a):
    # find elements equal to 1.0 and append a slice of the list a to the list l
    if e == 1.0:
        l.append(a[last_idx:i+1])
        last_idx = i+1

print(l)
</code></pre>
<p>Output is as:</p>
<pre><code>[[0.0, 0.968792, 1.0], [0.904219, 0.920049, 1.0], [0.738674, 0.760266, 1.0]]
</code></pre>
<p>Docs for used commands can be found here:</p>
<ul>
<li><a href="https://docs.python.org/3.5/library/functions.html#enumerate" rel="nofollow">enumerate</a></li>
<li><a href="https://docs.python.org/3.5/tutorial/introduction.html#lists" rel="nofollow">slice</a></li>
<li><a href="https://docs.python.org/3.5/tutorial/datastructures.html#more-on-lists" rel="nofollow">append</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>To split the list l, after values v you will need to find the indices of v in l.
You can use the <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">lists index method</a> to find the index of the first v and use <a href="https://docs.python.org/3.5/tutorial/introduction.html#lists" rel="nofollow">slicing</a> to split list l after this index. The following function will make use of the aforementioned.</p>
<pre><code>def split_at(l, v):
    r = []
    while l:                             # while l is not empty
        try:                             # if v is in l
            ind = l.index(v) + 1
            r.append( l[:ind] )
            l = l[ind:]
        except:                          # if v is not in l
            r.append(l)
            l = []
    return r
</code></pre>
<p>Some examples to demonstrate correctness:</p>
<pre><code>&gt;&gt;&gt; split_at([], 1)
[]

&gt;&gt;&gt; split_at([1], 1)
[[1]]

&gt;&gt;&gt; split_at([1,1,1,1,1], 1)
[[1], [1], [1], [1], [1]]

&gt;&gt;&gt; split_at([1,2,1], 1)
[[1], [2, 1]]

&gt;&gt;&gt; split_at([1,2,1,1], 1)
[[1], [2, 1], [1]]

&gt;&gt;&gt; split_at([2,1,2], 1)
[[2, 1], [2]]
</code></pre>
<p>Empty list example may be considered incorrect depending on requirements.</p>
</div>
<span class="comment-copy">And have you made any attempt to implement that? What happened?</span>
<span class="comment-copy">can the 1's appear anywhere?</span>
