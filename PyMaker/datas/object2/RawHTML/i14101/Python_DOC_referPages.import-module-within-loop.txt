<div class="post-text" itemprop="text">
<p>I have one file, let's call it foo.py. It does a couple of things, including sending some data over a serial port and emailing the response that comes back.</p>
<p>I have another file, which looks something like this:</p>
<pre><code>iteration = 0
while True:
    iteration += 1
    // do some stuff here every time
    if iteration%5 == 0:
        import foo
    time.sleep (100)
</code></pre>
<p>I'm aware there are some broader problems here with the elegance (or lack thereof) of an independent counter, but putting that aside - the serial transmission / email only works the first time it's triggered. Subsequent loops at a multiple of 5 (which will trigger the modulo 5 == 0) do nothing.</p>
<p>Does my imported version of foo.py get cached, and avoid triggering on subsequent runs? If yes, how else can I call that code repeatedly from within my looping script? Should I just include it inline?</p>
<p>Thanks for any tips!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have access to <code>foo.py</code>, you should wrap whatever you want to run in <code>foo.py</code> in a function.  Then, just import <code>foo</code> once and call the function <code>foo.func()</code> in the loop.</p>
<p>See <a href="https://stackoverflow.com/questions/296036/does-python-optimize-modules-when-they-are-imported-multiple-times">this</a> for an explanation of why repeated imports does not run the code in the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can replace <code>import foo</code> with</p>
<pre><code>if 'foo' in dir(): # if it has already been imported
    reload(foo)
else:
    import foo
</code></pre>
<p>Not quite sure, but this should work.
<em>Edit:</em> Now I am sure.</p>
</div>
<span class="comment-copy">can you explain why you'd want to import it more than once?</span>
<span class="comment-copy">Basically. Put your code from <code>foo</code> into a function, your import at the start of the file, and call <code>foo.name_of_function()</code></span>
<span class="comment-copy">Thanks for the question VenomFangs. NightShadeQueen is correct - it's just a block of code I wanted to re-execute multiple times. Makes more sense for it to live in a function.</span>
<span class="comment-copy">Oh of course - this makes complete sense. Thank you!</span>
<span class="comment-copy">Yes, it should work, but <b><i>please</i></b> don't do this. The <code>reload()</code> function should really only be used during development, when you're working in an interactive interpreter and you need to reload a module that you've modified. See <a href="https://docs.python.org/2/library/functions.html#reload" rel="nofollow noreferrer">the docs for reload()</a>. Note that in Python 3, <code>reload()</code> is <i>not</i> a built-in, you have to import it from <a href="https://docs.python.org/3/library/imp.html#imp.reload" rel="nofollow noreferrer">imp</a> or <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="nofollow noreferrer">importlib</a>.</span>
<span class="comment-copy">@PM2Ring Yes, you are right, but I actually think the OP is aware of that.</span>
<span class="comment-copy">Perfect, thanks. I wasn't aware this is an option and it's good to know too :)</span>
