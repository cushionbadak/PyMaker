<div class="post-text" itemprop="text">
<p>For example I would like to save the .pdf file @ <a href="http://arxiv.org/pdf/1506.07825" rel="nofollow">http://arxiv.org/pdf/1506.07825</a> with the filename: 'Data Assimilation- A Mathematical Introduction' at the location 'D://arXiv'.</p>
<p>But I have many such files. So, my input is of the form of a .csv file with rows given by (semi-colon is the delimiter): </p>
<pre><code>url; file name; location.
</code></pre>
<p>I found some code here: <a href="https://github.com/ravisvi/IDM" rel="nofollow">https://github.com/ravisvi/IDM</a></p>
<p>But that is a bit advanced for me to parse. I want to start with something simpler. The above seems to have more functionality than I need right now - threading, pausing etc.</p>
<p>So can you please write me a very minimal code to do the above:</p>
<ol>
<li>save the file 'Data Assimilation- A Mathematical Introduction' </li>
<li>from '<a href="http://arxiv.org/pdf/1506.07825" rel="nofollow">http://arxiv.org/pdf/1506.07825</a>' </li>
<li>at 'D://arXiv'?</li>
</ol>
<p>I think I will be able to generalize it to deal with a .csv file.</p>
<p>Or, hint me a place to get started. (The github repository already has a solution, and it is too perfect! I want something simpler.) My guess is, with Python, a task as above should be possible with no more than 10 lines of code. So tell me important ingredients of the code, and perhaps I can figure it out. </p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use the <code>requests</code> module, you can just <code>pip install requests</code>.
Then, the code is simple:</p>
<pre><code>import requests

response = requests.get(url)
if response.ok:
    file = open(file_path, "wb+") # write, binary, allow creation
    file.write(response.content)
    file.close()
else:
    print("Failed to get the file")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using Python 3.6.5</p>
<p>Here is a method that can create a folder and save the file in a folder. 
dataURL - Complete URL path 
data_path - Where the file needs to be saved. 
tgz_path - Name of the datafile with the extension. </p>
<pre><code>def fetch_data_from_tar(data_url,data_path,tgz_path):
if not os.path.isdir(data_path):
    os.mkdir(data_path)
    print ("Data Folder Created @ Path", data_path)
else: 
    print("Folder path already exists")
tgz_path = os.path.join(data_path,tgz_path)
urllib.request.urlretrieve(data_url,filename=tgz_path)
data_tgz = tarfile.open(tgz_path)
data_tgz.extractall(path=data_path)
data_tgz.close()
</code></pre>
<p></p>
</div>
<span class="comment-copy">I think if you ask a more specific question, you'll get more useful replies. What you need is to parse a csv file (take a look at <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a>) and download a file and save it (see <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve" rel="nofollow noreferrer"><code>urllib.request.urlretrieve</code></a> and others). I suggest you try to implement something using these functions and ask a question if you have a specific problem that you cannot find a solution for.</span>
<span class="comment-copy">I know how to parse .csv file. I need code for downloading at a location/renaming. I am editing the question. Thanks for the comment!</span>
<span class="comment-copy">In reply to your edit: it is great that you are working on the question to state your needs accurately; however, "please give me an example so I don't have to read the docs" questions are not considered on-topic (or at least good) on this site. As the <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> guide says, you are supposed to research your problem, and that certainly implies reading the docs.</span>
<span class="comment-copy">Thanks for the continuous feedback! I read the <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve" rel="nofollow noreferrer">urllib.request.urlretrieve</a> page, but it didn't answer my question. Please point me to somewhere else, if you have anything in mind. Thanks again for the comments!</span>
<span class="comment-copy">Give me a hints on where to get started at least! I know I have to use the OS library for renaming.  I have used urllib for fetching htmls. But I have never downloaded anything. Tell me which library to use. I am willing to try and fail and come back to tell! Or may be I will succeed.. :)</span>
<span class="comment-copy">I think I installed requests - but I still get the message: No module named 'requests'.  I am on windows and this is what I did: 1. open cmd.exe 2. change directory to C:/python33 3. Run: python get-pip.py 4. I got a message saying installation was successful. 5. Change directory to C:/python33/scripts. 6. Run: pip install requests. 6. I didn't get any message but it existed to the command prompt as usual. 7. I went back to C:/python33. 8. inside python I tried import requests and I got that error message. What did I do wrong?</span>
<span class="comment-copy">Are you sure you installed it for the right version of python? maybe try pip3, if you are using python 3. I am not on windows, so I am not sure how it works there with pip.</span>
<span class="comment-copy">Alright I fixed it. (The correct way is to use python -m pip install requests).  But I got this error: 'PermissionError: [Errno 13] Permission denied: 'C:/New Folder' at file = open('C:/New Folder', "wb+")</span>
<span class="comment-copy">You need to give it the full file path, not just the folder, also make sure you can write in that directory - best use a relative path</span>
