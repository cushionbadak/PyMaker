<div class="post-text" itemprop="text">
<p>I've encountered the following problem. I have data that's formatted nicely for the human eye but is terrible for a computer to read. E.g., it has a table format but without separators and its headers are word-wrapped, meaning that if it's longer than a specific length, the rest is written on a new line.</p>
<pre><code>column 1        column 2 but          column 3
                with more text
1.5893001       1.513451              1.198420
1.5893001       1.513451              1.198420
1.5893001       1.513451              1.198420
1.5893001       1.513451              1.198420
etc...
</code></pre>
<p>I want the columns in a DataFrame to have the text that this header has. I'm already annoyed by the fact that I have to preprocess the data by manually converting it to a dict.</p>
<p>After loading this data into a DataFrame, the DataFrame's first row is the column labels where column2 is ofcourse only partially read. In the second row, the first value (of column 1) has the value of '', the second has 'with more text' and the third has NaN.</p>
<p>I've tried <code>df.columns = df.iloc[0] + ' ' + df.iloc[1]</code> which results in the second column having the correct label, but the others having <code>nan</code>.</p>
<p>Is there a way to make a conditional expression?</p>
<p>[edit]
@jezrael for the correct formatting</p>
<pre><code>{0: {0: 'column 1', 1: '', 2: 1.5893001, 3: 1.5893001}
 1: {0: 'column 2', 1: 'with more text', 2: 1.513451, 3: 1.513451}
 2: {0: 'column 3', 1: None, 2: 1.198420, 3: 1.198420}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can replace misisng values by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.fillna.html" rel="nofollow noreferrer"><code>Series.fillna</code></a> adn remove traling spaces by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.strip.html" rel="nofollow noreferrer"><code>str.strip</code></a>, then remove first 2 rows with <code>iloc</code>:</p>
<pre><code>df.columns = (df.iloc[0] + ' ' + df.iloc[1].fillna('')).str.strip()
df = df.iloc[2:].reset_index(drop=True)
print (df)
  column 1 column 2 with more text column 3
0   1.5893                 1.51345  1.19842
1   1.5893                 1.51345  1.19842
</code></pre>
</div>
<span class="comment-copy">What is <code>print (df.head().to_dict())</code> ?</span>
<span class="comment-copy">Also maybe better is upload some data sample file to dropbox, gdocs, because reading header is data dependent... Hard to verify with copy from text</span>
<span class="comment-copy">@jezrael I've edited my post and added df.head().to_dict()</span>
<span class="comment-copy">If add parameter <code>header=[0,1]</code> to <code>read_csv</code> it working or error?</span>
<span class="comment-copy">@jezrael I'd have to write this df to a tmp csv file and reread it into a DataFrame. I'll report my findings</span>
