<div class="post-text" itemprop="text">
<p>The task is following: sum the list elements with even indexes and multiply the result by the last list's elemet.
I have this oneliner solution code in Python. </p>
<pre><code>array = [-37,-36,-19,-99,29,20,3,-7,-64,84,36,62,26,-76,55,-24,84,49,-65,41] 
print sum(i for i in array if array.index(i) % 2 == 0)*array[-1] if array != [] else 0
</code></pre>
<p>My result is -1476 ( The calculation is: 41*(-37-19+29+3-64+36+26+55+84-65) )</p>
<p>The right result is 1968.</p>
<p>I can't figure it out why this code is not working correctly in this particular case.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a repeated element <code>84</code> in the list, thus <code>array.index</code> does not work as you expected it to be. Also, your code has a quadratic complexity which is not required.</p>
<p>To fix your code with a minimum amount of edit, it would look something like this:</p>
<pre><code>array = [-37,-36,-19,-99,29,20,3,-7,-64,84,36,62,26,-76,55,-24,84,49,-65,41] 
print sum(array[i] for i in range(len(array)) if i % 2 == 0)*array[-1] if array != [] else 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is what you are looking for:</p>
<pre><code>array[-1] * sum(array[::2])
</code></pre>
<p><code>array[::2]</code> traverses the array from first index to last index in steps of two, i.e., every alternate number. <code>sum(array[::2])</code> gets the sum of alternate numbers from the original list. </p>
<p>Using <code>index</code> will work as expected only when you are sure the list does not have duplicates, which is why your code fails to give the correct result.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; sum(x for i, x in enumerate(array) if not i % 2)*array[-1] 
1968
</code></pre>
<p>Use the built-in <code>enumerate</code> function, since there're duplicate elements in your list, and <code>list.index(x)</code> returns the index of the <em>first</em> element equal to <code>x</code> (as said in <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow">the documentation</a>). Also take a look at the documentation on <a href="https://docs.python.org/3/library/functions.html?highlight=enumerate#enumerate" rel="nofollow"><code>enumerate</code></a>.</p>
</div>
<span class="comment-copy">yeah that's the reason</span>
<span class="comment-copy">from doc <code>array.index(i) Return the smallest i such that i is the index of the first occurrence of x in the array</code>.  `</span>
<span class="comment-copy">I understood. This was the repeating element <i>84</i> that causes the error. Thank You!</span>
<span class="comment-copy">This is an elegant way of solution.</span>
<span class="comment-copy">This is the correct solution.</span>
<span class="comment-copy">Damn, you were faster. You could instead do <code>if not i % 2</code>, it is more Pythonic.</span>
<span class="comment-copy">I would argue array[::2] is more pythonic :)</span>
<span class="comment-copy">@traceur I think this is an interesting solution that uses <code>for</code> with condition.</span>
