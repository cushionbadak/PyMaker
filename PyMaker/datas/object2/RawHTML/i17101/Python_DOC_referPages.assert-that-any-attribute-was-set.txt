<div class="post-text" itemprop="text">
<p>I have a Python <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a> object and I would like to assert whether any attribute of that object was set.</p>
<p>I do not believe the <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.PropertyMock" rel="nofollow noreferrer">PropertyMock</a> will work for my purposes, because I must know if any attribute was set, not a particular property.</p>
<p>It also does not appear like I can mock the <code>__setattr__</code> method of a mock object.</p>
<p>How can I test if any arbitrary attribute of a mock object has been set?</p>
</div>
<div class="post-text" itemprop="text">
<p>While this solution is not ideal, you can store the attributes of the mock object after initialization and compare them to the attributes at the time of test.</p>
<pre><code>&gt;&gt;&gt; myobj = Mock()
&gt;&gt;&gt; attrsbefore = set(dir(myobj))
&gt;&gt;&gt; attrsbefore
set(['reset_mock', 'method_calls', 'assert_called_with', 'call_args_list', 'mock_calls', 'side_effect', 'assert_called_once_with', 'assert_has_calls', 'configure_mock', 'attach_mock', 'return_value', 'call_args', 'assert_any_call', 'mock_add_spec', 'called', 'call_count'])
&gt;&gt;&gt; myobj.foo = 'bar'
&gt;&gt;&gt; set(dir(myobj)) - attrsbefore
set(['foo'])
</code></pre>
<p>This solution requires maintaining additional state and does not strictly test whether an attribute is set, only the difference in attributes at two points in time.</p>
</div>
