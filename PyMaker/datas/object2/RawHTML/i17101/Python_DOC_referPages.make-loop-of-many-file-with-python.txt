<div class="post-text" itemprop="text">
<p>My question still related to read many files at once. I tried to read data that consist of many variables and then plot it in one figure. Can anybody help me to make this code much simpler by using loop ?</p>
<pre><code>base_dir = 'C:/INTERMITTENT/MARCH/'   
nc_file1 = '20080305.faieb3p4e.nc'  
nc_file2 = '20080306.faieb3p4e.nc'  

# Change directory
os.chdir(base_dir)

# Open file
fd1 = nc.Dataset(nc_file1, 'r')
fd2 = nc.Dataset(nc_file2, 'r')

# Read variables 
beam1 = fd1.variables['beam'][:]
rng1 = fd1.variables['range'][:]
tim1 = fd1.variables['time'][:]
pwr1 = fd1.variables['pwr'][:]
nfft1 = fd1.variables['nfft'][0]
pn1 = fd1.variables['pnoise'][:]

beam2 = fd2.variables['beam'][:]
rng2 = fd2.variables['range'][:]
tim2 = fd2.variables['time'][:]
pwr2 = fd2.variables['pwr'][:]
nfft2 = fd2.variables['nfft'][0]
pn2 = fd2.variables['pnoise'][:]

# Close netCDF file
fd1.close()
fd2.close()

# Specify beam
ibeam1 = 0
ibeam2 = 0

# Time convertion 
tim1 = tim1/3600.0
tim2 = tim2/3600.0

#Plot
p_plot1 = pwr1[ibeam1]
for it1 in range(len(tim1)):
        p_plot1[it1] = p_plot1[it1] - pn1[ibeam1][it1] - 10.*np.log10(nfft1)
p_plot1 = p_plot1.transpose() 

p_plot2 = pwr2[ibeam2]
for it2 in range(len(tim2)):
        p_plot2[it2] = p_plot2[it2] - pn2[ibeam2][it2] - 10.*np.log10(nfft2)
p_plot2 = p_plot2.transpose()

#Plot colorbar
fig.colorbar(plot1, ax=axs[0])
fig.colorbar(plot2, ax=axs[1])
# Set X and Y axis lower/uppser limit
set_xy = range(4)
set_xy[0] = 18.0 # x min
set_xy[1] = 30.0 # x max
set_xy[2] = 90.0 # y min
set_xy[3] = 170.0 # y max
pl.axis(set_xy)

# Set labels
pl.xlabel('time (hours)')
pl.ylabel('range (km)')

pl.show()
</code></pre>
<p>if I have more than 2 files, let's say I have 30 files, how do I use loop in this case.
Thank you in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a list of file names and iterate:</p>
<pre><code>nc_files = ['20080305.faieb3p4e.nc', '20080306.faieb3p4e.nc']
for fname in nc_files:
    fd = nc.Dataset(fname, 'r')
    ... # do stuff
</code></pre>
<p>Note that you would then store your results in lists rather than naming them <code>beam1</code>, <code>beam2</code>, etc.</p>
<p><strong>Edit:</strong> Here is a rewrite of your code.  I noticed that your data was only used to create a plot and then not referred to again, so I rewrite the values during each loop.  Also note that I used <code>enumerate</code> while iterating over your file names to get a counter variable <code>i</code>:</p>
<pre><code>base_dir = 'C:/INTERMITTENT/MARCH/'   
nc_fnames = ['20080305.faieb3p4e.nc', '20080306.faieb3p4e.nc'] 

# beams
ibeams = [0, 0]

# Change directory
os.chdir(base_dir)
for i, fname in enumerate(nc_fnames):
    # Open file
    fd = nc.Dataset(fname, 'r')

    # Read variables 
    beam = fd.variables['beam'][:]
    rng = fd.variables['range'][:]
    tim = fd.variables['time'][:]
    pwr = fd.variables['pwr'][:]
    nfft = fd.variables['nfft'][0]
    pn = fd.variables['pnoise'][:]

    # Close netCDF file
    fd.close()

    # Specify beam
    ibeam = ibeams[i]

    # Time convertion 
    tim = tim/3600.0

    #Plot
    p_plot = pwr[ibeam]
    for it in range(len(tim)):
            p_plot[it] = p_plot[it] - pn[ibeam][it] - 10.*np.log10(nfft)
    p_plot = p_plot.transpose() 

    #Plot colorbar
    fig.colorbar(p_plot, ax=axs[i])

# Set X and Y axis lower/uppser limit
set_xy = range(4)
set_xy[0] = 18.0 # x min
set_xy[1] = 30.0 # x max
set_xy[2] = 90.0 # y min
set_xy[3] = 170.0 # y max
pl.axis(set_xy)

# Set labels
pl.xlabel('time (hours)')
pl.ylabel('range (km)')

pl.show()
</code></pre>
</div>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/library/fileinput.html" rel="nofollow noreferrer">docs.python.org/3/library/fileinput.html</a></span>
<span class="comment-copy">beam1, beam2, etc are not the results, but variable were used in further step (plotting), and how do I make loop for plot?</span>
<span class="comment-copy">@user3346361: See edits.</span>
<span class="comment-copy">Thank you, but still not work....... Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt;   File "C:\Python27\lib\site-packages\spyderlib\widgets\externalshell\sitecustomize.py", line 540, in runfile     execfile(filename, namespace)   File "C:/INTERMITTENT/plotE08.py", line 42, in &lt;module&gt;     p_plot1[it] = p_plot[it] - pn[ibeam][it] - 10.*np.log10(nfft)   File "C:\Python27\lib\site-packages\numpy\ma\core.py", line 3082, in <b>setitem</b>     ndarray.__setitem__(_data, indx, dval) ValueError: could not broadcast input array from shape (134) into shape (231)</span>
<span class="comment-copy">not only ibeam as variable used for plot but also pwr, tim, and nfft</span>
<span class="comment-copy">I found "p_plot1" that should be "p_plot". Now, the error related to colorbar.</span>
