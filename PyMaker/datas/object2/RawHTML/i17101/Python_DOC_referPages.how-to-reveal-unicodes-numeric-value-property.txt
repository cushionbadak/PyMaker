<div class="post-text" itemprop="text">
<pre><code>'\u00BD' # ½
'\u00B2' # ²
</code></pre>
<p>I am trying to understand isdecimal() and isdigit() better, for this its necessary to understand unicode numeric value properties.  How would I see the numerical value property of, for example, the above two unicodes.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the 'numeric value' contained in the character, you could use <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.numeric" rel="nofollow"><code>unicodedata.numeric()</code> function</a>:</p>
<pre><code>&gt;&gt;&gt; import unicodedata
&gt;&gt;&gt; unicodedata.numeric('\u00BD')
0.5
</code></pre>
<p>Use the <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow"><code>ord()</code> function</a> to get the integer codepoint, optionally in combination with <code>format()</code> to produce a hexadecimal value:</p>
<pre><code>&gt;&gt;&gt; ord('\u00BD')
189
&gt;&gt;&gt; format(ord('\u00BD'), '04x')
'00bd'
</code></pre>
<p>You can get access to the character property with <code>unicodedata.category()</code>, which you'd then need to check against the documented categories:</p>
<pre><code>&gt;&gt;&gt; unicodedata('\u00DB')
'No'
</code></pre>
<p>where <a href="http://www.fileformat.info/info/unicode/category/index.htm" rel="nofollow"><code>'No'</code> stands for <em>Number, Other</em></a>.</p>
<p>However, there are a series of <code>.isnumeric() == True</code> characters in the category <code>Lo</code>; the Python <code>unicodedata</code> database only gives you access to the general category and relies on <code>str.isdigit()</code>, <code>str.isnumeric()</code>, and <code>unicodedata.digit()</code>, <code>unicodedata.numeric()</code>, etc. methods to handle the additional categories.</p>
<p>If you want a precise list of all numeric Unicode characters, the canonical source is the <a href="http://www.unicode.org/Public/" rel="nofollow">Unicode database</a>; a series of text files that define the whole of the standard. The <a href="http://www.unicode.org/Public/6.3.0/ucd/extracted/DerivedNumericType.txt" rel="nofollow"><code>DerivedNumericTypes.txt</code> file (v. 6.3.0)</a> gives you a 'view' on that database specific the numeric properties; it tells you at the top how the file is derived from other data files in the standard. Ditto for the <a href="http://www.unicode.org/Public/6.3.0/ucd/extracted/DerivedNumericValues.txt" rel="nofollow"><code>DerivedNumericValues.txt</code> file</a>, listing the exact numeric value per codepoint.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.isdecimal" rel="nofollow">the docs</a> explicitly specify the relation between the methods and <code>Numeric_Type</code> property.</p>
<pre><code>def is_decimal(c):
    """Whether input character is Numeric_Type=decimal."""
    return c.isdecimal() # it means General Category=Decimal Number in Python

def is_digit(c):
    """Whether input character is Numeric_Type=digit."""
    return c.isdigit() and not c.isdecimal()


def is_numeric(c):
    """Whether input character is Numeric_Type=numeric."""
    return c.isnumeric() and not c.isdigit() and not c.isdecimal()
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; for c in '\u00BD\u00B2':
...     print("{}: Numeric: {}, Digit: {}, Decimal: {}".format(
...         c, is_numeric(c), is_digit(c), is_decimal(c)))
... 
½: Numeric: True, Digit: False, Decimal: False
²: Numeric: False, Digit: True, Decimal: False
</code></pre>
<p>I'm not sure <a href="http://codepoints.net/search?gc=Nd" rel="nofollow">Decimal Number</a> and <a href="http://codepoints.net/search?nt=De" rel="nofollow">Numeric_Type=Decimal</a> will always be identical.</p>
<p>Note: <code>'\u00B2'</code> is not decimal because superscripts are explicitly excluded by the standard, see <a href="http://www.unicode.org/versions/Unicode6.2.0/ch04.pdf" rel="nofollow">4.6 Numerical Value (Unicode 6.2)</a>.</p>
</div>
<span class="comment-copy">I think OP wants 0.5 and 2 for those code points, not their code point.</span>
<span class="comment-copy">@delnan: check, added that too.</span>
<span class="comment-copy">my question may be wrong then - I read about the property values Numeric_Type=Digit, Numeric_Type=Decimal, and Numeric_Type=Numeric I was wondering whether I could produce this property from a unicode point somehow?</span>
<span class="comment-copy"><code>unicodedata.category('\u00DB') == 'Lu'</code>, not <code>No</code> (it would be true for '\u00BD'). <code>format(ord('\u00BD'), '04x')</code> seems unrelated to the question</span>
<span class="comment-copy">Neither of the two characters you give is <code>Decimal</code>. Can you come up with a third example?</span>
<span class="comment-copy">@Eric here are <a href="http://ideone.com/JIaSpQ" rel="nofollow noreferrer"><i>all</i> decimal numbers (in the Unicode standard used by python executable)</a></span>
<span class="comment-copy">I think I'm confused by how your <code>is_digit('0')</code> is <code>False</code></span>
<span class="comment-copy">@Eric <code>'0'</code> has  a property <code>Numeric_Type=decimal</code> (decimal digit). <code>is_digit(c)</code> returns whether <code>Numeric_Type=digit</code> (decimal, but in typographic context e.g., <code>①</code>) —they are mutually exclusive. What characters have which <code>Numeric_Type</code> is defined in the Unicode standard.</span>
