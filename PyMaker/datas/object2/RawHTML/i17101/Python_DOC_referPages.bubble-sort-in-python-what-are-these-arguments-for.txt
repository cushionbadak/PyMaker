<div class="post-text" itemprop="text">
<pre><code>def bbsort(list1):
    for passnum in range(len(list1)-1,0,-1):
        for i in range (passnum):
            if list1[i]&gt;list1[i+1]:
                temp =list1[i]
                list1[i] = list1[i+1]
                list1[i+1] = temp
</code></pre>
<p>This is code for a bubble sort, but what is the use of <code>-1,0,-1</code> in the <code>while</code> condition?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking at arguments to the <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="noreferrer"><em><code>range()</code> function</em></a>; the numbers set up the range to start at the list length, minus one, then stepping down to 1 (the end point is not included in the range).</p>
<p>So there are 3 arguments, the first is <code>len(list1) - 1</code>, the second is <code>0</code> and the third is <code>-1</code>.</p>
<p>Say the list is length 5, then <code>range(5 - 1, 0, -1)</code> will produce a list with 4, 3, 2, and 1:</p>
<pre><code>&gt;&gt;&gt; list(range(4, 0, -1))
[4, 3, 2, 1]
</code></pre>
<p>The <code>for</code> loop steps over these values:</p>
<pre><code>&gt;&gt;&gt; for i in range(4, 0, -1):
...     print(i)
... 
4
3
2
1
</code></pre>
<p>The <code>for</code> loop assigns these numbers to <code>passnum</code>, and the next nested loop uses that to create a new <code>range()</code>. The first time, that inner range will go from <code>0</code> to <code>len(list1) - 1</code> (exclusive), the next time from <code>0</code> to <code>len(list1) - 2</code>, etc, until the last time, when it'll run from <code>0</code> to <code>1</code>, always excluding the stop index. For a list of length 5, that means the inner loop first assigns 0, 1, 2, 3 to <code>i</code>, then 0, 1, 2, then 0, 1, then 0.</p>
<p>The code is missing an opportunity to use Python sequence assignment to swap to elements:</p>
<pre><code>def bbsort(list1):
    for passnum in range(len(list1) - 1, 0, -1):
        for i in range (passnum):
            if list1[i] &gt; list1[i + 1]:
                list1[i], list1[i + 1] = list1[i + 1], list[i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The first -1 subtracts 1 from the length of the input list because the indexes start from 0, not 1. The 0 is the start number(only neccesary to get to the next parameter). The 2nd -1 is the step so that tells it to move backwards through the range. 
Example:
range(5, 2, -1) is [5, 4, 3, 2]</p>
</div>
<span class="comment-copy">That's not a <code>while</code> condition, that is a <code>for</code> loop.</span>
