<div class="post-text" itemprop="text">
<pre><code>def withoutVowels(string):
    for letter in string:
        if letter in ["a", "e", "i", "o", "u"]:
            noVowelString = string.replace(letter, " ")
            return noVowelString
</code></pre>
<p>This function removes and replaces a, e but not i, o, u and i am not sure why.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's been a while since I've done Python, but it appears your function returns after replacing the first vowel.</p>
<p>Maybe this is what you want:</p>
<pre><code>def withoutVowels(string):
    noVowelString = ""
    for letter in string:
        if letter in ["a", "e", "i", "o", "u"]:
            noVowelString += " "
        else:
            noVowelString += letter

     return noVowelString
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for letter in string:
    if letter in ["a", "e", "i", "o", "u"]:
        noVowelString = string.replace(letter, " ")
        return noVowelString
</code></pre>
<p>Think about that. You have a for loop, and if a condition inside the loop body is evaluated as true, then you do something <em>and return from the function</em>. So all remaining loop iterations wonâ€™t ever run.</p>
<p>Instead, you would want to move the <code>return</code> out of the loop, so it can still continue. However, you also would want to keep the changed string you did your replacements on once, and continue on that one:</p>
<pre><code>def withoutVowels(string):
    noVowelString = string
    for letter in string:
        if letter in ["a", "e", "i", "o", "u"]:
            noVowelString = noVowelString.replace(letter, " ")
    return noVowelString
</code></pre>
<p>Finally, this all does not really make sense. There is no need to iterate over <em>every</em> character of your original string, if you just want to remove all vowels from the string. Instead, you can just loop over the vowels, and remove them:</p>
<pre><code>def withoutVowels(string):
    for vowel in ("a", "e", "i", "o", "u"):
        string = string.replace(vowel, "")
    return string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are five things here:</p>
<ol>
<li><p>Your return-statement is indented too far.  As soon as control enters the if-block for the first time, the for-loop will stop iterating and the function will return prematurely.</p></li>
<li><p>String objects are immutable in Python.  Hence, <a href="http://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow"><code>str.replace</code></a> returns a modified <em>copy</em> of the string instead of modifying the original object.  This means that you need to reassign <code>string</code> to the copy in each iteration of the for-loop.</p></li>
<li><p>Your for-loop should be iterating over the list of vowels, not the input string.  Or, even more efficient, a string of vowels.</p></li>
<li><p>Because your function is supposed to <em>remove</em> vowels from the string, I think it would be better to replace them with an empty string instead of a space.</p></li>
<li><p>Your function does not remove uppercase vowels.</p></li>
</ol>
<p>Below is a version of your function that addresses these issues:</p>
<pre><code>def withoutVowels(string): 
    for vowel in "aeiouAEIOU":
        string = string.replace(vowel, "")
    return string
</code></pre>
</div>
<span class="comment-copy">Please include actual input and actual and expected output when asking a question like this.</span>
