<div class="post-text" itemprop="text">
<p>I followed this tutorial <a href="https://developers.google.com/admin-sdk/directory/v1/quickstart/quickstart-python?hl=de" rel="nofollow">here</a> and I can finally retrive all emails from my domain with my application.</p>
<p>Now I want to write some unit tests with mock for my application, but I dont know where to start.</p>
<p>I have read <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow">here</a> about unit testing with mock and that the google api admin directory API comes with his own mock library. But I dont understand how to use it correctly.</p>
<p>My application test_email_user.py contains the import from my real application email_user.py but now what?</p>
<p>I have to fake the google api directory responses to my real application, but how?</p>
<p>greetings,
sam</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not familiar with the Google Client API own mock library you mention but I do it easily with this <a href="http://www.voidspace.org.uk/python/mock/" rel="nofollow">mock library</a>:</p>
<pre><code>import mock

class DirectoryHelper():
...
#Real method that calls the API
def get_users(self):
    user_list = []
    request = self.service.users().list(
        customer=self.customer_id,
        maxResults=500,
        orderBy='email',
        fields="nextPageToken,users(id,orgUnitPath,primaryEmail,name(givenName,familyName),agreedToTerms,suspended)"
    )
    while request:
        logging.debug('Retrieving a page of users from directory...')
        report_document = request.execute()
        if 'users' in report_document:
            for user in report_document['users']:
                user_list.append(user)
        request = self.service.users().list_next(
            request, report_document
        )
    return user_list

#Mock method that simulate the API call
def get_mock_users(self):
    return [
   {
   "id": "12345",
   "primaryEmail": "mock@domain.com",
   "name": {
    "givenName": u"Mock",
    "familyName": u"User"
   },
   "agreedToTerms": True,
   "suspended": False,
   "orgUnitPath": "/"
  }
]

@mock.patch.object(DirectoryHelper, 'get_users', get_mock_users)
def test_sync_apps_users(self):
    directory_helper = DirectoryHelper()
    self.assertEquals(1, len(directory_helper.get_users()), 'Mock only contain one user')
</code></pre>
</div>
<span class="comment-copy">Thanks - But where did you get that code? There are some errors like white space syntax error or missing imports.  Another question: How can I use this with pytest? Any hint? Im reading the docu for pytest, but I dont know how to use the above code with tests...</span>
