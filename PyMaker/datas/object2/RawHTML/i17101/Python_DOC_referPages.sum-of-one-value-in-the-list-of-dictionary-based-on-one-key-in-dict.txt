<div class="post-text" itemprop="text">
<p>I want to sum one value in the list of dictionary based on another key value is equal.</p>
<p>stackOverflow much easier question answer for just sum the total value:
<a href="https://stackoverflow.com/questions/6602678/i-have-a-very-big-list-of-dictionaries-and-i-want-to-sum-the-insides">I have a very big list of dictionaries and I want to sum the insides</a></p>
<p>For example: if we have</p>
<pre><code>lst = [{'year': 2013, 'snow': 64.8, 'month': 1},
       {'year': 2013, 'snow': 66.5, 'month': 2},
       {'year': 2013, 'snow': 68.3, 'month': 12},
       {'year': 2013, 'snow': 68.8, 'month': 3},
       {'year': 2013, 'snow': 70.9, 'month': 11},
       {'year': 2012, 'snow': 76.8, 'month': 7},
       {'year': 2012, 'snow': 79.6, 'month': 5},
       {'year': 1951, 'snow': 86.6, 'month': 12}]
</code></pre>
<p>to get the sum of snow fall in that year:</p>
<p><strong>the output</strong> should:</p>
<pre><code>snowfall = [{'year': 2013, 'totalsnow': 339.3},
            {'year': 2012, 'totalsnow': 156.4},
            {'year': 1951, 'totalsnow': 86.6}]
</code></pre>
<p>Here is my code:</p>
<pre><code>for i in range(len(lst)):
        while lst[i]['year']:
            sum(value['snow'] for value in lst)
</code></pre>
<p>then it will goes wrong, output</p>
<pre><code>582.3000000000001
</code></pre>
<p>How to get it right? Please be sample and explain as well. I am new to python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary to track snow-per-year; a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="noreferrer"><code>collections.defaultdict()</code> object</a> is ideal here:</p>
<pre><code>from collections import defaultdict

snowfall = defaultdict(float)

for info in lst:
    snowfall[info['year']] += info['snow']

snowfall = [{'year': year, 'totalsnow': snowfall[year]} 
            for year in sorted(snowfall, reverse=True)]
</code></pre>
<p>This first creates a <code>defaultdict()</code> object that'll create new <code>float()</code> objects (value 0.0) for keys that don't exist yet. It sums the values per year for you.</p>
<p>The last lines create your desired structure, sorted by year in descending order.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; lst = [{'year': 2013, 'snow': 64.8, 'month': 1},
...        {'year': 2013, 'snow': 66.5, 'month': 2},
...        {'year': 2013, 'snow': 68.3, 'month': 12},
...        {'year': 2013, 'snow': 68.8, 'month': 3},
...        {'year': 2013, 'snow': 70.9, 'month': 11},
...        {'year': 2012, 'snow': 76.8, 'month': 7},
...        {'year': 2012, 'snow': 79.6, 'month': 5},
...        {'year': 1951, 'snow': 86.6, 'month': 12}]
&gt;&gt;&gt; snowfall = defaultdict(float)
&gt;&gt;&gt; for info in lst:
...     snowfall[info['year']] += info['snow']
... 
&gt;&gt;&gt; snowfall = [{'year': year, 'totalsnow': snowfall[year]} 
...             for year in sorted(snowfall, reverse=True)]
&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint(snowfall)
[{'totalsnow': 339.30000000000007, 'year': 2013},
 {'totalsnow': 156.39999999999998, 'year': 2012},
 {'totalsnow': 86.6, 'year': 1951}]
</code></pre>
</div>
<span class="comment-copy">Hi, thank you your help. I didn't mean to be sorted, so if I delete last line, raise "NameError: name 'year' is not defined". Which is make sense because the for loop is gone. So I re make the loop. I change the last line to "for year in snowfall" It does not work. eh:( I am not so smart in programming ...</span>
<span class="comment-copy">@MarquisRandell: replace <code>sorted(snowfall, reverse=True)</code> with just <code>snowfall</code> instead; you still need the loop: <code>[{'year': year, 'totalsnow': snowfall[year]} for year in snowfall]</code>.</span>
<span class="comment-copy">Yes it works again. but the list looks sorted. Is that because the defaultdict? could me make not sorted? If is the way it is, that is fine.</span>
<span class="comment-copy">If the order is sorted, then that's a coincidence. Dictionaries have no ordering, but you <i>are</i> creating a list which does have order.</span>
