<div class="post-text" itemprop="text">
<p>This function already does what I want. But is there a way I could simplify the nested ifs here?</p>
<pre><code>def filter_by_fclim(thres,list):
    """
    Check if a list contain at least 1 member with value
    greater or less than a threshold.
    If the value is &gt; 1 it must be checked with &gt;= condition
    otherwise &lt;= condition
    """
    if thres &gt; 1:
        result = [i for i in list if i &gt;= thres]
        if len(result) &gt; 0: return True
        else: return False
    else:
        result = [i for i in list if i &lt;= thres]
        if len(result) &gt; 0: return True
        else: return False
</code></pre>
<p>This is the sample input-output:</p>
<pre><code>In [3]: the_list1 = [3, 2, 0.5, 0.1, 2, 0.3, 0.5, 1]
In [4]: the_list2 = [0.1, 0.2, 0.3, 0.2, 0.01, 0.5]

In [5]: filter_by_fclim(2,the_list1)
Out[5]: True

In [6]: filter_by_fclim(2,the_list2)
Out[6]: False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can combine the <code>if</code>s like this</p>
<pre><code>if thres &gt; 1:
    return len([i for i in my_list if i &gt;= thres]) &gt; 0
else:
    return len([i for i in my_list if i &lt;= thres]) &gt; 0
</code></pre>
<p>You can even shorten it with <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> function, like this</p>
<pre><code>if thres &gt; 1:
    return any(i &gt;= thres for i in my_list)
else:
    return any(i &lt;= thres for i in my_list)
</code></pre>
<p>You can even simplify it further like this</p>
<pre><code>import operator
op = (operator.le, operator.ge)[thres &gt; 1]
return any(op(i, thres) for i in my_list)
</code></pre>
<p>Since Boolean values are integers in Python, if <code>thres &gt; 1</code> evaluates to be Truthy, the value will be taken as <code>1</code>, otherwise <code>0</code>. So, we pick the corresponding operation from the tuple. Then we check if any of the items in the list match that condition. This can also be written as</p>
<pre><code>op = operator.ge if thres &gt; 1 else operator.le
</code></pre>
<p><strong>Note:</strong> Never name your lists as <code>list</code>, as that shadows the builtin <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow"><code>list</code></a> function.</p>
</div>
<span class="comment-copy">The 2nd line of the last snippet is unnecessarily obfuscated. I'd go with <code>op = operator.ge if thres &gt; 1 else operator.le</code>.</span>
<span class="comment-copy">@user4815162342 Thank you :) Included that also in the answer.</span>
