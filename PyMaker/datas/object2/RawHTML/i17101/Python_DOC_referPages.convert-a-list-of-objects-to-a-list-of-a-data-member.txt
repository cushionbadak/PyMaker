<div class="post-text" itemprop="text">
<p>Say i have a list of objects.  Say the object has a data member 'name'.  Say I want to get a sub list of all objects that have a certain value of 'name'.  Any elegant way to do this beyond:</p>
<pre><code>class Person(Base):
    name = Column(Text)

p1 = Person(name="joe")
p2 = Person(name="jill")

plst = [ p1, p2 ]

name_test = "jill"

found_people = list()

for person in plst:
    if person.name == name_test:
        found_people.append(person)
</code></pre>
<p>looking for an elegant solution that is not so verbose.  not sure if this python code compiles or not :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<pre><code>class Person(Base):
    name = Column(Text)

plist = [Person(name="joe"), Person(name="jill")]

found_people = [person for person in plist if person.name == "jill"]
</code></pre>
</div>
<span class="comment-copy">if len([throw_away for person in plst if person.name == name_test]) &gt; 0</span>
<span class="comment-copy">Is this just purely theoretical? It almost looks like the start of some form of ORM...</span>
<span class="comment-copy">no, not theory, just getting used to python.  wondering if there is a nice way to pass in a lambda, like mapping, but for simple things, list comprehension seems very simple/cool.</span>
