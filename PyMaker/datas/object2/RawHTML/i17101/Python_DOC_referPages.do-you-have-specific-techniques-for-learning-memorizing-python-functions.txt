<div class="post-text" itemprop="text">
<p>I am currently learning python and have been struggling learning new functions. There always seems to be a perfect match for functions I need and I never think of them until I see them utilized elsewhere. Is this normal? Does it happen to veteran programmers as well?</p>
<p>for example this snippet in learnpythonthehardway: </p>
<pre><code>PHRASE_FIRST = False
if len(sys.argv) == 2 and sys.argv[1] == "english":
    PHRASE_FIRST = True
</code></pre>
<p>I would have never thought of doing that without going in circles first.</p>
<p>Do you have specific mnemonic techniques for memorizing stuff? Can anyone share their insights?</p>
</div>
<div class="post-text" itemprop="text">
<p>Write code.  Firstly, you will eventually memorise the common built-ins, like <code>len</code>, <code>range</code>, etc.  There are probably a few that you will never remember at once, these are those you hardly ever use (<code>eval</code>, <code>exec</code>, <code>compile</code>, etc.) but that will depend on the kind of programs you are writing.  That is normal when learning a programming language.</p>
<p>Importantly, learn how to find your way around the documentation.  You might not memorise the exact argument-list for each function, but you should know the kind of features that are available, and how to look it up.</p>
<p>The standard library modules are another matter.  You might only use 10% of them, although some people will use considerably more.  Again, only learn what you need, maybe start at aspects of <code>sys</code>.  Even so, there are obscure corners of <code>sys</code> that you might never need.</p>
<p>Don't try to remember everything, you don't need to.  </p>
<p>Write code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just practice I guess.
Also, when doing something that seems "common", check the doc: <a href="https://docs.python.org/3/" rel="nofollow">https://docs.python.org/3/</a>. Like if you want to split strings etc...</p>
<p>It's a pitty there is nothing like <a href="http://www.haskell.org/hoogle/" rel="nofollow">Hoogle</a> (for Haskell) in Python (AFAIK)</p>
</div>
<span class="comment-copy">the technique is called 'practice' :)</span>
<span class="comment-copy">A way from your question, the code you have written has a syntax error. The last line should be indented to right by one tab.</span>
<span class="comment-copy">Sorry about that, fixed.</span>
<span class="comment-copy">Of, course, I understand practising everyday is the answer to get better. But my question is more about learning new functions by memorizing techniques (maybe specific to programming).</span>
<span class="comment-copy">That question would fit better to <a href="http://programmers.stackexchange.com">Programmers</a></span>
<span class="comment-copy">Thanks, great answer. Do you know of a list of most used/useful functions? learnpythnthehardway lists a few but I believe it's just a few. (ie: <a href="http://learnpythonthehardway.org/book/ex37.html" rel="nofollow noreferrer">learnpythonthehardway.org/book/ex37.html</a>)</span>
<span class="comment-copy">@faraggi I would start with the <a href="https://docs.python.org/2/library/functions.html" rel="nofollow noreferrer">built-ins</a> and <a href="https://docs.python.org/2/library/stdtypes.html" rel="nofollow noreferrer">standard types</a>. After that it depends what you are working on, but <a href="https://docs.python.org/2/library/random.html" rel="nofollow noreferrer"><code>random</code></a> and <a href="https://docs.python.org/2/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a> seem to come up a lot around here.</span>
<span class="comment-copy">@faraggi: what is useful to me is not necessarily going to be useful to you.  It depends on what your programs need, write code until you need a function.   Here is a complete list: <a href="https://docs.python.org/2/library/functions.html" rel="nofollow noreferrer">docs.python.org/2/library/functions.html</a></span>
<span class="comment-copy">oh wow, Hoogle looks great! As I answered above, I understand practice makes perfect but how about mnemonic techniques just for learning new functions. I am 31 now and I'm not as quick as I was 15 years ago.</span>
<span class="comment-copy">I understand... I guess, some functions are names similarilly in various languages, so you cna always export your knowledge from one to another. Otherwise, in my case, I don't really have a menonic way to remember (actually, if its been more than 4 months without typing python I always write thing.length() instead of len(thing)...) to me it's just practice and looking on google and the docs whenever something looks like a common thing people would like to do</span>
<span class="comment-copy">@faraggi method of loci?</span>
<span class="comment-copy">@traceur thanks, I'll look into that!</span>
