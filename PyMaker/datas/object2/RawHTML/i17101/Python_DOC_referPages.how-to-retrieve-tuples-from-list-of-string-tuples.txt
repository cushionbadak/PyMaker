<div class="post-text" itemprop="text">
<pre><code>a=['(10,13)', '(23,45)', '(56,78)']
</code></pre>
<p>Here each item in list <code>a</code> is a string   </p>
<p>I want an other list like this:</p>
<pre><code>b=[(10,13),(23,45),(56,78)]
</code></pre>
<p>where each item is a tuple and each element in each tuple is an integer.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval"><code>ast.literal_eval</code></a> and a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; a = ['(10,13)', '(23,45)', '(56,78)']
&gt;&gt;&gt; b = [literal_eval(x) for x in a]
&gt;&gt;&gt; b
[(10, 13), (23, 45), (56, 78)]
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a>.</p>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; a = ['(10,13)', '(23,45)', '(56,78)']
&gt;&gt;&gt; b = [literal_eval(s) for s in a]
&gt;&gt;&gt; b
[(10, 13), (23, 45), (56, 78)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use map:</p>
<pre><code>from ast import literal_eval
a=['(10,13)', '(23,45)', '(56,78)']
b=map(literal_eval,a)  #[(10, 13), (23, 45), (56, 78)]
</code></pre>
</div>
