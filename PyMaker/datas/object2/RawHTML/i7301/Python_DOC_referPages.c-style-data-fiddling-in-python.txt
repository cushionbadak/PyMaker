<div class="post-text" itemprop="text">
<p>Is there any Python module that allows one to freely reinterpret raw bytes as different data types and perform various arithmetic operations on them? For example, take a look at this C snippet:</p>
<pre><code>char test[9] = "test_data";
int32_t *x = test;
(*x)++;
printf("%d %.9s\n", x, test);

//outputs 1245780400 uest_data on LE system.
</code></pre>
<p>Here, both <code>test</code> and <code>x</code> point to the same chunk of memory. I can use <code>x</code> to perform airthmetics and <code>test</code>for string-based operations and individual byte access.</p>
<p>I would like to do the same in Python - I know that I can use <code>struct.pack</code> and <code>struct.unpack</code> whenerver I feel the need to convert between list of bytes and an integer, but maybe there's a module that makes such fiddling much easier. </p>
<p>I'd like to have a datatype that would support arithmetics and at the same time, would allow me to mess with the individual bytes. This doesn't sound like a use-case that Python was designed for, but nevertheless, it's a quite common problem.</p>
<p>I took a look into <code>pycrypto</code> codebase, since cryptography is one of the most common use cases for such functionality, but <code>pycrypto</code> implements most of its algorithms in plain C and the much smaller Python part uses two handcrafted methods (<code>long_to_bytes</code> and <code>bytes_to_long</code>) for conversion between the types.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may be able to use <code>ctypes.Union</code>, which is analogous to Unions in C.</p>
<p>I don't have much experience in C, but as I understand Unions allow you to write to a memory location as one type and read it as another type, and vice versa, which seems to fit your use case.</p>
<p><a href="https://docs.python.org/3/library/ctypes.html#structures-and-unions" rel="nofollow noreferrer">https://docs.python.org/3/library/ctypes.html#structures-and-unions</a></p>
<p>Otherwise, if your needs are simpler, you could just convert <code>bytes</code> / <code>bytearray</code> objects from / to integers using the built-in <code>int.to_bytes</code> and <code>int.from_bytes</code> methods.</p>
</div>
<span class="comment-copy">While unions do not directly solve my problem, they would definitely help. Thanks!</span>
