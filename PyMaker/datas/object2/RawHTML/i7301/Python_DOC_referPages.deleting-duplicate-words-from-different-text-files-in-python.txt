<div class="post-text" itemprop="text">
<p>I'm trying to delete same words comparing two different files.</p>
<p>file_list.txt and name.txt are files.</p>
<p>What I want to do is to compare two files and delete a word in file_list.txt</p>
<p>if the same word is in name.txt</p>
<p>For instance,
the file_list.txt has lines below</p>
<pre><code>D:\working\Python
D:\working\perl
D:\working\java
D:\working\C++
</code></pre>
<p>and name.txt has lines below</p>
<pre><code>Python
perl
</code></pre>
<p>then the result should be like this.</p>
<pre><code>D:\working\
D:\working\
D:\working\java
D:\working\C++
</code></pre>
<p>or that also would be a good way if lines would be deleted so only third and fourth lines remains like this.</p>
<pre><code>D:\working\java
D:\working\C++
</code></pre>
<p>I tried to find a solution here in this site but this code is working only when
matching a line, not a word.</p>
<pre><code>import fileinput
with open('file_list.txt') as fin:
    exclude = set(line.rstrip() for line in fin)

for line in fileinput.input('name.txt', inplace=True):
    if line.rstrip() not in exclude:
        print line,
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you already have a set of words to exclude, you could for example form a set of parts of the paths and check if they <a href="https://docs.python.org/3/library/stdtypes.html#set.intersection" rel="nofollow noreferrer">intersect</a>:</p>
<pre><code>from pathlib import Path

with open('name.txt') as fin:
    exclude = set(line.rstrip() for line in fin)

with fileinput.input('file_list.txt', inplace=True) as f:
    for line in f:
        if not exclude.intersection(Path(line.rstrip()).parts):
            print(line, end='')
</code></pre>
<p>This is a Python 3 answer, since you've included the relevant tag. To use pathlib in Python 2, you could use the <a href="https://pypi.python.org/pypi/pathlib2/" rel="nofollow noreferrer">pathlib2</a> backports package. Alternatively you could split using <a href="https://docs.python.org/3/library/os.html#os.sep" rel="nofollow noreferrer"><code>os.sep</code></a>:</p>
<pre><code>import os

...

with fileinput.input('file_list.txt', inplace=True) as f:
    for line in f:
        if not exclude.intersection(line.rstrip().split(os.sep)):
            print(line, end='')
</code></pre>
<p>Note that this will only remove exact matches, not for example:</p>
<pre><code>D:\working\CPython
</code></pre>
<p>given</p>
<pre><code>Python
perl
</code></pre>
<p>If you need a more generic substring match, consult the other answers that use string <a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" rel="nofollow noreferrer">membership tests</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would switch the the order, and create a bag of words that are "bad words". Then, I'd check, for each of my lines, if it contains a bad word.</p>
<p>This is my suggested modification to your code:</p>
<pre><code>with open('name.txt') as names:
    bad_words = set(name.rstrip() for name in names)

with open('file_list.txt') as fin:
    for line in fin:
        if not any(bad_word in line for bad_word in bad_words):
            print(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your condition <code>if line.rstrip() not in exclude</code> is testing whether the entire line is in the list of excluded words. </p>
<p>A simple fix would be to replace this with <code>if any(word in line for word in exclude)</code></p>
<p>If you are guaranteed to have the same format for all lines as in the list you provided, then you could extract the text after the final <code>\</code> and check if it is in your excluded list, which will be more efficient:</p>
<pre><code>if '\' in line and line.split('\')[-1].strip() in exclude:
    ...
</code></pre>
</div>
<span class="comment-copy">You could for example split your paths to their components, form a set of said components, and check if that set intersects with the exclude set.</span>
<span class="comment-copy">Do you have file_list.txt and name.txt mixed up? You'll overwrite name.txt with your current example.</span>
<span class="comment-copy">Ilja Everil√§, my mistake. I currently edit file names. I apologize.</span>
<span class="comment-copy">Thank you for your comment. I used code you answered, but im afraid it's not working. im sorry that im not familier with 'intersection' method</span>
<span class="comment-copy">could you please give another tip or method please?</span>
<span class="comment-copy">Thank you so much!</span>
<span class="comment-copy">results = [] with open('file_list.txt') as fin:     for line in fin:         if not any(bad_word in line for bad_word in bad_words):             results.append(line)  at the end your can either write the results back into new file etc etc.</span>
<span class="comment-copy">@AsadIqbal I agree with your logic, but I tried to make this a simple fix with similar logic to the original answer :)</span>
<span class="comment-copy">If agree then upvote ;)</span>
