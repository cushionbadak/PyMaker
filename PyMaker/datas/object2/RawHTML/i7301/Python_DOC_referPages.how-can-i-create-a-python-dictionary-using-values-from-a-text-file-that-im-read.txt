<div class="post-text" itemprop="text">
<p>I have a file 'peaks_ee.xpk' and I'm trying to create a dictionary in my python code using the values in that file. </p>
<pre><code>j = 0;
contents_atom = []
atom_lines=[]
with open ("peaks_ee.xpk","r") as atomName:
    for name in atomName.readlines():
        float_str = re.findall("\d\.H\d'?", name)
        if (len(float_str)&gt;1):
            j = j+1
            value1 = ('Atom ' + str(j) + ' ' + str(float_str[0]) + ' ' + str(float_str[1]) + '\n')
            atom_lines.insert(-1,value1)                     
tclust_atom = open("tclust.txt","a")
for value1 in atom_lines:
    tclust_atom.write(value1)
tclust_atom.close()
</code></pre>
<p>I'm reading in the file peaks_ee.xpk. This is what peaks_ee.xpk looks like:</p>
<p><img alt="peaks_ee" src="https://i.stack.imgur.com/MDiBE.png"/></p>
<p>This is a sample snippet from peaks_ee.xpk:</p>
<pre><code>label dataset sw sf
1H 1H_2
NOESY_F1eF2e.nv
4807.69238281 4803.07373047
600.402832031 600.402832031
1H.L 1H.P 1H.W 1H.B 1H.E 1H.J 1H.U 1H_2.L 1H_2.P 1H_2.W 1H_2.B 1H_2.E 1H_2.J 1H_2.U vol int stat comment flag0 flag8 flag9
0 {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
1 {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
2 {1.H8} 8.13712 0.05000 0.10000 ++ {0.0} {} {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
3 {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} {1.H8} 8.13712 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
4 {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} {2.H1'} 5.90291 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
5 {2.H1'} 5.90291 0.05000 0.10000 ++ {0.0} {} {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
6 {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
7 {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} {1.H8} 8.13712 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
8 {1.H1'} 5.82020 0.05000 0.10000 ++ {0.0} {} {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
9 {1.H8} 8.13712 0.05000 0.10000 ++ {0.0} {} {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
10 {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} {4.H1'} 5.74125 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
11 {4.H1'} 5.74125 0.05000 0.10000 ++ {0.0} {} {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
12 {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
13 {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
14 {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
15 {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
16 {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} {2.H1'} 5.90291 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
17 {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
18 {2.H1'} 5.90291 0.05000 0.10000 ++ {0.0} {} {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
19 {2.H8} 7.61004 0.05000 0.10000 ++ {0.0} {} {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
20 {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} {4.H1'} 5.74125 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
21 {4.H1'} 5.74125 0.05000 0.10000 ++ {0.0} {} {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
22 {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
23 {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} {3.H6} 7.53261 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
24 {3.H1'} 5.54935 0.05000 0.10000 ++ {0.0} {} {4.H8} 7.49932 0.05000 0.10000 ++ {0.0} {} 0.0 100.0000 0 {} 0 0 0
</code></pre>
<p>I want to make a dictionary which takes in the atom name as the key. The atom name in peaks_ee.xpk are "1.H1'","2.H8", etc.. and I would like the value to be the chemical shifts which are for example "5.82020" and "7.61004" (this is coming from the 0 line in peaks_ee.xpk)
So for example, I would want the dictionary to look like:</p>
<p><code>dict = { "1.H1'":"5.82020", "2.H8":"7.61004"...}</code></p>
<p>But the next line repeats by having 2.H8 and 1.H1' again, so it doesn't need to be added to the dictionary. The line after that (line 2) should add to the dictionary because it has a new atom called 1.H8, so it should be</p>
<p><code>dict = {"1.H1'":"5.82020", "2.H8":"7.61004", "1.H8:8.13712", ...}</code></p>
<p>How can I do this?</p>
<p>Edit: If I have another file "ee_pinkH1.xpk" and I want to read it in and see if the chemical shift values from there are in a certain range, then print out those values, would this be the code?</p>
<p>This is my entire code: </p>
<pre><code>import os
import sys
import re

i = 0;
contents_peak = []
peak_lines=[]
with open ("ee_pinkH1.xpk","r") as peakPPM:
    for PPM in peakPPM.readlines():
        float_num = re.findall("[\s][1-9]{1}\.[0-9]+",PPM)
        if (len(float_num)&gt;1):
            i=i+1
            value = ('Peak ' + str(i) + ' '+  str(float_num[0])+ ' 0.05 ' + str(float_num[1])+ ' 0.05 ' + '\n')
            peak_lines.insert(-1,value)
tclust_peak = open("tclust.txt","w+")
tclust_peak.write('rbclust \n')
for value in peak_lines:
    tclust_peak.write(value)
tclust_peak.close()

j = 0;
contents_atom = []
atom_lines=[]
result = {}
with open ("peaks_ee.xpk","r") as atomName:
    for name in atomName.readlines():
        for match in rex.finditer(line):
            name,shift = match.groups()
        if name not in result: 
            result[name] = float(shift)
            float_str = re.findall("\d\.H\d'?", name)
            if (len(float_str)&gt;1):
                j = j+1
                if peakPPM = 'ee_pinkH1.xpk':
                    if 5&lt;=float_num&lt;=6.25:
                        value1 = ('Atom ' + str(j) + ' ' + str(float_str[0]) + ' ' + str(float_str[1]) + '\n')
                    atom_lines.insert(-1,value1)

tclust_atom = open("tclust.txt","a")
for value1 in atom_lines:
    tclust_atom.write(value1)
tclust_atom.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can extend your regex pattern to include the chemical shift and get what you need in each match.  Put parenthesis around the parts of the pattern you want to keep so they will be captured.</p>
<pre><code>pattern = '''{(\d\.H\d'?)}\s(\d\.\d+)\s'''
rex = re.compile(pattern)
</code></pre>
<p>Iterate over all the matches; the name and shift will be in the <a href="https://docs.python.org/3/library/re.html#re.match.groups" rel="nofollow noreferrer">match.groups()</a> tuple; if the name hasn't been seen yet add it to the dictionary.</p>
<pre><code>with open(filepath) as atom_name:
    data = atom_name.read()
result = {}
for match in rex.finditer(data):
    name, shift = match.groups()
    #print(name,shift)
    if name not in result:
        result[name] = float(shift)
</code></pre>
<p>If the file is too big to read at once, extract the info one line at a time.</p>
<pre><code>with open(filepath) as atom_name:
    for line in atom_name:
        for match in rex.finditer(line):
            name, shift = match.groups()
            #print(name,shift)
            if name not in result:
                result[name] = float(shift)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just check if a key is already in the dictionary before adding it, using <code>in</code>.</p>
<pre><code>dict = {}
for line in atomName.readlines()
    atom_name = line.split()[1][1:-1]
    if (atom_name in dict):
        atom_value = float(line.split()[2])
        dict[atom_name] = atom_value
</code></pre>
<p>Since it looks like you have multiple key-value pairs to check for each row, you can repeat the function in every line like this:</p>
<pre><code>dict = {}
for line in atomName.readlines()
    atom_name = line.split()[1][1:-1]
    if (atom_name in dict):
        atom_value = float(line.split()[2])
        dict[atom_name] = atom_value
    atom_name = line.split()[8][1:-1]
    if (atom_name in dict):
        atom_value = float(line.split()[9])
        dict[atom_name] = atom_value
</code></pre>
<p>Did you mean to edit this post, by the way? I also answered on your older <a href="https://stackoverflow.com/questions/45290620/how-can-i-come-with-a-dictionary-to-get-certain-values-from-a-text-file/45291788#45291788">duplicate</a> post.</p>
</div>
<span class="comment-copy">I'm not judging, but I am curious; is this for a homework assignment, or do you have a real need to process this information?</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation.  <a href="http://stackoverflow.com/help/on-topic">on topic</a> and <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a> apply here. StackOverflow is not a design, coding, research, or tutorial service.</span>
<span class="comment-copy">Hi! I actually have a real need to process the information. I'm currently a biologist and I'm trying to write certain scripts that would better help me with the project I'm working on. I have little to no experience in coding, so I thought I could find some help here.</span>
<span class="comment-copy">In particular, show us your attempt to create a dictionary from the given values.  This input process isn't of real interest here, unless you <i>also</i> have a problem with isolating values.  I suspect that what you truly need is some time working through Python tutorials on the needed topics, rather than Stack Overflow.</span>
<span class="comment-copy">Is this a bad question to ask?</span>
<span class="comment-copy">Thank you, this was very helpful! So, this reads in the file peaks_ee.xpk and creates a dictionary which matches atom names to chemical shifts. If I want to write an if-statement saying that if another file I'm reading (ee_pinkH1.xpk) is opened, then see if the chemical shift from that file is within a certain range, then only print out those atoms. I can show you as an edit in my orignal question</span>
<span class="comment-copy">@user8358234, You should try to solve that problem yourself and post a new question if you have problems.  Try to embrace <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. If you play around with some fake data, like <i>pre-made</i> dictionaries, and concentrate on the process you just described you can figure out how to get that process to work without getting bogged down in all the other details.</span>
<span class="comment-copy">Got it, thank you again! Maybe off-topic question but generally how long would a problem like this take to solve?</span>
<span class="comment-copy">@user8358234 - if you can <i>whittle down</i> your question(s) to it's essence, like  <code>compare two dictionaries and find key/value pairs that are the same</code>; without any <i>application specific</i> info like peaks and chemical shifts and xpk files; then you will probably find an answer here (possibly many answers).</span>
<span class="comment-copy">Thanks!  Yes, I meant to edit this post but I got mixed up. I'm getting an error that says that my index is out of range for  atom_name = line.split()[8][1:-1], do you know why this is happening?</span>
