<div class="post-text" itemprop="text">
<p>The following code throws up a mysterious error that I cannot find the solution to. It works fine when I tested it in a bigger module, so cannot see why this doesn't work:</p>
<p><strong>Code</strong></p>
<pre><code>import csv

with open('studentinfo.txt','a') as fo: #open the file in append mode (add to file, we don't wish to overwrite!)
        studentfileWriter=csv.writer(fo) #fo = file out (this can be called anything you like)
        id=input("Enter Student Id:")
        firstname=input("Enter firstname:")
        surname=input("Enter Surname:")
        test1=input("Enter test1 score:")
        test2=input("Enter test2 score:")
        test3=input("Enter test3 score:")
        studentfileWriter.writerow([id,firstname,surname,"Test1:"+test1,"Test2:"+test2,"Test3:"+test3])
        print("Record has been written to file")


with open("studentinfo.txt", "r") as f:
    reader = csv.reader(f)
    sorted_list = list(reader)  # turn the reader iterator into a list
    sorted_list.sort(key=lambda x: x[2])  # use the third column as a sorting key
    print("\n".join(str(row) for row in sorted_list))  # prettier print
</code></pre>
<p><strong>Error Message</strong></p>
<pre><code>sorted_list.sort(key=lambda x: x[2])  # use the third column as a sorting key
IndexError: list index out of range
</code></pre>
<p>It is worth noting that the code works fine when there are no additions to the file contents. On adding a student to the file, the <strong>SORT</strong> does not work.</p>
<p><strong>Original File contents</strong></p>
<pre><code>001,Joe,Bloggs,Test1:99,Test2:100,Test3:1
002,Ash,Smith,Test1:20,Test2:20,Test3:100
003,Jonathan,Peter,Test1:99,Test2:33,Test3:44
</code></pre>
<p><strong>File Contents on adding a test student:</strong></p>
<pre><code>001,Joe,Bloggs,Test1:99,Test2:100,Test3:1
002,Ash,Smith,Test1:20,Test2:20,Test3:100
003,Jonathan,Peter,Test1:99,Test2:33,Test3:44
006,Mulch,Cart,Test1:99,Test2:22,Test3:11
</code></pre>
<p>The resultant error occurs at this stage (when the new student has been added). The sort function otherwise works fine.</p>
<p><strong>Update and clarification:</strong></p>
<p>For teaching purposes, I need it to work both on repl.it AND IDLE&gt;</p>
<p>If someone could post a repl.it as an answer (With my code above, working), which also works when implemented in IDLE with a txt file, I will accept as an answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason of your issue here is that you're not appending to <code>csv</code> properly.</p>
<p>On Windows, the <code>csv</code> module has a bug/limitation when running Windows. It adds extra blank lines every line (actually it adds an extra <em>carriage return</em> char) if you don't open the file properly. So to fix it:</p>
<p>Python 3:</p>
<pre><code>with open('studentinfo.txt','a',newline='') as fo:
</code></pre>
<p>Python 2:</p>
<pre><code>with open('studentinfo.txt','ab') as fo:
</code></pre>
<p>So <code>csv</code> module is adding an extra <code>\r</code> at the end of your file. And when reading it back again, it issues an empty row.</p>
<p>It works fine in repl.it because they're using a python engine which runs on a Linux sandbox) , but the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">documentation</a> still advises to open the files like I've shown.</p>
<p>(the documentation of the <code>csv</code> module is clear about this, even if it advises to do the same for read mode, and I never had any issue with a simple <code>open("file.csv")</code>)</p>
<p>Also see an old question of mine: <a href="https://stackoverflow.com/questions/38808284/portable-way-to-write-csv-file-in-python-2-or-python-3">portable way to write csv file in python 2 or python 3</a></p>
<p>If there's a double carriage return char at the end of the file, you don't see it (use Notepad++ with "show all symbols" to see a double CRCR character) but <code>csv.reader</code> returns an empty row which fails when <code>sort</code> uses your key function to compare it.</p>
<p>Now, if you want to be robust to that (because other people could edit your database, for instance, using excel csv mode or other terrible stuff):</p>
<p>I would filter out &amp; sort &amp; convert to list at the same time using <code>filter(None,...)</code> which removes "falsy" (i.e empty) rows:</p>
<pre><code>sorted_list = sorted(filter(None,reader),key=lambda x: x[2])
</code></pre>
<p>Of course if a row has only 1 or 2 items, that will also fail. In that case, drop <code>filter</code> because we'd have to write a <code>lambda</code> and it's not worth, in favor of a generator comprehension:</p>
<pre><code>sorted_list = sorted((x for x in reader if len(x)&gt;2),key=lambda x: x[2])
</code></pre>
</div>
<span class="comment-copy">check that you don't have an empty line at the end of the file. A classic.</span>
<span class="comment-copy">you should check the length before access by index</span>
<span class="comment-copy">I did check for empty lines....</span>
<span class="comment-copy">but more to the point, it only doesn't work when I ADD an extra line. So is the fault in the addition of lines code. If so, I cannot see where, because as mentioned, it works fine in a bigger module</span>
<span class="comment-copy">I think this is a pretty elegant solution, or at the very least, Pythonic</span>
<span class="comment-copy">thank you for your feedback :)</span>
<span class="comment-copy">@MissComputing if you apply the fix when appending to your csv file, then you don't even need the filtering.</span>
<span class="comment-copy">I'm afraid I've just tried that:     with open('studentinfo.txt','a',newline="") as fo                Error persists: sorted_list.sort(key=lambda x: x[2])  # use the third column as a sorting key IndexError: list index out of range</span>
<span class="comment-copy">I think you'll see the problem here. With your forked and saved code: <a href="https://repl.it/JbPx/5" rel="nofollow noreferrer">repl.it/JbPx/5</a>   (note that on adding a new entry, it doesn't do so correctly). Note, that it is probably to do with where the cursor is left on saving the txt file? i.e, in this case, it should be on the next line. Try that and it should work, and you can accept this answer!</span>
