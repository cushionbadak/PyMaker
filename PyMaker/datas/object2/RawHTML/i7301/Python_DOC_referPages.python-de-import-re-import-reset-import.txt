<div class="post-text" itemprop="text">
<p>I debug (in PyCharm) a script. I stop at a breakpoint, then I go to the debug console window and from there, I invoke an import line, like this:</p>
<pre><code>import my_util1 from my_utils
</code></pre>
<p>Then I call my_util1. So far, everything is OK.  Then I change something in "my_util1". Now I would like to call the (updated) my_util1 but I cannot: the system (Python? Pycharm?) "sees" only the previous version of my_util1.</p>
<p>Is there a possibility to "reset" (refresh) what I imported earlier, or to "re-import" it, other than exiting PyCharm and restarting the project?</p>
<p>It is not about dynamically changing the actual code that is being debugged. The task that I am looking for is simpler - it would suffice just to undo an 'import' operation, or to reset/clear/refresh all 'imports' at once. Additionally, the action could be done within the debugger window, not in the code window.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/sys.html#sys.modules" rel="nofollow noreferrer">sys.modules</a> can be manipulated to change Python's ideas of what's currently imported. To quote the Python docs:</p>
<blockquote>
<p>This is a dictionary that maps module names to modules which have already been loaded. This can be manipulated to force reloading of modules and other tricks. However, replacing the dictionary will not necessarily work as expected and deleting essential items from the dictionary may cause Python to fail.</p>
</blockquote>
<p>Sample usage:</p>
<pre><code>import sys
import my_util1 from my_utils

# Now sys.modules['my_utils'] exists and my_util1 is a local name.

del sys.modules['my_utils']

# my_util1 still exists as a local name, but Python has "forgotten" the import.

import my_util1 from my_utils
# This re-imports my_utils and binds the new my_util1.
</code></pre>
</div>
<span class="comment-copy">Are you restarting your debugger when you introduce your new code?</span>
<span class="comment-copy">No, I don't. I thought, maybe there is a way to "re-include" a funnction, just like I included it. I imagine it is feasible. Am I wrong?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/23333815/is-there-edit-and-continue-in-pycharm-reload-code-into-running-program-like-i">Is there "Edit and Continue" in PyCharm? Reload code into running program like in Eclipse / PyDev?</a></span>
<span class="comment-copy">Looks like that answer I linked still holds now as that is not done in PyCharm.</span>
<span class="comment-copy">It is close but not the same. The answer you linked is about dynamically changing the actual code that is being debugged without restarting debugger. My question is only about re-including a utility that is not necessarily a part of the code that is being debugged. But thanks anyway, it seems that both possibilities are yet to be developed</span>
<span class="comment-copy">Thanks a lot! it worked.</span>
