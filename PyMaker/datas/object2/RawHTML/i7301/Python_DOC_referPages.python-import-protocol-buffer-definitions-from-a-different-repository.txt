<div class="post-text" itemprop="text">
<p>I have a repository which contains protocol buffer messages and services, originally written for a Golang project. I need to write a Python microservice but I'm not 100% clued up on how Python dependency management works. I need to import the definitions into my new Python project and compile them to Python.</p>
<p>How should I import my protocol buffer definitions repository into my Python project and compile the protobufs for Python? I can't copy the <code>.pb</code> files into my new project as they're shared amongst a number of other projects. </p>
</div>
<div class="post-text" itemprop="text">
<p>Protobufs is installable via <code>pip</code></p>
<pre><code>$ pip install protobuf
</code></pre>
<p>Read <a href="https://docs.python.org/3/installing/index.html" rel="nofollow noreferrer">Installing Python Modules</a> in the documentation if you need help on using pip.</p>
</div>
<span class="comment-copy">Ok cool. How about importing my protobuf definitions from my local repository into my project? That's the thing that's really confusing me.</span>
<span class="comment-copy">Have you read the <a href="https://developers.google.com/protocol-buffers/docs/pythontutorial" rel="nofollow noreferrer">getting started</a>? Also you may want to clarify your question then.</span>
<span class="comment-copy">Hey Jonas, thanks for the link. I've clarified my question. I understand how to run <code>protoc -I=$SRC_DIR --python_out=$DST_DIR $SRC_DIR/addressbook.proto</code> but how do I import modules from a completely different repository and ensure everyone working on the project gets the latest versions?</span>
