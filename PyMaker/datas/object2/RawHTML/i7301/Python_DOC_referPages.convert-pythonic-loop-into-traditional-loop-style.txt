<div class="post-text" itemprop="text">
<p>I am a beginner in Python and kindly I have a question: Given the following:</p>
<pre><code>np.asarray([self.simulate(c) for c in challenges])
</code></pre>
<p>I want to break it down to look familiar in the traditional coding way. Can I say it is equivalent to:</p>
<pre><code>for c in challenges:
    y = self.simulate(c)
    y = np.asarray[y]
</code></pre>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not called "pythonic looping", but <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer"><em>list comprehension</em></a>.</p>
<p>The equivalent would be:</p>
<pre><code>items = []
for c in challenges:
    items.append(self.simulate(c))

nparr = np.asarray(items)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your method is that <strong>you're are not building a list</strong>, such as this list comprehension does. Rather, you are simply indexing one item from <code>np.asarray</code>, and never saving the value. Furthermore, you don't even want to be indexing <code>np.asarray</code>, you want to pass a list to its constructor.</p>
<p>You need to create a temporary list to hold the return value of <code>self.simulate(c)</code> on each iteration of <code>challenges</code> and pass <em>that</em> list to <code>np.asarray</code>:</p>
<pre><code>temp = []
for c in challenges:
    temp.append(self.simulate(c))
array = np.asarray(temp)
</code></pre>
<p>Also, just to let you know, the "pythonic loop" you're referring to is usually called a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer"><em>list comprehension</em></a>. "Pythonic" is just a name us Python community members use to describe something that is idiomatic to the Python language and its ideals.</p>
</div>
<span class="comment-copy">no, you're losing the cumulative effect, and <code>y</code> is overwritten at each iteration. create a list and append to it. Then build your array.</span>
<span class="comment-copy">you will want to predeclare y as a list before the loop and do y.append(self.simulate....) and after the loop for np.asarray(y)</span>
<span class="comment-copy">Thank you very much.</span>
<span class="comment-copy">@Kris if this answered your question, then please mark it as the accepted answer</span>
