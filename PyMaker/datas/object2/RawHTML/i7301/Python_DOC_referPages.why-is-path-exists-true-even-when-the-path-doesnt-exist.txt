<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31292275/why-does-if-foo-follow-the-branch-even-if-the-function-foo-returns-false">Why does “if foo:” follow the branch even if the function foo returns False?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm supposed to ask the user to enter a directory and if the directory doesn't exist, we tell them and then make a directory for them.</p>
<p>This is my code so far. It acts in the same way whether or not the directory whose path is entered actually exists.</p>
<pre><code>import pathlib
from pathlib import Path

def directory():

    p = Path(input("Enter file path: "))

    if p.exists:

        print('Exists')

        return p

    else:

        print('Directory does not exist. Making directory for you.')

        p.mkdir()



directory()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because you have to <em>call</em> the <code>.exists</code> method. See:</p>
<pre><code>&gt;&gt;&gt; p = pathlib.Path("/Users/juan")
&gt;&gt;&gt; p.exists # this just returns the method object
&lt;bound method Path.exists of PosixPath('/Users/juan')&gt;
&gt;&gt;&gt; p.exists()
True
</code></pre>
<p>Method/function objects always evaluate to <code>True</code>, hence why you are always seeing that the path exists.</p>
</div>
<div class="post-text" itemprop="text">
<p>The mkdir you are using is <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir" rel="nofollow noreferrer">this one</a> in <code>pathlib</code> (some of the comments were assuming <code>os.mkdir</code>)</p>
<blockquote>
<p><code>Path.mkdir(mode=0o777, parents=False, exist_ok=False)</code><br/>
  Create a new
  directory at this given path. If mode is given, it is combined with
  the process’ umask value to determine the file mode and access flags.
  If the path already exists, <code>FileExistsError</code> is raised.</p>
<p>If parents is true, any missing parents of this path are created as
  needed; they are created with the default permissions without taking
  mode into account (mimicking the POSIX mkdir -p command).</p>
<p>If parents is false (the default), a missing parent raises
  FileNotFoundError.</p>
<p>If exist_ok is false (the default), <code>FileExistsError</code> is raised if the
  target directory already exists.</p>
<p>If exist_ok is true, <code>FileExistsError</code> exceptions will be ignored (same
  behavior as the POSIX mkdir -p command), but only if the last path
  component is not an existing non-directory file.</p>
<p>Changed in version 3.5: The exist_ok parameter was added.</p>
</blockquote>
<p>It should work fine without parameters if you provide a valid path.</p>
<p>Note if you want to check if it exists, you'll need to call the <code>exists()</code> method - don't forget the <code>()</code></p>
<p>However, it's not a great approach, because someone else could make the directory(or a file) at that path between when you check for it and when you get around to creating it. This is called a race condition.</p>
<p>It's better to wrap the <code>mkdir</code> in a <code>try/except</code> and let the OS tell you if there's a problem. There are a lot more possibilities for exceptions than just already existing. eg.</p>
<pre><code>def directory():

    p = Path(input("Enter file path: "))
    try:
        p.mkdir()
        print('Directory does not exist. Making directory for you.')
    except IOError as ex:
        print('Couldn't create directory', ex)
</code></pre>
</div>
<span class="comment-copy">Eh? A proper answer to "how does mkdir work" would dive into syscalls and filesystem design, but it seems unlikely that that's what you really want to know.</span>
<span class="comment-copy">@CharlesDuffy My bad, I should have worded my title differently.</span>
<span class="comment-copy">@CharlesDuffy Hm, I tried what you said and entered an invalid directory, but for some reason my first half of the code seems to say everything exists. Do you know what's wrong with it?</span>
<span class="comment-copy">Mkdir() has a parameter that you kinda have to pass to it. Python might allow you not to but you definitely need to name the directory to make it.</span>
<span class="comment-copy">@Accelerate, <code>p.exists</code> isn't calling a function named <code>exists</code>; it returns a reference to the function itself; since that reference is neither <code>None</code>, <code>False</code>, <code>0</code>, etc. (and doesn't have a <code>__bool__</code> method to say otherwise), it evaluates as true in a boolean context. (I'm guessing you're coming from the Ruby world, where <code>object.funcname</code> calls the function called <code>funcname</code>? That's not true here; it <i>returns a handle on</i> that function, and you need to call it, as <code>object.funcname()</code>, to actually get it to be invoked).</span>
