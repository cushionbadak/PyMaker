<div class="post-text" itemprop="text">
<p>Say I have this string: </p>
<pre><code>""" 
iris
jonah
car
donut
"""
</code></pre>
<p>How do I add something at the end of all the lines? The amount of lines in the string may vary from time to time.</p>
<p>Something like:</p>
<pre><code>l = duplicate.split('\n')
l[1]+= 'X'
l = '\n'.join(l)
print(l)
</code></pre>
<p>Duplicate being the string's name.</p>
<p>This code only adds 'X' to the end of line 1.</p>
<p>How can I do this for every line?</p>
<p>Desired output: </p>
<pre><code>""" 
irisX
jonahX
carX
donutX
"""
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>First, split as you did <code>duplicate</code> on <code>'\n'</code>:</p>
<pre><code>splitted = duplicate.split('\n')
</code></pre>
<p>Then append <code>'x'</code> at the end of each line with a <code>for</code>, and join these line on <code>'\n'</code>.
I do both operations in a signle line:</p>
<pre><code>"\n".join(line + "x" for line in splitted)
</code></pre>
<p>If you're not familiar with generator expressions, this is somewhat similar to:</p>
<pre><code>withSuffixes = []
for line in l:
    withSuffixes.append(splitted + "x")
"\n".join(withSuffixes)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a>:</p>
<pre><code>addition = 'X'
new_string = duplicate.replace('\n', addition + '\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remove the <code>l[1]+= 'X'</code> line and change <code>l = '\n'.join(l)</code> into <code>l = 'X\n'.join(l)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer">map</a> to apply a function to all elements of the list you obtained using <code>split</code> and then <code>join</code> the elements in a single string:</p>
<pre><code>"\n".join(map(lambda word: word+"x", s.split("\n")))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this, uses list comprehension to add 'X' to each line and then joins it by a newline character.</p>
<pre><code>duplicate = """ 
iris
jonah
car
donut
"""

l = duplicate.split('\n')
l = [line + 'X' for line in l]
final = '\n'.join(l)
</code></pre>
</div>
<span class="comment-copy">Are you telling some like <a href="https://regex101.com/r/ys08Jt/1" rel="nofollow noreferrer">this</a>?</span>
<span class="comment-copy">@Peri461 Can you point out the reference that states that triple quote strings should not be used for anything else than docstrings?</span>
<span class="comment-copy">@Peri461 Citation needed.</span>
<span class="comment-copy">@Peri461 that's just personal taste. triplequotes are very useful when you paste a template of an existing file in your code, or just for that <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> (the real input probably comes from a file)</span>
<span class="comment-copy">Ah yeah, I just found some stuff elsewhere too. I had the wrong idea about using triple quotes</span>
<span class="comment-copy">Thank you, this works perfectly.</span>
<span class="comment-copy">The only answer so far which brings up the <code>replace</code> function in strings.</span>
<span class="comment-copy">This works, kind of, the last line doesn't get an 'x'. :/ But thanks!</span>
<span class="comment-copy">In that case add it manually! Good out of the box thinking for this answer</span>
