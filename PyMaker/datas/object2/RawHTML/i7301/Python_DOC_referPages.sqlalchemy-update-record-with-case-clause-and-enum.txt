<div class="post-text" itemprop="text">
<p>I have defined the following model and <code>enum</code>:</p>
<pre><code>class StatusEnum(enum.Enum):
    NEW = 'NEW'
    PROCESSED = 'PROCESSED'
    IN_PROGRESS = 'IN_PROGRESS'

class RequestLog(Base):
    __tablename__ = 'request_log'

    ...
    status = Column(Enum(StatusEnum))
    ...
</code></pre>
<p>I'm trying to update the record in the following way:</p>
<pre><code>&gt;&gt;&gt; session.query(RequestLog).filter(RequestLog.id.in_([8])).update(
{'status': case(
    [(RequestLog.attempt_done_count == RequestLog.attempt_count - 1, StatusEnum.PROCESSED)],
    else_=StatusEnum.IN_PROGRESS)},
synchronize_session=False)
</code></pre>
<p>During this, I received an error:</p>
<pre><code>sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) can't adapt type 'StatusEnum' [SQL: 'UPDATE request_log SET status=CASE WHEN (request_log.attempt_done_count = request_log.attempt_count - %(attempt_count_1)s) THEN %(param_1)s ELSE %(param_2)s END WHERE request_log.id IN (%(id_1)s)'] [parameters: {'param_2': &lt;StatusEnum.IN_PROGRESS: 'IN_PROGRESS'&gt;, 'attempt_count_1': 1, 'param_1': &lt;StatusEnum.PROCESSED: 'PROCESSED'&gt;, 'id_1': 8}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For a simple Python enum object bind value the <a href="https://github.com/zzzeek/sqlalchemy/blob/master/lib/sqlalchemy/sql/sqltypes.py#L1437" rel="nofollow noreferrer">bind processor of <code>sqltypes.Enum</code></a> is run, which <a href="http://docs.sqlalchemy.org/en/latest/core/type_basics.html#sqlalchemy.types.Enum" rel="nofollow noreferrer">uses the string name of the enum object</a> in question:</p>
<pre><code>In [27]: session.query(RequestLog).filter(RequestLog.id.in_([8])).update(
    ...:     {'status': StatusEnum.NEW},
    ...:     synchronize_session=False)
2017-07-24 15:15:43,848 INFO sqlalchemy.engine.base.Engine UPDATE request_log SET status=%(status)s WHERE request_log.id IN (%(id_1)s)
INFO:sqlalchemy.engine.base.Engine:UPDATE request_log SET status=%(status)s WHERE request_log.id IN (%(id_1)s)
2017-07-24 15:15:43,848 INFO sqlalchemy.engine.base.Engine {'status': 'NEW', 'id_1': 8}
INFO:sqlalchemy.engine.base.Engine:{'status': 'NEW', 'id_1': 8}
Out[27]: 0
</code></pre>
<p>This does not seem to happen recursively for SQL expressions though, so in your <code>case()</code> the enum object bind values are passed to psycopg, which does not know how to handle them. To emulate the behaviour in an SQL expression you can manually pass the <a href="https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes" rel="nofollow noreferrer">names of the enum objects</a>, with an appropriate cast:</p>
<pre><code>In [60]: session.query(RequestLog).filter(RequestLog.id.in_([8])).update(
    ...:     {'status': case(
    ...:         [(true(), StatusEnum.PROCESSED.name)],
    ...:         else_=StatusEnum.IN_PROGRESS.name).cast(RequestLog.status.type)},
    ...:     synchronize_session=False)
2017-07-24 15:40:52,853 INFO sqlalchemy.engine.base.Engine UPDATE request_log SET status=CAST(CASE WHEN true THEN %(param_1)s ELSE %(param_2)s END AS statusenum) WHERE request_log.id IN (%(id_1)s)
INFO:sqlalchemy.engine.base.Engine:UPDATE request_log SET status=CAST(CASE WHEN true THEN %(param_1)s ELSE %(param_2)s END AS statusenum) WHERE request_log.id IN (%(id_1)s)
2017-07-24 15:40:52,853 INFO sqlalchemy.engine.base.Engine {'param_2': 'IN_PROGRESS', 'param_1': 'PROCESSED', 'id_1': 8}
INFO:sqlalchemy.engine.base.Engine:{'param_2': 'IN_PROGRESS', 'param_1': 'PROCESSED', 'id_1': 8}
Out[60]: 0
</code></pre>
<p>It is unsightly and I'm somewhat sure there exists a better method, but for the time being this was the best I could come up with.</p>
</div>
<span class="comment-copy">It'd seem that the query compiler is able to convert enumerated objects, if passed directly as a value, but does not if they're a part of an SQL expression. Could not find any references as to whether or not this is by design, and could not find <a href="https://bitbucket.org/zzzeek/sqlalchemy/issues?q=Enum%20adapt" rel="nofollow noreferrer">any issues</a> on the topic. Consider opening one?</span>
<span class="comment-copy">Check your SQLA version</span>
<span class="comment-copy"><code>&gt;&gt;&gt; sqlalchemy.__version__</code> '1.1.11'</span>
<span class="comment-copy">Sorry but this doesn't work. I had actually try <code>cast</code>, <code>type_coerce</code>, <code>literal</code> and other option but without any success. I was limited in time so I just iterate it in loop. I know it bad approach but it works.</span>
<span class="comment-copy">Any particular error / reason it doesn't work for you? While testing my local Postgres run that happily.</span>
<span class="comment-copy"><code>session.query(RequestLog).filter(RequestLog.id.in_([8])).update({'status': case([(RequestLog.attempt_done_count == RequestLog.attempt_count - 1, StatusEnum.PROCESSED)], else_=StatusEnum.IN_PROGRESS).cast(RequestLog.status.type)}, synchronize_session=False</code> I got the same <code>can't adapt type 'StatusEnum'</code>.</span>
<span class="comment-copy">psql (9.4.9) psycopg2==2.7.1</span>
<span class="comment-copy">I thought it might be that. Instead of passing the enum object, pass for example <code>StatusEnum.PROCESSED.name</code>, which passes the string name of the enum object. That way you manually do what SQLAlchemy does for plain enum object bind values.</span>
