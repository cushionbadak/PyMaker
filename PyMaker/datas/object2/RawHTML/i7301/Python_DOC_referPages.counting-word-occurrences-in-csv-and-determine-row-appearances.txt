<div class="post-text" itemprop="text">
<p>I have a csv file such as the following in one column.  The symbols and numbers are only to show that the file does not just contain text.  I have two objectives:</p>
<ol>
<li>count the number of occurrences of a word;</li>
<li>determine how many rows a word appears in.</li>
</ol>
<hr/>
<pre><code>Stuff
I like apples. Sally likes apples.
Jim has 4 berries.  !@#
John has 2 apples.
</code></pre>
<p>Ideally, the code should return something like:
{apples:  3}
{# of rows: 2}</p>
<p>I've written some code to try and count occurrences, but it isn't running properly (assumedly because of the punctuation).  Also, I do not know how to determine the number of rows a word appears in; this could be as simple as counting the number of unique occurrences in each row, but I'm unsure of how to proceed.  Here is the code I have so far, done in Python 3.6.1:</p>
<pre><code>import csv
my_reader = csv.reader(open('file.csv', encoding = 'utf-8'))
ctr = 0
for record in my_reader:
    if record[0] == 'apples':
        ctr += 1
print(ctr)
</code></pre>
<p>The code merely returns <code>0</code> as the answer.  Help?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are comparing if the <code>row == 'apple</code>, what you need is <code>if 'apple' in row</code>. And to count the occurrences you can use <code>str.count()</code>, for example:</p>
<pre><code>import csv
my_reader = csv.reader(open('file.csv', encoding = 'utf-8'))
ctr = 0
rows = 0
for record in my_reader:
    if 'apples' in record[0]:
        rows += 1
        ctr += record[0].count('apples')

print('apples: {}, rows: {}'.format(ctr, rows))
</code></pre>
<p>This way you will check if the <code>row</code> contains <code>apples</code> then you increment <code>rows</code> by one and increment <code>ctr</code> by number of <code>apples</code> in that <code>row</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import collections
import csv

occurrences = collections.defaultdict(lambda: collections.Counter())
with open('path/to/file') as infile:
    for r,row in enumerate(csv.reader(infile)):
        r = (r,)
        for word in (w for col in row for w in col.split()):
            occurrences[word].update(r)

for word,occs in occurrences.items():
    print("{} appears {} times on {} rows".format(word, sum(occs.values()), len(occs)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know why you are using the csv reader, since you are not using any csv file.</p>
<p>here is a code that will do what you need using less  code.</p>
<pre><code>my_reader = open('file.csv', encoding = 'utf-8')
rows = 0
apples = 0

for record in my_reader:
    if record.count('apple') &gt; 0:
        rows += 1
        apples += record.count('apple')

print('{apples: %d } {# of rows: %d }' % (apples, rows))
</code></pre>
<p>Here is the code running:
<a href="https://repl.it/JkVn/1" rel="nofollow noreferrer">https://repl.it/JkVn/1</a></p>
</div>
<span class="comment-copy"><code>print(record)</code> in the loop and see what's being put in it. You can search for a substring in a string using the <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>str.find()</code></a> method. Alternatively, you can break a string up into separate "words" by using the <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str,split()</code></a> method and use space (<code>' '</code>) as the delimiter.</span>
<span class="comment-copy"><code>print(record)</code> returns the last row of the file as <code>['John has 2 apples.']</code>, i.e. it looks like it ignores the other rows.</span>
<span class="comment-copy">Maybe not. Did you put the <code>print</code> <b>inside</b> the loop? Otherwise you may be just getting the last record displayed.</span>
<span class="comment-copy">The point is that <code>print(record)</code> outputs a <i>whole line</i> not each word in the line. So you either need to look for a substring in each line, or you need to to split each line and look at individual words. Also @martineau: I think you mean <code>str.split(' ')</code>, <code>str,split</code> doesn't look quite right.</span>
<span class="comment-copy">@3D1T0R: Yes, that was a typo on my part, and mostly-yes on the points I was trying to make.</span>
<span class="comment-copy"><code>occurrences = collections.defaultdict(collections.Counter)</code> also worksâ€”less overhead.</span>
<span class="comment-copy">@inspectorG4dget, I tried your solution as well but I'm getting an "Invalid Syntax" error with <code>enumerate</code>.  I'm using OS X if that matters...</span>
<span class="comment-copy">@Mat: Should be <code>for r,row in enumerate(csv.reader(infile)):</code>.</span>
<span class="comment-copy">I am reading in a csv file, so unsure of what you mean.  Also, if I change your argument <code>'r'</code> in the file open line to <code>encoding = 'utf-8'</code>, it runs, thank you for the input; with the <code>'r'</code>, the shell returns a unicodedecode error.</span>
<span class="comment-copy">The file you shared with us is just a simple txt file with a csv extension. A csv file is a spreadsheet file, here is the wikipedia page showing how it's formated <a href="https://en.wikipedia.org/wiki/Comma-separated_values" rel="nofollow noreferrer">en.wikipedia.org/wiki/Comma-separated_values</a>.</span>
<span class="comment-copy">Yes I know what a csv file is, but didn't know how to paste the file without taking a screen shot so I just manually typed the entries from the csv file.  Your code works with the minor edit so no worries.</span>
