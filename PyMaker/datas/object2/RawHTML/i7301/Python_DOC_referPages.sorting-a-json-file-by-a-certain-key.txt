<div class="post-text" itemprop="text">
<p>I am coding in Python. </p>
<p>I have a <code>carV.json</code> file with content</p>
<pre><code>{"CarValue": "59", "ID": "100043" ...}
{"CarValue": "59", "ID": "100013" ...}
...
</code></pre>
<p>How can I sort the file content into</p>
<pre><code>{"CarValue": "59", "ID": "100013" ...}
{"CarValue": "59", "ID": "100043" ...}
...
</code></pre>
<p>using the "ID" key to sort?</p>
<p>I tried different methods to read and perform the sort, but always ended up getting errors like "no sort attribute" or ' "unicode' object has no attribute 'sort'".</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several steps:</p>
<ul>
<li>Read the file using <a href="https://docs.python.org/3/library/json.html#json.load" rel="noreferrer"><em>json.load()</em></a></li>
<li>Sort the list of objects using <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="noreferrer"><em>list.sort()</em></a></li>
<li>Use a <a href="https://docs.python.org/3/glossary.html#term-key-function" rel="noreferrer">key-function</a> to specify the sort field.</li>
<li>Use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="noreferrer"><em>operator.itemgetter()</em></a> to extract the field of interest</li>
<li>Write the data with <a href="https://docs.python.org/3/library/json.html#json.dump" rel="noreferrer"><em>json.dump()</em></a></li>
</ul>
<p>Here's some code to get you started:</p>
<pre><code>import json, operator

s = '''\
[
  {"CarValue": "59", "ID": "100043"},
  {"CarValue": "59", "ID": "100013"}
]
'''

data = json.loads(s)
data.sort(key=operator.itemgetter('ID'))
print(json.dumps(data, indent=2))
</code></pre>
<p>This outputs:</p>
<pre><code>[
  {
    "CarValue": "59",
    "ID": "100013"
  },
  {
    "CarValue": "59",
    "ID": "100043"
  }
]
</code></pre>
<p>For your application, open the input file and use <code>json.load()</code> instead of <code>json.loads()</code>.  Likewise, open a output file and use <code>json.dump()</code> instead of <code>json.dumps()</code>.  You can drop the <em>indent</em> parameter as well, that is just to make the output look nicely formatted.</p>
</div>
<div class="post-text" itemprop="text">
<p>simple and probably faster in case of large data - <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_json.html" rel="nofollow noreferrer">pandas.DataFrame.to_json</a></p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; unsorted = pd.read_json("test.json")
&gt;&gt;&gt; (unsorted.sort_values("ID")).to_json("sorted_test.json")
&gt;&gt;&gt; sorted = unsorted.sort_values("ID")
&gt;&gt;&gt; sorted
   CarValue      ID
1        59  100013
0        59  100043
&gt;&gt;&gt; sorted.to_json("n.JSON")
</code></pre>
</div>
<span class="comment-copy">How about you post things you tried and we will guide you further?</span>
<span class="comment-copy">Json is basically a quasi-dictionary and in python you are playing with the data in dict format.  instead of asking a new question, look up and research existing questions about dictionary sorting.</span>
<span class="comment-copy">post the full path to your "leaf" objects (extended json)</span>
