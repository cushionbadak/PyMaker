<div class="post-text" itemprop="text">
<p>I understand the try/except method. What I'm trying to do is:</p>
<pre><code>try:
    some_func1() #potentially raises error too
    do_something_else() #error was raised
    continue_doing_something_else() #continues here after handling error
except:
    pass
</code></pre>
<p>In the above code, when the error is raised at do_something_else(), the error is handled but then the try statement is exited. </p>
<p>What I want is for python to continue whatever code that is after the line that causes the error. Assuming that an error can happen anywhere in the try statement so I can't just wrap the try/except around do_something_else() itself, is there a way to do this in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want to do (try with restart) is not possible in Python. Lisp can do it (<a href="http://www.gigamonkeys.com/book/beyond-exception-handling-conditions-and-restarts.html" rel="nofollow noreferrer">http://www.gigamonkeys.com/book/beyond-exception-handling-conditions-and-restarts.html</a>), and you can implement it in Scheme using <code>call/cc</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just put the code that you want to do after the possible exception after the except.  You may want to use <code>finally</code> (see <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/errors.html</a> for the documentation):</p>
<pre><code>try:
    some_func1()
    do_something_else() #error was raised
except:
    handle_exception()
finally:
    continue_doing_something_else() #continues here after handling error or if no error occurs
</code></pre>
<p>if <code>continue_doing_something_else()</code> can also throw exceptions, then put that in a try/except too:</p>
<pre><code>try:
    some_func1()
    do_something_else() #error was raised
except:
    handle_exception1()
try:
    continue_doing_something_else()
except:
    handle_exception2()
finally:
    any_cleanup()
</code></pre>
<p>as a general rule, your exception handling should be kept as small in scope as possible while remaining sensible, consider excepting only the 'expected' exceptions and not all of them (e.g. <code>except OSError:</code> when attempting to open files)</p>
</div>
<span class="comment-copy">Include only <code>do_something_else</code> in your <code>try: ... except: </code> block</span>
<span class="comment-copy">You catch all exceptions, and then pass. Python is just doing what you're telling it.  (Complete example with traceback if you want more help).</span>
<span class="comment-copy">or after it.  <code>try: &lt;code that can throw&gt; except: &lt;handle exception&gt;  do_other_stuff()</code></span>
<span class="comment-copy">I think what you are looking for is <code>finally</code></span>
