<div class="post-text" itemprop="text">
<p>I'm reading data through seral port of my computer using python pyserial package. The source is an FPGA board.</p>
<p>The source sending 24 pieces of bytes  accordingly and then there is an idle period. This process repeats itself. So to find out the first byte of 24 tranmission there is a 0 byte which is a kind of marking byte. So when I got this marking byte I want to start recording the next 24 bytes and repeat this for the next 24 bytes real time. I can identify the zeroth byte but stuck for the next step. </p>
<p>You can see the current code below...</p>
<p>Thanks in advance</p>
<pre><code>import serial
port = serial.Serial('/dev/ttyUSB1', 115200)
file = open("my_file.txt","a")
i=0
j=0
while True:   
    i=i+1
    print "     i --&gt; % d " % (i)

    raw_data = ord(port.read())

    if raw_data==127:
        j=j+1
        print('-----',j,'------------------------------')
    else :  
        print(raw_data,a)
        file.write(str(raw_data) + "\n")            

file.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Question</strong>: ...how to store data after some certain value</p>
</blockquote>
<p>Aggregate the 24 Bytes into <code>list</code>, for instance:</p>
<pre><code># Get in Sync with Byte == 127
while True:
    raw_data = ord(port.read())
    if raw_data == 127:
        break


record = []
while True:
    raw_data = ord(port.read())

    if raw_data != 127:
        record.append(raw_data)
    else:
        # Write Record
        print('record[{}]:{}'.format(len(record), record))
        # Empty Record List
        record = []
</code></pre>
<blockquote>
<p>Python Â» 3.6.2 Documentation: <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer">class list([iterable])</a></p>
<pre><code>Lists may be constructed in several ways:

    Using a pair of square brackets to denote the empty list: []
    Using square brackets, separating items with commas: [a], [a, b, c]
    Using a list comprehension: [x for x in iterable]
    Using the type constructor: list() or list(iterable)
</code></pre>
</blockquote>
<p><strong><em>Tested with Python: 3.4.2</em></strong></p>
</div>
<span class="comment-copy">Didn't see how you <i><b>identify the zeroth byte</b></i>, <code>if raw_data==127:</code> isn't Zero?</span>
<span class="comment-copy">127 is the indicator or zeroth bit tells hte usefull 24 byte is coming after this. " 1 byte indicator + 24 byte "</span>
