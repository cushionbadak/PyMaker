<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/533905/get-the-cartesian-product-of-a-series-of-lists">Get the cartesian product of a series of lists?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>List:</p>
<pre><code>['a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 
 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7',
 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7',
 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7',
 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7',
 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7',
 'g0', 'g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7',
 'h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7']
</code></pre>
<p>I've tried using itertools but have not been successful,</p>
<p>My code currently to generate the above list is:</p>
<pre><code>dmi_list = []
for i in range(ord('a'), ord('i')):
  for j in range(0,8):
     dmi_list.append(chr(i)+str(j))

print(dmi_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple list comprehension would be my choice:</p>
<pre><code>&gt;&gt;&gt; [x + y for x in 'abcdefgh' for y in '01234567']
['a0',
 'a1',
 'a2',
 'a3',
 ...
 'h7']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Indeed there is. You can use <a href="https://docs.python.org/2/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a>:</p>
<pre><code>import itertools
l = [''.join(k) for k in itertools.product('abcdefgh', '01234567')]

print(l)
</code></pre>
<p>This prints:</p>
<pre><code>['a0',
 'a1',
 'a2',
 'a3',
 'a4',
 'a5',
 'a6',
 'a7',
 ...
 'h4',
 'h5',
 'h6',
 'h7']
</code></pre>
<p>A nested list comp is fine if it's just a product b/w 2 lists. For more, you'd find your self wanting to use this instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would simply write</p>
<pre><code> [letter + number for letter in 'abcdefgh' for number in '01234567']
</code></pre>
</div>
<span class="comment-copy">The corresponding itertools function would probably be <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a>, but i usually would keep your original code.</span>
<span class="comment-copy">Thanks @wim, this does the job without using itertools. Awesome :)</span>
<span class="comment-copy">Awesome, this is exactly what I was looking for. :)</span>
<span class="comment-copy">@deathbycode Glad I could help. You can also drop the <code>list(...)</code>. Works just the same.</span>
