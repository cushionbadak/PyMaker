<div class="post-text" itemprop="text">
<p>I use RegEx &amp; a String to get if this file name &amp; similars to it exists in os.listdir('.') or not, If exists print('Yes'), If not print('No'), But If the file name even doesn't exists in my listdir('.') It shows me YES.</p>
<p>How should I check that ?</p>
<pre><code>search = str(args[0])
pattern = re.compile('.*%s.*\.pdf' %search, re.I)
if filter(pattern.search, os.listdir('.')):
    print('Yes ...')
else:
    print('No ...')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>filter</code> on Python 3 is lazy, it doesn't return a <code>list</code>, it returns a generator, which is always "truthy", whether or not it would produce items (it doesn't know if it would until it's run out). If you want to check if it got any hits, the most efficient way would be to try to pull an item from it. On Python 3, you'd use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer">two-arg <code>next</code></a> to do this lazily (so you stop when you get a hit and don't look further):</p>
<pre><code>if next(filter(pattern.search, os.listdir('.')), False):
</code></pre>
<p>If you need the complete <code>list</code> a la Py2, you'd just wrap it in the <code>list</code> constructor:</p>
<pre><code>matches = list(filter(pattern.search, os.listdir('.')))
</code></pre>
<p>On Python 2, your existing code should work as written.</p>
<p>I'll note, what you're doing would usually be handled much better with <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">the <code>glob</code> module</a>; I'd strongly recommend taking a look at it.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative to your code (not considering additional requirements you might not have listed):</p>
<pre><code>from pathlib import Path

search = str(args[0]).lower()

file_cnt = sum([search in file.stem.lower() for file in Path('.').glob('*.pdf')])
if file_cnt &gt; 0:
    print('Yes')
else:
    print('No')
</code></pre>
</div>
<span class="comment-copy">Could you explain what your regex match is supposed to be exactly?</span>
<span class="comment-copy">@idjaw I get it from user, It contains file names &amp; I need to upload similar file names for user, For example user writes "Biology", &amp; program should return Biology, My Biology, Campbell Biology &amp; ...</span>
<span class="comment-copy">You tagged this with all Python versions, but your code would work as written in Py2. I assume the problem is on Py3?</span>
<span class="comment-copy">@ShadowRanger Sorry, I edited that ...</span>
<span class="comment-copy">Thanks My Friend, It worked ..., As soon as possible I can, I will accept your answer :) (7 Min)</span>
<span class="comment-copy">A friend told me re is more thorough that glob, Is it right?</span>
<span class="comment-copy">@AliBahaari: Admittedly, in your case you want case insensitivity, which <code>glob</code> doesn't handle natively (you'd have to manually use character classes, or use <code>fnmatch</code> directly after case folding the pattern and file names). But your existing code does have issues because of how flexible <code>re</code> is; you need to use a trailing anchor (<code>$</code>), or you'll match <code>stuffwithpattern.pdf.randomotherstuff.txt</code> too for instance.</span>
<span class="comment-copy">Thank you very much for your explanation ...</span>
<span class="comment-copy">Also Thank you ...</span>
