<div class="post-text" itemprop="text">
<p>I'm looking for a way to let end users process some data from the user interface. A scripting-engine with a syntax similar to Excel would do.</p>
<p><strong>Example:</strong></p>
<p>The input would be a <code>dict</code> which contains the data (which is basically variable name for the script) and a <code>string</code> with the rule.</p>
<p><code>input = {'a':1, 'b':2, 'c':'add'}</code></p>
<p><code>rule_example_1 = "if(c == 'add',a+b,if(c=='sub',a-b,raise ERROR))"'</code></p>
<p><code>rule_example_2 = "if c == 'add' return a+b else if c == 'sub' return a-b else raise error()"</code></p>
<p>The script must be extendable with own functions. Also maybe some definition of types which can be used by users.</p>
<p><strong>Use case:</strong></p>
<p>Basically the users have some 2 dimensional data in their account (product details). And using some scripting rules I would like to let them change product data.</p>
<p>For example if a user wants to exclude all products starting with letter <code>X</code>, they would create a rule:</p>
<p><code>set('product_status', if(starts_with(product_title,'X'), 'skip', ''))</code></p>
<p>or if the user wants to raise the price by 20% if the product price is lower then 10:</p>
<p><code>set('product_price', if(product_price &lt; 10, product_price*1.20, product_price)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want something more user-friendly, perhaps you could try Blockly:
<a href="https://developers.google.com/blockly/" rel="nofollow noreferrer">https://developers.google.com/blockly/</a></p>
<p>You can easily integrate it with your application and customize it, creating your own blocks to serve your user's needs.</p>
<p>You may also want to take a look at Mesh:
<a href="https://github.com/chrispsn/mesh" rel="nofollow noreferrer">https://github.com/chrispsn/mesh</a></p>
<p>Or perhaps something simpler:
<a href="https://pypi.python.org/pypi/simpleeval" rel="nofollow noreferrer">https://pypi.python.org/pypi/simpleeval</a></p>
<p>Or, even simpler (but less safe), you can use <code>ast.literal_eval()</code>; this one is part of Python's standard library:
<a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">https://docs.python.org/3/library/ast.html#ast.literal_eval</a></p>
<p>Also this other question may help you:
<a href="https://stackoverflow.com/questions/3582403/safe-expression-parser-in-python">Safe expression parser in Python</a></p>
</div>
<span class="comment-copy">Maybe... Python?</span>
<span class="comment-copy">@ddofborg: Can you provide some constraints? Basically: why <i>not</i> just let your end users write Python code?</span>
<span class="comment-copy">Perhaps some additional details on what the application is about, what the scripts are supposed to do and what kind of users will be using it should give us a better idea on how to better help you.</span>
<span class="comment-copy">I added two more examples. Basically 'one liner' syntax like Google Sheets or Excel would be perfect. Maybe minor changes.</span>
<span class="comment-copy">I think SimpleEval (<a href="https://github.com/danthedeckie/simpleeval" rel="nofollow noreferrer">github.com/danthedeckie/simpleeval</a>) will do the work!</span>
