<div class="post-text" itemprop="text">
<p>I'm trying to create a bootable USB drive and need to format the USB into FAT32 so that I can extract all the files into it.</p>
<p>Is it possible to format a USB drive using pure python? Can I format it into FAT32 without the use of external commands?</p>
<p>I know that in bash I can do this: <code>sudo dd if=/dev/zero of=/dev/sdb bs=4k &amp;&amp; sync</code> to format the USB drive, how can I do similar using just python?</p>
</div>
<div class="post-text" itemprop="text">
<p>The following is a close approximation to the <code>dd</code> command you gave in the question.  I'm not sure if there's a way to force a <code>sync</code> after completion.</p>
<pre><code>import io
block = b'\0' * 4096
with io.FileIO('/dev/sdb', 'w') as f:
    while f.write(block):
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> to inline bash code</p>
</div>
<span class="comment-copy">If you're using windows: <a href="https://bytes.com/topic/python/answers/537724-formatting-device-script-windows" rel="nofollow noreferrer">bytes.com/topic/python/answers/â€¦</a></span>
<span class="comment-copy">@inspectorG4dget What about Linux?</span>
<span class="comment-copy">If you need <code>sudo</code> for <code>dd</code> to work, you'll need <code>sudo</code> on your Python program as well. Is that OK?</span>
<span class="comment-copy">@MarkRansom Yessir, I figured I'd need sudo for this anyways</span>
<span class="comment-copy">Am I the only one to note the inconsistency in the question? You mention that you need to <b>FORMAT</b> a USB drive, but then talk about <b>filling the device with 0's</b>!!! That is NOT formatting a drive!? Formatting a drive means running something like 'mkfs.ext4' under Linux, writing several filesystem structures to the block device to allow later storing folders and files...</span>
<span class="comment-copy">Can you explain this a little bit? I really appreciate this also, but where did you get the numbers and what does <code>io.File</code> do?</span>
<span class="comment-copy">Also wouldn't doing <code>b"{}".format(block)</code> to turn each item into <code>\x00</code> work better..?</span>
<span class="comment-copy">@owasp if you look at the <a href="https://docs.python.org/3/library/io.html#raw-file-i-o" rel="nofollow noreferrer">documentation for <code>io.FileIO</code></a> you can see that it's a raw unbuffered file interface, which is what you need. <code>4096</code> is the equivalent of <code>4k</code>, it's <code>4*1024</code> where <code>1024</code> is the closest binary number to <code>1000</code>. There's no need to use <code>format</code>, <code>block</code> is already a byte string which is exactly what <code>write</code> needs.</span>
<span class="comment-copy">Okay I get it, thank you very much!</span>
<span class="comment-copy">I have a question for you pertaining to this, lets assume I have a drive that is 1.75GB, would 4096 still suffice in the size of the block?</span>
<span class="comment-copy">I don't want to subprocess, I want it in pure python</span>
