<div class="post-text" itemprop="text">
<p>In <strong>python</strong> would it be possible to write a program which reads the  data from a .txt file and turn that data into lists, make calculations, etc... </p>
<p>For example if you had a .txt file that read:</p>
<pre>
LINE1| 2011     18.5  11.8  19.7  31.6  26.6  37.3  37.4  24.6  34.0  71.3  46.3  28.4

LINE2| 2012     55.2  92.0  87.5  81.0  83.5  79.6 115.1 112.7 115.7 112.7 136.2 127.4
</pre>
<p>Could you compute the average for the numbers assigned to each year?
(Note: I'm using version 3.4)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can open file and read lines and then split them and convert them to list. You can use numpy to calculate the mean. Hope the following code helps </p>
<pre><code>import numpy as np
text_f = open('file.txt').readlines()
text_f.remove('\n')
arrays= []
for i in text_f:
    new = i[6:]
    arrays.append(list(map(float, new.split())))
avrgs = {}
for i in arrays:
    avrgs[i[0]] = np.mean(i[1:])
avrgs
</code></pre>
<p>Output:</p>
<pre><code>{2011.0: 32.291666666666664, 2012.0: 99.88333333333334}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First you need to read the txt file and format properly by stripping any newline or whitespace characters:</p>
<pre><code>with open(name.txt) as f:
    c = f.readlines()
c = [i.strip() for i in c]
</code></pre>
<p>Right now,</p>
<pre><code>c = ['2011 18.5 11.8 19.7 31.6 26.6 37.3 37.4 24.6 34.0 71.3 46.3 28.4', '2012 55.2 92.0 87.5 81.0 83.5 79.6 115.1 112.7 115.7 112.7 136.2 127.4']
</code></pre>
<p>Now, that you have each line into the a list, you now have to split each string within the list into a list and convert the strings into floats:</p>
<pre><code>for i in range(len(c)):
     c[i] = map(float, c[i].split(" "))
</code></pre>
<p>Now, we have</p>
<pre><code>c = [[2011.0, 18.5, 11.8, 19.7, 31.6, 26.6, 37.3, 37.4, 24.6, 34.0, 71.3, 46.3, 28.4], [2012.0, 55.2, 92.0, 87.5, 81.0, 83.5, 79.6, 115.1, 112.7, 115.7, 112.7, 136.2, 127.4]]
</code></pre>
<p>Now, you know that the first index of each sublist in <code>c</code> is the year. The best data structure to store this is a dictionary where the key is the year and the value is the average.</p>
<pre><code>year_avg = dict()
for arr in c:
    year_avg[arr[0]] = sum(arr[1:]) / len(arr[1:])
</code></pre>
<p>And you now have:</p>
<pre><code>year_avg = {2011.0: 32.291666666666664, 2012.0: 99.88333333333334}
</code></pre>
<p>For reference, the entire code:</p>
<pre><code>with open("file_name.txt") as f:                     # Open the file
    c = f.readlines()                                # Read all the files into a variable
c = [i.strip() for i in c]                           # Format the string properly
for i in range(len(c)):
    c[i] = map(float, c[i].split(" "))               # Split each line into list and convert values to floats
year_avg = dict()                                    # Initialize dictionary to store averages
for arr in c:                                        # Iterate over the list
    year_avg[arr[0]] = sum(arr[1:]) / len(arr[1:])   # We know that the first index is the year (becomes the key) and find the average from the remaining numbers.
print year_avg
</code></pre>
</div>
<span class="comment-copy">Do you have that line1 and line2 strings in you text file?</span>
<span class="comment-copy">Yes, it's possible.</span>
<span class="comment-copy">The Python documentation explains how to read files and also how to split a line, turn it in array, etc.  <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a> <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">Even with some elementary effort, you should have been able to answer this question yourself.</span>
