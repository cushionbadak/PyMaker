<div class="post-text" itemprop="text">
<p>In my case, I want to define a custom class (called WordTuple) which is a subclass of the tuple class. The elements of this custom tuple must all be of another custom class(called Word).</p>
<p>I know that this question (<a href="https://stackoverflow.com/questions/32766836/how-to-make-an-iterable-class-in-python-in-which-only-a-specific-type-is-allowed">How to make an iterable class in Python in which only a specific type is allowed to be the element?</a>) is similar, but the answer is not what I am looking for, nor it is very clear to me.</p>
<pre><code>class Word(str):
    pass

class WordTuple(tuple):
    # Here whatever is necessary for the elements of this particular tuple
    # to be all members of the class 'Word'
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because a tuple is immutable you only need to validate the objects when creating the tuple. You can do so in a custom <a href="https://docs.python.org/3/reference/datamodel.html#object.__new__" rel="nofollow noreferrer"><code>__new__</code> method</a>:</p>
<pre><code>class WordTuple(tuple):
    def __new__(cls, *objs):
        if not all(isinstance(o, Word) for o in objs):
            raise TypeError('WordTuple can only contain Word instances')
        return super().__new__(cls, objs)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; WordTuple('a', 'b')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 4, in __new__
TypeError: WordTuple can only contain Word instances
&gt;&gt;&gt; WordTuple(Word('a'), Word('b'))
('a', 'b')
</code></pre>
</div>
<span class="comment-copy">Can't you enforce it in the <b>init</b> ? Each time this class is initialized you can verify the data types using isinstance</span>
<span class="comment-copy">@orizis The standard built-in immutable types get initialized in the <code>__new__</code> method rather than in <code>__init__</code>. There's more info about this <a href="https://stackoverflow.com/questions/35452178/what-can-init-do-that-new-cannot">here</a></span>
<span class="comment-copy">@PM2Ring Cool, good to know. Thanks for alerting me!</span>
