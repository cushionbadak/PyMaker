<div class="post-text" itemprop="text">
<p>My dataframe </p>
<pre><code>index   Dates        Hours_played
0       2014-11-06   11
1       2014-12-06   4
2       2015-09-06   5
3       2015-97-06   5
</code></pre>
<p>Then, I set Dates as index:</p>
<pre><code>             Hours_played
Dates        
2014-11-06   11
2014-12-06   4
2015-09-06   5
2015-97-06   5
</code></pre>
<p><strong>The Problem:</strong>  When I tried to create one box plot for each year found in index, I got both plots on the same grid.</p>
<pre><code>df.loc['2014']['Hours_played'].plot.box(ylim=(0,200))
df.loc['2015']['Hours_played'].plot.box(ylim=(0,200))
</code></pre>
<p><a href="https://i.stack.imgur.com/6SpNh.png" rel="nofollow noreferrer"><img alt="Box plot" src="https://i.stack.imgur.com/6SpNh.png"/></a> </p>
<p>I tried the following but the plot comes up empty:</p>
<pre><code>data_2015 = df.loc['2015']['Hours_played']
data_2016 = df.loc['2016']['Hours_played']
data_to_plot = [data_2015, data_2016]

mpl_fig = plt.figure()
ax = mpl_fig.add_subplot(111)
ax.boxplot(data_to_plot)
ax.set_ylim(0,300)
</code></pre>
<p><a href="https://i.stack.imgur.com/XxavO.png" rel="nofollow noreferrer"><img alt="boxplot2" src="https://i.stack.imgur.com/XxavO.png"/></a></p>
<p><strong>Is it possible to have them in the same grid, one by the other?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution will be grouping by year first and then making boxplot:</p>
<pre><code>import io

import matplotlib.pyplot as plt
import pandas as pd

# Re-create your sample data
s = """Dates,Hours_played
2014-11-06,11
2014-12-06,4
2015-09-06,5
2015-07-06,5"""
df = pd.read_table(io.StringIO(s), sep=',', index_col=0, parse_dates=True)

# The following codes are the answer relevant to your question.
df.groupby(df.index.year).boxplot()
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/hwYxa.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hwYxa.png"/></a></p>
<p>Your second method ends up with an empty plot because <code>matplotlib</code> fail to recognize <code>pandas.DataFrame</code> correctly. Try use Numpy-array representation:</p>
<pre><code>import io

import matplotlib.pyplot as plt
import pandas as pd

# Re-create your sample data
s = """Dates,Hours_played
2014-11-06,11
2014-12-06,4
2015-09-06,5
2015-07-06,5"""
df = pd.read_table(io.StringIO(s), sep=',', index_col=0, parse_dates=True)

# The following codes are the answer relevant to your question.    
data_2014 = df[df.index.year == 2014].as_matrix()
data_2015 = df[df.index.year == 2015].as_matrix()
data_to_plot = [data_2014, data_2015]

mpl_fig = plt.figure()
ax = mpl_fig.add_subplot(111)
ax.boxplot(data_to_plot)

plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/zbnj1.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/zbnj1.png"/></a></p>
<p>To use subplots, you will need to plot them one by one:</p>
<pre><code>import io

import matplotlib.pyplot as plt
import pandas as pd

# Re-create your sample data
s = """Dates,Hours_played
2014-11-06,11
2014-12-06,4
2015-09-06,5
2015-07-06,5"""
df = pd.read_table(io.StringIO(s), sep=',', parse_dates=[0])
df['Year'] = df.Dates.dt.year
df.set_index(['Year', 'Dates'], inplace=True)

# The following codes are the answer relevant to your question.
mpl_fig = plt.figure()
ax1 = mpl_fig.add_subplot(121)
ax1.boxplot(df.loc[2014]['Hours_played'], labels=[2014])
ax2 = mpl_fig.add_subplot(122)
ax2.boxplot(df.loc[2015]['Hours_played'], labels=[2015])

plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/zWSLs.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/zWSLs.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Let's reshape the data with Years in columns and <code>boxplot</code>:</p>
<pre><code>df.set_index(['Dates',df.Dates.dt.year])['Hours_played'].unstack().boxplot()
</code></pre>
<p><a href="https://i.stack.imgur.com/CacEO.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/CacEO.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to put all the boxes in the same plot, you can do something like this:</p>
<pre><code>import matplotlib.pyplot as plt

def setBoxColors(bp, num_plots):
    color = ['red', 'blue', 'green']
    for idx in range(num_plots):
        plt.setp(bp['boxes'][idx],        color=color[idx])
        plt.setp(bp['caps'][2*idx],       color=color[idx])
        plt.setp(bp['caps'][2*idx+1],     color=color[idx])
        plt.setp(bp['whiskers'][2*idx],   color=color[idx])
        plt.setp(bp['whiskers'][2*idx+1], color=color[idx])
        plt.setp(bp['fliers'][2*idx],     color=color[idx])
        plt.setp(bp['fliers'][2*idx+1],   color=color[idx])
        plt.setp(bp['medians'][idx],      color=color[idx])

# Some fake data to plot
A = [[1, 2, 5,]]
B = [[3, 4, 5]]
C = [[1, 7, 10]]

fig = plt.figure()
ax = plt.axes()
plt.hold(True)

bp = plt.boxplot(A, positions = [2], widths = 0.6, patch_artist=True)
setBoxColors(bp, 1)

bp = plt.boxplot(B, positions = [6], widths = 0.6, patch_artist=True)
setBoxColors(bp, 1)

bp = plt.boxplot(C, positions = [10], widths = 0.6, patch_artist=True)
setBoxColors(bp, 1)

# set axes limits and labels
plt.xlim(0,12)
plt.ylim(0,12)
ax.set_xticklabels(['A', 'B', 'C'])
ax.set_xticks([2, 6, 10])

# draw temporary legend
hB, = plt.plot([1,1],'r-')
plt.legend((hB, ),('Type1', ))
hB.set_visible(False)

plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the help of Scott Boston, Y. Luo, and yuhow5566, I was able to devise an interesting answer. From Scott, I learned that it's better not to index the Dates (keep them a regular column) for this type of boxplot; and from Y. Luo, I learned how to create a new column, while isolating the year from a datetime value.</p>
<pre><code>df['Year'] = s['Dates'].dt.year

df.boxplot(column='Hours_played', by='Year', figsize=(9,9))
</code></pre>
<p><a href="https://i.stack.imgur.com/0q9b0.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/0q9b0.jpg"/></a></p>
</div>
<span class="comment-copy">Thank you. I appreciate it</span>
<span class="comment-copy">what do you mean by s = """Dates,Hours_played 2014-11-06,11 2014-12-06,4 2015-09-06,5 2015-07-06,5""" How do I do this?</span>
<span class="comment-copy">I have a dataframe with thousands of rows. I can't assign everything to S as a string. I'm confused, I'm sorry.</span>
<span class="comment-copy">It's just a way to declare <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">long string</a>. The first part is just for re-creating your sample <code>df</code> in the <a href="https://stackoverflow.com/help/mcve">MCVE</a>. Otherwise, the example is incomplete and others cannot verify it. You should ignore that, understand the key about plotting from a <code>df</code> and adapt the plotting part into your codes according to your specific <code>df</code>. I updated my answer with comments showing where is the relevant answer.</span>
<span class="comment-copy">Just want to point out, @scott-boston also provided a nice answer. Depends on your <code>df</code>, you might also want to adapt that.</span>
<span class="comment-copy">Thank you. I appreciate it</span>
<span class="comment-copy">A real nice answer!</span>
<span class="comment-copy">THank you @yuhow5566 this is helpful.</span>
