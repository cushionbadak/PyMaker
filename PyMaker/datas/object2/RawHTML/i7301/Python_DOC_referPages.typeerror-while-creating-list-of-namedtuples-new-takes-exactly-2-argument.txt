<div class="post-text" itemprop="text">
<p>What I'm trying to accomplish is to create list, containing namedtuples, all that in loop. My code:</p>
<pre><code>from collections import namedtuple

def selectMatch(self):
    match = namedtuple('ssid', 'quality')
    matches = []
    for point in self.discoverMatch():
            print(point)
            if point.ssid.startswith(''):
                    matches.append(match(point.ssid, point.quality))
    print([x.ssid for x in matches])
    return matches
</code></pre>
<p>And as a result, I'm getting TypeError mentioned in the title. My goal is to save namedtuples to list, but it says that I'm giving to much arguments and now I'm slightly confused.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields" rel="nofollow noreferrer"><code>namedtuple</code></a> takes a name and list of field names:</p>
<pre><code>collections.namedtuple(typename, field_names, *, verbose=False, rename=False, module=None)
</code></pre>
<p>so you want <code>match = namedtuple('match', ['ssid', 'quality'])</code>.</p>
</div>
<span class="comment-copy">Can you make the code <i>reproducible</i>?</span>
<span class="comment-copy">Could you please provide full traceback into your question with an edit</span>
<span class="comment-copy"><code>namedtuple</code> is a <i>class factory</i>. Please see the the <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">docs</a>. It seems totally crazy to create a new <code>match</code> class every time in your method. But anyway, the first argument is the <i>name</i> of the class, and the second argument defines the fields of the tuple. You have your tuple a single field, <code>quality</code>, but then when you try to create a <code>match</code> object with two fields.</span>
<span class="comment-copy">after the first string, you should use a sequence, in <code>match = namedtuple('ssid', 'quality')</code></span>
<span class="comment-copy">@PRMoureu you can use a string, as well, <code>match = namedtuple('match', 'ssid quality')</code></span>
