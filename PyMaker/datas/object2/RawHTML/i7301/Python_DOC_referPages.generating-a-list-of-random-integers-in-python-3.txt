<div class="post-text" itemprop="text">
<p>I am getting a IndexError: list assignment index out of range error when trying to run this program. My index appears to be fine (0 through 8) and I don't think .append is needed since the equal sign assign the random value each pass. What am I missing?</p>
<pre><code>import random

#The main function.
def main():

  #Welcome message.
  print("Welcome to the lottery number generator program!")
  print()

  #Explain what the program does.
  print("Note: This program will randomly generate a 7 digit lottery number and display it to the screen. ")
  print("________________________________________________________________________________________________")
  print()
  print()

  #Call the generateNumbers function and store its returned list in variable lotteryNumbers.
  lotteryNumbers = generateNumbers()

  #Call the printLottery function and pass the lotteryNumbers list as argument.
  printLottery(lotteryNumbers)


#The generateNumbers function generated 7 random digits between 0  and 9 stores them in a list and returns the list.
def generateNumbers():

  #A list variable to hold empty list.
  lotteryNumbers = []

  #Declare and set loop counter to 0.
  index = 0

  for index in range (0,8):
    lotteryNumbers[index] = random.randrange(0,10)
    index += 1
  return lotteryNumbers


def printLottery(lotteryNumbers):
  print("Here are the 7 lucky numbers: {}".format(lotteryNumbers))

#End main
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By initializing an list with </p>
<pre><code>lotteryNumbers = []
</code></pre>
<p>it has exactly 0 elements. But with</p>
<pre><code>lotteryNumbers[index] = random.randrange(0,10)
</code></pre>
<p>You try to access the 1st, the 2nd, .. , nth element of the list. Your code does not insert elements to the list. To avoid this there are serveral approaches.</p>
<ul>
<li>Create a dict instead of a list. A dict actually creates nonexistent elements: <code>lotteryNumbers = {}</code></li>
<li>Preinitialize the list with 8 elements:

<ul>
<li><code>lotteryNumbers = [0,0,0,0,0,0,0,0]</code></li>
<li>or <code>lotteryNumbers = list(range(8))</code></li>
</ul></li>
<li>But the most preferable variant should be to use append:
 <code>lotteryNumbers.append(random.randrange(0,10))</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Lists are not like arrays in other languages!</p>
<p><code>lotteryNumbers</code> is initialised as an empty list. There is nothing in it. Its length is zero. You need to add <code>random.randrange(0, 10)</code> to the empty list. This is done through <code>.append()</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>  for index in range (0,8):
    lotteryNumbers[index] = random.randrange(0,10)
    index += 1
</code></pre>
<p>This doesn't do what you're hoping it does. You can't assign a value to a position that doesn't currently exist in a list, and as that list is currently empty, that means you can't do this at all.</p>
<p>what you want is:</p>
<pre><code>for index in range (0,8):
    lotteryNumbers.append(random.randrange(0,10))
</code></pre>
<p>You don't need <code>index += 1</code> because python handles this for you int the <code>for</code> loop.</p>
<hr/>
<p>by the way, lotteries are generally picked without replacement, so don't you actually want to sample?</p>
<p><a href="https://docs.python.org/2/library/random.html#random.sample" rel="nofollow noreferrer">https://docs.python.org/2/library/random.html#random.sample</a></p>
<p>eg:</p>
<pre><code>lotteryNumbers = random.sample(xrange(10), 7)
</code></pre>
<p>although it is also normal for lotteries to have far more than 10 options!</p>
</div>
<div class="post-text" itemprop="text">
<p>You should <code>append</code> the new values:</p>
<pre><code>def generateNumbers():

  #A list variable to hold empty list.
  lotteryNumbers = []

  #Declare and set loop counter to 0.
  index = 0

  for _ in range (0,8):
    lotteryNumbers.append(random.randrange(0,10))
  return lotteryNumbers
</code></pre>
<p>or build the list up to the size you want:</p>
<pre><code>def generateNumbers():

  #A list variable to hold empty list.
  lotteryNumbers = [0]*8

  #Declare and set loop counter to 0.
  index = 0

  for index in range (0,8):
    lotteryNumbers[index] = random.randrange(0,10)
  return lotteryNumbers
</code></pre>
<p>Also notice you dont neet to increment the index, you are already iterating through the range.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to access non-existing elements of the list.</p>
<p>To build your list, you can either keep appending to it with <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer"><code>list.append()</code></a>:</p>
<pre><code>lotteryNumbers = []
for _ in range(8):
    lotteryNumbers.append(random.randrange(0,10))
</code></pre>
<p>or, as it's common in Python, use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>lotteryNumbers = [random.randrange(0,10) for _ in range(8)]
</code></pre>
<p>which is usually more efficient and succinct.</p>
</div>
<div class="post-text" itemprop="text">
<p>I thinks you try add element to array like</p>
<pre><code>lotteryNumbers = [0,0,0,0,0,0,0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works. Make an array with the numbers you want and select randomly one item. Then, delete that item and decrease the length with one (using pop). In this example the numbers 1 till 7</p>
<pre><code>lotteryNumbers = []
rij = []
for i in range(aantal):
    rij.append(i)
for j in range(7):
    r = random.randrange(0,7-j)
    k = rij.pop(r)
    lotteryNumbers.append(k+1)
print(lotteryNumbers)
</code></pre>
</div>
<span class="comment-copy">You can't assign a list dinamically, you need to preallocate if you want to access it's elements via slicing. You need to use append</span>
<span class="comment-copy">The <code>index += 1</code> is not necessary.</span>
<span class="comment-copy">on the contrary: append is needed!</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/16655089/python-random-numbers-into-a-list/16655135" title="python random numbers into a list">stackoverflow.com/questions/16655089/â€¦</a> for other solutions</span>
<span class="comment-copy">also, this allows the lottery numbers <code>[1, 1, 1, 1, 1, 1, 1]</code>, which I think is strange, shouldn't you be picking without replacement?</span>
