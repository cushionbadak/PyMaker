<div class="post-text" itemprop="text">
<pre><code>import sys

try:
    raise Exception('foobar')
except:
    info = sys.exc_info()

print(type(e[2])) # &lt;class 'traceback'&gt;
help(traceback) # NameError: name 'traceback' is not defined
</code></pre>
<p>What exactly is the type of the traceback objects that Python uses for exception reporting?</p>
<p>The docs on <a href="https://docs.python.org/3/library/sys.html#sys.exc_info" rel="nofollow noreferrer">sys.exc_info</a> mention the Reference Manual, but while I've found plenty of information on how to manipulate traceback instances, I want to be able to access the type (class) itself.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>traceback</code> object is an instance of <a href="https://docs.python.org/3/library/types.html#types.TracebackType" rel="noreferrer"><code>TracebackType</code></a> present under types module.</p>
<blockquote>
<p><code>types.TracebackType</code></p>
<p>The type of <code>traceback</code> objects such as found in <code>sys.exc_info()[2]</code>.</p>
</blockquote>
<p></p>
<pre><code>&gt;&gt;&gt; from types import TracebackType    
&gt;&gt;&gt; isinstance(info[2], TracebackType)
True    
&gt;&gt;&gt; TracebackType
&lt;class 'traceback'&gt;
</code></pre>
<hr/>
<p>As <a href="https://stackoverflow.com/questions/45337853/what-is-the-type-of-traceback-objects-in-python/45337916#comment77637991_45337916">pointed out by @user2357112</a> the name <code>TracebackType</code> is basically an alias to the internal <code>traceback</code> type and is <a href="https://github.com/python/cpython/blob/3.6/Lib/types.py#L41" rel="noreferrer">set by raising an exception</a> in types module. The actual <a href="https://github.com/python/cpython/blob/master/Python/traceback.c#L75" rel="noreferrer"><code>traceback</code> type</a> can be found in CPython code.</p>
</div>
<span class="comment-copy">Just because there is a class wiht the <code>__name__ == 'traceback'</code> doesn't mean that in the global namespace, <code>traceback</code> refers to that class.</span>
<span class="comment-copy">What are you even planning to do with this type? Having access to the type object doesn't get you much.</span>
<span class="comment-copy">You're already accessing the type with <code>type(e[2])</code>, by the way.</span>
<span class="comment-copy">Type annotations and curiosity.</span>
<span class="comment-copy">It should be noted that this isn't the "true" name of the type - there's no "true" name - and it's not the place where the type is defined. <code>types.py</code> just raises an exception to get the traceback and sets <code>TracebackType = type(tb)</code>.</span>
<span class="comment-copy">@user2357112 Updated.</span>
