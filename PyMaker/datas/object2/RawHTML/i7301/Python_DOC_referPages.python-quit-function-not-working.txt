<div class="post-text" itemprop="text">
<p>I am using the following check in one of my scripts:</p>
<pre><code>if os.path.exists(FolderPath) == False:
    print FolderPath, 'Path does not exist, ending script.'
    quit()
if os.path.isfile(os.path.join(FolderPath,GILTS)) == False:
    print os.path.join(FolderPath,GILTS), ' file does not exist, ending script.'
    quit()    
df_gilts = pd.read_csv(os.path.join(FolderPath,GILTS))
</code></pre>
<p>Stangely enough, when the path/file doesn't exist, I obtain the following print:</p>
<pre><code>  IOError: File G:\On-shoring Project\mCPPI\Reconciliation Tool\Reconciliation Tool Project\3. Python\BootStrap\BBG\2017-07-16\RAW_gilts.csv does not exist
</code></pre>
<p>Tells me that it's continuing on with the script even though I've added a quit(). Can anyone tell me why?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Per <a href="https://docs.python.org/3/library/constants.html?highlight=quit#constants-added-by-the-site-module" rel="nofollow noreferrer">the documentation</a>, <code>quit()</code> (like other functions added by the <code>site</code> module) is intended only for interactive use.</p>
<p>Thus, the solution is twofold:</p>
<ul>
<li><p>Check whether <code>os.path.exists(os.path.join(FolderPath, GILTS))</code>, not just <code>os.path.exists(FolderPath)</code>, to ensure that the code attempting to exit the interpreter is actually reached.</p></li>
<li><p>Use <code>sys.exit(1)</code> (after <code>import sys</code> in your module header, of course) to halt the interpreter with an exit status indicating an error from a script.</p></li>
</ul>
<p>That said, you might consider just using exception handling:</p>
<pre><code>from __future__ import print_function

path = os.path.join(FolderPath, GILTS)
try:
    df_gilts = pd.read_csv(path)
except IOError:
    print('I/O error reading CSV at %s' % (path,), file=sys.stderr)
    sys.exit(1)
</code></pre>
</div>
<span class="comment-copy">You're checking <code>FolderPath</code> exists, but then accessing <code>FolderPath</code> with <code>FILTS</code> on the end - does the full path exist?</span>
<span class="comment-copy"><code>quit()</code> is not a built in Python function. Have you defined it somewhere?</span>
<span class="comment-copy">@DanielRoseman yes it is</span>
<span class="comment-copy"><code>quit()</code> is added by the site module.  It shouldn't be used for a script.  See the docs: <a href="https://docs.python.org/3/library/constants.html?highlight=quit#quit" rel="nofollow noreferrer">docs.python.org/3/library/constants.html?highlight=quit#quit</a>.  I'd use <code>sys.exit()</code></span>
<span class="comment-copy">That assumption appears to be wrong.</span>
<span class="comment-copy">Thanks for the answer, but I'm still seeing the entire log:  "UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.   warn("To exit: use 'exit', 'quit', or Ctrl-D.", stacklevel=1) An exception has occurred, use %tb to see the full traceback.  SystemExit: 1"  returned in my spyder console. I was looking for a way for it to just end with the print message intended but will accept this answer and move on.</span>
<span class="comment-copy">Ahh! That's specifically a Spyder (or, more generally, an IDE) thing. Users directly running the code at an interactive interpreter won't see a SystemExit exception.</span>
