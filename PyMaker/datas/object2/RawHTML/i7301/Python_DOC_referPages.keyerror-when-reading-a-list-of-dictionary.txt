<div class="post-text" itemprop="text">
<p>I have the following list of dictionary:</p>
<pre><code>  mydata = [
  {
     "created_time": "2017-07-22T19:54:03+0000",
     "message": "AAAAAAA",
     "id": "1892434161030557_1945301442410495"
  },
  {
     "created_time": "2017-07-16T12:55:37+0000",
     "message": "YYYYYYYYY",
     "id": "1892434161030557_1941921866081786"
  },
  {
     "created_time": "2017-07-16T12:43:44+0000",
     "message": "PPPPPPPPPPPPP",
     "id": "1892434161030557_1941917586082214"
  },
  {
     "created_time": "2017-05-12T05:42:58+0000",
     "message": "m",
     "id": "1892434161030557_1906744326266207"
  }
 ]
</code></pre>
<p>When I print the created_time it works fine:</p>
<pre><code>for x in mydata:
    print(x['created_time'])
</code></pre>
<p>I get correct output for the <strong>created_time</strong> and <strong>id</strong> values. But when I try to read the <strong>message</strong> value, I get <strong>KeyError: 'message'</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you know all the possible keys in your data and do not want to use <code>try...except</code> then you can check the key if it exists.</p>
<p>One more variation would be print the key as EMPTY in else part of all if statements so you would know how many dataset didnt have any value for the expected keys.</p>
<pre><code>mydata = [
  {
     "created_time": "2017-07-22T19:54:03+0000",
     "message": "AAAAAAA",
     "id": "1892434161030557_1945301442410495"
  },
  {
     "message": "YYYYYYYYY",
     "id": "1892434161030557_1941921866081786"
  },
  {
     "created_time": "2017-07-16T12:43:44+0000",
     "message": "PPPPPPPPPPPPP",
     "id": "1892434161030557_1941917586082214"
  },
  {
     "created_time": "2017-05-12T05:42:58+0000",
     "message": "m",
     "id": "1892434161030557_1906744326266207"
  }
 ]

for x in mydata:
    if ('created_time' in x):
        print("created_time : " + x['created_time'])
    if ('message' in x):
        print("message      : "+ x['message'])
    if ('id' in x):
        print("id           : " + x['id'])
    print("\n")
</code></pre>
<p>Sample Run</p>
<pre><code>created_time : 2017-07-22T19:54:03+0000
message      : AAAAAAA
id           : 1892434161030557_1945301442410495


message      : YYYYYYYYY
id           : 1892434161030557_1941921866081786


created_time : 2017-07-16T12:43:44+0000
message      : PPPPPPPPPPPPP
id           : 1892434161030557_1941917586082214


created_time : 2017-05-12T05:42:58+0000
message      : m
id           : 1892434161030557_1906744326266207
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given your example data, this simple operation should just work. I guess that <code>message</code> is not there for some instances.</p>
<p>You can more easily debug this like this:</p>
<pre><code>for x in mydata:
    try:
        msg = x['message']
    except KeyError:
        raise ValueError('No "message" key in "%s"' % (x, ))
    print(msg)
</code></pre>
<p>This will give you the whole instance of <code>x</code> that has no <code>message</code>.</p>
</div>
<span class="comment-copy">Can you show the line that throws the exception? It's clear what you are asking, but you could have a typo in there.</span>
<span class="comment-copy">Are you sure that the <code>x</code> even <i>has</i> a "message" key?</span>
<span class="comment-copy">@IgnacioVazquez-Abrams By looking at OP's data, it looks he has reasons to be sure of that.</span>
<span class="comment-copy">Obviously this is dummy data. The actual data would be larger, with issues and missing keys in all probability.</span>
<span class="comment-copy">I didn't post the complete list. In my complete list some dictionaries have <b>message</b> value and others don't have it and others have <b>story</b> instead of <b>message</b>. Should this be the cause?</span>
<span class="comment-copy">When you know your data and are checking for the data before accessing it in an object, why is solution down voted?</span>
<span class="comment-copy">There is no <code>try...catch</code> or <code>if..then</code> in Python. Your code changes the logic of the program by making what once was a fatal error a silent error. Your code pays the extra cost of checking for membership three times for every row, while we can expect that check to be redundant in almost all cases.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Error Handling</a></span>
<span class="comment-copy">Why are you raising a ValueError here?</span>
<span class="comment-copy">I indeed thought of editing the answer and re-raising a KeyError. However given that the "message"-key is always expected to be there, we raise a ValueError indicating that an invalid value for <code>mydata</code> was passed: The error is with the value.</span>
<span class="comment-copy">I want to work with all the instance that have <b>message</b> in it.  @JRG solution is a good one, since it checks if the value exists and by this ways it bypass the <b>KeyError</b>.</span>
<span class="comment-copy">Then you should still use a <code>try: ... except: continue</code> or performance will hurt.</span>
