<div class="post-text" itemprop="text">
<p>I'm trying to define a decorator that just adds one keyword argument to the decorated function <code>f</code>. <code>f</code> might have any combination of (positional, keyword, etc) parameters. I tried this:</p>
<pre class="lang-py prettyprint-override"><code>def capture_wrap(f):
    def captured(name=False, *args, **kwargs):
        """name can be False, True or str. if str, then use it as a name."""
        print (name, f, args, kwargs)
        inner = f(*args, **kwargs)
        if name is False:
            return inner
        elif name is True:
            return capture(inner)
        else:
            return capture(inner, name=name)
    return captured
</code></pre>
<p>If I try to use it with a function that accepts a single argument:</p>
<pre class="lang-py prettyprint-override"><code>@capture_wrap
def any_of(s):
    """s must be in the right format.
    See https://docs.python.org/3/library/re.html#regular-expression-syntax ."""
    return wrap('[', Dinant(s, escape=False), ']')
</code></pre>
<pre class="lang-py prettyprint-override"><code>0-9A-Fa-f &lt;function any_of at 0x7fb370548a60&gt; () {}
Traceback (most recent call last):
File "./dinant.py", line 222, in &lt;module&gt;
    hex = one_or_more(any_of('0-9A-Fa-f'))
File "./dinant.py", line 116, in captured
    inner = f(*args, **kwargs)
TypeError: any_of() missing 1 required positional argument: 's'
</code></pre>
<p>I get an error because the any argument becomes the <code>name</code> parameter in <code>captured()</code>. How should I do it correctly?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can make <code>name</code> a <a href="https://www.python.org/dev/peps/pep-3102/" rel="nofollow noreferrer">keyword-only argument</a> to achieve this. Currently the issue is that it is a positional argument and when you're doing <code>any_of('foo')</code> the <code>'foo'</code> is being passed to <code>name</code> argument.</p>
<pre><code>def capture_wrap(f):
    def captured(*args, name=False, **kwargs):
        """name can be False, True or str. if str, then use it as a name."""
        print(name, f, args, kwargs)
        inner = f(*args, **kwargs)
        return inner
    return captured


@capture_wrap
def any_of(s1, s2, s3, **kwargs):
    return "I do something"
</code></pre>
<p><strong>Demo:</strong></p>
<pre><code>&gt;&gt;&gt; any_of('0-9A-Fa-f', 1, 2)
False &lt;function any_of at 0x1041daea0&gt; ('0-9A-Fa-f', 1, 2) {}
'I do something'

&gt;&gt;&gt; any_of('0-9A-Fa-f', 2, 3, a=1, b=2, name='some-name')
some-name &lt;function any_of at 0x1041daea0&gt; ('0-9A-Fa-f', 2, 3) {'a': 1, 'b': 2}
'I do something'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just pass name where you are calling the function f
inner = f(name, *args, **kwargs)</p>
</div>
<span class="comment-copy">Could you explain what "capture()" is and what you really are trying to achieve (=&gt; the problem you're trying to solve with this - currently non working - solution) ?</span>
<span class="comment-copy">Can you please clear what you are passing in s and why do you need it? This will help to give more clear answer</span>
<span class="comment-copy">This only works in Python 3.</span>
<span class="comment-copy">@MosesKoledoye They are using print() as function in their code and its output is not a tuple. Also the error message <code>TypeError: any_of() missing 1 required positional argument: 's'</code> is Python 3 specific.</span>
<span class="comment-copy">This is how I actually ended up doing it. I simply forgot/didn't know this was valid syntax.</span>
<span class="comment-copy">@MarcosDione It was introduced in Python 3 only.</span>
<span class="comment-copy">Well, at this point, almost 9 years after its release, we should call py3 plain Python, and call py2 "Python legacy" :)</span>
