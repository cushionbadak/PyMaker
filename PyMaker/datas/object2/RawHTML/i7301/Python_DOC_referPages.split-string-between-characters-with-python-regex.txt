<div class="post-text" itemprop="text">
<p>I'm trying to split the string:</p>
<pre><code>&gt; s = Ladegårdsvej 8B7100 Vejle
</code></pre>
<p>with a regex into:</p>
<pre><code>[street,zip,city] = ["Ladegårdsvej 8B", "7100", "Vejle"]
</code></pre>
<p><code>s</code> varies a lot, the only certain part is that there are always 4 digits in the zip and a whitespace afterwards. My idea is thus to "match from the right" on 4 digits and a whitespace to indicate that the string should be split at that point in the string.</p>
<p>Currently I'm able to get <code>street</code> and <code>city</code> like this:</p>
<pre><code>&gt; print re.split(re.compile(r"[0-9]{4}\s"), s)
["Ladegårdsvej 8B", "Vejle"]
</code></pre>
<p>How would I go about splitting <code>s</code> as desired; in particular, how to do it in the middle of the string between the number in <code>street</code> and <code>zip</code>? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.split</code>, but make the four digits a capturing group:</p>
<pre><code>&gt;&gt;&gt; s = "Ladegårdsvej 8B7100 Vejle"
&gt;&gt;&gt; re.split(r"(\d{4}) ", s)
['Ladegårdsvej 8B', '7100', 'Vejle']
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/re.html#re.split" rel="noreferrer">documentation</a> (emphasis mine)</p>
<blockquote>
<p>Split string by the occurrences of pattern. <strong>If capturing parentheses are used in pattern, then the text of all groups in the pattern are also returned as part of the resulting list.</strong> If maxsplit is nonzero, at most maxsplit splits occur, and the remainder of the string is returned as the final element of the list.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Once you have street, getting zip is trivial:</p>
<pre><code>zip = s[len(street):len(street)+4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is the solution for your problem.</p>
<pre><code># -*- coding: utf-8 -*-
import re
st="Ladegårdsvej 8B7100 Vejle"
reg=r'([0-9]{4})'
rep=re.split(reg,st)
print rep
</code></pre>
<p>Solution for other test cases as provided by <a href="https://stackoverflow.com/users/2454932/rasmusp-963">RasmusP_963</a> sir.</p>
<pre><code># -*- coding: utf-8 -*-
import re
st="Birkevej 8371900 Roskilde"
print re.split(r"([0-9]{4}) ",st)
</code></pre>
</div>
<span class="comment-copy">Would all strings have the same overall format as that string, cause then you could just split it on whitespace cause that seems to be a delimiter between the three</span>
<span class="comment-copy">@Professor_Joykill: There is no whitespace between street &amp; zip.</span>
<span class="comment-copy">@Professor_Joykill please note that OP wants to put <code>7100</code> rather than <code>8B7100</code> into <code>zip</code>.</span>
<span class="comment-copy">See <a href="https://ideone.com/dmyo6b" rel="nofollow noreferrer">ideone.com/dmyo6b</a>, you may match and <i>capture</i> the parts.</span>
<span class="comment-copy">That won't work, because there could be a <code>street</code> address with long house number without letters (e.g. <code>Birkevej 8371900 Roskilde</code>), so I need to include the whitespace afterwards to ensure it matches on the last four numbers (the <code>zip</code>).</span>
