<div class="post-text" itemprop="text">
<p>Here is a list of steps to reproduce this problem:</p>
<pre><code>chaudhary@recsys $ ipython3
Python 3.5.2 (default, Nov 17 2016, 17:05:23)
Type 'copyright', 'credits' or 'license' for more information
IPython 6.1.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: !pwd
/tmp/test

In [2]: !ls -ltr /tmp | grep test
drwxrwxr-x 2 chaudhary recsys     4096 Jul 20 12:01 test

In [3]: import os

In [4]: os.makedirs('foo/bar/baz', mode=0o775)

In [5]: !tree -pugh
.
└── [drwxr-xr-x chaudhary recsys   4.0K]  foo
    └── [drwxr-xr-x chaudhary recsys   4.0K]  bar
        └── [drwxr-xr-x chaudhary recsys   4.0K]  baz

3 directories, 0 files
</code></pre>
<p>Ideally, all these folders should have group write permission <code>drwxrwxr-x</code>. I know that I can work around this as mentioned in <a href="https://stackoverflow.com/a/45206556/2670370">this question's answer</a>.</p>
<p>I would like to know if there is something I'm missing that might be the reason why group permission is wrong.</p>
<p><strong>UPDATE:</strong> </p>
<p>Test snippet shown above was done on Linux (Ubuntu 16.04). I was able to reproduce this in Mac also.</p>
<pre><code>chaudhary@MacBookProoo $ mkdir /tmp/test; chmod 775 /tmp/test; ls -l /tmp/ | grep test; cd /tmp/test; python3 -c 'import os; os.makedirs("foo/bar/baz", 0o775)'; ls -l /tmp/test; ls -l /tmp/test/foo; ls -l /tmp/test/foo/bar

drwxrwxr-x 2 chaudhary wheel      68 Jul 20 12:22 test
total 0
drwxr-xr-x 3 chaudhary wheel 102 Jul 20 12:22 foo
total 0
drwxr-xr-x 3 chaudhary wheel 102 Jul 20 12:22 bar
total 0
drwxr-xr-x 2 chaudhary wheel 68 Jul 20 12:22 baz
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python honors <code>umask</code> and sometimes ignores the mode entirely:</p>
<blockquote>
<p>On some systems, mode is ignored. Where it is used, the current umask
  value is first masked out. If bits other than the last 9 (i.e. the
  last 3 digits of the octal representation of the mode) are set, their
  meaning is platform-dependent. On some platforms, they are ignored and
  you should call chmod() explicitly to set them.</p>
</blockquote>
<p>from: <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">https://docs.python.org/3/library/os.html</a></p>
<p>More about umask <a href="https://askubuntu.com/q/44542/259638">here</a></p>
<p>So one way to go is to set the umask not to interfere with your desired permissions (for your running process - also be sure to reset them afterward): </p>
<pre><code>demo@demo:~/demo$ mkdir demo0
demo@demo:~/demo$ cat test.py
import os

os.makedirs("demo1/demo2/demo3",0775)

demo@demo:~/demo$ python test.py
demo@demo:~/demo$ ls -lah
total 24K
drwxr-xr-x 4 demo demo 4.0K Jul 20 06:52 .
drwxr-xr-x 6 demo demo 4.0K Jul 20 06:52 ..
drwxr-xr-x 2 demo demo 4.0K Jul 20 06:52 demo0
drwxr-xr-x 3 demo demo 4.0K Jul 20 06:52 demo1
-rw-r--r-- 1 demo demo  118 Jul 20 06:52 test2.py
-rw-r--r-- 1 demo demo   50 Jul 20 06:46 test.py
demo@demo:~/demo$ cat test2.py
import os

try:
    oldumask = os.umask(0)
    os.makedirs("demo2/demo3/demo4",0775)
finally:
    os.umask(oldumask)

demo@demo:~/demo$ python test2.py
demo@demo:~/demo$ ls -lah
total 28K
drwxr-xr-x 5 demo demo 4.0K Jul 20 06:52 .
drwxr-xr-x 6 demo demo 4.0K Jul 20 06:52 ..
drwxr-xr-x 2 demo demo 4.0K Jul 20 06:52 demo0
drwxr-xr-x 3 demo demo 4.0K Jul 20 06:52 demo1
drwxrwxr-x 3 demo demo 4.0K Jul 20 06:52 demo2
-rw-r--r-- 1 demo demo  118 Jul 20 06:52 test2.py
-rw-r--r-- 1 demo demo   50 Jul 20 06:46 test.py
demo@demo:~/demo$ ls -lah demo2/
total 12K
drwxrwxr-x 3 demo demo 4.0K Jul 20 06:52 .
drwxr-xr-x 5 demo demo 4.0K Jul 20 06:52 ..
drwxrwxr-x 3 demo demo 4.0K Jul 20 06:52 demo3
demo@demo:~/demo$
</code></pre>
<p>Of course, if you need those permissions all the time, you can set the umask on os-level. </p>
</div>
<div class="post-text" itemprop="text">
<p>In the doc it says in some systems the mode parameter is ignored or not well interpreted:</p>
<blockquote>
<p>On some systems, mode is ignored. Where it is used, the current umask
  value is first masked out. If bits other than the last 9 (i.e. the
  last 3 digits of the octal representation of the mode) are set, their
  meaning is platform-dependent. On some platforms, they are ignored and
  you should call chmod() explicitly to set them.</p>
</blockquote>
<p>And it suggest you to use chmod() instead</p>
<p>Source <a href="https://docs.python.org/3/library/os.html#os.mkdir" rel="nofollow noreferrer">https://docs.python.org/3/library/os.html#os.mkdir</a></p>
</div>
<span class="comment-copy">@Shubham thanks for corrections ;)</span>
