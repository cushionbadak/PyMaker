<div class="post-text" itemprop="text">
<p>I have a csv file that looks like:</p>
<pre><code>a, b, c, d
1, 1, 2, 2
2, 3, 3, 4
2, 2, 1, 1
</code></pre>
<p>I'd like to load this csv file into a dictionary so that I can get</p>
<pre><code>dict['a'] = 1, 2, 2
dict['b'] = 1, 3, 2
dict['c'] = 2, 3, 1
dict['d'] = 2, 4, 1
</code></pre>
<p>Is there a way to do this right at the csv reader level?</p>
<p>I got this far:</p>
<pre><code>    import csv

    headers = {}

    with open('file.csv') as csvfile:

        reader = csv.reader(csvfile, delimiter = ',')
        count = 0;
        for row in reader:
            if count == 0:
                for field in row:
                    if field not in headers.keys():
                        headers[field] = []
            count +=1   
</code></pre>
<p>This loads the header and now I'd like to load each value in.    </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <code>DictReader</code>.
However,
if the input file contains spaces around the field values,
they need to be stripped manually.</p>
<pre><code>import csv

with open('file.csv') as csvfile:
    reader = csv.DictReader(csvfile, skipinitialspace=True)
    d = {name: [] for name in reader.fieldnames}
    for row in reader:
        for name in reader.fieldnames:
            d[name].append(row[name])
    print(d)
</code></pre>
<p>Thanks to <a href="https://stackoverflow.com/users/3579910/temporalwolf">@temporalwolf</a> for the <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace" rel="nofollow noreferrer"><code>Dialect.skipinitialspace</code></a> trick!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this, simply using the builtin <code>csv</code> module and dictionary comprehension:</p>
<pre><code>import csv

data = list(csv.reader(open('file.csv')))

final_data = {i[0]:map(int, i[1:]) for i in zip(*data)}
</code></pre>
<p>Output:</p>
<pre><code>{'a': [1, 2, 2], ' b': [1, 3, 2], ' d': [2, 4, 1], ' c': [2, 3, 1]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try using pandas:</p>
<pre><code>import pandas as pd

df = pd.read_csv('YOUR_PATH_HERE')

your_dict = df.to_dict(orient='list')
</code></pre>
<p>output:</p>
<pre><code>{'a': [1, 2, 2], ' b': [1, 3, 2], ' c': [2, 3, 1], ' d': [2, 4, 1]}
</code></pre>
<p>In addition, Pandas Dataframes could be a really good tool instead of using a dictionary. Here is the documentaion on <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer"><code>to dict</code></a></p>
</div>
<span class="comment-copy">use a DictReader object <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">docs.python.org/3/library/csv.html#csv.DictReader</a></span>
<span class="comment-copy">or you can use <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace" rel="nofollow noreferrer"><code>skipinitialspace=True</code></a> and not do all that manually: "When True, whitespace immediately following the delimiter is ignored."</span>
<span class="comment-copy">@TemporalWolf awesome tip, thank you!</span>
<span class="comment-copy">You don't even have to make a dialect for it: <code>csv.DictReader(csvfile, skipinitialspace=True)</code> is sufficient :)</span>
<span class="comment-copy">@TemporalWolf nice nice nice</span>
<span class="comment-copy">You want OP to import a 3rd-party library just to read a CSV file?</span>
<span class="comment-copy">look at the readability behind pandas... very clear and understandable. I also suggested that this can be a powerful tool beyond reading csv files. MY assumption is if there is a reason behind putting the csv into a dictionary, I'm willing to bet that a DataFrame object can handle the data wrangling in a much easier/faster way. The OP did not state the reason behind his need, therefore I am assuming there is more than "i need a dicitonary of my file"</span>
