<div class="post-text" itemprop="text">
<p>Below is the sample of my XML. There are many such similar cases.</p>
<pre><code>&lt;suite name="regression_1"&gt;
&lt;test name="Login check" id="s1-t1"&gt;
    &lt;tc name="Valid Username &amp; Password"&gt;
        &lt;message level="INFO" timestamp="20170726 14:25:39.778"&gt;Return: None&lt;/message&gt;
        &lt;status starttime="20170726 14:25:39.740" status="PASS"/&gt;
    &lt;/tc&gt;
    &lt;tc name="Invalid Username or Password"&gt;
        &lt;message level="INFO" timestamp="20170726 14:25:39.779"&gt;Return error&lt;/message&gt;
        &lt;tc name="Invalid password" library="avi_lib"&gt;
            &lt;message level="TRACE" timestamp="20170726 14:25:47.769"&gt;Return error&lt;/message&gt;
            &lt;status starttime="20170726 14:25:39.779" status="FAIL"/&gt;
        &lt;/tc&gt;
        &lt;status starttime="20170726 14:25:39.738" status="FAIL"/&gt;
    &lt;/tc&gt;
 &lt;status status="FAIL"/&gt;
&lt;/test&gt;

&lt;/suite&gt;
</code></pre>
<p>My requirement:
Pass through the xml logs, note the tests, test cases and the test case status. If status is failed, then display for which test case and test suite its failed along with other relevant messages. </p>
<p>Issue i'm facing: I'm iterating over the test, collecting all the sub tests status and status. In the below code, if tc#2 is failed, output is giving for tc1 as I'm iterating for tc1 by collecting all the status which is in list. So the output is getting repeated.</p>
<p>My desired output(Only for status="FAIL")</p>
<p>Test Name: Login check</p>
<p>Test case: Invalid username &amp; Password</p>
<p>Status: Fail</p>
<p>Messages: Return error</p>
<p>Below is my code:</p>
<pre><code># !/usr/bin/python

from xml.dom.minidom import parse
import xml.dom.minidom
import time

DOMTree = xml.dom.minidom.parse("output.xml")
collection = DOMTree.documentElement
tc_entry = collection.getElementsByTagName("suite")


for tc in tc_entry:
    if tc.hasAttribute("name"):
       print ("Suite name: {}".format(tc.getAttribute("name")))
    tests = tc.getElementsByTagName('test')
    for test in tests:
        testcases = test.getElementsByTagName('tc')
        for tc_name in testcases:
            status = tc_name.getElementsByTagName('status')
            for state in status:
                if state.getAttribute("status") != "PASS":
                    print("Failed")
                    print("Test name: {}".format(test.getAttribute("name")))
                    print("Test case name: {}".format(tc_name.getAttribute("name")))
                    print("Status: {}".format(state.getAttribute("status")))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't know if I understood right... however, try with a recursive function like this:</p>
<pre><code># !/usr/bin/python

from xml.dom.minidom import parse
import xml.dom.minidom
import time


def getStatusForNode(tc):
    status_to_be_returned = []
    is_just_father = False

    for child in tc.childNodes:
        if child.nodeName == "tc":
            is_just_father = True
            status_to_be_returned.append(getStatusForNode(child)[0])

    if not is_just_father:
        status = tc.getElementsByTagName('status')
        return [(tc, status)]

    return status_to_be_returned


DOMTree = xml.dom.minidom.parse("output.xml")
collection = DOMTree.documentElement
tc_entry = collection.getElementsByTagName("suite")


for tc in tc_entry:
    if tc.hasAttribute("name"):
       print("Suite name: {}".format(tc.getAttribute("name")))
    tests = tc.getElementsByTagName('test')
    for test in tests:

        for child in test.childNodes:
            if child.nodeName == "tc":
                children_status = getStatusForNode(child)
                for (tc_name, status) in children_status:
                    for state in status:
                        if state.getAttribute("status") != "PASS":
                            print("---")
                            print("Test name: {}".format(test.getAttribute("name")))
                            print("Test case name: {}".format(tc_name.getAttribute("name")))
                            print("Status: {}".format(state.getAttribute("status")))
</code></pre>
<p>Hope this helps</p>
<p>Bye<br/>
Dave</p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend using <a href="https://www.w3.org/TR/xpath/" rel="nofollow noreferrer">XPath</a> expressions:</p>
<p>Note: In my example, I am only working with a single <code>suite</code> element, so I refer to it as <code>root</code> - In your implementation you will want to iterate through all <code>suite</code> elements, thus <code>root</code> will differ, e.g. the line <code>tests = root.findall('.//tc')</code> would become <code>tests = s.findall('.//tc')</code>. I have commented out the lines I think you would use.</p>
<pre><code>import xml.etree.ElementTree as et

tree = et.parse('some_file.xml')
root = tree.getroot()

# suites = root.findall('.//suite')

# for s in suites:

tests = root.findall('.//tc')  # Grab all 'tc' elements within a 'suite' element
test_name = root.find('test').attrib['name']

for tc in tests:
    status = tc.find('status').attrib['status'].lower()

    if 'fail' in status:
        tc_name = tc.attrib['name']
        msg = tc.find('message').text

        print("Test Name: {}\nTest Case: {}\nStatus: {}\nMessage: {}\n".format(
            test_name, tc_name, status.capitalize(), msg
        ))
</code></pre>
<p>Output:</p>
<pre><code>Test Name: Login check
Test Case: Invalid Username or Password
Status: Fail
Message: Return error

Test Name: Login check
Test Case: Invalid password
Status: Fail
Message: Return error
</code></pre>
<p>Additionally, there is also XPath information within Python's <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">xml.etree.ElementTree</a> documentation.</p>
</div>
<span class="comment-copy">Can you post in two code blocks your desired output and your current output?</span>
<span class="comment-copy">@Dave, it works perfectly. thank u</span>
<span class="comment-copy">Glad to have helped :) if it doesn't bother you accept the answer ;)</span>
