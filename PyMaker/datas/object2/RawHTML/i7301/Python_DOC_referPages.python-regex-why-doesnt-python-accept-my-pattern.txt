<div class="post-text" itemprop="text">
<p>I want to write Python regex that takes a string of pattern: </p>
<blockquote>
<p>"u'Johns's Place',"</p>
</blockquote>
<p>and returns:</p>
<blockquote>
<p>Johns's Place</p>
</blockquote>
<p>It should locate the character 'u', the apostrophe comes after it and then the apostrophe that comes before the comma and returns what there is between these two apostrophes. </p>
<p>Therefore, I wrote the following code:</p>
<pre><code>title = "u'Johns's Place',"
print re.sub(r"u'([^\"']*)',", r"\"\1\"", title)
</code></pre>
<p>however, I still got the entire string </p>
<blockquote>
<p>"u'Johns's Place',"</p>
</blockquote>
<p>with no filtering. </p>
<p>Do you know how it can be resolved?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python doesn't accept your pattern because of the middle <code>'</code> in <code>"John's"</code>. It isn't followed by a comma, as described in your pattern. The matching cannot continue to look for a <code>',</code> because you only allow characters that aren't <code>"</code> or <code>'</code> with <code>[^\"']*</code>.</p>
<p>If you want to parse JSON with Python, use <a href="https://docs.python.org/3/library/json.html" rel="noreferrer"><code>json</code></a> package, not regexen applied to escaped unicode strings.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't use Python much but this regex should solve your problem</p>
<pre><code>^u'(.*)',$
</code></pre>
<p>from the beginning match the u and single quote, capture anything after that until the single quote and comma at the end</p>
<pre><code>print re.sub(r"^u'(.*)',$", r"\"\1\"", title)
</code></pre>
<p>remove ^ and $ if there's more to your string than the replaced (in other words, if there is any context)</p>
</div>
<div class="post-text" itemprop="text">
<p>After making a bigger research I found this package <a href="https://simplejson.readthedocs.io/en/latest/" rel="nofollow noreferrer">https://simplejson.readthedocs.io/en/latest/</a></p>
<p>It can make you read a JSON file without putting u'..' for every string. </p>
<pre><code>import simplejson as json
import requests

response_json = requests.get(&lt;url-address&gt;)
current_json = json.loads(response_json.content)
</code></pre>
<p>current_json will not have the character 'u' at the beginnig of every string. </p>
<p>It answers my question partially because it returns keys and values that are delimited by a single quote mark(') and not by quotation marks(") as it's needed in JSON format.</p>
</div>
<span class="comment-copy">I'm suspicious about the <code>u</code> in your string. How are you getting this string?</span>
<span class="comment-copy">Yes, that is exactly why I'm suspicious about that. I think you should explain <i>how</i> you are getting that string, because this is smelling like an XY problem.</span>
<span class="comment-copy">Your pattern doesn't match, your character class matches <code>John</code>, then the <code>'</code> and then there is no comma.</span>
<span class="comment-copy">What I am getting at, is that Python is setting that <code>u</code> to indicate it is a <i>unicode</i> string. There are idiomatic ways to handle this in Python. This is why I think you need to provide more information in what you are doing and how you are getting this <i>exactly</i>, in order to provide the right answer here instead of incorrectly parsing the string this way.</span>
<span class="comment-copy">The application that is creating that JSON file in the first place is doing something wrong; maybe it is double-encoding somehow. You shouldn't be getting that <code>u</code> prefix in JSON output. Is that application under your control? If so can you post the code?</span>
<span class="comment-copy">OK. But there is a comma after Place'. So I expect python to ignore the comma in John's and catch the comma after "Place'"</span>
<span class="comment-copy">@CrazySynthax: The matching cannot continue, you forbid it with <code>[^\"']*</code>.</span>
