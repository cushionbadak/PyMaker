<div class="post-text" itemprop="text">
<p>Can you explain it what problems are here? To my mind, this code is like a heap of crap but with the right solving. I beg your pardon for my english. 
the task of this kata: </p>
<p>Some numbers have funny properties. For example:</p>
<pre><code>89 --&gt; 8¹ + 9² = 89 * 1

695 --&gt; 6² + 9³ + 5⁴= 1390 = 695 * 2

46288 --&gt; 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51
</code></pre>
<p>Given a positive integer n written as abcd... (a, b, c, d... being digits) and a positive integer p we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n. In other words:</p>
<pre><code>Is there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + ...) = n * k
</code></pre>
<p>If it is the case we will return k, if not return -1.</p>
<p>Note: n, p will always be given as strictly positive integers.</p>
<p><code>dig_pow(89, 1)</code> should return 1 since 8¹ + 9² = 89 = 89 * 1</p>
<p><code>dig_pow(92, 1)</code> should return -1 since there is no k such as 9¹ + 2² equals 92 * k</p>
<p><code>dig_pow(695, 2)</code> should return 2 since 6² + 9³ + 5⁴= 1390 = 695 * 2</p>
<p><code>dig_pow(46288, 3)</code> should return 51 since 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51</p>
<pre><code>def dig_pow(n, p):
    if n &gt; 0 and p &gt; 0:
        b = []
        a = str(n)
        result = []
        for i in a:
            b.append(int(i))
            for x in b:
                if p != 1:
                    result.append(x ** p)
                    p += 1
                else:
                    result.append(x ** (p + 1))

        if int((sum(result)) / n) &lt; 1:
            return -1
        elif int((sum(result)) / n) &lt; 2:
            return 1
        else:
            return int((sum(result)) / n)
</code></pre>
<p>test results:</p>
<p>Test Passed</p>
<p>Test Passed</p>
<p>Test Passed</p>
<p>Test Passed</p>
<p>3263 should equal -1</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know what exact version of Python you're using. This following code are in Python 3. And if I get you correctly, the code can be as simple as</p>
<pre><code>def dig_pow(n, p):
    assert n &gt; 0 and p &gt; 0
    digits = (int(i) for i in str(n)) # replaces your a,b part with generator
    result = 0 # you don't use result as a list, so an int suffice
    for x in digits: # why do you need if in the loop? (am I missing something?)
        result += x ** p
        p += 1

    if result % n: # you just test for divisibility
        return -1
    else:
        return result // n
</code></pre>
<p>The major problem is that, in your objective, you have only two option of returning, but you wrote <code>if elif else</code>, which is definitely unnecessary and leads to problems and bugs. The <code>%</code> is modulus operator.</p>
<p>Also, having an <code>if</code> and not returning anything in the other branch is often not a good idea (see the <code>assert</code> part). Of course, if you don't like it, just fall back to <code>if</code>.</p>
</div>
<span class="comment-copy">Thank you so much! I understood all drawbacks of my code and fix it. But except the last moment... if result % n: return -1 What is the function of the modulus operator in this example? It cannot find the remainder? Is 'result' cannot be divided by 'n' and hence it outputs the 'return -1'?</span>
<span class="comment-copy">Why it pass from 'if statement' to 'return -1' statement in some cases?</span>
<span class="comment-copy">@OlegRadchenko, the % is the modulus operator, which computes the remainder of lhs // rhs. You can check the documentation <a href="https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">@OlegRadchenko Sorry I don't really get it. Did you just find a bug in the code? If the remainder is zero (implicit bool false), it will return the result, else it will return -1.</span>
<span class="comment-copy">Oops exactly. My mistake. I misunderstood the terms of the task. I thought that i need to divide the result by n and then receive an integer. Approximately like this: (int(sum(result)) // n). Thank you for your help.</span>
