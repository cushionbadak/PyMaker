<div class="post-text" itemprop="text">
<p>The following code is runnable, you can just copy/paste:</p>
<pre><code>from tkinter import *
import multiprocessing

startingWin = Tk()
def createClientsWin():
    def startProcess():
        clientsWin = Tk()
        label = Label(clientsWin, text="Nothing to show")
        label.grid()
        clientsWin.mainloop()
    if __name__ == "__main__":
        p = multiprocessing.Process(target=startProcess)
        p.start()
button = Button(startingWin, text="create clients", command=lambda: createClientsWin())
button.grid()
startingWin.mainloop()
</code></pre>
<p>So I simply want to create a completely separated <code>Tk()</code> window using multiprocessing. When I click on the create button, I just get the original window (not the intended one) and it gives me this error:</p>
<p><code>AttributeError: Can't pickle local object 'createClientsWin.&lt;locals&gt;.startProcess'</code></p>
<p><strong>*Could someone explain how to start a separate new Tk() window using multiprocessing? *</strong></p>
<p><strong>Update: Not A Duplicate</strong></p>
<p>Even if I follow the solution provided in the possible duplicate question, that doesn't help solving my question. Simply because, Tkinter is being used in my case. The modified code:</p>
<pre><code>def createClientsWin():
    clientsWin = Tk()
    label = Label(clientsWin, text="Nothing to show")
    label.grid()
    clientsWin.mainloop()

def createClientsWinProcess():
    if __name__ == "__main__":
        p = multiprocessing.Process(target=createClientsWin)
        p.start()

startingWin = Tk()
button = Button(startingWin, text="create clients", command=lambda: createClientsWinProcess())
button.grid()
startingWin.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Function in global scope should be used for multiprocess target function, so the <code>startProcess()</code> should be moved into global scope.</p>
<p>Also the checking of <code>if __name__ == "__main__"</code> inside <code>startProcess()</code> will cause the code inside the if block not being executed.</p>
<p>Finally the creation of <code>startingWin</code> should be put inside <code>if __name__ == "__main__"</code> block, otherwise every process started will create the <code>startingWin</code>.</p>
<p>Below is the proposed changes to solve the above issues:</p>
<pre><code>from tkinter import *
import multiprocessing

def startProcess():
    clientsWin = Tk()
    label = Label(clientsWin, text="Nothing to show")
    label.grid()
    clientsWin.mainloop()

def createClientsWin():
    p = multiprocessing.Process(target=startProcess)
    p.start()

if __name__ == '__main__':
    startingWin = Tk()
    button = Button(startingWin, text="create clients", command=createClientsWin)
    button.grid()
    startingWin.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is easier to use classes when using multiprocessing with tkinter. Try the following code:</p>
<pre><code>import tkinter as Tk
import multiprocessing as mp

class A:
    def __init__(self, master):
        self.master = master

        label = Tk.Label(self.master, text = 'A')
        label.pack()

        root_b = Tk.Toplevel()
        GUI_B = B(root_b)
        mp.Process(target = GUI_B.mainloop())

    def mainloop(self):
        self.master.mainloop()

class B:
    def __init__(self, master):
        self.master = master

        label = Tk.Label(self.master, text = 'B')
        label.pack()

    def mainloop(self):
        self.master.mainloop()

if __name__=='__main__':
    root = Tk.Tk()
    GUI_A = A(root) 
    mp.Process(target = GUI_A.mainloop())
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/52091113/attributeerror-cant-pickle-local-object-computation-function1-using-multipr">AttributeError: Can't pickle local object 'computation.. function1 using multiprocessing queue</a></span>
<span class="comment-copy">@CommonSense not a duplicate. Kindly check the edit above.</span>
<span class="comment-copy">What's your end goal here? Depending on OS, it may not be possible to run Tk in a forked process (which is what multiprocessing does).</span>
<span class="comment-copy">@AKX the OS is Win7. Is it possible with Win7?</span>
<span class="comment-copy">You should move the <code>startProcess()</code> outside <code>createClientsWin()</code>, remove checking <code>if __name__ == "__main__"</code> inside <code>createClientsWin()</code>.  And finally add checking <code>if __name__ == "__main__"</code> before creating <code>startingWin</code>.</span>
<span class="comment-copy">thanks for the answer</span>
