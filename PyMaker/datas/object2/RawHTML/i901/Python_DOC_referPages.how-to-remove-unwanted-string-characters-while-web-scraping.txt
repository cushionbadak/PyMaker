<div class="post-text" itemprop="text">
<p>I want to eliminate all the whitespace from a string, on both ends, and in between words.</p>
<p>I have this Python code:</p>
<pre><code>def my_handle(self):
    sentence = ' hello  apple  '
    sentence.strip()
</code></pre>
<p>But that only eliminates the whitespace on both sides of the string. How do I remove all whitespace?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to remove leading and ending spaces, use <a href="http://docs.python.org/2/library/stdtypes.html#str.strip" rel="noreferrer"><code>str.strip()</code></a>: </p>
<pre><code>sentence = ' hello  apple'
sentence.strip()
&gt;&gt;&gt; 'hello  apple'
</code></pre>
<p>If you want to remove all spaces, use <a href="http://docs.python.org/2/library/stdtypes.html#str.replace" rel="noreferrer"><code>str.replace()</code></a>:</p>
<pre><code>sentence = ' hello  apple'
sentence.replace(" ", "")
&gt;&gt;&gt; 'helloapple'
</code></pre>
<p>If you want to remove duplicated spaces, use <a href="http://docs.python.org/2/library/stdtypes.html#str.split" rel="noreferrer"><code>str.split()</code></a>:</p>
<pre><code>sentence = ' hello  apple'
" ".join(sentence.split())
&gt;&gt;&gt; 'hello apple'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To remove <em>only spaces</em> use <a href="http://docs.python.org/2/library/stdtypes.html#str.replace"><code>str.replace</code></a>:</p>
<pre><code>sentence = sentence.replace(' ', '')
</code></pre>
<p>To remove <em>all whitespace characters</em> (space, tab, newline, and so on) you can use <a href="http://docs.python.org/2/library/stdtypes.html#str.split"><code>split</code></a> then <a href="http://docs.python.org/2/library/stdtypes.html#str.join"><code>join</code></a>:</p>
<pre><code>sentence = ''.join(sentence.split())
</code></pre>
<p>or a regular expression:</p>
<pre><code>import re
pattern = re.compile(r'\s+')
sentence = re.sub(pattern, '', sentence)
</code></pre>
<p>If you want to only remove whitespace from the beginning and end you can use <a href="http://docs.python.org/2/library/stdtypes.html#str.strip"><code>strip</code></a>:</p>
<pre><code>sentence = sentence.strip()
</code></pre>
<p>You can also use <a href="http://docs.python.org/2/library/stdtypes.html#str.lstrip"><code>lstrip</code></a> to remove whitespace only from the beginning of the string, and <a href="http://docs.python.org/2/library/stdtypes.html#str.rstrip"><code>rstrip</code></a> to remove whitespace from the end of the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative is to use regular expressions and match <a href="http://en.wikipedia.org/wiki/Whitespace_character#Unicode" rel="noreferrer">these strange white-space characters</a> too. Here are some examples:</p>
<p><strong>Remove ALL spaces in a string, even between words:</strong></p>
<pre><code>import re
sentence = re.sub(r"\s+", "", sentence, flags=re.UNICODE)
</code></pre>
<p><strong>Remove spaces in the BEGINNING of a string:</strong></p>
<pre><code>import re
sentence = re.sub(r"^\s+", "", sentence, flags=re.UNICODE)
</code></pre>
<p><strong>Remove spaces in the END of a string:</strong></p>
<pre><code>import re
sentence = re.sub(r"\s+$", "", sentence, flags=re.UNICODE)
</code></pre>
<p><strong>Remove spaces both in the BEGINNING and in the END of a string:</strong></p>
<pre><code>import re
sentence = re.sub("^\s+|\s+$", "", sentence, flags=re.UNICODE)
</code></pre>
<p><strong>Remove ONLY DUPLICATE spaces:</strong> </p>
<pre><code>import re
sentence = " ".join(re.split("\s+", sentence, flags=re.UNICODE))
</code></pre>
<p>(All examples work in both Python 2 and Python 3)</p>
</div>
<div class="post-text" itemprop="text">
<p>Whitespace includes <strong>space, tabs, and CRLF</strong>. So an elegant and <strong>one-liner</strong> string function we can use is <strong>translate</strong>:</p>
<pre><code>' hello  apple'.translate(None, ' \n\t\r')
</code></pre>
<p><strong>OR</strong> if you want to be thorough:</p>
<pre><code>import string
' hello  apple'.translate(None, string.whitespace)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For removing whitespace from beginning and end, use <code>strip</code>.</p>
<pre><code>&gt;&gt; "  foo bar   ".strip()
"foo bar"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>' hello  \n\tapple'.translate( { ord(c):None for c in ' \n\t\r' } )
</code></pre>
<p>MaK already pointed out the "translate" method above. And this variation works with Python 3 (see <a href="https://stackoverflow.com/questions/21038891/what-does-table-in-the-string-translate-function-mean" title="this Q&amp;A">this Q&amp;A</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>Be careful:</p>
<p><code>strip</code> does a rstrip and lstrip (removes leading and trailing spaces, tabs, returns and form feeds, but it does not remove them in the middle of the string).</p>
<p>If you only replace spaces and tabs you can end up with hidden CRLFs that appear to match what you are looking for, but are not the same.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re    
sentence = ' hello  apple'
re.sub(' ','',sentence) #helloworld (remove all spaces)
re.sub('  ',' ',sentence) #hello world (remove double spaces)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition, <a href="https://docs.python.org/2/library/string.html" rel="nofollow noreferrer">strip</a> has some variations:</p>
<p><strong>Remove spaces in the BEGINNING and END of a string:</strong></p>
<pre><code>sentence= sentence.strip()
</code></pre>
<p><strong>Remove spaces in the BEGINNING of a string:</strong></p>
<pre><code>sentence = sentence.lstrip()
</code></pre>
<p><strong>Remove spaces in the END of a string:</strong></p>
<pre><code>sentence= sentence.rstrip()
</code></pre>
<p>All three string functions <code>strip</code> <code>lstrip</code>, and <code>rstrip</code> can take parameters of the string to strip, with the default being all white space. This can be helpful when you are working with something particular, for example, you could remove only spaces but not newlines:</p>
<pre><code>" 1. Step 1\n".strip(" ")
</code></pre>
<p>Or you could remove extra commas when reading in a string list:</p>
<pre><code>"1,2,3,".strip(",")
</code></pre>
</div>
<span class="comment-copy">What should your result look like? <code>hello apple</code>? <code>helloapple</code>?</span>
<span class="comment-copy">@JoachimPileborg, not exactly I think, because it's also about reducung whitespace between the words.</span>
<span class="comment-copy">helloapple needs to be my output</span>
<span class="comment-copy">Correct me if wrong, but "whitespace" is not synonymous with "space characters". The current answer marked as correct does not remove all <a href="https://en.wikipedia.org/wiki/Whitespace_character" rel="nofollow noreferrer">whitespace</a>. But, since it's marked as correct it must have answered the intended question? So we should edit the question to reflect the accepted answer? @Kalanamith Did, or do, you want to remove all whitespace or only spaces?</span>
<span class="comment-copy">The greatness of this function is that it also removes the '\r\n' from the html file I received from Beautiful Soup.</span>
<span class="comment-copy">@Twinkle which func??? pls tell ... I am having difficulty with BeautifulSoap</span>
<span class="comment-copy">.strip() I guess</span>
<span class="comment-copy">I like "".join(sentence.split()), this removes all whitespace (spaces, tabs, newlines) from anywhere in sentence.</span>
<span class="comment-copy">@YannisDran check the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">str.join() documentation</a>, when you call <code>sentence.join(str_list)</code> you ask python to join items from str_list with <code>sentence</code>as separator.</span>
<span class="comment-copy">the <code>''.join(sentence.split())</code> is a nice workaround</span>
<span class="comment-copy">Note: You don't need to compile step, re.sub (and friends) cache the compiled pattern. See also, <a href="http://stackoverflow.com/a/28607213/1240268">Emil's answer</a>.</span>
<span class="comment-copy">That works a treat on Python 2.7</span>
<span class="comment-copy">Did not work for "\u202a1234\u202c". Gives the same output:  u'\u202a1234\u202c'</span>
<span class="comment-copy">@Sarang: Those are not whitespace characters (google them and you'll see) but "General Punctuation". My answer only deals with removing characters classified as whitespace.</span>
<span class="comment-copy">Works perfectly fine on Python 3.5 as well!</span>
<span class="comment-copy">This won't help with Unicode whitespace like <code>\xc2\xa0</code></span>
<span class="comment-copy"><code>ans.translate( None, string.whitespace )</code> produces only <code>builtins.TypeError: translate() takes exactly one argument (2 given)</code> for me. Docs says that argument is a translate table, see string.maketrans(). But see comment by Amnon Harel, below.</span>
<span class="comment-copy"><code>' hello  apple'.translate(str.maketrans('', '', string.whitespace))</code> Note: its better to make a variable to store the trans-table if you intend to do this multiple times.</span>
<span class="comment-copy">Thanks! Or, <code>xxx.translate( { ord(c) :None for c in string.whitespace } )</code> for thoroughness.</span>
<span class="comment-copy">the question was too remove all white space which includes tabs and new line characters, this snippet will only remove regular spaces.</span>
