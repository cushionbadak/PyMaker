<div class="post-text" itemprop="text">
<p>I have to convert <code>.las</code> files in one directory to <code>.xlsx</code> files using <code>las2excelbulk</code> function. </p>
<p>Currently I can do that in command prompt but I want to do it using Python: is it possible? </p>
<p>Here's the link which i referred <a href="https://lasio.readthedocs.io/en/latest/exporting.html" rel="nofollow noreferrer">https://lasio.readthedocs.io/en/latest/exporting.html</a></p>
<ul>
<li><p>Open CMD   </p></li>
<li><p>switch to the folder having las files using " cd   </p></li>
<li><p>las2excelbulk -r -i </p></li>
</ul>
<p>The file would be converted.</p>
<pre><code># this is working for only one file

import lasio

las = lasio.read('*.las')

las.to_excel('testsamplelas.xlsx')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The argument to <code>lasio.read()</code> can only be a single filename, but you can use the <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer"><code>os</code></a> and <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow noreferrer"><code>fnmatch</code></a> modules in the Python standard library to step through all .las files recursively.</p>
<pre><code>import fnmatch
import os
import lasio

for root, dirnames, filenames in os.walk("your_directory"):
    for filename in fnmatch.filter(filenames, '*.las'):
        las = lasio.read(filename, ignore_header_errors=True)
        las.to_excel(filename + ".xlsx")
</code></pre>
<p><code>lasio.read(..., ignore_header_errors=True)</code> is the equivalent of <code>las2excelbulk -i</code>.</p>
<p>It may also be useful to inspect <a href="https://github.com/kinverarity1/lasio/blob/5187f4fd1f05baaea1117764729b3d9a1d77aa7a/lasio/excel.py#L119-L138" rel="nofollow noreferrer">the code behind</a> the <code>las2excelbulk</code> command line tool for more information.</p>
</div>
<span class="comment-copy">Command-line arguments are passed to scripts as a list of strings in <code>sys.argv</code>, so your script can look there for arguments. You can determine the current-working-directory by calling <code>os.getcwd()</code>.</span>
