<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8725673/multiple-assignment-and-evaluation-order-in-python">Multiple assignment and evaluation order in Python</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I'm new to python so I want to ask you a question..</p>
<p>Previously while I was writing a fibonacci function I tryed to replace </p>
<pre><code>a, b = b, a+b
</code></pre>
<p>with  </p>
<pre><code>a = b
b = a + b
</code></pre>
<p>Believing that it was the same thing but I noted that the output is different (and wrong)
Shouldn't these two codes do the same thing?
Here it is the full code:</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

def main(args):
    fibonacci(1000)
    return 0

def fibonacci(n):
    a, b = 0, 1
    while b &lt; n:
         print b,
         a, b = b, a+b # if I comment this and decomment the two line below it shows me a different output 
        # a = b
        # b = a + b

if __name__ == '__main__':
    import sys
    sys.exit(main(sys.argv))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>when you do:</p>
<pre><code>a, b = b, a+b
</code></pre>
<p><code>a</code> will hold the previous value of b and <code>b</code> will hold <code>a+b</code> based on previous value.</p>
<p>But when you do:</p>
<pre><code>a = b
b = a + b
</code></pre>
<p>Value of <code>a</code> is updated to <code>b</code> during <code>a=b</code> and hence <code>a+b</code> will have different result as <code>a</code> is now updated.</p>
<p>For example, see simple code to swap two values. It is possible because of the on the fly change in values:</p>
<pre><code>&gt;&gt;&gt; a , b = 5, 10
&gt;&gt;&gt; a, b = b, a
&gt;&gt;&gt; a, b
(10, 5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>b, a+b</code> is the same as <code>(b, a+b)</code> (a tuple). When you do <code>a, b = b, a+b</code> you implicilty assign the first element to the variable on the left and the second value to the variable on the right.</p>
<p>In your replacement, you changed <code>a</code>'s value <em>before</em> calculating <code>b</code>, which didn't happen before.</p>
<p>So, if we assume <code>a = 1</code> and <code>b = 2</code>, we have:</p>
<pre><code>a, b = (2, 1+2)
&gt;&gt; print(a)
&gt;&gt; 2
&gt;&gt; print(b)
&gt;&gt; 3
</code></pre>
<p>In your latter example, we'd have:</p>
<pre><code>a = 2
b = 2 + 2
&gt;&gt; print(a)
&gt;&gt; 2
&gt;&gt; print(b)
&gt;&gt; 4
</code></pre>
</div>
<span class="comment-copy">on the first one, the calculation for the new value of <code>b</code> is carried out with the old value of <code>a</code>. On the second one with the new one.</span>
<span class="comment-copy">This is explained in the Python tutorial itself, <a href="https://docs.python.org/3/tutorial/introduction.html#first-steps-towards-programming" rel="nofollow noreferrer">First Steps Towards Programming</a></span>
<span class="comment-copy">Relevant: <a href="http://stackoverflow.com/questions/40405818/why-doesn-t-executing-a-x-x-a-twice-result-in-a-change-of-values" title="why doesn t executing a x x a twice result in a change of values">stackoverflow.com/questions/40405818/â€¦</a></span>
