<div class="post-text" itemprop="text">
<p>Given the code below, can anyone explain to me what's different between <code>y[0]</code> and <code>digits[0]</code>?</p>
<pre><code>import random
digits = list(range(10)) 
random.shuffle(digits) 
y = str(digits[:3]) 
print (y[0])
print (digits[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>digits</code> is a list. The <code>0th</code> index of a <code>list</code> will return the first item. E.g.</p>
<pre><code>digits = [0, 1, 2, 3, 4, 5]
print(digits[0])
# 0
</code></pre>
<p><code>y</code> is a <em>string representation</em> of a part of the <code>digits</code> list (that's what <code>[:3]</code> does, it returns a slice of the list, up to but not including the 4th item). Indexing the <code>0th</code> element of a string will return the first character of the string, or <code>'['</code>.</p>
<pre><code>y = str(digits[:3])
print(y)
# '[0, 1, 2]'
print(y[0])
# '['
</code></pre>
<p>The reason that the indexing works on both the <code>list</code> type and the <code>str</code> type is that they are both sequences. See <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow noreferrer">here</a> and <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">You are not converting an int to the string but part of the list. So <code>y</code> is something like <code>[7, 2, 6]</code></span>
<span class="comment-copy">thanks you for your have</span>
