<div class="post-text" itemprop="text">
<p>I have a text file (12 column and 10K rows). I want to load data from text file and feed to a 2D array. The text file contains data as below-<br/>
<code>(3,9,16,40,41,44)
(15,25,26,41,45,46)
(1,6,21,27,39,48) 
(7,20,26,29,39,42) 
(17,23,25,29,30,43)</code> </p>
<p>I know how to import data from text file. I was trying to code    </p>
<pre><code>file = open('Data.txt','r')
input=[]
for line in file.readlines():
    input.append(line)
print (input)
</code></pre>
<p>but get the output like this<br/>
<code>['(3,9,16,40,41,44) \n', '(15,25,26,41,45,46)\n', '(1,6,21,27,39,48)\n', '(7,20,26,29,39,42)\n', '(17,23,25,29,30,43)\n']</code></p>
<p>How can I eliminate <code>'</code> and <code>\n</code> from the output and can get the output like below<br/>
<code>[(3,9,16,40,41,44), (15,25,26,41,45,46), (1,6,21,27,39,48), (7,20,26,29,39,42), (17,23,25,29,30,43)]</code></p>
<p>I tried to use<br/>
<code>import numpy as np
input = np.loadtxt("Data.txt", dtype='str')
print(input)</code></p>
<p>but the output is quite similar as data is read as a string.
any suggestion is highly appreciated.-Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>with open('Data.txt','r') as file:
    result = [tuple(map(int, line.strip(' \n()').split(','))) for line in file]

print(result)
</code></pre>
<hr/>
<pre><code>[(3, 9, 16, 40, 41, 44),
 (15, 25, 26, 41, 45, 46),
 (1, 6, 21, 27, 39, 48),
 (7, 20, 26, 29, 39, 42),
 (17, 23, 25, 29, 30, 43)]
</code></pre>
<p>I believe that is your desired output.</p>
<p>The first step is to strip whitespace and parentheses (<code>line.strip(' \n()')</code>). Then, split it into a list on commas (<code>.split(',')</code>), then turn the list of strings into a tuple of ints (<code>tuple(map(int, )</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's simple way to do it that uses <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval()</code></a>:</p>
<pre><code>from ast import literal_eval

with open('Data.txt','r') as file:
    data = [literal_eval(line) for line in file]

print(data)
</code></pre>
<p>Printed output:</p>
<p><code>[(3, 9, 16, 40, 41, 44), (15, 25, 26, 41, 45, 46), (1, 6, 21, 27, 39, 48), (7, 20, 26, 29, 39, 42), (17, 23, 25, 29, 30, 43)]</code></p>
</div>
<span class="comment-copy">The import code you have is giving you lines, these are textual information (strings) so not for use as numbers. Also, they contain a linebreak (newline, <code>'\n'</code>). Your question boils down to the task of parsing these strings into tuples or lists of numbers.</span>
<span class="comment-copy">Dtype is the output dtype.  Use none, to detect.</span>
<span class="comment-copy"><code>loadtxt</code> (and similar functions) are intended for text files with just the numbers and delimiter (like comma), but no () or [].  Without those it's simple matter of splitting the lines on the delimiter and converting each string to a number.</span>
