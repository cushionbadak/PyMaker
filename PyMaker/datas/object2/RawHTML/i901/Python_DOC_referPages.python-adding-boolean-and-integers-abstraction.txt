<div class="post-text" itemprop="text">
<p>Basically, I'm unsure why:</p>
<pre><code>red, green = 44, 43
purple = red + green
print(red + green != purple + purple / purple - red % green)
// Returns False
// Essentially =&gt; red + green != purple + 0.0

print(red + True + 0.0) // Returns 45.0
</code></pre>
<p>I'm unsure of what is causing the difference? As green != purple gives a result of True also, so why does the abstraction cause a difference in value? </p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a> rules wrong. Essentially, the expression gets evaluated as follows:</p>
<pre><code>red + green != purple + purple / purple - red % green
 = 44 + 43 != 87 + 87 / 87 - 44 % 43   # substitution
 = 87 != 87 + 1 - 1                    # perform / and % first
 = 87 != 87                            # sum
 = False                               # not equal
</code></pre>
<p>As for the second one, <code>red + True + 0.0</code>, <code>True</code> gets promoted to <code>1</code>, and the sum returns <code>45</code>, then adding <code>0.0</code> promotes the int to a float.</p>
</div>
<div class="post-text" itemprop="text">
<p>The code seems to work as intended,
the first print is false since the left expression (red + green) matches the right expression (purple[red + green] + 0).</p>
<p>Since you checked whether they are different (by using != between the two expressions), you got False.</p>
<p>I think you confused the way python checks conditions.
When you use a comparison operand, python will first evaluate both sides of the operand, then compare both of the sides.</p>
<p>You wrote "As green != purple gives a result of True also", but the actual comparison is "(red + green) != purple".</p>
</div>
<span class="comment-copy">Have you considered evaluating the expression based on operator precedence? Also, what outputs are you expecting in both the cases?</span>
<span class="comment-copy">Actually I initially expected a syntax error, but I'm wrong. However this situation puzzles me even greater</span>
<span class="comment-copy">trying to save a couple of parentheses is generally a bad idea.</span>
<span class="comment-copy">ah I see, I was thinking it would be more of 44 + True + 1 - 1 actually thats why</span>
<span class="comment-copy">yes I realised, thank you :)</span>
