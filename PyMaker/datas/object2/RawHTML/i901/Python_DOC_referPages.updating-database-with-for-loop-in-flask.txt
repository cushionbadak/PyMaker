<div class="post-text" itemprop="text">
<p>I'm trying to automatize updates on database since I have a lot of columns.
I have succeeded to display the database using for loop, but I have problem commiting changes to database:</p>
<pre><code>@app.route('/listvehicle/&lt;int:vehicle_id&gt;/update', methods=['GET', 'POST'])
@login_required
def update_vehicle(vehicle_id):
    vehicle = Vehicle.query.get_or_404(vehicle_id)
    form = VehicleUpdateForm() 
    if form.validate_on_submit():
        for attr,value in vehicle.__dict__.items():
            for ia in form:
                if ia == attr:
                    vehicle.__dict__[attr] = form.__dict__[ia]
        db.session.commit()
        flash(f'The user has been updated', 'success')
        return redirect(url_for('listvehicle'))
    elif request.method == 'GET':
        for attr,value in vehicle.__dict__.items():
            for ia,iv in form.__dict__.items():
                if ia == attr:
                    iv.data = value
    return render_template('updatevehicle.html', form=form)
</code></pre>
<p>Any help with commiting changes to database?</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest you posting the Model and Form definitions, but without seeing it, I suggest you use a different approach, changing anything with double underscores (<code>__dict__</code> for example) is highly discouraged.</p>
<p>I see an improvement that can be made simply by using <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer"><code>setattr</code></a> and iterating over the form data:</p>
<pre><code>def update_vehicle(vehicle_id):
    vehicle = Vehicle.query.get_or_404(vehicle_id)
    form = VehicleUpdateForm() 
    if form.validate_on_submit():
        for fieldname, value in form.data.items():
            setattr(vehicle, fieldname, value)
        db.session.commit()
        flash(f'The user has been updated', 'success')
        return redirect(url_for('listvehicle'))
    elif request.method == 'GET':
        for attr,value in vehicle.__dict__.items():
            for ia,iv in form.__dict__.items():
                if ia == attr:
                    iv.data = value
    return render_template('updatevehicle.html', form=form)
</code></pre>
</div>
<span class="comment-copy">Are you using <code>sqlalchemy</code>? why are you not using a <code>ModelForm</code>?</span>
<span class="comment-copy">Thank you a lot it works perfectly !! I don't know how the setattr() works ? Because when I look on python and try to see the attribut of my vehicle query I have an unboundField and I had no idea how to work with that</span>
<span class="comment-copy">@Senseikaii setattr is the same as <code>instance.attribute = "something"</code>, where you have the <code>.attribute</code> part as a variable with the name of the attribute.</span>
