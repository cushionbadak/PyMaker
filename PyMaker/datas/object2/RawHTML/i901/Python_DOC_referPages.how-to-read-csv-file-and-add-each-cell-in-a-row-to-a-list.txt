<div class="post-text" itemprop="text">
<p>I have an CSV file which looks like this:</p>
<pre><code>104 109 113 111 108 114
95  100 109 103 103 110
</code></pre>
<p>Two rows, and every number has its own cell.</p>
<p>How do i read the CSV file per row and add each cell of that row to a list?</p>
<p>The output should look like this:</p>
<pre><code>List_1 = [104, 109, 113, 111, 108, 114]
List_2 = [95, 100, 109, 103, 103, 110]
</code></pre>
<p>Also i need the numbers in the list as integer not as a string. </p>
</div>
<div class="post-text" itemprop="text">
<p>I would just store each row in a dictionary:</p>
<pre><code>d = {}
with open('rows.csv') as f:
    for row, line in enumerate(f, start=1):
        d['Line_%d' % row] = list(map(int, line.split()))

print(d)
# {'Line_1': [104, 109, 113, 111, 108, 114], 'Line_2': [95, 100, 109, 103, 103, 110]}
</code></pre>
<p>Then you can access each row like this:</p>
<pre><code>&gt;&gt;&gt; d['Line_1']
[104, 109, 113, 111, 108, 114]
&gt;&gt;&gt; d['Line_2']
[95, 100, 109, 103, 103, 110]
</code></pre>
<p><strong>UPDATE:</strong></p>
<p>As requested in the comments, if you file has a semicolon <code>;</code> as a delimiter, you can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> library:</p>
<pre><code>from csv import reader

d = {}
with open('rows.csv') as f:
    csv_reader = reader(f, delimiter=';')
    for i, line in enumerate(csv_reader, start=1):
        d['Line_%d' % i] = list(map(int, line))

print(d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>map</code> to transform list of string to list of ints and append in the output list</p>
<pre><code>final=[]
with open('test.csv') as f:
    for row in f:
        final.append(list(map(int,row)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pandas</code> <code>read_csv</code> function for reading CSV file. Afterwards you will have a <code>DataFrame</code> object. Using <code>df.values.tolist()</code> you will get the list of all rows as lists.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>my.csv:    
1 2 3 4 5
6 7 8 9 0
</code></pre>
<p>Python:  </p>
<pre><code>with open("my.csv") as f:
    lists = [ list(map(int, i.split())) for i in f.readlines() ]

print(lists[0])
print(lists[1])
</code></pre>
<p>Output:  </p>
<pre><code>[1, 2, 3, 4, 5]  
[6, 7, 8, 9, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you would want to make later mathematical operations on your data, you might consider using <code>numpy</code> module for that, you can use <code>numpy.loadtxt</code> function (remember that <code>csv</code> files are in fact plain text files).
Usage example:
<code>test.csv</code> is file I created, it contain 2 rows each with 3 values</p>
<pre><code>1 2 3
4 5 6
</code></pre>
<p>Then you can create numpy array following way:</p>
<pre><code>import numpy as np
data = np.load('test.csv',int,delimiter=' ')
</code></pre>
<p><code>test.csv</code> is name of file, <code>int</code> is information that you wants integers and <code>delimiter=' '</code> means that values in file are space-separated. You can access values in numpy array by giving index of row and index of element</p>
<pre><code>print(data[0][0]) #prints 1
print(data[1][2]) #prints 6
</code></pre>
<p>If you want to get <code>list</code> of values simply pass <code>data[index_of_row]</code> into <code>list()</code></p>
<pre><code>list1 = list(data[0])
list2 = list(data[1])
print(list1) #prints [1, 2, 3]
print(list2) #prints [4, 5, 6]
</code></pre>
</div>
<span class="comment-copy">So you only have two rows?</span>
<span class="comment-copy">At the Moment, yes! But there will be more in the future.</span>
<span class="comment-copy">So you want to put all rows in lists? I think is better if you expand a little on what you are trying to achieve. Perhaps you could use pandas.</span>
<span class="comment-copy">At the Moment i have two rows with temperatures. High and Low. I Need those in two lists (at the moment). I never worked with Pandas.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/41585078/how-do-i-read-and-write-csv-files-with-python">How do I read and write CSV files with Python?</a></span>
<span class="comment-copy">Looks promising, but gives me this error message: ValueError: invalid literal for int() with base 10: '104;109;113;111;108;114'</span>
<span class="comment-copy">@K-Doe Why does that string have semicolons in it? Your file in the question doesn't have that</span>
<span class="comment-copy">Got it Excel was the Problem. Testing now.</span>
