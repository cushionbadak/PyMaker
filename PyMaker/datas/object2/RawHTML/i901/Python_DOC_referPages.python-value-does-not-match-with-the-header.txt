<div class="post-text" itemprop="text">
<p>I'm converting the CSV file into JSON in the following format.</p>
<p>CSV file:</p>
<pre><code>name, email,        date,     phone
john, example.com,  26/11/18,   123
john, hello.com,    12/08/18,  123456
</code></pre>
<p>Wrong result: </p>
<pre><code>[
  {
    "name": "john",
    "email": "example.com",
    "items": [
      {
        "phone": "example.com",
        "info": {
            "date": "example.com",
        }
      },
    ]
  },
]
</code></pre>
<p>Code:</p>
<pre><code>primary_fields = ['name', 'email']
primary_fields2 = ['date', 'phone']
result = []
with open('student.csv', 'r') as csv_ledger:
    r = csv.DictReader(csv_studemy)

    for row in r:
        d = {k: v for k, v in row.items() if k in primary_fields}
        d['items'] = [{'phone':v,'info': {'date':v}} for k, v in row.items() if k in primary_fields2]
        result.append(d)
</code></pre>
<p>Expected Format: </p>
<pre><code>[
  {
    "name": "john",
    "email": "example.com",
    "items": [
      {
        "phone": "123",
        "info": {
             "date": "26/11/18",
        }
      },
    ]
  },
]
</code></pre>
<p>The <code>k</code> is header and the <code>v</code> suppose be value. As the result, you can see the value will duplicate for all the row and it doesn't match to the header. The second loop, the value will duplicate the <code>date</code> for all the header and so on. </p>
</div>
<div class="post-text" itemprop="text">
<p>Maximilian Peters pointed out why your code isn't working in a comment. In general, I would avoid all that and build each dictionary manually</p>
<pre><code>import csv

result = []
with open("student.csv", "r") as csv_ledger:
    for row in csv.DictReader(csv_ledger, skipinitialspace=True):
        result.append({
            "name": row["name"],
            "email": row["email"],
            "items": [{
                "phone": row["phone"],
                "info": {"date": row["date"]},
            }],
        })
</code></pre>
<p>The <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace" rel="nofollow noreferrer"><code>skipinitialspace=True</code></a> is necessary because the csv you posted has white space after each comma.</p>
</div>
<span class="comment-copy">that approach is overcomplicated, the result could be consructed in straigtforward way</span>
<span class="comment-copy">You are just taking random values from the dictionary, without validating that the key. You don't need a loop, you don't need to filter, just draw directly from your row with <code>row['phone']</code> and <code>row['date']</code>.</span>
<span class="comment-copy"><code>{'phone':v,'info': {'date':v}}</code>: You are using <code>v</code> twice for two different keys. Perhaps that's causing your issue?</span>
<span class="comment-copy">alright, if I do something like this <code>d['items'] = [{k: v for k, v in row.items() if k in primary_fields2}]</code>.The result matched perfectly but I need insert the <code>info</code> object to include the <code>date</code></span>
<span class="comment-copy">Thanks for the answer, the reason I used that method is that the result has to do grouping data.Btw, is it possible to transform the top-level array [] to object {}?</span>
<span class="comment-copy">@BebekimLim I don't understand what you mean by "grouping data". Maybe it would be easier to do it in two steps? One step to transform the csv into a list of dictionaries (the code I posted), then iterate over the list of dictionaries you just made and group them or whatever. Or you could ask another question that gives more details about the problem you're actually trying to solve.</span>
<span class="comment-copy">And yes of course it's possible, just change it to <code>result = {}</code> and change <code>result.append({</code> to <code>result[whatever_your_key_should_be] = {</code>  and change the last <code>})</code> to <code>}</code>.</span>
