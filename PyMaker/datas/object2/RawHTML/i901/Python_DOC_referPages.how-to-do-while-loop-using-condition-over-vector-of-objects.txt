<div class="post-text" itemprop="text">
<p>In python, if I have a vector of objects <code>V</code> with local variable (boolean) <code>t</code>, where <code>t</code> is initially set to <code>False</code>. I'd like to do a while loop until all objects have <code>t</code> set to <code>True</code>... how could I do that?</p>
<p>i.e. --- here's a pseudocode of what am thinking of..</p>
<pre><code>[o.t. = False for o in V] # initially all are false
while [o.t != True for o in V]:

... do stuff that will make o.t True eventually...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the key to your desired state is <code>all</code> built-in function. As you had not described the class from which the objects were created I used a tiny class to simulate your situation:</p>
<pre><code>import random
class customClass:
    def __init__(self, condition=False):
        self.condition = condition


v = [customClass() for _ in range(5)]

print([obj.condition for obj in v])
# Prints: [False, False, False, False, False]

while not all([obj.condition for obj in v]):

    #do stuff that sometimes changes the state of condition 
    # Here I randomly select an object and set its condition to true
    o = random.choice(v)
    o.condition = True

print([obj.condition for obj in v])
# Prints: [True, True, True, True, True]
</code></pre>
<p>Note that the number of iterations is not 5 and the while loop continues until all of the elemets of the list fed to it are true. You can check it's documentation <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">The first line is not in Python. You cannot have assignments in a list comprehension. Other than that, read about the function <code>any()</code>.</span>
<span class="comment-copy">I was writing it in pseudocode style</span>
<span class="comment-copy">Why would one ask a Python question in a pseudocide style?</span>
