<div class="post-text" itemprop="text">
<p>I want to store non-integer numbers in my database, and be able to compare them in order to spot duplicates. Obviously, the comparison should be done to within a preset number of decimals (say, 2). So my question in a nutshell: What is the most efficient way to do this?</p>
<p>My first attempt was to store them as Numeric, in SQLAlchemy that would be:</p>
<pre><code>class MyTable(Base):
    __tablename__ = 'mytable'
    x = Column(Numeric(2, 2))
</code></pre>
<p>and then do the comparison as </p>
<pre><code>session = Session()  # this was configured elsewhere
query = session.query(MyTable)
query = query.filter(MyTable.x == y)  # y is a float
return session.query(query.exists()).scalar()
</code></pre>
<p>Now, this failed, the condition seems to turn out false if I input y as a float.</p>
<p>Can I fix the above approach?
If not, what is the cleanest way to do what I want? (What is the tradeoff between fast and clean here?) Do I have to resort to converting my data to strings or integers? Or work with inequalities..?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think I solved it. It seems that the numbers will be compared as strings, so I should convert my reference value to a string before comparing:</p>
<pre><code>session = Session()  # this was configured elsewhere
query = session.query(MyTable)
query = query.filter(MyTable.x == f'{y:.2f}')  # y is a float
return session.query(query.exists()).scalar()
</code></pre>
</div>
<span class="comment-copy">That works, but not for the reason you've thought. The string constant you pass as parameter is implicitly/automatically coerced to suitable numeric type. Read <a href="https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS" rel="nofollow noreferrer">postgresql.org/docs/current/…</a>. Another option would be to use <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer"><code>Decimal</code></a> in Python to represent decimal fixed/floating point numbers; the DB-API drivers know how to convert those to suitable SQL.</span>
<span class="comment-copy">Thanks @IljaEverilä, though I don't really understand why floats are <i>not</i> automatically coerced to a 2-digit Numeric. True, I could also use Decimal; in the current case it seems to result in longer code without much benefit.</span>
