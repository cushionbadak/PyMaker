<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2161752/how-to-count-the-frequency-of-the-elements-in-a-list">How to count the frequency of the elements in a list?</a>
<span class="question-originals-answer-count">
                    26 answers
                </span>
</li>
</ul>
</div>
<p>I need to find the 7 most common numbers from my lists. What`s the most efficient way to do that?</p>
<p>These are the lists:</p>
<pre><code>prvo=[20, 9, 1, 19 ,26, 4, 16]
v-ro=[1, 14, 22, 32, 17, 11, 20]
t-to=[32, 3, 31, 29, 15, 12, 20]
c-to=[32, 34, 4, 10, 29, 20, 22]
p-to=[16, 33, 26, 22, 9, 24, 32]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/collections.html#counter-objects" rel="nofollow noreferrer">collections.Counter</a></p>
<p>It has a builtin method <a href="https://docs.python.org/2/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer"><code>most_common(n)</code></a> giving the n most common values</p>
<p>From the docs: </p>
<blockquote>
<p>Return a list of the n most common elements and their counts from the most common to the least. If n is omitted or None, most_common() returns all elements in the counter. Elements with equal counts are ordered arbitrarily:</p>
</blockquote>
<p>So it makes</p>
<pre class="lang-py prettyprint-override"><code>    from collections import Counter
    prvo=[20, 9, 1, 19 ,26, 4, 16]
    v_ro=[1, 14, 22, 32, 17, 11, 20]
    t_to=[32, 3, 31, 29, 15, 12, 20]
    c_to=[32, 34, 4, 10, 29, 20, 22]
    p_to=[16, 33, 26, 22, 9, 24, 32]

    all_lists = [prvo, v_ro, t_to, c_to, p_to]
    counted = []
    for li in all_lists:
        counted.extend(li)

    counter = Counter(counted)
    commons = counter.most_common(7)
    print([t[0] for t in commons])

</code></pre>
<p>You get: <code>[20, 32, 22, 9, 1, 26, 4]</code></p>
</div>
<span class="comment-copy">1. That's not valid Python syntax, e.g. <code>v-ro</code> isn't a valid identifier. 2. What have you tried, and what exactly is the problem with it?</span>
<span class="comment-copy">Welcome to SO. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page. What type of efficiency are you after? line count? memory footprint? Did you have an algorithm in mind but no code? - include the text description of your algorithm; writing that out will go a long way towards letting you develop a solution. You should invest time working through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer to help you solve your problem..</span>
<span class="comment-copy">I need the most 7 commons from all lists in one sequence, not 7 from all lists.</span>
<span class="comment-copy">check the latest edit @NenadRistov</span>
<span class="comment-copy">You can also write <code>all_lists = prvo + v_ro + t_to + c_to + p_to</code> and then find the frequency</span>
<span class="comment-copy">sorry I edited again, list comprehension didn't accept unpacking. This is working</span>
<span class="comment-copy">@FrenchMasterSword  thanks :D</span>
