<div class="post-text" itemprop="text">
<p>For a game I am planning, I want to create a piece of code that will write one specific value from a list of all the items in my game into the player's inventory (e.g.: player gets item "potion", which would require searching the items CSV for potion and then putting the relevant info into the CSV). Whenever I run my code however I get the error "TypeError: '_io.TextIOWrapper' object is not subscriptable".</p>
<p>I've tried researching and asking peers but the closest I've gotten to a clear solution is someone mentioning writing to a list from the CSV, but they didn't explain much more. Hoping someone could elaborate on this for me or provide an easier solution.</p>
<pre><code>import csv

allitems = open("ALLITEMS.csv")
checkallitems = csv.reader(allitems)

playerinv = open("INVENTORY.csv")
checkinv = csv.reader(playerinv)

item = input("")

for x in checkallitems:
    print(allitems[x][0])
    if item == allitems[x][0]:
        playerinv.write(allitems[x][0]+"\n")
allitems.close()
playerinv.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is <code>allitems</code> is a <a href="https://docs.python.org/3/glossary.html#term-file-object" rel="nofollow noreferrer">file object</a> returned by <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">open</a> and the statement <code>for x in checkallitems</code> iterates over the lines of such file so, you are trying to use a <code>list</code> as index in that file. Also, you have to open <code>INVENTORY.csv</code> in <strong>write mode</strong> (using 'w' or 'a') to be able to write to it.</p>
<p>Just use <code>x</code> instead of <code>allitems[x]</code>. The snippet below should do the job:</p>
<pre><code>for x in checkallitems:
    if item == x[0]:
        playerinv.write(x[0]+"\n")
</code></pre>
<p>So, the complete code could be:</p>
<h3>Code</h3>
<pre><code>import csv

allitems = open("ALLITEMS.csv")
checkallitems = csv.reader(allitems)

playerinv = open("INVENTORY.csv", 'a')
checkinv = csv.reader(playerinv)

item = input("")

for x in checkallitems:
    if item == x[0]: # Check if the item is equal to the first item on the list
        playerinv.write(x[0]+"\n")

allitems.close()
playerinv.close()
</code></pre>
<p>I dont know what do you want to accomplish, so I tried to stick as much as possible to your code.</p>
<p>If you want to only write the item provided by the user if it is found the current list of items, this would do the job:</p>
<h3>Code</h3>
<pre><code>import csv

allitems = open("ALLITEMS.csv")
checkallitems = csv.reader(allitems)

playerinv = open("INVENTORY.csv", 'a')
checkinv = csv.reader(playerinv)

item = input("")

for x in checkallitems:
    if item in x: # Check if the item is in the current list
        playerinv.write(item +"\n")

allitems.close()
playerinv.close()
</code></pre>
<p>I hope this can help you. Let me know if any of this worked for you, otherwise, tell me what went wrong.</p>
</div>
<span class="comment-copy">Actually, there's a few things that don't make sense here. None of the files are open for writing. <code>allitems[x][0]</code> doesn't make sense because it's a file object that you're trying to use as a dictionary, and then index as though a list, but also you should be using the CSV module to write data back out</span>
<span class="comment-copy">Not sure if that is cause of your problem, but your <code>open</code>s are missing second argument i.e. mode which should be <code>w</code> for writing and <code>r</code> for reading. You can read more about it here: <a href="https://www.w3schools.com/python/python_file_write.asp" rel="nofollow noreferrer">w3schools.com/python/python_file_write.asp</a></span>
<span class="comment-copy">@Daweo if the OP opens in write mode with <code>w</code> they will wipe their own files. To open for reading - that's the default argument so no need to actually specify <code>r</code>. They need a different setup here. Also, I've seen several articles about Python in W3Schools that are plainly <i>wrong</i> so I would recommend not referring to them for examples.</span>
