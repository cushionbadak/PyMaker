<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36486950/python-calling-list-on-a-map-object-twice">Python: calling 'list' on a map object twice</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Just learned that the object returned from <code>map()</code> doesn't hold up once it has been used in a <code>in</code> expression or it was converted into a list.</p>
<p>What is causing <code>b</code> to get emptied at the end?</p>
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = map(lambda x: x, a)
&gt;&gt;&gt; b
&lt;map object at 0x104d8ccc0&gt;
&gt;&gt;&gt; list(b)
[1, 2, 3]
&gt;&gt;&gt; list(b)
[]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>map</code> outputs an iterator that applies a function (<code>lambda x: x</code>) over some iterators (<code>a</code>). As a result, <code>b</code> is an iterator. When calling <code>list(b)</code> for the first time, the iterator <code>b</code> is called several times until it reaches to its end. Afterward, <code>b</code> is an iterator which does not have any item left to produce. That's why when you call <code>list(b)</code> for the second time, it outputs an empty list.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">documentation</a> for <code>map</code> specifies that it returns an "iterator", not an "iterable".  Python defines an iterator to <a href="https://docs.python.org/3/library/stdtypes.html#iterator.__next__" rel="nofollow noreferrer">loop exactly once with no repetition</a>; once the end is reached then it will never return another item.</p>
<p>The second execution of <code>list(b)</code> attempts to build a list from an iterator that is already at the end, so it returns no items and an empty list is constructed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Whenever you are calling <code>list(b)</code> you are using the iterator in it and then clearing the variable <code>b</code> if you want to store <code>b</code> as a <code>list</code> use
    a = [1, 2, 3]
    b = list(map(lambda x: x, a))
    print(b)</p>
<blockquote>
<blockquote>
<blockquote>
<p>[1, 2, 3]
          print(*b)
      1 2 3
      Hope this helped.</p>
</blockquote>
</blockquote>
</blockquote>
<p>EDIT: Fixed My Mistake.</p>
</div>
<span class="comment-copy">My bad. Thanks for the englightenment. Btw, isn't it more natural <code>map</code> returning the same collection(type)? Is there any merit in addition to some gain in performance of iteration immediately following it?</span>
<span class="comment-copy">OK. it is <code>iterator</code> not iterable as I expected. Though not sure about its design idea, it is just as it is. Thanks.</span>
<span class="comment-copy">Calling <code>list(b)</code> doesn't assign to anything.</span>
